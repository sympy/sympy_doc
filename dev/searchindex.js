Search.setIndex({"alltitles": {"(Optional) Configure Git Settings": [[9, "optional-configure-git-settings"]], "1. Completing Dynamics Online": [[22, "completing-dynamics-online"]], "1. Single-Sentence Summary": [[4, "single-sentence-summary"]], "1. Symbolic linearization with A_and_B=True is slow": [[27, "symbolic-linearization-with-a-and-b-true-is-slow"]], "1. Using the Linearizer class directly:": [[27, "using-the-linearizer-class-directly"], [27, "id2"]], "2. Explanation Section": [[4, "explanation-section"]], "2. Fixing Issues": [[22, "fixing-issues"]], "2. The linearized form has nan, zoo, or oo as matrix elements": [[27, "the-linearized-form-has-nan-zoo-or-oo-as-matrix-elements"]], "2. Using the linearize class method:": [[27, "using-the-linearize-class-method"], [27, "id3"]], "3. Examples Section": [[4, "examples-section"]], "3. Switching to an AST": [[22, "switching-to-an-ast"]], "4. Parameters Section": [[4, "parameters-section"]], "5. See Also Section": [[4, "see-also-section"]], "6. References Section": [[4, "references-section"]], "A Direct Method Using SymPy Matrices": [[39, "a-direct-method-using-sympy-matrices"]], "A More Interesting Example": [[290, "a-more-interesting-example"]], "A Note about Equations": [[297, "a-note-about-equations"]], "A Note on Dependent Coordinates and Speeds": [[27, null]], "A Simple Musculotendon Model": [[18, "a-simple-musculotendon-model"]], "A bicycle": [[301, "a-bicycle"]], "A four bar linkage": [[303, "a-four-bar-linkage"]], "A rolling disc": [[307, "a-rolling-disc"]], "A rolling disc using Lagrange\u2019s Method": [[310, "a-rolling-disc-using-lagrange-s-method"]], "A rolling disc, with Kane\u2019s method": [[308, "a-rolling-disc-with-kane-s-method"]], "A rolling disc, with Kane\u2019s method and constraint forces": [[309, "a-rolling-disc-with-kane-s-method-and-constraint-forces"]], "AGCA - Algebraic Geometry and Commutative Algebra Module": [[207, "agca-algebraic-geometry-and-commutative-algebra-module"]], "ANTLR Backend": [[130, "antlr-backend"]], "ANTLR \\mathrm{\\LaTeX} Parser Caveats": [[130, "antlr-mathrm-latex-parser-caveats"]], "API Reference": [[58, "api-reference"], [252, "module-sympy.utilities.autowrap"], [253, "module-sympy.utilities.codegen"], [275, "api-reference"]], "API reference": [[115, "api-reference"], [115, "id39"]], "ASCII Pretty Printer": [[295, "ascii-pretty-printer"]], "AST Type Tree": [[69, "ast-type-tree"]], "About Holonomic Functions": [[106, "about-holonomic-functions"]], "Abstract": [[133, null], [138, null], [142, null], [144, null], [150, null], [160, null], [177, null], [202, null]], "Abstract Domains": [[211, "abstract-domains"]], "Acceleration of Points": [[21, "acceleration-of-points"], [32, "acceleration-of-points"]], "Accessing Rows and Columns": [[292, "accessing-rows-and-columns"]], "Accuracy and error handling": [[92, "accuracy-and-error-handling"]], "Activation (Docstrings)": [[131, "module-sympy.physics.biomechanics.activation"]], "Activation Dynamics": [[18, "activation-dynamics"]], "Actuator (Docstrings)": [[147, "module-sympy.physics.mechanics.actuator"]], "Actuators": [[18, "actuators"]], "Add Tests": [[11, "add-tests"]], "Add your name and email address to the .mailmap file.": [[11, "add-your-name-and-email-address-to-the-mailmap-file"]], "Adding the deprecation to the code": [[3, "adding-the-deprecation-to-the-code"]], "Addition and Multiplication": [[110, "addition-and-multiplication"]], "Additional Tips": [[43, "additional-tips"]], "Advanced Expression Manipulation": [[291, "advanced-expression-manipulation"]], "Advanced Functionality": [[21, "advanced-functionality"]], "Advanced Interfaces": [[21, "advanced-interfaces"], [32, "advanced-interfaces"]], "Advanced Methods": [[292, "advanced-methods"]], "Advanced Usage": [[14, "advanced-usage"]], "Advanced factoring over finite fields": [[219, "advanced-factoring-over-finite-fields"]], "Aesara": [[129, "aesara"]], "Aesara Code printing": [[220, "module-sympy.printing.aesaracode"]], "Airy Functions": [[96, "airy-functions"]], "Algebraic Solution With Root Multiplicities": [[48, "algebraic-solution-with-root-multiplicities"]], "Algebraic Solution Without Root Multiplicities": [[48, "algebraic-solution-without-root-multiplicities"]], "Algebraic equations": [[238, "algebraic-equations"]], "Algebraic number fields": [[210, "algebraic-number-fields"], [215, "algebraic-number-fields"]], "Algebraically dependent generators": [[210, "algebraically-dependent-generators"]], "Algebras": [[61, "algebras"]], "Algorithms (sympy.codegen.algorithms)": [[69, "module-sympy.codegen.algorithms"]], "Alternative Representation": [[36, "alternative-representation"]], "Alternatives to Consider": [[48, "alternatives-to-consider"], [50, "alternatives-to-consider"], [51, "alternatives-to-consider"], [53, "alternatives-to-consider"], [54, "alternatives-to-consider"], [55, "alternatives-to-consider"], [56, "alternatives-to-consider"]], "Alternatives to consider": [[52, "alternatives-to-consider"]], "An example": [[195, "an-example"], [230, "an-example"]], "An in-depth example: Pappus\u2019 Hexagon Theorem": [[100, "an-in-depth-example-pappus-hexagon-theorem"]], "Anaconda": [[59, "anaconda"]], "Analytic Solutions": [[177, "analytic-solutions"]], "Angular Acceleration": [[35, "angular-acceleration"]], "Angular Momentum": [[28, "angular-momentum"]], "Angular Velocity": [[35, "angular-velocity"]], "Anticommutator": [[167, "module-sympy.physics.quantum.anticommutator"]], "Appell sequences": [[216, "appell-sequences"]], "Applications of Vector Integrals": [[274, "applications-of-vector-integrals"]], "Applying assumptions to string inputs": [[41, "applying-assumptions-to-string-inputs"]], "Applying the Integral Theorems": [[113, "applying-the-integral-theorems"]], "Applying the Operators": [[230, "applying-the-operators"]], "Approximate Numeric Solution With Root Multiplicities": [[48, "approximate-numeric-solution-with-root-multiplicities"]], "Args Invariants": [[14, "args-invariants"]], "Arithmetic with module elements": [[215, "arithmetic-with-module-elements"]], "As elements of finitely-generated modules": [[215, "as-elements-of-finitely-generated-modules"]], "As number field elements": [[215, "as-number-field-elements"]], "Ask": [[62, "module-sympy.assumptions.ask"]], "Assume": [[63, "module-sympy.assumptions.assume"]], "Assumptions": [[41, "assumptions"], [43, "assumptions"], [64, "module-sympy.assumptions"]], "Assumptions predicates for the (old) assumptions": [[41, "id28"]], "Attributes of Collector": [[78, "attributes-of-collector"]], "Attributes of CosetTable": [[70, "attributes-of-cosettable"]], "Attributes of PolycyclicGroup": [[78, "attributes-of-polycyclicgroup"]], "Authors": [[205, "authors"]], "Auto-Rebuild with the Live Server": [[8, "auto-rebuild-with-the-live-server"]], "Autolev Parser": [[22, "autolev-parser"]], "Autowrap": [[2, "autowrap"], [69, "autowrap"]], "Autowrap Module": [[252, "autowrap-module"]], "Available Entities": [[100, "available-entities"]], "Avoid Manipulating Expressions as Strings": [[14, "avoid-manipulating-expressions-as-strings"]], "Avoid Storing Extra Attributes on an Object": [[14, "avoid-storing-extra-attributes-on-an-object"]], "Avoid String Inputs": [[14, "avoid-string-inputs"]], "Avoid Too Much Automatic Evaluation": [[14, "avoid-too-much-automatic-evaluation"]], "Avoid simplify()": [[14, "avoid-simplify"]], "Avoiding Infinite Recursion from Assumptions Handlers": [[14, "avoiding-infinite-recursion-from-assumptions-handlers"]], "B-Splines": [[96, "b-splines"]], "Backends": [[206, "backends"]], "Background": [[27, "background"]], "Base Class Reference": [[68, "module-sympy.categories"], [90, "base-class-reference"]], "Base Rings": [[207, "base-rings"]], "Basic Implementation details": [[268, "basic-implementation-details"]], "Basic Manipulation": [[124, "basic-manipulation"]], "Basic Methods": [[292, "basic-methods"]], "Basic Operations": [[285, "basic-operations"], [292, "basic-operations"]], "Basic Sets": [[228, "module-sympy.sets.sets"]], "Basic Usage": [[14, "basic-usage"]], "Basic concepts": [[208, "basic-concepts"]], "Basic functionality": [[208, "basic-functionality"]], "Basic functionality of the module": [[208, "basic-functionality-of-the-module"]], "Basic polynomial manipulation functions": [[216, "basic-polynomial-manipulation-functions"]], "Basic usage of domains": [[210, "basic-usage-of-domains"]], "Basics": [[92, "basics"], [275, "basics"], [276, "basics"]], "Basics for Writing Tests": [[12, "basics-for-writing-tests"]], "Be Careful Comparing and Sorting Symbolic Objects": [[14, "be-careful-comparing-and-sorting-symbolic-objects"]], "Beam": [[136, "beam"], [138, "beam"]], "Beam (Docstrings)": [[135, "module-sympy.physics.continuum_mechanics.beam"]], "Bessel Type Functions": [[96, "module-sympy.functions.special.bessel"]], "Best Practices": [[14, "best-practices"]], "Best Practices for Writing Docstrings": [[4, "best-practices-for-writing-docstrings"]], "Best Practices for Writing Documentation": [[5, "best-practices-for-writing-documentation"]], "Best Practices for eval()": [[43, "best-practices-for-eval"]], "Beware Copying and Pasting Results": [[55, "beware-copying-and-pasting-results"]], "Bibliography": [[70, "bibliography"], [78, "bibliography"]], "Biceps": [[298, "biceps"]], "Biomechanical Model Example": [[298, "biomechanical-model-example"]], "Biomechanics": [[19, "biomechanics"]], "Biomechanics API Reference": [[133, "biomechanics-api-reference"]], "Biomechanics Tutorials": [[299, "biomechanics-tutorials"]], "Block Matrices": [[120, "block-matrices"]], "Bode Plot": [[141, "bode-plot"]], "Bodies": [[154, "bodies"]], "Bodies, Inertias, Loads & Other Functions (Docstrings)": [[154, "bodies-inertias-loads-other-functions-docstrings"]], "Boolean functions": [[118, "boolean-functions"]], "Boolean or Relational": [[37, "boolean-or-relational"]], "Branch names": [[11, "branch-names"]], "Build the Docs": [[8, "build-the-docs"]], "Building the Documentation": [[2, "building-the-documentation"], [8, "building-the-documentation"]], "C code printers": [[220, "module-sympy.printing.c"]], "C specific AST nodes (sympy.codegen.cnodes)": [[69, "module-sympy.codegen.cnodes"]], "C utilities (sympy.codegen.cutils)": [[69, "module-sympy.codegen.cutils"]], "C++ code printers": [[220, "module-sympy.printing.cxx"]], "C++ specific AST nodes (sympy.codegen.cxxnodes)": [[69, "module-sympy.codegen.cxxnodes"]], "CC": [[211, "cc"]], "Cable": [[137, "module-sympy.physics.continuum_mechanics.cable"], [138, "cable"]], "Cable (Docstrings)": [[137, "cable-docstrings"]], "Calculation of Flux": [[274, "calculation-of-flux"]], "Calculation of Perimeter, Surface Area, and Volume": [[274, "calculation-of-perimeter-surface-area-and-volume"]], "Calculation of mass of a body": [[274, "calculation-of-mass-of-a-body"]], "Calculus": [[65, "calculus"], [67, "module-sympy.calculus"], [286, "calculus"]], "Calling sympy.stats.StochasticProcess.distribution with RandomIndexedSymbol": [[13, "calling-sympy-stats-stochasticprocess-distribution-with-randomindexedsymbol"]], "Capitalization": [[5, "capitalization"]], "Cartesian Operators and States": [[168, "module-sympy.physics.quantum.cartesian"]], "Category Theory": [[68, "category-theory"]], "Caveats": [[60, "caveats"]], "Change in joint attachment point argument": [[13, "change-in-joint-attachment-point-argument"]], "Chebyshev Polynomials": [[96, "chebyshev-polynomials"]], "Checking the type of vector field": [[200, "checking-the-type-of-vector-field"]], "Checklist": [[3, "checklist"]], "Checklist for Contributions": [[11, "checklist-for-contributions"]], "Choice of Coordinates and Speeds": [[21, "choice-of-coordinates-and-speeds"]], "Choosing a domain": [[210, "choosing-a-domain"]], "Choosing a domain for a Poly": [[210, "choosing-a-domain-for-a-poly"]], "Choosing generators": [[210, "choosing-generators"]], "Circuit Plot": [[170, "module-sympy.physics.quantum.circuitplot"]], "Citing SymPy": [[0, "citing-sympy"]], "Class Reference": [[215, "class-reference"]], "Classes": [[241, "classes"]], "Classes and functions for rewriting expressions (sympy.codegen.rewriting)": [[69, "module-sympy.codegen.rewriting"]], "Classes for abstract syntax trees (sympy.codegen.ast)": [[69, "module-sympy.codegen.ast"]], "Classical Mechanics": [[23, "classical-mechanics"]], "Classical remainder sequence": [[213, "classical-remainder-sequence"]], "Classification of SymPy objects": [[38, "classification-of-sympy-objects"]], "Clebsch-Gordan Coefficients": [[169, "module-sympy.physics.quantum.cg"]], "Co-Author": [[11, "co-author"]], "Code": [[5, "code"]], "Code Generation": [[2, "code-generation"], [69, "code-generation"], [275, "code-generation"], [277, "code-generation"]], "Code Output": [[21, "code-output"]], "Code Printers": [[2, "code-printers"]], "Code Quality": [[11, "code-quality"]], "Code Quality Checks": [[12, "code-quality-checks"]], "Code printers (sympy.printing)": [[69, "code-printers-sympy-printing"]], "CodePrinter": [[220, "module-sympy.printing.codeprinter"]], "Codegen": [[253, "codegen"]], "Codegen (sympy.utilities.codegen)": [[69, "codegen-sympy-utilities-codegen"]], "Columnspace": [[292, "columnspace"]], "Combinatorial": [[93, "combinatorial"]], "Combinatorics": [[75, "combinatorics"]], "Combining predicates with or": [[41, "combining-predicates-with-or"]], "Commit the changes": [[11, "commit-the-changes"]], "Common": [[65, "common"]], "Common Issues": [[21, "common-issues"], [32, "common-issues"]], "Common Subexpression Detection and Collection": [[221, "common-subexpression-detection-and-collection"]], "Common mistakes": [[220, "common-mistakes"]], "Commutator": [[171, "module-sympy.physics.quantum.commutator"]], "Compatibility with matrices": [[242, "compatibility-with-matrices"]], "Complete Examples": [[43, "complete-examples"]], "Complex Functions": [[94, "complex-functions"]], "Complex Roots": [[48, "complex-roots"]], "Composition with polynomials": [[110, "composition-with-polynomials"]], "Compound Distribution": [[240, "compound-distribution"]], "Compound Sequences": [[226, "compound-sequences"]], "Compound Sets": [[228, "compound-sets"]], "Compression and Standardization": [[70, "compression-and-standardization"]], "Computation of Collected Word": [[78, "computation-of-collected-word"]], "Computation of Exponent Vector": [[78, "computation-of-exponent-vector"]], "Computation of Leading Exponent": [[78, "computation-of-leading-exponent"]], "Computation of Minimal Uncollected Subword": [[78, "computation-of-minimal-uncollected-subword"]], "Computation of Polycyclic Presentation": [[78, "computation-of-polycyclic-presentation"]], "Computation of Subword Index": [[78, "computation-of-subword-index"]], "Computing Integrals using Meijer G-Functions": [[113, "computing-integrals-using-meijer-g-functions"]], "Computing reduced Gr\u00f6bner bases": [[219, "computing-reduced-grobner-bases"]], "Computing with automatic field extensions": [[219, "computing-with-automatic-field-extensions"]], "Conclusion": [[298, "conclusion"]], "Concrete": [[87, "concrete"]], "Concrete Class Reference": [[87, "concrete-class-reference"]], "Concrete Functions Reference": [[87, "concrete-functions-reference"]], "Condition Sets": [[228, "module-sympy.sets.conditionset"]], "Conditions of Convergence for Integral (1)": [[113, "conditions-of-convergence-for-integral-1"]], "Conditions of Convergence for Integral (2)": [[113, "conditions-of-convergence-for-integral-2"]], "Configuration": [[213, "module-sympy.polys.polyconfig"]], "Configure Your Name and Email in Git": [[9, "configure-your-name-and-email-in-git"]], "Conservative and Solenoidal fields": [[33, "conservative-and-solenoidal-fields"], [271, "conservative-and-solenoidal-fields"]], "Consistency Checks": [[12, "consistency-checks"]], "Constants": [[172, "module-sympy.physics.quantum.constants"], [195, "constants"]], "Constructing a presentation for a subgroup": [[70, "constructing-a-presentation-for-a-subgroup"]], "Constructing array expressions from index-explicit forms": [[242, "constructing-array-expressions-from-index-explicit-forms"]], "Construction of a Free Group": [[70, "construction-of-a-free-group"]], "Construction of words": [[70, "construction-of-words"]], "Contents": [[64, "contents"], [75, "contents"], [95, "contents"], [108, "contents"], [114, "contents"], [212, "contents"], [224, "contents"], [234, "contents"], [243, "contents"]], "Continuous Types": [[240, "continuous-types"]], "Continuum Mechanics": [[138, "continuum-mechanics"]], "Contribute": [[217, "contribute"]], "Contributing": [[6, "contributing"], [58, "contributing"]], "Control": [[140, "control"], [142, "module-sympy.physics.control"]], "Control API": [[143, "control-api"]], "Control Package Examples": [[46, "control-package-examples"]], "Control System Plots": [[141, "control-system-plots"]], "Conversion between quantities": [[197, "module-sympy.physics.units.util"]], "Convert to a linear combination of Meijer G-functions": [[110, "convert-to-a-linear-combination-of-meijer-g-functions"]], "Convert to a linear combination of hypergeometric functions": [[110, "convert-to-a-linear-combination-of-hypergeometric-functions"]], "Convert to expressions": [[110, "convert-to-expressions"]], "Convert to holonomic sequence": [[110, "convert-to-holonomic-sequence"]], "Converting Meijer G-functions": [[107, "converting-meijer-g-functions"]], "Converting Strings to SymPy Expressions": [[285, "converting-strings-to-sympy-expressions"]], "Converting elements between different domains": [[210, "converting-elements-between-different-domains"]], "Converting hypergeometric functions": [[107, "converting-hypergeometric-functions"]], "Converting other representations to holonomic": [[107, "converting-other-representations-to-holonomic"]], "Converting symbolic expressions": [[107, "converting-symbolic-expressions"]], "Convolution": [[91, "convolution"]], "Convolution using Fast Fourier Transform": [[91, "convolution-using-fast-fourier-transform"]], "Convolution using Fast Walsh Hadamard Transform": [[91, "convolution-using-fast-walsh-hadamard-transform"]], "Convolution using Number Theoretic Transform": [[91, "convolution-using-number-theoretic-transform"]], "Convolutions": [[91, "module-sympy.discrete.convolutions"]], "Coordinate Modes": [[206, "coordinate-modes"]], "Coordinate Systems": [[273, "coordinate-systems"]], "Coordinate Systems and Vectors": [[268, "coordinate-systems-and-vectors"]], "Coordinate Variables": [[269, "coordinate-variables"]], "Core": [[88, "core"]], "Core operators no longer accept non-Expr args": [[13, "core-operators-no-longer-accept-non-expr-args"]], "Coset Enumeration: The Todd-Coxeter Algorithm": [[70, "coset-enumeration-the-todd-coxeter-algorithm"]], "CosetTable": [[70, "cosettable"]], "Covering Product": [[91, "covering-product"]], "Create a Function That Can Be Solved With SciPy": [[54, "create-a-function-that-can-be-solved-with-scipy"]], "Create a GitHub Account": [[9, "create-a-github-account"]], "Create a new branch": [[11, "create-a-new-branch"]], "Creating Matrices": [[124, "creating-matrices"]], "Creating a Custom Function": [[43, "creating-a-custom-function"]], "Creating an indefinite Integral with an Eq argument": [[13, "creating-an-indefinite-integral-with-an-eq-argument"]], "Credits and Copyright": [[205, "credits-and-copyright"]], "Cross-Referencing": [[4, "cross-referencing"]], "Cryptography": [[89, "cryptography"]], "Curl": [[33, "curl"], [271, "curl"]], "Curve (Docstrings)": [[132, "module-sympy.physics.biomechanics.curve"]], "Curves": [[97, "module-sympy.geometry.curve"]], "Custom": [[18, "custom"]], "Custom SymPy Objects": [[14, "custom-sympy-objects"]], "DMP representation": [[210, "dmp-representation"]], "DUP representation": [[210, "dup-representation"]], "Dagger": [[173, "module-sympy.physics.quantum.dagger"]], "Debian/Ubuntu": [[8, "debian-ubuntu"]], "Debugging": [[1, "debugging"]], "Debugging Test Failures on GitHub Actions": [[12, "debugging-test-failures-on-github-actions"]], "Decorator": [[254, "module-sympy.utilities.decorator"]], "Define Forces": [[298, "define-forces"], [302, "define-forces"]], "Define Inertia": [[298, "define-inertia"]], "Define Kinematics": [[298, "define-kinematics"], [302, "define-kinematics"]], "Define Variables": [[298, "define-variables"], [302, "define-variables"]], "Defining Automatic Evaluation with eval()": [[43, "defining-automatic-evaluation-with-eval"]], "Defining Derivatives": [[55, "defining-derivatives"]], "Defining Symbols": [[14, "defining-symbols"]], "Definition": [[43, "definition"], [43, "id2"], [43, "id4"], [106, "definition"]], "Deleting and Inserting Rows and Columns": [[292, "deleting-and-inserting-rows-and-columns"]], "Deleting junk files": [[11, "deleting-junk-files"]], "Dense Matrices": [[119, "dense-matrices"]], "Dense polynomials": [[211, "dense-polynomials"]], "Dependencies": [[2, "dependencies"]], "Deprecate Eq.rewrite(Add)": [[13, "deprecate-eq-rewrite-add"]], "Deprecate markers, annotations, fill, rectangles of the Plot class": [[13, "deprecate-markers-annotations-fill-rectangles-of-the-plot-class"]], "Deprecate the DMP.rep attribute.": [[13, "deprecate-the-dmp-rep-attribute"]], "Deprecate the pkgdata module": [[13, "deprecate-the-pkgdata-module"]], "Deprecated Classes (Docstrings)": [[148, "deprecated-classes-docstrings"]], "Deprecated matrix mixin classes": [[13, "deprecated-matrix-mixin-classes"]], "Deprecated mechanics Body class": [[13, "deprecated-mechanics-body-class"]], "Deprecated mechanics JointsMethod": [[13, "deprecated-mechanics-jointsmethod"]], "Deprecation Policy": [[3, "deprecation-policy"]], "Depth of Polycyclic generator": [[78, "depth-of-polycyclic-generator"]], "Derivatives": [[286, "derivatives"]], "Derivatives by array": [[241, "derivatives-by-array"]], "Derivatives of Vectors": [[36, "derivatives-of-vectors"]], "Derivatives with Multiple Frames": [[36, "derivatives-with-multiple-frames"]], "Determinant": [[292, "determinant"]], "Deutils (Utilities for solving ODE\u2019s and PDE\u2019s)": [[238, "deutils-utilities-for-solving-ode-s-and-pde-s"]], "Developers Notes": [[88, "developers-notes"]], "Development Dependencies": [[2, "development-dependencies"]], "Development Workflow Process": [[11, "development-workflow-process"]], "Diagonal operator": [[241, "diagonal-operator"]], "Diagram Drawing": [[68, "module-sympy.categories.diagram_drawing"]], "Dictionaries": [[16, "dictionaries"]], "Dictionary (roots)": [[48, "dictionary-roots"]], "Differential Geometry": [[90, "module-sympy.diffgeom"]], "Differentiating": [[21, "differentiating"]], "Differentiation": [[43, "differentiation"]], "Dimensional analysis": [[193, "dimensional-analysis"]], "Dimensions": [[195, "dimensions"]], "Dimensions and dimension systems": [[192, "module-sympy.physics.units.dimensions"]], "Diophantine": [[233, "diophantine"]], "Diophantine Equation Can be Expressed as Expression That Equals Zero": [[51, "diophantine-equation-can-be-expressed-as-expression-that-equals-zero"]], "Diophantine Equations (DEs)": [[238, "diophantine-equations-des"], [239, "diophantine-equations-des"]], "Diophantine equations": [[233, "diophantine-equations"]], "Dirac Delta and Related Discontinuous Functions": [[96, "dirac-delta-and-related-discontinuous-functions"]], "Directional Derivative": [[271, "directional-derivative"]], "Discrete": [[91, "discrete"]], "Discrete Types": [[240, "discrete-types"]], "Dispersion of Polynomials": [[216, "dispersion-of-polynomials"]], "Divergence": [[33, "divergence"], [271, "divergence"]], "Divisibility": [[208, "divisibility"]], "Divisibility of polynomials": [[208, "divisibility-of-polynomials"]], "Division": [[208, "division"]], "Do Not Simplify Solutions": [[57, "do-not-simplify-solutions"]], "Docker": [[8, "docker"], [8, "id2"], [8, "id3"]], "Docstrings Style Guide": [[4, "docstrings-style-guide"]], "Docstrings for Classes that are Mathematical Functions": [[4, "docstrings-for-classes-that-are-mathematical-functions"]], "Docstrings for basic field functions": [[200, "docstrings-for-basic-field-functions"]], "Doctests": [[12, "doctests"]], "Documentation": [[7, "documentation"], [11, "documentation"]], "Documentation Style Guide": [[5, "documentation-style-guide"]], "Documentation using Markdown": [[5, "documentation-using-markdown"]], "Documenting a deprecation": [[3, "documenting-a-deprecation"]], "Domain constructors": [[216, "domain-constructors"]], "Domain elements vs sympy expressions": [[210, "domain-elements-vs-sympy-expressions"]], "Domains": [[211, "domains"]], "Don\u2019t Denest Collections": [[14, "don-t-denest-collections"]], "Don\u2019t Hardcode Symbol Names in Python Functions": [[14, "don-t-hardcode-symbol-names-in-python-functions"]], "Don\u2019t Overwrite __eq__": [[14, "don-t-overwrite-eq"]], "Dot": [[295, "dot"]], "Double Equals Signs": [[16, "double-equals-signs"]], "Duffing Oscillator with a Pendulum": [[302, "duffing-oscillator-with-a-pendulum"]], "Dyadic": [[32, "dyadic"]], "Dyadics": [[268, "dyadics"]], "ECM function": [[128, "ecm-function"]], "EX": [[211, "ex"]], "Easy Cases: Fully Symbolic or Fully Evaluated": [[43, "easy-cases-fully-symbolic-or-fully-evaluated"]], "Eigenvalues, Eigenvectors, and Diagonalization": [[292, "eigenvalues-eigenvectors-and-diagonalization"]], "Elastic Tendon Dynamics": [[18, "elastic-tendon-dynamics"]], "Elementary": [[94, "elementary"]], "Elementary Sequences": [[226, "elementary-sequences"]], "Elementary Sets": [[228, "elementary-sets"]], "Ellipses": [[98, "module-sympy.geometry.ellipse"]], "Elliptic integrals": [[96, "module-sympy.functions.special.elliptic_integrals"]], "Empty List": [[37, "empty-list"]], "Ensure Consistent Formatting From solve()": [[57, "ensure-consistent-formatting-from-solve"]], "Ensure the Root Found is in a Given Interval": [[54, "ensure-the-root-found-is-in-a-given-interval"]], "Entities": [[99, "module-sympy.geometry.entity"]], "Enumeration": [[93, "enumeration"]], "Enumerative": [[255, "module-sympy.utilities.enumerative"]], "Equals Signs (=)": [[16, "equals-signs"]], "Equals signs": [[288, "equals-signs"]], "Equation with quantities": [[193, "equation-with-quantities"]], "Equations Which Have a Closed-Form Solution, and SymPy Cannot Solve": [[52, "equations-which-have-a-closed-form-solution-and-sympy-cannot-solve"], [56, "equations-which-have-a-closed-form-solution-and-sympy-cannot-solve"]], "Equations With No Closed-Form Solution": [[48, "equations-with-no-closed-form-solution"], [52, "equations-with-no-closed-form-solution"], [55, "equations-with-no-closed-form-solution"]], "Equations With No Solution": [[51, "equations-with-no-solution"], [53, "equations-with-no-solution"], [55, "equations-with-no-solution"]], "Equations With no Closed-Form Solution": [[57, "equations-with-no-closed-form-solution"]], "Equations With no Solution": [[54, "equations-with-no-solution"]], "Equations of Motion": [[298, "equations-of-motion"]], "Error Functions and Fresnel Integrals": [[96, "module-sympy.functions.special.error_functions"]], "Essential Classes": [[199, "essential-classes"]], "Essential Classes in sympy.vector (docstrings)": [[264, "essential-classes-in-sympy-vector-docstrings"]], "Essential Functions (Docstrings)": [[201, "essential-functions-docstrings"]], "Essential Functions in sympy.vector (docstrings)": [[267, "essential-functions-in-sympy-vector-docstrings"]], "Euclidean domains": [[208, "euclidean-domains"]], "Evaluate the System Differential Equations": [[298, "evaluate-the-system-differential-equations"]], "Evaluating Expressions with Floats and Rationals": [[16, "evaluating-expressions-with-floats-and-rationals"]], "Exact Numeric Solution With Root Multiplicities": [[48, "exact-numeric-solution-with-root-multiplicities"]], "Exact Rational Numbers vs. Floats": [[14, "exact-rational-numbers-vs-floats"]], "Example 1": [[46, "example-1"], [136, "example-1"]], "Example 10": [[136, "example-10"]], "Example 11": [[136, "example-11"]], "Example 2": [[46, "example-2"], [136, "example-2"]], "Example 3": [[46, "example-3"], [136, "example-3"]], "Example 4": [[46, "example-4"], [136, "example-4"]], "Example 5": [[46, "example-5"], [136, "example-5"]], "Example 6": [[136, "example-6"]], "Example 7": [[136, "example-7"]], "Example 8": [[136, "example-8"]], "Example 9": [[136, "example-9"]], "Example Usage": [[100, "example-usage"]], "Example of Custom Printer": [[220, "example-of-custom-printer"]], "Example of Custom Printing Method": [[220, "example-of-custom-printing-method"]], "Example of Finding the Roots of a Polynomial Algebraically": [[48, "example-of-finding-the-roots-of-a-polynomial-algebraically"]], "Example of Numerically Solving an Equation": [[54, "example-of-numerically-solving-an-equation"]], "Example of Solving a Diophantine Equation": [[51, "example-of-solving-a-diophantine-equation"]], "Example of a good commit message": [[11, "example-of-a-good-commit-message"]], "Example: Continued Fractions": [[296, "example-continued-fractions"]], "Examples": [[36, "examples"], [36, "id1"], [43, "examples"], [43, "id3"], [43, "id5"], [50, "examples"], [60, "examples"], [88, "examples"], [88, "id52"], [112, "examples"], [115, "examples"], [115, "id38"], [128, "examples"], [128, "id83"], [136, "examples"], [144, "examples"], [162, "examples"], [194, "examples"], [219, "examples"], [227, "examples"], [227, "id3"], [240, "examples"], [241, "examples"], [242, "examples"], [245, "examples"]], "Examples from Wester\u2019s Article": [[219, "examples-from-wester-s-article"]], "Examples of Solving a System of Equations Algebraically": [[56, "examples-of-solving-a-system-of-equations-algebraically"]], "Exceptions": [[213, "exceptions"]], "Exceptions and Warnings": [[256, "module-sympy.utilities.exceptions"]], "Exercises": [[294, "exercises"]], "Expanding": [[221, "expanding"]], "Expanding expressions and factoring back": [[219, "expanding-expressions-and-factoring-back"]], "Experimental \\mathrm{\\LaTeX} Parsing": [[130, "experimental-mathrm-latex-parsing"]], "Explanations": [[17, "explanations"], [58, "explanations"]], "Explicitly Represent Infinite Sets of Possible Solutions": [[52, "explicitly-represent-infinite-sets-of-possible-solutions"]], "Exponential": [[94, "exponential"]], "Exponential, Logarithmic and Trigonometric Integrals": [[96, "exponential-logarithmic-and-trigonometric-integrals"]], "Exponentials and logarithms": [[296, "exponentials-and-logarithms"]], "Expression (factor)": [[48, "expression-factor"]], "Expression Manipulation (Docstrings)": [[149, "expression-manipulation-docstrings"]], "Expression domain": [[210, "expression-domain"]], "Expression of quantities in different coordinate systems": [[269, "expression-of-quantities-in-different-coordinate-systems"]], "Extending The Hypergeometric Tables": [[230, "extending-the-hypergeometric-tables"]], "Extra polynomial manipulation functions": [[216, "extra-polynomial-manipulation-functions"]], "Extract Elements From the Solution": [[53, "extract-elements-from-the-solution"]], "Extract Expressions From the Result": [[51, "extract-expressions-from-the-result"]], "Extract a List of Decomposed Relations": [[50, "extract-a-list-of-decomposed-relations"]], "Extract a Tuple of Relations": [[50, "extract-a-tuple-of-relations"]], "Extract the Result for Multiple Function-Solution Pairs": [[55, "extract-the-result-for-multiple-function-solution-pairs"]], "Extract the Result for One Solution and Function": [[55, "extract-the-result-for-one-solution-and-function"]], "Factor the Equation": [[48, "factor-the-equation"]], "Factorial domains": [[208, "factorial-domains"]], "Factoring in terms of cyclotomic polynomials": [[219, "factoring-in-terms-of-cyclotomic-polynomials"]], "Factoring polynomials into linear factors": [[219, "factoring-polynomials-into-linear-factors"]], "Factorization": [[208, "factorization"]], "Fast Fourier Transform": [[91, "fast-fourier-transform"]], "Fast Walsh Hadamard Transform": [[91, "fast-walsh-hadamard-transform"]], "Fedora": [[8, "fedora"]], "Fiber Active Force-Length": [[18, "fiber-active-force-length"]], "Fiber Damping": [[18, "fiber-damping"]], "Fiber Force-Velocity": [[18, "fiber-force-velocity"]], "Fiber Passive Force-Length": [[18, "fiber-passive-force-length"]], "Field operation functions": [[200, "field-operation-functions"]], "Field operator in orthogonal curvilinear coordinate system": [[271, "field-operator-in-orthogonal-curvilinear-coordinate-system"]], "Field operators and other related functions": [[33, "field-operators-and-other-related-functions"]], "Field operators and related functions": [[271, "field-operators-and-related-functions"]], "Fields": [[33, "fields"], [273, "fields"]], "Find Complex Roots of a Real Function": [[54, "find-complex-roots-of-a-real-function"]], "Find the Roots of a Polynomial": [[48, "find-the-roots-of-a-polynomial"]], "Find the Roots of a Polynomial Algebraically or Numerically": [[48, "find-the-roots-of-a-polynomial-algebraically-or-numerically"]], "Finding Minimal Polynomials": [[215, "finding-minimal-polynomials"]], "Finite Difference Approximations to Derivatives": [[39, "finite-difference-approximations-to-derivatives"]], "Finite Extensions": [[207, "finite-extensions"]], "Finite Types": [[240, "finite-types"]], "Finite difference weights": [[67, "finite-difference-weights"]], "Finite differences": [[286, "finite-differences"]], "Finite fields": [[210, "finite-fields"]], "Finitely Presented Groups": [[70, "finitely-presented-groups"]], "Finitely-generated modules": [[215, "module-sympy.polys.numberfields.modules"]], "First-Order": [[18, "first-order"]], "Floating-point numbers": [[92, "floating-point-numbers"]], "For 2D Polygons": [[115, "for-2d-polygons"]], "For 3-Polytopes/Polyhedra": [[115, "for-3-polytopes-polyhedra"]], "Fork SymPy": [[9, "fork-sympy"]], "Formal Power Series": [[222, "formal-power-series"]], "Formal manipulation of roots of polynomials": [[216, "formal-manipulation-of-roots-of-polynomials"]], "Formatting": [[4, "formatting"]], "Formatting Preferences": [[5, "formatting-preferences"]], "Forming logical expressions": [[118, "forming-logical-expressions"]], "Fortran Printing": [[220, "fortran-printing"]], "Fortran specific AST nodes (sympy.codegen.fnodes)": [[69, "module-sympy.codegen.fnodes"]], "Fortran utilities (sympy.codegen.futils)": [[69, "module-sympy.codegen.futils"]], "Fourier Series": [[223, "fourier-series"]], "Free Groups and Words": [[70, "free-groups-and-words"]], "Functions": [[16, "functions"], [95, "functions"], [241, "functions"]], "Functions to Find the Roots of a Polynomial": [[48, "functions-to-find-the-roots-of-a-polynomial"]], "Further Examples": [[27, "further-examples"]], "Further Reading": [[288, "further-reading"]], "Fused Multiply-Add (FMA)": [[43, "fused-multiply-add-fma"]], "Future Features": [[21, "future-features"]], "Future Improvements": [[22, "future-improvements"]], "Future Work": [[100, "future-work"]], "GCD and LCM": [[208, "gcd-and-lcm"]], "GF(p)": [[211, "gf-p"]], "Galois Groups": [[71, "module-sympy.combinatorics.galois"], [215, "galois-groups"]], "Gamma matrices": [[144, "module-sympy.physics.hep.gamma_matrices"]], "Gamma, Beta and Related Functions": [[96, "module-sympy.functions.special.gamma_functions"]], "Gates": [[174, "module-sympy.physics.quantum.gate"]], "Gaussian Optics": [[159, "module-sympy.physics.optics.gaussopt"]], "Gaussian domains": [[211, "gaussian-domains"]], "Gaussian integers and Gaussian rationals": [[210, "gaussian-integers-and-gaussian-rationals"]], "Gegenbauer Polynomials": [[96, "gegenbauer-polynomials"]], "General Guidelines": [[4, "general-guidelines"], [5, "general-guidelines"]], "General examples of usage": [[270, "general-examples-of-usage"]], "Generators": [[80, "module-sympy.combinatorics.generators"]], "Geometry": [[100, "geometry"]], "Geometry Visualization": [[100, "geometry-visualization"]], "Get All Roots, Perhaps Implicitly": [[48, "get-all-roots-perhaps-implicitly"]], "Get familiar using the software": [[7, "get-familiar-using-the-software"]], "Get the SymPy Code": [[9, "get-the-sympy-code"]], "Getting help from within SymPy": [[16, "getting-help-from-within-sympy"]], "Getting the Source Code": [[2, "getting-the-source-code"]], "Git": [[59, "git"]], "Glossary": [[15, "glossary"]], "Gotcha: symbols with different assumptions": [[41, "gotcha-symbols-with-different-assumptions"]], "Gotchas": [[22, "gotchas"], [288, "gotchas"]], "Gotchas and Pitfalls": [[16, "gotchas-and-pitfalls"]], "Gradient": [[33, "gradient"], [271, "gradient"]], "Gray Code": [[72, "module-sympy.combinatorics.graycode"]], "Groebner bases": [[208, "groebner-bases"]], "Groebner basis algorithms": [[213, "groebner-basis-algorithms"]], "Group constructors": [[73, "module-sympy.combinatorics.group_constructs"]], "Group structure": [[195, "group-structure"]], "Grover\u2019s Algorithm": [[175, "module-sympy.physics.quantum.grover"]], "Gtk": [[220, "module-sympy.printing.gtk"]], "Guidance": [[48, "guidance"], [50, "guidance"], [51, "guidance"], [52, "guidance"], [53, "guidance"], [54, "guidance"], [55, "guidance"], [56, "guidance"]], "Guide for New Contributors": [[10, "guide-for-new-contributors"]], "Guide to Biomechanics": [[19, "guide-to-biomechanics"], [133, "guide-to-biomechanics"]], "Guide to Classical Mechanics": [[23, "guide-to-classical-mechanics"]], "Guide to Mechanics": [[150, "guide-to-mechanics"]], "Guide to Vector": [[34, "guide-to-vector"], [202, "guide-to-vector"], [272, "guide-to-vector"]], "Hard Dependencies": [[2, "hard-dependencies"]], "Headings": [[5, "headings"]], "Hermite Polynomials": [[96, "hermite-polynomials"]], "High Energy Physics": [[144, "high-energy-physics"]], "Hilbert Space": [[176, "module-sympy.physics.quantum.hilbert"]], "Hint Functions": [[236, "hint-functions"]], "Hint Methods": [[237, "hint-methods"]], "Holonomic": [[108, "module-sympy.holonomic"]], "Hongguang Fu\u2019s Trigonometric Simplification": [[229, "module-sympy.simplify.fu"]], "How Vectors are Coded": [[36, "how-vectors-are-coded"]], "How are symbolic parameters handled in solveset?": [[239, "how-are-symbolic-parameters-handled-in-solveset"]], "How do we deal with cases where only some of the solutions are known?": [[239, "how-do-we-deal-with-cases-where-only-some-of-the-solutions-are-known"]], "How do we manipulate and return an infinite solution?": [[239, "how-do-we-manipulate-and-return-an-infinite-solution"]], "How does solveset ensure that it is not returning any wrong solution?": [[239, "how-does-solveset-ensure-that-it-is-not-returning-any-wrong-solution"]], "How long should deprecations last?": [[3, "how-long-should-deprecations-last"]], "How to compute the integral": [[113, "how-to-compute-the-integral"]], "How to deprecate code": [[3, "how-to-deprecate-code"]], "How-to Guides": [[44, "how-to-guides"], [58, "how-to-guides"]], "Hydrogen Wavefunctions": [[145, "module-sympy.physics.hydrogen"]], "Hyperbolic": [[94, "hyperbolic"]], "Hyperbolic Functions": [[94, "hyperbolic-functions"]], "Hyperbolic Inverses": [[94, "hyperbolic-inverses"]], "Hypergeometric Algorithm": [[222, "hypergeometric-algorithm"]], "Hypergeometric Expansion": [[230, "hypergeometric-expansion"]], "Hypergeometric Function Expansion Algorithm": [[230, "hypergeometric-function-expansion-algorithm"]], "Hypergeometric Functions": [[96, "hypergeometric-functions"]], "Hypergeometric terms": [[87, "hypergeometric-terms"]], "Hypothesis Testing": [[12, "hypothesis-testing"]], "Identify something to work on": [[7, "identify-something-to-work-on"]], "If There are Multiple Solution Sets": [[55, "if-there-are-multiple-solution-sets"]], "If There is One Solution Set": [[55, "if-there-is-one-solution-set"]], "Immutability of Expressions": [[16, "immutability-of-expressions"]], "Immutable Matrices": [[121, "immutable-matrices"]], "ImmutableMatrix Class Reference": [[121, "module-sympy.matrices.immutable"]], "ImmutableSparseMatrix Class Reference": [[126, "immutablesparsematrix-class-reference"]], "Implementation - Helper Classes/Functions": [[220, "module-sympy.printing.conventions"]], "Implementation Details": [[253, "implementation-details"]], "Implementation details": [[252, "implementation-details"]], "Implementation in sympy.vector": [[271, "implementation-in-sympy-vector"]], "Implementation of fields in sympy.physics.vector": [[33, "implementation-of-fields-in-sympy-physics-vector"]], "Implemented G-Function Formulae": [[113, "implemented-g-function-formulae"]], "Implemented Hypergeometric Formulae": [[230, "implemented-hypergeometric-formulae"]], "Implementing assumptions handlers": [[41, "implementing-assumptions-handlers"]], "Implications": [[41, "implications"]], "Importing Docstrings into the Sphinx Documentation": [[4, "importing-docstrings-into-the-sphinx-documentation"]], "Impulse-Response Plot": [[141, "impulse-response-plot"]], "Include Solutions Making Any Denominator Zero": [[57, "include-solutions-making-any-denominator-zero"]], "Include the Variable to Be Reduced for in the Function Call": [[50, "include-the-variable-to-be-reduced-for-in-the-function-call"]], "Include the Variable to be Solved for in the Function Call": [[57, "include-the-variable-to-be-solved-for-in-the-function-call"]], "Increase Precision of the Solution": [[54, "increase-precision-of-the-solution"]], "Incrementing and decrementing indices": [[230, "incrementing-and-decrementing-indices"]], "Index": [[10, "index"]], "Indexed Objects": [[245, "module-sympy.tensor.indexed"]], "Inequalities": [[238, "inequalities"], [239, "inequalities"]], "Inequalities Which Can Be Reduced Analytically, and SymPy Cannot Reduce": [[50, "inequalities-which-can-be-reduced-analytically-and-sympy-cannot-reduce"]], "Inequality Solvers": [[235, "inequality-solvers"]], "Inertia": [[28, "inertia"]], "Inertia (Dyadics)": [[28, "inertia-dyadics"]], "Inertias": [[154, "inertias"]], "Inference": [[118, "module-sympy.logic.inference"]], "Information on the ode module": [[236, "module-sympy.solvers.ode.ode"]], "Information on the pde module": [[237, "module-sympy.solvers.pde"]], "Inner Product": [[178, "module-sympy.physics.quantum.innerproduct"]], "Input API of solveset": [[239, "input-api-of-solveset"]], "Install Git": [[9, "install-git"]], "Installation": [[58, "installation"], [59, "installation"], [294, "installation"]], "Integer Functions": [[94, "integer-functions"]], "Integral Basis": [[215, "integral-basis"]], "Integral Transforms": [[115, "module-sympy.integrals.transforms"]], "Integral domains": [[208, "integral-domains"]], "Integrals": [[114, "integrals"], [115, "module-sympy.integrals"], [286, "integrals"]], "Integration": [[112, "integration"]], "Integration and Differentiation": [[110, "integration-and-differentiation"]], "Integration over Polytopes": [[115, "module-sympy.integrals.intpoly"]], "Interactive": [[116, "module-sympy.interactive"]], "Interactive Use": [[2, "interactive-use"]], "Interface": [[240, "interface"]], "Internal API": [[109, "internal-api"]], "Internal API Reference": [[113, "module-sympy.integrals.meijerint"]], "Internal Classes": [[233, "internal-classes"]], "Internal Functions": [[233, "internal-functions"]], "Internals": [[115, "internals"], [215, "internals"]], "Internals of a Poly": [[210, "internals-of-a-poly"]], "Internals of the Polynomial Manipulation Module": [[213, "internals-of-the-polynomial-manipulation-module"]], "Interpretation of the predicates": [[41, "interpretation-of-the-predicates"]], "Intersecting Product": [[91, "intersecting-product"]], "Intersection of medians": [[100, "intersection-of-medians"]], "Introducing the Domains of the poly module": [[210, "introducing-the-domains-of-the-poly-module"]], "Introducing the domainmatrix of the poly module": [[209, "introducing-the-domainmatrix-of-the-poly-module"]], "Introduction": [[16, "introduction"], [22, "introduction"], [30, "introduction"], [33, "introduction"], [39, "introduction"], [61, "introduction"], [68, "introduction"], [69, "introduction"], [70, "introduction"], [78, "introduction"], [90, "introduction"], [100, "introduction"], [118, "introduction"], [133, "introduction"], [195, "introduction"], [206, "introduction"], [207, "introduction"], [208, "introduction"], [215, "introduction"], [219, "introduction"], [273, "introduction"], [290, "introduction"]], "Introduction to Biomechanical Modeling": [[18, "introduction-to-biomechanical-modeling"]], "Introduction to Contributing": [[7, "introduction-to-contributing"]], "Introduction to Kinematics": [[35, "introduction-to-kinematics"]], "Introductory Tutorial": [[284, "introductory-tutorial"], [289, "introductory-tutorial"]], "Inverse Trig Functions": [[16, "inverse-trig-functions"]], "Iterables": [[258, "module-sympy.utilities.iterables"]], "Iteration over sets": [[228, "iteration-over-sets"]], "Jacobi Polynomials": [[96, "jacobi-polynomials"]], "Javascript Code printing": [[220, "module-sympy.printing.jscode"]], "Join our mailing list": [[7, "join-our-mailing-list"]], "Joint (Docstrings)": [[151, "module-sympy.physics.mechanics.joint"]], "Joint Types": [[240, "joint-types"]], "Joints Framework (Docstrings)": [[151, "joints-framework-docstrings"]], "Joints Framework in Physics/Mechanics": [[24, "joints-framework-in-physics-mechanics"]], "Joints in Physics/Mechanics": [[24, "joints-in-physics-mechanics"]], "Julia code printing": [[220, "module-sympy.printing.julia"]], "K(x)": [[211, "id11"]], "K[x]": [[211, "k-x"]], "Kane\u2019s Method": [[305, "kane-s-method"]], "Kane\u2019s Method & Lagrange\u2019s Method (Docstrings)": [[152, "module-sympy.physics.mechanics.kane"]], "Kane\u2019s Method in Physics/Mechanics": [[25, "kane-s-method-in-physics-mechanics"], [25, "id2"]], "Key Invariant": [[291, null]], "Key Point": [[43, null]], "Keyword Arguments": [[16, "keyword-arguments"]], "Kinematics (Docstrings)": [[203, "module-sympy.physics.vector.point"]], "Kinematics in physics.vector": [[35, "kinematics-in-physics-vector"]], "Kinetic Energy": [[28, "kinetic-energy"]], "LaTeX Recommendations": [[5, "latex-recommendations"]], "Lagrange\u2019s Method": [[302, "lagrange-s-method"], [305, "lagrange-s-method"]], "Lagrange\u2019s Method in Physics/Mechanics": [[26, "lagrange-s-method-in-physics-mechanics"], [26, "id1"]], "Lagrangian": [[28, "lagrangian"]], "Laguerre Polynomials": [[96, "laguerre-polynomials"]], "LambdaPrinter": [[220, "module-sympy.printing.lambdarepr"]], "Lambdify": [[129, "lambdify"], [259, "module-sympy.utilities.lambdify"]], "Lark Backend": [[130, "lark-backend"]], "Lark \\mathrm{\\LaTeX} Parser Capabilities": [[130, "lark-mathrm-latex-parser-capabilities"]], "Lark \\mathrm{\\LaTeX} Parser Classes": [[130, "lark-mathrm-latex-parser-classes"]], "Lark \\mathrm{\\LaTeX} Parser Features": [[130, "lark-mathrm-latex-parser-features"]], "Lark \\mathrm{\\LaTeX} Parser Functions": [[130, "lark-mathrm-latex-parser-functions"]], "LatexPrinter": [[220, "module-sympy.printing.latex"]], "Legendre Polynomials": [[96, "legendre-polynomials"]], "Level Zero": [[213, "level-zero"]], "Lie Algebra": [[117, "module-sympy.liealgebras"]], "Lie heuristics": [[236, "lie-heuristics"]], "Limitations": [[41, "limitations"], [51, "limitations"], [112, "limitations"]], "Limitations and Issues": [[22, "limitations-and-issues"]], "Limitations of Inequality Reduction Using SymPy": [[50, "limitations-of-inequality-reduction-using-sympy"]], "Limitations on Types of Inequalities That SymPy Can Solve": [[50, "limitations-on-types-of-inequalities-that-sympy-can-solve"]], "Limits": [[227, "limits"], [286, "limits"]], "Limits of Sequences": [[225, "limits-of-sequences"]], "Linear Momentum": [[28, "linear-momentum"]], "Linear Programming (Optimization)": [[238, "module-sympy.solvers.simplex"]], "Linear algebra": [[124, "linear-algebra"]], "Linear space representation": [[195, "linear-space-representation"]], "Linearization": [[21, "linearization"]], "Linearization (Docstrings)": [[153, "module-sympy.physics.mechanics.linearize"]], "Linearization in Physics/Mechanics": [[27, "linearization-in-physics-mechanics"]], "Linearizing Kane\u2019s Equations": [[27, "linearizing-kane-s-equations"]], "Linearizing Lagrange\u2019s Equations": [[27, "linearizing-lagrange-s-equations"]], "Lines": [[101, "module-sympy.geometry.line"]], "Links": [[30, "links"]], "List (all_roots, real_roots, nroots)": [[48, "list-all-roots-real-roots-nroots"]], "List Of Values": [[37, "list-of-values"]], "List of Dictionaries": [[37, "list-of-dictionaries"]], "List of Tuples": [[37, "list-of-tuples"]], "List of active deprecations": [[13, "list-of-active-deprecations"]], "List of dictionaries (solve)": [[48, "list-of-dictionaries-solve"]], "Lists": [[16, "lists"]], "Literature": [[195, "literature"], [214, "literature"], [219, "literature"]], "Loads": [[18, "loads"], [28, "loads"], [154, "loads"]], "Local Installation": [[8, "local-installation"], [8, "id4"]], "Locating new systems": [[269, "locating-new-systems"]], "Logic": [[2, "logic"], [118, "module-sympy.logic"], [275, "logic"], [278, "logic"]], "Loose Ends": [[230, "loose-ends"]], "Low Index Subgroups": [[70, "low-index-subgroups"]], "MPQ": [[211, "mpq"]], "Mac": [[8, "mac"]], "Make Your Equation Into an Expression That Equals Zero": [[52, "make-your-equation-into-an-expression-that-equals-zero"]], "Make a Pull Request": [[11, "make-a-pull-request"]], "Manipulating expressions": [[118, "manipulating-expressions"]], "Manipulation of dense, multivariate polynomials": [[213, "manipulation-of-dense-multivariate-polynomials"]], "Manipulation of dense, univariate polynomials with finite field coefficients": [[213, "manipulation-of-dense-univariate-polynomials-with-finite-field-coefficients"]], "Manipulation of rational functions": [[216, "manipulation-of-rational-functions"]], "Manipulation of sparse, distributed polynomials and vectors": [[213, "manipulation-of-sparse-distributed-polynomials-and-vectors"]], "Maple code printing": [[220, "module-sympy.printing.maple"]], "Mapping user names to AUTHORS file entry": [[11, "mapping-user-names-to-authors-file-entry"]], "Marking Tests as Expected to Fail": [[12, "marking-tests-as-expected-to-fail"]], "Marking Tests as Slow": [[12, "marking-tests-as-slow"]], "Mass": [[28, "mass"]], "Masses, Inertias, Particles and Rigid Bodies in Physics/Mechanics": [[28, "masses-inertias-particles-and-rigid-bodies-in-physics-mechanics"]], "Math": [[5, "math"]], "MathML": [[295, "mathml"]], "MathMLPrinter": [[220, "module-sympy.printing.mathml"]], "Mathematica code printing": [[220, "module-sympy.printing.mathematica"]], "Mathematical Equivalents": [[30, "mathematical-equivalents"]], "Mathematical Exactness, Completeness of List of Roots, and Speed": [[48, "mathematical-exactness-completeness-of-list-of-roots-and-speed"]], "Mathematical Operators": [[16, "mathematical-operators"]], "Mathieu Functions": [[96, "module-sympy.functions.special.mathieu_functions"]], "Matrices": [[122, "module-sympy.matrices"], [146, "module-sympy.physics.matrices"], [275, "matrices"], [279, "matrices"], [292, "matrices"]], "Matrices (linear algebra)": [[124, "module-sympy.matrices.matrixbase"]], "Matrix": [[65, "matrix"]], "Matrix Base Classes": [[124, "matrix-base-classes"]], "Matrix Constructors": [[292, "matrix-constructors"]], "Matrix Distributions": [[240, "matrix-distributions"]], "Matrix Exceptions": [[124, "matrix-exceptions"]], "Matrix Expressions": [[120, "module-sympy.matrices.expressions"]], "Matrix Expressions Core Reference": [[120, "matrix-expressions-core-reference"]], "Matrix Functions": [[124, "matrix-functions"]], "Matrix Kind": [[123, "module-sympy.matrices.kind"]], "Matrix Normal Forms": [[125, "matrix-normal-forms"]], "Matrix Usually Must Be Square": [[53, "matrix-usually-must-be-square"]], "Mechanics": [[23, "mechanics"], [133, "mechanics"], [150, "mechanics"], [240, "module-sympy.stats.rv"]], "Mechanics API Reference": [[150, "mechanics-api-reference"]], "Mechanics Tutorials": [[304, "mechanics-tutorials"]], "Mechanism of the assumptions system": [[41, "mechanism-of-the-assumptions-system"]], "Medium": [[161, "module-sympy.physics.optics.medium"]], "Meijer G-Functions of Finite Confluence": [[230, "meijer-g-functions-of-finite-confluence"]], "Memoization": [[260, "module-sympy.utilities.memoization"]], "Methods": [[244, "module-sympy.tensor.index_methods"]], "Methods for Solving Matrix Equations": [[53, "methods-for-solving-matrix-equations"]], "Misc": [[64, "misc"]], "Miscellaneous": [[94, "miscellaneous"], [261, "module-sympy.utilities.misc"]], "Miscellaneous Notes": [[100, "miscellaneous-notes"]], "Miscellaneous _eval_* methods": [[43, "miscellaneous-eval-methods"]], "Mixing Poly and non-polynomial expressions in binary operations": [[13, "mixing-poly-and-non-polynomial-expressions-in-binary-operations"]], "Model Description": [[298, "model-description"]], "Modify code": [[11, "modify-code"]], "Modular GCD": [[213, "modular-gcd"]], "Module Homomorphisms": [[215, "module-homomorphisms"]], "Module Homomorphisms and Syzygies": [[207, "module-homomorphisms-and-syzygies"]], "Module structure": [[233, "module-structure"]], "Modules sympy.tensor.array.expressions.conv_* renamed to sympy.tensor.array.expressions.from_*": [[13, "modules-sympy-tensor-array-expressions-conv-renamed-to-sympy-tensor-array-expressions-from"]], "Modules, Ideals and their Elementary Properties": [[207, "modules-ideals-and-their-elementary-properties"]], "Monomials encoded as tuples": [[216, "monomials-encoded-as-tuples"]], "More": [[194, "more"]], "More Intuitive Series Expansion": [[227, "more-intuitive-series-expansion"]], "More about Coordinate Systems": [[269, "more-about-coordinate-systems"]], "More examples": [[193, "more-examples"]], "Moved mechanics functions": [[13, "moved-mechanics-functions"]], "Moving Around in the Parameter Space": [[230, "moving-around-in-the-parameter-space"]], "Multi Degree of Freedom Holonomic System": [[306, "multi-degree-of-freedom-holonomic-system"]], "Multiplication": [[215, "multiplication"]], "Multivariate GCD and factorization": [[219, "multivariate-gcd-and-factorization"]], "Multivariate factoring over algebraic numbers": [[219, "multivariate-factoring-over-algebraic-numbers"]], "Muscle Activation Differential Equations": [[298, "muscle-activation-differential-equations"]], "Musculotendon (Docstrings)": [[134, "module-sympy.physics.biomechanics.musculotendon"]], "Musculotendon Curves": [[18, "musculotendon-curves"]], "Musculotendon Dynamics": [[18, "musculotendon-dynamics"]], "Mutable attributes in sympy.diffgeom": [[13, "mutable-attributes-in-sympy-diffgeom"]], "M\u00f6bius Transform": [[91, "mobius-transform"]], "N-dim array": [[241, "module-sympy.tensor.array"]], "N-dim array expressions": [[242, "module-sympy.tensor.array.expressions"]], "Named Groups": [[76, "module-sympy.combinatorics.named_groups"]], "Narrative Documentation Guidelines": [[5, "narrative-documentation-guidelines"]], "New Joint coordinate format": [[13, "new-joint-coordinate-format"]], "New Joint intermediate frames": [[13, "new-joint-intermediate-frames"]], "New Mathematica code parser": [[13, "new-mathematica-code-parser"]], "Non-Expr objects in a Matrix": [[13, "non-expr-objects-in-a-matrix"]], "Non-tuple iterable for the first argument to Lambda": [[13, "non-tuple-iterable-for-the-first-argument-to-lambda"]], "Nonminimal Coordinates Pendulum": [[305, "nonminimal-coordinates-pendulum"]], "Normalizing simple rational functions": [[219, "normalizing-simple-rational-functions"]], "Not All Equations Can Be Solved": [[48, "not-all-equations-can-be-solved"], [51, "not-all-equations-can-be-solved"], [52, "not-all-equations-can-be-solved"], [55, "not-all-equations-can-be-solved"]], "Not All Results Are Returned for Periodic Functions": [[50, "not-all-results-are-returned-for-periodic-functions"]], "Not All Systems of Equations Can be Solved": [[56, "not-all-systems-of-equations-can-be-solved"]], "Not All Systems of Inequalities Can Be Reduced": [[50, "not-all-systems-of-inequalities-can-be-reduced"]], "Not Public API": [[3, null]], "Not all Equations Can be Solved": [[54, "not-all-equations-can-be-solved"]], "Notation": [[230, "notation"]], "Note": [[43, null]], "Notes": [[88, "notes"], [227, "notes"], [229, "notes"]], "Ntheory Class Reference": [[128, "ntheory-class-reference"]], "Ntheory Functions Reference": [[128, "ntheory-functions-reference"]], "Nullspace": [[292, "nullspace"]], "Number Fields": [[215, "number-fields"]], "Number Theoretic Transform": [[91, "number-theoretic-transform"]], "Number Theory": [[65, "number-theory"], [128, "module-sympy.ntheory.generate"], [275, "number-theory"], [280, "number-theory"]], "Number of groups": [[74, "module-sympy.combinatorics.group_numbers"]], "Numeric Computation": [[129, "numeric-computation"]], "Numeric Integrals": [[115, "numeric-integrals"]], "Numeric Integration": [[286, "numeric-integration"]], "Numeric Solutions": [[57, "numeric-solutions"]], "Numerical Evaluation": [[92, "numerical-evaluation"]], "Numerical Evaluation and Visualization": [[30, "numerical-evaluation-and-visualization"]], "Numerical Evaluation with evalf()": [[43, "numerical-evaluation-with-evalf"]], "Numerical evaluation": [[110, "numerical-evaluation"]], "Numerical simplification": [[92, "numerical-simplification"]], "Numerically Evaluate CRootOf Roots": [[48, "numerically-evaluate-crootof-roots"]], "Numerically Integrating Code": [[21, "numerically-integrating-code"]], "Numerically Solve an ODE in SciPy": [[55, "numerically-solve-an-ode-in-scipy"]], "Numpy Utility Functions": [[124, "numpy-utility-functions"]], "ODE": [[236, "ode"]], "Octave (and Matlab) Code printing": [[220, "module-sympy.printing.octave"]], "Old (dense) polynomial rings": [[210, "old-dense-polynomial-rings"]], "Operations on entries": [[124, "operations-on-entries"]], "Operations on holonomic functions": [[110, "operations-on-holonomic-functions"]], "Operator": [[179, "module-sympy.physics.quantum.operator"]], "Operator/State Helper Functions": [[180, "module-sympy.physics.quantum.operatorset"]], "Optics": [[160, "optics"]], "Option 1: Define a Function Without Including Its Independent Variable": [[55, "option-1-define-a-function-without-including-its-independent-variable"]], "Option 2: Define a Function of an Independent Variable": [[55, "option-2-define-a-function-of-an-independent-variable"]], "Optional Dependencies": [[2, "optional-dependencies"]], "Optional SymEngine Backend": [[2, "optional-symengine-backend"]], "Options": [[213, "module-sympy.polys.polyoptions"]], "Options That Can Speed up solve()": [[52, "options-that-can-speed-up-solve"], [56, "options-that-can-speed-up-solve"], [57, "options-that-can-speed-up-solve"]], "Options to Define an ODE": [[55, "options-to-define-an-ode"]], "Order": [[65, "order"]], "Order Terms": [[227, "order-terms"]], "Ordered comparisons like a < b with modular integers": [[13, "ordered-comparisons-like-a-b-with-modular-integers"]], "Orderings of monomials": [[216, "orderings-of-monomials"]], "Ordinary Differential Equation Solving Hints": [[55, "ordinary-differential-equation-solving-hints"]], "Ordinary Differential equations (ODEs)": [[238, "ordinary-differential-equations-odes"], [239, "ordinary-differential-equations-odes"]], "Orienter classes (docstrings)": [[266, "orienter-classes-docstrings"]], "Orienting AND Locating new systems": [[269, "orienting-and-locating-new-systems"]], "Orienting new systems": [[269, "orienting-new-systems"]], "Orthogonal Polynomials": [[96, "module-sympy.functions.special.polynomials"]], "Orthogonal polynomials": [[216, "orthogonal-polynomials"]], "Other Functions": [[154, "other-functions"]], "Other Methods": [[43, "other-methods"], [59, "other-methods"]], "Other expression-dependent methods": [[269, "other-expression-dependent-methods"]], "Other is_* properties": [[41, "other-is-properties"]], "Overview": [[113, "overview"]], "Overview of Facilities": [[70, "overview-of-facilities"]], "Overview of functionalities": [[78, "overview-of-functionalities"]], "PDE": [[237, "pde"]], "PDF Documentation": [[8, "pdf-documentation"]], "Parse a String Representing the Equation": [[57, "parse-a-string-representing-the-equation"]], "Parsing": [[2, "parsing"], [130, "module-sympy.parsing"]], "Parsing Functions Reference": [[130, "parsing-functions-reference"]], "Parsing Transformations Reference": [[130, "parsing-transformations-reference"]], "Partial Differential Equations (PDEs)": [[238, "partial-differential-equations-pdes"], [239, "partial-differential-equations-pdes"]], "Partial fraction decomposition": [[216, "partial-fraction-decomposition"], [219, "partial-fraction-decomposition"]], "Particle": [[28, "particle"]], "Particle in a Box": [[181, "module-sympy.physics.quantum.piab"]], "Partitions": [[77, "module-sympy.combinatorics.partitions"]], "Passing the arguments to lambdify as a set": [[13, "passing-the-arguments-to-lambdify-as-a-set"]], "Pathway (Docstrings)": [[155, "module-sympy.physics.mechanics.pathway"]], "Pathways": [[18, "pathways"]], "Pauli Algebra": [[165, "module-sympy.physics.paulialgebra"]], "Performance improvements": [[64, "performance-improvements"]], "Permutation Groups": [[79, "module-sympy.combinatorics.perm_groups"]], "Permutations": [[80, "module-sympy.combinatorics.permutations"]], "Peruse the documentation": [[7, "peruse-the-documentation"]], "Philosophy behind unit systems": [[195, "philosophy-behind-unit-systems"]], "Physical Equivalents": [[30, "physical-equivalents"]], "Physical quantities": [[197, "module-sympy.physics.units.quantities"]], "Physics": [[20, "physics"], [47, "physics"], [275, "physics"], [281, "module-sympy.physics"]], "Physics Tutorial": [[284, "physics-tutorial"]], "Physics Tutorials": [[300, "physics-tutorials"]], "Physics Vector API": [[202, "physics-vector-api"]], "Pick an issue to fix": [[11, "pick-an-issue-to-fix"]], "Piecewise": [[94, "piecewise"]], "Plane": [[102, "module-sympy.geometry.plane"]], "Plot Class": [[206, "plot-class"]], "Plot Window Controls": [[206, "plot-window-controls"]], "PlotGrid Class": [[206, "plotgrid-class"]], "Plotting": [[2, "plotting"], [206, "module-sympy.plotting.plot"]], "Plotting Function Reference": [[206, "plotting-function-reference"]], "Plotting Geometric Entities": [[206, "plotting-geometric-entities"]], "Plotting with ASCII art": [[206, "plotting-with-ascii-art"]], "Point Velocity & Acceleration": [[35, "point-velocity-acceleration"]], "Points": [[103, "module-sympy.geometry.point"], [268, "points"]], "Polar Numbers and Branched Functions": [[113, "polar-numbers-and-branched-functions"]], "Polarization": [[162, "module-sympy.physics.optics.polarization"]], "Pole-Zero Plot": [[141, "pole-zero-plot"]], "Poly solvers": [[218, "poly-solvers"]], "PolyRing vs PolynomialRing": [[210, "polyring-vs-polynomialring"]], "Polycyclic Groups": [[78, "polycyclic-groups"]], "Polygons": [[104, "module-sympy.geometry.polygon"]], "Polyhedron": [[81, "module-sympy.combinatorics.polyhedron"]], "Polynomial Manipulation": [[212, "polynomial-manipulation"]], "Polynomial factorization algorithms": [[213, "polynomial-factorization-algorithms"]], "Polynomial ring domains": [[210, "polynomial-ring-domains"]], "Polynomial/Rational Function Simplification": [[296, "polynomial-rational-function-simplification"]], "Polynomials": [[208, "polynomials"]], "Polynomials Manipulation Module Reference": [[216, "module-sympy.polys"]], "Possible Issues": [[292, "possible-issues"]], "Potential Energy": [[28, "potential-energy"]], "Potential Issues": [[27, "potential-issues"]], "Potential Issues/Advanced Topics/Future Features in Physics/Mechanics": [[21, "potential-issues-advanced-topics-future-features-in-physics-mechanics"]], "Potential Issues/Advanced Topics/Future Features in Physics/Vector Module": [[32, "potential-issues-advanced-topics-future-features-in-physics-vector-module"]], "Power sets": [[228, "module-sympy.sets.powerset"]], "Powers": [[296, "powers"]], "Precedence": [[220, "module-sympy.printing.precedence"]], "Predefined types": [[69, "predefined-types"]], "Predicate": [[64, "predicate"]], "Predicates": [[41, "predicates"], [65, "module-sympy.assumptions.predicates"]], "Preliminaries": [[294, "preliminaries"]], "Pretty-Printing Implementation Helpers": [[220, "module-sympy.printing.pretty.pretty_symbology"]], "PrettyPrinter Class": [[220, "prettyprinter-class"]], "Prevent expression evaluation": [[291, "prevent-expression-evaluation"]], "Preview": [[220, "preview"]], "Prime Decomposition": [[215, "prime-decomposition"]], "Printer Class": [[220, "module-sympy.printing.printer"]], "Printers": [[295, "printers"]], "Printing": [[2, "printing"], [21, "printing"], [32, "printing"], [43, "printing"], [116, "module-sympy.interactive.printing"], [220, "printing"], [295, "printing"]], "Printing (Docstrings)": [[156, "printing-docstrings"], [204, "printing-docstrings"]], "Printing Functions": [[295, "printing-functions"]], "ProductSet(iterable)": [[13, "productset-iterable"]], "Products and contractions": [[241, "products-and-contractions"]], "Programmatically Extract Parameter Symbols": [[51, "programmatically-extract-parameter-symbols"]], "Prufer Sequences": [[82, "module-sympy.combinatorics.prufer"]], "Public API": [[3, null]], "Put Your Equation Into Eq Form": [[52, "put-your-equation-into-eq-form"]], "Pyglet Plotting": [[206, "module-sympy.plotting.pygletplot"]], "Python numbers vs. SymPy Numbers": [[16, "python-numbers-vs-sympy-numbers"]], "Python utilities (sympy.codegen.pyutils)": [[69, "module-sympy.codegen.pyutils"]], "PythonCodePrinter": [[220, "module-sympy.printing.pycode"]], "PythonPrinter": [[220, "module-sympy.printing.python"]], "QFT": [[183, "module-sympy.physics.quantum.qft"]], "QQ": [[211, "qq"]], "QQ<a>": [[211, "qq-a"]], "QQ_I": [[211, "qq-i"]], "QS function": [[128, "qs-function"]], "Qapply": [[182, "module-sympy.physics.quantum.qapply"]], "Quadrilateral problem": [[270, "quadrilateral-problem"]], "Quantities": [[195, "quantities"]], "Quantum Computation": [[177, "quantum-computation"]], "Quantum Functions": [[177, "quantum-functions"]], "Quantum Harmonic Oscillator in 1-D": [[166, "module-sympy.physics.qho_1d"]], "Quantum Harmonic Oscillator in 3-D": [[191, "module-sympy.physics.sho"]], "Quantum Mechanics": [[177, "quantum-mechanics"]], "Quaternion Reference": [[61, "module-sympy.algebras"]], "Qubit": [[184, "module-sympy.physics.quantum.qubit"]], "Querying": [[64, "querying"]], "Questions": [[59, "questions"]], "Quick Tip": [[285, null], [286, null], [288, null], [291, null], [292, null]], "Quotient ring": [[211, "quotient-ring"]], "RCodePrinter": [[220, "module-sympy.printing.rcode"]], "RR": [[211, "rr"]], "RREF": [[292, "rref"]], "Ramp-Response Plot": [[141, "ramp-response-plot"]], "Random": [[88, "module-sympy.core.random"]], "Random Tests": [[12, "random-tests"]], "Random Variable Types": [[240, "random-variable-types"]], "Randomised Testing": [[250, "module-sympy.testing.randtest"]], "Rational Algorithm": [[222, "rational-algorithm"]], "Rational Riccati Solver": [[236, "rational-riccati-solver"]], "Rational function fields": [[210, "rational-function-fields"]], "Read the paper": [[7, "read-the-paper"]], "Real and complex fields": [[210, "real-and-complex-fields"]], "Recommended Optional Dependencies": [[2, "recommended-optional-dependencies"]], "Recurrence Equations": [[238, "module-sympy.solvers.recurr"]], "Recursing through an Expression Tree": [[291, "recursing-through-an-expression-tree"]], "Recursive Sequences": [[226, "recursive-sequences"]], "Reduce One or a System of Inequalities for a Single Variable Algebraically": [[50, "reduce-one-or-a-system-of-inequalities-for-a-single-variable-algebraically"]], "Reduce a System of Inequalities Algebraically": [[50, "reduce-a-system-of-inequalities-algebraically"]], "Reducing One Inequality for a Single Variable Algebraically": [[50, "reducing-one-inequality-for-a-single-variable-algebraically"]], "Reducing a System of Inequalities for a Single Variable Algebraically": [[50, "reducing-a-system-of-inequalities-for-a-single-variable-algebraically"]], "Reduction of Order": [[230, "reduction-of-order"]], "Redundant static methods in carmichael": [[13, "redundant-static-methods-in-carmichael"]], "Reference": [[124, "reference"], [207, "reference"], [213, "reference"], [217, "reference"], [227, "reference"], [227, "id2"], [227, "id4"], [227, "id7"], [227, "id8"]], "Reference docs for the Poly Domains": [[211, "reference-docs-for-the-poly-domains"]], "ReferenceFrame": [[32, "referenceframe"]], "References": [[18, "references"], [46, "references"], [71, "references"], [88, "references"], [100, "references"], [106, "references"], [115, "references"], [162, "references"], [165, "references"], [205, "references"], [229, "references"], [230, "references"], [233, "references"], [239, "references"], [298, "references"], [302, "references"]], "References for Physics/Mechanics": [[29, "references-for-physics-mechanics"]], "References for Physics/Vector": [[34, "references-for-physics-vector"], [202, "references-for-physics-vector"]], "References for Vector": [[272, "references-for-vector"]], "References for the above definitions": [[41, "references-for-the-above-definitions"]], "Refine": [[66, "module-sympy.assumptions.refine"]], "Regression Tests": [[12, "regression-tests"]], "Reidemeister Schreier algorithm": [[70, "reidemeister-schreier-algorithm"]], "Relating Sets of Basis Vectors": [[36, "relating-sets-of-basis-vectors"]], "Relations between different symbols": [[41, "relations-between-different-symbols"]], "Release notes entry": [[3, "release-notes-entry"]], "Relocate symbolic functions from ntheory to functions": [[13, "relocate-symbolic-functions-from-ntheory-to-functions"]], "Reminder": [[43, null]], "Report a Bug": [[48, "report-a-bug"], [50, "report-a-bug"], [51, "report-a-bug"], [52, "report-a-bug"], [53, "report-a-bug"], [54, "report-a-bug"], [55, "report-a-bug"], [56, "report-a-bug"], [57, "report-a-bug"]], "Represent": [[185, "module-sympy.physics.quantum.represent"]], "Representation of holonomic functions in SymPy": [[111, "representation-of-holonomic-functions-in-sympy"]], "Representing Branched Functions on the Argand Plane": [[113, "representing-branched-functions-on-the-argand-plane"]], "Representing Roots": [[48, "representing-roots"]], "Representing algebraic numbers": [[215, "representing-algebraic-numbers"]], "Representing expressions symbolically": [[210, "representing-expressions-symbolically"]], "Required dependencies": [[8, "required-dependencies"]], "Residues": [[227, "residues"]], "Restrict the Domain of Solutions": [[52, "restrict-the-domain-of-solutions"]], "Return Unevaluated Integrals": [[55, "return-unevaluated-integrals"]], "Revealing noncontributing forces": [[303, "revealing-noncontributing-forces"]], "Review pull requests": [[7, "review-pull-requests"]], "Review the Code of Conduct": [[7, "review-the-code-of-conduct"]], "Rewriting and Simplification": [[43, "rewriting-and-simplification"]], "Riemann Zeta and Related Functions": [[96, "module-sympy.functions.special.zeta_functions"]], "Rigid Body": [[28, "rigid-body"]], "Rigid Tendon Dynamics": [[18, "rigid-tendon-dynamics"]], "Rotation matrices": [[124, "rotation-matrices"]], "Rough Autolev-SymPy Equivalents": [[30, "rough-autolev-sympy-equivalents"]], "Routine": [[253, "routine"]], "Rules": [[229, "rules"]], "Run SymPy": [[59, "run-sympy"]], "Run Tests": [[251, "module-sympy.testing.runtests"]], "Run the Tests": [[11, "run-the-tests"]], "Running Tests": [[12, "running-tests"]], "Running the Benchmarks": [[2, "running-the-benchmarks"]], "Running the Tests": [[2, "running-the-tests"]], "Runtime Installation": [[130, "runtime-installation"]], "Rust code printing": [[220, "module-sympy.printing.rust"]], "SMT-Lib printing": [[220, "module-sympy.printing.smtlib"]], "Sage": [[2, "sage"]], "Sample Docstring": [[4, "sample-docstring"]], "Scalar and Vector Field Functionality": [[33, "scalar-and-vector-field-functionality"], [271, "scalar-and-vector-field-functionality"]], "Scalar and vector fields": [[271, "scalar-and-vector-fields"]], "Scalar potential functions": [[33, "scalar-potential-functions"], [271, "scalar-potential-functions"]], "Search based solver and step-by-step solution": [[239, "search-based-solver-and-step-by-step-solution"]], "Second Quantization": [[190, "module-sympy.physics.secondquant"]], "Sections": [[4, "sections"]], "See": [[270, "see"]], "See Also": [[88, "see-also"], [258, "see-also"]], "Select a Specific Solver": [[55, "select-a-specific-solver"]], "Separate Symbolic and Numeric Code": [[14, "separate-symbolic-and-numeric-code"]], "Sequences": [[226, "sequences"]], "Sequences Base": [[226, "sequences-base"]], "Series": [[224, "series"]], "Series Acceleration": [[227, "series-acceleration"]], "Series Classes": [[206, "series-classes"]], "Series Expansion": [[286, "series-expansion"]], "Series Expansions": [[227, "series-expansions"]], "Series Manipulation using Polynomials": [[217, "series-manipulation-using-polynomials"]], "Series expansion": [[110, "series-expansion"]], "Session": [[116, "module-sympy.interactive.session"]], "SetKind": [[228, "setkind"]], "Sets": [[65, "sets"], [228, "sets"]], "Setting up Pretty Printing": [[295, "setting-up-pretty-printing"]], "Setup Development Environment": [[9, "setup-development-environment"]], "Setup GitHub": [[9, "setup-github"]], "Setup SSH Keys": [[9, "setup-ssh-keys"]], "Setup your development environment": [[7, "setup-your-development-environment"]], "Shape": [[292, "shape"]], "Shor\u2019s Algorithm": [[186, "module-sympy.physics.quantum.shor"]], "Silencing SymPy Deprecation Warnings": [[13, "silencing-sympy-deprecation-warnings"]], "Simple univariate polynomial factorization": [[219, "simple-univariate-polynomial-factorization"]], "Simplification": [[296, "simplification"]], "Simplification and equivalence-testing": [[118, "simplification-and-equivalence-testing"]], "Simplified remainder sequences": [[213, "simplified-remainder-sequences"]], "Simplify": [[231, "simplify"], [232, "simplify"]], "Simulate the Muscle-actuated Motion": [[298, "simulate-the-muscle-actuated-motion"]], "Single Dictionary": [[37, "single-dictionary"]], "Single Equals Sign": [[16, "single-equals-sign"]], "Singleton Sequences": [[226, "singleton-sequences"]], "Singleton Sets": [[228, "singleton-sets"]], "Singularities": [[67, "singularities"]], "Skipping Tests": [[12, "skipping-tests"]], "So Which Should I Use?": [[129, "so-which-should-i-use"]], "Solution": [[270, "solution"], [270, "id2"]], "Solve Equations": [[49, "solve-equations"]], "Solve Into a Solution Given as a Dictionary": [[56, "solve-into-a-solution-given-as-a-dictionary"]], "Solve One or a System of Equations Numerically": [[54, "solve-one-or-a-system-of-equations-numerically"]], "Solve Output by Type": [[37, "solve-output-by-type"]], "Solve Results in a Set": [[56, "solve-results-in-a-set"]], "Solve a Diophantine Equation Algebraically": [[51, "solve-a-diophantine-equation-algebraically"]], "Solve a Matrix Equation": [[53, "solve-a-matrix-equation"]], "Solve a Matrix Equation Algebraically": [[53, "solve-a-matrix-equation-algebraically"]], "Solve a System of Equations Algebraically": [[56, "solve-a-system-of-equations-algebraically"]], "Solve a System of Equations Numerically": [[54, "solve-a-system-of-equations-numerically"]], "Solve a System of Linear Equations Algebraically": [[56, "solve-a-system-of-linear-equations-algebraically"]], "Solve a System of Nonlinear Equations Algebraically": [[56, "solve-a-system-of-nonlinear-equations-algebraically"]], "Solve an Equation Algebraically": [[52, "solve-an-equation-algebraically"], [52, "id1"]], "Solve an Ordinary Differential Equation (ODE)": [[55, "solve-an-ordinary-differential-equation-ode"]], "Solve an Ordinary Differential Equation (ODE) Algebraically": [[55, "solve-an-ordinary-differential-equation-ode-algebraically"]], "Solve and Use Results in a Dictionary": [[56, "solve-and-use-results-in-a-dictionary"]], "Solvers": [[234, "solvers"], [238, "module-sympy.solvers"], [297, "solvers"]], "Solveset": [[239, "solveset"]], "Solveset Module Reference": [[239, "solveset-module-reference"]], "Solving Beam Bending Problems using Singularity Functions": [[136, "solving-beam-bending-problems-using-singularity-functions"]], "Solving Differential Equations": [[297, "solving-differential-equations"]], "Solving Equations": [[208, "solving-equations"]], "Solving Equations Algebraically": [[297, "solving-equations-algebraically"]], "Solving Functions": [[52, "solving-functions"]], "Solving Guidance": [[57, "solving-guidance"]], "Solving Several Matrix Equations With the Same Matrix": [[53, "solving-several-matrix-equations-with-the-same-matrix"]], "Solving Vector Equations": [[32, "solving-vector-equations"]], "Solving the Main Problems": [[215, "solving-the-main-problems"]], "Some Key Differences": [[30, "some-key-differences"]], "Some ODEs Cannot Be Solved Explicitly, Only Implicitly": [[55, "some-odes-cannot-be-solved-explicitly-only-implicitly"]], "Some traversal functions have been moved": [[13, "some-traversal-functions-have-been-moved"]], "Sorting": [[88, "sorting"]], "Source Code Inspection": [[262, "module-sympy.utilities.source"]], "Sparse Matrices": [[126, "module-sympy.matrices.sparse"]], "Sparse Tools": [[127, "module-sympy.matrices.sparsetools"]], "Sparse polynomial representation": [[210, "sparse-polynomial-representation"]], "Sparse polynomials": [[211, "sparse-polynomials"]], "Sparse rational functions": [[211, "sparse-rational-functions"]], "SparseMatrix Class Reference": [[126, "sparsematrix-class-reference"]], "Special": [[96, "special"]], "Special C math functions (sympy.codegen.cfunctions)": [[69, "module-sympy.codegen.cfunctions"]], "Special Functions": [[296, "special-functions"]], "Special Sets": [[228, "module-sympy.sets.fancysets"]], "Special Symbols": [[16, "special-symbols"]], "Special Types of Tests": [[12, "special-types-of-tests"]], "Special polynomials": [[216, "special-polynomials"]], "Specify Initial Conditions or Boundary Conditions": [[55, "specify-initial-conditions-or-boundary-conditions"], [55, "id1"]], "Specify the Order of Symbols in the Result": [[51, "specify-the-order-of-symbols-in-the-result"]], "Specifying Intervals for Variables": [[206, "specifying-intervals-for-variables"]], "Speed up Solving Matrix Equations": [[53, "speed-up-solving-matrix-equations"]], "Spelling and Punctuation": [[5, "spelling-and-punctuation"]], "Spherical Harmonics": [[96, "spherical-harmonics"]], "Spin": [[187, "module-sympy.physics.quantum.spin"]], "Sqrt is not a Function": [[16, "sqrt-is-not-a-function"]], "Square-free factorization": [[208, "square-free-factorization"]], "State": [[188, "module-sympy.physics.quantum.state"]], "States and Operators": [[177, "states-and-operators"]], "Statistics": [[2, "statistics"]], "Stats": [[240, "module-sympy.stats"]], "Step-Response Plot": [[141, "step-response-plot"]], "Stochastic Processes": [[240, "stochastic-processes"]], "StrPrinter": [[220, "module-sympy.printing.str"]], "Structure of Equations": [[25, "structure-of-equations"], [26, "structure-of-equations"]], "Style Preferences": [[5, "style-preferences"]], "Subgroups of Finite Index": [[70, "subgroups-of-finite-index"]], "Submodules": [[100, "submodules"]], "Subresultant sequence": [[213, "subresultant-sequence"]], "Subs/evalf": [[129, "subs-evalf"]], "Subset Convolution": [[91, "subset-convolution"]], "Subsets": [[83, "module-sympy.combinatorics.subsets"]], "Substitute Solutions From solve() Into an Expression": [[52, "substitute-solutions-from-solve-into-an-expression"]], "Substitute the Result Into an Expression": [[54, "substitute-the-result-into-an-expression"]], "Substitution": [[21, "substitution"], [32, "substitution"], [285, "substitution"]], "Sums and integrals": [[92, "sums-and-integrals"]], "Support for symbols in exponents": [[219, "support-for-symbols-in-exponents"]], "SymPy Can Reduce for Only One Symbol of Interest Per Inequality": [[50, "sympy-can-reduce-for-only-one-symbol-of-interest-per-inequality"]], "SymPy Codebase": [[7, "sympy-codebase"]], "SymPy Expression Reference": [[130, "module-sympy.parsing.sym_expr"]], "SymPy Features": [[287, "sympy-features"]], "SymPy Logo": [[45, "sympy-logo"]], "SymPy Mechanics for Autolev Users": [[30, "sympy-mechanics-for-autolev-users"]], "SymPy Special Topics": [[40, "sympy-special-topics"]], "SymPy operations on Vectors": [[268, "sympy-operations-on-vectors"]], "Symbolic Boolean vs three valued bool": [[42, "symbolic-boolean-vs-three-valued-bool"]], "Symbolic Expressions": [[16, "symbolic-expressions"]], "Symbolic Systems in Physics/Mechanics": [[31, "symbolic-systems-in-physics-mechanics"]], "Symbolic and fuzzy booleans": [[42, "symbolic-and-fuzzy-booleans"]], "Symbolic root-finding algorithms": [[216, "symbolic-root-finding-algorithms"]], "SymbolicSystem Example Usage": [[31, "symbolicsystem-example-usage"]], "Symbols": [[16, "symbols"], [288, "symbols"]], "System (Docstrings)": [[157, "system-docstrings"]], "System in Physics/Mechanics": [[24, "system-in-physics-mechanics"]], "System of ODEs": [[236, "system-of-odes"]], "Systems of Equations With no Closed-Form Solution": [[56, "systems-of-equations-with-no-closed-form-solution"]], "Systems of Equations With no Solution": [[56, "systems-of-equations-with-no-solution"]], "Systems of Inequalities That Cannot Be Reduced Analytically": [[50, "systems-of-inequalities-that-cannot-be-reduced-analytically"]], "Systems of Inequalities Which Cannot Be Satisfied": [[50, "systems-of-inequalities-which-cannot-be-satisfied"]], "Systems of Polynomial Equations": [[238, "systems-of-polynomial-equations"]], "TODO and Bugs": [[115, "todo-and-bugs"]], "Table Lookups and Inverse Mellin Transforms": [[113, "table-lookups-and-inverse-mellin-transforms"]], "Tendon Force-Length": [[18, "tendon-force-length"]], "Tensor": [[243, "module-sympy.tensor"], [246, "module-sympy.tensor.tensor"]], "Tensor Canonicalization": [[84, "module-sympy.combinatorics.tensor_can"]], "Tensor Functions": [[96, "tensor-functions"]], "Tensor Operators": [[247, "module-sympy.tensor.toperators"]], "Tensor Product": [[189, "module-sympy.physics.quantum.tensorproduct"]], "Tensor.fun_eval and Tensor.__call__": [[13, "tensor-fun-eval-and-tensor-call"]], "TensorIndexType.data and related methods": [[13, "tensorindextype-data-and-related-methods"]], "TensorType": [[13, "tensortype"]], "Term Rewriting": [[221, "term-rewriting"]], "Test Coverage": [[12, "test-coverage"]], "Test Deprecated Functionality": [[12, "test-deprecated-functionality"]], "Test Utilities": [[85, "module-sympy.combinatorics.testutil"]], "Testing": [[248, "testing"]], "Testing Exceptions": [[12, "testing-exceptions"]], "Testing Expressions with Dummy": [[12, "testing-expressions-with-dummy"]], "Testing Policies": [[12, "testing-policies"]], "Testing Warnings": [[12, "testing-warnings"]], "Testing if polynomials have common zeros": [[219, "testing-if-polynomials-have-common-zeros"]], "Testing that Something is Unchanged": [[12, "testing-that-something-is-unchanged"]], "Testing-Only Dependencies": [[2, "testing-only-dependencies"]], "Tests Style Guide": [[12, "tests-style-guide"]], "The (old) assumptions system": [[41, "the-old-assumptions-system"]], "The Construction of Collector": [[78, "the-construction-of-collector"]], "The Construction of Finitely Presented Groups": [[70, "the-construction-of-finitely-presented-groups"]], "The Construction of Polycyclic Groups": [[78, "the-construction-of-polycyclic-groups"]], "The Del operator": [[271, "the-del-operator"]], "The Fully Evaluated Case": [[43, "the-fully-evaluated-case"]], "The Fully Symbolic Case": [[43, "the-fully-symbolic-case"]], "The G-Function Integration Theorems": [[113, "the-g-function-integration-theorems"]], "The Gruntz Algorithm": [[227, "the-gruntz-algorithm"]], "The Inverse Laplace Transform of a G-function": [[113, "the-inverse-laplace-transform-of-a-g-function"]], "The ManagedProperties metaclass": [[13, "the-managedproperties-metaclass"]], "The ModularInteger.to_int() method": [[13, "the-modularinteger-to-int-method"]], "The Power of Symbolic Computation": [[290, "the-power-of-symbolic-computation"]], "The Problem": [[270, "the-problem"], [270, "id1"]], "The Subfield Problem": [[215, "the-subfield-problem"]], "The check argument to HadamardProduct, MatAdd and MatMul": [[13, "the-check-argument-to-hadamardproduct-matadd-and-matmul"]], "The dummy_fmt argument to TensorIndexType": [[13, "the-dummy-fmt-argument-to-tensorindextype"]], "The evaluate flag to differentiate_finite": [[13, "the-evaluate-flag-to-differentiate-finite"]], "The get_kronecker_delta() and get_epsilon() methods of TensorIndexType": [[13, "the-get-kronecker-delta-and-get-epsilon-methods-of-tensorindextype"]], "The get_segments attribute of plotting objects": [[13, "the-get-segments-attribute-of-plotting-objects"]], "The is_EmptySet attribute of sets": [[13, "the-is-emptyset-attribute-of-sets"]], "The max_degree and get_upper_degree properties of sympy.polys.multivariate_resultants.DixonResultant": [[13, "the-max-degree-and-get-upper-degree-properties-of-sympy-polys-multivariate-resultants-dixonresultant"]], "The mdft function in sympy.physics.matrices": [[13, "the-mdft-function-in-sympy-physics-matrices"]], "The metric argument to TensorIndexType": [[13, "the-metric-argument-to-tensorindextype"]], "The need for a reference": [[195, "the-need-for-a-reference"]], "The print_cyclic flag of sympy.combinatorics.Permutation": [[13, "the-print-cyclic-flag-of-sympy-combinatorics-permutation"]], "The private SparseMatrix._smat and DenseMatrix._mat attributes": [[13, "the-private-sparsematrix-smat-and-densematrix-mat-attributes"]], "The purpose of deprecation": [[3, "the-purpose-of-deprecation"]], "The set_potential_energy method in sympy.physics.mechanics": [[13, "the-set-potential-energy-method-in-sympy-physics-mechanics"]], "The string fallback in sympify()": [[13, "the-string-fallback-in-sympify"]], "The sympy.core.compatibility submodule": [[13, "the-sympy-core-compatibility-submodule"]], "The tensorhead() function": [[13, "the-tensorhead-function"]], "The tensorsymmetry() function": [[13, "the-tensorsymmetry-function"]], "The unicode argument and attribute to sympy.printing.pretty.stringpict.prettyForm and the sympy.printing.pretty.pretty_symbology.xstr function": [[13, "the-unicode-argument-and-attribute-to-sympy-printing-pretty-stringpict-prettyform-and-the-sympy-printing-pretty-pretty-symbology-xstr-function"]], "Third product rule for Del operator": [[270, "third-product-rule-for-del-operator"]], "Three Dimensions and Beyond": [[100, "three-dimensions-and-beyond"]], "Three-valued logic with fuzzy bools": [[42, "three-valued-logic-with-fuzzy-bools"]], "Three-valued logic with symbolic Booleans": [[42, "three-valued-logic-with-symbolic-booleans"]], "Timing Utilities": [[263, "module-sympy.utilities.timeutils"]], "Tone Preferences": [[5, "tone-preferences"]], "Tools for simplifying expressions using approximations (sympy.codegen.approximations)": [[69, "module-sympy.codegen.approximations"]], "Topics": [[275, "topics"], [282, "topics"]], "Tradeoffs": [[48, "tradeoffs"]], "Transforming new system": [[269, "transforming-new-system"]], "Transforms": [[91, "module-sympy.discrete.transforms"]], "Traversal": [[88, "module-sympy.core.traversal"]], "Tree Printing": [[220, "module-sympy.printing.tree"]], "Tree representation": [[210, "tree-representation"]], "Triceps": [[298, "triceps"]], "Trigonometric": [[94, "trigonometric"]], "Trigonometric Functions": [[94, "trigonometric-functions"]], "Trigonometric Inverses": [[94, "trigonometric-inverses"]], "Trigonometric Simplification": [[296, "trigonometric-simplification"]], "Truss": [[138, "truss"]], "Truss (Docstrings)": [[139, "module-sympy.physics.continuum_mechanics.truss"]], "Truth Setting Expressions": [[100, "truth-setting-expressions"]], "Truth tables and related functions": [[118, "truth-tables-and-related-functions"]], "Try to avoid backwards incompatible changes in the first place": [[3, "try-to-avoid-backwards-incompatible-changes-in-the-first-place"]], "Tuples": [[16, "tuples"]], "Tutorial": [[233, "tutorial"]], "Tutorials": [[58, "tutorials"], [284, "tutorials"]], "Two Final Notes: ^ and /": [[288, "two-final-notes-and"]], "Types of Documentation": [[5, "types-of-documentation"]], "Understanding Expression Trees": [[291, "understanding-expression-trees"]], "Undocumented": [[213, "undocumented"]], "Unicode Pretty Printer": [[295, "unicode-pretty-printer"]], "Unifying domains": [[210, "unifying-domains"]], "Unit Systems": [[194, "unit-systems"]], "Unit prefixes": [[196, "module-sympy.physics.units.prefixes"]], "Units": [[195, "units"]], "Units and unit systems": [[198, "module-sympy.physics.units.unitsystem"]], "Univariate GCD, resultant and factorization": [[219, "univariate-gcd-resultant-and-factorization"]], "Univariate factoring over Gaussian numbers": [[219, "univariate-factoring-over-gaussian-numbers"]], "Univariate factoring over various domains": [[219, "univariate-factoring-over-various-domains"]], "Updating Existing Tests": [[12, "updating-existing-tests"]], "Usage": [[22, "usage"]], "Use Exact Values": [[57, "use-exact-values"]], "Use a Solution Given as a Dictionary": [[56, "use-a-solution-given-as-a-dictionary"]], "Use the Result": [[50, "use-the-result"]], "Use the Solution Result": [[48, "use-the-solution-result"], [51, "use-the-solution-result"], [52, "use-the-solution-result"], [53, "use-the-solution-result"], [54, "use-the-solution-result"], [55, "use-the-solution-result"]], "Use the Solution as a Vector": [[53, "use-the-solution-as-a-vector"]], "User Functions": [[233, "user-functions"], [236, "user-functions"], [237, "user-functions"]], "Uses and Current limitations": [[112, "uses-and-current-limitations"]], "Using Custom Color Functions": [[206, "using-custom-color-functions"]], "Using Orienter(s) and the orient_new method": [[269, "using-orienter-s-and-the-orient-new-method"]], "Using Vectors and Reference Frames": [[36, "using-vectors-and-reference-frames"]], "Using a method of CoordSys3D directly": [[269, "using-a-method-of-coordsys3d-directly"]], "Using a set for the condition in ConditionSet": [[13, "using-a-set-for-the-condition-in-conditionset"]], "Using energy functions in Mechanics": [[28, "using-energy-functions-in-mechanics"]], "Using integrate with Poly": [[13, "using-integrate-with-poly"]], "Using momenta functions in Mechanics": [[28, "using-momenta-functions-in-mechanics"]], "Using the Interactive Interface": [[206, "using-the-interactive-interface"]], "Using the nodes": [[69, "using-the-nodes"]], "Utilities": [[86, "module-sympy.combinatorics.util"], [163, "module-sympy.physics.optics.utils"], [215, "utilities"], [257, "module-sympy.utilities"], [275, "utilities"], [283, "utilities"]], "Utils": [[105, "module-sympy.geometry.util"]], "Variables": [[16, "variables"]], "Variables Assignment does not Create a Relation Between Expressions": [[16, "variables-assignment-does-not-create-a-relation-between-expressions"]], "Various sympy.utilities submodules have moved": [[13, "various-sympy-utilities-submodules-have-moved"]], "Vector": [[23, "vector"], [34, "vector"], [36, "vector"], [150, "vector"], [272, "vector"]], "Vector & ReferenceFrame": [[36, "vector-referenceframe"]], "Vector API": [[265, "vector-api"]], "Vector Algebra": [[36, "vector-algebra"]], "Vector Algebra, in physics.vector": [[36, "vector-algebra-in-physics-vector"]], "Vector Calculus": [[36, "vector-calculus"]], "Vector Calculus, in physics.vector": [[36, "vector-calculus-in-physics-vector"]], "Vector Operations": [[36, "vector-operations"]], "Vector: Kinematics": [[35, "vector-kinematics"]], "Vectors and Dyadics": [[269, "vectors-and-dyadics"]], "Vectors and Scalars": [[33, "vectors-and-scalars"], [273, "vectors-and-scalars"]], "Verify a Solution": [[51, "verify-a-solution"]], "Verifying Divergence Theorem": [[274, "verifying-divergence-theorem"]], "Verifying Stoke\u2019s Theorem": [[274, "verifying-stoke-s-theorem"]], "Versine": [[43, "versine"]], "Version 1.10": [[13, "version-1-10"]], "Version 1.11": [[13, "version-1-11"]], "Version 1.12": [[13, "version-1-12"]], "Version 1.13": [[13, "version-1-13"]], "Version 1.14": [[13, "version-1-14"]], "Version 1.4": [[13, "version-1-4"]], "Version 1.5": [[13, "version-1-5"]], "Version 1.6": [[13, "version-1-6"]], "Version 1.7": [[13, "version-1-7"]], "Version 1.7.1": [[13, "version-1-7-1"]], "Version 1.8": [[13, "version-1-8"]], "Version 1.9": [[13, "version-1-9"]], "View the Docs": [[8, "view-the-docs"]], "Virtual Environment Setup": [[9, "virtual-environment-setup"]], "Walking the Tree": [[291, "walking-the-tree"]], "Waves": [[164, "module-sympy.physics.optics.waves"]], "Welcome to SymPy\u2019s documentation!": [[58, "welcome-to-sympy-s-documentation"]], "What are the domains?": [[210, "what-are-the-domains"]], "What are the general methods employed by solveset to solve an equation?": [[239, "what-are-the-general-methods-employed-by-solveset-to-solve-an-equation"]], "What is Symbolic Computation?": [[290, "what-is-symbolic-computation"]], "What is a deprecation?": [[3, "what-is-a-deprecation"]], "What is domainmatrix?": [[209, "what-is-domainmatrix"]], "What is the plan for solve and solveset?": [[239, "what-is-the-plan-for-solve-and-solveset"]], "What is this domain argument about?": [[239, "what-is-this-domain-argument-about"]], "What\u2019s Next": [[293, "whats-next"]], "What\u2019s with the new_method kwarg?": [[27, null]], "What\u2019s wrong with solve():": [[239, "what-s-wrong-with-solve"]], "When You Might Prefer a Numeric Solution": [[57, "when-you-might-prefer-a-numeric-solution"]], "When does a change require deprecation?": [[3, "when-does-a-change-require-deprecation"]], "When it is not technically possible to deprecate": [[3, "when-it-is-not-technically-possible-to-deprecate"]], "When the integral exists": [[113, "when-the-integral-exists"]], "When this computation is valid": [[113, "when-this-computation-is-valid"]], "Which Method is Responsible for Printing?": [[220, "which-method-is-responsible-for-printing"]], "Why Solveset?": [[239, "why-solveset"]], "Why SymPy?": [[290, "why-sympy"]], "Why do we use Sets as an output type?": [[239, "why-do-we-use-sets-as-an-output-type"]], "Wigner Symbols": [[205, "module-sympy.physics.wigner"]], "Windows 10": [[8, "windows-10"]], "Work With Arbitrary Constants": [[55, "work-with-arbitrary-constants"]], "Work With Parameters": [[51, "work-with-parameters"]], "Work With Symbolic Matrices": [[53, "work-with-symbolic-matrices"]], "Working with expressions as polynomials": [[219, "working-with-expressions-as-polynomials"]], "Wrapping Geometries": [[18, "wrapping-geometries"]], "Wrapping Geometry (Docstrings)": [[158, "module-sympy.physics.mechanics.wrapping_geometry"]], "Writing Custom Functions": [[43, "writing-custom-functions"]], "Writing Tests": [[12, "writing-tests"]], "Writing Tests with External Dependencies": [[12, "writing-tests-with-external-dependencies"]], "Writing commit messages": [[11, "writing-commit-messages"]], "Writing pull request title and description": [[11, "writing-pull-request-title-and-description"]], "ZZ": [[211, "zz"]], "ZZ_I": [[211, "zz-i"]], "Zero Testing": [[292, "zero-testing"]], "Zeroth-Order": [[18, "zeroth-order"]], "\\mathrm{\\LaTeX}": [[295, "mathrm-latex"]], "\\mathrm{\\LaTeX} Parsing Exceptions Reference": [[130, "mathrm-latex-parsing-exceptions-reference"]], "\\mathrm{\\LaTeX} Parsing Functions Reference": [[130, "mathrm-latex-parsing-functions-reference"]], "abc": [[60, "module-sympy.abc"]], "add": [[88, "module-sympy.core.add"]], "apart": [[296, "apart"]], "args": [[291, "args"]], "as_real_imag()": [[43, "as-real-imag"]], "assumptions": [[88, "module-sympy.core.assumptions"]], "basic": [[88, "module-sympy.core.basic"]], "cache": [[88, "module-sympy.core.cache"]], "cancel": [[296, "cancel"]], "class": [[38, "class"]], "collect": [[296, "collect"]], "combsimp": [[296, "combsimp"]], "containers": [[88, "module-sympy.core.containers"]], "divides": [[43, "divides"]], "doit()": [[43, "doit"]], "dotprint": [[220, "dotprint"]], "dynamicsymbols": [[32, "dynamicsymbols"]], "evalf": [[88, "module-sympy.core.evalf"], [285, "evalf"]], "expand": [[296, "expand"]], "expand()": [[43, "expand"]], "expand_func": [[296, "expand-func"]], "expand_log": [[296, "expand-log"]], "expand_power_exp / expand_power_base": [[296, "expand-power-exp-expand-power-base"]], "expand_trig": [[296, "expand-trig"]], "expr": [[88, "module-sympy.core.expr"]], "expr_free_symbols": [[13, "expr-free-symbols"]], "exprtools": [[88, "module-sympy.core.exprtools"]], "factor": [[296, "factor"]], "func": [[38, "func"], [291, "func"]], "function": [[88, "module-sympy.core.function"]], "gammasimp": [[296, "gammasimp"]], "help()": [[16, "help"]], "hyperexpand": [[296, "hyperexpand"]], "intfunc": [[88, "module-sympy.core.intfunc"]], "inverse()": [[43, "inverse"]], "kind": [[38, "kind"], [88, "module-sympy.core.kind"]], "kinematic_equations": [[203, "module-sympy.physics.vector.functions"]], "lambdify": [[2, "lambdify"], [285, "lambdify"]], "laplace_transform of a Matrix with noconds=False": [[13, "laplace-transform-of-a-matrix-with-noconds-false"]], "logcombine": [[296, "logcombine"]], "lti": [[143, "module-sympy.physics.control.lti"]], "mechanics_printing": [[156, "mechanics-printing"]], "mlatex": [[156, "mlatex"]], "mod": [[88, "module-sympy.core.mod"]], "mpmath": [[59, "mpmath"]], "mpprint": [[156, "mpprint"]], "mprint": [[156, "mprint"]], "mul": [[88, "module-sympy.core.mul"]], "multidimensional": [[88, "module-sympy.core.multidimensional"]], "nroots": [[48, "nroots"]], "numbers": [[88, "module-sympy.core.numbers"]], "p-adic Valuation": [[215, "p-adic-valuation"]], "partitions": [[258, "partitions"]], "powdenest": [[296, "powdenest"]], "power": [[88, "module-sympy.core.power"]], "powsimp": [[296, "powsimp"]], "pytest": [[249, "module-sympy.testing.pytest"]], "real_roots": [[48, "real-roots"]], "relational": [[88, "module-sympy.core.relational"]], "rewrite": [[296, "rewrite"]], "rewrite()": [[43, "rewrite"]], "roots": [[48, "roots"]], "rs_series": [[217, "rs-series"]], "sets and assumptions": [[38, "sets-and-assumptions"]], "simplify": [[296, "simplify"]], "singleton": [[88, "module-sympy.core.singleton"]], "solveset() Solution Sets Cannot Necessarily Be Interrogated Programmatically": [[52, "solveset-solution-sets-cannot-necessarily-be-interrogated-programmatically"]], "srepr": [[220, "module-sympy.printing.repr"], [295, "srepr"]], "str": [[295, "str"]], "symbol": [[88, "module-sympy.core.symbol"]], "sympify": [[88, "module-sympy.core.sympify"]], "sympy.assumptions.handlers.AskHandler and related methods": [[13, "sympy-assumptions-handlers-askhandler-and-related-methods"]], "sympy.core.trace": [[13, "sympy-core-trace"]], "sympy.polys.solvers.RawMatrix": [[13, "sympy-polys-solvers-rawmatrix"]], "sympy.printing.theanocode": [[13, "sympy-printing-theanocode"]], "sympy.stats.DiscreteMarkovChain.absorbing_probabilites()": [[13, "sympy-stats-discretemarkovchain-absorbing-probabilites"]], "sympy.stats.sample(numsamples=n)": [[13, "sympy-stats-sample-numsamples-n"]], "sympy.testing.randtest": [[13, "sympy-testing-randtest"]], "sympy.utilities.misc.find_executable()": [[13, "sympy-utilities-misc-find-executable"]], "transolve": [[239, "transolve"]], "trigsimp": [[296, "trigsimp"]], "uFuncify": [[129, "ufuncify"]], "variations": [[258, "variations"]]}, "docnames": ["citing", "contributing/debug", "contributing/dependencies", "contributing/deprecations", "contributing/docstring", "contributing/documentation-style-guide", "contributing/index", "contributing/introduction-to-contributing", "contributing/new-contributors-guide/build-docs", "contributing/new-contributors-guide/dev-setup", "contributing/new-contributors-guide/index", "contributing/new-contributors-guide/workflow-process", "contributing/new-contributors-guide/writing-tests", "explanation/active-deprecations", "explanation/best-practices", "explanation/glossary", "explanation/gotchas", "explanation/index", "explanation/modules/physics/biomechanics/biomechanics", "explanation/modules/physics/biomechanics/index", "explanation/modules/physics/index", "explanation/modules/physics/mechanics/advanced", "explanation/modules/physics/mechanics/autolev_parser", "explanation/modules/physics/mechanics/index", "explanation/modules/physics/mechanics/joints", "explanation/modules/physics/mechanics/kane", "explanation/modules/physics/mechanics/lagrange", "explanation/modules/physics/mechanics/linearize", "explanation/modules/physics/mechanics/masses", "explanation/modules/physics/mechanics/reference", "explanation/modules/physics/mechanics/sympy_mechanics_for_autolev_users", "explanation/modules/physics/mechanics/symsystem", "explanation/modules/physics/vector/advanced", "explanation/modules/physics/vector/fields", "explanation/modules/physics/vector/index", "explanation/modules/physics/vector/kinematics/kinematics", "explanation/modules/physics/vector/vectors/vectors", "explanation/solve_output", "explanation/special_topics/classification", "explanation/special_topics/finite_diff_derivatives", "explanation/special_topics/index", "guides/assumptions", "guides/booleans", "guides/custom-functions", "guides/index", "guides/logo", "guides/physics/control_problems", "guides/physics/index", "guides/solving/find-roots-polynomial", "guides/solving/index", "guides/solving/reduce-inequalities-algebraically", "guides/solving/solve-diophantine-equation", "guides/solving/solve-equation-algebraically", "guides/solving/solve-matrix-equation", "guides/solving/solve-numerically", "guides/solving/solve-ode", "guides/solving/solve-system-of-equations-algebraically", "guides/solving/solving-guidance", "index", "install", "modules/abc", "modules/algebras", "modules/assumptions/ask", "modules/assumptions/assume", "modules/assumptions/index", "modules/assumptions/predicates", "modules/assumptions/refine", "modules/calculus/index", "modules/categories", "modules/codegen", "modules/combinatorics/fp_groups", "modules/combinatorics/galois", "modules/combinatorics/graycode", "modules/combinatorics/group_constructs", "modules/combinatorics/group_numbers", "modules/combinatorics/index", "modules/combinatorics/named_groups", "modules/combinatorics/partitions", "modules/combinatorics/pc_groups", "modules/combinatorics/perm_groups", "modules/combinatorics/permutations", "modules/combinatorics/polyhedron", "modules/combinatorics/prufer", "modules/combinatorics/subsets", "modules/combinatorics/tensor_can", "modules/combinatorics/testutil", "modules/combinatorics/util", "modules/concrete", "modules/core", "modules/crypto", "modules/diffgeom", "modules/discrete", "modules/evalf", "modules/functions/combinatorial", "modules/functions/elementary", "modules/functions/index", "modules/functions/special", "modules/geometry/curves", "modules/geometry/ellipses", "modules/geometry/entities", "modules/geometry/index", "modules/geometry/lines", "modules/geometry/plane", "modules/geometry/points", "modules/geometry/polygons", "modules/geometry/utils", "modules/holonomic/about", "modules/holonomic/convert", "modules/holonomic/index", "modules/holonomic/internal", "modules/holonomic/operations", "modules/holonomic/represent", "modules/holonomic/uses", "modules/integrals/g-functions", "modules/integrals/index", "modules/integrals/integrals", "modules/interactive", "modules/liealgebras/index", "modules/logic", "modules/matrices/dense", "modules/matrices/expressions", "modules/matrices/immutablematrices", "modules/matrices/index", "modules/matrices/kind", "modules/matrices/matrices", "modules/matrices/normalforms", "modules/matrices/sparse", "modules/matrices/sparsetools", "modules/ntheory", "modules/numeric-computation", "modules/parsing", "modules/physics/biomechanics/api/activation", "modules/physics/biomechanics/api/curve", "modules/physics/biomechanics/api/index", "modules/physics/biomechanics/api/musculotendon", "modules/physics/continuum_mechanics/beam", "modules/physics/continuum_mechanics/beam_problems", "modules/physics/continuum_mechanics/cable", "modules/physics/continuum_mechanics/index", "modules/physics/continuum_mechanics/truss", "modules/physics/control/control", "modules/physics/control/control_plots", "modules/physics/control/index", "modules/physics/control/lti", "modules/physics/hep/index", "modules/physics/hydrogen", "modules/physics/matrices", "modules/physics/mechanics/api/actuator", "modules/physics/mechanics/api/deprecated_classes", "modules/physics/mechanics/api/expr_manip", "modules/physics/mechanics/api/index", "modules/physics/mechanics/api/joint", "modules/physics/mechanics/api/kane_lagrange", "modules/physics/mechanics/api/linearize", "modules/physics/mechanics/api/part_bod", "modules/physics/mechanics/api/pathway", "modules/physics/mechanics/api/printing", "modules/physics/mechanics/api/system", "modules/physics/mechanics/api/wrapping_geometry", "modules/physics/optics/gaussopt", "modules/physics/optics/index", "modules/physics/optics/medium", "modules/physics/optics/polarization", "modules/physics/optics/utils", "modules/physics/optics/waves", "modules/physics/paulialgebra", "modules/physics/qho_1d", "modules/physics/quantum/anticommutator", "modules/physics/quantum/cartesian", "modules/physics/quantum/cg", "modules/physics/quantum/circuitplot", "modules/physics/quantum/commutator", "modules/physics/quantum/constants", "modules/physics/quantum/dagger", "modules/physics/quantum/gate", "modules/physics/quantum/grover", "modules/physics/quantum/hilbert", "modules/physics/quantum/index", "modules/physics/quantum/innerproduct", "modules/physics/quantum/operator", "modules/physics/quantum/operatorset", "modules/physics/quantum/piab", "modules/physics/quantum/qapply", "modules/physics/quantum/qft", "modules/physics/quantum/qubit", "modules/physics/quantum/represent", "modules/physics/quantum/shor", "modules/physics/quantum/spin", "modules/physics/quantum/state", "modules/physics/quantum/tensorproduct", "modules/physics/secondquant", "modules/physics/sho", "modules/physics/units/dimensions", "modules/physics/units/examples", "modules/physics/units/index", "modules/physics/units/philosophy", "modules/physics/units/prefixes", "modules/physics/units/quantities", "modules/physics/units/unitsystem", "modules/physics/vector/api/classes", "modules/physics/vector/api/fieldfunctions", "modules/physics/vector/api/functions", "modules/physics/vector/api/index", "modules/physics/vector/api/kinematics", "modules/physics/vector/api/printing", "modules/physics/wigner", "modules/plotting", "modules/polys/agca", "modules/polys/basics", "modules/polys/domainmatrix", "modules/polys/domainsintro", "modules/polys/domainsref", "modules/polys/index", "modules/polys/internals", "modules/polys/literature", "modules/polys/numberfields", "modules/polys/reference", "modules/polys/ringseries", "modules/polys/solvers", "modules/polys/wester", "modules/printing", "modules/rewriting", "modules/series/formal", "modules/series/fourier", "modules/series/index", "modules/series/limitseq", "modules/series/sequences", "modules/series/series", "modules/sets", "modules/simplify/fu", "modules/simplify/hyperexpand", "modules/simplify/index", "modules/simplify/simplify", "modules/solvers/diophantine", "modules/solvers/index", "modules/solvers/inequalities", "modules/solvers/ode", "modules/solvers/pde", "modules/solvers/solvers", "modules/solvers/solveset", "modules/stats", "modules/tensor/array", "modules/tensor/array_expressions", "modules/tensor/index", "modules/tensor/index_methods", "modules/tensor/indexed", "modules/tensor/tensor", "modules/tensor/toperators", "modules/testing/index", "modules/testing/pytest", "modules/testing/randtest", "modules/testing/runtests", "modules/utilities/autowrap", "modules/utilities/codegen", "modules/utilities/decorator", "modules/utilities/enumerative", "modules/utilities/exceptions", "modules/utilities/index", "modules/utilities/iterables", "modules/utilities/lambdify", "modules/utilities/memoization", "modules/utilities/misc", "modules/utilities/source", "modules/utilities/timeutils", "modules/vector/api/classes", "modules/vector/api/index", "modules/vector/api/orienterclasses", "modules/vector/api/vectorfunctions", "modules/vector/basics", "modules/vector/coordsys", "modules/vector/examples", "modules/vector/fields", "modules/vector/index", "modules/vector/intro", "modules/vector/vector_integration", "reference/index", "reference/public/basics/index", "reference/public/codegeneration/index", "reference/public/logic/index", "reference/public/matrices/index", "reference/public/numbertheory/index", "reference/public/physics/index", "reference/public/topics/index", "reference/public/utilities/index", "tutorials/index", "tutorials/intro-tutorial/basic_operations", "tutorials/intro-tutorial/calculus", "tutorials/intro-tutorial/features", "tutorials/intro-tutorial/gotchas", "tutorials/intro-tutorial/index", "tutorials/intro-tutorial/intro", "tutorials/intro-tutorial/manipulation", "tutorials/intro-tutorial/matrices", "tutorials/intro-tutorial/next", "tutorials/intro-tutorial/preliminaries", "tutorials/intro-tutorial/printing", "tutorials/intro-tutorial/simplification", "tutorials/intro-tutorial/solvers", "tutorials/physics/biomechanics/biomechanical-model-example", "tutorials/physics/biomechanics/index", "tutorials/physics/index", "tutorials/physics/mechanics/bicycle_example", "tutorials/physics/mechanics/duffing-example", "tutorials/physics/mechanics/four_bar_linkage_example", "tutorials/physics/mechanics/index", "tutorials/physics/mechanics/lin_pend_nonmin_example", "tutorials/physics/mechanics/multi_degree_freedom_holonomic_system", "tutorials/physics/mechanics/rollingdisc_example", "tutorials/physics/mechanics/rollingdisc_example_kane", "tutorials/physics/mechanics/rollingdisc_example_kane_constraints", "tutorials/physics/mechanics/rollingdisc_example_lagrange"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["citing.md", "contributing/debug.rst", "contributing/dependencies.md", "contributing/deprecations.md", "contributing/docstring.rst", "contributing/documentation-style-guide.rst", "contributing/index.md", "contributing/introduction-to-contributing.md", "contributing/new-contributors-guide/build-docs.rst", "contributing/new-contributors-guide/dev-setup.md", "contributing/new-contributors-guide/index.md", "contributing/new-contributors-guide/workflow-process.md", "contributing/new-contributors-guide/writing-tests.md", "explanation/active-deprecations.md", "explanation/best-practices.md", "explanation/glossary.md", "explanation/gotchas.rst", "explanation/index.rst", "explanation/modules/physics/biomechanics/biomechanics.rst", "explanation/modules/physics/biomechanics/index.rst", "explanation/modules/physics/index.rst", "explanation/modules/physics/mechanics/advanced.rst", "explanation/modules/physics/mechanics/autolev_parser.rst", "explanation/modules/physics/mechanics/index.rst", "explanation/modules/physics/mechanics/joints.rst", "explanation/modules/physics/mechanics/kane.rst", "explanation/modules/physics/mechanics/lagrange.rst", "explanation/modules/physics/mechanics/linearize.rst", "explanation/modules/physics/mechanics/masses.rst", "explanation/modules/physics/mechanics/reference.rst", "explanation/modules/physics/mechanics/sympy_mechanics_for_autolev_users.rst", "explanation/modules/physics/mechanics/symsystem.rst", "explanation/modules/physics/vector/advanced.rst", "explanation/modules/physics/vector/fields.rst", "explanation/modules/physics/vector/index.rst", "explanation/modules/physics/vector/kinematics/kinematics.rst", "explanation/modules/physics/vector/vectors/vectors.rst", "explanation/solve_output.rst", "explanation/special_topics/classification.rst", "explanation/special_topics/finite_diff_derivatives.rst", "explanation/special_topics/index.rst", "guides/assumptions.rst", "guides/booleans.rst", "guides/custom-functions.md", "guides/index.rst", "guides/logo.rst", "guides/physics/control_problems.rst", "guides/physics/index.rst", "guides/solving/find-roots-polynomial.md", "guides/solving/index.md", "guides/solving/reduce-inequalities-algebraically.md", "guides/solving/solve-diophantine-equation.md", "guides/solving/solve-equation-algebraically.md", "guides/solving/solve-matrix-equation.md", "guides/solving/solve-numerically.md", "guides/solving/solve-ode.md", "guides/solving/solve-system-of-equations-algebraically.md", "guides/solving/solving-guidance.md", "index.rst", "install.md", "modules/abc.rst", "modules/algebras.rst", "modules/assumptions/ask.rst", "modules/assumptions/assume.rst", "modules/assumptions/index.rst", "modules/assumptions/predicates.rst", "modules/assumptions/refine.rst", "modules/calculus/index.rst", "modules/categories.rst", "modules/codegen.rst", "modules/combinatorics/fp_groups.rst", "modules/combinatorics/galois.rst", "modules/combinatorics/graycode.rst", "modules/combinatorics/group_constructs.rst", "modules/combinatorics/group_numbers.rst", "modules/combinatorics/index.rst", "modules/combinatorics/named_groups.rst", "modules/combinatorics/partitions.rst", "modules/combinatorics/pc_groups.rst", "modules/combinatorics/perm_groups.rst", "modules/combinatorics/permutations.rst", "modules/combinatorics/polyhedron.rst", "modules/combinatorics/prufer.rst", "modules/combinatorics/subsets.rst", "modules/combinatorics/tensor_can.rst", "modules/combinatorics/testutil.rst", "modules/combinatorics/util.rst", "modules/concrete.rst", "modules/core.rst", "modules/crypto.rst", "modules/diffgeom.rst", "modules/discrete.rst", "modules/evalf.rst", "modules/functions/combinatorial.rst", "modules/functions/elementary.rst", "modules/functions/index.rst", "modules/functions/special.rst", "modules/geometry/curves.rst", "modules/geometry/ellipses.rst", "modules/geometry/entities.rst", "modules/geometry/index.rst", "modules/geometry/lines.rst", "modules/geometry/plane.rst", "modules/geometry/points.rst", "modules/geometry/polygons.rst", "modules/geometry/utils.rst", "modules/holonomic/about.rst", "modules/holonomic/convert.rst", "modules/holonomic/index.rst", "modules/holonomic/internal.rst", "modules/holonomic/operations.rst", "modules/holonomic/represent.rst", "modules/holonomic/uses.rst", "modules/integrals/g-functions.rst", "modules/integrals/index.rst", "modules/integrals/integrals.rst", "modules/interactive.rst", "modules/liealgebras/index.rst", "modules/logic.rst", "modules/matrices/dense.rst", "modules/matrices/expressions.rst", "modules/matrices/immutablematrices.rst", "modules/matrices/index.rst", "modules/matrices/kind.rst", "modules/matrices/matrices.rst", "modules/matrices/normalforms.rst", "modules/matrices/sparse.rst", "modules/matrices/sparsetools.rst", "modules/ntheory.rst", "modules/numeric-computation.rst", "modules/parsing.rst", "modules/physics/biomechanics/api/activation.rst", "modules/physics/biomechanics/api/curve.rst", "modules/physics/biomechanics/api/index.rst", "modules/physics/biomechanics/api/musculotendon.rst", "modules/physics/continuum_mechanics/beam.rst", "modules/physics/continuum_mechanics/beam_problems.rst", "modules/physics/continuum_mechanics/cable.rst", "modules/physics/continuum_mechanics/index.rst", "modules/physics/continuum_mechanics/truss.rst", "modules/physics/control/control.rst", "modules/physics/control/control_plots.rst", "modules/physics/control/index.rst", "modules/physics/control/lti.rst", "modules/physics/hep/index.rst", "modules/physics/hydrogen.rst", "modules/physics/matrices.rst", "modules/physics/mechanics/api/actuator.rst", "modules/physics/mechanics/api/deprecated_classes.rst", "modules/physics/mechanics/api/expr_manip.rst", "modules/physics/mechanics/api/index.rst", "modules/physics/mechanics/api/joint.rst", "modules/physics/mechanics/api/kane_lagrange.rst", "modules/physics/mechanics/api/linearize.rst", "modules/physics/mechanics/api/part_bod.rst", "modules/physics/mechanics/api/pathway.rst", "modules/physics/mechanics/api/printing.rst", "modules/physics/mechanics/api/system.rst", "modules/physics/mechanics/api/wrapping_geometry.rst", "modules/physics/optics/gaussopt.rst", "modules/physics/optics/index.rst", "modules/physics/optics/medium.rst", "modules/physics/optics/polarization.rst", "modules/physics/optics/utils.rst", "modules/physics/optics/waves.rst", "modules/physics/paulialgebra.rst", "modules/physics/qho_1d.rst", "modules/physics/quantum/anticommutator.rst", "modules/physics/quantum/cartesian.rst", "modules/physics/quantum/cg.rst", "modules/physics/quantum/circuitplot.rst", "modules/physics/quantum/commutator.rst", "modules/physics/quantum/constants.rst", "modules/physics/quantum/dagger.rst", "modules/physics/quantum/gate.rst", "modules/physics/quantum/grover.rst", "modules/physics/quantum/hilbert.rst", "modules/physics/quantum/index.rst", "modules/physics/quantum/innerproduct.rst", "modules/physics/quantum/operator.rst", "modules/physics/quantum/operatorset.rst", "modules/physics/quantum/piab.rst", "modules/physics/quantum/qapply.rst", "modules/physics/quantum/qft.rst", "modules/physics/quantum/qubit.rst", "modules/physics/quantum/represent.rst", "modules/physics/quantum/shor.rst", "modules/physics/quantum/spin.rst", "modules/physics/quantum/state.rst", "modules/physics/quantum/tensorproduct.rst", "modules/physics/secondquant.rst", "modules/physics/sho.rst", "modules/physics/units/dimensions.rst", "modules/physics/units/examples.rst", "modules/physics/units/index.rst", "modules/physics/units/philosophy.rst", "modules/physics/units/prefixes.rst", "modules/physics/units/quantities.rst", "modules/physics/units/unitsystem.rst", "modules/physics/vector/api/classes.rst", "modules/physics/vector/api/fieldfunctions.rst", "modules/physics/vector/api/functions.rst", "modules/physics/vector/api/index.rst", "modules/physics/vector/api/kinematics.rst", "modules/physics/vector/api/printing.rst", "modules/physics/wigner.rst", "modules/plotting.rst", "modules/polys/agca.rst", "modules/polys/basics.rst", "modules/polys/domainmatrix.rst", "modules/polys/domainsintro.rst", "modules/polys/domainsref.rst", "modules/polys/index.rst", "modules/polys/internals.rst", "modules/polys/literature.rst", "modules/polys/numberfields.rst", "modules/polys/reference.rst", "modules/polys/ringseries.rst", "modules/polys/solvers.rst", "modules/polys/wester.rst", "modules/printing.rst", "modules/rewriting.rst", "modules/series/formal.rst", "modules/series/fourier.rst", "modules/series/index.rst", "modules/series/limitseq.rst", "modules/series/sequences.rst", "modules/series/series.rst", "modules/sets.rst", "modules/simplify/fu.rst", "modules/simplify/hyperexpand.rst", "modules/simplify/index.rst", "modules/simplify/simplify.rst", "modules/solvers/diophantine.rst", "modules/solvers/index.rst", "modules/solvers/inequalities.rst", "modules/solvers/ode.rst", "modules/solvers/pde.rst", "modules/solvers/solvers.rst", "modules/solvers/solveset.rst", "modules/stats.rst", "modules/tensor/array.rst", "modules/tensor/array_expressions.rst", "modules/tensor/index.rst", "modules/tensor/index_methods.rst", "modules/tensor/indexed.rst", "modules/tensor/tensor.rst", "modules/tensor/toperators.rst", "modules/testing/index.rst", "modules/testing/pytest.rst", "modules/testing/randtest.rst", "modules/testing/runtests.rst", "modules/utilities/autowrap.rst", "modules/utilities/codegen.rst", "modules/utilities/decorator.rst", "modules/utilities/enumerative.rst", "modules/utilities/exceptions.rst", "modules/utilities/index.rst", "modules/utilities/iterables.rst", "modules/utilities/lambdify.rst", "modules/utilities/memoization.rst", "modules/utilities/misc.rst", "modules/utilities/source.rst", "modules/utilities/timeutils.rst", "modules/vector/api/classes.rst", "modules/vector/api/index.rst", "modules/vector/api/orienterclasses.rst", "modules/vector/api/vectorfunctions.rst", "modules/vector/basics.rst", "modules/vector/coordsys.rst", "modules/vector/examples.rst", "modules/vector/fields.rst", "modules/vector/index.rst", "modules/vector/intro.rst", "modules/vector/vector_integration.rst", "reference/index.rst", "reference/public/basics/index.rst", "reference/public/codegeneration/index.rst", "reference/public/logic/index.rst", "reference/public/matrices/index.rst", "reference/public/numbertheory/index.rst", "reference/public/physics/index.rst", "reference/public/topics/index.rst", "reference/public/utilities/index.rst", "tutorials/index.rst", "tutorials/intro-tutorial/basic_operations.rst", "tutorials/intro-tutorial/calculus.rst", "tutorials/intro-tutorial/features.rst", "tutorials/intro-tutorial/gotchas.rst", "tutorials/intro-tutorial/index.rst", "tutorials/intro-tutorial/intro.rst", "tutorials/intro-tutorial/manipulation.rst", "tutorials/intro-tutorial/matrices.rst", "tutorials/intro-tutorial/next.rst", "tutorials/intro-tutorial/preliminaries.rst", "tutorials/intro-tutorial/printing.rst", "tutorials/intro-tutorial/simplification.rst", "tutorials/intro-tutorial/solvers.rst", "tutorials/physics/biomechanics/biomechanical-model-example.rst", "tutorials/physics/biomechanics/index.rst", "tutorials/physics/index.rst", "tutorials/physics/mechanics/bicycle_example.rst", "tutorials/physics/mechanics/duffing-example.rst", "tutorials/physics/mechanics/four_bar_linkage_example.rst", "tutorials/physics/mechanics/index.rst", "tutorials/physics/mechanics/lin_pend_nonmin_example.rst", "tutorials/physics/mechanics/multi_degree_freedom_holonomic_system.rst", "tutorials/physics/mechanics/rollingdisc_example.rst", "tutorials/physics/mechanics/rollingdisc_example_kane.rst", "tutorials/physics/mechanics/rollingdisc_example_kane_constraints.rst", "tutorials/physics/mechanics/rollingdisc_example_lagrange.rst"], "indexentries": {"__abs__() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.__abs__", false]], "__add__() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.__add__", false]], "__add__() (sympy.polys.numberfields.modules.moduleelement method)": [[215, "sympy.polys.numberfields.modules.ModuleElement.__add__", false]], "__add__() (sympy.polys.numberfields.primes.primeideal method)": [[215, "sympy.polys.numberfields.primes.PrimeIdeal.__add__", false]], "__cacheit() (in module sympy.core.cache)": [[88, "sympy.core.cache.__cacheit", false]], "__call__() (sympy.polys.numberfields.modules.module method)": [[215, "sympy.polys.numberfields.modules.Module.__call__", false]], "__contains__() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.__contains__", false]], "__getitem__() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.__getitem__", false]], "__init__() (sympy.physics.mechanics.linearize.linearizer method)": [[153, "sympy.physics.mechanics.linearize.Linearizer.__init__", false]], "__init__() (sympy.polys.numberfields.modules.endomorphismring method)": [[215, "sympy.polys.numberfields.modules.EndomorphismRing.__init__", false]], "__init__() (sympy.polys.numberfields.modules.innerendomorphism method)": [[215, "sympy.polys.numberfields.modules.InnerEndomorphism.__init__", false]], "__init__() (sympy.polys.numberfields.modules.moduleelement method)": [[215, "sympy.polys.numberfields.modules.ModuleElement.__init__", false]], "__init__() (sympy.polys.numberfields.modules.moduleendomorphism method)": [[215, "sympy.polys.numberfields.modules.ModuleEndomorphism.__init__", false]], "__init__() (sympy.polys.numberfields.modules.modulehomomorphism method)": [[215, "sympy.polys.numberfields.modules.ModuleHomomorphism.__init__", false]], "__init__() (sympy.polys.numberfields.modules.powerbasis method)": [[215, "sympy.polys.numberfields.modules.PowerBasis.__init__", false]], "__init__() (sympy.polys.numberfields.modules.submodule method)": [[215, "sympy.polys.numberfields.modules.Submodule.__init__", false]], "__init__() (sympy.polys.numberfields.primes.primeideal method)": [[215, "sympy.polys.numberfields.primes.PrimeIdeal.__init__", false]], "__init__() (sympy.polys.numberfields.utilities.algintpowers method)": [[215, "sympy.polys.numberfields.utilities.AlgIntPowers.__init__", false]], "__init__() (sympy.vector.coordsysrect.coordsys3d method)": [[264, "sympy.vector.coordsysrect.CoordSys3D.__init__", false]], "__init__() (sympy.vector.orienters.axisorienter method)": [[266, "sympy.vector.orienters.AxisOrienter.__init__", false]], "__init__() (sympy.vector.orienters.bodyorienter method)": [[266, "sympy.vector.orienters.BodyOrienter.__init__", false]], "__init__() (sympy.vector.orienters.quaternionorienter method)": [[266, "sympy.vector.orienters.QuaternionOrienter.__init__", false]], "__init__() (sympy.vector.orienters.spaceorienter method)": [[266, "sympy.vector.orienters.SpaceOrienter.__init__", false]], "__len__() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.__len__", false]], "__mod__() (sympy.polys.numberfields.modules.moduleelement method)": [[215, "sympy.polys.numberfields.modules.ModuleElement.__mod__", false]], "__mul__() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.__mul__", false]], "__mul__() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.__mul__", false]], "__mul__() (sympy.polys.numberfields.modules.moduleelement method)": [[215, "sympy.polys.numberfields.modules.ModuleElement.__mul__", false]], "__mul__() (sympy.polys.numberfields.primes.primeideal method)": [[215, "sympy.polys.numberfields.primes.PrimeIdeal.__mul__", false]], "__new__() (sympy.combinatorics.perm_groups.permutationgroup static method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.__new__", false]], "__new__() (sympy.core.numbers.algebraicnumber static method)": [[88, "sympy.core.numbers.AlgebraicNumber.__new__", false]], "__pow__() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.__pow__", false]], "__weakref__ (sympy.combinatorics.perm_groups.permutationgroup attribute)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.__weakref__", false]], "__weakref__ (sympy.matrices.kind.matrixkind attribute)": [[123, "sympy.matrices.kind.MatrixKind.__weakref__", false]], "__weakref__ (sympy.matrices.matrixbase.matrixbase attribute)": [[124, "sympy.matrices.matrixbase.MatrixBase.__weakref__", false]], "_af_parity() (in module sympy.combinatorics.permutations)": [[80, "sympy.combinatorics.permutations._af_parity", false]], "_all_roots() (sympy.polys.rootoftools.complexrootof class method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._all_roots", false]], "_base_ordering() (in module sympy.combinatorics.util)": [[86, "sympy.combinatorics.util._base_ordering", false]], "_check_antecedents() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._check_antecedents", false]], "_check_antecedents_1() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._check_antecedents_1", false]], "_check_antecedents_inversion() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._check_antecedents_inversion", false]], "_check_cycles_alt_sym() (in module sympy.combinatorics.util)": [[86, "sympy.combinatorics.util._check_cycles_alt_sym", false]], "_cmp_perm_lists() (in module sympy.combinatorics.testutil)": [[85, "sympy.combinatorics.testutil._cmp_perm_lists", false]], "_coeffexpvalueerror": [[113, "sympy.integrals.meijerint._CoeffExpValueError", false]], "_complexes_index() (sympy.polys.rootoftools.complexrootof class method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._complexes_index", false]], "_complexes_sorted() (sympy.polys.rootoftools.complexrootof class method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._complexes_sorted", false]], "_condsimp() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._condsimp", false]], "_convert_poly_rat_alg() (in module sympy.holonomic.holonomic)": [[109, "sympy.holonomic.holonomic._convert_poly_rat_alg", false]], "_coset_representative() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup._coset_representative", false]], "_count_roots() (sympy.polys.rootoftools.complexrootof class method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._count_roots", false]], "_create_lookup_table() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._create_lookup_table", false]], "_create_table() (in module sympy.holonomic.holonomic)": [[109, "sympy.holonomic.holonomic._create_table", false]], "_csrtodok() (in module sympy.matrices.sparsetools)": [[127, "sympy.matrices.sparsetools._csrtodok", false]], "_default_settings (sympy.printing.smtlib.smtlibprinter attribute)": [[220, "sympy.printing.smtlib.SMTLibPrinter._default_settings", false]], "_diff_wrt (sympy.core.function.derivative property)": [[88, "sympy.core.function.Derivative._diff_wrt", false]], "_distinct_primes_lemma() (sympy.combinatorics.perm_groups.permutationgroup class method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup._distinct_primes_lemma", false]], "_distribute_gens_by_base() (in module sympy.combinatorics.util)": [[86, "sympy.combinatorics.util._distribute_gens_by_base", false]], "_doktocsr() (in module sympy.matrices.sparsetools)": [[127, "sympy.matrices.sparsetools._doktocsr", false]], "_dummy() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._dummy", false]], "_dummy_() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._dummy_", false]], "_ensure_complexes_init() (sympy.polys.rootoftools.complexrootof method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._ensure_complexes_init", false]], "_ensure_reals_init() (sympy.polys.rootoftools.complexrootof method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._ensure_reals_init", false]], "_eval_*": [[15, "term-_eval_", true]], "_eval_cond() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._eval_cond", false]], "_eval_evalf() (sympy.polys.rootoftools.complexrootof method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._eval_evalf", false]], "_eval_integral() (sympy.functions.elementary.piecewise.piecewise method)": [[94, "sympy.functions.elementary.piecewise.Piecewise._eval_integral", false]], "_eval_is_alt_sym_monte_carlo() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup._eval_is_alt_sym_monte_carlo", false]], "_eval_is_alt_sym_naive() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup._eval_is_alt_sym_naive", false]], "_eval_is_imaginary() (sympy.polys.rootoftools.complexrootof method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._eval_is_imaginary", false]], "_eval_is_real() (sympy.polys.rootoftools.complexrootof method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._eval_is_real", false]], "_exponents() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._exponents", false]], "_find_splitting_points() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._find_splitting_points", false]], "_flip_g() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._flip_g", false]], "_fourier_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms._fourier_transform", false]], "_functions() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._functions", false]], "_get_coeff_exp() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._get_coeff_exp", false]], "_get_complexes() (sympy.polys.rootoftools.complexrootof class method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._get_complexes", false]], "_get_complexes_sqf() (sympy.polys.rootoftools.complexrootof class method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._get_complexes_sqf", false]], "_get_interval() (sympy.polys.rootoftools.complexrootof method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._get_interval", false]], "_get_reals() (sympy.polys.rootoftools.complexrootof class method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._get_reals", false]], "_get_reals_sqf() (sympy.polys.rootoftools.complexrootof class method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._get_reals_sqf", false]], "_get_roots() (sympy.polys.rootoftools.complexrootof class method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._get_roots", false]], "_guess_expansion() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._guess_expansion", false]], "_handle_integral() (in module sympy.solvers.ode.ode)": [[236, "sympy.solvers.ode.ode._handle_Integral", false]], "_handle_precomputed_bsgs() (in module sympy.combinatorics.util)": [[86, "sympy.combinatorics.util._handle_precomputed_bsgs", false]], "_indexed_root() (sympy.polys.rootoftools.complexrootof class method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._indexed_root", false]], "_inflate_fox_h() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._inflate_fox_h", false]], "_inflate_g() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._inflate_g", false]], "_int0oo() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._int0oo", false]], "_int0oo_1() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._int0oo_1", false]], "_int_inversion() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._int_inversion", false]], "_is_analytic() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._is_analytic", false]], "_is_exponential() (in module sympy.solvers.solveset)": [[239, "sympy.solvers.solveset._is_exponential", false]], "_is_logarithmic() (in module sympy.solvers.solveset)": [[239, "sympy.solvers.solveset._is_logarithmic", false]], "_linear_2eq_order1_type6() (in module sympy.solvers.ode.ode)": [[236, "sympy.solvers.ode.ode._linear_2eq_order1_type6", false]], "_linear_2eq_order1_type7() (in module sympy.solvers.ode.ode)": [[236, "sympy.solvers.ode.ode._linear_2eq_order1_type7", false]], "_meijerint_definite_2() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._meijerint_definite_2", false]], "_meijerint_definite_3() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._meijerint_definite_3", false]], "_meijerint_definite_4() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._meijerint_definite_4", false]], "_meijerint_indefinite_1() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._meijerint_indefinite_1", false]], "_modgcd_multivariate_p() (in module sympy.polys.modulargcd)": [[213, "sympy.polys.modulargcd._modgcd_multivariate_p", false]], "_mul_args() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._mul_args", false]], "_mul_as_two_parts() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._mul_as_two_parts", false]], "_my_principal_branch() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._my_principal_branch", false]], "_mytype() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._mytype", false]], "_naive_list_centralizer() (in module sympy.combinatorics.testutil)": [[85, "sympy.combinatorics.testutil._naive_list_centralizer", false]], "_new() (sympy.polys.rootoftools.complexrootof class method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._new", false]], "_nonlinear_2eq_order1_type1() (in module sympy.solvers.ode.ode)": [[236, "sympy.solvers.ode.ode._nonlinear_2eq_order1_type1", false]], "_nonlinear_2eq_order1_type2() (in module sympy.solvers.ode.ode)": [[236, "sympy.solvers.ode.ode._nonlinear_2eq_order1_type2", false]], "_nonlinear_2eq_order1_type3() (in module sympy.solvers.ode.ode)": [[236, "sympy.solvers.ode.ode._nonlinear_2eq_order1_type3", false]], "_nonlinear_2eq_order1_type4() (in module sympy.solvers.ode.ode)": [[236, "sympy.solvers.ode.ode._nonlinear_2eq_order1_type4", false]], "_nonlinear_2eq_order1_type5() (in module sympy.solvers.ode.ode)": [[236, "sympy.solvers.ode.ode._nonlinear_2eq_order1_type5", false]], "_nonlinear_3eq_order1_type1() (in module sympy.solvers.ode.ode)": [[236, "sympy.solvers.ode.ode._nonlinear_3eq_order1_type1", false]], "_nonlinear_3eq_order1_type2() (in module sympy.solvers.ode.ode)": [[236, "sympy.solvers.ode.ode._nonlinear_3eq_order1_type2", false]], "_nonlinear_3eq_order1_type3() (in module sympy.solvers.ode.ode)": [[236, "sympy.solvers.ode.ode._nonlinear_3eq_order1_type3", false]], "_nonlinear_3eq_order1_type4() (in module sympy.solvers.ode.ode)": [[236, "sympy.solvers.ode.ode._nonlinear_3eq_order1_type4", false]], "_nonlinear_3eq_order1_type5() (in module sympy.solvers.ode.ode)": [[236, "sympy.solvers.ode.ode._nonlinear_3eq_order1_type5", false]], "_orbits_transversals_from_bsgs() (in module sympy.combinatorics.util)": [[86, "sympy.combinatorics.util._orbits_transversals_from_bsgs", false]], "_p_elements_group() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup._p_elements_group", false]], "_postprocess_root() (sympy.polys.rootoftools.complexrootof class method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._postprocess_root", false]], "_preprocess_roots() (sympy.polys.rootoftools.complexrootof class method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._preprocess_roots", false]], "_print() (sympy.printing.printer.printer method)": [[220, "sympy.printing.printer.Printer._print", false]], "_randint() (in module sympy.core.random)": [[88, "sympy.core.random._randint", false]], "_random_pr_init() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup._random_pr_init", false]], "_randrange() (in module sympy.core.random)": [[88, "sympy.core.random._randrange", false]], "_real_roots() (sympy.polys.rootoftools.complexrootof class method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._real_roots", false]], "_reals_index() (sympy.polys.rootoftools.complexrootof class method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._reals_index", false]], "_reals_sorted() (sympy.polys.rootoftools.complexrootof class method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._reals_sorted", false]], "_refine_complexes() (sympy.polys.rootoftools.complexrootof class method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._refine_complexes", false]], "_remove_gens() (in module sympy.combinatorics.util)": [[86, "sympy.combinatorics.util._remove_gens", false]], "_reset() (sympy.polys.rootoftools.complexrootof method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._reset", false]], "_rewrite1() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._rewrite1", false]], "_rewrite2() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._rewrite2", false]], "_rewrite_inversion() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._rewrite_inversion", false]], "_rewrite_saxena() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._rewrite_saxena", false]], "_rewrite_saxena_1() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._rewrite_saxena_1", false]], "_rewrite_single() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._rewrite_single", false]], "_roots_trivial() (sympy.polys.rootoftools.complexrootof class method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._roots_trivial", false]], "_set_interval() (sympy.polys.rootoftools.complexrootof method)": [[216, "sympy.polys.rootoftools.ComplexRootOf._set_interval", false]], "_solve_exponential() (in module sympy.solvers.solveset)": [[239, "sympy.solvers.solveset._solve_exponential", false]], "_solve_lin_sys() (in module sympy.polys.solvers)": [[218, "sympy.polys.solvers._solve_lin_sys", false]], "_solve_lin_sys_component() (in module sympy.polys.solvers)": [[218, "sympy.polys.solvers._solve_lin_sys_component", false]], "_solve_logarithm() (in module sympy.solvers.solveset)": [[239, "sympy.solvers.solveset._solve_logarithm", false]], "_sort_variable_count() (sympy.core.function.derivative class method)": [[88, "sympy.core.function.Derivative._sort_variable_count", false]], "_split_mul() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._split_mul", false]], "_strip() (in module sympy.combinatorics.util)": [[86, "sympy.combinatorics.util._strip", false]], "_strong_gens_from_distr() (in module sympy.combinatorics.util)": [[86, "sympy.combinatorics.util._strong_gens_from_distr", false]], "_sylow_alt_sym() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup._sylow_alt_sym", false]], "_tan1() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series._tan1", false]], "_tensormanager (class in sympy.tensor.tensor)": [[246, "sympy.tensor.tensor._TensorManager", false]], "_transolve() (in module sympy.solvers.solveset)": [[239, "sympy.solvers.solveset._transolve", false]], "_union_find_merge() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup._union_find_merge", false]], "_union_find_rep() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup._union_find_rep", false]], "_verify() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup._verify", false]], "_verify_bsgs() (in module sympy.combinatorics.testutil)": [[85, "sympy.combinatorics.testutil._verify_bsgs", false]], "_verify_centralizer() (in module sympy.combinatorics.testutil)": [[85, "sympy.combinatorics.testutil._verify_centralizer", false]], "_verify_normal_closure() (in module sympy.combinatorics.testutil)": [[85, "sympy.combinatorics.testutil._verify_normal_closure", false]], "a (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.a", false]], "a (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.a", false]], "a (sympy.physics.optics.gaussopt.raytransfermatrix property)": [[159, "sympy.physics.optics.gaussopt.RayTransferMatrix.A", false]], "a (sympy.physics.quantum.shor.cmod property)": [[186, "sympy.physics.quantum.shor.CMod.a", false]], "a1pt_theory() (sympy.physics.vector.point.point method)": [[203, "sympy.physics.vector.point.Point.a1pt_theory", false]], "a2idx() (in module sympy.matrices.matrixbase)": [[124, "sympy.matrices.matrixbase.a2idx", false]], "a2pt_theory() (sympy.physics.vector.point.point method)": [[203, "sympy.physics.vector.point.Point.a2pt_theory", false]], "a4_in_s6() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.A4_in_S6", false]], "a4xc2() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.A4xC2", false]], "a_interval (sympy.sets.fancysets.complexregion property)": [[228, "sympy.sets.fancysets.ComplexRegion.a_interval", false]], "abbrev (sympy.physics.units.quantities.quantity property)": [[197, "sympy.physics.units.quantities.Quantity.abbrev", false]], "abelian_invariants() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.abelian_invariants", false]], "abeliangroup() (in module sympy.combinatorics.named_groups)": [[76, "sympy.combinatorics.named_groups.AbelianGroup", false]], "above() (sympy.printing.pretty.stringpict.stringpict method)": [[220, "sympy.printing.pretty.stringpict.stringPict.above", false]], "abs (class in sympy.functions.elementary.complexes)": [[94, "sympy.functions.elementary.complexes.Abs", false]], "abs() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.abs", false]], "abs() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.abs", false]], "abs() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.abs", false]], "absorbing_probabilities() (sympy.stats.discretemarkovchain method)": [[240, "sympy.stats.DiscreteMarkovChain.absorbing_probabilities", false]], "abundance() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.abundance", false]], "acc() (sympy.physics.vector.point.point method)": [[203, "sympy.physics.vector.point.Point.acc", false]], "accepted_latex_functions (in module sympy.printing.latex)": [[220, "sympy.printing.latex.accepted_latex_functions", false]], "acos (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.acos", false]], "acosh (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.acosh", false]], "acot (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.acot", false]], "acoth (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.acoth", false]], "acsc (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.acsc", false]], "acsch (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.acsch", false]], "activation (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.activation", false]], "activation (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.activation", false]], "activation_dynamics (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.activation_dynamics", false]], "activation_time_constant (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.activation_time_constant", false]], "activationbase (class in sympy.physics.biomechanics.activation)": [[131, "sympy.physics.biomechanics.activation.ActivationBase", false]], "actuatorbase (class in sympy.physics.mechanics.actuator)": [[147, "sympy.physics.mechanics.actuator.ActuatorBase", false]], "actuators (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.actuators", false]], "add (class in sympy.core.add)": [[88, "sympy.core.add.Add", false]], "add() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.add", false]], "add() (sympy.assumptions.assume.assumptionscontext method)": [[63, "sympy.assumptions.assume.AssumptionsContext.add", false]], "add() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.add", false]], "add() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.add", false]], "add() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.add", false]], "add() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.add", false]], "add() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.add", false]], "add() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.add", false]], "add() (sympy.polys.numberfields.modules.submodule method)": [[215, "sympy.polys.numberfields.modules.Submodule.add", false]], "add() (sympy.polys.polyclasses.dmf method)": [[211, "sympy.polys.polyclasses.DMF.add", false]], "add() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.add", false]], "add() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.add", false]], "add() (sympy.polys.rings.polyring method)": [[211, "sympy.polys.rings.PolyRing.add", false]], "add_actuators() (sympy.physics.mechanics.system.system method)": [[157, "sympy.physics.mechanics.system.System.add_actuators", false]], "add_as_roots() (sympy.liealgebras.root_system.rootsystem method)": [[117, "sympy.liealgebras.root_system.RootSystem.add_as_roots", false]], "add_auxiliary_speeds() (sympy.physics.mechanics.system.system method)": [[157, "sympy.physics.mechanics.system.System.add_auxiliary_speeds", false]], "add_bodies() (sympy.physics.mechanics.system.system method)": [[157, "sympy.physics.mechanics.system.System.add_bodies", false]], "add_coordinates() (sympy.physics.mechanics.system.system method)": [[157, "sympy.physics.mechanics.system.System.add_coordinates", false]], "add_gens() (sympy.polys.rings.polyring method)": [[211, "sympy.polys.rings.PolyRing.add_gens", false]], "add_ground() (sympy.polys.polyclasses.anp method)": [[211, "sympy.polys.polyclasses.ANP.add_ground", false]], "add_ground() (sympy.polys.polyclasses.dmf method)": [[211, "sympy.polys.polyclasses.DMF.add_ground", false]], "add_ground() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.add_ground", false]], "add_ground() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.add_ground", false]], "add_holonomic_constraints() (sympy.physics.mechanics.system.system method)": [[157, "sympy.physics.mechanics.system.System.add_holonomic_constraints", false]], "add_joints() (sympy.physics.mechanics.system.system method)": [[157, "sympy.physics.mechanics.system.System.add_joints", false]], "add_kdes() (sympy.physics.mechanics.system.system method)": [[157, "sympy.physics.mechanics.system.System.add_kdes", false]], "add_loads() (sympy.physics.mechanics.system.system method)": [[157, "sympy.physics.mechanics.system.System.add_loads", false]], "add_member() (sympy.physics.continuum_mechanics.truss.truss method)": [[139, "sympy.physics.continuum_mechanics.truss.Truss.add_member", false]], "add_node() (sympy.physics.continuum_mechanics.truss.truss method)": [[139, "sympy.physics.continuum_mechanics.truss.Truss.add_node", false]], "add_nonholonomic_constraints() (sympy.physics.mechanics.system.system method)": [[157, "sympy.physics.mechanics.system.System.add_nonholonomic_constraints", false]], "add_simple_roots() (sympy.liealgebras.root_system.rootsystem method)": [[117, "sympy.liealgebras.root_system.RootSystem.add_simple_roots", false]], "add_speeds() (sympy.physics.mechanics.system.system method)": [[157, "sympy.physics.mechanics.system.System.add_speeds", false]], "adj_det() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.adj_det", false]], "adj_poly_det() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.adj_poly_det", false]], "adjoint() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.adjoint", false]], "adjugate() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.adjugate", false]], "adjugate() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.adjugate", false]], "aesara_code() (in module sympy.printing.aesaracode)": [[220, "sympy.printing.aesaracode.aesara_code", false]], "aesara_function() (in module sympy.printing.aesaracode)": [[220, "sympy.printing.aesaracode.aesara_function", false]], "aesaraprinter (class in sympy.printing.aesaracode)": [[220, "sympy.printing.aesaracode.AesaraPrinter", false]], "affine_rank() (sympy.geometry.point.point static method)": [[103, "sympy.geometry.point.Point.affine_rank", false]], "airyai (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.airyai", false]], "airyaiprime (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.airyaiprime", false]], "airybase (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.AiryBase", false]], "airybi (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.airybi", false]], "airybiprime (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.airybiprime", false]], "alg_con (sympy.physics.mechanics.system.symbolicsystem property)": [[157, "sympy.physics.mechanics.system.SymbolicSystem.alg_con", false]], "alg_field_from_poly() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.alg_field_from_poly", false]], "algebraic": [[88, "term-algebraic", true]], "algebraic_field() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.algebraic_field", false]], "algebraic_field() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.algebraic_field", false]], "algebraic_field() (sympy.polys.domains.integerring method)": [[211, "sympy.polys.domains.IntegerRing.algebraic_field", false]], "algebraic_field() (sympy.polys.domains.rationalfield method)": [[211, "sympy.polys.domains.RationalField.algebraic_field", false]], "algebraicfield (class in sympy.polys.domains)": [[211, "sympy.polys.domains.AlgebraicField", false]], "algebraichandler (sympy.assumptions.predicates.sets.algebraicpredicate attribute)": [[65, "sympy.assumptions.predicates.sets.AlgebraicPredicate.AlgebraicHandler", false]], "algebraicnumber (class in sympy.core.numbers)": [[88, "sympy.core.numbers.AlgebraicNumber", false]], "algebraicpredicate (class in sympy.assumptions.predicates.sets)": [[65, "sympy.assumptions.predicates.sets.AlgebraicPredicate", false]], "algintpowers (class in sympy.polys.numberfields.utilities)": [[215, "sympy.polys.numberfields.utilities.AlgIntPowers", false]], "alignof() (in module sympy.codegen.cnodes)": [[69, "sympy.codegen.cnodes.alignof", false]], "all_coeffs() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.all_coeffs", false]], "all_coeffs() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.all_coeffs", false]], "all_monoms() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.all_monoms", false]], "all_monoms() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.all_monoms", false]], "all_roots() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.all_roots", false]], "all_roots() (sympy.liealgebras.root_system.rootsystem method)": [[117, "sympy.liealgebras.root_system.RootSystem.all_roots", false]], "all_roots() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.all_roots", false]], "all_roots() (sympy.polys.rootoftools.complexrootof class method)": [[216, "sympy.polys.rootoftools.ComplexRootOf.all_roots", false]], "all_terms() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.all_terms", false]], "all_terms() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.all_terms", false]], "allhints (in module sympy.solvers.ode)": [[236, "sympy.solvers.ode.allhints", false]], "allocated() (in module sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.allocated", false]], "almosteq() (sympy.polys.domains.complexfield method)": [[211, "sympy.polys.domains.ComplexField.almosteq", false]], "almosteq() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.almosteq", false]], "almosteq() (sympy.polys.domains.realfield method)": [[211, "sympy.polys.domains.RealField.almosteq", false]], "almosteq() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.almosteq", false]], "almostlinear (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.AlmostLinear", false]], "alpha_opt (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.alpha_opt", false]], "alternating() (sympy.combinatorics.generators method)": [[80, "sympy.combinatorics.generators.alternating", false]], "alternatinggroup() (in module sympy.combinatorics.named_groups)": [[76, "sympy.combinatorics.named_groups.AlternatingGroup", false]], "altitudes (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.altitudes", false]], "ambient_dimension (sympy.geometry.curve.curve property)": [[97, "sympy.geometry.curve.Curve.ambient_dimension", false]], "ambient_dimension (sympy.geometry.entity.geometryentity property)": [[99, "sympy.geometry.entity.GeometryEntity.ambient_dimension", false]], "ambient_dimension (sympy.geometry.line.linearentity property)": [[101, "sympy.geometry.line.LinearEntity.ambient_dimension", false]], "ambient_dimension (sympy.geometry.point.point property)": [[103, "sympy.geometry.point.Point.ambient_dimension", false]], "amplitude (sympy.physics.optics.waves.twave property)": [[164, "sympy.physics.optics.waves.TWave.amplitude", false]], "an (sympy.functions.special.hyper.meijerg property)": [[96, "sympy.functions.special.hyper.meijerg.an", false]], "analytic_func() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.analytic_func", false]], "ancestors() (sympy.polys.numberfields.modules.module method)": [[215, "sympy.polys.numberfields.modules.Module.ancestors", false]], "and (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.And", false]], "andre (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.andre", false]], "andre_poly() (in module sympy.polys.appellseqs)": [[216, "sympy.polys.appellseqs.andre_poly", false]], "anf_coeffs() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.anf_coeffs", false]], "anfform() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.ANFform", false]], "ang_acc_in() (sympy.physics.vector.frame.referenceframe method)": [[199, "sympy.physics.vector.frame.ReferenceFrame.ang_acc_in", false]], "ang_vel_in() (sympy.physics.mechanics.body.body method)": [[148, "sympy.physics.mechanics.body.Body.ang_vel_in", false]], "ang_vel_in() (sympy.physics.vector.frame.referenceframe method)": [[199, "sympy.physics.vector.frame.ReferenceFrame.ang_vel_in", false]], "angle (sympy.physics.optics.gaussopt.geometricray property)": [[159, "sympy.physics.optics.gaussopt.GeometricRay.angle", false]], "angle() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.angle", false]], "angle_between() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.angle_between", false]], "angle_between() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.angle_between", false]], "angle_between() (sympy.physics.vector.vector.vector method)": [[199, "sympy.physics.vector.vector.Vector.angle_between", false]], "angles (sympy.geometry.polygon.polygon property)": [[104, "sympy.geometry.polygon.Polygon.angles", false]], "angles (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.angles", false]], "angular_deflection() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.angular_deflection", false]], "angular_momentum() (in module sympy.physics.mechanics.functions)": [[154, "sympy.physics.mechanics.functions.angular_momentum", false]], "angular_momentum() (sympy.physics.mechanics.body.body method)": [[148, "sympy.physics.mechanics.body.Body.angular_momentum", false]], "angular_momentum() (sympy.physics.mechanics.particle.particle method)": [[154, "sympy.physics.mechanics.particle.Particle.angular_momentum", false]], "angular_momentum() (sympy.physics.mechanics.rigidbody.rigidbody method)": [[154, "sympy.physics.mechanics.rigidbody.RigidBody.angular_momentum", false]], "angular_velocity (sympy.physics.optics.waves.twave property)": [[164, "sympy.physics.optics.waves.TWave.angular_velocity", false]], "annihilateboson (class in sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.AnnihilateBoson", false]], "annihilatefermion (class in sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.AnnihilateFermion", false]], "annotated() (in module sympy.printing.pretty.pretty_symbology)": [[220, "sympy.printing.pretty.pretty_symbology.annotated", false]], "annotations (sympy.plotting.plot.plot property)": [[206, "sympy.plotting.plot.Plot.annotations", false]], "anp (class in sympy.polys.polyclasses)": [[211, "sympy.polys.polyclasses.ANP", false]], "anticommutator (class in sympy.physics.quantum.anticommutator)": [[167, "sympy.physics.quantum.anticommutator.AntiCommutator", false]], "antiderivative": [[15, "term-Antiderivative", true]], "antidivisor_count() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.antidivisor_count", false]], "antidivisors() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.antidivisors", false]], "antihermitian": [[88, "term-antihermitian", true]], "antihermitianpredicate (class in sympy.assumptions.predicates.sets)": [[65, "sympy.assumptions.predicates.sets.AntihermitianPredicate", false]], "antisymmetrictensor (class in sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.AntiSymmetricTensor", false]], "aother (sympy.functions.special.hyper.meijerg property)": [[96, "sympy.functions.special.hyper.meijerg.aother", false]], "ap (sympy.functions.special.hyper.hyper property)": [[96, "sympy.functions.special.hyper.hyper.ap", false]], "ap (sympy.functions.special.hyper.meijerg property)": [[96, "sympy.functions.special.hyper.meijerg.ap", false]], "apart() (in module sympy.polys.partfrac)": [[216, "sympy.polys.partfrac.apart", false]], "apart() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.apart", false]], "apart_list() (in module sympy.polys.partfrac)": [[216, "sympy.polys.partfrac.apart_list", false]], "apoapsis (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.apoapsis", false]], "apothem (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.apothem", false]], "appellf1 (class in sympy.functions.special.hyper)": [[96, "sympy.functions.special.hyper.appellf1", false]], "append() (sympy.plotting.plot.plot method)": [[206, "sympy.plotting.plot.Plot.append", false]], "applied_loads (sympy.physics.continuum_mechanics.beam.beam property)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.applied_loads", false]], "appliedpredicate (class in sympy.assumptions.assume)": [[63, "sympy.assumptions.assume.AppliedPredicate", false]], "apply() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.apply", false]], "apply() (sympy.printing.pretty.stringpict.prettyform static method)": [[220, "sympy.printing.pretty.stringpict.prettyForm.apply", false]], "apply() (sympy.simplify.epathtools.epath method)": [[232, "sympy.simplify.epathtools.EPath.apply", false]], "apply_finite_diff() (in module sympy.calculus.finite_diff)": [[67, "sympy.calculus.finite_diff.apply_finite_diff", false]], "apply_force() (sympy.physics.mechanics.body.body method)": [[148, "sympy.physics.mechanics.body.Body.apply_force", false]], "apply_grover() (in module sympy.physics.quantum.grover)": [[175, "sympy.physics.quantum.grover.apply_grover", false]], "apply_length() (sympy.physics.continuum_mechanics.cable.cable method)": [[137, "sympy.physics.continuum_mechanics.cable.Cable.apply_length", false]], "apply_load() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.apply_load", false]], "apply_load() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.apply_load", false]], "apply_load() (sympy.physics.continuum_mechanics.cable.cable method)": [[137, "sympy.physics.continuum_mechanics.cable.Cable.apply_load", false]], "apply_load() (sympy.physics.continuum_mechanics.truss.truss method)": [[139, "sympy.physics.continuum_mechanics.truss.Truss.apply_load", false]], "apply_moment_load() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.apply_moment_load", false]], "apply_operator() (sympy.physics.secondquant.annihilateboson method)": [[190, "sympy.physics.secondquant.AnnihilateBoson.apply_operator", false]], "apply_operator() (sympy.physics.secondquant.annihilatefermion method)": [[190, "sympy.physics.secondquant.AnnihilateFermion.apply_operator", false]], "apply_operator() (sympy.physics.secondquant.createboson method)": [[190, "sympy.physics.secondquant.CreateBoson.apply_operator", false]], "apply_operator() (sympy.physics.secondquant.createfermion method)": [[190, "sympy.physics.secondquant.CreateFermion.apply_operator", false]], "apply_operators() (in module sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.apply_operators", false]], "apply_rotation_hinge() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.apply_rotation_hinge", false]], "apply_sliding_hinge() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.apply_sliding_hinge", false]], "apply_support() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.apply_support", false]], "apply_support() (sympy.physics.continuum_mechanics.truss.truss method)": [[139, "sympy.physics.continuum_mechanics.truss.Truss.apply_support", false]], "apply_torque() (sympy.physics.mechanics.body.body method)": [[148, "sympy.physics.mechanics.body.Body.apply_torque", false]], "apply_uniform_gravity() (sympy.physics.mechanics.system.system method)": [[157, "sympy.physics.mechanics.system.System.apply_uniform_gravity", false]], "applyfunc() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.applyfunc", false]], "applyfunc() (sympy.physics.vector.dyadic.dyadic method)": [[199, "sympy.physics.vector.dyadic.Dyadic.applyfunc", false]], "applyfunc() (sympy.physics.vector.vector.vector method)": [[199, "sympy.physics.vector.vector.Vector.applyfunc", false]], "applyfunc() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.applyfunc", false]], "approximation() (sympy.core.numbers.numbersymbol method)": [[88, "sympy.core.numbers.NumberSymbol.approximation", false]], "arbitrary_point() (sympy.geometry.curve.curve method)": [[97, "sympy.geometry.curve.Curve.arbitrary_point", false]], "arbitrary_point() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.arbitrary_point", false]], "arbitrary_point() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.arbitrary_point", false]], "arbitrary_point() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.arbitrary_point", false]], "arbitrary_point() (sympy.geometry.polygon.polygon method)": [[104, "sympy.geometry.polygon.Polygon.arbitrary_point", false]], "arc_coplanar() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.arc_coplanar", false]], "arcsin() (in module sympy.stats)": [[240, "sympy.stats.Arcsin", false]], "are_collinear() (sympy.geometry.point.point3d static method)": [[103, "sympy.geometry.point.Point3D.are_collinear", false]], "are_concurrent() (sympy.geometry.line.linearentity static method)": [[101, "sympy.geometry.line.LinearEntity.are_concurrent", false]], "are_concurrent() (sympy.geometry.plane.plane static method)": [[102, "sympy.geometry.plane.Plane.are_concurrent", false]], "are_coplanar() (sympy.geometry.point.point class method)": [[103, "sympy.geometry.point.Point.are_coplanar", false]], "are_similar() (in module sympy.geometry.util)": [[105, "sympy.geometry.util.are_similar", false]], "area (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.area", false]], "area (sympy.geometry.polygon.polygon property)": [[104, "sympy.geometry.polygon.Polygon.area", false]], "area (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.area", false]], "area (sympy.physics.continuum_mechanics.beam.beam property)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.area", false]], "area (sympy.physics.continuum_mechanics.beam.beam3d property)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.area", false]], "arg (class in sympy.functions.elementary.complexes)": [[94, "sympy.functions.elementary.complexes.arg", false]], "arg (sympy.assumptions.assume.appliedpredicate property)": [[63, "sympy.assumptions.assume.AppliedPredicate.arg", false]], "args": [[15, "term-args", true]], "args (sympy.core.basic.basic property)": [[88, "sympy.core.basic.Basic.args", false]], "args (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.args", false]], "args_cnc() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.args_cnc", false]], "argument (class in sympy.utilities.codegen)": [[253, "sympy.utilities.codegen.Argument", false]], "argument (sympy.functions.special.bessel.besselbase property)": [[96, "sympy.functions.special.bessel.BesselBase.argument", false]], "argument (sympy.functions.special.hyper.hyper property)": [[96, "sympy.functions.special.hyper.hyper.argument", false]], "argument (sympy.functions.special.hyper.meijerg property)": [[96, "sympy.functions.special.hyper.meijerg.argument", false]], "arguments (sympy.assumptions.assume.appliedpredicate property)": [[63, "sympy.assumptions.assume.AppliedPredicate.arguments", false]], "array() (in module sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.array", false]], "array_form (sympy.combinatorics.permutations.permutation property)": [[80, "sympy.combinatorics.permutations.Permutation.array_form", false]], "array_form (sympy.combinatorics.polyhedron.polyhedron property)": [[81, "sympy.combinatorics.polyhedron.Polyhedron.array_form", false]], "arrayconstructor (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.ArrayConstructor", false]], "arraycontraction (class in sympy.tensor.array.expressions)": [[242, "sympy.tensor.array.expressions.ArrayContraction", false]], "arraydiagonal (class in sympy.tensor.array.expressions)": [[242, "sympy.tensor.array.expressions.ArrayDiagonal", false]], "arraytensorproduct (class in sympy.tensor.array.expressions)": [[242, "sympy.tensor.array.expressions.ArrayTensorProduct", false]], "arrowstringdescription (class in sympy.categories.diagram_drawing)": [[68, "sympy.categories.diagram_drawing.ArrowStringDescription", false]], "as_algebraicfield() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianRationalField.as_AlgebraicField", false]], "as_base_exp() (sympy.core.function.function method)": [[88, "sympy.core.function.Function.as_base_exp", false]], "as_base_exp() (sympy.core.power.pow method)": [[88, "sympy.core.power.Pow.as_base_exp", false]], "as_base_exp() (sympy.functions.elementary.exponential.log method)": [[94, "sympy.functions.elementary.exponential.log.as_base_exp", false]], "as_coeff_add() (sympy.core.add.add method)": [[88, "sympy.core.add.Add.as_coeff_Add", false], [88, "sympy.core.add.Add.as_coeff_add", false]], "as_coeff_add() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_coeff_Add", false], [88, "sympy.core.expr.Expr.as_coeff_add", false]], "as_coeff_add() (sympy.core.numbers.number method)": [[88, "sympy.core.numbers.Number.as_coeff_Add", false]], "as_coeff_add() (sympy.core.numbers.rational method)": [[88, "sympy.core.numbers.Rational.as_coeff_Add", false]], "as_coeff_exponent() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_coeff_exponent", false]], "as_coeff_mul() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_coeff_Mul", false], [88, "sympy.core.expr.Expr.as_coeff_mul", false]], "as_coeff_mul() (sympy.core.mul.mul method)": [[88, "sympy.core.mul.Mul.as_coeff_Mul", false]], "as_coeff_mul() (sympy.core.numbers.number method)": [[88, "sympy.core.numbers.Number.as_coeff_Mul", false]], "as_coeff_mul() (sympy.core.numbers.rational method)": [[88, "sympy.core.numbers.Rational.as_coeff_Mul", false]], "as_coeff_mul() (sympy.matrices.expressions.matrixexpr method)": [[120, "sympy.matrices.expressions.MatrixExpr.as_coeff_Mul", false]], "as_coefficient() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_coefficient", false]], "as_coefficients_dict() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_coefficients_dict", false]], "as_content_primitive() (sympy.core.add.add method)": [[88, "sympy.core.add.Add.as_content_primitive", false]], "as_content_primitive() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.as_content_primitive", false]], "as_content_primitive() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_content_primitive", false]], "as_content_primitive() (sympy.core.mul.mul method)": [[88, "sympy.core.mul.Mul.as_content_primitive", false]], "as_content_primitive() (sympy.core.numbers.rational method)": [[88, "sympy.core.numbers.Rational.as_content_primitive", false]], "as_content_primitive() (sympy.core.power.pow method)": [[88, "sympy.core.power.Pow.as_content_primitive", false]], "as_declaration() (sympy.codegen.ast.variable method)": [[69, "sympy.codegen.ast.Variable.as_Declaration", false]], "as_dict() (sympy.combinatorics.partitions.integerpartition method)": [[77, "sympy.combinatorics.partitions.IntegerPartition.as_dict", false]], "as_dict() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.as_dict", false]], "as_dummy() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.as_dummy", false]], "as_explicit() (sympy.matrices.expressions.matrixexpr method)": [[120, "sympy.matrices.expressions.MatrixExpr.as_explicit", false]], "as_expr() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_expr", false]], "as_expr() (sympy.core.numbers.algebraicnumber method)": [[88, "sympy.core.numbers.AlgebraicNumber.as_expr", false]], "as_expr() (sympy.polys.monomials.monomial method)": [[216, "sympy.polys.monomials.Monomial.as_expr", false]], "as_expr() (sympy.polys.numberfields.modules.powerbasiselement method)": [[215, "sympy.polys.numberfields.modules.PowerBasisElement.as_expr", false]], "as_expr() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.as_expr", false]], "as_expr_set_pairs() (sympy.functions.elementary.piecewise.piecewise method)": [[94, "sympy.functions.elementary.piecewise.Piecewise.as_expr_set_pairs", false]], "as_ferrers() (sympy.combinatorics.partitions.integerpartition method)": [[77, "sympy.combinatorics.partitions.IntegerPartition.as_ferrers", false]], "as_finite_difference() (sympy.core.function.derivative method)": [[88, "sympy.core.function.Derivative.as_finite_difference", false]], "as_immutable() (sympy.matrices.dense.densematrix method)": [[119, "sympy.matrices.dense.DenseMatrix.as_immutable", false]], "as_independent() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_independent", false]], "as_int() (in module sympy.utilities.misc)": [[261, "sympy.utilities.misc.as_int", false]], "as_leading_term() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_leading_term", false]], "as_list() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.as_list", false]], "as_mutable() (sympy.matrices.dense.densematrix method)": [[119, "sympy.matrices.dense.DenseMatrix.as_mutable", false]], "as_mutable() (sympy.matrices.expressions.matrixexpr method)": [[120, "sympy.matrices.expressions.MatrixExpr.as_mutable", false]], "as_numer_denom() (sympy.core.add.add method)": [[88, "sympy.core.add.Add.as_numer_denom", false]], "as_numer_denom() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_numer_denom", false]], "as_ordered_factors() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_ordered_factors", false]], "as_ordered_factors() (sympy.core.mul.mul method)": [[88, "sympy.core.mul.Mul.as_ordered_factors", false]], "as_ordered_terms() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_ordered_terms", false]], "as_poly() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_poly", false]], "as_poly() (sympy.core.numbers.algebraicnumber method)": [[88, "sympy.core.numbers.AlgebraicNumber.as_poly", false]], "as_poly() (sympy.core.relational.equality method)": [[88, "sympy.core.relational.Equality.as_poly", false]], "as_poly() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.as_poly", false]], "as_powers_dict() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_powers_dict", false]], "as_real_imag() (sympy.core.add.add method)": [[88, "sympy.core.add.Add.as_real_imag", false]], "as_real_imag() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_real_imag", false]], "as_real_imag() (sympy.functions.elementary.complexes.im method)": [[94, "sympy.functions.elementary.complexes.im.as_real_imag", false]], "as_real_imag() (sympy.functions.elementary.complexes.re method)": [[94, "sympy.functions.elementary.complexes.re.as_real_imag", false]], "as_real_imag() (sympy.functions.elementary.exponential.exp method)": [[94, "sympy.functions.elementary.exponential.exp.as_real_imag", false]], "as_real_imag() (sympy.functions.elementary.exponential.log method)": [[94, "sympy.functions.elementary.exponential.log.as_real_imag", false]], "as_real_imag() (sympy.functions.elementary.hyperbolic.sinh method)": [[94, "sympy.functions.elementary.hyperbolic.sinh.as_real_imag", false]], "as_real_imag() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.as_real_imag", false]], "as_relational() (sympy.sets.fancysets.range method)": [[228, "sympy.sets.fancysets.Range.as_relational", false]], "as_relational() (sympy.sets.sets.complement method)": [[228, "sympy.sets.sets.Complement.as_relational", false]], "as_relational() (sympy.sets.sets.finiteset method)": [[228, "sympy.sets.sets.FiniteSet.as_relational", false]], "as_relational() (sympy.sets.sets.intersection method)": [[228, "sympy.sets.sets.Intersection.as_relational", false]], "as_relational() (sympy.sets.sets.interval method)": [[228, "sympy.sets.sets.Interval.as_relational", false]], "as_relational() (sympy.sets.sets.symmetricdifference method)": [[228, "sympy.sets.sets.SymmetricDifference.as_relational", false]], "as_relational() (sympy.sets.sets.union method)": [[228, "sympy.sets.sets.Union.as_relational", false]], "as_set() (sympy.logic.boolalg.boolean method)": [[118, "sympy.logic.boolalg.Boolean.as_set", false]], "as_set() (sympy.logic.boolalg.booleanfalse method)": [[118, "sympy.logic.boolalg.BooleanFalse.as_set", false]], "as_set() (sympy.logic.boolalg.booleantrue method)": [[118, "sympy.logic.boolalg.BooleanTrue.as_set", false]], "as_submodule() (sympy.polys.numberfields.primes.primeideal method)": [[215, "sympy.polys.numberfields.primes.PrimeIdeal.as_submodule", false]], "as_sum() (sympy.integrals.integrals.integral method)": [[115, "sympy.integrals.integrals.Integral.as_sum", false]], "as_terms() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_terms", false]], "as_two_terms() (sympy.core.add.add method)": [[88, "sympy.core.add.Add.as_two_terms", false]], "as_two_terms() (sympy.core.mul.mul method)": [[88, "sympy.core.mul.Mul.as_two_terms", false]], "ascents() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.ascents", false]], "asec (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.asec", false]], "asech (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.asech", false]], "aseries() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.aseries", false]], "asin (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.asin", false]], "asinh (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.asinh", false]], "ask() (in module sympy.assumptions.ask)": [[62, "sympy.assumptions.ask.ask", false]], "assemble_partfrac_list() (in module sympy.polys.partfrac)": [[216, "sympy.polys.partfrac.assemble_partfrac_list", false]], "assignment (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Assignment", false]], "assignmentbase (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.AssignmentBase", false]], "assignmenterror": [[220, "sympy.printing.codeprinter.AssignmentError", false]], "assoc_laguerre (class in sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.assoc_laguerre", false]], "assoc_legendre (class in sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.assoc_legendre", false]], "assoc_recurrence_memo() (in module sympy.utilities.memoization)": [[260, "sympy.utilities.memoization.assoc_recurrence_memo", false]], "assuming() (in module sympy.assumptions.assume)": [[63, "sympy.assumptions.assume.assuming", false]], "assumptionkeys (class in sympy.assumptions.ask)": [[62, "sympy.assumptions.ask.AssumptionKeys", false]], "assumptions": [[15, "term-Assumptions", true]], "assumptions0 (sympy.core.basic.basic property)": [[88, "sympy.core.basic.Basic.assumptions0", false]], "assumptionscontext (class in sympy.assumptions.assume)": [[63, "sympy.assumptions.assume.AssumptionsContext", false]], "at_pin_joint() (sympy.physics.mechanics.actuator.torqueactuator class method)": [[147, "sympy.physics.mechanics.actuator.TorqueActuator.at_pin_joint", false]], "atan (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.atan", false]], "atan2 (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.atan2", false]], "atanh (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.atanh", false]], "atom": [[15, "term-Atom", true]], "atom (class in sympy.core.basic)": [[88, "sympy.core.basic.Atom", false]], "atomicexpr (class in sympy.core.expr)": [[88, "sympy.core.expr.AtomicExpr", false]], "atoms() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.atoms", false]], "atoms() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.atoms", false]], "atoms() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.atoms", false]], "atoms_table (in module sympy.printing.pretty.pretty_symbology)": [[220, "sympy.printing.pretty.pretty_symbology.atoms_table", false]], "attachments (sympy.physics.mechanics.pathway.obstaclesetpathway property)": [[155, "sympy.physics.mechanics.pathway.ObstacleSetPathway.attachments", false]], "attachments (sympy.physics.mechanics.pathway.pathwaybase property)": [[155, "sympy.physics.mechanics.pathway.PathwayBase.attachments", false]], "attempted (sympy.testing.runtests.sympytestresults attribute)": [[251, "sympy.testing.runtests.SymPyTestResults.attempted", false]], "attr_params() (sympy.codegen.ast.node method)": [[69, "sympy.codegen.ast.Node.attr_params", false]], "attribute (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Attribute", false]], "aug_assign() (in module sympy.codegen.ast)": [[69, "sympy.codegen.ast.aug_assign", false]], "augmentedassignment (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.AugmentedAssignment", false]], "auto_number() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.auto_number", false]], "auto_symbol() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.auto_symbol", false]], "automatic simplification": [[15, "term-Automatic-Simplification", true]], "autowrap() (in module sympy.utilities.autowrap)": [[252, "sympy.utilities.autowrap.autowrap", false]], "auxiliary_circle() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.auxiliary_circle", false]], "auxiliary_eqs (sympy.physics.mechanics.kane.kanesmethod property)": [[152, "sympy.physics.mechanics.kane.KanesMethod.auxiliary_eqs", false]], "axial_force() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.axial_force", false]], "axial_stress() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.axial_stress", false]], "axis (sympy.physics.mechanics.actuator.torqueactuator property)": [[147, "sympy.physics.mechanics.actuator.TorqueActuator.axis", false]], "axis (sympy.physics.mechanics.wrapping_geometry.wrappingcylinder property)": [[158, "sympy.physics.mechanics.wrapping_geometry.WrappingCylinder.axis", false]], "axis() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.axis", false]], "axisorienter (class in sympy.vector.orienters)": [[266, "sympy.vector.orienters.AxisOrienter", false]], "az() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.AZ", false]], "b (in module sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.B", false]], "b (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.b", false]], "b (sympy.physics.optics.gaussopt.raytransfermatrix property)": [[159, "sympy.physics.optics.gaussopt.RayTransferMatrix.B", false]], "b_interval (sympy.sets.fancysets.complexregion property)": [[228, "sympy.sets.fancysets.ComplexRegion.b_interval", false]], "backward_diff() (in module sympy.physics.control.lti)": [[143, "sympy.physics.control.lti.backward_diff", false]], "banded() (in module sympy.matrices.sparsetools)": [[127, "sympy.matrices.sparsetools.banded", false]], "base (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.base", false]], "base (sympy.functions.elementary.exponential.exp property)": [[94, "sympy.functions.elementary.exponential.exp.base", false]], "base (sympy.tensor.indexed.indexed property)": [[245, "sympy.tensor.indexed.Indexed.base", false]], "base_oneform() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.base_oneform", false]], "base_oneforms() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.base_oneforms", false]], "base_scalar() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.base_scalar", false]], "base_scalars() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.base_scalars", false]], "base_solution_linear() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.base_solution_linear", false]], "base_vector() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.base_vector", false]], "base_vectors() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.base_vectors", false]], "basecovarderivativeop (class in sympy.diffgeom)": [[90, "sympy.diffgeom.BaseCovarDerivativeOp", false]], "basepolynomialerror (class in sympy.polys.polyerrors)": [[213, "sympy.polys.polyerrors.BasePolynomialError", false]], "basescalarfield (class in sympy.diffgeom)": [[90, "sympy.diffgeom.BaseScalarField", false]], "baseseries (class in sympy.plotting.series)": [[206, "sympy.plotting.series.BaseSeries", false]], "baseswap() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.baseswap", false]], "basevectorfield (class in sympy.diffgeom)": [[90, "sympy.diffgeom.BaseVectorField", false]], "basic": [[15, "term-Basic", true]], "basic (class in sympy.core.basic)": [[88, "sympy.core.basic.Basic", false]], "basic_orbits (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.basic_orbits", false]], "basic_root() (sympy.liealgebras.type_a.typea method)": [[117, "sympy.liealgebras.type_a.TypeA.basic_root", false]], "basic_root() (sympy.liealgebras.type_b.typeb method)": [[117, "sympy.liealgebras.type_b.TypeB.basic_root", false]], "basic_root() (sympy.liealgebras.type_c.typec method)": [[117, "sympy.liealgebras.type_c.TypeC.basic_root", false]], "basic_root() (sympy.liealgebras.type_d.typed method)": [[117, "sympy.liealgebras.type_d.TypeD.basic_root", false]], "basic_root() (sympy.liealgebras.type_e.typee method)": [[117, "sympy.liealgebras.type_e.TypeE.basic_root", false]], "basic_root() (sympy.liealgebras.type_f.typef method)": [[117, "sympy.liealgebras.type_f.TypeF.basic_root", false]], "basic_stabilizers (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.basic_stabilizers", false]], "basic_transversals (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.basic_transversals", false]], "basis() (sympy.liealgebras.type_a.typea method)": [[117, "sympy.liealgebras.type_a.TypeA.basis", false]], "basis() (sympy.liealgebras.type_b.typeb method)": [[117, "sympy.liealgebras.type_b.TypeB.basis", false]], "basis() (sympy.liealgebras.type_c.typec method)": [[117, "sympy.liealgebras.type_c.TypeC.basis", false]], "basis() (sympy.liealgebras.type_d.typed method)": [[117, "sympy.liealgebras.type_d.TypeD.basis", false]], "basis() (sympy.liealgebras.type_e.typee method)": [[117, "sympy.liealgebras.type_e.TypeE.basis", false]], "basis() (sympy.liealgebras.type_f.typef method)": [[117, "sympy.liealgebras.type_f.TypeF.basis", false]], "basis() (sympy.liealgebras.type_g.typeg method)": [[117, "sympy.liealgebras.type_g.TypeG.basis", false]], "basis() (sympy.polys.agca.modules.freemodule method)": [[207, "sympy.polys.agca.modules.FreeModule.basis", false]], "basis_element_pullbacks() (sympy.polys.numberfields.modules.submodule method)": [[215, "sympy.polys.numberfields.modules.Submodule.basis_element_pullbacks", false]], "basis_elements() (sympy.polys.numberfields.modules.module method)": [[215, "sympy.polys.numberfields.modules.Module.basis_elements", false]], "bbra (in module sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.BBra", false]], "bd (in module sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.Bd", false]], "beam (class in sympy.physics.continuum_mechanics.beam)": [[135, "sympy.physics.continuum_mechanics.beam.Beam", false]], "beam3d (class in sympy.physics.continuum_mechanics.beam)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D", false]], "beamparameter (class in sympy.physics.optics.gaussopt)": [[159, "sympy.physics.optics.gaussopt.BeamParameter", false]], "bell (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.bell", false]], "below() (sympy.printing.pretty.stringpict.stringpict method)": [[220, "sympy.printing.pretty.stringpict.stringPict.below", false]], "bending_moment() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.bending_moment", false]], "bending_moment() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.bending_moment", false]], "benini() (in module sympy.stats)": [[240, "sympy.stats.Benini", false]], "berkowitz_det() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.berkowitz_det", false]], "berkowitz_eigenvals() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.berkowitz_eigenvals", false]], "berkowitz_minors() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.berkowitz_minors", false]], "bernoulli (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.bernoulli", false]], "bernoulli (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.Bernoulli", false]], "bernoulli() (in module sympy.stats)": [[240, "sympy.stats.Bernoulli", false]], "bernoulli_c_poly() (in module sympy.polys.appellseqs)": [[216, "sympy.polys.appellseqs.bernoulli_c_poly", false]], "bernoulli_poly() (in module sympy.polys.appellseqs)": [[216, "sympy.polys.appellseqs.bernoulli_poly", false]], "bernoulliprocess (class in sympy.stats)": [[240, "sympy.stats.BernoulliProcess", false]], "besselbase (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.BesselBase", false]], "besseli (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.besseli", false]], "besselj (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.besselj", false]], "besselk (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.besselk", false]], "besselsimp() (in module sympy.simplify.simplify)": [[232, "sympy.simplify.simplify.besselsimp", false]], "bessely (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.bessely", false]], "beta (class in sympy.functions.special.beta_functions)": [[96, "sympy.functions.special.beta_functions.beta", false]], "beta (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.beta", false]], "beta() (in module sympy.stats)": [[240, "sympy.stats.Beta", false]], "betabinomial() (in module sympy.stats)": [[240, "sympy.stats.BetaBinomial", false]], "betanoncentral() (in module sympy.stats)": [[240, "sympy.stats.BetaNoncentral", false]], "betaprime() (in module sympy.stats)": [[240, "sympy.stats.BetaPrime", false]], "bidiagonal_decomposition() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.bidiagonal_decomposition", false]], "bidiagonalize() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.bidiagonalize", false]], "bifid5_square() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.bifid5_square", false]], "bifid6_square() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.bifid6_square", false]], "bilinear() (in module sympy.physics.control.lti)": [[143, "sympy.physics.control.lti.bilinear", false]], "bin_to_gray() (sympy.combinatorics.graycode method)": [[72, "sympy.combinatorics.graycode.bin_to_gray", false]], "binary_function() (in module sympy.utilities.autowrap)": [[252, "sympy.utilities.autowrap.binary_function", false]], "binary_partitions() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.binary_partitions", false]], "binaryquadratic (class in sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.BinaryQuadratic", false]], "bind_c() (in module sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.bind_C", false]], "binomial (class in sympy.functions.combinatorial.factorials)": [[93, "sympy.functions.combinatorial.factorials.binomial", false]], "binomial() (in module sympy.stats)": [[240, "sympy.stats.Binomial", false]], "binomial_coefficients() (in module sympy.ntheory.multinomial)": [[128, "sympy.ntheory.multinomial.binomial_coefficients", false]], "binomial_coefficients_list() (in module sympy.ntheory.multinomial)": [[128, "sympy.ntheory.multinomial.binomial_coefficients_list", false]], "binomial_mod() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.binomial_mod", false]], "bisectors() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.bisectors", false]], "bisectors() (sympy.geometry.polygon.polygon method)": [[104, "sympy.geometry.polygon.Polygon.bisectors", false]], "bisectors() (sympy.geometry.polygon.triangle method)": [[104, "sympy.geometry.polygon.Triangle.bisectors", false]], "bitlist_from_subset() (sympy.combinatorics.subsets.subset class method)": [[83, "sympy.combinatorics.subsets.Subset.bitlist_from_subset", false]], "bket (in module sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.BKet", false]], "block_collapse() (in module sympy.matrices.expressions.blockmatrix)": [[120, "sympy.matrices.expressions.blockmatrix.block_collapse", false]], "blockdiagmatrix (class in sympy.matrices.expressions.blockmatrix)": [[120, "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix", false]], "blockmatrix (class in sympy.matrices.expressions.blockmatrix)": [[120, "sympy.matrices.expressions.blockmatrix.BlockMatrix", false]], "bm (sympy.functions.special.hyper.meijerg property)": [[96, "sympy.functions.special.hyper.meijerg.bm", false]], "bode_magnitude_numerical_data() (sympy.physics.control.control_plots method)": [[141, "sympy.physics.control.control_plots.bode_magnitude_numerical_data", false]], "bode_magnitude_plot() (sympy.physics.control.control_plots method)": [[141, "sympy.physics.control.control_plots.bode_magnitude_plot", false]], "bode_phase_numerical_data() (sympy.physics.control.control_plots method)": [[141, "sympy.physics.control.control_plots.bode_phase_numerical_data", false]], "bode_phase_plot() (sympy.physics.control.control_plots method)": [[141, "sympy.physics.control.control_plots.bode_phase_plot", false]], "bode_plot() (sympy.physics.control.control_plots method)": [[141, "sympy.physics.control.control_plots.bode_plot", false]], "bodies (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[148, "sympy.physics.mechanics.jointsmethod.JointsMethod.bodies", false]], "bodies (sympy.physics.mechanics.system.symbolicsystem property)": [[157, "sympy.physics.mechanics.system.SymbolicSystem.bodies", false]], "bodies (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.bodies", false]], "body (class in sympy.physics.mechanics.body)": [[148, "sympy.physics.mechanics.body.Body", false]], "bodyorienter (class in sympy.vector.orienters)": [[266, "sympy.vector.orienters.BodyOrienter", false]], "bool_map() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.bool_map", false]], "bool_maxterm() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.bool_maxterm", false]], "bool_minterm() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.bool_minterm", false]], "bool_monomial() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.bool_monomial", false]], "boolean": [[15, "term-Boolean", true]], "boolean (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.Boolean", false]], "booleanfalse (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.BooleanFalse", false]], "booleankind (in module sympy.core.kind)": [[88, "sympy.core.kind.BooleanKind", false]], "booleantrue (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.BooleanTrue", false]], "bosonicbasis (class in sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.BosonicBasis", false]], "bother (sympy.functions.special.hyper.meijerg property)": [[96, "sympy.functions.special.hyper.meijerg.bother", false]], "bottom_up() (in module sympy.core.traversal)": [[88, "sympy.core.traversal.bottom_up", false]], "bound symbols": [[15, "term-Bound-symbols", true]], "bound_symbols (sympy.concrete.expr_with_limits.exprwithlimits property)": [[115, "sympy.concrete.expr_with_limits.ExprWithLimits.bound_symbols", false]], "bound_symbols (sympy.core.function.lambda property)": [[88, "sympy.core.function.Lambda.bound_symbols", false]], "bound_symbols (sympy.core.function.subs property)": [[88, "sympy.core.function.Subs.bound_symbols", false]], "boundary (sympy.sets.sets.set property)": [[228, "sympy.sets.sets.Set.boundary", false]], "boundary_conditions (sympy.physics.continuum_mechanics.beam.beam property)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.boundary_conditions", false]], "boundary_conditions (sympy.physics.continuum_mechanics.beam.beam3d property)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.boundary_conditions", false]], "boundedpareto() (in module sympy.stats)": [[240, "sympy.stats.BoundedPareto", false]], "bounds (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.bounds", false]], "bounds (sympy.geometry.entity.geometryentity property)": [[99, "sympy.geometry.entity.GeometryEntity.bounds", false]], "bounds (sympy.geometry.line.linearentity2d property)": [[101, "sympy.geometry.line.LinearEntity2D.bounds", false]], "bounds (sympy.geometry.point.point2d property)": [[103, "sympy.geometry.point.Point2D.bounds", false]], "bounds (sympy.geometry.polygon.polygon property)": [[104, "sympy.geometry.polygon.Polygon.bounds", false]], "bq (sympy.functions.special.hyper.hyper property)": [[96, "sympy.functions.special.hyper.hyper.bq", false]], "bq (sympy.functions.special.hyper.meijerg property)": [[96, "sympy.functions.special.hyper.meijerg.bq", false]], "bra (class in sympy.physics.quantum.state)": [[188, "sympy.physics.quantum.state.Bra", false]], "bra (sympy.physics.quantum.operator.outerproduct property)": [[179, "sympy.physics.quantum.operator.OuterProduct.bra", false]], "bra (sympy.physics.secondquant.innerproduct property)": [[190, "sympy.physics.secondquant.InnerProduct.bra", false]], "brabase (class in sympy.physics.quantum.state)": [[188, "sympy.physics.quantum.state.BraBase", false]], "bracelets() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.bracelets", false]], "breaktoken (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.BreakToken", false]], "brewster_angle() (in module sympy.physics.optics.utils)": [[163, "sympy.physics.optics.utils.brewster_angle", false]], "bsgs_direct_product() (in module sympy.combinatorics.tensor_can)": [[84, "sympy.combinatorics.tensor_can.bsgs_direct_product", false]], "bspline_basis() (in module sympy.functions.special.bsplines)": [[96, "sympy.functions.special.bsplines.bspline_basis", false]], "bspline_basis_set() (in module sympy.functions.special.bsplines)": [[96, "sympy.functions.special.bsplines.bspline_basis_set", false]], "build_expression_tree() (in module sympy.series.gruntz)": [[227, "sympy.series.gruntz.build_expression_tree", false]], "build_options() (in module sympy.polys.polyoptions)": [[213, "sympy.polys.polyoptions.build_options", false]], "c (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.C", false]], "c (sympy.physics.optics.gaussopt.raytransfermatrix property)": [[159, "sympy.physics.optics.gaussopt.RayTransferMatrix.C", false]], "c89codeprinter (class in sympy.printing.c)": [[220, "sympy.printing.c.C89CodePrinter", false]], "c99codeprinter (class in sympy.printing.c)": [[220, "sympy.printing.c.C99CodePrinter", false]], "cable (class in sympy.physics.continuum_mechanics.cable)": [[137, "sympy.physics.continuum_mechanics.cable.Cable", false]], "calculate_series() (in module sympy.series.gruntz)": [[227, "sympy.series.gruntz.calculate_series", false]], "can_transf_matrix (sympy.physics.units.dimensions.dimensionsystem property)": [[192, "sympy.physics.units.dimensions.DimensionSystem.can_transf_matrix", false]], "canberra_distance() (sympy.geometry.point.point method)": [[103, "sympy.geometry.point.Point.canberra_distance", false]], "cancel() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.cancel", false]], "cancel() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.cancel", false]], "cancel() (sympy.polys.polyclasses.dmf method)": [[211, "sympy.polys.polyclasses.DMF.cancel", false]], "cancel() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.cancel", false]], "cancel() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.cancel", false]], "cancel() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.cancel", false]], "cancel_denom() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.cancel_denom", false]], "cancel_denom_elementwise() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.cancel_denom_elementwise", false]], "canon_bp() (in module sympy.tensor.tensor)": [[246, "sympy.tensor.tensor.canon_bp", false]], "canon_bp() (sympy.tensor.tensor.tensadd method)": [[246, "sympy.tensor.tensor.TensAdd.canon_bp", false]], "canon_bp() (sympy.tensor.tensor.tensmul method)": [[246, "sympy.tensor.tensor.TensMul.canon_bp", false]], "canonical (sympy.core.relational.relational property)": [[88, "sympy.core.relational.Relational.canonical", false]], "canonical form": [[15, "term-Canonical-Form", true]], "canonical_form() (sympy.stats.discretemarkovchain method)": [[240, "sympy.stats.DiscreteMarkovChain.canonical_form", false]], "canonical_odes() (in module sympy.solvers.ode.systems)": [[236, "sympy.solvers.ode.systems.canonical_odes", false]], "canonical_variables (sympy.core.basic.basic property)": [[88, "sympy.core.basic.Basic.canonical_variables", false]], "canonicalize": [[15, "term-Canonicalize", true]], "canonicalize() (in module sympy.combinatorics.tensor_can)": [[84, "sympy.combinatorics.tensor_can.canonicalize", false]], "capture() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.capture", false]], "cardinality (sympy.combinatorics.permutations.permutation property)": [[80, "sympy.combinatorics.permutations.Permutation.cardinality", false]], "cardinality (sympy.combinatorics.subsets.subset property)": [[83, "sympy.combinatorics.subsets.Subset.cardinality", false]], "cartan_matrix() (sympy.liealgebras.root_system.rootsystem method)": [[117, "sympy.liealgebras.root_system.RootSystem.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_a.typea method)": [[117, "sympy.liealgebras.type_a.TypeA.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_b.typeb method)": [[117, "sympy.liealgebras.type_b.TypeB.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_c.typec method)": [[117, "sympy.liealgebras.type_c.TypeC.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_d.typed method)": [[117, "sympy.liealgebras.type_d.TypeD.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_e.typee method)": [[117, "sympy.liealgebras.type_e.TypeE.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_f.typef method)": [[117, "sympy.liealgebras.type_f.TypeF.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_g.typeg method)": [[117, "sympy.liealgebras.type_g.TypeG.cartan_matrix", false]], "cartanmatrix() (in module sympy.liealgebras.cartan_matrix)": [[117, "sympy.liealgebras.cartan_matrix.CartanMatrix", false]], "cartantype_generator (class in sympy.liealgebras.cartan_type)": [[117, "sympy.liealgebras.cartan_type.CartanType_generator", false]], "cartesiancomplexregion (class in sympy.sets.fancysets)": [[228, "sympy.sets.fancysets.CartesianComplexRegion", false]], "casoratian() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.casoratian", false]], "cast_check() (sympy.codegen.ast.type method)": [[69, "sympy.codegen.ast.Type.cast_check", false]], "cast_nocheck (sympy.codegen.ast.floatbasetype attribute)": [[69, "sympy.codegen.ast.FloatBaseType.cast_nocheck", false]], "cast_nocheck() (sympy.codegen.ast.floattype method)": [[69, "sympy.codegen.ast.FloatType.cast_nocheck", false]], "catalan (class in sympy.core.numbers)": [[88, "sympy.core.numbers.Catalan", false]], "catalan (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.catalan", false]], "category (class in sympy.categories)": [[68, "sympy.categories.Category", false]], "cauchy() (in module sympy.stats)": [[240, "sympy.stats.Cauchy", false]], "cauchy_lower_bound() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.cauchy_lower_bound", false]], "cauchy_upper_bound() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.cauchy_upper_bound", false]], "cbrt (class in sympy.codegen.cfunctions)": [[69, "sympy.codegen.cfunctions.Cbrt", false]], "cbrt() (in module sympy.functions.elementary.miscellaneous)": [[94, "sympy.functions.elementary.miscellaneous.cbrt", false]], "ccode() (in module sympy.printing.c)": [[220, "sympy.printing.c.ccode", false]], "ccodegen (class in sympy.utilities.codegen)": [[253, "sympy.utilities.codegen.CCodeGen", false]], "ceiling (class in sympy.functions.elementary.integers)": [[94, "sympy.functions.elementary.integers.ceiling", false]], "center (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.center", false]], "center (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.center", false]], "center() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.center", false]], "center_of_mass() (in module sympy.physics.mechanics.functions)": [[154, "sympy.physics.mechanics.functions.center_of_mass", false]], "central_inertia (sympy.physics.mechanics.body.body property)": [[148, "sympy.physics.mechanics.body.Body.central_inertia", false]], "central_inertia (sympy.physics.mechanics.rigidbody.rigidbody property)": [[154, "sympy.physics.mechanics.rigidbody.RigidBody.central_inertia", false]], "centralizer() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.centralizer", false]], "centralmoment (class in sympy.stats)": [[240, "sympy.stats.CentralMoment", false]], "centroid (sympy.geometry.polygon.polygon property)": [[104, "sympy.geometry.polygon.Polygon.centroid", false]], "centroid (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.centroid", false]], "centroid() (in module sympy.geometry.util)": [[105, "sympy.geometry.util.centroid", false]], "cg (class in sympy.physics.quantum.cg)": [[169, "sympy.physics.quantum.cg.CG", false]], "cg_simp() (in module sympy.physics.quantum.cg)": [[169, "sympy.physics.quantum.cg.cg_simp", false]], "cgate (class in sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.CGate", false]], "cgates (class in sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.CGateS", false]], "change_index() (sympy.concrete.expr_with_intlimits.exprwithintlimits method)": [[87, "sympy.concrete.expr_with_intlimits.ExprWithIntLimits.change_index", false]], "change_member_label() (sympy.physics.continuum_mechanics.truss.truss method)": [[139, "sympy.physics.continuum_mechanics.truss.Truss.change_member_label", false]], "change_node_label() (sympy.physics.continuum_mechanics.truss.truss method)": [[139, "sympy.physics.continuum_mechanics.truss.Truss.change_node_label", false]], "change_support() (sympy.physics.continuum_mechanics.cable.cable method)": [[137, "sympy.physics.continuum_mechanics.cable.Cable.change_support", false]], "characteristic() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.characteristic", false]], "characteristic() (sympy.polys.domains.finitefield method)": [[211, "sympy.polys.domains.FiniteField.characteristic", false]], "characteristiccurvecollection (class in sympy.physics.biomechanics.curve)": [[132, "sympy.physics.biomechanics.curve.CharacteristicCurveCollection", false]], "characteristiccurvefunction (class in sympy.physics.biomechanics.curve)": [[132, "sympy.physics.biomechanics.curve.CharacteristicCurveFunction", false]], "charpoly() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.charpoly", false]], "charpoly() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.charpoly", false]], "charpoly() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.charpoly", false]], "charpoly() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.charpoly", false]], "charpoly() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.charpoly", false]], "charpoly_base() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.charpoly_base", false]], "charpoly_berk() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.charpoly_berk", false]], "charpoly_factor_blocks() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.charpoly_factor_blocks", false]], "charpoly_factor_list() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.charpoly_factor_list", false]], "chebyshevt (class in sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.chebyshevt", false]], "chebyshevt_poly() (in module sympy.polys.orthopolys)": [[216, "sympy.polys.orthopolys.chebyshevt_poly", false]], "chebyshevt_root (class in sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.chebyshevt_root", false]], "chebyshevu (class in sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.chebyshevu", false]], "chebyshevu_poly() (in module sympy.polys.orthopolys)": [[216, "sympy.polys.orthopolys.chebyshevu_poly", false]], "chebyshevu_root (class in sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.chebyshevu_root", false]], "check_and_join() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.check_and_join", false]], "check_output() (sympy.testing.runtests.sympyoutputchecker method)": [[251, "sympy.testing.runtests.SymPyOutputChecker.check_output", false]], "checkinfsol() (in module sympy.solvers.ode)": [[236, "sympy.solvers.ode.checkinfsol", false]], "checkodesol() (in module sympy.solvers.ode)": [[236, "sympy.solvers.ode.checkodesol", false]], "checkpdesol() (in module sympy.solvers.pde)": [[237, "sympy.solvers.pde.checkpdesol", false]], "checksol() (in module sympy.solvers.solvers)": [[238, "sympy.solvers.solvers.checksol", false]], "chi (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.Chi", false]], "chi() (in module sympy.stats)": [[240, "sympy.stats.Chi", false]], "child (sympy.physics.mechanics.joint.joint property)": [[151, "sympy.physics.mechanics.joint.Joint.child", false]], "child_axis (sympy.physics.mechanics.joint.joint property)": [[151, "sympy.physics.mechanics.joint.Joint.child_axis", false]], "child_point (sympy.physics.mechanics.joint.joint property)": [[151, "sympy.physics.mechanics.joint.Joint.child_point", false]], "chinoncentral() (in module sympy.stats)": [[240, "sympy.stats.ChiNoncentral", false]], "chisquared() (in module sympy.stats)": [[240, "sympy.stats.ChiSquared", false]], "cholesky() (sympy.matrices.dense.densematrix method)": [[119, "sympy.matrices.dense.DenseMatrix.cholesky", false]], "cholesky() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.cholesky", false]], "cholesky_solve() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.cholesky_solve", false]], "choose_domain() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.choose_domain", false]], "ci (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.Ci", false]], "circle (class in sympy.geometry.ellipse)": [[98, "sympy.geometry.ellipse.Circle", false]], "circuit_plot() (in module sympy.physics.quantum.circuitplot)": [[170, "sympy.physics.quantum.circuitplot.circuit_plot", false]], "circuitplot (class in sympy.physics.quantum.circuitplot)": [[170, "sympy.physics.quantum.circuitplot.CircuitPlot", false]], "circumcenter (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.circumcenter", false]], "circumcenter (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.circumcenter", false]], "circumcircle (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.circumcircle", false]], "circumcircle (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.circumcircle", false]], "circumference (sympy.geometry.ellipse.circle property)": [[98, "sympy.geometry.ellipse.Circle.circumference", false]], "circumference (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.circumference", false]], "circumradius (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.circumradius", false]], "circumradius (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.circumradius", false]], "class_key() (sympy.core.basic.basic class method)": [[88, "sympy.core.basic.Basic.class_key", false]], "classify_diop() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.classify_diop", false]], "classify_ode() (in module sympy.solvers.ode)": [[236, "sympy.solvers.ode.classify_ode", false]], "classify_pde() (in module sympy.solvers.pde)": [[237, "sympy.solvers.pde.classify_pde", false]], "clear() (sympy.tensor.tensor._tensormanager method)": [[246, "sympy.tensor.tensor._TensorManager.clear", false]], "clear_cache() (sympy.polys.rootoftools.complexrootof class method)": [[216, "sympy.polys.rootoftools.ComplexRootOf.clear_cache", false]], "clear_denoms() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.clear_denoms", false]], "clear_denoms() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.clear_denoms", false]], "clear_denoms() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.clear_denoms", false]], "clear_denoms_rowwise() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.clear_denoms_rowwise", false]], "clear_loads() (sympy.physics.mechanics.body.body method)": [[148, "sympy.physics.mechanics.body.Body.clear_loads", false]], "clebsch_gordan() (in module sympy.physics.wigner)": [[205, "sympy.physics.wigner.clebsch_gordan", false]], "clone() (sympy.polys.polyoptions.options method)": [[213, "sympy.polys.polyoptions.Options.clone", false]], "closing_angle() (sympy.geometry.line.ray2d method)": [[101, "sympy.geometry.line.Ray2D.closing_angle", false]], "closure (sympy.sets.sets.set property)": [[228, "sympy.sets.sets.Set.closure", false]], "cmod (class in sympy.physics.quantum.shor)": [[186, "sympy.physics.quantum.shor.CMod", false]], "cmoment() (in module sympy.stats)": [[240, "sympy.stats.cmoment", false]], "cmplx (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.cmplx", false]], "cnot (in module sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.CNOT", false]], "cnotgate (class in sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.CNotGate", false]], "code generation": [[15, "term-Code-Generation", true]], "codeblock (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.CodeBlock", false]], "codegen (class in sympy.utilities.codegen)": [[253, "sympy.utilities.codegen.CodeGen", false]], "codegen() (in module sympy.utilities.codegen)": [[253, "sympy.utilities.codegen.codegen", false]], "codeprinter (class in sympy.printing.codeprinter)": [[220, "sympy.printing.codeprinter.CodePrinter", false]], "codewrapper (class in sympy.utilities.autowrap)": [[252, "sympy.utilities.autowrap.CodeWrapper", false]], "codomain (sympy.categories.compositemorphism property)": [[68, "sympy.categories.CompositeMorphism.codomain", false]], "codomain (sympy.categories.morphism property)": [[68, "sympy.categories.Morphism.codomain", false]], "coeff() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.coeff", false]], "coeff() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.coeff", false]], "coeff() (sympy.series.sequences.seqbase method)": [[226, "sympy.series.sequences.SeqBase.coeff", false]], "coeff_bell() (sympy.series.formal.formalpowerseries method)": [[222, "sympy.series.formal.FormalPowerSeries.coeff_bell", false]], "coeff_monomial() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.coeff_monomial", false]], "coeff_mul() (sympy.series.sequences.emptysequence method)": [[226, "sympy.series.sequences.EmptySequence.coeff_mul", false]], "coeff_mul() (sympy.series.sequences.seqbase method)": [[226, "sympy.series.sequences.SeqBase.coeff_mul", false]], "coeff_mul() (sympy.series.sequences.seqformula method)": [[226, "sympy.series.sequences.SeqFormula.coeff_mul", false]], "coeff_mul() (sympy.series.sequences.seqper method)": [[226, "sympy.series.sequences.SeqPer.coeff_mul", false]], "coeff_search() (in module sympy.polys.numberfields.utilities)": [[215, "sympy.polys.numberfields.utilities.coeff_search", false]], "coeff_wrt() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.coeff_wrt", false]], "coefficients (sympy.geometry.line.line2d property)": [[101, "sympy.geometry.line.Line2D.coefficients", false]], "coeffs() (sympy.core.numbers.algebraicnumber method)": [[88, "sympy.core.numbers.AlgebraicNumber.coeffs", false]], "coeffs() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.coeffs", false]], "coeffs() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.coeffs", false]], "coeffs() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.coeffs", false]], "coercionfailed (class in sympy.polys.polyerrors)": [[213, "sympy.polys.polyerrors.CoercionFailed", false]], "cofactor() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.cofactor", false]], "cofactor_matrix() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.cofactor_matrix", false]], "cofactors() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.cofactors", false]], "cofactors() (sympy.core.numbers.number method)": [[88, "sympy.core.numbers.Number.cofactors", false]], "cofactors() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.cofactors", false]], "cofactors() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.cofactors", false]], "cofactors() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.cofactors", false]], "coherent_state() (in module sympy.physics.qho_1d)": [[166, "sympy.physics.qho_1d.coherent_state", false]], "coin() (in module sympy.stats)": [[240, "sympy.stats.Coin", false]], "col() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.col", false]], "col_del() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.col_del", false]], "col_insert() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.col_insert", false]], "col_join() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.col_join", false]], "collect() (in module sympy.simplify.radsimp)": [[232, "sympy.simplify.radsimp.collect", false]], "collect() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.collect", false]], "collect_const() (in module sympy.simplify.radsimp)": [[232, "sympy.simplify.radsimp.collect_const", false]], "collect_sqrt() (in module sympy.simplify.radsimp)": [[232, "sympy.simplify.radsimp.collect_sqrt", false]], "column() (sympy.polys.numberfields.modules.moduleelement method)": [[215, "sympy.polys.numberfields.modules.ModuleElement.column", false]], "columnspace() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.columnspace", false]], "columnspace() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.columnspace", false]], "comb_explicit_rhs (sympy.physics.mechanics.system.symbolicsystem property)": [[157, "sympy.physics.mechanics.system.SymbolicSystem.comb_explicit_rhs", false]], "comb_implicit_mat (sympy.physics.mechanics.system.symbolicsystem property)": [[157, "sympy.physics.mechanics.system.SymbolicSystem.comb_implicit_mat", false]], "comb_implicit_rhs (sympy.physics.mechanics.system.symbolicsystem property)": [[157, "sympy.physics.mechanics.system.SymbolicSystem.comb_implicit_rhs", false]], "combsimp() (in module sympy.simplify.combsimp)": [[232, "sympy.simplify.combsimp.combsimp", false]], "combsimp() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.combsimp", false]], "comm_i2symbol() (sympy.tensor.tensor._tensormanager method)": [[246, "sympy.tensor.tensor._TensorManager.comm_i2symbol", false]], "comm_symbols2i() (sympy.tensor.tensor._tensormanager method)": [[246, "sympy.tensor.tensor._TensorManager.comm_symbols2i", false]], "commaoperator (class in sympy.codegen.cnodes)": [[69, "sympy.codegen.cnodes.CommaOperator", false]], "comment (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Comment", false]], "common_prefix() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.common_prefix", false]], "common_suffix() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.common_suffix", false]], "communication_classes() (sympy.stats.discretemarkovchain method)": [[240, "sympy.stats.DiscreteMarkovChain.communication_classes", false]], "commutative": [[88, "term-commutative", true]], "commutative_diagrams (sympy.categories.category property)": [[68, "sympy.categories.Category.commutative_diagrams", false]], "commutativepredicate (class in sympy.assumptions.predicates.common)": [[65, "sympy.assumptions.predicates.common.CommutativePredicate", false]], "commutator (class in sympy.diffgeom)": [[90, "sympy.diffgeom.Commutator", false]], "commutator (class in sympy.physics.quantum.commutator)": [[171, "sympy.physics.quantum.commutator.Commutator", false]], "commutator (class in sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.Commutator", false]], "commutator() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.commutator", false]], "commutator() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.commutator", false]], "commutes_with() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.commutes_with", false]], "commutes_with() (sympy.tensor.tensor.tensorhead method)": [[246, "sympy.tensor.tensor.TensorHead.commutes_with", false]], "companion() (sympy.matrices.matrixbase.matrixbase class method)": [[124, "sympy.matrices.matrixbase.MatrixBase.companion", false]], "companionmatrix (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.CompanionMatrix", false]], "compare() (in module sympy.series.gruntz)": [[227, "sympy.series.gruntz.compare", false]], "compare() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.compare", false]], "complement (class in sympy.sets.sets)": [[228, "sympy.sets.sets.Complement", false]], "complement() (sympy.sets.sets.set method)": [[228, "sympy.sets.sets.Set.complement", false]], "complex": [[88, "term-complex", true]], "complexelement (class in sympy.polys.domains.mpelements)": [[211, "sympy.polys.domains.mpelements.ComplexElement", false]], "complexelementspredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.ComplexElementsPredicate", false]], "complexes (class in sympy.sets.fancysets)": [[228, "sympy.sets.fancysets.Complexes", false]], "complexfield (class in sympy.polys.domains)": [[211, "sympy.polys.domains.ComplexField", false]], "complexinfinity (class in sympy.core.numbers)": [[88, "sympy.core.numbers.ComplexInfinity", false]], "complexpredicate (class in sympy.assumptions.predicates.sets)": [[65, "sympy.assumptions.predicates.sets.ComplexPredicate", false]], "complexregion (class in sympy.sets.fancysets)": [[228, "sympy.sets.fancysets.ComplexRegion", false]], "complexrootof (class in sympy.polys.rootoftools)": [[216, "sympy.polys.rootoftools.ComplexRootOf", false]], "complexspace (class in sympy.physics.quantum.hilbert)": [[176, "sympy.physics.quantum.hilbert.ComplexSpace", false]], "complextype (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.ComplexType", false]], "components (sympy.categories.compositemorphism property)": [[68, "sympy.categories.CompositeMorphism.components", false]], "components (sympy.vector.dyadic.dyadic property)": [[264, "sympy.vector.dyadic.Dyadic.components", false]], "components (sympy.vector.vector.vector property)": [[264, "sympy.vector.vector.Vector.components", false]], "components() (in module sympy.integrals.heurisch)": [[115, "sympy.integrals.heurisch.components", false]], "compose() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.compose", false]], "compose() (sympy.categories.morphism method)": [[68, "sympy.categories.Morphism.compose", false]], "compose() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.compose", false]], "compose() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.compose", false]], "compose() (sympy.polys.rings.polyring method)": [[211, "sympy.polys.rings.PolyRing.compose", false]], "compose() (sympy.series.formal.formalpowerseries method)": [[222, "sympy.series.formal.FormalPowerSeries.compose", false]], "composite": [[88, "term-composite", true]], "composite() (in module sympy.ntheory.generate)": [[128, "sympy.ntheory.generate.composite", false]], "compositedomain (class in sympy.polys.domains.compositedomain)": [[211, "sympy.polys.domains.compositedomain.CompositeDomain", false]], "compositemorphism (class in sympy.categories)": [[68, "sympy.categories.CompositeMorphism", false]], "compositepi() (in module sympy.ntheory.generate)": [[128, "sympy.ntheory.generate.compositepi", false]], "compositepredicate (class in sympy.assumptions.predicates.ntheory)": [[65, "sympy.assumptions.predicates.ntheory.CompositePredicate", false]], "composition() (sympy.holonomic.holonomic.holonomicfunction method)": [[110, "sympy.holonomic.holonomic.HolonomicFunction.composition", false]], "composition_series() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.composition_series", false]], "compounddistribution (class in sympy.stats.compound_rv)": [[240, "sympy.stats.compound_rv.CompoundDistribution", false]], "computationfailed (class in sympy.polys.polyerrors)": [[213, "sympy.polys.polyerrors.ComputationFailed", false]], "compute_explicit_form() (sympy.physics.mechanics.system.symbolicsystem method)": [[157, "sympy.physics.mechanics.system.SymbolicSystem.compute_explicit_form", false]], "compute_fps() (in module sympy.series.formal)": [[222, "sympy.series.formal.compute_fps", false]], "compute_leading_term() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.compute_leading_term", false]], "compute_m_ybar() (in module sympy.solvers.ode.riccati)": [[236, "sympy.solvers.ode.riccati.compute_m_ybar", false]], "conclusions (sympy.categories.diagram property)": [[68, "sympy.categories.Diagram.conclusions", false]], "cond (sympy.functions.elementary.piecewise.exprcondpair property)": [[94, "sympy.functions.elementary.piecewise.ExprCondPair.cond", false]], "condition_number() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.condition_number", false]], "conditionaldomain (class in sympy.stats.rv)": [[240, "sympy.stats.rv.ConditionalDomain", false]], "conditionset (class in sympy.sets.conditionset)": [[228, "sympy.sets.conditionset.ConditionSet", false]], "conjugacy_class() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.conjugacy_class", false]], "conjugacy_classes() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.conjugacy_classes", false]], "conjugate (class in sympy.functions.elementary.complexes)": [[94, "sympy.functions.elementary.complexes.conjugate", false]], "conjugate (sympy.combinatorics.partitions.integerpartition property)": [[77, "sympy.combinatorics.partitions.IntegerPartition.conjugate", false]], "conjugate() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.conjugate", false]], "conjugate() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.conjugate", false]], "conjugate_gauss_beams() (in module sympy.physics.optics.gaussopt)": [[159, "sympy.physics.optics.gaussopt.conjugate_gauss_beams", false]], "connected_components() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.connected_components", false]], "connected_components() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.connected_components", false]], "connected_components_decomposition() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.connected_components_decomposition", false]], "conserve_mpmath_dps() (in module sympy.utilities.decorator)": [[254, "sympy.utilities.decorator.conserve_mpmath_dps", false]], "const() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.const", false]], "constant_renumber() (in module sympy.solvers.ode.ode)": [[236, "sympy.solvers.ode.ode.constant_renumber", false]], "constant_symbols() (sympy.physics.mechanics.system.symbolicsystem method)": [[157, "sympy.physics.mechanics.system.SymbolicSystem.constant_symbols", false]], "constants (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.constants", false]], "constants (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.constants", false]], "constants (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[131, "sympy.physics.biomechanics.activation.ZerothOrderActivation.constants", false]], "constants (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.constants", false]], "constantsimp() (in module sympy.solvers.ode)": [[236, "sympy.solvers.ode.constantsimp", false]], "construct_c() (in module sympy.solvers.ode.riccati)": [[236, "sympy.solvers.ode.riccati.construct_c", false]], "construct_d() (in module sympy.solvers.ode.riccati)": [[236, "sympy.solvers.ode.riccati.construct_d", false]], "construct_domain() (in module sympy.polys.constructor)": [[216, "sympy.polys.constructor.construct_domain", false]], "contains (class in sympy.sets.conditionset)": [[228, "sympy.sets.conditionset.Contains", false]], "contains() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.contains", false]], "contains() (sympy.geometry.line.line method)": [[101, "sympy.geometry.line.Line.contains", false]], "contains() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.contains", false]], "contains() (sympy.geometry.line.ray method)": [[101, "sympy.geometry.line.Ray.contains", false]], "contains() (sympy.geometry.line.segment method)": [[101, "sympy.geometry.line.Segment.contains", false]], "contains() (sympy.polys.agca.ideals.ideal method)": [[207, "sympy.polys.agca.ideals.Ideal.contains", false]], "contains() (sympy.polys.agca.modules.module method)": [[207, "sympy.polys.agca.modules.Module.contains", false]], "contains() (sympy.polys.polytools.groebnerbasis method)": [[216, "sympy.polys.polytools.GroebnerBasis.contains", false]], "contains() (sympy.series.order.order method)": [[227, "sympy.series.order.Order.contains", false]], "contains() (sympy.sets.sets.set method)": [[228, "sympy.sets.sets.Set.contains", false]], "content() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.content", false]], "content() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.content", false]], "content() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.content", false]], "content() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.content", false]], "content() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.content", false]], "continued_fraction() (in module sympy.ntheory.continued_fraction)": [[128, "sympy.ntheory.continued_fraction.continued_fraction", false]], "continued_fraction_convergents() (in module sympy.ntheory.continued_fraction)": [[128, "sympy.ntheory.continued_fraction.continued_fraction_convergents", false]], "continued_fraction_iterator() (in module sympy.ntheory.continued_fraction)": [[128, "sympy.ntheory.continued_fraction.continued_fraction_iterator", false]], "continued_fraction_periodic() (in module sympy.ntheory.continued_fraction)": [[128, "sympy.ntheory.continued_fraction.continued_fraction_periodic", false]], "continued_fraction_reduce() (in module sympy.ntheory.continued_fraction)": [[128, "sympy.ntheory.continued_fraction.continued_fraction_reduce", false]], "continuetoken (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.ContinueToken", false]], "continuous_domain() (in module sympy.calculus.util)": [[67, "sympy.calculus.util.continuous_domain", false]], "continuousdomain (class in sympy.stats.crv)": [[240, "sympy.stats.crv.ContinuousDomain", false]], "continuousmarkovchain (class in sympy.stats)": [[240, "sympy.stats.ContinuousMarkovChain", false]], "continuouspspace (class in sympy.stats.crv)": [[240, "sympy.stats.crv.ContinuousPSpace", false]], "continuousrv() (in module sympy.stats)": [[240, "sympy.stats.ContinuousRV", false]], "contract_metric() (sympy.tensor.tensor.tensadd method)": [[246, "sympy.tensor.tensor.TensAdd.contract_metric", false]], "contract_metric() (sympy.tensor.tensor.tensmul method)": [[246, "sympy.tensor.tensor.TensMul.contract_metric", false]], "contraction() (in module sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.contraction", false]], "control_line() (sympy.physics.quantum.circuitplot.circuitplot method)": [[170, "sympy.physics.quantum.circuitplot.CircuitPlot.control_line", false]], "control_point() (sympy.physics.quantum.circuitplot.circuitplot method)": [[170, "sympy.physics.quantum.circuitplot.CircuitPlot.control_point", false]], "controls (sympy.physics.quantum.gate.cgate property)": [[174, "sympy.physics.quantum.gate.CGate.controls", false]], "controls (sympy.physics.quantum.gate.cnotgate property)": [[174, "sympy.physics.quantum.gate.CNotGate.controls", false]], "convergence_statement (sympy.functions.special.hyper.hyper property)": [[96, "sympy.functions.special.hyper.hyper.convergence_statement", false]], "convert() (sympy.polys.agca.modules.freemodule method)": [[207, "sympy.polys.agca.modules.FreeModule.convert", false]], "convert() (sympy.polys.agca.modules.module method)": [[207, "sympy.polys.agca.modules.Module.convert", false]], "convert() (sympy.polys.agca.modules.quotientmodule method)": [[207, "sympy.polys.agca.modules.QuotientModule.convert", false]], "convert() (sympy.polys.agca.modules.submodule method)": [[207, "sympy.polys.agca.modules.SubModule.convert", false]], "convert() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.convert", false]], "convert() (sympy.polys.polyclasses.anp method)": [[211, "sympy.polys.polyclasses.ANP.convert", false]], "convert() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.convert", false]], "convert_from() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.convert_from", false]], "convert_to() (in module sympy.physics.units.util)": [[197, "sympy.physics.units.util.convert_to", false]], "convert_to() (sympy.physics.units.quantities.quantity method)": [[197, "sympy.physics.units.quantities.Quantity.convert_to", false]], "convert_to() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.convert_to", false]], "convert_to() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.convert_to", false]], "convert_to() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.convert_to", false]], "convert_to_c() (sympy.parsing.sym_expr.sympyexpression method)": [[130, "sympy.parsing.sym_expr.SymPyExpression.convert_to_c", false]], "convert_to_expr() (sympy.parsing.sym_expr.sympyexpression method)": [[130, "sympy.parsing.sym_expr.SymPyExpression.convert_to_expr", false]], "convert_to_fortran() (sympy.parsing.sym_expr.sympyexpression method)": [[130, "sympy.parsing.sym_expr.SymPyExpression.convert_to_fortran", false]], "convert_to_native_paths() (in module sympy.testing.runtests)": [[251, "sympy.testing.runtests.convert_to_native_paths", false]], "convert_to_python() (sympy.parsing.sym_expr.sympyexpression method)": [[130, "sympy.parsing.sym_expr.SymPyExpression.convert_to_python", false]], "convert_xor() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.convert_xor", false]], "convex_hull() (in module sympy.geometry.util)": [[105, "sympy.geometry.util.convex_hull", false]], "convolution() (in module sympy.discrete.convolutions)": [[91, "sympy.discrete.convolutions.convolution", false]], "convolution_fft() (in module sympy.discrete.convolutions)": [[91, "sympy.discrete.convolutions.convolution_fft", false]], "convolution_fwht() (in module sympy.discrete.convolutions)": [[91, "sympy.discrete.convolutions.convolution_fwht", false]], "convolution_ntt() (in module sympy.discrete.convolutions)": [[91, "sympy.discrete.convolutions.convolution_ntt", false]], "convolution_subset() (in module sympy.discrete.convolutions)": [[91, "sympy.discrete.convolutions.convolution_subset", false]], "coord_function() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.coord_function", false]], "coord_functions() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.coord_functions", false]], "coord_tuple_transform_to() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.coord_tuple_transform_to", false]], "coordinates (sympy.geometry.point.point2d property)": [[103, "sympy.geometry.point.Point2D.coordinates", false]], "coordinates (sympy.geometry.point.point3d property)": [[103, "sympy.geometry.point.Point3D.coordinates", false]], "coordinates (sympy.physics.mechanics.joint.joint property)": [[151, "sympy.physics.mechanics.joint.Joint.coordinates", false]], "coordinates (sympy.physics.mechanics.system.symbolicsystem property)": [[157, "sympy.physics.mechanics.system.SymbolicSystem.coordinates", false]], "coordinatesym (class in sympy.physics.vector.frame)": [[199, "sympy.physics.vector.frame.CoordinateSym", false]], "coordinatesymbol (class in sympy.diffgeom)": [[90, "sympy.diffgeom.CoordinateSymbol", false]], "coords() (sympy.diffgeom.point method)": [[90, "sympy.diffgeom.Point.coords", false]], "coordsys3d (class in sympy.vector.coordsysrect)": [[264, "sympy.vector.coordsysrect.CoordSys3D", false]], "coordsystem (class in sympy.diffgeom)": [[90, "sympy.diffgeom.CoordSystem", false]], "copy() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.copy", false]], "copy() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.copy", false]], "copy() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.copy", false]], "copy() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.copy", false]], "copy() (sympy.series.gruntz.subsset method)": [[227, "sympy.series.gruntz.SubsSet.copy", false]], "core": [[15, "term-Core", true]], "core() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.core", false]], "cornacchia() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.cornacchia", false]], "corners (sympy.combinatorics.polyhedron.polyhedron property)": [[81, "sympy.combinatorics.polyhedron.Polyhedron.corners", false]], "correlation() (in module sympy.stats)": [[240, "sympy.stats.correlation", false]], "cos (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.cos", false]], "coset_factor() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.coset_factor", false]], "coset_rank() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.coset_rank", false]], "coset_table() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.coset_table", false]], "coset_transversal() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.coset_transversal", false]], "coset_unrank() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.coset_unrank", false]], "cosh (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.cosh", false]], "cosine_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.cosine_transform", false]], "cosinetransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.CosineTransform", false]], "coskewness() (in module sympy.stats)": [[240, "sympy.stats.coskewness", false]], "cot (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.cot", false]], "coth (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.coth", false]], "could_extract_minus_sign() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.could_extract_minus_sign", false]], "count() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.count", false]], "count_complex_roots() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.count_complex_roots", false]], "count_digits() (in module sympy.ntheory.digits)": [[128, "sympy.ntheory.digits.count_digits", false]], "count_ops() (in module sympy.core.function)": [[88, "sympy.core.function.count_ops", false]], "count_ops() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.count_ops", false]], "count_partitions() (sympy.utilities.enumerative.multisetpartitiontraverser method)": [[255, "sympy.utilities.enumerative.MultisetPartitionTraverser.count_partitions", false]], "count_real_roots() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.count_real_roots", false]], "count_roots() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.count_roots", false]], "count_roots() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.count_roots", false]], "couple() (in module sympy.physics.quantum.spin)": [[187, "sympy.physics.quantum.spin.couple", false]], "covarderivativeop (class in sympy.diffgeom)": [[90, "sympy.diffgeom.CovarDerivativeOp", false]], "covariance (class in sympy.stats)": [[240, "sympy.stats.Covariance", false]], "covariance() (in module sympy.stats)": [[240, "sympy.stats.covariance", false]], "covering_product() (in module sympy.discrete.convolutions)": [[91, "sympy.discrete.convolutions.covering_product", false]], "coxeter_diagram() (sympy.liealgebras.weyl_group.weylgroup method)": [[117, "sympy.liealgebras.weyl_group.WeylGroup.coxeter_diagram", false]], "cramer_solve() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.cramer_solve", false]], "create_expand_pow_optimization() (in module sympy.codegen.rewriting)": [[69, "sympy.codegen.rewriting.create_expand_pow_optimization", false]], "create_new() (sympy.vector.coordsysrect.coordsys3d method)": [[264, "sympy.vector.coordsysrect.CoordSys3D.create_new", false]], "createboson (class in sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.CreateBoson", false]], "createcgate() (in module sympy.physics.quantum.circuitplot)": [[170, "sympy.physics.quantum.circuitplot.CreateCGate", false]], "createfermion (class in sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.CreateFermion", false]], "critical_angle() (in module sympy.physics.optics.utils)": [[163, "sympy.physics.optics.utils.critical_angle", false]], "cross() (in module sympy.physics.vector.functions)": [[201, "sympy.physics.vector.functions.cross", false]], "cross() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.cross", false]], "cross() (sympy.physics.vector.dyadic.dyadic method)": [[199, "sympy.physics.vector.dyadic.Dyadic.cross", false]], "cross() (sympy.physics.vector.vector.vector method)": [[199, "sympy.physics.vector.vector.Vector.cross", false]], "cross() (sympy.vector.deloperator.del method)": [[264, "sympy.vector.deloperator.Del.cross", false]], "cross() (sympy.vector.dyadic.dyadic method)": [[264, "sympy.vector.dyadic.Dyadic.cross", false]], "cross() (sympy.vector.vector.vector method)": [[264, "sympy.vector.vector.Vector.cross", false]], "cross_section (sympy.physics.continuum_mechanics.beam.beam property)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.cross_section", false]], "crosscovariancematrix (class in sympy.stats)": [[240, "sympy.stats.CrossCovarianceMatrix", false]], "crt() (in module sympy.ntheory.modular)": [[128, "sympy.ntheory.modular.crt", false]], "crt1() (in module sympy.ntheory.modular)": [[128, "sympy.ntheory.modular.crt1", false]], "crt2() (in module sympy.ntheory.modular)": [[128, "sympy.ntheory.modular.crt2", false]], "csc (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.csc", false]], "csch (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.csch", false]], "cse() (in module sympy.simplify.cse_main)": [[232, "sympy.simplify.cse_main.cse", false]], "cse() (sympy.codegen.ast.codeblock method)": [[69, "sympy.codegen.ast.CodeBlock.cse", false]], "cubicthue (class in sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.CubicThue", false]], "curl() (in module sympy.physics.vector.fieldfunctions)": [[200, "sympy.physics.vector.fieldfunctions.curl", false]], "curl() (in module sympy.vector)": [[267, "sympy.vector.curl", false]], "current (sympy.combinatorics.graycode.graycode property)": [[72, "sympy.combinatorics.graycode.GrayCode.current", false]], "curve (class in sympy.geometry.curve)": [[97, "sympy.geometry.curve.Curve", false]], "curvedmirror (class in sympy.physics.optics.gaussopt)": [[159, "sympy.physics.optics.gaussopt.CurvedMirror", false]], "curvedrefraction (class in sympy.physics.optics.gaussopt)": [[159, "sympy.physics.optics.gaussopt.CurvedRefraction", false]], "curves() (sympy.physics.biomechanics.musculotendon.musculotendonbase method)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.curves", false]], "cut_section() (sympy.geometry.polygon.polygon method)": [[104, "sympy.geometry.polygon.Polygon.cut_section", false]], "cxx11codeprinter (class in sympy.printing.cxx)": [[220, "sympy.printing.cxx.CXX11CodePrinter", false]], "cxx98codeprinter (class in sympy.printing.cxx)": [[220, "sympy.printing.cxx.CXX98CodePrinter", false]], "cxxcode() (in module sympy.printing.codeprinter)": [[220, "sympy.printing.codeprinter.cxxcode", false]], "cycle (class in sympy.combinatorics.permutations)": [[80, "sympy.combinatorics.permutations.Cycle", false]], "cycle_length() (in module sympy.ntheory.generate)": [[128, "sympy.ntheory.generate.cycle_length", false]], "cycle_list() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.cycle_list", false]], "cycle_structure (sympy.combinatorics.permutations.permutation property)": [[80, "sympy.combinatorics.permutations.Permutation.cycle_structure", false]], "cycles (sympy.combinatorics.permutations.permutation property)": [[80, "sympy.combinatorics.permutations.Permutation.cycles", false]], "cyclic() (sympy.combinatorics.generators method)": [[80, "sympy.combinatorics.generators.cyclic", false]], "cyclic_form (sympy.combinatorics.permutations.permutation property)": [[80, "sympy.combinatorics.permutations.Permutation.cyclic_form", false]], "cyclic_form (sympy.combinatorics.polyhedron.polyhedron property)": [[81, "sympy.combinatorics.polyhedron.Polyhedron.cyclic_form", false]], "cyclicgroup() (in module sympy.combinatorics.named_groups)": [[76, "sympy.combinatorics.named_groups.CyclicGroup", false]], "cyclotomic_field() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.cyclotomic_field", false]], "cyclotomic_poly() (in module sympy.polys.specialpolys)": [[216, "sympy.polys.specialpolys.cyclotomic_poly", false]], "cylindricaljoint (class in sympy.physics.mechanics.joint)": [[151, "sympy.physics.mechanics.joint.CylindricalJoint", false]], "cythoncodewrapper (class in sympy.utilities.autowrap)": [[252, "sympy.utilities.autowrap.CythonCodeWrapper", false]], "d (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.D", false]], "d (sympy.physics.optics.gaussopt.raytransfermatrix property)": [[159, "sympy.physics.optics.gaussopt.RayTransferMatrix.D", false]], "d() (sympy.physics.quantum.spin.rotation class method)": [[187, "sympy.physics.quantum.spin.Rotation.D", false], [187, "sympy.physics.quantum.spin.Rotation.d", false]], "dagger (class in sympy.physics.quantum.dagger)": [[173, "sympy.physics.quantum.dagger.Dagger", false]], "dagger (class in sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.Dagger", false]], "dagum() (in module sympy.stats)": [[240, "sympy.stats.Dagum", false]], "damping (sympy.physics.mechanics.actuator.lineardamper property)": [[147, "sympy.physics.mechanics.actuator.LinearDamper.damping", false]], "datatype (class in sympy.utilities.codegen)": [[253, "sympy.utilities.codegen.DataType", false]], "davis() (in module sympy.stats)": [[240, "sympy.stats.Davis", false]], "dc_gain() (sympy.physics.control.lti.transferfunction method)": [[143, "sympy.physics.control.lti.TransferFunction.dc_gain", false]], "dcm() (sympy.physics.mechanics.body.body method)": [[148, "sympy.physics.mechanics.body.Body.dcm", false]], "dcm() (sympy.physics.vector.frame.referenceframe method)": [[199, "sympy.physics.vector.frame.ReferenceFrame.dcm", false]], "ddm (class in sympy.polys.matrices.ddm)": [[209, "sympy.polys.matrices.ddm.DDM", false]], "ddm_berk() (in module sympy.polys.matrices.dense)": [[209, "sympy.polys.matrices.dense.ddm_berk", false]], "ddm_iadd() (in module sympy.polys.matrices.dense)": [[209, "sympy.polys.matrices.dense.ddm_iadd", false]], "ddm_idet() (in module sympy.polys.matrices.dense)": [[209, "sympy.polys.matrices.dense.ddm_idet", false]], "ddm_iinv() (in module sympy.polys.matrices.dense)": [[209, "sympy.polys.matrices.dense.ddm_iinv", false]], "ddm_ilu() (in module sympy.polys.matrices.dense)": [[209, "sympy.polys.matrices.dense.ddm_ilu", false]], "ddm_ilu_solve() (in module sympy.polys.matrices.dense)": [[209, "sympy.polys.matrices.dense.ddm_ilu_solve", false]], "ddm_ilu_split() (in module sympy.polys.matrices.dense)": [[209, "sympy.polys.matrices.dense.ddm_ilu_split", false]], "ddm_imatmul() (in module sympy.polys.matrices.dense)": [[209, "sympy.polys.matrices.dense.ddm_imatmul", false]], "ddm_imul() (in module sympy.polys.matrices.dense)": [[209, "sympy.polys.matrices.dense.ddm_imul", false]], "ddm_ineg() (in module sympy.polys.matrices.dense)": [[209, "sympy.polys.matrices.dense.ddm_ineg", false]], "ddm_irmul() (in module sympy.polys.matrices.dense)": [[209, "sympy.polys.matrices.dense.ddm_irmul", false]], "ddm_irref() (in module sympy.polys.matrices.dense)": [[209, "sympy.polys.matrices.dense.ddm_irref", false]], "ddm_irref_den() (in module sympy.polys.matrices.dense)": [[209, "sympy.polys.matrices.dense.ddm_irref_den", false]], "ddm_isub() (in module sympy.polys.matrices.dense)": [[209, "sympy.polys.matrices.dense.ddm_isub", false]], "ddm_transpose() (in module sympy.polys.matrices.dense)": [[209, "sympy.polys.matrices.dense.ddm_transpose", false]], "deactivation_time_constant (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.deactivation_time_constant", false]], "debug() (in module sympy.utilities.misc)": [[261, "sympy.utilities.misc.debug", false]], "debug_decorator() (in module sympy.utilities.misc)": [[261, "sympy.utilities.misc.debug_decorator", false]], "debugf() (in module sympy.utilities.misc)": [[261, "sympy.utilities.misc.debugf", false]], "decimal_dig (sympy.codegen.ast.floattype property)": [[69, "sympy.codegen.ast.FloatType.decimal_dig", false]], "decipher_affine() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_affine", false]], "decipher_atbash() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_atbash", false]], "decipher_bifid() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_bifid", false]], "decipher_bifid5() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_bifid5", false]], "decipher_bifid6() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_bifid6", false]], "decipher_elgamal() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_elgamal", false]], "decipher_gm() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_gm", false]], "decipher_hill() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_hill", false]], "decipher_kid_rsa() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_kid_rsa", false]], "decipher_railfence() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_railfence", false]], "decipher_rot13() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_rot13", false]], "decipher_rsa() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_rsa", false]], "decipher_shift() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_shift", false]], "decipher_vigenere() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_vigenere", false]], "declaration (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Declaration", false]], "decode_morse() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decode_morse", false]], "decompose() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.decompose", false]], "decompose() (sympy.physics.quantum.gate.cgate method)": [[174, "sympy.physics.quantum.gate.CGate.decompose", false]], "decompose() (sympy.physics.quantum.gate.swapgate method)": [[174, "sympy.physics.quantum.gate.SwapGate.decompose", false]], "decompose() (sympy.physics.quantum.qft.iqft method)": [[183, "sympy.physics.quantum.qft.IQFT.decompose", false]], "decompose() (sympy.physics.quantum.qft.qft method)": [[183, "sympy.physics.quantum.qft.QFT.decompose", false]], "decompose() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.decompose", false]], "decompose() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.decompose", false]], "decompose() (sympy.stats.discretemarkovchain method)": [[240, "sympy.stats.DiscreteMarkovChain.decompose", false]], "deduced() (sympy.codegen.ast.variable class method)": [[69, "sympy.codegen.ast.Variable.deduced", false]], "default_sort_key() (in module sympy.core.sorting)": [[88, "sympy.core.sorting.default_sort_key", false]], "deflate() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.deflate", false]], "deflate() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.deflate", false]], "deflection() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.deflection", false]], "deflection() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.deflection", false]], "deflection_jumps (sympy.physics.continuum_mechanics.beam.beam property)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.deflection_jumps", false]], "degree (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.degree", false]], "degree() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.degree", false]], "degree() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.degree", false]], "degree() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.degree", false]], "degree() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.degree", false]], "degree_list() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.degree_list", false]], "degree_list() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.degree_list", false]], "degree_list() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.degree_list", false]], "degrees() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.degrees", false]], "del (class in sympy.vector.deloperator)": [[264, "sympy.vector.deloperator.Del", false]], "delete_doubles() (sympy.liealgebras.weyl_group.weylgroup method)": [[117, "sympy.liealgebras.weyl_group.WeylGroup.delete_doubles", false]], "delta (sympy.functions.special.hyper.meijerg property)": [[96, "sympy.functions.special.hyper.meijerg.delta", false]], "deltaintegrate() (in module sympy.integrals.deltafunctions)": [[115, "sympy.integrals.deltafunctions.deltaintegrate", false]], "den (sympy.physics.control.lti.feedback property)": [[143, "sympy.physics.control.lti.Feedback.den", false]], "den (sympy.physics.control.lti.transferfunction property)": [[143, "sympy.physics.control.lti.TransferFunction.den", false]], "denom() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.denom", false]], "denom() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.denom", false]], "denom() (sympy.polys.domains.expressiondomain method)": [[211, "sympy.polys.domains.ExpressionDomain.denom", false]], "denom() (sympy.polys.domains.fractionfield method)": [[211, "sympy.polys.domains.FractionField.denom", false]], "denom() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianRationalField.denom", false]], "denom() (sympy.polys.domains.gmpyrationalfield method)": [[211, "sympy.polys.domains.GMPYRationalField.denom", false]], "denom() (sympy.polys.domains.rationalfield method)": [[211, "sympy.polys.domains.RationalField.denom", false]], "denom() (sympy.polys.domains.ring.ring method)": [[211, "sympy.polys.domains.ring.Ring.denom", false]], "denom() (sympy.polys.polyclasses.dmf method)": [[211, "sympy.polys.polyclasses.DMF.denom", false]], "densematrix (class in sympy.matrices.dense)": [[119, "sympy.matrices.dense.DenseMatrix", false]], "density() (in module sympy.stats)": [[240, "sympy.stats.density", false]], "deprecated() (in module sympy.utilities.decorator)": [[254, "sympy.utilities.decorator.deprecated", false]], "depth() (sympy.polys.agca.ideals.ideal method)": [[207, "sympy.polys.agca.ideals.Ideal.depth", false]], "derivative (class in sympy.core.function)": [[88, "sympy.core.function.Derivative", false]], "derive_by_array() (in module sympy.tensor.array)": [[241, "sympy.tensor.array.derive_by_array", false]], "derived_series() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.derived_series", false]], "derived_subgroup() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.derived_subgroup", false]], "descent() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.descent", false]], "descents() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.descents", false]], "det() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.det", false]], "det() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.det", false]], "det() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.det", false]], "det() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.det", false]], "det() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.det", false]], "det_lu_decomposition() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.det_LU_decomposition", false]], "deviation() (in module sympy.physics.optics.utils)": [[163, "sympy.physics.optics.utils.deviation", false]], "dfm (class in sympy.polys.matrices._dfm)": [[209, "sympy.polys.matrices._dfm.DFM", false]], "dh_private_key() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.dh_private_key", false]], "dh_public_key() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.dh_public_key", false]], "dh_shared_key() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.dh_shared_key", false]], "diag() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.diag", false]], "diag() (sympy.matrices.matrixbase.matrixbase class method)": [[124, "sympy.matrices.matrixbase.MatrixBase.diag", false]], "diag() (sympy.polys.matrices._dfm.dfm class method)": [[209, "sympy.polys.matrices._dfm.DFM.diag", false]], "diag() (sympy.polys.matrices.ddm.ddm class method)": [[209, "sympy.polys.matrices.ddm.DDM.diag", false]], "diag() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.diag", false]], "diagonal() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.diagonal", false]], "diagonal() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.diagonal", false]], "diagonal() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.diagonal", false]], "diagonal() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.diagonal", false]], "diagonal() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.diagonal", false]], "diagonal_solve() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.diagonal_solve", false]], "diagonalize() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.diagonalize", false]], "diagonalpredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.DiagonalPredicate", false]], "diagram (class in sympy.categories)": [[68, "sympy.categories.Diagram", false]], "diagramgrid (class in sympy.categories.diagram_drawing)": [[68, "sympy.categories.diagram_drawing.DiagramGrid", false]], "dict (class in sympy.core.containers)": [[88, "sympy.core.containers.Dict", false]], "dict_merge() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.dict_merge", false]], "die() (in module sympy.stats)": [[240, "sympy.stats.Die", false]], "diepspace (class in sympy.stats.frv_types)": [[240, "sympy.stats.frv_types.DiePSpace", false]], "diff() (in module sympy.core.function)": [[88, "sympy.core.function.diff", false]], "diff() (sympy.holonomic.holonomic.holonomicfunction method)": [[110, "sympy.holonomic.holonomic.HolonomicFunction.diff", false]], "diff() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.diff", false]], "diff() (sympy.physics.vector.vector.vector method)": [[199, "sympy.physics.vector.vector.Vector.diff", false]], "diff() (sympy.polys.fields.fracelement method)": [[211, "sympy.polys.fields.FracElement.diff", false]], "diff() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.diff", false]], "diff() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.diff", false]], "diff() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.diff", false]], "difference_delta() (in module sympy.series.limitseq)": [[225, "sympy.series.limitseq.difference_delta", false]], "differential (class in sympy.diffgeom)": [[90, "sympy.diffgeom.Differential", false]], "differentialoperator (class in sympy.holonomic.holonomic)": [[111, "sympy.holonomic.holonomic.DifferentialOperator", false]], "differentialoperator (class in sympy.physics.quantum.operator)": [[179, "sympy.physics.quantum.operator.DifferentialOperator", false]], "differentialoperatoralgebra (class in sympy.holonomic.holonomic)": [[111, "sympy.holonomic.holonomic.DifferentialOperatorAlgebra", false]], "differentialoperators() (in module sympy.holonomic.holonomic)": [[111, "sympy.holonomic.holonomic.DifferentialOperators", false]], "differentiate_finite() (in module sympy.calculus.finite_diff)": [[67, "sympy.calculus.finite_diff.differentiate_finite", false]], "dig (sympy.codegen.ast.floattype property)": [[69, "sympy.codegen.ast.FloatType.dig", false]], "digamma (class in sympy.functions.special.gamma_functions)": [[96, "sympy.functions.special.gamma_functions.digamma", false]], "digit_2txt (in module sympy.printing.pretty.pretty_symbology)": [[220, "sympy.printing.pretty.pretty_symbology.digit_2txt", false]], "digits() (in module sympy.ntheory.digits)": [[128, "sympy.ntheory.digits.digits", false]], "digits() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.digits", false]], "dihedral() (sympy.combinatorics.generators method)": [[80, "sympy.combinatorics.generators.dihedral", false]], "dihedralgroup() (in module sympy.combinatorics.named_groups)": [[76, "sympy.combinatorics.named_groups.DihedralGroup", false]], "dim (sympy.physics.units.dimensions.dimensionsystem property)": [[192, "sympy.physics.units.dimensions.DimensionSystem.dim", false]], "dim (sympy.physics.units.unitsystem.unitsystem property)": [[198, "sympy.physics.units.unitsystem.UnitSystem.dim", false]], "dim_can_vector() (sympy.physics.units.dimensions.dimensionsystem method)": [[192, "sympy.physics.units.dimensions.DimensionSystem.dim_can_vector", false]], "dim_handling() (in module sympy.printing.aesaracode)": [[220, "sympy.printing.aesaracode.dim_handling", false]], "dim_vector() (sympy.physics.units.dimensions.dimensionsystem method)": [[192, "sympy.physics.units.dimensions.DimensionSystem.dim_vector", false]], "dimension (class in sympy.physics.units.dimensions)": [[192, "sympy.physics.units.dimensions.Dimension", false]], "dimension (sympy.physics.quantum.hilbert.hilbertspace property)": [[176, "sympy.physics.quantum.hilbert.HilbertSpace.dimension", false]], "dimension() (in module sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.dimension", false]], "dimension() (sympy.liealgebras.type_a.typea method)": [[117, "sympy.liealgebras.type_a.TypeA.dimension", false]], "dimension() (sympy.liealgebras.type_b.typeb method)": [[117, "sympy.liealgebras.type_b.TypeB.dimension", false]], "dimension() (sympy.liealgebras.type_c.typec method)": [[117, "sympy.liealgebras.type_c.TypeC.dimension", false]], "dimension() (sympy.liealgebras.type_d.typed method)": [[117, "sympy.liealgebras.type_d.TypeD.dimension", false]], "dimension() (sympy.liealgebras.type_e.typee method)": [[117, "sympy.liealgebras.type_e.TypeE.dimension", false]], "dimension() (sympy.liealgebras.type_f.typef method)": [[117, "sympy.liealgebras.type_f.TypeF.dimension", false]], "dimension() (sympy.liealgebras.type_g.typeg method)": [[117, "sympy.liealgebras.type_g.TypeG.dimension", false]], "dimensionsystem (class in sympy.physics.units.dimensions)": [[192, "sympy.physics.units.dimensions.DimensionSystem", false]], "diop_bf_dn() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.diop_bf_DN", false]], "diop_dn() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.diop_DN", false]], "diop_general_pythagorean() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.diop_general_pythagorean", false]], "diop_general_sum_of_even_powers() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.diop_general_sum_of_even_powers", false]], "diop_general_sum_of_squares() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.diop_general_sum_of_squares", false]], "diop_linear() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.diop_linear", false]], "diop_quadratic() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.diop_quadratic", false]], "diop_solve() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.diop_solve", false]], "diop_ternary_quadratic() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.diop_ternary_quadratic", false]], "diop_ternary_quadratic_normal() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.diop_ternary_quadratic_normal", false]], "diophantine() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.diophantine", false]], "diophantineequationtype (class in sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.DiophantineEquationType", false]], "diophantinesolutionset (class in sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.DiophantineSolutionSet", false]], "diracdelta (class in sympy.functions.special.delta_functions)": [[96, "sympy.functions.special.delta_functions.DiracDelta", false]], "direct_product() (sympy.tensor.tensor.tensorsymmetry class method)": [[246, "sympy.tensor.tensor.TensorSymmetry.direct_product", false]], "direction (sympy.geometry.line.linearentity property)": [[101, "sympy.geometry.line.LinearEntity.direction", false]], "direction_cosine (sympy.geometry.line.linearentity3d property)": [[101, "sympy.geometry.line.LinearEntity3D.direction_cosine", false]], "direction_cosine() (sympy.geometry.point.point3d method)": [[103, "sympy.geometry.point.Point3D.direction_cosine", false]], "direction_ratio (sympy.geometry.line.linearentity3d property)": [[101, "sympy.geometry.line.LinearEntity3D.direction_ratio", false]], "direction_ratio() (sympy.geometry.point.point3d method)": [[103, "sympy.geometry.point.Point3D.direction_ratio", false]], "director_circle() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.director_circle", false]], "directproduct() (in module sympy.combinatorics.group_constructs)": [[73, "sympy.combinatorics.group_constructs.DirectProduct", false]], "directsumhilbertspace (class in sympy.physics.quantum.hilbert)": [[176, "sympy.physics.quantum.hilbert.DirectSumHilbertSpace", false]], "dirichlet_eta (class in sympy.functions.special.zeta_functions)": [[96, "sympy.functions.special.zeta_functions.dirichlet_eta", false]], "discard_before() (sympy.polys.numberfields.modules.submodule method)": [[215, "sympy.polys.numberfields.modules.Submodule.discard_before", false]], "discrete_log() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.discrete_log", false]], "discretemarkovchain (class in sympy.stats)": [[240, "sympy.stats.DiscreteMarkovChain", false]], "discreteuniform() (in module sympy.stats)": [[240, "sympy.stats.DiscreteUniform", false]], "discriminant() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.discriminant", false]], "discriminant() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.discriminant", false]], "discriminant() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.discriminant", false]], "discriminant() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.discriminant", false]], "disjointunion (class in sympy.sets.sets)": [[228, "sympy.sets.sets.DisjointUnion", false]], "dispersion() (in module sympy.polys.dispersion)": [[216, "sympy.polys.dispersion.dispersion", false]], "dispersion() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.dispersion", false]], "dispersionset() (in module sympy.polys.dispersion)": [[216, "sympy.polys.dispersion.dispersionset", false]], "dispersionset() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.dispersionset", false]], "distance() (sympy.geometry.line.line method)": [[101, "sympy.geometry.line.Line.distance", false]], "distance() (sympy.geometry.line.line3d method)": [[101, "sympy.geometry.line.Line3D.distance", false]], "distance() (sympy.geometry.line.ray method)": [[101, "sympy.geometry.line.Ray.distance", false]], "distance() (sympy.geometry.line.segment method)": [[101, "sympy.geometry.line.Segment.distance", false]], "distance() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.distance", false]], "distance() (sympy.geometry.point.point method)": [[103, "sympy.geometry.point.Point.distance", false]], "distance() (sympy.geometry.polygon.polygon method)": [[104, "sympy.geometry.polygon.Polygon.distance", false]], "distribute_and_over_or() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.distribute_and_over_or", false]], "distribute_or_over_and() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.distribute_or_over_and", false]], "distribute_xor_over_and() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.distribute_xor_over_and", false]], "div() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.div", false]], "div() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.div", false]], "div() (sympy.polys.domains.field.field method)": [[211, "sympy.polys.domains.field.Field.div", false]], "div() (sympy.polys.domains.gmpyrationalfield method)": [[211, "sympy.polys.domains.GMPYRationalField.div", false]], "div() (sympy.polys.domains.rationalfield method)": [[211, "sympy.polys.domains.RationalField.div", false]], "div() (sympy.polys.domains.ring.ring method)": [[211, "sympy.polys.domains.ring.Ring.div", false]], "div() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.div", false]], "div() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.div", false]], "div() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.div", false]], "divergence (sympy.physics.optics.gaussopt.beamparameter property)": [[159, "sympy.physics.optics.gaussopt.BeamParameter.divergence", false]], "divergence() (in module sympy.physics.vector.fieldfunctions)": [[200, "sympy.physics.vector.fieldfunctions.divergence", false]], "divergence() (in module sympy.vector)": [[267, "sympy.vector.divergence", false]], "divisible() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.divisible", false]], "divisor_count() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.divisor_count", false]], "divisor_sigma (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.divisor_sigma", false]], "divisor_sigma() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.divisor_sigma", false]], "divisors() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.divisors", false]], "dm() (in module sympy.polys.matrices.domainmatrix)": [[209, "sympy.polys.matrices.domainmatrix.DM", false]], "dmf (class in sympy.polys.polyclasses)": [[211, "sympy.polys.polyclasses.DMF", false]], "dmp (class in sympy.polys.polyclasses)": [[211, "sympy.polys.polyclasses.DMP", false]], "dmp_abs() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_abs", false]], "dmp_add() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_add", false]], "dmp_add_ground() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_add_ground", false]], "dmp_add_mul() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_add_mul", false]], "dmp_add_term() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_add_term", false]], "dmp_apply_pairs() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_apply_pairs", false]], "dmp_cancel() (in module sympy.polys.euclidtools)": [[213, "sympy.polys.euclidtools.dmp_cancel", false]], "dmp_clear_denoms() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dmp_clear_denoms", false]], "dmp_compose() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dmp_compose", false]], "dmp_content() (in module sympy.polys.euclidtools)": [[213, "sympy.polys.euclidtools.dmp_content", false]], "dmp_convert() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_convert", false]], "dmp_copy() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_copy", false]], "dmp_deflate() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_deflate", false]], "dmp_degree() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_degree", false]], "dmp_degree_in() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_degree_in", false]], "dmp_degree_list() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_degree_list", false]], "dmp_diff() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dmp_diff", false]], "dmp_diff_eval_in() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dmp_diff_eval_in", false]], "dmp_diff_in() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dmp_diff_in", false]], "dmp_discriminant() (in module sympy.polys.euclidtools)": [[213, "sympy.polys.euclidtools.dmp_discriminant", false]], "dmp_div() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_div", false]], "dmp_eject() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_eject", false]], "dmp_euclidean_prs() (in module sympy.polys.euclidtools)": [[213, "sympy.polys.euclidtools.dmp_euclidean_prs", false]], "dmp_eval() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dmp_eval", false]], "dmp_eval_in() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dmp_eval_in", false]], "dmp_eval_tail() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dmp_eval_tail", false]], "dmp_exclude() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_exclude", false]], "dmp_expand() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_expand", false]], "dmp_exquo() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_exquo", false]], "dmp_exquo_ground() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_exquo_ground", false]], "dmp_ext_factor() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dmp_ext_factor", false]], "dmp_factor_list() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dmp_factor_list", false]], "dmp_factor_list_include() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dmp_factor_list_include", false]], "dmp_ff_div() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_ff_div", false]], "dmp_ff_prs_gcd() (in module sympy.polys.euclidtools)": [[213, "sympy.polys.euclidtools.dmp_ff_prs_gcd", false]], "dmp_from_dict() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_from_dict", false]], "dmp_from_sympy() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_from_sympy", false]], "dmp_gcd() (in module sympy.polys.euclidtools)": [[213, "sympy.polys.euclidtools.dmp_gcd", false]], "dmp_gcdex() (in module sympy.polys.euclidtools)": [[213, "sympy.polys.euclidtools.dmp_gcdex", false]], "dmp_gf_factor() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dmp_gf_factor", false]], "dmp_gf_sqf_list() (in module sympy.polys.sqfreetools)": [[213, "sympy.polys.sqfreetools.dmp_gf_sqf_list", false]], "dmp_gf_sqf_part() (in module sympy.polys.sqfreetools)": [[213, "sympy.polys.sqfreetools.dmp_gf_sqf_part", false]], "dmp_gff_list() (in module sympy.polys.sqfreetools)": [[213, "sympy.polys.sqfreetools.dmp_gff_list", false]], "dmp_ground() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_ground", false]], "dmp_ground_content() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dmp_ground_content", false]], "dmp_ground_extract() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dmp_ground_extract", false]], "dmp_ground_lc() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_ground_LC", false]], "dmp_ground_monic() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dmp_ground_monic", false]], "dmp_ground_nth() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_ground_nth", false]], "dmp_ground_p() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_ground_p", false]], "dmp_ground_primitive() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dmp_ground_primitive", false]], "dmp_ground_tc() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_ground_TC", false]], "dmp_ground_trunc() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dmp_ground_trunc", false]], "dmp_grounds() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_grounds", false]], "dmp_half_gcdex() (in module sympy.polys.euclidtools)": [[213, "sympy.polys.euclidtools.dmp_half_gcdex", false]], "dmp_include() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_include", false]], "dmp_inflate() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_inflate", false]], "dmp_inject() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_inject", false]], "dmp_inner_gcd() (in module sympy.polys.euclidtools)": [[213, "sympy.polys.euclidtools.dmp_inner_gcd", false]], "dmp_inner_subresultants() (in module sympy.polys.euclidtools)": [[213, "sympy.polys.euclidtools.dmp_inner_subresultants", false]], "dmp_integrate() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dmp_integrate", false]], "dmp_integrate_in() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dmp_integrate_in", false]], "dmp_invert() (in module sympy.polys.euclidtools)": [[213, "sympy.polys.euclidtools.dmp_invert", false]], "dmp_irreducible_p() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dmp_irreducible_p", false]], "dmp_l1_norm() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_l1_norm", false]], "dmp_lc() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_LC", false]], "dmp_lcm() (in module sympy.polys.euclidtools)": [[213, "sympy.polys.euclidtools.dmp_lcm", false]], "dmp_lift() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dmp_lift", false]], "dmp_list_terms() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_list_terms", false]], "dmp_max_norm() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_max_norm", false]], "dmp_mul() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_mul", false]], "dmp_mul_ground() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_mul_ground", false]], "dmp_mul_term() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_mul_term", false]], "dmp_multi_deflate() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_multi_deflate", false]], "dmp_neg() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_neg", false]], "dmp_negative_p() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_negative_p", false]], "dmp_nest() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_nest", false]], "dmp_norm() (in module sympy.polys.sqfreetools)": [[213, "sympy.polys.sqfreetools.dmp_norm", false]], "dmp_normal() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_normal", false]], "dmp_nth() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_nth", false]], "dmp_one() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_one", false]], "dmp_one_p() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_one_p", false]], "dmp_pdiv() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_pdiv", false]], "dmp_permute() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_permute", false]], "dmp_pexquo() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_pexquo", false]], "dmp_positive_p() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_positive_p", false]], "dmp_pow() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_pow", false]], "dmp_pquo() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_pquo", false]], "dmp_prem() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_prem", false]], "dmp_primitive() (in module sympy.polys.euclidtools)": [[213, "sympy.polys.euclidtools.dmp_primitive", false]], "dmp_primitive_prs() (in module sympy.polys.euclidtools)": [[213, "sympy.polys.euclidtools.dmp_primitive_prs", false]], "dmp_prs_resultant() (in module sympy.polys.euclidtools)": [[213, "sympy.polys.euclidtools.dmp_prs_resultant", false]], "dmp_qq_collins_resultant() (in module sympy.polys.euclidtools)": [[213, "sympy.polys.euclidtools.dmp_qq_collins_resultant", false]], "dmp_qq_heu_gcd() (in module sympy.polys.euclidtools)": [[213, "sympy.polys.euclidtools.dmp_qq_heu_gcd", false]], "dmp_qq_i_factor() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dmp_qq_i_factor", false]], "dmp_quo() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_quo", false]], "dmp_quo_ground() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_quo_ground", false]], "dmp_raise() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_raise", false]], "dmp_rem() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_rem", false]], "dmp_resultant() (in module sympy.polys.euclidtools)": [[213, "sympy.polys.euclidtools.dmp_resultant", false]], "dmp_revert() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dmp_revert", false]], "dmp_rr_div() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_rr_div", false]], "dmp_rr_prs_gcd() (in module sympy.polys.euclidtools)": [[213, "sympy.polys.euclidtools.dmp_rr_prs_gcd", false]], "dmp_slice() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_slice", false]], "dmp_sqf_list() (in module sympy.polys.sqfreetools)": [[213, "sympy.polys.sqfreetools.dmp_sqf_list", false]], "dmp_sqf_list_include() (in module sympy.polys.sqfreetools)": [[213, "sympy.polys.sqfreetools.dmp_sqf_list_include", false]], "dmp_sqf_norm() (in module sympy.polys.sqfreetools)": [[213, "sympy.polys.sqfreetools.dmp_sqf_norm", false]], "dmp_sqf_p() (in module sympy.polys.sqfreetools)": [[213, "sympy.polys.sqfreetools.dmp_sqf_p", false]], "dmp_sqf_part() (in module sympy.polys.sqfreetools)": [[213, "sympy.polys.sqfreetools.dmp_sqf_part", false]], "dmp_sqr() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_sqr", false]], "dmp_strip() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_strip", false]], "dmp_sub() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_sub", false]], "dmp_sub_ground() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_sub_ground", false]], "dmp_sub_mul() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_sub_mul", false]], "dmp_sub_term() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dmp_sub_term", false]], "dmp_subresultants() (in module sympy.polys.euclidtools)": [[213, "sympy.polys.euclidtools.dmp_subresultants", false]], "dmp_swap() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_swap", false]], "dmp_tc() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_TC", false]], "dmp_terms_gcd() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_terms_gcd", false]], "dmp_to_dict() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_to_dict", false]], "dmp_to_tuple() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_to_tuple", false]], "dmp_trial_division() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dmp_trial_division", false]], "dmp_true_lt() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_true_LT", false]], "dmp_trunc() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dmp_trunc", false]], "dmp_validate() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_validate", false]], "dmp_zero() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_zero", false]], "dmp_zero_p() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_zero_p", false]], "dmp_zeros() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dmp_zeros", false]], "dmp_zz_collins_resultant() (in module sympy.polys.euclidtools)": [[213, "sympy.polys.euclidtools.dmp_zz_collins_resultant", false]], "dmp_zz_diophantine() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dmp_zz_diophantine", false]], "dmp_zz_factor() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dmp_zz_factor", false]], "dmp_zz_heu_gcd() (in module sympy.polys.euclidtools)": [[213, "sympy.polys.euclidtools.dmp_zz_heu_gcd", false]], "dmp_zz_i_factor() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dmp_zz_i_factor", false]], "dmp_zz_mignotte_bound() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dmp_zz_mignotte_bound", false]], "dmp_zz_modular_resultant() (in module sympy.polys.euclidtools)": [[213, "sympy.polys.euclidtools.dmp_zz_modular_resultant", false]], "dmp_zz_wang() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dmp_zz_wang", false]], "dmp_zz_wang_hensel_lifting() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dmp_zz_wang_hensel_lifting", false]], "dmp_zz_wang_lead_coeffs() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dmp_zz_wang_lead_coeffs", false]], "dmp_zz_wang_non_divisors() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dmp_zz_wang_non_divisors", false]], "dmp_zz_wang_test_points() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dmp_zz_wang_test_points", false]], "do (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.Do", false]], "do_subs() (sympy.series.gruntz.subsset method)": [[227, "sympy.series.gruntz.SubsSet.do_subs", false]], "doctest() (in module sympy.testing.runtests)": [[251, "sympy.testing.runtests.doctest", false]], "doctest_depends_on() (in module sympy.utilities.decorator)": [[254, "sympy.utilities.decorator.doctest_depends_on", false]], "doit() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.doit", false]], "doit() (sympy.functions.elementary.piecewise.piecewise method)": [[94, "sympy.functions.elementary.piecewise.Piecewise.doit", false]], "doit() (sympy.integrals.integrals.integral method)": [[115, "sympy.integrals.integrals.Integral.doit", false]], "doit() (sympy.integrals.transforms.integraltransform method)": [[115, "sympy.integrals.transforms.IntegralTransform.doit", false]], "doit() (sympy.integrals.transforms.inverselaplacetransform method)": [[115, "sympy.integrals.transforms.InverseLaplaceTransform.doit", false]], "doit() (sympy.integrals.transforms.laplacetransform method)": [[115, "sympy.integrals.transforms.LaplaceTransform.doit", false]], "doit() (sympy.physics.biomechanics.curve.fiberforcelengthactivedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthActiveDeGroote2016.doit", false]], "doit() (sympy.physics.biomechanics.curve.fiberforcelengthpassivedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveDeGroote2016.doit", false]], "doit() (sympy.physics.biomechanics.curve.fiberforcelengthpassiveinversedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveInverseDeGroote2016.doit", false]], "doit() (sympy.physics.biomechanics.curve.fiberforcevelocitydegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceVelocityDeGroote2016.doit", false]], "doit() (sympy.physics.biomechanics.curve.fiberforcevelocityinversedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceVelocityInverseDeGroote2016.doit", false]], "doit() (sympy.physics.biomechanics.curve.tendonforcelengthdegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.TendonForceLengthDeGroote2016.doit", false]], "doit() (sympy.physics.biomechanics.curve.tendonforcelengthinversedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.TendonForceLengthInverseDeGroote2016.doit", false]], "doit() (sympy.physics.control.lti.feedback method)": [[143, "sympy.physics.control.lti.Feedback.doit", false]], "doit() (sympy.physics.control.lti.mimofeedback method)": [[143, "sympy.physics.control.lti.MIMOFeedback.doit", false]], "doit() (sympy.physics.control.lti.mimoparallel method)": [[143, "sympy.physics.control.lti.MIMOParallel.doit", false]], "doit() (sympy.physics.control.lti.mimoseries method)": [[143, "sympy.physics.control.lti.MIMOSeries.doit", false]], "doit() (sympy.physics.control.lti.parallel method)": [[143, "sympy.physics.control.lti.Parallel.doit", false]], "doit() (sympy.physics.control.lti.series method)": [[143, "sympy.physics.control.lti.Series.doit", false]], "doit() (sympy.physics.quantum.anticommutator.anticommutator method)": [[167, "sympy.physics.quantum.anticommutator.AntiCommutator.doit", false]], "doit() (sympy.physics.quantum.commutator.commutator method)": [[171, "sympy.physics.quantum.commutator.Commutator.doit", false]], "doit() (sympy.physics.secondquant.commutator method)": [[190, "sympy.physics.secondquant.Commutator.doit", false]], "doit() (sympy.physics.secondquant.no method)": [[190, "sympy.physics.secondquant.NO.doit", false]], "doit() (sympy.physics.vector.dyadic.dyadic method)": [[199, "sympy.physics.vector.dyadic.Dyadic.doit", false]], "doit() (sympy.physics.vector.vector.vector method)": [[199, "sympy.physics.vector.vector.Vector.doit", false]], "doit() (sympy.series.limits.limit method)": [[227, "sympy.series.limits.Limit.doit", false]], "doit_numerically() (sympy.core.function.derivative method)": [[88, "sympy.core.function.Derivative.doit_numerically", false]], "domain (class in sympy.polys.domains.domain)": [[211, "sympy.polys.domains.domain.Domain", false]], "domain (sympy.categories.compositemorphism property)": [[68, "sympy.categories.CompositeMorphism.domain", false]], "domain (sympy.categories.morphism property)": [[68, "sympy.categories.Morphism.domain", false]], "domain (sympy.polys.polytools.poly property)": [[216, "sympy.polys.polytools.Poly.domain", false]], "domain_check() (in module sympy.solvers.solveset)": [[239, "sympy.solvers.solveset.domain_check", false]], "domainelement (class in sympy.polys.domains.domainelement)": [[211, "sympy.polys.domains.domainelement.DomainElement", false]], "domainerror (class in sympy.polys.polyerrors)": [[213, "sympy.polys.polyerrors.DomainError", false]], "domainmatrix (class in sympy.polys.matrices.domainmatrix)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix", false]], "dominant() (in module sympy.series.limitseq)": [[225, "sympy.series.limitseq.dominant", false]], "doprint() (sympy.printing.aesaracode.aesaraprinter method)": [[220, "sympy.printing.aesaracode.AesaraPrinter.doprint", false]], "doprint() (sympy.printing.codeprinter.codeprinter method)": [[220, "sympy.printing.codeprinter.CodePrinter.doprint", false]], "doprint() (sympy.printing.mathml.mathmlprinterbase method)": [[220, "sympy.printing.mathml.MathMLPrinterBase.doprint", false]], "doprint() (sympy.printing.printer.printer method)": [[220, "sympy.printing.printer.Printer.doprint", false]], "dot() (in module sympy.physics.vector.functions)": [[201, "sympy.physics.vector.functions.dot", false]], "dot() (sympy.geometry.point.point method)": [[103, "sympy.geometry.point.Point.dot", false]], "dot() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.dot", false]], "dot() (sympy.physics.vector.dyadic.dyadic method)": [[199, "sympy.physics.vector.dyadic.Dyadic.dot", false]], "dot() (sympy.physics.vector.vector.vector method)": [[199, "sympy.physics.vector.vector.Vector.dot", false]], "dot() (sympy.vector.deloperator.del method)": [[264, "sympy.vector.deloperator.Del.dot", false]], "dot() (sympy.vector.dyadic.dyadic method)": [[264, "sympy.vector.dyadic.Dyadic.dot", false]], "dot() (sympy.vector.vector.vector method)": [[264, "sympy.vector.vector.Vector.dot", false]], "dot_rot_grad_ynm() (in module sympy.physics.wigner)": [[205, "sympy.physics.wigner.dot_rot_grad_Ynm", false]], "dotprint() (in module sympy.printing.dot)": [[220, "sympy.printing.dot.dotprint", false]], "double_coset_can_rep() (in module sympy.combinatorics.tensor_can)": [[84, "sympy.combinatorics.tensor_can.double_coset_can_rep", false]], "draw() (sympy.categories.diagram_drawing.xypicdiagramdrawer method)": [[68, "sympy.categories.diagram_drawing.XypicDiagramDrawer.draw", false]], "draw() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.draw", false]], "draw() (sympy.physics.continuum_mechanics.cable.cable method)": [[137, "sympy.physics.continuum_mechanics.cable.Cable.draw", false]], "draw() (sympy.physics.continuum_mechanics.truss.truss method)": [[139, "sympy.physics.continuum_mechanics.truss.Truss.draw", false]], "drop() (sympy.polys.domains.compositedomain.compositedomain method)": [[211, "sympy.polys.domains.compositedomain.CompositeDomain.drop", false]], "drop() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.drop", false]], "drop() (sympy.polys.rings.polyring method)": [[211, "sympy.polys.rings.PolyRing.drop", false]], "drop_to_ground() (sympy.polys.rings.polyring method)": [[211, "sympy.polys.rings.PolyRing.drop_to_ground", false]], "dsign (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.dsign", false]], "dsolve() (in module sympy.solvers.ode)": [[236, "sympy.solvers.ode.dsolve", false]], "dsolve_system() (in module sympy.solvers.ode.systems)": [[236, "sympy.solvers.ode.systems.dsolve_system", false]], "dt() (sympy.physics.vector.dyadic.dyadic method)": [[199, "sympy.physics.vector.dyadic.Dyadic.dt", false]], "dt() (sympy.physics.vector.vector.vector method)": [[199, "sympy.physics.vector.vector.Vector.dt", false]], "dtype (sympy.polys.agca.extensions.monogenicfiniteextension attribute)": [[207, "sympy.polys.agca.extensions.MonogenicFiniteExtension.dtype", false]], "dtype (sympy.polys.agca.modules.freemodule attribute)": [[207, "sympy.polys.agca.modules.FreeModule.dtype", false]], "dtype (sympy.polys.agca.modules.quotientmodule attribute)": [[207, "sympy.polys.agca.modules.QuotientModule.dtype", false]], "dtype (sympy.polys.domains.algebraicfield attribute)": [[211, "sympy.polys.domains.AlgebraicField.dtype", false]], "dtype (sympy.polys.domains.domain.domain attribute)": [[211, "sympy.polys.domains.domain.Domain.dtype", false]], "dtype (sympy.polys.domains.expressiondomain attribute)": [[211, "sympy.polys.domains.ExpressionDomain.dtype", false]], "dtype (sympy.polys.domains.gaussiandomains.gaussianintegerring attribute)": [[211, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.dtype", false]], "dtype (sympy.polys.domains.gaussiandomains.gaussianrationalfield attribute)": [[211, "sympy.polys.domains.gaussiandomains.GaussianRationalField.dtype", false]], "dual (sympy.physics.quantum.state.statebase property)": [[188, "sympy.physics.quantum.state.StateBase.dual", false]], "dual() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.dual", false]], "dual_class() (sympy.physics.quantum.state.statebase class method)": [[188, "sympy.physics.quantum.state.StateBase.dual_class", false]], "duffingspring (class in sympy.physics.mechanics.actuator)": [[147, "sympy.physics.mechanics.actuator.DuffingSpring", false]], "dummy": [[15, "term-Dummy", true]], "dummy (class in sympy.core.symbol)": [[88, "sympy.core.symbol.Dummy", false]], "dummy_eq() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.dummy_eq", false]], "dummywrapper (class in sympy.utilities.autowrap)": [[252, "sympy.utilities.autowrap.DummyWrapper", false]], "dump_c() (sympy.utilities.autowrap.ufuncifycodewrapper method)": [[252, "sympy.utilities.autowrap.UfuncifyCodeWrapper.dump_c", false]], "dump_c() (sympy.utilities.codegen.ccodegen method)": [[253, "sympy.utilities.codegen.CCodeGen.dump_c", false]], "dump_code() (sympy.utilities.codegen.codegen method)": [[253, "sympy.utilities.codegen.CodeGen.dump_code", false]], "dump_f95() (sympy.utilities.codegen.fcodegen method)": [[253, "sympy.utilities.codegen.FCodeGen.dump_f95", false]], "dump_h() (sympy.utilities.codegen.ccodegen method)": [[253, "sympy.utilities.codegen.CCodeGen.dump_h", false]], "dump_h() (sympy.utilities.codegen.fcodegen method)": [[253, "sympy.utilities.codegen.FCodeGen.dump_h", false]], "dump_jl() (sympy.utilities.codegen.juliacodegen method)": [[253, "sympy.utilities.codegen.JuliaCodeGen.dump_jl", false]], "dump_m() (sympy.utilities.codegen.octavecodegen method)": [[253, "sympy.utilities.codegen.OctaveCodeGen.dump_m", false]], "dump_pyx() (sympy.utilities.autowrap.cythoncodewrapper method)": [[252, "sympy.utilities.autowrap.CythonCodeWrapper.dump_pyx", false]], "dump_rs() (sympy.utilities.codegen.rustcodegen method)": [[253, "sympy.utilities.codegen.RustCodeGen.dump_rs", false]], "dup_content() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dup_content", false]], "dup_cyclotomic_p() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dup_cyclotomic_p", false]], "dup_decompose() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dup_decompose", false]], "dup_ext_factor() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dup_ext_factor", false]], "dup_extract() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dup_extract", false]], "dup_factor_list() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dup_factor_list", false]], "dup_factor_list_include() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dup_factor_list_include", false]], "dup_gf_factor() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dup_gf_factor", false]], "dup_gf_sqf_list() (in module sympy.polys.sqfreetools)": [[213, "sympy.polys.sqfreetools.dup_gf_sqf_list", false]], "dup_gf_sqf_part() (in module sympy.polys.sqfreetools)": [[213, "sympy.polys.sqfreetools.dup_gf_sqf_part", false]], "dup_gff_list() (in module sympy.polys.sqfreetools)": [[213, "sympy.polys.sqfreetools.dup_gff_list", false]], "dup_irreducible_p() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dup_irreducible_p", false]], "dup_lshift() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dup_lshift", false]], "dup_mirror() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dup_mirror", false]], "dup_monic() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dup_monic", false]], "dup_primitive() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dup_primitive", false]], "dup_qq_i_factor() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dup_qq_i_factor", false]], "dup_random() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dup_random", false]], "dup_real_imag() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dup_real_imag", false]], "dup_reverse() (in module sympy.polys.densebasic)": [[213, "sympy.polys.densebasic.dup_reverse", false]], "dup_rshift() (in module sympy.polys.densearith)": [[213, "sympy.polys.densearith.dup_rshift", false]], "dup_scale() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dup_scale", false]], "dup_shift() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dup_shift", false]], "dup_sign_variations() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dup_sign_variations", false]], "dup_sqf_list() (in module sympy.polys.sqfreetools)": [[213, "sympy.polys.sqfreetools.dup_sqf_list", false]], "dup_sqf_list_include() (in module sympy.polys.sqfreetools)": [[213, "sympy.polys.sqfreetools.dup_sqf_list_include", false]], "dup_sqf_norm() (in module sympy.polys.sqfreetools)": [[213, "sympy.polys.sqfreetools.dup_sqf_norm", false]], "dup_sqf_p() (in module sympy.polys.sqfreetools)": [[213, "sympy.polys.sqfreetools.dup_sqf_p", false]], "dup_sqf_part() (in module sympy.polys.sqfreetools)": [[213, "sympy.polys.sqfreetools.dup_sqf_part", false]], "dup_transform() (in module sympy.polys.densetools)": [[213, "sympy.polys.densetools.dup_transform", false]], "dup_trial_division() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dup_trial_division", false]], "dup_zz_cyclotomic_factor() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dup_zz_cyclotomic_factor", false]], "dup_zz_cyclotomic_poly() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dup_zz_cyclotomic_poly", false]], "dup_zz_diophantine() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dup_zz_diophantine", false]], "dup_zz_factor() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dup_zz_factor", false]], "dup_zz_factor_sqf() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dup_zz_factor_sqf", false]], "dup_zz_hensel_lift() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dup_zz_hensel_lift", false]], "dup_zz_hensel_step() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dup_zz_hensel_step", false]], "dup_zz_i_factor() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dup_zz_i_factor", false]], "dup_zz_irreducible_p() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dup_zz_irreducible_p", false]], "dup_zz_mignotte_bound() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dup_zz_mignotte_bound", false]], "dup_zz_zassenhaus() (in module sympy.polys.factortools)": [[213, "sympy.polys.factortools.dup_zz_zassenhaus", false]], "dyadic (class in sympy.physics.vector.dyadic)": [[199, "sympy.physics.vector.dyadic.Dyadic", false]], "dyadic (class in sympy.vector.dyadic)": [[264, "sympy.vector.dyadic.Dyadic", false]], "dyn_implicit_mat (sympy.physics.mechanics.system.symbolicsystem property)": [[157, "sympy.physics.mechanics.system.SymbolicSystem.dyn_implicit_mat", false]], "dyn_implicit_rhs (sympy.physics.mechanics.system.symbolicsystem property)": [[157, "sympy.physics.mechanics.system.SymbolicSystem.dyn_implicit_rhs", false]], "dynamic_symbols() (sympy.physics.mechanics.system.symbolicsystem method)": [[157, "sympy.physics.mechanics.system.SymbolicSystem.dynamic_symbols", false]], "dynamicsymbols() (in module sympy.physics.vector)": [[201, "sympy.physics.vector.dynamicsymbols", false]], "dynkin_diagram() (sympy.liealgebras.root_system.rootsystem method)": [[117, "sympy.liealgebras.root_system.RootSystem.dynkin_diagram", false]], "dynkindiagram() (in module sympy.liealgebras.dynkin_diagram)": [[117, "sympy.liealgebras.dynkin_diagram.DynkinDiagram", false]], "e (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.e", false]], "e (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.e", false]], "e() (in module sympy.stats)": [[240, "sympy.stats.E", false]], "e1() (in module sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.E1", false]], "e_n() (in module sympy.physics.qho_1d)": [[166, "sympy.physics.qho_1d.E_n", false]], "e_nl() (in module sympy.physics.hydrogen)": [[145, "sympy.physics.hydrogen.E_nl", false]], "e_nl() (in module sympy.physics.sho)": [[191, "sympy.physics.sho.E_nl", false]], "e_nl_dirac() (in module sympy.physics.hydrogen)": [[145, "sympy.physics.hydrogen.E_nl_dirac", false]], "ec() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.EC", false]], "eccentricity (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.eccentricity", false]], "echelon_form() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.echelon_form", false]], "ecm() (in module sympy.ntheory.ecm)": [[128, "sympy.ntheory.ecm.ecm", false]], "edges (sympy.combinatorics.polyhedron.polyhedron property)": [[81, "sympy.combinatorics.polyhedron.Polyhedron.edges", false]], "edges() (sympy.combinatorics.prufer.prufer static method)": [[82, "sympy.combinatorics.prufer.Prufer.edges", false]], "egyptian_fraction() (in module sympy.ntheory.egyptian_fraction)": [[128, "sympy.ntheory.egyptian_fraction.egyptian_fraction", false]], "ei (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.Ei", false]], "eigenvals() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.eigenvals", false]], "eigenvects() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.eigenvects", false]], "eijk() (in module sympy.functions.special.tensor_functions)": [[96, "sympy.functions.special.tensor_functions.Eijk", false]], "eject() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.eject", false]], "eject() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.eject", false]], "elastic_modulus (sympy.physics.continuum_mechanics.beam.beam property)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.elastic_modulus", false]], "elem_poles() (sympy.physics.control.lti.transferfunctionmatrix method)": [[143, "sympy.physics.control.lti.TransferFunctionMatrix.elem_poles", false]], "elem_zeros() (sympy.physics.control.lti.transferfunctionmatrix method)": [[143, "sympy.physics.control.lti.TransferFunctionMatrix.elem_zeros", false]], "element (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Element", false]], "element_from_alg_num() (sympy.polys.numberfields.modules.powerbasis method)": [[215, "sympy.polys.numberfields.modules.PowerBasis.element_from_alg_num", false]], "element_from_anp() (sympy.polys.numberfields.modules.powerbasis method)": [[215, "sympy.polys.numberfields.modules.PowerBasis.element_from_ANP", false]], "element_from_poly() (sympy.polys.numberfields.modules.powerbasis method)": [[215, "sympy.polys.numberfields.modules.PowerBasis.element_from_poly", false]], "element_from_rational() (sympy.polys.numberfields.modules.module method)": [[215, "sympy.polys.numberfields.modules.Module.element_from_rational", false]], "element_order() (sympy.liealgebras.weyl_group.weylgroup method)": [[117, "sympy.liealgebras.weyl_group.WeylGroup.element_order", false]], "elementary_col_op() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.elementary_col_op", false]], "elementary_row_op() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.elementary_row_op", false]], "elements (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.elements", false]], "elgamal_private_key() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.elgamal_private_key", false]], "elgamal_public_key() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.elgamal_public_key", false]], "eliminate_implications() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.eliminate_implications", false]], "ellipse (class in sympy.geometry.ellipse)": [[98, "sympy.geometry.ellipse.Ellipse", false]], "elliptic_e (class in sympy.functions.special.elliptic_integrals)": [[96, "sympy.functions.special.elliptic_integrals.elliptic_e", false]], "elliptic_f (class in sympy.functions.special.elliptic_integrals)": [[96, "sympy.functions.special.elliptic_integrals.elliptic_f", false]], "elliptic_k (class in sympy.functions.special.elliptic_integrals)": [[96, "sympy.functions.special.elliptic_integrals.elliptic_k", false]], "elliptic_pi (class in sympy.functions.special.elliptic_integrals)": [[96, "sympy.functions.special.elliptic_integrals.elliptic_pi", false]], "em() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.EM", false]], "emptyprinter() (sympy.printing.repr.reprprinter method)": [[220, "sympy.printing.repr.ReprPrinter.emptyPrinter", false]], "emptysequence (class in sympy.series.sequences)": [[226, "sympy.series.sequences.EmptySequence", false]], "emptyset (class in sympy.sets.sets)": [[228, "sympy.sets.sets.EmptySet", false]], "enable_automatic_int_sympification() (in module sympy.interactive.session)": [[116, "sympy.interactive.session.enable_automatic_int_sympification", false]], "enable_automatic_symbols() (in module sympy.interactive.session)": [[116, "sympy.interactive.session.enable_automatic_symbols", false]], "encipher_affine() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_affine", false]], "encipher_atbash() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_atbash", false]], "encipher_bifid() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_bifid", false]], "encipher_bifid5() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_bifid5", false]], "encipher_bifid6() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_bifid6", false]], "encipher_elgamal() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_elgamal", false]], "encipher_gm() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_gm", false]], "encipher_hill() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_hill", false]], "encipher_kid_rsa() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_kid_rsa", false]], "encipher_railfence() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_railfence", false]], "encipher_rot13() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_rot13", false]], "encipher_rsa() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_rsa", false]], "encipher_shift() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_shift", false]], "encipher_substitution() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_substitution", false]], "encipher_vigenere() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_vigenere", false]], "encloses() (sympy.geometry.entity.geometryentity method)": [[99, "sympy.geometry.entity.GeometryEntity.encloses", false]], "encloses_point() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.encloses_point", false]], "encloses_point() (sympy.geometry.polygon.polygon method)": [[104, "sympy.geometry.polygon.Polygon.encloses_point", false]], "encloses_point() (sympy.geometry.polygon.regularpolygon method)": [[104, "sympy.geometry.polygon.RegularPolygon.encloses_point", false]], "encode_morse() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encode_morse", false]], "end (sympy.sets.sets.interval property)": [[228, "sympy.sets.sets.Interval.end", false]], "endomorphism_ring() (sympy.polys.numberfields.modules.module method)": [[215, "sympy.polys.numberfields.modules.Module.endomorphism_ring", false]], "endomorphismring (class in sympy.polys.numberfields.modules)": [[215, "sympy.polys.numberfields.modules.EndomorphismRing", false]], "entropy() (in module sympy.stats)": [[240, "sympy.stats.entropy", false]], "enum_all() (sympy.utilities.enumerative.multisetpartitiontraverser method)": [[255, "sympy.utilities.enumerative.MultisetPartitionTraverser.enum_all", false]], "enum_large() (sympy.utilities.enumerative.multisetpartitiontraverser method)": [[255, "sympy.utilities.enumerative.MultisetPartitionTraverser.enum_large", false]], "enum_range() (sympy.utilities.enumerative.multisetpartitiontraverser method)": [[255, "sympy.utilities.enumerative.MultisetPartitionTraverser.enum_range", false]], "enum_small() (sympy.utilities.enumerative.multisetpartitiontraverser method)": [[255, "sympy.utilities.enumerative.MultisetPartitionTraverser.enum_small", false]], "enumerate_states() (in module sympy.physics.quantum.represent)": [[185, "sympy.physics.quantum.represent.enumerate_states", false]], "eom_method (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.eom_method", false]], "epath (class in sympy.simplify.epathtools)": [[232, "sympy.simplify.epathtools.EPath", false]], "epath() (in module sympy.simplify.epathtools)": [[232, "sympy.simplify.epathtools.epath", false]], "eps (sympy.codegen.ast.floattype property)": [[69, "sympy.codegen.ast.FloatType.eps", false]], "eq (in module sympy.core.relational)": [[88, "sympy.core.relational.Eq", false]], "eq() (sympy.polys.agca.modules.quotientmoduleelement method)": [[207, "sympy.polys.agca.modules.QuotientModuleElement.eq", false]], "eqs_to_matrix() (in module sympy.polys.solvers)": [[218, "sympy.polys.solvers.eqs_to_matrix", false]], "equal_valued() (in module sympy.core.numbers)": [[88, "sympy.core.numbers.equal_valued", false]], "equality (class in sympy.core.relational)": [[88, "sympy.core.relational.Equality", false]], "equals() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.equals", false]], "equals() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.equals", false]], "equals() (sympy.core.relational.relational method)": [[88, "sympy.core.relational.Relational.equals", false]], "equals() (sympy.geometry.line.line method)": [[101, "sympy.geometry.line.Line.equals", false]], "equals() (sympy.geometry.line.ray method)": [[101, "sympy.geometry.line.Ray.equals", false]], "equals() (sympy.geometry.line.segment method)": [[101, "sympy.geometry.line.Segment.equals", false]], "equals() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.equals", false]], "equals() (sympy.geometry.point.point method)": [[103, "sympy.geometry.point.Point.equals", false]], "equals() (sympy.logic.boolalg.boolean method)": [[118, "sympy.logic.boolalg.Boolean.equals", false]], "equals() (sympy.matrices.expressions.matrixexpr method)": [[120, "sympy.matrices.expressions.MatrixExpr.equals", false]], "equation": [[15, "term-Equation", true]], "equation() (sympy.geometry.ellipse.circle method)": [[98, "sympy.geometry.ellipse.Circle.equation", false]], "equation() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.equation", false]], "equation() (sympy.geometry.line.line2d method)": [[101, "sympy.geometry.line.Line2D.equation", false]], "equation() (sympy.geometry.line.line3d method)": [[101, "sympy.geometry.line.Line3D.equation", false]], "equation() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.equation", false]], "equilibrium_length (sympy.physics.mechanics.actuator.linearspring property)": [[147, "sympy.physics.mechanics.actuator.LinearSpring.equilibrium_length", false]], "equiv() (sympy.polys.numberfields.modules.moduleelement method)": [[215, "sympy.polys.numberfields.modules.ModuleElement.equiv", false]], "equivalent (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.Equivalent", false]], "equivalent() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.equivalent", false]], "erf (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.erf", false]], "erf2 (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.erf2", false]], "erf2inv (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.erf2inv", false]], "erfc (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.erfc", false]], "erfcinv (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.erfcinv", false]], "erfi (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.erfi", false]], "erfinv (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.erfinv", false]], "erlang() (in module sympy.stats)": [[240, "sympy.stats.Erlang", false]], "et() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.ET", false]], "eta (sympy.functions.special.hyper.hyper property)": [[96, "sympy.functions.special.hyper.hyper.eta", false]], "euler (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.euler", false]], "euler_equations() (in module sympy.calculus.euler)": [[67, "sympy.calculus.euler.euler_equations", false]], "euler_maclaurin() (sympy.concrete.summations.sum method)": [[87, "sympy.concrete.summations.Sum.euler_maclaurin", false]], "euler_poly() (in module sympy.polys.appellseqs)": [[216, "sympy.polys.appellseqs.euler_poly", false]], "eulergamma (class in sympy.core.numbers)": [[88, "sympy.core.numbers.EulerGamma", false]], "eulerline (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.eulerline", false]], "eval() (sympy.assumptions.assume.predicate method)": [[63, "sympy.assumptions.assume.Predicate.eval", false]], "eval() (sympy.functions.elementary.piecewise.piecewise class method)": [[94, "sympy.functions.elementary.piecewise.Piecewise.eval", false]], "eval() (sympy.functions.special.delta_functions.diracdelta class method)": [[96, "sympy.functions.special.delta_functions.DiracDelta.eval", false]], "eval() (sympy.functions.special.delta_functions.heaviside class method)": [[96, "sympy.functions.special.delta_functions.Heaviside.eval", false]], "eval() (sympy.functions.special.singularity_functions.singularityfunction class method)": [[96, "sympy.functions.special.singularity_functions.SingularityFunction.eval", false]], "eval() (sympy.functions.special.tensor_functions.kroneckerdelta class method)": [[96, "sympy.functions.special.tensor_functions.KroneckerDelta.eval", false]], "eval() (sympy.physics.biomechanics.curve.fiberforcelengthactivedegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthActiveDeGroote2016.eval", false]], "eval() (sympy.physics.biomechanics.curve.fiberforcelengthpassivedegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveDeGroote2016.eval", false]], "eval() (sympy.physics.biomechanics.curve.fiberforcelengthpassiveinversedegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveInverseDeGroote2016.eval", false]], "eval() (sympy.physics.biomechanics.curve.fiberforcevelocitydegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.FiberForceVelocityDeGroote2016.eval", false]], "eval() (sympy.physics.biomechanics.curve.fiberforcevelocityinversedegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.FiberForceVelocityInverseDeGroote2016.eval", false]], "eval() (sympy.physics.biomechanics.curve.tendonforcelengthdegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.TendonForceLengthDeGroote2016.eval", false]], "eval() (sympy.physics.biomechanics.curve.tendonforcelengthinversedegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.TendonForceLengthInverseDeGroote2016.eval", false]], "eval() (sympy.physics.quantum.hilbert.directsumhilbertspace class method)": [[176, "sympy.physics.quantum.hilbert.DirectSumHilbertSpace.eval", false]], "eval() (sympy.physics.quantum.hilbert.tensorproducthilbertspace class method)": [[176, "sympy.physics.quantum.hilbert.TensorProductHilbertSpace.eval", false]], "eval() (sympy.physics.secondquant.commutator class method)": [[190, "sympy.physics.secondquant.Commutator.eval", false]], "eval() (sympy.physics.secondquant.dagger class method)": [[190, "sympy.physics.secondquant.Dagger.eval", false]], "eval() (sympy.physics.secondquant.kroneckerdelta class method)": [[190, "sympy.physics.secondquant.KroneckerDelta.eval", false]], "eval() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.eval", false]], "eval() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.eval", false]], "eval_approx() (sympy.polys.rootoftools.complexrootof method)": [[216, "sympy.polys.rootoftools.ComplexRootOf.eval_approx", false]], "eval_color_func() (sympy.plotting.series.baseseries method)": [[206, "sympy.plotting.series.BaseSeries.eval_color_func", false]], "eval_controls() (sympy.physics.quantum.gate.cgate method)": [[174, "sympy.physics.quantum.gate.CGate.eval_controls", false]], "eval_expr() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.eval_expr", false]], "eval_frequency() (sympy.physics.control.lti.transferfunction method)": [[143, "sympy.physics.control.lti.TransferFunction.eval_frequency", false]], "eval_frequency() (sympy.physics.control.lti.transferfunctionmatrix method)": [[143, "sympy.physics.control.lti.TransferFunctionMatrix.eval_frequency", false]], "eval_levicivita() (in module sympy.functions.special.tensor_functions)": [[96, "sympy.functions.special.tensor_functions.eval_levicivita", false]], "eval_poly() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.eval_poly", false]], "eval_poly_mul() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.eval_poly_mul", false]], "eval_rational() (sympy.polys.rootoftools.complexrootof method)": [[216, "sympy.polys.rootoftools.ComplexRootOf.eval_rational", false]], "eval_zeta_function() (sympy.concrete.summations.sum method)": [[87, "sympy.concrete.summations.Sum.eval_zeta_function", false]], "evalf": [[15, "term-evalf", true]], "evalf() (sympy.core.evalf.evalfmixin method)": [[88, "sympy.core.evalf.EvalfMixin.evalf", false]], "evalf() (sympy.holonomic.holonomic.holonomicfunction method)": [[110, "sympy.holonomic.holonomic.HolonomicFunction.evalf", false]], "evalf() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.evalf", false]], "evalf() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.evalf", false]], "evalfmixin (class in sympy.core.evalf)": [[88, "sympy.core.evalf.EvalfMixin", false]], "evaluate": [[15, "term-Evaluate", true]], "evaluate_deltas() (in module sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.evaluate_deltas", false]], "evaluate_pauli_product() (in module sympy.physics.paulialgebra)": [[165, "sympy.physics.paulialgebra.evaluate_pauli_product", false]], "evaluationfailed (class in sympy.polys.polyerrors)": [[213, "sympy.polys.polyerrors.EvaluationFailed", false]], "even": [[88, "term-even", true]], "evenpredicate (class in sympy.assumptions.predicates.ntheory)": [[65, "sympy.assumptions.predicates.ntheory.EvenPredicate", false]], "evolute() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.evolute", false]], "exactquotientfailed (class in sympy.polys.polyerrors)": [[213, "sympy.polys.polyerrors.ExactQuotientFailed", false]], "excenters (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.excenters", false]], "excitation (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.excitation", false]], "excitation (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.excitation", false]], "exclude() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.exclude", false]], "exclude() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.exclude", false]], "exclusive (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.Exclusive", false]], "exgaussian() (in module sympy.stats)": [[240, "sympy.stats.ExGaussian", false]], "exp (class in sympy.functions.elementary.exponential)": [[94, "sympy.functions.elementary.exponential.exp", false]], "exp() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.exp", false]], "exp() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.exp", false]], "exp1 (class in sympy.core.numbers)": [[88, "sympy.core.numbers.Exp1", false]], "exp2 (class in sympy.codegen.cfunctions)": [[69, "sympy.codegen.cfunctions.exp2", false]], "exp_polar (class in sympy.functions.elementary.exponential)": [[94, "sympy.functions.elementary.exponential.exp_polar", false]], "exp_re() (in module sympy.series.formal)": [[222, "sympy.series.formal.exp_re", false]], "expand() (in module sympy.core.function)": [[88, "sympy.core.function.expand", false]], "expand() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.expand", false]], "expand() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.expand", false]], "expand() (sympy.physics.control.lti.transferfunction method)": [[143, "sympy.physics.control.lti.TransferFunction.expand", false]], "expand() (sympy.physics.control.lti.transferfunctionmatrix method)": [[143, "sympy.physics.control.lti.TransferFunctionMatrix.expand", false]], "expand_complex() (in module sympy.core.function)": [[88, "sympy.core.function.expand_complex", false]], "expand_func() (in module sympy.core.function)": [[88, "sympy.core.function.expand_func", false]], "expand_log() (in module sympy.core.function)": [[88, "sympy.core.function.expand_log", false]], "expand_mul() (in module sympy.core.function)": [[88, "sympy.core.function.expand_mul", false]], "expand_multinomial() (in module sympy.core.function)": [[88, "sympy.core.function.expand_multinomial", false]], "expand_power_base() (in module sympy.core.function)": [[88, "sympy.core.function.expand_power_base", false]], "expand_power_exp() (in module sympy.core.function)": [[88, "sympy.core.function.expand_power_exp", false]], "expand_trig() (in module sympy.core.function)": [[88, "sympy.core.function.expand_trig", false]], "expectation (class in sympy.stats)": [[240, "sympy.stats.Expectation", false]], "expectation() (sympy.stats.bernoulliprocess method)": [[240, "sympy.stats.BernoulliProcess.expectation", false]], "expectationmatrix (class in sympy.stats)": [[240, "sympy.stats.ExpectationMatrix", false]], "expint (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.expint", false]], "expm1 (class in sympy.codegen.cfunctions)": [[69, "sympy.codegen.cfunctions.expm1", false]], "exponential() (in module sympy.stats)": [[240, "sympy.stats.Exponential", false]], "expr": [[15, "term-Expr", true]], "expr (class in sympy.core.expr)": [[88, "sympy.core.expr.Expr", false]], "expr (sympy.core.function.lambda property)": [[88, "sympy.core.function.Lambda.expr", false]], "expr (sympy.core.function.subs property)": [[88, "sympy.core.function.Subs.expr", false]], "expr (sympy.functions.elementary.piecewise.exprcondpair property)": [[94, "sympy.functions.elementary.piecewise.ExprCondPair.expr", false]], "expr (sympy.physics.quantum.operator.differentialoperator property)": [[179, "sympy.physics.quantum.operator.DifferentialOperator.expr", false]], "expr (sympy.physics.quantum.state.wavefunction property)": [[188, "sympy.physics.quantum.state.Wavefunction.expr", false]], "expr (sympy.plotting.series.baseseries property)": [[206, "sympy.plotting.series.BaseSeries.expr", false]], "expr_free_symbols (sympy.core.expr.expr property)": [[88, "sympy.core.expr.Expr.expr_free_symbols", false]], "expr_to_holonomic() (in module sympy.holonomic.holonomic)": [[107, "sympy.holonomic.holonomic.expr_to_holonomic", false]], "exprcondpair (class in sympy.functions.elementary.piecewise)": [[94, "sympy.functions.elementary.piecewise.ExprCondPair", false]], "express() (in module sympy.physics.vector.functions)": [[201, "sympy.physics.vector.functions.express", false]], "express() (in module sympy.vector)": [[267, "sympy.vector.express", false]], "express() (sympy.physics.vector.dyadic.dyadic method)": [[199, "sympy.physics.vector.dyadic.Dyadic.express", false]], "express() (sympy.physics.vector.vector.vector method)": [[199, "sympy.physics.vector.vector.Vector.express", false]], "expression": [[15, "term-Expression", true]], "expression tree": [[15, "term-Expression-Tree", true]], "expressiondomain (class in sympy.polys.domains)": [[211, "sympy.polys.domains.ExpressionDomain", false]], "expressiondomain.expression (class in sympy.polys.domains)": [[211, "sympy.polys.domains.ExpressionDomain.Expression", false]], "expressiondomain.expression (class in sympy.polys.domains.expressiondomain)": [[211, "sympy.polys.domains.expressiondomain.ExpressionDomain.Expression", false]], "exprwithintlimits (class in sympy.concrete.expr_with_intlimits)": [[87, "sympy.concrete.expr_with_intlimits.ExprWithIntLimits", false]], "exprwithlimits (class in sympy.concrete.expr_with_limits)": [[115, "sympy.concrete.expr_with_limits.ExprWithLimits", false]], "exquo() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.exquo", false]], "exquo() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.exquo", false]], "exquo() (sympy.polys.domains.field.field method)": [[211, "sympy.polys.domains.field.Field.exquo", false]], "exquo() (sympy.polys.domains.gmpyrationalfield method)": [[211, "sympy.polys.domains.GMPYRationalField.exquo", false]], "exquo() (sympy.polys.domains.rationalfield method)": [[211, "sympy.polys.domains.RationalField.exquo", false]], "exquo() (sympy.polys.domains.ring.ring method)": [[211, "sympy.polys.domains.ring.Ring.exquo", false]], "exquo() (sympy.polys.polyclasses.dmf method)": [[211, "sympy.polys.polyclasses.DMF.exquo", false]], "exquo() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.exquo", false]], "exquo() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.exquo", false]], "exquo_ground() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.exquo_ground", false]], "exquo_ground() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.exquo_ground", false]], "exradii (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.exradii", false]], "exsqrt() (sympy.polys.domains.complexfield method)": [[211, "sympy.polys.domains.ComplexField.exsqrt", false]], "exsqrt() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.exsqrt", false]], "exsqrt() (sympy.polys.domains.finitefield method)": [[211, "sympy.polys.domains.FiniteField.exsqrt", false]], "exsqrt() (sympy.polys.domains.integerring method)": [[211, "sympy.polys.domains.IntegerRing.exsqrt", false]], "exsqrt() (sympy.polys.domains.rationalfield method)": [[211, "sympy.polys.domains.RationalField.exsqrt", false]], "exsqrt() (sympy.polys.domains.realfield method)": [[211, "sympy.polys.domains.RealField.exsqrt", false]], "ext (sympy.polys.domains.algebraicfield attribute)": [[211, "sympy.polys.domains.AlgebraicField.ext", false]], "extend() (sympy.ntheory.generate.sieve method)": [[128, "sympy.ntheory.generate.Sieve.extend", false]], "extend() (sympy.physics.units.unitsystem.unitsystem method)": [[198, "sympy.physics.units.unitsystem.UnitSystem.extend", false]], "extend() (sympy.plotting.plot.plot method)": [[206, "sympy.plotting.plot.Plot.extend", false]], "extend_to_no() (sympy.ntheory.generate.sieve method)": [[128, "sympy.ntheory.generate.Sieve.extend_to_no", false]], "extended_negative": [[88, "term-extended_negative", true]], "extended_nonnegative": [[88, "term-extended_nonnegative", true]], "extended_nonpositive": [[88, "term-extended_nonpositive", true]], "extended_nonzero": [[88, "term-extended_nonzero", true]], "extended_positive": [[88, "term-extended_positive", true]], "extended_real": [[88, "term-extended_real", true]], "extendedrealpredicate (class in sympy.assumptions.predicates.sets)": [[65, "sympy.assumptions.predicates.sets.ExtendedRealPredicate", false]], "extension_velocity (sympy.physics.mechanics.pathway.linearpathway property)": [[155, "sympy.physics.mechanics.pathway.LinearPathway.extension_velocity", false]], "extension_velocity (sympy.physics.mechanics.pathway.obstaclesetpathway property)": [[155, "sympy.physics.mechanics.pathway.ObstacleSetPathway.extension_velocity", false]], "extension_velocity (sympy.physics.mechanics.pathway.pathwaybase property)": [[155, "sympy.physics.mechanics.pathway.PathwayBase.extension_velocity", false]], "extension_velocity (sympy.physics.mechanics.pathway.wrappingpathway property)": [[155, "sympy.physics.mechanics.pathway.WrappingPathway.extension_velocity", false]], "extensionelement (class in sympy.polys.agca.extensions)": [[207, "sympy.polys.agca.extensions.ExtensionElement", false]], "extent (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.Extent", false]], "exterior_angle (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.exterior_angle", false]], "extract() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.extract", false]], "extract() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.extract", false]], "extract_additively() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.extract_additively", false]], "extract_branch_factor() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.extract_branch_factor", false]], "extract_fundamental_discriminant() (in module sympy.polys.numberfields.utilities)": [[215, "sympy.polys.numberfields.utilities.extract_fundamental_discriminant", false]], "extract_leading_order() (sympy.core.add.add method)": [[88, "sympy.core.add.Add.extract_leading_order", false]], "extract_multiplicatively() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.extract_multiplicatively", false]], "extract_slice() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.extract_slice", false]], "extract_type_tens() (in module sympy.physics.hep.gamma_matrices)": [[144, "sympy.physics.hep.gamma_matrices.extract_type_tens", false]], "extraneousfactors (class in sympy.polys.polyerrors)": [[213, "sympy.polys.polyerrors.ExtraneousFactors", false]], "eye() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.eye", false]], "eye() (sympy.matrices.matrixbase.matrixbase class method)": [[124, "sympy.matrices.matrixbase.MatrixBase.eye", false]], "eye() (sympy.polys.matrices._dfm.dfm class method)": [[209, "sympy.polys.matrices._dfm.DFM.eye", false]], "eye() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.eye", false]], "eye() (sympy.polys.matrices.sdm.sdm class method)": [[209, "sympy.polys.matrices.sdm.SDM.eye", false]], "f (in module sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.F", false]], "f (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.F", false]], "f (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.F", false]], "f (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[131, "sympy.physics.biomechanics.activation.ZerothOrderActivation.F", false]], "f (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.F", false]], "f2pycodewrapper (class in sympy.utilities.autowrap)": [[252, "sympy.utilities.autowrap.F2PyCodeWrapper", false]], "f_m_max (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.F_M_max", false]], "faces (sympy.combinatorics.polyhedron.polyhedron property)": [[81, "sympy.combinatorics.polyhedron.Polyhedron.faces", false]], "factor() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.factor", false]], "factor() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.factor", false]], "factor_list() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.factor_list", false]], "factor_list() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.factor_list", false]], "factor_list() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.factor_list", false]], "factor_list_include() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.factor_list_include", false]], "factor_list_include() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.factor_list_include", false]], "factor_terms() (in module sympy.core.exprtools)": [[88, "sympy.core.exprtools.factor_terms", false]], "factorable (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.Factorable", false]], "factorial (class in sympy.functions.combinatorial.factorials)": [[93, "sympy.functions.combinatorial.factorials.factorial", false]], "factorial() (sympy.polys.domains.fractionfield method)": [[211, "sympy.polys.domains.FractionField.factorial", false]], "factorial() (sympy.polys.domains.gmpyintegerring method)": [[211, "sympy.polys.domains.GMPYIntegerRing.factorial", false]], "factorial() (sympy.polys.domains.gmpyrationalfield method)": [[211, "sympy.polys.domains.GMPYRationalField.factorial", false]], "factorial() (sympy.polys.domains.integerring method)": [[211, "sympy.polys.domains.IntegerRing.factorial", false]], "factorial() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.factorial", false]], "factorial2 (class in sympy.functions.combinatorial.factorials)": [[93, "sympy.functions.combinatorial.factorials.factorial2", false]], "factorial_moment() (in module sympy.stats)": [[240, "sympy.stats.factorial_moment", false]], "factorial_notation() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.factorial_notation", false]], "factoring_visitor() (in module sympy.utilities.enumerative)": [[255, "sympy.utilities.enumerative.factoring_visitor", false]], "factorint() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.factorint", false]], "factorrat() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.factorrat", false]], "factors() (sympy.core.numbers.rational method)": [[88, "sympy.core.numbers.Rational.factors", false]], "failed (sympy.testing.runtests.sympytestresults attribute)": [[251, "sympy.testing.runtests.SymPyTestResults.failed", false]], "fallingfactorial (class in sympy.functions.combinatorial.factorials)": [[93, "sympy.functions.combinatorial.factorials.FallingFactorial", false]], "fbra (in module sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.FBra", false]], "fcode() (in module sympy.printing.fortran)": [[220, "sympy.printing.fortran.fcode", false]], "fcodegen (class in sympy.utilities.codegen)": [[253, "sympy.utilities.codegen.FCodeGen", false]], "fcodeprinter (class in sympy.printing.fortran)": [[220, "sympy.printing.fortran.FCodePrinter", false]], "fd (in module sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.Fd", false]], "fdiff() (sympy.codegen.cfunctions.cbrt method)": [[69, "sympy.codegen.cfunctions.Cbrt.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.exp2 method)": [[69, "sympy.codegen.cfunctions.exp2.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.expm1 method)": [[69, "sympy.codegen.cfunctions.expm1.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.fma method)": [[69, "sympy.codegen.cfunctions.fma.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.hypot method)": [[69, "sympy.codegen.cfunctions.hypot.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.log10 method)": [[69, "sympy.codegen.cfunctions.log10.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.log1p method)": [[69, "sympy.codegen.cfunctions.log1p.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.log2 method)": [[69, "sympy.codegen.cfunctions.log2.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.sqrt method)": [[69, "sympy.codegen.cfunctions.Sqrt.fdiff", false]], "fdiff() (sympy.core.function.function method)": [[88, "sympy.core.function.Function.fdiff", false]], "fdiff() (sympy.functions.elementary.complexes.abs method)": [[94, "sympy.functions.elementary.complexes.Abs.fdiff", false]], "fdiff() (sympy.functions.elementary.exponential.exp method)": [[94, "sympy.functions.elementary.exponential.exp.fdiff", false]], "fdiff() (sympy.functions.elementary.exponential.lambertw method)": [[94, "sympy.functions.elementary.exponential.LambertW.fdiff", false]], "fdiff() (sympy.functions.elementary.exponential.log method)": [[94, "sympy.functions.elementary.exponential.log.fdiff", false]], "fdiff() (sympy.functions.elementary.hyperbolic.csch method)": [[94, "sympy.functions.elementary.hyperbolic.csch.fdiff", false]], "fdiff() (sympy.functions.elementary.hyperbolic.sinh method)": [[94, "sympy.functions.elementary.hyperbolic.sinh.fdiff", false]], "fdiff() (sympy.functions.special.delta_functions.diracdelta method)": [[96, "sympy.functions.special.delta_functions.DiracDelta.fdiff", false]], "fdiff() (sympy.functions.special.delta_functions.heaviside method)": [[96, "sympy.functions.special.delta_functions.Heaviside.fdiff", false]], "fdiff() (sympy.functions.special.singularity_functions.singularityfunction method)": [[96, "sympy.functions.special.singularity_functions.SingularityFunction.fdiff", false]], "fdiff() (sympy.physics.biomechanics.curve.fiberforcelengthactivedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthActiveDeGroote2016.fdiff", false]], "fdiff() (sympy.physics.biomechanics.curve.fiberforcelengthpassivedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveDeGroote2016.fdiff", false]], "fdiff() (sympy.physics.biomechanics.curve.fiberforcelengthpassiveinversedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveInverseDeGroote2016.fdiff", false]], "fdiff() (sympy.physics.biomechanics.curve.fiberforcevelocitydegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceVelocityDeGroote2016.fdiff", false]], "fdiff() (sympy.physics.biomechanics.curve.fiberforcevelocityinversedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceVelocityInverseDeGroote2016.fdiff", false]], "fdiff() (sympy.physics.biomechanics.curve.tendonforcelengthdegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.TendonForceLengthDeGroote2016.fdiff", false]], "fdiff() (sympy.physics.biomechanics.curve.tendonforcelengthinversedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.TendonForceLengthInverseDeGroote2016.fdiff", false]], "fdistribution() (in module sympy.stats)": [[240, "sympy.stats.FDistribution", false]], "feedback (class in sympy.physics.control.lti)": [[143, "sympy.physics.control.lti.Feedback", false]], "fft() (in module sympy.discrete.transforms)": [[91, "sympy.discrete.transforms.fft", false]], "fglm() (sympy.polys.polytools.groebnerbasis method)": [[216, "sympy.polys.polytools.GroebnerBasis.fglm", false]], "fiber_damping_coefficient (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.fiber_damping_coefficient", false]], "fiberforcelengthactivedegroote2016 (class in sympy.physics.biomechanics.curve)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthActiveDeGroote2016", false]], "fiberforcelengthpassivedegroote2016 (class in sympy.physics.biomechanics.curve)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveDeGroote2016", false]], "fiberforcelengthpassiveinversedegroote2016 (class in sympy.physics.biomechanics.curve)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveInverseDeGroote2016", false]], "fiberforcevelocitydegroote2016 (class in sympy.physics.biomechanics.curve)": [[132, "sympy.physics.biomechanics.curve.FiberForceVelocityDeGroote2016", false]], "fiberforcevelocityinversedegroote2016 (class in sympy.physics.biomechanics.curve)": [[132, "sympy.physics.biomechanics.curve.FiberForceVelocityInverseDeGroote2016", false]], "fibonacci (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.fibonacci", false]], "field (class in sympy.polys.domains.field)": [[211, "sympy.polys.domains.field.Field", false]], "field() (in module sympy.polys.fields)": [[211, "sympy.polys.fields.field", false]], "field_element() (sympy.core.numbers.algebraicnumber method)": [[88, "sympy.core.numbers.AlgebraicNumber.field_element", false]], "field_isomorphism() (in module sympy.polys.numberfields.subfield)": [[215, "sympy.polys.numberfields.subfield.field_isomorphism", false]], "fill (sympy.plotting.plot.plot property)": [[206, "sympy.plotting.plot.Plot.fill", false]], "filldedent() (in module sympy.utilities.misc)": [[261, "sympy.utilities.misc.filldedent", false]], "filter_symbols() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.filter_symbols", false]], "find() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.find", false]], "find_carmichael_numbers_in_range() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.find_carmichael_numbers_in_range", false]], "find_dn() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.find_DN", false]], "find_dynamicsymbols() (in module sympy.physics.mechanics)": [[149, "sympy.physics.mechanics.find_dynamicsymbols", false]], "find_dynamicsymbols() (in module sympy.physics.mechanics.functions)": [[154, "sympy.physics.mechanics.functions.find_dynamicsymbols", false]], "find_executable() (in module sympy.utilities.misc)": [[261, "sympy.utilities.misc.find_executable", false]], "find_first_n_carmichaels() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.find_first_n_carmichaels", false]], "find_linear_recurrence() (sympy.series.sequences.seqbase method)": [[226, "sympy.series.sequences.SeqBase.find_linear_recurrence", false]], "find_min_poly() (in module sympy.polys.numberfields.modules)": [[215, "sympy.polys.numberfields.modules.find_min_poly", false]], "find_transitive_subgroups_of_s6() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.find_transitive_subgroups_of_S6", false]], "finite": [[88, "term-finite", true]], "finite_diff_weights() (in module sympy.calculus.finite_diff)": [[67, "sympy.calculus.finite_diff.finite_diff_weights", false]], "finitedomain (class in sympy.stats.frv)": [[240, "sympy.stats.frv.FiniteDomain", false]], "finitefield (class in sympy.polys.domains)": [[211, "sympy.polys.domains.FiniteField", false]], "finiteformalpowerseries (class in sympy.series.formal)": [[222, "sympy.series.formal.FiniteFormalPowerSeries", false]], "finitepredicate (class in sympy.assumptions.predicates.calculus)": [[65, "sympy.assumptions.predicates.calculus.FinitePredicate", false]], "finitepspace (class in sympy.stats.frv)": [[240, "sympy.stats.frv.FinitePSpace", false]], "finiterv() (in module sympy.stats)": [[240, "sympy.stats.FiniteRV", false]], "finiteset (class in sympy.sets.sets)": [[228, "sympy.sets.sets.FiniteSet", false]], "first_moment_of_area() (sympy.geometry.polygon.polygon method)": [[104, "sympy.geometry.polygon.Polygon.first_moment_of_area", false]], "firstexact (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.FirstExact", false]], "firstlinear (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.FirstLinear", false]], "firstorderactivationdegroote2016 (class in sympy.physics.biomechanics.activation)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016", false]], "fisherz() (in module sympy.stats)": [[240, "sympy.stats.FisherZ", false]], "fixed_point (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.fixed_point", false]], "fixed_row_vector() (sympy.stats.discretemarkovchain method)": [[240, "sympy.stats.DiscreteMarkovChain.fixed_row_vector", false]], "fixedbosonicbasis (class in sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.FixedBosonicBasis", false]], "fket (in module sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.FKet", false]], "flagerror (class in sympy.polys.polyerrors)": [[213, "sympy.polys.polyerrors.FlagError", false]], "flat() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.flat", false]], "flatmirror (class in sympy.physics.optics.gaussopt)": [[159, "sympy.physics.optics.gaussopt.FlatMirror", false]], "flatrefraction (class in sympy.physics.optics.gaussopt)": [[159, "sympy.physics.optics.gaussopt.FlatRefraction", false]], "flatten() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.flatten", false]], "flatten() (sympy.categories.compositemorphism method)": [[68, "sympy.categories.CompositeMorphism.flatten", false]], "flatten() (sympy.core.add.add class method)": [[88, "sympy.core.add.Add.flatten", false]], "flatten() (sympy.core.mul.mul class method)": [[88, "sympy.core.mul.Mul.flatten", false]], "float (class in sympy.core.numbers)": [[88, "sympy.core.numbers.Float", false]], "floatbasetype (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.FloatBaseType", false]], "floattype (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.FloatType", false]], "floor (class in sympy.functions.elementary.integers)": [[94, "sympy.functions.elementary.integers.floor", false]], "fma (class in sympy.codegen.cfunctions)": [[69, "sympy.codegen.cfunctions.fma", false]], "foci (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.foci", false]], "fockspace (class in sympy.physics.quantum.hilbert)": [[176, "sympy.physics.quantum.hilbert.FockSpace", false]], "fockstate (class in sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.FockState", false]], "fockstatebosonbra (class in sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.FockStateBosonBra", false]], "fockstatebosonket (class in sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.FockStateBosonKet", false]], "fockstatebra (class in sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.FockStateBra", false]], "fockstatefermionbra (class in sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.FockStateFermionBra", false]], "fockstatefermionket (class in sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.FockStateFermionKet", false]], "fockstateket (class in sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.FockStateKet", false]], "focus_distance (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.focus_distance", false]], "for (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.For", false]], "force (class in sympy.physics.mechanics.loads)": [[154, "sympy.physics.mechanics.loads.Force", false]], "force (sympy.physics.mechanics.actuator.duffingspring property)": [[147, "sympy.physics.mechanics.actuator.DuffingSpring.force", false]], "force (sympy.physics.mechanics.actuator.forceactuator property)": [[147, "sympy.physics.mechanics.actuator.ForceActuator.force", false]], "force (sympy.physics.mechanics.actuator.lineardamper property)": [[147, "sympy.physics.mechanics.actuator.LinearDamper.force", false]], "force (sympy.physics.mechanics.actuator.linearspring property)": [[147, "sympy.physics.mechanics.actuator.LinearSpring.force", false]], "forceactuator (class in sympy.physics.mechanics.actuator)": [[147, "sympy.physics.mechanics.actuator.ForceActuator", false]], "forcing (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[148, "sympy.physics.mechanics.jointsmethod.JointsMethod.forcing", false]], "forcing (sympy.physics.mechanics.kane.kanesmethod property)": [[152, "sympy.physics.mechanics.kane.KanesMethod.forcing", false]], "forcing (sympy.physics.mechanics.lagrange.lagrangesmethod property)": [[152, "sympy.physics.mechanics.lagrange.LagrangesMethod.forcing", false]], "forcing (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.forcing", false]], "forcing_full (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[148, "sympy.physics.mechanics.jointsmethod.JointsMethod.forcing_full", false]], "forcing_full (sympy.physics.mechanics.kane.kanesmethod property)": [[152, "sympy.physics.mechanics.kane.KanesMethod.forcing_full", false]], "forcing_full (sympy.physics.mechanics.lagrange.lagrangesmethod property)": [[152, "sympy.physics.mechanics.lagrange.LagrangesMethod.forcing_full", false]], "forcing_full (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.forcing_full", false]], "forcing_kin (sympy.physics.mechanics.kane.kanesmethod property)": [[152, "sympy.physics.mechanics.kane.KanesMethod.forcing_kin", false]], "form_eoms() (sympy.physics.mechanics.jointsmethod.jointsmethod method)": [[148, "sympy.physics.mechanics.jointsmethod.JointsMethod.form_eoms", false]], "form_eoms() (sympy.physics.mechanics.system.system method)": [[157, "sympy.physics.mechanics.system.System.form_eoms", false]], "form_lagranges_equations() (sympy.physics.mechanics.lagrange.lagrangesmethod method)": [[152, "sympy.physics.mechanics.lagrange.LagrangesMethod.form_lagranges_equations", false]], "formalpowerseries (class in sympy.series.formal)": [[222, "sympy.series.formal.FormalPowerSeries", false]], "formalpowerseriescompose (class in sympy.series.formal)": [[222, "sympy.series.formal.FormalPowerSeriesCompose", false]], "formalpowerseriesinverse (class in sympy.series.formal)": [[222, "sympy.series.formal.FormalPowerSeriesInverse", false]], "formalpowerseriesproduct (class in sympy.series.formal)": [[222, "sympy.series.formal.FormalPowerSeriesProduct", false]], "fortranreturn (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.FortranReturn", false]], "forward_diff() (in module sympy.physics.control.lti)": [[143, "sympy.physics.control.lti.forward_diff", false]], "four_group() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.four_group", false]], "fourier_series() (in module sympy.series.fourier)": [[223, "sympy.series.fourier.fourier_series", false]], "fourier_series() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.fourier_series", false]], "fourier_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.fourier_transform", false]], "fourierseries (class in sympy.series.fourier)": [[223, "sympy.series.fourier.FourierSeries", false]], "fouriertransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.FourierTransform", false]], "fps() (in module sympy.series.formal)": [[222, "sympy.series.formal.fps", false]], "fps() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.fps", false]], "frac (class in sympy.functions.elementary.integers)": [[94, "sympy.functions.elementary.integers.frac", false]], "frac (in module sympy.printing.pretty.pretty_symbology)": [[220, "sympy.printing.pretty.pretty_symbology.frac", false]], "frac_field() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.frac_field", false]], "frac_unify() (sympy.polys.polyclasses.dmf method)": [[211, "sympy.polys.polyclasses.DMF.frac_unify", false]], "fracelement (class in sympy.polys.fields)": [[211, "sympy.polys.fields.FracElement", false]], "fracfield (class in sympy.polys.fields)": [[211, "sympy.polys.fields.FracField", false]], "fraction() (in module sympy.simplify.radsimp)": [[232, "sympy.simplify.radsimp.fraction", false]], "fractionfield (class in sympy.polys.domains)": [[211, "sympy.polys.domains.FractionField", false]], "frame (sympy.physics.mechanics.body.body property)": [[148, "sympy.physics.mechanics.body.Body.frame", false]], "frame (sympy.physics.mechanics.rigidbody.rigidbody property)": [[154, "sympy.physics.mechanics.rigidbody.RigidBody.frame", false]], "frame (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.frame", false]], "frechet() (in module sympy.stats)": [[240, "sympy.stats.Frechet", false]], "free symbols": [[15, "term-Free-symbols", true]], "free_dynamicsymbols() (sympy.physics.vector.vector.vector method)": [[199, "sympy.physics.vector.vector.Vector.free_dynamicsymbols", false]], "free_module() (sympy.polys.domains.ring.ring method)": [[211, "sympy.polys.domains.ring.Ring.free_module", false]], "free_symbols (sympy.concrete.expr_with_limits.exprwithlimits property)": [[115, "sympy.concrete.expr_with_limits.ExprWithLimits.free_symbols", false]], "free_symbols (sympy.core.basic.basic property)": [[88, "sympy.core.basic.Basic.free_symbols", false]], "free_symbols (sympy.geometry.curve.curve property)": [[97, "sympy.geometry.curve.Curve.free_symbols", false]], "free_symbols (sympy.integrals.integrals.integral property)": [[115, "sympy.integrals.integrals.Integral.free_symbols", false]], "free_symbols (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.free_symbols", false]], "free_symbols (sympy.physics.quantum.operator.differentialoperator property)": [[179, "sympy.physics.quantum.operator.DifferentialOperator.free_symbols", false]], "free_symbols (sympy.physics.units.quantities.quantity property)": [[197, "sympy.physics.units.quantities.Quantity.free_symbols", false]], "free_symbols (sympy.polys.polytools.poly property)": [[216, "sympy.polys.polytools.Poly.free_symbols", false]], "free_symbols (sympy.polys.polytools.purepoly property)": [[216, "sympy.polys.polytools.PurePoly.free_symbols", false]], "free_symbols (sympy.series.sequences.seqbase property)": [[226, "sympy.series.sequences.SeqBase.free_symbols", false]], "free_symbols() (sympy.physics.vector.vector.vector method)": [[199, "sympy.physics.vector.vector.Vector.free_symbols", false]], "free_symbols_in_domain (sympy.polys.polytools.poly property)": [[216, "sympy.polys.polytools.Poly.free_symbols_in_domain", false]], "freemodule (class in sympy.polys.agca.modules)": [[207, "sympy.polys.agca.modules.FreeModule", false]], "freemoduleelement (class in sympy.polys.agca.modules)": [[207, "sympy.polys.agca.modules.FreeModuleElement", false]], "freespace (class in sympy.physics.optics.gaussopt)": [[159, "sympy.physics.optics.gaussopt.FreeSpace", false]], "frequency (sympy.physics.optics.waves.twave property)": [[164, "sympy.physics.optics.waves.TWave.frequency", false]], "fresnel_coefficients() (in module sympy.physics.optics.utils)": [[163, "sympy.physics.optics.utils.fresnel_coefficients", false]], "fresnelc (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.fresnelc", false]], "fresnelintegral (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.FresnelIntegral", false]], "fresnels (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.fresnels", false]], "from_algebraicfield() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.expressiondomain method)": [[211, "sympy.polys.domains.ExpressionDomain.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.fractionfield method)": [[211, "sympy.polys.domains.FractionField.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.integerring method)": [[211, "sympy.polys.domains.IntegerRing.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.rationalfield method)": [[211, "sympy.polys.domains.RationalField.from_AlgebraicField", false]], "from_axis_angle() (sympy.algebras.quaternion class method)": [[61, "sympy.algebras.Quaternion.from_axis_angle", false]], "from_coeff_lists() (sympy.physics.control.lti.transferfunction class method)": [[143, "sympy.physics.control.lti.TransferFunction.from_coeff_lists", false]], "from_complexfield() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.from_ComplexField", false]], "from_complexfield() (sympy.polys.domains.expressiondomain method)": [[211, "sympy.polys.domains.ExpressionDomain.from_ComplexField", false]], "from_complexfield() (sympy.polys.domains.fractionfield method)": [[211, "sympy.polys.domains.FractionField.from_ComplexField", false]], "from_complexfield() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianRationalField.from_ComplexField", false]], "from_complexfield() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.from_ComplexField", false]], "from_ddm() (sympy.polys.matrices._dfm.dfm class method)": [[209, "sympy.polys.matrices._dfm.DFM.from_ddm", false]], "from_ddm() (sympy.polys.matrices.sdm.sdm class method)": [[209, "sympy.polys.matrices.sdm.SDM.from_ddm", false]], "from_dict() (sympy.polys.polytools.poly class method)": [[216, "sympy.polys.polytools.Poly.from_dict", false]], "from_dict_sympy() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_dict_sympy", false]], "from_dod() (sympy.polys.matrices._dfm.dfm class method)": [[209, "sympy.polys.matrices._dfm.DFM.from_dod", false]], "from_dod() (sympy.polys.matrices.ddm.ddm class method)": [[209, "sympy.polys.matrices.ddm.DDM.from_dod", false]], "from_dod() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_dod", false]], "from_dod() (sympy.polys.matrices.sdm.sdm class method)": [[209, "sympy.polys.matrices.sdm.SDM.from_dod", false]], "from_dod_like() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_dod_like", false]], "from_dok() (sympy.matrices.matrixbase.matrixbase class method)": [[124, "sympy.matrices.matrixbase.MatrixBase.from_dok", false]], "from_dok() (sympy.polys.matrices._dfm.dfm class method)": [[209, "sympy.polys.matrices._dfm.DFM.from_dok", false]], "from_dok() (sympy.polys.matrices.ddm.ddm class method)": [[209, "sympy.polys.matrices.ddm.DDM.from_dok", false]], "from_dok() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_dok", false]], "from_dok() (sympy.polys.matrices.sdm.sdm class method)": [[209, "sympy.polys.matrices.sdm.SDM.from_dok", false]], "from_euler() (sympy.algebras.quaternion class method)": [[61, "sympy.algebras.Quaternion.from_euler", false]], "from_ex() (sympy.polys.domains.integerring method)": [[211, "sympy.polys.domains.IntegerRing.from_EX", false]], "from_expr() (sympy.codegen.ast.type class method)": [[69, "sympy.codegen.ast.Type.from_expr", false]], "from_expr() (sympy.polys.polytools.poly class method)": [[216, "sympy.polys.polytools.Poly.from_expr", false]], "from_expressiondomain() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.from_ExpressionDomain", false]], "from_expressiondomain() (sympy.polys.domains.expressiondomain method)": [[211, "sympy.polys.domains.ExpressionDomain.from_ExpressionDomain", false]], "from_expressionrawdomain() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.from_ExpressionRawDomain", false]], "from_ff() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.from_FF", false]], "from_ff() (sympy.polys.domains.finitefield method)": [[211, "sympy.polys.domains.FiniteField.from_FF", false]], "from_ff() (sympy.polys.domains.integerring method)": [[211, "sympy.polys.domains.IntegerRing.from_FF", false]], "from_ff_gmpy() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.from_FF_gmpy", false]], "from_ff_gmpy() (sympy.polys.domains.finitefield method)": [[211, "sympy.polys.domains.FiniteField.from_FF_gmpy", false]], "from_ff_gmpy() (sympy.polys.domains.gmpyintegerring method)": [[211, "sympy.polys.domains.GMPYIntegerRing.from_FF_gmpy", false]], "from_ff_gmpy() (sympy.polys.domains.integerring method)": [[211, "sympy.polys.domains.IntegerRing.from_FF_gmpy", false]], "from_ff_python() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.from_FF_python", false]], "from_ff_python() (sympy.polys.domains.finitefield method)": [[211, "sympy.polys.domains.FiniteField.from_FF_python", false]], "from_ff_python() (sympy.polys.domains.gmpyintegerring method)": [[211, "sympy.polys.domains.GMPYIntegerRing.from_FF_python", false]], "from_ff_python() (sympy.polys.domains.integerring method)": [[211, "sympy.polys.domains.IntegerRing.from_FF_python", false]], "from_flat_nz() (sympy.polys.matrices._dfm.dfm class method)": [[209, "sympy.polys.matrices._dfm.DFM.from_flat_nz", false]], "from_flat_nz() (sympy.polys.matrices.ddm.ddm class method)": [[209, "sympy.polys.matrices.ddm.DDM.from_flat_nz", false]], "from_flat_nz() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_flat_nz", false]], "from_flat_nz() (sympy.polys.matrices.sdm.sdm class method)": [[209, "sympy.polys.matrices.sdm.SDM.from_flat_nz", false]], "from_fractionfield() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.from_FractionField", false]], "from_fractionfield() (sympy.polys.domains.expressiondomain method)": [[211, "sympy.polys.domains.ExpressionDomain.from_FractionField", false]], "from_fractionfield() (sympy.polys.domains.fractionfield method)": [[211, "sympy.polys.domains.FractionField.from_FractionField", false]], "from_fractionfield() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.from_FractionField", false]], "from_gaussianintegerring() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.from_GaussianIntegerRing", false]], "from_gaussianintegerring() (sympy.polys.domains.expressiondomain method)": [[211, "sympy.polys.domains.ExpressionDomain.from_GaussianIntegerRing", false]], "from_gaussianintegerring() (sympy.polys.domains.fractionfield method)": [[211, "sympy.polys.domains.FractionField.from_GaussianIntegerRing", false]], "from_gaussianintegerring() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.from_GaussianIntegerRing", false]], "from_gaussianintegerring() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianRationalField.from_GaussianIntegerRing", false]], "from_gaussianintegerring() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.from_GaussianIntegerRing", false]], "from_gaussianrationalfield() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.expressiondomain method)": [[211, "sympy.polys.domains.ExpressionDomain.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.fractionfield method)": [[211, "sympy.polys.domains.FractionField.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianRationalField.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.gmpyrationalfield method)": [[211, "sympy.polys.domains.GMPYRationalField.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.rationalfield method)": [[211, "sympy.polys.domains.RationalField.from_GaussianRationalField", false]], "from_globalpolynomialring() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.from_GlobalPolynomialRing", false]], "from_globalpolynomialring() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.from_GlobalPolynomialRing", false]], "from_hyper() (in module sympy.holonomic.holonomic)": [[107, "sympy.holonomic.holonomic.from_hyper", false]], "from_index_summation() (sympy.matrices.expressions.matrixexpr static method)": [[120, "sympy.matrices.expressions.MatrixExpr.from_index_summation", false]], "from_inertia_scalars() (sympy.physics.mechanics.inertia.inertia class method)": [[154, "sympy.physics.mechanics.inertia.Inertia.from_inertia_scalars", false]], "from_int_list() (sympy.polys.numberfields.modules.moduleelement class method)": [[215, "sympy.polys.numberfields.modules.ModuleElement.from_int_list", false]], "from_inversion_vector() (sympy.combinatorics.permutations.permutation class method)": [[80, "sympy.combinatorics.permutations.Permutation.from_inversion_vector", false]], "from_list() (sympy.polys.matrices._dfm.dfm class method)": [[209, "sympy.polys.matrices._dfm.DFM.from_list", false]], "from_list() (sympy.polys.matrices.ddm.ddm class method)": [[209, "sympy.polys.matrices.ddm.DDM.from_list", false]], "from_list() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_list", false]], "from_list() (sympy.polys.matrices.sdm.sdm class method)": [[209, "sympy.polys.matrices.sdm.SDM.from_list", false]], "from_list() (sympy.polys.polyclasses.dmp class method)": [[211, "sympy.polys.polyclasses.DMP.from_list", false]], "from_list() (sympy.polys.polytools.poly class method)": [[216, "sympy.polys.polytools.Poly.from_list", false]], "from_list_flat() (sympy.polys.matrices._dfm.dfm class method)": [[209, "sympy.polys.matrices._dfm.DFM.from_list_flat", false]], "from_list_flat() (sympy.polys.matrices.ddm.ddm class method)": [[209, "sympy.polys.matrices.ddm.DDM.from_list_flat", false]], "from_list_flat() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_list_flat", false]], "from_list_flat() (sympy.polys.matrices.sdm.sdm class method)": [[209, "sympy.polys.matrices.sdm.SDM.from_list_flat", false]], "from_list_sympy() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_list_sympy", false]], "from_matrix() (sympy.algebras.quaternion class method)": [[61, "sympy.algebras.Quaternion.from_Matrix", false]], "from_matrix() (sympy.physics.control.lti.transferfunctionmatrix class method)": [[143, "sympy.physics.control.lti.TransferFunctionMatrix.from_Matrix", false]], "from_matrix() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_Matrix", false]], "from_meijerg() (in module sympy.holonomic.holonomic)": [[107, "sympy.holonomic.holonomic.from_meijerg", false]], "from_monogenicfiniteextension() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.from_MonogenicFiniteExtension", false]], "from_newtonian() (sympy.physics.mechanics.system.system class method)": [[157, "sympy.physics.mechanics.system.System.from_newtonian", false]], "from_poly() (sympy.polys.polytools.poly class method)": [[216, "sympy.polys.polytools.Poly.from_poly", false]], "from_polynomialring() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.from_PolynomialRing", false]], "from_polynomialring() (sympy.polys.domains.expressiondomain method)": [[211, "sympy.polys.domains.ExpressionDomain.from_PolynomialRing", false]], "from_polynomialring() (sympy.polys.domains.fractionfield method)": [[211, "sympy.polys.domains.FractionField.from_PolynomialRing", false]], "from_polynomialring() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.from_PolynomialRing", false]], "from_qq() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.from_QQ", false]], "from_qq() (sympy.polys.domains.expressiondomain method)": [[211, "sympy.polys.domains.ExpressionDomain.from_QQ", false]], "from_qq() (sympy.polys.domains.finitefield method)": [[211, "sympy.polys.domains.FiniteField.from_QQ", false]], "from_qq() (sympy.polys.domains.fractionfield method)": [[211, "sympy.polys.domains.FractionField.from_QQ", false]], "from_qq() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_QQ", false]], "from_qq() (sympy.polys.domains.gmpyintegerring method)": [[211, "sympy.polys.domains.GMPYIntegerRing.from_QQ", false]], "from_qq() (sympy.polys.domains.integerring method)": [[211, "sympy.polys.domains.IntegerRing.from_QQ", false]], "from_qq() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.from_QQ", false]], "from_qq() (sympy.polys.domains.rationalfield method)": [[211, "sympy.polys.domains.RationalField.from_QQ", false]], "from_qq_gmpy() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.expressiondomain method)": [[211, "sympy.polys.domains.ExpressionDomain.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.finitefield method)": [[211, "sympy.polys.domains.FiniteField.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.fractionfield method)": [[211, "sympy.polys.domains.FractionField.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.gmpyintegerring method)": [[211, "sympy.polys.domains.GMPYIntegerRing.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.gmpyrationalfield method)": [[211, "sympy.polys.domains.GMPYRationalField.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.integerring method)": [[211, "sympy.polys.domains.IntegerRing.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.rationalfield method)": [[211, "sympy.polys.domains.RationalField.from_QQ_gmpy", false]], "from_qq_python() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.expressiondomain method)": [[211, "sympy.polys.domains.ExpressionDomain.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.finitefield method)": [[211, "sympy.polys.domains.FiniteField.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.fractionfield method)": [[211, "sympy.polys.domains.FractionField.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.gmpyintegerring method)": [[211, "sympy.polys.domains.GMPYIntegerRing.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.gmpyrationalfield method)": [[211, "sympy.polys.domains.GMPYRationalField.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.integerring method)": [[211, "sympy.polys.domains.IntegerRing.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.rationalfield method)": [[211, "sympy.polys.domains.RationalField.from_QQ_python", false]], "from_rational_expression() (sympy.physics.control.lti.transferfunction class method)": [[143, "sympy.physics.control.lti.TransferFunction.from_rational_expression", false]], "from_real() (sympy.sets.fancysets.complexregion class method)": [[228, "sympy.sets.fancysets.ComplexRegion.from_real", false]], "from_realfield() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.from_RealField", false]], "from_realfield() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.from_RealField", false]], "from_realfield() (sympy.polys.domains.expressiondomain method)": [[211, "sympy.polys.domains.ExpressionDomain.from_RealField", false]], "from_realfield() (sympy.polys.domains.finitefield method)": [[211, "sympy.polys.domains.FiniteField.from_RealField", false]], "from_realfield() (sympy.polys.domains.fractionfield method)": [[211, "sympy.polys.domains.FractionField.from_RealField", false]], "from_realfield() (sympy.polys.domains.gmpyintegerring method)": [[211, "sympy.polys.domains.GMPYIntegerRing.from_RealField", false]], "from_realfield() (sympy.polys.domains.gmpyrationalfield method)": [[211, "sympy.polys.domains.GMPYRationalField.from_RealField", false]], "from_realfield() (sympy.polys.domains.integerring method)": [[211, "sympy.polys.domains.IntegerRing.from_RealField", false]], "from_realfield() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.from_RealField", false]], "from_realfield() (sympy.polys.domains.rationalfield method)": [[211, "sympy.polys.domains.RationalField.from_RealField", false]], "from_rep() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_rep", false]], "from_rgs() (sympy.combinatorics.partitions.partition class method)": [[77, "sympy.combinatorics.partitions.Partition.from_rgs", false]], "from_rotation_matrix() (sympy.algebras.quaternion class method)": [[61, "sympy.algebras.Quaternion.from_rotation_matrix", false]], "from_sequence() (sympy.combinatorics.permutations.permutation class method)": [[80, "sympy.combinatorics.permutations.Permutation.from_sequence", false]], "from_sympy() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.from_sympy", false]], "from_sympy() (sympy.polys.domains.complexfield method)": [[211, "sympy.polys.domains.ComplexField.from_sympy", false]], "from_sympy() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.from_sympy", false]], "from_sympy() (sympy.polys.domains.expressiondomain method)": [[211, "sympy.polys.domains.ExpressionDomain.from_sympy", false]], "from_sympy() (sympy.polys.domains.finitefield method)": [[211, "sympy.polys.domains.FiniteField.from_sympy", false]], "from_sympy() (sympy.polys.domains.fractionfield method)": [[211, "sympy.polys.domains.FractionField.from_sympy", false]], "from_sympy() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_sympy", false]], "from_sympy() (sympy.polys.domains.gmpyintegerring method)": [[211, "sympy.polys.domains.GMPYIntegerRing.from_sympy", false]], "from_sympy() (sympy.polys.domains.gmpyrationalfield method)": [[211, "sympy.polys.domains.GMPYRationalField.from_sympy", false]], "from_sympy() (sympy.polys.domains.integerring method)": [[211, "sympy.polys.domains.IntegerRing.from_sympy", false]], "from_sympy() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.from_sympy", false]], "from_sympy() (sympy.polys.domains.rationalfield method)": [[211, "sympy.polys.domains.RationalField.from_sympy", false]], "from_sympy() (sympy.polys.domains.realfield method)": [[211, "sympy.polys.domains.RealField.from_sympy", false]], "from_sympy_list() (sympy.polys.polyclasses.dmp class method)": [[211, "sympy.polys.polyclasses.DMP.from_sympy_list", false]], "from_zpk() (sympy.physics.control.lti.transferfunction class method)": [[143, "sympy.physics.control.lti.TransferFunction.from_zpk", false]], "from_zz() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.from_ZZ", false]], "from_zz() (sympy.polys.domains.expressiondomain method)": [[211, "sympy.polys.domains.ExpressionDomain.from_ZZ", false]], "from_zz() (sympy.polys.domains.finitefield method)": [[211, "sympy.polys.domains.FiniteField.from_ZZ", false]], "from_zz() (sympy.polys.domains.fractionfield method)": [[211, "sympy.polys.domains.FractionField.from_ZZ", false]], "from_zz() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_ZZ", false]], "from_zz() (sympy.polys.domains.integerring method)": [[211, "sympy.polys.domains.IntegerRing.from_ZZ", false]], "from_zz() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.from_ZZ", false]], "from_zz() (sympy.polys.domains.rationalfield method)": [[211, "sympy.polys.domains.RationalField.from_ZZ", false]], "from_zz_gmpy() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.expressiondomain method)": [[211, "sympy.polys.domains.ExpressionDomain.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.finitefield method)": [[211, "sympy.polys.domains.FiniteField.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.fractionfield method)": [[211, "sympy.polys.domains.FractionField.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.gmpyintegerring method)": [[211, "sympy.polys.domains.GMPYIntegerRing.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.gmpyrationalfield method)": [[211, "sympy.polys.domains.GMPYRationalField.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.integerring method)": [[211, "sympy.polys.domains.IntegerRing.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.rationalfield method)": [[211, "sympy.polys.domains.RationalField.from_ZZ_gmpy", false]], "from_zz_python() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.expressiondomain method)": [[211, "sympy.polys.domains.ExpressionDomain.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.finitefield method)": [[211, "sympy.polys.domains.FiniteField.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.fractionfield method)": [[211, "sympy.polys.domains.FractionField.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.gmpyintegerring method)": [[211, "sympy.polys.domains.GMPYIntegerRing.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.gmpyrationalfield method)": [[211, "sympy.polys.domains.GMPYRationalField.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.integerring method)": [[211, "sympy.polys.domains.IntegerRing.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.rationalfield method)": [[211, "sympy.polys.domains.RationalField.from_ZZ_python", false]], "fromiter() (sympy.core.basic.basic class method)": [[88, "sympy.core.basic.Basic.fromiter", false]], "fu() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.fu", false]], "full_cyclic_form (sympy.combinatorics.permutations.permutation property)": [[80, "sympy.combinatorics.permutations.Permutation.full_cyclic_form", false]], "fullrankpredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.FullRankPredicate", false]], "fully_symmetric() (sympy.tensor.tensor.tensorsymmetry class method)": [[246, "sympy.tensor.tensor.TensorSymmetry.fully_symmetric", false]], "func": [[15, "term-func", true]], "func (sympy.core.basic.basic property)": [[88, "sympy.core.basic.Basic.func", false]], "func (sympy.physics.vector.dyadic.dyadic property)": [[199, "sympy.physics.vector.dyadic.Dyadic.func", false]], "func (sympy.physics.vector.vector.vector property)": [[199, "sympy.physics.vector.vector.Vector.func", false]], "func_field_modgcd() (in module sympy.polys.modulargcd)": [[213, "sympy.polys.modulargcd.func_field_modgcd", false]], "func_name() (in module sympy.utilities.misc)": [[261, "sympy.utilities.misc.func_name", false]], "funcminusoneoptim (class in sympy.codegen.rewriting)": [[69, "sympy.codegen.rewriting.FuncMinusOneOptim", false]], "function": [[15, "term-Function", true]], "function (class in sympy.core.function)": [[88, "sympy.core.function.Function", false]], "function (class)": [[15, "term-Function-class", true]], "function (sympy.assumptions.assume.appliedpredicate property)": [[63, "sympy.assumptions.assume.AppliedPredicate.function", false]], "function (sympy.concrete.expr_with_limits.exprwithlimits property)": [[115, "sympy.concrete.expr_with_limits.ExprWithLimits.function", false]], "function (sympy.integrals.transforms.integraltransform property)": [[115, "sympy.integrals.transforms.IntegralTransform.function", false]], "function (sympy.physics.quantum.operator.differentialoperator property)": [[179, "sympy.physics.quantum.operator.DifferentialOperator.function", false]], "function (sympy.series.formal.formalpowerseriescompose property)": [[222, "sympy.series.formal.FormalPowerSeriesCompose.function", false]], "function (sympy.series.formal.formalpowerseriesinverse property)": [[222, "sympy.series.formal.FormalPowerSeriesInverse.function", false]], "function (sympy.series.formal.formalpowerseriesproduct property)": [[222, "sympy.series.formal.FormalPowerSeriesProduct.function", false]], "function_exponentiation() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.function_exponentiation", false]], "function_range() (in module sympy.calculus.util)": [[67, "sympy.calculus.util.function_range", false]], "function_variable (sympy.integrals.transforms.integraltransform property)": [[115, "sympy.integrals.transforms.IntegralTransform.function_variable", false]], "functioncall (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.FunctionCall", false]], "functionclass (class in sympy.core.function)": [[88, "sympy.core.function.FunctionClass", false]], "functiondefinition (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.FunctionDefinition", false]], "functionmatrix (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.FunctionMatrix", false]], "functionprototype (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.FunctionPrototype", false]], "functions (sympy.geometry.curve.curve property)": [[97, "sympy.geometry.curve.Curve.functions", false]], "fundamental_matrix() (sympy.stats.discretemarkovchain method)": [[240, "sympy.stats.DiscreteMarkovChain.fundamental_matrix", false]], "fwht() (in module sympy.discrete.transforms)": [[91, "sympy.discrete.transforms.fwht", false]], "g() (in module sympy.printing.pretty.pretty_symbology)": [[220, "sympy.printing.pretty.pretty_symbology.G", false], [220, "sympy.printing.pretty.pretty_symbology.g", false]], "g18() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.G18", false]], "g36m() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.G36m", false]], "g36p() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.G36p", false]], "g72() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.G72", false]], "galois_group() (in module sympy.polys.numberfields.galoisgroups)": [[215, "sympy.polys.numberfields.galoisgroups.galois_group", false]], "galois_group() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.galois_group", false]], "galois_group() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.galois_group", false]], "gamma (class in sympy.functions.special.gamma_functions)": [[96, "sympy.functions.special.gamma_functions.gamma", false]], "gamma() (in module sympy.stats)": [[240, "sympy.stats.Gamma", false]], "gamma_trace() (in module sympy.physics.hep.gamma_matrices)": [[144, "sympy.physics.hep.gamma_matrices.gamma_trace", false]], "gammainverse() (in module sympy.stats)": [[240, "sympy.stats.GammaInverse", false]], "gammaprocess (class in sympy.stats)": [[240, "sympy.stats.GammaProcess", false]], "gammasimp() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.gammasimp", false]], "gate (class in sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.Gate", false]], "gate (sympy.physics.quantum.gate.cgate property)": [[174, "sympy.physics.quantum.gate.CGate.gate", false]], "gate (sympy.physics.quantum.gate.cnotgate property)": [[174, "sympy.physics.quantum.gate.CNotGate.gate", false]], "gate_simp() (in module sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.gate_simp", false]], "gate_sort() (in module sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.gate_sort", false]], "gateinputcount() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.gateinputcount", false]], "gaunt() (in module sympy.physics.wigner)": [[205, "sympy.physics.wigner.gaunt", false]], "gauss_chebyshev_t() (in module sympy.integrals.quadrature)": [[115, "sympy.integrals.quadrature.gauss_chebyshev_t", false]], "gauss_chebyshev_u() (in module sympy.integrals.quadrature)": [[115, "sympy.integrals.quadrature.gauss_chebyshev_u", false]], "gauss_gen_laguerre() (in module sympy.integrals.quadrature)": [[115, "sympy.integrals.quadrature.gauss_gen_laguerre", false]], "gauss_hermite() (in module sympy.integrals.quadrature)": [[115, "sympy.integrals.quadrature.gauss_hermite", false]], "gauss_jacobi() (in module sympy.integrals.quadrature)": [[115, "sympy.integrals.quadrature.gauss_jacobi", false]], "gauss_jordan_solve() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.gauss_jordan_solve", false]], "gauss_laguerre() (in module sympy.integrals.quadrature)": [[115, "sympy.integrals.quadrature.gauss_laguerre", false]], "gauss_legendre() (in module sympy.integrals.quadrature)": [[115, "sympy.integrals.quadrature.gauss_legendre", false]], "gauss_lobatto() (in module sympy.integrals.quadrature)": [[115, "sympy.integrals.quadrature.gauss_lobatto", false]], "gaussian_conj() (in module sympy.physics.optics.gaussopt)": [[159, "sympy.physics.optics.gaussopt.gaussian_conj", false]], "gaussian_reduce() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.gaussian_reduce", false]], "gaussiandomain (class in sympy.polys.domains.gaussiandomains)": [[211, "sympy.polys.domains.gaussiandomains.GaussianDomain", false]], "gaussianelement (class in sympy.polys.domains.gaussiandomains)": [[211, "sympy.polys.domains.gaussiandomains.GaussianElement", false]], "gaussianinteger (class in sympy.polys.domains.gaussiandomains)": [[211, "sympy.polys.domains.gaussiandomains.GaussianInteger", false]], "gaussianintegerring (class in sympy.polys.domains.gaussiandomains)": [[211, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing", false]], "gaussianrational (class in sympy.polys.domains.gaussiandomains)": [[211, "sympy.polys.domains.gaussiandomains.GaussianRational", false]], "gaussianrationalfield (class in sympy.polys.domains.gaussiandomains)": [[211, "sympy.polys.domains.gaussiandomains.GaussianRationalField", false]], "gbt() (in module sympy.physics.control.lti)": [[143, "sympy.physics.control.lti.gbt", false]], "gcd() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.gcd", false]], "gcd() (sympy.core.numbers.number method)": [[88, "sympy.core.numbers.Number.gcd", false]], "gcd() (sympy.polys.domains.complexfield method)": [[211, "sympy.polys.domains.ComplexField.gcd", false]], "gcd() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.gcd", false]], "gcd() (sympy.polys.domains.field.field method)": [[211, "sympy.polys.domains.field.Field.gcd", false]], "gcd() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.gcd", false]], "gcd() (sympy.polys.domains.gmpyintegerring method)": [[211, "sympy.polys.domains.GMPYIntegerRing.gcd", false]], "gcd() (sympy.polys.domains.integerring method)": [[211, "sympy.polys.domains.IntegerRing.gcd", false]], "gcd() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.gcd", false]], "gcd() (sympy.polys.domains.realfield method)": [[211, "sympy.polys.domains.RealField.gcd", false]], "gcd() (sympy.polys.monomials.monomial method)": [[216, "sympy.polys.monomials.Monomial.gcd", false]], "gcd() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.gcd", false]], "gcd() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.gcd", false]], "gcd_list() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.gcd_list", false]], "gcd_terms() (in module sympy.core.exprtools)": [[88, "sympy.core.exprtools.gcd_terms", false]], "gcdex() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.gcdex", false]], "gcdex() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.gcdex", false]], "gcdex() (sympy.polys.domains.gmpyintegerring method)": [[211, "sympy.polys.domains.GMPYIntegerRing.gcdex", false]], "gcdex() (sympy.polys.domains.integerring method)": [[211, "sympy.polys.domains.IntegerRing.gcdex", false]], "gcdex() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.gcdex", false]], "gcdex() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.gcdex", false]], "gcdex() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.gcdex", false]], "ge (in module sympy.core.relational)": [[88, "sympy.core.relational.Ge", false]], "gegenbauer (class in sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.gegenbauer", false]], "gegenbauer_poly() (in module sympy.polys.orthopolys)": [[216, "sympy.polys.orthopolys.gegenbauer_poly", false]], "gen (sympy.polys.polytools.poly property)": [[216, "sympy.polys.polytools.Poly.gen", false]], "gen (sympy.series.sequences.seqbase property)": [[226, "sympy.series.sequences.SeqBase.gen", false]], "generalizedmultivariateloggamma() (in module sympy.stats)": [[240, "sympy.stats.GeneralizedMultivariateLogGamma", false]], "generalizedmultivariateloggammaomega() (in module sympy.stats)": [[240, "sympy.stats.GeneralizedMultivariateLogGammaOmega", false]], "generalpythagorean (class in sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.GeneralPythagorean", false]], "generalsumofevenpowers (class in sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.GeneralSumOfEvenPowers", false]], "generalsumofsquares (class in sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.GeneralSumOfSquares", false]], "generate() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.generate", false]], "generate_bell() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.generate_bell", false]], "generate_derangements() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.generate_derangements", false]], "generate_dimino() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.generate_dimino", false]], "generate_gray() (sympy.combinatorics.graycode.graycode method)": [[72, "sympy.combinatorics.graycode.GrayCode.generate_gray", false]], "generate_involutions() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.generate_involutions", false]], "generate_oriented_forest() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.generate_oriented_forest", false]], "generate_schreier_sims() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.generate_schreier_sims", false]], "generator (sympy.polys.numberfields.modules.powerbasiselement property)": [[215, "sympy.polys.numberfields.modules.PowerBasisElement.generator", false]], "generator_product() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.generator_product", false]], "generators (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.generators", false]], "generators() (sympy.liealgebras.weyl_group.weylgroup method)": [[117, "sympy.liealgebras.weyl_group.WeylGroup.generators", false]], "generatorserror (class in sympy.polys.polyerrors)": [[213, "sympy.polys.polyerrors.GeneratorsError", false]], "generatorsneeded (class in sympy.polys.polyerrors)": [[213, "sympy.polys.polyerrors.GeneratorsNeeded", false]], "genocchi (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.genocchi", false]], "genocchi_poly() (in module sympy.polys.appellseqs)": [[216, "sympy.polys.appellseqs.genocchi_poly", false]], "geodesic_end_vectors() (sympy.physics.mechanics.wrapping_geometry.wrappingcylinder method)": [[158, "sympy.physics.mechanics.wrapping_geometry.WrappingCylinder.geodesic_end_vectors", false]], "geodesic_end_vectors() (sympy.physics.mechanics.wrapping_geometry.wrappinggeometrybase method)": [[158, "sympy.physics.mechanics.wrapping_geometry.WrappingGeometryBase.geodesic_end_vectors", false]], "geodesic_end_vectors() (sympy.physics.mechanics.wrapping_geometry.wrappingsphere method)": [[158, "sympy.physics.mechanics.wrapping_geometry.WrappingSphere.geodesic_end_vectors", false]], "geodesic_length() (sympy.physics.mechanics.wrapping_geometry.wrappingcylinder method)": [[158, "sympy.physics.mechanics.wrapping_geometry.WrappingCylinder.geodesic_length", false]], "geodesic_length() (sympy.physics.mechanics.wrapping_geometry.wrappinggeometrybase method)": [[158, "sympy.physics.mechanics.wrapping_geometry.WrappingGeometryBase.geodesic_length", false]], "geodesic_length() (sympy.physics.mechanics.wrapping_geometry.wrappingsphere method)": [[158, "sympy.physics.mechanics.wrapping_geometry.WrappingSphere.geodesic_length", false]], "geometric() (in module sympy.stats)": [[240, "sympy.stats.Geometric", false]], "geometric_conj_ab() (in module sympy.physics.optics.gaussopt)": [[159, "sympy.physics.optics.gaussopt.geometric_conj_ab", false]], "geometric_conj_af() (in module sympy.physics.optics.gaussopt)": [[159, "sympy.physics.optics.gaussopt.geometric_conj_af", false]], "geometric_conj_bf() (in module sympy.physics.optics.gaussopt)": [[159, "sympy.physics.optics.gaussopt.geometric_conj_bf", false]], "geometricray (class in sympy.physics.optics.gaussopt)": [[159, "sympy.physics.optics.gaussopt.GeometricRay", false]], "geometry (sympy.physics.mechanics.pathway.wrappingpathway property)": [[155, "sympy.physics.mechanics.pathway.WrappingPathway.geometry", false]], "geometryentity (class in sympy.geometry.entity)": [[99, "sympy.geometry.entity.GeometryEntity", false]], "get() (sympy.core.containers.dict method)": [[88, "sympy.core.containers.Dict.get", false]], "get_adjacency_distance() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.get_adjacency_distance", false]], "get_adjacency_matrix() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.get_adjacency_matrix", false]], "get_basis() (in module sympy.physics.quantum.represent)": [[185, "sympy.physics.quantum.represent.get_basis", false]], "get_body() (sympy.physics.mechanics.system.system method)": [[157, "sympy.physics.mechanics.system.System.get_body", false]], "get_class() (in module sympy.utilities.source)": [[262, "sympy.utilities.source.get_class", false]], "get_comm() (sympy.tensor.tensor._tensormanager method)": [[246, "sympy.tensor.tensor._TensorManager.get_comm", false]], "get_contraction_structure() (in module sympy.tensor.index_methods)": [[244, "sympy.tensor.index_methods.get_contraction_structure", false]], "get_data() (sympy.plotting.series.baseseries method)": [[206, "sympy.plotting.series.BaseSeries.get_data", false]], "get_data() (sympy.plotting.series.implicitseries method)": [[206, "sympy.plotting.series.ImplicitSeries.get_data", false]], "get_data() (sympy.plotting.series.line2dbaseseries method)": [[206, "sympy.plotting.series.Line2DBaseSeries.get_data", false]], "get_data() (sympy.plotting.series.parametricsurfaceseries method)": [[206, "sympy.plotting.series.ParametricSurfaceSeries.get_data", false]], "get_data() (sympy.plotting.series.surfaceover2drangeseries method)": [[206, "sympy.plotting.series.SurfaceOver2DRangeSeries.get_data", false]], "get_default_datatype() (in module sympy.utilities.codegen)": [[253, "sympy.utilities.codegen.get_default_datatype", false]], "get_diag_blocks() (sympy.matrices.expressions.blockmatrix.blockdiagmatrix method)": [[120, "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix.get_diag_blocks", false]], "get_diag_blocks() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.get_diag_blocks", false]], "get_domain() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.get_domain", false]], "get_exact() (sympy.polys.domains.complexfield method)": [[211, "sympy.polys.domains.ComplexField.get_exact", false]], "get_exact() (sympy.polys.domains.compositedomain.compositedomain method)": [[211, "sympy.polys.domains.compositedomain.CompositeDomain.get_exact", false]], "get_exact() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.get_exact", false]], "get_exact() (sympy.polys.domains.realfield method)": [[211, "sympy.polys.domains.RealField.get_exact", false]], "get_field() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.get_field", false]], "get_field() (sympy.polys.domains.expressiondomain method)": [[211, "sympy.polys.domains.ExpressionDomain.get_field", false]], "get_field() (sympy.polys.domains.field.field method)": [[211, "sympy.polys.domains.field.Field.get_field", false]], "get_field() (sympy.polys.domains.finitefield method)": [[211, "sympy.polys.domains.FiniteField.get_field", false]], "get_field() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.get_field", false]], "get_field() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianRationalField.get_field", false]], "get_field() (sympy.polys.domains.integerring method)": [[211, "sympy.polys.domains.IntegerRing.get_field", false]], "get_field() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.get_field", false]], "get_free_indices() (sympy.tensor.tensor.tensmul method)": [[246, "sympy.tensor.tensor.TensMul.get_free_indices", false]], "get_gen_sol_from_part_sol() (in module sympy.solvers.ode.riccati)": [[236, "sympy.solvers.ode.riccati.get_gen_sol_from_part_sol", false]], "get_indices() (in module sympy.tensor.index_methods)": [[244, "sympy.tensor.index_methods.get_indices", false]], "get_indices() (sympy.tensor.tensor.tensmul method)": [[246, "sympy.tensor.tensor.TensMul.get_indices", false]], "get_interface() (sympy.utilities.codegen.fcodegen method)": [[253, "sympy.utilities.codegen.FCodeGen.get_interface", false]], "get_joint() (sympy.physics.mechanics.system.system method)": [[157, "sympy.physics.mechanics.system.System.get_joint", false]], "get_label() (sympy.plotting.series.baseseries method)": [[206, "sympy.plotting.series.BaseSeries.get_label", false]], "get_label() (sympy.plotting.series.implicitseries method)": [[206, "sympy.plotting.series.ImplicitSeries.get_label", false]], "get_matrix() (sympy.tensor.tensor.tensexpr method)": [[246, "sympy.tensor.tensor.TensExpr.get_matrix", false]], "get_meshes() (sympy.plotting.series.parametricsurfaceseries method)": [[206, "sympy.plotting.series.ParametricSurfaceSeries.get_meshes", false]], "get_meshes() (sympy.plotting.series.surfaceover2drangeseries method)": [[206, "sympy.plotting.series.SurfaceOver2DRangeSeries.get_meshes", false]], "get_mod_func() (in module sympy.utilities.source)": [[262, "sympy.utilities.source.get_mod_func", false]], "get_modulus() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.get_modulus", false]], "get_motion_params() (in module sympy.physics.vector.functions)": [[203, "sympy.physics.vector.functions.get_motion_params", false]], "get_num_denom() (in module sympy.polys.numberfields.utilities)": [[215, "sympy.polys.numberfields.utilities.get_num_denom", false]], "get_period() (sympy.functions.special.hyper.meijerg method)": [[96, "sympy.functions.special.hyper.meijerg.get_period", false]], "get_permuted() (sympy.physics.secondquant.permutationoperator method)": [[190, "sympy.physics.secondquant.PermutationOperator.get_permuted", false]], "get_points() (sympy.plotting.series.lineover1drangeseries method)": [[206, "sympy.plotting.series.LineOver1DRangeSeries.get_points", false]], "get_positional_distance() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.get_positional_distance", false]], "get_precedence_distance() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.get_precedence_distance", false]], "get_precedence_matrix() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.get_precedence_matrix", false]], "get_prototype() (sympy.utilities.codegen.ccodegen method)": [[253, "sympy.utilities.codegen.CCodeGen.get_prototype", false]], "get_prototype() (sympy.utilities.codegen.rustcodegen method)": [[253, "sympy.utilities.codegen.RustCodeGen.get_prototype", false]], "get_ring() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.get_ring", false]], "get_ring() (sympy.polys.domains.complexfield method)": [[211, "sympy.polys.domains.ComplexField.get_ring", false]], "get_ring() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.get_ring", false]], "get_ring() (sympy.polys.domains.expressiondomain method)": [[211, "sympy.polys.domains.ExpressionDomain.get_ring", false]], "get_ring() (sympy.polys.domains.field.field method)": [[211, "sympy.polys.domains.field.Field.get_ring", false]], "get_ring() (sympy.polys.domains.fractionfield method)": [[211, "sympy.polys.domains.FractionField.get_ring", false]], "get_ring() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.get_ring", false]], "get_ring() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianRationalField.get_ring", false]], "get_ring() (sympy.polys.domains.gmpyrationalfield method)": [[211, "sympy.polys.domains.GMPYRationalField.get_ring", false]], "get_ring() (sympy.polys.domains.rationalfield method)": [[211, "sympy.polys.domains.RationalField.get_ring", false]], "get_ring() (sympy.polys.domains.realfield method)": [[211, "sympy.polys.domains.RealField.get_ring", false]], "get_ring() (sympy.polys.domains.ring.ring method)": [[211, "sympy.polys.domains.ring.Ring.get_ring", false]], "get_segments() (sympy.plotting.plot.matplotlibbackend static method)": [[206, "sympy.plotting.plot.MatplotlibBackend.get_segments", false]], "get_subno() (sympy.physics.secondquant.no method)": [[190, "sympy.physics.secondquant.NO.get_subNO", false]], "get_subset_from_bitstring() (sympy.combinatorics.graycode method)": [[72, "sympy.combinatorics.graycode.get_subset_from_bitstring", false]], "get_symmetric_group_sgs() (in module sympy.combinatorics.tensor_can)": [[84, "sympy.combinatorics.tensor_can.get_symmetric_group_sgs", false]], "get_sympy_dir() (in module sympy.testing.runtests)": [[251, "sympy.testing.runtests.get_sympy_dir", false]], "get_target_matrix() (sympy.physics.quantum.gate.gate method)": [[174, "sympy.physics.quantum.gate.Gate.get_target_matrix", false]], "get_target_matrix() (sympy.physics.quantum.gate.ugate method)": [[174, "sympy.physics.quantum.gate.UGate.get_target_matrix", false]], "get_units_non_prefixed() (sympy.physics.units.unitsystem.unitsystem method)": [[198, "sympy.physics.units.unitsystem.UnitSystem.get_units_non_prefixed", false]], "getitem() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.getitem", false]], "getn() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.getn", false]], "geto() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.getO", false]], "gf_add() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_add", false]], "gf_add_ground() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_add_ground", false]], "gf_add_mul() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_add_mul", false]], "gf_berlekamp() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_berlekamp", false]], "gf_cofactors() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_cofactors", false]], "gf_compose() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_compose", false]], "gf_compose_mod() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_compose_mod", false]], "gf_crt() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_crt", false]], "gf_crt1() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_crt1", false]], "gf_crt2() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_crt2", false]], "gf_csolve() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_csolve", false]], "gf_degree() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_degree", false]], "gf_diff() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_diff", false]], "gf_div() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_div", false]], "gf_eval() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_eval", false]], "gf_expand() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_expand", false]], "gf_exquo() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_exquo", false]], "gf_factor() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_factor", false]], "gf_factor_sqf() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_factor_sqf", false]], "gf_from_dict() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_from_dict", false]], "gf_from_int_poly() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_from_int_poly", false]], "gf_gcd() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_gcd", false]], "gf_gcdex() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_gcdex", false]], "gf_int() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_int", false]], "gf_irreducible() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_irreducible", false]], "gf_irreducible_p() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_irreducible_p", false]], "gf_lc() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_LC", false]], "gf_lcm() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_lcm", false]], "gf_lshift() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_lshift", false]], "gf_monic() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_monic", false]], "gf_mul() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_mul", false]], "gf_mul_ground() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_mul_ground", false]], "gf_multi_eval() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_multi_eval", false]], "gf_neg() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_neg", false]], "gf_normal() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_normal", false]], "gf_pow() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_pow", false]], "gf_pow_mod() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_pow_mod", false]], "gf_qbasis() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_Qbasis", false]], "gf_qmatrix() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_Qmatrix", false]], "gf_quo() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_quo", false]], "gf_quo_ground() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_quo_ground", false]], "gf_random() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_random", false]], "gf_rem() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_rem", false]], "gf_rshift() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_rshift", false]], "gf_shoup() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_shoup", false]], "gf_sqf_list() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_sqf_list", false]], "gf_sqf_p() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_sqf_p", false]], "gf_sqf_part() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_sqf_part", false]], "gf_sqr() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_sqr", false]], "gf_strip() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_strip", false]], "gf_sub() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_sub", false]], "gf_sub_ground() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_sub_ground", false]], "gf_sub_mul() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_sub_mul", false]], "gf_tc() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_TC", false]], "gf_to_dict() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_to_dict", false]], "gf_to_int_poly() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_to_int_poly", false]], "gf_trace_map() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_trace_map", false]], "gf_trunc() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_trunc", false]], "gf_value() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_value", false]], "gf_zassenhaus() (in module sympy.polys.galoistools)": [[213, "sympy.polys.galoistools.gf_zassenhaus", false]], "gff() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.gff", false]], "gff_list() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.gff_list", false]], "gff_list() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.gff_list", false]], "gff_list() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.gff_list", false]], "given() (in module sympy.stats)": [[240, "sympy.stats.given", false]], "gm_private_key() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.gm_private_key", false]], "gm_public_key() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.gm_public_key", false]], "gmpyfinitefield (class in sympy.polys.domains)": [[211, "sympy.polys.domains.GMPYFiniteField", false]], "gmpyintegerring (class in sympy.polys.domains)": [[211, "sympy.polys.domains.GMPYIntegerRing", false]], "gmpyrationalfield (class in sympy.polys.domains)": [[211, "sympy.polys.domains.GMPYRationalField", false]], "goldenratio (class in sympy.core.numbers)": [[88, "sympy.core.numbers.GoldenRatio", false]], "gompertz() (in module sympy.stats)": [[240, "sympy.stats.Gompertz", false]], "gosper_normal() (in module sympy.concrete.gosper)": [[87, "sympy.concrete.gosper.gosper_normal", false]], "gosper_sum() (in module sympy.concrete.gosper)": [[87, "sympy.concrete.gosper.gosper_sum", false]], "gosper_term() (in module sympy.concrete.gosper)": [[87, "sympy.concrete.gosper.gosper_term", false]], "goto (class in sympy.codegen.cnodes)": [[69, "sympy.codegen.cnodes.goto", false]], "goto (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.GoTo", false]], "gouy (sympy.physics.optics.gaussopt.beamparameter property)": [[159, "sympy.physics.optics.gaussopt.BeamParameter.gouy", false]], "gradedlexorder (class in sympy.polys.orderings)": [[216, "sympy.polys.orderings.GradedLexOrder", false]], "gradient() (in module sympy.physics.vector.fieldfunctions)": [[200, "sympy.physics.vector.fieldfunctions.gradient", false]], "gradient() (in module sympy.vector)": [[267, "sympy.vector.gradient", false]], "gradient() (sympy.vector.deloperator.del method)": [[264, "sympy.vector.deloperator.Del.gradient", false]], "gramschmidt() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.GramSchmidt", false]], "gray_to_bin() (sympy.combinatorics.graycode method)": [[72, "sympy.combinatorics.graycode.gray_to_bin", false]], "graycode (class in sympy.combinatorics.graycode)": [[72, "sympy.combinatorics.graycode.GrayCode", false]], "graycode_subsets() (sympy.combinatorics.graycode method)": [[72, "sympy.combinatorics.graycode.graycode_subsets", false]], "greaterthan (class in sympy.core.relational)": [[88, "sympy.core.relational.GreaterThan", false]], "greek_letters (in module sympy.printing.pretty.pretty_symbology)": [[220, "sympy.printing.pretty.pretty_symbology.greek_letters", false]], "groebner() (in module sympy.polys.groebnertools)": [[213, "sympy.polys.groebnertools.groebner", false]], "groebner() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.groebner", false]], "groebnerbasis (class in sympy.polys.polytools)": [[216, "sympy.polys.polytools.GroebnerBasis", false]], "ground_new() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.ground_new", false]], "ground_roots() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.ground_roots", false]], "ground_roots() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.ground_roots", false]], "group() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.group", false]], "group_name() (sympy.liealgebras.weyl_group.weylgroup method)": [[117, "sympy.liealgebras.weyl_group.WeylGroup.group_name", false]], "group_order() (sympy.liealgebras.weyl_group.weylgroup method)": [[117, "sympy.liealgebras.weyl_group.WeylGroup.group_order", false]], "groups_count() (in module sympy.combinatorics.group_numbers)": [[74, "sympy.combinatorics.group_numbers.groups_count", false]], "grover_iteration() (in module sympy.physics.quantum.grover)": [[175, "sympy.physics.quantum.grover.grover_iteration", false]], "gruntz() (in module sympy.series.gruntz)": [[227, "sympy.series.gruntz.gruntz", false]], "gt (in module sympy.core.relational)": [[88, "sympy.core.relational.Gt", false]], "gumbel() (in module sympy.stats)": [[240, "sympy.stats.Gumbel", false]], "h (in module sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.H", false]], "h (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.H", false]], "hadamard_product() (in module sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.hadamard_product", false]], "hadamardgate (class in sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.HadamardGate", false]], "hadamardpower (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.HadamardPower", false]], "hadamardproduct (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.HadamardProduct", false]], "half (class in sympy.core.numbers)": [[88, "sympy.core.numbers.Half", false]], "half_gcdex() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.half_gcdex", false]], "half_gcdex() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.half_gcdex", false]], "half_gcdex() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.half_gcdex", false]], "half_gcdex() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.half_gcdex", false]], "half_per() (sympy.polys.polyclasses.dmf method)": [[211, "sympy.polys.polyclasses.DMF.half_per", false]], "half_wave_retarder() (in module sympy.physics.optics.polarization)": [[162, "sympy.physics.optics.polarization.half_wave_retarder", false]], "handler (sympy.assumptions.assume.predicate attribute)": [[63, "sympy.assumptions.assume.Predicate.handler", false]], "handler (sympy.assumptions.predicates.calculus.finitepredicate attribute)": [[65, "sympy.assumptions.predicates.calculus.FinitePredicate.handler", false]], "handler (sympy.assumptions.predicates.calculus.infinitepredicate attribute)": [[65, "sympy.assumptions.predicates.calculus.InfinitePredicate.handler", false]], "handler (sympy.assumptions.predicates.common.commutativepredicate attribute)": [[65, "sympy.assumptions.predicates.common.CommutativePredicate.handler", false]], "handler (sympy.assumptions.predicates.common.istruepredicate attribute)": [[65, "sympy.assumptions.predicates.common.IsTruePredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.complexelementspredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.ComplexElementsPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.diagonalpredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.DiagonalPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.fullrankpredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.FullRankPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.integerelementspredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.IntegerElementsPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.invertiblepredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.InvertiblePredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.lowertriangularpredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.LowerTriangularPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.normalpredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.NormalPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.orthogonalpredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.OrthogonalPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.positivedefinitepredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.PositiveDefinitePredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.realelementspredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.RealElementsPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.singularpredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.SingularPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.squarepredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.SquarePredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.symmetricpredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.SymmetricPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.triangularpredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.TriangularPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.unitarypredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.UnitaryPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.unittriangularpredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.UnitTriangularPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.uppertriangularpredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.UpperTriangularPredicate.handler", false]], "handler (sympy.assumptions.predicates.ntheory.compositepredicate attribute)": [[65, "sympy.assumptions.predicates.ntheory.CompositePredicate.handler", false]], "handler (sympy.assumptions.predicates.ntheory.evenpredicate attribute)": [[65, "sympy.assumptions.predicates.ntheory.EvenPredicate.handler", false]], "handler (sympy.assumptions.predicates.ntheory.oddpredicate attribute)": [[65, "sympy.assumptions.predicates.ntheory.OddPredicate.handler", false]], "handler (sympy.assumptions.predicates.ntheory.primepredicate attribute)": [[65, "sympy.assumptions.predicates.ntheory.PrimePredicate.handler", false]], "handler (sympy.assumptions.predicates.order.negativepredicate attribute)": [[65, "sympy.assumptions.predicates.order.NegativePredicate.handler", false]], "handler (sympy.assumptions.predicates.order.nonnegativepredicate attribute)": [[65, "sympy.assumptions.predicates.order.NonNegativePredicate.handler", false]], "handler (sympy.assumptions.predicates.order.nonpositivepredicate attribute)": [[65, "sympy.assumptions.predicates.order.NonPositivePredicate.handler", false]], "handler (sympy.assumptions.predicates.order.nonzeropredicate attribute)": [[65, "sympy.assumptions.predicates.order.NonZeroPredicate.handler", false]], "handler (sympy.assumptions.predicates.order.positivepredicate attribute)": [[65, "sympy.assumptions.predicates.order.PositivePredicate.handler", false]], "handler (sympy.assumptions.predicates.order.zeropredicate attribute)": [[65, "sympy.assumptions.predicates.order.ZeroPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.algebraicpredicate attribute)": [[65, "sympy.assumptions.predicates.sets.AlgebraicPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.antihermitianpredicate attribute)": [[65, "sympy.assumptions.predicates.sets.AntihermitianPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.complexpredicate attribute)": [[65, "sympy.assumptions.predicates.sets.ComplexPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.extendedrealpredicate attribute)": [[65, "sympy.assumptions.predicates.sets.ExtendedRealPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.hermitianpredicate attribute)": [[65, "sympy.assumptions.predicates.sets.HermitianPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.imaginarypredicate attribute)": [[65, "sympy.assumptions.predicates.sets.ImaginaryPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.integerpredicate attribute)": [[65, "sympy.assumptions.predicates.sets.IntegerPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.irrationalpredicate attribute)": [[65, "sympy.assumptions.predicates.sets.IrrationalPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.rationalpredicate attribute)": [[65, "sympy.assumptions.predicates.sets.RationalPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.realpredicate attribute)": [[65, "sympy.assumptions.predicates.sets.RealPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.transcendentalpredicate attribute)": [[65, "sympy.assumptions.predicates.sets.TranscendentalPredicate.handler", false]], "hankel1 (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.hankel1", false]], "hankel2 (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.hankel2", false]], "hankel_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.hankel_transform", false]], "hankeltransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.HankelTransform", false]], "harmonic (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.harmonic", false]], "has() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.has", false]], "has() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.has", false]], "has_assoc_field (sympy.polys.domains.domain.domain attribute)": [[211, "sympy.polys.domains.domain.Domain.has_assoc_Field", false]], "has_assoc_ring (sympy.polys.domains.domain.domain attribute)": [[211, "sympy.polys.domains.domain.Domain.has_assoc_Ring", false]], "has_dups() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.has_dups", false]], "has_empty_sequence (sympy.concrete.expr_with_intlimits.exprwithintlimits property)": [[87, "sympy.concrete.expr_with_intlimits.ExprWithIntLimits.has_empty_sequence", false]], "has_finite_limits (sympy.concrete.expr_with_limits.exprwithlimits property)": [[115, "sympy.concrete.expr_with_limits.ExprWithLimits.has_finite_limits", false]], "has_free() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.has_free", false]], "has_integer_powers() (sympy.physics.units.dimensions.dimension method)": [[192, "sympy.physics.units.dimensions.Dimension.has_integer_powers", false]], "has_only_gens() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.has_only_gens", false]], "has_q_annihilators (sympy.physics.secondquant.no property)": [[190, "sympy.physics.secondquant.NO.has_q_annihilators", false]], "has_q_creators (sympy.physics.secondquant.no property)": [[190, "sympy.physics.secondquant.NO.has_q_creators", false]], "has_reversed_limits (sympy.concrete.expr_with_limits.exprwithlimits property)": [[115, "sympy.concrete.expr_with_limits.ExprWithLimits.has_reversed_limits", false]], "has_variety() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.has_variety", false]], "has_xfree() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.has_xfree", false]], "hat() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.hat", false]], "hbar (class in sympy.physics.quantum.constants)": [[172, "sympy.physics.quantum.constants.HBar", false]], "heaviside (class in sympy.functions.special.delta_functions)": [[96, "sympy.functions.special.delta_functions.Heaviside", false]], "height (sympy.categories.diagram_drawing.diagramgrid property)": [[68, "sympy.categories.diagram_drawing.DiagramGrid.height", false]], "height (sympy.physics.optics.gaussopt.geometricray property)": [[159, "sympy.physics.optics.gaussopt.GeometricRay.height", false]], "height() (sympy.polys.agca.ideals.ideal method)": [[207, "sympy.polys.agca.ideals.Ideal.height", false]], "height() (sympy.printing.pretty.stringpict.stringpict method)": [[220, "sympy.printing.pretty.stringpict.stringPict.height", false]], "hermite (class in sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.hermite", false]], "hermite() (in module sympy.stats)": [[240, "sympy.stats.Hermite", false]], "hermite_normal_form() (in module sympy.matrices.normalforms)": [[125, "sympy.matrices.normalforms.hermite_normal_form", false]], "hermite_normal_form() (in module sympy.polys.matrices.normalforms)": [[209, "sympy.polys.matrices.normalforms.hermite_normal_form", false]], "hermite_poly() (in module sympy.polys.orthopolys)": [[216, "sympy.polys.orthopolys.hermite_poly", false]], "hermite_prob (class in sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.hermite_prob", false]], "hermite_prob_poly() (in module sympy.polys.orthopolys)": [[216, "sympy.polys.orthopolys.hermite_prob_poly", false]], "hermitian": [[88, "term-hermitian", true]], "hermitianoperator (class in sympy.physics.quantum.operator)": [[179, "sympy.physics.quantum.operator.HermitianOperator", false]], "hermitianpredicate (class in sympy.assumptions.predicates.sets)": [[65, "sympy.assumptions.predicates.sets.HermitianPredicate", false]], "hessian() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.hessian", false]], "heurisch() (in module sympy.integrals.heurisch)": [[115, "sympy.integrals.heurisch.heurisch", false]], "heuristicgcdfailed (class in sympy.polys.polyerrors)": [[213, "sympy.polys.polyerrors.HeuristicGCDFailed", false]], "highest_root() (sympy.liealgebras.type_a.typea method)": [[117, "sympy.liealgebras.type_a.TypeA.highest_root", false]], "hilbertspace (class in sympy.physics.quantum.hilbert)": [[176, "sympy.physics.quantum.hilbert.HilbertSpace", false]], "hobj() (in module sympy.printing.pretty.pretty_symbology)": [[220, "sympy.printing.pretty.pretty_symbology.hobj", false]], "holonomic_constraints (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.holonomic_constraints", false]], "holonomicfunction (class in sympy.holonomic.holonomic)": [[111, "sympy.holonomic.holonomic.HolonomicFunction", false]], "holzer() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.holzer", false]], "hom() (sympy.categories.diagram method)": [[68, "sympy.categories.Diagram.hom", false]], "homogeneous_order() (in module sympy.solvers.ode)": [[236, "sympy.solvers.ode.homogeneous_order", false]], "homogeneous_order() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.homogeneous_order", false]], "homogeneous_order() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.homogeneous_order", false]], "homogeneouscoeffbest (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.HomogeneousCoeffBest", false]], "homogeneouscoeffsubsdepdivindep (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.HomogeneousCoeffSubsDepDivIndep", false]], "homogeneouscoeffsubsindepdivdep (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.HomogeneousCoeffSubsIndepDivDep", false]], "homogeneousgeneralquadratic (class in sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.HomogeneousGeneralQuadratic", false]], "homogeneousternaryquadratic (class in sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.HomogeneousTernaryQuadratic", false]], "homogeneousternaryquadraticnormal (class in sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.HomogeneousTernaryQuadraticNormal", false]], "homogenize() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.homogenize", false]], "homogenize() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.homogenize", false]], "homomorphism() (in module sympy.polys.agca.homomorphisms)": [[207, "sympy.polys.agca.homomorphisms.homomorphism", false]], "homomorphismfailed (class in sympy.polys.polyerrors)": [[213, "sympy.polys.polyerrors.HomomorphismFailed", false]], "horner() (in module sympy.polys.polyfuncs)": [[216, "sympy.polys.polyfuncs.horner", false]], "hradius (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.hradius", false]], "hstack() (sympy.matrices.matrixbase.matrixbase class method)": [[124, "sympy.matrices.matrixbase.MatrixBase.hstack", false]], "hstack() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.hstack", false]], "hstack() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.hstack", false]], "hstack() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.hstack", false]], "hstack() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.hstack", false]], "hyper (class in sympy.functions.special.hyper)": [[96, "sympy.functions.special.hyper.hyper", false]], "hyper_algorithm() (in module sympy.series.formal)": [[222, "sympy.series.formal.hyper_algorithm", false]], "hyper_re() (in module sympy.series.formal)": [[222, "sympy.series.formal.hyper_re", false]], "hyperbolicfunction (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.HyperbolicFunction", false]], "hyperexpand() (in module sympy.simplify.hyperexpand)": [[232, "sympy.simplify.hyperexpand.hyperexpand", false]], "hyperfocal_distance() (in module sympy.physics.optics.utils)": [[163, "sympy.physics.optics.utils.hyperfocal_distance", false]], "hypergeometric() (in module sympy.stats)": [[240, "sympy.stats.Hypergeometric", false]], "hypersimilar() (in module sympy.simplify.simplify)": [[232, "sympy.simplify.simplify.hypersimilar", false]], "hypersimp() (in module sympy.simplify.simplify)": [[232, "sympy.simplify.simplify.hypersimp", false]], "hypot (class in sympy.codegen.cfunctions)": [[69, "sympy.codegen.cfunctions.hypot", false]], "ibin() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.ibin", false]], "ideal (class in sympy.polys.agca.ideals)": [[207, "sympy.polys.agca.ideals.Ideal", false]], "ideal() (sympy.polys.domains.ring.ring method)": [[211, "sympy.polys.domains.ring.Ring.ideal", false]], "identity (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.Identity", false]], "identity (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.identity", false]], "identity_hom() (sympy.polys.agca.modules.freemodule method)": [[207, "sympy.polys.agca.modules.FreeModule.identity_hom", false]], "identity_hom() (sympy.polys.agca.modules.module method)": [[207, "sympy.polys.agca.modules.Module.identity_hom", false]], "identity_hom() (sympy.polys.agca.modules.quotientmodule method)": [[207, "sympy.polys.agca.modules.QuotientModule.identity_hom", false]], "identity_hom() (sympy.polys.agca.modules.submodule method)": [[207, "sympy.polys.agca.modules.SubModule.identity_hom", false]], "identityfunction (class in sympy.functions.elementary.miscellaneous)": [[94, "sympy.functions.elementary.miscellaneous.IdentityFunction", false]], "identitygate (class in sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.IdentityGate", false]], "identitymorphism (class in sympy.categories)": [[68, "sympy.categories.IdentityMorphism", false]], "identityoperator (class in sympy.physics.quantum.operator)": [[179, "sympy.physics.quantum.operator.IdentityOperator", false]], "idiff() (in module sympy.geometry.util)": [[105, "sympy.geometry.util.idiff", false]], "idx (class in sympy.tensor.indexed)": [[245, "sympy.tensor.indexed.Idx", false]], "ifft() (in module sympy.discrete.transforms)": [[91, "sympy.discrete.transforms.ifft", false]], "ifwht() (in module sympy.discrete.transforms)": [[91, "sympy.discrete.transforms.ifwht", false]], "igcd() (in module sympy.core.intfunc)": [[88, "sympy.core.intfunc.igcd", false]], "igcd_lehmer() (in module sympy.core.intfunc)": [[88, "sympy.core.intfunc.igcd_lehmer", false]], "igcdex() (in module sympy.core.intfunc)": [[88, "sympy.core.intfunc.igcdex", false]], "ignore_warnings() (in module sympy.utilities.exceptions)": [[256, "sympy.utilities.exceptions.ignore_warnings", false]], "ilcm() (in module sympy.core.intfunc)": [[88, "sympy.core.intfunc.ilcm", false]], "ild_deflection_jumps (sympy.physics.continuum_mechanics.beam.beam property)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.ild_deflection_jumps", false]], "ild_moment (sympy.physics.continuum_mechanics.beam.beam property)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.ild_moment", false]], "ild_reactions (sympy.physics.continuum_mechanics.beam.beam property)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.ild_reactions", false]], "ild_rotation_jumps (sympy.physics.continuum_mechanics.beam.beam property)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.ild_rotation_jumps", false]], "ild_shear (sympy.physics.continuum_mechanics.beam.beam property)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.ild_shear", false]], "im (class in sympy.functions.elementary.complexes)": [[94, "sympy.functions.elementary.complexes.im", false]], "image() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[207, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.image", false]], "imageset (class in sympy.sets.fancysets)": [[228, "sympy.sets.fancysets.ImageSet", false]], "imageset() (in module sympy.sets.sets)": [[228, "sympy.sets.sets.imageset", false]], "imaginary": [[88, "term-imaginary", true]], "imaginarypredicate (class in sympy.assumptions.predicates.sets)": [[65, "sympy.assumptions.predicates.sets.ImaginaryPredicate", false]], "imaginaryunit (class in sympy.core.numbers)": [[88, "sympy.core.numbers.ImaginaryUnit", false]], "immutable": [[15, "term-Immutable", true]], "immutabledensematrix (class in sympy.matrices.immutable)": [[121, "sympy.matrices.immutable.ImmutableDenseMatrix", false]], "immutabledensendimarray (class in sympy.tensor.array)": [[241, "sympy.tensor.array.ImmutableDenseNDimArray", false]], "immutablematrix (in module sympy.matrices.immutable)": [[121, "sympy.matrices.immutable.ImmutableMatrix", false]], "immutablesparsematrix (class in sympy.matrices.immutable)": [[126, "sympy.matrices.immutable.ImmutableSparseMatrix", false]], "immutablesparsendimarray (class in sympy.tensor.array)": [[241, "sympy.tensor.array.ImmutableSparseNDimArray", false]], "implemented_function() (in module sympy.utilities.lambdify)": [[259, "sympy.utilities.lambdify.implemented_function", false]], "implicit_application() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.implicit_application", false]], "implicit_multiplication() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.implicit_multiplication", false]], "implicit_multiplication_application() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.implicit_multiplication_application", false]], "implicitregion (class in sympy.vector.implicitregion)": [[264, "sympy.vector.implicitregion.ImplicitRegion", false]], "implicitseries (class in sympy.plotting.series)": [[206, "sympy.plotting.series.ImplicitSeries", false]], "implieddoloop (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.ImpliedDoLoop", false]], "implies (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.Implies", false]], "impulse_response_numerical_data() (sympy.physics.control.control_plots method)": [[141, "sympy.physics.control.control_plots.impulse_response_numerical_data", false]], "impulse_response_plot() (sympy.physics.control.control_plots method)": [[141, "sympy.physics.control.control_plots.impulse_response_plot", false]], "imul_num() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.imul_num", false]], "in_terms_of_generators() (sympy.polys.agca.modules.submodule method)": [[207, "sympy.polys.agca.modules.SubModule.in_terms_of_generators", false]], "incenter (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.incenter", false]], "incircle (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.incircle", false]], "incircle (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.incircle", false]], "inclusion_hom() (sympy.polys.agca.modules.submodule method)": [[207, "sympy.polys.agca.modules.SubModule.inclusion_hom", false]], "indent_code() (sympy.printing.c.c89codeprinter method)": [[220, "sympy.printing.c.C89CodePrinter.indent_code", false]], "indent_code() (sympy.printing.fortran.fcodeprinter method)": [[220, "sympy.printing.fortran.FCodePrinter.indent_code", false]], "indent_code() (sympy.printing.jscode.javascriptcodeprinter method)": [[220, "sympy.printing.jscode.JavascriptCodePrinter.indent_code", false]], "indent_code() (sympy.printing.julia.juliacodeprinter method)": [[220, "sympy.printing.julia.JuliaCodePrinter.indent_code", false]], "indent_code() (sympy.printing.octave.octavecodeprinter method)": [[220, "sympy.printing.octave.OctaveCodePrinter.indent_code", false]], "indent_code() (sympy.printing.rcode.rcodeprinter method)": [[220, "sympy.printing.rcode.RCodePrinter.indent_code", false]], "indent_code() (sympy.printing.rust.rustcodeprinter method)": [[220, "sympy.printing.rust.RustCodePrinter.indent_code", false]], "index() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.index", false]], "index() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.index", false]], "index() (sympy.concrete.expr_with_intlimits.exprwithintlimits method)": [[87, "sympy.concrete.expr_with_intlimits.ExprWithIntLimits.index", false]], "index() (sympy.core.containers.tuple method)": [[88, "sympy.core.containers.Tuple.index", false]], "index() (sympy.physics.secondquant.fixedbosonicbasis method)": [[190, "sympy.physics.secondquant.FixedBosonicBasis.index", false]], "index() (sympy.physics.secondquant.varbosonicbasis method)": [[190, "sympy.physics.secondquant.VarBosonicBasis.index", false]], "index() (sympy.polys.rings.polyring method)": [[211, "sympy.polys.rings.PolyRing.index", false]], "index_vector() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.index_vector", false]], "indexed (class in sympy.tensor.indexed)": [[245, "sympy.tensor.indexed.Indexed", false]], "indexedbase (class in sympy.tensor.indexed)": [[245, "sympy.tensor.indexed.IndexedBase", false]], "indices (sympy.tensor.indexed.indexed property)": [[245, "sympy.tensor.indexed.Indexed.indices", false]], "indices_contain_equal_information (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[96, "sympy.functions.special.tensor_functions.KroneckerDelta.indices_contain_equal_information", false]], "indices_contain_equal_information (sympy.physics.secondquant.kroneckerdelta property)": [[190, "sympy.physics.secondquant.KroneckerDelta.indices_contain_equal_information", false]], "inertia (class in sympy.physics.mechanics.inertia)": [[154, "sympy.physics.mechanics.inertia.Inertia", false]], "inertia (sympy.physics.mechanics.body.body property)": [[148, "sympy.physics.mechanics.body.Body.inertia", false]], "inertia (sympy.physics.mechanics.rigidbody.rigidbody property)": [[154, "sympy.physics.mechanics.rigidbody.RigidBody.inertia", false]], "inertia() (in module sympy.physics.mechanics.inertia)": [[154, "sympy.physics.mechanics.inertia.inertia", false]], "inertia_of_point_mass() (in module sympy.physics.mechanics.inertia)": [[154, "sympy.physics.mechanics.inertia.inertia_of_point_mass", false]], "inf (sympy.sets.sets.set property)": [[228, "sympy.sets.sets.Set.inf", false]], "infinite": [[88, "term-infinite", true]], "infinite (sympy.series.formal.formalpowerseries property)": [[222, "sympy.series.formal.FormalPowerSeries.infinite", false]], "infinitepredicate (class in sympy.assumptions.predicates.calculus)": [[65, "sympy.assumptions.predicates.calculus.InfinitePredicate", false]], "infinitesimals() (in module sympy.solvers.ode)": [[236, "sympy.solvers.ode.infinitesimals", false]], "infinity (class in sympy.core.numbers)": [[88, "sympy.core.numbers.Infinity", false]], "inhomogeneousgeneralquadratic (class in sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.InhomogeneousGeneralQuadratic", false]], "inhomogeneousternaryquadratic (class in sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.InhomogeneousTernaryQuadratic", false]], "init_ipython_session() (in module sympy.interactive.session)": [[116, "sympy.interactive.session.init_ipython_session", false]], "init_printing() (in module sympy.interactive.printing)": [[116, "sympy.interactive.printing.init_printing", false]], "init_python_session() (in module sympy.interactive.session)": [[116, "sympy.interactive.session.init_python_session", false]], "init_session() (in module sympy.interactive.session)": [[116, "sympy.interactive.session.init_session", false]], "init_vprinting() (in module sympy.physics.vector.printing)": [[204, "sympy.physics.vector.printing.init_vprinting", false]], "initial (sympy.series.sequences.recursiveseq property)": [[226, "sympy.series.sequences.RecursiveSeq.initial", false]], "inject() (sympy.polys.domains.compositedomain.compositedomain method)": [[211, "sympy.polys.domains.compositedomain.CompositeDomain.inject", false]], "inject() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.inject", false]], "inject() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianDomain.inject", false]], "inject() (sympy.polys.domains.simpledomain.simpledomain method)": [[211, "sympy.polys.domains.simpledomain.SimpleDomain.inject", false]], "inject() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.inject", false]], "inject() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.inject", false]], "inner_endomorphism() (sympy.polys.numberfields.modules.endomorphismring method)": [[215, "sympy.polys.numberfields.modules.EndomorphismRing.inner_endomorphism", false]], "innerendomorphism (class in sympy.polys.numberfields.modules)": [[215, "sympy.polys.numberfields.modules.InnerEndomorphism", false]], "innerproduct (class in sympy.physics.quantum.innerproduct)": [[178, "sympy.physics.quantum.innerproduct.InnerProduct", false]], "innerproduct (class in sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.InnerProduct", false]], "input_vars (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.input_vars", false]], "input_vars (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.input_vars", false]], "input_vars (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[131, "sympy.physics.biomechanics.activation.ZerothOrderActivation.input_vars", false]], "input_vars (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.input_vars", false]], "inradius (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.inradius", false]], "inradius (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.inradius", false]], "int_to_integer() (in module sympy.interactive.session)": [[116, "sympy.interactive.session.int_to_Integer", false]], "intbasetype (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.IntBaseType", false]], "intcurve_diffequ() (in module sympy.diffgeom)": [[90, "sympy.diffgeom.intcurve_diffequ", false]], "intcurve_series() (in module sympy.diffgeom)": [[90, "sympy.diffgeom.intcurve_series", false]], "integer": [[88, "term-integer", true]], "integer (class in sympy.core.numbers)": [[88, "sympy.core.numbers.Integer", false]], "integer_log() (in module sympy.core.intfunc)": [[88, "sympy.core.intfunc.integer_log", false]], "integer_nthroot() (in module sympy.core.intfunc)": [[88, "sympy.core.intfunc.integer_nthroot", false]], "integer_to_term() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.integer_to_term", false]], "integerelementspredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.IntegerElementsPredicate", false]], "integerpartition (class in sympy.combinatorics.partitions)": [[77, "sympy.combinatorics.partitions.IntegerPartition", false]], "integerpredicate (class in sympy.assumptions.predicates.sets)": [[65, "sympy.assumptions.predicates.sets.IntegerPredicate", false]], "integerring (class in sympy.polys.domains)": [[211, "sympy.polys.domains.IntegerRing", false]], "integers (class in sympy.sets.fancysets)": [[228, "sympy.sets.fancysets.Integers", false]], "integral (class in sympy.integrals.integrals)": [[115, "sympy.integrals.integrals.Integral", false]], "integral.is_commutative (in module sympy.integrals.integrals)": [[115, "sympy.integrals.integrals.Integral.is_commutative", false]], "integral_basis() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.integral_basis", false]], "integral_steps() (in module sympy.integrals.manualintegrate)": [[115, "sympy.integrals.manualintegrate.integral_steps", false]], "integraltransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.IntegralTransform", false]], "integraltransformerror": [[115, "sympy.integrals.transforms.IntegralTransformError", false]], "integrand() (sympy.functions.special.hyper.meijerg method)": [[96, "sympy.functions.special.hyper.meijerg.integrand", false]], "integrate() (in module sympy.integrals.integrals)": [[115, "sympy.integrals.integrals.integrate", false]], "integrate() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.integrate", false]], "integrate() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.integrate", false]], "integrate() (sympy.core.relational.equality method)": [[88, "sympy.core.relational.Equality.integrate", false]], "integrate() (sympy.holonomic.holonomic.holonomicfunction method)": [[110, "sympy.holonomic.holonomic.HolonomicFunction.integrate", false]], "integrate() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.integrate", false]], "integrate() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.integrate", false]], "integrate() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.integrate", false]], "integrate() (sympy.series.formal.formalpowerseries method)": [[222, "sympy.series.formal.FormalPowerSeries.integrate", false]], "integrate_result() (in module sympy.physics.quantum.represent)": [[185, "sympy.physics.quantum.represent.integrate_result", false]], "interactive": [[15, "term-Interactive", true]], "interior (sympy.sets.sets.set property)": [[228, "sympy.sets.sets.Set.interior", false]], "interior_angle (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.interior_angle", false]], "internal_forces (sympy.physics.continuum_mechanics.truss.truss property)": [[139, "sympy.physics.continuum_mechanics.truss.Truss.internal_forces", false]], "interpolate() (in module sympy.polys.polyfuncs)": [[216, "sympy.polys.polyfuncs.interpolate", false]], "interpolating_poly() (in module sympy.polys.specialpolys)": [[216, "sympy.polys.specialpolys.interpolating_poly", false]], "interpolating_spline() (in module sympy.functions.special.bsplines)": [[96, "sympy.functions.special.bsplines.interpolating_spline", false]], "intersect() (sympy.polys.agca.ideals.ideal method)": [[207, "sympy.polys.agca.ideals.Ideal.intersect", false]], "intersect() (sympy.polys.agca.modules.submodule method)": [[207, "sympy.polys.agca.modules.SubModule.intersect", false]], "intersect() (sympy.sets.sets.set method)": [[228, "sympy.sets.sets.Set.intersect", false]], "intersecting_product() (in module sympy.discrete.convolutions)": [[91, "sympy.discrete.convolutions.intersecting_product", false]], "intersection (class in sympy.sets.sets)": [[228, "sympy.sets.sets.Intersection", false]], "intersection() (in module sympy.geometry.util)": [[105, "sympy.geometry.util.intersection", false]], "intersection() (sympy.geometry.ellipse.circle method)": [[98, "sympy.geometry.ellipse.Circle.intersection", false]], "intersection() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.intersection", false]], "intersection() (sympy.geometry.entity.geometryentity method)": [[99, "sympy.geometry.entity.GeometryEntity.intersection", false]], "intersection() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.intersection", false]], "intersection() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.intersection", false]], "intersection() (sympy.geometry.point.point method)": [[103, "sympy.geometry.point.Point.intersection", false]], "intersection() (sympy.geometry.point.point3d method)": [[103, "sympy.geometry.point.Point3D.intersection", false]], "intersection() (sympy.geometry.polygon.polygon method)": [[104, "sympy.geometry.polygon.Polygon.intersection", false]], "intersection() (sympy.sets.sets.set method)": [[228, "sympy.sets.sets.Set.intersection", false]], "interval (class in sympy.sets.sets)": [[228, "sympy.sets.sets.Interval", false]], "interval (sympy.series.sequences.recursiveseq property)": [[226, "sympy.series.sequences.RecursiveSeq.interval", false]], "interval (sympy.series.sequences.seqbase property)": [[226, "sympy.series.sequences.SeqBase.interval", false]], "intervals() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.intervals", false]], "intervals() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.intervals", false]], "intervals() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.intervals", false]], "intqubit (class in sympy.physics.quantum.qubit)": [[184, "sympy.physics.quantum.qubit.IntQubit", false]], "intqubitbra (class in sympy.physics.quantum.qubit)": [[184, "sympy.physics.quantum.qubit.IntQubitBra", false]], "intt() (in module sympy.discrete.transforms)": [[91, "sympy.discrete.transforms.intt", false]], "inv() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.inv", false]], "inv() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.inv", false]], "inv() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.inv", false]], "inv() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.inv", false]], "inv() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.inv", false]], "inv_can_transf_matrix (sympy.physics.units.dimensions.dimensionsystem property)": [[192, "sympy.physics.units.dimensions.DimensionSystem.inv_can_transf_matrix", false]], "inv_den() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.inv_den", false]], "inverse (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.Inverse", false]], "inverse() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.inverse", false]], "inverse() (sympy.functions.elementary.exponential.log method)": [[94, "sympy.functions.elementary.exponential.log.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.acosh method)": [[94, "sympy.functions.elementary.hyperbolic.acosh.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.acoth method)": [[94, "sympy.functions.elementary.hyperbolic.acoth.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.acsch method)": [[94, "sympy.functions.elementary.hyperbolic.acsch.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.asech method)": [[94, "sympy.functions.elementary.hyperbolic.asech.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.asinh method)": [[94, "sympy.functions.elementary.hyperbolic.asinh.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.atanh method)": [[94, "sympy.functions.elementary.hyperbolic.atanh.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.coth method)": [[94, "sympy.functions.elementary.hyperbolic.coth.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.sinh method)": [[94, "sympy.functions.elementary.hyperbolic.sinh.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.tanh method)": [[94, "sympy.functions.elementary.hyperbolic.tanh.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.acos method)": [[94, "sympy.functions.elementary.trigonometric.acos.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.acot method)": [[94, "sympy.functions.elementary.trigonometric.acot.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.acsc method)": [[94, "sympy.functions.elementary.trigonometric.acsc.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.asec method)": [[94, "sympy.functions.elementary.trigonometric.asec.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.asin method)": [[94, "sympy.functions.elementary.trigonometric.asin.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.atan method)": [[94, "sympy.functions.elementary.trigonometric.atan.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.cot method)": [[94, "sympy.functions.elementary.trigonometric.cot.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.tan method)": [[94, "sympy.functions.elementary.trigonometric.tan.inverse", false]], "inverse() (sympy.functions.special.error_functions.erf method)": [[96, "sympy.functions.special.error_functions.erf.inverse", false]], "inverse() (sympy.functions.special.error_functions.erfc method)": [[96, "sympy.functions.special.error_functions.erfc.inverse", false]], "inverse() (sympy.functions.special.error_functions.erfcinv method)": [[96, "sympy.functions.special.error_functions.erfcinv.inverse", false]], "inverse() (sympy.functions.special.error_functions.erfinv method)": [[96, "sympy.functions.special.error_functions.erfinv.inverse", false]], "inverse() (sympy.physics.biomechanics.curve.fiberforcelengthpassivedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveDeGroote2016.inverse", false]], "inverse() (sympy.physics.biomechanics.curve.fiberforcelengthpassiveinversedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveInverseDeGroote2016.inverse", false]], "inverse() (sympy.physics.biomechanics.curve.fiberforcevelocitydegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceVelocityDeGroote2016.inverse", false]], "inverse() (sympy.physics.biomechanics.curve.fiberforcevelocityinversedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceVelocityInverseDeGroote2016.inverse", false]], "inverse() (sympy.physics.biomechanics.curve.tendonforcelengthdegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.TendonForceLengthDeGroote2016.inverse", false]], "inverse() (sympy.physics.biomechanics.curve.tendonforcelengthinversedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.TendonForceLengthInverseDeGroote2016.inverse", false]], "inverse() (sympy.polys.agca.extensions.extensionelement method)": [[207, "sympy.polys.agca.extensions.ExtensionElement.inverse", false]], "inverse() (sympy.series.formal.formalpowerseries method)": [[222, "sympy.series.formal.FormalPowerSeries.inverse", false]], "inverse_adj() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.inverse_ADJ", false]], "inverse_block() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.inverse_BLOCK", false]], "inverse_ch() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.inverse_CH", false]], "inverse_cosine_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.inverse_cosine_transform", false]], "inverse_fourier_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.inverse_fourier_transform", false]], "inverse_ge() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.inverse_GE", false]], "inverse_hankel_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.inverse_hankel_transform", false]], "inverse_laplace_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.inverse_laplace_transform", false]], "inverse_ldl() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.inverse_LDL", false]], "inverse_lu() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.inverse_LU", false]], "inverse_mellin_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.inverse_mellin_transform", false]], "inverse_mobius_transform() (in module sympy.discrete.transforms)": [[91, "sympy.discrete.transforms.inverse_mobius_transform", false]], "inverse_qr() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.inverse_QR", false]], "inverse_sine_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.inverse_sine_transform", false]], "inversecosinetransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.InverseCosineTransform", false]], "inversefouriertransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.InverseFourierTransform", false]], "inversehankeltransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.InverseHankelTransform", false]], "inverselaplacetransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.InverseLaplaceTransform", false]], "inversemellintransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.InverseMellinTransform", false]], "inversesinetransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.InverseSineTransform", false]], "inversion_vector() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.inversion_vector", false]], "inversions() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.inversions", false]], "invert() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.invert", false]], "invert() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.invert", false]], "invert() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.invert", false]], "invert() (sympy.polys.domains.ring.ring method)": [[211, "sympy.polys.domains.ring.Ring.invert", false]], "invert() (sympy.polys.polyclasses.dmf method)": [[211, "sympy.polys.polyclasses.DMF.invert", false]], "invert() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.invert", false]], "invert() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.invert", false]], "invert_complex() (in module sympy.solvers.solveset)": [[239, "sympy.solvers.solveset.invert_complex", false]], "invert_real() (in module sympy.solvers.solveset)": [[239, "sympy.solvers.solveset.invert_real", false]], "invertiblepredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.InvertiblePredicate", false]], "iproduct() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.iproduct", false]], "iqft (class in sympy.physics.quantum.qft)": [[183, "sympy.physics.quantum.qft.IQFT", false]], "irrational": [[88, "term-irrational", true]], "irrationalpredicate (class in sympy.assumptions.predicates.sets)": [[65, "sympy.assumptions.predicates.sets.IrrationalPredicate", false]], "irregular() (sympy.matrices.matrixbase.matrixbase class method)": [[124, "sympy.matrices.matrixbase.MatrixBase.irregular", false]], "is_*": [[15, "term-is_", true]], "is_abelian (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_abelian", false]], "is_abelian_number() (in module sympy.combinatorics.group_numbers)": [[74, "sympy.combinatorics.group_numbers.is_abelian_number", false]], "is_above_fermi (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[96, "sympy.functions.special.tensor_functions.KroneckerDelta.is_above_fermi", false]], "is_above_fermi (sympy.physics.secondquant.kroneckerdelta property)": [[190, "sympy.physics.secondquant.KroneckerDelta.is_above_fermi", false]], "is_absolutely_convergent() (sympy.concrete.summations.sum method)": [[87, "sympy.concrete.summations.Sum.is_absolutely_convergent", false]], "is_abundant() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.is_abundant", false]], "is_algebraic_expr() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.is_algebraic_expr", false]], "is_aliased (sympy.core.numbers.algebraicnumber property)": [[88, "sympy.core.numbers.AlgebraicNumber.is_aliased", false]], "is_alt_sym() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_alt_sym", false]], "is_alternating (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_alternating", false]], "is_amicable() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.is_amicable", false]], "is_anf() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.is_anf", false]], "is_anti_symmetric() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_anti_symmetric", false]], "is_below_fermi (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[96, "sympy.functions.special.tensor_functions.KroneckerDelta.is_below_fermi", false]], "is_below_fermi (sympy.physics.secondquant.kroneckerdelta property)": [[190, "sympy.physics.secondquant.KroneckerDelta.is_below_fermi", false]], "is_biproper (sympy.physics.control.lti.parallel property)": [[143, "sympy.physics.control.lti.Parallel.is_biproper", false]], "is_biproper (sympy.physics.control.lti.series property)": [[143, "sympy.physics.control.lti.Series.is_biproper", false]], "is_biproper (sympy.physics.control.lti.transferfunction property)": [[143, "sympy.physics.control.lti.TransferFunction.is_biproper", false]], "is_carmichael() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.is_carmichael", false]], "is_closed (sympy.sets.sets.set property)": [[228, "sympy.sets.sets.Set.is_closed", false]], "is_cnf() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.is_cnf", false]], "is_collinear() (sympy.geometry.point.point method)": [[103, "sympy.geometry.point.Point.is_collinear", false]], "is_commutative (sympy.physics.quantum.state.wavefunction property)": [[188, "sympy.physics.quantum.state.Wavefunction.is_commutative", false]], "is_comparable (sympy.core.basic.basic property)": [[88, "sympy.core.basic.Basic.is_comparable", false]], "is_compat() (sympy.polys.numberfields.modules.moduleelement method)": [[215, "sympy.polys.numberfields.modules.ModuleElement.is_compat", false]], "is_compat_col() (sympy.polys.numberfields.modules.module method)": [[215, "sympy.polys.numberfields.modules.Module.is_compat_col", false]], "is_concyclic() (sympy.geometry.point.point method)": [[103, "sympy.geometry.point.Point.is_concyclic", false]], "is_conservative() (in module sympy.physics.vector.fieldfunctions)": [[200, "sympy.physics.vector.fieldfunctions.is_conservative", false]], "is_conservative() (in module sympy.vector)": [[267, "sympy.vector.is_conservative", false]], "is_consistent (sympy.physics.units.dimensions.dimensionsystem property)": [[192, "sympy.physics.units.dimensions.DimensionSystem.is_consistent", false]], "is_consistent (sympy.physics.units.unitsystem.unitsystem property)": [[198, "sympy.physics.units.unitsystem.UnitSystem.is_consistent", false]], "is_constant() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.is_constant", false]], "is_convergent() (sympy.concrete.products.product method)": [[87, "sympy.concrete.products.Product.is_convergent", false]], "is_convergent() (sympy.concrete.summations.sum method)": [[87, "sympy.concrete.summations.Sum.is_convergent", false]], "is_convex() (in module sympy.calculus.util)": [[67, "sympy.calculus.util.is_convex", false]], "is_convex() (sympy.geometry.polygon.polygon method)": [[104, "sympy.geometry.polygon.Polygon.is_convex", false]], "is_coplanar() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.is_coplanar", false]], "is_cyclic (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_cyclic", false]], "is_cyclic_number() (in module sympy.combinatorics.group_numbers)": [[74, "sympy.combinatorics.group_numbers.is_cyclic_number", false]], "is_cyclotomic (sympy.polys.polyclasses.dmp property)": [[211, "sympy.polys.polyclasses.DMP.is_cyclotomic", false]], "is_cyclotomic (sympy.polys.polytools.poly property)": [[216, "sympy.polys.polytools.Poly.is_cyclotomic", false]], "is_decreasing() (in module sympy.calculus.singularities)": [[67, "sympy.calculus.singularities.is_decreasing", false]], "is_deficient() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.is_deficient", false]], "is_diagonal (sympy.polys.matrices.domainmatrix.domainmatrix property)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.is_diagonal", false]], "is_diagonal() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_diagonal", false]], "is_diagonal() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.is_diagonal", false]], "is_diagonal() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.is_diagonal", false]], "is_diagonal() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.is_diagonal", false]], "is_diagonalizable() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_diagonalizable", false]], "is_dihedral (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_dihedral", false]], "is_dimensionless() (sympy.physics.units.dimensions.dimensionsystem method)": [[192, "sympy.physics.units.dimensions.DimensionSystem.is_dimensionless", false]], "is_disjoint() (sympy.sets.sets.set method)": [[228, "sympy.sets.sets.Set.is_disjoint", false]], "is_dnf() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.is_dnf", false]], "is_echelon (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_echelon", false]], "is_elementary() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_elementary", false]], "is_empty (sympy.combinatorics.permutations.permutation property)": [[80, "sympy.combinatorics.permutations.Permutation.is_Empty", false]], "is_equilateral() (sympy.geometry.polygon.triangle method)": [[104, "sympy.geometry.polygon.Triangle.is_equilateral", false]], "is_euler_jacobi_pseudoprime() (in module sympy.ntheory.primetest)": [[128, "sympy.ntheory.primetest.is_euler_jacobi_pseudoprime", false]], "is_euler_pseudoprime() (in module sympy.ntheory.primetest)": [[128, "sympy.ntheory.primetest.is_euler_pseudoprime", false]], "is_even (sympy.combinatorics.permutations.permutation property)": [[80, "sympy.combinatorics.permutations.Permutation.is_even", false]], "is_exact (sympy.polys.domains.compositedomain.compositedomain property)": [[211, "sympy.polys.domains.compositedomain.CompositeDomain.is_Exact", false]], "is_extra_strong_lucas_prp() (in module sympy.ntheory.primetest)": [[128, "sympy.ntheory.primetest.is_extra_strong_lucas_prp", false]], "is_fermat_pseudoprime() (in module sympy.ntheory.primetest)": [[128, "sympy.ntheory.primetest.is_fermat_pseudoprime", false]], "is_field (sympy.polys.domains.domain.domain attribute)": [[211, "sympy.polys.domains.domain.Domain.is_Field", false]], "is_full_module() (sympy.polys.agca.modules.submodule method)": [[207, "sympy.polys.agca.modules.SubModule.is_full_module", false]], "is_full_module() (sympy.polys.agca.modules.subquotientmodule method)": [[207, "sympy.polys.agca.modules.SubQuotientModule.is_full_module", false]], "is_gaussian_prime() (in module sympy.ntheory.primetest)": [[128, "sympy.ntheory.primetest.is_gaussian_prime", false]], "is_groebner() (in module sympy.polys.groebnertools)": [[213, "sympy.polys.groebnertools.is_groebner", false]], "is_ground (sympy.polys.polyclasses.anp property)": [[211, "sympy.polys.polyclasses.ANP.is_ground", false]], "is_ground (sympy.polys.polyclasses.dmp property)": [[211, "sympy.polys.polyclasses.DMP.is_ground", false]], "is_ground (sympy.polys.polytools.poly property)": [[216, "sympy.polys.polytools.Poly.is_ground", false]], "is_hermitian (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_hermitian", false]], "is_homogeneous (sympy.polys.polyclasses.dmp property)": [[211, "sympy.polys.polyclasses.DMP.is_homogeneous", false]], "is_homogeneous (sympy.polys.polytools.poly property)": [[216, "sympy.polys.polytools.Poly.is_homogeneous", false]], "is_identity (sympy.combinatorics.permutations.permutation property)": [[80, "sympy.combinatorics.permutations.Permutation.is_Identity", false]], "is_identity (sympy.core.function.lambda property)": [[88, "sympy.core.function.Lambda.is_identity", false]], "is_increasing() (in module sympy.calculus.singularities)": [[67, "sympy.calculus.singularities.is_increasing", false]], "is_indefinite (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_indefinite", false]], "is_inert (sympy.polys.numberfields.primes.primeideal property)": [[215, "sympy.polys.numberfields.primes.PrimeIdeal.is_inert", false]], "is_injective() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[207, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.is_injective", false]], "is_int() (in module sympy.polys.numberfields.utilities)": [[215, "sympy.polys.numberfields.utilities.is_int", false]], "is_irreducible (sympy.polys.polyclasses.dmp property)": [[211, "sympy.polys.polyclasses.DMP.is_irreducible", false]], "is_irreducible (sympy.polys.polytools.poly property)": [[216, "sympy.polys.polytools.Poly.is_irreducible", false]], "is_isomorphism() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[207, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.is_isomorphism", false]], "is_isosceles() (sympy.geometry.polygon.triangle method)": [[104, "sympy.geometry.polygon.Triangle.is_isosceles", false]], "is_iterable (sympy.sets.sets.productset property)": [[228, "sympy.sets.sets.ProductSet.is_iterable", false]], "is_left_unbounded (sympy.sets.sets.interval property)": [[228, "sympy.sets.sets.Interval.is_left_unbounded", false]], "is_linear (sympy.polys.polyclasses.dmp property)": [[211, "sympy.polys.polyclasses.DMP.is_linear", false]], "is_linear (sympy.polys.polytools.poly property)": [[216, "sympy.polys.polytools.Poly.is_linear", false]], "is_lower (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_lower", false]], "is_lower (sympy.polys.matrices.domainmatrix.domainmatrix property)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.is_lower", false]], "is_lower() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.is_lower", false]], "is_lower() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.is_lower", false]], "is_lower() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.is_lower", false]], "is_lower_hessenberg (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_lower_hessenberg", false]], "is_lucas_prp() (in module sympy.ntheory.primetest)": [[128, "sympy.ntheory.primetest.is_lucas_prp", false]], "is_maximal() (sympy.polys.agca.ideals.ideal method)": [[207, "sympy.polys.agca.ideals.Ideal.is_maximal", false]], "is_meromorphic() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.is_meromorphic", false]], "is_mersenne_prime() (in module sympy.ntheory.primetest)": [[128, "sympy.ntheory.primetest.is_mersenne_prime", false]], "is_minimal() (in module sympy.polys.groebnertools)": [[213, "sympy.polys.groebnertools.is_minimal", false]], "is_monic (sympy.polys.polyclasses.dmp property)": [[211, "sympy.polys.polyclasses.DMP.is_monic", false]], "is_monic (sympy.polys.polytools.poly property)": [[216, "sympy.polys.polytools.Poly.is_monic", false]], "is_monomial (sympy.polys.polyclasses.dmp property)": [[211, "sympy.polys.polyclasses.DMP.is_monomial", false]], "is_monomial (sympy.polys.polytools.poly property)": [[216, "sympy.polys.polytools.Poly.is_monomial", false]], "is_monotonic() (in module sympy.calculus.singularities)": [[67, "sympy.calculus.singularities.is_monotonic", false]], "is_multivariate (sympy.polys.polytools.poly property)": [[216, "sympy.polys.polytools.Poly.is_multivariate", false]], "is_negative() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.is_negative", false]], "is_negative() (sympy.polys.domains.complexfield method)": [[211, "sympy.polys.domains.ComplexField.is_negative", false]], "is_negative() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.is_negative", false]], "is_negative() (sympy.polys.domains.expressiondomain method)": [[211, "sympy.polys.domains.ExpressionDomain.is_negative", false]], "is_negative() (sympy.polys.domains.finitefield method)": [[211, "sympy.polys.domains.FiniteField.is_negative", false]], "is_negative() (sympy.polys.domains.fractionfield method)": [[211, "sympy.polys.domains.FractionField.is_negative", false]], "is_negative() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianDomain.is_negative", false]], "is_negative() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.is_negative", false]], "is_negative_definite (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_negative_definite", false]], "is_negative_semidefinite (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_negative_semidefinite", false]], "is_nilpotent (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_nilpotent", false]], "is_nilpotent() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_nilpotent", false]], "is_nilpotent_number() (in module sympy.combinatorics.group_numbers)": [[74, "sympy.combinatorics.group_numbers.is_nilpotent_number", false]], "is_nnf() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.is_nnf", false]], "is_nonnegative() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.complexfield method)": [[211, "sympy.polys.domains.ComplexField.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.expressiondomain method)": [[211, "sympy.polys.domains.ExpressionDomain.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.finitefield method)": [[211, "sympy.polys.domains.FiniteField.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.fractionfield method)": [[211, "sympy.polys.domains.FractionField.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianDomain.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.is_nonnegative", false]], "is_nonpositive() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.complexfield method)": [[211, "sympy.polys.domains.ComplexField.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.expressiondomain method)": [[211, "sympy.polys.domains.ExpressionDomain.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.finitefield method)": [[211, "sympy.polys.domains.FiniteField.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.fractionfield method)": [[211, "sympy.polys.domains.FractionField.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianDomain.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.is_nonpositive", false]], "is_nonzero (sympy.geometry.point.point property)": [[103, "sympy.geometry.point.Point.is_nonzero", false]], "is_normal() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_normal", false]], "is_normalized (sympy.physics.quantum.state.wavefunction property)": [[188, "sympy.physics.quantum.state.Wavefunction.is_normalized", false]], "is_nthpow_residue() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.is_nthpow_residue", false]], "is_number (sympy.concrete.expr_with_limits.exprwithlimits property)": [[115, "sympy.concrete.expr_with_limits.ExprWithLimits.is_number", false]], "is_number (sympy.core.expr.expr property)": [[88, "sympy.core.expr.Expr.is_number", false]], "is_number (sympy.functions.special.hyper.meijerg property)": [[96, "sympy.functions.special.hyper.meijerg.is_number", false]], "is_odd (sympy.combinatorics.permutations.permutation property)": [[80, "sympy.combinatorics.permutations.Permutation.is_odd", false]], "is_one (sympy.polys.polyclasses.anp property)": [[211, "sympy.polys.polyclasses.ANP.is_one", false]], "is_one (sympy.polys.polyclasses.dmf property)": [[211, "sympy.polys.polyclasses.DMF.is_one", false]], "is_one (sympy.polys.polyclasses.dmp property)": [[211, "sympy.polys.polyclasses.DMP.is_one", false]], "is_one (sympy.polys.polytools.poly property)": [[216, "sympy.polys.polytools.Poly.is_one", false]], "is_one() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.is_one", false]], "is_only_above_fermi (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[96, "sympy.functions.special.tensor_functions.KroneckerDelta.is_only_above_fermi", false]], "is_only_above_fermi (sympy.physics.secondquant.kroneckerdelta property)": [[190, "sympy.physics.secondquant.KroneckerDelta.is_only_above_fermi", false]], "is_only_below_fermi (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[96, "sympy.functions.special.tensor_functions.KroneckerDelta.is_only_below_fermi", false]], "is_only_below_fermi (sympy.physics.secondquant.kroneckerdelta property)": [[190, "sympy.physics.secondquant.KroneckerDelta.is_only_below_fermi", false]], "is_only_q_annihilator (sympy.physics.secondquant.annihilatefermion property)": [[190, "sympy.physics.secondquant.AnnihilateFermion.is_only_q_annihilator", false]], "is_only_q_annihilator (sympy.physics.secondquant.createfermion property)": [[190, "sympy.physics.secondquant.CreateFermion.is_only_q_annihilator", false]], "is_only_q_creator (sympy.physics.secondquant.annihilatefermion property)": [[190, "sympy.physics.secondquant.AnnihilateFermion.is_only_q_creator", false]], "is_only_q_creator (sympy.physics.secondquant.createfermion property)": [[190, "sympy.physics.secondquant.CreateFermion.is_only_q_creator", false]], "is_open (sympy.sets.sets.set property)": [[228, "sympy.sets.sets.Set.is_open", false]], "is_palindromic() (in module sympy.ntheory.digits)": [[128, "sympy.ntheory.digits.is_palindromic", false]], "is_palindromic() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.is_palindromic", false]], "is_parallel() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.is_parallel", false]], "is_parallel() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.is_parallel", false]], "is_perfect (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_perfect", false]], "is_perfect() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.is_perfect", false]], "is_perpendicular() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.is_perpendicular", false]], "is_perpendicular() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.is_perpendicular", false]], "is_pid (sympy.polys.domains.domain.domain attribute)": [[211, "sympy.polys.domains.domain.Domain.is_PID", false]], "is_polycyclic (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_polycyclic", false]], "is_polynomial() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.is_polynomial", false]], "is_positive() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.is_positive", false]], "is_positive() (sympy.polys.domains.complexfield method)": [[211, "sympy.polys.domains.ComplexField.is_positive", false]], "is_positive() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.is_positive", false]], "is_positive() (sympy.polys.domains.expressiondomain method)": [[211, "sympy.polys.domains.ExpressionDomain.is_positive", false]], "is_positive() (sympy.polys.domains.finitefield method)": [[211, "sympy.polys.domains.FiniteField.is_positive", false]], "is_positive() (sympy.polys.domains.fractionfield method)": [[211, "sympy.polys.domains.FractionField.is_positive", false]], "is_positive() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianDomain.is_positive", false]], "is_positive() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.is_positive", false]], "is_positive_definite (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_positive_definite", false]], "is_positive_semidefinite (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_positive_semidefinite", false]], "is_prefixed (sympy.physics.units.quantities.quantity property)": [[197, "sympy.physics.units.quantities.Quantity.is_prefixed", false]], "is_primary() (sympy.polys.agca.ideals.ideal method)": [[207, "sympy.polys.agca.ideals.Ideal.is_primary", false]], "is_prime() (sympy.polys.agca.ideals.ideal method)": [[207, "sympy.polys.agca.ideals.Ideal.is_prime", false]], "is_primitive (sympy.polys.polyclasses.dmp property)": [[211, "sympy.polys.polyclasses.DMP.is_primitive", false]], "is_primitive (sympy.polys.polytools.poly property)": [[216, "sympy.polys.polytools.Poly.is_primitive", false]], "is_primitive() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_primitive", false]], "is_primitive_element (sympy.core.numbers.algebraicnumber property)": [[88, "sympy.core.numbers.AlgebraicNumber.is_primitive_element", false]], "is_primitive_root() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.is_primitive_root", false]], "is_principal() (sympy.polys.agca.ideals.ideal method)": [[207, "sympy.polys.agca.ideals.Ideal.is_principal", false]], "is_proper (sympy.physics.control.lti.parallel property)": [[143, "sympy.physics.control.lti.Parallel.is_proper", false]], "is_proper (sympy.physics.control.lti.series property)": [[143, "sympy.physics.control.lti.Series.is_proper", false]], "is_proper (sympy.physics.control.lti.transferfunction property)": [[143, "sympy.physics.control.lti.TransferFunction.is_proper", false]], "is_proper_subset() (sympy.sets.sets.set method)": [[228, "sympy.sets.sets.Set.is_proper_subset", false]], "is_proper_superset() (sympy.sets.sets.set method)": [[228, "sympy.sets.sets.Set.is_proper_superset", false]], "is_pure() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.is_pure", false]], "is_q_annihilator (sympy.physics.secondquant.annihilatefermion property)": [[190, "sympy.physics.secondquant.AnnihilateFermion.is_q_annihilator", false]], "is_q_annihilator (sympy.physics.secondquant.createfermion property)": [[190, "sympy.physics.secondquant.CreateFermion.is_q_annihilator", false]], "is_q_creator (sympy.physics.secondquant.annihilatefermion property)": [[190, "sympy.physics.secondquant.AnnihilateFermion.is_q_creator", false]], "is_q_creator (sympy.physics.secondquant.createfermion property)": [[190, "sympy.physics.secondquant.CreateFermion.is_q_creator", false]], "is_quad_residue() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.is_quad_residue", false]], "is_quadratic (sympy.polys.polyclasses.dmp property)": [[211, "sympy.polys.polyclasses.DMP.is_quadratic", false]], "is_quadratic (sympy.polys.polytools.poly property)": [[216, "sympy.polys.polytools.Poly.is_quadratic", false]], "is_radical() (sympy.polys.agca.ideals.ideal method)": [[207, "sympy.polys.agca.ideals.Ideal.is_radical", false]], "is_rat() (in module sympy.polys.numberfields.utilities)": [[215, "sympy.polys.numberfields.utilities.is_rat", false]], "is_rational (sympy.polys.numberfields.modules.powerbasiselement property)": [[215, "sympy.polys.numberfields.modules.PowerBasisElement.is_rational", false]], "is_rational_function() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.is_rational_function", false]], "is_reduced() (in module sympy.polys.groebnertools)": [[213, "sympy.polys.groebnertools.is_reduced", false]], "is_right() (sympy.geometry.polygon.triangle method)": [[104, "sympy.geometry.polygon.Triangle.is_right", false]], "is_right_unbounded (sympy.sets.sets.interval property)": [[228, "sympy.sets.sets.Interval.is_right_unbounded", false]], "is_ring (sympy.polys.domains.domain.domain attribute)": [[211, "sympy.polys.domains.domain.Domain.is_Ring", false]], "is_same() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.is_same", false]], "is_scalar_multiple() (sympy.geometry.point.point method)": [[103, "sympy.geometry.point.Point.is_scalar_multiple", false]], "is_scalene() (sympy.geometry.polygon.triangle method)": [[104, "sympy.geometry.polygon.Triangle.is_scalene", false]], "is_sequence() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.is_sequence", false]], "is_similar() (sympy.geometry.entity.geometryentity method)": [[99, "sympy.geometry.entity.GeometryEntity.is_similar", false]], "is_similar() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.is_similar", false]], "is_similar() (sympy.geometry.polygon.triangle method)": [[104, "sympy.geometry.polygon.Triangle.is_similar", false]], "is_simple() (sympy.functions.special.delta_functions.diracdelta method)": [[96, "sympy.functions.special.delta_functions.DiracDelta.is_simple", false]], "is_singleton (sympy.combinatorics.permutations.permutation property)": [[80, "sympy.combinatorics.permutations.Permutation.is_Singleton", false]], "is_singular() (sympy.core.function.function class method)": [[88, "sympy.core.function.Function.is_singular", false]], "is_singular() (sympy.holonomic.holonomic.differentialoperator method)": [[111, "sympy.holonomic.holonomic.DifferentialOperator.is_singular", false]], "is_solenoidal() (in module sympy.physics.vector.fieldfunctions)": [[200, "sympy.physics.vector.fieldfunctions.is_solenoidal", false]], "is_solenoidal() (in module sympy.vector)": [[267, "sympy.vector.is_solenoidal", false]], "is_solvable (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_solvable", false]], "is_sqf (sympy.polys.polyclasses.dmp property)": [[211, "sympy.polys.polyclasses.DMP.is_sqf", false]], "is_sqf (sympy.polys.polytools.poly property)": [[216, "sympy.polys.polytools.Poly.is_sqf", false]], "is_square (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_square", false]], "is_square (sympy.polys.matrices.domainmatrix.domainmatrix property)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.is_square", false]], "is_square() (in module sympy.ntheory.primetest)": [[128, "sympy.ntheory.primetest.is_square", false]], "is_square() (sympy.polys.domains.complexfield method)": [[211, "sympy.polys.domains.ComplexField.is_square", false]], "is_square() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.is_square", false]], "is_square() (sympy.polys.domains.finitefield method)": [[211, "sympy.polys.domains.FiniteField.is_square", false]], "is_square() (sympy.polys.domains.integerring method)": [[211, "sympy.polys.domains.IntegerRing.is_square", false]], "is_square() (sympy.polys.domains.rationalfield method)": [[211, "sympy.polys.domains.RationalField.is_square", false]], "is_square() (sympy.polys.domains.realfield method)": [[211, "sympy.polys.domains.RealField.is_square", false]], "is_stable() (sympy.physics.control.lti.transferfunction method)": [[143, "sympy.physics.control.lti.TransferFunction.is_stable", false]], "is_strictly_decreasing() (in module sympy.calculus.singularities)": [[67, "sympy.calculus.singularities.is_strictly_decreasing", false]], "is_strictly_increasing() (in module sympy.calculus.singularities)": [[67, "sympy.calculus.singularities.is_strictly_increasing", false]], "is_strictly_proper (sympy.physics.control.lti.parallel property)": [[143, "sympy.physics.control.lti.Parallel.is_strictly_proper", false]], "is_strictly_proper (sympy.physics.control.lti.series property)": [[143, "sympy.physics.control.lti.Series.is_strictly_proper", false]], "is_strictly_proper (sympy.physics.control.lti.transferfunction property)": [[143, "sympy.physics.control.lti.TransferFunction.is_strictly_proper", false]], "is_strong_lucas_prp() (in module sympy.ntheory.primetest)": [[128, "sympy.ntheory.primetest.is_strong_lucas_prp", false]], "is_strongly_diagonally_dominant (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_strongly_diagonally_dominant", false]], "is_subdiagram() (sympy.categories.diagram method)": [[68, "sympy.categories.Diagram.is_subdiagram", false]], "is_subgroup() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_subgroup", false]], "is_submodule() (sympy.polys.agca.modules.freemodule method)": [[207, "sympy.polys.agca.modules.FreeModule.is_submodule", false]], "is_submodule() (sympy.polys.agca.modules.module method)": [[207, "sympy.polys.agca.modules.Module.is_submodule", false]], "is_submodule() (sympy.polys.agca.modules.quotientmodule method)": [[207, "sympy.polys.agca.modules.QuotientModule.is_submodule", false]], "is_submodule() (sympy.polys.agca.modules.submodule method)": [[207, "sympy.polys.agca.modules.SubModule.is_submodule", false]], "is_subset() (sympy.sets.sets.set method)": [[228, "sympy.sets.sets.Set.is_subset", false]], "is_superset() (sympy.sets.sets.set method)": [[228, "sympy.sets.sets.Set.is_superset", false]], "is_surjective() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[207, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.is_surjective", false]], "is_symbolic() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_symbolic", false]], "is_symmetric (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_symmetric", false]], "is_symmetric() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_symmetric", false]], "is_tangent() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.is_tangent", false]], "is_transitive() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_transitive", false]], "is_trivial (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_trivial", false]], "is_unit() (sympy.polys.domains.field.field method)": [[211, "sympy.polys.domains.field.Field.is_unit", false]], "is_unit() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.is_unit", false]], "is_univariate (sympy.polys.polytools.poly property)": [[216, "sympy.polys.polytools.Poly.is_univariate", false]], "is_upper (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_upper", false]], "is_upper (sympy.polys.matrices.domainmatrix.domainmatrix property)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.is_upper", false]], "is_upper() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.is_upper", false]], "is_upper() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.is_upper", false]], "is_upper() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.is_upper", false]], "is_upper_hessenberg (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_upper_hessenberg", false]], "is_weakly_diagonally_dominant (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_weakly_diagonally_dominant", false]], "is_whole_ring() (sympy.polys.agca.ideals.ideal method)": [[207, "sympy.polys.agca.ideals.Ideal.is_whole_ring", false]], "is_zero (sympy.geometry.point.point property)": [[103, "sympy.geometry.point.Point.is_zero", false]], "is_zero (sympy.polys.polyclasses.anp property)": [[211, "sympy.polys.polyclasses.ANP.is_zero", false]], "is_zero (sympy.polys.polyclasses.dmf property)": [[211, "sympy.polys.polyclasses.DMF.is_zero", false]], "is_zero (sympy.polys.polyclasses.dmp property)": [[211, "sympy.polys.polyclasses.DMP.is_zero", false]], "is_zero (sympy.polys.polytools.poly property)": [[216, "sympy.polys.polytools.Poly.is_zero", false]], "is_zero() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[207, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.is_zero", false]], "is_zero() (sympy.polys.agca.ideals.ideal method)": [[207, "sympy.polys.agca.ideals.Ideal.is_zero", false]], "is_zero() (sympy.polys.agca.modules.freemodule method)": [[207, "sympy.polys.agca.modules.FreeModule.is_zero", false]], "is_zero() (sympy.polys.agca.modules.module method)": [[207, "sympy.polys.agca.modules.Module.is_zero", false]], "is_zero() (sympy.polys.agca.modules.quotientmodule method)": [[207, "sympy.polys.agca.modules.QuotientModule.is_zero", false]], "is_zero() (sympy.polys.agca.modules.submodule method)": [[207, "sympy.polys.agca.modules.SubModule.is_zero", false]], "is_zero() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.is_zero", false]], "is_zero_dimensional (sympy.polys.polytools.groebnerbasis property)": [[216, "sympy.polys.polytools.GroebnerBasis.is_zero_dimensional", false]], "is_zero_dimensional() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.is_zero_dimensional", false]], "is_zero_matrix (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_zero_matrix", false]], "is_zero_matrix() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.is_zero_matrix", false]], "is_zero_matrix() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.is_zero_matrix", false]], "is_zero_matrix() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.is_zero_matrix", false]], "is_zero_quaternion() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.is_zero_quaternion", false]], "isdisjoint() (sympy.sets.sets.set method)": [[228, "sympy.sets.sets.Set.isdisjoint", false]], "isign (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.isign", false]], "isolate() (in module sympy.polys.numberfields.utilities)": [[215, "sympy.polys.numberfields.utilities.isolate", false]], "isomorphismfailed (class in sympy.polys.polyerrors)": [[213, "sympy.polys.polyerrors.IsomorphismFailed", false]], "isprime() (in module sympy.ntheory.primetest)": [[128, "sympy.ntheory.primetest.isprime", false]], "isqrt() (in module sympy.core.intfunc)": [[88, "sympy.core.intfunc.isqrt", false]], "issubset() (sympy.sets.sets.set method)": [[228, "sympy.sets.sets.Set.issubset", false]], "issuperset() (sympy.sets.sets.set method)": [[228, "sympy.sets.sets.Set.issuperset", false]], "istruepredicate (class in sympy.assumptions.predicates.common)": [[65, "sympy.assumptions.predicates.common.IsTruePredicate", false]], "isympy": [[15, "term-isympy", true]], "ite (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.ITE", false]], "items() (sympy.core.containers.dict method)": [[88, "sympy.core.containers.Dict.items", false]], "iter_items() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.iter_items", false]], "iter_items() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.iter_items", false]], "iter_items() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.iter_items", false]], "iter_items() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.iter_items", false]], "iter_items() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.iter_items", false]], "iter_q_annihilators() (sympy.physics.secondquant.no method)": [[190, "sympy.physics.secondquant.NO.iter_q_annihilators", false]], "iter_q_creators() (sympy.physics.secondquant.no method)": [[190, "sympy.physics.secondquant.NO.iter_q_creators", false]], "iter_values() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.iter_values", false]], "iter_values() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.iter_values", false]], "iter_values() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.iter_values", false]], "iter_values() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.iter_values", false]], "iter_values() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.iter_values", false]], "iterable() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.iterable", false]], "iterate_binary() (sympy.combinatorics.subsets.subset method)": [[83, "sympy.combinatorics.subsets.Subset.iterate_binary", false]], "iterate_graycode() (sympy.combinatorics.subsets.subset method)": [[83, "sympy.combinatorics.subsets.Subset.iterate_graycode", false]], "itercoeffs() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.itercoeffs", false]], "itermonomials() (in module sympy.polys.monomials)": [[216, "sympy.polys.monomials.itermonomials", false]], "itermonoms() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.itermonoms", false]], "iterterms() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.iterterms", false]], "j2op (class in sympy.physics.quantum.spin)": [[187, "sympy.physics.quantum.spin.J2Op", false]], "jacobi (class in sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.jacobi", false]], "jacobi_normalized() (in module sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.jacobi_normalized", false]], "jacobi_poly() (in module sympy.polys.orthopolys)": [[216, "sympy.polys.orthopolys.jacobi_poly", false]], "jacobi_symbol (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.jacobi_symbol", false]], "jacobi_symbol() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.jacobi_symbol", false]], "jacobian() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.jacobian", false]], "jacobian() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.jacobian", false]], "jacobian_determinant() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.jacobian_determinant", false]], "jacobian_matrix() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.jacobian_matrix", false]], "javascriptcodeprinter (class in sympy.printing.jscode)": [[220, "sympy.printing.jscode.JavascriptCodePrinter", false]], "jn (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.jn", false]], "jn_zeros() (in module sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.jn_zeros", false]], "join() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.join", false]], "joint (class in sympy.physics.mechanics.joint)": [[151, "sympy.physics.mechanics.joint.Joint", false]], "joint_axis (sympy.physics.mechanics.joint.cylindricaljoint property)": [[151, "sympy.physics.mechanics.joint.CylindricalJoint.joint_axis", false]], "joint_axis (sympy.physics.mechanics.joint.pinjoint property)": [[151, "sympy.physics.mechanics.joint.PinJoint.joint_axis", false]], "joint_axis (sympy.physics.mechanics.joint.prismaticjoint property)": [[151, "sympy.physics.mechanics.joint.PrismaticJoint.joint_axis", false]], "jointrv() (in module sympy.stats)": [[240, "sympy.stats.JointRV", false]], "joints (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.joints", false]], "jointsmethod (class in sympy.physics.mechanics.jointsmethod)": [[148, "sympy.physics.mechanics.jointsmethod.JointsMethod", false]], "jones_2_stokes() (in module sympy.physics.optics.polarization)": [[162, "sympy.physics.optics.polarization.jones_2_stokes", false]], "jones_vector() (in module sympy.physics.optics.polarization)": [[162, "sympy.physics.optics.polarization.jones_vector", false]], "jordan_block() (sympy.matrices.matrixbase.matrixbase class method)": [[124, "sympy.matrices.matrixbase.MatrixBase.jordan_block", false]], "jordan_cell() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.jordan_cell", false]], "jordan_form() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.jordan_form", false]], "josephus() (sympy.combinatorics.permutations.permutation class method)": [[80, "sympy.combinatorics.permutations.Permutation.josephus", false]], "jscode() (in module sympy.printing.jscode)": [[220, "sympy.printing.jscode.jscode", false]], "julia_code() (in module sympy.printing.julia)": [[220, "sympy.printing.julia.julia_code", false]], "juliacodegen (class in sympy.utilities.codegen)": [[253, "sympy.utilities.codegen.JuliaCodeGen", false]], "juliacodeprinter (class in sympy.printing.julia)": [[220, "sympy.printing.julia.JuliaCodePrinter", false]], "jxbra (class in sympy.physics.quantum.spin)": [[187, "sympy.physics.quantum.spin.JxBra", false]], "jxbracoupled (class in sympy.physics.quantum.spin)": [[187, "sympy.physics.quantum.spin.JxBraCoupled", false]], "jxket (class in sympy.physics.quantum.spin)": [[187, "sympy.physics.quantum.spin.JxKet", false]], "jxketcoupled (class in sympy.physics.quantum.spin)": [[187, "sympy.physics.quantum.spin.JxKetCoupled", false]], "jybra (class in sympy.physics.quantum.spin)": [[187, "sympy.physics.quantum.spin.JyBra", false]], "jybracoupled (class in sympy.physics.quantum.spin)": [[187, "sympy.physics.quantum.spin.JyBraCoupled", false]], "jyket (class in sympy.physics.quantum.spin)": [[187, "sympy.physics.quantum.spin.JyKet", false]], "jyketcoupled (class in sympy.physics.quantum.spin)": [[187, "sympy.physics.quantum.spin.JyKetCoupled", false]], "jzbra (class in sympy.physics.quantum.spin)": [[187, "sympy.physics.quantum.spin.JzBra", false]], "jzbracoupled (class in sympy.physics.quantum.spin)": [[187, "sympy.physics.quantum.spin.JzBraCoupled", false]], "jzket (class in sympy.physics.quantum.spin)": [[187, "sympy.physics.quantum.spin.JzKet", false]], "jzketcoupled (class in sympy.physics.quantum.spin)": [[187, "sympy.physics.quantum.spin.JzKetCoupled", false]], "jzop (class in sympy.physics.quantum.spin)": [[187, "sympy.physics.quantum.spin.JzOp", false]], "kahane_simplify() (in module sympy.physics.hep.gamma_matrices)": [[144, "sympy.physics.hep.gamma_matrices.kahane_simplify", false]], "kanes_equations() (sympy.physics.mechanics.kane.kanesmethod method)": [[152, "sympy.physics.mechanics.kane.KanesMethod.kanes_equations", false]], "kanesmethod (class in sympy.physics.mechanics.kane)": [[152, "sympy.physics.mechanics.kane.KanesMethod", false]], "kbins() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.kbins", false]], "kdes (sympy.physics.mechanics.joint.joint property)": [[151, "sympy.physics.mechanics.joint.Joint.kdes", false]], "kdes (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[148, "sympy.physics.mechanics.jointsmethod.JointsMethod.kdes", false]], "kdes (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.kdes", false]], "kernel() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[207, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.kernel", false]], "kernel() (sympy.polys.numberfields.modules.modulehomomorphism method)": [[215, "sympy.polys.numberfields.modules.ModuleHomomorphism.kernel", false]], "ket (class in sympy.physics.quantum.state)": [[188, "sympy.physics.quantum.state.Ket", false]], "ket (sympy.physics.quantum.operator.outerproduct property)": [[179, "sympy.physics.quantum.operator.OuterProduct.ket", false]], "ket (sympy.physics.secondquant.innerproduct property)": [[190, "sympy.physics.secondquant.InnerProduct.ket", false]], "ketbase (class in sympy.physics.quantum.state)": [[188, "sympy.physics.quantum.state.KetBase", false]], "key2bounds() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.key2bounds", false]], "key2ij() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.key2ij", false]], "keys() (sympy.core.containers.dict method)": [[88, "sympy.core.containers.Dict.keys", false]], "kid_rsa_private_key() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.kid_rsa_private_key", false]], "kid_rsa_public_key() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.kid_rsa_public_key", false]], "killable_index (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[96, "sympy.functions.special.tensor_functions.KroneckerDelta.killable_index", false]], "killable_index (sympy.physics.secondquant.kroneckerdelta property)": [[190, "sympy.physics.secondquant.KroneckerDelta.killable_index", false]], "kin_explicit_rhs (sympy.physics.mechanics.system.symbolicsystem property)": [[157, "sympy.physics.mechanics.system.SymbolicSystem.kin_explicit_rhs", false]], "kind": [[15, "term-Kind", true]], "kind (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.kind", false]], "kind (class in sympy.core.kind)": [[88, "sympy.core.kind.Kind", false]], "kind (sympy.core.containers.tuple property)": [[88, "sympy.core.containers.Tuple.kind", false]], "kind (sympy.sets.sets.set property)": [[228, "sympy.sets.sets.Set.kind", false]], "kindiffdict() (sympy.physics.mechanics.kane.kanesmethod method)": [[152, "sympy.physics.mechanics.kane.KanesMethod.kindiffdict", false]], "kinematic_equations() (in module sympy.physics.vector.functions)": [[203, "sympy.physics.vector.functions.kinematic_equations", false]], "kinetic_energy() (in module sympy.physics.mechanics.functions)": [[154, "sympy.physics.mechanics.functions.kinetic_energy", false]], "kinetic_energy() (sympy.physics.mechanics.body.body method)": [[148, "sympy.physics.mechanics.body.Body.kinetic_energy", false]], "kinetic_energy() (sympy.physics.mechanics.particle.particle method)": [[154, "sympy.physics.mechanics.particle.Particle.kinetic_energy", false]], "kinetic_energy() (sympy.physics.mechanics.rigidbody.rigidbody method)": [[154, "sympy.physics.mechanics.rigidbody.RigidBody.kinetic_energy", false]], "known_fcns_src1 (in module sympy.printing.julia)": [[220, "sympy.printing.julia.known_fcns_src1", false]], "known_fcns_src1 (in module sympy.printing.octave)": [[220, "sympy.printing.octave.known_fcns_src1", false]], "known_fcns_src2 (in module sympy.printing.julia)": [[220, "sympy.printing.julia.known_fcns_src2", false]], "known_fcns_src2 (in module sympy.printing.octave)": [[220, "sympy.printing.octave.known_fcns_src2", false]], "known_functions (in module sympy.printing.jscode)": [[220, "sympy.printing.jscode.known_functions", false]], "known_functions (in module sympy.printing.mathematica)": [[220, "sympy.printing.mathematica.known_functions", false]], "known_functions (in module sympy.printing.rcode)": [[220, "sympy.printing.rcode.known_functions", false]], "known_functions (in module sympy.printing.rust)": [[220, "sympy.printing.rust.known_functions", false]], "known_functions_c89 (in module sympy.printing.c)": [[220, "sympy.printing.c.known_functions_C89", false]], "known_functions_c99 (in module sympy.printing.c)": [[220, "sympy.printing.c.known_functions_C99", false]], "kronecker_symbol (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.kronecker_symbol", false]], "kroneckerdelta (class in sympy.functions.special.tensor_functions)": [[96, "sympy.functions.special.tensor_functions.KroneckerDelta", false]], "kroneckerdelta (class in sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.KroneckerDelta", false]], "kroneckersimp() (in module sympy.simplify.simplify)": [[232, "sympy.simplify.simplify.kroneckersimp", false]], "ksubsets() (sympy.combinatorics.subsets method)": [[83, "sympy.combinatorics.subsets.ksubsets", false]], "kumaraswamy() (in module sympy.stats)": [[240, "sympy.stats.Kumaraswamy", false]], "kurtosis() (in module sympy.stats)": [[240, "sympy.stats.kurtosis", false]], "kwargs() (sympy.codegen.ast.token method)": [[69, "sympy.codegen.ast.Token.kwargs", false]], "l1_norm() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.l1_norm", false]], "l1_norm() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.l1_norm", false]], "l2 (class in sympy.physics.quantum.hilbert)": [[176, "sympy.physics.quantum.hilbert.L2", false]], "l2_norm_squared() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.l2_norm_squared", false]], "l_m_opt (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.l_M_opt", false]], "l_t_slack (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.l_T_slack", false]], "label (class in sympy.codegen.cnodes)": [[69, "sympy.codegen.cnodes.Label", false]], "label (sympy.physics.quantum.state.timedepstate property)": [[188, "sympy.physics.quantum.state.TimeDepState.label", false]], "label (sympy.tensor.indexed.idx property)": [[245, "sympy.tensor.indexed.Idx.label", false]], "label (sympy.tensor.indexed.indexedbase property)": [[245, "sympy.tensor.indexed.IndexedBase.label", false]], "labeller() (in module sympy.physics.quantum.circuitplot)": [[170, "sympy.physics.quantum.circuitplot.labeller", false]], "lagrangesmethod (class in sympy.physics.mechanics.lagrange)": [[152, "sympy.physics.mechanics.lagrange.LagrangesMethod", false]], "lagrangian() (in module sympy.physics.mechanics.functions)": [[154, "sympy.physics.mechanics.functions.Lagrangian", false]], "laguerre (class in sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.laguerre", false]], "laguerre_poly() (in module sympy.polys.orthopolys)": [[216, "sympy.polys.orthopolys.laguerre_poly", false]], "lambda (class in sympy.core.function)": [[88, "sympy.core.function.Lambda", false]], "lambda_notation() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.lambda_notation", false]], "lambdaprinter (class in sympy.printing.lambdarepr)": [[220, "sympy.printing.lambdarepr.LambdaPrinter", false]], "lambdarepr() (in module sympy.printing.lambdarepr)": [[220, "sympy.printing.lambdarepr.lambdarepr", false]], "lambdastr() (in module sympy.utilities.lambdify)": [[259, "sympy.utilities.lambdify.lambdastr", false]], "lambdify()": [[15, "term-lambdify", true]], "lambdify() (in module sympy.utilities.lambdify)": [[259, "sympy.utilities.lambdify.lambdify", false]], "lambertw (class in sympy.functions.elementary.exponential)": [[94, "sympy.functions.elementary.exponential.LambertW", false]], "lamda": [[15, "term-lamda", true]], "laplace() (in module sympy.stats)": [[240, "sympy.stats.Laplace", false]], "laplace_correspondence() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.laplace_correspondence", false]], "laplace_initial_conds() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.laplace_initial_conds", false]], "laplace_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.laplace_transform", false]], "laplacetransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.LaplaceTransform", false]], "larklatexparser (class in sympy.parsing.latex.lark)": [[130, "sympy.parsing.latex.lark.LarkLaTeXParser", false]], "latex() (in module sympy.printing.latex)": [[220, "sympy.printing.latex.latex", false]], "latexparsingerror (class in sympy.parsing.latex)": [[130, "sympy.parsing.latex.LaTeXParsingError", false]], "latexprinter (class in sympy.printing.latex)": [[220, "sympy.printing.latex.LatexPrinter", false]], "lbound() (in module sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.lbound", false]], "lc() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.LC", false]], "lc() (sympy.polys.polyclasses.anp method)": [[211, "sympy.polys.polyclasses.ANP.LC", false]], "lc() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.LC", false]], "lc() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.LC", false]], "lcim() (in module sympy.calculus.util)": [[67, "sympy.calculus.util.lcim", false]], "lcm() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.lcm", false]], "lcm() (sympy.core.numbers.number method)": [[88, "sympy.core.numbers.Number.lcm", false]], "lcm() (sympy.polys.domains.complexfield method)": [[211, "sympy.polys.domains.ComplexField.lcm", false]], "lcm() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.lcm", false]], "lcm() (sympy.polys.domains.field.field method)": [[211, "sympy.polys.domains.field.Field.lcm", false]], "lcm() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.lcm", false]], "lcm() (sympy.polys.domains.gmpyintegerring method)": [[211, "sympy.polys.domains.GMPYIntegerRing.lcm", false]], "lcm() (sympy.polys.domains.integerring method)": [[211, "sympy.polys.domains.IntegerRing.lcm", false]], "lcm() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.lcm", false]], "lcm() (sympy.polys.domains.realfield method)": [[211, "sympy.polys.domains.RealField.lcm", false]], "lcm() (sympy.polys.monomials.monomial method)": [[216, "sympy.polys.monomials.Monomial.lcm", false]], "lcm() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.lcm", false]], "lcm() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.lcm", false]], "lcm_list() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.lcm_list", false]], "ldescent() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.ldescent", false]], "ldldecomposition() (sympy.matrices.dense.densematrix method)": [[119, "sympy.matrices.dense.DenseMatrix.LDLdecomposition", false]], "ldldecomposition() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.LDLdecomposition", false]], "ldlsolve() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.LDLsolve", false]], "ldudecomposition() (sympy.matrices.expressions.blockmatrix.blockmatrix method)": [[120, "sympy.matrices.expressions.blockmatrix.BlockMatrix.LDUdecomposition", false]], "le (in module sympy.core.relational)": [[88, "sympy.core.relational.Le", false]], "leading_expv() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.leading_expv", false]], "leading_monom() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.leading_monom", false]], "leading_term() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.leading_term", false]], "leadterm() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.leadterm", false]], "least_rotation() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.least_rotation", false]], "left() (sympy.printing.pretty.stringpict.stringpict method)": [[220, "sympy.printing.pretty.stringpict.stringPict.left", false]], "left_eigenvects() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.left_eigenvects", false]], "left_open (sympy.sets.sets.interval property)": [[228, "sympy.sets.sets.Interval.left_open", false]], "left_support (sympy.physics.continuum_mechanics.cable.cable property)": [[137, "sympy.physics.continuum_mechanics.cable.Cable.left_support", false]], "leftslash() (sympy.printing.pretty.stringpict.stringpict method)": [[220, "sympy.printing.pretty.stringpict.stringPict.leftslash", false]], "legendre (class in sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.legendre", false]], "legendre_poly() (in module sympy.polys.orthopolys)": [[216, "sympy.polys.orthopolys.legendre_poly", false]], "legendre_symbol (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.legendre_symbol", false]], "legendre_symbol() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.legendre_symbol", false]], "length (sympy.geometry.curve.curve property)": [[97, "sympy.geometry.curve.Curve.length", false]], "length (sympy.geometry.line.linearentity property)": [[101, "sympy.geometry.line.LinearEntity.length", false]], "length (sympy.geometry.line.segment property)": [[101, "sympy.geometry.line.Segment.length", false]], "length (sympy.geometry.point.point property)": [[103, "sympy.geometry.point.Point.length", false]], "length (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.length", false]], "length (sympy.physics.continuum_mechanics.beam.beam property)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.length", false]], "length (sympy.physics.continuum_mechanics.cable.cable property)": [[137, "sympy.physics.continuum_mechanics.cable.Cable.length", false]], "length (sympy.physics.mechanics.pathway.linearpathway property)": [[155, "sympy.physics.mechanics.pathway.LinearPathway.length", false]], "length (sympy.physics.mechanics.pathway.obstaclesetpathway property)": [[155, "sympy.physics.mechanics.pathway.ObstacleSetPathway.length", false]], "length (sympy.physics.mechanics.pathway.pathwaybase property)": [[155, "sympy.physics.mechanics.pathway.PathwayBase.length", false]], "length (sympy.physics.mechanics.pathway.wrappingpathway property)": [[155, "sympy.physics.mechanics.pathway.WrappingPathway.length", false]], "length (sympy.series.sequences.seqbase property)": [[226, "sympy.series.sequences.SeqBase.length", false]], "length() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.length", false]], "length() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.length", false]], "lens_formula() (in module sympy.physics.optics.utils)": [[163, "sympy.physics.optics.utils.lens_formula", false]], "lens_makers_formula() (in module sympy.physics.optics.utils)": [[163, "sympy.physics.optics.utils.lens_makers_formula", false]], "lerchphi (class in sympy.functions.special.zeta_functions)": [[96, "sympy.functions.special.zeta_functions.lerchphi", false]], "lessthan (class in sympy.core.relational)": [[88, "sympy.core.relational.LessThan", false]], "levicivita (class in sympy.functions.special.tensor_functions)": [[96, "sympy.functions.special.tensor_functions.LeviCivita", false]], "levy() (in module sympy.stats)": [[240, "sympy.stats.Levy", false]], "lexorder (class in sympy.polys.orderings)": [[216, "sympy.polys.orderings.LexOrder", false]], "lfsr_autocorrelation() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.lfsr_autocorrelation", false]], "lfsr_connection_polynomial() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.lfsr_connection_polynomial", false]], "lfsr_sequence() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.lfsr_sequence", false]], "lhs (sympy.core.relational.relational property)": [[88, "sympy.core.relational.Relational.lhs", false]], "li (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.Li", false], [96, "sympy.functions.special.error_functions.li", false]], "lie_algebra() (sympy.liealgebras.type_a.typea method)": [[117, "sympy.liealgebras.type_a.TypeA.lie_algebra", false]], "lie_algebra() (sympy.liealgebras.type_b.typeb method)": [[117, "sympy.liealgebras.type_b.TypeB.lie_algebra", false]], "lie_algebra() (sympy.liealgebras.type_c.typec method)": [[117, "sympy.liealgebras.type_c.TypeC.lie_algebra", false]], "lie_algebra() (sympy.liealgebras.type_d.typed method)": [[117, "sympy.liealgebras.type_d.TypeD.lie_algebra", false]], "lie_heuristic_abaco1_product() (in module sympy.solvers.ode.lie_group)": [[236, "sympy.solvers.ode.lie_group.lie_heuristic_abaco1_product", false]], "lie_heuristic_abaco1_simple() (in module sympy.solvers.ode.lie_group)": [[236, "sympy.solvers.ode.lie_group.lie_heuristic_abaco1_simple", false]], "lie_heuristic_abaco2_similar() (in module sympy.solvers.ode.lie_group)": [[236, "sympy.solvers.ode.lie_group.lie_heuristic_abaco2_similar", false]], "lie_heuristic_abaco2_unique_general() (in module sympy.solvers.ode.lie_group)": [[236, "sympy.solvers.ode.lie_group.lie_heuristic_abaco2_unique_general", false]], "lie_heuristic_abaco2_unique_unknown() (in module sympy.solvers.ode.lie_group)": [[236, "sympy.solvers.ode.lie_group.lie_heuristic_abaco2_unique_unknown", false]], "lie_heuristic_bivariate() (in module sympy.solvers.ode.lie_group)": [[236, "sympy.solvers.ode.lie_group.lie_heuristic_bivariate", false]], "lie_heuristic_chi() (in module sympy.solvers.ode.lie_group)": [[236, "sympy.solvers.ode.lie_group.lie_heuristic_chi", false]], "lie_heuristic_function_sum() (in module sympy.solvers.ode.lie_group)": [[236, "sympy.solvers.ode.lie_group.lie_heuristic_function_sum", false]], "lie_heuristic_linear() (in module sympy.solvers.ode.lie_group)": [[236, "sympy.solvers.ode.lie_group.lie_heuristic_linear", false]], "liederivative (class in sympy.diffgeom)": [[90, "sympy.diffgeom.LieDerivative", false]], "liegroup (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.LieGroup", false]], "lift() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.lift", false]], "lift() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.lift", false]], "limit (class in sympy.series.limits)": [[227, "sympy.series.limits.Limit", false]], "limit() (in module sympy.series.limits)": [[227, "sympy.series.limits.limit", false]], "limit() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.limit", false]], "limit() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.limit", false]], "limit_denominator() (sympy.core.numbers.rational method)": [[88, "sympy.core.numbers.Rational.limit_denominator", false]], "limit_seq() (in module sympy.series.limitseq)": [[225, "sympy.series.limitseq.limit_seq", false]], "limitinf() (in module sympy.series.gruntz)": [[227, "sympy.series.gruntz.limitinf", false]], "limiting_distribution (sympy.stats.discretemarkovchain property)": [[240, "sympy.stats.DiscreteMarkovChain.limiting_distribution", false]], "limits (sympy.concrete.expr_with_limits.exprwithlimits property)": [[115, "sympy.concrete.expr_with_limits.ExprWithLimits.limits", false]], "limits (sympy.geometry.curve.curve property)": [[97, "sympy.geometry.curve.Curve.limits", false]], "limits (sympy.physics.quantum.state.wavefunction property)": [[188, "sympy.physics.quantum.state.Wavefunction.limits", false]], "line (class in sympy.geometry.line)": [[101, "sympy.geometry.line.Line", false]], "line2d (class in sympy.geometry.line)": [[101, "sympy.geometry.line.Line2D", false]], "line2dbaseseries (class in sympy.plotting.series)": [[206, "sympy.plotting.series.Line2DBaseSeries", false]], "line3d (class in sympy.geometry.line)": [[101, "sympy.geometry.line.Line3D", false]], "line3dbaseseries (class in sympy.plotting.series)": [[206, "sympy.plotting.series.Line3DBaseSeries", false]], "line_integrate() (in module sympy.integrals.integrals)": [[115, "sympy.integrals.integrals.line_integrate", false]], "linear (class in sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.Linear", false]], "linear_eq_to_matrix() (in module sympy.solvers.solveset)": [[239, "sympy.solvers.solveset.linear_eq_to_matrix", false]], "linear_momentum() (in module sympy.physics.mechanics.functions)": [[154, "sympy.physics.mechanics.functions.linear_momentum", false]], "linear_momentum() (sympy.physics.mechanics.body.body method)": [[148, "sympy.physics.mechanics.body.Body.linear_momentum", false]], "linear_momentum() (sympy.physics.mechanics.particle.particle method)": [[154, "sympy.physics.mechanics.particle.Particle.linear_momentum", false]], "linear_momentum() (sympy.physics.mechanics.rigidbody.rigidbody method)": [[154, "sympy.physics.mechanics.rigidbody.RigidBody.linear_momentum", false]], "linear_ode_to_matrix() (in module sympy.solvers.ode.systems)": [[236, "sympy.solvers.ode.systems.linear_ode_to_matrix", false]], "linear_polarizer() (in module sympy.physics.optics.polarization)": [[162, "sympy.physics.optics.polarization.linear_polarizer", false]], "linearcoefficients (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.LinearCoefficients", false]], "lineardamper (class in sympy.physics.mechanics.actuator)": [[147, "sympy.physics.mechanics.actuator.LinearDamper", false]], "linearentity (class in sympy.geometry.line)": [[101, "sympy.geometry.line.LinearEntity", false]], "linearentity2d (class in sympy.geometry.line)": [[101, "sympy.geometry.line.LinearEntity2D", false]], "linearentity3d (class in sympy.geometry.line)": [[101, "sympy.geometry.line.LinearEntity3D", false]], "linearize() (sympy.physics.mechanics.kane.kanesmethod method)": [[152, "sympy.physics.mechanics.kane.KanesMethod.linearize", false]], "linearize() (sympy.physics.mechanics.lagrange.lagrangesmethod method)": [[152, "sympy.physics.mechanics.lagrange.LagrangesMethod.linearize", false]], "linearize() (sympy.physics.mechanics.linearize.linearizer method)": [[153, "sympy.physics.mechanics.linearize.Linearizer.linearize", false]], "linearizer (class in sympy.physics.mechanics.linearize)": [[153, "sympy.physics.mechanics.linearize.Linearizer", false]], "linearpathway (class in sympy.physics.mechanics.pathway)": [[155, "sympy.physics.mechanics.pathway.LinearPathway", false]], "linearspring (class in sympy.physics.mechanics.actuator)": [[147, "sympy.physics.mechanics.actuator.LinearSpring", false]], "lineover1drangeseries (class in sympy.plotting.series)": [[206, "sympy.plotting.series.LineOver1DRangeSeries", false]], "linodesolve() (in module sympy.solvers.ode.systems)": [[236, "sympy.solvers.ode.systems.linodesolve", false]], "linodesolve_type() (in module sympy.solvers.ode.systems)": [[236, "sympy.solvers.ode.systems.linodesolve_type", false]], "linprog() (in module sympy.solvers.simplex)": [[238, "sympy.solvers.simplex.linprog", false]], "linsolve() (in module sympy.solvers.solveset)": [[239, "sympy.solvers.solveset.linsolve", false]], "liouville (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.Liouville", false]], "list() (sympy.combinatorics.permutations.cycle method)": [[80, "sympy.combinatorics.permutations.Cycle.list", false]], "list() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.list", false]], "list2numpy() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.list2numpy", false]], "list_can_dims (sympy.physics.units.dimensions.dimensionsystem property)": [[192, "sympy.physics.units.dimensions.DimensionSystem.list_can_dims", false]], "list_visitor() (in module sympy.utilities.enumerative)": [[255, "sympy.utilities.enumerative.list_visitor", false]], "listcoeffs() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.listcoeffs", false]], "listmonoms() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.listmonoms", false]], "listterms() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.listterms", false]], "literal_dp (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.literal_dp", false]], "literal_sp (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.literal_sp", false]], "lll() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.lll", false]], "lll() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.lll", false]], "lll() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.lll", false]], "lll_transform() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.lll_transform", false]], "lll_transform() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.lll_transform", false]], "lll_transform() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.lll_transform", false]], "lm() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.LM", false]], "lm() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.LM", false]], "load (sympy.physics.continuum_mechanics.beam.beam property)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.load", false]], "load_vector (sympy.physics.continuum_mechanics.beam.beam3d property)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.load_vector", false]], "loads (sympy.physics.continuum_mechanics.cable.cable property)": [[137, "sympy.physics.continuum_mechanics.cable.Cable.loads", false]], "loads (sympy.physics.continuum_mechanics.truss.truss property)": [[139, "sympy.physics.continuum_mechanics.truss.Truss.loads", false]], "loads (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[148, "sympy.physics.mechanics.jointsmethod.JointsMethod.loads", false]], "loads (sympy.physics.mechanics.system.symbolicsystem property)": [[157, "sympy.physics.mechanics.system.SymbolicSystem.loads", false]], "loads (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.loads", false]], "loads_position (sympy.physics.continuum_mechanics.cable.cable property)": [[137, "sympy.physics.continuum_mechanics.cable.Cable.loads_position", false]], "locate_new() (sympy.vector.coordsysrect.coordsys3d method)": [[264, "sympy.vector.coordsysrect.CoordSys3D.locate_new", false]], "locatenew() (sympy.physics.vector.point.point method)": [[203, "sympy.physics.vector.point.Point.locatenew", false]], "log (class in sympy.functions.elementary.exponential)": [[94, "sympy.functions.elementary.exponential.log", false]], "log() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.log", false]], "log() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.log", false]], "log() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.log", false]], "log() (sympy.polys.domains.integerring method)": [[211, "sympy.polys.domains.IntegerRing.log", false]], "log10 (class in sympy.codegen.cfunctions)": [[69, "sympy.codegen.cfunctions.log10", false]], "log1p (class in sympy.codegen.cfunctions)": [[69, "sympy.codegen.cfunctions.log1p", false]], "log2 (class in sympy.codegen.cfunctions)": [[69, "sympy.codegen.cfunctions.log2", false]], "logarithmic() (in module sympy.stats)": [[240, "sympy.stats.Logarithmic", false]], "logcombine() (in module sympy.simplify.simplify)": [[232, "sympy.simplify.simplify.logcombine", false]], "loggamma (class in sympy.functions.special.gamma_functions)": [[96, "sympy.functions.special.gamma_functions.loggamma", false]], "logistic() (in module sympy.stats)": [[240, "sympy.stats.Logistic", false]], "loglogistic() (in module sympy.stats)": [[240, "sympy.stats.LogLogistic", false]], "lognormal() (in module sympy.stats)": [[240, "sympy.stats.LogNormal", false]], "lomax() (in module sympy.stats)": [[240, "sympy.stats.Lomax", false]], "lopen() (sympy.sets.sets.interval class method)": [[228, "sympy.sets.sets.Interval.Lopen", false]], "lower (sympy.physics.secondquant.antisymmetrictensor property)": [[190, "sympy.physics.secondquant.AntiSymmetricTensor.lower", false]], "lower (sympy.tensor.indexed.idx property)": [[245, "sympy.tensor.indexed.Idx.lower", false]], "lower_central_series() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.lower_central_series", false]], "lower_triangular() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.lower_triangular", false]], "lower_triangular_solve() (sympy.matrices.dense.densematrix method)": [[119, "sympy.matrices.dense.DenseMatrix.lower_triangular_solve", false]], "lower_triangular_solve() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.lower_triangular_solve", false]], "lowergamma (class in sympy.functions.special.gamma_functions)": [[96, "sympy.functions.special.gamma_functions.lowergamma", false]], "lowertriangularpredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.LowerTriangularPredicate", false]], "lpmax() (in module sympy.solvers.simplex)": [[238, "sympy.solvers.simplex.lpmax", false]], "lpmin() (in module sympy.solvers.simplex)": [[238, "sympy.solvers.simplex.lpmin", false]], "lseries() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.lseries", false]], "lt (in module sympy.core.relational)": [[88, "sympy.core.relational.Lt", false]], "lt() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.LT", false]], "lt() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.LT", false]], "ltrim() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.ltrim", false]], "lu() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.lu", false]], "lu() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.lu", false]], "lu() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.lu", false]], "lu() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.lu", false]], "lu_solve() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.lu_solve", false]], "lu_solve() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.lu_solve", false]], "lu_solve() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.lu_solve", false]], "lu_solve() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.lu_solve", false]], "lucas (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.lucas", false]], "ludecomposition() (sympy.matrices.expressions.blockmatrix.blockmatrix method)": [[120, "sympy.matrices.expressions.blockmatrix.BlockMatrix.LUdecomposition", false]], "ludecomposition() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.LUdecomposition", false]], "ludecomposition_simple() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.LUdecomposition_Simple", false]], "ludecompositionff() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.LUdecompositionFF", false]], "lusolve() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.LUsolve", false]], "m (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.M", false]], "m (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.M", false]], "m (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[131, "sympy.physics.biomechanics.activation.ZerothOrderActivation.M", false]], "m (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.M", false]], "m20() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.M20", false]], "magnitude() (sympy.physics.vector.vector.vector method)": [[199, "sympy.physics.vector.vector.Vector.magnitude", false]], "magnitude() (sympy.vector.vector.vector method)": [[264, "sympy.vector.vector.Vector.magnitude", false]], "major (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.major", false]], "make_mod_elt() (in module sympy.polys.numberfields.modules)": [[215, "sympy.polys.numberfields.modules.make_mod_elt", false]], "make_monic_over_integers_by_scaling_roots() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.make_monic_over_integers_by_scaling_roots", false]], "make_perm() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.make_perm", false]], "make_routine() (in module sympy.utilities.codegen)": [[253, "sympy.utilities.codegen.make_routine", false]], "manifold (class in sympy.diffgeom)": [[90, "sympy.diffgeom.Manifold", false]], "manualintegrate() (in module sympy.integrals.manualintegrate)": [[115, "sympy.integrals.manualintegrate.manualintegrate", false]], "map() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.map", false]], "maple_code() (in module sympy.printing.maple)": [[220, "sympy.printing.maple.maple_code", false]], "maplecodeprinter (class in sympy.printing.maple)": [[220, "sympy.printing.maple.MapleCodePrinter", false]], "marcumq (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.marcumq", false]], "marginal_distribution() (in module sympy.stats)": [[240, "sympy.stats.marginal_distribution", false]], "markers (sympy.plotting.plot.plot property)": [[206, "sympy.plotting.plot.Plot.markers", false]], "mass (sympy.physics.mechanics.body.body property)": [[148, "sympy.physics.mechanics.body.Body.mass", false]], "mass (sympy.physics.mechanics.particle.particle property)": [[154, "sympy.physics.mechanics.particle.Particle.mass", false]], "mass (sympy.physics.mechanics.rigidbody.rigidbody property)": [[154, "sympy.physics.mechanics.rigidbody.RigidBody.mass", false]], "mass_matrix (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[148, "sympy.physics.mechanics.jointsmethod.JointsMethod.mass_matrix", false]], "mass_matrix (sympy.physics.mechanics.kane.kanesmethod property)": [[152, "sympy.physics.mechanics.kane.KanesMethod.mass_matrix", false]], "mass_matrix (sympy.physics.mechanics.lagrange.lagrangesmethod property)": [[152, "sympy.physics.mechanics.lagrange.LagrangesMethod.mass_matrix", false]], "mass_matrix (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.mass_matrix", false]], "mass_matrix_full (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[148, "sympy.physics.mechanics.jointsmethod.JointsMethod.mass_matrix_full", false]], "mass_matrix_full (sympy.physics.mechanics.kane.kanesmethod property)": [[152, "sympy.physics.mechanics.kane.KanesMethod.mass_matrix_full", false]], "mass_matrix_full (sympy.physics.mechanics.lagrange.lagrangesmethod property)": [[152, "sympy.physics.mechanics.lagrange.LagrangesMethod.mass_matrix_full", false]], "mass_matrix_full (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.mass_matrix_full", false]], "mass_matrix_kin (sympy.physics.mechanics.kane.kanesmethod property)": [[152, "sympy.physics.mechanics.kane.KanesMethod.mass_matrix_kin", false]], "masscenter (sympy.physics.mechanics.body.body property)": [[148, "sympy.physics.mechanics.body.Body.masscenter", false]], "masscenter (sympy.physics.mechanics.particle.particle property)": [[154, "sympy.physics.mechanics.particle.Particle.masscenter", false]], "masscenter (sympy.physics.mechanics.rigidbody.rigidbody property)": [[154, "sympy.physics.mechanics.rigidbody.RigidBody.masscenter", false]], "masscenter_vel() (sympy.physics.mechanics.body.body method)": [[148, "sympy.physics.mechanics.body.Body.masscenter_vel", false]], "matadd (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.MatAdd", false]], "match() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.match", false]], "match() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.match", false]], "matches() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.matches", false]], "matches() (sympy.solvers.diophantine.diophantine.diophantineequationtype method)": [[233, "sympy.solvers.diophantine.diophantine.DiophantineEquationType.matches", false]], "mathematica_code() (in module sympy.printing.mathematica)": [[220, "sympy.printing.mathematica.mathematica_code", false]], "mathieubase (class in sympy.functions.special.mathieu_functions)": [[96, "sympy.functions.special.mathieu_functions.MathieuBase", false]], "mathieuc (class in sympy.functions.special.mathieu_functions)": [[96, "sympy.functions.special.mathieu_functions.mathieuc", false]], "mathieucprime (class in sympy.functions.special.mathieu_functions)": [[96, "sympy.functions.special.mathieu_functions.mathieucprime", false]], "mathieus (class in sympy.functions.special.mathieu_functions)": [[96, "sympy.functions.special.mathieu_functions.mathieus", false]], "mathieusprime (class in sympy.functions.special.mathieu_functions)": [[96, "sympy.functions.special.mathieu_functions.mathieusprime", false]], "mathml() (in module sympy.printing.mathml)": [[220, "sympy.printing.mathml.mathml", false]], "mathml_tag() (sympy.printing.mathml.mathmlcontentprinter method)": [[220, "sympy.printing.mathml.MathMLContentPrinter.mathml_tag", false]], "mathml_tag() (sympy.printing.mathml.mathmlpresentationprinter method)": [[220, "sympy.printing.mathml.MathMLPresentationPrinter.mathml_tag", false]], "mathmlcontentprinter (class in sympy.printing.mathml)": [[220, "sympy.printing.mathml.MathMLContentPrinter", false]], "mathmlpresentationprinter (class in sympy.printing.mathml)": [[220, "sympy.printing.mathml.MathMLPresentationPrinter", false]], "mathmlprinterbase (class in sympy.printing.mathml)": [[220, "sympy.printing.mathml.MathMLPrinterBase", false]], "matmul (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.MatMul", false]], "matmul() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.matmul", false]], "matmul() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.matmul", false]], "matmul() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.matmul", false]], "matmul() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.matmul", false]], "matplotlibbackend (class in sympy.plotting.plot)": [[206, "sympy.plotting.plot.MatplotlibBackend", false]], "matpow (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.MatPow", false]], "matrix": [[15, "term-Matrix", true]], "matrix (in module sympy.matrices.dense)": [[119, "sympy.matrices.dense.Matrix", false]], "matrix() (sympy.polys.numberfields.modules.modulehomomorphism method)": [[215, "sympy.polys.numberfields.modules.ModuleHomomorphism.matrix", false]], "matrix2numpy() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.matrix2numpy", false]], "matrix_exp() (in module sympy.solvers.ode.systems)": [[236, "sympy.solvers.ode.systems.matrix_exp", false]], "matrix_exp_jordan_form() (in module sympy.solvers.ode.systems)": [[236, "sympy.solvers.ode.systems.matrix_exp_jordan_form", false]], "matrix_fglm() (in module sympy.polys.fglmtools)": [[213, "sympy.polys.fglmtools.matrix_fglm", false]], "matrix_form() (sympy.liealgebras.weyl_group.weylgroup method)": [[117, "sympy.liealgebras.weyl_group.WeylGroup.matrix_form", false]], "matrix_multiply_elementwise() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.matrix_multiply_elementwise", false]], "matrix_rep() (in module sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.matrix_rep", false]], "matrix_to_density() (in module sympy.physics.quantum.qubit)": [[184, "sympy.physics.quantum.qubit.matrix_to_density", false]], "matrix_to_qubit() (in module sympy.physics.quantum.qubit)": [[184, "sympy.physics.quantum.qubit.matrix_to_qubit", false]], "matrix_to_vector() (in module sympy.vector)": [[267, "sympy.vector.matrix_to_vector", false]], "matrixbase (class in sympy.matrices.matrixbase)": [[124, "sympy.matrices.matrixbase.MatrixBase", false]], "matrixerror (class in sympy.matrices.matrixbase)": [[124, "sympy.matrices.matrixbase.MatrixError", false]], "matrixexpr (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.MatrixExpr", false]], "matrixgamma() (in module sympy.stats)": [[240, "sympy.stats.MatrixGamma", false]], "matrixkind (class in sympy.matrices.kind)": [[123, "sympy.matrices.kind.MatrixKind", false]], "matrixnormal() (in module sympy.stats)": [[240, "sympy.stats.MatrixNormal", false]], "matrixpermute (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.MatrixPermute", false]], "matrixset (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.MatrixSet", false]], "matrixsolve (class in sympy.codegen.matrix_nodes)": [[69, "sympy.codegen.matrix_nodes.MatrixSolve", false]], "matrixsymbol (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.MatrixSymbol", false]], "max (class in sympy.functions.elementary.miscellaneous)": [[94, "sympy.functions.elementary.miscellaneous.Max", false]], "max (sympy.codegen.ast.floattype property)": [[69, "sympy.codegen.ast.FloatType.max", false]], "max() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.max", false]], "max_bending_moment() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.max_bending_moment", false]], "max_bmoment() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.max_bmoment", false]], "max_bmoment() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.max_bmoment", false]], "max_deflection() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.max_deflection", false]], "max_deflection() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.max_deflection", false]], "max_div (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.max_div", false]], "max_exponent (sympy.codegen.ast.floattype property)": [[69, "sympy.codegen.ast.FloatType.max_exponent", false]], "max_norm() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.max_norm", false]], "max_norm() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.max_norm", false]], "max_shear_force() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.max_shear_force", false]], "max_shear_force() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.max_shear_force", false]], "maximal_fiber_velocity (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.maximal_fiber_velocity", false]], "maximal_order() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.maximal_order", false]], "maximum() (in module sympy.calculus.util)": [[67, "sympy.calculus.util.maximum", false]], "maxwell() (in module sympy.stats)": [[240, "sympy.stats.Maxwell", false]], "mcodeprinter (class in sympy.printing.mathematica)": [[220, "sympy.printing.mathematica.MCodePrinter", false]], "mdft() (in module sympy.physics.matrices)": [[146, "sympy.physics.matrices.mdft", false]], "measure (sympy.sets.sets.set property)": [[228, "sympy.sets.sets.Set.measure", false]], "measure_all() (in module sympy.physics.quantum.qubit)": [[184, "sympy.physics.quantum.qubit.measure_all", false]], "measure_all_oneshot() (in module sympy.physics.quantum.qubit)": [[184, "sympy.physics.quantum.qubit.measure_all_oneshot", false]], "measure_partial() (in module sympy.physics.quantum.qubit)": [[184, "sympy.physics.quantum.qubit.measure_partial", false]], "measure_partial_oneshot() (in module sympy.physics.quantum.qubit)": [[184, "sympy.physics.quantum.qubit.measure_partial_oneshot", false]], "medial (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.medial", false]], "median() (in module sympy.stats)": [[240, "sympy.stats.median", false]], "medians (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.medians", false]], "medium (class in sympy.physics.optics.medium)": [[161, "sympy.physics.optics.medium.Medium", false]], "meets() (sympy.series.gruntz.subsset method)": [[227, "sympy.series.gruntz.SubsSet.meets", false]], "meijerg (class in sympy.functions.special.hyper)": [[96, "sympy.functions.special.hyper.meijerg", false]], "meijerint_definite() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint.meijerint_definite", false]], "meijerint_indefinite() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint.meijerint_indefinite", false]], "meijerint_inversion() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint.meijerint_inversion", false]], "mellin_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.mellin_transform", false]], "mellintransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.MellinTransform", false]], "member_lengths (sympy.physics.continuum_mechanics.truss.truss property)": [[139, "sympy.physics.continuum_mechanics.truss.Truss.member_lengths", false]], "members (sympy.physics.continuum_mechanics.truss.truss property)": [[139, "sympy.physics.continuum_mechanics.truss.Truss.members", false]], "memoize_property() (in module sympy.utilities.decorator)": [[254, "sympy.utilities.decorator.memoize_property", false]], "mensor() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.mensor", false]], "merge (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.merge", false]], "merge_solution() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.merge_solution", false]], "mersenne_prime_exponent() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.mersenne_prime_exponent", false]], "method (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[148, "sympy.physics.mechanics.jointsmethod.JointsMethod.method", false]], "metric_to_christoffel_1st() (in module sympy.diffgeom)": [[90, "sympy.diffgeom.metric_to_Christoffel_1st", false]], "metric_to_christoffel_2nd() (in module sympy.diffgeom)": [[90, "sympy.diffgeom.metric_to_Christoffel_2nd", false]], "metric_to_ricci_components() (in module sympy.diffgeom)": [[90, "sympy.diffgeom.metric_to_Ricci_components", false]], "metric_to_riemann_components() (in module sympy.diffgeom)": [[90, "sympy.diffgeom.metric_to_Riemann_components", false]], "mgamma() (in module sympy.physics.matrices)": [[146, "sympy.physics.matrices.mgamma", false]], "midpoint (sympy.geometry.line.segment property)": [[101, "sympy.geometry.line.Segment.midpoint", false]], "midpoint() (sympy.geometry.point.point method)": [[103, "sympy.geometry.point.Point.midpoint", false]], "mignotte_sep_bound_squared() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.mignotte_sep_bound_squared", false]], "mimofeedback (class in sympy.physics.control.lti)": [[143, "sympy.physics.control.lti.MIMOFeedback", false]], "mimoparallel (class in sympy.physics.control.lti)": [[143, "sympy.physics.control.lti.MIMOParallel", false]], "mimoseries (class in sympy.physics.control.lti)": [[143, "sympy.physics.control.lti.MIMOSeries", false]], "min (class in sympy.functions.elementary.miscellaneous)": [[94, "sympy.functions.elementary.miscellaneous.Min", false]], "min() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.min", false]], "min_exponent (sympy.codegen.ast.floattype property)": [[69, "sympy.codegen.ast.FloatType.min_exponent", false]], "min_qubits (sympy.physics.quantum.gate.cgate property)": [[174, "sympy.physics.quantum.gate.CGate.min_qubits", false]], "min_qubits (sympy.physics.quantum.gate.cnotgate property)": [[174, "sympy.physics.quantum.gate.CNotGate.min_qubits", false]], "min_qubits (sympy.physics.quantum.gate.gate property)": [[174, "sympy.physics.quantum.gate.Gate.min_qubits", false]], "minimal_block() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.minimal_block", false]], "minimal_blocks() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.minimal_blocks", false]], "minimal_polynomial() (in module sympy.polys.numberfields.minpoly)": [[215, "sympy.polys.numberfields.minpoly.minimal_polynomial", false]], "minimum() (in module sympy.calculus.util)": [[67, "sympy.calculus.util.minimum", false]], "minlex() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.minlex", false]], "minor (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.minor", false]], "minor() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.minor", false]], "minor_submatrix() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.minor_submatrix", false]], "minpoly() (in module sympy.polys.numberfields.minpoly)": [[215, "sympy.polys.numberfields.minpoly.minpoly", false]], "minpoly_of_element() (sympy.core.numbers.algebraicnumber method)": [[88, "sympy.core.numbers.AlgebraicNumber.minpoly_of_element", false]], "mirror_formula() (in module sympy.physics.optics.utils)": [[163, "sympy.physics.optics.utils.mirror_formula", false]], "mobius (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.mobius", false]], "mobius() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.mobius", false]], "mobius_transform() (in module sympy.discrete.transforms)": [[91, "sympy.discrete.transforms.mobius_transform", false]], "mobiusrange() (sympy.ntheory.generate.sieve method)": [[128, "sympy.ntheory.generate.Sieve.mobiusrange", false]], "mod (class in sympy.core.mod)": [[88, "sympy.core.mod.Mod", false]], "mod (sympy.polys.domains.algebraicfield attribute)": [[211, "sympy.polys.domains.AlgebraicField.mod", false]], "mod_inverse() (in module sympy.core.intfunc)": [[88, "sympy.core.intfunc.mod_inverse", false]], "mod_inverse() (in module sympy.core.numbers)": [[88, "sympy.core.numbers.mod_inverse", false]], "mod_to_list() (sympy.polys.polyclasses.anp method)": [[211, "sympy.polys.polyclasses.ANP.mod_to_list", false]], "modgcd_bivariate() (in module sympy.polys.modulargcd)": [[213, "sympy.polys.modulargcd.modgcd_bivariate", false]], "modgcd_multivariate() (in module sympy.polys.modulargcd)": [[213, "sympy.polys.modulargcd.modgcd_multivariate", false]], "modgcd_univariate() (in module sympy.polys.modulargcd)": [[213, "sympy.polys.modulargcd.modgcd_univariate", false]], "module": [[16, "module-sympy.simplify.simplify", false], [58, "module-sympy", false], [60, "module-sympy.abc", false], [61, "module-sympy.algebras", false], [62, "module-sympy.assumptions.ask", false], [63, "module-sympy.assumptions.assume", false], [64, "module-sympy.assumptions", false], [65, "module-sympy.assumptions.predicates", false], [66, "module-sympy.assumptions.refine", false], [67, "module-sympy.calculus", false], [67, "module-sympy.calculus.euler", false], [67, "module-sympy.calculus.finite_diff", false], [67, "module-sympy.calculus.singularities", false], [67, "module-sympy.calculus.util", false], [68, "module-sympy.categories", false], [68, "module-sympy.categories.diagram_drawing", false], [69, "module-sympy.codegen.algorithms", false], [69, "module-sympy.codegen.approximations", false], [69, "module-sympy.codegen.ast", false], [69, "module-sympy.codegen.cfunctions", false], [69, "module-sympy.codegen.cnodes", false], [69, "module-sympy.codegen.cutils", false], [69, "module-sympy.codegen.cxxnodes", false], [69, "module-sympy.codegen.fnodes", false], [69, "module-sympy.codegen.futils", false], [69, "module-sympy.codegen.matrix_nodes", false], [69, "module-sympy.codegen.pyutils", false], [69, "module-sympy.codegen.rewriting", false], [71, "module-sympy.combinatorics.galois", false], [72, "module-sympy.combinatorics.graycode", false], [73, "module-sympy.combinatorics.group_constructs", false], [74, "module-sympy.combinatorics.group_numbers", false], [76, "module-sympy.combinatorics.named_groups", false], [77, "module-sympy.combinatorics.partitions", false], [79, "module-sympy.combinatorics.perm_groups", false], [80, "module-sympy.combinatorics.generators", false], [80, "module-sympy.combinatorics.permutations", false], [81, "module-sympy.combinatorics.polyhedron", false], [82, "module-sympy.combinatorics.prufer", false], [83, "module-sympy.combinatorics.subsets", false], [84, "module-sympy.combinatorics.tensor_can", false], [85, "module-sympy.combinatorics.testutil", false], [86, "module-sympy.combinatorics.util", false], [88, "module-sympy.core.add", false], [88, "module-sympy.core.assumptions", false], [88, "module-sympy.core.basic", false], [88, "module-sympy.core.cache", false], [88, "module-sympy.core.containers", false], [88, "module-sympy.core.evalf", false], [88, "module-sympy.core.expr", false], [88, "module-sympy.core.exprtools", false], [88, "module-sympy.core.function", false], [88, "module-sympy.core.intfunc", false], [88, "module-sympy.core.kind", false], [88, "module-sympy.core.mod", false], [88, "module-sympy.core.mul", false], [88, "module-sympy.core.multidimensional", false], [88, "module-sympy.core.numbers", false], [88, "module-sympy.core.power", false], [88, "module-sympy.core.random", false], [88, "module-sympy.core.relational", false], [88, "module-sympy.core.singleton", false], [88, "module-sympy.core.symbol", false], [88, "module-sympy.core.sympify", false], [88, "module-sympy.core.traversal", false], [89, "module-sympy.crypto.crypto", false], [90, "module-sympy.diffgeom", false], [91, "module-sympy.discrete", false], [91, "module-sympy.discrete.convolutions", false], [91, "module-sympy.discrete.transforms", false], [95, "module-sympy.functions", false], [96, "module-sympy.functions.special.bessel", false], [96, "module-sympy.functions.special.beta_functions", false], [96, "module-sympy.functions.special.elliptic_integrals", false], [96, "module-sympy.functions.special.error_functions", false], [96, "module-sympy.functions.special.gamma_functions", false], [96, "module-sympy.functions.special.mathieu_functions", false], [96, "module-sympy.functions.special.polynomials", false], [96, "module-sympy.functions.special.singularity_functions", false], [96, "module-sympy.functions.special.zeta_functions", false], [97, "module-sympy.geometry.curve", false], [98, "module-sympy.geometry.ellipse", false], [99, "module-sympy.geometry.entity", false], [101, "module-sympy.geometry.line", false], [102, "module-sympy.geometry.plane", false], [103, "module-sympy.geometry.point", false], [104, "module-sympy.geometry.polygon", false], [105, "module-sympy.geometry.util", false], [108, "module-sympy.holonomic", false], [113, "module-sympy.integrals.meijerint", false], [113, "module-sympy.integrals.meijerint_doc", false], [115, "module-sympy.integrals", false], [115, "module-sympy.integrals.intpoly", false], [115, "module-sympy.integrals.transforms", false], [116, "module-sympy.interactive", false], [116, "module-sympy.interactive.printing", false], [116, "module-sympy.interactive.session", false], [117, "module-sympy.liealgebras", false], [118, "module-sympy.logic", false], [118, "module-sympy.logic.inference", false], [120, "module-sympy.matrices.expressions", false], [120, "module-sympy.matrices.expressions.blockmatrix", false], [121, "module-sympy.matrices.immutable", false], [122, "module-sympy.matrices", false], [123, "module-sympy.matrices.kind", false], [124, "module-sympy.matrices.matrixbase", false], [126, "module-sympy.matrices.sparse", false], [127, "module-sympy.matrices.sparsetools", false], [128, "module-sympy.ntheory.bbp_pi", false], [128, "module-sympy.ntheory.continued_fraction", false], [128, "module-sympy.ntheory.digits", false], [128, "module-sympy.ntheory.ecm", false], [128, "module-sympy.ntheory.egyptian_fraction", false], [128, "module-sympy.ntheory.factor_", false], [128, "module-sympy.ntheory.generate", false], [128, "module-sympy.ntheory.modular", false], [128, "module-sympy.ntheory.multinomial", false], [128, "module-sympy.ntheory.partitions_", false], [128, "module-sympy.ntheory.primetest", false], [128, "module-sympy.ntheory.qs", false], [128, "module-sympy.ntheory.residue_ntheory", false], [130, "module-sympy.parsing", false], [130, "module-sympy.parsing.sym_expr", false], [131, "module-sympy.physics.biomechanics.activation", false], [132, "module-sympy.physics.biomechanics.curve", false], [133, "module-sympy.physics.biomechanics", false], [134, "module-sympy.physics.biomechanics.musculotendon", false], [135, "module-sympy.physics.continuum_mechanics.beam", false], [137, "module-sympy.physics.continuum_mechanics.cable", false], [139, "module-sympy.physics.continuum_mechanics.truss", false], [142, "module-sympy.physics.control", false], [143, "module-sympy.physics.control.lti", false], [144, "module-sympy.physics.hep.gamma_matrices", false], [145, "module-sympy.physics.hydrogen", false], [146, "module-sympy.physics.matrices", false], [147, "module-sympy.physics.mechanics.actuator", false], [150, "module-sympy.physics.mechanics", false], [151, "module-sympy.physics.mechanics.joint", false], [152, "module-sympy.physics.mechanics.kane", false], [152, "module-sympy.physics.mechanics.lagrange", false], [153, "module-sympy.physics.mechanics.linearize", false], [155, "module-sympy.physics.mechanics.pathway", false], [158, "module-sympy.physics.mechanics.wrapping_geometry", false], [159, "module-sympy.physics.optics.gaussopt", false], [161, "module-sympy.physics.optics.medium", false], [162, "module-sympy.physics.optics.polarization", false], [163, "module-sympy.physics.optics.utils", false], [164, "module-sympy.physics.optics.waves", false], [165, "module-sympy.physics.paulialgebra", false], [166, "module-sympy.physics.qho_1d", false], [167, "module-sympy.physics.quantum.anticommutator", false], [168, "module-sympy.physics.quantum.cartesian", false], [169, "module-sympy.physics.quantum.cg", false], [170, "module-sympy.physics.quantum.circuitplot", false], [171, "module-sympy.physics.quantum.commutator", false], [172, "module-sympy.physics.quantum.constants", false], [173, "module-sympy.physics.quantum.dagger", false], [174, "module-sympy.physics.quantum.gate", false], [175, "module-sympy.physics.quantum.grover", false], [176, "module-sympy.physics.quantum.hilbert", false], [178, "module-sympy.physics.quantum.innerproduct", false], [179, "module-sympy.physics.quantum.operator", false], [180, "module-sympy.physics.quantum.operatorset", false], [181, "module-sympy.physics.quantum.piab", false], [182, "module-sympy.physics.quantum.qapply", false], [183, "module-sympy.physics.quantum.qft", false], [184, "module-sympy.physics.quantum.qubit", false], [185, "module-sympy.physics.quantum.represent", false], [186, "module-sympy.physics.quantum.shor", false], [187, "module-sympy.physics.quantum.spin", false], [188, "module-sympy.physics.quantum.state", false], [189, "module-sympy.physics.quantum.tensorproduct", false], [190, "module-sympy.physics.secondquant", false], [191, "module-sympy.physics.sho", false], [192, "module-sympy.physics.units.dimensions", false], [196, "module-sympy.physics.units.prefixes", false], [197, "module-sympy.physics.units.quantities", false], [197, "module-sympy.physics.units.util", false], [198, "module-sympy.physics.units.unitsystem", false], [202, "module-sympy.physics.vector", false], [203, "module-sympy.physics.vector.functions", false], [203, "module-sympy.physics.vector.point", false], [205, "module-sympy.physics.wigner", false], [206, "module-sympy.plotting.plot", false], [206, "module-sympy.plotting.pygletplot", false], [209, "module-sympy.polys.matrices._dfm", false], [209, "module-sympy.polys.matrices._typing", false], [209, "module-sympy.polys.matrices.ddm", false], [209, "module-sympy.polys.matrices.dense", false], [209, "module-sympy.polys.matrices.domainmatrix", false], [209, "module-sympy.polys.matrices.sdm", false], [213, "module-sympy.polys.polyconfig", false], [213, "module-sympy.polys.polyoptions", false], [215, "module-sympy.polys.numberfields.modules", false], [215, "module-sympy.polys.numberfields.subfield", false], [216, "module-sympy.polys", false], [218, "module-sympy.polys.solvers", false], [220, "module-sympy.printing.aesaracode", false], [220, "module-sympy.printing.c", false], [220, "module-sympy.printing.codeprinter", false], [220, "module-sympy.printing.conventions", false], [220, "module-sympy.printing.cxx", false], [220, "module-sympy.printing.fortran", false], [220, "module-sympy.printing.gtk", false], [220, "module-sympy.printing.jscode", false], [220, "module-sympy.printing.julia", false], [220, "module-sympy.printing.lambdarepr", false], [220, "module-sympy.printing.latex", false], [220, "module-sympy.printing.maple", false], [220, "module-sympy.printing.mathematica", false], [220, "module-sympy.printing.mathml", false], [220, "module-sympy.printing.octave", false], [220, "module-sympy.printing.precedence", false], [220, "module-sympy.printing.pretty", false], [220, "module-sympy.printing.pretty.pretty", false], [220, "module-sympy.printing.pretty.pretty_symbology", false], [220, "module-sympy.printing.pretty.stringpict", false], [220, "module-sympy.printing.preview", false], [220, "module-sympy.printing.printer", false], [220, "module-sympy.printing.pycode", false], [220, "module-sympy.printing.python", false], [220, "module-sympy.printing.rcode", false], [220, "module-sympy.printing.repr", false], [220, "module-sympy.printing.rust", false], [220, "module-sympy.printing.smtlib", false], [220, "module-sympy.printing.str", false], [220, "module-sympy.printing.tree", false], [228, "module-sympy.sets.conditionset", false], [228, "module-sympy.sets.fancysets", false], [228, "module-sympy.sets.powerset", false], [228, "module-sympy.sets.sets", false], [229, "module-sympy.simplify.fu", false], [230, "module-sympy.simplify.hyperexpand_doc", false], [232, "module-sympy.simplify.combsimp", false], [232, "module-sympy.simplify.cse_main", false], [232, "module-sympy.simplify.epathtools", false], [232, "module-sympy.simplify.hyperexpand", false], [232, "module-sympy.simplify.powsimp", false], [232, "module-sympy.simplify.radsimp", false], [232, "module-sympy.simplify.ratsimp", false], [232, "module-sympy.simplify.sqrtdenest", false], [232, "module-sympy.simplify.trigsimp", false], [235, "module-sympy.solvers.inequalities", false], [236, "module-sympy.solvers.ode", false], [236, "module-sympy.solvers.ode.ode", false], [237, "module-sympy.solvers.pde", false], [238, "module-sympy.solvers", false], [238, "module-sympy.solvers.recurr", false], [238, "module-sympy.solvers.simplex", false], [239, "module-sympy.solvers.solveset", false], [240, "module-sympy.stats", false], [240, "module-sympy.stats.crv", false], [240, "module-sympy.stats.crv_types", false], [240, "module-sympy.stats.frv", false], [240, "module-sympy.stats.frv_types", false], [240, "module-sympy.stats.rv", false], [241, "module-sympy.tensor.array", false], [242, "module-sympy.tensor.array.expressions", false], [243, "module-sympy.tensor", false], [244, "module-sympy.tensor.index_methods", false], [245, "module-sympy.tensor.indexed", false], [246, "module-sympy.tensor.tensor", false], [247, "module-sympy.tensor.toperators", false], [248, "module-sympy.testing", false], [249, "module-sympy.testing.pytest", false], [250, "module-sympy.testing.randtest", false], [251, "module-sympy.testing.runtests", false], [252, "module-sympy.utilities.autowrap", false], [253, "module-sympy.utilities.codegen", false], [254, "module-sympy.utilities.decorator", false], [255, "module-sympy.utilities.enumerative", false], [256, "module-sympy.utilities.exceptions", false], [257, "module-sympy.utilities", false], [258, "module-sympy.utilities.iterables", false], [259, "module-sympy.utilities.lambdify", false], [260, "module-sympy.utilities.memoization", false], [261, "module-sympy.utilities.misc", false], [262, "module-sympy.utilities.source", false], [263, "module-sympy.utilities.timeutils", false], [272, "module-sympy.vector", false], [281, "module-sympy.physics", false]], "module (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.Module", false]], "module (class in sympy.polys.agca.modules)": [[207, "sympy.polys.agca.modules.Module", false]], "module (class in sympy.polys.numberfields.modules)": [[215, "sympy.polys.numberfields.modules.Module", false]], "module_quotient() (sympy.polys.agca.modules.submodule method)": [[207, "sympy.polys.agca.modules.SubModule.module_quotient", false]], "moduleelement (class in sympy.polys.numberfields.modules)": [[215, "sympy.polys.numberfields.modules.ModuleElement", false]], "moduleendomorphism (class in sympy.polys.numberfields.modules)": [[215, "sympy.polys.numberfields.modules.ModuleEndomorphism", false]], "modulehomomorphism (class in sympy.polys.agca.homomorphisms)": [[207, "sympy.polys.agca.homomorphisms.ModuleHomomorphism", false]], "modulehomomorphism (class in sympy.polys.numberfields.modules)": [[215, "sympy.polys.numberfields.modules.ModuleHomomorphism", false]], "moment (class in sympy.stats)": [[240, "sympy.stats.Moment", false]], "moment() (in module sympy.stats)": [[240, "sympy.stats.moment", false]], "moment_load_vector (sympy.physics.continuum_mechanics.beam.beam3d property)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.moment_load_vector", false]], "momentum (sympy.physics.quantum.cartesian.pxbra property)": [[168, "sympy.physics.quantum.cartesian.PxBra.momentum", false]], "momentum (sympy.physics.quantum.cartesian.pxket property)": [[168, "sympy.physics.quantum.cartesian.PxKet.momentum", false]], "monic() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.monic", false]], "monic() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.monic", false]], "monic() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.monic", false]], "monic() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.monic", false]], "monogenicfiniteextension (class in sympy.polys.agca.extensions)": [[207, "sympy.polys.agca.extensions.MonogenicFiniteExtension", false]], "monomial (class in sympy.polys.monomials)": [[216, "sympy.polys.monomials.Monomial", false]], "monomial_basis() (sympy.polys.rings.polyring method)": [[211, "sympy.polys.rings.PolyRing.monomial_basis", false]], "monomial_count() (in module sympy.polys.monomials)": [[216, "sympy.polys.monomials.monomial_count", false]], "monomialorder (class in sympy.polys.orderings)": [[216, "sympy.polys.orderings.MonomialOrder", false]], "monoms() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.monoms", false]], "monoms() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.monoms", false]], "monoms() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.monoms", false]], "monotonicity_helper() (in module sympy.calculus.singularities)": [[67, "sympy.calculus.singularities.monotonicity_helper", false]], "morphism (class in sympy.categories)": [[68, "sympy.categories.Morphism", false]], "morphisms (sympy.categories.diagram_drawing.diagramgrid property)": [[68, "sympy.categories.diagram_drawing.DiagramGrid.morphisms", false]], "moyal() (in module sympy.stats)": [[240, "sympy.stats.Moyal", false]], "mpmath": [[15, "term-mpmath", true]], "mpmathprinter (class in sympy.printing.pycode)": [[220, "sympy.printing.pycode.MpmathPrinter", false]], "mr() (in module sympy.ntheory.primetest)": [[128, "sympy.ntheory.primetest.mr", false]], "mrv() (in module sympy.series.gruntz)": [[227, "sympy.series.gruntz.mrv", false]], "mrv_leadterm() (in module sympy.series.gruntz)": [[227, "sympy.series.gruntz.mrv_leadterm", false]], "mrv_max1() (in module sympy.series.gruntz)": [[227, "sympy.series.gruntz.mrv_max1", false]], "mrv_max3() (in module sympy.series.gruntz)": [[227, "sympy.series.gruntz.mrv_max3", false]], "msigma() (in module sympy.physics.matrices)": [[146, "sympy.physics.matrices.msigma", false]], "msubs() (in module sympy.physics.mechanics)": [[149, "sympy.physics.mechanics.msubs", false]], "mueller_matrix() (in module sympy.physics.optics.polarization)": [[162, "sympy.physics.optics.polarization.mueller_matrix", false]], "mul (class in sympy.core.mul)": [[88, "sympy.core.mul.Mul", false]], "mul() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.mul", false]], "mul() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.mul", false]], "mul() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.mul", false]], "mul() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.mul", false]], "mul() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.mul", false]], "mul() (sympy.polys.numberfields.modules.submodule method)": [[215, "sympy.polys.numberfields.modules.Submodule.mul", false]], "mul() (sympy.polys.polyclasses.dmf method)": [[211, "sympy.polys.polyclasses.DMF.mul", false]], "mul() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.mul", false]], "mul() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.mul", false]], "mul() (sympy.polys.rings.polyring method)": [[211, "sympy.polys.rings.PolyRing.mul", false]], "mul_elementwise() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.mul_elementwise", false]], "mul_ground() (sympy.polys.polyclasses.anp method)": [[211, "sympy.polys.polyclasses.ANP.mul_ground", false]], "mul_ground() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.mul_ground", false]], "mul_ground() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.mul_ground", false]], "mul_inv() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.mul_inv", false]], "mul_xin() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.mul_xin", false]], "mult_tab() (sympy.polys.numberfields.modules.module method)": [[215, "sympy.polys.numberfields.modules.Module.mult_tab", false]], "multifactorial (class in sympy.functions.combinatorial.factorials)": [[93, "sympy.functions.combinatorial.factorials.MultiFactorial", false]], "multigamma (class in sympy.functions.special.gamma_functions)": [[96, "sympy.functions.special.gamma_functions.multigamma", false]], "multinomial() (in module sympy.stats)": [[240, "sympy.stats.Multinomial", false]], "multinomial_coefficients() (in module sympy.ntheory.multinomial)": [[128, "sympy.ntheory.multinomial.multinomial_coefficients", false]], "multinomial_coefficients_iterator() (in module sympy.ntheory.multinomial)": [[128, "sympy.ntheory.multinomial.multinomial_coefficients_iterator", false]], "multiplicity() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.multiplicity", false]], "multiplicity() (sympy.vector.implicitregion.implicitregion method)": [[264, "sympy.vector.implicitregion.ImplicitRegion.multiplicity", false]], "multiply() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.multiply", false]], "multiply_elementwise() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.multiply_elementwise", false]], "multiply_ideal() (sympy.polys.agca.modules.freemodule method)": [[207, "sympy.polys.agca.modules.FreeModule.multiply_ideal", false]], "multiply_ideal() (sympy.polys.agca.modules.module method)": [[207, "sympy.polys.agca.modules.Module.multiply_ideal", false]], "multiply_ideal() (sympy.polys.agca.modules.submodule method)": [[207, "sympy.polys.agca.modules.SubModule.multiply_ideal", false]], "multiset() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.multiset", false]], "multiset_combinations() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.multiset_combinations", false]], "multiset_derangements() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.multiset_derangements", false]], "multiset_partitions() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.multiset_partitions", false]], "multiset_partitions_taocp() (in module sympy.utilities.enumerative)": [[255, "sympy.utilities.enumerative.multiset_partitions_taocp", false]], "multiset_permutations() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.multiset_permutations", false]], "multisetpartitiontraverser (class in sympy.utilities.enumerative)": [[255, "sympy.utilities.enumerative.MultisetPartitionTraverser", false]], "multivariatebeta() (in module sympy.stats)": [[240, "sympy.stats.MultivariateBeta", false]], "multivariateewens() (in module sympy.stats)": [[240, "sympy.stats.MultivariateEwens", false]], "multivariatelaplace() (in module sympy.stats)": [[240, "sympy.stats.MultivariateLaplace", false]], "multivariatenormal() (in module sympy.stats)": [[240, "sympy.stats.MultivariateNormal", false]], "multivariatepolynomialerror (class in sympy.polys.polyerrors)": [[213, "sympy.polys.polyerrors.MultivariatePolynomialError", false]], "multivariatet() (in module sympy.stats)": [[240, "sympy.stats.MultivariateT", false]], "musculotendon_dynamics (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.musculotendon_dynamics", false]], "musculotendonbase (class in sympy.physics.biomechanics.musculotendon)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase", false]], "musculotendondegroote2016 (class in sympy.physics.biomechanics.musculotendon)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonDeGroote2016", false]], "musculotendonformulation (class in sympy.physics.biomechanics.musculotendon)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonFormulation", false]], "mutabledensematrix (class in sympy.matrices.dense)": [[119, "sympy.matrices.dense.MutableDenseMatrix", false]], "mutabledensendimarray (class in sympy.tensor.array)": [[241, "sympy.tensor.array.MutableDenseNDimArray", false]], "mutablesparsematrix (class in sympy.matrices.sparse)": [[126, "sympy.matrices.sparse.MutableSparseMatrix", false]], "mutablesparsendimarray (class in sympy.tensor.array)": [[241, "sympy.tensor.array.MutableSparseNDimArray", false]], "mx (class in sympy.physics.quantum.circuitplot)": [[170, "sympy.physics.quantum.circuitplot.Mx", false]], "mz (class in sympy.physics.quantum.circuitplot)": [[170, "sympy.physics.quantum.circuitplot.Mz", false]], "n (sympy.combinatorics.graycode.graycode property)": [[72, "sympy.combinatorics.graycode.GrayCode.n", false]], "n (sympy.physics.optics.waves.twave property)": [[164, "sympy.physics.optics.waves.TWave.n", false]], "n (sympy.physics.quantum.shor.cmod property)": [[186, "sympy.physics.quantum.shor.CMod.N", false]], "n (sympy.plotting.series.baseseries property)": [[206, "sympy.plotting.series.BaseSeries.n", false]], "n (sympy.polys.numberfields.modules.module property)": [[215, "sympy.polys.numberfields.modules.Module.n", false]], "n (sympy.polys.numberfields.modules.moduleelement property)": [[215, "sympy.polys.numberfields.modules.ModuleElement.n", false]], "n (sympy.series.sequences.recursiveseq property)": [[226, "sympy.series.sequences.RecursiveSeq.n", false]], "n() (in module sympy.core.evalf)": [[88, "sympy.core.evalf.N", false]], "n() (sympy.core.evalf.evalfmixin method)": [[88, "sympy.core.evalf.EvalfMixin.n", false]], "n() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.n", false]], "n() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.n", false]], "n_order() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.n_order", false]], "nakagami() (in module sympy.stats)": [[240, "sympy.stats.Nakagami", false]], "name (sympy.categories.category property)": [[68, "sympy.categories.Category.name", false]], "name (sympy.categories.namedmorphism property)": [[68, "sympy.categories.NamedMorphism.name", false]], "name (sympy.physics.mechanics.body.body property)": [[148, "sympy.physics.mechanics.body.Body.name", false]], "name (sympy.physics.mechanics.joint.joint property)": [[151, "sympy.physics.mechanics.joint.Joint.name", false]], "name (sympy.physics.mechanics.particle.particle property)": [[154, "sympy.physics.mechanics.particle.Particle.name", false]], "name (sympy.physics.mechanics.rigidbody.rigidbody property)": [[154, "sympy.physics.mechanics.rigidbody.RigidBody.name", false]], "namedmorphism (class in sympy.categories)": [[68, "sympy.categories.NamedMorphism", false]], "nan (class in sympy.core.numbers)": [[88, "sympy.core.numbers.NaN", false]], "nand (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.Nand", false]], "nargs (sympy.core.function.functionclass property)": [[88, "sympy.core.function.FunctionClass.nargs", false]], "native_coeffs() (sympy.core.numbers.algebraicnumber method)": [[88, "sympy.core.numbers.AlgebraicNumber.native_coeffs", false]], "naturals (class in sympy.sets.fancysets)": [[228, "sympy.sets.fancysets.Naturals", false]], "naturals0 (class in sympy.sets.fancysets)": [[228, "sympy.sets.fancysets.Naturals0", false]], "nc() (in module sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.nC", false]], "ne (in module sympy.core.relational)": [[88, "sympy.core.relational.Ne", false]], "nearest_common_ancestor() (sympy.polys.numberfields.modules.module method)": [[215, "sympy.polys.numberfields.modules.Module.nearest_common_ancestor", false]], "necklaces() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.necklaces", false]], "neg() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.neg", false]], "neg() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.neg", false]], "neg() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.neg", false]], "neg() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.neg", false]], "neg() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.neg", false]], "neg() (sympy.polys.polyclasses.dmf method)": [[211, "sympy.polys.polyclasses.DMF.neg", false]], "neg() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.neg", false]], "neg() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.neg", false]], "negated (sympy.core.relational.relational property)": [[88, "sympy.core.relational.Relational.negated", false]], "negative": [[88, "term-negative", true]], "negativebinomial() (in module sympy.stats)": [[240, "sympy.stats.NegativeBinomial", false]], "negativeinfinity (class in sympy.core.numbers)": [[88, "sympy.core.numbers.NegativeInfinity", false]], "negativemultinomial() (in module sympy.stats)": [[240, "sympy.stats.NegativeMultinomial", false]], "negativeone (class in sympy.core.numbers)": [[88, "sympy.core.numbers.NegativeOne", false]], "negativepredicate (class in sympy.assumptions.predicates.order)": [[65, "sympy.assumptions.predicates.order.NegativePredicate", false]], "new() (sympy.polys.domains.gaussiandomains.gaussianelement class method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianElement.new", false]], "new() (sympy.polys.matrices.sdm.sdm class method)": [[209, "sympy.polys.matrices.sdm.SDM.new", false]], "new() (sympy.polys.polytools.poly class method)": [[216, "sympy.polys.polytools.Poly.new", false]], "new() (sympy.polys.rootoftools.rootsum class method)": [[216, "sympy.polys.rootoftools.RootSum.new", false]], "newtons_method() (in module sympy.codegen.algorithms)": [[69, "sympy.codegen.algorithms.newtons_method", false]], "newtons_method_function() (in module sympy.codegen.algorithms)": [[69, "sympy.codegen.algorithms.newtons_method_function", false]], "next() (sympy.combinatorics.graycode.graycode method)": [[72, "sympy.combinatorics.graycode.GrayCode.next", false]], "next() (sympy.combinatorics.prufer.prufer method)": [[82, "sympy.combinatorics.prufer.Prufer.next", false]], "next() (sympy.printing.pretty.stringpict.stringpict static method)": [[220, "sympy.printing.pretty.stringpict.stringPict.next", false]], "next_binary() (sympy.combinatorics.subsets.subset method)": [[83, "sympy.combinatorics.subsets.Subset.next_binary", false]], "next_gray() (sympy.combinatorics.subsets.subset method)": [[83, "sympy.combinatorics.subsets.Subset.next_gray", false]], "next_lex() (sympy.combinatorics.partitions.integerpartition method)": [[77, "sympy.combinatorics.partitions.IntegerPartition.next_lex", false]], "next_lex() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.next_lex", false]], "next_lexicographic() (sympy.combinatorics.subsets.subset method)": [[83, "sympy.combinatorics.subsets.Subset.next_lexicographic", false]], "next_nonlex() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.next_nonlex", false]], "next_trotterjohnson() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.next_trotterjohnson", false]], "nextprime() (in module sympy.ntheory.generate)": [[128, "sympy.ntheory.generate.nextprime", false]], "nfloat() (in module sympy.core.function)": [[88, "sympy.core.function.nfloat", false]], "nine_point_circle (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.nine_point_circle", false]], "nnz() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.nnz", false]], "nnz() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.nnz", false]], "nnz() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.nnz", false]], "nnz() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.nnz", false]], "no (class in sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.NO", false]], "no_attrs_in_subclass (class in sympy.utilities.decorator)": [[254, "sympy.utilities.decorator.no_attrs_in_subclass", false]], "no_symmetry() (sympy.tensor.tensor.tensorsymmetry class method)": [[246, "sympy.tensor.tensor.TensorSymmetry.no_symmetry", false]], "nocache_fail() (in module sympy.testing.pytest)": [[249, "sympy.testing.pytest.nocache_fail", false]], "node (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Node", false]], "node_labels (sympy.physics.continuum_mechanics.truss.truss property)": [[139, "sympy.physics.continuum_mechanics.truss.Truss.node_labels", false]], "node_positions (sympy.physics.continuum_mechanics.truss.truss property)": [[139, "sympy.physics.continuum_mechanics.truss.Truss.node_positions", false]], "nodes (sympy.combinatorics.prufer.prufer property)": [[82, "sympy.combinatorics.prufer.Prufer.nodes", false]], "nodes (sympy.physics.continuum_mechanics.truss.truss property)": [[139, "sympy.physics.continuum_mechanics.truss.Truss.nodes", false]], "nonelementaryintegral (class in sympy.integrals.risch)": [[115, "sympy.integrals.risch.NonElementaryIntegral", false]], "nonetoken (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.NoneToken", false]], "nonholonomic_constraints (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.nonholonomic_constraints", false]], "nonlinsolve() (in module sympy.solvers.solveset)": [[239, "sympy.solvers.solveset.nonlinsolve", false]], "nonnegative": [[88, "term-nonnegative", true]], "nonnegativepredicate (class in sympy.assumptions.predicates.order)": [[65, "sympy.assumptions.predicates.order.NonNegativePredicate", false]], "nonpositive": [[88, "term-nonpositive", true]], "nonpositivepredicate (class in sympy.assumptions.predicates.order)": [[65, "sympy.assumptions.predicates.order.NonPositivePredicate", false]], "nonsquarematrixerror (class in sympy.matrices.matrixbase)": [[124, "sympy.matrices.matrixbase.NonSquareMatrixError", false]], "nonzero": [[88, "term-nonzero", true]], "nonzeropredicate (class in sympy.assumptions.predicates.order)": [[65, "sympy.assumptions.predicates.order.NonZeroPredicate", false]], "nor (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.Nor", false]], "norm (sympy.physics.quantum.state.wavefunction property)": [[188, "sympy.physics.quantum.state.Wavefunction.norm", false]], "norm() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.norm", false]], "norm() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.norm", false]], "norm() (sympy.polys.numberfields.modules.powerbasiselement method)": [[215, "sympy.polys.numberfields.modules.PowerBasisElement.norm", false]], "norm() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.norm", false]], "norm() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.norm", false]], "normal() (in module sympy.stats)": [[240, "sympy.stats.Normal", false]], "normal() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.normal", false]], "normal_closure() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.normal_closure", false]], "normal_lines() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.normal_lines", false]], "normal_vector (sympy.geometry.plane.plane property)": [[102, "sympy.geometry.plane.Plane.normal_vector", false]], "normalgamma() (in module sympy.stats)": [[240, "sympy.stats.NormalGamma", false]], "normalize() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.normalize", false]], "normalize() (sympy.physics.quantum.state.wavefunction method)": [[188, "sympy.physics.quantum.state.Wavefunction.normalize", false]], "normalize() (sympy.physics.vector.vector.vector method)": [[199, "sympy.physics.vector.vector.Vector.normalize", false]], "normalize() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.normalize", false]], "normalize() (sympy.vector.vector.vector method)": [[264, "sympy.vector.vector.Vector.normalize", false]], "normalize_theta_set() (in module sympy.sets.fancysets)": [[228, "sympy.sets.fancysets.normalize_theta_set", false]], "normalized() (in module sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.normalized", false]], "normalized() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.normalized", false]], "normalpredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.NormalPredicate", false]], "normalpspace (class in sympy.stats.crv_types)": [[240, "sympy.stats.crv_types.NormalPSpace", false]], "not (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.Not", false]], "not_empty_in() (in module sympy.calculus.util)": [[67, "sympy.calculus.util.not_empty_in", false]], "not_point() (sympy.physics.quantum.circuitplot.circuitplot method)": [[170, "sympy.physics.quantum.circuitplot.CircuitPlot.not_point", false]], "notalgebraic (class in sympy.polys.polyerrors)": [[213, "sympy.polys.polyerrors.NotAlgebraic", false]], "notinvertible (class in sympy.polys.polyerrors)": [[213, "sympy.polys.polyerrors.NotInvertible", false]], "notiterable (class in sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.NotIterable", false]], "notreversible (class in sympy.polys.polyerrors)": [[213, "sympy.polys.polyerrors.NotReversible", false]], "np() (in module sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.nP", false]], "npartitions() (in module sympy.ntheory.partitions_)": [[128, "sympy.ntheory.partitions_.npartitions", false]], "nqubits (sympy.physics.quantum.gate.cgate property)": [[174, "sympy.physics.quantum.gate.CGate.nqubits", false]], "nqubits (sympy.physics.quantum.gate.gate property)": [[174, "sympy.physics.quantum.gate.Gate.nqubits", false]], "nroots() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.nroots", false]], "nroots() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.nroots", false]], "nseries() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.nseries", false]], "nsimplify() (in module sympy.simplify.simplify)": [[232, "sympy.simplify.simplify.nsimplify", false]], "nsimplify() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.nsimplify", false]], "nsolve() (in module sympy.solvers.solvers)": [[238, "sympy.solvers.solvers.nsolve", false]], "nt() (in module sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.nT", false]], "nth() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.nth", false]], "nth() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.nth", false]], "nth_power_roots_poly() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.nth_power_roots_poly", false]], "nth_power_roots_poly() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.nth_power_roots_poly", false]], "nthalgebraic (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.NthAlgebraic", false]], "nthlinearconstantcoeffhomogeneous (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.NthLinearConstantCoeffHomogeneous", false]], "nthlinearconstantcoeffundeterminedcoefficients (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.NthLinearConstantCoeffUndeterminedCoefficients", false]], "nthlinearconstantcoeffvariationofparameters (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.NthLinearConstantCoeffVariationOfParameters", false]], "nthlineareulereqhomogeneous (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.NthLinearEulerEqHomogeneous", false]], "nthlineareulereqnonhomogeneousundeterminedcoefficients (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.NthLinearEulerEqNonhomogeneousUndeterminedCoefficients", false]], "nthlineareulereqnonhomogeneousvariationofparameters (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.NthLinearEulerEqNonhomogeneousVariationOfParameters", false]], "nthorderreducible (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.NthOrderReducible", false]], "nthroot() (in module sympy.simplify.simplify)": [[232, "sympy.simplify.simplify.nthroot", false]], "nthroot_mod() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.nthroot_mod", false]], "ntt() (in module sympy.discrete.transforms)": [[91, "sympy.discrete.transforms.ntt", false]], "nu (sympy.functions.special.hyper.meijerg property)": [[96, "sympy.functions.special.hyper.meijerg.nu", false]], "nullspace() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.nullspace", false]], "nullspace() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.nullspace", false]], "nullspace() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.nullspace", false]], "nullspace() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.nullspace", false]], "nullspace() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.nullspace", false]], "nullspace_from_rref() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.nullspace_from_rref", false]], "nullspace_from_rref() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.nullspace_from_rref", false]], "nullspace_from_rref() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.nullspace_from_rref", false]], "nullspace_from_rref() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.nullspace_from_rref", false]], "num (sympy.physics.control.lti.feedback property)": [[143, "sympy.physics.control.lti.Feedback.num", false]], "num (sympy.physics.control.lti.transferfunction property)": [[143, "sympy.physics.control.lti.TransferFunction.num", false]], "num_digits() (in module sympy.core.intfunc)": [[88, "sympy.core.intfunc.num_digits", false]], "num_inputs (sympy.physics.control.lti.mimoparallel property)": [[143, "sympy.physics.control.lti.MIMOParallel.num_inputs", false]], "num_inputs (sympy.physics.control.lti.mimoseries property)": [[143, "sympy.physics.control.lti.MIMOSeries.num_inputs", false]], "num_inputs (sympy.physics.control.lti.transferfunctionmatrix property)": [[143, "sympy.physics.control.lti.TransferFunctionMatrix.num_inputs", false]], "num_outputs (sympy.physics.control.lti.mimoparallel property)": [[143, "sympy.physics.control.lti.MIMOParallel.num_outputs", false]], "num_outputs (sympy.physics.control.lti.mimoseries property)": [[143, "sympy.physics.control.lti.MIMOSeries.num_outputs", false]], "num_outputs (sympy.physics.control.lti.transferfunctionmatrix property)": [[143, "sympy.physics.control.lti.TransferFunctionMatrix.num_outputs", false]], "number": [[15, "term-Number", true]], "number (class in sympy.core.numbers)": [[88, "sympy.core.numbers.Number", false]], "number_field (sympy.polys.numberfields.modules.module property)": [[215, "sympy.polys.numberfields.modules.Module.number_field", false]], "numbered_symbols() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.numbered_symbols", false]], "numberkind (in module sympy.core.kind)": [[88, "sympy.core.kind.NumberKind", false]], "numbersymbol (class in sympy.core.numbers)": [[88, "sympy.core.numbers.NumberSymbol", false]], "numer() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.numer", false]], "numer() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.numer", false]], "numer() (sympy.polys.domains.expressiondomain method)": [[211, "sympy.polys.domains.ExpressionDomain.numer", false]], "numer() (sympy.polys.domains.fractionfield method)": [[211, "sympy.polys.domains.FractionField.numer", false]], "numer() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianRationalField.numer", false]], "numer() (sympy.polys.domains.gmpyrationalfield method)": [[211, "sympy.polys.domains.GMPYRationalField.numer", false]], "numer() (sympy.polys.domains.rationalfield method)": [[211, "sympy.polys.domains.RationalField.numer", false]], "numer() (sympy.polys.domains.ring.ring method)": [[211, "sympy.polys.domains.ring.Ring.numer", false]], "numer() (sympy.polys.polyclasses.dmf method)": [[211, "sympy.polys.polyclasses.DMF.numer", false]], "numerator() (sympy.polys.numberfields.modules.powerbasiselement method)": [[215, "sympy.polys.numberfields.modules.PowerBasisElement.numerator", false]], "numeric": [[15, "term-Numeric", true]], "object (class in sympy.categories)": [[68, "sympy.categories.Object", false]], "objects (sympy.categories.category property)": [[68, "sympy.categories.Category.objects", false]], "objects (sympy.categories.diagram property)": [[68, "sympy.categories.Diagram.objects", false]], "obstaclesetpathway (class in sympy.physics.mechanics.pathway)": [[155, "sympy.physics.mechanics.pathway.ObstacleSetPathway", false]], "octave_code() (in module sympy.printing.octave)": [[220, "sympy.printing.octave.octave_code", false]], "octavecodegen (class in sympy.utilities.codegen)": [[253, "sympy.utilities.codegen.OctaveCodeGen", false]], "octavecodeprinter (class in sympy.printing.octave)": [[220, "sympy.printing.octave.OctaveCodePrinter", false]], "odd": [[88, "term-odd", true]], "oddpredicate (class in sympy.assumptions.predicates.ntheory)": [[65, "sympy.assumptions.predicates.ntheory.OddPredicate", false]], "ode_1st_power_series() (in module sympy.solvers.ode.ode)": [[236, "sympy.solvers.ode.ode.ode_1st_power_series", false]], "ode_2nd_power_series_ordinary() (in module sympy.solvers.ode.ode)": [[236, "sympy.solvers.ode.ode.ode_2nd_power_series_ordinary", false]], "ode_2nd_power_series_regular() (in module sympy.solvers.ode.ode)": [[236, "sympy.solvers.ode.ode.ode_2nd_power_series_regular", false]], "ode_order() (in module sympy.solvers.deutils)": [[238, "sympy.solvers.deutils.ode_order", false]], "ode_sol_simplicity() (in module sympy.solvers.ode.ode)": [[236, "sympy.solvers.ode.ode.ode_sol_simplicity", false]], "odesimp() (in module sympy.solvers.ode.ode)": [[236, "sympy.solvers.ode.ode.odesimp", false]], "of_type() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.of_type", false]], "offset (sympy.tensor.indexed.indexedbase property)": [[245, "sympy.tensor.indexed.IndexedBase.offset", false]], "old_frac_field() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.old_frac_field", false]], "old_poly_ring() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.old_poly_ring", false]], "one (class in sympy.core.numbers)": [[88, "sympy.core.numbers.One", false]], "one (sympy.polys.domains.domain.domain attribute)": [[211, "sympy.polys.domains.domain.Domain.one", false]], "one (sympy.polys.polytools.poly property)": [[216, "sympy.polys.polytools.Poly.one", false]], "one() (sympy.polys.numberfields.modules.module method)": [[215, "sympy.polys.numberfields.modules.Module.one", false]], "one_qubit_box() (sympy.physics.quantum.circuitplot.circuitplot method)": [[170, "sympy.physics.quantum.circuitplot.CircuitPlot.one_qubit_box", false]], "onequbitgate (class in sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.OneQubitGate", false]], "ones() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.ones", false]], "ones() (sympy.matrices.matrixbase.matrixbase class method)": [[124, "sympy.matrices.matrixbase.MatrixBase.ones", false]], "ones() (sympy.polys.matrices._dfm.dfm class method)": [[209, "sympy.polys.matrices._dfm.DFM.ones", false]], "ones() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.ones", false]], "oo": [[15, "term-oo", true]], "open() (sympy.sets.sets.interval class method)": [[228, "sympy.sets.sets.Interval.open", false]], "operationnotsupported (class in sympy.polys.polyerrors)": [[213, "sympy.polys.polyerrors.OperationNotSupported", false]], "operator (class in sympy.physics.quantum.operator)": [[179, "sympy.physics.quantum.operator.Operator", false]], "operators (sympy.physics.quantum.state.statebase property)": [[188, "sympy.physics.quantum.state.StateBase.operators", false]], "operators_to_state() (in module sympy.physics.quantum.operatorset)": [[180, "sympy.physics.quantum.operatorset.operators_to_state", false]], "opt_cse() (in module sympy.simplify.cse_main)": [[232, "sympy.simplify.cse_main.opt_cse", false]], "optimal_fiber_length (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.optimal_fiber_length", false]], "optimal_pennation_angle (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.optimal_pennation_angle", false]], "optimization (class in sympy.codegen.rewriting)": [[69, "sympy.codegen.rewriting.Optimization", false]], "optimize() (in module sympy.codegen.rewriting)": [[69, "sympy.codegen.rewriting.optimize", false]], "optionerror (class in sympy.polys.polyerrors)": [[213, "sympy.polys.polyerrors.OptionError", false]], "options (class in sympy.polys.polyoptions)": [[213, "sympy.polys.polyoptions.Options", false]], "or (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.Or", false]], "oraclegate (class in sympy.physics.quantum.grover)": [[175, "sympy.physics.quantum.grover.OracleGate", false]], "orbit() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.orbit", false]], "orbit_rep() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.orbit_rep", false]], "orbit_transversal() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.orbit_transversal", false]], "orbits() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.orbits", false]], "order (class in sympy.series.order)": [[227, "sympy.series.order.Order", false]], "order (sympy.functions.special.bessel.besselbase property)": [[96, "sympy.functions.special.bessel.BesselBase.order", false]], "order (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.order", false]], "order (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.order", false]], "order (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[131, "sympy.physics.biomechanics.activation.ZerothOrderActivation.order", false]], "order() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.order", false]], "order() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.order", false]], "ordered() (in module sympy.core.sorting)": [[88, "sympy.core.sorting.ordered", false]], "ordered_partitions() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.ordered_partitions", false]], "ordinal() (in module sympy.utilities.misc)": [[261, "sympy.utilities.misc.ordinal", false]], "orient() (sympy.physics.vector.frame.referenceframe method)": [[199, "sympy.physics.vector.frame.ReferenceFrame.orient", false]], "orient_axis() (sympy.physics.vector.frame.referenceframe method)": [[199, "sympy.physics.vector.frame.ReferenceFrame.orient_axis", false]], "orient_body_fixed() (sympy.physics.vector.frame.referenceframe method)": [[199, "sympy.physics.vector.frame.ReferenceFrame.orient_body_fixed", false]], "orient_dcm() (sympy.physics.vector.frame.referenceframe method)": [[199, "sympy.physics.vector.frame.ReferenceFrame.orient_dcm", false]], "orient_new() (sympy.vector.coordsysrect.coordsys3d method)": [[264, "sympy.vector.coordsysrect.CoordSys3D.orient_new", false]], "orient_new_axis() (sympy.vector.coordsysrect.coordsys3d method)": [[264, "sympy.vector.coordsysrect.CoordSys3D.orient_new_axis", false]], "orient_new_body() (sympy.vector.coordsysrect.coordsys3d method)": [[264, "sympy.vector.coordsysrect.CoordSys3D.orient_new_body", false]], "orient_new_quaternion() (sympy.vector.coordsysrect.coordsys3d method)": [[264, "sympy.vector.coordsysrect.CoordSys3D.orient_new_quaternion", false]], "orient_new_space() (sympy.vector.coordsysrect.coordsys3d method)": [[264, "sympy.vector.coordsysrect.CoordSys3D.orient_new_space", false]], "orient_quaternion() (sympy.physics.vector.frame.referenceframe method)": [[199, "sympy.physics.vector.frame.ReferenceFrame.orient_quaternion", false]], "orient_space_fixed() (sympy.physics.vector.frame.referenceframe method)": [[199, "sympy.physics.vector.frame.ReferenceFrame.orient_space_fixed", false]], "orienter (class in sympy.vector.orienters)": [[266, "sympy.vector.orienters.Orienter", false]], "orientnew() (sympy.physics.vector.frame.referenceframe method)": [[199, "sympy.physics.vector.frame.ReferenceFrame.orientnew", false]], "orig_ext (sympy.polys.domains.algebraicfield attribute)": [[211, "sympy.polys.domains.AlgebraicField.orig_ext", false]], "origin (sympy.geometry.point.point property)": [[103, "sympy.geometry.point.Point.origin", false]], "orthocenter (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.orthocenter", false]], "orthogonal() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.orthogonal", false]], "orthogonal_direction (sympy.geometry.point.point property)": [[103, "sympy.geometry.point.Point.orthogonal_direction", false]], "orthogonalbra (class in sympy.physics.quantum.state)": [[188, "sympy.physics.quantum.state.OrthogonalBra", false]], "orthogonalize() (sympy.matrices.matrixbase.matrixbase class method)": [[124, "sympy.matrices.matrixbase.MatrixBase.orthogonalize", false]], "orthogonalket (class in sympy.physics.quantum.state)": [[188, "sympy.physics.quantum.state.OrthogonalKet", false]], "orthogonalpredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.OrthogonalPredicate", false]], "orthogonalstate (class in sympy.physics.quantum.state)": [[188, "sympy.physics.quantum.state.OrthogonalState", false]], "outer() (in module sympy.physics.vector.functions)": [[201, "sympy.physics.vector.functions.outer", false]], "outer() (sympy.physics.vector.vector.vector method)": [[199, "sympy.physics.vector.vector.Vector.outer", false]], "outer() (sympy.vector.vector.vector method)": [[264, "sympy.vector.vector.Vector.outer", false]], "outerproduct (class in sympy.physics.quantum.operator)": [[179, "sympy.physics.quantum.operator.OuterProduct", false]], "outputargument (class in sympy.utilities.codegen)": [[253, "sympy.utilities.codegen.OutputArgument", false]], "over_power_basis() (sympy.polys.numberfields.modules.moduleelement method)": [[215, "sympy.polys.numberfields.modules.ModuleElement.over_power_basis", false]], "p (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.p", false]], "p (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.p", false]], "p (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[131, "sympy.physics.biomechanics.activation.ZerothOrderActivation.p", false]], "p (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.p", false]], "p() (in module sympy.stats)": [[240, "sympy.stats.P", false]], "p1 (sympy.geometry.line.linearentity property)": [[101, "sympy.geometry.line.LinearEntity.p1", false]], "p1 (sympy.geometry.plane.plane property)": [[102, "sympy.geometry.plane.Plane.p1", false]], "p2 (sympy.geometry.line.linearentity property)": [[101, "sympy.geometry.line.LinearEntity.p2", false]], "padded_key() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.padded_key", false]], "parallel (class in sympy.physics.control.lti)": [[143, "sympy.physics.control.lti.Parallel", false]], "parallel() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.parallel", false]], "parallel_axis() (sympy.physics.mechanics.body.body method)": [[148, "sympy.physics.mechanics.body.Body.parallel_axis", false]], "parallel_axis() (sympy.physics.mechanics.particle.particle method)": [[154, "sympy.physics.mechanics.particle.Particle.parallel_axis", false]], "parallel_axis() (sympy.physics.mechanics.rigidbody.rigidbody method)": [[154, "sympy.physics.mechanics.rigidbody.RigidBody.parallel_axis", false]], "parallel_line() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.parallel_line", false]], "parallel_plane() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.parallel_plane", false]], "parallel_poly_from_expr() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.parallel_poly_from_expr", false]], "parameter (sympy.geometry.curve.curve property)": [[97, "sympy.geometry.curve.Curve.parameter", false]], "parameter_value() (sympy.geometry.entity.geometryentity method)": [[99, "sympy.geometry.entity.GeometryEntity.parameter_value", false]], "parameter_value() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.parameter_value", false]], "parametric2dlineseries (class in sympy.plotting.series)": [[206, "sympy.plotting.series.Parametric2DLineSeries", false]], "parametric3dlineseries (class in sympy.plotting.series)": [[206, "sympy.plotting.series.Parametric3DLineSeries", false]], "parametricintegral (class in sympy.vector.integrals)": [[264, "sympy.vector.integrals.ParametricIntegral", false]], "parametricregion (class in sympy.vector.parametricregion)": [[264, "sympy.vector.parametricregion.ParametricRegion", false]], "parametricsurfaceseries (class in sympy.plotting.series)": [[206, "sympy.plotting.series.ParametricSurfaceSeries", false]], "parametrize_ternary_quadratic() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.parametrize_ternary_quadratic", false]], "params (sympy.plotting.series.baseseries property)": [[206, "sympy.plotting.series.BaseSeries.params", false]], "parens() (sympy.printing.pretty.stringpict.stringpict method)": [[220, "sympy.printing.pretty.stringpict.stringPict.parens", false]], "parent (sympy.physics.mechanics.joint.joint property)": [[151, "sympy.physics.mechanics.joint.Joint.parent", false]], "parent (sympy.polys.numberfields.modules.module property)": [[215, "sympy.polys.numberfields.modules.Module.parent", false]], "parent() (sympy.polys.domains.domainelement.domainelement method)": [[211, "sympy.polys.domains.domainelement.DomainElement.parent", false]], "parent() (sympy.polys.domains.gaussiandomains.gaussianelement method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianElement.parent", false]], "parent_axis (sympy.physics.mechanics.joint.joint property)": [[151, "sympy.physics.mechanics.joint.Joint.parent_axis", false]], "parent_point (sympy.physics.mechanics.joint.joint property)": [[151, "sympy.physics.mechanics.joint.Joint.parent_point", false]], "parenthesize_super() (sympy.printing.latex.latexprinter method)": [[220, "sympy.printing.latex.LatexPrinter.parenthesize_super", false]], "pareto() (in module sympy.stats)": [[240, "sympy.stats.Pareto", false]], "pargs (sympy.functions.special.delta_functions.heaviside property)": [[96, "sympy.functions.special.delta_functions.Heaviside.pargs", false]], "parity() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.parity", false]], "parse_expr() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.parse_expr", false]], "parse_latex() (in module sympy.parsing.latex)": [[130, "sympy.parsing.latex.parse_latex", false]], "parse_latex_lark() (in module sympy.parsing.latex)": [[130, "sympy.parsing.latex.parse_latex_lark", false]], "parse_mathematica() (in module sympy.parsing.mathematica)": [[130, "sympy.parsing.mathematica.parse_mathematica", false]], "parse_maxima() (in module sympy.parsing.maxima)": [[130, "sympy.parsing.maxima.parse_maxima", false]], "partial_velocity() (in module sympy.physics.vector.functions)": [[203, "sympy.physics.vector.functions.partial_velocity", false]], "partial_velocity() (sympy.physics.vector.frame.referenceframe method)": [[199, "sympy.physics.vector.frame.ReferenceFrame.partial_velocity", false]], "partial_velocity() (sympy.physics.vector.point.point method)": [[203, "sympy.physics.vector.point.Point.partial_velocity", false]], "partialderivative (class in sympy.tensor.toperators)": [[247, "sympy.tensor.toperators.PartialDerivative", false]], "particle (class in sympy.physics.mechanics.particle)": [[154, "sympy.physics.mechanics.particle.Particle", false]], "particular() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.particular", false]], "partition (class in sympy.combinatorics.partitions)": [[77, "sympy.combinatorics.partitions.Partition", false]], "partition (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.partition", false]], "partition (sympy.combinatorics.partitions.partition property)": [[77, "sympy.combinatorics.partitions.Partition.partition", false]], "partition() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.partition", false]], "partitions() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.partitions", false]], "pat_matrix() (in module sympy.physics.matrices)": [[146, "sympy.physics.matrices.pat_matrix", false]], "patch (class in sympy.diffgeom)": [[90, "sympy.diffgeom.Patch", false]], "pathway (sympy.physics.mechanics.actuator.forceactuator property)": [[147, "sympy.physics.mechanics.actuator.ForceActuator.pathway", false]], "pathwaybase (class in sympy.physics.mechanics.pathway)": [[155, "sympy.physics.mechanics.pathway.PathwayBase", false]], "pde_1st_linear_constant_coeff() (in module sympy.solvers.pde)": [[237, "sympy.solvers.pde.pde_1st_linear_constant_coeff", false]], "pde_1st_linear_constant_coeff_homogeneous() (in module sympy.solvers.pde)": [[237, "sympy.solvers.pde.pde_1st_linear_constant_coeff_homogeneous", false]], "pde_1st_linear_variable_coeff() (in module sympy.solvers.pde)": [[237, "sympy.solvers.pde.pde_1st_linear_variable_coeff", false]], "pde_separate() (in module sympy.solvers.pde)": [[237, "sympy.solvers.pde.pde_separate", false]], "pde_separate_add() (in module sympy.solvers.pde)": [[237, "sympy.solvers.pde.pde_separate_add", false]], "pde_separate_mul() (in module sympy.solvers.pde)": [[237, "sympy.solvers.pde.pde_separate_mul", false]], "pdiv() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.pdiv", false]], "pdiv() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.pdiv", false]], "pdiv() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.pdiv", false]], "pdiv() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.pdiv", false]], "pdsolve() (in module sympy.solvers.pde)": [[237, "sympy.solvers.pde.pdsolve", false]], "peak_isometric_force (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.peak_isometric_force", false]], "pep 335": [[88, "index-0", false], [88, "index-1", false], [88, "index-2", false], [88, "index-3", false]], "per() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.per", false]], "per() (sympy.polys.polyclasses.dmf method)": [[211, "sympy.polys.polyclasses.DMF.per", false]], "per() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.per", false]], "perfect_power() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.perfect_power", false]], "periapsis (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.periapsis", false]], "perimeter (sympy.geometry.polygon.polygon property)": [[104, "sympy.geometry.polygon.Polygon.perimeter", false]], "period_find() (in module sympy.physics.quantum.shor)": [[186, "sympy.physics.quantum.shor.period_find", false]], "periodic_argument (class in sympy.functions.elementary.complexes)": [[94, "sympy.functions.elementary.complexes.periodic_argument", false]], "periodicity() (in module sympy.calculus.util)": [[67, "sympy.calculus.util.periodicity", false]], "perm2tensor() (sympy.tensor.tensor.tensmul method)": [[246, "sympy.tensor.tensor.TensMul.perm2tensor", false]], "permutation (class in sympy.combinatorics.permutations)": [[80, "sympy.combinatorics.permutations.Permutation", false]], "permutationgroup (class in sympy.combinatorics.perm_groups)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup", false]], "permutationmatrix (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.PermutationMatrix", false]], "permutationoperator (class in sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.PermutationOperator", false]], "permute() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.permute", false]], "permute() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.permute", false]], "permute_cols() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.permute_cols", false]], "permute_rows() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.permute_rows", false]], "permute_signs() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.permute_signs", false]], "permutebkwd() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.permuteBkwd", false]], "permutedims (class in sympy.tensor.array.expressions)": [[242, "sympy.tensor.array.expressions.PermuteDims", false]], "permutedims() (in module sympy.tensor.array)": [[241, "sympy.tensor.array.permutedims", false]], "permutefwd() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.permuteFwd", false]], "perpendicular_bisector() (sympy.geometry.line.segment method)": [[101, "sympy.geometry.line.Segment.perpendicular_bisector", false]], "perpendicular_line() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.perpendicular_line", false]], "perpendicular_line() (sympy.geometry.line.linearentity2d method)": [[101, "sympy.geometry.line.LinearEntity2D.perpendicular_line", false]], "perpendicular_line() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.perpendicular_line", false]], "perpendicular_plane() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.perpendicular_plane", false]], "perpendicular_segment() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.perpendicular_segment", false]], "pexquo() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.pexquo", false]], "pexquo() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.pexquo", false]], "pexquo() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.pexquo", false]], "pexquo() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.pexquo", false]], "pgl2f5() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.PGL2F5", false]], "pgroup (sympy.combinatorics.polyhedron.polyhedron property)": [[81, "sympy.combinatorics.polyhedron.Polyhedron.pgroup", false]], "phase (in module sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.Phase", false]], "phase (sympy.physics.optics.waves.twave property)": [[164, "sympy.physics.optics.waves.TWave.phase", false]], "phase_retarder() (in module sympy.physics.optics.polarization)": [[162, "sympy.physics.optics.polarization.phase_retarder", false]], "phasegate (class in sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.PhaseGate", false]], "pi (class in sympy.core.numbers)": [[88, "sympy.core.numbers.Pi", false]], "pi_hex_digits() (in module sympy.ntheory.bbp_pi)": [[128, "sympy.ntheory.bbp_pi.pi_hex_digits", false]], "piabbra (class in sympy.physics.quantum.piab)": [[181, "sympy.physics.quantum.piab.PIABBra", false]], "piabhamiltonian (class in sympy.physics.quantum.piab)": [[181, "sympy.physics.quantum.piab.PIABHamiltonian", false]], "piabket (class in sympy.physics.quantum.piab)": [[181, "sympy.physics.quantum.piab.PIABKet", false]], "piecewise (class in sympy.functions.elementary.piecewise)": [[94, "sympy.functions.elementary.piecewise.Piecewise", false]], "piecewise_exclusive() (in module sympy.functions.elementary.piecewise)": [[94, "sympy.functions.elementary.piecewise.piecewise_exclusive", false]], "piecewise_fold() (in module sympy.functions.elementary.piecewise)": [[94, "sympy.functions.elementary.piecewise.piecewise_fold", false]], "piecewise_integrate() (sympy.functions.elementary.piecewise.piecewise method)": [[94, "sympy.functions.elementary.piecewise.Piecewise.piecewise_integrate", false]], "pinjoint (class in sympy.physics.mechanics.joint)": [[151, "sympy.physics.mechanics.joint.PinJoint", false]], "pinv() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.pinv", false]], "pinv_solve() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.pinv_solve", false]], "planar_coordinates (sympy.physics.mechanics.joint.planarjoint property)": [[151, "sympy.physics.mechanics.joint.PlanarJoint.planar_coordinates", false]], "planar_speeds (sympy.physics.mechanics.joint.planarjoint property)": [[151, "sympy.physics.mechanics.joint.PlanarJoint.planar_speeds", false]], "planar_vectors (sympy.physics.mechanics.joint.planarjoint property)": [[151, "sympy.physics.mechanics.joint.PlanarJoint.planar_vectors", false]], "planarjoint (class in sympy.physics.mechanics.joint)": [[151, "sympy.physics.mechanics.joint.PlanarJoint", false]], "plane (class in sympy.geometry.plane)": [[102, "sympy.geometry.plane.Plane", false]], "plot (class in sympy.plotting.plot)": [[206, "sympy.plotting.plot.Plot", false]], "plot() (in module sympy.plotting.plot)": [[206, "sympy.plotting.plot.plot", false]], "plot3d() (in module sympy.plotting.plot)": [[206, "sympy.plotting.plot.plot3d", false]], "plot3d_parametric_line() (in module sympy.plotting.plot)": [[206, "sympy.plotting.plot.plot3d_parametric_line", false]], "plot3d_parametric_surface() (in module sympy.plotting.plot)": [[206, "sympy.plotting.plot.plot3d_parametric_surface", false]], "plot_bending_moment() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.plot_bending_moment", false]], "plot_bending_moment() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.plot_bending_moment", false]], "plot_deflection() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.plot_deflection", false]], "plot_deflection() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.plot_deflection", false]], "plot_gate() (sympy.physics.quantum.gate.cgate method)": [[174, "sympy.physics.quantum.gate.CGate.plot_gate", false]], "plot_ild_moment() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.plot_ild_moment", false]], "plot_ild_reactions() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.plot_ild_reactions", false]], "plot_ild_shear() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.plot_ild_shear", false]], "plot_implicit() (in module sympy.plotting.plot_implicit)": [[206, "sympy.plotting.plot_implicit.plot_implicit", false]], "plot_interval() (sympy.geometry.curve.curve method)": [[97, "sympy.geometry.curve.Curve.plot_interval", false]], "plot_interval() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.plot_interval", false]], "plot_interval() (sympy.geometry.line.line method)": [[101, "sympy.geometry.line.Line.plot_interval", false]], "plot_interval() (sympy.geometry.line.ray method)": [[101, "sympy.geometry.line.Ray.plot_interval", false]], "plot_interval() (sympy.geometry.line.segment method)": [[101, "sympy.geometry.line.Segment.plot_interval", false]], "plot_interval() (sympy.geometry.polygon.polygon method)": [[104, "sympy.geometry.polygon.Polygon.plot_interval", false]], "plot_loading_results() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.plot_loading_results", false]], "plot_loading_results() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.plot_loading_results", false]], "plot_parametric() (in module sympy.plotting.plot)": [[206, "sympy.plotting.plot.plot_parametric", false]], "plot_shear_force() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.plot_shear_force", false]], "plot_shear_force() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.plot_shear_force", false]], "plot_shear_stress() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.plot_shear_stress", false]], "plot_shear_stress() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.plot_shear_stress", false]], "plot_slope() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.plot_slope", false]], "plot_slope() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.plot_slope", false]], "plot_tension() (sympy.physics.continuum_mechanics.cable.cable method)": [[137, "sympy.physics.continuum_mechanics.cable.Cable.plot_tension", false]], "plotgrid (class in sympy.plotting.plot)": [[206, "sympy.plotting.plot.PlotGrid", false]], "point (class in sympy.diffgeom)": [[90, "sympy.diffgeom.Point", false]], "point (class in sympy.geometry.point)": [[103, "sympy.geometry.point.Point", false]], "point (class in sympy.physics.vector.point)": [[203, "sympy.physics.vector.point.Point", false]], "point (sympy.core.function.subs property)": [[88, "sympy.core.function.Subs.point", false]], "point (sympy.physics.mechanics.body.body property)": [[148, "sympy.physics.mechanics.body.Body.point", false]], "point (sympy.physics.mechanics.particle.particle property)": [[154, "sympy.physics.mechanics.particle.Particle.point", false]], "point (sympy.physics.mechanics.wrapping_geometry.wrappingcylinder property)": [[158, "sympy.physics.mechanics.wrapping_geometry.WrappingCylinder.point", false]], "point (sympy.physics.mechanics.wrapping_geometry.wrappinggeometrybase property)": [[158, "sympy.physics.mechanics.wrapping_geometry.WrappingGeometryBase.point", false]], "point (sympy.physics.mechanics.wrapping_geometry.wrappingsphere property)": [[158, "sympy.physics.mechanics.wrapping_geometry.WrappingSphere.point", false]], "point() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.point", false]], "point2d (class in sympy.geometry.point)": [[103, "sympy.geometry.point.Point2D", false]], "point3d (class in sympy.geometry.point)": [[103, "sympy.geometry.point.Point3D", false]], "point_cflexure() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.point_cflexure", false]], "point_on_surface() (sympy.physics.mechanics.wrapping_geometry.wrappingcylinder method)": [[158, "sympy.physics.mechanics.wrapping_geometry.WrappingCylinder.point_on_surface", false]], "point_on_surface() (sympy.physics.mechanics.wrapping_geometry.wrappinggeometrybase method)": [[158, "sympy.physics.mechanics.wrapping_geometry.WrappingGeometryBase.point_on_surface", false]], "point_on_surface() (sympy.physics.mechanics.wrapping_geometry.wrappingsphere method)": [[158, "sympy.physics.mechanics.wrapping_geometry.WrappingSphere.point_on_surface", false]], "point_to_coords() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.point_to_coords", false]], "pointer (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Pointer", false]], "points (sympy.geometry.line.linearentity property)": [[101, "sympy.geometry.line.LinearEntity.points", false]], "pointwise_stabilizer() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.pointwise_stabilizer", false]], "poisson() (in module sympy.stats)": [[240, "sympy.stats.Poisson", false]], "poissonprocess (class in sympy.stats)": [[240, "sympy.stats.PoissonProcess", false]], "polar_lift (class in sympy.functions.elementary.complexes)": [[94, "sympy.functions.elementary.complexes.polar_lift", false]], "polar_moment() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.polar_moment", false]], "polar_second_moment_of_area() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.polar_second_moment_of_area", false]], "polar_second_moment_of_area() (sympy.geometry.polygon.polygon method)": [[104, "sympy.geometry.polygon.Polygon.polar_second_moment_of_area", false]], "polarcomplexregion (class in sympy.sets.fancysets)": [[228, "sympy.sets.fancysets.PolarComplexRegion", false]], "polarizing_beam_splitter() (in module sympy.physics.optics.polarization)": [[162, "sympy.physics.optics.polarization.polarizing_beam_splitter", false]], "pole_zero_numerical_data() (sympy.physics.control.control_plots method)": [[141, "sympy.physics.control.control_plots.pole_zero_numerical_data", false]], "pole_zero_plot() (sympy.physics.control.control_plots method)": [[141, "sympy.physics.control.control_plots.pole_zero_plot", false]], "poleerror (class in sympy.core.function)": [[88, "sympy.core.function.PoleError", false]], "poles() (sympy.physics.control.lti.transferfunction method)": [[143, "sympy.physics.control.lti.TransferFunction.poles", false]], "polificationfailed (class in sympy.polys.polyerrors)": [[213, "sympy.polys.polyerrors.PolificationFailed", false]], "pollard_pm1() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.pollard_pm1", false]], "pollard_rho() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.pollard_rho", false]], "poly (class in sympy.polys.polytools)": [[216, "sympy.polys.polytools.Poly", false]], "poly() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.poly", false]], "poly() (sympy.polys.numberfields.modules.powerbasiselement method)": [[215, "sympy.polys.numberfields.modules.PowerBasisElement.poly", false]], "poly_from_expr() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.poly_from_expr", false]], "poly_ring() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.poly_ring", false]], "poly_unify() (sympy.polys.polyclasses.dmf method)": [[211, "sympy.polys.polyclasses.DMF.poly_unify", false]], "polycyclic_group() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.polycyclic_group", false]], "polyelement (class in sympy.polys.rings)": [[211, "sympy.polys.rings.PolyElement", false]], "polygamma (class in sympy.functions.special.gamma_functions)": [[96, "sympy.functions.special.gamma_functions.polygamma", false]], "polygon (class in sympy.geometry.polygon)": [[104, "sympy.geometry.polygon.Polygon", false]], "polyhedron (class in sympy.combinatorics.polyhedron)": [[81, "sympy.combinatorics.polyhedron.Polyhedron", false]], "polylog (class in sympy.functions.special.zeta_functions)": [[96, "sympy.functions.special.zeta_functions.polylog", false]], "polynomial() (sympy.series.formal.formalpowerseries method)": [[222, "sympy.series.formal.FormalPowerSeries.polynomial", false]], "polynomial_congruence() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.polynomial_congruence", false]], "polynomialerror (class in sympy.polys.polyerrors)": [[213, "sympy.polys.polyerrors.PolynomialError", false]], "polynomialring (class in sympy.polys.domains)": [[211, "sympy.polys.domains.PolynomialRing", false]], "polyring (class in sympy.polys.rings)": [[211, "sympy.polys.rings.PolyRing", false]], "polys": [[15, "term-Polys", true]], "polytope_integrate() (in module sympy.integrals.intpoly)": [[115, "sympy.integrals.intpoly.polytope_integrate", false]], "pos() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.pos", false]], "pos_from() (sympy.physics.vector.point.point method)": [[203, "sympy.physics.vector.point.Point.pos_from", false]], "posform() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.POSform", false]], "posify() (in module sympy.simplify.simplify)": [[232, "sympy.simplify.simplify.posify", false]], "position (sympy.physics.quantum.cartesian.xbra property)": [[168, "sympy.physics.quantum.cartesian.XBra.position", false]], "position (sympy.physics.quantum.cartesian.xket property)": [[168, "sympy.physics.quantum.cartesian.XKet.position", false]], "position_wrt() (sympy.vector.coordsysrect.coordsys3d method)": [[264, "sympy.vector.coordsysrect.CoordSys3D.position_wrt", false]], "position_x (sympy.physics.quantum.cartesian.positionstate3d property)": [[168, "sympy.physics.quantum.cartesian.PositionState3D.position_x", false]], "position_y (sympy.physics.quantum.cartesian.positionstate3d property)": [[168, "sympy.physics.quantum.cartesian.PositionState3D.position_y", false]], "position_z (sympy.physics.quantum.cartesian.positionstate3d property)": [[168, "sympy.physics.quantum.cartesian.PositionState3D.position_z", false]], "positionbra3d (class in sympy.physics.quantum.cartesian)": [[168, "sympy.physics.quantum.cartesian.PositionBra3D", false]], "positionket3d (class in sympy.physics.quantum.cartesian)": [[168, "sympy.physics.quantum.cartesian.PositionKet3D", false]], "positionstate3d (class in sympy.physics.quantum.cartesian)": [[168, "sympy.physics.quantum.cartesian.PositionState3D", false]], "positive": [[88, "term-positive", true]], "positive_roots() (sympy.liealgebras.type_a.typea method)": [[117, "sympy.liealgebras.type_a.TypeA.positive_roots", false]], "positive_roots() (sympy.liealgebras.type_b.typeb method)": [[117, "sympy.liealgebras.type_b.TypeB.positive_roots", false]], "positive_roots() (sympy.liealgebras.type_c.typec method)": [[117, "sympy.liealgebras.type_c.TypeC.positive_roots", false]], "positive_roots() (sympy.liealgebras.type_d.typed method)": [[117, "sympy.liealgebras.type_d.TypeD.positive_roots", false]], "positive_roots() (sympy.liealgebras.type_e.typee method)": [[117, "sympy.liealgebras.type_e.TypeE.positive_roots", false]], "positive_roots() (sympy.liealgebras.type_f.typef method)": [[117, "sympy.liealgebras.type_f.TypeF.positive_roots", false]], "positive_roots() (sympy.liealgebras.type_g.typeg method)": [[117, "sympy.liealgebras.type_g.TypeG.positive_roots", false]], "positivedefinitepredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.PositiveDefinitePredicate", false]], "positivepredicate (class in sympy.assumptions.predicates.order)": [[65, "sympy.assumptions.predicates.order.PositivePredicate", false]], "postdecrement (class in sympy.codegen.cnodes)": [[69, "sympy.codegen.cnodes.PostDecrement", false]], "postfixes() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.postfixes", false]], "postincrement (class in sympy.codegen.cnodes)": [[69, "sympy.codegen.cnodes.PostIncrement", false]], "postorder_traversal() (in module sympy.core.traversal)": [[88, "sympy.core.traversal.postorder_traversal", false]], "potential_energy (sympy.physics.mechanics.body.body property)": [[148, "sympy.physics.mechanics.body.Body.potential_energy", false]], "potential_energy (sympy.physics.mechanics.particle.particle property)": [[154, "sympy.physics.mechanics.particle.Particle.potential_energy", false]], "potential_energy (sympy.physics.mechanics.rigidbody.rigidbody property)": [[154, "sympy.physics.mechanics.rigidbody.RigidBody.potential_energy", false]], "potential_energy() (in module sympy.physics.mechanics.functions)": [[154, "sympy.physics.mechanics.functions.potential_energy", false]], "pow (class in sympy.core.power)": [[88, "sympy.core.power.Pow", false]], "pow() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.pow", false]], "pow() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.pow", false]], "pow() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.pow", false]], "pow() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.pow", false]], "pow() (sympy.polys.polyclasses.anp method)": [[211, "sympy.polys.polyclasses.ANP.pow", false]], "pow() (sympy.polys.polyclasses.dmf method)": [[211, "sympy.polys.polyclasses.DMF.pow", false]], "pow() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.pow", false]], "pow() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.pow", false]], "pow_cos_sin() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.pow_cos_sin", false]], "pow_xin() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.pow_xin", false]], "powdenest() (in module sympy.simplify.powsimp)": [[232, "sympy.simplify.powsimp.powdenest", false]], "power_basis_ancestor() (sympy.polys.numberfields.modules.module method)": [[215, "sympy.polys.numberfields.modules.Module.power_basis_ancestor", false]], "power_representation() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.power_representation", false]], "powerbasis (class in sympy.polys.numberfields.modules)": [[215, "sympy.polys.numberfields.modules.PowerBasis", false]], "powerbasiselement (class in sympy.polys.numberfields.modules)": [[215, "sympy.polys.numberfields.modules.PowerBasisElement", false]], "powerfunction() (in module sympy.stats)": [[240, "sympy.stats.PowerFunction", false]], "powerset (class in sympy.sets.powerset)": [[228, "sympy.sets.powerset.PowerSet", false]], "powerset() (sympy.sets.sets.set method)": [[228, "sympy.sets.sets.Set.powerset", false]], "powsimp() (in module sympy.simplify.powsimp)": [[232, "sympy.simplify.powsimp.powsimp", false]], "powsimp() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.powsimp", false]], "pprint_nodes() (in module sympy.printing.tree)": [[220, "sympy.printing.tree.pprint_nodes", false]], "pqa() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.PQa", false]], "pquo() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.pquo", false]], "pquo() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.pquo", false]], "pquo() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.pquo", false]], "pquo() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.pquo", false]], "precedence (in module sympy.printing.precedence)": [[220, "sympy.printing.precedence.PRECEDENCE", false]], "precedence() (in module sympy.printing.precedence)": [[220, "sympy.printing.precedence.precedence", false]], "precedence_functions (in module sympy.printing.precedence)": [[220, "sympy.printing.precedence.PRECEDENCE_FUNCTIONS", false]], "precedence_values (in module sympy.printing.precedence)": [[220, "sympy.printing.precedence.PRECEDENCE_VALUES", false]], "precisionexhausted (class in sympy.core.evalf)": [[88, "sympy.core.evalf.PrecisionExhausted", false]], "predecrement (class in sympy.codegen.cnodes)": [[69, "sympy.codegen.cnodes.PreDecrement", false]], "predicate (class in sympy.assumptions.assume)": [[63, "sympy.assumptions.assume.Predicate", false]], "preferred_index (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[96, "sympy.functions.special.tensor_functions.KroneckerDelta.preferred_index", false]], "preferred_index (sympy.physics.secondquant.kroneckerdelta property)": [[190, "sympy.physics.secondquant.KroneckerDelta.preferred_index", false]], "prefix (class in sympy.physics.units.prefixes)": [[196, "sympy.physics.units.prefixes.Prefix", false]], "prefixes() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.prefixes", false]], "preincrement (class in sympy.codegen.cnodes)": [[69, "sympy.codegen.cnodes.PreIncrement", false]], "prem() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.prem", false]], "prem() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.prem", false]], "prem() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.prem", false]], "prem() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.prem", false]], "premises (sympy.categories.diagram property)": [[68, "sympy.categories.Diagram.premises", false]], "preorder_traversal() (in module sympy.core.traversal)": [[88, "sympy.core.traversal.preorder_traversal", false]], "presentation() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.presentation", false]], "pretty() (in module sympy.printing.pretty.pretty)": [[220, "sympy.printing.pretty.pretty.pretty", false]], "pretty_atom() (in module sympy.printing.pretty.pretty_symbology)": [[220, "sympy.printing.pretty.pretty_symbology.pretty_atom", false]], "pretty_print() (in module sympy.printing.pretty.pretty)": [[220, "sympy.printing.pretty.pretty.pretty_print", false]], "pretty_symbol() (in module sympy.printing.pretty.pretty_symbology)": [[220, "sympy.printing.pretty.pretty_symbology.pretty_symbol", false]], "pretty_try_use_unicode() (in module sympy.printing.pretty.pretty_symbology)": [[220, "sympy.printing.pretty.pretty_symbology.pretty_try_use_unicode", false]], "pretty_use_unicode() (in module sympy.printing.pretty.pretty_symbology)": [[220, "sympy.printing.pretty.pretty_symbology.pretty_use_unicode", false]], "prettyform (class in sympy.printing.pretty.stringpict)": [[220, "sympy.printing.pretty.stringpict.prettyForm", false]], "prettyprinter (class in sympy.printing.pretty.pretty)": [[220, "sympy.printing.pretty.pretty.PrettyPrinter", false]], "prev() (sympy.combinatorics.prufer.prufer method)": [[82, "sympy.combinatorics.prufer.Prufer.prev", false]], "prev_binary() (sympy.combinatorics.subsets.subset method)": [[83, "sympy.combinatorics.subsets.Subset.prev_binary", false]], "prev_gray() (sympy.combinatorics.subsets.subset method)": [[83, "sympy.combinatorics.subsets.Subset.prev_gray", false]], "prev_lex() (sympy.combinatorics.partitions.integerpartition method)": [[77, "sympy.combinatorics.partitions.IntegerPartition.prev_lex", false]], "prev_lexicographic() (sympy.combinatorics.subsets.subset method)": [[83, "sympy.combinatorics.subsets.Subset.prev_lexicographic", false]], "preview() (in module sympy.printing.preview)": [[220, "sympy.printing.preview.preview", false]], "preview_diagram() (in module sympy.categories.diagram_drawing)": [[68, "sympy.categories.diagram_drawing.preview_diagram", false]], "prevprime() (in module sympy.ntheory.generate)": [[128, "sympy.ntheory.generate.prevprime", false]], "prime": [[88, "term-prime", true]], "prime() (in module sympy.ntheory.generate)": [[128, "sympy.ntheory.generate.prime", false]], "prime_as_sum_of_two_squares() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.prime_as_sum_of_two_squares", false]], "prime_decomp() (in module sympy.polys.numberfields.primes)": [[215, "sympy.polys.numberfields.primes.prime_decomp", false]], "prime_valuation() (in module sympy.polys.numberfields.primes)": [[215, "sympy.polys.numberfields.primes.prime_valuation", false]], "primefactors() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.primefactors", false]], "primeideal (class in sympy.polys.numberfields.primes)": [[215, "sympy.polys.numberfields.primes.PrimeIdeal", false]], "primenu (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.primenu", false]], "primenu() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.primenu", false]], "primeomega (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.primeomega", false]], "primeomega() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.primeomega", false]], "primepi (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.primepi", false]], "primepi() (in module sympy.ntheory.generate)": [[128, "sympy.ntheory.generate.primepi", false]], "primepredicate (class in sympy.assumptions.predicates.ntheory)": [[65, "sympy.assumptions.predicates.ntheory.PrimePredicate", false]], "primerange() (in module sympy.ntheory.generate)": [[128, "sympy.ntheory.generate.primerange", false]], "primerange() (sympy.ntheory.generate.sieve method)": [[128, "sympy.ntheory.generate.Sieve.primerange", false]], "primes_above() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.primes_above", false]], "primitive() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.primitive", false]], "primitive() (sympy.core.add.add method)": [[88, "sympy.core.add.Add.primitive", false]], "primitive() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.primitive", false]], "primitive() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.primitive", false]], "primitive() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.primitive", false]], "primitive() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.primitive", false]], "primitive() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.primitive", false]], "primitive_element() (in module sympy.polys.numberfields.subfield)": [[215, "sympy.polys.numberfields.subfield.primitive_element", false]], "primitive_element() (sympy.core.numbers.algebraicnumber method)": [[88, "sympy.core.numbers.AlgebraicNumber.primitive_element", false]], "primitive_root() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.primitive_root", false]], "primorial() (in module sympy.ntheory.generate)": [[128, "sympy.ntheory.generate.primorial", false]], "principal_branch (class in sympy.functions.elementary.complexes)": [[94, "sympy.functions.elementary.complexes.principal_branch", false]], "principal_value() (sympy.integrals.integrals.integral method)": [[115, "sympy.integrals.integrals.Integral.principal_value", false]], "print (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Print", false]], "print_ccode() (in module sympy.printing.c)": [[220, "sympy.printing.c.print_ccode", false]], "print_dim_base() (sympy.physics.units.dimensions.dimensionsystem method)": [[192, "sympy.physics.units.dimensions.DimensionSystem.print_dim_base", false]], "print_fcode() (in module sympy.printing.fortran)": [[220, "sympy.printing.fortran.print_fcode", false]], "print_gtk() (in module sympy.printing.gtk)": [[220, "sympy.printing.gtk.print_gtk", false]], "print_latex() (in module sympy.printing.latex)": [[220, "sympy.printing.latex.print_latex", false]], "print_maple_code() (in module sympy.printing.maple)": [[220, "sympy.printing.maple.print_maple_code", false]], "print_mathml() (in module sympy.printing.mathml)": [[220, "sympy.printing.mathml.print_mathml", false]], "print_node() (in module sympy.printing.tree)": [[220, "sympy.printing.tree.print_node", false]], "print_nonzero() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.print_nonzero", false]], "print_rcode() (in module sympy.printing.rcode)": [[220, "sympy.printing.rcode.print_rcode", false]], "print_tree() (in module sympy.printing.tree)": [[220, "sympy.printing.tree.print_tree", false]], "printer (class in sympy.printing.printer)": [[220, "sympy.printing.printer.Printer", false]], "printing": [[15, "term-Printing", true]], "printmethod (sympy.printing.aesaracode.aesaraprinter attribute)": [[220, "sympy.printing.aesaracode.AesaraPrinter.printmethod", false]], "printmethod (sympy.printing.c.c89codeprinter attribute)": [[220, "sympy.printing.c.C89CodePrinter.printmethod", false]], "printmethod (sympy.printing.c.c99codeprinter attribute)": [[220, "sympy.printing.c.C99CodePrinter.printmethod", false]], "printmethod (sympy.printing.codeprinter.codeprinter attribute)": [[220, "sympy.printing.codeprinter.CodePrinter.printmethod", false]], "printmethod (sympy.printing.cxx.cxx11codeprinter attribute)": [[220, "sympy.printing.cxx.CXX11CodePrinter.printmethod", false]], "printmethod (sympy.printing.cxx.cxx98codeprinter attribute)": [[220, "sympy.printing.cxx.CXX98CodePrinter.printmethod", false]], "printmethod (sympy.printing.fortran.fcodeprinter attribute)": [[220, "sympy.printing.fortran.FCodePrinter.printmethod", false]], "printmethod (sympy.printing.jscode.javascriptcodeprinter attribute)": [[220, "sympy.printing.jscode.JavascriptCodePrinter.printmethod", false]], "printmethod (sympy.printing.julia.juliacodeprinter attribute)": [[220, "sympy.printing.julia.JuliaCodePrinter.printmethod", false]], "printmethod (sympy.printing.lambdarepr.lambdaprinter attribute)": [[220, "sympy.printing.lambdarepr.LambdaPrinter.printmethod", false]], "printmethod (sympy.printing.latex.latexprinter attribute)": [[220, "sympy.printing.latex.LatexPrinter.printmethod", false]], "printmethod (sympy.printing.maple.maplecodeprinter attribute)": [[220, "sympy.printing.maple.MapleCodePrinter.printmethod", false]], "printmethod (sympy.printing.mathematica.mcodeprinter attribute)": [[220, "sympy.printing.mathematica.MCodePrinter.printmethod", false]], "printmethod (sympy.printing.mathml.mathmlcontentprinter attribute)": [[220, "sympy.printing.mathml.MathMLContentPrinter.printmethod", false]], "printmethod (sympy.printing.mathml.mathmlpresentationprinter attribute)": [[220, "sympy.printing.mathml.MathMLPresentationPrinter.printmethod", false]], "printmethod (sympy.printing.octave.octavecodeprinter attribute)": [[220, "sympy.printing.octave.OctaveCodePrinter.printmethod", false]], "printmethod (sympy.printing.pretty.pretty.prettyprinter attribute)": [[220, "sympy.printing.pretty.pretty.PrettyPrinter.printmethod", false]], "printmethod (sympy.printing.printer.printer attribute)": [[220, "sympy.printing.printer.Printer.printmethod", false]], "printmethod (sympy.printing.rcode.rcodeprinter attribute)": [[220, "sympy.printing.rcode.RCodePrinter.printmethod", false]], "printmethod (sympy.printing.repr.reprprinter attribute)": [[220, "sympy.printing.repr.ReprPrinter.printmethod", false]], "printmethod (sympy.printing.rust.rustcodeprinter attribute)": [[220, "sympy.printing.rust.RustCodePrinter.printmethod", false]], "printmethod (sympy.printing.smtlib.smtlibprinter attribute)": [[220, "sympy.printing.smtlib.SMTLibPrinter.printmethod", false]], "printmethod (sympy.printing.str.strprinter attribute)": [[220, "sympy.printing.str.StrPrinter.printmethod", false]], "prismaticjoint (class in sympy.physics.mechanics.joint)": [[151, "sympy.physics.mechanics.joint.PrismaticJoint", false]], "prob() (sympy.physics.quantum.state.wavefunction method)": [[188, "sympy.physics.quantum.state.Wavefunction.prob", false]], "probability (class in sympy.stats)": [[240, "sympy.stats.Probability", false]], "probability() (sympy.stats.bernoulliprocess method)": [[240, "sympy.stats.BernoulliProcess.probability", false]], "process_series() (sympy.plotting.plot.matplotlibbackend method)": [[206, "sympy.plotting.plot.MatplotlibBackend.process_series", false]], "prod() (in module sympy.core.mul)": [[88, "sympy.core.mul.prod", false]], "product (class in sympy.concrete.products)": [[87, "sympy.concrete.products.Product", false]], "product() (in module sympy.concrete.products)": [[87, "sympy.concrete.products.product", false]], "product() (sympy.polys.agca.ideals.ideal method)": [[207, "sympy.polys.agca.ideals.Ideal.product", false]], "product() (sympy.series.formal.formalpowerseries method)": [[222, "sympy.series.formal.FormalPowerSeries.product", false]], "product_matrix_left (sympy.algebras.quaternion property)": [[61, "sympy.algebras.Quaternion.product_matrix_left", false]], "product_matrix_right (sympy.algebras.quaternion property)": [[61, "sympy.algebras.Quaternion.product_matrix_right", false]], "productdomain (class in sympy.stats.rv)": [[240, "sympy.stats.rv.ProductDomain", false]], "productpspace (class in sympy.stats.rv)": [[240, "sympy.stats.rv.ProductPSpace", false]], "productset (class in sympy.sets.sets)": [[228, "sympy.sets.sets.ProductSet", false]], "program (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.Program", false]], "project() (sympy.geometry.point.point static method)": [[103, "sympy.geometry.point.Point.project", false]], "project() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.project", false]], "projection() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.projection", false]], "projection() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.projection", false]], "projection() (sympy.vector.vector.vector method)": [[264, "sympy.vector.vector.Vector.projection", false]], "projection_line() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.projection_line", false]], "proper_divisor_count() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.proper_divisor_count", false]], "proper_divisors() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.proper_divisors", false]], "proth_test() (in module sympy.ntheory.primetest)": [[128, "sympy.ntheory.primetest.proth_test", false]], "prufer (class in sympy.combinatorics.prufer)": [[82, "sympy.combinatorics.prufer.Prufer", false]], "prufer_rank() (sympy.combinatorics.prufer.prufer method)": [[82, "sympy.combinatorics.prufer.Prufer.prufer_rank", false]], "prufer_repr (sympy.combinatorics.prufer.prufer property)": [[82, "sympy.combinatorics.prufer.Prufer.prufer_repr", false]], "psets (sympy.sets.fancysets.complexregion property)": [[228, "sympy.sets.fancysets.ComplexRegion.psets", false]], "psi_n() (in module sympy.physics.qho_1d)": [[166, "sympy.physics.qho_1d.psi_n", false]], "psi_nlm() (in module sympy.physics.hydrogen)": [[145, "sympy.physics.hydrogen.Psi_nlm", false]], "psl2f5() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.PSL2F5", false]], "pspace (class in sympy.stats.rv)": [[240, "sympy.stats.rv.PSpace", false]], "pspace() (in module sympy.stats.rv)": [[240, "sympy.stats.rv.pspace", false]], "public() (in module sympy.utilities.decorator)": [[254, "sympy.utilities.decorator.public", false]], "purepoly (class in sympy.polys.polytools)": [[216, "sympy.polys.polytools.PurePoly", false]], "pxbra (class in sympy.physics.quantum.cartesian)": [[168, "sympy.physics.quantum.cartesian.PxBra", false]], "pxket (class in sympy.physics.quantum.cartesian)": [[168, "sympy.physics.quantum.cartesian.PxKet", false]], "pxop (class in sympy.physics.quantum.cartesian)": [[168, "sympy.physics.quantum.cartesian.PxOp", false]], "pycode() (in module sympy.printing.pycode)": [[220, "sympy.printing.pycode.pycode", false]], "pytestreporter (class in sympy.testing.runtests)": [[251, "sympy.testing.runtests.PyTestReporter", false]], "python enhancement proposals": [[88, "index-0", false], [88, "index-1", false], [88, "index-2", false], [88, "index-3", false]], "pythonfinitefield (class in sympy.polys.domains)": [[211, "sympy.polys.domains.PythonFiniteField", false]], "pythonintegerring (class in sympy.polys.domains)": [[211, "sympy.polys.domains.PythonIntegerRing", false]], "pythonmpq (class in sympy.external.pythonmpq)": [[211, "sympy.external.pythonmpq.PythonMPQ", false]], "pythonrationalfield (class in sympy.polys.domains)": [[211, "sympy.polys.domains.PythonRationalField", false]], "q (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[148, "sympy.physics.mechanics.jointsmethod.JointsMethod.q", false]], "q (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.q", false]], "q (sympy.physics.optics.gaussopt.beamparameter property)": [[159, "sympy.physics.optics.gaussopt.BeamParameter.q", false]], "q_dep (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.q_dep", false]], "q_ind (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.q_ind", false]], "qapply() (in module sympy.physics.quantum.qapply)": [[182, "sympy.physics.quantum.qapply.qapply", false]], "qft (class in sympy.physics.quantum.qft)": [[183, "sympy.physics.quantum.qft.QFT", false]], "qq_col (sympy.polys.numberfields.modules.moduleelement property)": [[215, "sympy.polys.numberfields.modules.ModuleElement.QQ_col", false]], "qq_matrix (sympy.polys.numberfields.modules.submodule property)": [[215, "sympy.polys.numberfields.modules.Submodule.QQ_matrix", false]], "qrdecomposition() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.QRdecomposition", false]], "qrsolve() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.QRsolve", false]], "qs() (in module sympy.ntheory.qs)": [[128, "sympy.ntheory.qs.qs", false]], "quadrant() (sympy.polys.domains.gaussiandomains.gaussianelement method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianElement.quadrant", false]], "quadratic_congruence() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.quadratic_congruence", false]], "quadratic_residues() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.quadratic_residues", false]], "quadraticu() (in module sympy.stats)": [[240, "sympy.stats.QuadraticU", false]], "quantile() (in module sympy.stats)": [[240, "sympy.stats.quantile", false]], "quantity (class in sympy.physics.units.quantities)": [[197, "sympy.physics.units.quantities.Quantity", false]], "quarter_wave_retarder() (in module sympy.physics.optics.polarization)": [[162, "sympy.physics.optics.polarization.quarter_wave_retarder", false]], "quaternion (class in sympy.algebras)": [[61, "sympy.algebras.Quaternion", false]], "quaternionorienter (class in sympy.vector.orienters)": [[266, "sympy.vector.orienters.QuaternionOrienter", false]], "qubit (class in sympy.physics.quantum.qubit)": [[184, "sympy.physics.quantum.qubit.Qubit", false]], "qubit_to_matrix() (in module sympy.physics.quantum.qubit)": [[184, "sympy.physics.quantum.qubit.qubit_to_matrix", false]], "qubitbra (class in sympy.physics.quantum.qubit)": [[184, "sympy.physics.quantum.qubit.QubitBra", false]], "quo() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.quo", false]], "quo() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.quo", false]], "quo() (sympy.polys.domains.field.field method)": [[211, "sympy.polys.domains.field.Field.quo", false]], "quo() (sympy.polys.domains.gmpyrationalfield method)": [[211, "sympy.polys.domains.GMPYRationalField.quo", false]], "quo() (sympy.polys.domains.rationalfield method)": [[211, "sympy.polys.domains.RationalField.quo", false]], "quo() (sympy.polys.domains.ring.ring method)": [[211, "sympy.polys.domains.ring.Ring.quo", false]], "quo() (sympy.polys.polyclasses.dmf method)": [[211, "sympy.polys.polyclasses.DMF.quo", false]], "quo() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.quo", false]], "quo() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.quo", false]], "quo_ground() (sympy.polys.polyclasses.anp method)": [[211, "sympy.polys.polyclasses.ANP.quo_ground", false]], "quo_ground() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.quo_ground", false]], "quo_ground() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.quo_ground", false]], "quotedstring (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.QuotedString", false]], "quotient() (sympy.polys.agca.ideals.ideal method)": [[207, "sympy.polys.agca.ideals.Ideal.quotient", false]], "quotient_codomain() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[207, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.quotient_codomain", false]], "quotient_domain() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[207, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.quotient_domain", false]], "quotient_hom() (sympy.polys.agca.modules.quotientmodule method)": [[207, "sympy.polys.agca.modules.QuotientModule.quotient_hom", false]], "quotient_hom() (sympy.polys.agca.modules.subquotientmodule method)": [[207, "sympy.polys.agca.modules.SubQuotientModule.quotient_hom", false]], "quotient_module() (sympy.polys.agca.modules.freemodule method)": [[207, "sympy.polys.agca.modules.FreeModule.quotient_module", false]], "quotient_module() (sympy.polys.agca.modules.module method)": [[207, "sympy.polys.agca.modules.Module.quotient_module", false]], "quotient_module() (sympy.polys.agca.modules.submodule method)": [[207, "sympy.polys.agca.modules.SubModule.quotient_module", false]], "quotient_ring() (sympy.polys.domains.ring.ring method)": [[211, "sympy.polys.domains.ring.Ring.quotient_ring", false]], "quotientmodule (class in sympy.polys.agca.modules)": [[207, "sympy.polys.agca.modules.QuotientModule", false]], "quotientmoduleelement (class in sympy.polys.agca.modules)": [[207, "sympy.polys.agca.modules.QuotientModuleElement", false]], "quotientring (class in sympy.polys.domains.quotientring)": [[211, "sympy.polys.domains.quotientring.QuotientRing", false]], "r (class in sympy.polys.matrices.dense)": [[209, "sympy.polys.matrices.dense.R", false]], "r (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.r", false]], "r (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.r", false]], "r (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[131, "sympy.physics.biomechanics.activation.ZerothOrderActivation.r", false]], "r (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.r", false]], "r_nl() (in module sympy.physics.hydrogen)": [[145, "sympy.physics.hydrogen.R_nl", false]], "r_nl() (in module sympy.physics.sho)": [[191, "sympy.physics.sho.R_nl", false]], "racah() (in module sympy.physics.wigner)": [[205, "sympy.physics.wigner.racah", false]], "rad_rationalize() (in module sympy.simplify.radsimp)": [[232, "sympy.simplify.radsimp.rad_rationalize", false]], "rademacher() (in module sympy.stats)": [[240, "sympy.stats.Rademacher", false]], "radical() (sympy.polys.agca.ideals.ideal method)": [[207, "sympy.polys.agca.ideals.Ideal.radical", false]], "radius (sympy.geometry.ellipse.circle property)": [[98, "sympy.geometry.ellipse.Circle.radius", false]], "radius (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.radius", false]], "radius (sympy.physics.mechanics.wrapping_geometry.wrappingcylinder property)": [[158, "sympy.physics.mechanics.wrapping_geometry.WrappingCylinder.radius", false]], "radius (sympy.physics.mechanics.wrapping_geometry.wrappingsphere property)": [[158, "sympy.physics.mechanics.wrapping_geometry.WrappingSphere.radius", false]], "radius (sympy.physics.optics.gaussopt.beamparameter property)": [[159, "sympy.physics.optics.gaussopt.BeamParameter.radius", false]], "radius_of_convergence (sympy.functions.special.hyper.hyper property)": [[96, "sympy.functions.special.hyper.hyper.radius_of_convergence", false]], "radsimp() (in module sympy.simplify.radsimp)": [[232, "sympy.simplify.radsimp.radsimp", false]], "radsimp() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.radsimp", false]], "raise (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Raise", false]], "raise_on_deprecated() (in module sympy.testing.runtests)": [[251, "sympy.testing.runtests.raise_on_deprecated", false]], "raisedcosine() (in module sympy.stats)": [[240, "sympy.stats.RaisedCosine", false]], "raises() (in module sympy.testing.pytest)": [[249, "sympy.testing.pytest.raises", false]], "ramp_response_numerical_data() (sympy.physics.control.control_plots method)": [[141, "sympy.physics.control.control_plots.ramp_response_numerical_data", false]], "ramp_response_plot() (sympy.physics.control.control_plots method)": [[141, "sympy.physics.control.control_plots.ramp_response_plot", false]], "randmatrix() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.randMatrix", false]], "random() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.random", false]], "random() (sympy.combinatorics.permutations.permutation class method)": [[80, "sympy.combinatorics.permutations.Permutation.random", false]], "random_bitstring() (sympy.combinatorics.graycode method)": [[72, "sympy.combinatorics.graycode.random_bitstring", false]], "random_circuit() (in module sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.random_circuit", false]], "random_complex_number() (in module sympy.core.random)": [[88, "sympy.core.random.random_complex_number", false]], "random_derangement() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.random_derangement", false]], "random_integer_partition() (in module sympy.combinatorics.partitions)": [[77, "sympy.combinatorics.partitions.random_integer_partition", false]], "random_point() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.random_point", false]], "random_point() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.random_point", false]], "random_point() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.random_point", false]], "random_poly() (in module sympy.polys.specialpolys)": [[216, "sympy.polys.specialpolys.random_poly", false]], "random_pr() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.random_pr", false]], "random_stab() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.random_stab", false]], "random_symbols() (in module sympy.stats.rv)": [[240, "sympy.stats.rv.random_symbols", false]], "randomdomain (class in sympy.stats.rv)": [[240, "sympy.stats.rv.RandomDomain", false]], "randomsymbol (class in sympy.stats.rv)": [[240, "sympy.stats.rv.RandomSymbol", false]], "randprime() (in module sympy.ntheory.generate)": [[128, "sympy.ntheory.generate.randprime", false]], "range (class in sympy.sets.fancysets)": [[228, "sympy.sets.fancysets.Range", false]], "ranges (sympy.tensor.indexed.indexed property)": [[245, "sympy.tensor.indexed.Indexed.ranges", false]], "rank (sympy.combinatorics.graycode.graycode property)": [[72, "sympy.combinatorics.graycode.GrayCode.rank", false]], "rank (sympy.combinatorics.partitions.partition property)": [[77, "sympy.combinatorics.partitions.Partition.rank", false]], "rank (sympy.combinatorics.prufer.prufer property)": [[82, "sympy.combinatorics.prufer.Prufer.rank", false]], "rank (sympy.tensor.indexed.indexed property)": [[245, "sympy.tensor.indexed.Indexed.rank", false]], "rank() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.rank", false]], "rank() (sympy.liealgebras.cartan_type.standard_cartan method)": [[117, "sympy.liealgebras.cartan_type.Standard_Cartan.rank", false]], "rank() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.rank", false]], "rank_binary (sympy.combinatorics.subsets.subset property)": [[83, "sympy.combinatorics.subsets.Subset.rank_binary", false]], "rank_decomposition() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.rank_decomposition", false]], "rank_gray (sympy.combinatorics.subsets.subset property)": [[83, "sympy.combinatorics.subsets.Subset.rank_gray", false]], "rank_lexicographic (sympy.combinatorics.subsets.subset property)": [[83, "sympy.combinatorics.subsets.Subset.rank_lexicographic", false]], "rank_nonlex() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.rank_nonlex", false]], "rank_trotterjohnson() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.rank_trotterjohnson", false]], "rat_clear_denoms() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.rat_clear_denoms", false]], "ratint() (in module sympy.integrals.rationaltools)": [[115, "sympy.integrals.rationaltools.ratint", false]], "ratint_logpart() (in module sympy.integrals.rationaltools)": [[115, "sympy.integrals.rationaltools.ratint_logpart", false]], "ratint_ratpart() (in module sympy.integrals.rationaltools)": [[115, "sympy.integrals.rationaltools.ratint_ratpart", false]], "rational": [[88, "term-rational", true]], "rational (class in sympy.core.numbers)": [[88, "sympy.core.numbers.Rational", false]], "rational_algorithm() (in module sympy.series.formal)": [[222, "sympy.series.formal.rational_algorithm", false]], "rational_independent() (in module sympy.series.formal)": [[222, "sympy.series.formal.rational_independent", false]], "rational_laurent_series() (in module sympy.solvers.ode.riccati)": [[236, "sympy.solvers.ode.riccati.rational_laurent_series", false]], "rational_parametrization() (sympy.vector.implicitregion.implicitregion method)": [[264, "sympy.vector.implicitregion.ImplicitRegion.rational_parametrization", false]], "rationalfield (class in sympy.polys.domains)": [[211, "sympy.polys.domains.RationalField", false]], "rationalize() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.rationalize", false]], "rationalpredicate (class in sympy.assumptions.predicates.sets)": [[65, "sympy.assumptions.predicates.sets.RationalPredicate", false]], "rationalriccati (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.RationalRiccati", false]], "rationals (class in sympy.sets.fancysets)": [[228, "sympy.sets.fancysets.Rationals", false]], "ratsimp() (in module sympy.simplify.ratsimp)": [[232, "sympy.simplify.ratsimp.ratsimp", false]], "ratsimp() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.ratsimp", false]], "ratsimpmodprime() (in module sympy.simplify.ratsimp)": [[232, "sympy.simplify.ratsimp.ratsimpmodprime", false]], "rawlines() (in module sympy.utilities.misc)": [[261, "sympy.utilities.misc.rawlines", false]], "ray (class in sympy.geometry.line)": [[101, "sympy.geometry.line.Ray", false]], "ray2d (class in sympy.geometry.line)": [[101, "sympy.geometry.line.Ray2D", false]], "ray3d (class in sympy.geometry.line)": [[101, "sympy.geometry.line.Ray3D", false]], "rayleigh() (in module sympy.stats)": [[240, "sympy.stats.Rayleigh", false]], "rayleigh2waist() (in module sympy.physics.optics.gaussopt)": [[159, "sympy.physics.optics.gaussopt.rayleigh2waist", false]], "raytransfermatrix (class in sympy.physics.optics.gaussopt)": [[159, "sympy.physics.optics.gaussopt.RayTransferMatrix", false]], "rcall() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.rcall", false]], "rcode() (in module sympy.printing.rcode)": [[220, "sympy.printing.rcode.rcode", false]], "rcodeprinter (class in sympy.printing.rcode)": [[220, "sympy.printing.rcode.RCodePrinter", false]], "rcollect() (in module sympy.simplify.radsimp)": [[232, "sympy.simplify.radsimp.rcollect", false]], "re (class in sympy.functions.elementary.complexes)": [[94, "sympy.functions.elementary.complexes.re", false]], "reaction_frame (sympy.physics.mechanics.actuator.torqueactuator property)": [[147, "sympy.physics.mechanics.actuator.TorqueActuator.reaction_frame", false]], "reaction_loads (sympy.physics.continuum_mechanics.beam.beam property)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.reaction_loads", false]], "reaction_loads (sympy.physics.continuum_mechanics.cable.cable property)": [[137, "sympy.physics.continuum_mechanics.cable.Cable.reaction_loads", false]], "reaction_loads (sympy.physics.continuum_mechanics.truss.truss property)": [[139, "sympy.physics.continuum_mechanics.truss.Truss.reaction_loads", false]], "real": [[88, "term-real", true]], "real_gaunt() (in module sympy.physics.wigner)": [[205, "sympy.physics.wigner.real_gaunt", false]], "real_root() (in module sympy.functions.elementary.miscellaneous)": [[94, "sympy.functions.elementary.miscellaneous.real_root", false]], "real_roots() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.real_roots", false]], "real_roots() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.real_roots", false]], "real_roots() (sympy.polys.rootoftools.complexrootof class method)": [[216, "sympy.polys.rootoftools.ComplexRootOf.real_roots", false]], "realelement (class in sympy.polys.domains.mpelements)": [[211, "sympy.polys.domains.mpelements.RealElement", false]], "realelementspredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.RealElementsPredicate", false]], "realfield (class in sympy.polys.domains)": [[211, "sympy.polys.domains.RealField", false]], "realnumber (in module sympy.core.numbers)": [[88, "sympy.core.numbers.RealNumber", false]], "realpredicate (class in sympy.assumptions.predicates.sets)": [[65, "sympy.assumptions.predicates.sets.RealPredicate", false]], "reals (class in sympy.sets.fancysets)": [[228, "sympy.sets.fancysets.Reals", false]], "reciprocal() (in module sympy.stats)": [[240, "sympy.stats.Reciprocal", false]], "reconstruct() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.reconstruct", false]], "rectangles (sympy.plotting.plot.plot property)": [[206, "sympy.plotting.plot.Plot.rectangles", false]], "recurrence (sympy.series.sequences.recursiveseq property)": [[226, "sympy.series.sequences.RecursiveSeq.recurrence", false]], "recurrence_memo() (in module sympy.utilities.memoization)": [[260, "sympy.utilities.memoization.recurrence_memo", false]], "recursiveseq (class in sympy.series.sequences)": [[226, "sympy.series.sequences.RecursiveSeq", false]], "red_groebner() (in module sympy.polys.groebnertools)": [[213, "sympy.polys.groebnertools.red_groebner", false]], "reduce() (sympy.polys.polytools.groebnerbasis method)": [[216, "sympy.polys.polytools.GroebnerBasis.reduce", false]], "reduce() (sympy.series.sequences.seqadd static method)": [[226, "sympy.series.sequences.SeqAdd.reduce", false]], "reduce() (sympy.series.sequences.seqmul static method)": [[226, "sympy.series.sequences.SeqMul.reduce", false]], "reduce() (sympy.sets.sets.complement static method)": [[228, "sympy.sets.sets.Complement.reduce", false]], "reduce_abs_inequalities() (in module sympy.solvers.inequalities)": [[235, "sympy.solvers.inequalities.reduce_abs_inequalities", false]], "reduce_abs_inequality() (in module sympy.solvers.inequalities)": [[235, "sympy.solvers.inequalities.reduce_abs_inequality", false]], "reduce_alg_num() (sympy.polys.numberfields.primes.primeideal method)": [[215, "sympy.polys.numberfields.primes.PrimeIdeal.reduce_alg_num", false]], "reduce_anp() (sympy.polys.numberfields.primes.primeideal method)": [[215, "sympy.polys.numberfields.primes.PrimeIdeal.reduce_ANP", false]], "reduce_element() (sympy.polys.agca.ideals.ideal method)": [[207, "sympy.polys.agca.ideals.Ideal.reduce_element", false]], "reduce_element() (sympy.polys.agca.modules.submodule method)": [[207, "sympy.polys.agca.modules.SubModule.reduce_element", false]], "reduce_element() (sympy.polys.numberfields.modules.submodule method)": [[215, "sympy.polys.numberfields.modules.Submodule.reduce_element", false]], "reduce_element() (sympy.polys.numberfields.primes.primeideal method)": [[215, "sympy.polys.numberfields.primes.PrimeIdeal.reduce_element", false]], "reduce_inequalities() (in module sympy.solvers.inequalities)": [[235, "sympy.solvers.inequalities.reduce_inequalities", false]], "reduce_rational_inequalities() (in module sympy.solvers.inequalities)": [[235, "sympy.solvers.inequalities.reduce_rational_inequalities", false]], "reduced() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.reduced", false]], "reduced() (sympy.polys.numberfields.modules.moduleelement method)": [[215, "sympy.polys.numberfields.modules.ModuleElement.reduced", false]], "reduced() (sympy.polys.numberfields.modules.submodule method)": [[215, "sympy.polys.numberfields.modules.Submodule.reduced", false]], "reduced_mod_p() (sympy.polys.numberfields.modules.moduleelement method)": [[215, "sympy.polys.numberfields.modules.ModuleElement.reduced_mod_p", false]], "reduced_totient (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.reduced_totient", false]], "reduced_totient() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.reduced_totient", false]], "referenceframe (class in sympy.physics.vector.frame)": [[199, "sympy.physics.vector.frame.ReferenceFrame", false]], "refine() (in module sympy.assumptions.refine)": [[66, "sympy.assumptions.refine.refine", false]], "refine() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.refine", false]], "refine() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.refine", false]], "refine_abs() (in module sympy.assumptions.refine)": [[66, "sympy.assumptions.refine.refine_abs", false]], "refine_arg() (in module sympy.assumptions.refine)": [[66, "sympy.assumptions.refine.refine_arg", false]], "refine_atan2() (in module sympy.assumptions.refine)": [[66, "sympy.assumptions.refine.refine_atan2", false]], "refine_im() (in module sympy.assumptions.refine)": [[66, "sympy.assumptions.refine.refine_im", false]], "refine_matrixelement() (in module sympy.assumptions.refine)": [[66, "sympy.assumptions.refine.refine_matrixelement", false]], "refine_pow() (in module sympy.assumptions.refine)": [[66, "sympy.assumptions.refine.refine_Pow", false]], "refine_re() (in module sympy.assumptions.refine)": [[66, "sympy.assumptions.refine.refine_re", false]], "refine_root() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.refine_root", false]], "refine_root() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.refine_root", false]], "refine_root() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.refine_root", false]], "refine_sign() (in module sympy.assumptions.refine)": [[66, "sympy.assumptions.refine.refine_sign", false]], "refinementfailed (class in sympy.polys.polyerrors)": [[213, "sympy.polys.polyerrors.RefinementFailed", false]], "reflect() (sympy.geometry.ellipse.circle method)": [[98, "sympy.geometry.ellipse.Circle.reflect", false]], "reflect() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.reflect", false]], "reflect() (sympy.geometry.entity.geometryentity method)": [[99, "sympy.geometry.entity.GeometryEntity.reflect", false]], "reflect() (sympy.geometry.polygon.regularpolygon method)": [[104, "sympy.geometry.polygon.RegularPolygon.reflect", false]], "reflective_filter() (in module sympy.physics.optics.polarization)": [[162, "sympy.physics.optics.polarization.reflective_filter", false]], "refraction_angle() (in module sympy.physics.optics.utils)": [[163, "sympy.physics.optics.utils.refraction_angle", false]], "refractive_index (sympy.physics.optics.medium.medium property)": [[161, "sympy.physics.optics.medium.Medium.refractive_index", false]], "register() (sympy.assumptions.assume.predicate class method)": [[63, "sympy.assumptions.assume.Predicate.register", false]], "register_handler() (in module sympy.assumptions.ask)": [[62, "sympy.assumptions.ask.register_handler", false]], "register_many() (sympy.assumptions.assume.predicate class method)": [[63, "sympy.assumptions.assume.Predicate.register_many", false]], "regular_point() (sympy.vector.implicitregion.implicitregion method)": [[264, "sympy.vector.implicitregion.ImplicitRegion.regular_point", false]], "regularpolygon (class in sympy.geometry.polygon)": [[104, "sympy.geometry.polygon.RegularPolygon", false]], "rel (in module sympy.core.relational)": [[88, "sympy.core.relational.Rel", false]], "relational": [[15, "term-Relational", true]], "relational (class in sympy.core.relational)": [[88, "sympy.core.relational.Relational", false]], "rem() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.rem", false]], "rem() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.rem", false]], "rem() (sympy.polys.domains.field.field method)": [[211, "sympy.polys.domains.field.Field.rem", false]], "rem() (sympy.polys.domains.gmpyrationalfield method)": [[211, "sympy.polys.domains.GMPYRationalField.rem", false]], "rem() (sympy.polys.domains.rationalfield method)": [[211, "sympy.polys.domains.RationalField.rem", false]], "rem() (sympy.polys.domains.ring.ring method)": [[211, "sympy.polys.domains.ring.Ring.rem", false]], "rem() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.rem", false]], "rem() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.rem", false]], "remove_handler() (in module sympy.assumptions.ask)": [[62, "sympy.assumptions.ask.remove_handler", false]], "remove_load() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.remove_load", false]], "remove_load() (sympy.physics.continuum_mechanics.truss.truss method)": [[139, "sympy.physics.continuum_mechanics.truss.Truss.remove_load", false]], "remove_load() (sympy.physics.mechanics.body.body method)": [[148, "sympy.physics.mechanics.body.Body.remove_load", false]], "remove_loads() (sympy.physics.continuum_mechanics.cable.cable method)": [[137, "sympy.physics.continuum_mechanics.cable.Cable.remove_loads", false]], "remove_member() (sympy.physics.continuum_mechanics.truss.truss method)": [[139, "sympy.physics.continuum_mechanics.truss.Truss.remove_member", false]], "remove_node() (sympy.physics.continuum_mechanics.truss.truss method)": [[139, "sympy.physics.continuum_mechanics.truss.Truss.remove_node", false]], "remove_redundant_sols() (in module sympy.solvers.ode.riccati)": [[236, "sympy.solvers.ode.riccati.remove_redundant_sols", false]], "remove_support() (sympy.physics.continuum_mechanics.truss.truss method)": [[139, "sympy.physics.continuum_mechanics.truss.Truss.remove_support", false]], "removeo() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.removeO", false]], "render() (sympy.printing.pretty.stringpict.stringpict method)": [[220, "sympy.printing.pretty.stringpict.stringPict.render", false]], "render_as_module() (in module sympy.codegen.futils)": [[69, "sympy.codegen.futils.render_as_module", false]], "render_as_module() (in module sympy.codegen.pyutils)": [[69, "sympy.codegen.pyutils.render_as_module", false]], "render_as_source_file() (in module sympy.codegen.cutils)": [[69, "sympy.codegen.cutils.render_as_source_file", false]], "reorder() (sympy.concrete.expr_with_intlimits.exprwithintlimits method)": [[87, "sympy.concrete.expr_with_intlimits.ExprWithIntLimits.reorder", false]], "reorder() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.reorder", false]], "reorder_limit() (sympy.concrete.expr_with_intlimits.exprwithintlimits method)": [[87, "sympy.concrete.expr_with_intlimits.ExprWithIntLimits.reorder_limit", false]], "rep (sympy.polys.polyclasses.dmp property)": [[211, "sympy.polys.polyclasses.DMP.rep", false]], "rep_expectation() (in module sympy.physics.quantum.represent)": [[185, "sympy.physics.quantum.represent.rep_expectation", false]], "rep_innerproduct() (in module sympy.physics.quantum.represent)": [[185, "sympy.physics.quantum.represent.rep_innerproduct", false]], "repeated_decimals() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.repeated_decimals", false]], "replace() (in module sympy.utilities.misc)": [[261, "sympy.utilities.misc.replace", false]], "replace() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.replace", false]], "replace() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.replace", false]], "replace() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.replace", false]], "replace_in_add() (sympy.codegen.rewriting.funcminusoneoptim method)": [[69, "sympy.codegen.rewriting.FuncMinusOneOptim.replace_in_Add", false]], "replace_with_arrays() (sympy.tensor.tensor.tensexpr method)": [[246, "sympy.tensor.tensor.TensExpr.replace_with_arrays", false]], "replaceoptim (class in sympy.codegen.rewriting)": [[69, "sympy.codegen.rewriting.ReplaceOptim", false]], "reporter (class in sympy.testing.runtests)": [[251, "sympy.testing.runtests.Reporter", false]], "repr() (sympy.polys.numberfields.primes.primeideal method)": [[215, "sympy.polys.numberfields.primes.PrimeIdeal.repr", false]], "represent() (in module sympy.physics.quantum.represent)": [[185, "sympy.physics.quantum.represent.represent", false]], "represent() (sympy.polys.numberfields.modules.endomorphismring method)": [[215, "sympy.polys.numberfields.modules.EndomorphismRing.represent", false]], "represent() (sympy.polys.numberfields.modules.module method)": [[215, "sympy.polys.numberfields.modules.Module.represent", false]], "represent() (sympy.polys.numberfields.modules.powerbasis method)": [[215, "sympy.polys.numberfields.modules.PowerBasis.represent", false]], "represent() (sympy.polys.numberfields.modules.submodule method)": [[215, "sympy.polys.numberfields.modules.Submodule.represent", false]], "reprify() (sympy.printing.repr.reprprinter method)": [[220, "sympy.printing.repr.ReprPrinter.reprify", false]], "reprprinter (class in sympy.printing.repr)": [[220, "sympy.printing.repr.ReprPrinter", false]], "reset() (sympy.combinatorics.polyhedron.polyhedron method)": [[81, "sympy.combinatorics.polyhedron.Polyhedron.reset", false]], "reshape() (in module sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.reshape", false]], "reshape() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.reshape", false]], "reshape() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.reshape", false]], "residue() (in module sympy.series.residues)": [[227, "sympy.series.residues.residue", false]], "resize() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.resize", false]], "restrict_codomain() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[207, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.restrict_codomain", false]], "restrict_domain() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[207, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.restrict_domain", false]], "result (class in sympy.utilities.codegen)": [[253, "sympy.utilities.codegen.Result", false]], "result_variables (sympy.utilities.codegen.routine property)": [[253, "sympy.utilities.codegen.Routine.result_variables", false]], "resultant() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.resultant", false]], "resultant() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.resultant", false]], "resultant() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.resultant", false]], "retract() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.retract", false]], "return (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Return", false]], "return_expr() (sympy.parsing.sym_expr.sympyexpression method)": [[130, "sympy.parsing.sym_expr.SymPyExpression.return_expr", false]], "reverse_order() (sympy.concrete.products.product method)": [[87, "sympy.concrete.products.Product.reverse_order", false]], "reverse_order() (sympy.concrete.summations.sum method)": [[87, "sympy.concrete.summations.Sum.reverse_order", false]], "reversed (sympy.core.relational.relational property)": [[88, "sympy.core.relational.Relational.reversed", false]], "reversed (sympy.sets.fancysets.range property)": [[228, "sympy.sets.fancysets.Range.reversed", false]], "reversedgradedlexorder (class in sympy.polys.orderings)": [[216, "sympy.polys.orderings.ReversedGradedLexOrder", false]], "reversedsign (sympy.core.relational.relational property)": [[88, "sympy.core.relational.Relational.reversedsign", false]], "revert() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.revert", false]], "revert() (sympy.polys.domains.field.field method)": [[211, "sympy.polys.domains.field.Field.revert", false]], "revert() (sympy.polys.domains.ring.ring method)": [[211, "sympy.polys.domains.ring.Ring.revert", false]], "revert() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.revert", false]], "revert() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.revert", false]], "rewrite() (in module sympy.series.gruntz)": [[227, "sympy.series.gruntz.rewrite", false]], "rewrite() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.rewrite", false]], "rgs (sympy.combinatorics.partitions.partition property)": [[77, "sympy.combinatorics.partitions.Partition.RGS", false]], "rgs_enum() (in module sympy.combinatorics.partitions)": [[77, "sympy.combinatorics.partitions.RGS_enum", false]], "rgs_generalized() (in module sympy.combinatorics.partitions)": [[77, "sympy.combinatorics.partitions.RGS_generalized", false]], "rgs_rank() (in module sympy.combinatorics.partitions)": [[77, "sympy.combinatorics.partitions.RGS_rank", false]], "rgs_unrank() (in module sympy.combinatorics.partitions)": [[77, "sympy.combinatorics.partitions.RGS_unrank", false]], "rhs (sympy.core.relational.relational property)": [[88, "sympy.core.relational.Relational.rhs", false]], "rhs() (sympy.physics.biomechanics.activation.activationbase method)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.rhs", false]], "rhs() (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 method)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.rhs", false]], "rhs() (sympy.physics.biomechanics.activation.zerothorderactivation method)": [[131, "sympy.physics.biomechanics.activation.ZerothOrderActivation.rhs", false]], "rhs() (sympy.physics.biomechanics.musculotendon.musculotendonbase method)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.rhs", false]], "rhs() (sympy.physics.mechanics.jointsmethod.jointsmethod method)": [[148, "sympy.physics.mechanics.jointsmethod.JointsMethod.rhs", false]], "rhs() (sympy.physics.mechanics.kane.kanesmethod method)": [[152, "sympy.physics.mechanics.kane.KanesMethod.rhs", false]], "rhs() (sympy.physics.mechanics.lagrange.lagrangesmethod method)": [[152, "sympy.physics.mechanics.lagrange.LagrangesMethod.rhs", false]], "rhs() (sympy.physics.mechanics.system.system method)": [[157, "sympy.physics.mechanics.system.System.rhs", false]], "riccati_inverse_normal() (in module sympy.solvers.ode.riccati)": [[236, "sympy.solvers.ode.riccati.riccati_inverse_normal", false]], "riccati_normal() (in module sympy.solvers.ode.riccati)": [[236, "sympy.solvers.ode.riccati.riccati_normal", false]], "riccati_reduced() (in module sympy.solvers.ode.riccati)": [[236, "sympy.solvers.ode.riccati.riccati_reduced", false]], "riccatispecial (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.RiccatiSpecial", false]], "richardson() (in module sympy.series.acceleration)": [[227, "sympy.series.acceleration.richardson", false]], "riemann() (sympy.tensor.tensor.tensorsymmetry class method)": [[246, "sympy.tensor.tensor.TensorSymmetry.riemann", false]], "riemann_cyclic() (in module sympy.tensor.tensor)": [[246, "sympy.tensor.tensor.riemann_cyclic", false]], "riemann_cyclic_replace() (in module sympy.tensor.tensor)": [[246, "sympy.tensor.tensor.riemann_cyclic_replace", false]], "right() (sympy.printing.pretty.stringpict.stringpict method)": [[220, "sympy.printing.pretty.stringpict.stringPict.right", false]], "right_open (sympy.sets.sets.interval property)": [[228, "sympy.sets.sets.Interval.right_open", false]], "right_support (sympy.physics.continuum_mechanics.cable.cable property)": [[137, "sympy.physics.continuum_mechanics.cable.Cable.right_support", false]], "rigidbody (class in sympy.physics.mechanics.rigidbody)": [[154, "sympy.physics.mechanics.rigidbody.RigidBody", false]], "ring (class in sympy.polys.domains.ring)": [[211, "sympy.polys.domains.ring.Ring", false]], "ring() (in module sympy.polys.rings)": [[211, "sympy.polys.rings.ring", false]], "ringelement (class in sympy.polys.matrices._typing)": [[209, "sympy.polys.matrices._typing.RingElement", false]], "risch_integrate() (in module sympy.integrals.risch)": [[115, "sympy.integrals.risch.risch_integrate", false]], "risingfactorial (class in sympy.functions.combinatorial.factorials)": [[93, "sympy.functions.combinatorial.factorials.RisingFactorial", false]], "rk (in module sympy.physics.quantum.qft)": [[183, "sympy.physics.quantum.qft.Rk", false]], "rkgate (class in sympy.physics.quantum.qft)": [[183, "sympy.physics.quantum.qft.RkGate", false]], "rmul() (sympy.combinatorics.permutations.permutation static method)": [[80, "sympy.combinatorics.permutations.Permutation.rmul", false]], "rmul() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.rmul", false]], "rmul_with_af() (sympy.combinatorics.permutations.permutation class method)": [[80, "sympy.combinatorics.permutations.Permutation.rmul_with_af", false]], "rmultiply() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.rmultiply", false]], "root (in module sympy.printing.pretty.pretty_symbology)": [[220, "sympy.printing.pretty.pretty_symbology.root", false]], "root() (in module sympy.functions.elementary.miscellaneous)": [[94, "sympy.functions.elementary.miscellaneous.root", false]], "root() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.root", false]], "root() (sympy.printing.pretty.stringpict.stringpict method)": [[220, "sympy.printing.pretty.stringpict.stringPict.root", false]], "root_space() (sympy.liealgebras.root_system.rootsystem method)": [[117, "sympy.liealgebras.root_system.RootSystem.root_space", false]], "rootof (class in sympy.polys.rootoftools)": [[216, "sympy.polys.rootoftools.RootOf", false]], "rootof() (in module sympy.polys.rootoftools)": [[216, "sympy.polys.rootoftools.rootof", false]], "roots() (in module sympy.polys.polyroots)": [[216, "sympy.polys.polyroots.roots", false]], "roots() (sympy.liealgebras.type_a.typea method)": [[117, "sympy.liealgebras.type_a.TypeA.roots", false]], "roots() (sympy.liealgebras.type_b.typeb method)": [[117, "sympy.liealgebras.type_b.TypeB.roots", false]], "roots() (sympy.liealgebras.type_c.typec method)": [[117, "sympy.liealgebras.type_c.TypeC.roots", false]], "roots() (sympy.liealgebras.type_d.typed method)": [[117, "sympy.liealgebras.type_d.TypeD.roots", false]], "roots() (sympy.liealgebras.type_e.typee method)": [[117, "sympy.liealgebras.type_e.TypeE.roots", false]], "roots() (sympy.liealgebras.type_f.typef method)": [[117, "sympy.liealgebras.type_f.TypeF.roots", false]], "roots() (sympy.liealgebras.type_g.typeg method)": [[117, "sympy.liealgebras.type_g.TypeG.roots", false]], "rootsum (class in sympy.polys.rootoftools)": [[216, "sympy.polys.rootoftools.RootSum", false]], "rootsystem (class in sympy.liealgebras.root_system)": [[117, "sympy.liealgebras.root_system.RootSystem", false]], "ropen() (sympy.sets.sets.interval class method)": [[228, "sympy.sets.sets.Interval.Ropen", false]], "rot90() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.rot90", false]], "rot_axis1() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.rot_axis1", false]], "rot_axis2() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.rot_axis2", false]], "rot_axis3() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.rot_axis3", false]], "rot_ccw_axis1() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.rot_ccw_axis1", false]], "rot_ccw_axis2() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.rot_ccw_axis2", false]], "rot_ccw_axis3() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.rot_ccw_axis3", false]], "rot_givens() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.rot_givens", false]], "rotate() (sympy.combinatorics.polyhedron.polyhedron method)": [[81, "sympy.combinatorics.polyhedron.Polyhedron.rotate", false]], "rotate() (sympy.geometry.curve.curve method)": [[97, "sympy.geometry.curve.Curve.rotate", false]], "rotate() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.rotate", false]], "rotate() (sympy.geometry.entity.geometryentity method)": [[99, "sympy.geometry.entity.GeometryEntity.rotate", false]], "rotate() (sympy.geometry.point.point2d method)": [[103, "sympy.geometry.point.Point2D.rotate", false]], "rotate() (sympy.geometry.polygon.regularpolygon method)": [[104, "sympy.geometry.polygon.RegularPolygon.rotate", false]], "rotate_left() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.rotate_left", false]], "rotate_point() (sympy.algebras.quaternion static method)": [[61, "sympy.algebras.Quaternion.rotate_point", false]], "rotate_right() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.rotate_right", false]], "rotation (class in sympy.physics.quantum.spin)": [[187, "sympy.physics.quantum.spin.Rotation", false]], "rotation (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.rotation", false]], "rotation_axis (sympy.physics.mechanics.joint.planarjoint property)": [[151, "sympy.physics.mechanics.joint.PlanarJoint.rotation_axis", false]], "rotation_coordinate (sympy.physics.mechanics.joint.cylindricaljoint property)": [[151, "sympy.physics.mechanics.joint.CylindricalJoint.rotation_coordinate", false]], "rotation_coordinate (sympy.physics.mechanics.joint.planarjoint property)": [[151, "sympy.physics.mechanics.joint.PlanarJoint.rotation_coordinate", false]], "rotation_jumps (sympy.physics.continuum_mechanics.beam.beam property)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.rotation_jumps", false]], "rotation_matrix() (sympy.vector.coordsysrect.coordsys3d method)": [[264, "sympy.vector.coordsysrect.CoordSys3D.rotation_matrix", false]], "rotation_matrix() (sympy.vector.orienters.axisorienter method)": [[266, "sympy.vector.orienters.AxisOrienter.rotation_matrix", false]], "rotation_matrix() (sympy.vector.orienters.orienter method)": [[266, "sympy.vector.orienters.Orienter.rotation_matrix", false]], "rotation_speed (sympy.physics.mechanics.joint.cylindricaljoint property)": [[151, "sympy.physics.mechanics.joint.CylindricalJoint.rotation_speed", false]], "rotation_speed (sympy.physics.mechanics.joint.planarjoint property)": [[151, "sympy.physics.mechanics.joint.PlanarJoint.rotation_speed", false]], "rotations() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.rotations", false]], "round() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.round", false]], "round_two() (in module sympy.polys.numberfields.basis)": [[215, "sympy.polys.numberfields.basis.round_two", false]], "roundfunction (class in sympy.functions.elementary.integers)": [[94, "sympy.functions.elementary.integers.RoundFunction", false]], "roundrobin() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.roundrobin", false]], "routine (class in sympy.utilities.codegen)": [[253, "sympy.utilities.codegen.Routine", false]], "routine() (sympy.utilities.codegen.codegen method)": [[253, "sympy.utilities.codegen.CodeGen.routine", false]], "routine() (sympy.utilities.codegen.juliacodegen method)": [[253, "sympy.utilities.codegen.JuliaCodeGen.routine", false]], "routine() (sympy.utilities.codegen.octavecodegen method)": [[253, "sympy.utilities.codegen.OctaveCodeGen.routine", false]], "routine() (sympy.utilities.codegen.rustcodegen method)": [[253, "sympy.utilities.codegen.RustCodeGen.routine", false]], "row() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.row", false]], "row_del() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.row_del", false]], "row_insert() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.row_insert", false]], "row_join() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.row_join", false]], "rowspace() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.rowspace", false]], "rowspace() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.rowspace", false]], "rref() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.rref", false]], "rref() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.rref", false]], "rref() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.rref", false]], "rref() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.rref", false]], "rref_den() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.rref_den", false]], "rref_den() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.rref_den", false]], "rref_den() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.rref_den", false]], "rref_rhs() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.rref_rhs", false]], "rs_asin() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_asin", false]], "rs_atan() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_atan", false]], "rs_atanh() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_atanh", false]], "rs_compose_add() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_compose_add", false]], "rs_cos() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_cos", false]], "rs_cos_sin() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_cos_sin", false]], "rs_cosh() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_cosh", false]], "rs_cot() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_cot", false]], "rs_diff() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_diff", false]], "rs_exp() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_exp", false]], "rs_fun() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_fun", false]], "rs_hadamard_exp() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_hadamard_exp", false]], "rs_integrate() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_integrate", false]], "rs_is_puiseux() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_is_puiseux", false]], "rs_lambertw() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_LambertW", false]], "rs_log() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_log", false]], "rs_mul() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_mul", false]], "rs_newton() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_newton", false]], "rs_nth_root() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_nth_root", false]], "rs_pow() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_pow", false]], "rs_puiseux() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_puiseux", false]], "rs_puiseux2() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_puiseux2", false]], "rs_series_from_list() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_series_from_list", false]], "rs_series_inversion() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_series_inversion", false]], "rs_series_reversion() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_series_reversion", false]], "rs_sin() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_sin", false]], "rs_sinh() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_sinh", false]], "rs_square() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_square", false]], "rs_subs() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_subs", false]], "rs_swap() (in module sympy.stats.rv)": [[240, "sympy.stats.rv.rs_swap", false]], "rs_tan() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_tan", false]], "rs_tanh() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_tanh", false]], "rs_trunc() (in module sympy.polys.ring_series)": [[217, "sympy.polys.ring_series.rs_trunc", false]], "rsa_private_key() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.rsa_private_key", false]], "rsa_public_key() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.rsa_public_key", false]], "rsolve() (in module sympy.solvers.recurr)": [[238, "sympy.solvers.recurr.rsolve", false]], "rsolve_hyper() (in module sympy.solvers.recurr)": [[238, "sympy.solvers.recurr.rsolve_hyper", false]], "rsolve_hypergeometric() (in module sympy.series.formal)": [[222, "sympy.series.formal.rsolve_hypergeometric", false]], "rsolve_poly() (in module sympy.solvers.recurr)": [[238, "sympy.solvers.recurr.rsolve_poly", false]], "rsolve_ratio() (in module sympy.solvers.recurr)": [[238, "sympy.solvers.recurr.rsolve_ratio", false]], "run() (sympy.testing.runtests.sympydoctestrunner method)": [[251, "sympy.testing.runtests.SymPyDocTestRunner.run", false]], "run_all_tests() (in module sympy.testing.runtests)": [[251, "sympy.testing.runtests.run_all_tests", false]], "run_in_subprocess_with_hash_randomization() (in module sympy.testing.runtests)": [[251, "sympy.testing.runtests.run_in_subprocess_with_hash_randomization", false]], "runs() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.runs", false]], "runs() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.runs", false]], "runtimeerror_ (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.RuntimeError_", false]], "rust_code() (in module sympy.printing.rust)": [[220, "sympy.printing.rust.rust_code", false]], "rustcodegen (class in sympy.utilities.codegen)": [[253, "sympy.utilities.codegen.RustCodeGen", false]], "rustcodeprinter (class in sympy.printing.rust)": [[220, "sympy.printing.rust.RustCodePrinter", false]], "s": [[15, "term-S", true]], "s (in module sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.S", false]], "s1transitivesubgroups (class in sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.S1TransitiveSubgroups", false]], "s2transitivesubgroups (class in sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.S2TransitiveSubgroups", false]], "s3_in_s6() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.S3_in_S6", false]], "s3transitivesubgroups (class in sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.S3TransitiveSubgroups", false]], "s4m() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.S4m", false]], "s4p() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.S4p", false]], "s4transitivesubgroups (class in sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.S4TransitiveSubgroups", false]], "s4xc2() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.S4xC2", false]], "s5transitivesubgroups (class in sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.S5TransitiveSubgroups", false]], "s6transitivesubgroups (class in sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.S6TransitiveSubgroups", false]], "same_root() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.same_root", false]], "sample() (in module sympy.stats)": [[240, "sympy.stats.sample", false]], "sample() (sympy.stats.discretemarkovchain method)": [[240, "sympy.stats.DiscreteMarkovChain.sample", false]], "sample_iter() (in module sympy.stats)": [[240, "sympy.stats.sample_iter", false]], "sampling_density() (in module sympy.stats.rv)": [[240, "sympy.stats.rv.sampling_density", false]], "sampling_e() (in module sympy.stats.rv)": [[240, "sympy.stats.rv.sampling_E", false]], "sampling_p() (in module sympy.stats.rv)": [[240, "sympy.stats.rv.sampling_P", false]], "satisfiable() (in module sympy.logic.inference)": [[118, "sympy.logic.inference.satisfiable", false]], "saturate() (sympy.polys.agca.ideals.ideal method)": [[207, "sympy.polys.agca.ideals.Ideal.saturate", false]], "scalar_map() (sympy.vector.coordsysrect.coordsys3d method)": [[264, "sympy.vector.coordsysrect.CoordSys3D.scalar_map", false]], "scalar_part() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.scalar_part", false]], "scalar_potential() (in module sympy.physics.vector.fieldfunctions)": [[200, "sympy.physics.vector.fieldfunctions.scalar_potential", false]], "scalar_potential() (in module sympy.vector)": [[267, "sympy.vector.scalar_potential", false]], "scalar_potential_difference() (in module sympy.physics.vector.fieldfunctions)": [[200, "sympy.physics.vector.fieldfunctions.scalar_potential_difference", false]], "scalar_potential_difference() (in module sympy.vector)": [[267, "sympy.vector.scalar_potential_difference", false]], "scale() (sympy.geometry.curve.curve method)": [[97, "sympy.geometry.curve.Curve.scale", false]], "scale() (sympy.geometry.ellipse.circle method)": [[98, "sympy.geometry.ellipse.Circle.scale", false]], "scale() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.scale", false]], "scale() (sympy.geometry.entity.geometryentity method)": [[99, "sympy.geometry.entity.GeometryEntity.scale", false]], "scale() (sympy.geometry.point.point2d method)": [[103, "sympy.geometry.point.Point2D.scale", false]], "scale() (sympy.geometry.point.point3d method)": [[103, "sympy.geometry.point.Point3D.scale", false]], "scale() (sympy.geometry.polygon.regularpolygon method)": [[104, "sympy.geometry.polygon.RegularPolygon.scale", false]], "scale() (sympy.series.fourier.fourierseries method)": [[223, "sympy.series.fourier.FourierSeries.scale", false]], "scale_factor (sympy.physics.units.quantities.quantity property)": [[197, "sympy.physics.units.quantities.Quantity.scale_factor", false]], "scalex() (sympy.series.fourier.fourierseries method)": [[223, "sympy.series.fourier.FourierSeries.scalex", false]], "scc() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.scc", false]], "scc() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.scc", false]], "scc() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.scc", false]], "scc() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.scc", false]], "schreier_sims() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.schreier_sims", false]], "schreier_sims_incremental() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.schreier_sims_incremental", false]], "schreier_sims_random() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.schreier_sims_random", false]], "schreier_vector() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.schreier_vector", false]], "schur() (sympy.matrices.expressions.blockmatrix.blockmatrix method)": [[120, "sympy.matrices.expressions.blockmatrix.BlockMatrix.schur", false]], "scope (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Scope", false]], "sdm (class in sympy.polys.matrices.sdm)": [[209, "sympy.polys.matrices.sdm.SDM", false]], "sdm_add() (in module sympy.polys.distributedmodules)": [[213, "sympy.polys.distributedmodules.sdm_add", false]], "sdm_berk() (in module sympy.polys.matrices.sdm)": [[209, "sympy.polys.matrices.sdm.sdm_berk", false]], "sdm_deg() (in module sympy.polys.distributedmodules)": [[213, "sympy.polys.distributedmodules.sdm_deg", false]], "sdm_ecart() (in module sympy.polys.distributedmodules)": [[213, "sympy.polys.distributedmodules.sdm_ecart", false]], "sdm_from_dict() (in module sympy.polys.distributedmodules)": [[213, "sympy.polys.distributedmodules.sdm_from_dict", false]], "sdm_from_vector() (in module sympy.polys.distributedmodules)": [[213, "sympy.polys.distributedmodules.sdm_from_vector", false]], "sdm_groebner() (in module sympy.polys.distributedmodules)": [[213, "sympy.polys.distributedmodules.sdm_groebner", false]], "sdm_irref() (in module sympy.polys.matrices.sdm)": [[209, "sympy.polys.matrices.sdm.sdm_irref", false]], "sdm_lc() (in module sympy.polys.distributedmodules)": [[213, "sympy.polys.distributedmodules.sdm_LC", false]], "sdm_lm() (in module sympy.polys.distributedmodules)": [[213, "sympy.polys.distributedmodules.sdm_LM", false]], "sdm_lt() (in module sympy.polys.distributedmodules)": [[213, "sympy.polys.distributedmodules.sdm_LT", false]], "sdm_monomial_deg() (in module sympy.polys.distributedmodules)": [[213, "sympy.polys.distributedmodules.sdm_monomial_deg", false]], "sdm_monomial_divides() (in module sympy.polys.distributedmodules)": [[213, "sympy.polys.distributedmodules.sdm_monomial_divides", false]], "sdm_monomial_mul() (in module sympy.polys.distributedmodules)": [[213, "sympy.polys.distributedmodules.sdm_monomial_mul", false]], "sdm_mul_term() (in module sympy.polys.distributedmodules)": [[213, "sympy.polys.distributedmodules.sdm_mul_term", false]], "sdm_nf_mora() (in module sympy.polys.distributedmodules)": [[213, "sympy.polys.distributedmodules.sdm_nf_mora", false]], "sdm_nullspace_from_rref() (in module sympy.polys.matrices.sdm)": [[209, "sympy.polys.matrices.sdm.sdm_nullspace_from_rref", false]], "sdm_particular_from_rref() (in module sympy.polys.matrices.sdm)": [[209, "sympy.polys.matrices.sdm.sdm_particular_from_rref", false]], "sdm_rref_den() (in module sympy.polys.matrices.sdm)": [[209, "sympy.polys.matrices.sdm.sdm_rref_den", false]], "sdm_spoly() (in module sympy.polys.distributedmodules)": [[213, "sympy.polys.distributedmodules.sdm_spoly", false]], "sdm_to_dict() (in module sympy.polys.distributedmodules)": [[213, "sympy.polys.distributedmodules.sdm_to_dict", false]], "sdm_to_vector() (in module sympy.polys.distributedmodules)": [[213, "sympy.polys.distributedmodules.sdm_to_vector", false]], "sdm_zero() (in module sympy.polys.distributedmodules)": [[213, "sympy.polys.distributedmodules.sdm_zero", false]], "search() (sympy.ntheory.generate.sieve method)": [[128, "sympy.ntheory.generate.Sieve.search", false]], "search_function (sympy.physics.quantum.grover.oraclegate property)": [[175, "sympy.physics.quantum.grover.OracleGate.search_function", false]], "sec (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.sec", false]], "sech (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.sech", false]], "second_moment (sympy.physics.continuum_mechanics.beam.beam property)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.second_moment", false]], "second_moment (sympy.physics.continuum_mechanics.beam.beam3d property)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.second_moment", false]], "second_moment_of_area() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.second_moment_of_area", false]], "second_moment_of_area() (sympy.geometry.polygon.polygon method)": [[104, "sympy.geometry.polygon.Polygon.second_moment_of_area", false]], "secondhypergeometric (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.SecondHypergeometric", false]], "secondlinearairy (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.SecondLinearAiry", false]], "secondlinearbessel (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.SecondLinearBessel", false]], "section_modulus() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.section_modulus", false]], "section_modulus() (sympy.geometry.polygon.polygon method)": [[104, "sympy.geometry.polygon.Polygon.section_modulus", false]], "segment (class in sympy.geometry.line)": [[101, "sympy.geometry.line.Segment", false]], "segment2d (class in sympy.geometry.line)": [[101, "sympy.geometry.line.Segment2D", false]], "segment3d (class in sympy.geometry.line)": [[101, "sympy.geometry.line.Segment3D", false]], "select() (sympy.simplify.epathtools.epath method)": [[232, "sympy.simplify.epathtools.EPath.select", false]], "selections (sympy.combinatorics.graycode.graycode property)": [[72, "sympy.combinatorics.graycode.GrayCode.selections", false]], "semilatus_rectum (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.semilatus_rectum", false]], "sensitivity (sympy.physics.control.lti.feedback property)": [[143, "sympy.physics.control.lti.Feedback.sensitivity", false]], "sensitivity (sympy.physics.control.lti.mimofeedback property)": [[143, "sympy.physics.control.lti.MIMOFeedback.sensitivity", false]], "separable (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.Separable", false]], "separablereduced (class in sympy.solvers.ode.single)": [[236, "sympy.solvers.ode.single.SeparableReduced", false]], "separate() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.separate", false]], "separate() (sympy.physics.vector.vector.vector method)": [[199, "sympy.physics.vector.vector.Vector.separate", false]], "separate() (sympy.vector.vector.vector method)": [[264, "sympy.vector.vector.Vector.separate", false]], "separatevars() (in module sympy.simplify.simplify)": [[232, "sympy.simplify.simplify.separatevars", false]], "seqadd (class in sympy.series.sequences)": [[226, "sympy.series.sequences.SeqAdd", false]], "seqbase (class in sympy.series.sequences)": [[226, "sympy.series.sequences.SeqBase", false]], "seqformula (class in sympy.series.sequences)": [[226, "sympy.series.sequences.SeqFormula", false]], "seqmul (class in sympy.series.sequences)": [[226, "sympy.series.sequences.SeqMul", false]], "seqper (class in sympy.series.sequences)": [[226, "sympy.series.sequences.SeqPer", false]], "sequence() (in module sympy.series.sequences)": [[226, "sympy.series.sequences.sequence", false]], "sequence_partitions() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.sequence_partitions", false]], "sequence_partitions_empty() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.sequence_partitions_empty", false]], "series (class in sympy.physics.control.lti)": [[143, "sympy.physics.control.lti.Series", false]], "series() (in module sympy.series.series)": [[227, "sympy.series.series.series", false]], "series() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.series", false]], "series() (sympy.holonomic.holonomic.holonomicfunction method)": [[110, "sympy.holonomic.holonomic.HolonomicFunction.series", false]], "series() (sympy.liealgebras.cartan_type.standard_cartan method)": [[117, "sympy.liealgebras.cartan_type.Standard_Cartan.series", false]], "seriesapprox (class in sympy.codegen.approximations)": [[69, "sympy.codegen.approximations.SeriesApprox", false]], "set (class in sympy.sets.sets)": [[228, "sympy.sets.sets.Set", false]], "set_acc() (sympy.physics.vector.point.point method)": [[203, "sympy.physics.vector.point.Point.set_acc", false]], "set_ang_acc() (sympy.physics.vector.frame.referenceframe method)": [[199, "sympy.physics.vector.frame.ReferenceFrame.set_ang_acc", false]], "set_ang_vel() (sympy.physics.vector.frame.referenceframe method)": [[199, "sympy.physics.vector.frame.ReferenceFrame.set_ang_vel", false]], "set_comm() (sympy.tensor.tensor._tensormanager method)": [[246, "sympy.tensor.tensor._TensorManager.set_comm", false]], "set_comms() (sympy.tensor.tensor._tensormanager method)": [[246, "sympy.tensor.tensor._TensorManager.set_comms", false]], "set_domain() (sympy.polys.domains.compositedomain.compositedomain method)": [[211, "sympy.polys.domains.compositedomain.CompositeDomain.set_domain", false]], "set_domain() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.set_domain", false]], "set_global_relative_scale_factor() (sympy.physics.units.quantities.quantity method)": [[197, "sympy.physics.units.quantities.Quantity.set_global_relative_scale_factor", false]], "set_global_settings() (sympy.printing.printer.printer class method)": [[220, "sympy.printing.printer.Printer.set_global_settings", false]], "set_modulus() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.set_modulus", false]], "set_norm() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.set_norm", false]], "set_pos() (sympy.physics.vector.point.point method)": [[203, "sympy.physics.vector.point.Point.set_pos", false]], "set_vel() (sympy.physics.vector.point.point method)": [[203, "sympy.physics.vector.point.Point.set_vel", false]], "seterr() (in module sympy.core.numbers)": [[88, "sympy.core.numbers.seterr", false]], "setitem() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.setitem", false]], "setkind (class in sympy.sets.conditionset)": [[228, "sympy.sets.conditionset.SetKind", false]], "sets (sympy.sets.fancysets.complexregion property)": [[228, "sympy.sets.fancysets.ComplexRegion.sets", false]], "setup() (in module sympy.polys.polyconfig)": [[213, "sympy.polys.polyconfig.setup", false]], "sfield() (in module sympy.polys.fields)": [[211, "sympy.polys.fields.sfield", false]], "shanks() (in module sympy.series.acceleration)": [[227, "sympy.series.acceleration.shanks", false]], "shape (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.shape", false]], "shape (sympy.physics.control.lti.mimoparallel property)": [[143, "sympy.physics.control.lti.MIMOParallel.shape", false]], "shape (sympy.physics.control.lti.mimoseries property)": [[143, "sympy.physics.control.lti.MIMOSeries.shape", false]], "shape (sympy.physics.control.lti.transferfunctionmatrix property)": [[143, "sympy.physics.control.lti.TransferFunctionMatrix.shape", false]], "shape (sympy.tensor.indexed.indexed property)": [[245, "sympy.tensor.indexed.Indexed.shape", false]], "shape (sympy.tensor.indexed.indexedbase property)": [[245, "sympy.tensor.indexed.IndexedBase.shape", false]], "shape() (in module sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.shape", false]], "shapeerror (class in sympy.matrices.matrixbase)": [[124, "sympy.matrices.matrixbase.ShapeError", false]], "shear_force() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.shear_force", false]], "shear_force() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.shear_force", false]], "shear_modulus (sympy.physics.continuum_mechanics.beam.beam3d property)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.shear_modulus", false]], "shear_stress() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.shear_stress", false]], "shear_stress() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.shear_stress", false]], "shi (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.Shi", false]], "shift() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.shift", false]], "shift() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.shift", false]], "shift() (sympy.series.fourier.fourierseries method)": [[223, "sympy.series.fourier.FourierSeries.shift", false]], "shift_list() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.shift_list", false]], "shift_list() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.shift_list", false]], "shiftedgompertz() (in module sympy.stats)": [[240, "sympy.stats.ShiftedGompertz", false]], "shiftx() (sympy.series.fourier.fourierseries method)": [[223, "sympy.series.fourier.FourierSeries.shiftx", false]], "shor() (in module sympy.physics.quantum.shor)": [[186, "sympy.physics.quantum.shor.shor", false]], "si (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.Si", false]], "sides (sympy.geometry.polygon.polygon property)": [[104, "sympy.geometry.polygon.Polygon.sides", false]], "sieve (class in sympy.ntheory.generate)": [[128, "sympy.ntheory.generate.Sieve", false]], "sift() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.sift", false]], "sigma_approximation() (sympy.series.fourier.fourierseries method)": [[223, "sympy.series.fourier.FourierSeries.sigma_approximation", false]], "sign (class in sympy.functions.elementary.complexes)": [[94, "sympy.functions.elementary.complexes.sign", false]], "sign (sympy.physics.control.lti.feedback property)": [[143, "sympy.physics.control.lti.Feedback.sign", false]], "sign (sympy.physics.control.lti.mimofeedback property)": [[143, "sympy.physics.control.lti.MIMOFeedback.sign", false]], "sign() (in module sympy.series.gruntz)": [[227, "sympy.series.gruntz.sign", false]], "signature (sympy.core.function.lambda property)": [[88, "sympy.core.function.Lambda.signature", false]], "signature() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.signature", false]], "signed_permutations() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.signed_permutations", false]], "signedinttype (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.SignedIntType", false]], "simple_root() (sympy.liealgebras.type_a.typea method)": [[117, "sympy.liealgebras.type_a.TypeA.simple_root", false]], "simple_root() (sympy.liealgebras.type_b.typeb method)": [[117, "sympy.liealgebras.type_b.TypeB.simple_root", false]], "simple_root() (sympy.liealgebras.type_c.typec method)": [[117, "sympy.liealgebras.type_c.TypeC.simple_root", false]], "simple_root() (sympy.liealgebras.type_d.typed method)": [[117, "sympy.liealgebras.type_d.TypeD.simple_root", false]], "simple_root() (sympy.liealgebras.type_e.typee method)": [[117, "sympy.liealgebras.type_e.TypeE.simple_root", false]], "simple_root() (sympy.liealgebras.type_f.typef method)": [[117, "sympy.liealgebras.type_f.TypeF.simple_root", false]], "simple_root() (sympy.liealgebras.type_g.typeg method)": [[117, "sympy.liealgebras.type_g.TypeG.simple_root", false]], "simple_roots() (sympy.liealgebras.root_system.rootsystem method)": [[117, "sympy.liealgebras.root_system.RootSystem.simple_roots", false]], "simplede() (in module sympy.series.formal)": [[222, "sympy.series.formal.simpleDE", false]], "simpledomain (class in sympy.polys.domains.simpledomain)": [[211, "sympy.polys.domains.simpledomain.SimpleDomain", false]], "simplification": [[15, "term-Simplification", true]], "simplify() (in module sympy.simplify.simplify)": [[232, "sympy.simplify.simplify.simplify", false]], "simplify() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.simplify", false]], "simplify() (sympy.matrices.dense.mutabledensematrix method)": [[119, "sympy.matrices.dense.MutableDenseMatrix.simplify", false]], "simplify() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.simplify", false]], "simplify() (sympy.physics.vector.dyadic.dyadic method)": [[199, "sympy.physics.vector.dyadic.Dyadic.simplify", false]], "simplify() (sympy.physics.vector.vector.vector method)": [[199, "sympy.physics.vector.vector.Vector.simplify", false]], "simplify_gpgp() (in module sympy.physics.hep.gamma_matrices)": [[144, "sympy.physics.hep.gamma_matrices.simplify_gpgp", false]], "simplify_index_permutations() (in module sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.simplify_index_permutations", false]], "simplify_logic() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.simplify_logic", false]], "sin (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.sin", false]], "sinc (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.sinc", false]], "sine_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.sine_transform", false]], "sinetransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.SineTransform", false]], "singledomain (class in sympy.stats.rv)": [[240, "sympy.stats.rv.SingleDomain", false]], "singlepspace (class in sympy.stats.rv)": [[240, "sympy.stats.rv.SinglePSpace", false]], "singleton (class in sympy.core.singleton)": [[88, "sympy.core.singleton.Singleton", false]], "singletonregistry (class in sympy.core.singleton)": [[88, "sympy.core.singleton.SingletonRegistry", false]], "singular_points() (sympy.vector.implicitregion.implicitregion method)": [[264, "sympy.vector.implicitregion.ImplicitRegion.singular_points", false]], "singular_value_decomposition() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.singular_value_decomposition", false]], "singular_values() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.singular_values", false]], "singularities() (in module sympy.calculus.singularities)": [[67, "sympy.calculus.singularities.singularities", false]], "singularityfunction (class in sympy.functions.special.singularity_functions)": [[96, "sympy.functions.special.singularity_functions.SingularityFunction", false]], "singularityintegrate() (in module sympy.integrals.singularityfunctions)": [[115, "sympy.integrals.singularityfunctions.singularityintegrate", false]], "singularpredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.SingularPredicate", false]], "sinh (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.sinh", false]], "size (sympy.combinatorics.permutations.permutation property)": [[80, "sympy.combinatorics.permutations.Permutation.size", false]], "size (sympy.combinatorics.polyhedron.polyhedron property)": [[81, "sympy.combinatorics.polyhedron.Polyhedron.size", false]], "size (sympy.combinatorics.prufer.prufer property)": [[82, "sympy.combinatorics.prufer.Prufer.size", false]], "size (sympy.combinatorics.subsets.subset property)": [[83, "sympy.combinatorics.subsets.Subset.size", false]], "size() (in module sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.size", false]], "sizeof() (in module sympy.codegen.cnodes)": [[69, "sympy.codegen.cnodes.sizeof", false]], "skellam() (in module sympy.stats)": [[240, "sympy.stats.Skellam", false]], "skewness() (in module sympy.stats)": [[240, "sympy.stats.skewness", false]], "skip() (in module sympy.testing.pytest)": [[249, "sympy.testing.pytest.SKIP", false]], "skip() (sympy.combinatorics.graycode.graycode method)": [[72, "sympy.combinatorics.graycode.GrayCode.skip", false]], "skip_under_pyodide() (in module sympy.testing.pytest)": [[249, "sympy.testing.pytest.skip_under_pyodide", false]], "slice() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.slice", false]], "slice() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.slice", false]], "slope (sympy.geometry.line.linearentity2d property)": [[101, "sympy.geometry.line.LinearEntity2D.slope", false]], "slope() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.slope", false]], "slope() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.slope", false]], "smallest_angle_between() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.smallest_angle_between", false]], "smith_normal_form() (in module sympy.matrices.normalforms)": [[125, "sympy.matrices.normalforms.smith_normal_form", false]], "smith_normal_form() (in module sympy.polys.matrices.normalforms)": [[209, "sympy.polys.matrices.normalforms.smith_normal_form", false]], "smoothing_rate (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.smoothing_rate", false]], "smoothness() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.smoothness", false]], "smoothness_p() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.smoothness_p", false]], "smtlib_code() (in module sympy.printing.smtlib)": [[220, "sympy.printing.smtlib.smtlib_code", false]], "smtlibprinter (class in sympy.printing.smtlib)": [[220, "sympy.printing.smtlib.SMTLibPrinter", false]], "solve": [[15, "term-Solve", true]], "solve() (in module sympy.solvers.solvers)": [[238, "sympy.solvers.solvers.solve", false]], "solve() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.solve", false]], "solve() (sympy.physics.continuum_mechanics.cable.cable method)": [[137, "sympy.physics.continuum_mechanics.cable.Cable.solve", false]], "solve() (sympy.physics.continuum_mechanics.truss.truss method)": [[139, "sympy.physics.continuum_mechanics.truss.Truss.solve", false]], "solve_aux_eq() (in module sympy.solvers.ode.riccati)": [[236, "sympy.solvers.ode.riccati.solve_aux_eq", false]], "solve_congruence() (in module sympy.ntheory.modular)": [[128, "sympy.ntheory.modular.solve_congruence", false]], "solve_de() (in module sympy.series.formal)": [[222, "sympy.series.formal.solve_de", false]], "solve_den() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.solve_den", false]], "solve_den_charpoly() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.solve_den_charpoly", false]], "solve_den_rref() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.solve_den_rref", false]], "solve_for_ild_moment() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.solve_for_ild_moment", false]], "solve_for_ild_reactions() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.solve_for_ild_reactions", false]], "solve_for_ild_shear() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.solve_for_ild_shear", false]], "solve_for_reaction_loads() (sympy.physics.continuum_mechanics.beam.beam method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.solve_for_reaction_loads", false]], "solve_for_reaction_loads() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.solve_for_reaction_loads", false]], "solve_for_torsion() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.solve_for_torsion", false]], "solve_least_squares() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.solve_least_squares", false]], "solve_lin_sys() (in module sympy.polys.solvers)": [[218, "sympy.polys.solvers.solve_lin_sys", false]], "solve_linear() (in module sympy.solvers.solvers)": [[238, "sympy.solvers.solvers.solve_linear", false]], "solve_linear_system() (in module sympy.solvers.solvers)": [[238, "sympy.solvers.solvers.solve_linear_system", false]], "solve_linear_system_lu() (in module sympy.solvers.solvers)": [[238, "sympy.solvers.solvers.solve_linear_system_LU", false]], "solve_multipliers() (sympy.physics.mechanics.lagrange.lagrangesmethod method)": [[152, "sympy.physics.mechanics.lagrange.LagrangesMethod.solve_multipliers", false]], "solve_poly_inequalities() (in module sympy.solvers.inequalities)": [[235, "sympy.solvers.inequalities.solve_poly_inequalities", false]], "solve_poly_inequality() (in module sympy.solvers.inequalities)": [[235, "sympy.solvers.inequalities.solve_poly_inequality", false]], "solve_poly_system() (in module sympy.solvers.polysys)": [[238, "sympy.solvers.polysys.solve_poly_system", false]], "solve_rational_inequalities() (in module sympy.solvers.inequalities)": [[235, "sympy.solvers.inequalities.solve_rational_inequalities", false]], "solve_riccati() (in module sympy.solvers.ode.riccati)": [[236, "sympy.solvers.ode.riccati.solve_riccati", false]], "solve_triangulated() (in module sympy.solvers.polysys)": [[238, "sympy.solvers.polysys.solve_triangulated", false]], "solve_undetermined_coeffs() (in module sympy.solvers.solvers)": [[238, "sympy.solvers.solvers.solve_undetermined_coeffs", false]], "solve_univariate_inequality() (in module sympy.solvers.inequalities)": [[235, "sympy.solvers.inequalities.solve_univariate_inequality", false]], "solvers": [[15, "term-Solvers", true]], "solveset() (in module sympy.solvers.solveset)": [[239, "sympy.solvers.solveset.solveset", false]], "solveset_complex() (in module sympy.solvers.solveset)": [[239, "sympy.solvers.solveset.solveset_complex", false]], "solveset_real() (in module sympy.solvers.solveset)": [[239, "sympy.solvers.solveset.solveset_real", false]], "solvify() (in module sympy.solvers.solveset)": [[239, "sympy.solvers.solveset.solvify", false]], "sopform() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.SOPform", false]], "sort_key() (sympy.combinatorics.partitions.partition method)": [[77, "sympy.combinatorics.partitions.Partition.sort_key", false]], "sort_key() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.sort_key", false]], "sorted_components() (sympy.tensor.tensor.tensmul method)": [[246, "sympy.tensor.tensor.TensMul.sorted_components", false]], "source (sympy.geometry.line.ray property)": [[101, "sympy.geometry.line.Ray.source", false]], "spaceorienter (class in sympy.vector.orienters)": [[266, "sympy.vector.orienters.SpaceOrienter", false]], "spaces (sympy.physics.quantum.hilbert.directsumhilbertspace property)": [[176, "sympy.physics.quantum.hilbert.DirectSumHilbertSpace.spaces", false]], "spaces (sympy.physics.quantum.hilbert.tensorproducthilbertspace property)": [[176, "sympy.physics.quantum.hilbert.TensorProductHilbertSpace.spaces", false]], "sparsematrix (in module sympy.matrices.sparse)": [[126, "sympy.matrices.sparse.SparseMatrix", false]], "speed (sympy.physics.optics.medium.medium property)": [[161, "sympy.physics.optics.medium.Medium.speed", false]], "speed (sympy.physics.optics.waves.twave property)": [[164, "sympy.physics.optics.waves.TWave.speed", false]], "speeds (sympy.physics.mechanics.joint.joint property)": [[151, "sympy.physics.mechanics.joint.Joint.speeds", false]], "speeds (sympy.physics.mechanics.system.symbolicsystem property)": [[157, "sympy.physics.mechanics.system.SymbolicSystem.speeds", false]], "spherical_bessel_fn() (in module sympy.polys.orthopolys)": [[216, "sympy.polys.orthopolys.spherical_bessel_fn", false]], "sphericaljoint (class in sympy.physics.mechanics.joint)": [[151, "sympy.physics.mechanics.joint.SphericalJoint", false]], "spin() (sympy.geometry.polygon.regularpolygon method)": [[104, "sympy.geometry.polygon.RegularPolygon.spin", false]], "split() (sympy.tensor.tensor.tensmul method)": [[246, "sympy.tensor.tensor.TensMul.split", false]], "split_list() (in module sympy.testing.runtests)": [[251, "sympy.testing.runtests.split_list", false]], "split_super_sub() (in module sympy.printing.conventions)": [[220, "sympy.printing.conventions.split_super_sub", false]], "split_symbols() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.split_symbols", false]], "split_symbols_custom() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.split_symbols_custom", false]], "spoly() (in module sympy.polys.groebnertools)": [[213, "sympy.polys.groebnertools.spoly", false]], "sqf() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.sqf", false]], "sqf_list() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.sqf_list", false]], "sqf_list() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.sqf_list", false]], "sqf_list() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.sqf_list", false]], "sqf_list_include() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.sqf_list_include", false]], "sqf_list_include() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.sqf_list_include", false]], "sqf_norm() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.sqf_norm", false]], "sqf_norm() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.sqf_norm", false]], "sqf_norm() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.sqf_norm", false]], "sqf_normal() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.sqf_normal", false]], "sqf_part() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.sqf_part", false]], "sqf_part() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.sqf_part", false]], "sqf_part() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.sqf_part", false]], "sqr() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.sqr", false]], "sqr() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.sqr", false]], "sqrt (class in sympy.codegen.cfunctions)": [[69, "sympy.codegen.cfunctions.Sqrt", false]], "sqrt() (in module sympy.functions.elementary.miscellaneous)": [[94, "sympy.functions.elementary.miscellaneous.sqrt", false]], "sqrt() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.sqrt", false]], "sqrt() (sympy.polys.domains.gmpyintegerring method)": [[211, "sympy.polys.domains.GMPYIntegerRing.sqrt", false]], "sqrt() (sympy.polys.domains.integerring method)": [[211, "sympy.polys.domains.IntegerRing.sqrt", false]], "sqrt_mod() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.sqrt_mod", false]], "sqrt_mod_iter() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.sqrt_mod_iter", false]], "sqrtdenest() (in module sympy.simplify.sqrtdenest)": [[232, "sympy.simplify.sqrtdenest.sqrtdenest", false]], "square() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.square", false]], "square_factor() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.square_factor", false]], "squarepredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.SquarePredicate", false]], "srepr() (in module sympy.printing.repr)": [[220, "sympy.printing.repr.srepr", false]], "sring() (in module sympy.polys.rings)": [[211, "sympy.polys.rings.sring", false]], "sstr() (in module sympy.printing.str)": [[220, "sympy.printing.str.sstr", false]], "sstrrepr() (in module sympy.printing.str)": [[220, "sympy.printing.str.sstrrepr", false]], "stabilizer() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.stabilizer", false]], "stack() (sympy.printing.pretty.stringpict.stringpict static method)": [[220, "sympy.printing.pretty.stringpict.stringPict.stack", false]], "standard_cartan (class in sympy.liealgebras.cartan_type)": [[117, "sympy.liealgebras.cartan_type.Standard_Cartan", false]], "standard_transformations (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.standard_transformations", false]], "start (sympy.series.sequences.recursiveseq property)": [[226, "sympy.series.sequences.RecursiveSeq.start", false]], "start (sympy.series.sequences.seqbase property)": [[226, "sympy.series.sequences.SeqBase.start", false]], "start (sympy.sets.sets.interval property)": [[228, "sympy.sets.sets.Interval.start", false]], "starts_with_unity() (sympy.polys.numberfields.modules.module method)": [[215, "sympy.polys.numberfields.modules.Module.starts_with_unity", false]], "state (class in sympy.physics.quantum.state)": [[188, "sympy.physics.quantum.state.State", false]], "state() (sympy.physics.secondquant.fixedbosonicbasis method)": [[190, "sympy.physics.secondquant.FixedBosonicBasis.state", false]], "state() (sympy.physics.secondquant.varbosonicbasis method)": [[190, "sympy.physics.secondquant.VarBosonicBasis.state", false]], "state_to_operators() (in module sympy.physics.quantum.operatorset)": [[180, "sympy.physics.quantum.operatorset.state_to_operators", false]], "state_vars (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.state_vars", false]], "state_vars (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.state_vars", false]], "state_vars (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[131, "sympy.physics.biomechanics.activation.ZerothOrderActivation.state_vars", false]], "state_vars (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.state_vars", false]], "statebase (class in sympy.physics.quantum.state)": [[188, "sympy.physics.quantum.state.StateBase", false]], "states (sympy.physics.mechanics.system.symbolicsystem property)": [[157, "sympy.physics.mechanics.system.SymbolicSystem.states", false]], "stationary_distribution() (sympy.stats.discretemarkovchain method)": [[240, "sympy.stats.DiscreteMarkovChain.stationary_distribution", false]], "stationary_points() (in module sympy.calculus.util)": [[67, "sympy.calculus.util.stationary_points", false]], "std() (in module sympy.stats)": [[240, "sympy.stats.std", false]], "step_response_numerical_data() (sympy.physics.control.control_plots method)": [[141, "sympy.physics.control.control_plots.step_response_numerical_data", false]], "step_response_plot() (sympy.physics.control.control_plots method)": [[141, "sympy.physics.control.control_plots.step_response_plot", false]], "stieltjes (class in sympy.functions.special.zeta_functions)": [[96, "sympy.functions.special.zeta_functions.stieltjes", false]], "stiffness (sympy.physics.mechanics.actuator.linearspring property)": [[147, "sympy.physics.mechanics.actuator.LinearSpring.stiffness", false]], "stirling() (in module sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.stirling", false]], "stokes_vector() (in module sympy.physics.optics.polarization)": [[162, "sympy.physics.optics.polarization.stokes_vector", false]], "stop (sympy.series.sequences.recursiveseq property)": [[226, "sympy.series.sequences.RecursiveSeq.stop", false]], "stop (sympy.series.sequences.seqbase property)": [[226, "sympy.series.sequences.SeqBase.stop", false]], "stream (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Stream", false]], "strict (sympy.core.relational.relational property)": [[88, "sympy.core.relational.Relational.strict", false]], "strictgreaterthan (class in sympy.core.relational)": [[88, "sympy.core.relational.StrictGreaterThan", false]], "strictlessthan (class in sympy.core.relational)": [[88, "sympy.core.relational.StrictLessThan", false]], "strides (sympy.tensor.indexed.indexedbase property)": [[245, "sympy.tensor.indexed.IndexedBase.strides", false]], "string (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.String", false]], "stringify_expr() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.stringify_expr", false]], "stringpict (class in sympy.printing.pretty.stringpict)": [[220, "sympy.printing.pretty.stringpict.stringPict", false]], "strip_zero() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.strip_zero", false]], "strlines() (in module sympy.utilities.misc)": [[261, "sympy.utilities.misc.strlines", false]], "strong_gens (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.strong_gens", false]], "strong_presentation() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.strong_presentation", false]], "strongly_connected_components() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.strongly_connected_components", false]], "strongly_connected_components() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.strongly_connected_components", false]], "strongly_connected_components_decomposition() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.strongly_connected_components_decomposition", false]], "strprinter (class in sympy.printing.str)": [[220, "sympy.printing.str.StrPrinter", false]], "struct (class in sympy.codegen.cnodes)": [[69, "sympy.codegen.cnodes.struct", false]], "structural equality": [[15, "term-Structural-Equality", true]], "studentt() (in module sympy.stats)": [[240, "sympy.stats.StudentT", false]], "sturm() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.sturm", false]], "sturm() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.sturm", false]], "sturm() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.sturm", false]], "sub (in module sympy.printing.pretty.pretty_symbology)": [[220, "sympy.printing.pretty.pretty_symbology.sub", false]], "sub() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.sub", false]], "sub() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.sub", false]], "sub() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.sub", false]], "sub() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.sub", false]], "sub() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.sub", false]], "sub() (sympy.polys.polyclasses.dmf method)": [[211, "sympy.polys.polyclasses.DMF.sub", false]], "sub() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.sub", false]], "sub() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.sub", false]], "sub_ground() (sympy.polys.polyclasses.anp method)": [[211, "sympy.polys.polyclasses.ANP.sub_ground", false]], "sub_ground() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.sub_ground", false]], "sub_ground() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.sub_ground", false]], "subdiagram_from_objects() (sympy.categories.diagram method)": [[68, "sympy.categories.Diagram.subdiagram_from_objects", false]], "subexpression": [[15, "term-Subexpression", true]], "subfactorial (class in sympy.functions.combinatorial.factorials)": [[93, "sympy.functions.combinatorial.factorials.subfactorial", false]], "subgroup() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.subgroup", false]], "subgroup_search() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.subgroup_search", false]], "submodule (class in sympy.polys.agca.modules)": [[207, "sympy.polys.agca.modules.SubModule", false]], "submodule (class in sympy.polys.numberfields.modules)": [[215, "sympy.polys.numberfields.modules.Submodule", false]], "submodule() (sympy.polys.agca.modules.module method)": [[207, "sympy.polys.agca.modules.Module.submodule", false]], "submodule() (sympy.polys.agca.modules.quotientmodule method)": [[207, "sympy.polys.agca.modules.QuotientModule.submodule", false]], "submodule() (sympy.polys.agca.modules.submodule method)": [[207, "sympy.polys.agca.modules.SubModule.submodule", false]], "submodule_from_gens() (sympy.polys.numberfields.modules.module method)": [[215, "sympy.polys.numberfields.modules.Module.submodule_from_gens", false]], "submodule_from_matrix() (sympy.polys.numberfields.modules.module method)": [[215, "sympy.polys.numberfields.modules.Module.submodule_from_matrix", false]], "subquotientmodule (class in sympy.polys.agca.modules)": [[207, "sympy.polys.agca.modules.SubQuotientModule", false]], "subresultants() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.subresultants", false]], "subresultants() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.subresultants", false]], "subresultants() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.subresultants", false]], "subresultants() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.subresultants", false]], "subroutine (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.Subroutine", false]], "subroutinecall (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.SubroutineCall", false]], "subs (class in sympy.core.function)": [[88, "sympy.core.function.Subs", false]], "subs() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.subs", false]], "subs() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.subs", false]], "subs() (sympy.physics.vector.dyadic.dyadic method)": [[199, "sympy.physics.vector.dyadic.Dyadic.subs", false]], "subs() (sympy.physics.vector.vector.vector method)": [[199, "sympy.physics.vector.vector.Vector.subs", false]], "subset (class in sympy.combinatorics.subsets)": [[83, "sympy.combinatorics.subsets.Subset", false]], "subset (sympy.combinatorics.subsets.subset property)": [[83, "sympy.combinatorics.subsets.Subset.subset", false]], "subset() (sympy.polys.agca.ideals.ideal method)": [[207, "sympy.polys.agca.ideals.Ideal.subset", false]], "subset() (sympy.polys.agca.modules.module method)": [[207, "sympy.polys.agca.modules.Module.subset", false]], "subset_from_bitlist() (sympy.combinatorics.subsets.subset class method)": [[83, "sympy.combinatorics.subsets.Subset.subset_from_bitlist", false]], "subset_indices() (sympy.combinatorics.subsets.subset class method)": [[83, "sympy.combinatorics.subsets.Subset.subset_indices", false]], "subsets() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.subsets", false]], "subsset (class in sympy.series.gruntz)": [[227, "sympy.series.gruntz.SubsSet", false]], "substitute_dummies() (in module sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.substitute_dummies", false]], "substitution": [[15, "term-Substitution", true]], "sum (class in sympy.concrete.summations)": [[87, "sympy.concrete.summations.Sum", false]], "sum_of_four_squares() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.sum_of_four_squares", false]], "sum_of_powers() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.sum_of_powers", false]], "sum_of_squares() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.sum_of_squares", false]], "sum_of_three_squares() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.sum_of_three_squares", false]], "sumapprox (class in sympy.codegen.approximations)": [[69, "sympy.codegen.approximations.SumApprox", false]], "summation() (in module sympy.concrete.summations)": [[87, "sympy.concrete.summations.summation", false]], "sup (in module sympy.printing.pretty.pretty_symbology)": [[220, "sympy.printing.pretty.pretty_symbology.sup", false]], "sup (sympy.sets.sets.set property)": [[228, "sympy.sets.sets.Set.sup", false]], "superposition_basis() (in module sympy.physics.quantum.grover)": [[175, "sympy.physics.quantum.grover.superposition_basis", false]], "superset (sympy.combinatorics.subsets.subset property)": [[83, "sympy.combinatorics.subsets.Subset.superset", false]], "superset_size (sympy.combinatorics.subsets.subset property)": [[83, "sympy.combinatorics.subsets.Subset.superset_size", false]], "supplement_a_subspace() (in module sympy.polys.numberfields.utilities)": [[215, "sympy.polys.numberfields.utilities.supplement_a_subspace", false]], "support() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.support", false]], "supports (sympy.physics.continuum_mechanics.cable.cable property)": [[137, "sympy.physics.continuum_mechanics.cable.Cable.supports", false]], "supports (sympy.physics.continuum_mechanics.truss.truss property)": [[139, "sympy.physics.continuum_mechanics.truss.Truss.supports", false]], "surfacebaseseries (class in sympy.plotting.series)": [[206, "sympy.plotting.series.SurfaceBaseSeries", false]], "surfaceover2drangeseries (class in sympy.plotting.series)": [[206, "sympy.plotting.series.SurfaceOver2DRangeSeries", false]], "swap (in module sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.SWAP", false]], "swap_point() (sympy.physics.quantum.circuitplot.circuitplot method)": [[170, "sympy.physics.quantum.circuitplot.CircuitPlot.swap_point", false]], "swapgate (class in sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.SwapGate", false]], "swinnerton_dyer_poly() (in module sympy.polys.specialpolys)": [[216, "sympy.polys.specialpolys.swinnerton_dyer_poly", false]], "sylow_subgroup() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.sylow_subgroup", false]], "symarray() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.symarray", false]], "symb_2txt (in module sympy.printing.pretty.pretty_symbology)": [[220, "sympy.printing.pretty.pretty_symbology.symb_2txt", false]], "symbol": [[15, "term-Symbol", true]], "symbol (class in sympy.core.symbol)": [[88, "sympy.core.symbol.Symbol", false]], "symbol (sympy.physics.secondquant.antisymmetrictensor property)": [[190, "sympy.physics.secondquant.AntiSymmetricTensor.symbol", false]], "symbolic": [[15, "term-Symbolic", true]], "symbolicsystem (class in sympy.physics.mechanics.system)": [[157, "sympy.physics.mechanics.system.SymbolicSystem", false]], "symbols() (in module sympy.core.symbol)": [[88, "sympy.core.symbol.symbols", false]], "symmetric() (sympy.combinatorics.generators method)": [[80, "sympy.combinatorics.generators.symmetric", false]], "symmetric_difference() (sympy.sets.sets.set method)": [[228, "sympy.sets.sets.Set.symmetric_difference", false]], "symmetric_poly() (in module sympy.polys.specialpolys)": [[216, "sympy.polys.specialpolys.symmetric_poly", false]], "symmetric_poly() (sympy.polys.rings.polyring method)": [[211, "sympy.polys.rings.PolyRing.symmetric_poly", false]], "symmetric_residue() (in module sympy.ntheory.modular)": [[128, "sympy.ntheory.modular.symmetric_residue", false]], "symmetricdifference (class in sympy.sets.sets)": [[228, "sympy.sets.sets.SymmetricDifference", false]], "symmetricgroup() (in module sympy.combinatorics.named_groups)": [[76, "sympy.combinatorics.named_groups.SymmetricGroup", false]], "symmetricpredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.SymmetricPredicate", false]], "symmetrize() (in module sympy.polys.polyfuncs)": [[216, "sympy.polys.polyfuncs.symmetrize", false]], "symmetrize() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.symmetrize", false]], "sympify()": [[15, "term-sympify", true]], "sympify() (in module sympy.core.sympify)": [[88, "sympy.core.sympify.sympify", false]], "sympy": [[58, "module-sympy", false]], "sympy.abc": [[60, "module-sympy.abc", false]], "sympy.algebras": [[61, "module-sympy.algebras", false]], "sympy.assumptions": [[64, "module-sympy.assumptions", false]], "sympy.assumptions.ask": [[62, "module-sympy.assumptions.ask", false]], "sympy.assumptions.assume": [[63, "module-sympy.assumptions.assume", false]], "sympy.assumptions.predicates": [[65, "module-sympy.assumptions.predicates", false]], "sympy.assumptions.refine": [[66, "module-sympy.assumptions.refine", false]], "sympy.calculus": [[67, "module-sympy.calculus", false]], "sympy.calculus.euler": [[67, "module-sympy.calculus.euler", false]], "sympy.calculus.finite_diff": [[67, "module-sympy.calculus.finite_diff", false]], "sympy.calculus.singularities": [[67, "module-sympy.calculus.singularities", false]], "sympy.calculus.util": [[67, "module-sympy.calculus.util", false]], "sympy.categories": [[68, "module-sympy.categories", false]], "sympy.categories.diagram_drawing": [[68, "module-sympy.categories.diagram_drawing", false]], "sympy.codegen.algorithms": [[69, "module-sympy.codegen.algorithms", false]], "sympy.codegen.approximations": [[69, "module-sympy.codegen.approximations", false]], "sympy.codegen.ast": [[69, "module-sympy.codegen.ast", false]], "sympy.codegen.cfunctions": [[69, "module-sympy.codegen.cfunctions", false]], "sympy.codegen.cnodes": [[69, "module-sympy.codegen.cnodes", false]], "sympy.codegen.cutils": [[69, "module-sympy.codegen.cutils", false]], "sympy.codegen.cxxnodes": [[69, "module-sympy.codegen.cxxnodes", false]], "sympy.codegen.fnodes": [[69, "module-sympy.codegen.fnodes", false]], "sympy.codegen.futils": [[69, "module-sympy.codegen.futils", false]], "sympy.codegen.matrix_nodes": [[69, "module-sympy.codegen.matrix_nodes", false]], "sympy.codegen.pyutils": [[69, "module-sympy.codegen.pyutils", false]], "sympy.codegen.rewriting": [[69, "module-sympy.codegen.rewriting", false]], "sympy.combinatorics.galois": [[71, "module-sympy.combinatorics.galois", false]], "sympy.combinatorics.generators": [[80, "module-sympy.combinatorics.generators", false]], "sympy.combinatorics.graycode": [[72, "module-sympy.combinatorics.graycode", false]], "sympy.combinatorics.group_constructs": [[73, "module-sympy.combinatorics.group_constructs", false]], "sympy.combinatorics.group_numbers": [[74, "module-sympy.combinatorics.group_numbers", false]], "sympy.combinatorics.named_groups": [[76, "module-sympy.combinatorics.named_groups", false]], "sympy.combinatorics.partitions": [[77, "module-sympy.combinatorics.partitions", false]], "sympy.combinatorics.perm_groups": [[79, "module-sympy.combinatorics.perm_groups", false]], "sympy.combinatorics.permutations": [[80, "module-sympy.combinatorics.permutations", false]], "sympy.combinatorics.polyhedron": [[81, "module-sympy.combinatorics.polyhedron", false]], "sympy.combinatorics.prufer": [[82, "module-sympy.combinatorics.prufer", false]], "sympy.combinatorics.subsets": [[83, "module-sympy.combinatorics.subsets", false]], "sympy.combinatorics.tensor_can": [[84, "module-sympy.combinatorics.tensor_can", false]], "sympy.combinatorics.testutil": [[85, "module-sympy.combinatorics.testutil", false]], "sympy.combinatorics.util": [[86, "module-sympy.combinatorics.util", false]], "sympy.core.add": [[88, "module-sympy.core.add", false]], "sympy.core.assumptions": [[88, "module-sympy.core.assumptions", false]], "sympy.core.basic": [[88, "module-sympy.core.basic", false]], "sympy.core.cache": [[88, "module-sympy.core.cache", false]], "sympy.core.containers": [[88, "module-sympy.core.containers", false]], "sympy.core.evalf": [[88, "module-sympy.core.evalf", false]], "sympy.core.expr": [[88, "module-sympy.core.expr", false]], "sympy.core.exprtools": [[88, "module-sympy.core.exprtools", false]], "sympy.core.function": [[88, "module-sympy.core.function", false]], "sympy.core.intfunc": [[88, "module-sympy.core.intfunc", false]], "sympy.core.kind": [[88, "module-sympy.core.kind", false]], "sympy.core.mod": [[88, "module-sympy.core.mod", false]], "sympy.core.mul": [[88, "module-sympy.core.mul", false]], "sympy.core.multidimensional": [[88, "module-sympy.core.multidimensional", false]], "sympy.core.numbers": [[88, "module-sympy.core.numbers", false]], "sympy.core.power": [[88, "module-sympy.core.power", false]], "sympy.core.random": [[88, "module-sympy.core.random", false]], "sympy.core.relational": [[88, "module-sympy.core.relational", false]], "sympy.core.singleton": [[88, "module-sympy.core.singleton", false]], "sympy.core.symbol": [[88, "module-sympy.core.symbol", false]], "sympy.core.sympify": [[88, "module-sympy.core.sympify", false]], "sympy.core.traversal": [[88, "module-sympy.core.traversal", false]], "sympy.crypto.crypto": [[89, "module-sympy.crypto.crypto", false]], "sympy.diffgeom": [[90, "module-sympy.diffgeom", false]], "sympy.discrete": [[91, "module-sympy.discrete", false]], "sympy.discrete.convolutions": [[91, "module-sympy.discrete.convolutions", false]], "sympy.discrete.transforms": [[91, "module-sympy.discrete.transforms", false]], "sympy.functions": [[95, "module-sympy.functions", false]], "sympy.functions.special.bessel": [[96, "module-sympy.functions.special.bessel", false]], "sympy.functions.special.beta_functions": [[96, "module-sympy.functions.special.beta_functions", false]], "sympy.functions.special.elliptic_integrals": [[96, "module-sympy.functions.special.elliptic_integrals", false]], "sympy.functions.special.error_functions": [[96, "module-sympy.functions.special.error_functions", false]], "sympy.functions.special.gamma_functions": [[96, "module-sympy.functions.special.gamma_functions", false]], "sympy.functions.special.mathieu_functions": [[96, "module-sympy.functions.special.mathieu_functions", false]], "sympy.functions.special.polynomials": [[96, "module-sympy.functions.special.polynomials", false]], "sympy.functions.special.singularity_functions": [[96, "module-sympy.functions.special.singularity_functions", false]], "sympy.functions.special.zeta_functions": [[96, "module-sympy.functions.special.zeta_functions", false]], "sympy.geometry.curve": [[97, "module-sympy.geometry.curve", false]], "sympy.geometry.ellipse": [[98, "module-sympy.geometry.ellipse", false]], "sympy.geometry.entity": [[99, "module-sympy.geometry.entity", false]], "sympy.geometry.line": [[101, "module-sympy.geometry.line", false]], "sympy.geometry.plane": [[102, "module-sympy.geometry.plane", false]], "sympy.geometry.point": [[103, "module-sympy.geometry.point", false]], "sympy.geometry.polygon": [[104, "module-sympy.geometry.polygon", false]], "sympy.geometry.util": [[105, "module-sympy.geometry.util", false]], "sympy.holonomic": [[108, "module-sympy.holonomic", false]], "sympy.integrals": [[115, "module-sympy.integrals", false]], "sympy.integrals.intpoly": [[115, "module-sympy.integrals.intpoly", false]], "sympy.integrals.meijerint": [[113, "module-sympy.integrals.meijerint", false]], "sympy.integrals.meijerint_doc": [[113, "module-sympy.integrals.meijerint_doc", false]], "sympy.integrals.transforms": [[115, "module-sympy.integrals.transforms", false]], "sympy.interactive": [[116, "module-sympy.interactive", false]], "sympy.interactive.printing": [[116, "module-sympy.interactive.printing", false]], "sympy.interactive.session": [[116, "module-sympy.interactive.session", false]], "sympy.liealgebras": [[117, "module-sympy.liealgebras", false]], "sympy.logic": [[118, "module-sympy.logic", false]], "sympy.logic.inference": [[118, "module-sympy.logic.inference", false]], "sympy.matrices": [[122, "module-sympy.matrices", false]], "sympy.matrices.expressions": [[120, "module-sympy.matrices.expressions", false]], "sympy.matrices.expressions.blockmatrix": [[120, "module-sympy.matrices.expressions.blockmatrix", false]], "sympy.matrices.immutable": [[121, "module-sympy.matrices.immutable", false]], "sympy.matrices.kind": [[123, "module-sympy.matrices.kind", false]], "sympy.matrices.matrixbase": [[124, "module-sympy.matrices.matrixbase", false]], "sympy.matrices.sparse": [[126, "module-sympy.matrices.sparse", false]], "sympy.matrices.sparsetools": [[127, "module-sympy.matrices.sparsetools", false]], "sympy.ntheory.bbp_pi": [[128, "module-sympy.ntheory.bbp_pi", false]], "sympy.ntheory.continued_fraction": [[128, "module-sympy.ntheory.continued_fraction", false]], "sympy.ntheory.digits": [[128, "module-sympy.ntheory.digits", false]], "sympy.ntheory.ecm": [[128, "module-sympy.ntheory.ecm", false]], "sympy.ntheory.egyptian_fraction": [[128, "module-sympy.ntheory.egyptian_fraction", false]], "sympy.ntheory.factor_": [[128, "module-sympy.ntheory.factor_", false]], "sympy.ntheory.generate": [[128, "module-sympy.ntheory.generate", false]], "sympy.ntheory.modular": [[128, "module-sympy.ntheory.modular", false]], "sympy.ntheory.multinomial": [[128, "module-sympy.ntheory.multinomial", false]], "sympy.ntheory.partitions_": [[128, "module-sympy.ntheory.partitions_", false]], "sympy.ntheory.primetest": [[128, "module-sympy.ntheory.primetest", false]], "sympy.ntheory.qs": [[128, "module-sympy.ntheory.qs", false]], "sympy.ntheory.residue_ntheory": [[128, "module-sympy.ntheory.residue_ntheory", false]], "sympy.parsing": [[130, "module-sympy.parsing", false]], "sympy.parsing.sym_expr": [[130, "module-sympy.parsing.sym_expr", false]], "sympy.physics": [[281, "module-sympy.physics", false]], "sympy.physics.biomechanics": [[133, "module-sympy.physics.biomechanics", false]], "sympy.physics.biomechanics.activation": [[131, "module-sympy.physics.biomechanics.activation", false]], "sympy.physics.biomechanics.curve": [[132, "module-sympy.physics.biomechanics.curve", false]], "sympy.physics.biomechanics.musculotendon": [[134, "module-sympy.physics.biomechanics.musculotendon", false]], "sympy.physics.continuum_mechanics.beam": [[135, "module-sympy.physics.continuum_mechanics.beam", false]], "sympy.physics.continuum_mechanics.cable": [[137, "module-sympy.physics.continuum_mechanics.cable", false]], "sympy.physics.continuum_mechanics.truss": [[139, "module-sympy.physics.continuum_mechanics.truss", false]], "sympy.physics.control": [[142, "module-sympy.physics.control", false]], "sympy.physics.control.lti": [[143, "module-sympy.physics.control.lti", false]], "sympy.physics.hep.gamma_matrices": [[144, "module-sympy.physics.hep.gamma_matrices", false]], "sympy.physics.hydrogen": [[145, "module-sympy.physics.hydrogen", false]], "sympy.physics.matrices": [[146, "module-sympy.physics.matrices", false]], "sympy.physics.mechanics": [[150, "module-sympy.physics.mechanics", false]], "sympy.physics.mechanics.actuator": [[147, "module-sympy.physics.mechanics.actuator", false]], "sympy.physics.mechanics.joint": [[151, "module-sympy.physics.mechanics.joint", false]], "sympy.physics.mechanics.kane": [[152, "module-sympy.physics.mechanics.kane", false]], "sympy.physics.mechanics.lagrange": [[152, "module-sympy.physics.mechanics.lagrange", false]], "sympy.physics.mechanics.linearize": [[153, "module-sympy.physics.mechanics.linearize", false]], "sympy.physics.mechanics.pathway": [[155, "module-sympy.physics.mechanics.pathway", false]], "sympy.physics.mechanics.wrapping_geometry": [[158, "module-sympy.physics.mechanics.wrapping_geometry", false]], "sympy.physics.optics.gaussopt": [[159, "module-sympy.physics.optics.gaussopt", false]], "sympy.physics.optics.medium": [[161, "module-sympy.physics.optics.medium", false]], "sympy.physics.optics.polarization": [[162, "module-sympy.physics.optics.polarization", false]], "sympy.physics.optics.utils": [[163, "module-sympy.physics.optics.utils", false]], "sympy.physics.optics.waves": [[164, "module-sympy.physics.optics.waves", false]], "sympy.physics.paulialgebra": [[165, "module-sympy.physics.paulialgebra", false]], "sympy.physics.qho_1d": [[166, "module-sympy.physics.qho_1d", false]], "sympy.physics.quantum.anticommutator": [[167, "module-sympy.physics.quantum.anticommutator", false]], "sympy.physics.quantum.cartesian": [[168, "module-sympy.physics.quantum.cartesian", false]], "sympy.physics.quantum.cg": [[169, "module-sympy.physics.quantum.cg", false]], "sympy.physics.quantum.circuitplot": [[170, "module-sympy.physics.quantum.circuitplot", false]], "sympy.physics.quantum.commutator": [[171, "module-sympy.physics.quantum.commutator", false]], "sympy.physics.quantum.constants": [[172, "module-sympy.physics.quantum.constants", false]], "sympy.physics.quantum.dagger": [[173, "module-sympy.physics.quantum.dagger", false]], "sympy.physics.quantum.gate": [[174, "module-sympy.physics.quantum.gate", false]], "sympy.physics.quantum.grover": [[175, "module-sympy.physics.quantum.grover", false]], "sympy.physics.quantum.hilbert": [[176, "module-sympy.physics.quantum.hilbert", false]], "sympy.physics.quantum.innerproduct": [[178, "module-sympy.physics.quantum.innerproduct", false]], "sympy.physics.quantum.operator": [[179, "module-sympy.physics.quantum.operator", false]], "sympy.physics.quantum.operatorset": [[180, "module-sympy.physics.quantum.operatorset", false]], "sympy.physics.quantum.piab": [[181, "module-sympy.physics.quantum.piab", false]], "sympy.physics.quantum.qapply": [[182, "module-sympy.physics.quantum.qapply", false]], "sympy.physics.quantum.qft": [[183, "module-sympy.physics.quantum.qft", false]], "sympy.physics.quantum.qubit": [[184, "module-sympy.physics.quantum.qubit", false]], "sympy.physics.quantum.represent": [[185, "module-sympy.physics.quantum.represent", false]], "sympy.physics.quantum.shor": [[186, "module-sympy.physics.quantum.shor", false]], "sympy.physics.quantum.spin": [[187, "module-sympy.physics.quantum.spin", false]], "sympy.physics.quantum.state": [[188, "module-sympy.physics.quantum.state", false]], "sympy.physics.quantum.tensorproduct": [[189, "module-sympy.physics.quantum.tensorproduct", false]], "sympy.physics.secondquant": [[190, "module-sympy.physics.secondquant", false]], "sympy.physics.sho": [[191, "module-sympy.physics.sho", false]], "sympy.physics.units.dimensions": [[192, "module-sympy.physics.units.dimensions", false]], "sympy.physics.units.prefixes": [[196, "module-sympy.physics.units.prefixes", false]], "sympy.physics.units.quantities": [[197, "module-sympy.physics.units.quantities", false]], "sympy.physics.units.unitsystem": [[198, "module-sympy.physics.units.unitsystem", false]], "sympy.physics.units.util": [[197, "module-sympy.physics.units.util", false]], "sympy.physics.vector": [[202, "module-sympy.physics.vector", false]], "sympy.physics.vector.functions": [[203, "module-sympy.physics.vector.functions", false]], "sympy.physics.vector.point": [[203, "module-sympy.physics.vector.point", false]], "sympy.physics.wigner": [[205, "module-sympy.physics.wigner", false]], "sympy.plotting.plot": [[206, "module-sympy.plotting.plot", false]], "sympy.plotting.pygletplot": [[206, "module-sympy.plotting.pygletplot", false]], "sympy.polys": [[216, "module-sympy.polys", false]], "sympy.polys.matrices._dfm": [[209, "module-sympy.polys.matrices._dfm", false]], "sympy.polys.matrices._typing": [[209, "module-sympy.polys.matrices._typing", false]], "sympy.polys.matrices.ddm": [[209, "module-sympy.polys.matrices.ddm", false]], "sympy.polys.matrices.dense": [[209, "module-sympy.polys.matrices.dense", false]], "sympy.polys.matrices.domainmatrix": [[209, "module-sympy.polys.matrices.domainmatrix", false]], "sympy.polys.matrices.sdm": [[209, "module-sympy.polys.matrices.sdm", false]], "sympy.polys.numberfields.modules": [[215, "module-sympy.polys.numberfields.modules", false]], "sympy.polys.numberfields.subfield": [[215, "module-sympy.polys.numberfields.subfield", false]], "sympy.polys.polyconfig": [[213, "module-sympy.polys.polyconfig", false]], "sympy.polys.polyoptions": [[213, "module-sympy.polys.polyoptions", false]], "sympy.polys.solvers": [[218, "module-sympy.polys.solvers", false]], "sympy.printing.aesaracode": [[220, "module-sympy.printing.aesaracode", false]], "sympy.printing.c": [[220, "module-sympy.printing.c", false]], "sympy.printing.codeprinter": [[220, "module-sympy.printing.codeprinter", false]], "sympy.printing.conventions": [[220, "module-sympy.printing.conventions", false]], "sympy.printing.cxx": [[220, "module-sympy.printing.cxx", false]], "sympy.printing.fortran": [[220, "module-sympy.printing.fortran", false]], "sympy.printing.gtk": [[220, "module-sympy.printing.gtk", false]], "sympy.printing.jscode": [[220, "module-sympy.printing.jscode", false]], "sympy.printing.julia": [[220, "module-sympy.printing.julia", false]], "sympy.printing.lambdarepr": [[220, "module-sympy.printing.lambdarepr", false]], "sympy.printing.latex": [[220, "module-sympy.printing.latex", false]], "sympy.printing.maple": [[220, "module-sympy.printing.maple", false]], "sympy.printing.mathematica": [[220, "module-sympy.printing.mathematica", false]], "sympy.printing.mathml": [[220, "module-sympy.printing.mathml", false]], "sympy.printing.octave": [[220, "module-sympy.printing.octave", false]], "sympy.printing.precedence": [[220, "module-sympy.printing.precedence", false]], "sympy.printing.pretty": [[220, "module-sympy.printing.pretty", false]], "sympy.printing.pretty.pretty": [[220, "module-sympy.printing.pretty.pretty", false]], "sympy.printing.pretty.pretty_symbology": [[220, "module-sympy.printing.pretty.pretty_symbology", false]], "sympy.printing.pretty.stringpict": [[220, "module-sympy.printing.pretty.stringpict", false]], "sympy.printing.preview": [[220, "module-sympy.printing.preview", false]], "sympy.printing.printer": [[220, "module-sympy.printing.printer", false]], "sympy.printing.pycode": [[220, "module-sympy.printing.pycode", false]], "sympy.printing.python": [[220, "module-sympy.printing.python", false]], "sympy.printing.rcode": [[220, "module-sympy.printing.rcode", false]], "sympy.printing.repr": [[220, "module-sympy.printing.repr", false]], "sympy.printing.rust": [[220, "module-sympy.printing.rust", false]], "sympy.printing.smtlib": [[220, "module-sympy.printing.smtlib", false]], "sympy.printing.str": [[220, "module-sympy.printing.str", false]], "sympy.printing.tree": [[220, "module-sympy.printing.tree", false]], "sympy.sets.conditionset": [[228, "module-sympy.sets.conditionset", false]], "sympy.sets.fancysets": [[228, "module-sympy.sets.fancysets", false]], "sympy.sets.powerset": [[228, "module-sympy.sets.powerset", false]], "sympy.sets.sets": [[228, "module-sympy.sets.sets", false]], "sympy.simplify.combsimp": [[232, "module-sympy.simplify.combsimp", false]], "sympy.simplify.cse_main": [[232, "module-sympy.simplify.cse_main", false]], "sympy.simplify.epathtools": [[232, "module-sympy.simplify.epathtools", false]], "sympy.simplify.fu": [[229, "module-sympy.simplify.fu", false]], "sympy.simplify.hyperexpand": [[232, "module-sympy.simplify.hyperexpand", false]], "sympy.simplify.hyperexpand_doc": [[230, "module-sympy.simplify.hyperexpand_doc", false]], "sympy.simplify.powsimp": [[232, "module-sympy.simplify.powsimp", false]], "sympy.simplify.radsimp": [[232, "module-sympy.simplify.radsimp", false]], "sympy.simplify.ratsimp": [[232, "module-sympy.simplify.ratsimp", false]], "sympy.simplify.simplify": [[16, "module-sympy.simplify.simplify", false]], "sympy.simplify.sqrtdenest": [[232, "module-sympy.simplify.sqrtdenest", false]], "sympy.simplify.trigsimp": [[232, "module-sympy.simplify.trigsimp", false]], "sympy.solvers": [[238, "module-sympy.solvers", false]], "sympy.solvers.inequalities": [[235, "module-sympy.solvers.inequalities", false]], "sympy.solvers.ode": [[236, "module-sympy.solvers.ode", false]], "sympy.solvers.ode.ode": [[236, "module-sympy.solvers.ode.ode", false]], "sympy.solvers.pde": [[237, "module-sympy.solvers.pde", false]], "sympy.solvers.recurr": [[238, "module-sympy.solvers.recurr", false]], "sympy.solvers.simplex": [[238, "module-sympy.solvers.simplex", false]], "sympy.solvers.solveset": [[239, "module-sympy.solvers.solveset", false]], "sympy.stats": [[240, "module-sympy.stats", false]], "sympy.stats.crv": [[240, "module-sympy.stats.crv", false]], "sympy.stats.crv_types": [[240, "module-sympy.stats.crv_types", false]], "sympy.stats.die() (in module sympy.stats.crv_types)": [[240, "sympy.stats.crv_types.sympy.stats.Die", false]], "sympy.stats.frv": [[240, "module-sympy.stats.frv", false]], "sympy.stats.frv_types": [[240, "module-sympy.stats.frv_types", false]], "sympy.stats.normal() (in module sympy.stats.crv_types)": [[240, "sympy.stats.crv_types.sympy.stats.Normal", false]], "sympy.stats.rv": [[240, "module-sympy.stats.rv", false]], "sympy.tensor": [[243, "module-sympy.tensor", false]], "sympy.tensor.array": [[241, "module-sympy.tensor.array", false]], "sympy.tensor.array.expressions": [[242, "module-sympy.tensor.array.expressions", false]], "sympy.tensor.index_methods": [[244, "module-sympy.tensor.index_methods", false]], "sympy.tensor.indexed": [[245, "module-sympy.tensor.indexed", false]], "sympy.tensor.tensor": [[246, "module-sympy.tensor.tensor", false]], "sympy.tensor.toperators": [[247, "module-sympy.tensor.toperators", false]], "sympy.testing": [[248, "module-sympy.testing", false]], "sympy.testing.pytest": [[249, "module-sympy.testing.pytest", false]], "sympy.testing.randtest": [[250, "module-sympy.testing.randtest", false]], "sympy.testing.runtests": [[251, "module-sympy.testing.runtests", false]], "sympy.utilities": [[257, "module-sympy.utilities", false]], "sympy.utilities.autowrap": [[252, "module-sympy.utilities.autowrap", false]], "sympy.utilities.codegen": [[253, "module-sympy.utilities.codegen", false]], "sympy.utilities.decorator": [[254, "module-sympy.utilities.decorator", false]], "sympy.utilities.enumerative": [[255, "module-sympy.utilities.enumerative", false]], "sympy.utilities.exceptions": [[256, "module-sympy.utilities.exceptions", false]], "sympy.utilities.iterables": [[258, "module-sympy.utilities.iterables", false]], "sympy.utilities.lambdify": [[259, "module-sympy.utilities.lambdify", false]], "sympy.utilities.memoization": [[260, "module-sympy.utilities.memoization", false]], "sympy.utilities.misc": [[261, "module-sympy.utilities.misc", false]], "sympy.utilities.source": [[262, "module-sympy.utilities.source", false]], "sympy.utilities.timeutils": [[263, "module-sympy.utilities.timeutils", false]], "sympy.vector": [[272, "module-sympy.vector", false]], "sympy_deprecation_warning() (in module sympy.utilities.exceptions)": [[256, "sympy.utilities.exceptions.sympy_deprecation_warning", false]], "sympy_eqs_to_ring() (in module sympy.polys.solvers)": [[218, "sympy.polys.solvers.sympy_eqs_to_ring", false]], "sympydeprecationwarning": [[256, "sympy.utilities.exceptions.SymPyDeprecationWarning", false]], "sympydoctestfinder (class in sympy.testing.runtests)": [[251, "sympy.testing.runtests.SymPyDocTestFinder", false]], "sympydoctestrunner (class in sympy.testing.runtests)": [[251, "sympy.testing.runtests.SymPyDocTestRunner", false]], "sympyexpression (class in sympy.parsing.sym_expr)": [[130, "sympy.parsing.sym_expr.SymPyExpression", false]], "sympyoutputchecker (class in sympy.testing.runtests)": [[251, "sympy.testing.runtests.SymPyOutputChecker", false]], "sympytestfile() (in module sympy.testing.runtests)": [[251, "sympy.testing.runtests.sympytestfile", false]], "sympytestresults (class in sympy.testing.runtests)": [[251, "sympy.testing.runtests.SymPyTestResults", false]], "sys1 (sympy.physics.control.lti.feedback property)": [[143, "sympy.physics.control.lti.Feedback.sys1", false]], "sys1 (sympy.physics.control.lti.mimofeedback property)": [[143, "sympy.physics.control.lti.MIMOFeedback.sys1", false]], "sys2 (sympy.physics.control.lti.feedback property)": [[143, "sympy.physics.control.lti.Feedback.sys2", false]], "sys2 (sympy.physics.control.lti.mimofeedback property)": [[143, "sympy.physics.control.lti.MIMOFeedback.sys2", false]], "system (class in sympy.physics.mechanics.system)": [[157, "sympy.physics.mechanics.system.System", false]], "syzygy_module() (sympy.polys.agca.modules.submodule method)": [[207, "sympy.polys.agca.modules.SubModule.syzygy_module", false]], "t (class in sympy.polys.matrices.dense)": [[209, "sympy.polys.matrices.dense.T", false]], "t (in module sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.T", false]], "t (sympy.matrices.expressions.matrixexpr property)": [[120, "sympy.matrices.expressions.MatrixExpr.T", false]], "t (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.T", false]], "t (sympy.physics.quantum.shor.cmod property)": [[186, "sympy.physics.quantum.shor.CMod.t", false]], "t (sympy.polys.numberfields.modules.powerbasiselement property)": [[215, "sympy.polys.numberfields.modules.PowerBasisElement.T", false]], "table() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.table", false]], "tail_degree() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.tail_degree", false]], "tail_degrees() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.tail_degrees", false]], "take() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.take", false]], "tan (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.tan", false]], "tangent_lines() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.tangent_lines", false]], "tanh (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.tanh", false]], "target_frame (sympy.physics.mechanics.actuator.torqueactuator property)": [[147, "sympy.physics.mechanics.actuator.TorqueActuator.target_frame", false]], "targets (sympy.physics.quantum.gate.cgate property)": [[174, "sympy.physics.quantum.gate.CGate.targets", false]], "targets (sympy.physics.quantum.gate.cnotgate property)": [[174, "sympy.physics.quantum.gate.CNotGate.targets", false]], "targets (sympy.physics.quantum.gate.gate property)": [[174, "sympy.physics.quantum.gate.Gate.targets", false]], "targets (sympy.physics.quantum.gate.ugate property)": [[174, "sympy.physics.quantum.gate.UGate.targets", false]], "targets (sympy.physics.quantum.grover.oraclegate property)": [[175, "sympy.physics.quantum.grover.OracleGate.targets", false]], "tau_a (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.tau_a", false]], "tau_d (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.tau_d", false]], "taxicab_distance() (sympy.geometry.point.point method)": [[103, "sympy.geometry.point.Point.taxicab_distance", false]], "taylor_term() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.taylor_term", false]], "taylor_term() (sympy.functions.elementary.exponential.exp static method)": [[94, "sympy.functions.elementary.exponential.exp.taylor_term", false]], "taylor_term() (sympy.functions.elementary.exponential.log static method)": [[94, "sympy.functions.elementary.exponential.log.taylor_term", false]], "taylor_term() (sympy.functions.elementary.hyperbolic.csch static method)": [[94, "sympy.functions.elementary.hyperbolic.csch.taylor_term", false]], "taylor_term() (sympy.functions.elementary.hyperbolic.sinh static method)": [[94, "sympy.functions.elementary.hyperbolic.sinh.taylor_term", false]], "tc() (sympy.polys.polyclasses.anp method)": [[211, "sympy.polys.polyclasses.ANP.TC", false]], "tc() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.TC", false]], "tc() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.TC", false]], "tendon_slack_length (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.tendon_slack_length", false]], "tendonforcelengthdegroote2016 (class in sympy.physics.biomechanics.curve)": [[132, "sympy.physics.biomechanics.curve.TendonForceLengthDeGroote2016", false]], "tendonforcelengthinversedegroote2016 (class in sympy.physics.biomechanics.curve)": [[132, "sympy.physics.biomechanics.curve.TendonForceLengthInverseDeGroote2016", false]], "tensadd (class in sympy.tensor.tensor)": [[246, "sympy.tensor.tensor.TensAdd", false]], "tensexpr (class in sympy.tensor.tensor)": [[246, "sympy.tensor.tensor.TensExpr", false]], "tension (sympy.physics.continuum_mechanics.cable.cable property)": [[137, "sympy.physics.continuum_mechanics.cable.Cable.tension", false]], "tension_at() (sympy.physics.continuum_mechanics.cable.cable method)": [[137, "sympy.physics.continuum_mechanics.cable.Cable.tension_at", false]], "tensmul (class in sympy.tensor.tensor)": [[246, "sympy.tensor.tensor.TensMul", false]], "tensor_heads() (in module sympy.tensor.tensor)": [[246, "sympy.tensor.tensor.tensor_heads", false]], "tensor_product_simp() (in module sympy.physics.quantum.tensorproduct)": [[189, "sympy.physics.quantum.tensorproduct.tensor_product_simp", false]], "tensorcontraction() (in module sympy.tensor.array)": [[241, "sympy.tensor.array.tensorcontraction", false]], "tensordiagonal() (in module sympy.tensor.array)": [[241, "sympy.tensor.array.tensordiagonal", false]], "tensorhead (class in sympy.tensor.tensor)": [[246, "sympy.tensor.tensor.TensorHead", false]], "tensorindex (class in sympy.tensor.tensor)": [[246, "sympy.tensor.tensor.TensorIndex", false]], "tensorindextype (class in sympy.tensor.tensor)": [[246, "sympy.tensor.tensor.TensorIndexType", false]], "tensorpowerhilbertspace (class in sympy.physics.quantum.hilbert)": [[176, "sympy.physics.quantum.hilbert.TensorPowerHilbertSpace", false]], "tensorproduct (class in sympy.diffgeom)": [[90, "sympy.diffgeom.TensorProduct", false]], "tensorproduct (class in sympy.physics.quantum.tensorproduct)": [[189, "sympy.physics.quantum.tensorproduct.TensorProduct", false]], "tensorproduct() (in module sympy.tensor.array)": [[241, "sympy.tensor.array.tensorproduct", false]], "tensorproducthilbertspace (class in sympy.physics.quantum.hilbert)": [[176, "sympy.physics.quantum.hilbert.TensorProductHilbertSpace", false]], "tensorsymmetry (class in sympy.tensor.tensor)": [[246, "sympy.tensor.tensor.TensorSymmetry", false]], "tensorsymmetry() (in module sympy.tensor.tensor)": [[246, "sympy.tensor.tensor.tensorsymmetry", false]], "tensortype (class in sympy.tensor.tensor)": [[246, "sympy.tensor.tensor.TensorType", false]], "term_to_integer() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.term_to_integer", false]], "terminal_width() (sympy.printing.pretty.stringpict.stringpict method)": [[220, "sympy.printing.pretty.stringpict.stringPict.terminal_width", false]], "terms() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.terms", false]], "terms() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.terms", false]], "terms() (sympy.polys.rings.polyelement method)": [[211, "sympy.polys.rings.PolyElement.terms", false]], "terms_gcd() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.terms_gcd", false]], "terms_gcd() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.terms_gcd", false]], "terms_gcd() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.terms_gcd", false]], "termwise() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.termwise", false]], "test() (in module sympy.testing.runtests)": [[251, "sympy.testing.runtests.test", false]], "test_derivative_numerically() (in module sympy.core.random)": [[88, "sympy.core.random.test_derivative_numerically", false]], "test_factor() (sympy.polys.numberfields.primes.primeideal method)": [[215, "sympy.polys.numberfields.primes.PrimeIdeal.test_factor", false]], "textbackend (class in sympy.plotting.plot)": [[206, "sympy.plotting.plot.TextBackend", false]], "textplot() (in module sympy.plotting.textplot)": [[206, "sympy.plotting.textplot.textplot", false]], "tgate (class in sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.TGate", false]], "thinlens (class in sympy.physics.optics.gaussopt)": [[159, "sympy.physics.optics.gaussopt.ThinLens", false]], "threaded() (in module sympy.utilities.decorator)": [[254, "sympy.utilities.decorator.threaded", false]], "threaded_factory() (in module sympy.utilities.decorator)": [[254, "sympy.utilities.decorator.threaded_factory", false]], "three-valued logic": [[15, "term-Three-valued-logic", true]], "time (sympy.physics.quantum.state.timedepstate property)": [[188, "sympy.physics.quantum.state.TimeDepState.time", false]], "time_derivative() (in module sympy.physics.vector.functions)": [[201, "sympy.physics.vector.functions.time_derivative", false]], "time_period (sympy.physics.optics.waves.twave property)": [[164, "sympy.physics.optics.waves.TWave.time_period", false]], "timed() (in module sympy.utilities.timeutils)": [[263, "sympy.utilities.timeutils.timed", false]], "timedepbra (class in sympy.physics.quantum.state)": [[188, "sympy.physics.quantum.state.TimeDepBra", false]], "timedepket (class in sympy.physics.quantum.state)": [[188, "sympy.physics.quantum.state.TimeDepKet", false]], "timedepstate (class in sympy.physics.quantum.state)": [[188, "sympy.physics.quantum.state.TimeDepState", false]], "tiny (sympy.codegen.ast.floattype property)": [[69, "sympy.codegen.ast.FloatType.tiny", false]], "to_alg_num() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.to_alg_num", false]], "to_alg_num() (sympy.polys.numberfields.modules.powerbasiselement method)": [[215, "sympy.polys.numberfields.modules.PowerBasisElement.to_alg_num", false]], "to_algebraic_integer() (sympy.core.numbers.algebraicnumber method)": [[88, "sympy.core.numbers.AlgebraicNumber.to_algebraic_integer", false]], "to_ancestor() (sympy.polys.numberfields.modules.moduleelement method)": [[215, "sympy.polys.numberfields.modules.ModuleElement.to_ancestor", false]], "to_anf() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.to_anf", false]], "to_anp() (sympy.polys.numberfields.modules.powerbasiselement method)": [[215, "sympy.polys.numberfields.modules.PowerBasisElement.to_ANP", false]], "to_axis_angle() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.to_axis_angle", false]], "to_best() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.to_best", false]], "to_cnf() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.to_cnf", false]], "to_ddm() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.to_ddm", false]], "to_ddm() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.to_ddm", false]], "to_ddm() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_ddm", false]], "to_ddm() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.to_ddm", false]], "to_dense() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_dense", false]], "to_dfm() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.to_dfm", false]], "to_dfm() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.to_dfm", false]], "to_dfm() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_dfm", false]], "to_dfm() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.to_dfm", false]], "to_dfm_or_ddm() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.to_dfm_or_ddm", false]], "to_dfm_or_ddm() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.to_dfm_or_ddm", false]], "to_dfm_or_ddm() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_dfm_or_ddm", false]], "to_dfm_or_ddm() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.to_dfm_or_ddm", false]], "to_dict() (sympy.polys.polyclasses.anp method)": [[211, "sympy.polys.polyclasses.ANP.to_dict", false]], "to_dict() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.to_dict", false]], "to_dnf() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.to_dnf", false]], "to_dod() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.to_dod", false]], "to_dod() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.to_dod", false]], "to_dod() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_dod", false]], "to_dod() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.to_dod", false]], "to_dok() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.to_dok", false]], "to_dok() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.to_dok", false]], "to_dok() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_dok", false]], "to_dok() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.to_dok", false]], "to_euler() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.to_euler", false]], "to_exact() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.to_exact", false]], "to_exact() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.to_exact", false]], "to_expr() (sympy.holonomic.holonomic.holonomicfunction method)": [[110, "sympy.holonomic.holonomic.HolonomicFunction.to_expr", false]], "to_expr() (sympy.physics.control.lti.feedback method)": [[143, "sympy.physics.control.lti.Feedback.to_expr", false]], "to_expr() (sympy.physics.control.lti.parallel method)": [[143, "sympy.physics.control.lti.Parallel.to_expr", false]], "to_expr() (sympy.physics.control.lti.series method)": [[143, "sympy.physics.control.lti.Series.to_expr", false]], "to_expr() (sympy.physics.control.lti.transferfunction method)": [[143, "sympy.physics.control.lti.TransferFunction.to_expr", false]], "to_field() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_field", false]], "to_field() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.to_field", false]], "to_field() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.to_field", false]], "to_flat_nz() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.to_flat_nz", false]], "to_flat_nz() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.to_flat_nz", false]], "to_flat_nz() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_flat_nz", false]], "to_flat_nz() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.to_flat_nz", false]], "to_hyper() (sympy.holonomic.holonomic.holonomicfunction method)": [[110, "sympy.holonomic.holonomic.HolonomicFunction.to_hyper", false]], "to_int() (sympy.polys.domains.finitefield method)": [[211, "sympy.polys.domains.FiniteField.to_int", false]], "to_int_repr() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.to_int_repr", false]], "to_linearizer() (sympy.physics.mechanics.kane.kanesmethod method)": [[152, "sympy.physics.mechanics.kane.KanesMethod.to_linearizer", false]], "to_linearizer() (sympy.physics.mechanics.lagrange.lagrangesmethod method)": [[152, "sympy.physics.mechanics.lagrange.LagrangesMethod.to_linearizer", false]], "to_list() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.to_list", false]], "to_list() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.to_list", false]], "to_list() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_list", false]], "to_list() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.to_list", false]], "to_list() (sympy.polys.polyclasses.anp method)": [[211, "sympy.polys.polyclasses.ANP.to_list", false]], "to_list() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.to_list", false]], "to_list_flat() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.to_list_flat", false]], "to_list_flat() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.to_list_flat", false]], "to_list_flat() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_list_flat", false]], "to_list_flat() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.to_list_flat", false]], "to_loads() (sympy.physics.mechanics.actuator.actuatorbase method)": [[147, "sympy.physics.mechanics.actuator.ActuatorBase.to_loads", false]], "to_loads() (sympy.physics.mechanics.actuator.forceactuator method)": [[147, "sympy.physics.mechanics.actuator.ForceActuator.to_loads", false]], "to_loads() (sympy.physics.mechanics.actuator.torqueactuator method)": [[147, "sympy.physics.mechanics.actuator.TorqueActuator.to_loads", false]], "to_loads() (sympy.physics.mechanics.pathway.linearpathway method)": [[155, "sympy.physics.mechanics.pathway.LinearPathway.to_loads", false]], "to_loads() (sympy.physics.mechanics.pathway.obstaclesetpathway method)": [[155, "sympy.physics.mechanics.pathway.ObstacleSetPathway.to_loads", false]], "to_loads() (sympy.physics.mechanics.pathway.pathwaybase method)": [[155, "sympy.physics.mechanics.pathway.PathwayBase.to_loads", false]], "to_loads() (sympy.physics.mechanics.pathway.wrappingpathway method)": [[155, "sympy.physics.mechanics.pathway.WrappingPathway.to_loads", false]], "to_matrix() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.to_Matrix", false]], "to_matrix() (sympy.physics.vector.dyadic.dyadic method)": [[199, "sympy.physics.vector.dyadic.Dyadic.to_matrix", false]], "to_matrix() (sympy.physics.vector.vector.vector method)": [[199, "sympy.physics.vector.vector.Vector.to_matrix", false]], "to_matrix() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_Matrix", false]], "to_matrix() (sympy.vector.dyadic.dyadic method)": [[264, "sympy.vector.dyadic.Dyadic.to_matrix", false]], "to_matrix() (sympy.vector.vector.vector method)": [[264, "sympy.vector.vector.Vector.to_matrix", false]], "to_meijerg() (sympy.holonomic.holonomic.holonomicfunction method)": [[110, "sympy.holonomic.holonomic.HolonomicFunction.to_meijerg", false]], "to_nnf() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.to_nnf", false]], "to_number_field() (in module sympy.polys.numberfields.subfield)": [[215, "sympy.polys.numberfields.subfield.to_number_field", false]], "to_parent() (sympy.polys.numberfields.modules.moduleelement method)": [[215, "sympy.polys.numberfields.modules.ModuleElement.to_parent", false]], "to_primitive_element() (sympy.core.numbers.algebraicnumber method)": [[88, "sympy.core.numbers.AlgebraicNumber.to_primitive_element", false]], "to_prufer() (sympy.combinatorics.prufer.prufer static method)": [[82, "sympy.combinatorics.prufer.Prufer.to_prufer", false]], "to_rational() (sympy.polys.domains.realfield method)": [[211, "sympy.polys.domains.RealField.to_rational", false]], "to_ring() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.to_ring", false]], "to_ring() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.to_ring", false]], "to_root() (sympy.core.numbers.algebraicnumber method)": [[88, "sympy.core.numbers.AlgebraicNumber.to_root", false]], "to_rotation_matrix() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.to_rotation_matrix", false]], "to_sdm() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.to_sdm", false]], "to_sdm() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.to_sdm", false]], "to_sdm() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_sdm", false]], "to_sdm() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.to_sdm", false]], "to_sequence() (sympy.holonomic.holonomic.holonomicfunction method)": [[110, "sympy.holonomic.holonomic.HolonomicFunction.to_sequence", false]], "to_sparse() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_sparse", false]], "to_sympy() (sympy.polys.domains.algebraicfield method)": [[211, "sympy.polys.domains.AlgebraicField.to_sympy", false]], "to_sympy() (sympy.polys.domains.complexfield method)": [[211, "sympy.polys.domains.ComplexField.to_sympy", false]], "to_sympy() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.to_sympy", false]], "to_sympy() (sympy.polys.domains.expressiondomain method)": [[211, "sympy.polys.domains.ExpressionDomain.to_sympy", false]], "to_sympy() (sympy.polys.domains.finitefield method)": [[211, "sympy.polys.domains.FiniteField.to_sympy", false]], "to_sympy() (sympy.polys.domains.fractionfield method)": [[211, "sympy.polys.domains.FractionField.to_sympy", false]], "to_sympy() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[211, "sympy.polys.domains.gaussiandomains.GaussianDomain.to_sympy", false]], "to_sympy() (sympy.polys.domains.gmpyintegerring method)": [[211, "sympy.polys.domains.GMPYIntegerRing.to_sympy", false]], "to_sympy() (sympy.polys.domains.gmpyrationalfield method)": [[211, "sympy.polys.domains.GMPYRationalField.to_sympy", false]], "to_sympy() (sympy.polys.domains.integerring method)": [[211, "sympy.polys.domains.IntegerRing.to_sympy", false]], "to_sympy() (sympy.polys.domains.polynomialring method)": [[211, "sympy.polys.domains.PolynomialRing.to_sympy", false]], "to_sympy() (sympy.polys.domains.rationalfield method)": [[211, "sympy.polys.domains.RationalField.to_sympy", false]], "to_sympy() (sympy.polys.domains.realfield method)": [[211, "sympy.polys.domains.RealField.to_sympy", false]], "to_sympy_dict() (sympy.polys.polyclasses.anp method)": [[211, "sympy.polys.polyclasses.ANP.to_sympy_dict", false]], "to_sympy_dict() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.to_sympy_dict", false]], "to_sympy_list() (sympy.polys.polyclasses.anp method)": [[211, "sympy.polys.polyclasses.ANP.to_sympy_list", false]], "to_sympy_list() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.to_sympy_list", false]], "to_tree() (sympy.combinatorics.prufer.prufer static method)": [[82, "sympy.combinatorics.prufer.Prufer.to_tree", false]], "to_tuple() (sympy.polys.polyclasses.anp method)": [[211, "sympy.polys.polyclasses.ANP.to_tuple", false]], "to_tuple() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.to_tuple", false]], "todod() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.todod", false]], "todok() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.todok", false]], "together() (in module sympy.polys.rationaltools)": [[216, "sympy.polys.rationaltools.together", false]], "together() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.together", false]], "token (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Token", false]], "tolist() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.tolist", false]], "topological_sort() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.topological_sort", false]], "topological_sort() (sympy.codegen.ast.codeblock class method)": [[69, "sympy.codegen.ast.CodeBlock.topological_sort", false]], "torque (class in sympy.physics.mechanics.loads)": [[154, "sympy.physics.mechanics.loads.Torque", false]], "torque (sympy.physics.mechanics.actuator.torqueactuator property)": [[147, "sympy.physics.mechanics.actuator.TorqueActuator.torque", false]], "torqueactuator (class in sympy.physics.mechanics.actuator)": [[147, "sympy.physics.mechanics.actuator.TorqueActuator", false]], "torsional_moment() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[135, "sympy.physics.continuum_mechanics.beam.Beam3D.torsional_moment", false]], "total_degree() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.total_degree", false]], "total_degree() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.total_degree", false]], "totient (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.totient", false]], "totient() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.totient", false]], "totientrange() (sympy.ntheory.generate.sieve method)": [[128, "sympy.ntheory.generate.Sieve.totientrange", false]], "tp (sympy.polys.domains.domain.domain property)": [[211, "sympy.polys.domains.domain.Domain.tp", false]], "tr0() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.TR0", false]], "tr1() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.TR1", false]], "tr10() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.TR10", false]], "tr10i() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.TR10i", false]], "tr11() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.TR11", false]], "tr111() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.TR111", false]], "tr12() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.TR12", false]], "tr12i() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.TR12i", false]], "tr13() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.TR13", false]], "tr14() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.TR14", false]], "tr15() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.TR15", false]], "tr16() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.TR16", false]], "tr2() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.TR2", false]], "tr22() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.TR22", false]], "tr2i() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.TR2i", false]], "tr3() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.TR3", false]], "tr4() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.TR4", false]], "tr5() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.TR5", false]], "tr6() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.TR6", false]], "tr7() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.TR7", false]], "tr8() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.TR8", false]], "tr9() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.TR9", false]], "trace (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.Trace", false]], "trace() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.trace", false]], "trailing() (in module sympy.core.intfunc)": [[88, "sympy.core.intfunc.trailing", false]], "transcendental": [[88, "term-transcendental", true]], "transcendentalpredicate (class in sympy.assumptions.predicates.sets)": [[65, "sympy.assumptions.predicates.sets.TranscendentalPredicate", false]], "transferfunction (class in sympy.physics.control.lti)": [[143, "sympy.physics.control.lti.TransferFunction", false]], "transferfunctionmatrix (class in sympy.physics.control.lti)": [[143, "sympy.physics.control.lti.TransferFunctionMatrix", false]], "transform() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.transform", false]], "transform() (sympy.geometry.point.point2d method)": [[103, "sympy.geometry.point.Point2D.transform", false]], "transform() (sympy.geometry.point.point3d method)": [[103, "sympy.geometry.point.Point3D.transform", false]], "transform() (sympy.integrals.integrals.integral method)": [[115, "sympy.integrals.integrals.Integral.transform", false]], "transform() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.transform", false]], "transform() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.transform", false]], "transform_variable (sympy.integrals.transforms.integraltransform property)": [[115, "sympy.integrals.transforms.IntegralTransform.transform_variable", false]], "transformation() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.transformation", false]], "transformation_to_dn() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.transformation_to_DN", false]], "transformation_to_normal() (in module sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.transformation_to_normal", false]], "transformtosympyexpr (class in sympy.parsing.latex.lark)": [[130, "sympy.parsing.latex.lark.TransformToSymPyExpr", false]], "transition_probabilities (sympy.stats.discretemarkovchain property)": [[240, "sympy.stats.DiscreteMarkovChain.transition_probabilities", false]], "transitivity_degree (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.transitivity_degree", false]], "translate() (in module sympy.utilities.misc)": [[261, "sympy.utilities.misc.translate", false]], "translate() (sympy.geometry.curve.curve method)": [[97, "sympy.geometry.curve.Curve.translate", false]], "translate() (sympy.geometry.entity.geometryentity method)": [[99, "sympy.geometry.entity.GeometryEntity.translate", false]], "translate() (sympy.geometry.point.point2d method)": [[103, "sympy.geometry.point.Point2D.translate", false]], "translate() (sympy.geometry.point.point3d method)": [[103, "sympy.geometry.point.Point3D.translate", false]], "translation_coordinate (sympy.physics.mechanics.joint.cylindricaljoint property)": [[151, "sympy.physics.mechanics.joint.CylindricalJoint.translation_coordinate", false]], "translation_speed (sympy.physics.mechanics.joint.cylindricaljoint property)": [[151, "sympy.physics.mechanics.joint.CylindricalJoint.translation_speed", false]], "transmissive_filter() (in module sympy.physics.optics.polarization)": [[162, "sympy.physics.optics.polarization.transmissive_filter", false]], "transpose (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.Transpose", false]], "transpose() (sympy.matrices.expressions.blockmatrix.blockmatrix method)": [[120, "sympy.matrices.expressions.blockmatrix.BlockMatrix.transpose", false]], "transpose() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.transpose", false]], "transpose() (sympy.physics.control.lti.transferfunctionmatrix method)": [[143, "sympy.physics.control.lti.TransferFunctionMatrix.transpose", false]], "transpose() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.transpose", false]], "transpose() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.transpose", false]], "transpose() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.transpose", false]], "transpositions() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.transpositions", false]], "transverse_magnification() (in module sympy.physics.optics.utils)": [[163, "sympy.physics.optics.utils.transverse_magnification", false]], "trapezoidal() (in module sympy.stats)": [[240, "sympy.stats.Trapezoidal", false]], "tree() (in module sympy.printing.tree)": [[220, "sympy.printing.tree.tree", false]], "tree_cse() (in module sympy.simplify.cse_main)": [[232, "sympy.simplify.cse_main.tree_cse", false]], "tree_repr (sympy.combinatorics.prufer.prufer property)": [[82, "sympy.combinatorics.prufer.Prufer.tree_repr", false]], "triangle (class in sympy.geometry.polygon)": [[104, "sympy.geometry.polygon.Triangle", false]], "triangular() (in module sympy.stats)": [[240, "sympy.stats.Triangular", false]], "triangularpredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.TriangularPredicate", false]], "tribonacci (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.tribonacci", false]], "tribonacciconstant (class in sympy.core.numbers)": [[88, "sympy.core.numbers.TribonacciConstant", false]], "trigamma (class in sympy.functions.special.gamma_functions)": [[96, "sympy.functions.special.gamma_functions.trigamma", false]], "trigintegrate() (in module sympy.integrals.trigonometry)": [[115, "sympy.integrals.trigonometry.trigintegrate", false]], "trigsimp() (in module sympy.simplify.trigsimp)": [[232, "sympy.simplify.trigsimp.trigsimp", false]], "trigsimp() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.trigsimp", false]], "trmorrie() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.TRmorrie", false]], "trpower() (in module sympy.simplify.fu)": [[229, "sympy.simplify.fu.TRpower", false]], "trunc() (in module sympy.polys.polytools)": [[216, "sympy.polys.polytools.trunc", false]], "trunc() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.trunc", false]], "trunc() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.trunc", false]], "truncate() (sympy.series.formal.formalpowerseries method)": [[222, "sympy.series.formal.FormalPowerSeries.truncate", false]], "truncate() (sympy.series.fourier.fourierseries method)": [[223, "sympy.series.fourier.FourierSeries.truncate", false]], "truss (class in sympy.physics.continuum_mechanics.truss)": [[139, "sympy.physics.continuum_mechanics.truss.Truss", false]], "truth_table() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.truth_table", false]], "tuple (class in sympy.core.containers)": [[88, "sympy.core.containers.Tuple", false]], "tuple_count() (sympy.core.containers.tuple method)": [[88, "sympy.core.containers.Tuple.tuple_count", false]], "tuplekind (class in sympy.core.containers)": [[88, "sympy.core.containers.TupleKind", false]], "twave (class in sympy.physics.optics.waves)": [[164, "sympy.physics.optics.waves.TWave", false]], "two_qubit_box() (sympy.physics.quantum.circuitplot.circuitplot method)": [[170, "sympy.physics.quantum.circuitplot.CircuitPlot.two_qubit_box", false]], "twoform_to_matrix() (in module sympy.diffgeom)": [[90, "sympy.diffgeom.twoform_to_matrix", false]], "twoqubitgate (class in sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.TwoQubitGate", false]], "type (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Type", false]], "typea (class in sympy.liealgebras.type_a)": [[117, "sympy.liealgebras.type_a.TypeA", false]], "typeb (class in sympy.liealgebras.type_b)": [[117, "sympy.liealgebras.type_b.TypeB", false]], "typec (class in sympy.liealgebras.type_c)": [[117, "sympy.liealgebras.type_c.TypeC", false]], "typed (class in sympy.liealgebras.type_d)": [[117, "sympy.liealgebras.type_d.TypeD", false]], "typee (class in sympy.liealgebras.type_e)": [[117, "sympy.liealgebras.type_e.TypeE", false]], "typef (class in sympy.liealgebras.type_f)": [[117, "sympy.liealgebras.type_f.TypeF", false]], "typeg (class in sympy.liealgebras.type_g)": [[117, "sympy.liealgebras.type_g.TypeG", false]], "u (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[148, "sympy.physics.mechanics.jointsmethod.JointsMethod.u", false]], "u (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.u", false]], "u (sympy.physics.vector.frame.referenceframe property)": [[199, "sympy.physics.vector.frame.ReferenceFrame.u", false]], "u() (in module sympy.printing.pretty.pretty_symbology)": [[220, "sympy.printing.pretty.pretty_symbology.U", false]], "u_aux (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.u_aux", false]], "u_dep (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.u_dep", false]], "u_ind (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.u_ind", false]], "udivisor_count() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.udivisor_count", false]], "udivisor_sigma (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.udivisor_sigma", false]], "udivisor_sigma() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.udivisor_sigma", false]], "udivisors() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.udivisors", false]], "udldecomposition() (sympy.matrices.expressions.blockmatrix.blockmatrix method)": [[120, "sympy.matrices.expressions.blockmatrix.BlockMatrix.UDLdecomposition", false]], "ufuncify() (in module sympy.utilities.autowrap)": [[252, "sympy.utilities.autowrap.ufuncify", false]], "ufuncifycodewrapper (class in sympy.utilities.autowrap)": [[252, "sympy.utilities.autowrap.UfuncifyCodeWrapper", false]], "ugate (class in sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.UGate", false]], "uncouple() (in module sympy.physics.quantum.spin)": [[187, "sympy.physics.quantum.spin.uncouple", false]], "undefined function": [[15, "term-Undefined-Function", true]], "undefinedkind (in module sympy.core.kind)": [[88, "sympy.core.kind.UndefinedKind", false]], "undefinedpredicate (class in sympy.assumptions.assume)": [[63, "sympy.assumptions.assume.UndefinedPredicate", false]], "unequality (class in sympy.core.relational)": [[88, "sympy.core.relational.Unequality", false]], "unevaluated": [[15, "term-Unevaluated", true]], "unevaluatedexpr (class in sympy.core.expr)": [[88, "sympy.core.expr.UnevaluatedExpr", false]], "unflatten() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.unflatten", false]], "unificationfailed (class in sympy.polys.polyerrors)": [[213, "sympy.polys.polyerrors.UnificationFailed", false]], "uniform() (in module sympy.stats)": [[240, "sympy.stats.Uniform", false]], "uniformsum() (in module sympy.stats)": [[240, "sympy.stats.UniformSum", false]], "unify() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.unify", false]], "unify() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.unify", false]], "unify() (sympy.polys.numberfields.modules.moduleelement method)": [[215, "sympy.polys.numberfields.modules.ModuleElement.unify", false]], "unify() (sympy.polys.polyclasses.anp method)": [[211, "sympy.polys.polyclasses.ANP.unify", false]], "unify() (sympy.polys.polytools.poly method)": [[216, "sympy.polys.polytools.Poly.unify", false]], "unify_anp() (sympy.polys.polyclasses.anp method)": [[211, "sympy.polys.polyclasses.ANP.unify_ANP", false]], "unify_composite() (sympy.polys.domains.domain.domain method)": [[211, "sympy.polys.domains.domain.Domain.unify_composite", false]], "unify_dmp() (sympy.polys.polyclasses.dmp method)": [[211, "sympy.polys.polyclasses.DMP.unify_DMP", false]], "union (class in sympy.codegen.cnodes)": [[69, "sympy.codegen.cnodes.union", false]], "union (class in sympy.sets.sets)": [[228, "sympy.sets.sets.Union", false]], "union() (sympy.polys.agca.ideals.ideal method)": [[207, "sympy.polys.agca.ideals.Ideal.union", false]], "union() (sympy.polys.agca.modules.submodule method)": [[207, "sympy.polys.agca.modules.SubModule.union", false]], "union() (sympy.series.gruntz.subsset method)": [[227, "sympy.series.gruntz.SubsSet.union", false]], "union() (sympy.sets.sets.set method)": [[228, "sympy.sets.sets.Set.union", false]], "uniq() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.uniq", false]], "unit (sympy.geometry.point.point property)": [[103, "sympy.geometry.point.Point.unit", false]], "unit (sympy.polys.polytools.poly property)": [[216, "sympy.polys.polytools.Poly.unit", false]], "unitaryoperator (class in sympy.physics.quantum.operator)": [[179, "sympy.physics.quantum.operator.UnitaryOperator", false]], "unitarypredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.UnitaryPredicate", false]], "unitsystem (class in sympy.physics.units.unitsystem)": [[198, "sympy.physics.units.unitsystem.UnitSystem", false]], "unittriangularpredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.UnitTriangularPredicate", false]], "univariate (class in sympy.solvers.diophantine.diophantine)": [[233, "sympy.solvers.diophantine.diophantine.Univariate", false]], "univariatepolynomialerror (class in sympy.polys.polyerrors)": [[213, "sympy.polys.polyerrors.UnivariatePolynomialError", false]], "universalset (class in sympy.sets.sets)": [[228, "sympy.sets.sets.UniversalSet", false]], "unrad() (in module sympy.solvers.solvers)": [[238, "sympy.solvers.solvers.unrad", false]], "unrank() (sympy.combinatorics.graycode.graycode class method)": [[72, "sympy.combinatorics.graycode.GrayCode.unrank", false]], "unrank() (sympy.combinatorics.prufer.prufer class method)": [[82, "sympy.combinatorics.prufer.Prufer.unrank", false]], "unrank_binary() (sympy.combinatorics.subsets.subset class method)": [[83, "sympy.combinatorics.subsets.Subset.unrank_binary", false]], "unrank_gray() (sympy.combinatorics.subsets.subset class method)": [[83, "sympy.combinatorics.subsets.Subset.unrank_gray", false]], "unrank_lex() (sympy.combinatorics.permutations.permutation class method)": [[80, "sympy.combinatorics.permutations.Permutation.unrank_lex", false]], "unrank_nonlex() (sympy.combinatorics.permutations.permutation class method)": [[80, "sympy.combinatorics.permutations.Permutation.unrank_nonlex", false]], "unrank_trotterjohnson() (sympy.combinatorics.permutations.permutation class method)": [[80, "sympy.combinatorics.permutations.Permutation.unrank_trotterjohnson", false]], "unsignedinttype (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.UnsignedIntType", false]], "update() (sympy.physics.quantum.circuitplot.circuitplot method)": [[170, "sympy.physics.quantum.circuitplot.CircuitPlot.update", false]], "upper (sympy.physics.secondquant.antisymmetrictensor property)": [[190, "sympy.physics.secondquant.AntiSymmetricTensor.upper", false]], "upper (sympy.tensor.indexed.idx property)": [[245, "sympy.tensor.indexed.Idx.upper", false]], "upper_hessenberg_decomposition() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.upper_hessenberg_decomposition", false]], "upper_triangular() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.upper_triangular", false]], "upper_triangular_solve() (sympy.matrices.dense.densematrix method)": [[119, "sympy.matrices.dense.DenseMatrix.upper_triangular_solve", false]], "upper_triangular_solve() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.upper_triangular_solve", false]], "uppergamma (class in sympy.functions.special.gamma_functions)": [[96, "sympy.functions.special.gamma_functions.uppergamma", false]], "uppertriangularpredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.UpperTriangularPredicate", false]], "use (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.use", false]], "use() (in module sympy.core.traversal)": [[88, "sympy.core.traversal.use", false]], "use_rename (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.use_rename", false]], "using (class in sympy.codegen.cxxnodes)": [[69, "sympy.codegen.cxxnodes.using", false]], "v1pt_theory() (sympy.physics.vector.point.point method)": [[203, "sympy.physics.vector.point.Point.v1pt_theory", false]], "v2pt_theory() (sympy.physics.vector.point.point method)": [[203, "sympy.physics.vector.point.Point.v2pt_theory", false]], "v_m_max (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.v_M_max", false]], "validate_system() (sympy.physics.mechanics.system.system method)": [[157, "sympy.physics.mechanics.system.System.validate_system", false]], "valuation() (sympy.polys.numberfields.primes.primeideal method)": [[215, "sympy.polys.numberfields.primes.PrimeIdeal.valuation", false]], "values() (sympy.core.containers.dict method)": [[88, "sympy.core.containers.Dict.values", false]], "values() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.values", false]], "var (sympy.physics.control.lti.feedback property)": [[143, "sympy.physics.control.lti.Feedback.var", false]], "var (sympy.physics.control.lti.mimofeedback property)": [[143, "sympy.physics.control.lti.MIMOFeedback.var", false]], "var (sympy.physics.control.lti.mimoparallel property)": [[143, "sympy.physics.control.lti.MIMOParallel.var", false]], "var (sympy.physics.control.lti.mimoseries property)": [[143, "sympy.physics.control.lti.MIMOSeries.var", false]], "var (sympy.physics.control.lti.parallel property)": [[143, "sympy.physics.control.lti.Parallel.var", false]], "var (sympy.physics.control.lti.series property)": [[143, "sympy.physics.control.lti.Series.var", false]], "var (sympy.physics.control.lti.transferfunction property)": [[143, "sympy.physics.control.lti.TransferFunction.var", false]], "var (sympy.physics.control.lti.transferfunctionmatrix property)": [[143, "sympy.physics.control.lti.TransferFunctionMatrix.var", false]], "var() (in module sympy.core.symbol)": [[88, "sympy.core.symbol.var", false]], "varbosonicbasis (class in sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.VarBosonicBasis", false]], "variable (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Variable", false]], "variable (sympy.physics.continuum_mechanics.beam.beam property)": [[135, "sympy.physics.continuum_mechanics.beam.Beam.variable", false]], "variable_map() (sympy.physics.vector.frame.referenceframe method)": [[199, "sympy.physics.vector.frame.ReferenceFrame.variable_map", false]], "variables (sympy.concrete.expr_with_limits.exprwithlimits property)": [[115, "sympy.concrete.expr_with_limits.ExprWithLimits.variables", false]], "variables (sympy.core.function.lambda property)": [[88, "sympy.core.function.Lambda.variables", false]], "variables (sympy.core.function.subs property)": [[88, "sympy.core.function.Subs.variables", false]], "variables (sympy.physics.quantum.operator.differentialoperator property)": [[179, "sympy.physics.quantum.operator.DifferentialOperator.variables", false]], "variables (sympy.physics.quantum.state.wavefunction property)": [[188, "sympy.physics.quantum.state.Wavefunction.variables", false]], "variables (sympy.series.sequences.seqbase property)": [[226, "sympy.series.sequences.SeqBase.variables", false]], "variables (sympy.utilities.codegen.routine property)": [[253, "sympy.utilities.codegen.Routine.variables", false]], "variance (class in sympy.stats)": [[240, "sympy.stats.Variance", false]], "variance() (in module sympy.stats)": [[240, "sympy.stats.variance", false]], "variancematrix (class in sympy.stats)": [[240, "sympy.stats.VarianceMatrix", false]], "variations() (in module sympy.utilities.iterables)": [[258, "sympy.utilities.iterables.variations", false]], "vec() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.vec", false]], "vech() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.vech", false]], "vector (class in sympy.physics.vector.vector)": [[199, "sympy.physics.vector.vector.Vector", false]], "vector (class in sympy.vector.vector)": [[264, "sympy.vector.vector.Vector", false]], "vector_coplanar() (sympy.algebras.quaternion class method)": [[61, "sympy.algebras.Quaternion.vector_coplanar", false]], "vector_integrate() (in module sympy.vector.integrals)": [[267, "sympy.vector.integrals.vector_integrate", false]], "vector_part() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.vector_part", false]], "vectorize (class in sympy.core.multidimensional)": [[88, "sympy.core.multidimensional.vectorize", false]], "vectors_in_basis() (in module sympy.diffgeom)": [[90, "sympy.diffgeom.vectors_in_basis", false]], "vee() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.vee", false]], "vel() (sympy.physics.vector.point.point method)": [[203, "sympy.physics.vector.point.Point.vel", false]], "velocity_constraints (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.velocity_constraints", false]], "verify_numerically() (in module sympy.core.random)": [[88, "sympy.core.random.verify_numerically", false]], "vertices (sympy.combinatorics.polyhedron.polyhedron property)": [[81, "sympy.combinatorics.polyhedron.Polyhedron.vertices", false]], "vertices (sympy.geometry.polygon.polygon property)": [[104, "sympy.geometry.polygon.Polygon.vertices", false]], "vertices (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.vertices", false]], "vertices (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.vertices", false]], "vf() (in module sympy.printing.pretty.pretty_symbology)": [[220, "sympy.printing.pretty.pretty_symbology.VF", false]], "vfield() (in module sympy.polys.fields)": [[211, "sympy.polys.fields.vfield", false]], "viete() (in module sympy.polys.polyfuncs)": [[216, "sympy.polys.polyfuncs.viete", false]], "vlatex() (in module sympy.physics.vector.printing)": [[204, "sympy.physics.vector.printing.vlatex", false]], "vobj() (in module sympy.printing.pretty.pretty_symbology)": [[220, "sympy.printing.pretty.pretty_symbology.vobj", false]], "vonmises() (in module sympy.stats)": [[240, "sympy.stats.VonMises", false]], "vpprint() (in module sympy.physics.vector.printing)": [[204, "sympy.physics.vector.printing.vpprint", false]], "vprint() (in module sympy.physics.vector.printing)": [[204, "sympy.physics.vector.printing.vprint", false]], "vradius (sympy.geometry.ellipse.circle property)": [[98, "sympy.geometry.ellipse.Circle.vradius", false]], "vradius (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.vradius", false]], "vring() (in module sympy.polys.rings)": [[211, "sympy.polys.rings.vring", false]], "vstack() (sympy.matrices.matrixbase.matrixbase class method)": [[124, "sympy.matrices.matrixbase.MatrixBase.vstack", false]], "vstack() (sympy.polys.matrices._dfm.dfm method)": [[209, "sympy.polys.matrices._dfm.DFM.vstack", false]], "vstack() (sympy.polys.matrices.ddm.ddm method)": [[209, "sympy.polys.matrices.ddm.DDM.vstack", false]], "vstack() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.vstack", false]], "vstack() (sympy.polys.matrices.sdm.sdm method)": [[209, "sympy.polys.matrices.sdm.SDM.vstack", false]], "w (sympy.physics.optics.gaussopt.beamparameter property)": [[159, "sympy.physics.optics.gaussopt.BeamParameter.w", false]], "w_0 (sympy.physics.optics.gaussopt.beamparameter property)": [[159, "sympy.physics.optics.gaussopt.BeamParameter.w_0", false]], "waist2rayleigh() (in module sympy.physics.optics.gaussopt)": [[159, "sympy.physics.optics.gaussopt.waist2rayleigh", false]], "waist_approximation_limit (sympy.physics.optics.gaussopt.beamparameter property)": [[159, "sympy.physics.optics.gaussopt.BeamParameter.waist_approximation_limit", false]], "wald() (in module sympy.stats)": [[240, "sympy.stats.Wald", false]], "walk() (in module sympy.core.traversal)": [[88, "sympy.core.traversal.walk", false]], "warns() (in module sympy.testing.pytest)": [[249, "sympy.testing.pytest.warns", false]], "warns_deprecated_sympy() (in module sympy.testing.pytest)": [[249, "sympy.testing.pytest.warns_deprecated_sympy", false]], "wavefunction (class in sympy.physics.quantum.state)": [[188, "sympy.physics.quantum.state.Wavefunction", false]], "wavelength (sympy.physics.optics.waves.twave property)": [[164, "sympy.physics.optics.waves.TWave.wavelength", false]], "wavenumber (sympy.physics.optics.waves.twave property)": [[164, "sympy.physics.optics.waves.TWave.wavenumber", false]], "weak (sympy.core.relational.relational property)": [[88, "sympy.core.relational.Relational.weak", false]], "wedgeproduct (class in sympy.diffgeom)": [[90, "sympy.diffgeom.WedgeProduct", false]], "weibull() (in module sympy.stats)": [[240, "sympy.stats.Weibull", false]], "weldjoint (class in sympy.physics.mechanics.joint)": [[151, "sympy.physics.mechanics.joint.WeldJoint", false]], "weylgroup (class in sympy.liealgebras.weyl_group)": [[117, "sympy.liealgebras.weyl_group.WeylGroup", false]], "wgate (class in sympy.physics.quantum.grover)": [[175, "sympy.physics.quantum.grover.WGate", false]], "where() (in module sympy.stats)": [[240, "sympy.stats.where", false]], "while (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.While", false]], "whole_submodule() (sympy.polys.numberfields.modules.module method)": [[215, "sympy.polys.numberfields.modules.Module.whole_submodule", false]], "wicks() (in module sympy.physics.secondquant)": [[190, "sympy.physics.secondquant.wicks", false]], "width (sympy.categories.diagram_drawing.diagramgrid property)": [[68, "sympy.categories.diagram_drawing.DiagramGrid.width", false]], "width() (sympy.printing.pretty.stringpict.stringpict method)": [[220, "sympy.printing.pretty.stringpict.stringPict.width", false]], "wienerprocess (class in sympy.stats)": [[240, "sympy.stats.WienerProcess", false]], "wigner3j (class in sympy.physics.quantum.cg)": [[169, "sympy.physics.quantum.cg.Wigner3j", false]], "wigner6j (class in sympy.physics.quantum.cg)": [[169, "sympy.physics.quantum.cg.Wigner6j", false]], "wigner9j (class in sympy.physics.quantum.cg)": [[169, "sympy.physics.quantum.cg.Wigner9j", false]], "wigner_3j() (in module sympy.physics.wigner)": [[205, "sympy.physics.wigner.wigner_3j", false]], "wigner_6j() (in module sympy.physics.wigner)": [[205, "sympy.physics.wigner.wigner_6j", false]], "wigner_9j() (in module sympy.physics.wigner)": [[205, "sympy.physics.wigner.wigner_9j", false]], "wigner_d() (in module sympy.physics.wigner)": [[205, "sympy.physics.wigner.wigner_d", false]], "wigner_d_small() (in module sympy.physics.wigner)": [[205, "sympy.physics.wigner.wigner_d_small", false]], "wignerd (class in sympy.physics.quantum.spin)": [[187, "sympy.physics.quantum.spin.WignerD", false]], "wignersemicircle() (in module sympy.stats)": [[240, "sympy.stats.WignerSemicircle", false]], "wild (class in sympy.core.symbol)": [[88, "sympy.core.symbol.Wild", false]], "wildfunction (class in sympy.core.function)": [[88, "sympy.core.function.WildFunction", false]], "wilkinson() (sympy.matrices.matrixbase.matrixbase class method)": [[124, "sympy.matrices.matrixbase.MatrixBase.wilkinson", false]], "wishart() (in module sympy.stats)": [[240, "sympy.stats.Wishart", false]], "with_defaults() (sympy.physics.biomechanics.activation.activationbase class method)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 class method)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.activation.zerothorderactivation class method)": [[131, "sympy.physics.biomechanics.activation.ZerothOrderActivation.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.curve.fiberforcelengthactivedegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthActiveDeGroote2016.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.curve.fiberforcelengthpassivedegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveDeGroote2016.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.curve.fiberforcelengthpassiveinversedegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveInverseDeGroote2016.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.curve.fiberforcevelocitydegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.FiberForceVelocityDeGroote2016.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.curve.fiberforcevelocityinversedegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.FiberForceVelocityInverseDeGroote2016.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.curve.tendonforcelengthdegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.TendonForceLengthDeGroote2016.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.curve.tendonforcelengthinversedegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.TendonForceLengthInverseDeGroote2016.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.musculotendon.musculotendonbase class method)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.with_defaults", false]], "wrappingcylinder (class in sympy.physics.mechanics.wrapping_geometry)": [[158, "sympy.physics.mechanics.wrapping_geometry.WrappingCylinder", false]], "wrappinggeometrybase (class in sympy.physics.mechanics.wrapping_geometry)": [[158, "sympy.physics.mechanics.wrapping_geometry.WrappingGeometryBase", false]], "wrappingpathway (class in sympy.physics.mechanics.pathway)": [[155, "sympy.physics.mechanics.pathway.WrappingPathway", false]], "wrappingsphere (class in sympy.physics.mechanics.wrapping_geometry)": [[158, "sympy.physics.mechanics.wrapping_geometry.WrappingSphere", false]], "write() (sympy.testing.runtests.pytestreporter method)": [[251, "sympy.testing.runtests.PyTestReporter.write", false]], "write() (sympy.utilities.codegen.codegen method)": [[253, "sympy.utilities.codegen.CodeGen.write", false]], "wronskian() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.wronskian", false]], "x (in module sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.X", false]], "x (sympy.geometry.point.point2d property)": [[103, "sympy.geometry.point.Point2D.x", false]], "x (sympy.geometry.point.point3d property)": [[103, "sympy.geometry.point.Point3D.x", false]], "x (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.x", false]], "x (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.x", false]], "x (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[131, "sympy.physics.biomechanics.activation.ZerothOrderActivation.x", false]], "x (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.x", false]], "x (sympy.physics.mechanics.body.body property)": [[148, "sympy.physics.mechanics.body.Body.x", false]], "x (sympy.physics.mechanics.rigidbody.rigidbody property)": [[154, "sympy.physics.mechanics.rigidbody.RigidBody.x", false]], "x (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.x", false]], "x (sympy.physics.vector.frame.referenceframe property)": [[199, "sympy.physics.vector.frame.ReferenceFrame.x", false]], "xbra (class in sympy.physics.quantum.cartesian)": [[168, "sympy.physics.quantum.cartesian.XBra", false]], "xdirection (sympy.geometry.line.ray2d property)": [[101, "sympy.geometry.line.Ray2D.xdirection", false]], "xdirection (sympy.geometry.line.ray3d property)": [[101, "sympy.geometry.line.Ray3D.xdirection", false]], "xfield() (in module sympy.polys.fields)": [[211, "sympy.polys.fields.xfield", false]], "xgate (class in sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.XGate", false]], "xket (class in sympy.physics.quantum.cartesian)": [[168, "sympy.physics.quantum.cartesian.XKet", false]], "xnor (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.Xnor", false]], "xobj() (in module sympy.printing.pretty.pretty_symbology)": [[220, "sympy.printing.pretty.pretty_symbology.xobj", false]], "xop (class in sympy.physics.quantum.cartesian)": [[168, "sympy.physics.quantum.cartesian.XOp", false]], "xor (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.Xor", false]], "xreplace() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.xreplace", false]], "xreplace() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.xreplace", false]], "xreplace() (sympy.physics.vector.dyadic.dyadic method)": [[199, "sympy.physics.vector.dyadic.Dyadic.xreplace", false]], "xreplace() (sympy.physics.vector.vector.vector method)": [[199, "sympy.physics.vector.vector.Vector.xreplace", false]], "xring() (in module sympy.polys.rings)": [[211, "sympy.polys.rings.xring", false]], "xstr() (in module sympy.printing.pretty.pretty_symbology)": [[220, "sympy.printing.pretty.pretty_symbology.xstr", false]], "xsym() (in module sympy.printing.pretty.pretty_symbology)": [[220, "sympy.printing.pretty.pretty_symbology.xsym", false]], "xthreaded() (in module sympy.utilities.decorator)": [[254, "sympy.utilities.decorator.xthreaded", false]], "xx (sympy.physics.vector.frame.referenceframe property)": [[199, "sympy.physics.vector.frame.ReferenceFrame.xx", false]], "xy (sympy.physics.vector.frame.referenceframe property)": [[199, "sympy.physics.vector.frame.ReferenceFrame.xy", false]], "xypic_draw_diagram() (in module sympy.categories.diagram_drawing)": [[68, "sympy.categories.diagram_drawing.xypic_draw_diagram", false]], "xypicdiagramdrawer (class in sympy.categories.diagram_drawing)": [[68, "sympy.categories.diagram_drawing.XypicDiagramDrawer", false]], "xz (sympy.physics.vector.frame.referenceframe property)": [[199, "sympy.physics.vector.frame.ReferenceFrame.xz", false]], "y (in module sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.Y", false]], "y (sympy.geometry.point.point2d property)": [[103, "sympy.geometry.point.Point2D.y", false]], "y (sympy.geometry.point.point3d property)": [[103, "sympy.geometry.point.Point3D.y", false]], "y (sympy.physics.mechanics.body.body property)": [[148, "sympy.physics.mechanics.body.Body.y", false]], "y (sympy.physics.mechanics.rigidbody.rigidbody property)": [[154, "sympy.physics.mechanics.rigidbody.RigidBody.y", false]], "y (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.y", false]], "y (sympy.physics.vector.frame.referenceframe property)": [[199, "sympy.physics.vector.frame.ReferenceFrame.y", false]], "y (sympy.series.sequences.recursiveseq property)": [[226, "sympy.series.sequences.RecursiveSeq.y", false]], "ydirection (sympy.geometry.line.ray2d property)": [[101, "sympy.geometry.line.Ray2D.ydirection", false]], "ydirection (sympy.geometry.line.ray3d property)": [[101, "sympy.geometry.line.Ray3D.ydirection", false]], "ygate (class in sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.YGate", false]], "yn (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.yn", false]], "yn (sympy.series.sequences.recursiveseq property)": [[226, "sympy.series.sequences.RecursiveSeq.yn", false]], "ynm (class in sympy.functions.special.spherical_harmonics)": [[96, "sympy.functions.special.spherical_harmonics.Ynm", false]], "ynm_c() (in module sympy.functions.special.spherical_harmonics)": [[96, "sympy.functions.special.spherical_harmonics.Ynm_c", false]], "yop (class in sympy.physics.quantum.cartesian)": [[168, "sympy.physics.quantum.cartesian.YOp", false]], "yulesimon() (in module sympy.stats)": [[240, "sympy.stats.YuleSimon", false]], "yx (sympy.physics.vector.frame.referenceframe property)": [[199, "sympy.physics.vector.frame.ReferenceFrame.yx", false]], "yy (sympy.physics.vector.frame.referenceframe property)": [[199, "sympy.physics.vector.frame.ReferenceFrame.yy", false]], "yz (sympy.physics.vector.frame.referenceframe property)": [[199, "sympy.physics.vector.frame.ReferenceFrame.yz", false]], "z (in module sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.Z", false]], "z (sympy.geometry.point.point3d property)": [[103, "sympy.geometry.point.Point3D.z", false]], "z (sympy.physics.mechanics.body.body property)": [[148, "sympy.physics.mechanics.body.Body.z", false]], "z (sympy.physics.mechanics.rigidbody.rigidbody property)": [[154, "sympy.physics.mechanics.rigidbody.RigidBody.z", false]], "z (sympy.physics.mechanics.system.system property)": [[157, "sympy.physics.mechanics.system.System.z", false]], "z (sympy.physics.vector.frame.referenceframe property)": [[199, "sympy.physics.vector.frame.ReferenceFrame.z", false]], "zdirection (sympy.geometry.line.ray3d property)": [[101, "sympy.geometry.line.Ray3D.zdirection", false]], "zero": [[88, "term-zero", true]], "zero (class in sympy.core.numbers)": [[88, "sympy.core.numbers.Zero", false]], "zero (sympy.polys.domains.domain.domain attribute)": [[211, "sympy.polys.domains.domain.Domain.zero", false]], "zero (sympy.polys.polytools.poly property)": [[216, "sympy.polys.polytools.Poly.zero", false]], "zero() (sympy.polys.numberfields.modules.module method)": [[215, "sympy.polys.numberfields.modules.Module.zero", false]], "zeromatrix (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.ZeroMatrix", false]], "zeropredicate (class in sympy.assumptions.predicates.order)": [[65, "sympy.assumptions.predicates.order.ZeroPredicate", false]], "zeros() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.zeros", false]], "zeros() (sympy.matrices.matrixbase.matrixbase class method)": [[124, "sympy.matrices.matrixbase.MatrixBase.zeros", false]], "zeros() (sympy.physics.control.lti.transferfunction method)": [[143, "sympy.physics.control.lti.TransferFunction.zeros", false]], "zeros() (sympy.polys.matrices._dfm.dfm class method)": [[209, "sympy.polys.matrices._dfm.DFM.zeros", false]], "zeros() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[209, "sympy.polys.matrices.domainmatrix.DomainMatrix.zeros", false]], "zeros() (sympy.polys.matrices.sdm.sdm class method)": [[209, "sympy.polys.matrices.sdm.SDM.zeros", false]], "zerothorderactivation (class in sympy.physics.biomechanics.activation)": [[131, "sympy.physics.biomechanics.activation.ZerothOrderActivation", false]], "zeta (class in sympy.functions.special.zeta_functions)": [[96, "sympy.functions.special.zeta_functions.zeta", false]], "zeta() (in module sympy.stats)": [[240, "sympy.stats.Zeta", false]], "zgate (class in sympy.physics.quantum.gate)": [[174, "sympy.physics.quantum.gate.ZGate", false]], "znm (class in sympy.functions.special.spherical_harmonics)": [[96, "sympy.functions.special.spherical_harmonics.Znm", false]], "zoo": [[15, "term-zoo", true]], "zop (class in sympy.physics.quantum.cartesian)": [[168, "sympy.physics.quantum.cartesian.ZOp", false]], "zx (sympy.physics.vector.frame.referenceframe property)": [[199, "sympy.physics.vector.frame.ReferenceFrame.zx", false]], "zy (sympy.physics.vector.frame.referenceframe property)": [[199, "sympy.physics.vector.frame.ReferenceFrame.zy", false]], "zz (sympy.physics.vector.frame.referenceframe property)": [[199, "sympy.physics.vector.frame.ReferenceFrame.zz", false]]}, "objects": {"": [[58, 0, 0, "-", "sympy"]], "sympy": [[60, 0, 0, "-", "abc"], [61, 0, 0, "-", "algebras"], [64, 0, 0, "-", "assumptions"], [67, 0, 0, "-", "calculus"], [68, 0, 0, "-", "categories"], [90, 0, 0, "-", "diffgeom"], [91, 0, 0, "-", "discrete"], [95, 0, 0, "-", "functions"], [108, 0, 0, "-", "holonomic"], [115, 0, 0, "-", "integrals"], [116, 0, 0, "-", "interactive"], [117, 0, 0, "-", "liealgebras"], [118, 0, 0, "-", "logic"], [122, 0, 0, "-", "matrices"], [130, 0, 0, "-", "parsing"], [281, 0, 0, "-", "physics"], [216, 0, 0, "-", "polys"], [238, 0, 0, "-", "solvers"], [240, 0, 0, "-", "stats"], [243, 0, 0, "-", "tensor"], [248, 0, 0, "-", "testing"], [257, 0, 0, "-", "utilities"], [272, 0, 0, "-", "vector"]], "sympy.algebras": [[61, 1, 1, "", "Quaternion"]], "sympy.algebras.Quaternion": [[61, 2, 1, "", "add"], [61, 2, 1, "", "angle"], [61, 2, 1, "", "arc_coplanar"], [61, 2, 1, "", "axis"], [61, 2, 1, "", "exp"], [61, 2, 1, "", "from_Matrix"], [61, 2, 1, "", "from_axis_angle"], [61, 2, 1, "", "from_euler"], [61, 2, 1, "", "from_rotation_matrix"], [61, 2, 1, "", "index_vector"], [61, 2, 1, "", "integrate"], [61, 2, 1, "", "inverse"], [61, 2, 1, "", "is_pure"], [61, 2, 1, "", "is_zero_quaternion"], [61, 2, 1, "", "log"], [61, 2, 1, "", "mensor"], [61, 2, 1, "", "mul"], [61, 2, 1, "", "norm"], [61, 2, 1, "", "normalize"], [61, 2, 1, "", "orthogonal"], [61, 2, 1, "", "parallel"], [61, 2, 1, "", "pow"], [61, 2, 1, "", "pow_cos_sin"], [61, 3, 1, "", "product_matrix_left"], [61, 3, 1, "", "product_matrix_right"], [61, 2, 1, "", "rotate_point"], [61, 2, 1, "", "scalar_part"], [61, 2, 1, "", "set_norm"], [61, 2, 1, "", "to_Matrix"], [61, 2, 1, "", "to_axis_angle"], [61, 2, 1, "", "to_euler"], [61, 2, 1, "", "to_rotation_matrix"], [61, 2, 1, "", "vector_coplanar"], [61, 2, 1, "", "vector_part"]], "sympy.assumptions": [[62, 0, 0, "-", "ask"], [63, 0, 0, "-", "assume"], [65, 0, 0, "-", "predicates"], [66, 0, 0, "-", "refine"]], "sympy.assumptions.ask": [[62, 1, 1, "", "AssumptionKeys"], [62, 4, 1, "", "ask"], [62, 4, 1, "", "register_handler"], [62, 4, 1, "", "remove_handler"]], "sympy.assumptions.assume": [[63, 1, 1, "", "AppliedPredicate"], [63, 1, 1, "", "AssumptionsContext"], [63, 1, 1, "", "Predicate"], [63, 1, 1, "", "UndefinedPredicate"], [63, 4, 1, "", "assuming"]], "sympy.assumptions.assume.AppliedPredicate": [[63, 3, 1, "", "arg"], [63, 3, 1, "", "arguments"], [63, 3, 1, "", "function"]], "sympy.assumptions.assume.AssumptionsContext": [[63, 2, 1, "", "add"]], "sympy.assumptions.assume.Predicate": [[63, 2, 1, "", "eval"], [63, 5, 1, "", "handler"], [63, 2, 1, "", "register"], [63, 2, 1, "", "register_many"]], "sympy.assumptions.predicates.calculus": [[65, 1, 1, "", "FinitePredicate"], [65, 1, 1, "", "InfinitePredicate"]], "sympy.assumptions.predicates.calculus.FinitePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.calculus.InfinitePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common": [[65, 1, 1, "", "CommutativePredicate"], [65, 1, 1, "", "IsTruePredicate"]], "sympy.assumptions.predicates.common.CommutativePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common.IsTruePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices": [[65, 1, 1, "", "ComplexElementsPredicate"], [65, 1, 1, "", "DiagonalPredicate"], [65, 1, 1, "", "FullRankPredicate"], [65, 1, 1, "", "IntegerElementsPredicate"], [65, 1, 1, "", "InvertiblePredicate"], [65, 1, 1, "", "LowerTriangularPredicate"], [65, 1, 1, "", "NormalPredicate"], [65, 1, 1, "", "OrthogonalPredicate"], [65, 1, 1, "", "PositiveDefinitePredicate"], [65, 1, 1, "", "RealElementsPredicate"], [65, 1, 1, "", "SingularPredicate"], [65, 1, 1, "", "SquarePredicate"], [65, 1, 1, "", "SymmetricPredicate"], [65, 1, 1, "", "TriangularPredicate"], [65, 1, 1, "", "UnitTriangularPredicate"], [65, 1, 1, "", "UnitaryPredicate"], [65, 1, 1, "", "UpperTriangularPredicate"]], "sympy.assumptions.predicates.matrices.ComplexElementsPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.DiagonalPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.FullRankPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.IntegerElementsPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.InvertiblePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.LowerTriangularPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.NormalPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.OrthogonalPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.PositiveDefinitePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.RealElementsPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SingularPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SquarePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SymmetricPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.TriangularPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitTriangularPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitaryPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UpperTriangularPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory": [[65, 1, 1, "", "CompositePredicate"], [65, 1, 1, "", "EvenPredicate"], [65, 1, 1, "", "OddPredicate"], [65, 1, 1, "", "PrimePredicate"]], "sympy.assumptions.predicates.ntheory.CompositePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.EvenPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.OddPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.PrimePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order": [[65, 1, 1, "", "NegativePredicate"], [65, 1, 1, "", "NonNegativePredicate"], [65, 1, 1, "", "NonPositivePredicate"], [65, 1, 1, "", "NonZeroPredicate"], [65, 1, 1, "", "PositivePredicate"], [65, 1, 1, "", "ZeroPredicate"]], "sympy.assumptions.predicates.order.NegativePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonNegativePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonPositivePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonZeroPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.PositivePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.ZeroPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets": [[65, 1, 1, "", "AlgebraicPredicate"], [65, 1, 1, "", "AntihermitianPredicate"], [65, 1, 1, "", "ComplexPredicate"], [65, 1, 1, "", "ExtendedRealPredicate"], [65, 1, 1, "", "HermitianPredicate"], [65, 1, 1, "", "ImaginaryPredicate"], [65, 1, 1, "", "IntegerPredicate"], [65, 1, 1, "", "IrrationalPredicate"], [65, 1, 1, "", "RationalPredicate"], [65, 1, 1, "", "RealPredicate"], [65, 1, 1, "", "TranscendentalPredicate"]], "sympy.assumptions.predicates.sets.AlgebraicPredicate": [[65, 5, 1, "", "AlgebraicHandler"], [65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.AntihermitianPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ComplexPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ExtendedRealPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.HermitianPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ImaginaryPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IntegerPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IrrationalPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RationalPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RealPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.TranscendentalPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.refine": [[66, 4, 1, "", "refine"], [66, 4, 1, "", "refine_Pow"], [66, 4, 1, "", "refine_abs"], [66, 4, 1, "", "refine_arg"], [66, 4, 1, "", "refine_atan2"], [66, 4, 1, "", "refine_im"], [66, 4, 1, "", "refine_matrixelement"], [66, 4, 1, "", "refine_re"], [66, 4, 1, "", "refine_sign"]], "sympy.calculus": [[67, 0, 0, "-", "euler"], [67, 0, 0, "-", "finite_diff"], [67, 0, 0, "-", "singularities"], [67, 0, 0, "-", "util"]], "sympy.calculus.euler": [[67, 4, 1, "", "euler_equations"]], "sympy.calculus.finite_diff": [[67, 4, 1, "", "apply_finite_diff"], [67, 4, 1, "", "differentiate_finite"], [67, 4, 1, "", "finite_diff_weights"]], "sympy.calculus.singularities": [[67, 4, 1, "", "is_decreasing"], [67, 4, 1, "", "is_increasing"], [67, 4, 1, "", "is_monotonic"], [67, 4, 1, "", "is_strictly_decreasing"], [67, 4, 1, "", "is_strictly_increasing"], [67, 4, 1, "", "monotonicity_helper"], [67, 4, 1, "", "singularities"]], "sympy.calculus.util": [[67, 4, 1, "", "continuous_domain"], [67, 4, 1, "", "function_range"], [67, 4, 1, "", "is_convex"], [67, 4, 1, "", "lcim"], [67, 4, 1, "", "maximum"], [67, 4, 1, "", "minimum"], [67, 4, 1, "", "not_empty_in"], [67, 4, 1, "", "periodicity"], [67, 4, 1, "", "stationary_points"]], "sympy.categories": [[68, 1, 1, "", "Category"], [68, 1, 1, "", "CompositeMorphism"], [68, 1, 1, "", "Diagram"], [68, 1, 1, "", "IdentityMorphism"], [68, 1, 1, "", "Morphism"], [68, 1, 1, "", "NamedMorphism"], [68, 1, 1, "", "Object"], [68, 0, 0, "-", "diagram_drawing"]], "sympy.categories.Category": [[68, 3, 1, "", "commutative_diagrams"], [68, 3, 1, "", "name"], [68, 3, 1, "", "objects"]], "sympy.categories.CompositeMorphism": [[68, 3, 1, "", "codomain"], [68, 3, 1, "", "components"], [68, 3, 1, "", "domain"], [68, 2, 1, "", "flatten"]], "sympy.categories.Diagram": [[68, 3, 1, "", "conclusions"], [68, 2, 1, "", "hom"], [68, 2, 1, "", "is_subdiagram"], [68, 3, 1, "", "objects"], [68, 3, 1, "", "premises"], [68, 2, 1, "", "subdiagram_from_objects"]], "sympy.categories.Morphism": [[68, 3, 1, "", "codomain"], [68, 2, 1, "", "compose"], [68, 3, 1, "", "domain"]], "sympy.categories.NamedMorphism": [[68, 3, 1, "", "name"]], "sympy.categories.diagram_drawing": [[68, 1, 1, "", "ArrowStringDescription"], [68, 1, 1, "", "DiagramGrid"], [68, 1, 1, "", "XypicDiagramDrawer"], [68, 4, 1, "", "preview_diagram"], [68, 4, 1, "", "xypic_draw_diagram"]], "sympy.categories.diagram_drawing.DiagramGrid": [[68, 3, 1, "", "height"], [68, 3, 1, "", "morphisms"], [68, 3, 1, "", "width"]], "sympy.categories.diagram_drawing.XypicDiagramDrawer": [[68, 2, 1, "", "draw"]], "sympy.codegen": [[69, 0, 0, "-", "algorithms"], [69, 0, 0, "-", "approximations"], [69, 0, 0, "-", "ast"], [69, 0, 0, "-", "cfunctions"], [69, 0, 0, "-", "cnodes"], [69, 0, 0, "-", "cutils"], [69, 0, 0, "-", "cxxnodes"], [69, 0, 0, "-", "fnodes"], [69, 0, 0, "-", "futils"], [69, 0, 0, "-", "matrix_nodes"], [69, 0, 0, "-", "pyutils"], [69, 0, 0, "-", "rewriting"]], "sympy.codegen.algorithms": [[69, 4, 1, "", "newtons_method"], [69, 4, 1, "", "newtons_method_function"]], "sympy.codegen.approximations": [[69, 1, 1, "", "SeriesApprox"], [69, 1, 1, "", "SumApprox"]], "sympy.codegen.ast": [[69, 1, 1, "", "Assignment"], [69, 1, 1, "", "AssignmentBase"], [69, 1, 1, "", "Attribute"], [69, 1, 1, "", "AugmentedAssignment"], [69, 1, 1, "", "BreakToken"], [69, 1, 1, "", "CodeBlock"], [69, 1, 1, "", "Comment"], [69, 1, 1, "", "ComplexType"], [69, 1, 1, "", "ContinueToken"], [69, 1, 1, "", "Declaration"], [69, 1, 1, "", "Element"], [69, 1, 1, "", "FloatBaseType"], [69, 1, 1, "", "FloatType"], [69, 1, 1, "", "For"], [69, 1, 1, "", "FunctionCall"], [69, 1, 1, "", "FunctionDefinition"], [69, 1, 1, "", "FunctionPrototype"], [69, 1, 1, "", "IntBaseType"], [69, 1, 1, "", "Node"], [69, 1, 1, "", "NoneToken"], [69, 1, 1, "", "Pointer"], [69, 1, 1, "", "Print"], [69, 1, 1, "", "QuotedString"], [69, 1, 1, "", "Raise"], [69, 1, 1, "", "Return"], [69, 1, 1, "", "RuntimeError_"], [69, 1, 1, "", "Scope"], [69, 1, 1, "", "SignedIntType"], [69, 1, 1, "", "Stream"], [69, 1, 1, "", "String"], [69, 1, 1, "", "Token"], [69, 1, 1, "", "Type"], [69, 1, 1, "", "UnsignedIntType"], [69, 1, 1, "", "Variable"], [69, 1, 1, "", "While"], [69, 4, 1, "", "aug_assign"]], "sympy.codegen.ast.CodeBlock": [[69, 2, 1, "", "cse"], [69, 2, 1, "", "topological_sort"]], "sympy.codegen.ast.FloatBaseType": [[69, 5, 1, "", "cast_nocheck"]], "sympy.codegen.ast.FloatType": [[69, 2, 1, "", "cast_nocheck"], [69, 3, 1, "", "decimal_dig"], [69, 3, 1, "", "dig"], [69, 3, 1, "", "eps"], [69, 3, 1, "", "max"], [69, 3, 1, "", "max_exponent"], [69, 3, 1, "", "min_exponent"], [69, 3, 1, "", "tiny"]], "sympy.codegen.ast.Node": [[69, 2, 1, "", "attr_params"]], "sympy.codegen.ast.Token": [[69, 2, 1, "", "kwargs"]], "sympy.codegen.ast.Type": [[69, 2, 1, "", "cast_check"], [69, 2, 1, "", "from_expr"]], "sympy.codegen.ast.Variable": [[69, 2, 1, "", "as_Declaration"], [69, 2, 1, "", "deduced"]], "sympy.codegen.cfunctions": [[69, 1, 1, "", "Cbrt"], [69, 1, 1, "", "Sqrt"], [69, 1, 1, "", "exp2"], [69, 1, 1, "", "expm1"], [69, 1, 1, "", "fma"], [69, 1, 1, "", "hypot"], [69, 1, 1, "", "log10"], [69, 1, 1, "", "log1p"], [69, 1, 1, "", "log2"]], "sympy.codegen.cfunctions.Cbrt": [[69, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.Sqrt": [[69, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.exp2": [[69, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.expm1": [[69, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.fma": [[69, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.hypot": [[69, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log10": [[69, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log1p": [[69, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log2": [[69, 2, 1, "", "fdiff"]], "sympy.codegen.cnodes": [[69, 1, 1, "", "CommaOperator"], [69, 1, 1, "", "Label"], [69, 1, 1, "", "PostDecrement"], [69, 1, 1, "", "PostIncrement"], [69, 1, 1, "", "PreDecrement"], [69, 1, 1, "", "PreIncrement"], [69, 4, 1, "", "alignof"], [69, 1, 1, "", "goto"], [69, 4, 1, "", "sizeof"], [69, 1, 1, "", "struct"], [69, 1, 1, "", "union"]], "sympy.codegen.cutils": [[69, 4, 1, "", "render_as_source_file"]], "sympy.codegen.cxxnodes": [[69, 1, 1, "", "using"]], "sympy.codegen.fnodes": [[69, 1, 1, "", "ArrayConstructor"], [69, 1, 1, "", "Do"], [69, 1, 1, "", "Extent"], [69, 1, 1, "", "FortranReturn"], [69, 1, 1, "", "GoTo"], [69, 1, 1, "", "ImpliedDoLoop"], [69, 1, 1, "", "Module"], [69, 1, 1, "", "Program"], [69, 1, 1, "", "Subroutine"], [69, 1, 1, "", "SubroutineCall"], [69, 4, 1, "", "allocated"], [69, 4, 1, "", "array"], [69, 4, 1, "", "bind_C"], [69, 1, 1, "", "cmplx"], [69, 4, 1, "", "dimension"], [69, 1, 1, "", "dsign"], [69, 1, 1, "", "isign"], [69, 1, 1, "", "kind"], [69, 4, 1, "", "lbound"], [69, 1, 1, "", "literal_dp"], [69, 1, 1, "", "literal_sp"], [69, 1, 1, "", "merge"], [69, 4, 1, "", "reshape"], [69, 4, 1, "", "shape"], [69, 4, 1, "", "size"], [69, 1, 1, "", "use"], [69, 1, 1, "", "use_rename"]], "sympy.codegen.futils": [[69, 4, 1, "", "render_as_module"]], "sympy.codegen.matrix_nodes": [[69, 1, 1, "", "MatrixSolve"]], "sympy.codegen.pyutils": [[69, 4, 1, "", "render_as_module"]], "sympy.codegen.rewriting": [[69, 1, 1, "", "FuncMinusOneOptim"], [69, 1, 1, "", "Optimization"], [69, 1, 1, "", "ReplaceOptim"], [69, 4, 1, "", "create_expand_pow_optimization"], [69, 4, 1, "", "optimize"]], "sympy.codegen.rewriting.FuncMinusOneOptim": [[69, 2, 1, "", "replace_in_Add"]], "sympy.combinatorics": [[71, 0, 0, "-", "galois"], [80, 0, 0, "-", "generators"], [72, 0, 0, "-", "graycode"], [73, 0, 0, "-", "group_constructs"], [74, 0, 0, "-", "group_numbers"], [76, 0, 0, "-", "named_groups"], [77, 0, 0, "-", "partitions"], [79, 0, 0, "-", "perm_groups"], [80, 0, 0, "-", "permutations"], [81, 0, 0, "-", "polyhedron"], [82, 0, 0, "-", "prufer"], [83, 0, 0, "-", "subsets"], [84, 0, 0, "-", "tensor_can"], [85, 0, 0, "-", "testutil"], [86, 0, 0, "-", "util"]], "sympy.combinatorics.galois": [[71, 4, 1, "", "A4_in_S6"], [71, 4, 1, "", "A4xC2"], [71, 4, 1, "", "G18"], [71, 4, 1, "", "G36m"], [71, 4, 1, "", "G36p"], [71, 4, 1, "", "G72"], [71, 4, 1, "", "M20"], [71, 4, 1, "", "PGL2F5"], [71, 4, 1, "", "PSL2F5"], [71, 1, 1, "", "S1TransitiveSubgroups"], [71, 1, 1, "", "S2TransitiveSubgroups"], [71, 1, 1, "", "S3TransitiveSubgroups"], [71, 4, 1, "", "S3_in_S6"], [71, 1, 1, "", "S4TransitiveSubgroups"], [71, 4, 1, "", "S4m"], [71, 4, 1, "", "S4p"], [71, 4, 1, "", "S4xC2"], [71, 1, 1, "", "S5TransitiveSubgroups"], [71, 1, 1, "", "S6TransitiveSubgroups"], [71, 4, 1, "", "find_transitive_subgroups_of_S6"], [71, 4, 1, "", "four_group"]], "sympy.combinatorics.generators": [[80, 2, 1, "", "alternating"], [80, 2, 1, "", "cyclic"], [80, 2, 1, "", "dihedral"], [80, 2, 1, "", "symmetric"]], "sympy.combinatorics.graycode": [[72, 1, 1, "", "GrayCode"], [72, 2, 1, "", "bin_to_gray"], [72, 2, 1, "", "get_subset_from_bitstring"], [72, 2, 1, "", "gray_to_bin"], [72, 2, 1, "", "graycode_subsets"], [72, 2, 1, "", "random_bitstring"]], "sympy.combinatorics.graycode.GrayCode": [[72, 3, 1, "", "current"], [72, 2, 1, "", "generate_gray"], [72, 3, 1, "", "n"], [72, 2, 1, "", "next"], [72, 3, 1, "", "rank"], [72, 3, 1, "", "selections"], [72, 2, 1, "", "skip"], [72, 2, 1, "", "unrank"]], "sympy.combinatorics.group_constructs": [[73, 4, 1, "", "DirectProduct"]], "sympy.combinatorics.group_numbers": [[74, 4, 1, "", "groups_count"], [74, 4, 1, "", "is_abelian_number"], [74, 4, 1, "", "is_cyclic_number"], [74, 4, 1, "", "is_nilpotent_number"]], "sympy.combinatorics.named_groups": [[76, 4, 1, "", "AbelianGroup"], [76, 4, 1, "", "AlternatingGroup"], [76, 4, 1, "", "CyclicGroup"], [76, 4, 1, "", "DihedralGroup"], [76, 4, 1, "", "SymmetricGroup"]], "sympy.combinatorics.partitions": [[77, 1, 1, "", "IntegerPartition"], [77, 1, 1, "", "Partition"], [77, 4, 1, "", "RGS_enum"], [77, 4, 1, "", "RGS_generalized"], [77, 4, 1, "", "RGS_rank"], [77, 4, 1, "", "RGS_unrank"], [77, 4, 1, "", "random_integer_partition"]], "sympy.combinatorics.partitions.IntegerPartition": [[77, 2, 1, "", "as_dict"], [77, 2, 1, "", "as_ferrers"], [77, 3, 1, "", "conjugate"], [77, 2, 1, "", "next_lex"], [77, 2, 1, "", "prev_lex"]], "sympy.combinatorics.partitions.Partition": [[77, 3, 1, "", "RGS"], [77, 2, 1, "", "from_rgs"], [77, 3, 1, "", "partition"], [77, 3, 1, "", "rank"], [77, 2, 1, "", "sort_key"]], "sympy.combinatorics.perm_groups": [[79, 1, 1, "", "PermutationGroup"]], "sympy.combinatorics.perm_groups.PermutationGroup": [[79, 2, 1, "", "__contains__"], [79, 2, 1, "", "__mul__"], [79, 2, 1, "", "__new__"], [79, 5, 1, "", "__weakref__"], [79, 2, 1, "", "_coset_representative"], [79, 2, 1, "", "_distinct_primes_lemma"], [79, 2, 1, "", "_eval_is_alt_sym_monte_carlo"], [79, 2, 1, "", "_eval_is_alt_sym_naive"], [79, 2, 1, "", "_p_elements_group"], [79, 2, 1, "", "_random_pr_init"], [79, 2, 1, "", "_sylow_alt_sym"], [79, 2, 1, "", "_union_find_merge"], [79, 2, 1, "", "_union_find_rep"], [79, 2, 1, "", "_verify"], [79, 2, 1, "", "abelian_invariants"], [79, 3, 1, "", "base"], [79, 2, 1, "", "baseswap"], [79, 3, 1, "", "basic_orbits"], [79, 3, 1, "", "basic_stabilizers"], [79, 3, 1, "", "basic_transversals"], [79, 2, 1, "", "center"], [79, 2, 1, "", "centralizer"], [79, 2, 1, "", "commutator"], [79, 2, 1, "", "composition_series"], [79, 2, 1, "", "conjugacy_class"], [79, 2, 1, "", "conjugacy_classes"], [79, 2, 1, "", "contains"], [79, 2, 1, "", "coset_factor"], [79, 2, 1, "", "coset_rank"], [79, 2, 1, "", "coset_table"], [79, 2, 1, "", "coset_transversal"], [79, 2, 1, "", "coset_unrank"], [79, 3, 1, "", "degree"], [79, 2, 1, "", "derived_series"], [79, 2, 1, "", "derived_subgroup"], [79, 3, 1, "", "elements"], [79, 2, 1, "", "equals"], [79, 2, 1, "", "generate"], [79, 2, 1, "", "generate_dimino"], [79, 2, 1, "", "generate_schreier_sims"], [79, 2, 1, "", "generator_product"], [79, 3, 1, "", "generators"], [79, 3, 1, "", "identity"], [79, 2, 1, "", "index"], [79, 3, 1, "", "is_abelian"], [79, 2, 1, "", "is_alt_sym"], [79, 3, 1, "", "is_alternating"], [79, 3, 1, "", "is_cyclic"], [79, 3, 1, "", "is_dihedral"], [79, 2, 1, "", "is_elementary"], [79, 3, 1, "", "is_nilpotent"], [79, 2, 1, "", "is_normal"], [79, 3, 1, "", "is_perfect"], [79, 3, 1, "", "is_polycyclic"], [79, 2, 1, "", "is_primitive"], [79, 3, 1, "", "is_solvable"], [79, 2, 1, "", "is_subgroup"], [79, 3, 1, "", "is_symmetric"], [79, 2, 1, "", "is_transitive"], [79, 3, 1, "", "is_trivial"], [79, 2, 1, "", "lower_central_series"], [79, 2, 1, "", "make_perm"], [79, 3, 1, "", "max_div"], [79, 2, 1, "", "minimal_block"], [79, 2, 1, "", "minimal_blocks"], [79, 2, 1, "", "normal_closure"], [79, 2, 1, "", "orbit"], [79, 2, 1, "", "orbit_rep"], [79, 2, 1, "", "orbit_transversal"], [79, 2, 1, "", "orbits"], [79, 2, 1, "", "order"], [79, 2, 1, "", "pointwise_stabilizer"], [79, 2, 1, "", "polycyclic_group"], [79, 2, 1, "", "presentation"], [79, 2, 1, "", "random"], [79, 2, 1, "", "random_pr"], [79, 2, 1, "", "random_stab"], [79, 2, 1, "", "schreier_sims"], [79, 2, 1, "", "schreier_sims_incremental"], [79, 2, 1, "", "schreier_sims_random"], [79, 2, 1, "", "schreier_vector"], [79, 2, 1, "", "stabilizer"], [79, 3, 1, "", "strong_gens"], [79, 2, 1, "", "strong_presentation"], [79, 2, 1, "", "subgroup"], [79, 2, 1, "", "subgroup_search"], [79, 2, 1, "", "sylow_subgroup"], [79, 3, 1, "", "transitivity_degree"]], "sympy.combinatorics.permutations": [[80, 1, 1, "", "Cycle"], [80, 1, 1, "", "Permutation"], [80, 4, 1, "", "_af_parity"]], "sympy.combinatorics.permutations.Cycle": [[80, 2, 1, "", "list"]], "sympy.combinatorics.permutations.Permutation": [[80, 2, 1, "", "apply"], [80, 3, 1, "", "array_form"], [80, 2, 1, "", "ascents"], [80, 2, 1, "", "atoms"], [80, 3, 1, "", "cardinality"], [80, 2, 1, "", "commutator"], [80, 2, 1, "", "commutes_with"], [80, 3, 1, "", "cycle_structure"], [80, 3, 1, "", "cycles"], [80, 3, 1, "", "cyclic_form"], [80, 2, 1, "", "descents"], [80, 2, 1, "", "from_inversion_vector"], [80, 2, 1, "", "from_sequence"], [80, 3, 1, "", "full_cyclic_form"], [80, 2, 1, "", "get_adjacency_distance"], [80, 2, 1, "", "get_adjacency_matrix"], [80, 2, 1, "", "get_positional_distance"], [80, 2, 1, "", "get_precedence_distance"], [80, 2, 1, "", "get_precedence_matrix"], [80, 2, 1, "", "index"], [80, 2, 1, "", "inversion_vector"], [80, 2, 1, "", "inversions"], [80, 3, 1, "", "is_Empty"], [80, 3, 1, "", "is_Identity"], [80, 3, 1, "", "is_Singleton"], [80, 3, 1, "", "is_even"], [80, 3, 1, "", "is_odd"], [80, 2, 1, "", "josephus"], [80, 2, 1, "", "length"], [80, 2, 1, "", "list"], [80, 2, 1, "", "max"], [80, 2, 1, "", "min"], [80, 2, 1, "", "mul_inv"], [80, 2, 1, "", "next_lex"], [80, 2, 1, "", "next_nonlex"], [80, 2, 1, "", "next_trotterjohnson"], [80, 2, 1, "", "order"], [80, 2, 1, "", "parity"], [80, 2, 1, "", "random"], [80, 2, 1, "", "rank"], [80, 2, 1, "", "rank_nonlex"], [80, 2, 1, "", "rank_trotterjohnson"], [80, 2, 1, "", "resize"], [80, 2, 1, "", "rmul"], [80, 2, 1, "", "rmul_with_af"], [80, 2, 1, "", "runs"], [80, 2, 1, "", "signature"], [80, 3, 1, "", "size"], [80, 2, 1, "", "support"], [80, 2, 1, "", "transpositions"], [80, 2, 1, "", "unrank_lex"], [80, 2, 1, "", "unrank_nonlex"], [80, 2, 1, "", "unrank_trotterjohnson"]], "sympy.combinatorics.polyhedron": [[81, 1, 1, "", "Polyhedron"]], "sympy.combinatorics.polyhedron.Polyhedron": [[81, 3, 1, "", "array_form"], [81, 3, 1, "", "corners"], [81, 3, 1, "", "cyclic_form"], [81, 3, 1, "", "edges"], [81, 3, 1, "", "faces"], [81, 3, 1, "", "pgroup"], [81, 2, 1, "", "reset"], [81, 2, 1, "", "rotate"], [81, 3, 1, "", "size"], [81, 3, 1, "", "vertices"]], "sympy.combinatorics.prufer": [[82, 1, 1, "", "Prufer"]], "sympy.combinatorics.prufer.Prufer": [[82, 2, 1, "", "edges"], [82, 2, 1, "", "next"], [82, 3, 1, "", "nodes"], [82, 2, 1, "", "prev"], [82, 2, 1, "", "prufer_rank"], [82, 3, 1, "", "prufer_repr"], [82, 3, 1, "", "rank"], [82, 3, 1, "", "size"], [82, 2, 1, "", "to_prufer"], [82, 2, 1, "", "to_tree"], [82, 3, 1, "", "tree_repr"], [82, 2, 1, "", "unrank"]], "sympy.combinatorics.subsets": [[83, 1, 1, "", "Subset"], [83, 2, 1, "", "ksubsets"]], "sympy.combinatorics.subsets.Subset": [[83, 2, 1, "", "bitlist_from_subset"], [83, 3, 1, "", "cardinality"], [83, 2, 1, "", "iterate_binary"], [83, 2, 1, "", "iterate_graycode"], [83, 2, 1, "", "next_binary"], [83, 2, 1, "", "next_gray"], [83, 2, 1, "", "next_lexicographic"], [83, 2, 1, "", "prev_binary"], [83, 2, 1, "", "prev_gray"], [83, 2, 1, "", "prev_lexicographic"], [83, 3, 1, "", "rank_binary"], [83, 3, 1, "", "rank_gray"], [83, 3, 1, "", "rank_lexicographic"], [83, 3, 1, "", "size"], [83, 3, 1, "", "subset"], [83, 2, 1, "", "subset_from_bitlist"], [83, 2, 1, "", "subset_indices"], [83, 3, 1, "", "superset"], [83, 3, 1, "", "superset_size"], [83, 2, 1, "", "unrank_binary"], [83, 2, 1, "", "unrank_gray"]], "sympy.combinatorics.tensor_can": [[84, 4, 1, "", "bsgs_direct_product"], [84, 4, 1, "", "canonicalize"], [84, 4, 1, "", "double_coset_can_rep"], [84, 4, 1, "", "get_symmetric_group_sgs"]], "sympy.combinatorics.testutil": [[85, 4, 1, "", "_cmp_perm_lists"], [85, 4, 1, "", "_naive_list_centralizer"], [85, 4, 1, "", "_verify_bsgs"], [85, 4, 1, "", "_verify_centralizer"], [85, 4, 1, "", "_verify_normal_closure"]], "sympy.combinatorics.util": [[86, 4, 1, "", "_base_ordering"], [86, 4, 1, "", "_check_cycles_alt_sym"], [86, 4, 1, "", "_distribute_gens_by_base"], [86, 4, 1, "", "_handle_precomputed_bsgs"], [86, 4, 1, "", "_orbits_transversals_from_bsgs"], [86, 4, 1, "", "_remove_gens"], [86, 4, 1, "", "_strip"], [86, 4, 1, "", "_strong_gens_from_distr"]], "sympy.concrete.expr_with_intlimits": [[87, 1, 1, "", "ExprWithIntLimits"]], "sympy.concrete.expr_with_intlimits.ExprWithIntLimits": [[87, 2, 1, "", "change_index"], [87, 3, 1, "", "has_empty_sequence"], [87, 2, 1, "", "index"], [87, 2, 1, "", "reorder"], [87, 2, 1, "", "reorder_limit"]], "sympy.concrete.expr_with_limits": [[115, 1, 1, "", "ExprWithLimits"]], "sympy.concrete.expr_with_limits.ExprWithLimits": [[115, 3, 1, "", "bound_symbols"], [115, 3, 1, "", "free_symbols"], [115, 3, 1, "", "function"], [115, 3, 1, "", "has_finite_limits"], [115, 3, 1, "", "has_reversed_limits"], [115, 3, 1, "", "is_number"], [115, 3, 1, "", "limits"], [115, 3, 1, "", "variables"]], "sympy.concrete.gosper": [[87, 4, 1, "", "gosper_normal"], [87, 4, 1, "", "gosper_sum"], [87, 4, 1, "", "gosper_term"]], "sympy.concrete.products": [[87, 1, 1, "", "Product"], [87, 4, 1, "", "product"]], "sympy.concrete.products.Product": [[87, 2, 1, "", "is_convergent"], [87, 2, 1, "", "reverse_order"]], "sympy.concrete.summations": [[87, 1, 1, "", "Sum"], [87, 4, 1, "", "summation"]], "sympy.concrete.summations.Sum": [[87, 2, 1, "", "euler_maclaurin"], [87, 2, 1, "", "eval_zeta_function"], [87, 2, 1, "", "is_absolutely_convergent"], [87, 2, 1, "", "is_convergent"], [87, 2, 1, "", "reverse_order"]], "sympy.core": [[88, 0, 0, "-", "add"], [88, 0, 0, "-", "assumptions"], [88, 0, 0, "-", "basic"], [88, 0, 0, "-", "cache"], [88, 0, 0, "-", "containers"], [88, 0, 0, "-", "evalf"], [88, 0, 0, "-", "expr"], [88, 0, 0, "-", "exprtools"], [88, 0, 0, "-", "function"], [88, 0, 0, "-", "intfunc"], [88, 0, 0, "-", "kind"], [88, 0, 0, "-", "mod"], [88, 0, 0, "-", "mul"], [88, 0, 0, "-", "multidimensional"], [88, 0, 0, "-", "numbers"], [88, 0, 0, "-", "power"], [88, 0, 0, "-", "random"], [88, 0, 0, "-", "relational"], [88, 0, 0, "-", "singleton"], [88, 0, 0, "-", "symbol"], [88, 0, 0, "-", "sympify"], [88, 0, 0, "-", "traversal"]], "sympy.core.add": [[88, 1, 1, "", "Add"]], "sympy.core.add.Add": [[88, 2, 1, "", "as_coeff_Add"], [88, 2, 1, "", "as_coeff_add"], [88, 2, 1, "", "as_content_primitive"], [88, 2, 1, "", "as_numer_denom"], [88, 2, 1, "", "as_real_imag"], [88, 2, 1, "", "as_two_terms"], [88, 2, 1, "", "extract_leading_order"], [88, 2, 1, "", "flatten"], [88, 2, 1, "", "primitive"]], "sympy.core.basic": [[88, 1, 1, "", "Atom"], [88, 1, 1, "", "Basic"]], "sympy.core.basic.Basic": [[88, 3, 1, "", "args"], [88, 2, 1, "", "as_content_primitive"], [88, 2, 1, "", "as_dummy"], [88, 3, 1, "", "assumptions0"], [88, 2, 1, "", "atoms"], [88, 3, 1, "", "canonical_variables"], [88, 2, 1, "", "class_key"], [88, 2, 1, "", "compare"], [88, 2, 1, "", "count"], [88, 2, 1, "", "count_ops"], [88, 2, 1, "", "doit"], [88, 2, 1, "", "dummy_eq"], [88, 2, 1, "", "find"], [88, 3, 1, "", "free_symbols"], [88, 2, 1, "", "fromiter"], [88, 3, 1, "", "func"], [88, 2, 1, "", "has"], [88, 2, 1, "", "has_free"], [88, 2, 1, "", "has_xfree"], [88, 3, 1, "", "is_comparable"], [88, 2, 1, "", "is_same"], [88, 2, 1, "", "match"], [88, 2, 1, "", "matches"], [88, 2, 1, "", "rcall"], [88, 2, 1, "", "refine"], [88, 2, 1, "", "replace"], [88, 2, 1, "", "rewrite"], [88, 2, 1, "", "simplify"], [88, 2, 1, "", "sort_key"], [88, 2, 1, "", "subs"], [88, 2, 1, "", "xreplace"]], "sympy.core.cache": [[88, 4, 1, "", "__cacheit"]], "sympy.core.containers": [[88, 1, 1, "", "Dict"], [88, 1, 1, "", "Tuple"], [88, 1, 1, "", "TupleKind"]], "sympy.core.containers.Dict": [[88, 2, 1, "", "get"], [88, 2, 1, "", "items"], [88, 2, 1, "", "keys"], [88, 2, 1, "", "values"]], "sympy.core.containers.Tuple": [[88, 2, 1, "", "index"], [88, 3, 1, "", "kind"], [88, 2, 1, "", "tuple_count"]], "sympy.core.evalf": [[88, 1, 1, "", "EvalfMixin"], [88, 4, 1, "", "N"], [88, 1, 1, "", "PrecisionExhausted"]], "sympy.core.evalf.EvalfMixin": [[88, 2, 1, "", "evalf"], [88, 2, 1, "", "n"]], "sympy.core.expr": [[88, 1, 1, "", "AtomicExpr"], [88, 1, 1, "", "Expr"], [88, 1, 1, "", "UnevaluatedExpr"]], "sympy.core.expr.Expr": [[88, 2, 1, "", "apart"], [88, 2, 1, "", "args_cnc"], [88, 2, 1, "", "as_coeff_Add"], [88, 2, 1, "", "as_coeff_Mul"], [88, 2, 1, "", "as_coeff_add"], [88, 2, 1, "", "as_coeff_exponent"], [88, 2, 1, "", "as_coeff_mul"], [88, 2, 1, "", "as_coefficient"], [88, 2, 1, "", "as_coefficients_dict"], [88, 2, 1, "", "as_content_primitive"], [88, 2, 1, "", "as_expr"], [88, 2, 1, "", "as_independent"], [88, 2, 1, "", "as_leading_term"], [88, 2, 1, "", "as_numer_denom"], [88, 2, 1, "", "as_ordered_factors"], [88, 2, 1, "", "as_ordered_terms"], [88, 2, 1, "", "as_poly"], [88, 2, 1, "", "as_powers_dict"], [88, 2, 1, "", "as_real_imag"], [88, 2, 1, "", "as_terms"], [88, 2, 1, "", "aseries"], [88, 2, 1, "", "cancel"], [88, 2, 1, "", "coeff"], [88, 2, 1, "", "collect"], [88, 2, 1, "", "combsimp"], [88, 2, 1, "", "compute_leading_term"], [88, 2, 1, "", "conjugate"], [88, 2, 1, "", "could_extract_minus_sign"], [88, 2, 1, "", "equals"], [88, 2, 1, "", "expand"], [88, 3, 1, "", "expr_free_symbols"], [88, 2, 1, "", "extract_additively"], [88, 2, 1, "", "extract_branch_factor"], [88, 2, 1, "", "extract_multiplicatively"], [88, 2, 1, "", "factor"], [88, 2, 1, "", "fourier_series"], [88, 2, 1, "", "fps"], [88, 2, 1, "", "gammasimp"], [88, 2, 1, "", "getO"], [88, 2, 1, "", "getn"], [88, 2, 1, "", "integrate"], [88, 2, 1, "", "invert"], [88, 2, 1, "", "is_algebraic_expr"], [88, 2, 1, "", "is_constant"], [88, 2, 1, "", "is_meromorphic"], [88, 3, 1, "", "is_number"], [88, 2, 1, "", "is_polynomial"], [88, 2, 1, "", "is_rational_function"], [88, 2, 1, "", "leadterm"], [88, 2, 1, "", "limit"], [88, 2, 1, "", "lseries"], [88, 2, 1, "", "normal"], [88, 2, 1, "", "nseries"], [88, 2, 1, "", "nsimplify"], [88, 2, 1, "", "powsimp"], [88, 2, 1, "", "primitive"], [88, 2, 1, "", "radsimp"], [88, 2, 1, "", "ratsimp"], [88, 2, 1, "", "removeO"], [88, 2, 1, "", "round"], [88, 2, 1, "", "separate"], [88, 2, 1, "", "series"], [88, 2, 1, "", "taylor_term"], [88, 2, 1, "", "together"], [88, 2, 1, "", "trigsimp"]], "sympy.core.exprtools": [[88, 4, 1, "", "factor_terms"], [88, 4, 1, "", "gcd_terms"]], "sympy.core.function": [[88, 1, 1, "", "Derivative"], [88, 1, 1, "", "Function"], [88, 1, 1, "", "FunctionClass"], [88, 1, 1, "", "Lambda"], [88, 1, 1, "", "PoleError"], [88, 1, 1, "", "Subs"], [88, 1, 1, "", "WildFunction"], [88, 4, 1, "", "count_ops"], [88, 4, 1, "", "diff"], [88, 4, 1, "", "expand"], [88, 4, 1, "", "expand_complex"], [88, 4, 1, "", "expand_func"], [88, 4, 1, "", "expand_log"], [88, 4, 1, "", "expand_mul"], [88, 4, 1, "", "expand_multinomial"], [88, 4, 1, "", "expand_power_base"], [88, 4, 1, "", "expand_power_exp"], [88, 4, 1, "", "expand_trig"], [88, 4, 1, "", "nfloat"]], "sympy.core.function.Derivative": [[88, 3, 1, "", "_diff_wrt"], [88, 2, 1, "", "_sort_variable_count"], [88, 2, 1, "", "as_finite_difference"], [88, 2, 1, "", "doit_numerically"]], "sympy.core.function.Function": [[88, 2, 1, "", "as_base_exp"], [88, 2, 1, "", "fdiff"], [88, 2, 1, "", "is_singular"]], "sympy.core.function.FunctionClass": [[88, 3, 1, "", "nargs"]], "sympy.core.function.Lambda": [[88, 3, 1, "", "bound_symbols"], [88, 3, 1, "", "expr"], [88, 3, 1, "", "is_identity"], [88, 3, 1, "", "signature"], [88, 3, 1, "", "variables"]], "sympy.core.function.Subs": [[88, 3, 1, "", "bound_symbols"], [88, 3, 1, "", "expr"], [88, 3, 1, "", "point"], [88, 3, 1, "", "variables"]], "sympy.core.intfunc": [[88, 4, 1, "", "igcd"], [88, 4, 1, "", "igcd_lehmer"], [88, 4, 1, "", "igcdex"], [88, 4, 1, "", "ilcm"], [88, 4, 1, "", "integer_log"], [88, 4, 1, "", "integer_nthroot"], [88, 4, 1, "", "isqrt"], [88, 4, 1, "", "mod_inverse"], [88, 4, 1, "", "num_digits"], [88, 4, 1, "", "trailing"]], "sympy.core.kind": [[88, 5, 1, "", "BooleanKind"], [88, 1, 1, "", "Kind"], [88, 5, 1, "", "NumberKind"], [88, 5, 1, "", "UndefinedKind"]], "sympy.core.mod": [[88, 1, 1, "", "Mod"]], "sympy.core.mul": [[88, 1, 1, "", "Mul"], [88, 4, 1, "", "prod"]], "sympy.core.mul.Mul": [[88, 2, 1, "", "as_coeff_Mul"], [88, 2, 1, "", "as_content_primitive"], [88, 2, 1, "", "as_ordered_factors"], [88, 2, 1, "", "as_two_terms"], [88, 2, 1, "", "flatten"]], "sympy.core.multidimensional": [[88, 1, 1, "", "vectorize"]], "sympy.core.numbers": [[88, 1, 1, "", "AlgebraicNumber"], [88, 1, 1, "", "Catalan"], [88, 1, 1, "", "ComplexInfinity"], [88, 1, 1, "", "EulerGamma"], [88, 1, 1, "", "Exp1"], [88, 1, 1, "", "Float"], [88, 1, 1, "", "GoldenRatio"], [88, 1, 1, "", "Half"], [88, 1, 1, "", "ImaginaryUnit"], [88, 1, 1, "", "Infinity"], [88, 1, 1, "", "Integer"], [88, 1, 1, "", "NaN"], [88, 1, 1, "", "NegativeInfinity"], [88, 1, 1, "", "NegativeOne"], [88, 1, 1, "", "Number"], [88, 1, 1, "", "NumberSymbol"], [88, 1, 1, "", "One"], [88, 1, 1, "", "Pi"], [88, 1, 1, "", "Rational"], [88, 5, 1, "", "RealNumber"], [88, 1, 1, "", "TribonacciConstant"], [88, 1, 1, "", "Zero"], [88, 4, 1, "", "equal_valued"], [88, 4, 1, "", "mod_inverse"], [88, 4, 1, "", "seterr"]], "sympy.core.numbers.AlgebraicNumber": [[88, 2, 1, "", "__new__"], [88, 2, 1, "", "as_expr"], [88, 2, 1, "", "as_poly"], [88, 2, 1, "", "coeffs"], [88, 2, 1, "", "field_element"], [88, 3, 1, "", "is_aliased"], [88, 3, 1, "", "is_primitive_element"], [88, 2, 1, "", "minpoly_of_element"], [88, 2, 1, "", "native_coeffs"], [88, 2, 1, "", "primitive_element"], [88, 2, 1, "", "to_algebraic_integer"], [88, 2, 1, "", "to_primitive_element"], [88, 2, 1, "", "to_root"]], "sympy.core.numbers.Number": [[88, 2, 1, "", "as_coeff_Add"], [88, 2, 1, "", "as_coeff_Mul"], [88, 2, 1, "", "cofactors"], [88, 2, 1, "", "gcd"], [88, 2, 1, "", "lcm"]], "sympy.core.numbers.NumberSymbol": [[88, 2, 1, "", "approximation"]], "sympy.core.numbers.Rational": [[88, 2, 1, "", "as_coeff_Add"], [88, 2, 1, "", "as_coeff_Mul"], [88, 2, 1, "", "as_content_primitive"], [88, 2, 1, "", "factors"], [88, 2, 1, "", "limit_denominator"]], "sympy.core.power": [[88, 1, 1, "", "Pow"]], "sympy.core.power.Pow": [[88, 2, 1, "", "as_base_exp"], [88, 2, 1, "", "as_content_primitive"]], "sympy.core.random": [[88, 4, 1, "", "_randint"], [88, 4, 1, "", "_randrange"], [88, 4, 1, "", "random_complex_number"], [88, 4, 1, "", "test_derivative_numerically"], [88, 4, 1, "", "verify_numerically"]], "sympy.core.relational": [[88, 5, 1, "", "Eq"], [88, 1, 1, "", "Equality"], [88, 5, 1, "", "Ge"], [88, 1, 1, "", "GreaterThan"], [88, 5, 1, "", "Gt"], [88, 5, 1, "", "Le"], [88, 1, 1, "", "LessThan"], [88, 5, 1, "", "Lt"], [88, 5, 1, "", "Ne"], [88, 5, 1, "", "Rel"], [88, 1, 1, "", "Relational"], [88, 1, 1, "", "StrictGreaterThan"], [88, 1, 1, "", "StrictLessThan"], [88, 1, 1, "", "Unequality"]], "sympy.core.relational.Equality": [[88, 2, 1, "", "as_poly"], [88, 2, 1, "", "integrate"]], "sympy.core.relational.Relational": [[88, 3, 1, "", "canonical"], [88, 2, 1, "", "equals"], [88, 3, 1, "", "lhs"], [88, 3, 1, "", "negated"], [88, 3, 1, "", "reversed"], [88, 3, 1, "", "reversedsign"], [88, 3, 1, "", "rhs"], [88, 3, 1, "", "strict"], [88, 3, 1, "", "weak"]], "sympy.core.singleton": [[88, 1, 1, "", "Singleton"], [88, 1, 1, "", "SingletonRegistry"]], "sympy.core.sorting": [[88, 4, 1, "", "default_sort_key"], [88, 4, 1, "", "ordered"]], "sympy.core.symbol": [[88, 1, 1, "", "Dummy"], [88, 1, 1, "", "Symbol"], [88, 1, 1, "", "Wild"], [88, 4, 1, "", "symbols"], [88, 4, 1, "", "var"]], "sympy.core.sympify": [[88, 4, 1, "", "sympify"]], "sympy.core.traversal": [[88, 4, 1, "", "bottom_up"], [88, 4, 1, "", "postorder_traversal"], [88, 4, 1, "", "preorder_traversal"], [88, 4, 1, "", "use"], [88, 4, 1, "", "walk"]], "sympy.crypto": [[89, 0, 0, "-", "crypto"]], "sympy.crypto.crypto": [[89, 4, 1, "", "AZ"], [89, 4, 1, "", "bifid5_square"], [89, 4, 1, "", "bifid6_square"], [89, 4, 1, "", "check_and_join"], [89, 4, 1, "", "cycle_list"], [89, 4, 1, "", "decipher_affine"], [89, 4, 1, "", "decipher_atbash"], [89, 4, 1, "", "decipher_bifid"], [89, 4, 1, "", "decipher_bifid5"], [89, 4, 1, "", "decipher_bifid6"], [89, 4, 1, "", "decipher_elgamal"], [89, 4, 1, "", "decipher_gm"], [89, 4, 1, "", "decipher_hill"], [89, 4, 1, "", "decipher_kid_rsa"], [89, 4, 1, "", "decipher_railfence"], [89, 4, 1, "", "decipher_rot13"], [89, 4, 1, "", "decipher_rsa"], [89, 4, 1, "", "decipher_shift"], [89, 4, 1, "", "decipher_vigenere"], [89, 4, 1, "", "decode_morse"], [89, 4, 1, "", "dh_private_key"], [89, 4, 1, "", "dh_public_key"], [89, 4, 1, "", "dh_shared_key"], [89, 4, 1, "", "elgamal_private_key"], [89, 4, 1, "", "elgamal_public_key"], [89, 4, 1, "", "encipher_affine"], [89, 4, 1, "", "encipher_atbash"], [89, 4, 1, "", "encipher_bifid"], [89, 4, 1, "", "encipher_bifid5"], [89, 4, 1, "", "encipher_bifid6"], [89, 4, 1, "", "encipher_elgamal"], [89, 4, 1, "", "encipher_gm"], [89, 4, 1, "", "encipher_hill"], [89, 4, 1, "", "encipher_kid_rsa"], [89, 4, 1, "", "encipher_railfence"], [89, 4, 1, "", "encipher_rot13"], [89, 4, 1, "", "encipher_rsa"], [89, 4, 1, "", "encipher_shift"], [89, 4, 1, "", "encipher_substitution"], [89, 4, 1, "", "encipher_vigenere"], [89, 4, 1, "", "encode_morse"], [89, 4, 1, "", "gm_private_key"], [89, 4, 1, "", "gm_public_key"], [89, 4, 1, "", "kid_rsa_private_key"], [89, 4, 1, "", "kid_rsa_public_key"], [89, 4, 1, "", "lfsr_autocorrelation"], [89, 4, 1, "", "lfsr_connection_polynomial"], [89, 4, 1, "", "lfsr_sequence"], [89, 4, 1, "", "padded_key"], [89, 4, 1, "", "rsa_private_key"], [89, 4, 1, "", "rsa_public_key"]], "sympy.diffgeom": [[90, 1, 1, "", "BaseCovarDerivativeOp"], [90, 1, 1, "", "BaseScalarField"], [90, 1, 1, "", "BaseVectorField"], [90, 1, 1, "", "Commutator"], [90, 1, 1, "", "CoordSystem"], [90, 1, 1, "", "CoordinateSymbol"], [90, 1, 1, "", "CovarDerivativeOp"], [90, 1, 1, "", "Differential"], [90, 1, 1, "", "LieDerivative"], [90, 1, 1, "", "Manifold"], [90, 1, 1, "", "Patch"], [90, 1, 1, "", "Point"], [90, 1, 1, "", "TensorProduct"], [90, 1, 1, "", "WedgeProduct"], [90, 4, 1, "", "intcurve_diffequ"], [90, 4, 1, "", "intcurve_series"], [90, 4, 1, "", "metric_to_Christoffel_1st"], [90, 4, 1, "", "metric_to_Christoffel_2nd"], [90, 4, 1, "", "metric_to_Ricci_components"], [90, 4, 1, "", "metric_to_Riemann_components"], [90, 4, 1, "", "twoform_to_matrix"], [90, 4, 1, "", "vectors_in_basis"]], "sympy.diffgeom.CoordSystem": [[90, 2, 1, "", "base_oneform"], [90, 2, 1, "", "base_oneforms"], [90, 2, 1, "", "base_scalar"], [90, 2, 1, "", "base_scalars"], [90, 2, 1, "", "base_vector"], [90, 2, 1, "", "base_vectors"], [90, 2, 1, "", "coord_function"], [90, 2, 1, "", "coord_functions"], [90, 2, 1, "", "coord_tuple_transform_to"], [90, 2, 1, "", "jacobian"], [90, 2, 1, "", "jacobian_determinant"], [90, 2, 1, "", "jacobian_matrix"], [90, 2, 1, "", "point"], [90, 2, 1, "", "point_to_coords"], [90, 2, 1, "", "transform"], [90, 2, 1, "", "transformation"]], "sympy.diffgeom.Point": [[90, 2, 1, "", "coords"]], "sympy.discrete": [[91, 0, 0, "-", "convolutions"], [91, 0, 0, "-", "transforms"]], "sympy.discrete.convolutions": [[91, 4, 1, "", "convolution"], [91, 4, 1, "", "convolution_fft"], [91, 4, 1, "", "convolution_fwht"], [91, 4, 1, "", "convolution_ntt"], [91, 4, 1, "", "convolution_subset"], [91, 4, 1, "", "covering_product"], [91, 4, 1, "", "intersecting_product"]], "sympy.discrete.transforms": [[91, 4, 1, "", "fft"], [91, 4, 1, "", "fwht"], [91, 4, 1, "", "ifft"], [91, 4, 1, "", "ifwht"], [91, 4, 1, "", "intt"], [91, 4, 1, "", "inverse_mobius_transform"], [91, 4, 1, "", "mobius_transform"], [91, 4, 1, "", "ntt"]], "sympy.external.pythonmpq": [[211, 1, 1, "", "PythonMPQ"]], "sympy.functions.combinatorial.factorials": [[93, 1, 1, "", "FallingFactorial"], [93, 1, 1, "", "MultiFactorial"], [93, 1, 1, "", "RisingFactorial"], [93, 1, 1, "", "binomial"], [93, 1, 1, "", "factorial"], [93, 1, 1, "", "factorial2"], [93, 1, 1, "", "subfactorial"]], "sympy.functions.combinatorial.numbers": [[93, 1, 1, "", "andre"], [93, 1, 1, "", "bell"], [93, 1, 1, "", "bernoulli"], [93, 1, 1, "", "catalan"], [93, 1, 1, "", "divisor_sigma"], [93, 1, 1, "", "euler"], [93, 1, 1, "", "fibonacci"], [93, 1, 1, "", "genocchi"], [93, 1, 1, "", "harmonic"], [93, 1, 1, "", "jacobi_symbol"], [93, 1, 1, "", "kronecker_symbol"], [93, 1, 1, "", "legendre_symbol"], [93, 1, 1, "", "lucas"], [93, 1, 1, "", "mobius"], [93, 4, 1, "", "nC"], [93, 4, 1, "", "nP"], [93, 4, 1, "", "nT"], [93, 1, 1, "", "partition"], [93, 1, 1, "", "primenu"], [93, 1, 1, "", "primeomega"], [93, 1, 1, "", "primepi"], [93, 1, 1, "", "reduced_totient"], [93, 4, 1, "", "stirling"], [93, 1, 1, "", "totient"], [93, 1, 1, "", "tribonacci"], [93, 1, 1, "", "udivisor_sigma"]], "sympy.functions.elementary.complexes": [[94, 1, 1, "", "Abs"], [94, 1, 1, "", "arg"], [94, 1, 1, "", "conjugate"], [94, 1, 1, "", "im"], [94, 1, 1, "", "periodic_argument"], [94, 1, 1, "", "polar_lift"], [94, 1, 1, "", "principal_branch"], [94, 1, 1, "", "re"], [94, 1, 1, "", "sign"]], "sympy.functions.elementary.complexes.Abs": [[94, 2, 1, "", "fdiff"]], "sympy.functions.elementary.complexes.im": [[94, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.complexes.re": [[94, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.exponential": [[94, 1, 1, "", "LambertW"], [94, 1, 1, "", "exp"], [94, 1, 1, "", "exp_polar"], [94, 1, 1, "", "log"]], "sympy.functions.elementary.exponential.LambertW": [[94, 2, 1, "", "fdiff"]], "sympy.functions.elementary.exponential.exp": [[94, 2, 1, "", "as_real_imag"], [94, 3, 1, "", "base"], [94, 2, 1, "", "fdiff"], [94, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.exponential.log": [[94, 2, 1, "", "as_base_exp"], [94, 2, 1, "", "as_real_imag"], [94, 2, 1, "", "fdiff"], [94, 2, 1, "", "inverse"], [94, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic": [[94, 1, 1, "", "HyperbolicFunction"], [94, 1, 1, "", "acosh"], [94, 1, 1, "", "acoth"], [94, 1, 1, "", "acsch"], [94, 1, 1, "", "asech"], [94, 1, 1, "", "asinh"], [94, 1, 1, "", "atanh"], [94, 1, 1, "", "cosh"], [94, 1, 1, "", "coth"], [94, 1, 1, "", "csch"], [94, 1, 1, "", "sech"], [94, 1, 1, "", "sinh"], [94, 1, 1, "", "tanh"]], "sympy.functions.elementary.hyperbolic.acosh": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acoth": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acsch": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asech": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asinh": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.atanh": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.coth": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.csch": [[94, 2, 1, "", "fdiff"], [94, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.sinh": [[94, 2, 1, "", "as_real_imag"], [94, 2, 1, "", "fdiff"], [94, 2, 1, "", "inverse"], [94, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.tanh": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.integers": [[94, 1, 1, "", "RoundFunction"], [94, 1, 1, "", "ceiling"], [94, 1, 1, "", "floor"], [94, 1, 1, "", "frac"]], "sympy.functions.elementary.miscellaneous": [[94, 1, 1, "", "IdentityFunction"], [94, 1, 1, "", "Max"], [94, 1, 1, "", "Min"], [94, 4, 1, "", "cbrt"], [94, 4, 1, "", "real_root"], [94, 4, 1, "", "root"], [94, 4, 1, "", "sqrt"]], "sympy.functions.elementary.piecewise": [[94, 1, 1, "", "ExprCondPair"], [94, 1, 1, "", "Piecewise"], [94, 4, 1, "", "piecewise_exclusive"], [94, 4, 1, "", "piecewise_fold"]], "sympy.functions.elementary.piecewise.ExprCondPair": [[94, 3, 1, "", "cond"], [94, 3, 1, "", "expr"]], "sympy.functions.elementary.piecewise.Piecewise": [[94, 2, 1, "", "_eval_integral"], [94, 2, 1, "", "as_expr_set_pairs"], [94, 2, 1, "", "doit"], [94, 2, 1, "", "eval"], [94, 2, 1, "", "piecewise_integrate"]], "sympy.functions.elementary.trigonometric": [[94, 1, 1, "", "acos"], [94, 1, 1, "", "acot"], [94, 1, 1, "", "acsc"], [94, 1, 1, "", "asec"], [94, 1, 1, "", "asin"], [94, 1, 1, "", "atan"], [94, 1, 1, "", "atan2"], [94, 1, 1, "", "cos"], [94, 1, 1, "", "cot"], [94, 1, 1, "", "csc"], [94, 1, 1, "", "sec"], [94, 1, 1, "", "sin"], [94, 1, 1, "", "sinc"], [94, 1, 1, "", "tan"]], "sympy.functions.elementary.trigonometric.acos": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acot": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acsc": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asec": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asin": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.atan": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.cot": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.tan": [[94, 2, 1, "", "inverse"]], "sympy.functions.special": [[96, 0, 0, "-", "bessel"], [96, 0, 0, "-", "beta_functions"], [96, 0, 0, "-", "elliptic_integrals"], [96, 0, 0, "-", "error_functions"], [96, 0, 0, "-", "gamma_functions"], [96, 0, 0, "-", "mathieu_functions"], [96, 0, 0, "-", "polynomials"], [96, 0, 0, "-", "singularity_functions"], [96, 0, 0, "-", "zeta_functions"]], "sympy.functions.special.bessel": [[96, 1, 1, "", "AiryBase"], [96, 1, 1, "", "BesselBase"], [96, 1, 1, "", "airyai"], [96, 1, 1, "", "airyaiprime"], [96, 1, 1, "", "airybi"], [96, 1, 1, "", "airybiprime"], [96, 1, 1, "", "besseli"], [96, 1, 1, "", "besselj"], [96, 1, 1, "", "besselk"], [96, 1, 1, "", "bessely"], [96, 1, 1, "", "hankel1"], [96, 1, 1, "", "hankel2"], [96, 1, 1, "", "jn"], [96, 4, 1, "", "jn_zeros"], [96, 1, 1, "", "marcumq"], [96, 1, 1, "", "yn"]], "sympy.functions.special.bessel.BesselBase": [[96, 3, 1, "", "argument"], [96, 3, 1, "", "order"]], "sympy.functions.special.beta_functions": [[96, 1, 1, "", "beta"]], "sympy.functions.special.bsplines": [[96, 4, 1, "", "bspline_basis"], [96, 4, 1, "", "bspline_basis_set"], [96, 4, 1, "", "interpolating_spline"]], "sympy.functions.special.delta_functions": [[96, 1, 1, "", "DiracDelta"], [96, 1, 1, "", "Heaviside"]], "sympy.functions.special.delta_functions.DiracDelta": [[96, 2, 1, "", "eval"], [96, 2, 1, "", "fdiff"], [96, 2, 1, "", "is_simple"]], "sympy.functions.special.delta_functions.Heaviside": [[96, 2, 1, "", "eval"], [96, 2, 1, "", "fdiff"], [96, 3, 1, "", "pargs"]], "sympy.functions.special.elliptic_integrals": [[96, 1, 1, "", "elliptic_e"], [96, 1, 1, "", "elliptic_f"], [96, 1, 1, "", "elliptic_k"], [96, 1, 1, "", "elliptic_pi"]], "sympy.functions.special.error_functions": [[96, 1, 1, "", "Chi"], [96, 1, 1, "", "Ci"], [96, 4, 1, "", "E1"], [96, 1, 1, "", "Ei"], [96, 1, 1, "", "FresnelIntegral"], [96, 1, 1, "", "Li"], [96, 1, 1, "", "Shi"], [96, 1, 1, "", "Si"], [96, 1, 1, "", "erf"], [96, 1, 1, "", "erf2"], [96, 1, 1, "", "erf2inv"], [96, 1, 1, "", "erfc"], [96, 1, 1, "", "erfcinv"], [96, 1, 1, "", "erfi"], [96, 1, 1, "", "erfinv"], [96, 1, 1, "", "expint"], [96, 1, 1, "", "fresnelc"], [96, 1, 1, "", "fresnels"], [96, 1, 1, "", "li"]], "sympy.functions.special.error_functions.erf": [[96, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfc": [[96, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfcinv": [[96, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfinv": [[96, 2, 1, "", "inverse"]], "sympy.functions.special.gamma_functions": [[96, 1, 1, "", "digamma"], [96, 1, 1, "", "gamma"], [96, 1, 1, "", "loggamma"], [96, 1, 1, "", "lowergamma"], [96, 1, 1, "", "multigamma"], [96, 1, 1, "", "polygamma"], [96, 1, 1, "", "trigamma"], [96, 1, 1, "", "uppergamma"]], "sympy.functions.special.hyper": [[96, 1, 1, "", "appellf1"], [96, 1, 1, "", "hyper"], [96, 1, 1, "", "meijerg"]], "sympy.functions.special.hyper.hyper": [[96, 3, 1, "", "ap"], [96, 3, 1, "", "argument"], [96, 3, 1, "", "bq"], [96, 3, 1, "", "convergence_statement"], [96, 3, 1, "", "eta"], [96, 3, 1, "", "radius_of_convergence"]], "sympy.functions.special.hyper.meijerg": [[96, 3, 1, "", "an"], [96, 3, 1, "", "aother"], [96, 3, 1, "", "ap"], [96, 3, 1, "", "argument"], [96, 3, 1, "", "bm"], [96, 3, 1, "", "bother"], [96, 3, 1, "", "bq"], [96, 3, 1, "", "delta"], [96, 2, 1, "", "get_period"], [96, 2, 1, "", "integrand"], [96, 3, 1, "", "is_number"], [96, 3, 1, "", "nu"]], "sympy.functions.special.mathieu_functions": [[96, 1, 1, "", "MathieuBase"], [96, 1, 1, "", "mathieuc"], [96, 1, 1, "", "mathieucprime"], [96, 1, 1, "", "mathieus"], [96, 1, 1, "", "mathieusprime"]], "sympy.functions.special.polynomials": [[96, 1, 1, "", "assoc_laguerre"], [96, 1, 1, "", "assoc_legendre"], [96, 1, 1, "", "chebyshevt"], [96, 1, 1, "", "chebyshevt_root"], [96, 1, 1, "", "chebyshevu"], [96, 1, 1, "", "chebyshevu_root"], [96, 1, 1, "", "gegenbauer"], [96, 1, 1, "", "hermite"], [96, 1, 1, "", "hermite_prob"], [96, 1, 1, "", "jacobi"], [96, 4, 1, "", "jacobi_normalized"], [96, 1, 1, "", "laguerre"], [96, 1, 1, "", "legendre"]], "sympy.functions.special.singularity_functions": [[96, 1, 1, "", "SingularityFunction"]], "sympy.functions.special.singularity_functions.SingularityFunction": [[96, 2, 1, "", "eval"], [96, 2, 1, "", "fdiff"]], "sympy.functions.special.spherical_harmonics": [[96, 1, 1, "", "Ynm"], [96, 4, 1, "", "Ynm_c"], [96, 1, 1, "", "Znm"]], "sympy.functions.special.tensor_functions": [[96, 4, 1, "", "Eijk"], [96, 1, 1, "", "KroneckerDelta"], [96, 1, 1, "", "LeviCivita"], [96, 4, 1, "", "eval_levicivita"]], "sympy.functions.special.tensor_functions.KroneckerDelta": [[96, 2, 1, "", "eval"], [96, 3, 1, "", "indices_contain_equal_information"], [96, 3, 1, "", "is_above_fermi"], [96, 3, 1, "", "is_below_fermi"], [96, 3, 1, "", "is_only_above_fermi"], [96, 3, 1, "", "is_only_below_fermi"], [96, 3, 1, "", "killable_index"], [96, 3, 1, "", "preferred_index"]], "sympy.functions.special.zeta_functions": [[96, 1, 1, "", "dirichlet_eta"], [96, 1, 1, "", "lerchphi"], [96, 1, 1, "", "polylog"], [96, 1, 1, "", "stieltjes"], [96, 1, 1, "", "zeta"]], "sympy.geometry": [[97, 0, 0, "-", "curve"], [98, 0, 0, "-", "ellipse"], [99, 0, 0, "-", "entity"], [101, 0, 0, "-", "line"], [102, 0, 0, "-", "plane"], [103, 0, 0, "-", "point"], [104, 0, 0, "-", "polygon"], [105, 0, 0, "-", "util"]], "sympy.geometry.curve": [[97, 1, 1, "", "Curve"]], "sympy.geometry.curve.Curve": [[97, 3, 1, "", "ambient_dimension"], [97, 2, 1, "", "arbitrary_point"], [97, 3, 1, "", "free_symbols"], [97, 3, 1, "", "functions"], [97, 3, 1, "", "length"], [97, 3, 1, "", "limits"], [97, 3, 1, "", "parameter"], [97, 2, 1, "", "plot_interval"], [97, 2, 1, "", "rotate"], [97, 2, 1, "", "scale"], [97, 2, 1, "", "translate"]], "sympy.geometry.ellipse": [[98, 1, 1, "", "Circle"], [98, 1, 1, "", "Ellipse"]], "sympy.geometry.ellipse.Circle": [[98, 3, 1, "", "circumference"], [98, 2, 1, "", "equation"], [98, 2, 1, "", "intersection"], [98, 3, 1, "", "radius"], [98, 2, 1, "", "reflect"], [98, 2, 1, "", "scale"], [98, 3, 1, "", "vradius"]], "sympy.geometry.ellipse.Ellipse": [[98, 3, 1, "", "apoapsis"], [98, 2, 1, "", "arbitrary_point"], [98, 3, 1, "", "area"], [98, 2, 1, "", "auxiliary_circle"], [98, 3, 1, "", "bounds"], [98, 3, 1, "", "center"], [98, 3, 1, "", "circumference"], [98, 2, 1, "", "director_circle"], [98, 3, 1, "", "eccentricity"], [98, 2, 1, "", "encloses_point"], [98, 2, 1, "", "equation"], [98, 2, 1, "", "evolute"], [98, 3, 1, "", "foci"], [98, 3, 1, "", "focus_distance"], [98, 3, 1, "", "hradius"], [98, 2, 1, "", "intersection"], [98, 2, 1, "", "is_tangent"], [98, 3, 1, "", "major"], [98, 3, 1, "", "minor"], [98, 2, 1, "", "normal_lines"], [98, 3, 1, "", "periapsis"], [98, 2, 1, "", "plot_interval"], [98, 2, 1, "", "polar_second_moment_of_area"], [98, 2, 1, "", "random_point"], [98, 2, 1, "", "reflect"], [98, 2, 1, "", "rotate"], [98, 2, 1, "", "scale"], [98, 2, 1, "", "second_moment_of_area"], [98, 2, 1, "", "section_modulus"], [98, 3, 1, "", "semilatus_rectum"], [98, 2, 1, "", "tangent_lines"], [98, 3, 1, "", "vradius"]], "sympy.geometry.entity": [[99, 1, 1, "", "GeometryEntity"]], "sympy.geometry.entity.GeometryEntity": [[99, 3, 1, "", "ambient_dimension"], [99, 3, 1, "", "bounds"], [99, 2, 1, "", "encloses"], [99, 2, 1, "", "intersection"], [99, 2, 1, "", "is_similar"], [99, 2, 1, "", "parameter_value"], [99, 2, 1, "", "reflect"], [99, 2, 1, "", "rotate"], [99, 2, 1, "", "scale"], [99, 2, 1, "", "translate"]], "sympy.geometry.line": [[101, 1, 1, "", "Line"], [101, 1, 1, "", "Line2D"], [101, 1, 1, "", "Line3D"], [101, 1, 1, "", "LinearEntity"], [101, 1, 1, "", "LinearEntity2D"], [101, 1, 1, "", "LinearEntity3D"], [101, 1, 1, "", "Ray"], [101, 1, 1, "", "Ray2D"], [101, 1, 1, "", "Ray3D"], [101, 1, 1, "", "Segment"], [101, 1, 1, "", "Segment2D"], [101, 1, 1, "", "Segment3D"]], "sympy.geometry.line.Line": [[101, 2, 1, "", "contains"], [101, 2, 1, "", "distance"], [101, 2, 1, "", "equals"], [101, 2, 1, "", "plot_interval"]], "sympy.geometry.line.Line2D": [[101, 3, 1, "", "coefficients"], [101, 2, 1, "", "equation"]], "sympy.geometry.line.Line3D": [[101, 2, 1, "", "distance"], [101, 2, 1, "", "equation"]], "sympy.geometry.line.LinearEntity": [[101, 3, 1, "", "ambient_dimension"], [101, 2, 1, "", "angle_between"], [101, 2, 1, "", "arbitrary_point"], [101, 2, 1, "", "are_concurrent"], [101, 2, 1, "", "bisectors"], [101, 2, 1, "", "contains"], [101, 3, 1, "", "direction"], [101, 2, 1, "", "intersection"], [101, 2, 1, "", "is_parallel"], [101, 2, 1, "", "is_perpendicular"], [101, 2, 1, "", "is_similar"], [101, 3, 1, "", "length"], [101, 3, 1, "", "p1"], [101, 3, 1, "", "p2"], [101, 2, 1, "", "parallel_line"], [101, 2, 1, "", "perpendicular_line"], [101, 2, 1, "", "perpendicular_segment"], [101, 3, 1, "", "points"], [101, 2, 1, "", "projection"], [101, 2, 1, "", "random_point"], [101, 2, 1, "", "smallest_angle_between"]], "sympy.geometry.line.LinearEntity2D": [[101, 3, 1, "", "bounds"], [101, 2, 1, "", "perpendicular_line"], [101, 3, 1, "", "slope"]], "sympy.geometry.line.LinearEntity3D": [[101, 3, 1, "", "direction_cosine"], [101, 3, 1, "", "direction_ratio"]], "sympy.geometry.line.Ray": [[101, 2, 1, "", "contains"], [101, 2, 1, "", "distance"], [101, 2, 1, "", "equals"], [101, 2, 1, "", "plot_interval"], [101, 3, 1, "", "source"]], "sympy.geometry.line.Ray2D": [[101, 2, 1, "", "closing_angle"], [101, 3, 1, "", "xdirection"], [101, 3, 1, "", "ydirection"]], "sympy.geometry.line.Ray3D": [[101, 3, 1, "", "xdirection"], [101, 3, 1, "", "ydirection"], [101, 3, 1, "", "zdirection"]], "sympy.geometry.line.Segment": [[101, 2, 1, "", "contains"], [101, 2, 1, "", "distance"], [101, 2, 1, "", "equals"], [101, 3, 1, "", "length"], [101, 3, 1, "", "midpoint"], [101, 2, 1, "", "perpendicular_bisector"], [101, 2, 1, "", "plot_interval"]], "sympy.geometry.plane": [[102, 1, 1, "", "Plane"]], "sympy.geometry.plane.Plane": [[102, 2, 1, "", "angle_between"], [102, 2, 1, "", "arbitrary_point"], [102, 2, 1, "", "are_concurrent"], [102, 2, 1, "", "distance"], [102, 2, 1, "", "equals"], [102, 2, 1, "", "equation"], [102, 2, 1, "", "intersection"], [102, 2, 1, "", "is_coplanar"], [102, 2, 1, "", "is_parallel"], [102, 2, 1, "", "is_perpendicular"], [102, 3, 1, "", "normal_vector"], [102, 3, 1, "", "p1"], [102, 2, 1, "", "parallel_plane"], [102, 2, 1, "", "parameter_value"], [102, 2, 1, "", "perpendicular_line"], [102, 2, 1, "", "perpendicular_plane"], [102, 2, 1, "", "projection"], [102, 2, 1, "", "projection_line"], [102, 2, 1, "", "random_point"]], "sympy.geometry.point": [[103, 1, 1, "", "Point"], [103, 1, 1, "", "Point2D"], [103, 1, 1, "", "Point3D"]], "sympy.geometry.point.Point": [[103, 2, 1, "", "affine_rank"], [103, 3, 1, "", "ambient_dimension"], [103, 2, 1, "", "are_coplanar"], [103, 2, 1, "", "canberra_distance"], [103, 2, 1, "", "distance"], [103, 2, 1, "", "dot"], [103, 2, 1, "", "equals"], [103, 2, 1, "", "intersection"], [103, 2, 1, "", "is_collinear"], [103, 2, 1, "", "is_concyclic"], [103, 3, 1, "", "is_nonzero"], [103, 2, 1, "", "is_scalar_multiple"], [103, 3, 1, "", "is_zero"], [103, 3, 1, "", "length"], [103, 2, 1, "", "midpoint"], [103, 3, 1, "", "origin"], [103, 3, 1, "", "orthogonal_direction"], [103, 2, 1, "", "project"], [103, 2, 1, "", "taxicab_distance"], [103, 3, 1, "", "unit"]], "sympy.geometry.point.Point2D": [[103, 3, 1, "", "bounds"], [103, 3, 1, "", "coordinates"], [103, 2, 1, "", "rotate"], [103, 2, 1, "", "scale"], [103, 2, 1, "", "transform"], [103, 2, 1, "", "translate"], [103, 3, 1, "", "x"], [103, 3, 1, "", "y"]], "sympy.geometry.point.Point3D": [[103, 2, 1, "", "are_collinear"], [103, 3, 1, "", "coordinates"], [103, 2, 1, "", "direction_cosine"], [103, 2, 1, "", "direction_ratio"], [103, 2, 1, "", "intersection"], [103, 2, 1, "", "scale"], [103, 2, 1, "", "transform"], [103, 2, 1, "", "translate"], [103, 3, 1, "", "x"], [103, 3, 1, "", "y"], [103, 3, 1, "", "z"]], "sympy.geometry.polygon": [[104, 1, 1, "", "Polygon"], [104, 1, 1, "", "RegularPolygon"], [104, 1, 1, "", "Triangle"]], "sympy.geometry.polygon.Polygon": [[104, 3, 1, "", "angles"], [104, 2, 1, "", "arbitrary_point"], [104, 3, 1, "", "area"], [104, 2, 1, "", "bisectors"], [104, 3, 1, "", "bounds"], [104, 3, 1, "", "centroid"], [104, 2, 1, "", "cut_section"], [104, 2, 1, "", "distance"], [104, 2, 1, "", "encloses_point"], [104, 2, 1, "", "first_moment_of_area"], [104, 2, 1, "", "intersection"], [104, 2, 1, "", "is_convex"], [104, 3, 1, "", "perimeter"], [104, 2, 1, "", "plot_interval"], [104, 2, 1, "", "polar_second_moment_of_area"], [104, 2, 1, "", "second_moment_of_area"], [104, 2, 1, "", "section_modulus"], [104, 3, 1, "", "sides"], [104, 3, 1, "", "vertices"]], "sympy.geometry.polygon.RegularPolygon": [[104, 3, 1, "", "angles"], [104, 3, 1, "", "apothem"], [104, 3, 1, "", "area"], [104, 3, 1, "", "args"], [104, 3, 1, "", "center"], [104, 3, 1, "", "centroid"], [104, 3, 1, "", "circumcenter"], [104, 3, 1, "", "circumcircle"], [104, 3, 1, "", "circumradius"], [104, 2, 1, "", "encloses_point"], [104, 3, 1, "", "exterior_angle"], [104, 3, 1, "", "incircle"], [104, 3, 1, "", "inradius"], [104, 3, 1, "", "interior_angle"], [104, 3, 1, "", "length"], [104, 3, 1, "", "radius"], [104, 2, 1, "", "reflect"], [104, 2, 1, "", "rotate"], [104, 3, 1, "", "rotation"], [104, 2, 1, "", "scale"], [104, 2, 1, "", "spin"], [104, 3, 1, "", "vertices"]], "sympy.geometry.polygon.Triangle": [[104, 3, 1, "", "altitudes"], [104, 2, 1, "", "bisectors"], [104, 3, 1, "", "circumcenter"], [104, 3, 1, "", "circumcircle"], [104, 3, 1, "", "circumradius"], [104, 3, 1, "", "eulerline"], [104, 3, 1, "", "excenters"], [104, 3, 1, "", "exradii"], [104, 3, 1, "", "incenter"], [104, 3, 1, "", "incircle"], [104, 3, 1, "", "inradius"], [104, 2, 1, "", "is_equilateral"], [104, 2, 1, "", "is_isosceles"], [104, 2, 1, "", "is_right"], [104, 2, 1, "", "is_scalene"], [104, 2, 1, "", "is_similar"], [104, 3, 1, "", "medial"], [104, 3, 1, "", "medians"], [104, 3, 1, "", "nine_point_circle"], [104, 3, 1, "", "orthocenter"], [104, 3, 1, "", "vertices"]], "sympy.geometry.util": [[105, 4, 1, "", "are_similar"], [105, 4, 1, "", "centroid"], [105, 4, 1, "", "convex_hull"], [105, 4, 1, "", "idiff"], [105, 4, 1, "", "intersection"]], "sympy.holonomic.holonomic": [[111, 1, 1, "", "DifferentialOperator"], [111, 1, 1, "", "DifferentialOperatorAlgebra"], [111, 4, 1, "", "DifferentialOperators"], [111, 1, 1, "", "HolonomicFunction"], [109, 4, 1, "", "_convert_poly_rat_alg"], [109, 4, 1, "", "_create_table"], [107, 4, 1, "", "expr_to_holonomic"], [107, 4, 1, "", "from_hyper"], [107, 4, 1, "", "from_meijerg"]], "sympy.holonomic.holonomic.DifferentialOperator": [[111, 2, 1, "", "is_singular"]], "sympy.holonomic.holonomic.HolonomicFunction": [[110, 2, 1, "", "composition"], [110, 2, 1, "", "diff"], [110, 2, 1, "", "evalf"], [110, 2, 1, "", "integrate"], [110, 2, 1, "", "series"], [110, 2, 1, "", "to_expr"], [110, 2, 1, "", "to_hyper"], [110, 2, 1, "", "to_meijerg"], [110, 2, 1, "", "to_sequence"]], "sympy.integrals": [[115, 0, 0, "-", "intpoly"], [113, 0, 0, "-", "meijerint"], [113, 0, 0, "-", "meijerint_doc"], [115, 0, 0, "-", "transforms"]], "sympy.integrals.deltafunctions": [[115, 4, 1, "", "deltaintegrate"]], "sympy.integrals.heurisch": [[115, 4, 1, "", "components"], [115, 4, 1, "", "heurisch"]], "sympy.integrals.integrals": [[115, 1, 1, "", "Integral"], [115, 4, 1, "", "integrate"], [115, 4, 1, "", "line_integrate"]], "sympy.integrals.integrals.Integral": [[115, 2, 1, "", "as_sum"], [115, 2, 1, "", "doit"], [115, 3, 1, "", "free_symbols"], [115, 6, 1, "", "is_commutative"], [115, 2, 1, "", "principal_value"], [115, 2, 1, "", "transform"]], "sympy.integrals.intpoly": [[115, 4, 1, "", "polytope_integrate"]], "sympy.integrals.manualintegrate": [[115, 4, 1, "", "integral_steps"], [115, 4, 1, "", "manualintegrate"]], "sympy.integrals.meijerint": [[113, 7, 1, "", "_CoeffExpValueError"], [113, 4, 1, "", "_check_antecedents"], [113, 4, 1, "", "_check_antecedents_1"], [113, 4, 1, "", "_check_antecedents_inversion"], [113, 4, 1, "", "_condsimp"], [113, 4, 1, "", "_create_lookup_table"], [113, 4, 1, "", "_dummy"], [113, 4, 1, "", "_dummy_"], [113, 4, 1, "", "_eval_cond"], [113, 4, 1, "", "_exponents"], [113, 4, 1, "", "_find_splitting_points"], [113, 4, 1, "", "_flip_g"], [113, 4, 1, "", "_functions"], [113, 4, 1, "", "_get_coeff_exp"], [113, 4, 1, "", "_guess_expansion"], [113, 4, 1, "", "_inflate_fox_h"], [113, 4, 1, "", "_inflate_g"], [113, 4, 1, "", "_int0oo"], [113, 4, 1, "", "_int0oo_1"], [113, 4, 1, "", "_int_inversion"], [113, 4, 1, "", "_is_analytic"], [113, 4, 1, "", "_meijerint_definite_2"], [113, 4, 1, "", "_meijerint_definite_3"], [113, 4, 1, "", "_meijerint_definite_4"], [113, 4, 1, "", "_meijerint_indefinite_1"], [113, 4, 1, "", "_mul_args"], [113, 4, 1, "", "_mul_as_two_parts"], [113, 4, 1, "", "_my_principal_branch"], [113, 4, 1, "", "_mytype"], [113, 4, 1, "", "_rewrite1"], [113, 4, 1, "", "_rewrite2"], [113, 4, 1, "", "_rewrite_inversion"], [113, 4, 1, "", "_rewrite_saxena"], [113, 4, 1, "", "_rewrite_saxena_1"], [113, 4, 1, "", "_rewrite_single"], [113, 4, 1, "", "_split_mul"], [113, 4, 1, "", "meijerint_definite"], [113, 4, 1, "", "meijerint_indefinite"], [113, 4, 1, "", "meijerint_inversion"]], "sympy.integrals.quadrature": [[115, 4, 1, "", "gauss_chebyshev_t"], [115, 4, 1, "", "gauss_chebyshev_u"], [115, 4, 1, "", "gauss_gen_laguerre"], [115, 4, 1, "", "gauss_hermite"], [115, 4, 1, "", "gauss_jacobi"], [115, 4, 1, "", "gauss_laguerre"], [115, 4, 1, "", "gauss_legendre"], [115, 4, 1, "", "gauss_lobatto"]], "sympy.integrals.rationaltools": [[115, 4, 1, "", "ratint"], [115, 4, 1, "", "ratint_logpart"], [115, 4, 1, "", "ratint_ratpart"]], "sympy.integrals.risch": [[115, 1, 1, "", "NonElementaryIntegral"], [115, 4, 1, "", "risch_integrate"]], "sympy.integrals.singularityfunctions": [[115, 4, 1, "", "singularityintegrate"]], "sympy.integrals.transforms": [[115, 1, 1, "", "CosineTransform"], [115, 1, 1, "", "FourierTransform"], [115, 1, 1, "", "HankelTransform"], [115, 1, 1, "", "IntegralTransform"], [115, 7, 1, "", "IntegralTransformError"], [115, 1, 1, "", "InverseCosineTransform"], [115, 1, 1, "", "InverseFourierTransform"], [115, 1, 1, "", "InverseHankelTransform"], [115, 1, 1, "", "InverseLaplaceTransform"], [115, 1, 1, "", "InverseMellinTransform"], [115, 1, 1, "", "InverseSineTransform"], [115, 1, 1, "", "LaplaceTransform"], [115, 1, 1, "", "MellinTransform"], [115, 1, 1, "", "SineTransform"], [115, 4, 1, "", "_fourier_transform"], [115, 4, 1, "", "cosine_transform"], [115, 4, 1, "", "fourier_transform"], [115, 4, 1, "", "hankel_transform"], [115, 4, 1, "", "inverse_cosine_transform"], [115, 4, 1, "", "inverse_fourier_transform"], [115, 4, 1, "", "inverse_hankel_transform"], [115, 4, 1, "", "inverse_laplace_transform"], [115, 4, 1, "", "inverse_mellin_transform"], [115, 4, 1, "", "inverse_sine_transform"], [115, 4, 1, "", "laplace_correspondence"], [115, 4, 1, "", "laplace_initial_conds"], [115, 4, 1, "", "laplace_transform"], [115, 4, 1, "", "mellin_transform"], [115, 4, 1, "", "sine_transform"]], "sympy.integrals.transforms.IntegralTransform": [[115, 2, 1, "", "doit"], [115, 3, 1, "", "function"], [115, 3, 1, "", "function_variable"], [115, 3, 1, "", "transform_variable"]], "sympy.integrals.transforms.InverseLaplaceTransform": [[115, 2, 1, "", "doit"]], "sympy.integrals.transforms.LaplaceTransform": [[115, 2, 1, "", "doit"]], "sympy.integrals.trigonometry": [[115, 4, 1, "", "trigintegrate"]], "sympy.interactive": [[116, 0, 0, "-", "printing"], [116, 0, 0, "-", "session"]], "sympy.interactive.printing": [[116, 4, 1, "", "init_printing"]], "sympy.interactive.session": [[116, 4, 1, "", "enable_automatic_int_sympification"], [116, 4, 1, "", "enable_automatic_symbols"], [116, 4, 1, "", "init_ipython_session"], [116, 4, 1, "", "init_python_session"], [116, 4, 1, "", "init_session"], [116, 4, 1, "", "int_to_Integer"]], "sympy.liealgebras.cartan_matrix": [[117, 4, 1, "", "CartanMatrix"]], "sympy.liealgebras.cartan_type": [[117, 1, 1, "", "CartanType_generator"], [117, 1, 1, "", "Standard_Cartan"]], "sympy.liealgebras.cartan_type.Standard_Cartan": [[117, 2, 1, "", "rank"], [117, 2, 1, "", "series"]], "sympy.liealgebras.dynkin_diagram": [[117, 4, 1, "", "DynkinDiagram"]], "sympy.liealgebras.root_system": [[117, 1, 1, "", "RootSystem"]], "sympy.liealgebras.root_system.RootSystem": [[117, 2, 1, "", "add_as_roots"], [117, 2, 1, "", "add_simple_roots"], [117, 2, 1, "", "all_roots"], [117, 2, 1, "", "cartan_matrix"], [117, 2, 1, "", "dynkin_diagram"], [117, 2, 1, "", "root_space"], [117, 2, 1, "", "simple_roots"]], "sympy.liealgebras.type_a": [[117, 1, 1, "", "TypeA"]], "sympy.liealgebras.type_a.TypeA": [[117, 2, 1, "", "basic_root"], [117, 2, 1, "", "basis"], [117, 2, 1, "", "cartan_matrix"], [117, 2, 1, "", "dimension"], [117, 2, 1, "", "highest_root"], [117, 2, 1, "", "lie_algebra"], [117, 2, 1, "", "positive_roots"], [117, 2, 1, "", "roots"], [117, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_b": [[117, 1, 1, "", "TypeB"]], "sympy.liealgebras.type_b.TypeB": [[117, 2, 1, "", "basic_root"], [117, 2, 1, "", "basis"], [117, 2, 1, "", "cartan_matrix"], [117, 2, 1, "", "dimension"], [117, 2, 1, "", "lie_algebra"], [117, 2, 1, "", "positive_roots"], [117, 2, 1, "", "roots"], [117, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_c": [[117, 1, 1, "", "TypeC"]], "sympy.liealgebras.type_c.TypeC": [[117, 2, 1, "", "basic_root"], [117, 2, 1, "", "basis"], [117, 2, 1, "", "cartan_matrix"], [117, 2, 1, "", "dimension"], [117, 2, 1, "", "lie_algebra"], [117, 2, 1, "", "positive_roots"], [117, 2, 1, "", "roots"], [117, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_d": [[117, 1, 1, "", "TypeD"]], "sympy.liealgebras.type_d.TypeD": [[117, 2, 1, "", "basic_root"], [117, 2, 1, "", "basis"], [117, 2, 1, "", "cartan_matrix"], [117, 2, 1, "", "dimension"], [117, 2, 1, "", "lie_algebra"], [117, 2, 1, "", "positive_roots"], [117, 2, 1, "", "roots"], [117, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_e": [[117, 1, 1, "", "TypeE"]], "sympy.liealgebras.type_e.TypeE": [[117, 2, 1, "", "basic_root"], [117, 2, 1, "", "basis"], [117, 2, 1, "", "cartan_matrix"], [117, 2, 1, "", "dimension"], [117, 2, 1, "", "positive_roots"], [117, 2, 1, "", "roots"], [117, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_f": [[117, 1, 1, "", "TypeF"]], "sympy.liealgebras.type_f.TypeF": [[117, 2, 1, "", "basic_root"], [117, 2, 1, "", "basis"], [117, 2, 1, "", "cartan_matrix"], [117, 2, 1, "", "dimension"], [117, 2, 1, "", "positive_roots"], [117, 2, 1, "", "roots"], [117, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_g": [[117, 1, 1, "", "TypeG"]], "sympy.liealgebras.type_g.TypeG": [[117, 2, 1, "", "basis"], [117, 2, 1, "", "cartan_matrix"], [117, 2, 1, "", "dimension"], [117, 2, 1, "", "positive_roots"], [117, 2, 1, "", "roots"], [117, 2, 1, "", "simple_root"]], "sympy.liealgebras.weyl_group": [[117, 1, 1, "", "WeylGroup"]], "sympy.liealgebras.weyl_group.WeylGroup": [[117, 2, 1, "", "coxeter_diagram"], [117, 2, 1, "", "delete_doubles"], [117, 2, 1, "", "element_order"], [117, 2, 1, "", "generators"], [117, 2, 1, "", "group_name"], [117, 2, 1, "", "group_order"], [117, 2, 1, "", "matrix_form"]], "sympy.logic": [[118, 0, 0, "-", "inference"]], "sympy.logic.boolalg": [[118, 4, 1, "", "ANFform"], [118, 1, 1, "", "And"], [118, 1, 1, "", "Boolean"], [118, 1, 1, "", "BooleanFalse"], [118, 1, 1, "", "BooleanTrue"], [118, 1, 1, "", "Equivalent"], [118, 1, 1, "", "Exclusive"], [118, 1, 1, "", "ITE"], [118, 1, 1, "", "Implies"], [118, 1, 1, "", "Nand"], [118, 1, 1, "", "Nor"], [118, 1, 1, "", "Not"], [118, 1, 1, "", "Or"], [118, 4, 1, "", "POSform"], [118, 4, 1, "", "SOPform"], [118, 1, 1, "", "Xnor"], [118, 1, 1, "", "Xor"], [118, 4, 1, "", "anf_coeffs"], [118, 4, 1, "", "bool_map"], [118, 4, 1, "", "bool_maxterm"], [118, 4, 1, "", "bool_minterm"], [118, 4, 1, "", "bool_monomial"], [118, 4, 1, "", "distribute_and_over_or"], [118, 4, 1, "", "distribute_or_over_and"], [118, 4, 1, "", "distribute_xor_over_and"], [118, 4, 1, "", "eliminate_implications"], [118, 4, 1, "", "gateinputcount"], [118, 4, 1, "", "integer_to_term"], [118, 4, 1, "", "is_anf"], [118, 4, 1, "", "is_cnf"], [118, 4, 1, "", "is_dnf"], [118, 4, 1, "", "is_nnf"], [118, 4, 1, "", "simplify_logic"], [118, 4, 1, "", "term_to_integer"], [118, 4, 1, "", "to_anf"], [118, 4, 1, "", "to_cnf"], [118, 4, 1, "", "to_dnf"], [118, 4, 1, "", "to_int_repr"], [118, 4, 1, "", "to_nnf"], [118, 4, 1, "", "truth_table"]], "sympy.logic.boolalg.Boolean": [[118, 2, 1, "", "as_set"], [118, 2, 1, "", "equals"]], "sympy.logic.boolalg.BooleanFalse": [[118, 2, 1, "", "as_set"]], "sympy.logic.boolalg.BooleanTrue": [[118, 2, 1, "", "as_set"]], "sympy.logic.inference": [[118, 4, 1, "", "satisfiable"]], "sympy.matrices": [[120, 0, 0, "-", "expressions"], [121, 0, 0, "-", "immutable"], [123, 0, 0, "-", "kind"], [124, 0, 0, "-", "matrixbase"], [126, 0, 0, "-", "sparse"], [127, 0, 0, "-", "sparsetools"]], "sympy.matrices.dense": [[119, 1, 1, "", "DenseMatrix"], [124, 4, 1, "", "GramSchmidt"], [119, 5, 1, "", "Matrix"], [119, 1, 1, "", "MutableDenseMatrix"], [124, 4, 1, "", "casoratian"], [124, 4, 1, "", "diag"], [124, 4, 1, "", "eye"], [124, 4, 1, "", "hessian"], [124, 4, 1, "", "jordan_cell"], [124, 4, 1, "", "list2numpy"], [124, 4, 1, "", "matrix2numpy"], [124, 4, 1, "", "matrix_multiply_elementwise"], [124, 4, 1, "", "ones"], [124, 4, 1, "", "randMatrix"], [124, 4, 1, "", "rot_axis1"], [124, 4, 1, "", "rot_axis2"], [124, 4, 1, "", "rot_axis3"], [124, 4, 1, "", "rot_ccw_axis1"], [124, 4, 1, "", "rot_ccw_axis2"], [124, 4, 1, "", "rot_ccw_axis3"], [124, 4, 1, "", "rot_givens"], [124, 4, 1, "", "symarray"], [124, 4, 1, "", "wronskian"], [124, 4, 1, "", "zeros"]], "sympy.matrices.dense.DenseMatrix": [[119, 2, 1, "", "LDLdecomposition"], [119, 2, 1, "", "as_immutable"], [119, 2, 1, "", "as_mutable"], [119, 2, 1, "", "cholesky"], [119, 2, 1, "", "lower_triangular_solve"], [119, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.dense.MutableDenseMatrix": [[119, 2, 1, "", "simplify"]], "sympy.matrices.expressions": [[120, 1, 1, "", "CompanionMatrix"], [120, 1, 1, "", "FunctionMatrix"], [120, 1, 1, "", "HadamardPower"], [120, 1, 1, "", "HadamardProduct"], [120, 1, 1, "", "Identity"], [120, 1, 1, "", "Inverse"], [120, 1, 1, "", "MatAdd"], [120, 1, 1, "", "MatMul"], [120, 1, 1, "", "MatPow"], [120, 1, 1, "", "MatrixExpr"], [120, 1, 1, "", "MatrixPermute"], [120, 1, 1, "", "MatrixSet"], [120, 1, 1, "", "MatrixSymbol"], [120, 1, 1, "", "PermutationMatrix"], [120, 1, 1, "", "Trace"], [120, 1, 1, "", "Transpose"], [120, 1, 1, "", "ZeroMatrix"], [120, 0, 0, "-", "blockmatrix"], [120, 4, 1, "", "hadamard_product"]], "sympy.matrices.expressions.MatrixExpr": [[120, 3, 1, "", "T"], [120, 2, 1, "", "as_coeff_Mul"], [120, 2, 1, "", "as_explicit"], [120, 2, 1, "", "as_mutable"], [120, 2, 1, "", "equals"], [120, 2, 1, "", "from_index_summation"]], "sympy.matrices.expressions.blockmatrix": [[120, 1, 1, "", "BlockDiagMatrix"], [120, 1, 1, "", "BlockMatrix"], [120, 4, 1, "", "block_collapse"]], "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix": [[120, 2, 1, "", "get_diag_blocks"]], "sympy.matrices.expressions.blockmatrix.BlockMatrix": [[120, 2, 1, "", "LDUdecomposition"], [120, 2, 1, "", "LUdecomposition"], [120, 2, 1, "", "UDLdecomposition"], [120, 2, 1, "", "schur"], [120, 2, 1, "", "transpose"]], "sympy.matrices.immutable": [[121, 1, 1, "", "ImmutableDenseMatrix"], [121, 5, 1, "", "ImmutableMatrix"], [126, 1, 1, "", "ImmutableSparseMatrix"]], "sympy.matrices.kind": [[123, 1, 1, "", "MatrixKind"]], "sympy.matrices.kind.MatrixKind": [[123, 5, 1, "", "__weakref__"]], "sympy.matrices.matrixbase": [[124, 1, 1, "", "MatrixBase"], [124, 1, 1, "", "MatrixError"], [124, 1, 1, "", "NonSquareMatrixError"], [124, 1, 1, "", "ShapeError"], [124, 4, 1, "", "a2idx"]], "sympy.matrices.matrixbase.MatrixBase": [[124, 3, 1, "", "C"], [124, 3, 1, "", "D"], [124, 3, 1, "", "H"], [124, 2, 1, "", "LDLdecomposition"], [124, 2, 1, "", "LDLsolve"], [124, 2, 1, "", "LUdecomposition"], [124, 2, 1, "", "LUdecompositionFF"], [124, 2, 1, "", "LUdecomposition_Simple"], [124, 2, 1, "", "LUsolve"], [124, 2, 1, "", "QRdecomposition"], [124, 2, 1, "", "QRsolve"], [124, 3, 1, "", "T"], [124, 2, 1, "", "__abs__"], [124, 2, 1, "", "__add__"], [124, 2, 1, "", "__getitem__"], [124, 2, 1, "", "__len__"], [124, 2, 1, "", "__mul__"], [124, 2, 1, "", "__pow__"], [124, 5, 1, "", "__weakref__"], [124, 2, 1, "", "add"], [124, 2, 1, "", "adjoint"], [124, 2, 1, "", "adjugate"], [124, 2, 1, "", "analytic_func"], [124, 2, 1, "", "applyfunc"], [124, 2, 1, "", "as_real_imag"], [124, 2, 1, "", "atoms"], [124, 2, 1, "", "berkowitz_det"], [124, 2, 1, "", "berkowitz_eigenvals"], [124, 2, 1, "", "berkowitz_minors"], [124, 2, 1, "", "bidiagonal_decomposition"], [124, 2, 1, "", "bidiagonalize"], [124, 2, 1, "", "charpoly"], [124, 2, 1, "", "cholesky"], [124, 2, 1, "", "cholesky_solve"], [124, 2, 1, "", "cofactor"], [124, 2, 1, "", "cofactor_matrix"], [124, 2, 1, "", "col"], [124, 2, 1, "", "col_del"], [124, 2, 1, "", "col_insert"], [124, 2, 1, "", "col_join"], [124, 2, 1, "", "columnspace"], [124, 2, 1, "", "companion"], [124, 2, 1, "", "condition_number"], [124, 2, 1, "", "conjugate"], [124, 2, 1, "", "connected_components"], [124, 2, 1, "", "connected_components_decomposition"], [124, 2, 1, "", "copy"], [124, 2, 1, "", "cramer_solve"], [124, 2, 1, "", "cross"], [124, 2, 1, "", "det"], [124, 2, 1, "", "det_LU_decomposition"], [124, 2, 1, "", "diag"], [124, 2, 1, "", "diagonal"], [124, 2, 1, "", "diagonal_solve"], [124, 2, 1, "", "diagonalize"], [124, 2, 1, "", "diff"], [124, 2, 1, "", "dot"], [124, 2, 1, "", "dual"], [124, 2, 1, "", "echelon_form"], [124, 2, 1, "", "eigenvals"], [124, 2, 1, "", "eigenvects"], [124, 2, 1, "", "elementary_col_op"], [124, 2, 1, "", "elementary_row_op"], [124, 2, 1, "", "evalf"], [124, 2, 1, "", "exp"], [124, 2, 1, "", "expand"], [124, 2, 1, "", "extract"], [124, 2, 1, "", "eye"], [124, 2, 1, "", "flat"], [124, 3, 1, "", "free_symbols"], [124, 2, 1, "", "from_dok"], [124, 2, 1, "", "gauss_jordan_solve"], [124, 2, 1, "", "get_diag_blocks"], [124, 2, 1, "", "has"], [124, 2, 1, "", "hat"], [124, 2, 1, "", "hstack"], [124, 2, 1, "", "integrate"], [124, 2, 1, "", "inv"], [124, 2, 1, "", "inverse_ADJ"], [124, 2, 1, "", "inverse_BLOCK"], [124, 2, 1, "", "inverse_CH"], [124, 2, 1, "", "inverse_GE"], [124, 2, 1, "", "inverse_LDL"], [124, 2, 1, "", "inverse_LU"], [124, 2, 1, "", "inverse_QR"], [124, 2, 1, "", "irregular"], [124, 2, 1, "", "is_anti_symmetric"], [124, 2, 1, "", "is_diagonal"], [124, 2, 1, "", "is_diagonalizable"], [124, 3, 1, "", "is_echelon"], [124, 3, 1, "", "is_hermitian"], [124, 3, 1, "", "is_indefinite"], [124, 3, 1, "", "is_lower"], [124, 3, 1, "", "is_lower_hessenberg"], [124, 3, 1, "", "is_negative_definite"], [124, 3, 1, "", "is_negative_semidefinite"], [124, 2, 1, "", "is_nilpotent"], [124, 3, 1, "", "is_positive_definite"], [124, 3, 1, "", "is_positive_semidefinite"], [124, 3, 1, "", "is_square"], [124, 3, 1, "", "is_strongly_diagonally_dominant"], [124, 2, 1, "", "is_symbolic"], [124, 2, 1, "", "is_symmetric"], [124, 3, 1, "", "is_upper"], [124, 3, 1, "", "is_upper_hessenberg"], [124, 3, 1, "", "is_weakly_diagonally_dominant"], [124, 3, 1, "", "is_zero_matrix"], [124, 2, 1, "", "iter_items"], [124, 2, 1, "", "iter_values"], [124, 2, 1, "", "jacobian"], [124, 2, 1, "", "jordan_block"], [124, 2, 1, "", "jordan_form"], [124, 2, 1, "", "key2bounds"], [124, 2, 1, "", "key2ij"], [124, 2, 1, "", "left_eigenvects"], [124, 2, 1, "", "limit"], [124, 2, 1, "", "log"], [124, 2, 1, "", "lower_triangular"], [124, 2, 1, "", "lower_triangular_solve"], [124, 2, 1, "", "minor"], [124, 2, 1, "", "minor_submatrix"], [124, 2, 1, "", "multiply"], [124, 2, 1, "", "multiply_elementwise"], [124, 2, 1, "", "n"], [124, 2, 1, "", "norm"], [124, 2, 1, "", "normalized"], [124, 2, 1, "", "nullspace"], [124, 2, 1, "", "ones"], [124, 2, 1, "", "orthogonalize"], [124, 2, 1, "", "per"], [124, 2, 1, "", "permute"], [124, 2, 1, "", "permuteBkwd"], [124, 2, 1, "", "permuteFwd"], [124, 2, 1, "", "permute_cols"], [124, 2, 1, "", "permute_rows"], [124, 2, 1, "", "pinv"], [124, 2, 1, "", "pinv_solve"], [124, 2, 1, "", "pow"], [124, 2, 1, "", "print_nonzero"], [124, 2, 1, "", "project"], [124, 2, 1, "", "rank"], [124, 2, 1, "", "rank_decomposition"], [124, 2, 1, "", "refine"], [124, 2, 1, "", "replace"], [124, 2, 1, "", "reshape"], [124, 2, 1, "", "rmultiply"], [124, 2, 1, "", "rot90"], [124, 2, 1, "", "row"], [124, 2, 1, "", "row_del"], [124, 2, 1, "", "row_insert"], [124, 2, 1, "", "row_join"], [124, 2, 1, "", "rowspace"], [124, 2, 1, "", "rref"], [124, 2, 1, "", "rref_rhs"], [124, 3, 1, "", "shape"], [124, 2, 1, "", "simplify"], [124, 2, 1, "", "singular_value_decomposition"], [124, 2, 1, "", "singular_values"], [124, 2, 1, "", "solve"], [124, 2, 1, "", "solve_least_squares"], [124, 2, 1, "", "strongly_connected_components"], [124, 2, 1, "", "strongly_connected_components_decomposition"], [124, 2, 1, "", "subs"], [124, 2, 1, "", "table"], [124, 2, 1, "", "todod"], [124, 2, 1, "", "todok"], [124, 2, 1, "", "tolist"], [124, 2, 1, "", "trace"], [124, 2, 1, "", "transpose"], [124, 2, 1, "", "upper_hessenberg_decomposition"], [124, 2, 1, "", "upper_triangular"], [124, 2, 1, "", "upper_triangular_solve"], [124, 2, 1, "", "values"], [124, 2, 1, "", "vec"], [124, 2, 1, "", "vech"], [124, 2, 1, "", "vee"], [124, 2, 1, "", "vstack"], [124, 2, 1, "", "wilkinson"], [124, 2, 1, "", "xreplace"], [124, 2, 1, "", "zeros"]], "sympy.matrices.normalforms": [[125, 4, 1, "", "hermite_normal_form"], [125, 4, 1, "", "smith_normal_form"]], "sympy.matrices.sparse": [[126, 1, 1, "", "MutableSparseMatrix"], [126, 5, 1, "", "SparseMatrix"]], "sympy.matrices.sparsetools": [[127, 2, 1, "", "_csrtodok"], [127, 2, 1, "", "_doktocsr"], [127, 2, 1, "", "banded"]], "sympy.ntheory": [[128, 0, 0, "-", "bbp_pi"], [128, 0, 0, "-", "continued_fraction"], [128, 0, 0, "-", "digits"], [128, 0, 0, "-", "ecm"], [128, 0, 0, "-", "egyptian_fraction"], [128, 0, 0, "-", "factor_"], [128, 0, 0, "-", "generate"], [128, 0, 0, "-", "modular"], [128, 0, 0, "-", "multinomial"], [128, 0, 0, "-", "partitions_"], [128, 0, 0, "-", "primetest"], [128, 0, 0, "-", "qs"], [128, 0, 0, "-", "residue_ntheory"]], "sympy.ntheory.bbp_pi": [[128, 4, 1, "", "pi_hex_digits"]], "sympy.ntheory.continued_fraction": [[128, 4, 1, "", "continued_fraction"], [128, 4, 1, "", "continued_fraction_convergents"], [128, 4, 1, "", "continued_fraction_iterator"], [128, 4, 1, "", "continued_fraction_periodic"], [128, 4, 1, "", "continued_fraction_reduce"]], "sympy.ntheory.digits": [[128, 4, 1, "", "count_digits"], [128, 4, 1, "", "digits"], [128, 4, 1, "", "is_palindromic"]], "sympy.ntheory.ecm": [[128, 4, 1, "", "ecm"]], "sympy.ntheory.egyptian_fraction": [[128, 4, 1, "", "egyptian_fraction"]], "sympy.ntheory.factor_": [[128, 4, 1, "", "abundance"], [128, 4, 1, "", "antidivisor_count"], [128, 4, 1, "", "antidivisors"], [128, 4, 1, "", "core"], [128, 4, 1, "", "digits"], [128, 4, 1, "", "divisor_count"], [128, 4, 1, "", "divisor_sigma"], [128, 4, 1, "", "divisors"], [128, 4, 1, "", "factorint"], [128, 4, 1, "", "factorrat"], [128, 4, 1, "", "find_carmichael_numbers_in_range"], [128, 4, 1, "", "find_first_n_carmichaels"], [128, 4, 1, "", "is_abundant"], [128, 4, 1, "", "is_amicable"], [128, 4, 1, "", "is_carmichael"], [128, 4, 1, "", "is_deficient"], [128, 4, 1, "", "is_perfect"], [128, 4, 1, "", "mersenne_prime_exponent"], [128, 4, 1, "", "multiplicity"], [128, 4, 1, "", "perfect_power"], [128, 4, 1, "", "pollard_pm1"], [128, 4, 1, "", "pollard_rho"], [128, 4, 1, "", "primefactors"], [128, 4, 1, "", "primenu"], [128, 4, 1, "", "primeomega"], [128, 4, 1, "", "proper_divisor_count"], [128, 4, 1, "", "proper_divisors"], [128, 4, 1, "", "reduced_totient"], [128, 4, 1, "", "smoothness"], [128, 4, 1, "", "smoothness_p"], [128, 4, 1, "", "totient"], [128, 4, 1, "", "udivisor_count"], [128, 4, 1, "", "udivisor_sigma"], [128, 4, 1, "", "udivisors"]], "sympy.ntheory.generate": [[128, 1, 1, "", "Sieve"], [128, 4, 1, "", "composite"], [128, 4, 1, "", "compositepi"], [128, 4, 1, "", "cycle_length"], [128, 4, 1, "", "nextprime"], [128, 4, 1, "", "prevprime"], [128, 4, 1, "", "prime"], [128, 4, 1, "", "primepi"], [128, 4, 1, "", "primerange"], [128, 4, 1, "", "primorial"], [128, 4, 1, "", "randprime"]], "sympy.ntheory.generate.Sieve": [[128, 2, 1, "", "extend"], [128, 2, 1, "", "extend_to_no"], [128, 2, 1, "", "mobiusrange"], [128, 2, 1, "", "primerange"], [128, 2, 1, "", "search"], [128, 2, 1, "", "totientrange"]], "sympy.ntheory.modular": [[128, 4, 1, "", "crt"], [128, 4, 1, "", "crt1"], [128, 4, 1, "", "crt2"], [128, 4, 1, "", "solve_congruence"], [128, 4, 1, "", "symmetric_residue"]], "sympy.ntheory.multinomial": [[128, 4, 1, "", "binomial_coefficients"], [128, 4, 1, "", "binomial_coefficients_list"], [128, 4, 1, "", "multinomial_coefficients"], [128, 4, 1, "", "multinomial_coefficients_iterator"]], "sympy.ntheory.partitions_": [[128, 4, 1, "", "npartitions"]], "sympy.ntheory.primetest": [[128, 4, 1, "", "is_euler_jacobi_pseudoprime"], [128, 4, 1, "", "is_euler_pseudoprime"], [128, 4, 1, "", "is_extra_strong_lucas_prp"], [128, 4, 1, "", "is_fermat_pseudoprime"], [128, 4, 1, "", "is_gaussian_prime"], [128, 4, 1, "", "is_lucas_prp"], [128, 4, 1, "", "is_mersenne_prime"], [128, 4, 1, "", "is_square"], [128, 4, 1, "", "is_strong_lucas_prp"], [128, 4, 1, "", "isprime"], [128, 4, 1, "", "mr"], [128, 4, 1, "", "proth_test"]], "sympy.ntheory.qs": [[128, 4, 1, "", "qs"]], "sympy.ntheory.residue_ntheory": [[128, 4, 1, "", "binomial_mod"], [128, 4, 1, "", "discrete_log"], [128, 4, 1, "", "is_nthpow_residue"], [128, 4, 1, "", "is_primitive_root"], [128, 4, 1, "", "is_quad_residue"], [128, 4, 1, "", "jacobi_symbol"], [128, 4, 1, "", "legendre_symbol"], [128, 4, 1, "", "mobius"], [128, 4, 1, "", "n_order"], [128, 4, 1, "", "nthroot_mod"], [128, 4, 1, "", "polynomial_congruence"], [128, 4, 1, "", "primitive_root"], [128, 4, 1, "", "quadratic_congruence"], [128, 4, 1, "", "quadratic_residues"], [128, 4, 1, "", "sqrt_mod"], [128, 4, 1, "", "sqrt_mod_iter"]], "sympy.parsing": [[130, 0, 0, "-", "sym_expr"]], "sympy.parsing.latex": [[130, 1, 1, "", "LaTeXParsingError"], [130, 4, 1, "", "parse_latex"], [130, 4, 1, "", "parse_latex_lark"]], "sympy.parsing.latex.lark": [[130, 1, 1, "", "LarkLaTeXParser"], [130, 1, 1, "", "TransformToSymPyExpr"]], "sympy.parsing.mathematica": [[130, 4, 1, "", "parse_mathematica"]], "sympy.parsing.maxima": [[130, 4, 1, "", "parse_maxima"]], "sympy.parsing.sym_expr": [[130, 1, 1, "", "SymPyExpression"]], "sympy.parsing.sym_expr.SymPyExpression": [[130, 2, 1, "", "convert_to_c"], [130, 2, 1, "", "convert_to_expr"], [130, 2, 1, "", "convert_to_fortran"], [130, 2, 1, "", "convert_to_python"], [130, 2, 1, "", "return_expr"]], "sympy.parsing.sympy_parser": [[130, 4, 1, "", "auto_number"], [130, 4, 1, "", "auto_symbol"], [130, 4, 1, "", "convert_xor"], [130, 4, 1, "", "eval_expr"], [130, 4, 1, "", "factorial_notation"], [130, 4, 1, "", "function_exponentiation"], [130, 4, 1, "", "implicit_application"], [130, 4, 1, "", "implicit_multiplication"], [130, 4, 1, "", "implicit_multiplication_application"], [130, 4, 1, "", "lambda_notation"], [130, 4, 1, "", "parse_expr"], [130, 4, 1, "", "rationalize"], [130, 4, 1, "", "repeated_decimals"], [130, 4, 1, "", "split_symbols"], [130, 4, 1, "", "split_symbols_custom"], [130, 6, 1, "", "standard_transformations"], [130, 4, 1, "", "stringify_expr"]], "sympy.physics": [[133, 0, 0, "-", "biomechanics"], [142, 0, 0, "-", "control"], [145, 0, 0, "-", "hydrogen"], [146, 0, 0, "-", "matrices"], [150, 0, 0, "-", "mechanics"], [165, 0, 0, "-", "paulialgebra"], [166, 0, 0, "-", "qho_1d"], [190, 0, 0, "-", "secondquant"], [191, 0, 0, "-", "sho"], [202, 0, 0, "-", "vector"], [205, 0, 0, "-", "wigner"]], "sympy.physics.biomechanics": [[131, 0, 0, "-", "activation"], [132, 0, 0, "-", "curve"], [134, 0, 0, "-", "musculotendon"]], "sympy.physics.biomechanics.activation": [[131, 1, 1, "", "ActivationBase"], [131, 1, 1, "", "FirstOrderActivationDeGroote2016"], [131, 1, 1, "", "ZerothOrderActivation"]], "sympy.physics.biomechanics.activation.ActivationBase": [[131, 3, 1, "", "F"], [131, 3, 1, "", "M"], [131, 3, 1, "", "a"], [131, 3, 1, "", "activation"], [131, 3, 1, "", "constants"], [131, 3, 1, "", "e"], [131, 3, 1, "", "excitation"], [131, 3, 1, "", "input_vars"], [131, 3, 1, "", "order"], [131, 3, 1, "", "p"], [131, 3, 1, "", "r"], [131, 2, 1, "", "rhs"], [131, 3, 1, "", "state_vars"], [131, 2, 1, "", "with_defaults"], [131, 3, 1, "", "x"]], "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016": [[131, 3, 1, "", "F"], [131, 3, 1, "", "M"], [131, 3, 1, "", "activation_time_constant"], [131, 3, 1, "", "b"], [131, 3, 1, "", "constants"], [131, 3, 1, "", "deactivation_time_constant"], [131, 3, 1, "", "input_vars"], [131, 3, 1, "", "order"], [131, 3, 1, "", "p"], [131, 3, 1, "", "r"], [131, 2, 1, "", "rhs"], [131, 3, 1, "", "smoothing_rate"], [131, 3, 1, "", "state_vars"], [131, 3, 1, "", "tau_a"], [131, 3, 1, "", "tau_d"], [131, 2, 1, "", "with_defaults"], [131, 3, 1, "", "x"]], "sympy.physics.biomechanics.activation.ZerothOrderActivation": [[131, 3, 1, "", "F"], [131, 3, 1, "", "M"], [131, 3, 1, "", "constants"], [131, 3, 1, "", "input_vars"], [131, 3, 1, "", "order"], [131, 3, 1, "", "p"], [131, 3, 1, "", "r"], [131, 2, 1, "", "rhs"], [131, 3, 1, "", "state_vars"], [131, 2, 1, "", "with_defaults"], [131, 3, 1, "", "x"]], "sympy.physics.biomechanics.curve": [[132, 1, 1, "", "CharacteristicCurveCollection"], [132, 1, 1, "", "CharacteristicCurveFunction"], [132, 1, 1, "", "FiberForceLengthActiveDeGroote2016"], [132, 1, 1, "", "FiberForceLengthPassiveDeGroote2016"], [132, 1, 1, "", "FiberForceLengthPassiveInverseDeGroote2016"], [132, 1, 1, "", "FiberForceVelocityDeGroote2016"], [132, 1, 1, "", "FiberForceVelocityInverseDeGroote2016"], [132, 1, 1, "", "TendonForceLengthDeGroote2016"], [132, 1, 1, "", "TendonForceLengthInverseDeGroote2016"]], "sympy.physics.biomechanics.curve.FiberForceLengthActiveDeGroote2016": [[132, 2, 1, "", "doit"], [132, 2, 1, "", "eval"], [132, 2, 1, "", "fdiff"], [132, 2, 1, "", "with_defaults"]], "sympy.physics.biomechanics.curve.FiberForceLengthPassiveDeGroote2016": [[132, 2, 1, "", "doit"], [132, 2, 1, "", "eval"], [132, 2, 1, "", "fdiff"], [132, 2, 1, "", "inverse"], [132, 2, 1, "", "with_defaults"]], "sympy.physics.biomechanics.curve.FiberForceLengthPassiveInverseDeGroote2016": [[132, 2, 1, "", "doit"], [132, 2, 1, "", "eval"], [132, 2, 1, "", "fdiff"], [132, 2, 1, "", "inverse"], [132, 2, 1, "", "with_defaults"]], "sympy.physics.biomechanics.curve.FiberForceVelocityDeGroote2016": [[132, 2, 1, "", "doit"], [132, 2, 1, "", "eval"], [132, 2, 1, "", "fdiff"], [132, 2, 1, "", "inverse"], [132, 2, 1, "", "with_defaults"]], "sympy.physics.biomechanics.curve.FiberForceVelocityInverseDeGroote2016": [[132, 2, 1, "", "doit"], [132, 2, 1, "", "eval"], [132, 2, 1, "", "fdiff"], [132, 2, 1, "", "inverse"], [132, 2, 1, "", "with_defaults"]], "sympy.physics.biomechanics.curve.TendonForceLengthDeGroote2016": [[132, 2, 1, "", "doit"], [132, 2, 1, "", "eval"], [132, 2, 1, "", "fdiff"], [132, 2, 1, "", "inverse"], [132, 2, 1, "", "with_defaults"]], "sympy.physics.biomechanics.curve.TendonForceLengthInverseDeGroote2016": [[132, 2, 1, "", "doit"], [132, 2, 1, "", "eval"], [132, 2, 1, "", "fdiff"], [132, 2, 1, "", "inverse"], [132, 2, 1, "", "with_defaults"]], "sympy.physics.biomechanics.musculotendon": [[134, 1, 1, "", "MusculotendonBase"], [134, 1, 1, "", "MusculotendonDeGroote2016"], [134, 1, 1, "", "MusculotendonFormulation"]], "sympy.physics.biomechanics.musculotendon.MusculotendonBase": [[134, 3, 1, "", "F"], [134, 3, 1, "", "F_M_max"], [134, 3, 1, "", "M"], [134, 3, 1, "", "a"], [134, 3, 1, "", "activation"], [134, 3, 1, "", "activation_dynamics"], [134, 3, 1, "", "alpha_opt"], [134, 3, 1, "", "beta"], [134, 3, 1, "", "constants"], [134, 2, 1, "", "curves"], [134, 3, 1, "", "e"], [134, 3, 1, "", "excitation"], [134, 3, 1, "", "fiber_damping_coefficient"], [134, 3, 1, "", "input_vars"], [134, 3, 1, "", "l_M_opt"], [134, 3, 1, "", "l_T_slack"], [134, 3, 1, "", "maximal_fiber_velocity"], [134, 3, 1, "", "musculotendon_dynamics"], [134, 3, 1, "", "optimal_fiber_length"], [134, 3, 1, "", "optimal_pennation_angle"], [134, 3, 1, "", "p"], [134, 3, 1, "", "peak_isometric_force"], [134, 3, 1, "", "r"], [134, 2, 1, "", "rhs"], [134, 3, 1, "", "state_vars"], [134, 3, 1, "", "tendon_slack_length"], [134, 3, 1, "", "v_M_max"], [134, 2, 1, "", "with_defaults"], [134, 3, 1, "", "x"]], "sympy.physics.continuum_mechanics": [[135, 0, 0, "-", "beam"], [137, 0, 0, "-", "cable"], [139, 0, 0, "-", "truss"]], "sympy.physics.continuum_mechanics.beam": [[135, 1, 1, "", "Beam"], [135, 1, 1, "", "Beam3D"]], "sympy.physics.continuum_mechanics.beam.Beam": [[135, 3, 1, "", "applied_loads"], [135, 2, 1, "", "apply_load"], [135, 2, 1, "", "apply_rotation_hinge"], [135, 2, 1, "", "apply_sliding_hinge"], [135, 2, 1, "", "apply_support"], [135, 3, 1, "", "area"], [135, 2, 1, "", "bending_moment"], [135, 3, 1, "", "boundary_conditions"], [135, 3, 1, "", "cross_section"], [135, 2, 1, "", "deflection"], [135, 3, 1, "", "deflection_jumps"], [135, 2, 1, "", "draw"], [135, 3, 1, "", "elastic_modulus"], [135, 3, 1, "", "ild_deflection_jumps"], [135, 3, 1, "", "ild_moment"], [135, 3, 1, "", "ild_reactions"], [135, 3, 1, "", "ild_rotation_jumps"], [135, 3, 1, "", "ild_shear"], [135, 2, 1, "", "join"], [135, 3, 1, "", "length"], [135, 3, 1, "", "load"], [135, 2, 1, "", "max_bmoment"], [135, 2, 1, "", "max_deflection"], [135, 2, 1, "", "max_shear_force"], [135, 2, 1, "", "plot_bending_moment"], [135, 2, 1, "", "plot_deflection"], [135, 2, 1, "", "plot_ild_moment"], [135, 2, 1, "", "plot_ild_reactions"], [135, 2, 1, "", "plot_ild_shear"], [135, 2, 1, "", "plot_loading_results"], [135, 2, 1, "", "plot_shear_force"], [135, 2, 1, "", "plot_shear_stress"], [135, 2, 1, "", "plot_slope"], [135, 2, 1, "", "point_cflexure"], [135, 3, 1, "", "reaction_loads"], [135, 2, 1, "", "remove_load"], [135, 3, 1, "", "rotation_jumps"], [135, 3, 1, "", "second_moment"], [135, 2, 1, "", "shear_force"], [135, 2, 1, "", "shear_stress"], [135, 2, 1, "", "slope"], [135, 2, 1, "", "solve_for_ild_moment"], [135, 2, 1, "", "solve_for_ild_reactions"], [135, 2, 1, "", "solve_for_ild_shear"], [135, 2, 1, "", "solve_for_reaction_loads"], [135, 3, 1, "", "variable"]], "sympy.physics.continuum_mechanics.beam.Beam3D": [[135, 2, 1, "", "angular_deflection"], [135, 2, 1, "", "apply_load"], [135, 2, 1, "", "apply_moment_load"], [135, 3, 1, "", "area"], [135, 2, 1, "", "axial_force"], [135, 2, 1, "", "axial_stress"], [135, 2, 1, "", "bending_moment"], [135, 3, 1, "", "boundary_conditions"], [135, 2, 1, "", "deflection"], [135, 3, 1, "", "load_vector"], [135, 2, 1, "", "max_bending_moment"], [135, 2, 1, "", "max_bmoment"], [135, 2, 1, "", "max_deflection"], [135, 2, 1, "", "max_shear_force"], [135, 3, 1, "", "moment_load_vector"], [135, 2, 1, "", "plot_bending_moment"], [135, 2, 1, "", "plot_deflection"], [135, 2, 1, "", "plot_loading_results"], [135, 2, 1, "", "plot_shear_force"], [135, 2, 1, "", "plot_shear_stress"], [135, 2, 1, "", "plot_slope"], [135, 2, 1, "", "polar_moment"], [135, 3, 1, "", "second_moment"], [135, 2, 1, "", "shear_force"], [135, 3, 1, "", "shear_modulus"], [135, 2, 1, "", "shear_stress"], [135, 2, 1, "", "slope"], [135, 2, 1, "", "solve_for_reaction_loads"], [135, 2, 1, "", "solve_for_torsion"], [135, 2, 1, "", "torsional_moment"]], "sympy.physics.continuum_mechanics.cable": [[137, 1, 1, "", "Cable"]], "sympy.physics.continuum_mechanics.cable.Cable": [[137, 2, 1, "", "apply_length"], [137, 2, 1, "", "apply_load"], [137, 2, 1, "", "change_support"], [137, 2, 1, "", "draw"], [137, 3, 1, "", "left_support"], [137, 3, 1, "", "length"], [137, 3, 1, "", "loads"], [137, 3, 1, "", "loads_position"], [137, 2, 1, "", "plot_tension"], [137, 3, 1, "", "reaction_loads"], [137, 2, 1, "", "remove_loads"], [137, 3, 1, "", "right_support"], [137, 2, 1, "", "solve"], [137, 3, 1, "", "supports"], [137, 3, 1, "", "tension"], [137, 2, 1, "", "tension_at"]], "sympy.physics.continuum_mechanics.truss": [[139, 1, 1, "", "Truss"]], "sympy.physics.continuum_mechanics.truss.Truss": [[139, 2, 1, "", "add_member"], [139, 2, 1, "", "add_node"], [139, 2, 1, "", "apply_load"], [139, 2, 1, "", "apply_support"], [139, 2, 1, "", "change_member_label"], [139, 2, 1, "", "change_node_label"], [139, 2, 1, "", "draw"], [139, 3, 1, "", "internal_forces"], [139, 3, 1, "", "loads"], [139, 3, 1, "", "member_lengths"], [139, 3, 1, "", "members"], [139, 3, 1, "", "node_labels"], [139, 3, 1, "", "node_positions"], [139, 3, 1, "", "nodes"], [139, 3, 1, "", "reaction_loads"], [139, 2, 1, "", "remove_load"], [139, 2, 1, "", "remove_member"], [139, 2, 1, "", "remove_node"], [139, 2, 1, "", "remove_support"], [139, 2, 1, "", "solve"], [139, 3, 1, "", "supports"]], "sympy.physics.control": [[143, 0, 0, "-", "lti"]], "sympy.physics.control.control_plots": [[141, 2, 1, "", "bode_magnitude_numerical_data"], [141, 2, 1, "", "bode_magnitude_plot"], [141, 2, 1, "", "bode_phase_numerical_data"], [141, 2, 1, "", "bode_phase_plot"], [141, 2, 1, "", "bode_plot"], [141, 2, 1, "", "impulse_response_numerical_data"], [141, 2, 1, "", "impulse_response_plot"], [141, 2, 1, "", "pole_zero_numerical_data"], [141, 2, 1, "", "pole_zero_plot"], [141, 2, 1, "", "ramp_response_numerical_data"], [141, 2, 1, "", "ramp_response_plot"], [141, 2, 1, "", "step_response_numerical_data"], [141, 2, 1, "", "step_response_plot"]], "sympy.physics.control.lti": [[143, 1, 1, "", "Feedback"], [143, 1, 1, "", "MIMOFeedback"], [143, 1, 1, "", "MIMOParallel"], [143, 1, 1, "", "MIMOSeries"], [143, 1, 1, "", "Parallel"], [143, 1, 1, "", "Series"], [143, 1, 1, "", "TransferFunction"], [143, 1, 1, "", "TransferFunctionMatrix"], [143, 4, 1, "", "backward_diff"], [143, 4, 1, "", "bilinear"], [143, 4, 1, "", "forward_diff"], [143, 4, 1, "", "gbt"]], "sympy.physics.control.lti.Feedback": [[143, 3, 1, "", "den"], [143, 2, 1, "", "doit"], [143, 3, 1, "", "num"], [143, 3, 1, "", "sensitivity"], [143, 3, 1, "", "sign"], [143, 3, 1, "", "sys1"], [143, 3, 1, "", "sys2"], [143, 2, 1, "", "to_expr"], [143, 3, 1, "", "var"]], "sympy.physics.control.lti.MIMOFeedback": [[143, 2, 1, "", "doit"], [143, 3, 1, "", "sensitivity"], [143, 3, 1, "", "sign"], [143, 3, 1, "", "sys1"], [143, 3, 1, "", "sys2"], [143, 3, 1, "", "var"]], "sympy.physics.control.lti.MIMOParallel": [[143, 2, 1, "", "doit"], [143, 3, 1, "", "num_inputs"], [143, 3, 1, "", "num_outputs"], [143, 3, 1, "", "shape"], [143, 3, 1, "", "var"]], "sympy.physics.control.lti.MIMOSeries": [[143, 2, 1, "", "doit"], [143, 3, 1, "", "num_inputs"], [143, 3, 1, "", "num_outputs"], [143, 3, 1, "", "shape"], [143, 3, 1, "", "var"]], "sympy.physics.control.lti.Parallel": [[143, 2, 1, "", "doit"], [143, 3, 1, "", "is_biproper"], [143, 3, 1, "", "is_proper"], [143, 3, 1, "", "is_strictly_proper"], [143, 2, 1, "", "to_expr"], [143, 3, 1, "", "var"]], "sympy.physics.control.lti.Series": [[143, 2, 1, "", "doit"], [143, 3, 1, "", "is_biproper"], [143, 3, 1, "", "is_proper"], [143, 3, 1, "", "is_strictly_proper"], [143, 2, 1, "", "to_expr"], [143, 3, 1, "", "var"]], "sympy.physics.control.lti.TransferFunction": [[143, 2, 1, "", "dc_gain"], [143, 3, 1, "", "den"], [143, 2, 1, "", "eval_frequency"], [143, 2, 1, "", "expand"], [143, 2, 1, "", "from_coeff_lists"], [143, 2, 1, "", "from_rational_expression"], [143, 2, 1, "", "from_zpk"], [143, 3, 1, "", "is_biproper"], [143, 3, 1, "", "is_proper"], [143, 2, 1, "", "is_stable"], [143, 3, 1, "", "is_strictly_proper"], [143, 3, 1, "", "num"], [143, 2, 1, "", "poles"], [143, 2, 1, "", "to_expr"], [143, 3, 1, "", "var"], [143, 2, 1, "", "zeros"]], "sympy.physics.control.lti.TransferFunctionMatrix": [[143, 2, 1, "", "elem_poles"], [143, 2, 1, "", "elem_zeros"], [143, 2, 1, "", "eval_frequency"], [143, 2, 1, "", "expand"], [143, 2, 1, "", "from_Matrix"], [143, 3, 1, "", "num_inputs"], [143, 3, 1, "", "num_outputs"], [143, 3, 1, "", "shape"], [143, 2, 1, "", "transpose"], [143, 3, 1, "", "var"]], "sympy.physics.hep": [[144, 0, 0, "-", "gamma_matrices"]], "sympy.physics.hep.gamma_matrices": [[144, 4, 1, "", "extract_type_tens"], [144, 4, 1, "", "gamma_trace"], [144, 4, 1, "", "kahane_simplify"], [144, 4, 1, "", "simplify_gpgp"]], "sympy.physics.hydrogen": [[145, 4, 1, "", "E_nl"], [145, 4, 1, "", "E_nl_dirac"], [145, 4, 1, "", "Psi_nlm"], [145, 4, 1, "", "R_nl"]], "sympy.physics.matrices": [[146, 4, 1, "", "mdft"], [146, 4, 1, "", "mgamma"], [146, 4, 1, "", "msigma"], [146, 4, 1, "", "pat_matrix"]], "sympy.physics.mechanics": [[147, 0, 0, "-", "actuator"], [149, 4, 1, "", "find_dynamicsymbols"], [151, 0, 0, "-", "joint"], [152, 0, 0, "-", "kane"], [152, 0, 0, "-", "lagrange"], [153, 0, 0, "-", "linearize"], [149, 4, 1, "", "msubs"], [155, 0, 0, "-", "pathway"], [158, 0, 0, "-", "wrapping_geometry"]], "sympy.physics.mechanics.actuator": [[147, 1, 1, "", "ActuatorBase"], [147, 1, 1, "", "DuffingSpring"], [147, 1, 1, "", "ForceActuator"], [147, 1, 1, "", "LinearDamper"], [147, 1, 1, "", "LinearSpring"], [147, 1, 1, "", "TorqueActuator"]], "sympy.physics.mechanics.actuator.ActuatorBase": [[147, 2, 1, "", "to_loads"]], "sympy.physics.mechanics.actuator.DuffingSpring": [[147, 3, 1, "", "force"]], "sympy.physics.mechanics.actuator.ForceActuator": [[147, 3, 1, "", "force"], [147, 3, 1, "", "pathway"], [147, 2, 1, "", "to_loads"]], "sympy.physics.mechanics.actuator.LinearDamper": [[147, 3, 1, "", "damping"], [147, 3, 1, "", "force"]], "sympy.physics.mechanics.actuator.LinearSpring": [[147, 3, 1, "", "equilibrium_length"], [147, 3, 1, "", "force"], [147, 3, 1, "", "stiffness"]], "sympy.physics.mechanics.actuator.TorqueActuator": [[147, 2, 1, "", "at_pin_joint"], [147, 3, 1, "", "axis"], [147, 3, 1, "", "reaction_frame"], [147, 3, 1, "", "target_frame"], [147, 2, 1, "", "to_loads"], [147, 3, 1, "", "torque"]], "sympy.physics.mechanics.body": [[148, 1, 1, "", "Body"]], "sympy.physics.mechanics.body.Body": [[148, 2, 1, "", "ang_vel_in"], [148, 2, 1, "", "angular_momentum"], [148, 2, 1, "", "apply_force"], [148, 2, 1, "", "apply_torque"], [148, 3, 1, "", "central_inertia"], [148, 2, 1, "", "clear_loads"], [148, 2, 1, "", "dcm"], [148, 3, 1, "", "frame"], [148, 3, 1, "", "inertia"], [148, 2, 1, "", "kinetic_energy"], [148, 2, 1, "", "linear_momentum"], [148, 3, 1, "", "mass"], [148, 3, 1, "", "masscenter"], [148, 2, 1, "", "masscenter_vel"], [148, 3, 1, "", "name"], [148, 2, 1, "", "parallel_axis"], [148, 3, 1, "", "point"], [148, 3, 1, "", "potential_energy"], [148, 2, 1, "", "remove_load"], [148, 3, 1, "", "x"], [148, 3, 1, "", "y"], [148, 3, 1, "", "z"]], "sympy.physics.mechanics.functions": [[154, 4, 1, "", "Lagrangian"], [154, 4, 1, "", "angular_momentum"], [154, 4, 1, "", "center_of_mass"], [154, 4, 1, "", "find_dynamicsymbols"], [154, 4, 1, "", "kinetic_energy"], [154, 4, 1, "", "linear_momentum"], [154, 4, 1, "", "potential_energy"]], "sympy.physics.mechanics.inertia": [[154, 1, 1, "", "Inertia"], [154, 4, 1, "", "inertia"], [154, 4, 1, "", "inertia_of_point_mass"]], "sympy.physics.mechanics.inertia.Inertia": [[154, 2, 1, "", "from_inertia_scalars"]], "sympy.physics.mechanics.joint": [[151, 1, 1, "", "CylindricalJoint"], [151, 1, 1, "", "Joint"], [151, 1, 1, "", "PinJoint"], [151, 1, 1, "", "PlanarJoint"], [151, 1, 1, "", "PrismaticJoint"], [151, 1, 1, "", "SphericalJoint"], [151, 1, 1, "", "WeldJoint"]], "sympy.physics.mechanics.joint.CylindricalJoint": [[151, 3, 1, "", "joint_axis"], [151, 3, 1, "", "rotation_coordinate"], [151, 3, 1, "", "rotation_speed"], [151, 3, 1, "", "translation_coordinate"], [151, 3, 1, "", "translation_speed"]], "sympy.physics.mechanics.joint.Joint": [[151, 3, 1, "", "child"], [151, 3, 1, "", "child_axis"], [151, 3, 1, "", "child_point"], [151, 3, 1, "", "coordinates"], [151, 3, 1, "", "kdes"], [151, 3, 1, "", "name"], [151, 3, 1, "", "parent"], [151, 3, 1, "", "parent_axis"], [151, 3, 1, "", "parent_point"], [151, 3, 1, "", "speeds"]], "sympy.physics.mechanics.joint.PinJoint": [[151, 3, 1, "", "joint_axis"]], "sympy.physics.mechanics.joint.PlanarJoint": [[151, 3, 1, "", "planar_coordinates"], [151, 3, 1, "", "planar_speeds"], [151, 3, 1, "", "planar_vectors"], [151, 3, 1, "", "rotation_axis"], [151, 3, 1, "", "rotation_coordinate"], [151, 3, 1, "", "rotation_speed"]], "sympy.physics.mechanics.joint.PrismaticJoint": [[151, 3, 1, "", "joint_axis"]], "sympy.physics.mechanics.jointsmethod": [[148, 1, 1, "", "JointsMethod"]], "sympy.physics.mechanics.jointsmethod.JointsMethod": [[148, 3, 1, "", "bodies"], [148, 3, 1, "", "forcing"], [148, 3, 1, "", "forcing_full"], [148, 2, 1, "", "form_eoms"], [148, 3, 1, "", "kdes"], [148, 3, 1, "", "loads"], [148, 3, 1, "", "mass_matrix"], [148, 3, 1, "", "mass_matrix_full"], [148, 3, 1, "", "method"], [148, 3, 1, "", "q"], [148, 2, 1, "", "rhs"], [148, 3, 1, "", "u"]], "sympy.physics.mechanics.kane": [[152, 1, 1, "", "KanesMethod"]], "sympy.physics.mechanics.kane.KanesMethod": [[152, 3, 1, "", "auxiliary_eqs"], [152, 3, 1, "", "forcing"], [152, 3, 1, "", "forcing_full"], [152, 3, 1, "", "forcing_kin"], [152, 2, 1, "", "kanes_equations"], [152, 2, 1, "", "kindiffdict"], [152, 2, 1, "", "linearize"], [152, 3, 1, "", "mass_matrix"], [152, 3, 1, "", "mass_matrix_full"], [152, 3, 1, "", "mass_matrix_kin"], [152, 2, 1, "", "rhs"], [152, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.lagrange": [[152, 1, 1, "", "LagrangesMethod"]], "sympy.physics.mechanics.lagrange.LagrangesMethod": [[152, 3, 1, "", "forcing"], [152, 3, 1, "", "forcing_full"], [152, 2, 1, "", "form_lagranges_equations"], [152, 2, 1, "", "linearize"], [152, 3, 1, "", "mass_matrix"], [152, 3, 1, "", "mass_matrix_full"], [152, 2, 1, "", "rhs"], [152, 2, 1, "", "solve_multipliers"], [152, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.linearize": [[153, 1, 1, "", "Linearizer"]], "sympy.physics.mechanics.linearize.Linearizer": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "linearize"]], "sympy.physics.mechanics.loads": [[154, 1, 1, "", "Force"], [154, 1, 1, "", "Torque"]], "sympy.physics.mechanics.particle": [[154, 1, 1, "", "Particle"]], "sympy.physics.mechanics.particle.Particle": [[154, 2, 1, "", "angular_momentum"], [154, 2, 1, "", "kinetic_energy"], [154, 2, 1, "", "linear_momentum"], [154, 3, 1, "", "mass"], [154, 3, 1, "", "masscenter"], [154, 3, 1, "", "name"], [154, 2, 1, "", "parallel_axis"], [154, 3, 1, "", "point"], [154, 3, 1, "", "potential_energy"]], "sympy.physics.mechanics.pathway": [[155, 1, 1, "", "LinearPathway"], [155, 1, 1, "", "ObstacleSetPathway"], [155, 1, 1, "", "PathwayBase"], [155, 1, 1, "", "WrappingPathway"]], "sympy.physics.mechanics.pathway.LinearPathway": [[155, 3, 1, "", "extension_velocity"], [155, 3, 1, "", "length"], [155, 2, 1, "", "to_loads"]], "sympy.physics.mechanics.pathway.ObstacleSetPathway": [[155, 3, 1, "", "attachments"], [155, 3, 1, "", "extension_velocity"], [155, 3, 1, "", "length"], [155, 2, 1, "", "to_loads"]], "sympy.physics.mechanics.pathway.PathwayBase": [[155, 3, 1, "", "attachments"], [155, 3, 1, "", "extension_velocity"], [155, 3, 1, "", "length"], [155, 2, 1, "", "to_loads"]], "sympy.physics.mechanics.pathway.WrappingPathway": [[155, 3, 1, "", "extension_velocity"], [155, 3, 1, "", "geometry"], [155, 3, 1, "", "length"], [155, 2, 1, "", "to_loads"]], "sympy.physics.mechanics.rigidbody": [[154, 1, 1, "", "RigidBody"]], "sympy.physics.mechanics.rigidbody.RigidBody": [[154, 2, 1, "", "angular_momentum"], [154, 3, 1, "", "central_inertia"], [154, 3, 1, "", "frame"], [154, 3, 1, "", "inertia"], [154, 2, 1, "", "kinetic_energy"], [154, 2, 1, "", "linear_momentum"], [154, 3, 1, "", "mass"], [154, 3, 1, "", "masscenter"], [154, 3, 1, "", "name"], [154, 2, 1, "", "parallel_axis"], [154, 3, 1, "", "potential_energy"], [154, 3, 1, "", "x"], [154, 3, 1, "", "y"], [154, 3, 1, "", "z"]], "sympy.physics.mechanics.system": [[157, 1, 1, "", "SymbolicSystem"], [157, 1, 1, "", "System"]], "sympy.physics.mechanics.system.SymbolicSystem": [[157, 3, 1, "", "alg_con"], [157, 3, 1, "", "bodies"], [157, 3, 1, "", "comb_explicit_rhs"], [157, 3, 1, "", "comb_implicit_mat"], [157, 3, 1, "", "comb_implicit_rhs"], [157, 2, 1, "", "compute_explicit_form"], [157, 2, 1, "", "constant_symbols"], [157, 3, 1, "", "coordinates"], [157, 3, 1, "", "dyn_implicit_mat"], [157, 3, 1, "", "dyn_implicit_rhs"], [157, 2, 1, "", "dynamic_symbols"], [157, 3, 1, "", "kin_explicit_rhs"], [157, 3, 1, "", "loads"], [157, 3, 1, "", "speeds"], [157, 3, 1, "", "states"]], "sympy.physics.mechanics.system.System": [[157, 3, 1, "", "actuators"], [157, 2, 1, "", "add_actuators"], [157, 2, 1, "", "add_auxiliary_speeds"], [157, 2, 1, "", "add_bodies"], [157, 2, 1, "", "add_coordinates"], [157, 2, 1, "", "add_holonomic_constraints"], [157, 2, 1, "", "add_joints"], [157, 2, 1, "", "add_kdes"], [157, 2, 1, "", "add_loads"], [157, 2, 1, "", "add_nonholonomic_constraints"], [157, 2, 1, "", "add_speeds"], [157, 2, 1, "", "apply_uniform_gravity"], [157, 3, 1, "", "bodies"], [157, 3, 1, "", "eom_method"], [157, 3, 1, "", "fixed_point"], [157, 3, 1, "", "forcing"], [157, 3, 1, "", "forcing_full"], [157, 2, 1, "", "form_eoms"], [157, 3, 1, "", "frame"], [157, 2, 1, "", "from_newtonian"], [157, 2, 1, "", "get_body"], [157, 2, 1, "", "get_joint"], [157, 3, 1, "", "holonomic_constraints"], [157, 3, 1, "", "joints"], [157, 3, 1, "", "kdes"], [157, 3, 1, "", "loads"], [157, 3, 1, "", "mass_matrix"], [157, 3, 1, "", "mass_matrix_full"], [157, 3, 1, "", "nonholonomic_constraints"], [157, 3, 1, "", "q"], [157, 3, 1, "", "q_dep"], [157, 3, 1, "", "q_ind"], [157, 2, 1, "", "rhs"], [157, 3, 1, "", "u"], [157, 3, 1, "", "u_aux"], [157, 3, 1, "", "u_dep"], [157, 3, 1, "", "u_ind"], [157, 2, 1, "", "validate_system"], [157, 3, 1, "", "velocity_constraints"], [157, 3, 1, "", "x"], [157, 3, 1, "", "y"], [157, 3, 1, "", "z"]], "sympy.physics.mechanics.wrapping_geometry": [[158, 1, 1, "", "WrappingCylinder"], [158, 1, 1, "", "WrappingGeometryBase"], [158, 1, 1, "", "WrappingSphere"]], "sympy.physics.mechanics.wrapping_geometry.WrappingCylinder": [[158, 3, 1, "", "axis"], [158, 2, 1, "", "geodesic_end_vectors"], [158, 2, 1, "", "geodesic_length"], [158, 3, 1, "", "point"], [158, 2, 1, "", "point_on_surface"], [158, 3, 1, "", "radius"]], "sympy.physics.mechanics.wrapping_geometry.WrappingGeometryBase": [[158, 2, 1, "", "geodesic_end_vectors"], [158, 2, 1, "", "geodesic_length"], [158, 3, 1, "", "point"], [158, 2, 1, "", "point_on_surface"]], "sympy.physics.mechanics.wrapping_geometry.WrappingSphere": [[158, 2, 1, "", "geodesic_end_vectors"], [158, 2, 1, "", "geodesic_length"], [158, 3, 1, "", "point"], [158, 2, 1, "", "point_on_surface"], [158, 3, 1, "", "radius"]], "sympy.physics.optics": [[159, 0, 0, "-", "gaussopt"], [161, 0, 0, "-", "medium"], [162, 0, 0, "-", "polarization"], [163, 0, 0, "-", "utils"], [164, 0, 0, "-", "waves"]], "sympy.physics.optics.gaussopt": [[159, 1, 1, "", "BeamParameter"], [159, 1, 1, "", "CurvedMirror"], [159, 1, 1, "", "CurvedRefraction"], [159, 1, 1, "", "FlatMirror"], [159, 1, 1, "", "FlatRefraction"], [159, 1, 1, "", "FreeSpace"], [159, 1, 1, "", "GeometricRay"], [159, 1, 1, "", "RayTransferMatrix"], [159, 1, 1, "", "ThinLens"], [159, 4, 1, "", "conjugate_gauss_beams"], [159, 4, 1, "", "gaussian_conj"], [159, 4, 1, "", "geometric_conj_ab"], [159, 4, 1, "", "geometric_conj_af"], [159, 4, 1, "", "geometric_conj_bf"], [159, 4, 1, "", "rayleigh2waist"], [159, 4, 1, "", "waist2rayleigh"]], "sympy.physics.optics.gaussopt.BeamParameter": [[159, 3, 1, "", "divergence"], [159, 3, 1, "", "gouy"], [159, 3, 1, "", "q"], [159, 3, 1, "", "radius"], [159, 3, 1, "", "w"], [159, 3, 1, "", "w_0"], [159, 3, 1, "", "waist_approximation_limit"]], "sympy.physics.optics.gaussopt.GeometricRay": [[159, 3, 1, "", "angle"], [159, 3, 1, "", "height"]], "sympy.physics.optics.gaussopt.RayTransferMatrix": [[159, 3, 1, "", "A"], [159, 3, 1, "", "B"], [159, 3, 1, "", "C"], [159, 3, 1, "", "D"]], "sympy.physics.optics.medium": [[161, 1, 1, "", "Medium"]], "sympy.physics.optics.medium.Medium": [[161, 3, 1, "", "refractive_index"], [161, 3, 1, "", "speed"]], "sympy.physics.optics.polarization": [[162, 4, 1, "", "half_wave_retarder"], [162, 4, 1, "", "jones_2_stokes"], [162, 4, 1, "", "jones_vector"], [162, 4, 1, "", "linear_polarizer"], [162, 4, 1, "", "mueller_matrix"], [162, 4, 1, "", "phase_retarder"], [162, 4, 1, "", "polarizing_beam_splitter"], [162, 4, 1, "", "quarter_wave_retarder"], [162, 4, 1, "", "reflective_filter"], [162, 4, 1, "", "stokes_vector"], [162, 4, 1, "", "transmissive_filter"]], "sympy.physics.optics.utils": [[163, 4, 1, "", "brewster_angle"], [163, 4, 1, "", "critical_angle"], [163, 4, 1, "", "deviation"], [163, 4, 1, "", "fresnel_coefficients"], [163, 4, 1, "", "hyperfocal_distance"], [163, 4, 1, "", "lens_formula"], [163, 4, 1, "", "lens_makers_formula"], [163, 4, 1, "", "mirror_formula"], [163, 4, 1, "", "refraction_angle"], [163, 4, 1, "", "transverse_magnification"]], "sympy.physics.optics.waves": [[164, 1, 1, "", "TWave"]], "sympy.physics.optics.waves.TWave": [[164, 3, 1, "", "amplitude"], [164, 3, 1, "", "angular_velocity"], [164, 3, 1, "", "frequency"], [164, 3, 1, "", "n"], [164, 3, 1, "", "phase"], [164, 3, 1, "", "speed"], [164, 3, 1, "", "time_period"], [164, 3, 1, "", "wavelength"], [164, 3, 1, "", "wavenumber"]], "sympy.physics.paulialgebra": [[165, 4, 1, "", "evaluate_pauli_product"]], "sympy.physics.qho_1d": [[166, 4, 1, "", "E_n"], [166, 4, 1, "", "coherent_state"], [166, 4, 1, "", "psi_n"]], "sympy.physics.quantum": [[167, 0, 0, "-", "anticommutator"], [168, 0, 0, "-", "cartesian"], [169, 0, 0, "-", "cg"], [170, 0, 0, "-", "circuitplot"], [171, 0, 0, "-", "commutator"], [172, 0, 0, "-", "constants"], [173, 0, 0, "-", "dagger"], [174, 0, 0, "-", "gate"], [175, 0, 0, "-", "grover"], [176, 0, 0, "-", "hilbert"], [178, 0, 0, "-", "innerproduct"], [179, 0, 0, "-", "operator"], [180, 0, 0, "-", "operatorset"], [181, 0, 0, "-", "piab"], [182, 0, 0, "-", "qapply"], [183, 0, 0, "-", "qft"], [184, 0, 0, "-", "qubit"], [185, 0, 0, "-", "represent"], [186, 0, 0, "-", "shor"], [187, 0, 0, "-", "spin"], [188, 0, 0, "-", "state"], [189, 0, 0, "-", "tensorproduct"]], "sympy.physics.quantum.anticommutator": [[167, 1, 1, "", "AntiCommutator"]], "sympy.physics.quantum.anticommutator.AntiCommutator": [[167, 2, 1, "", "doit"]], "sympy.physics.quantum.cartesian": [[168, 1, 1, "", "PositionBra3D"], [168, 1, 1, "", "PositionKet3D"], [168, 1, 1, "", "PositionState3D"], [168, 1, 1, "", "PxBra"], [168, 1, 1, "", "PxKet"], [168, 1, 1, "", "PxOp"], [168, 1, 1, "", "XBra"], [168, 1, 1, "", "XKet"], [168, 1, 1, "", "XOp"], [168, 1, 1, "", "YOp"], [168, 1, 1, "", "ZOp"]], "sympy.physics.quantum.cartesian.PositionState3D": [[168, 3, 1, "", "position_x"], [168, 3, 1, "", "position_y"], [168, 3, 1, "", "position_z"]], "sympy.physics.quantum.cartesian.PxBra": [[168, 3, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.PxKet": [[168, 3, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.XBra": [[168, 3, 1, "", "position"]], "sympy.physics.quantum.cartesian.XKet": [[168, 3, 1, "", "position"]], "sympy.physics.quantum.cg": [[169, 1, 1, "", "CG"], [169, 1, 1, "", "Wigner3j"], [169, 1, 1, "", "Wigner6j"], [169, 1, 1, "", "Wigner9j"], [169, 4, 1, "", "cg_simp"]], "sympy.physics.quantum.circuitplot": [[170, 1, 1, "", "CircuitPlot"], [170, 4, 1, "", "CreateCGate"], [170, 1, 1, "", "Mx"], [170, 1, 1, "", "Mz"], [170, 4, 1, "", "circuit_plot"], [170, 4, 1, "", "labeller"]], "sympy.physics.quantum.circuitplot.CircuitPlot": [[170, 2, 1, "", "control_line"], [170, 2, 1, "", "control_point"], [170, 2, 1, "", "not_point"], [170, 2, 1, "", "one_qubit_box"], [170, 2, 1, "", "swap_point"], [170, 2, 1, "", "two_qubit_box"], [170, 2, 1, "", "update"]], "sympy.physics.quantum.commutator": [[171, 1, 1, "", "Commutator"]], "sympy.physics.quantum.commutator.Commutator": [[171, 2, 1, "", "doit"]], "sympy.physics.quantum.constants": [[172, 1, 1, "", "HBar"]], "sympy.physics.quantum.dagger": [[173, 1, 1, "", "Dagger"]], "sympy.physics.quantum.gate": [[174, 1, 1, "", "CGate"], [174, 1, 1, "", "CGateS"], [174, 5, 1, "", "CNOT"], [174, 1, 1, "", "CNotGate"], [174, 1, 1, "", "Gate"], [174, 5, 1, "", "H"], [174, 1, 1, "", "HadamardGate"], [174, 1, 1, "", "IdentityGate"], [174, 1, 1, "", "OneQubitGate"], [174, 5, 1, "", "Phase"], [174, 1, 1, "", "PhaseGate"], [174, 5, 1, "", "S"], [174, 5, 1, "", "SWAP"], [174, 1, 1, "", "SwapGate"], [174, 5, 1, "", "T"], [174, 1, 1, "", "TGate"], [174, 1, 1, "", "TwoQubitGate"], [174, 1, 1, "", "UGate"], [174, 5, 1, "", "X"], [174, 1, 1, "", "XGate"], [174, 5, 1, "", "Y"], [174, 1, 1, "", "YGate"], [174, 5, 1, "", "Z"], [174, 1, 1, "", "ZGate"], [174, 4, 1, "", "gate_simp"], [174, 4, 1, "", "gate_sort"], [174, 4, 1, "", "normalized"], [174, 4, 1, "", "random_circuit"]], "sympy.physics.quantum.gate.CGate": [[174, 3, 1, "", "controls"], [174, 2, 1, "", "decompose"], [174, 2, 1, "", "eval_controls"], [174, 3, 1, "", "gate"], [174, 3, 1, "", "min_qubits"], [174, 3, 1, "", "nqubits"], [174, 2, 1, "", "plot_gate"], [174, 3, 1, "", "targets"]], "sympy.physics.quantum.gate.CNotGate": [[174, 3, 1, "", "controls"], [174, 3, 1, "", "gate"], [174, 3, 1, "", "min_qubits"], [174, 3, 1, "", "targets"]], "sympy.physics.quantum.gate.Gate": [[174, 2, 1, "", "get_target_matrix"], [174, 3, 1, "", "min_qubits"], [174, 3, 1, "", "nqubits"], [174, 3, 1, "", "targets"]], "sympy.physics.quantum.gate.SwapGate": [[174, 2, 1, "", "decompose"]], "sympy.physics.quantum.gate.UGate": [[174, 2, 1, "", "get_target_matrix"], [174, 3, 1, "", "targets"]], "sympy.physics.quantum.grover": [[175, 1, 1, "", "OracleGate"], [175, 1, 1, "", "WGate"], [175, 4, 1, "", "apply_grover"], [175, 4, 1, "", "grover_iteration"], [175, 4, 1, "", "superposition_basis"]], "sympy.physics.quantum.grover.OracleGate": [[175, 3, 1, "", "search_function"], [175, 3, 1, "", "targets"]], "sympy.physics.quantum.hilbert": [[176, 1, 1, "", "ComplexSpace"], [176, 1, 1, "", "DirectSumHilbertSpace"], [176, 1, 1, "", "FockSpace"], [176, 1, 1, "", "HilbertSpace"], [176, 1, 1, "", "L2"], [176, 1, 1, "", "TensorPowerHilbertSpace"], [176, 1, 1, "", "TensorProductHilbertSpace"]], "sympy.physics.quantum.hilbert.DirectSumHilbertSpace": [[176, 2, 1, "", "eval"], [176, 3, 1, "", "spaces"]], "sympy.physics.quantum.hilbert.HilbertSpace": [[176, 3, 1, "", "dimension"]], "sympy.physics.quantum.hilbert.TensorProductHilbertSpace": [[176, 2, 1, "", "eval"], [176, 3, 1, "", "spaces"]], "sympy.physics.quantum.innerproduct": [[178, 1, 1, "", "InnerProduct"]], "sympy.physics.quantum.operator": [[179, 1, 1, "", "DifferentialOperator"], [179, 1, 1, "", "HermitianOperator"], [179, 1, 1, "", "IdentityOperator"], [179, 1, 1, "", "Operator"], [179, 1, 1, "", "OuterProduct"], [179, 1, 1, "", "UnitaryOperator"]], "sympy.physics.quantum.operator.DifferentialOperator": [[179, 3, 1, "", "expr"], [179, 3, 1, "", "free_symbols"], [179, 3, 1, "", "function"], [179, 3, 1, "", "variables"]], "sympy.physics.quantum.operator.OuterProduct": [[179, 3, 1, "", "bra"], [179, 3, 1, "", "ket"]], "sympy.physics.quantum.operatorset": [[180, 4, 1, "", "operators_to_state"], [180, 4, 1, "", "state_to_operators"]], "sympy.physics.quantum.piab": [[181, 1, 1, "", "PIABBra"], [181, 1, 1, "", "PIABHamiltonian"], [181, 1, 1, "", "PIABKet"]], "sympy.physics.quantum.qapply": [[182, 4, 1, "", "qapply"]], "sympy.physics.quantum.qft": [[183, 1, 1, "", "IQFT"], [183, 1, 1, "", "QFT"], [183, 5, 1, "", "Rk"], [183, 1, 1, "", "RkGate"]], "sympy.physics.quantum.qft.IQFT": [[183, 2, 1, "", "decompose"]], "sympy.physics.quantum.qft.QFT": [[183, 2, 1, "", "decompose"]], "sympy.physics.quantum.qubit": [[184, 1, 1, "", "IntQubit"], [184, 1, 1, "", "IntQubitBra"], [184, 1, 1, "", "Qubit"], [184, 1, 1, "", "QubitBra"], [184, 4, 1, "", "matrix_to_density"], [184, 4, 1, "", "matrix_to_qubit"], [184, 4, 1, "", "measure_all"], [184, 4, 1, "", "measure_all_oneshot"], [184, 4, 1, "", "measure_partial"], [184, 4, 1, "", "measure_partial_oneshot"], [184, 4, 1, "", "qubit_to_matrix"]], "sympy.physics.quantum.represent": [[185, 4, 1, "", "enumerate_states"], [185, 4, 1, "", "get_basis"], [185, 4, 1, "", "integrate_result"], [185, 4, 1, "", "rep_expectation"], [185, 4, 1, "", "rep_innerproduct"], [185, 4, 1, "", "represent"]], "sympy.physics.quantum.shor": [[186, 1, 1, "", "CMod"], [186, 4, 1, "", "period_find"], [186, 4, 1, "", "shor"]], "sympy.physics.quantum.shor.CMod": [[186, 3, 1, "", "N"], [186, 3, 1, "", "a"], [186, 3, 1, "", "t"]], "sympy.physics.quantum.spin": [[187, 1, 1, "", "J2Op"], [187, 1, 1, "", "JxBra"], [187, 1, 1, "", "JxBraCoupled"], [187, 1, 1, "", "JxKet"], [187, 1, 1, "", "JxKetCoupled"], [187, 1, 1, "", "JyBra"], [187, 1, 1, "", "JyBraCoupled"], [187, 1, 1, "", "JyKet"], [187, 1, 1, "", "JyKetCoupled"], [187, 1, 1, "", "JzBra"], [187, 1, 1, "", "JzBraCoupled"], [187, 1, 1, "", "JzKet"], [187, 1, 1, "", "JzKetCoupled"], [187, 1, 1, "", "JzOp"], [187, 1, 1, "", "Rotation"], [187, 1, 1, "", "WignerD"], [187, 4, 1, "", "couple"], [187, 4, 1, "", "uncouple"]], "sympy.physics.quantum.spin.Rotation": [[187, 2, 1, "", "D"], [187, 2, 1, "", "d"]], "sympy.physics.quantum.state": [[188, 1, 1, "", "Bra"], [188, 1, 1, "", "BraBase"], [188, 1, 1, "", "Ket"], [188, 1, 1, "", "KetBase"], [188, 1, 1, "", "OrthogonalBra"], [188, 1, 1, "", "OrthogonalKet"], [188, 1, 1, "", "OrthogonalState"], [188, 1, 1, "", "State"], [188, 1, 1, "", "StateBase"], [188, 1, 1, "", "TimeDepBra"], [188, 1, 1, "", "TimeDepKet"], [188, 1, 1, "", "TimeDepState"], [188, 1, 1, "", "Wavefunction"]], "sympy.physics.quantum.state.StateBase": [[188, 3, 1, "", "dual"], [188, 2, 1, "", "dual_class"], [188, 3, 1, "", "operators"]], "sympy.physics.quantum.state.TimeDepState": [[188, 3, 1, "", "label"], [188, 3, 1, "", "time"]], "sympy.physics.quantum.state.Wavefunction": [[188, 3, 1, "", "expr"], [188, 3, 1, "", "is_commutative"], [188, 3, 1, "", "is_normalized"], [188, 3, 1, "", "limits"], [188, 3, 1, "", "norm"], [188, 2, 1, "", "normalize"], [188, 2, 1, "", "prob"], [188, 3, 1, "", "variables"]], "sympy.physics.quantum.tensorproduct": [[189, 1, 1, "", "TensorProduct"], [189, 4, 1, "", "tensor_product_simp"]], "sympy.physics.secondquant": [[190, 1, 1, "", "AnnihilateBoson"], [190, 1, 1, "", "AnnihilateFermion"], [190, 1, 1, "", "AntiSymmetricTensor"], [190, 5, 1, "", "B"], [190, 5, 1, "", "BBra"], [190, 5, 1, "", "BKet"], [190, 5, 1, "", "Bd"], [190, 1, 1, "", "BosonicBasis"], [190, 1, 1, "", "Commutator"], [190, 1, 1, "", "CreateBoson"], [190, 1, 1, "", "CreateFermion"], [190, 1, 1, "", "Dagger"], [190, 5, 1, "", "F"], [190, 5, 1, "", "FBra"], [190, 5, 1, "", "FKet"], [190, 5, 1, "", "Fd"], [190, 1, 1, "", "FixedBosonicBasis"], [190, 1, 1, "", "FockState"], [190, 1, 1, "", "FockStateBosonBra"], [190, 1, 1, "", "FockStateBosonKet"], [190, 1, 1, "", "FockStateBra"], [190, 1, 1, "", "FockStateFermionBra"], [190, 1, 1, "", "FockStateFermionKet"], [190, 1, 1, "", "FockStateKet"], [190, 1, 1, "", "InnerProduct"], [190, 1, 1, "", "KroneckerDelta"], [190, 1, 1, "", "NO"], [190, 1, 1, "", "PermutationOperator"], [190, 1, 1, "", "VarBosonicBasis"], [190, 4, 1, "", "apply_operators"], [190, 4, 1, "", "contraction"], [190, 4, 1, "", "evaluate_deltas"], [190, 4, 1, "", "matrix_rep"], [190, 4, 1, "", "simplify_index_permutations"], [190, 4, 1, "", "substitute_dummies"], [190, 4, 1, "", "wicks"]], "sympy.physics.secondquant.AnnihilateBoson": [[190, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.AnnihilateFermion": [[190, 2, 1, "", "apply_operator"], [190, 3, 1, "", "is_only_q_annihilator"], [190, 3, 1, "", "is_only_q_creator"], [190, 3, 1, "", "is_q_annihilator"], [190, 3, 1, "", "is_q_creator"]], "sympy.physics.secondquant.AntiSymmetricTensor": [[190, 3, 1, "", "lower"], [190, 3, 1, "", "symbol"], [190, 3, 1, "", "upper"]], "sympy.physics.secondquant.Commutator": [[190, 2, 1, "", "doit"], [190, 2, 1, "", "eval"]], "sympy.physics.secondquant.CreateBoson": [[190, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.CreateFermion": [[190, 2, 1, "", "apply_operator"], [190, 3, 1, "", "is_only_q_annihilator"], [190, 3, 1, "", "is_only_q_creator"], [190, 3, 1, "", "is_q_annihilator"], [190, 3, 1, "", "is_q_creator"]], "sympy.physics.secondquant.Dagger": [[190, 2, 1, "", "eval"]], "sympy.physics.secondquant.FixedBosonicBasis": [[190, 2, 1, "", "index"], [190, 2, 1, "", "state"]], "sympy.physics.secondquant.InnerProduct": [[190, 3, 1, "", "bra"], [190, 3, 1, "", "ket"]], "sympy.physics.secondquant.KroneckerDelta": [[190, 2, 1, "", "eval"], [190, 3, 1, "", "indices_contain_equal_information"], [190, 3, 1, "", "is_above_fermi"], [190, 3, 1, "", "is_below_fermi"], [190, 3, 1, "", "is_only_above_fermi"], [190, 3, 1, "", "is_only_below_fermi"], [190, 3, 1, "", "killable_index"], [190, 3, 1, "", "preferred_index"]], "sympy.physics.secondquant.NO": [[190, 2, 1, "", "doit"], [190, 2, 1, "", "get_subNO"], [190, 3, 1, "", "has_q_annihilators"], [190, 3, 1, "", "has_q_creators"], [190, 2, 1, "", "iter_q_annihilators"], [190, 2, 1, "", "iter_q_creators"]], "sympy.physics.secondquant.PermutationOperator": [[190, 2, 1, "", "get_permuted"]], "sympy.physics.secondquant.VarBosonicBasis": [[190, 2, 1, "", "index"], [190, 2, 1, "", "state"]], "sympy.physics.sho": [[191, 4, 1, "", "E_nl"], [191, 4, 1, "", "R_nl"]], "sympy.physics.units": [[192, 0, 0, "-", "dimensions"], [196, 0, 0, "-", "prefixes"], [197, 0, 0, "-", "quantities"], [198, 0, 0, "-", "unitsystem"], [197, 0, 0, "-", "util"]], "sympy.physics.units.dimensions": [[192, 1, 1, "", "Dimension"], [192, 1, 1, "", "DimensionSystem"]], "sympy.physics.units.dimensions.Dimension": [[192, 2, 1, "", "has_integer_powers"]], "sympy.physics.units.dimensions.DimensionSystem": [[192, 3, 1, "", "can_transf_matrix"], [192, 3, 1, "", "dim"], [192, 2, 1, "", "dim_can_vector"], [192, 2, 1, "", "dim_vector"], [192, 3, 1, "", "inv_can_transf_matrix"], [192, 3, 1, "", "is_consistent"], [192, 2, 1, "", "is_dimensionless"], [192, 3, 1, "", "list_can_dims"], [192, 2, 1, "", "print_dim_base"]], "sympy.physics.units.prefixes": [[196, 1, 1, "", "Prefix"]], "sympy.physics.units.quantities": [[197, 1, 1, "", "Quantity"]], "sympy.physics.units.quantities.Quantity": [[197, 3, 1, "", "abbrev"], [197, 2, 1, "", "convert_to"], [197, 3, 1, "", "free_symbols"], [197, 3, 1, "", "is_prefixed"], [197, 3, 1, "", "scale_factor"], [197, 2, 1, "", "set_global_relative_scale_factor"]], "sympy.physics.units.unitsystem": [[198, 1, 1, "", "UnitSystem"]], "sympy.physics.units.unitsystem.UnitSystem": [[198, 3, 1, "", "dim"], [198, 2, 1, "", "extend"], [198, 2, 1, "", "get_units_non_prefixed"], [198, 3, 1, "", "is_consistent"]], "sympy.physics.units.util": [[197, 4, 1, "", "convert_to"]], "sympy.physics.vector": [[201, 4, 1, "", "dynamicsymbols"], [203, 0, 0, "-", "functions"], [203, 0, 0, "-", "point"]], "sympy.physics.vector.dyadic": [[199, 1, 1, "", "Dyadic"]], "sympy.physics.vector.dyadic.Dyadic": [[199, 2, 1, "", "applyfunc"], [199, 2, 1, "", "cross"], [199, 2, 1, "", "doit"], [199, 2, 1, "", "dot"], [199, 2, 1, "", "dt"], [199, 2, 1, "", "express"], [199, 3, 1, "", "func"], [199, 2, 1, "", "simplify"], [199, 2, 1, "", "subs"], [199, 2, 1, "", "to_matrix"], [199, 2, 1, "", "xreplace"]], "sympy.physics.vector.fieldfunctions": [[200, 4, 1, "", "curl"], [200, 4, 1, "", "divergence"], [200, 4, 1, "", "gradient"], [200, 4, 1, "", "is_conservative"], [200, 4, 1, "", "is_solenoidal"], [200, 4, 1, "", "scalar_potential"], [200, 4, 1, "", "scalar_potential_difference"]], "sympy.physics.vector.frame": [[199, 1, 1, "", "CoordinateSym"], [199, 1, 1, "", "ReferenceFrame"]], "sympy.physics.vector.frame.ReferenceFrame": [[199, 2, 1, "", "ang_acc_in"], [199, 2, 1, "", "ang_vel_in"], [199, 2, 1, "", "dcm"], [199, 2, 1, "", "orient"], [199, 2, 1, "", "orient_axis"], [199, 2, 1, "", "orient_body_fixed"], [199, 2, 1, "", "orient_dcm"], [199, 2, 1, "", "orient_quaternion"], [199, 2, 1, "", "orient_space_fixed"], [199, 2, 1, "", "orientnew"], [199, 2, 1, "", "partial_velocity"], [199, 2, 1, "", "set_ang_acc"], [199, 2, 1, "", "set_ang_vel"], [199, 3, 1, "", "u"], [199, 2, 1, "", "variable_map"], [199, 3, 1, "", "x"], [199, 3, 1, "", "xx"], [199, 3, 1, "", "xy"], [199, 3, 1, "", "xz"], [199, 3, 1, "", "y"], [199, 3, 1, "", "yx"], [199, 3, 1, "", "yy"], [199, 3, 1, "", "yz"], [199, 3, 1, "", "z"], [199, 3, 1, "", "zx"], [199, 3, 1, "", "zy"], [199, 3, 1, "", "zz"]], "sympy.physics.vector.functions": [[201, 4, 1, "", "cross"], [201, 4, 1, "", "dot"], [201, 4, 1, "", "express"], [203, 4, 1, "", "get_motion_params"], [203, 4, 1, "", "kinematic_equations"], [201, 4, 1, "", "outer"], [203, 4, 1, "", "partial_velocity"], [201, 4, 1, "", "time_derivative"]], "sympy.physics.vector.point": [[203, 1, 1, "", "Point"]], "sympy.physics.vector.point.Point": [[203, 2, 1, "", "a1pt_theory"], [203, 2, 1, "", "a2pt_theory"], [203, 2, 1, "", "acc"], [203, 2, 1, "", "locatenew"], [203, 2, 1, "", "partial_velocity"], [203, 2, 1, "", "pos_from"], [203, 2, 1, "", "set_acc"], [203, 2, 1, "", "set_pos"], [203, 2, 1, "", "set_vel"], [203, 2, 1, "", "v1pt_theory"], [203, 2, 1, "", "v2pt_theory"], [203, 2, 1, "", "vel"]], "sympy.physics.vector.printing": [[204, 4, 1, "", "init_vprinting"], [204, 4, 1, "", "vlatex"], [204, 4, 1, "", "vpprint"], [204, 4, 1, "", "vprint"]], "sympy.physics.vector.vector": [[199, 1, 1, "", "Vector"]], "sympy.physics.vector.vector.Vector": [[199, 2, 1, "", "angle_between"], [199, 2, 1, "", "applyfunc"], [199, 2, 1, "", "cross"], [199, 2, 1, "", "diff"], [199, 2, 1, "", "doit"], [199, 2, 1, "", "dot"], [199, 2, 1, "", "dt"], [199, 2, 1, "", "express"], [199, 2, 1, "", "free_dynamicsymbols"], [199, 2, 1, "", "free_symbols"], [199, 3, 1, "", "func"], [199, 2, 1, "", "magnitude"], [199, 2, 1, "", "normalize"], [199, 2, 1, "", "outer"], [199, 2, 1, "", "separate"], [199, 2, 1, "", "simplify"], [199, 2, 1, "", "subs"], [199, 2, 1, "", "to_matrix"], [199, 2, 1, "", "xreplace"]], "sympy.physics.wigner": [[205, 4, 1, "", "clebsch_gordan"], [205, 4, 1, "", "dot_rot_grad_Ynm"], [205, 4, 1, "", "gaunt"], [205, 4, 1, "", "racah"], [205, 4, 1, "", "real_gaunt"], [205, 4, 1, "", "wigner_3j"], [205, 4, 1, "", "wigner_6j"], [205, 4, 1, "", "wigner_9j"], [205, 4, 1, "", "wigner_d"], [205, 4, 1, "", "wigner_d_small"]], "sympy.plotting": [[206, 0, 0, "-", "plot"], [206, 0, 0, "-", "pygletplot"]], "sympy.plotting.plot": [[206, 1, 1, "", "MatplotlibBackend"], [206, 1, 1, "", "Plot"], [206, 1, 1, "", "PlotGrid"], [206, 1, 1, "", "TextBackend"], [206, 4, 1, "", "plot"], [206, 4, 1, "", "plot3d"], [206, 4, 1, "", "plot3d_parametric_line"], [206, 4, 1, "", "plot3d_parametric_surface"], [206, 4, 1, "", "plot_parametric"]], "sympy.plotting.plot.MatplotlibBackend": [[206, 2, 1, "", "get_segments"], [206, 2, 1, "", "process_series"]], "sympy.plotting.plot.Plot": [[206, 3, 1, "", "annotations"], [206, 2, 1, "", "append"], [206, 2, 1, "", "extend"], [206, 3, 1, "", "fill"], [206, 3, 1, "", "markers"], [206, 3, 1, "", "rectangles"]], "sympy.plotting.plot_implicit": [[206, 4, 1, "", "plot_implicit"]], "sympy.plotting.series": [[206, 1, 1, "", "BaseSeries"], [206, 1, 1, "", "ImplicitSeries"], [206, 1, 1, "", "Line2DBaseSeries"], [206, 1, 1, "", "Line3DBaseSeries"], [206, 1, 1, "", "LineOver1DRangeSeries"], [206, 1, 1, "", "Parametric2DLineSeries"], [206, 1, 1, "", "Parametric3DLineSeries"], [206, 1, 1, "", "ParametricSurfaceSeries"], [206, 1, 1, "", "SurfaceBaseSeries"], [206, 1, 1, "", "SurfaceOver2DRangeSeries"]], "sympy.plotting.series.BaseSeries": [[206, 2, 1, "", "eval_color_func"], [206, 3, 1, "", "expr"], [206, 2, 1, "", "get_data"], [206, 2, 1, "", "get_label"], [206, 3, 1, "", "n"], [206, 3, 1, "", "params"]], "sympy.plotting.series.ImplicitSeries": [[206, 2, 1, "", "get_data"], [206, 2, 1, "", "get_label"]], "sympy.plotting.series.Line2DBaseSeries": [[206, 2, 1, "", "get_data"]], "sympy.plotting.series.LineOver1DRangeSeries": [[206, 2, 1, "", "get_points"]], "sympy.plotting.series.ParametricSurfaceSeries": [[206, 2, 1, "", "get_data"], [206, 2, 1, "", "get_meshes"]], "sympy.plotting.series.SurfaceOver2DRangeSeries": [[206, 2, 1, "", "get_data"], [206, 2, 1, "", "get_meshes"]], "sympy.plotting.textplot": [[206, 4, 1, "", "textplot"]], "sympy.polys": [[213, 0, 0, "-", "polyconfig"], [213, 0, 0, "-", "polyoptions"], [218, 0, 0, "-", "solvers"]], "sympy.polys.agca.extensions": [[207, 1, 1, "", "ExtensionElement"], [207, 1, 1, "", "MonogenicFiniteExtension"]], "sympy.polys.agca.extensions.ExtensionElement": [[207, 2, 1, "", "inverse"]], "sympy.polys.agca.extensions.MonogenicFiniteExtension": [[207, 5, 1, "", "dtype"]], "sympy.polys.agca.homomorphisms": [[207, 1, 1, "", "ModuleHomomorphism"], [207, 4, 1, "", "homomorphism"]], "sympy.polys.agca.homomorphisms.ModuleHomomorphism": [[207, 2, 1, "", "image"], [207, 2, 1, "", "is_injective"], [207, 2, 1, "", "is_isomorphism"], [207, 2, 1, "", "is_surjective"], [207, 2, 1, "", "is_zero"], [207, 2, 1, "", "kernel"], [207, 2, 1, "", "quotient_codomain"], [207, 2, 1, "", "quotient_domain"], [207, 2, 1, "", "restrict_codomain"], [207, 2, 1, "", "restrict_domain"]], "sympy.polys.agca.ideals": [[207, 1, 1, "", "Ideal"]], "sympy.polys.agca.ideals.Ideal": [[207, 2, 1, "", "contains"], [207, 2, 1, "", "depth"], [207, 2, 1, "", "height"], [207, 2, 1, "", "intersect"], [207, 2, 1, "", "is_maximal"], [207, 2, 1, "", "is_primary"], [207, 2, 1, "", "is_prime"], [207, 2, 1, "", "is_principal"], [207, 2, 1, "", "is_radical"], [207, 2, 1, "", "is_whole_ring"], [207, 2, 1, "", "is_zero"], [207, 2, 1, "", "product"], [207, 2, 1, "", "quotient"], [207, 2, 1, "", "radical"], [207, 2, 1, "", "reduce_element"], [207, 2, 1, "", "saturate"], [207, 2, 1, "", "subset"], [207, 2, 1, "", "union"]], "sympy.polys.agca.modules": [[207, 1, 1, "", "FreeModule"], [207, 1, 1, "", "FreeModuleElement"], [207, 1, 1, "", "Module"], [207, 1, 1, "", "QuotientModule"], [207, 1, 1, "", "QuotientModuleElement"], [207, 1, 1, "", "SubModule"], [207, 1, 1, "", "SubQuotientModule"]], "sympy.polys.agca.modules.FreeModule": [[207, 2, 1, "", "basis"], [207, 2, 1, "", "convert"], [207, 5, 1, "", "dtype"], [207, 2, 1, "", "identity_hom"], [207, 2, 1, "", "is_submodule"], [207, 2, 1, "", "is_zero"], [207, 2, 1, "", "multiply_ideal"], [207, 2, 1, "", "quotient_module"]], "sympy.polys.agca.modules.Module": [[207, 2, 1, "", "contains"], [207, 2, 1, "", "convert"], [207, 2, 1, "", "identity_hom"], [207, 2, 1, "", "is_submodule"], [207, 2, 1, "", "is_zero"], [207, 2, 1, "", "multiply_ideal"], [207, 2, 1, "", "quotient_module"], [207, 2, 1, "", "submodule"], [207, 2, 1, "", "subset"]], "sympy.polys.agca.modules.QuotientModule": [[207, 2, 1, "", "convert"], [207, 5, 1, "", "dtype"], [207, 2, 1, "", "identity_hom"], [207, 2, 1, "", "is_submodule"], [207, 2, 1, "", "is_zero"], [207, 2, 1, "", "quotient_hom"], [207, 2, 1, "", "submodule"]], "sympy.polys.agca.modules.QuotientModuleElement": [[207, 2, 1, "", "eq"]], "sympy.polys.agca.modules.SubModule": [[207, 2, 1, "", "convert"], [207, 2, 1, "", "identity_hom"], [207, 2, 1, "", "in_terms_of_generators"], [207, 2, 1, "", "inclusion_hom"], [207, 2, 1, "", "intersect"], [207, 2, 1, "", "is_full_module"], [207, 2, 1, "", "is_submodule"], [207, 2, 1, "", "is_zero"], [207, 2, 1, "", "module_quotient"], [207, 2, 1, "", "multiply_ideal"], [207, 2, 1, "", "quotient_module"], [207, 2, 1, "", "reduce_element"], [207, 2, 1, "", "submodule"], [207, 2, 1, "", "syzygy_module"], [207, 2, 1, "", "union"]], "sympy.polys.agca.modules.SubQuotientModule": [[207, 2, 1, "", "is_full_module"], [207, 2, 1, "", "quotient_hom"]], "sympy.polys.appellseqs": [[216, 4, 1, "", "andre_poly"], [216, 4, 1, "", "bernoulli_c_poly"], [216, 4, 1, "", "bernoulli_poly"], [216, 4, 1, "", "euler_poly"], [216, 4, 1, "", "genocchi_poly"]], "sympy.polys.constructor": [[216, 4, 1, "", "construct_domain"]], "sympy.polys.densearith": [[213, 4, 1, "", "dmp_abs"], [213, 4, 1, "", "dmp_add"], [213, 4, 1, "", "dmp_add_ground"], [213, 4, 1, "", "dmp_add_mul"], [213, 4, 1, "", "dmp_add_term"], [213, 4, 1, "", "dmp_div"], [213, 4, 1, "", "dmp_expand"], [213, 4, 1, "", "dmp_exquo"], [213, 4, 1, "", "dmp_exquo_ground"], [213, 4, 1, "", "dmp_ff_div"], [213, 4, 1, "", "dmp_l1_norm"], [213, 4, 1, "", "dmp_max_norm"], [213, 4, 1, "", "dmp_mul"], [213, 4, 1, "", "dmp_mul_ground"], [213, 4, 1, "", "dmp_mul_term"], [213, 4, 1, "", "dmp_neg"], [213, 4, 1, "", "dmp_pdiv"], [213, 4, 1, "", "dmp_pexquo"], [213, 4, 1, "", "dmp_pow"], [213, 4, 1, "", "dmp_pquo"], [213, 4, 1, "", "dmp_prem"], [213, 4, 1, "", "dmp_quo"], [213, 4, 1, "", "dmp_quo_ground"], [213, 4, 1, "", "dmp_rem"], [213, 4, 1, "", "dmp_rr_div"], [213, 4, 1, "", "dmp_sqr"], [213, 4, 1, "", "dmp_sub"], [213, 4, 1, "", "dmp_sub_ground"], [213, 4, 1, "", "dmp_sub_mul"], [213, 4, 1, "", "dmp_sub_term"], [213, 4, 1, "", "dup_lshift"], [213, 4, 1, "", "dup_rshift"]], "sympy.polys.densebasic": [[213, 4, 1, "", "dmp_LC"], [213, 4, 1, "", "dmp_TC"], [213, 4, 1, "", "dmp_apply_pairs"], [213, 4, 1, "", "dmp_convert"], [213, 4, 1, "", "dmp_copy"], [213, 4, 1, "", "dmp_deflate"], [213, 4, 1, "", "dmp_degree"], [213, 4, 1, "", "dmp_degree_in"], [213, 4, 1, "", "dmp_degree_list"], [213, 4, 1, "", "dmp_eject"], [213, 4, 1, "", "dmp_exclude"], [213, 4, 1, "", "dmp_from_dict"], [213, 4, 1, "", "dmp_from_sympy"], [213, 4, 1, "", "dmp_ground"], [213, 4, 1, "", "dmp_ground_LC"], [213, 4, 1, "", "dmp_ground_TC"], [213, 4, 1, "", "dmp_ground_nth"], [213, 4, 1, "", "dmp_ground_p"], [213, 4, 1, "", "dmp_grounds"], [213, 4, 1, "", "dmp_include"], [213, 4, 1, "", "dmp_inflate"], [213, 4, 1, "", "dmp_inject"], [213, 4, 1, "", "dmp_list_terms"], [213, 4, 1, "", "dmp_multi_deflate"], [213, 4, 1, "", "dmp_negative_p"], [213, 4, 1, "", "dmp_nest"], [213, 4, 1, "", "dmp_normal"], [213, 4, 1, "", "dmp_nth"], [213, 4, 1, "", "dmp_one"], [213, 4, 1, "", "dmp_one_p"], [213, 4, 1, "", "dmp_permute"], [213, 4, 1, "", "dmp_positive_p"], [213, 4, 1, "", "dmp_raise"], [213, 4, 1, "", "dmp_slice"], [213, 4, 1, "", "dmp_strip"], [213, 4, 1, "", "dmp_swap"], [213, 4, 1, "", "dmp_terms_gcd"], [213, 4, 1, "", "dmp_to_dict"], [213, 4, 1, "", "dmp_to_tuple"], [213, 4, 1, "", "dmp_true_LT"], [213, 4, 1, "", "dmp_validate"], [213, 4, 1, "", "dmp_zero"], [213, 4, 1, "", "dmp_zero_p"], [213, 4, 1, "", "dmp_zeros"], [213, 4, 1, "", "dup_random"], [213, 4, 1, "", "dup_reverse"]], "sympy.polys.densetools": [[213, 4, 1, "", "dmp_clear_denoms"], [213, 4, 1, "", "dmp_compose"], [213, 4, 1, "", "dmp_diff"], [213, 4, 1, "", "dmp_diff_eval_in"], [213, 4, 1, "", "dmp_diff_in"], [213, 4, 1, "", "dmp_eval"], [213, 4, 1, "", "dmp_eval_in"], [213, 4, 1, "", "dmp_eval_tail"], [213, 4, 1, "", "dmp_ground_content"], [213, 4, 1, "", "dmp_ground_extract"], [213, 4, 1, "", "dmp_ground_monic"], [213, 4, 1, "", "dmp_ground_primitive"], [213, 4, 1, "", "dmp_ground_trunc"], [213, 4, 1, "", "dmp_integrate"], [213, 4, 1, "", "dmp_integrate_in"], [213, 4, 1, "", "dmp_lift"], [213, 4, 1, "", "dmp_revert"], [213, 4, 1, "", "dmp_trunc"], [213, 4, 1, "", "dup_content"], [213, 4, 1, "", "dup_decompose"], [213, 4, 1, "", "dup_extract"], [213, 4, 1, "", "dup_mirror"], [213, 4, 1, "", "dup_monic"], [213, 4, 1, "", "dup_primitive"], [213, 4, 1, "", "dup_real_imag"], [213, 4, 1, "", "dup_scale"], [213, 4, 1, "", "dup_shift"], [213, 4, 1, "", "dup_sign_variations"], [213, 4, 1, "", "dup_transform"]], "sympy.polys.dispersion": [[216, 4, 1, "", "dispersion"], [216, 4, 1, "", "dispersionset"]], "sympy.polys.distributedmodules": [[213, 4, 1, "", "sdm_LC"], [213, 4, 1, "", "sdm_LM"], [213, 4, 1, "", "sdm_LT"], [213, 4, 1, "", "sdm_add"], [213, 4, 1, "", "sdm_deg"], [213, 4, 1, "", "sdm_ecart"], [213, 4, 1, "", "sdm_from_dict"], [213, 4, 1, "", "sdm_from_vector"], [213, 4, 1, "", "sdm_groebner"], [213, 4, 1, "", "sdm_monomial_deg"], [213, 4, 1, "", "sdm_monomial_divides"], [213, 4, 1, "", "sdm_monomial_mul"], [213, 4, 1, "", "sdm_mul_term"], [213, 4, 1, "", "sdm_nf_mora"], [213, 4, 1, "", "sdm_spoly"], [213, 4, 1, "", "sdm_to_dict"], [213, 4, 1, "", "sdm_to_vector"], [213, 4, 1, "", "sdm_zero"]], "sympy.polys.domains": [[211, 1, 1, "", "AlgebraicField"], [211, 1, 1, "", "ComplexField"], [211, 1, 1, "", "ExpressionDomain"], [211, 1, 1, "", "FiniteField"], [211, 1, 1, "", "FractionField"], [211, 1, 1, "", "GMPYFiniteField"], [211, 1, 1, "", "GMPYIntegerRing"], [211, 1, 1, "", "GMPYRationalField"], [211, 1, 1, "", "IntegerRing"], [211, 1, 1, "", "PolynomialRing"], [211, 1, 1, "", "PythonFiniteField"], [211, 1, 1, "", "PythonIntegerRing"], [211, 1, 1, "", "PythonRationalField"], [211, 1, 1, "", "RationalField"], [211, 1, 1, "", "RealField"]], "sympy.polys.domains.AlgebraicField": [[211, 2, 1, "", "algebraic_field"], [211, 2, 1, "", "denom"], [211, 2, 1, "", "discriminant"], [211, 5, 1, "", "dtype"], [211, 5, 1, "", "ext"], [211, 2, 1, "", "from_AlgebraicField"], [211, 2, 1, "", "from_GaussianIntegerRing"], [211, 2, 1, "", "from_GaussianRationalField"], [211, 2, 1, "", "from_QQ"], [211, 2, 1, "", "from_QQ_gmpy"], [211, 2, 1, "", "from_QQ_python"], [211, 2, 1, "", "from_RealField"], [211, 2, 1, "", "from_ZZ"], [211, 2, 1, "", "from_ZZ_gmpy"], [211, 2, 1, "", "from_ZZ_python"], [211, 2, 1, "", "from_sympy"], [211, 2, 1, "", "galois_group"], [211, 2, 1, "", "get_ring"], [211, 2, 1, "", "integral_basis"], [211, 2, 1, "", "is_negative"], [211, 2, 1, "", "is_nonnegative"], [211, 2, 1, "", "is_nonpositive"], [211, 2, 1, "", "is_positive"], [211, 2, 1, "", "maximal_order"], [211, 5, 1, "", "mod"], [211, 2, 1, "", "numer"], [211, 5, 1, "", "orig_ext"], [211, 2, 1, "", "primes_above"], [211, 2, 1, "", "to_alg_num"], [211, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ComplexField": [[211, 2, 1, "", "almosteq"], [211, 2, 1, "", "exsqrt"], [211, 2, 1, "", "from_sympy"], [211, 2, 1, "", "gcd"], [211, 2, 1, "", "get_exact"], [211, 2, 1, "", "get_ring"], [211, 2, 1, "", "is_negative"], [211, 2, 1, "", "is_nonnegative"], [211, 2, 1, "", "is_nonpositive"], [211, 2, 1, "", "is_positive"], [211, 2, 1, "", "is_square"], [211, 2, 1, "", "lcm"], [211, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ExpressionDomain": [[211, 1, 1, "", "Expression"], [211, 2, 1, "", "denom"], [211, 5, 1, "", "dtype"], [211, 2, 1, "", "from_AlgebraicField"], [211, 2, 1, "", "from_ComplexField"], [211, 2, 1, "", "from_ExpressionDomain"], [211, 2, 1, "", "from_FractionField"], [211, 2, 1, "", "from_GaussianIntegerRing"], [211, 2, 1, "", "from_GaussianRationalField"], [211, 2, 1, "", "from_PolynomialRing"], [211, 2, 1, "", "from_QQ"], [211, 2, 1, "", "from_QQ_gmpy"], [211, 2, 1, "", "from_QQ_python"], [211, 2, 1, "", "from_RealField"], [211, 2, 1, "", "from_ZZ"], [211, 2, 1, "", "from_ZZ_gmpy"], [211, 2, 1, "", "from_ZZ_python"], [211, 2, 1, "", "from_sympy"], [211, 2, 1, "", "get_field"], [211, 2, 1, "", "get_ring"], [211, 2, 1, "", "is_negative"], [211, 2, 1, "", "is_nonnegative"], [211, 2, 1, "", "is_nonpositive"], [211, 2, 1, "", "is_positive"], [211, 2, 1, "", "numer"], [211, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FiniteField": [[211, 2, 1, "", "characteristic"], [211, 2, 1, "", "exsqrt"], [211, 2, 1, "", "from_FF"], [211, 2, 1, "", "from_FF_gmpy"], [211, 2, 1, "", "from_FF_python"], [211, 2, 1, "", "from_QQ"], [211, 2, 1, "", "from_QQ_gmpy"], [211, 2, 1, "", "from_QQ_python"], [211, 2, 1, "", "from_RealField"], [211, 2, 1, "", "from_ZZ"], [211, 2, 1, "", "from_ZZ_gmpy"], [211, 2, 1, "", "from_ZZ_python"], [211, 2, 1, "", "from_sympy"], [211, 2, 1, "", "get_field"], [211, 2, 1, "", "is_negative"], [211, 2, 1, "", "is_nonnegative"], [211, 2, 1, "", "is_nonpositive"], [211, 2, 1, "", "is_positive"], [211, 2, 1, "", "is_square"], [211, 2, 1, "", "to_int"], [211, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FractionField": [[211, 2, 1, "", "denom"], [211, 2, 1, "", "factorial"], [211, 2, 1, "", "from_AlgebraicField"], [211, 2, 1, "", "from_ComplexField"], [211, 2, 1, "", "from_FractionField"], [211, 2, 1, "", "from_GaussianIntegerRing"], [211, 2, 1, "", "from_GaussianRationalField"], [211, 2, 1, "", "from_PolynomialRing"], [211, 2, 1, "", "from_QQ"], [211, 2, 1, "", "from_QQ_gmpy"], [211, 2, 1, "", "from_QQ_python"], [211, 2, 1, "", "from_RealField"], [211, 2, 1, "", "from_ZZ"], [211, 2, 1, "", "from_ZZ_gmpy"], [211, 2, 1, "", "from_ZZ_python"], [211, 2, 1, "", "from_sympy"], [211, 2, 1, "", "get_ring"], [211, 2, 1, "", "is_negative"], [211, 2, 1, "", "is_nonnegative"], [211, 2, 1, "", "is_nonpositive"], [211, 2, 1, "", "is_positive"], [211, 2, 1, "", "numer"], [211, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYIntegerRing": [[211, 2, 1, "", "factorial"], [211, 2, 1, "", "from_FF_gmpy"], [211, 2, 1, "", "from_FF_python"], [211, 2, 1, "", "from_QQ"], [211, 2, 1, "", "from_QQ_gmpy"], [211, 2, 1, "", "from_QQ_python"], [211, 2, 1, "", "from_RealField"], [211, 2, 1, "", "from_ZZ_gmpy"], [211, 2, 1, "", "from_ZZ_python"], [211, 2, 1, "", "from_sympy"], [211, 2, 1, "", "gcd"], [211, 2, 1, "", "gcdex"], [211, 2, 1, "", "lcm"], [211, 2, 1, "", "sqrt"], [211, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYRationalField": [[211, 2, 1, "", "denom"], [211, 2, 1, "", "div"], [211, 2, 1, "", "exquo"], [211, 2, 1, "", "factorial"], [211, 2, 1, "", "from_GaussianRationalField"], [211, 2, 1, "", "from_QQ_gmpy"], [211, 2, 1, "", "from_QQ_python"], [211, 2, 1, "", "from_RealField"], [211, 2, 1, "", "from_ZZ_gmpy"], [211, 2, 1, "", "from_ZZ_python"], [211, 2, 1, "", "from_sympy"], [211, 2, 1, "", "get_ring"], [211, 2, 1, "", "numer"], [211, 2, 1, "", "quo"], [211, 2, 1, "", "rem"], [211, 2, 1, "", "to_sympy"]], "sympy.polys.domains.IntegerRing": [[211, 2, 1, "", "algebraic_field"], [211, 2, 1, "", "exsqrt"], [211, 2, 1, "", "factorial"], [211, 2, 1, "", "from_AlgebraicField"], [211, 2, 1, "", "from_EX"], [211, 2, 1, "", "from_FF"], [211, 2, 1, "", "from_FF_gmpy"], [211, 2, 1, "", "from_FF_python"], [211, 2, 1, "", "from_QQ"], [211, 2, 1, "", "from_QQ_gmpy"], [211, 2, 1, "", "from_QQ_python"], [211, 2, 1, "", "from_RealField"], [211, 2, 1, "", "from_ZZ"], [211, 2, 1, "", "from_ZZ_gmpy"], [211, 2, 1, "", "from_ZZ_python"], [211, 2, 1, "", "from_sympy"], [211, 2, 1, "", "gcd"], [211, 2, 1, "", "gcdex"], [211, 2, 1, "", "get_field"], [211, 2, 1, "", "is_square"], [211, 2, 1, "", "lcm"], [211, 2, 1, "", "log"], [211, 2, 1, "", "sqrt"], [211, 2, 1, "", "to_sympy"]], "sympy.polys.domains.PolynomialRing": [[211, 2, 1, "", "factorial"], [211, 2, 1, "", "from_AlgebraicField"], [211, 2, 1, "", "from_ComplexField"], [211, 2, 1, "", "from_FractionField"], [211, 2, 1, "", "from_GaussianIntegerRing"], [211, 2, 1, "", "from_GaussianRationalField"], [211, 2, 1, "", "from_GlobalPolynomialRing"], [211, 2, 1, "", "from_PolynomialRing"], [211, 2, 1, "", "from_QQ"], [211, 2, 1, "", "from_QQ_gmpy"], [211, 2, 1, "", "from_QQ_python"], [211, 2, 1, "", "from_RealField"], [211, 2, 1, "", "from_ZZ"], [211, 2, 1, "", "from_ZZ_gmpy"], [211, 2, 1, "", "from_ZZ_python"], [211, 2, 1, "", "from_sympy"], [211, 2, 1, "", "gcd"], [211, 2, 1, "", "gcdex"], [211, 2, 1, "", "get_field"], [211, 2, 1, "", "is_negative"], [211, 2, 1, "", "is_nonnegative"], [211, 2, 1, "", "is_nonpositive"], [211, 2, 1, "", "is_positive"], [211, 2, 1, "", "is_unit"], [211, 2, 1, "", "lcm"], [211, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RationalField": [[211, 2, 1, "", "algebraic_field"], [211, 2, 1, "", "denom"], [211, 2, 1, "", "div"], [211, 2, 1, "", "exquo"], [211, 2, 1, "", "exsqrt"], [211, 2, 1, "", "from_AlgebraicField"], [211, 2, 1, "", "from_GaussianRationalField"], [211, 2, 1, "", "from_QQ"], [211, 2, 1, "", "from_QQ_gmpy"], [211, 2, 1, "", "from_QQ_python"], [211, 2, 1, "", "from_RealField"], [211, 2, 1, "", "from_ZZ"], [211, 2, 1, "", "from_ZZ_gmpy"], [211, 2, 1, "", "from_ZZ_python"], [211, 2, 1, "", "from_sympy"], [211, 2, 1, "", "get_ring"], [211, 2, 1, "", "is_square"], [211, 2, 1, "", "numer"], [211, 2, 1, "", "quo"], [211, 2, 1, "", "rem"], [211, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RealField": [[211, 2, 1, "", "almosteq"], [211, 2, 1, "", "exsqrt"], [211, 2, 1, "", "from_sympy"], [211, 2, 1, "", "gcd"], [211, 2, 1, "", "get_exact"], [211, 2, 1, "", "get_ring"], [211, 2, 1, "", "is_square"], [211, 2, 1, "", "lcm"], [211, 2, 1, "", "to_rational"], [211, 2, 1, "", "to_sympy"]], "sympy.polys.domains.compositedomain": [[211, 1, 1, "", "CompositeDomain"]], "sympy.polys.domains.compositedomain.CompositeDomain": [[211, 2, 1, "", "drop"], [211, 2, 1, "", "get_exact"], [211, 2, 1, "", "inject"], [211, 3, 1, "", "is_Exact"], [211, 2, 1, "", "set_domain"]], "sympy.polys.domains.domain": [[211, 1, 1, "", "Domain"]], "sympy.polys.domains.domain.Domain": [[211, 2, 1, "", "abs"], [211, 2, 1, "", "add"], [211, 2, 1, "", "alg_field_from_poly"], [211, 2, 1, "", "algebraic_field"], [211, 2, 1, "", "almosteq"], [211, 2, 1, "", "characteristic"], [211, 2, 1, "", "cofactors"], [211, 2, 1, "", "convert"], [211, 2, 1, "", "convert_from"], [211, 2, 1, "", "cyclotomic_field"], [211, 2, 1, "", "denom"], [211, 2, 1, "", "div"], [211, 2, 1, "", "drop"], [211, 5, 1, "", "dtype"], [211, 2, 1, "", "evalf"], [211, 2, 1, "", "exquo"], [211, 2, 1, "", "exsqrt"], [211, 2, 1, "", "frac_field"], [211, 2, 1, "", "from_AlgebraicField"], [211, 2, 1, "", "from_ComplexField"], [211, 2, 1, "", "from_ExpressionDomain"], [211, 2, 1, "", "from_ExpressionRawDomain"], [211, 2, 1, "", "from_FF"], [211, 2, 1, "", "from_FF_gmpy"], [211, 2, 1, "", "from_FF_python"], [211, 2, 1, "", "from_FractionField"], [211, 2, 1, "", "from_GlobalPolynomialRing"], [211, 2, 1, "", "from_MonogenicFiniteExtension"], [211, 2, 1, "", "from_PolynomialRing"], [211, 2, 1, "", "from_QQ_gmpy"], [211, 2, 1, "", "from_QQ_python"], [211, 2, 1, "", "from_RealField"], [211, 2, 1, "", "from_ZZ_gmpy"], [211, 2, 1, "", "from_ZZ_python"], [211, 2, 1, "", "from_sympy"], [211, 2, 1, "", "gcd"], [211, 2, 1, "", "gcdex"], [211, 2, 1, "", "get_exact"], [211, 2, 1, "", "get_field"], [211, 2, 1, "", "get_ring"], [211, 2, 1, "", "half_gcdex"], [211, 5, 1, "", "has_assoc_Field"], [211, 5, 1, "", "has_assoc_Ring"], [211, 2, 1, "", "inject"], [211, 2, 1, "", "invert"], [211, 5, 1, "", "is_Field"], [211, 5, 1, "", "is_PID"], [211, 5, 1, "", "is_Ring"], [211, 2, 1, "", "is_negative"], [211, 2, 1, "", "is_nonnegative"], [211, 2, 1, "", "is_nonpositive"], [211, 2, 1, "", "is_one"], [211, 2, 1, "", "is_positive"], [211, 2, 1, "", "is_square"], [211, 2, 1, "", "is_zero"], [211, 2, 1, "", "lcm"], [211, 2, 1, "", "log"], [211, 2, 1, "", "map"], [211, 2, 1, "", "mul"], [211, 2, 1, "", "n"], [211, 2, 1, "", "neg"], [211, 2, 1, "", "numer"], [211, 2, 1, "", "of_type"], [211, 2, 1, "", "old_frac_field"], [211, 2, 1, "", "old_poly_ring"], [211, 5, 1, "", "one"], [211, 2, 1, "", "poly_ring"], [211, 2, 1, "", "pos"], [211, 2, 1, "", "pow"], [211, 2, 1, "", "quo"], [211, 2, 1, "", "rem"], [211, 2, 1, "", "revert"], [211, 2, 1, "", "sqrt"], [211, 2, 1, "", "sub"], [211, 2, 1, "", "to_sympy"], [211, 3, 1, "", "tp"], [211, 2, 1, "", "unify"], [211, 2, 1, "", "unify_composite"], [211, 5, 1, "", "zero"]], "sympy.polys.domains.domainelement": [[211, 1, 1, "", "DomainElement"]], "sympy.polys.domains.domainelement.DomainElement": [[211, 2, 1, "", "parent"]], "sympy.polys.domains.expressiondomain.ExpressionDomain": [[211, 1, 1, "", "Expression"]], "sympy.polys.domains.field": [[211, 1, 1, "", "Field"]], "sympy.polys.domains.field.Field": [[211, 2, 1, "", "div"], [211, 2, 1, "", "exquo"], [211, 2, 1, "", "gcd"], [211, 2, 1, "", "get_field"], [211, 2, 1, "", "get_ring"], [211, 2, 1, "", "is_unit"], [211, 2, 1, "", "lcm"], [211, 2, 1, "", "quo"], [211, 2, 1, "", "rem"], [211, 2, 1, "", "revert"]], "sympy.polys.domains.gaussiandomains": [[211, 1, 1, "", "GaussianDomain"], [211, 1, 1, "", "GaussianElement"], [211, 1, 1, "", "GaussianInteger"], [211, 1, 1, "", "GaussianIntegerRing"], [211, 1, 1, "", "GaussianRational"], [211, 1, 1, "", "GaussianRationalField"]], "sympy.polys.domains.gaussiandomains.GaussianDomain": [[211, 2, 1, "", "from_AlgebraicField"], [211, 2, 1, "", "from_QQ"], [211, 2, 1, "", "from_QQ_gmpy"], [211, 2, 1, "", "from_QQ_python"], [211, 2, 1, "", "from_ZZ"], [211, 2, 1, "", "from_ZZ_gmpy"], [211, 2, 1, "", "from_ZZ_python"], [211, 2, 1, "", "from_sympy"], [211, 2, 1, "", "inject"], [211, 2, 1, "", "is_negative"], [211, 2, 1, "", "is_nonnegative"], [211, 2, 1, "", "is_nonpositive"], [211, 2, 1, "", "is_positive"], [211, 2, 1, "", "to_sympy"]], "sympy.polys.domains.gaussiandomains.GaussianElement": [[211, 2, 1, "", "new"], [211, 2, 1, "", "parent"], [211, 2, 1, "", "quadrant"]], "sympy.polys.domains.gaussiandomains.GaussianIntegerRing": [[211, 5, 1, "", "dtype"], [211, 2, 1, "", "from_GaussianIntegerRing"], [211, 2, 1, "", "from_GaussianRationalField"], [211, 2, 1, "", "gcd"], [211, 2, 1, "", "get_field"], [211, 2, 1, "", "get_ring"], [211, 2, 1, "", "lcm"], [211, 2, 1, "", "normalize"]], "sympy.polys.domains.gaussiandomains.GaussianRationalField": [[211, 2, 1, "", "as_AlgebraicField"], [211, 2, 1, "", "denom"], [211, 5, 1, "", "dtype"], [211, 2, 1, "", "from_ComplexField"], [211, 2, 1, "", "from_GaussianIntegerRing"], [211, 2, 1, "", "from_GaussianRationalField"], [211, 2, 1, "", "get_field"], [211, 2, 1, "", "get_ring"], [211, 2, 1, "", "numer"]], "sympy.polys.domains.mpelements": [[211, 1, 1, "", "ComplexElement"], [211, 1, 1, "", "RealElement"]], "sympy.polys.domains.quotientring": [[211, 1, 1, "", "QuotientRing"]], "sympy.polys.domains.ring": [[211, 1, 1, "", "Ring"]], "sympy.polys.domains.ring.Ring": [[211, 2, 1, "", "denom"], [211, 2, 1, "", "div"], [211, 2, 1, "", "exquo"], [211, 2, 1, "", "free_module"], [211, 2, 1, "", "get_ring"], [211, 2, 1, "", "ideal"], [211, 2, 1, "", "invert"], [211, 2, 1, "", "numer"], [211, 2, 1, "", "quo"], [211, 2, 1, "", "quotient_ring"], [211, 2, 1, "", "rem"], [211, 2, 1, "", "revert"]], "sympy.polys.domains.simpledomain": [[211, 1, 1, "", "SimpleDomain"]], "sympy.polys.domains.simpledomain.SimpleDomain": [[211, 2, 1, "", "inject"]], "sympy.polys.euclidtools": [[213, 4, 1, "", "dmp_cancel"], [213, 4, 1, "", "dmp_content"], [213, 4, 1, "", "dmp_discriminant"], [213, 4, 1, "", "dmp_euclidean_prs"], [213, 4, 1, "", "dmp_ff_prs_gcd"], [213, 4, 1, "", "dmp_gcd"], [213, 4, 1, "", "dmp_gcdex"], [213, 4, 1, "", "dmp_half_gcdex"], [213, 4, 1, "", "dmp_inner_gcd"], [213, 4, 1, "", "dmp_inner_subresultants"], [213, 4, 1, "", "dmp_invert"], [213, 4, 1, "", "dmp_lcm"], [213, 4, 1, "", "dmp_primitive"], [213, 4, 1, "", "dmp_primitive_prs"], [213, 4, 1, "", "dmp_prs_resultant"], [213, 4, 1, "", "dmp_qq_collins_resultant"], [213, 4, 1, "", "dmp_qq_heu_gcd"], [213, 4, 1, "", "dmp_resultant"], [213, 4, 1, "", "dmp_rr_prs_gcd"], [213, 4, 1, "", "dmp_subresultants"], [213, 4, 1, "", "dmp_zz_collins_resultant"], [213, 4, 1, "", "dmp_zz_heu_gcd"], [213, 4, 1, "", "dmp_zz_modular_resultant"]], "sympy.polys.factortools": [[213, 4, 1, "", "dmp_ext_factor"], [213, 4, 1, "", "dmp_factor_list"], [213, 4, 1, "", "dmp_factor_list_include"], [213, 4, 1, "", "dmp_gf_factor"], [213, 4, 1, "", "dmp_irreducible_p"], [213, 4, 1, "", "dmp_qq_i_factor"], [213, 4, 1, "", "dmp_trial_division"], [213, 4, 1, "", "dmp_zz_diophantine"], [213, 4, 1, "", "dmp_zz_factor"], [213, 4, 1, "", "dmp_zz_i_factor"], [213, 4, 1, "", "dmp_zz_mignotte_bound"], [213, 4, 1, "", "dmp_zz_wang"], [213, 4, 1, "", "dmp_zz_wang_hensel_lifting"], [213, 4, 1, "", "dmp_zz_wang_lead_coeffs"], [213, 4, 1, "", "dmp_zz_wang_non_divisors"], [213, 4, 1, "", "dmp_zz_wang_test_points"], [213, 4, 1, "", "dup_cyclotomic_p"], [213, 4, 1, "", "dup_ext_factor"], [213, 4, 1, "", "dup_factor_list"], [213, 4, 1, "", "dup_factor_list_include"], [213, 4, 1, "", "dup_gf_factor"], [213, 4, 1, "", "dup_irreducible_p"], [213, 4, 1, "", "dup_qq_i_factor"], [213, 4, 1, "", "dup_trial_division"], [213, 4, 1, "", "dup_zz_cyclotomic_factor"], [213, 4, 1, "", "dup_zz_cyclotomic_poly"], [213, 4, 1, "", "dup_zz_diophantine"], [213, 4, 1, "", "dup_zz_factor"], [213, 4, 1, "", "dup_zz_factor_sqf"], [213, 4, 1, "", "dup_zz_hensel_lift"], [213, 4, 1, "", "dup_zz_hensel_step"], [213, 4, 1, "", "dup_zz_i_factor"], [213, 4, 1, "", "dup_zz_irreducible_p"], [213, 4, 1, "", "dup_zz_mignotte_bound"], [213, 4, 1, "", "dup_zz_zassenhaus"]], "sympy.polys.fglmtools": [[213, 4, 1, "", "matrix_fglm"]], "sympy.polys.fields": [[211, 1, 1, "", "FracElement"], [211, 1, 1, "", "FracField"], [211, 4, 1, "", "field"], [211, 4, 1, "", "sfield"], [211, 4, 1, "", "vfield"], [211, 4, 1, "", "xfield"]], "sympy.polys.fields.FracElement": [[211, 2, 1, "", "diff"]], "sympy.polys.galoistools": [[213, 4, 1, "", "gf_LC"], [213, 4, 1, "", "gf_Qbasis"], [213, 4, 1, "", "gf_Qmatrix"], [213, 4, 1, "", "gf_TC"], [213, 4, 1, "", "gf_add"], [213, 4, 1, "", "gf_add_ground"], [213, 4, 1, "", "gf_add_mul"], [213, 4, 1, "", "gf_berlekamp"], [213, 4, 1, "", "gf_cofactors"], [213, 4, 1, "", "gf_compose"], [213, 4, 1, "", "gf_compose_mod"], [213, 4, 1, "", "gf_crt"], [213, 4, 1, "", "gf_crt1"], [213, 4, 1, "", "gf_crt2"], [213, 4, 1, "", "gf_csolve"], [213, 4, 1, "", "gf_degree"], [213, 4, 1, "", "gf_diff"], [213, 4, 1, "", "gf_div"], [213, 4, 1, "", "gf_eval"], [213, 4, 1, "", "gf_expand"], [213, 4, 1, "", "gf_exquo"], [213, 4, 1, "", "gf_factor"], [213, 4, 1, "", "gf_factor_sqf"], [213, 4, 1, "", "gf_from_dict"], [213, 4, 1, "", "gf_from_int_poly"], [213, 4, 1, "", "gf_gcd"], [213, 4, 1, "", "gf_gcdex"], [213, 4, 1, "", "gf_int"], [213, 4, 1, "", "gf_irreducible"], [213, 4, 1, "", "gf_irreducible_p"], [213, 4, 1, "", "gf_lcm"], [213, 4, 1, "", "gf_lshift"], [213, 4, 1, "", "gf_monic"], [213, 4, 1, "", "gf_mul"], [213, 4, 1, "", "gf_mul_ground"], [213, 4, 1, "", "gf_multi_eval"], [213, 4, 1, "", "gf_neg"], [213, 4, 1, "", "gf_normal"], [213, 4, 1, "", "gf_pow"], [213, 4, 1, "", "gf_pow_mod"], [213, 4, 1, "", "gf_quo"], [213, 4, 1, "", "gf_quo_ground"], [213, 4, 1, "", "gf_random"], [213, 4, 1, "", "gf_rem"], [213, 4, 1, "", "gf_rshift"], [213, 4, 1, "", "gf_shoup"], [213, 4, 1, "", "gf_sqf_list"], [213, 4, 1, "", "gf_sqf_p"], [213, 4, 1, "", "gf_sqf_part"], [213, 4, 1, "", "gf_sqr"], [213, 4, 1, "", "gf_strip"], [213, 4, 1, "", "gf_sub"], [213, 4, 1, "", "gf_sub_ground"], [213, 4, 1, "", "gf_sub_mul"], [213, 4, 1, "", "gf_to_dict"], [213, 4, 1, "", "gf_to_int_poly"], [213, 4, 1, "", "gf_trace_map"], [213, 4, 1, "", "gf_trunc"], [213, 4, 1, "", "gf_value"], [213, 4, 1, "", "gf_zassenhaus"]], "sympy.polys.groebnertools": [[213, 4, 1, "", "groebner"], [213, 4, 1, "", "is_groebner"], [213, 4, 1, "", "is_minimal"], [213, 4, 1, "", "is_reduced"], [213, 4, 1, "", "red_groebner"], [213, 4, 1, "", "spoly"]], "sympy.polys.matrices": [[209, 0, 0, "-", "_dfm"], [209, 0, 0, "-", "_typing"], [209, 0, 0, "-", "ddm"], [209, 0, 0, "-", "dense"], [209, 0, 0, "-", "domainmatrix"], [209, 0, 0, "-", "sdm"]], "sympy.polys.matrices._dfm": [[209, 1, 1, "", "DFM"]], "sympy.polys.matrices._dfm.DFM": [[209, 2, 1, "", "add"], [209, 2, 1, "", "applyfunc"], [209, 2, 1, "", "charpoly"], [209, 2, 1, "", "convert_to"], [209, 2, 1, "", "copy"], [209, 2, 1, "", "det"], [209, 2, 1, "", "diag"], [209, 2, 1, "", "diagonal"], [209, 2, 1, "", "extract"], [209, 2, 1, "", "extract_slice"], [209, 2, 1, "", "eye"], [209, 2, 1, "", "from_ddm"], [209, 2, 1, "", "from_dod"], [209, 2, 1, "", "from_dok"], [209, 2, 1, "", "from_flat_nz"], [209, 2, 1, "", "from_list"], [209, 2, 1, "", "from_list_flat"], [209, 2, 1, "", "getitem"], [209, 2, 1, "", "hstack"], [209, 2, 1, "", "inv"], [209, 2, 1, "", "is_diagonal"], [209, 2, 1, "", "is_lower"], [209, 2, 1, "", "is_upper"], [209, 2, 1, "", "is_zero_matrix"], [209, 2, 1, "", "iter_items"], [209, 2, 1, "", "iter_values"], [209, 2, 1, "", "lll"], [209, 2, 1, "", "lll_transform"], [209, 2, 1, "", "lu"], [209, 2, 1, "", "lu_solve"], [209, 2, 1, "", "matmul"], [209, 2, 1, "", "mul"], [209, 2, 1, "", "mul_elementwise"], [209, 2, 1, "", "neg"], [209, 2, 1, "", "nnz"], [209, 2, 1, "", "nullspace"], [209, 2, 1, "", "nullspace_from_rref"], [209, 2, 1, "", "ones"], [209, 2, 1, "", "particular"], [209, 2, 1, "", "rmul"], [209, 2, 1, "", "scc"], [209, 2, 1, "", "setitem"], [209, 2, 1, "", "sub"], [209, 2, 1, "", "to_ddm"], [209, 2, 1, "", "to_dfm"], [209, 2, 1, "", "to_dfm_or_ddm"], [209, 2, 1, "", "to_dod"], [209, 2, 1, "", "to_dok"], [209, 2, 1, "", "to_flat_nz"], [209, 2, 1, "", "to_list"], [209, 2, 1, "", "to_list_flat"], [209, 2, 1, "", "to_sdm"], [209, 2, 1, "", "transpose"], [209, 2, 1, "", "vstack"], [209, 2, 1, "", "zeros"]], "sympy.polys.matrices._typing": [[209, 1, 1, "", "RingElement"]], "sympy.polys.matrices.ddm": [[209, 1, 1, "", "DDM"]], "sympy.polys.matrices.ddm.DDM": [[209, 2, 1, "", "add"], [209, 2, 1, "", "charpoly"], [209, 2, 1, "", "det"], [209, 2, 1, "", "diag"], [209, 2, 1, "", "diagonal"], [209, 2, 1, "", "from_dod"], [209, 2, 1, "", "from_dok"], [209, 2, 1, "", "from_flat_nz"], [209, 2, 1, "", "from_list"], [209, 2, 1, "", "from_list_flat"], [209, 2, 1, "", "hstack"], [209, 2, 1, "", "inv"], [209, 2, 1, "", "is_diagonal"], [209, 2, 1, "", "is_lower"], [209, 2, 1, "", "is_upper"], [209, 2, 1, "", "is_zero_matrix"], [209, 2, 1, "", "iter_items"], [209, 2, 1, "", "iter_values"], [209, 2, 1, "", "lu"], [209, 2, 1, "", "lu_solve"], [209, 2, 1, "", "matmul"], [209, 2, 1, "", "neg"], [209, 2, 1, "", "nnz"], [209, 2, 1, "", "nullspace"], [209, 2, 1, "", "nullspace_from_rref"], [209, 2, 1, "", "rref"], [209, 2, 1, "", "rref_den"], [209, 2, 1, "", "scc"], [209, 2, 1, "", "sub"], [209, 2, 1, "", "to_ddm"], [209, 2, 1, "", "to_dfm"], [209, 2, 1, "", "to_dfm_or_ddm"], [209, 2, 1, "", "to_dod"], [209, 2, 1, "", "to_dok"], [209, 2, 1, "", "to_flat_nz"], [209, 2, 1, "", "to_list"], [209, 2, 1, "", "to_list_flat"], [209, 2, 1, "", "to_sdm"], [209, 2, 1, "", "vstack"]], "sympy.polys.matrices.dense": [[209, 1, 1, "", "R"], [209, 1, 1, "", "T"], [209, 4, 1, "", "ddm_berk"], [209, 4, 1, "", "ddm_iadd"], [209, 4, 1, "", "ddm_idet"], [209, 4, 1, "", "ddm_iinv"], [209, 4, 1, "", "ddm_ilu"], [209, 4, 1, "", "ddm_ilu_solve"], [209, 4, 1, "", "ddm_ilu_split"], [209, 4, 1, "", "ddm_imatmul"], [209, 4, 1, "", "ddm_imul"], [209, 4, 1, "", "ddm_ineg"], [209, 4, 1, "", "ddm_irmul"], [209, 4, 1, "", "ddm_irref"], [209, 4, 1, "", "ddm_irref_den"], [209, 4, 1, "", "ddm_isub"], [209, 4, 1, "", "ddm_transpose"]], "sympy.polys.matrices.domainmatrix": [[209, 4, 1, "", "DM"], [209, 1, 1, "", "DomainMatrix"]], "sympy.polys.matrices.domainmatrix.DomainMatrix": [[209, 2, 1, "", "add"], [209, 2, 1, "", "adj_det"], [209, 2, 1, "", "adj_poly_det"], [209, 2, 1, "", "adjugate"], [209, 2, 1, "", "cancel_denom"], [209, 2, 1, "", "cancel_denom_elementwise"], [209, 2, 1, "", "charpoly"], [209, 2, 1, "", "charpoly_base"], [209, 2, 1, "", "charpoly_berk"], [209, 2, 1, "", "charpoly_factor_blocks"], [209, 2, 1, "", "charpoly_factor_list"], [209, 2, 1, "", "choose_domain"], [209, 2, 1, "", "clear_denoms"], [209, 2, 1, "", "clear_denoms_rowwise"], [209, 2, 1, "", "columnspace"], [209, 2, 1, "", "content"], [209, 2, 1, "", "convert_to"], [209, 2, 1, "", "det"], [209, 2, 1, "", "diag"], [209, 2, 1, "", "diagonal"], [209, 2, 1, "", "eval_poly"], [209, 2, 1, "", "eval_poly_mul"], [209, 2, 1, "", "eye"], [209, 2, 1, "", "from_Matrix"], [209, 2, 1, "", "from_dict_sympy"], [209, 2, 1, "", "from_dod"], [209, 2, 1, "", "from_dod_like"], [209, 2, 1, "", "from_dok"], [209, 2, 1, "", "from_flat_nz"], [209, 2, 1, "", "from_list"], [209, 2, 1, "", "from_list_flat"], [209, 2, 1, "", "from_list_sympy"], [209, 2, 1, "", "from_rep"], [209, 2, 1, "", "hstack"], [209, 2, 1, "", "inv"], [209, 2, 1, "", "inv_den"], [209, 3, 1, "", "is_diagonal"], [209, 3, 1, "", "is_lower"], [209, 3, 1, "", "is_square"], [209, 3, 1, "", "is_upper"], [209, 2, 1, "", "iter_items"], [209, 2, 1, "", "iter_values"], [209, 2, 1, "", "lll"], [209, 2, 1, "", "lll_transform"], [209, 2, 1, "", "lu"], [209, 2, 1, "", "lu_solve"], [209, 2, 1, "", "matmul"], [209, 2, 1, "", "mul"], [209, 2, 1, "", "neg"], [209, 2, 1, "", "nnz"], [209, 2, 1, "", "nullspace"], [209, 2, 1, "", "nullspace_from_rref"], [209, 2, 1, "", "ones"], [209, 2, 1, "", "pow"], [209, 2, 1, "", "primitive"], [209, 2, 1, "", "rowspace"], [209, 2, 1, "", "rref"], [209, 2, 1, "", "rref_den"], [209, 2, 1, "", "scc"], [209, 2, 1, "", "solve_den"], [209, 2, 1, "", "solve_den_charpoly"], [209, 2, 1, "", "solve_den_rref"], [209, 2, 1, "", "sub"], [209, 2, 1, "", "to_Matrix"], [209, 2, 1, "", "to_ddm"], [209, 2, 1, "", "to_dense"], [209, 2, 1, "", "to_dfm"], [209, 2, 1, "", "to_dfm_or_ddm"], [209, 2, 1, "", "to_dod"], [209, 2, 1, "", "to_dok"], [209, 2, 1, "", "to_field"], [209, 2, 1, "", "to_flat_nz"], [209, 2, 1, "", "to_list"], [209, 2, 1, "", "to_list_flat"], [209, 2, 1, "", "to_sdm"], [209, 2, 1, "", "to_sparse"], [209, 2, 1, "", "transpose"], [209, 2, 1, "", "unify"], [209, 2, 1, "", "vstack"], [209, 2, 1, "", "zeros"]], "sympy.polys.matrices.normalforms": [[209, 4, 1, "", "hermite_normal_form"], [209, 4, 1, "", "smith_normal_form"]], "sympy.polys.matrices.sdm": [[209, 1, 1, "", "SDM"], [209, 4, 1, "", "sdm_berk"], [209, 4, 1, "", "sdm_irref"], [209, 4, 1, "", "sdm_nullspace_from_rref"], [209, 4, 1, "", "sdm_particular_from_rref"], [209, 4, 1, "", "sdm_rref_den"]], "sympy.polys.matrices.sdm.SDM": [[209, 2, 1, "", "add"], [209, 2, 1, "", "charpoly"], [209, 2, 1, "", "convert_to"], [209, 2, 1, "", "copy"], [209, 2, 1, "", "det"], [209, 2, 1, "", "diagonal"], [209, 2, 1, "", "eye"], [209, 2, 1, "", "from_ddm"], [209, 2, 1, "", "from_dod"], [209, 2, 1, "", "from_dok"], [209, 2, 1, "", "from_flat_nz"], [209, 2, 1, "", "from_list"], [209, 2, 1, "", "from_list_flat"], [209, 2, 1, "", "hstack"], [209, 2, 1, "", "inv"], [209, 2, 1, "", "is_diagonal"], [209, 2, 1, "", "is_lower"], [209, 2, 1, "", "is_upper"], [209, 2, 1, "", "is_zero_matrix"], [209, 2, 1, "", "iter_items"], [209, 2, 1, "", "iter_values"], [209, 2, 1, "", "lll"], [209, 2, 1, "", "lll_transform"], [209, 2, 1, "", "lu"], [209, 2, 1, "", "lu_solve"], [209, 2, 1, "", "matmul"], [209, 2, 1, "", "mul"], [209, 2, 1, "", "neg"], [209, 2, 1, "", "new"], [209, 2, 1, "", "nnz"], [209, 2, 1, "", "nullspace"], [209, 2, 1, "", "nullspace_from_rref"], [209, 2, 1, "", "rref"], [209, 2, 1, "", "rref_den"], [209, 2, 1, "", "scc"], [209, 2, 1, "", "sub"], [209, 2, 1, "", "to_ddm"], [209, 2, 1, "", "to_dfm"], [209, 2, 1, "", "to_dfm_or_ddm"], [209, 2, 1, "", "to_dod"], [209, 2, 1, "", "to_dok"], [209, 2, 1, "", "to_flat_nz"], [209, 2, 1, "", "to_list"], [209, 2, 1, "", "to_list_flat"], [209, 2, 1, "", "to_sdm"], [209, 2, 1, "", "transpose"], [209, 2, 1, "", "vstack"], [209, 2, 1, "", "zeros"]], "sympy.polys.modulargcd": [[213, 4, 1, "", "_modgcd_multivariate_p"], [213, 4, 1, "", "func_field_modgcd"], [213, 4, 1, "", "modgcd_bivariate"], [213, 4, 1, "", "modgcd_multivariate"], [213, 4, 1, "", "modgcd_univariate"]], "sympy.polys.monomials": [[216, 1, 1, "", "Monomial"], [216, 4, 1, "", "itermonomials"], [216, 4, 1, "", "monomial_count"]], "sympy.polys.monomials.Monomial": [[216, 2, 1, "", "as_expr"], [216, 2, 1, "", "gcd"], [216, 2, 1, "", "lcm"]], "sympy.polys.numberfields": [[215, 0, 0, "-", "modules"], [215, 0, 0, "-", "subfield"]], "sympy.polys.numberfields.basis": [[215, 4, 1, "", "round_two"]], "sympy.polys.numberfields.galoisgroups": [[215, 4, 1, "", "galois_group"]], "sympy.polys.numberfields.minpoly": [[215, 4, 1, "", "minimal_polynomial"], [215, 4, 1, "", "minpoly"]], "sympy.polys.numberfields.modules": [[215, 1, 1, "", "EndomorphismRing"], [215, 1, 1, "", "InnerEndomorphism"], [215, 1, 1, "", "Module"], [215, 1, 1, "", "ModuleElement"], [215, 1, 1, "", "ModuleEndomorphism"], [215, 1, 1, "", "ModuleHomomorphism"], [215, 1, 1, "", "PowerBasis"], [215, 1, 1, "", "PowerBasisElement"], [215, 1, 1, "", "Submodule"], [215, 4, 1, "", "find_min_poly"], [215, 4, 1, "", "make_mod_elt"]], "sympy.polys.numberfields.modules.EndomorphismRing": [[215, 2, 1, "", "__init__"], [215, 2, 1, "", "inner_endomorphism"], [215, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.InnerEndomorphism": [[215, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.Module": [[215, 2, 1, "", "__call__"], [215, 2, 1, "", "ancestors"], [215, 2, 1, "", "basis_elements"], [215, 2, 1, "", "element_from_rational"], [215, 2, 1, "", "endomorphism_ring"], [215, 2, 1, "", "is_compat_col"], [215, 2, 1, "", "mult_tab"], [215, 3, 1, "", "n"], [215, 2, 1, "", "nearest_common_ancestor"], [215, 3, 1, "", "number_field"], [215, 2, 1, "", "one"], [215, 3, 1, "", "parent"], [215, 2, 1, "", "power_basis_ancestor"], [215, 2, 1, "", "represent"], [215, 2, 1, "", "starts_with_unity"], [215, 2, 1, "", "submodule_from_gens"], [215, 2, 1, "", "submodule_from_matrix"], [215, 2, 1, "", "whole_submodule"], [215, 2, 1, "", "zero"]], "sympy.polys.numberfields.modules.ModuleElement": [[215, 3, 1, "", "QQ_col"], [215, 2, 1, "", "__add__"], [215, 2, 1, "", "__init__"], [215, 2, 1, "", "__mod__"], [215, 2, 1, "", "__mul__"], [215, 2, 1, "", "column"], [215, 2, 1, "", "equiv"], [215, 2, 1, "", "from_int_list"], [215, 2, 1, "", "is_compat"], [215, 3, 1, "", "n"], [215, 2, 1, "", "over_power_basis"], [215, 2, 1, "", "reduced"], [215, 2, 1, "", "reduced_mod_p"], [215, 2, 1, "", "to_ancestor"], [215, 2, 1, "", "to_parent"], [215, 2, 1, "", "unify"]], "sympy.polys.numberfields.modules.ModuleEndomorphism": [[215, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.ModuleHomomorphism": [[215, 2, 1, "", "__init__"], [215, 2, 1, "", "kernel"], [215, 2, 1, "", "matrix"]], "sympy.polys.numberfields.modules.PowerBasis": [[215, 2, 1, "", "__init__"], [215, 2, 1, "", "element_from_ANP"], [215, 2, 1, "", "element_from_alg_num"], [215, 2, 1, "", "element_from_poly"], [215, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.PowerBasisElement": [[215, 3, 1, "", "T"], [215, 2, 1, "", "as_expr"], [215, 3, 1, "", "generator"], [215, 3, 1, "", "is_rational"], [215, 2, 1, "", "norm"], [215, 2, 1, "", "numerator"], [215, 2, 1, "", "poly"], [215, 2, 1, "", "to_ANP"], [215, 2, 1, "", "to_alg_num"]], "sympy.polys.numberfields.modules.Submodule": [[215, 3, 1, "", "QQ_matrix"], [215, 2, 1, "", "__init__"], [215, 2, 1, "", "add"], [215, 2, 1, "", "basis_element_pullbacks"], [215, 2, 1, "", "discard_before"], [215, 2, 1, "", "mul"], [215, 2, 1, "", "reduce_element"], [215, 2, 1, "", "reduced"], [215, 2, 1, "", "represent"]], "sympy.polys.numberfields.primes": [[215, 1, 1, "", "PrimeIdeal"], [215, 4, 1, "", "prime_decomp"], [215, 4, 1, "", "prime_valuation"]], "sympy.polys.numberfields.primes.PrimeIdeal": [[215, 2, 1, "", "__add__"], [215, 2, 1, "", "__init__"], [215, 2, 1, "", "__mul__"], [215, 2, 1, "", "as_submodule"], [215, 3, 1, "", "is_inert"], [215, 2, 1, "", "reduce_ANP"], [215, 2, 1, "", "reduce_alg_num"], [215, 2, 1, "", "reduce_element"], [215, 2, 1, "", "repr"], [215, 2, 1, "", "test_factor"], [215, 2, 1, "", "valuation"]], "sympy.polys.numberfields.subfield": [[215, 4, 1, "", "field_isomorphism"], [215, 4, 1, "", "primitive_element"], [215, 4, 1, "", "to_number_field"]], "sympy.polys.numberfields.utilities": [[215, 1, 1, "", "AlgIntPowers"], [215, 4, 1, "", "coeff_search"], [215, 4, 1, "", "extract_fundamental_discriminant"], [215, 4, 1, "", "get_num_denom"], [215, 4, 1, "", "is_int"], [215, 4, 1, "", "is_rat"], [215, 4, 1, "", "isolate"], [215, 4, 1, "", "supplement_a_subspace"]], "sympy.polys.numberfields.utilities.AlgIntPowers": [[215, 2, 1, "", "__init__"]], "sympy.polys.orderings": [[216, 1, 1, "", "GradedLexOrder"], [216, 1, 1, "", "LexOrder"], [216, 1, 1, "", "MonomialOrder"], [216, 1, 1, "", "ReversedGradedLexOrder"]], "sympy.polys.orthopolys": [[216, 4, 1, "", "chebyshevt_poly"], [216, 4, 1, "", "chebyshevu_poly"], [216, 4, 1, "", "gegenbauer_poly"], [216, 4, 1, "", "hermite_poly"], [216, 4, 1, "", "hermite_prob_poly"], [216, 4, 1, "", "jacobi_poly"], [216, 4, 1, "", "laguerre_poly"], [216, 4, 1, "", "legendre_poly"], [216, 4, 1, "", "spherical_bessel_fn"]], "sympy.polys.partfrac": [[216, 4, 1, "", "apart"], [216, 4, 1, "", "apart_list"], [216, 4, 1, "", "assemble_partfrac_list"]], "sympy.polys.polyclasses": [[211, 1, 1, "", "ANP"], [211, 1, 1, "", "DMF"], [211, 1, 1, "", "DMP"]], "sympy.polys.polyclasses.ANP": [[211, 2, 1, "", "LC"], [211, 2, 1, "", "TC"], [211, 2, 1, "", "add_ground"], [211, 2, 1, "", "convert"], [211, 3, 1, "", "is_ground"], [211, 3, 1, "", "is_one"], [211, 3, 1, "", "is_zero"], [211, 2, 1, "", "mod_to_list"], [211, 2, 1, "", "mul_ground"], [211, 2, 1, "", "pow"], [211, 2, 1, "", "quo_ground"], [211, 2, 1, "", "sub_ground"], [211, 2, 1, "", "to_dict"], [211, 2, 1, "", "to_list"], [211, 2, 1, "", "to_sympy_dict"], [211, 2, 1, "", "to_sympy_list"], [211, 2, 1, "", "to_tuple"], [211, 2, 1, "", "unify"], [211, 2, 1, "", "unify_ANP"]], "sympy.polys.polyclasses.DMF": [[211, 2, 1, "", "add"], [211, 2, 1, "", "add_ground"], [211, 2, 1, "", "cancel"], [211, 2, 1, "", "denom"], [211, 2, 1, "", "exquo"], [211, 2, 1, "", "frac_unify"], [211, 2, 1, "", "half_per"], [211, 2, 1, "", "invert"], [211, 3, 1, "", "is_one"], [211, 3, 1, "", "is_zero"], [211, 2, 1, "", "mul"], [211, 2, 1, "", "neg"], [211, 2, 1, "", "numer"], [211, 2, 1, "", "per"], [211, 2, 1, "", "poly_unify"], [211, 2, 1, "", "pow"], [211, 2, 1, "", "quo"], [211, 2, 1, "", "sub"]], "sympy.polys.polyclasses.DMP": [[211, 2, 1, "", "LC"], [211, 2, 1, "", "TC"], [211, 2, 1, "", "abs"], [211, 2, 1, "", "add"], [211, 2, 1, "", "add_ground"], [211, 2, 1, "", "all_coeffs"], [211, 2, 1, "", "all_monoms"], [211, 2, 1, "", "all_terms"], [211, 2, 1, "", "cancel"], [211, 2, 1, "", "cauchy_lower_bound"], [211, 2, 1, "", "cauchy_upper_bound"], [211, 2, 1, "", "clear_denoms"], [211, 2, 1, "", "coeffs"], [211, 2, 1, "", "cofactors"], [211, 2, 1, "", "compose"], [211, 2, 1, "", "content"], [211, 2, 1, "", "convert"], [211, 2, 1, "", "count_complex_roots"], [211, 2, 1, "", "count_real_roots"], [211, 2, 1, "", "decompose"], [211, 2, 1, "", "deflate"], [211, 2, 1, "", "degree"], [211, 2, 1, "", "degree_list"], [211, 2, 1, "", "diff"], [211, 2, 1, "", "discriminant"], [211, 2, 1, "", "div"], [211, 2, 1, "", "eject"], [211, 2, 1, "", "eval"], [211, 2, 1, "", "exclude"], [211, 2, 1, "", "exquo"], [211, 2, 1, "", "exquo_ground"], [211, 2, 1, "", "factor_list"], [211, 2, 1, "", "factor_list_include"], [211, 2, 1, "", "from_list"], [211, 2, 1, "", "from_sympy_list"], [211, 2, 1, "", "gcd"], [211, 2, 1, "", "gcdex"], [211, 2, 1, "", "gff_list"], [211, 2, 1, "", "ground_new"], [211, 2, 1, "", "half_gcdex"], [211, 2, 1, "", "homogeneous_order"], [211, 2, 1, "", "homogenize"], [211, 2, 1, "", "inject"], [211, 2, 1, "", "integrate"], [211, 2, 1, "", "intervals"], [211, 2, 1, "", "invert"], [211, 3, 1, "", "is_cyclotomic"], [211, 3, 1, "", "is_ground"], [211, 3, 1, "", "is_homogeneous"], [211, 3, 1, "", "is_irreducible"], [211, 3, 1, "", "is_linear"], [211, 3, 1, "", "is_monic"], [211, 3, 1, "", "is_monomial"], [211, 3, 1, "", "is_one"], [211, 3, 1, "", "is_primitive"], [211, 3, 1, "", "is_quadratic"], [211, 3, 1, "", "is_sqf"], [211, 3, 1, "", "is_zero"], [211, 2, 1, "", "l1_norm"], [211, 2, 1, "", "l2_norm_squared"], [211, 2, 1, "", "lcm"], [211, 2, 1, "", "lift"], [211, 2, 1, "", "max_norm"], [211, 2, 1, "", "mignotte_sep_bound_squared"], [211, 2, 1, "", "monic"], [211, 2, 1, "", "monoms"], [211, 2, 1, "", "mul"], [211, 2, 1, "", "mul_ground"], [211, 2, 1, "", "neg"], [211, 2, 1, "", "norm"], [211, 2, 1, "", "nth"], [211, 2, 1, "", "pdiv"], [211, 2, 1, "", "permute"], [211, 2, 1, "", "pexquo"], [211, 2, 1, "", "pow"], [211, 2, 1, "", "pquo"], [211, 2, 1, "", "prem"], [211, 2, 1, "", "primitive"], [211, 2, 1, "", "quo"], [211, 2, 1, "", "quo_ground"], [211, 2, 1, "", "refine_root"], [211, 2, 1, "", "rem"], [211, 3, 1, "", "rep"], [211, 2, 1, "", "resultant"], [211, 2, 1, "", "revert"], [211, 2, 1, "", "shift"], [211, 2, 1, "", "shift_list"], [211, 2, 1, "", "slice"], [211, 2, 1, "", "sqf_list"], [211, 2, 1, "", "sqf_list_include"], [211, 2, 1, "", "sqf_norm"], [211, 2, 1, "", "sqf_part"], [211, 2, 1, "", "sqr"], [211, 2, 1, "", "sturm"], [211, 2, 1, "", "sub"], [211, 2, 1, "", "sub_ground"], [211, 2, 1, "", "subresultants"], [211, 2, 1, "", "terms"], [211, 2, 1, "", "terms_gcd"], [211, 2, 1, "", "to_best"], [211, 2, 1, "", "to_dict"], [211, 2, 1, "", "to_exact"], [211, 2, 1, "", "to_field"], [211, 2, 1, "", "to_list"], [211, 2, 1, "", "to_ring"], [211, 2, 1, "", "to_sympy_dict"], [211, 2, 1, "", "to_sympy_list"], [211, 2, 1, "", "to_tuple"], [211, 2, 1, "", "total_degree"], [211, 2, 1, "", "transform"], [211, 2, 1, "", "trunc"], [211, 2, 1, "", "unify_DMP"]], "sympy.polys.polyconfig": [[213, 4, 1, "", "setup"]], "sympy.polys.polyerrors": [[213, 1, 1, "", "BasePolynomialError"], [213, 1, 1, "", "CoercionFailed"], [213, 1, 1, "", "ComputationFailed"], [213, 1, 1, "", "DomainError"], [213, 1, 1, "", "EvaluationFailed"], [213, 1, 1, "", "ExactQuotientFailed"], [213, 1, 1, "", "ExtraneousFactors"], [213, 1, 1, "", "FlagError"], [213, 1, 1, "", "GeneratorsError"], [213, 1, 1, "", "GeneratorsNeeded"], [213, 1, 1, "", "HeuristicGCDFailed"], [213, 1, 1, "", "HomomorphismFailed"], [213, 1, 1, "", "IsomorphismFailed"], [213, 1, 1, "", "MultivariatePolynomialError"], [213, 1, 1, "", "NotAlgebraic"], [213, 1, 1, "", "NotInvertible"], [213, 1, 1, "", "NotReversible"], [213, 1, 1, "", "OperationNotSupported"], [213, 1, 1, "", "OptionError"], [213, 1, 1, "", "PolificationFailed"], [213, 1, 1, "", "PolynomialError"], [213, 1, 1, "", "RefinementFailed"], [213, 1, 1, "", "UnificationFailed"], [213, 1, 1, "", "UnivariatePolynomialError"]], "sympy.polys.polyfuncs": [[216, 4, 1, "", "horner"], [216, 4, 1, "", "interpolate"], [216, 4, 1, "", "symmetrize"], [216, 4, 1, "", "viete"]], "sympy.polys.polyoptions": [[213, 1, 1, "", "Options"], [213, 4, 1, "", "build_options"]], "sympy.polys.polyoptions.Options": [[213, 2, 1, "", "clone"]], "sympy.polys.polyroots": [[216, 4, 1, "", "roots"]], "sympy.polys.polytools": [[216, 1, 1, "", "GroebnerBasis"], [216, 4, 1, "", "LC"], [216, 4, 1, "", "LM"], [216, 4, 1, "", "LT"], [216, 1, 1, "", "Poly"], [216, 1, 1, "", "PurePoly"], [216, 4, 1, "", "all_roots"], [216, 4, 1, "", "cancel"], [216, 4, 1, "", "cofactors"], [216, 4, 1, "", "compose"], [216, 4, 1, "", "content"], [216, 4, 1, "", "count_roots"], [216, 4, 1, "", "decompose"], [216, 4, 1, "", "degree"], [216, 4, 1, "", "degree_list"], [216, 4, 1, "", "discriminant"], [216, 4, 1, "", "div"], [216, 4, 1, "", "exquo"], [216, 4, 1, "", "factor"], [216, 4, 1, "", "factor_list"], [216, 4, 1, "", "gcd"], [216, 4, 1, "", "gcd_list"], [216, 4, 1, "", "gcdex"], [216, 4, 1, "", "gff"], [216, 4, 1, "", "gff_list"], [216, 4, 1, "", "groebner"], [216, 4, 1, "", "ground_roots"], [216, 4, 1, "", "half_gcdex"], [216, 4, 1, "", "intervals"], [216, 4, 1, "", "invert"], [216, 4, 1, "", "is_zero_dimensional"], [216, 4, 1, "", "lcm"], [216, 4, 1, "", "lcm_list"], [216, 4, 1, "", "monic"], [216, 4, 1, "", "nroots"], [216, 4, 1, "", "nth_power_roots_poly"], [216, 4, 1, "", "parallel_poly_from_expr"], [216, 4, 1, "", "pdiv"], [216, 4, 1, "", "pexquo"], [216, 4, 1, "", "poly"], [216, 4, 1, "", "poly_from_expr"], [216, 4, 1, "", "pquo"], [216, 4, 1, "", "prem"], [216, 4, 1, "", "primitive"], [216, 4, 1, "", "quo"], [216, 4, 1, "", "real_roots"], [216, 4, 1, "", "reduced"], [216, 4, 1, "", "refine_root"], [216, 4, 1, "", "rem"], [216, 4, 1, "", "resultant"], [216, 4, 1, "", "sqf"], [216, 4, 1, "", "sqf_list"], [216, 4, 1, "", "sqf_norm"], [216, 4, 1, "", "sqf_part"], [216, 4, 1, "", "sturm"], [216, 4, 1, "", "subresultants"], [216, 4, 1, "", "terms_gcd"], [216, 4, 1, "", "trunc"]], "sympy.polys.polytools.GroebnerBasis": [[216, 2, 1, "", "contains"], [216, 2, 1, "", "fglm"], [216, 3, 1, "", "is_zero_dimensional"], [216, 2, 1, "", "reduce"]], "sympy.polys.polytools.Poly": [[216, 2, 1, "", "EC"], [216, 2, 1, "", "EM"], [216, 2, 1, "", "ET"], [216, 2, 1, "", "LC"], [216, 2, 1, "", "LM"], [216, 2, 1, "", "LT"], [216, 2, 1, "", "TC"], [216, 2, 1, "", "abs"], [216, 2, 1, "", "add"], [216, 2, 1, "", "add_ground"], [216, 2, 1, "", "all_coeffs"], [216, 2, 1, "", "all_monoms"], [216, 2, 1, "", "all_roots"], [216, 2, 1, "", "all_terms"], [216, 2, 1, "", "as_dict"], [216, 2, 1, "", "as_expr"], [216, 2, 1, "", "as_list"], [216, 2, 1, "", "as_poly"], [216, 2, 1, "", "cancel"], [216, 2, 1, "", "clear_denoms"], [216, 2, 1, "", "coeff_monomial"], [216, 2, 1, "", "coeffs"], [216, 2, 1, "", "cofactors"], [216, 2, 1, "", "compose"], [216, 2, 1, "", "content"], [216, 2, 1, "", "count_roots"], [216, 2, 1, "", "decompose"], [216, 2, 1, "", "deflate"], [216, 2, 1, "", "degree"], [216, 2, 1, "", "degree_list"], [216, 2, 1, "", "diff"], [216, 2, 1, "", "discriminant"], [216, 2, 1, "", "dispersion"], [216, 2, 1, "", "dispersionset"], [216, 2, 1, "", "div"], [216, 3, 1, "", "domain"], [216, 2, 1, "", "eject"], [216, 2, 1, "", "eval"], [216, 2, 1, "", "exclude"], [216, 2, 1, "", "exquo"], [216, 2, 1, "", "exquo_ground"], [216, 2, 1, "", "factor_list"], [216, 2, 1, "", "factor_list_include"], [216, 3, 1, "", "free_symbols"], [216, 3, 1, "", "free_symbols_in_domain"], [216, 2, 1, "", "from_dict"], [216, 2, 1, "", "from_expr"], [216, 2, 1, "", "from_list"], [216, 2, 1, "", "from_poly"], [216, 2, 1, "", "galois_group"], [216, 2, 1, "", "gcd"], [216, 2, 1, "", "gcdex"], [216, 3, 1, "", "gen"], [216, 2, 1, "", "get_domain"], [216, 2, 1, "", "get_modulus"], [216, 2, 1, "", "gff_list"], [216, 2, 1, "", "ground_roots"], [216, 2, 1, "", "half_gcdex"], [216, 2, 1, "", "has_only_gens"], [216, 2, 1, "", "homogeneous_order"], [216, 2, 1, "", "homogenize"], [216, 2, 1, "", "inject"], [216, 2, 1, "", "integrate"], [216, 2, 1, "", "intervals"], [216, 2, 1, "", "invert"], [216, 3, 1, "", "is_cyclotomic"], [216, 3, 1, "", "is_ground"], [216, 3, 1, "", "is_homogeneous"], [216, 3, 1, "", "is_irreducible"], [216, 3, 1, "", "is_linear"], [216, 3, 1, "", "is_monic"], [216, 3, 1, "", "is_monomial"], [216, 3, 1, "", "is_multivariate"], [216, 3, 1, "", "is_one"], [216, 3, 1, "", "is_primitive"], [216, 3, 1, "", "is_quadratic"], [216, 3, 1, "", "is_sqf"], [216, 3, 1, "", "is_univariate"], [216, 3, 1, "", "is_zero"], [216, 2, 1, "", "l1_norm"], [216, 2, 1, "", "lcm"], [216, 2, 1, "", "length"], [216, 2, 1, "", "lift"], [216, 2, 1, "", "ltrim"], [216, 2, 1, "", "make_monic_over_integers_by_scaling_roots"], [216, 2, 1, "", "match"], [216, 2, 1, "", "max_norm"], [216, 2, 1, "", "monic"], [216, 2, 1, "", "monoms"], [216, 2, 1, "", "mul"], [216, 2, 1, "", "mul_ground"], [216, 2, 1, "", "neg"], [216, 2, 1, "", "new"], [216, 2, 1, "", "norm"], [216, 2, 1, "", "nroots"], [216, 2, 1, "", "nth"], [216, 2, 1, "", "nth_power_roots_poly"], [216, 3, 1, "", "one"], [216, 2, 1, "", "pdiv"], [216, 2, 1, "", "per"], [216, 2, 1, "", "pexquo"], [216, 2, 1, "", "pow"], [216, 2, 1, "", "pquo"], [216, 2, 1, "", "prem"], [216, 2, 1, "", "primitive"], [216, 2, 1, "", "quo"], [216, 2, 1, "", "quo_ground"], [216, 2, 1, "", "rat_clear_denoms"], [216, 2, 1, "", "real_roots"], [216, 2, 1, "", "refine_root"], [216, 2, 1, "", "rem"], [216, 2, 1, "", "reorder"], [216, 2, 1, "", "replace"], [216, 2, 1, "", "resultant"], [216, 2, 1, "", "retract"], [216, 2, 1, "", "revert"], [216, 2, 1, "", "root"], [216, 2, 1, "", "same_root"], [216, 2, 1, "", "set_domain"], [216, 2, 1, "", "set_modulus"], [216, 2, 1, "", "shift"], [216, 2, 1, "", "shift_list"], [216, 2, 1, "", "slice"], [216, 2, 1, "", "sqf_list"], [216, 2, 1, "", "sqf_list_include"], [216, 2, 1, "", "sqf_norm"], [216, 2, 1, "", "sqf_part"], [216, 2, 1, "", "sqr"], [216, 2, 1, "", "sturm"], [216, 2, 1, "", "sub"], [216, 2, 1, "", "sub_ground"], [216, 2, 1, "", "subresultants"], [216, 2, 1, "", "terms"], [216, 2, 1, "", "terms_gcd"], [216, 2, 1, "", "termwise"], [216, 2, 1, "", "to_exact"], [216, 2, 1, "", "to_field"], [216, 2, 1, "", "to_ring"], [216, 2, 1, "", "total_degree"], [216, 2, 1, "", "transform"], [216, 2, 1, "", "trunc"], [216, 2, 1, "", "unify"], [216, 3, 1, "", "unit"], [216, 3, 1, "", "zero"]], "sympy.polys.polytools.PurePoly": [[216, 3, 1, "", "free_symbols"]], "sympy.polys.rationaltools": [[216, 4, 1, "", "together"]], "sympy.polys.ring_series": [[217, 4, 1, "", "_tan1"], [217, 4, 1, "", "mul_xin"], [217, 4, 1, "", "pow_xin"], [217, 4, 1, "", "rs_LambertW"], [217, 4, 1, "", "rs_asin"], [217, 4, 1, "", "rs_atan"], [217, 4, 1, "", "rs_atanh"], [217, 4, 1, "", "rs_compose_add"], [217, 4, 1, "", "rs_cos"], [217, 4, 1, "", "rs_cos_sin"], [217, 4, 1, "", "rs_cosh"], [217, 4, 1, "", "rs_cot"], [217, 4, 1, "", "rs_diff"], [217, 4, 1, "", "rs_exp"], [217, 4, 1, "", "rs_fun"], [217, 4, 1, "", "rs_hadamard_exp"], [217, 4, 1, "", "rs_integrate"], [217, 4, 1, "", "rs_is_puiseux"], [217, 4, 1, "", "rs_log"], [217, 4, 1, "", "rs_mul"], [217, 4, 1, "", "rs_newton"], [217, 4, 1, "", "rs_nth_root"], [217, 4, 1, "", "rs_pow"], [217, 4, 1, "", "rs_puiseux"], [217, 4, 1, "", "rs_puiseux2"], [217, 4, 1, "", "rs_series_from_list"], [217, 4, 1, "", "rs_series_inversion"], [217, 4, 1, "", "rs_series_reversion"], [217, 4, 1, "", "rs_sin"], [217, 4, 1, "", "rs_sinh"], [217, 4, 1, "", "rs_square"], [217, 4, 1, "", "rs_subs"], [217, 4, 1, "", "rs_tan"], [217, 4, 1, "", "rs_tanh"], [217, 4, 1, "", "rs_trunc"]], "sympy.polys.rings": [[211, 1, 1, "", "PolyElement"], [211, 1, 1, "", "PolyRing"], [211, 4, 1, "", "ring"], [211, 4, 1, "", "sring"], [211, 4, 1, "", "vring"], [211, 4, 1, "", "xring"]], "sympy.polys.rings.PolyElement": [[211, 2, 1, "", "almosteq"], [211, 2, 1, "", "cancel"], [211, 2, 1, "", "coeff"], [211, 2, 1, "", "coeff_wrt"], [211, 2, 1, "", "coeffs"], [211, 2, 1, "", "const"], [211, 2, 1, "", "content"], [211, 2, 1, "", "copy"], [211, 2, 1, "", "degree"], [211, 2, 1, "", "degrees"], [211, 2, 1, "", "diff"], [211, 2, 1, "", "div"], [211, 2, 1, "", "imul_num"], [211, 2, 1, "", "itercoeffs"], [211, 2, 1, "", "itermonoms"], [211, 2, 1, "", "iterterms"], [211, 2, 1, "", "leading_expv"], [211, 2, 1, "", "leading_monom"], [211, 2, 1, "", "leading_term"], [211, 2, 1, "", "listcoeffs"], [211, 2, 1, "", "listmonoms"], [211, 2, 1, "", "listterms"], [211, 2, 1, "", "monic"], [211, 2, 1, "", "monoms"], [211, 2, 1, "", "pdiv"], [211, 2, 1, "", "pexquo"], [211, 2, 1, "", "pquo"], [211, 2, 1, "", "prem"], [211, 2, 1, "", "primitive"], [211, 2, 1, "", "square"], [211, 2, 1, "", "strip_zero"], [211, 2, 1, "", "subresultants"], [211, 2, 1, "", "symmetrize"], [211, 2, 1, "", "tail_degree"], [211, 2, 1, "", "tail_degrees"], [211, 2, 1, "", "terms"]], "sympy.polys.rings.PolyRing": [[211, 2, 1, "", "add"], [211, 2, 1, "", "add_gens"], [211, 2, 1, "", "compose"], [211, 2, 1, "", "drop"], [211, 2, 1, "", "drop_to_ground"], [211, 2, 1, "", "index"], [211, 2, 1, "", "monomial_basis"], [211, 2, 1, "", "mul"], [211, 2, 1, "", "symmetric_poly"]], "sympy.polys.rootoftools": [[216, 1, 1, "", "ComplexRootOf"], [216, 1, 1, "", "RootOf"], [216, 1, 1, "", "RootSum"], [216, 4, 1, "", "rootof"]], "sympy.polys.rootoftools.ComplexRootOf": [[216, 2, 1, "", "_all_roots"], [216, 2, 1, "", "_complexes_index"], [216, 2, 1, "", "_complexes_sorted"], [216, 2, 1, "", "_count_roots"], [216, 2, 1, "", "_ensure_complexes_init"], [216, 2, 1, "", "_ensure_reals_init"], [216, 2, 1, "", "_eval_evalf"], [216, 2, 1, "", "_eval_is_imaginary"], [216, 2, 1, "", "_eval_is_real"], [216, 2, 1, "", "_get_complexes"], [216, 2, 1, "", "_get_complexes_sqf"], [216, 2, 1, "", "_get_interval"], [216, 2, 1, "", "_get_reals"], [216, 2, 1, "", "_get_reals_sqf"], [216, 2, 1, "", "_get_roots"], [216, 2, 1, "", "_indexed_root"], [216, 2, 1, "", "_new"], [216, 2, 1, "", "_postprocess_root"], [216, 2, 1, "", "_preprocess_roots"], [216, 2, 1, "", "_real_roots"], [216, 2, 1, "", "_reals_index"], [216, 2, 1, "", "_reals_sorted"], [216, 2, 1, "", "_refine_complexes"], [216, 2, 1, "", "_reset"], [216, 2, 1, "", "_roots_trivial"], [216, 2, 1, "", "_set_interval"], [216, 2, 1, "", "all_roots"], [216, 2, 1, "", "clear_cache"], [216, 2, 1, "", "eval_approx"], [216, 2, 1, "", "eval_rational"], [216, 2, 1, "", "real_roots"]], "sympy.polys.rootoftools.RootSum": [[216, 2, 1, "", "new"]], "sympy.polys.solvers": [[218, 4, 1, "", "_solve_lin_sys"], [218, 4, 1, "", "_solve_lin_sys_component"], [218, 4, 1, "", "eqs_to_matrix"], [218, 4, 1, "", "solve_lin_sys"], [218, 4, 1, "", "sympy_eqs_to_ring"]], "sympy.polys.specialpolys": [[216, 4, 1, "", "cyclotomic_poly"], [216, 4, 1, "", "interpolating_poly"], [216, 4, 1, "", "random_poly"], [216, 4, 1, "", "swinnerton_dyer_poly"], [216, 4, 1, "", "symmetric_poly"]], "sympy.polys.sqfreetools": [[213, 4, 1, "", "dmp_gf_sqf_list"], [213, 4, 1, "", "dmp_gf_sqf_part"], [213, 4, 1, "", "dmp_gff_list"], [213, 4, 1, "", "dmp_norm"], [213, 4, 1, "", "dmp_sqf_list"], [213, 4, 1, "", "dmp_sqf_list_include"], [213, 4, 1, "", "dmp_sqf_norm"], [213, 4, 1, "", "dmp_sqf_p"], [213, 4, 1, "", "dmp_sqf_part"], [213, 4, 1, "", "dup_gf_sqf_list"], [213, 4, 1, "", "dup_gf_sqf_part"], [213, 4, 1, "", "dup_gff_list"], [213, 4, 1, "", "dup_sqf_list"], [213, 4, 1, "", "dup_sqf_list_include"], [213, 4, 1, "", "dup_sqf_norm"], [213, 4, 1, "", "dup_sqf_p"], [213, 4, 1, "", "dup_sqf_part"]], "sympy.printing": [[220, 0, 0, "-", "aesaracode"], [220, 0, 0, "-", "c"], [220, 0, 0, "-", "codeprinter"], [220, 0, 0, "-", "conventions"], [220, 0, 0, "-", "cxx"], [220, 0, 0, "-", "fortran"], [220, 0, 0, "-", "gtk"], [220, 0, 0, "-", "jscode"], [220, 0, 0, "-", "julia"], [220, 0, 0, "-", "lambdarepr"], [220, 0, 0, "-", "latex"], [220, 0, 0, "-", "maple"], [220, 0, 0, "-", "mathematica"], [220, 0, 0, "-", "mathml"], [220, 0, 0, "-", "octave"], [220, 0, 0, "-", "precedence"], [220, 0, 0, "-", "pretty"], [220, 0, 0, "-", "preview"], [220, 0, 0, "-", "printer"], [220, 0, 0, "-", "pycode"], [220, 0, 0, "-", "python"], [220, 0, 0, "-", "rcode"], [220, 0, 0, "-", "repr"], [220, 0, 0, "-", "rust"], [220, 0, 0, "-", "smtlib"], [220, 0, 0, "-", "str"], [220, 0, 0, "-", "tree"]], "sympy.printing.aesaracode": [[220, 1, 1, "", "AesaraPrinter"], [220, 4, 1, "", "aesara_code"], [220, 4, 1, "", "aesara_function"], [220, 4, 1, "", "dim_handling"]], "sympy.printing.aesaracode.AesaraPrinter": [[220, 2, 1, "", "doprint"], [220, 5, 1, "", "printmethod"]], "sympy.printing.c": [[220, 1, 1, "", "C89CodePrinter"], [220, 1, 1, "", "C99CodePrinter"], [220, 4, 1, "", "ccode"], [220, 6, 1, "", "known_functions_C89"], [220, 6, 1, "", "known_functions_C99"], [220, 4, 1, "", "print_ccode"]], "sympy.printing.c.C89CodePrinter": [[220, 2, 1, "", "indent_code"], [220, 5, 1, "", "printmethod"]], "sympy.printing.c.C99CodePrinter": [[220, 5, 1, "", "printmethod"]], "sympy.printing.codeprinter": [[220, 7, 1, "", "AssignmentError"], [220, 1, 1, "", "CodePrinter"], [220, 4, 1, "", "cxxcode"]], "sympy.printing.codeprinter.CodePrinter": [[220, 2, 1, "", "doprint"], [220, 5, 1, "", "printmethod"]], "sympy.printing.conventions": [[220, 4, 1, "", "split_super_sub"]], "sympy.printing.cxx": [[220, 1, 1, "", "CXX11CodePrinter"], [220, 1, 1, "", "CXX98CodePrinter"]], "sympy.printing.cxx.CXX11CodePrinter": [[220, 5, 1, "", "printmethod"]], "sympy.printing.cxx.CXX98CodePrinter": [[220, 5, 1, "", "printmethod"]], "sympy.printing.dot": [[220, 4, 1, "", "dotprint"]], "sympy.printing.fortran": [[220, 1, 1, "", "FCodePrinter"], [220, 4, 1, "", "fcode"], [220, 4, 1, "", "print_fcode"]], "sympy.printing.fortran.FCodePrinter": [[220, 2, 1, "", "indent_code"], [220, 5, 1, "", "printmethod"]], "sympy.printing.gtk": [[220, 4, 1, "", "print_gtk"]], "sympy.printing.jscode": [[220, 1, 1, "", "JavascriptCodePrinter"], [220, 4, 1, "", "jscode"], [220, 6, 1, "", "known_functions"]], "sympy.printing.jscode.JavascriptCodePrinter": [[220, 2, 1, "", "indent_code"], [220, 5, 1, "", "printmethod"]], "sympy.printing.julia": [[220, 1, 1, "", "JuliaCodePrinter"], [220, 4, 1, "", "julia_code"], [220, 6, 1, "", "known_fcns_src1"], [220, 6, 1, "", "known_fcns_src2"]], "sympy.printing.julia.JuliaCodePrinter": [[220, 2, 1, "", "indent_code"], [220, 5, 1, "", "printmethod"]], "sympy.printing.lambdarepr": [[220, 1, 1, "", "LambdaPrinter"], [220, 4, 1, "", "lambdarepr"]], "sympy.printing.lambdarepr.LambdaPrinter": [[220, 5, 1, "", "printmethod"]], "sympy.printing.latex": [[220, 1, 1, "", "LatexPrinter"], [220, 6, 1, "", "accepted_latex_functions"], [220, 4, 1, "", "latex"], [220, 4, 1, "", "print_latex"]], "sympy.printing.latex.LatexPrinter": [[220, 2, 1, "", "parenthesize_super"], [220, 5, 1, "", "printmethod"]], "sympy.printing.maple": [[220, 1, 1, "", "MapleCodePrinter"], [220, 4, 1, "", "maple_code"], [220, 4, 1, "", "print_maple_code"]], "sympy.printing.maple.MapleCodePrinter": [[220, 5, 1, "", "printmethod"]], "sympy.printing.mathematica": [[220, 1, 1, "", "MCodePrinter"], [220, 6, 1, "", "known_functions"], [220, 4, 1, "", "mathematica_code"]], "sympy.printing.mathematica.MCodePrinter": [[220, 5, 1, "", "printmethod"]], "sympy.printing.mathml": [[220, 1, 1, "", "MathMLContentPrinter"], [220, 1, 1, "", "MathMLPresentationPrinter"], [220, 1, 1, "", "MathMLPrinterBase"], [220, 4, 1, "", "mathml"], [220, 4, 1, "", "print_mathml"]], "sympy.printing.mathml.MathMLContentPrinter": [[220, 2, 1, "", "mathml_tag"], [220, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPresentationPrinter": [[220, 2, 1, "", "mathml_tag"], [220, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPrinterBase": [[220, 2, 1, "", "doprint"]], "sympy.printing.octave": [[220, 1, 1, "", "OctaveCodePrinter"], [220, 6, 1, "", "known_fcns_src1"], [220, 6, 1, "", "known_fcns_src2"], [220, 4, 1, "", "octave_code"]], "sympy.printing.octave.OctaveCodePrinter": [[220, 2, 1, "", "indent_code"], [220, 5, 1, "", "printmethod"]], "sympy.printing.precedence": [[220, 6, 1, "", "PRECEDENCE"], [220, 6, 1, "", "PRECEDENCE_FUNCTIONS"], [220, 6, 1, "", "PRECEDENCE_VALUES"], [220, 4, 1, "", "precedence"]], "sympy.printing.pretty": [[220, 0, 0, "-", "pretty"], [220, 0, 0, "-", "pretty_symbology"], [220, 0, 0, "-", "stringpict"]], "sympy.printing.pretty.pretty": [[220, 1, 1, "", "PrettyPrinter"], [220, 4, 1, "", "pretty"], [220, 4, 1, "", "pretty_print"]], "sympy.printing.pretty.pretty.PrettyPrinter": [[220, 5, 1, "", "printmethod"]], "sympy.printing.pretty.pretty_symbology": [[220, 4, 1, "", "G"], [220, 4, 1, "", "U"], [220, 4, 1, "", "VF"], [220, 4, 1, "", "annotated"], [220, 6, 1, "", "atoms_table"], [220, 6, 1, "", "digit_2txt"], [220, 6, 1, "", "frac"], [220, 4, 1, "", "g"], [220, 6, 1, "", "greek_letters"], [220, 4, 1, "", "hobj"], [220, 4, 1, "", "pretty_atom"], [220, 4, 1, "", "pretty_symbol"], [220, 4, 1, "", "pretty_try_use_unicode"], [220, 4, 1, "", "pretty_use_unicode"], [220, 6, 1, "", "root"], [220, 6, 1, "", "sub"], [220, 6, 1, "", "sup"], [220, 6, 1, "", "symb_2txt"], [220, 4, 1, "", "vobj"], [220, 4, 1, "", "xobj"], [220, 4, 1, "", "xstr"], [220, 4, 1, "", "xsym"]], "sympy.printing.pretty.stringpict": [[220, 1, 1, "", "prettyForm"], [220, 1, 1, "", "stringPict"]], "sympy.printing.pretty.stringpict.prettyForm": [[220, 2, 1, "", "apply"]], "sympy.printing.pretty.stringpict.stringPict": [[220, 2, 1, "", "above"], [220, 2, 1, "", "below"], [220, 2, 1, "", "height"], [220, 2, 1, "", "left"], [220, 2, 1, "", "leftslash"], [220, 2, 1, "", "next"], [220, 2, 1, "", "parens"], [220, 2, 1, "", "render"], [220, 2, 1, "", "right"], [220, 2, 1, "", "root"], [220, 2, 1, "", "stack"], [220, 2, 1, "", "terminal_width"], [220, 2, 1, "", "width"]], "sympy.printing.preview": [[220, 4, 1, "", "preview"]], "sympy.printing.printer": [[220, 1, 1, "", "Printer"]], "sympy.printing.printer.Printer": [[220, 2, 1, "", "_print"], [220, 2, 1, "", "doprint"], [220, 5, 1, "", "printmethod"], [220, 2, 1, "", "set_global_settings"]], "sympy.printing.pycode": [[220, 1, 1, "", "MpmathPrinter"], [220, 4, 1, "", "pycode"]], "sympy.printing.rcode": [[220, 1, 1, "", "RCodePrinter"], [220, 6, 1, "", "known_functions"], [220, 4, 1, "", "print_rcode"], [220, 4, 1, "", "rcode"]], "sympy.printing.rcode.RCodePrinter": [[220, 2, 1, "", "indent_code"], [220, 5, 1, "", "printmethod"]], "sympy.printing.repr": [[220, 1, 1, "", "ReprPrinter"], [220, 4, 1, "", "srepr"]], "sympy.printing.repr.ReprPrinter": [[220, 2, 1, "", "emptyPrinter"], [220, 5, 1, "", "printmethod"], [220, 2, 1, "", "reprify"]], "sympy.printing.rust": [[220, 1, 1, "", "RustCodePrinter"], [220, 6, 1, "", "known_functions"], [220, 4, 1, "", "rust_code"]], "sympy.printing.rust.RustCodePrinter": [[220, 2, 1, "", "indent_code"], [220, 5, 1, "", "printmethod"]], "sympy.printing.smtlib": [[220, 1, 1, "", "SMTLibPrinter"], [220, 4, 1, "", "smtlib_code"]], "sympy.printing.smtlib.SMTLibPrinter": [[220, 5, 1, "", "_default_settings"], [220, 5, 1, "", "printmethod"]], "sympy.printing.str": [[220, 1, 1, "", "StrPrinter"], [220, 4, 1, "", "sstr"], [220, 4, 1, "", "sstrrepr"]], "sympy.printing.str.StrPrinter": [[220, 5, 1, "", "printmethod"]], "sympy.printing.tree": [[220, 4, 1, "", "pprint_nodes"], [220, 4, 1, "", "print_node"], [220, 4, 1, "", "print_tree"], [220, 4, 1, "", "tree"]], "sympy.series.acceleration": [[227, 4, 1, "", "richardson"], [227, 4, 1, "", "shanks"]], "sympy.series.formal": [[222, 1, 1, "", "FiniteFormalPowerSeries"], [222, 1, 1, "", "FormalPowerSeries"], [222, 1, 1, "", "FormalPowerSeriesCompose"], [222, 1, 1, "", "FormalPowerSeriesInverse"], [222, 1, 1, "", "FormalPowerSeriesProduct"], [222, 4, 1, "", "compute_fps"], [222, 4, 1, "", "exp_re"], [222, 4, 1, "", "fps"], [222, 4, 1, "", "hyper_algorithm"], [222, 4, 1, "", "hyper_re"], [222, 4, 1, "", "rational_algorithm"], [222, 4, 1, "", "rational_independent"], [222, 4, 1, "", "rsolve_hypergeometric"], [222, 4, 1, "", "simpleDE"], [222, 4, 1, "", "solve_de"]], "sympy.series.formal.FormalPowerSeries": [[222, 2, 1, "", "coeff_bell"], [222, 2, 1, "", "compose"], [222, 3, 1, "", "infinite"], [222, 2, 1, "", "integrate"], [222, 2, 1, "", "inverse"], [222, 2, 1, "", "polynomial"], [222, 2, 1, "", "product"], [222, 2, 1, "", "truncate"]], "sympy.series.formal.FormalPowerSeriesCompose": [[222, 3, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesInverse": [[222, 3, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesProduct": [[222, 3, 1, "", "function"]], "sympy.series.fourier": [[223, 1, 1, "", "FourierSeries"], [223, 4, 1, "", "fourier_series"]], "sympy.series.fourier.FourierSeries": [[223, 2, 1, "", "scale"], [223, 2, 1, "", "scalex"], [223, 2, 1, "", "shift"], [223, 2, 1, "", "shiftx"], [223, 2, 1, "", "sigma_approximation"], [223, 2, 1, "", "truncate"]], "sympy.series.gruntz": [[227, 1, 1, "", "SubsSet"], [227, 4, 1, "", "build_expression_tree"], [227, 4, 1, "", "calculate_series"], [227, 4, 1, "", "compare"], [227, 4, 1, "", "gruntz"], [227, 4, 1, "", "limitinf"], [227, 4, 1, "", "mrv"], [227, 4, 1, "", "mrv_leadterm"], [227, 4, 1, "", "mrv_max1"], [227, 4, 1, "", "mrv_max3"], [227, 4, 1, "", "rewrite"], [227, 4, 1, "", "sign"]], "sympy.series.gruntz.SubsSet": [[227, 2, 1, "", "copy"], [227, 2, 1, "", "do_subs"], [227, 2, 1, "", "meets"], [227, 2, 1, "", "union"]], "sympy.series.limits": [[227, 1, 1, "", "Limit"], [227, 4, 1, "", "limit"]], "sympy.series.limits.Limit": [[227, 2, 1, "", "doit"]], "sympy.series.limitseq": [[225, 4, 1, "", "difference_delta"], [225, 4, 1, "", "dominant"], [225, 4, 1, "", "limit_seq"]], "sympy.series.order": [[227, 1, 1, "", "Order"]], "sympy.series.order.Order": [[227, 2, 1, "", "contains"]], "sympy.series.residues": [[227, 4, 1, "", "residue"]], "sympy.series.sequences": [[226, 1, 1, "", "EmptySequence"], [226, 1, 1, "", "RecursiveSeq"], [226, 1, 1, "", "SeqAdd"], [226, 1, 1, "", "SeqBase"], [226, 1, 1, "", "SeqFormula"], [226, 1, 1, "", "SeqMul"], [226, 1, 1, "", "SeqPer"], [226, 4, 1, "", "sequence"]], "sympy.series.sequences.EmptySequence": [[226, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.RecursiveSeq": [[226, 3, 1, "", "initial"], [226, 3, 1, "", "interval"], [226, 3, 1, "", "n"], [226, 3, 1, "", "recurrence"], [226, 3, 1, "", "start"], [226, 3, 1, "", "stop"], [226, 3, 1, "", "y"], [226, 3, 1, "", "yn"]], "sympy.series.sequences.SeqAdd": [[226, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqBase": [[226, 2, 1, "", "coeff"], [226, 2, 1, "", "coeff_mul"], [226, 2, 1, "", "find_linear_recurrence"], [226, 3, 1, "", "free_symbols"], [226, 3, 1, "", "gen"], [226, 3, 1, "", "interval"], [226, 3, 1, "", "length"], [226, 3, 1, "", "start"], [226, 3, 1, "", "stop"], [226, 3, 1, "", "variables"]], "sympy.series.sequences.SeqFormula": [[226, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.SeqMul": [[226, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqPer": [[226, 2, 1, "", "coeff_mul"]], "sympy.series.series": [[227, 4, 1, "", "series"]], "sympy.sets": [[228, 0, 0, "-", "conditionset"], [228, 0, 0, "-", "fancysets"], [228, 0, 0, "-", "powerset"], [228, 0, 0, "-", "sets"]], "sympy.sets.conditionset": [[228, 1, 1, "", "ConditionSet"], [228, 1, 1, "", "Contains"], [228, 1, 1, "", "SetKind"]], "sympy.sets.fancysets": [[228, 1, 1, "", "CartesianComplexRegion"], [228, 1, 1, "", "ComplexRegion"], [228, 1, 1, "", "Complexes"], [228, 1, 1, "", "ImageSet"], [228, 1, 1, "", "Integers"], [228, 1, 1, "", "Naturals"], [228, 1, 1, "", "Naturals0"], [228, 1, 1, "", "PolarComplexRegion"], [228, 1, 1, "", "Range"], [228, 1, 1, "", "Rationals"], [228, 1, 1, "", "Reals"], [228, 4, 1, "", "normalize_theta_set"]], "sympy.sets.fancysets.ComplexRegion": [[228, 3, 1, "", "a_interval"], [228, 3, 1, "", "b_interval"], [228, 2, 1, "", "from_real"], [228, 3, 1, "", "psets"], [228, 3, 1, "", "sets"]], "sympy.sets.fancysets.Range": [[228, 2, 1, "", "as_relational"], [228, 3, 1, "", "reversed"]], "sympy.sets.powerset": [[228, 1, 1, "", "PowerSet"]], "sympy.sets.sets": [[228, 1, 1, "", "Complement"], [228, 1, 1, "", "DisjointUnion"], [228, 1, 1, "", "EmptySet"], [228, 1, 1, "", "FiniteSet"], [228, 1, 1, "", "Intersection"], [228, 1, 1, "", "Interval"], [228, 1, 1, "", "ProductSet"], [228, 1, 1, "", "Set"], [228, 1, 1, "", "SymmetricDifference"], [228, 1, 1, "", "Union"], [228, 1, 1, "", "UniversalSet"], [228, 4, 1, "", "imageset"]], "sympy.sets.sets.Complement": [[228, 2, 1, "", "as_relational"], [228, 2, 1, "", "reduce"]], "sympy.sets.sets.FiniteSet": [[228, 2, 1, "", "as_relational"]], "sympy.sets.sets.Intersection": [[228, 2, 1, "", "as_relational"]], "sympy.sets.sets.Interval": [[228, 2, 1, "", "Lopen"], [228, 2, 1, "", "Ropen"], [228, 2, 1, "", "as_relational"], [228, 3, 1, "", "end"], [228, 3, 1, "", "is_left_unbounded"], [228, 3, 1, "", "is_right_unbounded"], [228, 3, 1, "", "left_open"], [228, 2, 1, "", "open"], [228, 3, 1, "", "right_open"], [228, 3, 1, "", "start"]], "sympy.sets.sets.ProductSet": [[228, 3, 1, "", "is_iterable"]], "sympy.sets.sets.Set": [[228, 3, 1, "", "boundary"], [228, 3, 1, "", "closure"], [228, 2, 1, "", "complement"], [228, 2, 1, "", "contains"], [228, 3, 1, "", "inf"], [228, 3, 1, "", "interior"], [228, 2, 1, "", "intersect"], [228, 2, 1, "", "intersection"], [228, 3, 1, "", "is_closed"], [228, 2, 1, "", "is_disjoint"], [228, 3, 1, "", "is_open"], [228, 2, 1, "", "is_proper_subset"], [228, 2, 1, "", "is_proper_superset"], [228, 2, 1, "", "is_subset"], [228, 2, 1, "", "is_superset"], [228, 2, 1, "", "isdisjoint"], [228, 2, 1, "", "issubset"], [228, 2, 1, "", "issuperset"], [228, 3, 1, "", "kind"], [228, 3, 1, "", "measure"], [228, 2, 1, "", "powerset"], [228, 3, 1, "", "sup"], [228, 2, 1, "", "symmetric_difference"], [228, 2, 1, "", "union"]], "sympy.sets.sets.SymmetricDifference": [[228, 2, 1, "", "as_relational"]], "sympy.sets.sets.Union": [[228, 2, 1, "", "as_relational"]], "sympy.simplify": [[232, 0, 0, "-", "combsimp"], [232, 0, 0, "-", "cse_main"], [232, 0, 0, "-", "epathtools"], [229, 0, 0, "-", "fu"], [232, 0, 0, "-", "hyperexpand"], [230, 0, 0, "-", "hyperexpand_doc"], [232, 0, 0, "-", "powsimp"], [232, 0, 0, "-", "radsimp"], [232, 0, 0, "-", "ratsimp"], [16, 0, 0, "-", "simplify"], [232, 0, 0, "-", "sqrtdenest"], [232, 0, 0, "-", "trigsimp"]], "sympy.simplify.combsimp": [[232, 4, 1, "", "combsimp"]], "sympy.simplify.cse_main": [[232, 4, 1, "", "cse"], [232, 4, 1, "", "opt_cse"], [232, 4, 1, "", "tree_cse"]], "sympy.simplify.epathtools": [[232, 1, 1, "", "EPath"], [232, 4, 1, "", "epath"]], "sympy.simplify.epathtools.EPath": [[232, 2, 1, "", "apply"], [232, 2, 1, "", "select"]], "sympy.simplify.fu": [[229, 4, 1, "", "TR0"], [229, 4, 1, "", "TR1"], [229, 4, 1, "", "TR10"], [229, 4, 1, "", "TR10i"], [229, 4, 1, "", "TR11"], [229, 4, 1, "", "TR111"], [229, 4, 1, "", "TR12"], [229, 4, 1, "", "TR12i"], [229, 4, 1, "", "TR13"], [229, 4, 1, "", "TR14"], [229, 4, 1, "", "TR15"], [229, 4, 1, "", "TR16"], [229, 4, 1, "", "TR2"], [229, 4, 1, "", "TR22"], [229, 4, 1, "", "TR2i"], [229, 4, 1, "", "TR3"], [229, 4, 1, "", "TR4"], [229, 4, 1, "", "TR5"], [229, 4, 1, "", "TR6"], [229, 4, 1, "", "TR7"], [229, 4, 1, "", "TR8"], [229, 4, 1, "", "TR9"], [229, 4, 1, "", "TRmorrie"], [229, 4, 1, "", "TRpower"], [229, 4, 1, "", "fu"]], "sympy.simplify.hyperexpand": [[232, 4, 1, "", "hyperexpand"]], "sympy.simplify.powsimp": [[232, 4, 1, "", "powdenest"], [232, 4, 1, "", "powsimp"]], "sympy.simplify.radsimp": [[232, 4, 1, "", "collect"], [232, 4, 1, "", "collect_const"], [232, 4, 1, "", "collect_sqrt"], [232, 4, 1, "", "fraction"], [232, 4, 1, "", "rad_rationalize"], [232, 4, 1, "", "radsimp"], [232, 4, 1, "", "rcollect"]], "sympy.simplify.ratsimp": [[232, 4, 1, "", "ratsimp"], [232, 4, 1, "", "ratsimpmodprime"]], "sympy.simplify.simplify": [[232, 4, 1, "", "besselsimp"], [232, 4, 1, "", "hypersimilar"], [232, 4, 1, "", "hypersimp"], [232, 4, 1, "", "kroneckersimp"], [232, 4, 1, "", "logcombine"], [232, 4, 1, "", "nsimplify"], [232, 4, 1, "", "nthroot"], [232, 4, 1, "", "posify"], [232, 4, 1, "", "separatevars"], [232, 4, 1, "", "simplify"]], "sympy.simplify.sqrtdenest": [[232, 4, 1, "", "sqrtdenest"]], "sympy.simplify.trigsimp": [[232, 4, 1, "", "trigsimp"]], "sympy.solvers": [[235, 0, 0, "-", "inequalities"], [236, 0, 0, "-", "ode"], [237, 0, 0, "-", "pde"], [238, 0, 0, "-", "recurr"], [238, 0, 0, "-", "simplex"], [239, 0, 0, "-", "solveset"]], "sympy.solvers.deutils": [[238, 4, 1, "", "ode_order"]], "sympy.solvers.diophantine.diophantine": [[233, 1, 1, "", "BinaryQuadratic"], [233, 1, 1, "", "CubicThue"], [233, 1, 1, "", "DiophantineEquationType"], [233, 1, 1, "", "DiophantineSolutionSet"], [233, 1, 1, "", "GeneralPythagorean"], [233, 1, 1, "", "GeneralSumOfEvenPowers"], [233, 1, 1, "", "GeneralSumOfSquares"], [233, 1, 1, "", "HomogeneousGeneralQuadratic"], [233, 1, 1, "", "HomogeneousTernaryQuadratic"], [233, 1, 1, "", "HomogeneousTernaryQuadraticNormal"], [233, 1, 1, "", "InhomogeneousGeneralQuadratic"], [233, 1, 1, "", "InhomogeneousTernaryQuadratic"], [233, 1, 1, "", "Linear"], [233, 4, 1, "", "PQa"], [233, 1, 1, "", "Univariate"], [233, 4, 1, "", "base_solution_linear"], [233, 4, 1, "", "classify_diop"], [233, 4, 1, "", "cornacchia"], [233, 4, 1, "", "descent"], [233, 4, 1, "", "diop_DN"], [233, 4, 1, "", "diop_bf_DN"], [233, 4, 1, "", "diop_general_pythagorean"], [233, 4, 1, "", "diop_general_sum_of_even_powers"], [233, 4, 1, "", "diop_general_sum_of_squares"], [233, 4, 1, "", "diop_linear"], [233, 4, 1, "", "diop_quadratic"], [233, 4, 1, "", "diop_solve"], [233, 4, 1, "", "diop_ternary_quadratic"], [233, 4, 1, "", "diop_ternary_quadratic_normal"], [233, 4, 1, "", "diophantine"], [233, 4, 1, "", "divisible"], [233, 4, 1, "", "equivalent"], [233, 4, 1, "", "find_DN"], [233, 4, 1, "", "gaussian_reduce"], [233, 4, 1, "", "holzer"], [233, 4, 1, "", "ldescent"], [233, 4, 1, "", "merge_solution"], [233, 4, 1, "", "parametrize_ternary_quadratic"], [233, 4, 1, "", "partition"], [233, 4, 1, "", "power_representation"], [233, 4, 1, "", "prime_as_sum_of_two_squares"], [233, 4, 1, "", "reconstruct"], [233, 4, 1, "", "sqf_normal"], [233, 4, 1, "", "square_factor"], [233, 4, 1, "", "sum_of_four_squares"], [233, 4, 1, "", "sum_of_powers"], [233, 4, 1, "", "sum_of_squares"], [233, 4, 1, "", "sum_of_three_squares"], [233, 4, 1, "", "transformation_to_DN"], [233, 4, 1, "", "transformation_to_normal"]], "sympy.solvers.diophantine.diophantine.DiophantineEquationType": [[233, 2, 1, "", "matches"]], "sympy.solvers.inequalities": [[235, 4, 1, "", "reduce_abs_inequalities"], [235, 4, 1, "", "reduce_abs_inequality"], [235, 4, 1, "", "reduce_inequalities"], [235, 4, 1, "", "reduce_rational_inequalities"], [235, 4, 1, "", "solve_poly_inequalities"], [235, 4, 1, "", "solve_poly_inequality"], [235, 4, 1, "", "solve_rational_inequalities"], [235, 4, 1, "", "solve_univariate_inequality"]], "sympy.solvers.ode": [[236, 6, 1, "", "allhints"], [236, 4, 1, "", "checkinfsol"], [236, 4, 1, "", "checkodesol"], [236, 4, 1, "", "classify_ode"], [236, 4, 1, "", "constantsimp"], [236, 4, 1, "", "dsolve"], [236, 4, 1, "", "homogeneous_order"], [236, 4, 1, "", "infinitesimals"], [236, 0, 0, "-", "ode"]], "sympy.solvers.ode.lie_group": [[236, 4, 1, "", "lie_heuristic_abaco1_product"], [236, 4, 1, "", "lie_heuristic_abaco1_simple"], [236, 4, 1, "", "lie_heuristic_abaco2_similar"], [236, 4, 1, "", "lie_heuristic_abaco2_unique_general"], [236, 4, 1, "", "lie_heuristic_abaco2_unique_unknown"], [236, 4, 1, "", "lie_heuristic_bivariate"], [236, 4, 1, "", "lie_heuristic_chi"], [236, 4, 1, "", "lie_heuristic_function_sum"], [236, 4, 1, "", "lie_heuristic_linear"]], "sympy.solvers.ode.ode": [[236, 4, 1, "", "_handle_Integral"], [236, 4, 1, "", "_linear_2eq_order1_type6"], [236, 4, 1, "", "_linear_2eq_order1_type7"], [236, 4, 1, "", "_nonlinear_2eq_order1_type1"], [236, 4, 1, "", "_nonlinear_2eq_order1_type2"], [236, 4, 1, "", "_nonlinear_2eq_order1_type3"], [236, 4, 1, "", "_nonlinear_2eq_order1_type4"], [236, 4, 1, "", "_nonlinear_2eq_order1_type5"], [236, 4, 1, "", "_nonlinear_3eq_order1_type1"], [236, 4, 1, "", "_nonlinear_3eq_order1_type2"], [236, 4, 1, "", "_nonlinear_3eq_order1_type3"], [236, 4, 1, "", "_nonlinear_3eq_order1_type4"], [236, 4, 1, "", "_nonlinear_3eq_order1_type5"], [236, 4, 1, "", "constant_renumber"], [236, 4, 1, "", "ode_1st_power_series"], [236, 4, 1, "", "ode_2nd_power_series_ordinary"], [236, 4, 1, "", "ode_2nd_power_series_regular"], [236, 4, 1, "", "ode_sol_simplicity"], [236, 4, 1, "", "odesimp"]], "sympy.solvers.ode.riccati": [[236, 4, 1, "", "compute_m_ybar"], [236, 4, 1, "", "construct_c"], [236, 4, 1, "", "construct_d"], [236, 4, 1, "", "get_gen_sol_from_part_sol"], [236, 4, 1, "", "rational_laurent_series"], [236, 4, 1, "", "remove_redundant_sols"], [236, 4, 1, "", "riccati_inverse_normal"], [236, 4, 1, "", "riccati_normal"], [236, 4, 1, "", "riccati_reduced"], [236, 4, 1, "", "solve_aux_eq"], [236, 4, 1, "", "solve_riccati"]], "sympy.solvers.ode.single": [[236, 1, 1, "", "AlmostLinear"], [236, 1, 1, "", "Bernoulli"], [236, 1, 1, "", "Factorable"], [236, 1, 1, "", "FirstExact"], [236, 1, 1, "", "FirstLinear"], [236, 1, 1, "", "HomogeneousCoeffBest"], [236, 1, 1, "", "HomogeneousCoeffSubsDepDivIndep"], [236, 1, 1, "", "HomogeneousCoeffSubsIndepDivDep"], [236, 1, 1, "", "LieGroup"], [236, 1, 1, "", "LinearCoefficients"], [236, 1, 1, "", "Liouville"], [236, 1, 1, "", "NthAlgebraic"], [236, 1, 1, "", "NthLinearConstantCoeffHomogeneous"], [236, 1, 1, "", "NthLinearConstantCoeffUndeterminedCoefficients"], [236, 1, 1, "", "NthLinearConstantCoeffVariationOfParameters"], [236, 1, 1, "", "NthLinearEulerEqHomogeneous"], [236, 1, 1, "", "NthLinearEulerEqNonhomogeneousUndeterminedCoefficients"], [236, 1, 1, "", "NthLinearEulerEqNonhomogeneousVariationOfParameters"], [236, 1, 1, "", "NthOrderReducible"], [236, 1, 1, "", "RationalRiccati"], [236, 1, 1, "", "RiccatiSpecial"], [236, 1, 1, "", "SecondHypergeometric"], [236, 1, 1, "", "SecondLinearAiry"], [236, 1, 1, "", "SecondLinearBessel"], [236, 1, 1, "", "Separable"], [236, 1, 1, "", "SeparableReduced"]], "sympy.solvers.ode.systems": [[236, 4, 1, "", "canonical_odes"], [236, 4, 1, "", "dsolve_system"], [236, 4, 1, "", "linear_ode_to_matrix"], [236, 4, 1, "", "linodesolve"], [236, 4, 1, "", "linodesolve_type"], [236, 4, 1, "", "matrix_exp"], [236, 4, 1, "", "matrix_exp_jordan_form"]], "sympy.solvers.pde": [[237, 4, 1, "", "checkpdesol"], [237, 4, 1, "", "classify_pde"], [237, 4, 1, "", "pde_1st_linear_constant_coeff"], [237, 4, 1, "", "pde_1st_linear_constant_coeff_homogeneous"], [237, 4, 1, "", "pde_1st_linear_variable_coeff"], [237, 4, 1, "", "pde_separate"], [237, 4, 1, "", "pde_separate_add"], [237, 4, 1, "", "pde_separate_mul"], [237, 4, 1, "", "pdsolve"]], "sympy.solvers.polysys": [[238, 4, 1, "", "solve_poly_system"], [238, 4, 1, "", "solve_triangulated"]], "sympy.solvers.recurr": [[238, 4, 1, "", "rsolve"], [238, 4, 1, "", "rsolve_hyper"], [238, 4, 1, "", "rsolve_poly"], [238, 4, 1, "", "rsolve_ratio"]], "sympy.solvers.simplex": [[238, 4, 1, "", "linprog"], [238, 4, 1, "", "lpmax"], [238, 4, 1, "", "lpmin"]], "sympy.solvers.solvers": [[238, 4, 1, "", "checksol"], [238, 4, 1, "", "nsolve"], [238, 4, 1, "", "solve"], [238, 4, 1, "", "solve_linear"], [238, 4, 1, "", "solve_linear_system"], [238, 4, 1, "", "solve_linear_system_LU"], [238, 4, 1, "", "solve_undetermined_coeffs"], [238, 4, 1, "", "unrad"]], "sympy.solvers.solveset": [[239, 4, 1, "", "_is_exponential"], [239, 4, 1, "", "_is_logarithmic"], [239, 4, 1, "", "_solve_exponential"], [239, 4, 1, "", "_solve_logarithm"], [239, 4, 1, "", "_transolve"], [239, 4, 1, "", "domain_check"], [239, 4, 1, "", "invert_complex"], [239, 4, 1, "", "invert_real"], [239, 4, 1, "", "linear_eq_to_matrix"], [239, 4, 1, "", "linsolve"], [239, 4, 1, "", "nonlinsolve"], [239, 4, 1, "", "solveset"], [239, 4, 1, "", "solveset_complex"], [239, 4, 1, "", "solveset_real"], [239, 4, 1, "", "solvify"]], "sympy.stats": [[240, 4, 1, "", "Arcsin"], [240, 4, 1, "", "Benini"], [240, 4, 1, "", "Bernoulli"], [240, 1, 1, "", "BernoulliProcess"], [240, 4, 1, "", "Beta"], [240, 4, 1, "", "BetaBinomial"], [240, 4, 1, "", "BetaNoncentral"], [240, 4, 1, "", "BetaPrime"], [240, 4, 1, "", "Binomial"], [240, 4, 1, "", "BoundedPareto"], [240, 4, 1, "", "Cauchy"], [240, 1, 1, "", "CentralMoment"], [240, 4, 1, "", "Chi"], [240, 4, 1, "", "ChiNoncentral"], [240, 4, 1, "", "ChiSquared"], [240, 4, 1, "", "Coin"], [240, 1, 1, "", "ContinuousMarkovChain"], [240, 4, 1, "", "ContinuousRV"], [240, 1, 1, "", "Covariance"], [240, 1, 1, "", "CrossCovarianceMatrix"], [240, 4, 1, "", "Dagum"], [240, 4, 1, "", "Davis"], [240, 4, 1, "", "Die"], [240, 1, 1, "", "DiscreteMarkovChain"], [240, 4, 1, "", "DiscreteUniform"], [240, 4, 1, "", "E"], [240, 4, 1, "", "Erlang"], [240, 4, 1, "", "ExGaussian"], [240, 1, 1, "", "Expectation"], [240, 1, 1, "", "ExpectationMatrix"], [240, 4, 1, "", "Exponential"], [240, 4, 1, "", "FDistribution"], [240, 4, 1, "", "FiniteRV"], [240, 4, 1, "", "FisherZ"], [240, 4, 1, "", "Frechet"], [240, 4, 1, "", "Gamma"], [240, 4, 1, "", "GammaInverse"], [240, 1, 1, "", "GammaProcess"], [240, 4, 1, "", "GeneralizedMultivariateLogGamma"], [240, 4, 1, "", "GeneralizedMultivariateLogGammaOmega"], [240, 4, 1, "", "Geometric"], [240, 4, 1, "", "Gompertz"], [240, 4, 1, "", "Gumbel"], [240, 4, 1, "", "Hermite"], [240, 4, 1, "", "Hypergeometric"], [240, 4, 1, "", "JointRV"], [240, 4, 1, "", "Kumaraswamy"], [240, 4, 1, "", "Laplace"], [240, 4, 1, "", "Levy"], [240, 4, 1, "", "LogLogistic"], [240, 4, 1, "", "LogNormal"], [240, 4, 1, "", "Logarithmic"], [240, 4, 1, "", "Logistic"], [240, 4, 1, "", "Lomax"], [240, 4, 1, "", "MatrixGamma"], [240, 4, 1, "", "MatrixNormal"], [240, 4, 1, "", "Maxwell"], [240, 1, 1, "", "Moment"], [240, 4, 1, "", "Moyal"], [240, 4, 1, "", "Multinomial"], [240, 4, 1, "", "MultivariateBeta"], [240, 4, 1, "", "MultivariateEwens"], [240, 4, 1, "", "MultivariateLaplace"], [240, 4, 1, "", "MultivariateNormal"], [240, 4, 1, "", "MultivariateT"], [240, 4, 1, "", "Nakagami"], [240, 4, 1, "", "NegativeBinomial"], [240, 4, 1, "", "NegativeMultinomial"], [240, 4, 1, "", "Normal"], [240, 4, 1, "", "NormalGamma"], [240, 4, 1, "", "P"], [240, 4, 1, "", "Pareto"], [240, 4, 1, "", "Poisson"], [240, 1, 1, "", "PoissonProcess"], [240, 4, 1, "", "PowerFunction"], [240, 1, 1, "", "Probability"], [240, 4, 1, "", "QuadraticU"], [240, 4, 1, "", "Rademacher"], [240, 4, 1, "", "RaisedCosine"], [240, 4, 1, "", "Rayleigh"], [240, 4, 1, "", "Reciprocal"], [240, 4, 1, "", "ShiftedGompertz"], [240, 4, 1, "", "Skellam"], [240, 4, 1, "", "StudentT"], [240, 4, 1, "", "Trapezoidal"], [240, 4, 1, "", "Triangular"], [240, 4, 1, "", "Uniform"], [240, 4, 1, "", "UniformSum"], [240, 1, 1, "", "Variance"], [240, 1, 1, "", "VarianceMatrix"], [240, 4, 1, "", "VonMises"], [240, 4, 1, "", "Wald"], [240, 4, 1, "", "Weibull"], [240, 1, 1, "", "WienerProcess"], [240, 4, 1, "", "WignerSemicircle"], [240, 4, 1, "", "Wishart"], [240, 4, 1, "", "YuleSimon"], [240, 4, 1, "", "Zeta"], [240, 4, 1, "", "cmoment"], [240, 4, 1, "", "correlation"], [240, 4, 1, "", "coskewness"], [240, 4, 1, "", "covariance"], [240, 0, 0, "-", "crv"], [240, 0, 0, "-", "crv_types"], [240, 4, 1, "", "density"], [240, 4, 1, "", "entropy"], [240, 4, 1, "", "factorial_moment"], [240, 0, 0, "-", "frv"], [240, 0, 0, "-", "frv_types"], [240, 4, 1, "", "given"], [240, 4, 1, "", "kurtosis"], [240, 4, 1, "", "marginal_distribution"], [240, 4, 1, "", "median"], [240, 4, 1, "", "moment"], [240, 4, 1, "", "quantile"], [240, 0, 0, "-", "rv"], [240, 4, 1, "", "sample"], [240, 4, 1, "", "sample_iter"], [240, 4, 1, "", "skewness"], [240, 4, 1, "", "std"], [240, 4, 1, "", "variance"], [240, 4, 1, "", "where"]], "sympy.stats.BernoulliProcess": [[240, 2, 1, "", "expectation"], [240, 2, 1, "", "probability"]], "sympy.stats.DiscreteMarkovChain": [[240, 2, 1, "", "absorbing_probabilities"], [240, 2, 1, "", "canonical_form"], [240, 2, 1, "", "communication_classes"], [240, 2, 1, "", "decompose"], [240, 2, 1, "", "fixed_row_vector"], [240, 2, 1, "", "fundamental_matrix"], [240, 3, 1, "", "limiting_distribution"], [240, 2, 1, "", "sample"], [240, 2, 1, "", "stationary_distribution"], [240, 3, 1, "", "transition_probabilities"]], "sympy.stats.compound_rv": [[240, 1, 1, "", "CompoundDistribution"]], "sympy.stats.crv": [[240, 1, 1, "", "ContinuousDomain"], [240, 1, 1, "", "ContinuousPSpace"]], "sympy.stats.crv_types": [[240, 1, 1, "", "NormalPSpace"]], "sympy.stats.crv_types.sympy.stats": [[240, 4, 1, "", "Die"], [240, 4, 1, "", "Normal"]], "sympy.stats.frv": [[240, 1, 1, "", "FiniteDomain"], [240, 1, 1, "", "FinitePSpace"]], "sympy.stats.frv_types": [[240, 1, 1, "", "DiePSpace"]], "sympy.stats.rv": [[240, 1, 1, "", "ConditionalDomain"], [240, 1, 1, "", "PSpace"], [240, 1, 1, "", "ProductDomain"], [240, 1, 1, "", "ProductPSpace"], [240, 1, 1, "", "RandomDomain"], [240, 1, 1, "", "RandomSymbol"], [240, 1, 1, "", "SingleDomain"], [240, 1, 1, "", "SinglePSpace"], [240, 4, 1, "", "pspace"], [240, 4, 1, "", "random_symbols"], [240, 4, 1, "", "rs_swap"], [240, 4, 1, "", "sampling_E"], [240, 4, 1, "", "sampling_P"], [240, 4, 1, "", "sampling_density"]], "sympy.tensor": [[241, 0, 0, "-", "array"], [244, 0, 0, "-", "index_methods"], [245, 0, 0, "-", "indexed"], [246, 0, 0, "-", "tensor"], [247, 0, 0, "-", "toperators"]], "sympy.tensor.array": [[241, 1, 1, "", "ImmutableDenseNDimArray"], [241, 1, 1, "", "ImmutableSparseNDimArray"], [241, 1, 1, "", "MutableDenseNDimArray"], [241, 1, 1, "", "MutableSparseNDimArray"], [241, 4, 1, "", "derive_by_array"], [242, 0, 0, "-", "expressions"], [241, 4, 1, "", "permutedims"], [241, 4, 1, "", "tensorcontraction"], [241, 4, 1, "", "tensordiagonal"], [241, 4, 1, "", "tensorproduct"]], "sympy.tensor.array.expressions": [[242, 1, 1, "", "ArrayContraction"], [242, 1, 1, "", "ArrayDiagonal"], [242, 1, 1, "", "ArrayTensorProduct"], [242, 1, 1, "", "PermuteDims"]], "sympy.tensor.index_methods": [[244, 4, 1, "", "get_contraction_structure"], [244, 4, 1, "", "get_indices"]], "sympy.tensor.indexed": [[245, 1, 1, "", "Idx"], [245, 1, 1, "", "Indexed"], [245, 1, 1, "", "IndexedBase"]], "sympy.tensor.indexed.Idx": [[245, 3, 1, "", "label"], [245, 3, 1, "", "lower"], [245, 3, 1, "", "upper"]], "sympy.tensor.indexed.Indexed": [[245, 3, 1, "", "base"], [245, 3, 1, "", "indices"], [245, 3, 1, "", "ranges"], [245, 3, 1, "", "rank"], [245, 3, 1, "", "shape"]], "sympy.tensor.indexed.IndexedBase": [[245, 3, 1, "", "label"], [245, 3, 1, "", "offset"], [245, 3, 1, "", "shape"], [245, 3, 1, "", "strides"]], "sympy.tensor.tensor": [[246, 1, 1, "", "TensAdd"], [246, 1, 1, "", "TensExpr"], [246, 1, 1, "", "TensMul"], [246, 1, 1, "", "TensorHead"], [246, 1, 1, "", "TensorIndex"], [246, 1, 1, "", "TensorIndexType"], [246, 1, 1, "", "TensorSymmetry"], [246, 1, 1, "", "TensorType"], [246, 1, 1, "", "_TensorManager"], [246, 4, 1, "", "canon_bp"], [246, 4, 1, "", "riemann_cyclic"], [246, 4, 1, "", "riemann_cyclic_replace"], [246, 4, 1, "", "tensor_heads"], [246, 4, 1, "", "tensorsymmetry"]], "sympy.tensor.tensor.TensAdd": [[246, 2, 1, "", "canon_bp"], [246, 2, 1, "", "contract_metric"]], "sympy.tensor.tensor.TensExpr": [[246, 2, 1, "", "get_matrix"], [246, 2, 1, "", "replace_with_arrays"]], "sympy.tensor.tensor.TensMul": [[246, 2, 1, "", "canon_bp"], [246, 2, 1, "", "contract_metric"], [246, 2, 1, "", "get_free_indices"], [246, 2, 1, "", "get_indices"], [246, 2, 1, "", "perm2tensor"], [246, 2, 1, "", "sorted_components"], [246, 2, 1, "", "split"]], "sympy.tensor.tensor.TensorHead": [[246, 2, 1, "", "commutes_with"]], "sympy.tensor.tensor.TensorSymmetry": [[246, 2, 1, "", "direct_product"], [246, 2, 1, "", "fully_symmetric"], [246, 2, 1, "", "no_symmetry"], [246, 2, 1, "", "riemann"]], "sympy.tensor.tensor._TensorManager": [[246, 2, 1, "", "clear"], [246, 2, 1, "", "comm_i2symbol"], [246, 2, 1, "", "comm_symbols2i"], [246, 2, 1, "", "get_comm"], [246, 2, 1, "", "set_comm"], [246, 2, 1, "", "set_comms"]], "sympy.tensor.toperators": [[247, 1, 1, "", "PartialDerivative"]], "sympy.testing": [[249, 0, 0, "-", "pytest"], [250, 0, 0, "-", "randtest"], [251, 0, 0, "-", "runtests"]], "sympy.testing.pytest": [[249, 4, 1, "", "SKIP"], [249, 4, 1, "", "nocache_fail"], [249, 4, 1, "", "raises"], [249, 4, 1, "", "skip_under_pyodide"], [249, 4, 1, "", "warns"], [249, 4, 1, "", "warns_deprecated_sympy"]], "sympy.testing.runtests": [[251, 1, 1, "", "PyTestReporter"], [251, 1, 1, "", "Reporter"], [251, 1, 1, "", "SymPyDocTestFinder"], [251, 1, 1, "", "SymPyDocTestRunner"], [251, 1, 1, "", "SymPyOutputChecker"], [251, 1, 1, "", "SymPyTestResults"], [251, 4, 1, "", "convert_to_native_paths"], [251, 4, 1, "", "doctest"], [251, 4, 1, "", "get_sympy_dir"], [251, 4, 1, "", "raise_on_deprecated"], [251, 4, 1, "", "run_all_tests"], [251, 4, 1, "", "run_in_subprocess_with_hash_randomization"], [251, 4, 1, "", "split_list"], [251, 4, 1, "", "sympytestfile"], [251, 4, 1, "", "test"]], "sympy.testing.runtests.PyTestReporter": [[251, 2, 1, "", "write"]], "sympy.testing.runtests.SymPyDocTestRunner": [[251, 2, 1, "", "run"]], "sympy.testing.runtests.SymPyOutputChecker": [[251, 2, 1, "", "check_output"]], "sympy.testing.runtests.SymPyTestResults": [[251, 5, 1, "", "attempted"], [251, 5, 1, "", "failed"]], "sympy.utilities": [[252, 0, 0, "-", "autowrap"], [253, 0, 0, "-", "codegen"], [254, 0, 0, "-", "decorator"], [255, 0, 0, "-", "enumerative"], [256, 0, 0, "-", "exceptions"], [258, 0, 0, "-", "iterables"], [259, 0, 0, "-", "lambdify"], [260, 0, 0, "-", "memoization"], [261, 0, 0, "-", "misc"], [262, 0, 0, "-", "source"], [263, 0, 0, "-", "timeutils"]], "sympy.utilities.autowrap": [[252, 1, 1, "", "CodeWrapper"], [252, 1, 1, "", "CythonCodeWrapper"], [252, 1, 1, "", "DummyWrapper"], [252, 1, 1, "", "F2PyCodeWrapper"], [252, 1, 1, "", "UfuncifyCodeWrapper"], [252, 4, 1, "", "autowrap"], [252, 4, 1, "", "binary_function"], [252, 4, 1, "", "ufuncify"]], "sympy.utilities.autowrap.CythonCodeWrapper": [[252, 2, 1, "", "dump_pyx"]], "sympy.utilities.autowrap.UfuncifyCodeWrapper": [[252, 2, 1, "", "dump_c"]], "sympy.utilities.codegen": [[253, 1, 1, "", "Argument"], [253, 1, 1, "", "CCodeGen"], [253, 1, 1, "", "CodeGen"], [253, 1, 1, "", "DataType"], [253, 1, 1, "", "FCodeGen"], [253, 1, 1, "", "JuliaCodeGen"], [253, 1, 1, "", "OctaveCodeGen"], [253, 1, 1, "", "OutputArgument"], [253, 1, 1, "", "Result"], [253, 1, 1, "", "Routine"], [253, 1, 1, "", "RustCodeGen"], [253, 4, 1, "", "codegen"], [253, 4, 1, "", "get_default_datatype"], [253, 4, 1, "", "make_routine"]], "sympy.utilities.codegen.CCodeGen": [[253, 2, 1, "", "dump_c"], [253, 2, 1, "", "dump_h"], [253, 2, 1, "", "get_prototype"]], "sympy.utilities.codegen.CodeGen": [[253, 2, 1, "", "dump_code"], [253, 2, 1, "", "routine"], [253, 2, 1, "", "write"]], "sympy.utilities.codegen.FCodeGen": [[253, 2, 1, "", "dump_f95"], [253, 2, 1, "", "dump_h"], [253, 2, 1, "", "get_interface"]], "sympy.utilities.codegen.JuliaCodeGen": [[253, 2, 1, "", "dump_jl"], [253, 2, 1, "", "routine"]], "sympy.utilities.codegen.OctaveCodeGen": [[253, 2, 1, "", "dump_m"], [253, 2, 1, "", "routine"]], "sympy.utilities.codegen.Routine": [[253, 3, 1, "", "result_variables"], [253, 3, 1, "", "variables"]], "sympy.utilities.codegen.RustCodeGen": [[253, 2, 1, "", "dump_rs"], [253, 2, 1, "", "get_prototype"], [253, 2, 1, "", "routine"]], "sympy.utilities.decorator": [[254, 4, 1, "", "conserve_mpmath_dps"], [254, 4, 1, "", "deprecated"], [254, 4, 1, "", "doctest_depends_on"], [254, 4, 1, "", "memoize_property"], [254, 1, 1, "", "no_attrs_in_subclass"], [254, 4, 1, "", "public"], [254, 4, 1, "", "threaded"], [254, 4, 1, "", "threaded_factory"], [254, 4, 1, "", "xthreaded"]], "sympy.utilities.enumerative": [[255, 1, 1, "", "MultisetPartitionTraverser"], [255, 4, 1, "", "factoring_visitor"], [255, 4, 1, "", "list_visitor"], [255, 4, 1, "", "multiset_partitions_taocp"]], "sympy.utilities.enumerative.MultisetPartitionTraverser": [[255, 2, 1, "", "count_partitions"], [255, 2, 1, "", "enum_all"], [255, 2, 1, "", "enum_large"], [255, 2, 1, "", "enum_range"], [255, 2, 1, "", "enum_small"]], "sympy.utilities.exceptions": [[256, 7, 1, "", "SymPyDeprecationWarning"], [256, 4, 1, "", "ignore_warnings"], [256, 4, 1, "", "sympy_deprecation_warning"]], "sympy.utilities.iterables": [[258, 1, 1, "", "NotIterable"], [258, 4, 1, "", "binary_partitions"], [258, 4, 1, "", "bracelets"], [258, 4, 1, "", "capture"], [258, 4, 1, "", "common_prefix"], [258, 4, 1, "", "common_suffix"], [258, 4, 1, "", "connected_components"], [258, 4, 1, "", "dict_merge"], [258, 4, 1, "", "filter_symbols"], [258, 4, 1, "", "flatten"], [258, 4, 1, "", "generate_bell"], [258, 4, 1, "", "generate_derangements"], [258, 4, 1, "", "generate_involutions"], [258, 4, 1, "", "generate_oriented_forest"], [258, 4, 1, "", "group"], [258, 4, 1, "", "has_dups"], [258, 4, 1, "", "has_variety"], [258, 4, 1, "", "ibin"], [258, 4, 1, "", "iproduct"], [258, 4, 1, "", "is_palindromic"], [258, 4, 1, "", "is_sequence"], [258, 4, 1, "", "iterable"], [258, 4, 1, "", "kbins"], [258, 4, 1, "", "least_rotation"], [258, 4, 1, "", "minlex"], [258, 4, 1, "", "multiset"], [258, 4, 1, "", "multiset_combinations"], [258, 4, 1, "", "multiset_derangements"], [258, 4, 1, "", "multiset_partitions"], [258, 4, 1, "", "multiset_permutations"], [258, 4, 1, "", "necklaces"], [258, 4, 1, "", "numbered_symbols"], [258, 4, 1, "", "ordered_partitions"], [258, 4, 1, "", "partitions"], [258, 4, 1, "", "permute_signs"], [258, 4, 1, "", "postfixes"], [258, 4, 1, "", "prefixes"], [258, 4, 1, "", "random_derangement"], [258, 4, 1, "", "reshape"], [258, 4, 1, "", "rotate_left"], [258, 4, 1, "", "rotate_right"], [258, 4, 1, "", "rotations"], [258, 4, 1, "", "roundrobin"], [258, 4, 1, "", "runs"], [258, 4, 1, "", "sequence_partitions"], [258, 4, 1, "", "sequence_partitions_empty"], [258, 4, 1, "", "sift"], [258, 4, 1, "", "signed_permutations"], [258, 4, 1, "", "strongly_connected_components"], [258, 4, 1, "", "subsets"], [258, 4, 1, "", "take"], [258, 4, 1, "", "topological_sort"], [258, 4, 1, "", "unflatten"], [258, 4, 1, "", "uniq"], [258, 4, 1, "", "variations"]], "sympy.utilities.lambdify": [[259, 4, 1, "", "implemented_function"], [259, 4, 1, "", "lambdastr"], [259, 4, 1, "", "lambdify"]], "sympy.utilities.memoization": [[260, 4, 1, "", "assoc_recurrence_memo"], [260, 4, 1, "", "recurrence_memo"]], "sympy.utilities.misc": [[261, 4, 1, "", "as_int"], [261, 4, 1, "", "debug"], [261, 4, 1, "", "debug_decorator"], [261, 4, 1, "", "debugf"], [261, 4, 1, "", "filldedent"], [261, 4, 1, "", "find_executable"], [261, 4, 1, "", "func_name"], [261, 4, 1, "", "ordinal"], [261, 4, 1, "", "rawlines"], [261, 4, 1, "", "replace"], [261, 4, 1, "", "strlines"], [261, 4, 1, "", "translate"]], "sympy.utilities.source": [[262, 4, 1, "", "get_class"], [262, 4, 1, "", "get_mod_func"]], "sympy.utilities.timeutils": [[263, 4, 1, "", "timed"]], "sympy.vector": [[267, 4, 1, "", "curl"], [267, 4, 1, "", "divergence"], [267, 4, 1, "", "express"], [267, 4, 1, "", "gradient"], [267, 4, 1, "", "is_conservative"], [267, 4, 1, "", "is_solenoidal"], [267, 4, 1, "", "matrix_to_vector"], [267, 4, 1, "", "scalar_potential"], [267, 4, 1, "", "scalar_potential_difference"]], "sympy.vector.coordsysrect": [[264, 1, 1, "", "CoordSys3D"]], "sympy.vector.coordsysrect.CoordSys3D": [[264, 2, 1, "", "__init__"], [264, 2, 1, "", "create_new"], [264, 2, 1, "", "locate_new"], [264, 2, 1, "", "orient_new"], [264, 2, 1, "", "orient_new_axis"], [264, 2, 1, "", "orient_new_body"], [264, 2, 1, "", "orient_new_quaternion"], [264, 2, 1, "", "orient_new_space"], [264, 2, 1, "", "position_wrt"], [264, 2, 1, "", "rotation_matrix"], [264, 2, 1, "", "scalar_map"]], "sympy.vector.deloperator": [[264, 1, 1, "", "Del"]], "sympy.vector.deloperator.Del": [[264, 2, 1, "", "cross"], [264, 2, 1, "", "dot"], [264, 2, 1, "", "gradient"]], "sympy.vector.dyadic": [[264, 1, 1, "", "Dyadic"]], "sympy.vector.dyadic.Dyadic": [[264, 3, 1, "", "components"], [264, 2, 1, "", "cross"], [264, 2, 1, "", "dot"], [264, 2, 1, "", "to_matrix"]], "sympy.vector.implicitregion": [[264, 1, 1, "", "ImplicitRegion"]], "sympy.vector.implicitregion.ImplicitRegion": [[264, 2, 1, "", "multiplicity"], [264, 2, 1, "", "rational_parametrization"], [264, 2, 1, "", "regular_point"], [264, 2, 1, "", "singular_points"]], "sympy.vector.integrals": [[264, 1, 1, "", "ParametricIntegral"], [267, 4, 1, "", "vector_integrate"]], "sympy.vector.orienters": [[266, 1, 1, "", "AxisOrienter"], [266, 1, 1, "", "BodyOrienter"], [266, 1, 1, "", "Orienter"], [266, 1, 1, "", "QuaternionOrienter"], [266, 1, 1, "", "SpaceOrienter"]], "sympy.vector.orienters.AxisOrienter": [[266, 2, 1, "", "__init__"], [266, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.BodyOrienter": [[266, 2, 1, "", "__init__"]], "sympy.vector.orienters.Orienter": [[266, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.QuaternionOrienter": [[266, 2, 1, "", "__init__"]], "sympy.vector.orienters.SpaceOrienter": [[266, 2, 1, "", "__init__"]], "sympy.vector.parametricregion": [[264, 1, 1, "", "ParametricRegion"]], "sympy.vector.vector": [[264, 1, 1, "", "Vector"]], "sympy.vector.vector.Vector": [[264, 3, 1, "", "components"], [264, 2, 1, "", "cross"], [264, 2, 1, "", "dot"], [264, 2, 1, "", "magnitude"], [264, 2, 1, "", "normalize"], [264, 2, 1, "", "outer"], [264, 2, 1, "", "projection"], [264, 2, 1, "", "separate"], [264, 2, 1, "", "to_matrix"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute", "6": "py:data", "7": "py:exception"}, "terms": {"": [0, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 28, 30, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 107, 110, 111, 113, 115, 116, 117, 118, 120, 121, 124, 127, 128, 129, 130, 132, 134, 135, 136, 137, 139, 141, 143, 145, 147, 148, 150, 151, 153, 154, 155, 157, 158, 161, 162, 163, 169, 170, 172, 174, 176, 177, 180, 184, 185, 187, 188, 190, 193, 194, 195, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 240, 246, 251, 252, 253, 254, 255, 256, 258, 259, 261, 264, 266, 270, 271, 273, 276, 281, 282, 284, 285, 286, 288, 289, 290, 291, 292, 296, 297, 298, 301, 304, 307], "0": [3, 4, 11, 12, 13, 14, 15, 16, 18, 22, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 39, 41, 42, 43, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 141, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 162, 163, 164, 166, 169, 174, 175, 176, 179, 184, 185, 186, 187, 188, 189, 190, 191, 195, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 249, 251, 252, 254, 255, 256, 258, 259, 260, 264, 266, 267, 268, 269, 270, 271, 274, 285, 286, 288, 290, 291, 292, 295, 296, 297, 298, 301, 302, 303, 305, 306, 308, 310], "00": [14, 16, 88, 128, 174, 184, 258], "000": [72, 92, 115, 118, 184, 258], "0000": 72, "000000000000": 16, "0000000000000": [134, 163], "00000000000000": [14, 54, 88, 92, 191, 220, 240, 286], "00000000000000e": 88, "00000000260573": 141, "00000000e": 14, "0000000154172579002800188521596734869": 96, "00001": 184, "00002480019791932209313156167176797577821140084216297395518482071448": 205, "0001": [72, 92], "00010": 72, "000100000000000000": 88, "00011001011": 258, "00011010011": 258, "0001111011": [118, 258], "0001953125": 135, "00026102": 115, "000507214304613640": 129, "000507214304614": 129, "0005241": 298, "00053": 159, "00054335718671383": 137, "00070025": 110, "001": [72, 92, 118, 159, 258], "0010": 72, "00100": 88, "00100000000000000": 159, "00101413072159615": 159, "00109772": 298, "0011": [72, 83], "0011276": 298, "00138541666666667": 135, "00141": 80, "00152436": 298, "00210803120913829": 159, "0023152": 115, "003": 92, "0033": 163, "00333333": 298, "004": 214, "00447086247086247": 137, "00453": 115, "004707066000264604": 69, "006": 124, "006046440489058766": 141, "0063339426292673": 96, "006895004219221134484332976156744208248842039317638217822322799675": 205, "00708": 301, "0075": [18, 298], "00756": 301, "00906": 115, "00996712": 298, "01": [22, 80, 88, 92, 184, 214, 232, 258], "010": [72, 118, 258], "0100": 72, "0101": [72, 184], "010389": 115, "010399": 115, "011": [72, 118, 184, 258], "0110": 72, "0111": [72, 184], "01197": 128, "012": 88, "012297": 92, "012345": 80, "01375162659678": 110, "014": 153, "01480": 233, "014895573969924817587": 96, "015": [18, 131], "0150588346410601": 18, "016": 229, "0166133211401": 132, "0170706725844998": 137, "01743115": 298, "0174533": 22, "01747268": 240, "0175000000000000": 87, "0186573603637741": [18, 132], "0189": 91, "0190": 80, "0196": 258, "02": [214, 233, 301], "02005": 163, "020599914256786": 141, "0205999155219505": 141, "020884341620842555705": 93, "0225": [18, 298], "023844582399907256": 141, "025413462339411542": 141, "02671848900111377452242355235388489324562": 96, "0276302": 61, "02841027019385211055596446229489549303819644288109756659334461284756482337867831": 92, "0299": [18, 132], "02_03_40_42": 91, "03": [205, 240, 298], "034": 89, "035581932165858e": 141, "035999037": 145, "035999037000": 145, "0365": 216, "04": [11, 124, 240], "04166666666667e": 135, "042894276802320226": 141, "045": 214, "04516378011749278484458888919": 96, "0458952018652595": 18, "0472": 115, "0484508722725343": 141, "04923615": 298, "05": [18, 34, 79, 110, 141, 202, 205], "050584": 115, "0509758447494279": 57, "0519737844841": 132, "052": 238, "05426074": 129, "05426079": 129, "05433146": 129, "05433151": 129, "05440211": 129, "054525080242173562897": 96, "05457162000000e": 172, "05457162d": 69, "05555555555555555555555555555555555555555555555555555555555555555": 205, "0555556377366884": 145, "0555558020932949": 145, "0555562951740285": 145, "0583518": 128, "05892": 301, "06": [18, 82, 88, 132, 205, 240, 301], "060": [18, 131], "0603": 301, "0633": [18, 132], "0652795784357498247001125598": 96, "06616480200395854": 141, "06743": [93, 96, 216], "06e": 159, "07": 113, "08": [57, 124, 216, 301], "08333333333333e": 135, "08346052231061726610939702133": 96, "083954101": 48, "08395410131771": 48, "083c01": 169, "084489": 115, "087": 214, "0874989834394464": 285, "08895483066e": 141, "09": [88, 141, 205, 214], "0904": 124, "0909": 258, "091999668350375232456": 92, "09326036123": 141, "0935077": 67, "095": 96, "0973": 115, "099419756723640344491": 96, "099609": 88, "0998334166468": 285, "0_": 27, "0_0": 111, "0_1": 111, "0d0": [69, 220], "0e": [14, 69, 88], "0f1": 236, "0i": 61, "0j": [61, 210], "0k": 61, "0l": [69, 220], "0o121": 128, "0o171": 128, "0right": 239, "0th": [67, 80, 89, 96], "0x": [14, 190], "0x10e997790": 12, "0x12": 116, "0x324": 128, "0x3243f6a8885a30": 128, "0xfa": 128, "1": [2, 3, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 21, 23, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 141, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 169, 172, 173, 174, 175, 176, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 264, 267, 268, 269, 271, 274, 281, 285, 286, 288, 290, 291, 292, 295, 296, 297, 298, 301, 302, 303, 305, 306, 307, 308, 309, 310], "10": [0, 2, 4, 12, 14, 16, 17, 18, 22, 30, 43, 46, 48, 54, 55, 57, 59, 61, 67, 69, 74, 77, 79, 80, 84, 86, 87, 88, 89, 91, 92, 93, 94, 96, 101, 102, 104, 105, 113, 115, 116, 118, 120, 124, 125, 128, 129, 130, 131, 132, 134, 135, 137, 139, 141, 143, 144, 149, 153, 154, 159, 163, 174, 184, 185, 196, 199, 200, 201, 203, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 223, 226, 227, 228, 229, 232, 233, 236, 239, 240, 241, 250, 251, 256, 258, 259, 261, 264, 267, 285, 292, 296, 298, 301, 302], "100": [12, 16, 43, 46, 69, 72, 77, 87, 88, 89, 92, 96, 104, 111, 118, 124, 128, 135, 137, 206, 210, 215, 217, 219, 220, 227, 238, 239, 258, 285], "1000": [16, 30, 69, 72, 88, 89, 92, 120, 128, 194, 195, 196, 197, 205, 219, 220, 229, 259], "10000": [69, 92, 128, 129, 135, 238], "100000": [92, 128, 141], "1000000": [88, 128], "10000000": [92, 216], "1000000000": 92, "100000000000000": [92, 134], "10000000000000000": 14, "100000000000000000000": 88, "100000000000000000000000000000": 92, "100000000000000005551115123126": 92, "10000000001": 128, "1000001": 93, "1001": 72, "1002": 240, "100500": 98, "100644": 11, "1007": [74, 89, 153], "1009": 128, "100x": 13, "101": [72, 96, 118, 128, 143, 184, 233, 258], "1010": [72, 88], "1010203040506070809": 128, "1010381": 128, "1011": 72, "1012": 145, "10120": 292, "101456353": 115, "1016": [80, 124, 214, 258], "102": [79, 124], "1024": [79, 220, 240], "10279": 292, "103": [0, 7, 79], "1031": 89, "103993": 128, "104": 92, "10431": 128, "104348": 128, "104755": 216, "105": [96, 128, 216, 233], "10517083333333": 110, "106": 128, "107": [74, 214], "10713341e": 14, "1072": 124, "1074": 124, "10793": 135, "108": [86, 136], "108208000e3": 193, "108270": 98, "10877": 128, "109": [128, 214, 233], "1090": [67, 128, 216, 233], "1092": 216, "10kn": 135, "10n": 129, "10pt": [116, 204, 220], "10sin": 130, "10th": 128, "11": [4, 17, 18, 22, 32, 41, 63, 64, 69, 74, 79, 82, 84, 86, 88, 89, 91, 93, 96, 100, 101, 102, 104, 105, 113, 115, 118, 119, 124, 128, 130, 132, 143, 174, 184, 205, 206, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 227, 229, 233, 236, 238, 239, 240, 241, 252, 258, 268, 301], "110": [72, 118, 236, 238, 252, 258], "1100": 72, "1101": 72, "11010011000": 258, "1101111000": [118, 258], "1103": 92, "110896": 128, "111": [72, 91, 93, 98, 118, 124, 128, 258], "1110": 72, "1111": 72, "1111339": 128, "11163337": 240, "1118": 128, "112": [128, 213, 217], "1121416371": 69, "113": [92, 128, 233], "11337": 115, "1137796": 233, "113820": 128, "114": [79, 93, 128], "1145": [87, 209, 211, 214, 232], "1145768": 232, "1145809": 232, "115": 96, "1159": 128, "11590": 128, "115975": 93, "116": [205, 214], "1169": 229, "117": [79, 96], "1177": 229, "1178": 128, "1179": 214, "11895": 115, "1193": 89, "1197": 214, "11_0_0_intro": 240, "11_2_6_stationary_and_limiting_distribut": 240, "11_4_0_brownian_motion_wiener_process": 240, "12": [4, 12, 14, 16, 17, 18, 32, 43, 46, 48, 61, 67, 68, 69, 74, 76, 77, 79, 80, 81, 84, 86, 87, 88, 89, 91, 93, 94, 96, 98, 101, 102, 104, 113, 115, 118, 124, 125, 128, 132, 135, 136, 137, 141, 143, 145, 151, 187, 199, 205, 208, 209, 210, 213, 215, 216, 217, 219, 220, 226, 228, 229, 233, 235, 236, 240, 241, 251, 252, 255, 258, 267, 292, 296, 298, 301, 302, 303], "120": [12, 39, 87, 88, 93, 94, 110, 128, 135, 136, 217, 219, 220, 222, 236, 286], "1200": 205, "12000": 135, "1202": 302, "121": [88, 93, 128, 143, 199, 238], "1211": 91, "1215": 214, "12166980856813935": 141, "122": [89, 91, 96], "1224": [93, 128], "1225": 124, "12288": 274, "122921448543883967430908091422761898618349713604256384403202282756086473494959648313841": 128, "123": [11, 88, 93, 98, 118, 151, 187, 199, 258, 264, 266], "1231": 214, "1231026625769": 128, "1233": 258, "1234": [11, 128, 233], "12345": [11, 69, 92], "123456": [69, 88, 128], "123456789": 88, "123456789012345646": 69, "123456789012345649": 69, "12345678901234567890": 16, "12345678910111213141516": 128, "123_456": 88, "124": [214, 285], "12438240242516": 132, "12465": 216, "12499999999568202": 141, "12499999999661349": 141, "124a": 237, "125": [88, 92, 115, 128, 211, 226, 233], "12500": 88, "1250000": 161, "12500000000000000000": 88, "125000000000000000000000000000": 92, "125000416028342": 145, "125002080189006": 145, "12524": 13, "125e": 135, "126": [124, 128, 219], "127": [89, 128], "12757857962640e": 54, "127750": 255, "128": [79, 88, 93, 96, 98, 128, 214, 220], "1283": 91, "1294585930293": 233, "1296": 82, "1296959": 96, "1299709": 128, "12e": 88, "12kn": 136, "12mm": 68, "13": [4, 12, 17, 22, 32, 61, 69, 77, 79, 84, 88, 89, 91, 93, 96, 100, 101, 102, 103, 113, 118, 124, 128, 132, 135, 136, 137, 141, 143, 148, 206, 209, 213, 215, 216, 217, 219, 220, 226, 233, 235, 237, 238, 240, 241, 252, 258, 274], "130": 98, "130198866629986772369127970337": 92, "1307": [11, 57], "131": [96, 199], "131072": 216, "13131491": 258, "132": [86, 93, 199], "1336": 92, "134": 124, "135": 128, "1350": 135, "136": [88, 124], "137": [93, 124, 145], "1371": 61, "1373651": 128, "13750": 135, "138": 128, "1381": 89, "1385": [93, 216], "139": 213, "1391": 128, "13y": 233, "14": [4, 17, 22, 46, 48, 69, 77, 79, 83, 84, 86, 88, 89, 93, 94, 96, 113, 124, 125, 128, 129, 135, 141, 205, 206, 209, 211, 213, 214, 215, 216, 217, 219, 220, 229, 232, 233, 236, 238, 240, 241, 286], "140": 128, "1401": 216, "1405": 301, "1407633717262338957430697921446883": 128, "141": 145, "14112001": 285, "1415": 92, "1415085799262523": 141, "14155265358979": 141, "14159": 220, "14159265358979": [92, 96, 238], "141592653589793": [14, 88, 92], "141592653589793238462643383279502884197169399375105820974944592307816406286208": 92, "141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117068": 285, "14159265358979323846264338328": 92, "141592653589793238462643d0": 220, "1415926535897932d0": 220, "14159265358979d0": 69, "141592654": 88, "1416": 205, "1417": [128, 233], "142": 214, "14219": 91, "1428": 205, "14285278320312500000": 16, "142857": 16, "142857142857143": 16, "143": [16, 153, 169, 205], "1430": 93, "14358881": 110, "144": [48, 57, 93, 115, 205, 209], "1441": 233, "147": 102, "14751999969868": 57, "1482": 128, "1484": 46, "149": [18, 93, 128, 132], "1495": [18, 132], "149896229": [161, 164, 194], "15": [4, 14, 16, 43, 67, 74, 77, 79, 84, 86, 88, 89, 91, 92, 93, 96, 98, 101, 102, 104, 105, 113, 115, 118, 119, 124, 125, 128, 135, 148, 163, 205, 206, 208, 209, 210, 211, 215, 216, 217, 219, 220, 222, 226, 227, 229, 232, 233, 237, 238, 239, 240, 241, 258, 285, 286, 291, 292, 298], "150": [124, 143, 233], "15033720e": 14, "151": 77, "15141": 292, "1515151515151": 163, "15154262241479": 128, "15174161": 298, "152": [93, 128, 213], "1520": 135, "1521": 93, "153": 219, "15416": 13, "15423094826093": 128, "15494982830181068512": [4, 96], "155": 216, "15502": 91, "1551": 124, "1553": 89, "15555": 91, "15605338197184": 96, "15625": [135, 197], "156675": 93, "157": [115, 128, 136, 214], "1570": 233, "15707": 115, "1577": 89, "158": [124, 136], "15x15": 209, "16": [4, 12, 14, 18, 33, 46, 48, 57, 61, 67, 69, 71, 79, 80, 83, 87, 88, 89, 93, 96, 97, 98, 102, 113, 115, 118, 124, 125, 127, 128, 135, 136, 208, 209, 210, 213, 214, 215, 216, 219, 220, 226, 228, 229, 230, 233, 240, 241, 258, 264, 273, 292, 298], "160": [16, 135, 214], "1600": [135, 136], "16000": 135, "160249952256379": 217, "161": [89, 153], "16109": 128, "162": [18, 132], "1633833": 258, "1644": 46, "165": [216, 240, 258], "1666666666666666666666666666666666666666666666666666666666666667": 205, "166666666666667": 217, "16667": 115, "167": 124, "167303978": 48, "16730397826142": 48, "16840434497100886801e": 54, "16843009": 128, "1684e": 238, "169": 216, "1692": 124, "17": [4, 18, 54, 55, 57, 77, 79, 80, 88, 89, 92, 93, 94, 98, 101, 104, 113, 124, 128, 143, 210, 211, 213, 215, 216, 219, 220, 227, 229, 233, 236, 241, 255, 290], "170": [101, 240], "170748906965121e": 141, "172": 135, "172870711": 96, "1729": 233, "175": [98, 124, 213, 214], "176": 236, "1764": 128, "1768": 93, "17737": 128, "17749": 13, "17805383034794561964694160130": 96, "1785690389": 11, "1786": 128, "1787": 128, "17881": 13, "179143454621291692285822705344": 96, "18": [4, 18, 54, 71, 79, 80, 88, 91, 93, 96, 98, 101, 104, 119, 124, 128, 135, 136, 141, 143, 145, 200, 205, 209, 213, 214, 219, 220, 228, 229, 233, 236, 238, 239, 240, 241, 267], "180": [36, 104, 214], "1800": [61, 89], "18014398509481984": [88, 232], "18056": 13, "181": [57, 216], "181232444469875": 48, "1812324445": 48, "1816": 115, "1827": 264, "1829": 128, "184": [67, 236], "18466446988997098217": 54, "1847": 215, "18482169793536e": 48, "18525034196069722536": 96, "187": [195, 214], "1870": 91, "1875": 135, "18844": 13, "1889": 115, "18891601900395472": 69, "189": 213, "18971": 128, "19": [4, 46, 54, 79, 88, 91, 96, 98, 101, 104, 124, 128, 130, 132, 135, 137, 205, 211, 215, 216, 219, 229, 233, 235, 238, 252, 285], "1901": 89, "1901263495547205e": 141, "19016": 115, "190347": 214, "190413": 214, "19093197": 96, "191": [70, 239], "1914": 124, "192": 117, "1920": 89, "1921": 128, "19287309935246": [54, 238], "192873099352460791205211": 54, "1929": 89, "193": [46, 124, 141], "1931127624": 11, "19351": 91, "1937664": 213, "19404": 91, "1944": 207, "195": 93, "1952": 195, "1953": [96, 215], "1954": 115, "19548": 292, "1955": 29, "1957": 205, "1958": [128, 205], "1959": 205, "1962": 128, "1963": 236, "1965": [4, 96, 124], "1967": [89, 214], "1968": 144, "1969": [4, 89, 96, 113, 214, 230], "197": 93, "1970": [68, 124], "1971": [214, 236], "1972": 128, "1973": [34, 70, 89, 202], "1974": 222, "1976": [211, 214], "1977": 195, "1978": [72, 79, 195, 214], "1979": [105, 195], "198": 124, "1980": [128, 258], "1981": [87, 214], "1982": [115, 205], "1983": [29, 255], "1985": [29, 115, 152, 199, 264], "1988": [67, 169, 187, 213, 214], "19882": 13, "1989": [4, 214, 238], "199": 70, "1990": [80, 113, 230, 264], "1991": [70, 214], "1992": [128, 214, 238, 258], "19923894": 298, "1993": [88, 214], "1994": [80, 213, 214, 216], "1995": [93, 214, 232, 238], "1996": [205, 214, 230, 238, 264], "1997": [87, 113, 128, 214, 230], "1998": [214, 233], "1999": [80, 124, 214, 219, 236], "1_": 88, "1_0": 111, "1_1": 111, "1_2": 14, "1cm": 68, "1d": [18, 166, 168, 181, 199, 245], "1d0": 69, "1e": [14, 69, 88, 92, 124, 141, 159, 216, 238], "1e11": 128, "1e16": 88, "1e20": 88, "1e23": [128, 261], "1e3": 128, "1e5": 69, "1f1": 236, "1g": 69, "1j": [141, 143, 210], "1kn": 135, "1m": 136, "1st": [46, 67, 80, 128, 143, 236, 237, 261, 286], "1st_exact": [4, 12, 236], "1st_exact_integr": 236, "1st_homogeneous_coeff": 236, "1st_homogeneous_coeff_best": 236, "1st_homogeneous_coeff_subs_dep_div_indep": 236, "1st_homogeneous_coeff_subs_dep_div_indep_integr": 236, "1st_homogeneous_coeff_subs_indep_div_dep": 236, "1st_homogeneous_coeff_subs_indep_div_dep_integr": 236, "1st_linear": 236, "1st_linear_constant_coeff_homogen": 237, "1st_linear_constant_coeff_integr": 237, "1st_linear_integr": 236, "1st_power_seri": 236, "1st_rational_riccati": 236, "1u": 129, "1x1": [127, 240], "1x3": 124, "2": [5, 7, 11, 12, 13, 14, 15, 16, 18, 21, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 56, 57, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 127, 128, 130, 131, 132, 134, 135, 137, 139, 141, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 249, 251, 252, 253, 254, 255, 258, 259, 260, 261, 264, 266, 267, 268, 269, 270, 271, 273, 274, 285, 286, 288, 290, 291, 292, 295, 296, 297, 298, 301, 302, 303, 305, 306, 308, 309, 310], "20": [4, 14, 16, 46, 54, 57, 65, 69, 77, 79, 80, 87, 88, 89, 92, 93, 96, 104, 105, 115, 124, 128, 135, 136, 137, 139, 143, 154, 195, 197, 205, 206, 209, 210, 214, 215, 216, 217, 219, 220, 226, 227, 228, 229, 232, 233, 236, 239, 240, 264, 286], "200": [89, 124, 128, 135, 141, 264], "2000": [69, 74, 115, 128, 214], "20000": 128, "20000000": [92, 216], "20000000000000": 16, "2000000000000002": 16, "2000061035": 16, "2001": [80, 128, 214], "2002": [91, 207, 214, 217], "2003": [69, 205, 214, 220, 233], "20033": 88, "2004": [88, 96, 214, 233], "2005": [70, 78, 115, 128, 216], "2006": [89, 229], "2007": [29, 128, 255], "200710": 12, "20071116100808": 89, "20078": 13, "2008": [74, 124, 205, 214, 216, 220], "2009": [93, 96, 128, 205, 216], "2010": [82, 237, 258], "2011": [34, 72, 80, 113, 124, 128, 202, 229], "2012": [88, 214, 302], "2013": [90, 100, 124, 214, 294], "2014": [7, 239, 240], "20140123": 115, "2015": [115, 153, 239], "20150716201437": 128, "2016": [7, 18, 131, 132, 134, 298], "20160": 209, "20160313023044": 258, "20160323033111": 233, "20160323033128": 233, "2017": [0, 7, 205], "20170202003812": [93, 128], "20171008094331": 80, "20180413004012": 128, "2020": [98, 169], "20200118141346": 115, "20200204081320": 240, "20200224064753": 72, "20200307091449": 292, "20200628222206": 240, "20200628222212": 240, "202008": 12, "20201021115213": 233, "20201128173312": 96, "20201230182007": 240, "20205690315959": 96, "20209": 13, "20210507012732": 93, "20210508104430": 240, "20210511015444": 105, "20210806201615": 232, "2022": 205, "20220207032113": 240, "20221029115428": 209, "2026366": 240, "202916782076162456022877024859": 128, "203": [77, 93, 209], "2048": [89, 128, 220], "205": [93, 113, 230], "2057": 91, "206": [211, 216], "20621": 13, "207": 233, "2071025955": 137, "20759": 13, "20780": 13, "2079": 216, "208": [92, 216], "20833333333333e": 135, "208341": 128, "2084": 29, "2093": 115, "2097152": 216, "20conic": 264, "20e9": 136, "20kn": [135, 136], "20on": 264, "20point": 264, "20th": 207, "21": [4, 13, 18, 32, 74, 79, 88, 91, 93, 101, 102, 110, 124, 128, 130, 132, 135, 206, 209, 211, 213, 214, 215, 217, 219, 220, 226, 236, 240, 241, 296], "210": [12, 92, 93, 128, 209, 233], "211": [113, 128, 216, 230, 236], "2111": 130, "2112166839943": 128, "2112723729365330143": 96, "21147": 93, "21177": 12, "212": [89, 115, 214], "21245": 12, "21253": 12, "213": 124, "21306132": 69, "214": 195, "21402": 13, "21427": 13, "21441": 13, "21477639576571": 128, "21494": 13, "21496": 13, "21563": 13, "216": [124, 213], "2161": 233, "21626": 13, "217": [115, 214], "218332": 258, "21875": 115, "219": 214, "21938393439552": 96, "219383934395520": 96, "22": [4, 12, 16, 32, 79, 88, 91, 92, 93, 96, 124, 128, 136, 214, 219, 232, 233, 238, 240], "220": [128, 216], "2204": 213, "2209": 145, "221": 236, "22140257085069": 110, "22169": 115, "222": 91, "22252": 115, "22285": 115, "223": 214, "224": [61, 193, 214], "22464679914735e": 14, "2247": 115, "225": [93, 128, 214], "22553956329232": 110, "225607735_dixon_result": 214, "226": [79, 214], "227": 79, "22740742820168557599192443603787379946077222541710": 96, "22827": 93, "229": 128, "22906851": 11, "22925376": 252, "23": [4, 32, 67, 79, 80, 88, 91, 94, 96, 102, 104, 124, 128, 135, 143, 211, 213, 216, 219, 226, 233, 258], "230": [216, 238], "2307": 124, "231": [128, 199], "232": 96, "233": [128, 214, 236], "2331v2": 258, "234": 128, "234137346_on_a_multivariate_log": 240, "2345": 233, "23456789123456789": 88, "23456789123457": 88, "235": 93, "235625382192159": 163, "236": 128, "236237": 213, "237": [48, 214], "2376": 0, "238": [88, 128], "239": 88, "23903": 88, "24": [4, 11, 12, 51, 53, 54, 61, 67, 76, 80, 81, 88, 91, 93, 96, 102, 110, 115, 124, 128, 135, 136, 141, 143, 187, 197, 205, 211, 213, 215, 216, 217, 219, 222, 227, 233, 236, 240, 255, 258, 260, 274, 286, 292], "240": [135, 214, 222, 267], "2400": 135, "242": 211, "243": [79, 96, 233, 238], "24310": 128, "2434931": 128, "244": [88, 213], "247": [211, 214, 238], "2478": 229, "24780825": 240, "248": 128, "2489": 128, "249": 214, "25": [4, 16, 18, 46, 51, 54, 79, 80, 89, 91, 93, 96, 98, 101, 103, 119, 124, 127, 128, 132, 135, 136, 143, 148, 154, 203, 205, 209, 213, 215, 216, 219, 220, 226, 227, 229, 233, 235, 236, 237, 240, 252], "250": [16, 128, 233], "2500": 135, "25000000000000000000": 16, "2507191691": 128, "251": 213, "2514261_algebraic_and_geometric_reasoning_using_dixon_result": 214, "25146": 197, "25165824": 252, "252": 12, "253": 80, "2531": 80, "25314": 80, "253140": 80, "255": 128, "25547445255474": 137, "256": [52, 69, 79, 128, 216, 220], "25645121643901801": 128, "257": [5, 128, 238], "2580": 128, "25882": 115, "259": 124, "25e": 136, "25x25": 209, "26": [4, 77, 88, 89, 91, 96, 100, 124, 128, 135, 136, 137, 213, 216, 233, 240], "2620": 96, "26390": 92, "264": [124, 238], "265": 216, "26629073187415": 87, "268": 93, "2690882": 124, "27": [4, 11, 52, 69, 70, 79, 83, 93, 98, 124, 128, 135, 136, 143, 145, 213, 216, 238], "270": [137, 139], "2700": [61, 135], "2702765": 93, "2709077133180915240135586837960864768806330782747": 128, "271130": 209, "271133": 209, "2715": 216, "272": [93, 216], "27261": 124, "2730": 93, "274": 93, "27433": 115, "2753": 89, "27720": 93, "278444111699106966687122": 54, "27844411169911": [54, 238], "27852": 115, "27879516692116952268509756941098324140300059345163": 96, "2788": 128, "279": 216, "2794155": 285, "27_number": 128, "27_theorem": 274, "27s_constant": 88, "27s_gcd_algorithm": 88, "27s_law": 229, "27s_method": 69, "27s_rule": 124, "27s_sampling_formula": 240, "27s_strongly_connected_components_algorithm": 258, "27s_theorem": [93, 239], "27s_totient_funct": [93, 128], "27s_z": 240, "27t": 118, "28": [4, 69, 79, 87, 91, 92, 96, 124, 128, 135, 229, 233, 236, 291, 301], "280": 93, "2809": 159, "281": 80, "282": 71, "28318530717959": 43, "28333333333333": 87, "284": [80, 128], "285": 238, "2857142857142857": 14, "286": 128, "28625": 93, "287": 128, "288037795340032417959588909060233922890": [4, 96], "288716": 255, "289": 238, "28902548222223624241": 92, "2899": 115, "28continu": 240, "28cryptosystem": 89, "28graph_theori": 258, "28group_theori": 79, "28information_theori": 240, "28mathemat": [41, 80, 88, 124, 228], "28mathematical_const": 88, "28mathematical_log": [63, 64], "28number": 88, "28number_theori": 77, "28order": 94, "28permutation_group_theori": 79, "28physic": 179, "28set_theori": 228, "28x": 128, "29": [4, 41, 61, 63, 64, 71, 77, 79, 80, 88, 89, 91, 93, 94, 101, 102, 124, 128, 143, 179, 210, 228, 240, 258], "290": [238, 267], "290764986058437": 96, "291": 88, "29128599706266": 92, "2912859970626635404072825905956005414986193682745": 92, "29136443417283": 96, "292": 128, "2922": [18, 131, 132, 134, 298], "29256885": 298, "2936": [18, 131, 132, 134, 298], "2943": 115, "2948": 239, "29541": 115, "29585191": 298, "296": 238, "297": [214, 216], "299792458": [161, 164, 194, 197], "29983226": 298, "29999999999999998890": 88, "2a": [36, 48, 49, 210, 240], "2bb46c0852bf74c9d74d1a12af6d11f69f7e8363": 214, "2c_and_li": 128, "2c_x_": 128, "2d": [2, 101, 102, 104, 135, 136, 137, 139, 168, 199, 206, 220, 233, 245, 290], "2d_1": 240, "2e": [49, 53, 88], "2f": [18, 39, 297], "2f1": 236, "2f_1": 213, "2f_log_x": 128, "2fs0025": 128, "2g": 55, "2h": 39, "2i": 88, "2j": [93, 213, 240], "2j_2": [93, 222], "2j_3": 205, "2k": [41, 88, 93, 113, 128, 233], "2l": 213, "2l_1": 205, "2l_2": 205, "2l_3": 205, "2m": 136, "2n": [26, 80, 87, 93, 96, 115, 124, 139, 144, 205, 223, 230], "2nd": [30, 46, 67, 80, 89, 128, 143, 236, 241, 258], "2nd_hypergeometr": 236, "2nd_hypergeometric_integr": 236, "2nd_linear_airi": 236, "2nd_linear_bessel": 236, "2nd_nonlinear_autonomous_conserv": 236, "2nd_nonlinear_autonomous_conserved_integr": 236, "2nd_power_series_ordinari": 236, "2nd_power_series_regular": 236, "2pq": [49, 51], "2q": 128, "2q_2": 302, "2r": 302, "2t": [46, 93], "2u": 46, "2x": [16, 51, 88, 96, 113, 128, 130, 232, 233, 239, 240, 285, 288, 296], "2x1": 159, "2x2": [120, 127, 159, 209, 236], "2x_": 233, "2xy": [213, 290], "2y": [46, 213, 233, 236, 239, 290], "2z": [49, 56, 96, 239, 240], "3": [0, 3, 5, 7, 11, 12, 13, 14, 16, 18, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 48, 50, 51, 52, 53, 54, 55, 57, 59, 61, 62, 64, 65, 66, 67, 69, 70, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 137, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 157, 159, 161, 163, 167, 169, 170, 171, 175, 179, 184, 185, 187, 189, 190, 193, 194, 196, 197, 199, 200, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 251, 252, 254, 255, 256, 258, 259, 260, 261, 264, 266, 267, 268, 269, 271, 273, 274, 281, 285, 286, 288, 290, 291, 292, 295, 296, 297, 298, 301, 302, 303, 305, 306, 308, 309, 310], "30": [4, 14, 22, 32, 61, 67, 69, 74, 88, 89, 91, 92, 93, 96, 102, 104, 115, 124, 125, 128, 135, 136, 137, 163, 209, 211, 215, 216, 220, 226, 229, 232, 240, 241, 296], "300": [33, 124, 128, 135, 206, 217, 273], "3000": [104, 135], "300000": 197, "30000000000000000000": 88, "30030": 89, "301": [135, 230, 233, 298], "301369863013699": 124, "30247": 93, "303": [209, 233], "304": [214, 216], "305": 87, "30589": 124, "306": 89, "30625": 124, "307": 88, "30769105034035": 18, "308": 230, "309016994374947": 88, "3096": 240, "31": [11, 32, 76, 88, 91, 92, 104, 128, 132, 205, 216, 233, 298], "311": [88, 128], "312": [89, 199, 238, 264, 266], "3125": [104, 240], "31250": 135, "313": 203, "313552108895239": 57, "31413": 115, "31417": 92, "3144337": 216, "315": 238, "3152519739159347": 14, "317": 12, "3176591": 240, "317843553417859": 163, "318": [18, 132], "3192": 128, "3193": 115, "32": [11, 32, 79, 91, 94, 96, 98, 115, 124, 128, 135, 141, 214, 216, 217, 229, 230, 233, 240, 251], "320": 88, "321": 102, "322248": 87, "322255": 87, "323": [71, 96, 128], "3233": 89, "3239": 128, "324": [48, 128, 209, 214], "3243f6a8885a30": 128, "3248186011": 141, "325": 71, "3251": 124, "32555634906645": 96, "3257": 128, "3267000013": 128, "327": [91, 236], "3275": 216, "32767": 128, "32768": 220, "329": 236, "33": [18, 32, 69, 88, 91, 124, 132, 153, 163, 209, 213, 217, 220, 240], "330": 214, "33062": 128, "331": 110, "33102": 128, "3312": 258, "3321": 258, "33215": 128, "333": [91, 128], "3333": 115, "33333": [92, 115], "333333333333333": [92, 210, 232], "333333333333333314830": 88, "333333333333333333333": 88, "33333333333333333333333333333": 210, "335": 88, "3358": 115, "336": 61, "33768": 209, "33795": 115, "33984": 216, "33998": 115, "34": [16, 69, 80, 93, 101, 124, 128, 148, 172, 214, 219, 226, 232, 233], "3400000000000": 16, "341": [101, 128], "34105": 93, "3416277185114782": 54, "3418463277618": 163, "34211": 240, "342923500": 120, "343415678363698242195300815958": 96, "345": 80, "3456": 233, "346": 92, "34635637913639": 92, "34665576869e": 92, "34747534407696": 94, "34785": 115, "348": 124, "348645229818821": 163, "349745826211722": 48, "34985849706254": 110, "35": [79, 82, 91, 93, 101, 102, 115, 124, 128, 209, 215, 220, 233, 236, 240, 301], "350": [87, 154], "3506": 115, "352": [57, 216], "352471546": 48, "352471546031726": 48, "353": [91, 124], "354": [18, 132], "355": [92, 128, 214], "356": [115, 215, 238], "357947691": 110, "36": [12, 48, 71, 82, 89, 93, 104, 115, 124, 128, 136, 216, 220, 233, 236, 240, 274], "360": [137, 139], "3600": [61, 93], "3602879701896397": 88, "36188804005": 141, "362": 115, "3627": 145, "363": [98, 128, 214], "364": 98, "36465": 137, "3674160": 79, "368": 205, "369": 89, "37": [77, 89, 93, 94, 98, 124, 128, 136, 137, 205, 220, 233], "374": [18, 132], "37439874427164e": 18, "3744312326": [88, 93], "376": 214, "377": 128, "379": [128, 216], "379238": 128, "37933": 240, "38": [93, 104, 124, 128, 220, 233, 235, 240], "381": 128, "38177329": 259, "38177329068": 259, "3827": 128, "384": 91, "387": 91, "38954165": 240, "39": [93, 96, 128, 137, 219], "390740740740741": [18, 132], "391": 239, "3923913114": 12, "39267e": 238, "3927": 115, "393": 233, "39439": 115, "39578": 209, "396": [22, 92], "397": 214, "397042": 128, "39764993382373624267": 93, "399": 232, "3a": [18, 131], "3af6dc1": 11, "3aintegr": 115, "3aissu": 115, "3aopen": 115, "3d": [2, 33, 61, 72, 101, 102, 135, 168, 191, 206, 268, 270, 271, 272, 273], "3e": 69, "3f_1": 213, "3i": 128, "3j": [96, 169, 205], "3j_2": [93, 222], "3kn": 135, "3m": 136, "3rd": [30, 67, 80, 94, 128, 216, 238, 241, 258], "3x": [49, 55, 88, 130, 213, 239, 288], "3x1": 124, "3x3": [39, 53, 103, 124, 209, 269], "3xy": 233, "3xyz": 130, "3y": 233, "3z": 239, "4": [2, 5, 11, 12, 14, 16, 17, 18, 22, 23, 24, 27, 28, 30, 31, 33, 36, 37, 39, 41, 42, 43, 48, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 64, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 110, 111, 113, 115, 117, 118, 119, 120, 121, 124, 125, 127, 128, 130, 132, 134, 135, 137, 139, 141, 143, 144, 145, 149, 150, 159, 162, 166, 169, 174, 184, 185, 187, 188, 189, 190, 191, 193, 199, 200, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 251, 252, 255, 258, 259, 260, 264, 267, 268, 269, 271, 273, 274, 285, 286, 288, 290, 291, 292, 296, 297, 298, 301, 303, 305, 306, 308, 309, 310], "40": [4, 57, 69, 91, 93, 96, 98, 105, 124, 128, 135, 137, 206, 217, 219, 220, 240, 261, 285], "400": [135, 206, 216], "4000": [135, 136], "40000": 135, "4002723175": 240, "4013": 135, "40207856": 240, "40320": [11, 12], "404": 233, "4067977442463": [18, 132], "409": 240, "4096": 93, "4096000": 70, "41": [91, 98, 124, 128, 211, 233], "41152": 163, "4117304087953": 141, "41211849": 285, "412214747707527": 188, "41230258795639848808323405461146104203453483447240": 96, "413": 89, "4130533677": 137, "414": 258, "4140": 93, "4142": 216, "414213562": 88, "4142135623730951": 57, "4142135623731": [41, 54, 220, 238], "414645": 216, "415": 91, "41577": 115, "41624341514535": 94, "417": [115, 232], "42": [55, 69, 77, 88, 91, 93, 101, 102, 104, 119, 121, 124, 126, 128, 209, 211, 213, 216, 233, 251], "420": [128, 233], "4200": 128, "423": 124, "4250": 135, "42519758": 240, "42525": 93, "42658": 115, "42868": 137, "429": [93, 220], "43": [83, 124, 128, 135, 136, 240, 296], "430": 258, "432": [57, 101, 215], "433": [18, 132], "434607": 57, "43466557686937456435688527675040625802564660517371780402481729089536555417949051890403879840079255169295922593080322634775209689623239873322471161642996440906533187938298969649928516003704476137795166849228875": 92, "43608": 115, "438990337475312": 48, "44": [14, 18, 91, 93, 124, 128, 131, 132, 134, 229, 240, 298], "4410317": 128, "4418": 145, "44224957030741": 217, "4423": 128, "4428829381583662470158809900606936986146216893757": 92, "44288293815837": 92, "4429": 92, "4433": 93, "44399": 137, "444": 91, "445": [4, 214], "44542": 233, "44626032": 69, "44721": 115, "4472354033813751e": 141, "448": 61, "44918589": 298, "4493": 115, "45": [12, 36, 68, 88, 93, 104, 124, 128, 139, 216, 217, 233], "450": [11, 124], "4503599627370496": 14, "4504508011325967e": 141, "45136923488338": 96, "45279": 240, "4536": 128, "456": [4, 88, 214], "456457160755703e": 141, "4579": 217, "45896": 115, "4596": 88, "45960141378007": 110, "459697694131860": 43, "46": [124, 128, 135, 195, 219, 238, 240], "463": [29, 70], "4641": 110, "4641991": 128, "46699555e": 14, "46792545969349058": 238, "47": [93, 96, 124, 128, 145, 163, 195, 219], "4701": 240, "4701sum07": 240, "472": 240, "473": 80, "47450": [93, 128], "4753701529": 128, "47577": 141, "47757": 209, "478": 214, "479001599": 128, "48": [91, 98, 136, 233, 238, 240, 286], "48550": 302, "4856615": 258, "4857018": 258, "4862": 93, "4869863": 128, "4877893607115270300540019e": 54, "488253406075340754500223503357": 96, "49": [92, 93, 128, 136, 213, 233], "490": [70, 80], "4915": 88, "49182424008069": 110, "49299": 233, "49315059": 259, "495": [135, 209], "49552913752915": 137, "49793": 137, "49801566811835604271": [4, 96], "499948155": 80, "4a": 255, "4ac": [48, 49, 233], "4adc6a51d8371be5b0e4c7dff287fc70": 240, "4e": [16, 69, 238], "4i": 128, "4m": 136, "4th": [30, 93, 94, 110, 124, 128], "4x": [233, 239, 285], "4x1": [162, 240], "4x4": [53, 61, 103, 127, 162, 209, 240], "4xy": [33, 273], "4y": [51, 213, 239, 285], "4z": [49, 56, 239], "5": [5, 11, 12, 14, 16, 17, 18, 22, 23, 25, 28, 33, 36, 37, 41, 43, 48, 50, 52, 54, 57, 61, 63, 64, 65, 67, 69, 70, 71, 72, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 130, 132, 135, 137, 139, 141, 143, 145, 146, 148, 150, 153, 154, 159, 163, 184, 185, 188, 190, 197, 200, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 251, 252, 258, 259, 260, 264, 267, 269, 271, 273, 274, 285, 286, 288, 291, 292, 295, 296, 298, 301, 302, 303, 308, 309, 310], "50": [55, 70, 79, 91, 92, 93, 96, 104, 124, 128, 135, 136, 163, 194, 213, 214, 216, 220, 229, 238, 286], "500": [70, 92, 154, 298], "5000": [92, 135], "50000": 128, "50000000000000": [88, 92], "500000000000000": 143, "50000000000000000000000000000": 92, "5000000000291665e": 141, "500006656595360": 145, "5020": 5, "50232379629182": 96, "503": 215, "504": [92, 214], "5040": [39, 93, 110, 216, 217], "504067061906928": 92, "50406706190692837199": 92, "505": 214, "50521": [93, 216], "50923695405127": 96, "50u": 129, "51": [67, 124, 128], "51041666666667e": 135, "5109": 115, "511": 93, "5112118495813": 193, "512": [79, 96], "5124": 216, "514": [70, 78, 214], "5140": 251, "5148378120533502e": 141, "515": 96, "5173168": 96, "52": [77, 93, 128, 135, 136, 137, 205, 219, 233, 236, 258, 286], "5236": 115, "525": 104, "5253": 115, "5269": 93, "52818775009509558395695966887": 128, "53": [43, 89, 91, 124, 159, 208, 210, 211], "53087": 115, "530e": 159, "532": 214, "5394769": 128, "54": [88, 124, 213, 219, 258], "5404319552844595": 88, "542": 79, "544": 205, "5459": 128, "55": [79, 91, 93, 124, 205, 206, 216, 233, 298], "55203744279187": 96, "55271367880050e": 67, "555": 91, "55556": 115, "558": 236, "55872552179222e": 48, "55998576005696": 159, "56": [57, 91, 93, 115, 128, 213, 216], "560": 135, "561": [13, 128], "562": 11, "563": 214, "5648024145755525987042919132": 96, "567": 94, "57": [79, 124, 128, 240], "5706": 88, "5718": [67, 128, 233], "5728": 88, "574": 128, "57721566490153286060651209008240243104215933593992": 92, "577215664901533": 92, "5772157": 88, "577377951366403": 163, "5777": 128, "579": 93, "58": [89, 124, 137, 246], "58602": 240, "5880": 93, "588469032184": 238, "59": [124, 236], "591382": 132, "5915587277": 128, "5917": 115, "5919532755215": 43, "5937": 302, "5937424601": 110, "59375e": 135, "5992": 0, "5b7c3e8ee5b40332abdb206c": 292, "5c52": 128, "5e": 46, "5g": 69, "5kn": 135, "5m": [136, 255], "5th": [30, 88, 213, 215], "5x": [128, 233], "5x5": 89, "5y": 233, "6": [11, 12, 14, 16, 17, 18, 28, 32, 36, 37, 39, 46, 48, 56, 57, 61, 63, 64, 67, 69, 70, 71, 72, 74, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 101, 102, 103, 104, 110, 111, 113, 115, 117, 118, 120, 121, 124, 125, 127, 128, 130, 132, 135, 137, 139, 141, 143, 144, 145, 154, 159, 163, 169, 187, 199, 205, 206, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 222, 225, 226, 227, 228, 229, 232, 233, 236, 237, 238, 239, 240, 241, 251, 252, 255, 258, 259, 260, 264, 267, 269, 274, 286, 292, 296, 297, 298, 301, 303, 308, 309, 310], "60": [61, 74, 79, 81, 87, 88, 93, 96, 115, 124, 128, 135, 136, 209, 219, 220, 233, 236, 258], "6000": 88, "6004799503160655": 232, "600e": 88, "601": 18, "60123853010113e": 92, "609": 93, "609344": 197, "60986636": 298, "60e2": 88, "60n": 89, "60x60": 209, "61": [88, 89, 93, 104, 124, 128, 216, 222], "61051": 110, "6116978": 261, "6125": [124, 128], "617": 128, "61717": 137, "6174190361677": 132, "618": 130, "61803398874989": 88, "6180885085e": 141, "61825902074169104140626429133247528291577794512415": 96, "62": [124, 213], "62349": 115, "625": [104, 274], "625146415202697": 96, "62963087839509e": 197, "63": [88, 91, 124, 137], "630": 216, "631": 74, "63232916": 240, "634": 74, "6349839002": 227, "635": 92, "635564016364870": 94, "636": 89, "639985": [128, 213], "64": [8, 12, 29, 73, 79, 88, 128, 205, 213, 219, 229, 238, 240, 251, 258, 261, 295], "6400": 135, "643": [91, 128], "6435": 93, "643501108793284": 94, "6449340668": 227, "64493406684823": 92, "645": 128, "6460": 128, "64613129282185e": 92, "64705": 240, "648": 240, "64872063859684": 110, "65": [128, 143, 213, 240, 298], "65092319930185633889": 96, "651354770181179": 163, "65215": 115, "6543612251060553497428174e": 54, "6545": 216, "65504": 69, "65536": [216, 219, 220], "65537": [128, 219], "6569866": 285, "657": 229, "658921776708929": 163, "659097795948": 193, "659936": 96, "66": [18, 93, 124, 216, 220], "660539060e": 197, "662": 124, "66317": 128, "6634255": 216, "6659": 239, "666": 91, "666666666666667": [135, 136], "66666666666667": [18, 132], "6666666666667": [18, 298], "668": 61, "67": [124, 213, 214], "670250533855183": 141, "6707": 124, "6711f12": 240, "6720": 216, "676": 233, "67721": 115, "6774": 258, "67884": 141, "67894": 69, "679": 136, "68": [91, 116, 124, 128, 209, 233], "6832579186": 240, "68437": 141, "686": 255, "6868680200532414": [4, 12], "687": 48, "6875": 135, "68812842": 298, "6881721793": 227, "689": [115, 136], "69": [79, 124, 209, 238, 255], "691": 93, "6931396564": 227, "693147180559945": 130, "6931471805599453094172321215": 227, "6931471806": 227, "693147255559946": 92, "69629": 216, "6963328": 240, "6988699669998001": 128, "699": 67, "6j": [169, 205], "6k": 93, "6th": [72, 128], "6x": [88, 213], "6x6": 89, "6z": [49, 56], "7": [4, 11, 12, 14, 16, 17, 18, 25, 26, 30, 41, 43, 46, 48, 51, 55, 61, 63, 64, 67, 69, 72, 74, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 91, 92, 93, 94, 96, 98, 101, 102, 103, 104, 110, 113, 115, 118, 120, 121, 124, 128, 130, 135, 137, 141, 143, 190, 195, 197, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 222, 223, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 245, 246, 251, 252, 255, 258, 259, 264, 274, 286, 291, 292, 295, 298, 301, 310], "70": [88, 89, 105, 115, 124, 128, 219, 220, 233, 240, 261], "700000000000000": 240, "701": 193, "7042848373025861": 141, "7048138294": 227, "706": [67, 124], "7060005655815754299976961394452809": 128, "7063": 115, "70710678118654752440084436210484903928483593768847": 286, "707106781186548": [94, 286], "70711": 115, "71": [11, 79, 104, 124, 128, 193], "71109": 115, "712": [46, 115], "712328767123288": 124, "712524808": 88, "71318": 216, "7143": 240, "715": [169, 205, 220], "717": [18, 132], "71827974413517": 110, "718281828": 88, "718281828459045235360287d0": 220, "7182818284590452d0": 220, "718281828459045j": 92, "71828182845905": 110, "7182818285": 227, "718281835": 128, "72": [67, 71, 88, 101, 124, 128, 135, 205, 219, 233], "720": [11, 12, 222, 236, 258], "721": 214, "72463": 115, "729": 213, "73": [79, 87, 88, 101, 128, 236], "730": 115, "730061685774": 238, "73071763923152794095062": 96, "732": 216, "73205080756887729352744634151": 216, "73205080756888": 216, "7357232": 12, "73908513321516": 54, "73908513321516064165531208767387340401341175890076": 238, "739085133215161": [49, 54, 56, 57, 238], "74": [79, 93, 128, 143], "74126166983329d": 69, "744": [211, 213], "74720545502474": 96, "75": [88, 91, 135, 209, 240, 264, 298], "750": 93, "7523": 239, "754": 88, "7560958484519": 137, "7568025": 285, "7598d94": 11, "76": [93, 96, 124, 128, 213, 216], "760939574180767": 96, "761": 93, "7635": 96, "764": 96, "7648844336": 48, "764884433600585": 48, "7649": 88, "765": [57, 216], "7655283165378005676": 96, "766": 69, "767": 91, "77": [9, 77, 93, 96, 124, 128, 219, 220, 253], "771561": 110, "7717": 0, "77245385090552": [57, 286], "7746": 115, "7751": 115, "777": [82, 91], "778": 82, "779": 82, "78": [11, 79, 102, 124, 128, 136, 195, 236, 240], "7845": 115, "7854": 115, "787338754623378": 132, "789": [88, 128], "79": [79, 80, 136], "79115232": 240, "79150773600774": 137, "7936": [93, 216], "797": 89, "79798269973507": 132, "799333555511111": 128, "7_f64": 220, "7abb76ffed50425299b9065129ae87261668a0f7": 239, "7fa63b1": 11, "7o38": 205, "7y": 233, "8": [4, 11, 12, 14, 17, 18, 30, 39, 46, 48, 54, 59, 61, 62, 67, 69, 72, 79, 80, 81, 84, 86, 88, 89, 91, 92, 93, 94, 96, 98, 101, 102, 104, 110, 113, 115, 117, 118, 120, 121, 124, 125, 127, 128, 130, 132, 135, 137, 139, 141, 143, 145, 162, 163, 174, 205, 206, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 222, 223, 226, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 245, 251, 253, 255, 258, 264, 267, 268, 274, 285, 286, 290, 292, 296, 298, 301], "80": [3, 4, 8, 12, 16, 43, 67, 79, 88, 91, 115, 124, 128, 135, 136, 141, 209, 213, 216, 219, 236, 240, 256, 258, 298], "8000": [8, 135], "800205": [211, 214], "803206": 128, "805": 216, "806320": 214, "806338": 214, "806342": 211, "809": 115, "809709509409109": 128, "81": [18, 22, 79, 93, 98, 124, 128, 205, 209, 219, 298, 301, 303], "8100": 240, "814": [18, 132], "816477005968898": 163, "817106179880225": 18, "818": 195, "81879421395609": 96, "82": [79, 115, 124, 240], "82211796209193": 110, "823": 89, "825": 132, "827230": 79, "827273": 79, "82842712474619": 285, "82842712475": 290, "828770759094287e": 141, "83": [79, 219], "831": 128, "83333": 115, "83403519": 240, "83711": 93, "8375": 115, "8392867552141611326": 88, "84": [88, 92, 128], "84092844": 129, "8411998": 129, "84119981": 129, "84147096": 129, "84147098": [129, 259, 285], "8414709848078965": [14, 259], "841470984807896506652502321630": 14, "844291913708725": 141, "846749014511809332450147": 93, "85": [77, 92, 93, 124, 128, 135, 188, 205, 240, 301], "850": 137, "850908514477849": 163, "854500743565858": 141, "85768055": 240, "85819627": 240, "86": [29, 80, 124, 219, 229], "861136": 216, "86113631159405258": 216, "86114": 115, "861246379582118": 141, "86400": 197, "86458333333333e": 135, "865": 216, "865474033102": 69, "865474033111": 69, "865477135298": 69, "86602": 115, "8660254037844386j": 141, "867263818209": 69, "869604401089358618834491d0": 220, "87": [79, 94, 124, 128, 213], "87174": 115, "8724366472624298171": 96, "873": [46, 128], "87636": 216, "877": 93, "88": [88, 124, 128, 298], "884": 233, "886": [18, 132], "88679245283019": 159, "888": 91, "888888877777777": 128, "88889": 115, "89": [79, 86, 115], "891": 128, "8a975c1405bd35c65993abf5a4edb667c1db": 128, "8am": 89, "8kn": 136, "8m": 233, "8xy": 213, "9": [4, 11, 12, 14, 17, 18, 22, 24, 30, 37, 46, 55, 57, 59, 67, 69, 76, 78, 79, 80, 84, 86, 87, 88, 89, 91, 93, 94, 96, 97, 98, 101, 102, 104, 110, 113, 115, 119, 120, 121, 124, 125, 127, 128, 130, 135, 137, 141, 143, 144, 145, 146, 148, 159, 163, 195, 205, 206, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 226, 228, 229, 230, 232, 233, 236, 238, 239, 240, 241, 251, 255, 258, 264, 267, 290, 292, 297, 298, 301, 303, 306], "90": [21, 22, 31, 67, 79, 86, 96, 124, 130, 135, 139, 220, 222, 232, 240, 253], "900": 61, "90047": 258, "90097": 115, "903": 135, "90300": 135, "906425478894557": 37, "90642547889456": 37, "9071": 128, "90929743": [259, 285], "909449841483": 96, "909672693737": 69, "91": [16, 70, 214, 219, 226, 240], "9121071": 298, "912285": [128, 213], "91403453669861": 137, "914148152112161": 128, "91596559": 88, "9179": 128, "92": [18, 101, 214, 236, 240, 258], "920": 233, "9215": 213, "921_": 88, "92242131492155809316615998938": 96, "926093295503462": 163, "92753330865999": 159, "93": [79, 214], "932": 229, "9330": 93, "93669377311689": [18, 132], "9369318": 233, "93accumulate_oper": 43, "93add": 43, "93berkowitz_algorithm": 209, "93euler_equ": 236, "93gauss_quadratur": 115, "93hadamard_transform": 91, "93jacobi_pseudoprim": 128, "93jacobi_quadratur": 115, "93johnson": 258, "93lagrange_equ": 67, "93laguerre_quadratur": 115, "93lenstra": 209, "93lobatto_rul": 115, "93lov": 209, "93mascheroni_const": 88, "93rabin_primality_test": 128, "93ruffini_theorem": 216, "93schmidt_process": 124, "93simon_distribut": 240, "93trotter_algorithm": 258, "93tukey_fft_algorithm": 91, "93zero_plot": 141, "94": [145, 214], "9405": 213, "9412172": 240, "9424": 128, "943396226415094": [18, 132], "9436": 153, "945": [211, 217], "9487171": 110, "9496": 96, "94991743": 240, "95": [18, 69, 86, 128, 213, 220, 233, 236, 238, 253], "951": 92, "951056516295154": 88, "9537590861": 137, "954": 128, "956": 92, "9562288417661": 92, "95678796130331164628399634646042209010610577945815": 92, "95892427": 285, "96": [124, 240], "9603": 213, "9625": 135, "96593": 115, "967": 115, "96716083": 240, "9696": 239, "97": [79, 88, 89, 128, 213], "971843958291041": 163, "9780470316887": 240, "97851": 115, "98": [29, 79, 89, 216, 236, 303], "9801": 92, "9804659461513846513": 128, "981": 115, "98101184": 69, "982": 29, "983": 115, "983697455232980674869851942390639915940": 93, "9855e": 115, "986": 233, "987": 128, "989": 128, "9891e30": 193, "98935825": 285, "98991349867535": [18, 132], "99": [8, 69, 88, 89, 124, 128, 143, 213, 214], "9900": 93, "99009901": 128, "9904": 115, "991": 128, "991052601328069": 96, "9927": 115, "995": [18, 132], "995322265018952734162069256367": 96, "9955291375291": 137, "9964469100598874": 18, "99862803482534211706798214808651328230664709384460955058223172535940812848111745": 92, "999": [88, 92], "9999": 249, "9999999799999999": 141, "999999984582742099719981147840": 96, "9999999999999999": 14, "99999999999999991611392": 261, "99999999999999999999": 88, "9j": [169, 205], "9th": [93, 128], "9x": 239, "9y": [49, 55], "9z": 239, "A": [0, 2, 3, 4, 5, 9, 11, 12, 13, 14, 15, 16, 19, 21, 22, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 46, 48, 50, 52, 53, 54, 55, 56, 57, 58, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 110, 111, 113, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 130, 131, 132, 134, 135, 136, 137, 139, 141, 143, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 162, 164, 167, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 258, 259, 264, 266, 268, 269, 270, 271, 273, 274, 281, 287, 289, 291, 292, 296, 298, 300, 304, 305, 306], "AND": [91, 118], "And": [3, 11, 12, 13, 14, 36, 42, 43, 50, 63, 79, 80, 87, 88, 89, 96, 113, 118, 124, 127, 151, 162, 206, 208, 216, 217, 220, 228, 232, 233, 238, 239, 240, 258, 259, 269, 296], "As": [4, 13, 14, 18, 22, 24, 27, 28, 35, 38, 39, 42, 43, 48, 53, 54, 55, 60, 69, 79, 80, 88, 89, 92, 93, 94, 96, 112, 113, 118, 124, 127, 128, 130, 131, 134, 148, 151, 155, 157, 190, 195, 207, 208, 210, 211, 213, 216, 217, 219, 220, 227, 228, 230, 236, 239, 240, 258, 259, 268, 269, 285, 286, 288, 290, 291, 292, 295, 296, 301, 303, 305], "At": [2, 12, 21, 32, 36, 41, 43, 52, 67, 84, 94, 96, 115, 128, 135, 136, 195, 209, 213, 215, 230, 259], "BE": [0, 12], "BY": 233, "Be": [3, 4, 8, 43, 67, 88, 118, 124, 213, 236, 239, 247, 259], "Being": [3, 84, 98, 104, 210], "But": [2, 3, 5, 7, 12, 13, 14, 15, 16, 43, 48, 57, 87, 88, 93, 96, 102, 112, 124, 128, 178, 179, 190, 195, 199, 207, 208, 213, 217, 227, 229, 230, 232, 233, 236, 238, 239, 245, 255, 258, 259, 267, 286, 288, 290, 291, 296], "By": [2, 14, 16, 41, 43, 48, 52, 53, 55, 61, 62, 64, 69, 78, 87, 88, 90, 92, 93, 96, 102, 103, 107, 111, 113, 118, 124, 127, 128, 129, 130, 134, 135, 136, 141, 148, 185, 190, 206, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 222, 227, 229, 232, 233, 236, 238, 239, 240, 244, 246, 247, 251, 254, 258, 259, 271, 285, 290, 291, 296], "For": [1, 2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 35, 36, 38, 41, 42, 43, 44, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84, 87, 88, 89, 90, 91, 92, 93, 94, 96, 100, 102, 103, 106, 109, 111, 112, 113, 117, 118, 124, 128, 129, 130, 132, 134, 135, 136, 137, 139, 143, 145, 148, 149, 150, 151, 152, 153, 157, 159, 173, 174, 179, 183, 185, 187, 188, 189, 190, 192, 194, 195, 196, 199, 203, 204, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 232, 233, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 255, 256, 258, 259, 262, 264, 266, 269, 271, 273, 274, 284, 285, 286, 288, 291, 292, 296, 297, 298, 305], "ITE": [94, 118, 220], "If": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 41, 42, 43, 45, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 77, 79, 80, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 113, 115, 116, 117, 118, 120, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 141, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 163, 167, 171, 174, 180, 184, 185, 186, 187, 188, 190, 194, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 258, 259, 261, 264, 267, 269, 271, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "In": [2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 48, 52, 57, 59, 65, 67, 68, 69, 70, 71, 72, 74, 77, 78, 79, 80, 87, 88, 89, 90, 92, 93, 94, 96, 101, 103, 104, 105, 106, 113, 115, 116, 117, 118, 120, 124, 125, 128, 130, 133, 134, 135, 136, 139, 143, 147, 150, 151, 152, 154, 157, 176, 178, 179, 180, 185, 189, 190, 193, 194, 195, 202, 203, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 244, 246, 249, 251, 253, 255, 256, 258, 259, 264, 268, 269, 271, 273, 285, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 302, 303, 305, 306], "It": [0, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 28, 30, 35, 36, 39, 41, 42, 43, 48, 51, 52, 54, 55, 56, 59, 61, 62, 63, 64, 67, 68, 69, 76, 79, 80, 82, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 100, 104, 105, 111, 113, 115, 117, 118, 124, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 141, 143, 145, 147, 148, 149, 150, 151, 152, 155, 157, 158, 159, 163, 164, 174, 179, 180, 185, 186, 187, 188, 189, 190, 192, 195, 198, 199, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 220, 223, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 251, 252, 253, 254, 255, 256, 259, 264, 267, 268, 269, 271, 273, 274, 285, 286, 288, 289, 290, 291, 292, 294, 295, 296, 301, 309], "Its": [30, 88, 94, 104, 148, 188, 209, 213, 220, 228, 298], "NO": [55, 190], "NOT": [13, 14, 46, 118, 143, 170, 174, 189, 192, 249, 252], "No": [2, 4, 5, 11, 16, 18, 22, 57, 68, 88, 96, 103, 118, 128, 135, 144, 185, 206, 209, 216, 222, 223, 232, 233, 238, 239, 240, 245, 249, 255, 256, 258, 285, 297], "Not": [13, 15, 42, 43, 53, 88, 93, 118, 143, 220, 239, 240, 258, 290, 297], "OF": 255, "ONE": 220, "OR": [15, 67, 91, 118, 213], "Of": [12, 17, 39, 41, 87, 113, 124, 236, 239, 258, 296], "On": [8, 11, 13, 14, 22, 33, 41, 64, 74, 81, 88, 90, 96, 115, 118, 128, 135, 194, 195, 210, 211, 213, 214, 215, 216, 236, 238, 255, 259, 271, 273], "One": [11, 14, 15, 16, 22, 28, 30, 32, 38, 41, 43, 67, 68, 69, 78, 80, 87, 88, 93, 94, 96, 107, 110, 112, 113, 115, 118, 124, 128, 130, 135, 136, 157, 166, 195, 211, 213, 214, 216, 219, 222, 228, 232, 235, 238, 239, 240, 241, 246, 259, 271, 285, 286, 288, 291, 292, 296], "Or": [5, 8, 12, 13, 14, 16, 42, 50, 52, 79, 88, 89, 90, 96, 113, 118, 128, 154, 207, 217, 219, 220, 232, 239, 240, 251, 259, 271, 291, 294], "Ore": 111, "Such": [3, 4, 12, 41, 69, 88, 104, 207, 208, 215, 221, 229, 230, 232, 285, 291, 305], "That": [0, 3, 5, 11, 12, 14, 15, 16, 23, 35, 36, 41, 42, 43, 88, 89, 94, 118, 124, 128, 150, 187, 192, 198, 207, 208, 210, 211, 213, 215, 226, 227, 236, 240, 252, 253, 259, 285, 288, 291, 296], "The": [0, 2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 71, 72, 74, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 258, 259, 261, 264, 266, 267, 268, 269, 272, 273, 274, 285, 286, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310], "Their": [4, 18, 88, 96, 113, 205, 206, 210, 213, 230], "Then": [8, 9, 11, 12, 14, 15, 18, 23, 28, 35, 39, 41, 79, 84, 87, 88, 113, 117, 124, 128, 149, 150, 152, 159, 187, 195, 207, 208, 210, 213, 215, 217, 220, 227, 230, 232, 233, 236, 238, 259, 308, 310], "There": [2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 18, 21, 23, 25, 27, 28, 35, 36, 38, 41, 42, 43, 45, 48, 51, 52, 56, 69, 70, 74, 79, 80, 81, 82, 85, 87, 88, 89, 92, 93, 96, 112, 113, 115, 116, 117, 118, 120, 124, 128, 134, 135, 136, 139, 143, 150, 157, 163, 180, 185, 199, 204, 206, 210, 211, 212, 213, 215, 216, 217, 220, 221, 222, 228, 229, 230, 232, 233, 236, 238, 239, 240, 242, 245, 254, 255, 258, 259, 261, 269, 285, 286, 288, 290, 291, 295, 296, 298], "These": [0, 2, 4, 5, 9, 11, 12, 13, 14, 15, 16, 17, 18, 27, 30, 33, 35, 36, 37, 39, 41, 42, 43, 57, 58, 60, 68, 69, 79, 87, 88, 89, 90, 96, 113, 115, 118, 124, 128, 130, 131, 132, 133, 134, 136, 143, 147, 151, 152, 153, 155, 157, 158, 180, 185, 186, 194, 199, 200, 207, 208, 209, 210, 211, 213, 216, 220, 230, 233, 236, 237, 239, 240, 242, 247, 251, 252, 253, 258, 271, 286, 289, 292, 295, 296, 298, 299, 301, 304, 305, 309], "To": [0, 1, 2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 26, 27, 28, 30, 32, 33, 36, 39, 42, 43, 46, 50, 51, 52, 54, 55, 56, 57, 59, 60, 63, 64, 67, 68, 69, 70, 78, 79, 80, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 101, 111, 113, 115, 117, 118, 120, 124, 128, 130, 132, 134, 135, 136, 141, 143, 144, 146, 147, 148, 151, 152, 155, 157, 158, 167, 171, 184, 193, 195, 206, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 227, 228, 230, 233, 236, 237, 238, 239, 240, 241, 244, 245, 249, 251, 252, 255, 256, 258, 259, 264, 266, 268, 269, 271, 273, 274, 285, 286, 288, 289, 291, 292, 295, 296, 297, 298, 303], "WILL": 12, "Will": [69, 124, 215, 220, 251], "With": [3, 13, 16, 18, 24, 26, 27, 36, 42, 46, 59, 69, 71, 87, 88, 92, 113, 128, 157, 163, 187, 190, 206, 207, 208, 209, 210, 211, 218, 219, 220, 227, 232, 241, 258, 290, 291, 298, 302, 303, 305, 306], "_": [3, 4, 5, 13, 14, 16, 18, 25, 28, 30, 32, 35, 37, 39, 43, 46, 63, 64, 68, 76, 77, 79, 80, 81, 84, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 101, 102, 103, 104, 113, 115, 118, 119, 120, 121, 124, 126, 128, 130, 143, 169, 190, 195, 204, 205, 209, 211, 213, 215, 216, 219, 220, 221, 223, 227, 228, 229, 230, 232, 233, 236, 237, 238, 241, 242, 258, 267, 269, 295], "_0": [88, 93, 113, 124, 216, 259, 298], "_1": [96, 124, 151, 158, 199, 205, 230, 259], "_1cm": 68, "_1f_1": 96, "_2": [32, 55, 124, 151, 158, 199, 205, 236], "_2cm": 68, "_2f_1": 296, "_3": [199, 205], "_3mm": 68, "_5": [71, 207], "__": [16, 96, 115, 220, 240, 245], "__1": 96, "___": [87, 92, 115, 116, 124, 208, 232, 240, 245, 258, 295], "____": [87, 92, 115, 162, 208, 221, 240, 258, 297], "_____": [87, 240, 302], "______": 245, "________": [221, 240, 258], "__________": [69, 208], "___________": [92, 136, 236], "____________": 136, "_____________": 136, "_______________": 136, "________________": [136, 236], "_________________": [12, 136], "__________________": 236, "_____________________": 136, "______________________": 136, "_______________________": 136, "________________________": 136, "______________________________": 240, "________________________________": 136, "_____________________________________": 136, "______________________________________________": 136, "_______________________________________________": 136, "____________________________________________________": 136, "_______________________________________________________": 206, "_____________________________________________________________________________________________________": 12, "_____________________o_______________________": 136, "_______________v": 136, "____________o________________________": 136, "_______i_______": 136, "__abs__": [124, 211], "__add__": [124, 211, 215], "__all__": 254, "__bool__": 88, "__builtins__": 16, "__cacheit": 88, "__call__": [69, 80, 88, 215], "__class__": [155, 259], "__cmp__": [167, 171, 190], "__contains__": 79, "__divmod__": 211, "__doc__": [4, 16], "__file__": 16, "__floordiv__": 211, "__future__": [16, 39, 288, 295], "__getitem__": [13, 88, 124, 209, 245], "__globals__": 259, "__index__": 261, "__init__": [3, 4, 18, 43, 88, 152, 153, 215, 264, 266, 291, 298], "__init_subclass__": [13, 41], "__iter__": [13, 80, 88, 232], "__len__": 124, "__main__": [16, 69, 292], "__mod__": [211, 215], "__mul__": [73, 79, 124, 211, 215], "__name__": [16, 220], "__neg__": 211, "__new__": [14, 41, 43, 69, 79, 88, 291], "__package__": 16, "__pos__": 211, "__pow__": [13, 124, 211, 217], "__repr__": [13, 220], "__rmul__": 124, "__setitem__": 206, "__sub__": 211, "__truediv__": [88, 211], "__weakref__": [79, 123, 124], "_a": [84, 96, 190, 216, 298], "_add": [207, 226], "_aesara": 220, "_af_par": 80, "_af_rmul": 84, "_all_": 209, "_all_root": 216, "_amv": 216, "_appli": 207, "_apply_operators_qubit": 174, "_arg": [88, 94], "_array_form": 80, "_as_integr": 115, "_ask": 41, "_assume_rul": 41, "_assumpt": [41, 88], "_assumptions_orig": 88, "_b": [84, 96, 190], "_backend": 13, "_base_ord": 86, "_basic": 251, "_basic_orbit": 79, "_best": 236, "_build": [4, 8, 45], "_c": 190, "_ccode": [43, 220], "_check_anteced": 113, "_check_antecedents_1": 113, "_check_antecedents_invers": 113, "_check_cycles_alt_sym": [79, 86], "_clash": [60, 88], "_clash1": [60, 88], "_clash2": [60, 88], "_cmp_perm_list": 85, "_coeffexpvalueerror": 113, "_collapse_extra": 115, "_complexes_index": 216, "_complexes_sort": 216, "_components_data_full_destroi": 13, "_compos": 207, "_compute_transform": 115, "_condsimp": 113, "_construct_": 69, "_contain": 207, "_contains_elem": 207, "_contains_id": 207, "_convert_poly_rat_alg": [107, 109], "_coset_repres": 79, "_count_root": 216, "_create_lookup_t": [109, 113], "_create_t": [107, 109], "_csrtodok": 127, "_cxxcode": [43, 220], "_d": [190, 298], "_default_set": 220, "_dfm": 209, "_dict": 233, "_diff_wrt": 88, "_distinct_primes_lemma": 79, "_distribute_gens_by_bas": 86, "_doktocsr": 127, "_dummi": 113, "_dummy_": 113, "_dummy_10": 88, "_dummy_fmt": 13, "_ecm_one_factor": 128, "_ensure_complexes_init": 216, "_ensure_reals_init": 216, "_enumerate_st": 185, "_eval_": 15, "_eval_adjoint": 188, "_eval_as_leading_term": 88, "_eval_cond": 113, "_eval_deriv": [15, 43, 88, 96], "_eval_eq": 88, "_eval_evalf": [43, 216], "_eval_expand_": 43, "_eval_expand_bas": 88, "_eval_expand_complex": 88, "_eval_expand_doubl": 88, "_eval_expand_func": 14, "_eval_expand_hint": 88, "_eval_expand_trig": 43, "_eval_i": 41, "_eval_integr": [94, 115], "_eval_is_": 41, "_eval_is_algebra": 41, "_eval_is_alt_sym_monte_carlo": 79, "_eval_is_alt_sym_na": 79, "_eval_is_eq": 88, "_eval_is_finit": 41, "_eval_is_g": 88, "_eval_is_imaginari": 216, "_eval_is_integ": [14, 41], "_eval_is_nonneg": 43, "_eval_is_posit": [14, 43], "_eval_is_r": [41, 43, 216], "_eval_is_zero": [41, 43], "_eval_nseri": 88, "_eval_rewrit": [43, 88], "_eval_rewrite_as_": 88, "_eval_rewrite_as_co": 88, "_expand": 5, "_expon": 113, "_fcode": 220, "_field": 69, "_find_reasonable_pivot": 124, "_find_splitting_point": 113, "_first": [88, 94], "_flint": [209, 210], "_flip_g": 113, "_fourier_transform": 115, "_fun": 217, "_function": 113, "_g": 89, "_gcd_term": 88, "_generate_coordin": 151, "_generate_spe": 151, "_get_coeff_exp": 113, "_get_complex": 216, "_get_complexes_sqf": 216, "_get_interv": 216, "_get_ordered_dummi": 190, "_get_real": 216, "_get_reals_sqf": 216, "_get_root": 216, "_greek": 16, "_guess_expans": 113, "_h": [79, 239], "_handle_integr": 236, "_handle_precomputed_bsg": 86, "_hull": 105, "_i": [12, 115, 190, 195, 217], "_ignor": 216, "_imag": 207, "_img": 207, "_imp_": [252, 259], "_in_terms_of_gener": 207, "_indexed_root": 216, "_inflate_fox_h": 113, "_inflate_g": 113, "_int0oo": 113, "_int0oo_1": 113, "_int_invers": 113, "_integr": [55, 236, 237], "_intersect": 207, "_invers": 89, "_is_analyt": 113, "_is_class": 239, "_is_exponenti": 239, "_is_logarithm": 239, "_is_zero_after_expand_mul": 124, "_iszero": [124, 292], "_iter": 258, "_j": [190, 195, 205, 222], "_javascript": 220, "_julia": 220, "_k": [93, 96, 115, 205, 215, 240], "_k_kqdot": 301, "_ker": 207, "_kernel": 207, "_l": 205, "_lambdacod": 220, "_lambdifygener": 259, "_latex": [43, 220], "_latin": 16, "_linear_2eq_order1_type6": 236, "_linear_2eq_order1_type7": 236, "_list": 128, "_m": [43, 96, 132], "_mapl": 220, "_mathml_cont": 220, "_mathml_present": 220, "_mcode": 220, "_meijerint_definite_2": 113, "_meijerint_definite_3": 113, "_meijerint_definite_4": 113, "_meijerint_indefinite_1": 113, "_minpoly_compos": 215, "_modgcd_multivariate_p": 213, "_module_quoti": 207, "_mpc_": 210, "_mpf_": [88, 210], "_mul": 226, "_mul_arg": 113, "_mul_as_two_part": 113, "_mul_scalar": 207, "_mult_tab": 215, "_my_principal_branch": 113, "_mytyp": 113, "_n": [43, 89, 93, 96, 115, 216, 230, 239], "_naive_list_centr": 85, "_name": 115, "_new": 216, "_nocheck": 103, "_node": 88, "_nonlinear_2eq_order1_type1": 236, "_nonlinear_2eq_order1_type2": 236, "_nonlinear_2eq_order1_type3": 236, "_nonlinear_2eq_order1_type4": 236, "_nonlinear_2eq_order1_type5": 236, "_nonlinear_3eq_order1_type1": 236, "_nonlinear_3eq_order1_type2": 236, "_nonlinear_3eq_order1_type3": 236, "_nonlinear_3eq_order1_type4": 236, "_nonlinear_3eq_order1_type5": 236, "_nth": 217, "_octav": 220, "_only_": 216, "_operators_to_st": 180, "_orbits_transversals_from_bsg": 86, "_order": 78, "_orient_fram": 151, "_p": [89, 190, 211, 213, 215, 227, 230, 238], "_p_0": 190, "_p_1": 190, "_p_elements_group": 79, "_partial_pivot": 209, "_pf_q": [96, 230, 236, 296], "_pg": 216, "_postprocess_root": 216, "_prec": 88, "_preprocess": 237, "_preprocess_root": 216, "_pretti": 220, "_print": [43, 220], "_print_": 220, "_print_atom": 220, "_print_bas": 220, "_print_deriv": 220, "_print_hyp": 220, "_print_meijerg": 220, "_print_numb": 220, "_print_rat": 220, "_process_seri": 206, "_product": 207, "_q": 190, "_quotient": 207, "_quotient_codomain": 207, "_quotient_domain": 207, "_r": [88, 190, 230, 239], "_randint": [13, 88, 213], "_random_gen": 79, "_random_pr_init": 79, "_random_prec": 79, "_random_prec_n": 79, "_randrang": [13, 88, 89], "_rang": 255, "_raw": 218, "_rcode": 220, "_real_root": 216, "_reals_index": 216, "_reals_sort": 216, "_recur": 110, "_refine_complex": 216, "_remove_gen": 86, "_repres": 185, "_represent_foobasi": 185, "_represent_szop": 185, "_represent_zg": 175, "_reset": [128, 216], "_restrict_codomain": 207, "_restrict_domain": 207, "_rewrit": 5, "_rewrite1": [107, 113], "_rewrite2": 113, "_rewrite_invers": 113, "_rewrite_saxena": 113, "_rewrite_saxena_1": 113, "_rewrite_singl": 113, "_root": 217, "_roots_trivi": 216, "_rust_cod": 220, "_sage_": 2, "_seri": [206, 217], "_set": 240, "_set_angular_veloc": 151, "_set_interv": 216, "_set_linear_veloc": 151, "_signsimp": 216, "_simplifi": 124, "_sizedinttyp": 69, "_slope": 98, "_smtlib": 220, "_solve_ab": 239, "_solve_as_poli": 239, "_solve_as_poly_complex": 239, "_solve_as_poly_r": 239, "_solve_as_r": 239, "_solve_class": 239, "_solve_expo": 239, "_solve_exponenti": 239, "_solve_lin_si": 218, "_solve_lin_sys_compon": 218, "_solve_logarithm": 239, "_solve_rad": 239, "_solve_real_trig": 239, "_solve_system": 239, "_solve_using_known_valu": 239, "_some_": 209, "_sort_variable_count": 88, "_sparse_": 221, "_split_mul": 113, "_state_to_oper": 180, "_str": 32, "_strip": [79, 86], "_strong_gens_from_distr": 86, "_succ": 79, "_sylow_alt_sym": 79, "_sympifi": [13, 14, 88, 120, 291], "_sympy_": [13, 14, 88], "_sympyrepr": 220, "_sympystr": 220, "_syzygi": 207, "_t": [18, 22, 30, 32, 96, 115, 190, 199, 203, 230, 240, 298], "_tan": 217, "_tan1": 217, "_tensormanag": 246, "_test": 251, "_token_splitt": 130, "_tr56": 229, "_transolv": 239, "_try_heurisch": 115, "_tsolv": 239, "_tupl": 128, "_type": 209, "_u": [115, 190], "_union": 207, "_union_find_merg": 79, "_union_find_rep": 79, "_v": [36, 190], "_verifi": 79, "_verify_bsg": [79, 85, 86], "_verify_centr": 85, "_verify_normal_closur": 85, "_w": [216, 227], "_w0_0": 124, "_w1_0": 124, "_w2_0": 124, "_x": [24, 32, 35, 36, 41, 43, 124, 204, 211, 213, 217, 232, 236, 252, 298], "_xi_1": 237, "_y": [24, 32, 35, 36, 43, 50, 204, 298], "_z": [24, 32, 35, 36, 43, 115, 240, 298], "a0": [84, 131, 236, 296], "a000001": 74, "a000010": 93, "a000073": 93, "a000085": 96, "a000111": [93, 216], "a000720": 93, "a001221": 93, "a001222": 93, "a002322": 93, "a002997": 128, "a003277": 74, "a008683": 93, "a051532": 74, "a056867": 74, "a066272": 128, "a066272a": 128, "a1": [22, 30, 80, 84, 88, 116, 124, 128, 136, 143, 164, 213, 236, 240, 241, 270, 296], "a10": 105, "a1pt": 30, "a1pt_theori": [30, 203], "a1sz_lattice_basis_reduction_algorithm": 209, "a2": [22, 30, 80, 84, 88, 117, 124, 128, 136, 143, 164, 209, 213, 240, 241, 270, 296], "a217120": 128, "a217255": 128, "a217719": 128, "a2idx": 124, "a2pt": 30, "a2pt_theori": [30, 35, 203], "a3": [30, 80, 84, 88, 117, 124, 270, 296], "a4": [30, 71, 84, 88, 117, 296], "a4_in_s6": 71, "a4xc2": 71, "a5": [84, 88], "a6": 88, "a6_wrong": 88, "a9chet_distribut": 240, "a9vy_distribut": 240, "a_": [32, 51, 84, 88, 89, 96, 113, 117, 120, 124, 143, 144, 222, 230, 233, 236, 238, 240, 241, 242, 298], "a_0": [124, 223, 233, 236, 241, 296], "a_0_0": 124, "a_0_0_0": 124, "a_0_0_1": 124, "a_0_1": 124, "a_0_1_0": 124, "a_0_1_1": 124, "a_0_2": 124, "a_0_2_0": 124, "a_0_2_1": 124, "a_1": [78, 79, 89, 96, 110, 113, 124, 144, 190, 195, 208, 213, 230, 233, 236, 240, 296], "a_1_0": 124, "a_1_0_0": 124, "a_1_0_1": 124, "a_1_1": 124, "a_1_1_0": 124, "a_1_1_1": 124, "a_1_2": 124, "a_1_2_0": 124, "a_1_2_1": 124, "a_1x_1": [51, 233], "a_2": [79, 89, 110, 124, 213, 230, 233, 236, 240, 296], "a_2x_2": [51, 233], "a_3": 124, "a_4": 71, "a_5": 71, "a_6": 71, "a_and_b": [152, 153, 305], "a_b": 30, "a_bicep": 298, "a_eq": 238, "a_first": 18, "a_i": [36, 113, 195, 199, 208, 213, 230], "a_ij": 245, "a_interv": 228, "a_ixi": 148, "a_ixx": 148, "a_iyi": 148, "a_iyz": 148, "a_izx": 148, "a_izz": 148, "a_j": [78, 96, 113, 195, 213, 222, 230], "a_k": [79, 89, 217, 223], "a_kx_k": 217, "a_lin": 27, "a_m": [84, 236], "a_mass": 148, "a_muscl": [18, 134], "a_n": [84, 89, 96, 113, 117, 195, 208, 213, 215, 223, 233, 236, 296], "a_non_commut": 236, "a_nul": 209, "a_nx_n": [51, 233], "a_o_n": 30, "a_op": 27, "a_p": [96, 113, 230, 296], "a_prim": 88, "a_r": [78, 230], "a_real": 245, "a_rref": 209, "a_t": 236, "a_tricep": 298, "a_val": 298, "a_x": [36, 199, 220], "a_z": [36, 137, 199], "aa": [93, 205], "aaa": 258, "aaaabbbbcccc": 93, "aab": [93, 258], "aabbc": 93, "aabc": 93, "aaecc": 238, "aand": [96, 115], "aaron": 0, "aaronmeur": 12, "aau": 135, "ab": [14, 16, 18, 30, 66, 69, 70, 87, 88, 89, 92, 93, 94, 96, 100, 101, 111, 113, 118, 124, 130, 134, 139, 145, 190, 208, 211, 214, 215, 216, 220, 233, 235, 238, 239, 240, 242, 246, 255, 258, 261, 270, 296], "aba": 258, "abb": [255, 258], "abbott": 214, "abbott13": [213, 214], "abbrev": [9, 196, 197, 220], "abbrevi": [197, 208, 220, 239, 241], "abc": [3, 4, 11, 12, 16, 37, 38, 43, 46, 48, 50, 52, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 69, 77, 79, 81, 87, 88, 89, 90, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 111, 112, 113, 115, 116, 118, 120, 123, 124, 127, 128, 129, 141, 143, 145, 161, 163, 165, 166, 171, 188, 190, 191, 207, 209, 211, 213, 215, 216, 217, 220, 221, 222, 223, 225, 226, 227, 228, 229, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 245, 247, 252, 253, 254, 255, 256, 258, 259, 261, 264, 267, 268, 269, 274, 276, 288, 291, 295], "abcbb": 258, "abcd": [77, 81, 190, 242, 258, 261], "abcdef": 288, "abel": [48, 57, 124, 216], "abelian": [74, 76, 79, 117, 195, 207], "abelian_invari": 79, "abeliangroup": [76, 79], "abi": 258, "abid": 7, "abij": 190, "abil": [13, 14, 16, 23, 41, 67, 124, 150, 215, 219, 236, 239, 290, 296], "abji": 190, "abl": [2, 3, 4, 11, 12, 14, 15, 18, 22, 25, 27, 28, 30, 31, 39, 41, 43, 51, 55, 68, 69, 79, 84, 88, 89, 90, 99, 107, 115, 120, 124, 128, 131, 140, 207, 209, 210, 211, 216, 217, 236, 239, 251, 268, 290, 295, 297], "abnorm": 213, "abort": 249, "about": [3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 21, 22, 27, 28, 32, 35, 36, 39, 41, 42, 43, 48, 53, 55, 57, 58, 59, 61, 62, 64, 65, 68, 69, 79, 80, 81, 82, 88, 92, 94, 96, 98, 99, 100, 102, 103, 104, 108, 110, 114, 115, 117, 124, 128, 130, 135, 136, 143, 147, 148, 149, 151, 152, 153, 154, 155, 157, 185, 187, 188, 190, 194, 199, 205, 207, 209, 210, 215, 217, 220, 222, 227, 232, 233, 234, 236, 240, 244, 245, 251, 252, 253, 254, 255, 256, 264, 266, 268, 271, 272, 279, 282, 285, 287, 288, 290, 291, 292, 296, 298, 305], "abov": [2, 3, 4, 5, 8, 11, 12, 13, 14, 16, 18, 21, 22, 23, 24, 26, 27, 28, 31, 33, 35, 36, 37, 39, 42, 43, 45, 46, 48, 50, 54, 55, 57, 67, 68, 69, 70, 72, 78, 79, 80, 84, 87, 88, 92, 93, 96, 98, 101, 104, 105, 113, 115, 118, 124, 129, 130, 136, 143, 150, 151, 152, 154, 155, 157, 185, 187, 190, 199, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 221, 227, 230, 232, 233, 236, 238, 239, 240, 244, 245, 252, 253, 259, 268, 269, 270, 271, 274, 288, 290, 291, 292, 296, 298, 301, 303, 305, 306], "above_fermi": [96, 190], "abracadabra": 258, "abramov": [214, 238], "abramov71": [214, 216], "abramowitz": [4, 96], "abridg": 207, "abs_sqrd": 145, "absarglineseri": 206, "absenc": [71, 84, 118], "absent": [4, 72, 238], "absolt": 18, "absolut": [8, 12, 65, 66, 69, 87, 88, 94, 96, 103, 113, 115, 124, 130, 145, 188, 211, 215, 216, 230, 232, 235, 240, 251, 273, 274, 275], "absolute_converg": 87, "absorb": [13, 15, 113, 236, 240, 286], "absorbing_markov_chain": 240, "absorbing_prob": [13, 240], "absorpt": 236, "abstract": [0, 13, 18, 22, 67, 68, 77, 88, 90, 94, 96, 101, 106, 120, 131, 134, 147, 151, 155, 158, 174, 176, 185, 188, 189, 190, 207, 215, 239, 240, 242, 246, 253, 273], "abund": 128, "abundantnumb": 128, "abus": [88, 246], "ac": [28, 46, 61, 69, 80, 100, 139, 154, 167, 240, 258, 261], "academ": [0, 45, 68, 72, 214], "acb": 258, "acc": [30, 35, 68, 203], "acceler": [3, 27, 28, 30, 33, 129, 152, 154, 157, 193, 199, 203, 209, 255, 273, 298, 301, 308, 310], "acceleration_": 30, "acceleration_constraint": 152, "accept": [4, 11, 12, 14, 15, 22, 43, 50, 57, 68, 69, 79, 88, 94, 101, 102, 115, 118, 120, 124, 127, 130, 143, 184, 194, 199, 204, 206, 215, 216, 219, 220, 221, 228, 230, 232, 238, 252, 259, 264, 266, 269, 292], "accepted_latex_funct": 220, "access": [2, 4, 5, 9, 13, 15, 16, 18, 22, 31, 32, 33, 36, 41, 43, 62, 63, 64, 69, 88, 96, 117, 118, 120, 124, 129, 131, 134, 136, 143, 144, 151, 152, 155, 157, 199, 206, 209, 210, 211, 213, 215, 232, 236, 241, 244, 252, 253, 268, 271, 291, 295, 298], "accid": [11, 12, 14, 89, 259], "accident": [11, 12, 14, 15], "accompani": [11, 12, 68], "accomplish": [27, 30, 50, 115, 271], "accord": [5, 16, 23, 69, 76, 79, 80, 84, 87, 88, 89, 96, 118, 120, 124, 128, 130, 150, 151, 157, 158, 184, 190, 206, 211, 213, 215, 216, 217, 233, 238, 239, 246, 251, 253, 258, 273], "accordingli": [79, 208, 215], "account": [3, 15, 18, 94, 124, 223, 232, 236], "accumul": [79, 251, 255], "accur": [3, 13, 14, 16, 39, 43, 48, 67, 79, 88, 92, 93, 110, 115, 140, 206, 227, 285, 292], "accuraci": [14, 16, 39, 67, 88, 209, 216, 286, 292], "achiev": [13, 15, 16, 22, 30, 32, 43, 88, 92, 96, 120, 128, 219, 227, 230, 232, 239, 242, 254, 269, 303], "acm": [70, 87, 113, 115, 209, 211, 214, 230, 232, 236, 238], "aco": [4, 16, 30, 61, 94, 101, 104, 163, 199, 220, 236, 264, 296, 301], "acosh": [94, 220], "acot": [94, 220], "acoth": [94, 220], "acquaint": 7, "across": [3, 5, 11, 79, 86, 88, 99, 115, 136, 189, 190, 197, 206, 220, 255, 257, 258, 259, 286, 294], "acsc": [94, 220], "acsch": [94, 220], "act": [12, 15, 18, 22, 26, 68, 71, 78, 79, 80, 84, 88, 96, 104, 117, 118, 124, 132, 133, 135, 137, 139, 147, 148, 151, 154, 155, 157, 162, 174, 179, 182, 183, 228, 239, 241, 242, 269, 273, 285, 298, 302, 306], "actf": 18, "actf2": 18, "action": [2, 5, 8, 11, 18, 79, 117, 134, 147, 154, 182, 185, 195, 216, 232, 239], "activ": [3, 8, 9, 17, 19, 132, 133, 134, 206, 249, 254, 256, 281, 299, 301, 303], "activation_dynam": 134, "activation_time_const": 131, "activationbas": [18, 131, 134], "active_deprecations_target": [3, 249, 254, 256], "activepython": 59, "activest": 258, "actual": [2, 3, 4, 5, 8, 9, 11, 12, 14, 15, 16, 21, 22, 25, 26, 27, 39, 41, 42, 43, 46, 68, 69, 70, 77, 79, 86, 88, 89, 96, 100, 113, 115, 117, 120, 124, 128, 132, 134, 143, 147, 155, 158, 204, 206, 207, 209, 210, 215, 220, 228, 230, 232, 233, 236, 239, 247, 251, 252, 255, 256, 258, 259, 290, 301], "actuat": [19, 134, 150, 155, 157, 281, 299], "actuatorbas": [18, 147, 157], "actz": 18, "acycl": 258, "ad": [4, 5, 7, 8, 9, 11, 12, 13, 14, 21, 22, 30, 41, 50, 52, 61, 68, 69, 72, 78, 79, 88, 89, 99, 103, 110, 113, 117, 128, 130, 135, 139, 148, 151, 157, 164, 192, 195, 200, 205, 206, 215, 217, 219, 220, 222, 230, 233, 236, 238, 239, 240, 242, 245, 246, 251, 267, 288, 298, 303], "adam": [205, 216], "adamek": 68, "adapt": [13, 141, 206, 226, 238, 258, 263], "add": [2, 3, 4, 9, 12, 14, 15, 16, 22, 30, 35, 36, 38, 41, 55, 61, 63, 67, 69, 77, 79, 84, 89, 92, 95, 103, 105, 113, 117, 120, 124, 128, 135, 137, 139, 148, 157, 168, 174, 184, 189, 190, 193, 206, 209, 210, 211, 213, 215, 216, 217, 220, 221, 230, 232, 233, 236, 237, 239, 240, 242, 244, 245, 246, 254, 259, 262, 286, 288, 291, 295, 296, 298, 303], "add_actu": [157, 306], "add_as_root": 117, "add_auxiliary_spe": 157, "add_bodi": [157, 306], "add_coordin": 157, "add_formula": 230, "add_gen": 211, "add_ground": [211, 216], "add_handl": 13, "add_holonomic_constraint": [157, 303], "add_joint": [13, 24, 157, 303, 306], "add_kd": 157, "add_load": [157, 303, 306], "add_memb": 139, "add_nod": 139, "add_nonholonomic_constraint": 157, "add_simple_root": 117, "add_spe": 157, "add_typ": 239, "addaugmentedassign": 69, "addb": 230, "addend": 246, "addison": [72, 80, 128, 214], "addit": [0, 2, 3, 5, 9, 12, 13, 14, 15, 16, 18, 21, 27, 31, 32, 35, 36, 37, 39, 59, 61, 69, 78, 79, 80, 87, 88, 94, 96, 100, 106, 108, 112, 113, 115, 116, 118, 120, 124, 128, 130, 131, 132, 134, 140, 141, 143, 148, 152, 176, 188, 189, 192, 204, 205, 206, 207, 208, 209, 210, 213, 215, 216, 220, 226, 229, 230, 232, 233, 236, 237, 238, 239, 240, 251, 252, 253, 255, 256, 258, 259, 261, 268, 288, 290, 291, 292, 295, 296, 298], "addition": [2, 4, 11, 13, 14, 18, 25, 36, 88, 188, 213, 220, 240, 249, 256, 268], "additional_transl": 13, "address": [9, 12, 88, 220, 239], "addrul": 115, "adequ": 220, "adher": [3, 5, 113], "adi": 242, "adic": 214, "adj": [124, 209], "adj_det": 209, "adj_poly_det": 209, "adja": 209, "adjac": [78, 79, 80, 88, 93, 143, 162, 209, 258], "adject": [15, 240], "adjoin": [79, 208], "adjoint": [117, 124, 167, 171, 220], "adjoint_styl": 220, "adjug": [124, 209], "adjust": [12, 18, 157, 223, 227], "admiss": [222, 225], "admit": [96, 236], "adopt": [79, 246], "advanc": [5, 17, 20, 23, 28, 34, 38, 40, 43, 63, 79, 88, 92, 93, 124, 125, 206, 209, 210, 212, 214, 215, 222, 229, 236, 251, 252, 253, 258, 285, 287, 289, 293, 294, 295, 296], "advantag": [9, 13, 37, 41, 43, 48, 64, 67, 69, 88, 89, 93, 115, 118, 124, 128, 140, 194, 209, 210, 217, 228, 233, 236, 239, 255, 288, 290, 292, 296], "advers": 88, "advertis": 5, "advis": [12, 13, 22, 41, 57, 68, 151], "ae": 217, "aegean": 89, "aeq": 238, "aesara": [2, 13, 30, 69], "aesara_cod": [13, 220], "aesara_funct": [69, 129, 220], "aesaracod": [2, 13, 69, 129, 220], "aesaraprint": [13, 220], "aeseara": 2, "aesthet": [5, 15, 206], "af": [30, 76, 79, 85], "affect": [11, 13, 14, 32, 41, 43, 87, 88, 124, 216, 238, 239, 269], "affin": [88, 89, 103, 207], "affine_ciph": 89, "affine_rank": 103, "affirm": 228, "aforement": [33, 233, 271, 301], "after": [3, 4, 5, 8, 9, 11, 12, 13, 14, 16, 24, 25, 27, 30, 32, 33, 36, 59, 61, 63, 64, 68, 70, 76, 79, 80, 84, 86, 87, 88, 89, 90, 94, 103, 105, 110, 115, 124, 128, 130, 135, 143, 157, 159, 163, 175, 187, 195, 209, 213, 215, 216, 217, 218, 220, 221, 226, 233, 236, 237, 238, 239, 241, 251, 254, 259, 261, 264, 267, 271, 285, 286, 288, 292, 296, 303], "afterward": [16, 69, 88, 154, 305], "afunc": 259, "ag": [139, 236], "again": [3, 8, 9, 12, 14, 16, 18, 22, 32, 35, 39, 42, 71, 80, 88, 103, 128, 147, 157, 185, 186, 199, 207, 208, 215, 223, 230, 236, 249, 268, 288, 296, 301], "against": [12, 13, 18, 22, 41, 43, 57, 89, 124, 135, 252, 298], "agca": [212, 282], "agnost": 253, "agre": [12, 88, 89, 96, 103, 113, 230], "agreement": 11, "ahead": [4, 128], "ai": [36, 96, 128, 216, 233, 242, 261, 269, 296, 305], "aid": [69, 301], "aim": [4, 5, 12, 106, 113, 195, 207, 230, 236, 239, 289, 290, 300], "ainv": 209, "airi": [115, 236], "airspe": 2, "airy_funct": 96, "airyai": [96, 220, 236], "airyaiprim": [96, 220], "airybas": 96, "airybi": [96, 220, 236], "airybiprim": [96, 220], "airyfunct": 96, "aitken_html": 233, "ajwa": 214, "ajwa95": 214, "ak": [87, 222], "aka": [13, 120], "akrita": 216, "al": [22, 115, 131, 132, 134, 169, 213, 229, 232], "albeit": [115, 268], "aleaxit": 92, "alembertian": 238, "alexandria": 233, "alf_b_n": 30, "alg": [211, 215, 219], "alg_con": [31, 157], "alg_con_ful": 31, "alg_factor": 213, "alg_field_from_poli": [211, 215], "algebra": [0, 5, 15, 16, 18, 23, 30, 31, 34, 37, 41, 47, 49, 54, 57, 65, 70, 71, 79, 88, 89, 92, 93, 94, 106, 109, 110, 111, 113, 115, 118, 122, 125, 128, 129, 130, 150, 157, 205, 208, 209, 211, 212, 213, 214, 216, 217, 220, 222, 230, 233, 235, 236, 239, 275, 276, 279, 281, 282, 287, 288, 290, 292], "algebraic_express": 88, "algebraic_field": [210, 211, 213, 215], "algebraic_multipl": 292, "algebraic_numb": [41, 65, 88], "algebraiccomput": 88, "algebraicfield": [210, 211, 213, 215], "algebraichandl": 65, "algebraicnumb": [88, 211, 215, 219], "algebraicpred": 65, "algintpow": 215, "algo": [69, 80], "algo2008": 80, "algorithm": [2, 4, 14, 15, 27, 41, 48, 52, 54, 56, 57, 67, 72, 73, 78, 79, 80, 82, 84, 86, 87, 88, 89, 92, 93, 94, 100, 105, 113, 115, 118, 120, 124, 125, 128, 135, 144, 151, 177, 195, 199, 205, 206, 207, 208, 209, 210, 211, 214, 215, 217, 221, 225, 228, 229, 232, 233, 236, 238, 239, 240, 246, 255, 258, 281, 286, 291, 292, 296], "algorithmist": 79, "alia": [9, 69, 81, 88, 98, 104, 119, 121, 124, 126, 131, 134, 174, 183, 190, 207, 209, 210, 211, 215, 219, 228, 251, 261, 296], "alias": [9, 121, 211], "alic": [79, 89], "align": [13, 36, 69, 98, 124, 151, 158, 205, 220, 238, 251, 298], "alignof": 69, "alkiviadi": 216, "all": [0, 2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 22, 23, 25, 27, 30, 31, 33, 36, 37, 39, 41, 42, 43, 45, 53, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 113, 115, 117, 118, 119, 120, 123, 124, 127, 128, 129, 130, 131, 132, 134, 135, 136, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 164, 169, 170, 174, 184, 186, 187, 188, 190, 192, 193, 194, 195, 197, 198, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 244, 246, 247, 249, 251, 252, 253, 254, 256, 258, 259, 261, 264, 266, 268, 270, 271, 272, 273, 275, 285, 286, 288, 290, 291, 292, 295, 296, 297, 298, 301, 302, 303, 306], "all_coeff": [210, 211, 216], "all_integr": [55, 236, 237], "all_model": 118, "all_monom": [211, 216], "all_root": [117, 128, 216], "all_term": [211, 216], "allei": 96, "allhint": [236, 237], "alli": 215, "alloc": [69, 94], "allow": [2, 3, 5, 11, 12, 13, 14, 15, 16, 18, 22, 23, 27, 28, 30, 36, 41, 43, 45, 48, 65, 68, 69, 70, 72, 79, 81, 84, 87, 88, 89, 92, 94, 96, 98, 99, 100, 113, 116, 118, 120, 121, 124, 128, 129, 130, 134, 136, 150, 151, 152, 158, 162, 174, 190, 194, 195, 196, 206, 207, 210, 211, 213, 215, 216, 217, 220, 225, 227, 228, 229, 232, 233, 236, 238, 239, 240, 241, 245, 251, 254, 256, 258, 259, 269, 286, 288, 291, 301], "allow_half": 88, "allow_hyp": [96, 232], "allow_unknown_funct": 220, "almost": [12, 14, 53, 113, 121, 130, 192, 207, 211, 216, 217, 236, 240, 254, 255, 258, 290], "almost_linear": 236, "almost_linear_integr": 236, "almosteq": 211, "almostlinear": 236, "alon": [14, 41, 89, 116, 213, 236, 238, 245, 258, 290, 291], "along": [12, 18, 21, 25, 26, 27, 28, 30, 32, 33, 36, 39, 43, 48, 69, 79, 88, 89, 90, 94, 96, 97, 98, 102, 103, 106, 108, 111, 113, 120, 124, 135, 136, 137, 139, 146, 147, 151, 152, 154, 155, 157, 158, 159, 187, 199, 206, 209, 210, 215, 216, 236, 239, 267, 271, 273, 298, 301, 305, 308, 309, 310], "alongsid": [3, 11, 12, 13, 14, 43, 120, 147], "alp": 89, "alpertron": 233, "alpha": [5, 16, 18, 35, 36, 79, 88, 96, 115, 117, 130, 143, 147, 162, 166, 169, 187, 203, 205, 211, 213, 215, 216, 219, 220, 232, 236, 240], "alpha_": [18, 124, 134, 205], "alpha_0": 124, "alpha_1": [93, 124, 128, 215], "alpha_2": [93, 128, 215], "alpha_i": [88, 215], "alpha_k": [93, 128], "alpha_m": 215, "alpha_n": 215, "alpha_opt": [18, 134], "alpha_r": 230, "alphabet": [11, 88, 89, 143, 195, 208, 233, 253], "alphanumer": 236, "alreadi": [2, 3, 7, 9, 10, 11, 12, 13, 14, 16, 18, 22, 27, 33, 35, 36, 41, 43, 45, 51, 52, 55, 57, 59, 61, 79, 80, 88, 89, 97, 98, 101, 102, 104, 113, 115, 124, 125, 128, 139, 144, 148, 157, 159, 185, 187, 190, 206, 209, 210, 213, 215, 219, 223, 229, 230, 232, 236, 239, 240, 246, 269, 271, 286, 288, 289, 290, 294, 295, 296, 297, 303], "also": [0, 2, 3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 39, 41, 42, 43, 45, 46, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 71, 77, 79, 80, 87, 89, 90, 92, 93, 94, 95, 96, 100, 104, 106, 108, 110, 111, 113, 115, 117, 118, 121, 124, 125, 128, 129, 130, 131, 132, 134, 135, 136, 139, 140, 141, 143, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 163, 173, 174, 176, 180, 184, 189, 190, 193, 194, 195, 199, 201, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 249, 251, 252, 253, 254, 255, 256, 259, 261, 264, 267, 268, 269, 270, 271, 273, 274, 285, 286, 288, 290, 291, 292, 295, 296, 297, 298, 301, 303, 305, 306, 309], "alt": [69, 215], "alter": [16, 70, 79, 88, 199, 210, 220, 222, 239], "altern": [2, 3, 4, 8, 13, 14, 15, 16, 18, 22, 25, 27, 35, 42, 43, 59, 69, 76, 79, 80, 87, 88, 92, 93, 94, 95, 96, 120, 124, 125, 129, 130, 131, 134, 147, 199, 205, 206, 208, 209, 210, 213, 215, 216, 220, 225, 227, 229, 238, 239, 241, 242, 258, 288, 290, 292, 303], "alternating_permut": 93, "alternatinggroup": [76, 79, 85], "alternatingpermut": 93, "although": [0, 2, 3, 4, 5, 11, 12, 14, 15, 16, 21, 30, 38, 39, 41, 43, 51, 80, 88, 89, 94, 100, 112, 113, 116, 118, 120, 124, 128, 207, 209, 210, 211, 213, 215, 216, 228, 229, 232, 233, 238, 252, 258, 259, 288, 291, 296, 301], "altitud": 104, "alwai": [3, 4, 5, 11, 12, 13, 14, 15, 16, 22, 31, 33, 35, 41, 42, 43, 53, 59, 61, 68, 79, 80, 87, 88, 89, 90, 92, 94, 96, 98, 100, 103, 104, 112, 113, 115, 118, 124, 127, 128, 137, 139, 143, 144, 155, 157, 158, 190, 192, 195, 196, 207, 208, 209, 210, 211, 213, 215, 216, 220, 221, 222, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 247, 251, 253, 258, 259, 264, 266, 271, 286, 288, 289, 290, 291, 296, 298, 300, 301, 305, 309], "am": [128, 195, 220], "ama": 143, "amalgam": 113, "amat": 301, "ambient": 103, "ambient_dimens": [97, 99, 101, 103], "ambigu": [5, 13, 14, 16, 37, 88, 130, 178, 184, 232, 244, 249], "amd64": 69, "amen": [23, 150], "amend": 79, "amer": 124, "american": [5, 74, 89], "ami": 128, "ami_42_from129to134": 128, "amic": 128, "amicable_numb": 128, "amirgi": 240, "amit": [0, 239], "among": [18, 41, 68, 69, 70, 72, 79, 80, 89, 116, 129, 216, 236, 241, 244, 246, 268], "amongst": [41, 238], "amount": [4, 12, 18, 23, 33, 36, 68, 88, 89, 100, 150, 151, 199, 213, 223, 251, 264, 266], "amper": [161, 194], "amplitud": [141, 164], "amsfont": 220, "amsmath": 220, "amus": 207, "an": [0, 2, 3, 4, 5, 7, 8, 9, 10, 12, 15, 16, 18, 21, 23, 25, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 53, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 141, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 157, 158, 161, 162, 163, 167, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 183, 184, 185, 187, 188, 190, 191, 192, 194, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 232, 233, 235, 236, 237, 238, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 258, 259, 261, 264, 266, 268, 269, 271, 272, 273, 274, 285, 286, 287, 288, 289, 290, 292, 295, 296, 297, 298, 301, 303, 305, 306], "anaconda3": 12, "analog": [13, 28, 35, 36, 43, 48, 53, 81, 87, 89, 93, 207, 208, 209, 213, 216, 225, 241, 258], "analogi": [87, 213], "analogu": [42, 65, 87, 102, 210, 211], "analyitc": 113, "analys": [30, 46, 68, 141, 143, 240], "analysi": [27, 28, 31, 39, 69, 70, 79, 88, 89, 94, 140, 207, 216, 230, 233, 240, 286, 299, 301], "analyt": [15, 18, 23, 59, 93, 96, 113, 124, 132, 150, 155, 236, 286], "analytic_func": 124, "analyz": [12, 232, 245], "anatomi": 133, "anc": 215, "ancestor": 215, "andi": [0, 29], "andr": [93, 216], "andre_poli": [93, 216], "andreescu": 233, "andrew": [93, 105, 128], "andrica": 233, "anew": 88, "anf": 118, "anf_coeff": 118, "anfform": 118, "ang": 301, "ang_acc_in": [30, 199], "ang_vel_in": [22, 30, 35, 148, 151, 199, 302, 308, 309], "angelia": 67, "angl": [18, 22, 24, 27, 35, 36, 43, 61, 94, 96, 97, 98, 99, 101, 102, 103, 104, 134, 137, 139, 145, 151, 157, 158, 159, 162, 163, 164, 187, 195, 199, 205, 220, 229, 239, 264, 266, 269, 296, 298, 301, 302, 303, 305, 306], "angle1": [264, 266], "angle2": [264, 266], "angle3": [264, 266], "angle_addit": 61, "angle_between": [101, 102, 104, 199], "angle_of_incid": 163, "angular": [23, 24, 27, 30, 124, 135, 145, 148, 151, 154, 159, 163, 164, 166, 169, 187, 191, 199, 203, 205, 298, 301, 302, 303, 305, 306, 308, 310], "angular_deflect": 135, "angular_momentum": [28, 30, 148, 154], "angular_veloc": 164, "angvel": 30, "ani": [2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 22, 23, 26, 27, 28, 31, 33, 35, 36, 37, 38, 41, 42, 43, 48, 50, 51, 52, 55, 59, 65, 66, 67, 68, 69, 70, 77, 78, 79, 80, 86, 87, 88, 89, 90, 92, 93, 94, 96, 98, 99, 100, 103, 104, 105, 113, 115, 116, 118, 121, 123, 124, 125, 128, 130, 131, 132, 134, 135, 136, 139, 143, 145, 147, 148, 150, 151, 152, 153, 154, 155, 157, 159, 163, 176, 179, 184, 185, 188, 190, 192, 195, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 220, 221, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 240, 242, 245, 246, 251, 252, 254, 255, 256, 258, 259, 264, 268, 269, 270, 271, 273, 274, 285, 286, 288, 291, 292, 295, 296, 297], "annal": [18, 80, 131, 132, 134, 298], "annihil": [87, 106, 107, 111, 166, 190, 238], "annihilateboson": 190, "annihilatefermion": 190, "annoi": 12, "annot": [55, 128, 206, 220], "annoy": 88, "anoth": [3, 4, 5, 11, 12, 13, 14, 15, 18, 24, 28, 35, 36, 38, 39, 41, 42, 43, 48, 50, 52, 53, 54, 55, 56, 65, 68, 69, 80, 85, 87, 88, 89, 90, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 113, 115, 120, 124, 128, 134, 135, 136, 147, 148, 152, 154, 155, 158, 179, 194, 195, 197, 199, 203, 206, 208, 209, 210, 211, 213, 215, 216, 217, 220, 221, 227, 228, 230, 236, 238, 239, 240, 252, 253, 259, 264, 268, 269, 273, 285, 288, 290, 291, 296, 297], "anp": [88, 210, 211, 215, 216], "answer": [3, 7, 12, 14, 41, 43, 48, 79, 88, 92, 110, 113, 115, 118, 124, 128, 195, 213, 217, 229, 230, 232, 238, 240, 255, 261, 290, 292, 296], "anteced": [113, 227], "anthoni": 0, "anti": [11, 15, 61, 65, 84, 94, 115, 124, 162, 167, 246], "anti_symmetr": 124, "anticip": 195, "anticlockwis": [124, 139], "anticommut": [84, 177, 179, 189, 190, 246, 281], "antideriv": [15, 94, 96, 115, 236, 286], "antiderv": 236, "antidivisor": 128, "antidivisor_count": 128, "antihermitian": [41, 65, 88], "antihermitianhandl": 65, "antihermitianpred": 65, "antipattern": [14, 43, 289], "antisym": 84, "antisymmetr": [84, 90, 124, 190, 246], "antisymmetrictensor": 190, "antlr": [2, 22], "antlr4": [2, 130], "anum": 209, "anycod": 13, "anymor": [11, 12, 206], "anyon": [4, 5, 13, 58, 216, 220, 284, 294, 295], "anyth": [3, 4, 5, 12, 13, 14, 16, 22, 43, 67, 69, 88, 89, 99, 103, 124, 164, 174, 217, 220, 226, 228, 232, 236, 238, 252, 258, 261, 288], "anyv": 89, "anywai": [113, 232, 236], "anywher": [3, 4, 13, 41, 69, 88, 96, 102, 190, 261, 290], "ao": [30, 298], "aocp": 255, "aother": 96, "ap": [96, 100, 230], "apart": [14, 33, 43, 61, 79, 84, 88, 92, 94, 115, 130, 147, 155, 208, 209, 211, 213, 216, 219, 222, 233, 239, 246, 269, 271, 291], "apart_list": 216, "aperiod": 67, "apfloat": 91, "aphras": 89, "api": [4, 5, 11, 13, 14, 18, 28, 30, 41, 44, 51, 53, 69, 88, 100, 108, 129, 130, 142, 186, 206, 213, 233, 235, 259, 268, 269, 272, 279, 281, 282, 289, 290, 293], "apoapsi": 98, "apothem": 104, "app": 115, "app1": 240, "appar": [11, 12, 14, 15, 16, 88, 261, 296], "apparatu": 13, "appdata": 8, "appeal": 113, "appear": [4, 5, 11, 12, 14, 15, 16, 22, 37, 55, 68, 69, 72, 77, 79, 88, 89, 93, 94, 97, 98, 101, 104, 107, 111, 113, 115, 124, 128, 130, 155, 174, 190, 192, 195, 206, 208, 210, 213, 215, 216, 220, 229, 232, 236, 237, 238, 240, 244, 246, 251, 258, 259, 264, 269, 305], "appel": [93, 96], "appell_seri": 96, "appellf1": [96, 220], "appellseq": [93, 216], "append": [14, 30, 50, 55, 79, 88, 89, 124, 136, 185, 206, 211, 220, 238, 241, 253, 254, 258, 296, 302], "appetit": 290, "appli": [5, 9, 11, 12, 13, 14, 15, 18, 25, 27, 29, 36, 42, 43, 46, 53, 57, 61, 62, 63, 64, 65, 69, 79, 80, 81, 86, 87, 88, 89, 90, 91, 94, 95, 98, 103, 104, 106, 115, 118, 119, 124, 128, 130, 135, 136, 137, 139, 143, 144, 147, 148, 149, 152, 154, 155, 157, 167, 171, 174, 175, 179, 182, 183, 187, 190, 199, 206, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 221, 222, 226, 227, 228, 229, 232, 236, 237, 238, 239, 240, 241, 244, 251, 254, 258, 264, 266, 269, 292, 295, 296, 298, 301, 303, 306], "applic": [0, 5, 13, 18, 22, 23, 27, 29, 30, 35, 49, 52, 70, 71, 72, 78, 79, 80, 81, 88, 89, 93, 94, 115, 124, 128, 135, 137, 139, 147, 150, 151, 152, 157, 174, 175, 199, 203, 208, 209, 213, 214, 215, 216, 220, 222, 227, 233, 236, 239, 253, 258, 264, 271, 272, 279, 290], "applied_load": 135, "appliedfunct": 130, "appliedpermut": 80, "appliedpred": [38, 62, 63, 64], "appliedundef": 88, "apply_finite_diff": [67, 88, 286], "apply_forc": [13, 148], "apply_grov": 175, "apply_length": 137, "apply_load": [135, 136, 137, 139], "apply_moment_load": 135, "apply_oper": [179, 190], "apply_rotation_hing": 135, "apply_sliding_hing": 135, "apply_support": [135, 139], "apply_torqu": 148, "apply_uniform_grav": [13, 157, 303, 306], "applyfunc": [46, 119, 124, 199, 209, 241, 309], "approach": [8, 14, 23, 39, 48, 51, 52, 53, 55, 56, 57, 68, 87, 88, 115, 143, 150, 209, 210, 213, 214, 215, 217, 228, 237, 238, 240, 252, 255, 258, 286, 292, 305], "appropri": [2, 4, 5, 11, 12, 13, 14, 16, 21, 35, 39, 52, 56, 79, 88, 94, 103, 124, 179, 180, 190, 199, 206, 209, 210, 216, 217, 220, 226, 227, 232, 233, 238, 240, 245, 253, 269, 295, 301], "approx": [39, 49, 54, 88, 115], "approxim": [4, 14, 16, 17, 40, 57, 67, 79, 87, 88, 89, 92, 96, 98, 104, 113, 115, 124, 128, 136, 140, 159, 193, 210, 211, 216, 223, 227, 230, 240, 286, 290], "approximations_for_the_nth_prime_numb": 128, "apr": 100, "april": 87, "apt": [8, 9], "aq": 209, "ar": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 162, 163, 164, 165, 167, 169, 171, 174, 176, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 249, 251, 252, 253, 255, 256, 257, 258, 259, 261, 264, 266, 267, 268, 269, 270, 271, 273, 275, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 308, 309, 310], "ar_": 217, "ar_i": 217, "ara": 89, "arab": 207, "arang": [43, 252, 285], "arb": 98, "arbitrari": [2, 4, 13, 14, 15, 16, 18, 24, 28, 36, 41, 43, 48, 52, 54, 56, 57, 67, 73, 80, 81, 87, 88, 89, 92, 93, 96, 99, 100, 102, 118, 124, 136, 153, 176, 179, 206, 207, 210, 211, 213, 215, 217, 232, 236, 237, 238, 246, 256, 259, 264, 266, 285, 286, 291, 296, 297], "arbitrarili": [37, 48, 67, 88, 101, 128, 213, 215, 227, 230, 236, 237, 238, 240], "arbitrary_matrix": 124, "arbitrary_point": [97, 98, 99, 100, 101, 102, 104], "arc": [61, 94, 158, 296, 298], "arc_coplanar": 61, "arc_length": 298, "arcco": [16, 94, 158, 220], "arccosh": 220, "arccot": [94, 220], "arccoth": 220, "arccsc": [94, 220], "arccsch": [94, 220], "architectur": [0, 12, 30, 210, 251], "archiv": [29, 72, 80, 89, 93, 96, 105, 115, 128, 209, 232, 233, 240, 258, 292], "arcsec": [94, 220], "arcsech": [94, 220], "arcsin": [16, 94, 130, 217, 220, 240], "arcsine_distribut": 240, "arcsinh": 220, "arctan": [94, 217, 220], "arctan2": [94, 220], "arctang": 217, "arctanh": [130, 220], "arctanrul": 115, "arcversin": 43, "arduou": [23, 150], "are_collinear": 103, "are_concurr": [101, 102], "are_coplanar": 103, "are_similar": [4, 99, 100, 105], "area": [88, 98, 100, 104, 105, 135, 136, 157], "aren": [3, 11, 12, 13, 14, 15, 22, 43, 69, 88, 219, 239], "arg": [5, 11, 15, 36, 41, 43, 50, 52, 55, 61, 63, 64, 65, 66, 67, 68, 69, 72, 79, 80, 82, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 101, 103, 104, 105, 110, 113, 115, 118, 119, 120, 121, 124, 126, 128, 130, 137, 139, 143, 159, 165, 168, 170, 173, 174, 175, 176, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 199, 204, 206, 209, 211, 213, 215, 216, 217, 220, 222, 223, 226, 227, 228, 229, 232, 236, 238, 239, 240, 241, 242, 245, 246, 251, 252, 253, 254, 258, 259, 261, 264, 266], "arg1": [12, 240], "arg2": [12, 240], "argand": 239, "argindex": [4, 11, 43, 69, 88, 94, 95, 96, 132], "args_cnc": 88, "argu": 128, "argular": 187, "argument": [2, 3, 4, 11, 12, 14, 15, 18, 22, 25, 26, 28, 30, 33, 38, 41, 42, 43, 48, 50, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 104, 105, 113, 115, 116, 118, 120, 124, 127, 128, 130, 132, 134, 135, 141, 143, 147, 151, 152, 155, 157, 158, 164, 167, 171, 173, 176, 179, 184, 185, 187, 188, 189, 190, 198, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 219, 220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 240, 242, 244, 245, 251, 252, 253, 254, 255, 256, 258, 259, 261, 268, 269, 271, 285, 286, 291, 292, 296], "argument_sequ": [69, 253], "argument_test": [69, 220], "argument_tupl": 252, "argumentindexerror": [11, 43], "argv": [116, 251], "aris": [36, 41, 42, 88, 93, 113, 115, 187, 209, 210, 215], "arithmet": [2, 12, 14, 69, 88, 89, 92, 124, 128, 179, 186, 205, 206, 207, 209, 210, 211, 213, 214, 218, 221], "arithmetica": 233, "ariti": [5, 206], "arjona": 205, "arm": [298, 299], "armi": 89, "armstrong": 76, "around": [2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 16, 18, 23, 27, 31, 36, 42, 43, 59, 67, 77, 80, 88, 89, 90, 92, 94, 97, 104, 108, 124, 127, 128, 139, 148, 150, 151, 155, 158, 210, 213, 215, 220, 222, 227, 233, 236, 239, 240, 251, 264, 266, 286, 288, 290, 298], "arr": 69, "arr1": 128, "arr2": 128, "arrai": [14, 18, 30, 43, 49, 53, 54, 55, 69, 79, 80, 84, 85, 89, 96, 115, 120, 124, 128, 129, 130, 141, 153, 187, 206, 209, 211, 216, 220, 239, 240, 243, 245, 246, 247, 252, 253, 255, 259, 279, 292, 298], "arrang": [28, 30, 46, 80, 143, 152, 216, 229, 233, 246], "array_der": [241, 242], "array_express": 241, "array_form": [78, 80, 81, 242], "array_lik": [152, 153, 298], "arrayadd": 242, "arrayconstructor": 69, "arraycontract": [241, 242], "arraydiagon": [241, 242], "arrayexpr": 69, "arraysymbol": 242, "arraytensorproduct": [120, 241, 242], "arref": 209, "arriv": [90, 213, 230, 232, 236, 240, 296], "arrow": [68, 117, 135, 206, 220], "arrow_formatt": 68, "arrow_styl": 68, "arrowfrombar": 220, "arrowstringdescript": 68, "art": [72, 80, 207, 220, 222, 255], "articl": [0, 7, 88, 89, 120, 124, 212, 214, 215, 220, 229, 264, 282, 290], "articul": 215, "artifact": 124, "artifici": [214, 223], "artist": 89, "arxiv": [91, 93, 96, 124, 145, 216, 258, 302], "as_add": [43, 88], "as_algebraicfield": 211, "as_base_exp": [88, 94, 95, 258], "as_coef_add": 88, "as_coef_mul": 88, "as_coeff_add": 88, "as_coeff_expon": 88, "as_coeff_mul": [13, 14, 88, 113, 120], "as_coeffici": [14, 88], "as_coefficients_dict": 88, "as_content_primit": [88, 124, 208, 216], "as_declar": 69, "as_dict": [77, 210, 216], "as_dummi": [88, 115], "as_explicit": [13, 53, 120, 124, 146, 241, 242], "as_expr": [13, 88, 124, 209, 210, 215, 216, 217, 292], "as_expr_set_pair": 94, "as_ferr": 77, "as_finite_differ": [13, 67, 88, 286], "as_immut": 119, "as_independ": [14, 43, 88, 239], "as_int": [184, 261], "as_leading_term": [12, 88, 227], "as_list": [110, 216], "as_mut": [88, 119, 120], "as_numer_denom": [88, 238], "as_ordered_factor": 88, "as_ordered_term": 88, "as_poli": [13, 88, 208, 213, 216], "as_powers_dict": 88, "as_real_imag": [88, 94, 124, 221], "as_rel": 228, "as_set": [50, 118], "as_submodul": 215, "as_sum": 115, "as_term": 88, "as_two_term": [43, 88], "as_unevaluated_bas": 232, "asa": 104, "asarrai": [14, 129], "ascend": [80, 115, 233, 258], "ascent": 80, "ascertain": 158, "ascii": 220, "asec": [94, 220], "asech": [94, 220], "aseri": 88, "ashutosh": 0, "asid": [12, 16, 118, 236, 237, 290], "asin": [16, 94, 96, 102, 217, 220, 230, 232, 236, 240, 296, 298], "asinh": [94, 220], "ask": [2, 4, 7, 9, 11, 15, 16, 22, 38, 41, 42, 63, 64, 65, 66, 88, 100, 113, 195, 207, 226, 232, 239, 258, 276, 288], "askalgebraicpredicatehandl": 65, "askhandl": 62, "askpredicatehandl": [63, 64], "askprimehandl": 13, "asnumpi": 129, "aspect": [5, 7, 11, 12, 14, 41, 124, 133, 210, 298], "aspect_ratio": 206, "aspx": 236, "assembl": [89, 113, 227, 298], "assemble_partfrac_list": 216, "assembli": [139, 301], "assert": [3, 11, 12, 27, 68, 77, 78, 79, 80, 88, 98, 100, 130, 209, 220, 228, 236, 237, 238, 249, 256, 258], "assertionerror": [12, 249], "assess": 39, "assign": [5, 9, 22, 30, 33, 36, 41, 55, 68, 69, 70, 84, 88, 93, 104, 115, 117, 118, 124, 130, 152, 195, 206, 208, 213, 220, 238, 239, 246, 253, 268, 271, 288, 308], "assign_to": [69, 220], "assignmentbas": 69, "assignmenterror": 220, "assist": 236, "assoc_laguerr": [69, 96, 220], "assoc_legendr": [96, 220], "assoc_recurrence_memo": 260, "associ": [5, 9, 11, 15, 18, 28, 30, 32, 35, 36, 41, 51, 68, 70, 86, 88, 89, 95, 96, 110, 111, 113, 117, 131, 134, 147, 154, 157, 158, 180, 188, 199, 206, 208, 209, 210, 211, 213, 215, 220, 228, 230, 233, 246, 260, 298, 306], "associated_legendre_polynomi": 96, "associatedlaguerrepolynomi": 96, "assocop": 88, "assoic": 209, "asssumpt": 220, "assum": [2, 4, 14, 15, 16, 18, 22, 25, 26, 27, 28, 30, 33, 38, 41, 43, 52, 55, 56, 61, 64, 69, 70, 72, 77, 79, 87, 88, 89, 90, 93, 94, 96, 98, 105, 106, 113, 115, 124, 128, 135, 139, 143, 147, 155, 157, 158, 163, 185, 189, 190, 199, 203, 207, 208, 210, 213, 216, 218, 220, 227, 228, 230, 232, 233, 236, 237, 238, 239, 240, 244, 245, 246, 253, 258, 261, 267, 269, 273, 276, 289, 291, 294, 296, 297, 298, 302, 307], "assump": [63, 64], "assumpt": [4, 12, 15, 16, 18, 21, 30, 40, 42, 44, 51, 52, 53, 62, 63, 65, 66, 68, 69, 79, 80, 82, 87, 90, 92, 94, 95, 115, 118, 124, 125, 135, 143, 194, 197, 201, 209, 219, 220, 228, 229, 232, 236, 238, 239, 245, 253, 258, 275, 276, 296, 298], "assumptionkei": 62, "assumptions0": [41, 88], "assumptionscontext": [62, 63, 64], "assur": [3, 128, 216], "ast": [88, 220], "asterisk": 5, "astr": 68, "astrophys": 193, "asv": 2, "asym2": 246, "asymmetr": [89, 104], "asymmetri": 240, "asymp": 227, "asymptot": [88, 113, 143, 286], "asymptotic_expans": 88, "at_pin_joint": 147, "atan": [31, 61, 66, 90, 92, 94, 99, 104, 112, 115, 159, 217, 220, 222, 305], "atan2": [61, 66, 90, 94, 164, 220, 264], "atan_2": 61, "atanh": [12, 94, 217, 220, 230], "atbash": 89, "atiyah": 214, "atiyah69": [207, 214], "atkinson": 79, "atleast": 236, "atol": 69, "atom": [15, 50, 69, 80, 88, 115, 118, 124, 145, 191, 210, 217, 220, 238, 239, 245], "atom_nam": 220, "atomic_mass_const": 197, "atomicexpr": [13, 88], "atoms_t": 220, "atop": [93, 96, 222, 230], "attach": [18, 24, 36, 41, 80, 82, 113, 129, 134, 135, 147, 151, 152, 155, 252, 254, 259, 298], "attachment_1": 155, "attachment_2": 155, "attack": 89, "attain": [238, 269], "attempt": [12, 21, 37, 39, 42, 43, 48, 51, 55, 57, 69, 79, 84, 86, 88, 92, 93, 100, 113, 115, 124, 128, 149, 185, 209, 210, 211, 215, 220, 222, 229, 232, 233, 236, 238, 239, 240, 251, 288, 296], "attent": [67, 79, 94], "attenu": 162, "attr": [3, 69], "attr_param": 69, "attribut": [4, 15, 18, 28, 31, 32, 33, 36, 38, 41, 43, 63, 64, 68, 69, 79, 80, 88, 96, 97, 98, 101, 102, 103, 104, 120, 124, 130, 131, 133, 134, 136, 143, 148, 151, 152, 153, 154, 155, 157, 179, 184, 188, 195, 199, 206, 207, 210, 211, 215, 220, 228, 232, 233, 245, 246, 252, 254, 258, 259, 268, 291, 302, 308], "attributeerror": [13, 14, 41, 88, 124, 239], "au": 93, "aug": [34, 202, 239], "aug_assign": 69, "augment": [4, 19, 25, 26, 30, 69, 124, 152, 157, 218, 238, 239, 256, 259, 297], "augmentedassign": 69, "august": [236, 255], "augustu": 89, "austin": 294, "authent": 9, "author": [0, 4, 7, 128, 176, 215], "auto": [11, 13, 16, 51, 67, 88, 89, 116, 206, 209, 213, 216, 220, 232, 236, 240], "auto_assert": 220, "auto_declar": 220, "auto_int_to_integ": [2, 116], "auto_kei": 89, "auto_numb": 130, "auto_symbol": [2, 116, 130], "autoclass": 4, "autocomplet": 16, "autocorrel": 89, "autodetect": [236, 237], "autodoc": 5, "autoexpand": [16, 232], "autofunc": 69, "autofunct": [4, 11], "autogener": 170, "autolev": [2, 23, 301], "autom": [69, 94, 129, 229, 252, 290], "automat": [2, 3, 4, 5, 8, 11, 12, 13, 15, 16, 18, 22, 35, 37, 41, 51, 52, 55, 57, 68, 69, 70, 80, 88, 90, 91, 92, 93, 94, 96, 101, 103, 107, 113, 116, 118, 128, 130, 132, 134, 135, 152, 157, 176, 178, 179, 188, 190, 194, 203, 206, 207, 209, 210, 211, 215, 216, 217, 220, 223, 226, 227, 229, 230, 232, 233, 236, 238, 239, 245, 246, 251, 252, 253, 256, 259, 269, 274, 286, 288, 290, 291, 295, 296, 297, 301, 309], "automatiqu": 217, "automorphisms_of_the_symmetric_and_alternating_group": 71, "autonom": 236, "autos": [80, 127], "autoscal": 206, "autosimplif": [88, 229, 232], "autowrap": [129, 245, 253, 257, 283], "auxiliari": [22, 25, 69, 115, 152, 157, 236, 252, 303], "auxiliary_circl": 98, "auxiliary_eq": [152, 303, 309], "avail": [2, 5, 7, 8, 9, 13, 15, 16, 18, 22, 27, 30, 41, 48, 54, 57, 58, 59, 68, 69, 79, 80, 87, 88, 93, 96, 115, 124, 128, 129, 130, 206, 210, 211, 213, 216, 220, 221, 226, 228, 230, 232, 233, 238, 239, 240, 241, 245, 246, 251, 258, 259, 263, 264, 288, 295], "averag": [105, 115, 128, 213, 240], "aversin": 43, "avoid": [5, 11, 12, 13, 15, 27, 35, 36, 42, 43, 48, 51, 61, 69, 70, 88, 89, 94, 113, 115, 118, 124, 127, 130, 184, 208, 209, 210, 213, 216, 220, 221, 228, 232, 236, 238, 240, 244, 253, 256, 259, 288, 289, 305], "avoid_square_root": 61, "aw": 298, "awai": [4, 14, 18, 68, 70, 89, 135, 136, 139, 147, 155, 215, 220, 301], "awang": 214, "awar": [2, 3, 4, 12, 14, 15, 16, 42, 67, 88, 92, 118, 124, 230, 240, 259], "awhil": 157, "ax": [13, 14, 18, 35, 36, 48, 49, 51, 53, 61, 89, 92, 98, 101, 113, 119, 124, 135, 141, 151, 152, 158, 162, 187, 199, 205, 206, 209, 217, 233, 236, 239, 241, 242, 245, 264, 266, 268, 269, 271, 273, 296, 298, 305], "ax2p": 233, "axb": 189, "axc": 189, "axhlin": 13, "axi": [13, 22, 24, 27, 30, 31, 32, 33, 35, 36, 55, 61, 81, 93, 94, 98, 99, 101, 102, 104, 110, 113, 115, 120, 124, 135, 139, 141, 146, 147, 151, 155, 157, 158, 159, 162, 163, 187, 199, 201, 203, 206, 211, 239, 264, 266, 269, 271, 274, 298, 301, 302, 305, 308, 309, 310], "axial": [135, 159], "axial_forc": 135, "axial_stress": 135, "axiom": [79, 207], "axiom_of_power_set": 228, "axis_cent": 206, "axis_orient": [264, 269], "axis_orienter1": 266, "axis_orienter2": 266, "axis_orienter3": 266, "axis_point": 298, "axisorient": [264, 266, 269], "az": [89, 143, 233], "azbz": [36, 269], "azimuth": 145, "a\u2080": 296, "a\u2080\u2080": 53, "a\u2080\u2081": 53, "a\u2080\u2082": 53, "a\u2080\u2083": 53, "a\u2081": [136, 296], "a\u2081\u2080": 53, "a\u2081\u2081": 53, "a\u2081\u2082": 53, "a\u2081\u2083": 53, "a\u2082": [136, 296], "a\u2082\u2080": 53, "a\u2082\u2081": 53, "a\u2082\u2082": 53, "a\u2082\u2083": 53, "a\u2083": 296, "a\u2083\u2080": 53, "a\u2083\u2081": 53, "a\u2083\u2082": 53, "a\u2083\u2083": 53, "a\u2084": 296, "b": [0, 11, 12, 14, 15, 16, 18, 22, 27, 28, 30, 32, 35, 36, 37, 41, 42, 43, 46, 48, 49, 51, 53, 61, 68, 69, 70, 72, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 98, 99, 100, 101, 102, 103, 104, 111, 113, 115, 117, 118, 119, 120, 124, 128, 130, 131, 132, 134, 135, 136, 137, 139, 141, 143, 148, 149, 151, 152, 153, 154, 155, 157, 159, 162, 167, 169, 171, 173, 178, 179, 182, 187, 188, 189, 190, 199, 201, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 220, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 251, 254, 255, 258, 261, 264, 266, 267, 268, 269, 270, 286, 288, 292, 296, 297, 298, 302, 305, 306], "b0": [84, 96, 211, 230, 236], "b1": [22, 30, 79, 84, 96, 128, 135, 136, 143, 148, 199, 211, 220, 230, 233, 236, 270], "b11": 30, "b12": 30, "b1_frame": 148, "b1prime": 230, "b2": [22, 30, 53, 96, 128, 135, 136, 143, 148, 199, 209, 211, 220, 230, 233, 236, 270], "b21": 30, "b22": 30, "b2_frame": 148, "b3": [22, 30, 117, 199, 270], "b4": 117, "b6bius_funct": [93, 128], "b6bius_inversion_formula": 91, "b_": [79, 84, 86, 88, 93, 96, 113, 120, 143, 222, 230, 233, 241, 242], "b_0": [84, 89, 93, 230, 233, 236], "b_1": [79, 86, 96, 110, 113, 207, 230, 233, 236, 296], "b_2": [79, 86, 96, 110, 230, 236], "b_cm": [22, 154], "b_eq": 238, "b_f": [22, 154], "b_frame": [148, 151], "b_i": [79, 84, 86, 113, 207, 230], "b_ij": 245, "b_interv": 228, "b_ixx": 148, "b_j": [84, 86, 96, 113, 230], "b_k": [79, 86, 89, 93, 96, 222, 223], "b_m": [96, 113, 238], "b_mass": 148, "b_masscent": 148, "b_muscl": 134, "b_n": [89, 93, 117, 207, 223], "b_op": 27, "b_q": [96, 113, 230, 296], "b_r": 79, "b_x": [36, 199, 201, 246, 302], "b_y": [36, 199, 201, 246], "b_z": [36, 199, 246], "ba": [93, 258], "baa": 258, "bab": 76, "babbag": 89, "babi": [93, 128, 258], "back": [0, 35, 43, 51, 52, 54, 68, 69, 84, 87, 88, 89, 94, 96, 103, 104, 110, 112, 113, 115, 116, 124, 128, 129, 143, 184, 204, 206, 209, 210, 215, 216, 218, 220, 230, 236, 238, 241, 242, 298], "backcolor": [116, 204], "backend": [13, 24, 69, 116, 129, 141, 157, 204, 217, 252, 259, 303, 306], "background": [23, 35, 96, 116, 204, 294], "backport": 3, "backslash": [4, 88, 220], "backtick": [4, 5, 8], "backtrac": 220, "backtrack": 86, "backward": [2, 39, 67, 88, 124, 143, 157, 220, 258, 296], "backward_diff": 143, "bad": [8, 11, 12, 13, 14, 87, 128, 192, 209, 220], "badli": 79, "baij": 190, "bailli": 128, "baji": 190, "balanc": [29, 89, 207, 240, 251, 298], "ball": 151, "ban275": 124, "banana": 258, "band": [124, 127], "bar": [13, 69, 96, 179, 185, 261, 300, 304], "bar_10": 185, "bar_4": 185, "bar_5": 185, "bare": [89, 152], "barei": 124, "bareiss": [124, 209], "bareiss_algorithm": 209, "barn": 96, "barri": [214, 258], "base": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 18, 22, 30, 31, 33, 36, 41, 43, 48, 59, 61, 63, 64, 67, 69, 70, 77, 78, 79, 84, 85, 86, 88, 89, 91, 93, 94, 95, 96, 99, 101, 104, 111, 115, 116, 117, 118, 119, 120, 128, 129, 130, 131, 132, 134, 140, 147, 148, 151, 154, 155, 157, 158, 159, 168, 170, 174, 175, 179, 185, 186, 188, 190, 192, 195, 196, 198, 199, 201, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 220, 222, 227, 228, 229, 230, 232, 233, 236, 238, 240, 244, 245, 246, 251, 252, 253, 254, 255, 256, 258, 259, 260, 264, 267, 268, 271, 291, 296, 301], "base1": 84, "base10": 232, "base2": 84, "base2a": 84, "base_a": 84, "base_char": 135, "base_dim": 192, "base_f": 84, "base_i": 84, "base_id": [207, 211], "base_oneform": 90, "base_ord": 86, "base_req": 69, "base_scalar": 90, "base_seq": 260, "base_set": 228, "base_solution_linear": 233, "base_unit": 198, "base_vector": [90, 264], "basebackend": 206, "basecovarderivativeop": 90, "basedyad": [264, 268], "baselin": 220, "basenam": [251, 252, 253], "basepolynomialerror": 213, "basescalar": [269, 271], "basescalarfield": 90, "baseseri": 206, "baseswap": 79, "basevector": [264, 268, 269], "basevectorfield": 90, "basi": [3, 32, 33, 35, 88, 90, 117, 120, 124, 148, 154, 175, 184, 185, 187, 190, 192, 195, 198, 199, 205, 207, 209, 211, 216, 219, 230, 232, 233, 238, 239, 241, 246, 267, 268, 271, 294, 308, 310], "basic": [2, 3, 4, 5, 7, 10, 11, 13, 15, 17, 22, 25, 26, 28, 30, 31, 33, 36, 41, 43, 57, 61, 63, 68, 69, 70, 76, 79, 83, 86, 87, 91, 94, 104, 106, 111, 112, 113, 118, 121, 123, 125, 132, 143, 151, 157, 164, 174, 188, 195, 198, 202, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 221, 227, 232, 233, 236, 237, 238, 239, 240, 251, 253, 258, 259, 262, 270, 271, 272, 279, 281, 282, 286, 287, 288, 289, 294, 303], "basic_orbit": [79, 86], "basic_root": 117, "basic_stabil": 79, "basic_transvers": [79, 86], "basis_el": 215, "basis_element_pullback": 215, "basis_st": 175, "batcheld": 13, "bateman": [96, 115], "batista": 89, "batman": 89, "battl": 290, "baz": 69, "bb": [93, 205, 232, 258], "bb1": 232, "bb2": 232, "bbp_pi": 128, "bbra": 190, "bby": 258, "bc": [61, 100, 139, 258, 261, 270], "bc_deflect": [135, 136], "bc_new": 139, "bc_slope": [135, 136], "bcd": 258, "bch": 89, "bd": [61, 139, 190], "bd_new": 139, "be1": 232, "be2": 232, "bead": 258, "beam": [104, 139, 159, 162, 281], "beam3d": 135, "beamparamet": 159, "beams3d": 135, "bear": [5, 41], "beat": 89, "becam": [23, 89, 150], "becaus": [2, 3, 4, 5, 8, 11, 12, 13, 14, 15, 16, 18, 22, 35, 37, 41, 42, 43, 48, 51, 52, 53, 54, 55, 56, 57, 59, 60, 65, 69, 80, 87, 88, 89, 94, 100, 104, 105, 113, 115, 118, 121, 124, 128, 130, 131, 132, 134, 147, 151, 157, 158, 170, 178, 190, 192, 194, 195, 206, 207, 209, 210, 211, 213, 215, 216, 217, 219, 220, 223, 227, 230, 232, 233, 236, 237, 238, 239, 249, 251, 252, 254, 258, 259, 261, 268, 286, 288, 290, 291, 292, 295, 296, 297, 303, 305], "beckerweispfenning93": 213, "becom": [0, 3, 4, 5, 11, 12, 13, 15, 16, 35, 39, 41, 79, 84, 87, 88, 89, 92, 111, 116, 124, 130, 147, 157, 204, 207, 208, 210, 211, 217, 220, 223, 229, 236, 239, 240, 246, 259, 261, 267, 269, 286, 296], "bee": 261, "been": [3, 11, 14, 16, 18, 22, 23, 27, 28, 33, 34, 35, 36, 41, 43, 48, 67, 69, 70, 74, 79, 80, 81, 84, 87, 88, 89, 94, 100, 113, 115, 124, 128, 129, 130, 131, 133, 134, 135, 148, 150, 151, 152, 157, 163, 175, 185, 187, 195, 202, 207, 210, 211, 215, 217, 218, 220, 222, 227, 230, 232, 237, 238, 239, 241, 242, 250, 251, 253, 254, 256, 258, 261, 268, 271, 288, 289, 291, 292, 296, 301], "befor": [3, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 27, 30, 32, 36, 41, 42, 43, 55, 57, 59, 69, 79, 80, 82, 84, 88, 89, 90, 96, 116, 124, 128, 130, 135, 136, 153, 157, 159, 190, 204, 208, 209, 210, 215, 216, 220, 221, 227, 228, 232, 233, 236, 238, 239, 240, 247, 251, 254, 258, 259, 268, 289, 290, 291, 296, 298, 301, 303, 305, 308, 309], "beforehand": [152, 157, 253], "begin": [4, 7, 11, 12, 13, 16, 25, 26, 27, 28, 32, 36, 41, 43, 46, 49, 53, 55, 61, 88, 89, 93, 94, 96, 113, 120, 124, 128, 130, 134, 135, 186, 195, 199, 205, 209, 220, 230, 233, 236, 237, 239, 240, 251, 261, 288, 290, 292, 296, 298, 305], "beginn": [233, 235, 236, 238, 239, 297], "behav": [13, 16, 18, 65, 67, 88, 89, 94, 96, 128, 216, 228, 232, 238, 241, 247, 292], "behavior": [2, 3, 12, 13, 14, 15, 16, 21, 23, 27, 43, 79, 88, 93, 96, 115, 130, 146, 150, 185, 207, 208, 215, 216, 220, 221, 225, 227, 229, 232, 249, 252, 254, 258, 259, 288, 298, 300], "behavior1": 3, "behavior2": 3, "behaviour": [13, 41, 113, 118, 148, 210, 213, 217, 223, 226], "behind": [17, 22, 27, 58, 144, 194, 209, 229, 232, 236, 239, 281, 288], "bei": 232, "being": [3, 5, 12, 14, 15, 16, 18, 21, 22, 27, 28, 30, 31, 32, 33, 35, 36, 37, 41, 42, 65, 67, 69, 79, 80, 86, 87, 88, 89, 93, 94, 96, 98, 100, 101, 104, 105, 113, 118, 124, 125, 128, 135, 136, 139, 147, 155, 157, 186, 195, 201, 205, 206, 207, 209, 210, 211, 213, 215, 216, 217, 219, 220, 229, 230, 232, 233, 236, 237, 238, 239, 240, 246, 249, 251, 255, 256, 258, 259, 261, 264, 269, 273, 290, 292, 301], "beings": 4, "belaso": 89, "believ": [125, 128, 209], "belittl": 5, "bell": [18, 93, 174, 222, 258], "bell_numb": 93, "bell_seq": 222, "bellnumb": 93, "bellpolynomi": 93, "belong": [5, 12, 35, 41, 65, 68, 79, 84, 88, 111, 124, 154, 190, 199, 206, 207, 209, 210, 211, 213, 215, 216, 227, 228, 232, 233, 239, 246], "below": [2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 16, 18, 22, 24, 25, 26, 27, 28, 30, 36, 41, 43, 46, 48, 52, 55, 56, 57, 59, 67, 68, 69, 78, 79, 80, 88, 89, 93, 95, 96, 97, 98, 104, 105, 111, 113, 115, 124, 127, 128, 130, 134, 135, 136, 137, 143, 147, 148, 151, 152, 153, 154, 155, 157, 184, 190, 195, 199, 205, 206, 207, 209, 216, 220, 221, 223, 229, 232, 233, 235, 236, 237, 238, 239, 240, 251, 253, 258, 259, 261, 269, 271, 274, 275, 292, 296, 301, 305, 306, 307], "below_fermi": [96, 190], "ben": 124, "benchmark": [13, 29, 301], "bend": [98, 104, 135, 138, 281], "bender": 236, "bending_mo": [135, 136], "benefici": 12, "benefit": [0, 2, 14, 21, 27, 43, 50, 69, 204, 209], "bengt": [39, 67], "benini": 240, "benini_distribut": 240, "beninidistribut": 240, "beq": 238, "berkelei": 124, "berkowitz": [124, 209], "berkowitz_det": 124, "berkowitz_eigenv": 124, "berkowitz_minor": 124, "berlekamp": 213, "berlin": 213, "bernd": 124, "bernoulli": [93, 96, 216, 220, 236, 238, 240], "bernoulli_c_poli": 216, "bernoulli_differential_equ": 236, "bernoulli_distribut": 240, "bernoulli_integr": 236, "bernoulli_numb": 93, "bernoulli_poli": [93, 216], "bernoulli_polynomi": [93, 216], "bernoulli_process": 240, "bernoullidistribut": 240, "bernoullinumb": 93, "bernoullipolynomi": 93, "bernoulliprocess": 240, "bertrand": 128, "besid": [7, 71, 88, 213, 238], "bess": [4, 96, 220, 232, 236, 240], "bessel": [4, 5, 94, 106, 115, 216, 232, 236, 240, 290], "bessel_funct": [4, 96], "besselbas": [4, 96], "besselj": [4, 96, 110, 220, 232, 236, 290], "besseljzero": 96, "besselk": [4, 96, 220, 240], "besselsimp": 232, "best": [3, 7, 11, 12, 13, 16, 17, 48, 52, 54, 55, 58, 59, 69, 88, 96, 113, 115, 129, 189, 206, 217, 220, 229, 230, 232, 236, 239, 244, 252, 284, 288, 289, 295, 296], "best_hint": 236, "beta": [4, 16, 18, 69, 79, 88, 115, 134, 147, 187, 199, 205, 215, 217, 220, 236, 240], "beta_": 79, "beta_1_2": 12, "beta_distribut": 240, "beta_funct": 96, "beta_prime_distribut": 240, "beta_r": 230, "betabinomi": 240, "betabinomialdistribut": 240, "betadistribut": 240, "betafunct": 96, "betanoncentr": 240, "betaprim": 240, "betaprimedistribut": 240, "better": [2, 3, 4, 8, 11, 12, 13, 14, 15, 16, 22, 41, 42, 43, 61, 68, 69, 80, 88, 92, 96, 115, 118, 143, 170, 198, 206, 209, 210, 211, 213, 223, 227, 228, 229, 230, 236, 237, 238, 239, 240, 252, 258, 259, 290, 296], "betweem": 18, "between": [2, 3, 9, 12, 13, 14, 15, 18, 22, 24, 27, 28, 30, 31, 32, 33, 35, 36, 38, 42, 43, 48, 52, 68, 69, 78, 79, 80, 82, 86, 88, 90, 93, 96, 98, 100, 101, 102, 103, 104, 105, 115, 117, 118, 120, 121, 124, 128, 129, 130, 131, 132, 134, 139, 140, 141, 143, 147, 151, 154, 155, 157, 158, 159, 162, 163, 169, 176, 178, 179, 180, 184, 187, 188, 189, 190, 193, 194, 195, 199, 200, 201, 203, 206, 207, 209, 211, 213, 215, 216, 220, 222, 232, 236, 237, 238, 239, 240, 241, 254, 259, 264, 267, 268, 271, 273, 288, 298, 303, 308, 310], "betweensubtleshadingandtheabsenc": 89, "bewar": [14, 67, 96], "beyer": 258, "beyond": [2, 11, 12, 14, 27, 41, 50, 82, 104, 128, 207, 210, 229, 232, 292], "bf": [30, 139], "bf02985731": 74, "bf0e81e12a2f75711c30f0788daf4e58f72b2a41": 11, "bfb0055738": 89, "bg": 236, "bh": 236, "bi": [36, 61, 88, 94, 96, 115, 227, 236], "bianchi": 246, "bias": 37, "bibtex": 0, "biceps_activ": 298, "biceps_pathwai": 298, "bicycl": [23, 29, 150, 300, 304], "bidiagn": 124, "bidiagon": 124, "bidiagonal_decomposit": 124, "bifid": 89, "bifid5": 89, "bifid5_squar": 89, "bifid6_squar": 89, "bifid_ciph": 89, "big": [13, 14, 16, 30, 39, 41, 72, 88, 90, 128, 170, 205, 219, 220, 227, 242, 261, 286, 288], "big_trig_ident": 16, "bigg": 46, "bigger": [43, 69, 88, 93, 124, 230, 236, 296], "biggest": 14, "bigl": 223, "bigr": 223, "biholomorph": 113, "biject": [80, 82, 89, 124, 207], "bilater": 115, "bilinear": 143, "bin": [1, 2, 4, 8, 9, 11, 12, 116, 220, 251, 258], "bin_prefix": 196, "bin_to_grai": 72, "binari": [11, 12, 16, 42, 43, 51, 65, 69, 72, 83, 88, 89, 115, 118, 128, 129, 184, 196, 207, 210, 216, 233, 252, 255, 258], "binary_cal": 252, "binary_func": [69, 252], "binary_funct": [69, 129, 252], "binary_partit": 258, "binaryquadrat": 233, "bincoeff": [93, 128, 220], "bind": [2, 69, 220, 252], "bind_c": 69, "binet": 92, "binom": [93, 128, 130, 240, 296], "binomi": [87, 88, 92, 93, 96, 128, 130, 216, 220, 225, 232, 236, 240, 258, 296], "binomial_coeffici": [93, 128], "binomial_coefficients_list": 128, "binomial_distribut": 240, "binomial_mod": 128, "binomialdistribut": 240, "binop": 69, "bio": 89, "biolog": [18, 131], "biomechan": [17, 20, 131, 132, 134, 281, 300], "biomed": [18, 131, 132, 134, 298], "biproduct": 207, "bird": 124, "bisect": [54, 128, 216, 238], "bisector": [101, 104], "bit": [8, 12, 18, 39, 43, 68, 69, 72, 88, 89, 91, 118, 124, 128, 184, 195, 207, 209, 216, 230, 233, 239, 251, 258, 268, 269, 295], "bitcount": 88, "bitlist": [72, 83], "bitlist_from_subset": 83, "bitmap": 220, "bitmask": 91, "bitstr": 72, "bitwis": [42, 91, 118], "bitwiseand": 220, "bitwiseor": 220, "bitwisexor": 220, "biu": 240, "bivari": [213, 219, 236, 240], "bixk": 115, "bizarr": 239, "bket": 190, "bl": [25, 30, 152, 301], "blaback": 11, "black": [116, 135, 175, 186, 204, 220, 295], "blacklist": 251, "blais": 89, "blajer": 29, "blajer1994": [27, 29], "blank": [4, 11, 12, 130, 206], "blanklin": 12, "blazingli": 217, "bleicher": 128, "blindli": 230, "blob": 115, "block": [3, 4, 14, 18, 22, 36, 46, 57, 69, 77, 79, 89, 124, 151, 157, 199, 209, 233, 259, 268, 301, 302, 306], "block_": 79, "block_bodi": 302, "block_collaps": 120, "block_fram": 306, "block_point": 302, "blockdiagmatrix": [120, 124], "blockmatrix": [120, 124], "blockwis": 124, "blog": [12, 13, 43, 69, 93, 124, 233, 239], "blogg": 11, "blogpost": 113, "blow": 128, "blowup": [124, 209], "blue": [24, 141, 206, 220], "blurb": [79, 240], "bl\u00e5b\u00e4ck": 11, "bm": [96, 298], "bmatrix": [25, 26, 27, 32, 36, 46, 55, 61, 120, 124, 130, 199, 233, 298, 305], "bmd": 104, "bmod": [89, 216, 220], "bmtwmg": 89, "bn": 223, "bo": 220, "bob": [89, 151, 157, 302], "bob_fram": 157, "bob_mass": 157, "bob_masscent": 157, "bode": 46, "bode_magnitude_numerical_data": 141, "bode_magnitude_plot": [46, 141], "bode_phase_numerical_data": 141, "bode_phase_plot": [46, 141], "bode_plot": 141, "bodi": [11, 16, 18, 21, 22, 23, 24, 25, 30, 31, 35, 36, 69, 113, 130, 146, 147, 148, 150, 151, 152, 157, 193, 199, 203, 264, 266, 281, 298, 301, 302, 303, 305, 306, 308], "body1": 154, "body2": 154, "body3": 154, "body_b": 22, "body_b_f": 22, "body_inertia": 148, "body_orient": [264, 266, 269], "body_orienter1": 266, "body_orienter2": 266, "body_orienter3": 266, "bodybas": 157, "bodyd": [308, 309, 310], "bodyfork": 301, "bodyfram": 301, "bodylist": [308, 309], "bodyorient": [264, 266, 269], "bodywf": 301, "bodywr": 301, "boer": 195, "boil": 12, "bokeh": 13, "bold": 220, "bold_nam": 220, "boltzmann": 194, "bonazzi": 0, "bone": 18, "bonn": 70, "book": [7, 9, 22, 24, 28, 29, 68, 79, 89, 94, 152, 175, 214, 219, 220, 289, 303], "books_articl": 240, "bool": [14, 41, 61, 67, 69, 71, 74, 84, 86, 88, 89, 91, 94, 115, 116, 118, 120, 124, 128, 130, 132, 134, 141, 152, 153, 157, 173, 174, 201, 204, 206, 209, 215, 216, 218, 220, 221, 222, 227, 228, 232, 235, 240, 252, 253, 258, 259, 264, 267, 288], "bool1": 118, "bool2": 118, "bool_": 69, "bool_map": 118, "bool_maxterm": 118, "bool_minterm": 118, "bool_monomi": 118, "boolalg": [88, 118], "boolean": [13, 14, 15, 17, 43, 44, 50, 55, 62, 63, 64, 65, 66, 67, 69, 88, 94, 98, 102, 103, 104, 105, 116, 124, 125, 128, 135, 141, 143, 152, 157, 175, 199, 201, 204, 206, 209, 211, 213, 215, 217, 220, 232, 236, 238, 240, 258, 267, 292], "booleanfals": 118, "booleanfunct": 220, "booleankind": [15, 88], "booleantru": 118, "boost": 69, "boost_mp50": 69, "border": [98, 104], "borrow": 255, "bose": 214, "bose03": 214, "boson": 190, "bosonbra": 190, "bosonicbasi": 190, "bostan": 217, "bot": [3, 11], "botanist": 240, "both": [0, 2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 16, 18, 24, 27, 35, 36, 38, 41, 42, 43, 48, 50, 51, 52, 55, 60, 61, 67, 68, 69, 80, 83, 84, 86, 87, 88, 89, 93, 94, 96, 103, 112, 113, 115, 118, 124, 128, 130, 133, 134, 135, 136, 143, 147, 148, 151, 152, 154, 155, 157, 162, 163, 174, 180, 187, 190, 194, 195, 199, 203, 206, 207, 208, 210, 211, 213, 215, 216, 218, 219, 220, 222, 227, 228, 229, 230, 232, 233, 236, 238, 239, 241, 245, 251, 253, 258, 259, 264, 266, 286, 289, 290, 291, 296, 297, 298, 301, 305, 306], "both_posit": 42, "both_positive_best": 42, "both_positive_bett": 42, "bother": [14, 96, 291], "bottom": [11, 78, 79, 88, 89, 104, 124, 127, 157, 215, 220, 229, 274], "bottom_fac": 274, "bottom_up": [13, 88], "bound": [15, 18, 50, 65, 69, 70, 87, 88, 97, 98, 99, 101, 103, 104, 115, 128, 154, 188, 206, 209, 211, 213, 214, 215, 216, 220, 226, 236, 238, 239, 240, 245, 255, 261, 264], "bound_symbol": [88, 115], "boundari": [71, 99, 101, 134, 135, 136, 203, 217, 228, 236, 240], "boundary_condit": 135, "bounded_pareto_distribut": 240, "boundedpareto": 240, "box": [170, 175, 177, 186, 188, 274, 281], "bp": [36, 236], "bpp": 36, "bpr": 89, "bpsw": 128, "bq": [96, 208, 209, 230], "br": 55, "bra": [130, 173, 178, 179, 180, 182, 184, 185, 188, 190], "brabas": [178, 179, 185, 188], "brace": [4, 22, 93, 220], "bracelet": [5, 258], "bracket": [16, 43, 54, 56, 80, 88, 96, 188, 190, 199, 220], "bradford": 213, "brain": [18, 255], "branch": [12, 42, 67, 88, 93, 94, 95, 96, 217, 230, 239, 291, 296], "branchpoint": 113, "brandei": 240, "brass": 89, "braun": 236, "breach": [113, 230], "breadth": [69, 88, 240], "break": [3, 4, 11, 12, 13, 14, 35, 43, 68, 69, 80, 88, 89, 128, 217, 220, 228, 258], "break_": 69, "breakag": 3, "breaker": 88, "breaktoken": 69, "bremen": 68, "bremner": 209, "brent": [128, 255], "brew": 8, "brewster": 163, "brewster_angl": 163, "brgc": 72, "brian": [0, 176], "bridg": [22, 121, 137, 139, 259], "brief": [11, 69, 239, 251, 273], "briefli": [41, 208, 213], "brien": [74, 79, 86], "bring": [5, 113, 152, 209, 223, 232, 292, 309], "brito": 205, "broad": [88, 291], "broadcast": [69, 129, 220, 245, 252], "broader": 210, "brocard": 128, "broke": 12, "broken": [12, 13, 35, 77, 88, 220, 236, 261], "bronstein": [115, 214, 216, 222, 238], "bronstein93": [214, 216], "brought": [27, 240], "brown": [213, 214, 240], "brown71": [213, 214], "brown78": [213, 214], "brownian": 240, "browntraub71": [213, 214], "brows": [7, 9], "browser": 8, "bruce": 214, "bruce97": 214, "brute": [39, 229, 233], "bryan": [151, 199, 264, 266], "brychkov": [113, 230], "brzeskia": 302, "brzeskia2012": 302, "bsd": [0, 2, 45, 290], "bsg": [79, 84, 86, 246], "bsgs_direct_product": 84, "bspline": 96, "bspline_basi": 96, "bspline_basis_set": 96, "bu_2": 233, "bubbl": 174, "buchberg": [208, 213, 214, 216], "buchberger01": [214, 216], "bug": [3, 4, 7, 11, 12, 14, 41, 43, 59, 67, 89, 210, 213, 228, 236, 239, 288], "build": [4, 5, 6, 10, 11, 12, 14, 30, 36, 38, 63, 64, 69, 88, 90, 96, 118, 184, 195, 199, 207, 212, 215, 216, 217, 227, 240, 268, 285, 288, 291], "build_expression_tre": 227, "build_opt": 213, "built": [0, 2, 4, 5, 8, 14, 15, 16, 22, 30, 38, 62, 64, 70, 88, 94, 115, 124, 208, 211, 220, 221, 225, 236, 239, 240, 246, 255, 258, 259, 290, 291, 295], "builtin": [14, 88, 211, 220, 228, 261, 295], "bulk": [213, 230], "bullet": [5, 11, 12], "bulletin": 115, "bunch": 216, "bundl": 215, "burden": [3, 220], "burtonl": 80, "butler": [84, 246], "button": [9, 12, 206, 252], "bv_2": 233, "bvar": 295, "bw": 298, "bx": [35, 36, 48, 49, 113, 240, 246, 269], "bxc": 189, "bxy": [51, 233], "by_nam": [211, 215, 216], "bypass": [43, 216, 236], "bytesio": 220, "bz": [35, 113, 233, 246], "c": [0, 2, 7, 8, 9, 12, 14, 15, 16, 18, 21, 22, 24, 26, 27, 30, 32, 35, 36, 39, 41, 43, 46, 48, 49, 51, 53, 60, 61, 67, 68, 72, 73, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 91, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 111, 113, 115, 117, 118, 120, 124, 128, 129, 130, 135, 136, 137, 139, 143, 145, 147, 148, 149, 151, 152, 154, 159, 163, 169, 170, 171, 174, 176, 179, 184, 187, 189, 190, 195, 199, 203, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 245, 246, 252, 253, 255, 258, 261, 264, 266, 267, 268, 269, 270, 271, 274, 286, 288, 295, 296, 297, 298, 306, 308, 309, 310], "c0": [18, 120, 124, 132, 227, 236, 238], "c1": [4, 12, 18, 39, 55, 89, 98, 105, 120, 124, 132, 143, 151, 176, 190, 228, 233, 236, 238, 270, 297, 302], "c10": [18, 132], "c11": [18, 132], "c2": [18, 55, 71, 89, 98, 105, 120, 124, 132, 143, 151, 176, 190, 228, 236, 240, 267, 270, 297], "c3": [18, 39, 55, 71, 91, 93, 117, 120, 124, 128, 132, 209, 236, 240, 270, 297], "c4": [18, 71, 117, 120, 124, 132, 236], "c5": [18, 39, 132, 236], "c6": [18, 132, 211], "c7": [18, 39, 79, 132], "c77": 128, "c8": [18, 132], "c89": [69, 220, 253], "c89codeprint": 220, "c9": [18, 132], "c99": [69, 220, 253], "c99codeprint": [43, 69, 220], "c_": [18, 36, 39, 49, 55, 89, 111, 113, 132, 208, 236], "c_0": [18, 39, 89, 111, 132], "c_0_fl_m_act_muscl": 134, "c_0_fl_m_pas_muscl": 134, "c_0_fl_t_muscl": 134, "c_0_fv_m_muscl": 134, "c_1": [18, 39, 55, 89, 111, 113, 132, 227, 230, 236, 302], "c_10_fl_m_act_muscl": 134, "c_11_fl_m_act_muscl": 134, "c_1_fl_m_act_muscl": 134, "c_1_fl_m_pas_muscl": 134, "c_1_fl_t_muscl": 134, "c_1_fv_m_muscl": 134, "c_2": [18, 39, 55, 71, 113, 132, 227, 236, 302], "c_2_fl_m_act_muscl": 134, "c_2_fl_t_muscl": 134, "c_2_fv_m_muscl": 134, "c_3": [18, 71, 113, 132, 236], "c_3_fl_m_act_muscl": 134, "c_3_fl_t_muscl": 134, "c_3_fv_m_muscl": 134, "c_4": [18, 71, 113, 132], "c_4_fl_m_act_muscl": 134, "c_5": [18, 113, 132], "c_5_fl_m_act_muscl": 134, "c_6": [18, 113, 132], "c_6_fl_m_act_muscl": 134, "c_7": [18, 113, 132], "c_7_fl_m_act_muscl": 134, "c_8": [18, 113, 132], "c_8_fl_m_act_muscl": 134, "c_9": [18, 113, 132], "c_9_fl_m_act_muscl": 134, "c_code": [69, 253], "c_explicit": 245, "c_frame": 151, "c_g": 79, "c_header": [69, 253], "c_i": [39, 113, 227, 230, 236], "c_inherit": 245, "c_j": [110, 113, 230], "c_k": 89, "c_kn": 128, "c_m": 298, "c_masscent": 151, "c_mat": 46, "c_n": [93, 96, 117, 216, 236], "c_name": [69, 253], "c_o": 298, "c_r": [70, 230], "c_t": 89, "c_u": 113, "c_w": 230, "c_x": 36, "c_xr": 90, "c_xy": 90, "c_y": 36, "c_z": 36, "ca": [5, 18, 59, 89, 93, 96, 115, 128, 131, 219, 220, 258], "cab": 241, "cabl": 281, "cach": [12, 41, 93, 113, 207, 216, 220, 249, 254, 255, 260], "cache_length": 260, "cacheit": 88, "cacr": 89, "cacr2006": 89, "cadabra": 246, "caesar": 89, "caesar_ciph": 89, "caesarsmethod": 89, "caeser": 89, "cafe": 115, "calc_transform": 124, "calcul": [2, 14, 16, 18, 21, 32, 33, 35, 39, 41, 54, 55, 61, 67, 70, 80, 86, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 101, 102, 104, 105, 115, 120, 124, 128, 135, 136, 145, 147, 148, 152, 157, 158, 159, 162, 163, 166, 169, 185, 186, 187, 188, 190, 191, 199, 200, 201, 203, 205, 206, 207, 209, 210, 211, 213, 215, 216, 217, 222, 227, 236, 240, 244, 252, 253, 259, 264, 267, 271, 273, 286, 292, 295, 298, 301, 302, 305], "calculate_seri": 227, "calculu": [30, 33, 34, 50, 52, 88, 93, 115, 128, 229, 240, 270, 271, 272, 275, 276, 287, 289, 294], "call": [2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 21, 22, 24, 27, 28, 33, 35, 36, 38, 39, 41, 42, 43, 48, 49, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 86, 88, 89, 91, 92, 93, 95, 96, 98, 103, 104, 106, 111, 113, 115, 117, 118, 119, 120, 121, 124, 126, 127, 128, 130, 132, 133, 134, 135, 136, 143, 147, 151, 155, 180, 182, 185, 190, 194, 195, 199, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 222, 227, 228, 230, 232, 233, 235, 236, 238, 239, 240, 241, 242, 244, 246, 247, 249, 251, 252, 253, 254, 255, 256, 258, 259, 261, 264, 267, 268, 271, 273, 286, 288, 290, 291, 292, 295, 296, 297, 301, 305], "callabl": [2, 14, 16, 18, 55, 69, 79, 124, 130, 152, 153, 175, 215, 220, 221, 232, 249, 252, 253, 258, 259, 260], "callback": 262, "caller": [43, 209], "calori": 195, "caltech": 115, "caltechauthor": 115, "calulc": 264, "cambridg": [214, 233], "came": [23, 150, 291], "camera": 206, "can": [0, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 49, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 162, 163, 164, 169, 171, 174, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 249, 251, 252, 253, 255, 256, 258, 259, 260, 261, 267, 268, 269, 270, 271, 273, 274, 285, 286, 288, 290, 291, 292, 294, 295, 296, 297, 298, 299, 302, 303, 305, 306, 309], "can_split": 130, "can_transf_matrix": 192, "canada": 214, "canberra": 103, "canberra_dist": 103, "cancel": [12, 14, 39, 43, 46, 69, 88, 92, 96, 104, 113, 115, 124, 128, 143, 144, 147, 209, 210, 211, 213, 216, 219, 232, 238, 290], "cancel_denom": 209, "cancel_denom_elementwis": 209, "candid": [11, 52, 79, 88, 124, 128, 213, 232], "canfield": 255, "cannon": 70, "cannot": [2, 3, 4, 5, 12, 13, 14, 15, 16, 18, 32, 35, 36, 38, 42, 43, 48, 51, 54, 59, 62, 63, 64, 65, 66, 67, 69, 80, 85, 87, 88, 90, 92, 94, 98, 100, 101, 103, 105, 110, 115, 117, 119, 121, 124, 126, 128, 130, 131, 143, 147, 155, 158, 185, 193, 195, 206, 209, 211, 213, 215, 216, 217, 220, 227, 228, 232, 233, 235, 236, 238, 239, 240, 241, 249, 251, 252, 253, 258, 264, 266, 290, 291, 292, 296, 297], "canon": [4, 14, 15, 41, 50, 69, 72, 77, 79, 80, 84, 88, 89, 90, 94, 104, 113, 118, 124, 128, 130, 132, 152, 167, 171, 190, 192, 195, 197, 209, 213, 221, 228, 229, 232, 236, 238, 240, 246, 258, 296], "canon_bp": 246, "canonic": [14, 15, 75, 88, 229, 246, 276], "canonical_eq": 236, "canonical_form": 240, "canonical_fre": 84, "canonical_normal_form": 118, "canonical_od": 236, "canonical_system": 236, "canonical_vari": 88, "canonicalize_na": 84, "canonicalz": 89, "cantilev": [135, 136], "cantor": 213, "canva": 206, "cap": [89, 92, 190, 228, 239], "capabl": [7, 13, 15, 18, 23, 30, 41, 54, 67, 69, 88, 92, 100, 113, 128, 135, 136, 150, 206, 217, 220, 239, 286, 289, 290, 296, 297, 300], "capit": [15, 87, 89, 143, 236], "capital_pi_not": 87, "capitalis": 41, "captur": [2, 13, 88, 148, 258], "car2d": 90, "cardin": [79, 80, 83, 207, 228], "care": [12, 15, 16, 21, 22, 27, 36, 42, 43, 79, 88, 96, 115, 118, 124, 135, 139, 199, 209, 210, 215, 232, 233, 236, 238, 239, 244, 247, 252, 285, 288, 290], "care_term": 118, "carefulli": [12, 42, 88, 132, 213, 222], "carl": [128, 255], "carla": 258, "carlo": 79, "carmichael": [89, 93, 128], "carmichael_funct": [93, 128], "carmichael_numb": 128, "carmichaelfunct": [93, 128], "carri": [68, 69, 88, 182, 188, 195, 207, 210, 213, 215, 217, 218, 259], "cart": [13, 157], "cart_mass": [13, 157], "cart_masscent": 157, "cartan": 117, "cartan_matrix": 117, "cartan_typ": 117, "cartanmatrix": 117, "cartantyp": 117, "cartantype_gener": 117, "cartesian": [31, 33, 90, 135, 137, 139, 163, 177, 180, 185, 206, 207, 228, 239, 258, 268, 269, 271, 272, 281], "cartesian_product": 228, "cartesiancomplexregion": 228, "case": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 30, 35, 36, 39, 41, 42, 46, 48, 51, 52, 53, 54, 55, 56, 57, 61, 67, 68, 69, 70, 71, 73, 76, 79, 80, 84, 87, 88, 89, 90, 92, 93, 94, 96, 100, 103, 104, 105, 106, 110, 113, 115, 118, 120, 124, 125, 128, 129, 130, 134, 136, 143, 147, 151, 152, 158, 163, 174, 180, 185, 187, 189, 190, 195, 196, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 225, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 240, 241, 244, 246, 249, 251, 253, 254, 256, 258, 259, 260, 261, 264, 267, 268, 286, 290, 291, 292, 295, 296, 297, 298, 301, 303, 305, 306], "cask": 8, "casoratian": 124, "cass": 290, "cast": [69, 120, 134, 288], "cast_check": 69, "cast_nocheck": 69, "casu": 216, "casus_irreducibili": 216, "cat": [32, 68], "catalan": [88, 93, 220], "catalan_numb": 93, "catalannumb": [93, 220], "catastroph": 69, "catch": [38, 88, 236, 251, 292], "catch_warn": 256, "catchal": 296, "categor": [3, 48, 124, 207], "categori": [13, 207, 275, 282], "cauchi": [96, 113, 115, 211, 236, 240], "cauchy_distribut": 240, "cauchy_lower_bound": 211, "cauchy_principal_valu": 115, "cauchy_upper_bound": 211, "cauchydistribut": 240, "cauchyprincipalvalu": 115, "caught": [14, 236], "caus": [3, 5, 12, 13, 15, 18, 22, 27, 35, 43, 55, 59, 88, 89, 92, 94, 124, 131, 147, 155, 220, 229, 236, 237, 238, 255, 256, 292, 298, 309], "caution": [80, 88, 94, 220, 232], "caveat": [88, 216, 288], "caylei": [79, 82, 124], "cb": [208, 258], "cba": [79, 241, 258], "cbead": 77, "cbl": 240, "cbm": [96, 115], "cbrt": [69, 94, 220], "cc": [49, 53, 89, 104, 205, 208, 209, 210, 216, 292], "ccc": [209, 239], "cccc": 239, "ccode": [43, 69, 220, 245, 253], "ccodegen": 253, "ccw": [101, 104], "cd": [4, 8, 9, 45, 139, 209, 239, 242, 258], "cd_dens": 209, "cdf": 240, "cdhw73": 70, "cdir": 88, "cdot": [13, 18, 28, 32, 33, 35, 36, 41, 46, 70, 87, 93, 96, 106, 110, 111, 113, 120, 124, 128, 130, 144, 146, 158, 195, 205, 207, 208, 213, 216, 223, 227, 230, 233, 236, 238, 241, 242, 258, 270, 271, 290, 291, 296], "cdot1": 296, "cdot2": 296, "ce": [18, 49, 53, 139], "cea": 11, "ceca": 240, "ceil": [89, 94, 128, 130, 151, 220], "ceiling_joint": 151, "ceilingfunct": 94, "cell": 68, "celler": 79, "center": [5, 7, 13, 22, 24, 28, 30, 35, 39, 67, 79, 87, 88, 98, 102, 104, 105, 115, 124, 148, 151, 154, 158, 163, 206, 215, 220, 228, 274, 298, 301, 308, 310], "center_": 79, "center_of_mass": [30, 154], "centimet": 197, "centr": [68, 85, 206], "central": [28, 58, 79, 85, 96, 98, 104, 148, 154, 215, 216, 233, 240], "central_inertia": [148, 154, 306], "centralizer_and_norm": 79, "centralmo": 240, "centric": 206, "centripet": 301, "centroid": [98, 104, 105, 135], "centuri": [89, 207], "cep849r": 93, "certain": [2, 5, 12, 14, 15, 27, 43, 57, 59, 66, 68, 69, 71, 79, 86, 88, 92, 96, 104, 113, 115, 128, 130, 157, 199, 200, 207, 210, 213, 215, 220, 221, 227, 230, 232, 233, 236, 238, 239, 240, 242, 253, 254, 259, 264, 267, 273, 296], "certainli": [39, 100, 130, 255], "cexpr": 240, "cf": [128, 213], "cff": [213, 216], "cfg": [12, 213, 216], "cfrac": 296, "cfunction": 43, "cfunction_format": 220, "cfunction_str": [69, 220], "cg": [169, 187, 194, 242], "cg_simp": 169, "cgate": 174, "cgi": 264, "cgs_gauss": 194, "cgt": 79, "cgtnote": 79, "ch": [90, 124, 233], "ch4": 22, "ch5": 22, "ch6": 22, "chain": [35, 41, 43, 69, 79, 84, 88, 96, 105, 129, 215, 240], "challeng": [18, 23, 150], "chan": 236, "chanc": [3, 12, 16, 42, 88, 116, 124, 230, 240, 291], "chang": [0, 4, 5, 7, 8, 9, 12, 14, 15, 16, 18, 22, 32, 33, 35, 36, 41, 59, 68, 69, 70, 79, 80, 84, 87, 88, 89, 92, 93, 94, 96, 102, 103, 113, 115, 118, 124, 128, 130, 131, 132, 135, 137, 139, 143, 147, 151, 154, 164, 175, 185, 195, 196, 205, 206, 207, 208, 209, 211, 213, 216, 217, 220, 227, 228, 229, 230, 232, 235, 236, 238, 239, 240, 241, 251, 258, 259, 269, 271, 285, 288, 291, 295, 298, 301, 308], "change_index": 87, "change_member_label": 139, "change_node_label": 139, "change_support": 137, "chao": 214, "chaotic": 55, "chapman": [70, 78], "chapter": [4, 22, 79, 96, 128, 214], "chapter1": 7, "chapter11": 240, "chapter3": 220, "chapter4": 220, "chapui": 128, "char": 77, "charact": [3, 4, 5, 11, 12, 14, 88, 89, 113, 116, 130, 170, 199, 204, 206, 220, 236, 251, 253, 256, 261, 288, 290, 295], "character": [33, 36, 135, 136, 227, 240, 246, 273, 302], "characteris": 240, "characterist": [0, 18, 35, 90, 106, 124, 132, 134, 209, 211, 213, 214, 236, 238, 292], "characteristiccurvecollect": [132, 134], "characteristiccurvefunct": 132, "charg": [33, 273], "charl": 79, "charles_marsh_continuous_entropi": 240, "charpoli": [124, 209, 292], "charpoly_bas": 209, "charpoly_berk": 209, "charpoly_factor_block": 209, "charpoly_factor_list": 209, "chart": [90, 206], "chat": [7, 59], "cheap": [43, 88, 128], "cheat": 124, "cheb": 236, "chebyshev": [5, 67, 88, 115, 213, 216], "chebyshev1_rul": 115, "chebyshev2_rul": 115, "chebyshev_polynomi": 96, "chebyshev_root": 96, "chebyshevpolynomialofthefirstkind": 96, "chebyshevpolynomialofthesecondkind": 96, "chebyshevt": [5, 96, 220], "chebyshevt_poli": [96, 216], "chebyshevt_root": 96, "chebyshevu": [96, 220], "chebyshevu_poli": [96, 216], "chebyshevu_root": 96, "check": [2, 3, 4, 5, 7, 8, 9, 11, 14, 15, 16, 22, 27, 30, 33, 37, 38, 39, 41, 42, 43, 51, 55, 57, 63, 64, 67, 68, 69, 71, 74, 77, 79, 80, 81, 86, 87, 88, 89, 93, 96, 100, 111, 113, 117, 118, 120, 123, 124, 125, 128, 143, 148, 149, 157, 158, 170, 178, 190, 192, 193, 198, 206, 207, 209, 210, 211, 213, 215, 216, 222, 228, 230, 232, 236, 237, 238, 239, 240, 244, 245, 249, 251, 253, 256, 258, 267, 271, 288, 296, 303], "check_and_join": 89, "check_dupl": 157, "check_output": 251, "check_rank": [125, 209], "check_sqf": 216, "check_symmetri": 124, "checker": 251, "checkinfsol": 236, "checkodesol": [12, 55, 236], "checkout": [9, 11, 68], "checkpdesol": 237, "checksol": 238, "chemic": [55, 131], "chemistri": 195, "chi": [16, 96, 113, 162, 220, 230, 236, 240, 246], "chi_distribut": 240, "chi_squared_distribut": 240, "chidistribut": 240, "child": [13, 15, 24, 134, 147, 151, 157, 199, 210, 255, 298], "child_axi": [13, 151, 298], "child_force_direction_vector": 298, "child_fram": [13, 24], "child_interfram": [13, 24, 151, 157, 306], "child_izz": 24, "child_joint_po": [13, 151], "child_mass": 24, "child_point": [13, 24, 151, 157, 303, 306], "child_tangency_point": 298, "children": [15, 88, 89, 210, 255], "chin": 115, "china": 124, "chines": [89, 128, 213], "chinoncentr": 240, "chisquar": 240, "choco": 8, "chocolatei": 8, "choic": [18, 27, 32, 35, 55, 69, 80, 93, 96, 113, 115, 129, 134, 186, 195, 199, 211, 213, 216, 220, 232, 236, 258, 290], "choleski": [119, 124], "cholesky_solv": [119, 124], "choos": [4, 8, 9, 11, 14, 18, 28, 35, 36, 52, 55, 79, 84, 88, 90, 93, 124, 128, 134, 136, 141, 190, 194, 199, 209, 216, 217, 220, 227, 229, 230, 236, 237, 240, 251, 256, 296, 298, 305], "choose_domain": 209, "chop": [88, 92, 96, 124, 238, 285], "chord": 98, "chose": [8, 89], "chosen": [31, 79, 80, 88, 89, 90, 101, 102, 124, 128, 135, 192, 194, 195, 206, 207, 209, 211, 213, 215, 220, 227, 230, 236, 240, 251, 264], "christoffel": 90, "christoph": [0, 264], "chrome": 8, "chromium": 8, "chula": 80, "ci": [2, 5, 9, 11, 12, 96, 113, 220, 295], "cia": 89, "cimento": [195, 205], "cimrman": 0, "cipher": 89, "ciphertext": 89, "circ": [68, 88, 99, 105, 113, 120], "circ_plot": 174, "circl": [4, 43, 88, 98, 99, 100, 102, 103, 104, 105, 113, 158, 163, 170, 206, 239, 264, 267, 274, 298], "circuit": [88, 174, 177, 281], "circuit_plot": 170, "circuitplot": 170, "circular": [13, 16, 41, 135, 141, 158, 162, 213, 298], "circumcent": 104, "circumcircl": 104, "circumfer": [88, 98, 158], "circumradiu": 104, "circumscrib": 104, "circumst": [215, 290], "citat": 4, "cite": [4, 44], "cites": 214, "citeseerx": [214, 229], "citi": 233, "cits7209": 93, "civil": [89, 135], "civita": [90, 96, 246], "cj": 61, "cl": [14, 16, 18, 41, 43, 55, 69, 79, 88, 115, 124, 134, 190, 203, 211, 215, 236, 245, 254, 258, 270, 286, 295, 297, 298], "claim": [36, 89, 230, 239], "clairaut": 236, "clang": [2, 130], "claredon": 124, "clarifi": 4, "clariti": [5, 13, 79, 203], "clarku": 240, "clash": [15, 60, 88, 124], "class": [3, 5, 7, 11, 12, 14, 15, 16, 18, 22, 23, 24, 28, 30, 31, 40, 41, 42, 43, 46, 48, 52, 53, 57, 58, 61, 62, 63, 64, 65, 70, 71, 72, 77, 78, 79, 80, 81, 82, 83, 84, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 110, 111, 113, 115, 116, 117, 118, 119, 120, 123, 131, 132, 133, 134, 135, 137, 139, 140, 141, 143, 147, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 195, 196, 197, 198, 202, 203, 204, 207, 209, 210, 211, 213, 216, 217, 218, 219, 221, 222, 223, 226, 227, 228, 230, 232, 236, 237, 238, 239, 240, 242, 245, 246, 247, 251, 252, 253, 254, 255, 256, 258, 259, 262, 265, 268, 269, 271, 272, 274, 275, 279, 281, 286, 288, 291, 296, 298, 305], "class_kei": 88, "class_nam": 88, "classic": [17, 20, 36, 47, 55, 67, 94, 96, 124, 176, 192, 199, 207], "classif": [15, 17, 40, 88, 236, 237], "classifi": [38, 124, 210, 236, 237, 239, 240], "classify_diop": 233, "classify_od": [55, 236], "classify_pd": 237, "classify_sysod": 236, "classmethod": [14, 41, 43, 61, 63, 64, 69, 72, 77, 79, 80, 82, 83, 88, 94, 95, 96, 103, 124, 131, 132, 134, 143, 147, 154, 157, 176, 187, 188, 190, 209, 211, 215, 216, 220, 228, 246, 251], "classnam": 4, "claus": [41, 118], "clean": [3, 251], "cleaner": [12, 21, 30, 236], "cleanest": 269, "cleanup": 216, "clear": [4, 7, 11, 12, 13, 35, 36, 41, 63, 78, 88, 113, 117, 148, 206, 209, 211, 213, 216, 230, 238, 239, 246, 251, 255, 273, 288, 304], "clear_cach": 216, "clear_denom": [209, 211, 216], "clear_denoms_rowwis": 209, "clear_glob": 251, "clear_load": 148, "clearer": [12, 13, 134, 268], "clearli": [3, 4, 36, 43, 93, 128, 210, 230, 292], "clebsch": [177, 187, 205, 281], "clebsch_gordan": 205, "clebsh": 169, "clemson": 240, "cleve": 124, "click": [7, 8, 9, 11], "clickabl": 4, "client": [88, 255], "clipboard": 12, "clo": 211, "clock": [94, 229], "clockwis": [100, 115, 124, 135, 136, 137, 139], "clone": [9, 59, 213], "close": [4, 11, 14, 15, 46, 54, 69, 87, 88, 92, 93, 96, 104, 106, 113, 115, 117, 132, 143, 206, 207, 208, 214, 215, 228, 238, 239, 253, 286, 296, 303], "closed": 228, "closer": [12, 54, 147, 155, 239, 291, 301], "closest": [54, 88, 101], "closing_angl": 101, "closur": [79, 85, 111, 170, 211, 215, 228], "closurefailur": 215, "cloudi": 240, "cloudpickl": 2, "clunki": 60, "clutter": 4, "cm": [30, 68, 240, 298], "cmod": 186, "cmoment": 240, "cmplx": [69, 220], "cn": [80, 220, 295], "cname": 253, "cnf": 118, "cnot": 174, "cnotgat": 174, "co": [4, 9, 12, 13, 14, 16, 18, 22, 27, 30, 33, 35, 36, 43, 46, 49, 50, 52, 54, 55, 56, 57, 61, 67, 69, 87, 88, 90, 92, 93, 94, 96, 97, 98, 101, 102, 104, 106, 110, 111, 112, 113, 115, 124, 128, 130, 148, 149, 151, 155, 157, 158, 162, 164, 199, 201, 203, 205, 206, 210, 213, 216, 217, 219, 220, 221, 222, 223, 227, 228, 229, 230, 232, 236, 238, 239, 240, 241, 247, 259, 264, 266, 267, 268, 269, 274, 285, 286, 288, 290, 296, 297, 298, 301, 302, 303, 306, 308, 309, 310], "coalesc": 255, "coc": 163, "code": [4, 8, 10, 15, 18, 22, 23, 24, 30, 31, 32, 35, 39, 41, 42, 43, 51, 54, 55, 56, 57, 59, 60, 70, 75, 79, 82, 83, 88, 89, 90, 96, 100, 113, 115, 116, 124, 128, 129, 130, 131, 134, 148, 150, 151, 184, 190, 204, 205, 206, 207, 208, 209, 210, 213, 219, 230, 232, 236, 238, 239, 240, 242, 245, 248, 249, 251, 252, 253, 256, 257, 258, 259, 268, 276, 283, 288, 290, 293, 295, 301, 304, 309], "code_gen": [252, 253], "code_qu": 11, "code_text": 220, "codebas": [3, 12, 13, 41, 210, 249], "codeblock": [69, 130], "codegen": [2, 43, 129, 220, 252, 257, 283], "codegenast": 69, "codegenerror": 253, "codeprint": 69, "codewrapp": 252, "codifi": 3, "codirect": 199, "codomain": [68, 207, 215], "coef": [22, 30], "coeff": [30, 43, 88, 90, 118, 211, 213, 215, 216, 226, 232, 236, 238, 246, 296], "coeff_bel": 222, "coeff_monomi": [88, 216], "coeff_mul": 226, "coeff_search": 215, "coeff_wrt": 211, "coeffici": [4, 13, 14, 18, 22, 37, 39, 41, 48, 51, 53, 64, 67, 69, 87, 88, 90, 92, 93, 96, 101, 106, 107, 110, 111, 113, 117, 118, 120, 124, 125, 128, 131, 134, 143, 144, 147, 152, 163, 177, 187, 195, 205, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 230, 232, 233, 235, 236, 237, 238, 239, 240, 246, 252, 268, 271, 281, 291, 296, 298, 302], "coerc": [27, 88, 213], "coercibl": 211, "coercionfail": [210, 213], "cofactor": [88, 124, 209, 211, 213, 216], "cofactor_matrix": 124, "cogniz": 3, "cohen": [71, 125, 209, 213, 214, 215], "cohen00": 215, "cohen93": [214, 215], "coher": [166, 192, 198], "coherent_st": 166, "coin": [228, 240], "coin_flip": 240, "coincid": [11, 22, 104, 124, 127, 151, 207, 264, 269, 288], "coincis": 207, "coker": 207, "cokernel": 207, "col": [30, 120, 124, 127, 143, 209, 215, 292], "col1": 124, "col2": 124, "col_del": [124, 292], "col_insert": [124, 292], "col_join": [124, 298, 301], "col_matrix": 30, "colin": 80, "collabor": 9, "collaps": [88, 184, 232], "collect": [2, 5, 18, 30, 40, 45, 68, 69, 79, 88, 105, 115, 128, 135, 143, 157, 190, 197, 205, 211, 213, 216, 229, 230, 232, 236, 240, 251, 258, 298, 309], "collect_const": 232, "collect_sqrt": 232, "collected_expr": 296, "collected_word": 78, "collid": [60, 246], "collin": [213, 214], "collinear": [98, 100, 102, 103, 104], "collins67": [213, 214], "collis": [14, 88, 127, 220], "colloc": [18, 131, 132, 134, 298], "colloqui": [15, 49], "colmatrix": 30, "colon": [4, 88], "color": [5, 9, 14, 116, 141, 204, 220, 251, 258, 295], "colost": 79, "colour": 5, "colsep": 124, "colslic": 209, "colslist": [124, 209], "columbia": 240, "column": [18, 32, 53, 61, 65, 68, 69, 70, 116, 118, 120, 124, 125, 127, 131, 134, 143, 152, 157, 185, 192, 199, 204, 205, 209, 215, 220, 236, 238, 239, 245, 264, 301], "columnspac": [124, 209], "com": [2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 43, 46, 59, 61, 65, 67, 79, 81, 82, 88, 89, 91, 92, 93, 94, 96, 98, 104, 105, 113, 115, 124, 128, 141, 205, 214, 223, 225, 228, 229, 232, 233, 236, 239, 240, 258, 261, 292], "comb_explicit_rh": [31, 157], "comb_implicit_mat": [31, 157], "comb_implicit_rh": [31, 157], "combin": [4, 11, 13, 14, 16, 18, 23, 31, 43, 48, 56, 68, 88, 92, 93, 96, 115, 117, 118, 124, 128, 136, 143, 150, 151, 152, 157, 169, 176, 184, 185, 187, 188, 189, 193, 194, 195, 196, 207, 208, 210, 211, 213, 215, 216, 220, 221, 229, 230, 232, 233, 236, 238, 240, 241, 255, 258, 285, 288, 291], "combinator": [70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 93, 120, 128, 215, 222, 241, 246, 255, 258, 276, 290, 296], "combinatori": [12, 13, 43, 72, 80, 87, 88, 89, 95, 96, 128, 216, 222, 232, 258, 276, 296], "combintor": 13, "combo": 118, "combsimp": [87, 88, 93, 232], "come": [3, 11, 12, 14, 21, 22, 25, 36, 53, 59, 79, 84, 86, 87, 88, 94, 96, 113, 115, 124, 129, 193, 207, 210, 213, 215, 216, 230, 233, 236, 239, 249, 251, 256, 259, 288, 290, 291, 294, 296, 301], "comfort": [128, 129], "comm": [171, 190, 246], "comm_i2symbol": 246, "comm_symbols2i": 246, "comma": [4, 5, 12, 16, 69, 88, 220, 259, 288], "command": [2, 4, 8, 9, 11, 12, 15, 16, 22, 25, 30, 48, 51, 57, 59, 69, 92, 116, 204, 206, 220, 251, 252, 295], "commaoper": 69, "comment": [4, 5, 11, 12, 22, 69, 79, 217, 220, 253, 258, 301], "commerci": [0, 290], "commit": [9, 12], "common": [5, 9, 11, 12, 13, 14, 15, 16, 18, 23, 28, 30, 34, 35, 36, 41, 42, 43, 49, 50, 51, 52, 55, 67, 69, 79, 80, 88, 89, 94, 99, 102, 105, 115, 124, 128, 129, 130, 141, 143, 148, 150, 151, 153, 157, 162, 195, 199, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 218, 222, 228, 229, 230, 232, 233, 236, 238, 239, 240, 252, 253, 256, 258, 259, 271, 273, 285, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 303], "common_prefix": 258, "common_suffix": 258, "commonli": [5, 15, 18, 21, 35, 80, 93, 96, 115, 124, 130, 208, 236, 271], "commun": [3, 5, 7, 11, 59, 205, 236, 238, 240, 292], "communication_class": 240, "commut": [15, 36, 41, 61, 65, 68, 79, 80, 84, 88, 90, 111, 115, 124, 167, 174, 177, 178, 179, 189, 190, 195, 201, 208, 209, 211, 212, 213, 214, 216, 220, 227, 228, 230, 236, 246, 281, 282, 291], "commutative_diagram": 68, "commutative_part": 88, "commutative_properti": [41, 88], "commutativehandl": 65, "commutativepred": 65, "commutes_with": [80, 246], "comp": [70, 128, 236], "compa": 247, "compact": [30, 82, 88, 140, 152, 188, 204, 216, 220, 238, 255], "compactif": 88, "companion": [120, 124], "companionmatrix": 120, "compar": [11, 12, 13, 16, 41, 57, 67, 69, 80, 85, 88, 93, 94, 105, 118, 124, 128, 129, 169, 193, 197, 210, 213, 216, 217, 220, 225, 227, 232, 236, 239, 241, 245, 251, 258, 288, 291, 296, 301], "comparison": [22, 69, 87, 88, 118, 124, 207, 215, 219, 238, 251, 258], "compat": [2, 3, 8, 21, 38, 69, 88, 96, 116, 124, 128, 129, 157, 192, 197, 204, 206, 209, 211, 215, 216, 220, 240, 244, 247, 251, 253, 259], "compatibli": 2, "compb": 247, "compil": [2, 21, 30, 69, 116, 129, 204, 220, 232, 245, 251, 252, 253, 275, 290], "compileflag": [16, 251], "complement": [118, 120, 216, 228, 239], "complementari": [4, 96, 143], "complementset": 228, "complet": [2, 3, 4, 9, 11, 12, 13, 14, 15, 16, 18, 21, 23, 30, 36, 41, 52, 55, 64, 69, 88, 89, 90, 92, 94, 95, 96, 104, 113, 115, 124, 128, 130, 150, 152, 153, 176, 179, 180, 209, 213, 215, 216, 217, 221, 227, 232, 233, 236, 239, 240, 251, 253, 261, 290, 291, 296, 298, 305], "complex": [4, 7, 12, 13, 14, 15, 16, 18, 21, 22, 30, 32, 36, 38, 41, 43, 51, 52, 53, 57, 61, 65, 66, 67, 69, 79, 88, 89, 91, 92, 93, 96, 100, 110, 113, 119, 124, 128, 129, 130, 131, 141, 143, 152, 155, 157, 159, 163, 173, 176, 178, 179, 190, 199, 208, 209, 211, 215, 216, 220, 221, 225, 228, 230, 232, 236, 238, 239, 240, 253, 261, 296, 297], "complex128": 69, "complex64": 69, "complex_": 69, "complex_allow": 253, "complex_beam_paramet": 159, "complex_conjug": 94, "complex_el": 65, "complex_numb": [41, 65, 88], "complexbasetyp": 69, "complexel": [210, 211], "complexelementshandl": 65, "complexelementspred": 65, "complexfield": 211, "complexhandl": 65, "complexinfin": [88, 143], "complexpred": 65, "complexregion": [228, 239], "complexrootof": [48, 88, 124, 211, 216, 236], "complexspac": 176, "complextyp": 69, "compliant": 69, "complic": [4, 12, 14, 16, 18, 23, 25, 36, 37, 41, 43, 48, 54, 61, 69, 79, 87, 89, 90, 92, 93, 94, 96, 113, 115, 120, 130, 150, 190, 209, 210, 213, 217, 219, 230, 232, 239, 240, 244, 245, 253, 255, 259, 261, 286, 288, 291, 292], "compon": [18, 19, 23, 24, 28, 32, 33, 34, 35, 36, 48, 68, 69, 84, 88, 90, 103, 115, 120, 124, 132, 133, 134, 143, 144, 150, 151, 154, 157, 162, 187, 192, 199, 202, 205, 206, 207, 208, 209, 216, 218, 240, 242, 245, 246, 255, 258, 264, 267, 270, 271, 298], "component_": 258, "componentwis": [207, 220], "compos": [27, 35, 68, 88, 89, 192, 195, 207, 211, 215, 216, 217, 220, 222, 232, 305], "composit": [41, 65, 68, 77, 79, 80, 88, 89, 106, 108, 115, 128, 135, 211, 213, 216, 219, 232, 239, 254], "composite_numb": [41, 88], "compositedomain": 211, "compositehandl": 65, "compositemorph": 68, "compositepi": 128, "compositepred": 65, "composition_seri": 79, "compound": [88, 188, 306], "compound_pend": 306, "compound_probability_distribut": 240, "compound_rv": 240, "compounddistribut": 240, "comprehens": [13, 41, 46, 52, 53, 55, 214, 228, 240, 285, 299], "compress": [18, 79, 124, 127, 139], "compris": [28, 31, 79, 89, 120, 143, 154, 216, 258], "compulsori": 143, "comput": [0, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 21, 22, 23, 30, 32, 33, 35, 39, 41, 42, 43, 46, 48, 49, 52, 53, 54, 59, 61, 67, 69, 70, 71, 72, 77, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 101, 103, 107, 110, 111, 112, 114, 115, 117, 120, 124, 125, 127, 128, 130, 135, 136, 141, 143, 150, 151, 152, 153, 157, 174, 175, 176, 184, 189, 190, 192, 194, 195, 199, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 222, 223, 225, 227, 228, 229, 230, 232, 233, 236, 238, 239, 240, 242, 252, 255, 258, 259, 264, 266, 267, 268, 269, 270, 271, 273, 276, 285, 286, 288, 289, 292, 296, 298, 301, 303, 308], "computation": [14, 53, 84, 94, 151, 152, 153], "computationfail": 213, "compute_explicit_form": 157, "compute_fp": 222, "compute_leading_term": 88, "compute_m_ybar": 236, "comtet": 222, "comupt": 236, "concaten": [89, 124, 147, 155, 258], "concav": [67, 159], "concave_funct": 67, "concentr": [18, 55, 136, 240], "concept": [13, 15, 36, 41, 79, 210, 212, 215, 220, 239, 244, 273, 289, 294, 301, 304], "conceptu": [195, 207, 273], "concern": [4, 12, 14, 15, 33, 41, 67, 70, 87, 92, 128, 206, 208, 209, 210, 219, 220, 221, 232, 233, 238, 252, 253, 255, 261], "concis": [4, 30], "conclud": [33, 41, 96, 111, 227, 238, 273, 301], "conclus": [68, 88, 299], "concret": [11, 18, 22, 41, 68, 80, 88, 93, 94, 115, 117, 124, 128, 131, 134, 147, 195, 211, 215, 220, 276], "concur": 217, "concurr": [101, 102, 217], "concycl": 103, "cond": [94, 113, 115, 228], "conda": [2, 8, 9, 59, 130], "condens": [124, 239], "condit": [12, 14, 15, 18, 23, 27, 30, 41, 42, 46, 48, 50, 69, 79, 88, 90, 94, 96, 106, 107, 110, 111, 112, 115, 118, 124, 128, 130, 135, 136, 139, 143, 149, 150, 153, 159, 203, 205, 217, 220, 223, 230, 233, 235, 236, 238, 239, 240, 245, 296, 301], "condition_numb": 124, "condition_set": 240, "conditionaldomain": 240, "conditionset": [228, 239, 240, 297], "conduct": [5, 18, 132], "cone": 274, "confederaci": 89, "confer": [93, 129, 294], "confid": 290, "config": [9, 116], "configur": [2, 3, 11, 12, 13, 18, 23, 25, 27, 46, 80, 118, 143, 148, 150, 152, 220, 298, 303, 305, 308, 310], "configura": 30, "configuration_constraint": [25, 152, 298, 301, 305], "confirm": [3, 12, 13, 79, 128, 236], "conflict": [13, 22, 94, 128, 143, 253], "confluent": [96, 230], "conform": [18, 88, 239, 244, 245, 258], "confus": [3, 5, 12, 13, 14, 15, 36, 41, 51, 88, 93, 118, 163, 208, 216, 239, 285, 286, 288], "confusingli": 96, "cong": 213, "congratul": 293, "congruenc": [79, 88, 128, 230, 233], "congruent": [213, 230, 233], "conic": [98, 233, 264], "conicis": 207, "conj": 220, "conjectur": [128, 213], "conjg": 220, "conjug": [4, 48, 65, 77, 78, 79, 88, 94, 96, 124, 130, 145, 159, 173, 176, 190, 213, 216, 220, 236, 246], "conjugaci": [70, 71, 79], "conjugacy_class": 79, "conjugate_convent": 124, "conjugate_gauss_beam": 159, "conjunct": [94, 118, 128, 206, 230, 251, 296], "conlist_coord": 301, "conlist_spe": 301, "connect": [9, 18, 24, 41, 82, 89, 90, 103, 104, 124, 129, 135, 139, 143, 148, 151, 157, 158, 207, 208, 209, 218, 236, 240, 258, 264, 301, 306], "connect_to": 13, "connected_compon": [124, 258], "connected_components_decomposit": 124, "connector": 136, "consec": 79, "consec_succ": 79, "consecut": [5, 69, 79, 84, 87, 88, 89, 93, 104, 155, 232, 238], "consequ": [12, 13, 43, 65, 88, 134, 208, 210, 288, 296], "consequenti": 133, "conserv": [26, 88, 152, 200, 267, 273, 302], "conservative_field": [33, 271], "conserve_mpmath_dp": 254, "consid": [0, 3, 5, 12, 13, 14, 15, 16, 18, 21, 25, 31, 33, 35, 38, 41, 42, 43, 46, 57, 61, 65, 68, 69, 77, 80, 83, 87, 88, 89, 91, 92, 93, 94, 96, 98, 100, 104, 112, 113, 115, 116, 117, 118, 120, 124, 128, 143, 147, 148, 154, 180, 187, 190, 194, 195, 200, 204, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 223, 227, 232, 233, 236, 237, 238, 239, 240, 251, 253, 258, 267, 269, 271, 273, 274, 288, 292, 296], "consider": [3, 12, 21, 42, 88, 129, 210, 219, 228, 233, 236, 268], "consist": [4, 5, 13, 15, 18, 24, 28, 39, 41, 50, 52, 56, 68, 79, 80, 84, 88, 89, 93, 94, 96, 98, 104, 106, 113, 118, 128, 130, 131, 135, 139, 151, 154, 164, 184, 190, 195, 198, 203, 206, 208, 209, 210, 211, 213, 228, 236, 238, 239, 240, 244, 249, 252, 253, 258, 289, 291, 302, 303], "consol": [2, 3, 16, 88, 116, 204, 206, 295], "const": [211, 220], "constanc": 88, "constant": [12, 13, 14, 15, 18, 22, 30, 31, 33, 46, 48, 50, 51, 53, 56, 67, 69, 87, 88, 92, 94, 96, 112, 113, 115, 131, 132, 134, 135, 136, 143, 147, 157, 158, 167, 171, 177, 193, 194, 196, 197, 198, 200, 203, 206, 208, 211, 213, 215, 216, 217, 220, 222, 227, 230, 232, 233, 236, 237, 238, 239, 240, 251, 253, 258, 259, 267, 271, 274, 281, 286, 292, 297, 298, 301], "constant_problem": 292, "constant_renumb": 236, "constant_symbol": 157, "constantli": 227, "constantrul": 115, "constantsimp": 236, "constanttimesrul": 115, "constitu": [98, 104, 154, 199, 226, 264], "constitut": [3, 5, 15, 115, 128, 220], "constr": 238, "constrain": [26, 30, 152, 153, 238, 298, 303, 305], "constraint": [22, 23, 25, 26, 27, 30, 39, 50, 124, 136, 143, 148, 150, 152, 153, 157, 217, 238, 298, 301, 303, 304, 305, 307], "constraint_solv": 152, "construct": [13, 14, 18, 21, 22, 39, 46, 50, 61, 63, 64, 67, 68, 69, 71, 88, 90, 94, 96, 98, 102, 104, 116, 120, 124, 129, 132, 134, 136, 143, 147, 148, 152, 154, 155, 157, 175, 179, 188, 189, 192, 196, 207, 209, 210, 211, 213, 215, 216, 220, 233, 238, 240, 241, 245, 253, 255, 256, 268, 270, 271, 288, 291, 292, 296, 298, 299, 301], "construct_c": 236, "construct_d": 236, "construct_domain": [209, 210, 211, 216], "constructor": [13, 14, 15, 18, 43, 63, 64, 68, 69, 75, 79, 80, 81, 88, 95, 96, 117, 121, 124, 130, 131, 132, 134, 147, 155, 183, 184, 188, 192, 206, 207, 209, 210, 211, 220, 228, 236, 245, 253, 268, 276, 287, 291, 305], "construtor": 147, "constuct": 18, "consult": 70, "consum": [4, 27, 69, 96, 153], "contact": [35, 104, 244, 301, 307, 308, 309, 310], "contain": [2, 3, 4, 5, 8, 11, 12, 13, 14, 15, 16, 18, 27, 28, 30, 31, 36, 37, 41, 42, 43, 50, 51, 52, 53, 55, 56, 57, 60, 62, 63, 67, 68, 69, 70, 71, 79, 80, 84, 86, 87, 90, 91, 92, 93, 94, 96, 97, 99, 101, 102, 103, 104, 105, 114, 115, 117, 118, 120, 123, 124, 127, 128, 129, 130, 132, 134, 135, 137, 138, 139, 141, 142, 143, 144, 147, 148, 152, 153, 154, 157, 159, 160, 161, 163, 164, 165, 177, 180, 182, 185, 187, 190, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 220, 221, 222, 227, 228, 230, 232, 233, 234, 236, 237, 238, 239, 240, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 264, 267, 275, 286, 288, 292, 296, 298, 301, 305], "contbound": 213, "content": [3, 6, 14, 17, 20, 69, 88, 89, 122, 208, 209, 211, 213, 216, 219, 220, 239, 248, 253, 256, 257, 276, 277, 278, 279, 280, 281, 282, 283, 287, 289, 300], "context": [3, 4, 5, 11, 12, 13, 14, 22, 37, 41, 43, 54, 62, 63, 64, 88, 90, 96, 118, 147, 148, 195, 210, 211, 213, 215, 228, 249, 251, 256, 264], "contigu": [88, 230, 253], "continu": [3, 4, 5, 12, 13, 39, 42, 43, 46, 67, 69, 78, 80, 82, 88, 93, 94, 96, 113, 116, 124, 128, 140, 141, 143, 185, 188, 204, 211, 213, 216, 233, 235, 236, 244, 287], "continue_": 69, "continued_fract": 128, "continued_fraction_converg": 128, "continued_fraction_iter": 128, "continued_fraction_period": 128, "continued_fraction_reduc": 128, "continuetoken": 69, "continuous_domain": [67, 235], "continuousdistributionhandmad": 240, "continuousdomain": 240, "continuousmarkovchain": 240, "continuouspspac": 240, "continuousrv": 240, "continuum": [47, 59, 281, 300], "continuum_mechan": [135, 136, 137, 139], "contour": [96, 98, 113, 206, 230], "contourf": 206, "contract": [18, 69, 90, 131, 132, 134, 144, 190, 220, 229, 242, 244, 245, 246, 247, 298], "contract_al": 246, "contract_metr": 246, "contractil": [18, 134, 147], "contraction_ax": 241, "contraction_indic": 242, "contradict": [41, 220], "contrarili": 48, "contrast": [12, 14, 15, 43, 87, 88, 210, 216, 230, 236, 290, 305], "contravari": [84, 124, 246, 247], "contribut": [0, 2, 3, 4, 5, 9, 10, 12, 59, 104, 128, 152, 210, 213, 215, 236, 274, 293, 306, 309], "contributor": [2, 5, 6, 7, 8, 11, 13, 43], "control": [2, 7, 9, 13, 14, 16, 18, 27, 30, 37, 41, 43, 47, 68, 70, 88, 89, 92, 113, 118, 124, 131, 132, 134, 147, 170, 174, 185, 186, 190, 209, 216, 217, 221, 228, 233, 239, 258, 281, 285, 298], "control_lin": 170, "control_plot": 141, "control_point": 170, "control_valu": 174, "controller_mat": 143, "conv": 91, "convei": [11, 48], "conveni": [0, 8, 13, 14, 15, 16, 22, 28, 30, 35, 36, 50, 52, 57, 60, 67, 69, 80, 88, 89, 93, 96, 115, 118, 130, 201, 206, 207, 208, 209, 210, 211, 215, 218, 227, 228, 232, 238, 244, 245, 252, 254, 255, 259, 271, 286, 288], "convent": [3, 4, 5, 18, 30, 33, 43, 55, 79, 80, 84, 87, 88, 89, 93, 94, 96, 98, 103, 113, 115, 118, 130, 135, 136, 139, 143, 146, 147, 155, 159, 163, 184, 185, 187, 192, 193, 206, 220, 236, 237, 239, 240, 246, 273, 288, 296, 301], "converg": [13, 14, 69, 87, 92, 96, 115, 128, 159, 216, 223, 227, 230, 286], "convergence_stat": 96, "convergence_test": 87, "convers": [4, 5, 13, 14, 27, 41, 51, 69, 88, 108, 130, 194, 208, 209, 210, 211, 213, 215, 217, 220, 233, 245, 252, 264], "convert": [2, 3, 8, 13, 14, 15, 16, 28, 32, 37, 41, 42, 43, 46, 51, 53, 54, 55, 61, 65, 69, 72, 80, 84, 88, 89, 92, 93, 94, 101, 102, 103, 105, 108, 109, 112, 116, 118, 124, 127, 128, 130, 143, 147, 154, 184, 187, 193, 194, 195, 197, 203, 206, 207, 209, 211, 213, 215, 216, 217, 218, 220, 221, 222, 228, 229, 230, 232, 233, 236, 237, 239, 240, 241, 242, 245, 251, 252, 258, 259, 261, 262, 267, 282, 287, 288, 291, 296], "convert_array_to_matrix": 242, "convert_equals_sign": 130, "convert_from": [210, 211], "convert_indexed_to_arrai": 242, "convert_matrix_to_arrai": 242, "convert_to": [193, 194, 197, 209, 215], "convert_to_c": 130, "convert_to_expr": 130, "convert_to_fortran": 130, "convert_to_native_path": 251, "convert_to_python": 130, "convert_xor": [88, 130], "convex": [67, 104, 105, 115], "convex_funct": 67, "convex_hul": [4, 100, 104, 105], "convolut": [12, 13, 96, 222], "convolution2d": 69, "convolution_fft": 91, "convolution_fwht": 91, "convolution_ntt": 91, "convolution_subset": 91, "convolution_theorem": 91, "conwai": 74, "coolei": 91, "cooper": 88, "coord": [21, 90, 103, 105, 188, 203], "coord_con": 25, "coord_funct": 90, "coord_idx": [31, 157], "coord_index": 90, "coord_si": [90, 267], "coord_stat": 157, "coord_system": 13, "coord_tuple_transform_to": [13, 90], "coordin": [18, 22, 24, 25, 26, 29, 31, 32, 33, 36, 61, 69, 89, 90, 94, 96, 97, 99, 103, 105, 120, 124, 135, 137, 139, 141, 145, 147, 148, 151, 152, 153, 155, 157, 158, 166, 168, 187, 188, 191, 199, 200, 201, 203, 207, 215, 216, 228, 236, 264, 266, 267, 270, 272, 274, 279, 298, 300, 301, 302, 303, 304, 306, 308], "coordinate_deriv": [31, 157], "coordinate_system": 90, "coordinatesym": [199, 201], "coordinatesymbol": 90, "coordsyrect": 264, "coordsys3d": [264, 266, 267, 268, 270, 271, 274], "coordsysrect": 264, "coordsystem": [13, 90], "copi": [0, 9, 11, 12, 13, 16, 41, 45, 70, 80, 81, 88, 104, 124, 128, 129, 209, 211, 213, 215, 219, 220, 227, 238, 251, 258, 261, 295], "coplanar": [36, 61, 102], "coprim": [89, 115, 128, 186, 213, 233], "core": [2, 3, 4, 7, 11, 12, 14, 15, 16, 38, 41, 42, 43, 50, 65, 67, 69, 79, 89, 94, 95, 97, 105, 123, 124, 128, 130, 188, 189, 208, 209, 210, 211, 212, 213, 215, 216, 217, 220, 227, 228, 232, 233, 236, 240, 250, 251, 252, 258, 259, 262, 275, 276, 288, 291], "core_2": 128, "core_t": 128, "corioli": 301, "cornacchia": 233, "corner": [11, 12, 79, 81, 124, 216, 236, 239, 259], "correct": [3, 4, 5, 11, 12, 13, 14, 16, 18, 22, 27, 35, 36, 42, 43, 51, 53, 55, 69, 77, 79, 85, 87, 88, 92, 94, 112, 113, 115, 124, 128, 143, 147, 155, 213, 216, 227, 233, 236, 238, 239, 244, 252, 258, 288, 295, 298], "correctli": [2, 3, 4, 5, 8, 11, 12, 13, 14, 22, 27, 42, 43, 67, 92, 113, 116, 124, 130, 133, 147, 155, 220, 227, 233, 236, 301], "correl": 240, "correspond": [3, 4, 5, 7, 11, 12, 13, 18, 22, 31, 33, 39, 41, 42, 43, 46, 51, 55, 67, 68, 69, 70, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 93, 94, 96, 98, 99, 101, 102, 103, 104, 111, 113, 115, 117, 118, 124, 127, 128, 132, 134, 135, 136, 143, 149, 151, 152, 153, 154, 157, 162, 166, 180, 184, 185, 187, 191, 192, 195, 199, 203, 205, 206, 208, 209, 210, 211, 213, 215, 216, 220, 226, 227, 230, 232, 233, 236, 237, 238, 239, 240, 242, 244, 245, 246, 253, 254, 255, 256, 258, 259, 261, 264, 266, 268, 269, 271, 273, 291, 297, 301, 305], "correspondingli": 68, "cosec": 94, "coset": [79, 84, 215], "coset_enumer": 70, "coset_enumeration_c": 70, "coset_enumeration_r": 70, "coset_factor": 79, "coset_rank": 79, "coset_t": [70, 79], "coset_table_bas": 70, "coset_table_max_limit": 70, "coset_transvers": 79, "coset_unrank": 79, "cosh": [43, 88, 94, 96, 107, 113, 130, 132, 217, 220, 221, 230, 232, 238, 292, 296], "coshint": 220, "coshintegr": 220, "cosin": [18, 36, 43, 88, 94, 96, 103, 115, 148, 151, 199, 216, 217, 223, 229, 240, 264, 296], "cosine_transform": 115, "cosinetransform": 115, "cosint": 220, "cosintegr": 220, "coskew": 240, "cosmet": [12, 220], "cost": [12, 67, 69, 128, 209, 239, 290, 305], "cost_funct": 69, "costli": [113, 209, 216, 292, 305], "cot": [12, 88, 94, 96, 130, 217, 220, 229], "cotang": [94, 217], "coth": [94, 220, 232], "could": [12, 13, 14, 15, 16, 18, 22, 23, 27, 39, 41, 43, 52, 54, 56, 64, 69, 81, 88, 100, 113, 115, 118, 150, 151, 154, 190, 193, 195, 207, 210, 213, 215, 217, 220, 228, 230, 232, 236, 237, 238, 239, 240, 241, 244, 245, 252, 256, 269, 270, 288, 291, 296], "could_extract_minus_sign": 88, "couldn": 115, "count": [3, 5, 15, 74, 80, 87, 88, 89, 93, 98, 118, 124, 127, 128, 185, 216, 228, 229, 232, 239, 240, 246, 255, 258], "count_complex_root": 211, "count_digit": [88, 128], "count_op": [12, 16, 88, 229, 232], "count_partit": 255, "count_real_root": 211, "count_root": 216, "countabl": [195, 239], "counter": [69, 88, 94, 100, 124, 136, 137, 139], "counterclockwis": [97, 98, 99, 103, 124, 135, 136], "counterexampl": [128, 296], "counterpart": [88, 89, 236, 286], "coupl": [18, 27, 55, 88, 124, 130, 157, 169, 184, 187, 205], "coupledspinst": 187, "cours": [12, 28, 33, 39, 41, 45, 71, 72, 79, 87, 96, 113, 115, 124, 125, 128, 209, 210, 214, 215, 227, 229, 230, 271, 296], "cov": 238, "covarderivativeop": 90, "covari": [84, 90, 124, 240, 246, 247], "cover": [12, 19, 20, 21, 22, 32, 35, 39, 94, 128, 130, 246, 253, 286, 288, 299, 300], "coverag": 4, "coverage_doctest": 4, "coverage_report": 12, "covering_product": 91, "covhtml": 12, "cox": [70, 214, 216], "cox97": [214, 216], "coxet": 117, "coxeter_diagram": 117, "cp": [0, 80, 129, 208, 209], "cphase": 174, "cpp_dec_float_50": 69, "cpp_src": 115, "cpu": [11, 30, 69, 129], "cpython": [12, 30], "crack": 128, "cramer": [124, 152, 209, 236], "cramer_solv": [119, 124], "crandal": 128, "crazi": 288, "crc": [70, 78, 80], "creat": [0, 2, 4, 5, 7, 8, 12, 14, 15, 18, 22, 24, 26, 27, 28, 30, 31, 32, 35, 36, 41, 42, 50, 51, 52, 53, 55, 56, 57, 61, 63, 68, 69, 70, 77, 79, 80, 88, 89, 90, 92, 94, 95, 96, 98, 100, 101, 103, 104, 109, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 126, 128, 129, 130, 131, 132, 134, 135, 139, 143, 147, 148, 151, 152, 154, 155, 157, 158, 167, 169, 171, 175, 178, 179, 180, 184, 185, 187, 188, 190, 193, 196, 199, 201, 203, 206, 207, 209, 210, 211, 213, 215, 216, 217, 220, 227, 232, 236, 239, 240, 241, 245, 246, 251, 252, 253, 255, 256, 258, 259, 264, 269, 271, 286, 288, 291, 292, 295, 296, 297, 298, 303, 305, 306, 308, 310], "create_expand_pow_optim": 69, "create_new": [264, 269], "createboson": 190, "createcg": 170, "createfermion": 190, "creation": [13, 16, 18, 23, 24, 25, 26, 27, 35, 36, 43, 88, 90, 124, 133, 148, 150, 154, 164, 174, 178, 179, 180, 190, 220, 240, 245, 253, 259, 308], "creator": 190, "credit": 258, "crell": 215, "cremona": 233, "criteria": [41, 88, 291], "criterion": [29, 69, 79, 208, 213], "critic": [35, 52, 67, 134, 163, 215, 239], "critical_angl": 163, "critical_point": 52, "critiqu": 219, "crmarsh": 240, "crootof": [57, 88, 216, 236, 238], "cross": [3, 5, 11, 12, 15, 30, 32, 35, 36, 88, 98, 104, 124, 135, 136, 148, 151, 154, 158, 170, 199, 201, 233, 239, 264, 268, 270, 271, 298, 309], "cross_sect": 135, "crosscovariancematrix": 240, "crt": [89, 128, 209, 213], "crt1": [128, 213], "crt2": [128, 213], "crucial": [79, 87, 210], "crude": [113, 206, 301], "crv": 240, "crv_type": 240, "cryptanalysi": 89, "crypto": 89, "cryptograph": 89, "cryptographi": [128, 275, 282], "cryptosystem": 89, "csail": 91, "csc": [94, 130, 220, 229], "csch": [94, 220], "cse": [21, 69, 129, 179, 221, 232, 253, 259, 298], "cse_main": [69, 221, 232], "cset": 88, "csr": 127, "csse": 93, "cst": 22, "cstech": 264, "csusm": 233, "ct": [89, 117, 213], "ctan": [116, 204], "ctimesd": 16, "ctmcnote": 240, "ctr1": 229, "ctr2": 229, "ctr3": 229, "ctr4": 229, "ctrl": 8, "cube": [48, 67, 69, 72, 79, 81, 94, 115, 213, 214, 233, 239, 274], "cube_root": 94, "cubefre": 128, "cuberoot": 94, "cubic": [48, 96, 147, 207, 216, 233, 238], "cubic_curv": 264, "cubic_equ": 216, "cubicthu": 233, "cucurezeanu": 233, "cuda": [2, 129], "cuhk": 233, "cultur": 207, "cumbersom": [4, 11, 57], "cup": [41, 216, 228, 239], "cupi": [2, 129], "curl": [200, 264, 267, 274], "curli": [16, 22, 220], "current": [3, 5, 11, 12, 13, 14, 16, 21, 22, 23, 36, 41, 50, 51, 61, 64, 67, 68, 69, 70, 72, 79, 82, 83, 85, 86, 87, 88, 90, 94, 96, 98, 100, 103, 108, 111, 113, 115, 117, 124, 128, 130, 135, 140, 148, 150, 184, 189, 190, 194, 198, 206, 207, 208, 209, 211, 213, 216, 217, 219, 220, 221, 227, 230, 232, 233, 235, 236, 237, 238, 239, 240, 246, 251, 252, 253, 255, 268, 282, 292, 297], "currentfactor": 216, "curri": [0, 176], "curv": [4, 19, 68, 90, 100, 115, 128, 133, 134, 135, 159, 206, 207, 236, 264, 274, 281, 282, 286], "curvatur": [52, 159, 163], "curvedmirror": 159, "curvedrefract": 159, "curvilinear": [206, 268, 269], "curving_amount": 68, "custom": [4, 9, 13, 17, 32, 33, 44, 69, 80, 88, 92, 95, 116, 124, 130, 131, 147, 149, 151, 155, 158, 204, 222, 226, 233, 240, 246, 252, 259, 264, 273, 290, 292, 298], "custom_funct": [69, 220], "custom_sin": 259, "customarili": 208, "cut": [88, 93, 94, 96, 104, 113, 207, 230, 255, 261, 296], "cut_sect": 104, "cvd": 90, "cx": [35, 89, 136], "cxd": 189, "cxx": 220, "cxx11codeprint": [43, 220], "cxx98codeprint": 220, "cxxcode": [43, 69, 220], "cy": [35, 51, 233], "cyan": 206, "cybertest": 232, "cycl": [5, 13, 69, 76, 79, 80, 86, 88, 91, 93, 124, 128, 164, 228, 258], "cycle_detect": 128, "cycle_length": 128, "cycle_list": 89, "cycle_structur": 80, "cyclic": [74, 76, 79, 80, 81, 91, 124, 128, 246, 258], "cyclic_form": [76, 80, 81], "cyclic_ord": 76, "cyclicgroup": [73, 76, 79], "cyclotom": [88, 211, 213, 214, 215, 216], "cyclotomic_field": [211, 215], "cyclotomic_poli": [88, 215, 216], "cyclotomicpolynomi": 214, "cygwin": 8, "cyl": 18, "cylind": [18, 155, 158, 274, 298], "cylindr": [151, 158, 206, 271], "cylindricaljoint": 151, "cython": [2, 30, 69, 129, 252], "cythoncodewrapp": 252, "cz": [35, 51, 91, 143, 233], "czapor": 214, "c\u2081": [290, 297], "c\u2082": [290, 297], "d": [4, 5, 7, 8, 11, 12, 13, 15, 16, 18, 30, 32, 35, 36, 39, 43, 46, 49, 51, 53, 55, 61, 68, 72, 77, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 93, 96, 98, 102, 106, 111, 113, 115, 117, 118, 119, 120, 124, 125, 127, 128, 130, 135, 139, 143, 151, 152, 153, 159, 162, 163, 169, 179, 187, 189, 190, 195, 199, 201, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 220, 222, 226, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 244, 246, 258, 261, 264, 266, 267, 268, 269, 273, 281, 292, 297, 298, 302], "d0": 84, "d1": [68, 84, 143, 199, 207, 227, 240, 264], "d2": [84, 143, 199, 207, 227, 240, 258, 264], "d2fdx2": 286, "d2fdxdy": 88, "d3": [84, 227], "d4": [71, 117, 216, 240], "d6": 240, "d_": [84, 230], "d_0": [84, 89], "d_1": [113, 195, 216, 240], "d_1e": 240, "d_1z": 240, "d_2": [195, 216, 240], "d_3": 195, "d_4": 71, "d_6": 71, "d_i": [84, 113, 195], "d_ij": 190, "d_ip": 190, "d_j": [113, 195, 230], "d_m": 298, "d_n": [76, 117, 216], "d_o": 298, "d_qp": 190, "d_v": 113, "d_x": 298, "d_y": 298, "d_z": 298, "da": [18, 131, 236], "dadt": [18, 298], "dae": [31, 157], "dag": 15, "dagger": [167, 171, 177, 179, 182, 184, 189, 190, 220, 281], "dagum": 240, "dagum_distribut": 240, "dai": [193, 197, 236], "damp": [30, 134, 147, 298, 302], "damper": [18, 22, 46, 147, 148, 152, 157, 298, 302, 306], "damper_const": 18, "damping_coeffici": 147, "damping_forc": 147, "danger": [13, 208], "danilevski": 209, "dartmouth": 240, "dash": 68, "dat": [120, 258], "data": [14, 15, 39, 69, 79, 88, 89, 96, 115, 124, 129, 130, 132, 141, 152, 169, 206, 207, 209, 210, 211, 213, 216, 217, 220, 232, 245, 246, 251, 253, 255, 258], "databas": [220, 230], "datatyp": [130, 211, 220, 253], "date": 253, "daunt": 7, "davenport": [115, 213, 214], "davenport88": 214, "davi": 240, "david": [29, 214, 216], "davis_distribut": 240, "davisdistribut": 240, "dbase": 84, "dbinom": 130, "dc": [26, 46, 143], "dc_gain": [46, 143], "dcm": [13, 22, 30, 35, 36, 148, 151, 199, 264, 301], "dd": [205, 225], "ddm": 209, "ddm_": 209, "ddm_berk": 209, "ddm_iadd": 209, "ddm_idet": 209, "ddm_iinv": 209, "ddm_ilu": 209, "ddm_ilu_solv": 209, "ddm_ilu_split": 209, "ddm_imatmul": 209, "ddm_imul": 209, "ddm_ineg": 209, "ddm_irmul": 209, "ddm_irref": 209, "ddm_irref_den": 209, "ddm_isub": 209, "ddm_rref": 209, "ddm_transpos": 209, "ddot": [18, 26, 35, 120, 124, 204, 220, 296, 305], "de": [11, 18, 68, 89, 93, 128, 131, 132, 134, 139, 195, 205, 217, 222, 233, 236, 258, 298], "deactiv": [18, 131, 298], "deactivation_time_const": 131, "dead": 229, "deal": [14, 21, 22, 33, 35, 36, 41, 69, 87, 88, 92, 100, 108, 113, 115, 140, 152, 153, 208, 213, 216, 233, 238, 249, 259, 261, 268, 273, 286, 288, 290, 296], "dealt": [92, 113], "debian": 220, "deboer79": 195, "debug": [6, 69, 88, 115, 130, 179, 251, 252, 261, 301], "debug_decor": 261, "debugf": 261, "decad": 236, "decai": 115, "decent": 294, "decid": [3, 4, 9, 21, 27, 39, 41, 42, 43, 48, 68, 87, 124, 183, 210, 213, 215, 216, 220, 236, 239, 253, 292], "decim": [16, 43, 69, 88, 91, 92, 128, 130, 141, 210, 216, 290], "decimal_dig": 69, "decimal_separ": 220, "deciph": 89, "decipher_affin": 89, "decipher_atbash": 89, "decipher_bifid": 89, "decipher_bifid5": 89, "decipher_bifid6": 89, "decipher_elgam": 89, "decipher_gm": 89, "decipher_hil": 89, "decipher_kid_rsa": 89, "decipher_railf": 89, "decipher_rot13": 89, "decipher_rsa": 89, "decipher_shift": 89, "decipher_vigener": 89, "decis": [17, 58, 88, 94, 115, 229, 238, 253], "decistmt": 116, "decl1": 69, "decl2": 69, "declar": [16, 22, 30, 41, 52, 69, 101, 113, 124, 130, 144, 169, 209, 220, 227, 230, 235, 236, 237, 240, 253, 301], "decod": 89, "decode_mors": 89, "decompos": [57, 79, 80, 86, 88, 90, 94, 99, 124, 128, 174, 183, 184, 186, 211, 216, 219, 240], "decomposit": [4, 48, 53, 79, 86, 119, 120, 124, 209, 211, 213, 214, 222, 296], "decor": [3, 12, 43, 79, 88, 96, 249, 251, 256, 257, 260, 261, 283], "decoupl": 124, "decre": 113, "decreas": [18, 67, 69, 80, 213], "decrement": [69, 255], "decrypt": 89, "dedekind": 207, "dedent": [256, 261], "dedic": [5, 28, 69, 71, 212, 213, 235, 253, 269, 271], "deduc": [43, 69, 113, 118, 230, 290], "deduct": [43, 69], "deduction_stack": 70, "deem": [13, 229], "deep": [14, 16, 43, 88, 94, 118, 124, 132, 216, 227, 232, 240, 291], "deepak": 214, "deeper": [44, 244, 291], "deepest": 244, "def": [3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 39, 41, 42, 43, 63, 64, 68, 88, 93, 100, 118, 124, 128, 130, 185, 210, 216, 220, 229, 232, 239, 254, 256, 258, 259, 260, 285, 288, 291, 292, 296, 298, 309], "default": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 21, 22, 27, 32, 41, 43, 48, 52, 53, 55, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 78, 79, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 110, 115, 116, 118, 120, 123, 124, 125, 128, 129, 130, 131, 132, 134, 135, 136, 139, 141, 143, 145, 147, 148, 149, 151, 152, 153, 157, 163, 180, 182, 185, 187, 188, 190, 194, 196, 199, 201, 203, 204, 205, 206, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 221, 222, 223, 227, 228, 229, 232, 233, 236, 237, 238, 239, 240, 245, 246, 251, 252, 253, 255, 256, 258, 259, 261, 264, 285, 286, 290, 292, 295, 296, 303], "default_arrow_formatt": 68, "default_assumpt": 41, "default_curving_amount": 68, "default_curving_step": 68, "default_formatt": 68, "default_sort_kei": [13, 68, 77, 88, 244], "defaultdict": [41, 88, 258], "defeat": [3, 12, 236], "defect": 236, "defective_matrix": 236, "defens": 12, "defer": 124, "defici": [124, 128, 239], "deficientnumb": 128, "defin": [3, 4, 5, 11, 12, 13, 15, 16, 18, 21, 22, 23, 24, 28, 30, 31, 32, 33, 35, 36, 37, 39, 41, 42, 57, 60, 61, 63, 64, 67, 69, 70, 71, 72, 78, 79, 80, 83, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 111, 113, 115, 116, 120, 124, 128, 131, 132, 134, 135, 136, 141, 147, 148, 150, 151, 154, 155, 157, 158, 161, 167, 169, 171, 176, 179, 185, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 222, 223, 226, 227, 228, 230, 232, 233, 236, 238, 239, 240, 241, 245, 246, 252, 253, 254, 258, 259, 260, 261, 264, 266, 267, 268, 269, 270, 271, 273, 274, 288, 290, 296, 299, 301, 303, 304, 306, 308, 310], "defined_fact": 41, "definit": [4, 13, 14, 15, 16, 18, 28, 35, 36, 42, 61, 65, 69, 70, 79, 80, 85, 87, 88, 90, 91, 93, 94, 96, 101, 104, 111, 113, 115, 119, 120, 124, 128, 130, 151, 157, 192, 195, 198, 199, 207, 208, 211, 216, 217, 220, 227, 240, 241, 252, 253, 254, 258, 259, 264, 268, 269, 270, 271, 286, 296, 299, 301, 308, 309], "definite_matrix": 65, "definiteness_of_a_matrix": 124, "deflat": [211, 216], "deflect": [98, 104, 135, 136], "deflection_jump": 135, "defn": 213, "deform": [113, 136], "deg": [22, 115, 141, 208, 211, 213, 215, 216], "deg2rad": [22, 298], "degbound": 213, "degener": [61, 238, 239], "degre": [22, 31, 32, 36, 39, 48, 70, 71, 79, 86, 87, 93, 96, 104, 115, 124, 135, 137, 139, 141, 143, 148, 151, 152, 157, 162, 207, 208, 211, 213, 215, 216, 219, 220, 223, 226, 229, 230, 232, 233, 236, 238, 240, 264, 298, 300, 303, 304, 305], "degree_list": [211, 216], "degree_offset": 115, "degroote2016": [18, 298], "dejavu": 8, "dejavufont": 8, "del": [195, 255, 264, 272, 296], "delai": [18, 27, 88, 131, 141, 229, 251, 286], "delastel": 89, "delet": [12, 72, 117, 124, 217, 261, 296], "delete_doubl": 117, "deletechar": 261, "deliber": 215, "delic": [115, 207], "delimit": [5, 88, 220], "delin": 3, "delop": [264, 270, 271], "deloper": [264, 272], "delta": [13, 16, 27, 69, 72, 82, 93, 111, 113, 117, 141, 162, 190, 205, 209, 220, 227, 233, 236, 240, 241, 246], "delta_": [96, 187, 195, 205], "delta_fn": 69, "delta_funct": [11, 96, 115], "delta_i": 230, "delta_rang": [96, 190], "deltafunct": [96, 115], "deltaintegr": 115, "demand": [43, 60], "demonstr": [4, 5, 16, 18, 22, 27, 41, 43, 46, 48, 52, 53, 54, 79, 80, 88, 93, 115, 128, 148, 151, 207, 210, 270, 296, 300, 302, 304, 305, 306], "den": [143, 209, 211, 232, 236], "den_list": 143, "den_reduc": 209, "dena": 236, "denest": [13, 88, 216, 232, 238, 258], "deni": 236, "denom": [88, 209, 210, 211, 215, 232], "denomin": [16, 88, 92, 96, 115, 128, 143, 149, 208, 209, 210, 211, 213, 215, 216, 219, 220, 229, 230, 232, 233, 236, 238, 296], "denoms_invert": 209, "denot": [13, 15, 16, 33, 39, 79, 80, 88, 90, 96, 110, 111, 113, 115, 117, 118, 124, 128, 130, 139, 143, 147, 158, 195, 199, 206, 207, 208, 213, 215, 223, 227, 228, 230, 236, 240, 245, 246, 264, 266, 268, 269, 271, 273], "dens": [15, 120, 122, 124, 209, 215, 216, 241, 259, 279, 291], "densearith": 213, "densebas": 213, "densematrix": [119, 124], "densetool": 213, "densiti": [240, 251, 274, 303], "denz": 143, "dep": [88, 236], "depend": [6, 9, 11, 13, 14, 15, 16, 18, 22, 23, 25, 33, 37, 41, 43, 45, 48, 53, 54, 55, 59, 67, 69, 70, 79, 80, 87, 88, 89, 90, 93, 94, 96, 100, 105, 112, 113, 115, 116, 117, 124, 128, 129, 130, 134, 141, 145, 148, 150, 152, 153, 157, 162, 163, 164, 179, 188, 190, 192, 194, 195, 204, 206, 208, 209, 211, 213, 215, 216, 217, 219, 220, 221, 226, 230, 232, 233, 236, 237, 238, 239, 240, 251, 252, 253, 254, 258, 259, 271, 273, 274, 288, 290, 301, 303, 305], "depict": [33, 135, 239, 273], "deploy": 59, "deprec": [4, 6, 17, 27, 50, 62, 80, 88, 115, 118, 124, 128, 146, 150, 151, 152, 206, 216, 220, 240, 246, 249, 250, 254, 256, 259, 281], "deprecat": 3, "deprecated_since_vers": [3, 249, 254, 256], "deprecationwarn": [148, 251, 256], "depth": [4, 5, 14, 16, 17, 58, 79, 88, 206, 207, 220, 301, 302], "der": [78, 79], "derang": [93, 258], "derefer": 220, "dereferenc": 220, "derek": [70, 78], "deriv": [0, 4, 11, 12, 13, 15, 17, 18, 21, 23, 25, 26, 27, 32, 33, 35, 40, 43, 52, 67, 68, 69, 72, 78, 79, 88, 90, 94, 95, 96, 98, 105, 110, 111, 113, 115, 116, 118, 120, 124, 130, 132, 134, 139, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 179, 188, 192, 195, 196, 199, 201, 203, 204, 206, 207, 208, 209, 211, 213, 215, 216, 217, 220, 222, 230, 232, 236, 237, 238, 242, 247, 253, 264, 267, 268, 287, 290, 297, 298, 299, 301, 302, 303, 304, 305, 306, 308], "derivand": 247, "derive_by_arrai": 241, "derived_dim": 192, "derived_seri": [78, 79], "derived_subgroup": 79, "derived_unit": 198, "descend": [88, 207, 215, 253], "descent": [80, 233], "descr": 198, "describ": [3, 4, 5, 7, 11, 13, 14, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 32, 33, 35, 36, 41, 42, 43, 48, 55, 61, 68, 70, 78, 79, 80, 82, 83, 86, 87, 88, 89, 93, 96, 98, 103, 104, 113, 115, 124, 127, 128, 134, 143, 147, 148, 150, 151, 152, 153, 154, 155, 157, 169, 190, 195, 199, 207, 209, 210, 213, 215, 221, 227, 230, 232, 233, 236, 239, 240, 244, 253, 258, 259, 264, 266, 271, 286, 303, 305, 306, 308, 310], "descript": [0, 3, 4, 5, 13, 14, 35, 36, 49, 58, 68, 70, 78, 96, 115, 128, 162, 180, 187, 198, 205, 220, 244, 251, 253, 255, 256, 275, 293, 299], "design": [2, 3, 4, 13, 14, 15, 17, 30, 31, 38, 42, 43, 46, 49, 54, 58, 65, 70, 78, 88, 124, 127, 130, 133, 134, 157, 209, 210, 214, 220, 225, 230, 236, 239, 290, 291, 295, 304], "desir": [4, 13, 14, 16, 23, 27, 35, 36, 39, 43, 50, 55, 57, 60, 79, 80, 88, 89, 91, 92, 93, 94, 98, 102, 104, 118, 124, 127, 128, 129, 148, 150, 152, 153, 154, 157, 175, 199, 209, 211, 213, 215, 216, 217, 220, 221, 223, 228, 232, 236, 238, 239, 252, 254, 255, 258, 271, 285], "desktop": 9, "despit": [3, 48, 57, 88, 296], "destin": 253, "destroi": [190, 229], "destruct": 216, "det": [30, 36, 53, 61, 124, 125, 209, 292], "det_lu": 124, "det_lu_decomposit": 124, "det_method": 124, "deta": 209, "detach": 8, "detail": [0, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 17, 22, 28, 30, 38, 41, 43, 58, 68, 79, 88, 90, 93, 95, 96, 113, 114, 115, 116, 124, 128, 141, 151, 152, 162, 180, 184, 199, 201, 205, 206, 207, 209, 213, 215, 222, 227, 232, 233, 234, 236, 237, 240, 245, 246, 251, 254, 256, 259, 269, 270, 271, 272, 275, 279, 286, 288, 292, 293, 295, 299, 304], "detect": [2, 8, 60, 67, 120, 124, 128, 130, 206, 210, 220, 236, 237, 239, 241, 258, 295], "determin": [3, 5, 13, 14, 15, 18, 28, 31, 33, 37, 39, 41, 42, 43, 46, 48, 51, 52, 53, 56, 62, 64, 65, 66, 67, 69, 70, 71, 72, 79, 88, 89, 90, 91, 92, 94, 98, 99, 101, 103, 104, 115, 116, 117, 120, 124, 128, 130, 135, 136, 143, 147, 149, 151, 153, 154, 155, 157, 169, 182, 184, 186, 187, 190, 193, 195, 199, 206, 207, 208, 209, 213, 215, 216, 220, 226, 227, 228, 230, 232, 233, 235, 236, 238, 239, 240, 244, 256, 258, 264, 271, 274, 288, 296, 310], "determinisit": 220, "determinist": [41, 79, 115, 128, 213, 214], "deterministic_vari": 128, "detool": 236, "deutil": [236, 237], "dev": [2, 3, 8, 9, 11, 256], "devel": [5, 205], "develop": [0, 3, 4, 5, 6, 10, 15, 18, 19, 30, 39, 41, 43, 67, 70, 86, 130, 137, 194, 206, 207, 210, 213, 238, 239, 290, 293, 298], "deviat": [5, 163, 240], "devis": 39, "df": [39, 90, 236], "dfdx": 286, "dfdxcheck": 39, "dfm": 209, "dfrac": [130, 240], "dft": [13, 91, 146], "dfx": 88, "dg": 90, "dh_private_kei": 89, "dh_public_kei": 89, "dh_shared_kei": 89, "di": [9, 216], "di1": 79, "di2": 79, "di3": 79, "di4": 79, "diag": [30, 120, 124, 127, 209, 246, 292], "diag_block": 120, "diagmat": 30, "diagon": [65, 93, 119, 120, 124, 127, 157, 162, 209, 242], "diagonal_ax": 241, "diagonal_indic": 242, "diagonal_matrix": 65, "diagonal_solv": [119, 124], "diagonalhandl": 65, "diagonaliz": [124, 292], "diagonalpred": 65, "diagram": [23, 46, 69, 77, 117, 135, 137, 147, 150, 155, 170, 245, 269, 291, 303, 305, 306], "diagram_draw": 68, "diagram_format": 68, "diagramgrid": 68, "diamet": [88, 98], "diaz": 214, "dic": 213, "dice": 240, "dict": [13, 14, 16, 37, 41, 48, 51, 52, 56, 57, 69, 71, 80, 88, 89, 90, 104, 105, 118, 124, 128, 130, 132, 152, 153, 170, 182, 185, 196, 198, 199, 206, 209, 210, 211, 213, 215, 216, 217, 218, 220, 232, 233, 236, 237, 238, 239, 240, 244, 251, 252, 258, 264, 297], "dict_iter": 233, "dict_merg": 258, "dictionari": [2, 12, 13, 14, 15, 17, 22, 25, 27, 36, 51, 55, 57, 68, 69, 77, 79, 80, 86, 88, 93, 102, 104, 115, 117, 124, 127, 128, 130, 135, 149, 152, 153, 157, 180, 190, 199, 206, 208, 209, 211, 213, 215, 216, 218, 220, 227, 232, 233, 236, 237, 238, 239, 240, 244, 246, 251, 255, 258, 259, 264, 285, 292, 301, 305, 308], "did": [2, 5, 11, 14, 21, 42, 88, 115, 128, 195, 213, 217, 228, 238, 249, 259, 288, 290, 296, 308], "didn": [12, 27, 115, 124], "die": [13, 215, 240], "die_rol": 240, "diedistribut": 240, "diepspac": 240, "dietrich": 74, "dif": 88, "diff": [4, 9, 11, 12, 13, 14, 15, 18, 21, 30, 33, 36, 39, 43, 46, 52, 55, 67, 69, 88, 93, 94, 95, 96, 105, 110, 115, 120, 124, 132, 149, 154, 188, 199, 201, 204, 206, 211, 216, 219, 220, 230, 236, 237, 238, 241, 242, 247, 268, 271, 286, 290, 297, 298, 303, 305], "diff_oper": 220, "diffeq": 297, "differ": [3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 27, 31, 32, 33, 36, 37, 38, 40, 42, 43, 48, 50, 51, 52, 53, 54, 55, 56, 60, 68, 69, 70, 71, 77, 78, 79, 80, 84, 87, 88, 89, 90, 92, 93, 94, 96, 99, 101, 103, 104, 108, 110, 112, 113, 115, 116, 117, 118, 120, 124, 128, 129, 130, 134, 135, 141, 143, 148, 152, 154, 157, 162, 163, 175, 176, 184, 185, 188, 190, 192, 194, 195, 199, 200, 203, 204, 206, 207, 208, 209, 211, 213, 215, 216, 217, 219, 220, 221, 222, 223, 225, 227, 228, 229, 232, 233, 236, 237, 238, 239, 240, 241, 244, 246, 249, 251, 252, 253, 254, 255, 256, 258, 259, 264, 267, 271, 273, 287, 288, 290, 291, 292, 295, 296, 300, 301, 302, 307], "difference_delta": 225, "differencedelta": 225, "differenti": [4, 5, 12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 36, 46, 49, 67, 88, 93, 94, 96, 105, 106, 108, 111, 115, 130, 131, 132, 134, 143, 150, 151, 152, 157, 179, 185, 199, 201, 203, 207, 213, 217, 219, 220, 225, 230, 232, 236, 237, 264, 271, 272, 275, 282, 286, 287, 290, 299, 301, 305, 308], "differentialoper": [110, 111, 179], "differentialoperatoralgebra": 111, "differentiate_finit": [67, 88, 286], "differnc": 211, "diffgeom": 90, "diffi": 89, "difficult": [5, 11, 12, 13, 14, 22, 41, 55, 57, 88, 124, 217, 230, 236, 237, 239, 252, 259, 274, 290, 296], "difficulti": [90, 128], "diffus": [18, 131], "dig": [43, 69, 291], "digamma": [4, 93, 96, 220], "digamma_funct": 96, "digammafunct": 96, "digit": [4, 11, 14, 15, 16, 23, 54, 69, 88, 89, 91, 92, 98, 115, 118, 128, 150, 199, 210, 216, 227, 232, 258, 285], "digit_2txt": 220, "digraph": [220, 258, 295], "dihedr": [71, 74, 76, 79, 80], "dihedral2": 79, "dihedral_group": [76, 79], "dihedralgroup": [76, 79, 86], "dilbert": 115, "dim": [69, 90, 103, 124, 129, 192, 198, 220, 243, 246, 279], "dim1": 245, "dim2": 245, "dim_can_vector": 192, "dim_handl": 220, "dim_si": 192, "dim_vector": 192, "dimens": [53, 69, 72, 89, 90, 96, 97, 99, 101, 102, 103, 105, 117, 120, 124, 127, 131, 134, 135, 144, 164, 174, 176, 179, 184, 193, 194, 197, 198, 199, 206, 209, 220, 233, 236, 238, 240, 241, 242, 245, 246, 253, 264, 267, 269, 281, 305], "dimension": [30, 33, 34, 53, 67, 69, 72, 90, 100, 101, 102, 103, 104, 120, 124, 136, 144, 164, 166, 176, 192, 202, 206, 207, 213, 215, 216, 219, 220, 238, 239, 241, 242, 246, 252, 273, 297], "dimension_system": 198, "dimensional_depend": 192, "dimensionless": [18, 194, 195], "dimensions": 192, "dimensionsystem": 192, "diment": 124, "dimino": [70, 79], "dimitar": 229, "dimsys_si": [192, 193], "diop_bf_dn": 233, "diop_dn": 233, "diop_general_pythagorean": 233, "diop_general_sum_of_even_pow": 233, "diop_general_sum_of_squar": 233, "diop_linear": 233, "diop_quadrat": 233, "diop_solv": 233, "diop_ternary_quadrat": 233, "diop_ternary_quadratic_norm": 233, "diophantin": [49, 50, 128, 213, 234, 276], "diophantineequ": 233, "diophantineequationtyp": 233, "diophantinesolutionset": 233, "diophantu": 233, "diplform": 110, "diploma": 264, "diplomat": 89, "dir": [16, 88, 135, 222, 227, 258], "dir_vec": 18, "dirac": [124, 141, 145, 146, 188, 220], "diracdelta": [4, 11, 96, 115, 185, 190, 220], "direct": [3, 4, 5, 13, 14, 15, 18, 21, 30, 33, 35, 36, 40, 55, 61, 63, 64, 68, 73, 76, 79, 84, 87, 88, 90, 92, 94, 97, 101, 102, 103, 104, 118, 124, 131, 132, 134, 135, 136, 137, 139, 147, 148, 151, 154, 155, 157, 158, 176, 199, 207, 209, 210, 213, 217, 227, 230, 238, 246, 249, 258, 264, 269, 270, 273, 298, 301, 303, 305, 309], "direct_product": 246, "direct_sum": 176, "directed_complete_partial_ord": 94, "direction": 36, "direction_cosin": [101, 103], "direction_ratio": [101, 103], "directional_deriv": 271, "directli": [2, 3, 4, 11, 12, 13, 14, 15, 16, 18, 22, 32, 39, 41, 42, 43, 48, 59, 63, 64, 67, 68, 69, 79, 87, 88, 90, 94, 99, 120, 124, 128, 130, 131, 147, 155, 158, 173, 176, 188, 193, 199, 203, 206, 207, 209, 210, 211, 213, 215, 216, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 251, 252, 253, 254, 255, 256, 286, 297], "director": 98, "director_circl": 98, "directori": [2, 4, 5, 7, 8, 11, 12, 59, 64, 69, 130, 236, 251, 252, 261], "directproduct": [73, 76], "directrix": 98, "directsumhilbertspac": 176, "dirichlet": [87, 96, 240], "dirichlet_distribut": 240, "dirichlet_eta": [96, 220], "dirichlet_eta_funct": 96, "dirichletdistribut": 240, "dirichleteta": 220, "disabl": [9, 12, 15, 55, 88, 89, 113, 115, 128, 213, 216, 220, 228, 236, 238, 249, 251, 254, 258, 259], "disable_view": 254, "disadvantag": [14, 88], "disallow": [14, 43, 88, 216, 221, 232, 254], "disambigu": 88, "disc": [35, 135, 300, 304], "discard": [88, 209, 215, 220, 239], "discard_befor": 215, "discern": [62, 64], "disciplin": 207, "disco": 214, "discontinu": [13, 67, 92, 94, 115, 135, 223, 238], "discourag": [15, 41, 88, 232], "discov": [21, 89, 113, 244, 292], "discoveri": [213, 292], "discrat": 206, "discrep": 194, "discret": [13, 67, 69, 70, 78, 80, 88, 89, 96, 128, 143, 190, 195, 206, 222, 225, 236, 238, 239, 276, 285], "discrete_fourier_transform_": 91, "discrete_log": 128, "discrete_uniform_distribut": 240, "discretedistributionhandmad": 240, "discretelogarithm": 128, "discretemarkovchain": 240, "discreterv": 240, "discreteuniform": 240, "discreteuniformdistribut": 240, "discrimin": [128, 211, 213, 215, 216], "discrit": 39, "discuss": [0, 3, 4, 5, 7, 11, 12, 13, 16, 17, 18, 21, 22, 23, 27, 28, 32, 34, 35, 36, 37, 39, 41, 42, 43, 58, 70, 79, 89, 96, 128, 133, 150, 152, 202, 210, 246, 255, 275, 285, 287, 288, 290, 291, 293, 295, 296], "disguis": 113, "disjoint": [65, 68, 77, 80, 216, 228, 258], "disjoint_set": 228, "disjoint_union": 228, "disjointunion": 228, "disjunct": 118, "disk": [69, 89, 228, 239, 259], "dispatch": [12, 15, 63, 64, 65, 88, 89, 185, 220, 239, 255], "dispers": [214, 240], "dispersionset": 216, "displac": [33, 35, 147, 273], "displai": [4, 5, 7, 11, 16, 41, 42, 55, 88, 89, 92, 113, 117, 135, 136, 141, 161, 194, 199, 203, 204, 206, 210, 211, 220, 228, 244, 251], "displayhook": [220, 251], "disregard": 68, "diss": 240, "dissimilar": 238, "dist": 240, "distanc": [18, 21, 33, 43, 68, 72, 80, 98, 101, 102, 103, 104, 135, 136, 146, 147, 151, 155, 158, 159, 163, 193, 203, 273, 305, 306], "distinct": [3, 5, 14, 15, 35, 37, 41, 43, 56, 69, 79, 80, 88, 89, 93, 101, 113, 118, 124, 128, 157, 210, 215, 216, 220, 228, 230, 296], "distinguish": [11, 22, 38, 41, 42, 68, 79, 92, 117, 189, 195, 207], "distract": 4, "distribut": [2, 8, 59, 79, 86, 88, 96, 104, 115, 135, 136, 137, 189, 208, 211, 216, 220, 246], "distribute_and_over_or": 118, "distribute_or_over_and": 118, "distribute_order_term": [88, 232], "distribute_xor_over_and": 118, "distributedmodul": 213, "distributionshandbook": 240, "distutil": 252, "div": [88, 130, 208, 210, 211, 216, 220, 232, 291], "divaugmentedassign": 69, "diverg": [87, 96, 159, 200, 264, 267], "divergence_theorem": 274, "divid": [13, 15, 79, 87, 88, 89, 93, 104, 124, 128, 152, 153, 194, 195, 208, 209, 210, 211, 213, 215, 216, 220, 236, 255, 291], "divide_last": 209, "dividend": [88, 211], "divis": [12, 16, 43, 88, 124, 128, 152, 192, 194, 207, 209, 210, 211, 212, 213, 216, 218, 220, 233, 236, 238, 251, 259, 288, 291, 295], "divisisor": 128, "divisor": [43, 65, 79, 88, 89, 93, 124, 128, 207, 208, 209, 210, 211, 213, 214, 215, 216, 219], "divisor_count": [93, 128], "divisor_funct": [93, 128], "divisor_sigma": [13, 15, 93, 128], "divmod": [208, 210, 211], "dixon": [209, 214], "django": 288, "djoyc": 240, "dk": [61, 135, 215], "dkei": 88, "dl": [36, 87, 209, 211, 214, 232], "dlmf": [4, 94, 96], "dlp": 89, "dm": [93, 124, 128, 209, 215, 298], "dmc": [308, 309, 310], "dmdomainerror": [125, 209], "dmension": 117, "dmf": 211, "dmnc": 124, "dmnoninvertiblematrixerror": 209, "dmnonsquarematrixerror": 209, "dmnotafield": 209, "dmp": [88, 207, 211, 216], "dmp_": [210, 213], "dmp_ab": 213, "dmp_add": 213, "dmp_add_ground": 213, "dmp_add_mul": 213, "dmp_add_term": 213, "dmp_apply_pair": 213, "dmp_cancel": 213, "dmp_clear_denom": 213, "dmp_compos": 213, "dmp_content": 213, "dmp_convert": 213, "dmp_copi": 213, "dmp_deflat": 213, "dmp_degre": 213, "dmp_degree_in": 213, "dmp_degree_list": 213, "dmp_diff": 213, "dmp_diff_eval_in": 213, "dmp_diff_in": 213, "dmp_discrimin": 213, "dmp_div": 213, "dmp_eject": 213, "dmp_euclidean_pr": 213, "dmp_eval": 213, "dmp_eval_in": 213, "dmp_eval_tail": 213, "dmp_exclud": 213, "dmp_expand": 213, "dmp_exquo": 213, "dmp_exquo_ground": 213, "dmp_ext_factor": 213, "dmp_factor_list": 213, "dmp_factor_list_includ": 213, "dmp_ff_div": 213, "dmp_ff_prs_gcd": 213, "dmp_from_dict": 213, "dmp_from_sympi": 213, "dmp_gcd": 213, "dmp_gcdex": 213, "dmp_gf_factor": 213, "dmp_gf_sqf_list": 213, "dmp_gf_sqf_part": 213, "dmp_gff_list": 213, "dmp_ground": 213, "dmp_ground_cont": 213, "dmp_ground_extract": 213, "dmp_ground_lc": 213, "dmp_ground_mon": 213, "dmp_ground_nth": 213, "dmp_ground_p": 213, "dmp_ground_primit": 213, "dmp_ground_tc": 213, "dmp_ground_trunc": 213, "dmp_half_gcdex": 213, "dmp_includ": 213, "dmp_inflat": 213, "dmp_inject": 213, "dmp_inner_gcd": 213, "dmp_inner_subresult": 213, "dmp_integr": 213, "dmp_integrate_in": 213, "dmp_invert": 213, "dmp_irreducible_p": 213, "dmp_l1_norm": 213, "dmp_lc": 213, "dmp_lcm": 213, "dmp_lift": 213, "dmp_list_term": 213, "dmp_max_norm": 213, "dmp_mul": 213, "dmp_mul_ground": 213, "dmp_mul_term": 213, "dmp_multi_defl": 213, "dmp_neg": 213, "dmp_negative_p": 213, "dmp_nest": 213, "dmp_norm": 213, "dmp_normal": 213, "dmp_nth": 213, "dmp_one": 213, "dmp_one_p": 213, "dmp_pdiv": 213, "dmp_permut": 213, "dmp_pexquo": 213, "dmp_positive_p": 213, "dmp_pow": 213, "dmp_pquo": 213, "dmp_prem": 213, "dmp_primit": 213, "dmp_primitive_pr": 213, "dmp_prs_result": 213, "dmp_python": [13, 207, 210, 211], "dmp_qq_collins_result": 213, "dmp_qq_heu_gcd": 213, "dmp_qq_i_factor": 213, "dmp_quo": 213, "dmp_quo_ground": 213, "dmp_rais": 213, "dmp_rem": 213, "dmp_result": 213, "dmp_revert": 213, "dmp_rr_div": 213, "dmp_rr_prs_gcd": 213, "dmp_slice": 213, "dmp_sqf_list": 213, "dmp_sqf_list_includ": 213, "dmp_sqf_norm": 213, "dmp_sqf_p": 213, "dmp_sqf_part": 213, "dmp_sqr": 213, "dmp_strip": 213, "dmp_sub": 213, "dmp_sub_ground": 213, "dmp_sub_mul": 213, "dmp_sub_term": 213, "dmp_subresult": 213, "dmp_swap": 213, "dmp_tc": 213, "dmp_terms_gcd": 213, "dmp_to_dict": 213, "dmp_to_tupl": 213, "dmp_trial_divis": 213, "dmp_true_lt": 213, "dmp_trunc": 213, "dmp_valid": 213, "dmp_zero": 213, "dmp_zero_p": 213, "dmp_zz_collins_result": 213, "dmp_zz_diophantin": 213, "dmp_zz_factor": 213, "dmp_zz_heu_gcd": 213, "dmp_zz_i_factor": 213, "dmp_zz_mignotte_bound": 213, "dmp_zz_modular_result": 213, "dmp_zz_wang": 213, "dmp_zz_wang_hensel_lift": 213, "dmp_zz_wang_lead_coeff": 213, "dmp_zz_wang_non_divisor": 213, "dmp_zz_wang_test_point": 213, "dmrankerror": [209, 215], "dmshapeerror": [125, 209], "dmtc": 258, "dmvalueerror": 209, "dn": [80, 240], "dnf": [8, 118], "dnh": 25, "do": [1, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 25, 28, 30, 33, 35, 36, 39, 41, 42, 43, 44, 45, 48, 51, 52, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 80, 84, 87, 88, 89, 90, 91, 94, 96, 98, 100, 103, 104, 107, 113, 115, 116, 118, 120, 121, 124, 125, 128, 129, 130, 140, 143, 148, 152, 157, 162, 165, 170, 174, 179, 182, 184, 186, 192, 194, 195, 198, 200, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 221, 223, 227, 228, 229, 230, 232, 233, 236, 237, 238, 242, 245, 246, 249, 251, 252, 254, 256, 258, 259, 261, 267, 269, 270, 271, 273, 285, 286, 288, 289, 290, 291, 292, 294, 296, 298, 303, 305, 306, 309], "do1": 69, "do2": 69, "do_sub": 227, "dobelman": 240, "doc": [2, 3, 4, 5, 7, 9, 11, 12, 16, 45, 58, 69, 79, 87, 88, 104, 116, 192, 210, 212, 233, 236, 251, 252, 254, 256, 258, 264, 269, 282], "docbook": 8, "docbook2x": 8, "dockerfil": 8, "docstr": [3, 5, 6, 7, 11, 12, 13, 16, 18, 28, 43, 50, 68, 69, 81, 88, 110, 113, 115, 124, 128, 133, 138, 142, 144, 150, 160, 177, 183, 184, 186, 202, 216, 223, 226, 227, 229, 232, 236, 237, 238, 239, 245, 246, 251, 254, 259, 261, 265, 272, 275, 279, 281], "docstring_limit": 259, "doctest": [3, 4, 5, 11, 16, 43, 81, 96, 124, 128, 179, 190, 210, 216, 236, 251, 254, 256, 295, 301], "doctest_arg": 251, "doctest_depends_on": [12, 254], "doctest_kwarg": 251, "doctestpars": 251, "doctestrunn": 251, "document": [6, 10, 12, 13, 14, 15, 19, 21, 23, 25, 26, 28, 30, 32, 33, 34, 35, 36, 40, 43, 49, 63, 64, 65, 79, 84, 88, 89, 94, 95, 96, 100, 110, 113, 114, 116, 120, 124, 128, 129, 133, 136, 150, 152, 165, 179, 185, 202, 204, 205, 206, 207, 209, 210, 211, 213, 214, 216, 220, 230, 234, 236, 238, 239, 249, 251, 253, 254, 256, 258, 264, 271, 272, 275, 286, 288, 289, 295, 296], "documentclass": [116, 204, 220], "docutil": 5, "dod": 209, "doe": [2, 4, 5, 7, 9, 11, 12, 13, 14, 15, 18, 21, 22, 24, 28, 35, 36, 38, 41, 42, 43, 48, 49, 55, 56, 57, 58, 59, 60, 63, 64, 67, 68, 69, 70, 79, 80, 84, 86, 87, 88, 89, 90, 92, 94, 96, 98, 99, 102, 104, 113, 115, 118, 124, 127, 128, 130, 145, 149, 152, 153, 157, 170, 174, 180, 184, 186, 189, 206, 208, 209, 210, 211, 213, 215, 216, 217, 220, 227, 228, 229, 230, 232, 233, 235, 236, 238, 241, 245, 246, 249, 251, 253, 255, 258, 259, 261, 264, 266, 269, 285, 286, 288, 291, 292, 295, 296, 297, 301, 308], "doesn": [3, 4, 12, 13, 14, 16, 22, 27, 30, 36, 43, 48, 69, 112, 131, 158, 208, 217, 219, 229, 232, 239, 297, 305], "dof": 303, "doi": [0, 4, 61, 67, 74, 80, 87, 124, 128, 153, 209, 211, 214, 229, 232, 233, 240, 258, 302], "doit": [14, 18, 46, 87, 88, 90, 93, 94, 96, 115, 120, 132, 143, 167, 169, 171, 182, 184, 187, 188, 190, 199, 205, 216, 222, 227, 232, 236, 237, 240, 242, 264, 267, 268, 270, 271, 286, 291], "doit_numer": 88, "dok": [124, 127, 209], "dollar": [5, 12, 290], "dom": [210, 211, 213, 228], "domain": [2, 4, 11, 13, 15, 22, 30, 39, 43, 46, 48, 53, 67, 68, 88, 89, 91, 93, 94, 96, 107, 109, 110, 113, 115, 120, 124, 125, 128, 140, 143, 206, 207, 209, 212, 213, 215, 217, 218, 235, 236, 238, 240, 282, 292, 297], "domain_check": 239, "domain_or_field": 211, "domain_or_r": [207, 211], "domainel": [209, 210, 211, 218], "domainerror": [209, 213, 216], "domainmatrix": [13, 53, 119, 124, 212, 215, 218, 282], "domainscalar": 209, "domin": [113, 124, 225, 227], "dominik": [88, 222], "don": [3, 11, 12, 13, 16, 21, 22, 32, 35, 36, 42, 43, 64, 69, 96, 113, 118, 124, 129, 130, 132, 210, 220, 230, 239, 241, 249, 254, 273, 285, 286, 290, 291, 296], "donal": 216, "donald": [214, 255], "donaldlab": 214, "done": [3, 4, 9, 11, 12, 13, 14, 15, 16, 18, 22, 28, 30, 33, 35, 36, 39, 43, 63, 64, 66, 67, 68, 69, 79, 81, 86, 88, 89, 90, 93, 96, 99, 100, 113, 115, 124, 128, 133, 151, 152, 157, 176, 185, 186, 187, 190, 192, 193, 199, 206, 207, 209, 213, 216, 217, 219, 220, 221, 229, 232, 233, 236, 238, 239, 240, 245, 246, 251, 252, 255, 259, 268, 269, 285, 288, 290, 291, 292, 301, 309], "dont_accept_blanklin": 251, "dont_accept_true_for_1": 251, "dontcar": 118, "doprint": [69, 220], "dorin": 233, "doron": 87, "dot": [18, 25, 26, 27, 30, 32, 35, 36, 79, 80, 84, 86, 89, 101, 103, 110, 124, 143, 148, 152, 154, 157, 174, 199, 201, 204, 205, 207, 208, 213, 216, 220, 239, 240, 258, 264, 268, 270, 271, 298, 301, 303, 305, 308, 309, 310], "dot_rot_grad_ynm": 205, "dotprint": [12, 291, 295], "dotprodsimp": 124, "dotsb": [93, 222], "dotsc": [93, 222], "doubl": [4, 5, 8, 23, 35, 55, 67, 69, 84, 88, 89, 93, 124, 130, 150, 151, 209, 210, 220, 229, 230, 253, 296, 310], "double_coset_can_rep": 84, "double_factori": 93, "double_pendulum": 22, "doubli": 128, "doubt": [11, 22, 118], "dover": 236, "down": [3, 4, 8, 11, 12, 35, 36, 41, 93, 120, 145, 206, 211, 222, 228, 230, 232, 236, 255, 292, 296, 305], "download": [5, 7, 9, 59, 68, 110, 229, 236, 264, 290], "downsid": [11, 292], "downstream": [13, 41], "downward": [135, 136, 137, 139, 215], "doy": 79, "dozen": [3, 15, 43, 296], "dp": [43, 69, 88, 91, 96, 128, 210, 211, 238, 254], "dpi": [116, 204], "dpll": 2, "dq_dict": 305, "dqdt": 18, "dr": [68, 90, 220, 236], "draft": 11, "drag": 206, "dramat": 255, "drastic": 205, "draw": [135, 137, 139, 170, 220, 240], "drawer": 68, "drawn": [68, 79, 117, 206, 210, 218], "dreal": 220, "drep": 209, "drho": 90, "driver": [220, 252], "drop": [8, 11, 94, 115, 129, 211, 213, 308], "drop_to_ground": 211, "dsign": 69, "dsolv": [4, 12, 15, 55, 236, 237, 238, 286, 290, 297], "dsolve_system": 236, "dt": [18, 30, 32, 35, 36, 46, 55, 90, 96, 131, 199, 201, 216, 236, 296, 305], "dt2": 30, "dth": 39, "dtheta": 90, "dtmc": 240, "dtype": [14, 124, 129, 207, 209, 210, 211, 220, 259], "du": 237, "dual": [124, 182, 188], "dual_class": 188, "duart": 236, "dudt": 18, "due": [4, 8, 12, 13, 14, 18, 22, 27, 33, 36, 39, 43, 54, 67, 69, 71, 78, 79, 88, 90, 105, 124, 128, 135, 137, 139, 157, 163, 190, 210, 211, 216, 220, 223, 233, 235, 237, 240, 256, 267, 273, 296, 298, 301], "duf": [147, 300, 304], "duffingspr": [147, 302], "duke": 214, "dum": 246, "dummi": [15, 22, 30, 69, 84, 87, 88, 94, 113, 115, 124, 185, 190, 206, 210, 211, 215, 216, 217, 226, 227, 228, 230, 232, 236, 239, 244, 246, 249, 253, 258, 259], "dummifi": 259, "dummy_eq": [12, 88], "dummy_index": 88, "dummy_nam": [13, 246], "dummy_vari": 87, "dummywrapp": 252, "dump_c": [252, 253], "dump_cod": 253, "dump_f95": 253, "dump_h": 253, "dump_jl": 253, "dump_m": 253, "dump_pyx": 252, "dump_r": 253, "dup": [79, 211], "dup_": [210, 213], "dup__": 213, "dup_cont": 213, "dup_cyclotomic_p": 213, "dup_decompos": 213, "dup_ext_factor": 213, "dup_extract": 213, "dup_factor_list": [210, 213], "dup_factor_list_includ": 213, "dup_flint": [13, 211], "dup_gf_factor": 213, "dup_gf_sqf_list": 213, "dup_gf_sqf_part": 213, "dup_gff_list": 213, "dup_irreducible_p": 213, "dup_lshift": 213, "dup_mirror": 213, "dup_mon": 213, "dup_primit": 213, "dup_qq_i_factor": 213, "dup_random": 213, "dup_real_imag": 213, "dup_revers": 213, "dup_rshift": 213, "dup_scal": 213, "dup_shift": 213, "dup_sign_vari": 213, "dup_sqf_list": 213, "dup_sqf_list_includ": 213, "dup_sqf_norm": 213, "dup_sqf_p": 213, "dup_sqf_part": 213, "dup_transform": 213, "dup_trial_divis": 213, "dup_zz_cyclotomic_factor": 213, "dup_zz_cyclotomic_poli": 213, "dup_zz_diophantin": 213, "dup_zz_factor": 213, "dup_zz_factor_sqf": 213, "dup_zz_hensel_lift": 213, "dup_zz_hensel_step": 213, "dup_zz_i_factor": 213, "dup_zz_irreducible_p": 213, "dup_zz_mignotte_bound": 213, "dup_zz_zassenhau": 213, "duplic": [12, 14, 16, 79, 82, 89, 94, 96, 124, 128, 157, 228, 236, 258, 289], "dure": [3, 12, 13, 16, 30, 31, 35, 60, 69, 88, 89, 124, 128, 130, 131, 134, 148, 152, 215, 220, 229, 238, 239, 256, 258], "dv": 233, "dvi": [116, 204, 220], "dvioption": 220, "dvip": 116, "dvipng": 8, "dx": [5, 13, 14, 15, 36, 39, 43, 51, 67, 69, 84, 88, 90, 92, 96, 105, 107, 110, 111, 112, 113, 115, 124, 130, 135, 146, 152, 179, 216, 217, 223, 233, 236, 237, 241, 286, 290, 295, 297, 298], "dxa": 111, "dxdt": 298, "dxi": 90, "dxy": [51, 233], "dy": [30, 43, 46, 69, 90, 105, 124, 135, 146, 216, 220, 233, 236, 237, 286, 298], "dy2": 30, "dyad": [21, 30, 199, 268], "dyadic": [4, 22, 23, 30, 34, 91, 148, 154, 199, 201, 202, 204, 264, 267, 272, 298, 301, 308, 310], "dyadic_product": [34, 202, 272], "dyadic_tensor": [199, 264], "dyadicadd": 268, "dyadicmul": 268, "dyadicproduct": 272, "dyer": 216, "dyn": 153, "dyn_implicit_mat": [31, 157], "dyn_implicit_rh": [31, 157], "dynam": [19, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 128, 131, 133, 134, 140, 141, 143, 149, 150, 152, 153, 154, 155, 157, 158, 199, 201, 203, 255, 256, 264, 298, 300, 301, 302, 304], "dynamic_symbol": 157, "dynamicsymbol": [4, 18, 21, 22, 24, 25, 26, 27, 28, 30, 31, 33, 35, 36, 124, 134, 147, 148, 149, 151, 152, 154, 155, 157, 158, 199, 201, 203, 204, 298, 301, 302, 303, 305, 306, 308, 309, 310], "dynamicsystem": 141, "dynkin": 117, "dynkin_diagram": 117, "dynkindiagram": 117, "dz": [43, 135, 146, 230, 298], "e": [0, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 22, 26, 27, 30, 31, 33, 36, 41, 42, 43, 46, 49, 53, 54, 57, 59, 60, 61, 65, 67, 68, 69, 70, 74, 77, 78, 79, 80, 81, 84, 86, 87, 88, 89, 90, 92, 93, 94, 96, 98, 100, 101, 102, 103, 104, 105, 110, 111, 113, 115, 117, 118, 124, 128, 130, 131, 133, 134, 135, 136, 139, 143, 144, 147, 148, 151, 152, 154, 155, 157, 158, 159, 162, 169, 170, 174, 179, 180, 182, 185, 187, 189, 190, 195, 196, 199, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 258, 259, 261, 264, 268, 271, 273, 274, 285, 286, 290, 291, 296, 298], "e0": 227, "e1": [22, 96, 98, 105, 210, 215, 227, 236, 239], "e103": 0, "e2": [22, 43, 67, 88, 91, 98, 105, 115, 124, 128, 141, 209, 210, 215, 216, 227, 236, 239, 240, 258], "e2row": 22, "e3": [22, 227, 236], "e4": [22, 227], "e6": 117, "e_": [88, 93, 124], "e_0": 89, "e_1": [78, 124, 207, 213, 216], "e_2": [213, 216], "e_bicep": 298, "e_d": 213, "e_dom": 210, "e_first": 18, "e_i": [90, 207, 230, 246], "e_j": 90, "e_k": 213, "e_muscl": [18, 134], "e_n": [78, 93, 117, 124, 166, 207, 216], "e_nl": [145, 191], "e_nl_dirac": 145, "e_r": 90, "e_rho": 90, "e_theta": 90, "e_tricep": 298, "e_val": 298, "e_x": [90, 246], "e_z": 246, "e_zeroth": 18, "each": [3, 8, 9, 11, 12, 13, 14, 15, 16, 18, 22, 24, 25, 28, 32, 33, 35, 36, 37, 41, 43, 48, 50, 51, 52, 53, 55, 58, 61, 64, 65, 67, 68, 69, 70, 71, 72, 79, 80, 84, 88, 89, 90, 91, 92, 93, 94, 96, 98, 103, 104, 105, 110, 111, 113, 115, 117, 118, 120, 124, 128, 130, 134, 135, 139, 141, 143, 147, 149, 151, 152, 155, 174, 187, 190, 199, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 218, 220, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 244, 245, 246, 249, 251, 253, 255, 258, 259, 261, 264, 266, 267, 269, 271, 273, 286, 289, 291, 296, 297, 298, 299, 301, 304, 305, 308, 310], "eager": [88, 259], "eagertensor": 259, "earli": [3, 11, 14, 88, 128, 179, 233], "earlier": [13, 21, 130, 217, 221, 230, 232, 259, 269, 271, 291], "earth": [33, 273, 298], "eas": [0, 22, 36, 206, 220, 223], "easi": [3, 7, 11, 12, 14, 15, 18, 23, 35, 45, 76, 80, 88, 96, 113, 115, 129, 150, 207, 210, 215, 220, 227, 230, 233, 236, 239, 244, 245, 246, 285, 286, 288, 289, 290, 291, 292, 295, 305], "easier": [3, 9, 11, 12, 13, 14, 15, 18, 22, 35, 42, 56, 71, 88, 136, 211, 215, 217, 230, 236, 239, 253, 259, 268, 290, 296, 297, 301], "easiest": [5, 9, 11, 13, 15, 16, 88, 207, 210, 233, 259, 269, 285, 291, 296], "easili": [5, 13, 14, 25, 35, 41, 43, 55, 59, 71, 88, 89, 111, 113, 124, 128, 129, 147, 151, 154, 155, 188, 216, 219, 220, 225, 232, 233, 236, 238, 239, 242, 252, 290], "east": 89, "easyfit": 240, "ebnf": 232, "ec": 216, "ecart": 213, "eccentr": [96, 98], "echelon": [124, 209, 239, 292], "echelon_form": [124, 292], "eco": 258, "econ": 240, "econom": [80, 115, 258], "economi": 80, "ecosystem": [0, 14], "ect": 238, "ed": [4, 80, 96, 115, 124, 214, 238, 240], "edg": [72, 81, 82, 117, 209, 220, 239, 258, 295], "edit": [5, 9, 11, 12, 115, 124, 128, 213, 214, 216], "editor": [11, 12, 14], "edmond": 205, "edmonds74": 205, "edu": [11, 67, 72, 79, 80, 89, 91, 93, 115, 124, 128, 143, 209, 214, 219, 229, 233, 236, 240, 264], "educ": [55, 89, 124], "ee": [18, 205, 215], "eea": 213, "eeci": 124, "eez": 213, "ef": 258, "effect": [2, 4, 7, 12, 14, 18, 22, 27, 43, 54, 59, 79, 81, 88, 105, 113, 115, 124, 135, 162, 190, 199, 206, 210, 213, 217, 219, 236, 288, 298, 301], "effici": [15, 30, 39, 41, 48, 53, 61, 67, 69, 72, 79, 84, 88, 91, 92, 93, 104, 105, 120, 124, 128, 129, 143, 151, 152, 205, 208, 209, 210, 211, 213, 216, 217, 218, 219, 232, 233, 238, 252, 259, 285, 291, 292, 296], "effort": [11, 129, 211, 213], "eg": [22, 88, 197, 239], "egg": 261, "eggsham": 261, "egypt": 128, "egyptian": 128, "egyptian_fract": 128, "ei": [51, 55, 96, 113, 215, 220, 230, 233, 236, 246], "eick": [79, 86], "eig": [22, 30, 124], "eigen": 166, "eigenbra": [168, 181, 187], "eigenket": [168, 181, 187], "eigenspac": 124, "eigenst": [168, 180, 185, 187, 188], "eigenv": [22, 30, 124, 184, 290, 292, 301], "eigenvalu": [22, 124, 184, 187, 290, 301], "eigenvec": 22, "eigenvect": [22, 30, 124, 184, 292], "eigenvector": [22, 124, 184, 185, 205], "eight": [39, 57, 220], "eighth": 132, "eigval": 30, "eigvec": [22, 30], "eijk": 96, "einstein": [190, 246], "eisenstein": 213, "either": [2, 4, 5, 8, 11, 12, 13, 14, 15, 16, 18, 22, 26, 28, 30, 36, 41, 42, 43, 48, 51, 52, 53, 54, 56, 61, 65, 67, 68, 72, 80, 87, 88, 89, 92, 93, 94, 96, 103, 105, 111, 113, 115, 116, 118, 124, 128, 134, 143, 147, 148, 151, 152, 153, 155, 157, 158, 174, 180, 187, 190, 192, 194, 204, 206, 208, 209, 210, 211, 213, 215, 216, 220, 222, 227, 228, 229, 230, 233, 236, 237, 238, 239, 240, 241, 244, 245, 252, 258, 259, 264, 273, 288, 291, 292], "ej": 0, "eject": [211, 216], "ektf": 128, "elabor": [4, 33, 44, 271], "elast": [134, 135, 136], "elastic_modulu": 135, "elastic_tendon_muscl": 134, "elbow": [207, 298], "electr": [18, 33, 131, 161, 163, 271, 273], "electric_potenti": [33, 271], "electromagnet": [33, 161, 194, 246, 273], "electron": [96, 145, 229], "eleg": [71, 217, 219], "elegantli": 51, "elem": [69, 79, 207], "elem_pol": [46, 143], "elem_zero": [46, 143], "element": [5, 13, 14, 15, 16, 18, 19, 30, 34, 36, 38, 41, 46, 51, 61, 65, 68, 69, 71, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 104, 111, 113, 115, 117, 118, 119, 120, 123, 124, 127, 128, 129, 134, 135, 136, 143, 144, 154, 159, 162, 176, 187, 195, 202, 203, 206, 207, 208, 209, 211, 213, 216, 218, 219, 220, 226, 227, 228, 230, 232, 233, 236, 238, 239, 240, 241, 245, 252, 254, 255, 258, 259, 260, 267, 286, 291, 292, 295, 296, 298], "element_": 228, "element_from_alg_num": 215, "element_from_anp": 215, "element_from_poli": 215, "element_from_r": 215, "element_kind": [88, 123, 228], "element_list": 209, "element_ord": 117, "elementari": [4, 11, 12, 28, 41, 42, 43, 79, 88, 89, 92, 93, 95, 96, 110, 113, 115, 124, 128, 183, 186, 211, 216, 217, 258, 259, 268, 276], "elementary_col_op": 124, "elementary_row_op": 124, "elementaryfunct": 94, "elementof": 220, "elements_doubl": 209, "elements_k": 210, "elements_sympi": 210, "elementwis": [120, 124, 209, 241], "elemsdict": 209, "eleventh": 132, "elgam": 89, "elgamal_private_kei": 89, "elgamal_public_kei": 89, "elif": [41, 42, 43, 94], "elimin": [21, 37, 39, 53, 69, 84, 88, 118, 119, 124, 209, 211, 218, 219, 221, 223, 232, 236, 238, 239, 246, 253, 292, 303], "eliminate_gen": 79, "eliminate_impl": 118, "ellips": [4, 99, 100, 104, 162, 206, 220, 282, 295], "ellipsi": [251, 259], "ellipt": [98, 128, 207], "elliptic": [96, 220], "elliptic_": [96, 98, 220], "elliptic_f": [96, 220], "elliptic_integr": 96, "elliptic_k": [96, 220], "elliptic_pi": [96, 220], "ellipticcurv": 51, "elliptice2": 96, "ellipticf": 96, "ellipticintegr": 96, "elliptick": [96, 220], "ellipticpi": [96, 220], "ellipticpi3": 96, "ellis": 98, "els": [3, 7, 11, 12, 13, 14, 15, 41, 42, 43, 50, 69, 78, 80, 84, 88, 89, 96, 98, 102, 104, 105, 113, 115, 118, 124, 128, 143, 190, 199, 206, 209, 211, 215, 216, 220, 221, 228, 232, 236, 238, 239, 244, 246, 251, 258, 261, 264, 267, 285, 291, 298], "elsewher": [15, 41, 93, 117, 209, 251], "elt": [209, 215], "em": 216, "email": [7, 220], "eman": 101, "embed": [4, 5, 67, 80, 88, 116, 215], "embryon": 68, "emerg": [159, 208], "emg": 240, "emit": [3, 12, 118, 220, 249, 256], "emphas": [48, 87], "emphasi": [5, 210], "empir": 18, "emploi": [68, 87, 92, 115, 128, 216, 219, 236, 240, 286], "empti": [13, 15, 17, 18, 27, 41, 48, 51, 52, 56, 63, 67, 68, 69, 70, 79, 83, 87, 88, 100, 103, 104, 105, 118, 124, 128, 131, 134, 152, 153, 185, 198, 211, 215, 216, 220, 226, 227, 228, 230, 236, 238, 239, 251, 253, 258, 261, 291], "empty_product": 87, "empty_set": 228, "empty_sum": 87, "emptyprint": 220, "emptysequ": [220, 226], "emptyset": [13, 41, 52, 67, 68, 118, 220, 228, 239, 264, 297], "emufphzlrfaxyusdjkzldkrnshgnfivj": 89, "emul": [13, 232, 239, 241, 259], "en": [4, 5, 8, 12, 34, 41, 43, 61, 63, 64, 65, 67, 68, 69, 71, 76, 77, 79, 80, 87, 88, 89, 90, 91, 93, 94, 96, 98, 100, 104, 105, 106, 115, 116, 117, 118, 120, 124, 128, 141, 143, 146, 159, 161, 162, 163, 165, 166, 167, 171, 172, 173, 176, 178, 179, 188, 190, 199, 201, 202, 209, 216, 217, 223, 227, 228, 229, 236, 239, 240, 253, 258, 259, 264, 266, 270, 272, 274, 292], "enabl": [2, 5, 9, 15, 22, 43, 59, 88, 115, 116, 128, 136, 190, 199, 204, 220, 236, 240, 251, 256, 259, 292, 295, 296, 301], "enable_automatic_int_sympif": 116, "enable_automatic_symbol": 116, "enable_eager_execut": 259, "encapsul": [196, 213, 239, 253], "enciph": 89, "encipher_affin": 89, "encipher_atbash": 89, "encipher_bifid": 89, "encipher_bifid5": 89, "encipher_bifid6": 89, "encipher_elgam": 89, "encipher_gm": 89, "encipher_hil": 89, "encipher_kid_rsa": 89, "encipher_railf": 89, "encipher_rot13": 89, "encipher_rsa": 89, "encipher_shift": 89, "encipher_substitut": 89, "encipher_vigener": 89, "encircl": 113, "enclos": [4, 98, 99, 104, 127, 144, 220, 230, 259], "encloses_point": [98, 99, 104], "encod": [3, 13, 72, 80, 86, 89, 118, 220, 251, 255, 258], "encode_mors": 89, "encompass": 210, "encount": [5, 16, 39, 48, 88, 115, 124, 152, 182, 208, 213, 216, 238, 239, 253, 264, 292], "encourag": [4, 13, 25, 26, 68, 215], "encryp": 89, "encrypt": 89, "encyclopedia": [34, 100, 202], "encyclopediaofmath": 96, "end": [0, 2, 4, 7, 11, 12, 13, 14, 16, 18, 25, 26, 27, 32, 33, 36, 39, 41, 42, 43, 46, 49, 53, 55, 61, 67, 68, 69, 78, 79, 84, 86, 87, 88, 89, 93, 94, 96, 98, 100, 104, 113, 116, 118, 120, 124, 128, 130, 135, 136, 139, 147, 155, 157, 158, 195, 199, 204, 205, 209, 213, 220, 223, 226, 228, 229, 233, 236, 237, 238, 239, 240, 241, 242, 251, 253, 254, 256, 258, 261, 271, 286, 290, 292, 296, 298, 301, 305, 308], "end_point": 303, "end_point_aux": 303, "end_point_forc": 303, "endian": 72, "endif": [69, 253], "endnumb": 236, "endomorph": [111, 215], "endomorphism_r": 215, "endomorphismr": 215, "endow": [208, 216], "endpoint": [18, 33, 87, 88, 92, 101, 147, 228, 271, 303], "energi": [13, 22, 23, 33, 47, 145, 148, 152, 154, 166, 191, 195, 246, 271, 281, 302, 310], "enforc": [18, 80, 298, 301], "eng": 80, "engag": 71, "engin": [16, 18, 29, 30, 34, 131, 132, 134, 137, 139, 202, 236, 295, 298], "english": [4, 11, 89], "engr": 115, "enhanc": [18, 88, 213, 240, 286, 298], "enlarg": 99, "enough": [3, 4, 11, 14, 22, 30, 50, 52, 79, 88, 92, 115, 124, 127, 128, 143, 211, 213, 220, 236, 286, 288], "enricogiampieri": 258, "ensembl": 184, "enspac": [236, 239], "ensur": [3, 11, 12, 16, 18, 43, 48, 50, 51, 52, 53, 56, 59, 88, 89, 92, 119, 124, 131, 134, 151, 155, 215, 216, 220, 251, 256, 259, 298, 303], "ent": 128, "entail": 115, "enter": [9, 25, 37, 80, 88, 89, 93, 101, 128, 130, 135, 139, 152, 157, 220, 230, 238, 251, 291, 295, 301], "entertain": 289, "enthought": 59, "entir": [2, 3, 12, 14, 24, 28, 41, 79, 88, 89, 92, 93, 96, 102, 104, 113, 127, 149, 157, 199, 207, 209, 215, 228, 245, 254, 256, 290, 296, 303], "entireti": 32, "entiti": [22, 28, 33, 88, 98, 101, 102, 104, 105, 113, 239, 273, 282, 292], "entity1": 100, "entity2": 100, "entri": [0, 22, 28, 53, 65, 70, 78, 80, 86, 89, 100, 113, 117, 119, 120, 127, 131, 152, 154, 162, 209, 213, 215, 216, 230, 240, 259, 301], "entropi": [89, 240], "entropy_": 240, "entropypost": 240, "enum": [71, 215, 257, 283], "enum_al": 255, "enum_larg": 255, "enum_rang": 255, "enum_smal": 255, "enumer": [41, 58, 72, 77, 80, 83, 91, 95, 113, 118, 128, 134, 215, 216, 230, 255, 258, 276], "enumerate_st": 185, "env": 130, "envelop": 236, "environ": [2, 6, 8, 10, 11, 12, 13, 15, 88, 116, 204, 220, 240, 251, 261, 288, 290, 295], "envis": 39, "eom": [27, 303, 305, 306], "eom_method": [24, 157, 303], "ep": [69, 79, 87, 211, 215, 216], "epath": 232, "epathtool": 232, "eppstein": 128, "eps_dim": 246, "epsilon": [13, 16, 87, 89, 96, 113, 115, 161, 220, 246], "eq": [4, 12, 14, 15, 16, 37, 41, 43, 50, 51, 55, 57, 65, 67, 69, 88, 93, 94, 96, 98, 101, 105, 113, 118, 193, 206, 207, 211, 216, 218, 220, 222, 226, 228, 229, 232, 233, 235, 236, 237, 238, 239, 240, 252, 253, 259, 264, 288, 290, 297], "eq1": [55, 98, 236, 238, 239], "eq2": [55, 98, 118, 236, 239], "eq3": 239, "eq4": 239, "eq_x": 232, "eqn": [52, 55, 67, 239], "eqs_coeff": 218, "eqs_mat": 236, "eqs_one_soln_set": 55, "eqs_r": 218, "eqs_rh": 218, "eqs_to_matrix": 218, "equ": 238, "equal": [4, 12, 13, 14, 15, 17, 18, 25, 26, 36, 37, 41, 42, 43, 48, 55, 57, 61, 65, 68, 69, 70, 77, 78, 79, 80, 84, 86, 87, 88, 89, 90, 92, 93, 94, 96, 101, 102, 103, 104, 105, 107, 113, 118, 120, 124, 128, 132, 134, 135, 139, 143, 144, 147, 148, 152, 154, 155, 157, 174, 175, 190, 194, 195, 199, 203, 207, 208, 209, 210, 211, 213, 215, 216, 218, 220, 226, 228, 230, 233, 236, 237, 238, 239, 240, 246, 251, 252, 253, 258, 261, 264, 269, 274, 286, 289, 297, 298, 301, 303], "equal_valu": 88, "equat": [5, 13, 14, 15, 16, 18, 21, 22, 23, 24, 29, 30, 31, 34, 35, 36, 37, 39, 44, 46, 50, 67, 69, 84, 87, 88, 90, 94, 96, 98, 101, 102, 106, 110, 111, 112, 113, 115, 116, 124, 128, 131, 132, 133, 134, 135, 139, 143, 145, 147, 148, 150, 151, 152, 153, 155, 157, 159, 163, 203, 204, 205, 206, 207, 209, 211, 213, 214, 215, 218, 219, 220, 226, 230, 232, 235, 236, 237, 245, 264, 269, 270, 274, 286, 287, 290, 299, 301, 302, 303, 304, 305, 306, 308, 310], "equidimension": 236, "equidist": 88, "equidistantli": 286, "equilater": 104, "equilibrium": [18, 27, 136, 139, 147, 298, 301], "equilibrium_length": 147, "equispac": 216, "equiv": [79, 89, 93, 128, 215, 220, 230, 233], "equival": [3, 12, 13, 14, 15, 16, 22, 23, 36, 37, 41, 42, 43, 46, 53, 55, 61, 65, 69, 70, 78, 79, 84, 88, 89, 92, 94, 96, 113, 115, 124, 128, 130, 140, 141, 143, 151, 173, 184, 187, 190, 193, 194, 199, 204, 206, 207, 208, 209, 210, 211, 215, 216, 220, 227, 228, 232, 233, 236, 238, 239, 241, 242, 245, 246, 255, 259, 261], "equivalent_dim": 193, "eqworld": 236, "eqyptian": 233, "eratosthen": 128, "erdelyi": [96, 115], "erdo": 255, "erf": [4, 96, 113, 115, 220, 230, 240], "erf2": [4, 96, 220], "erf2inv": [4, 96, 220], "erfc": [4, 96, 113, 220, 240], "erfcinv": [4, 96, 220], "erfi": [4, 96, 113, 220], "erfinv": [4, 96, 220, 240], "eric": [115, 214], "erik": 264, "erlang": 240, "erlang_distribut": 240, "erlangdistribut": 240, "erlend": 82, "erron": 92, "error": [2, 3, 4, 5, 8, 11, 12, 13, 14, 22, 36, 37, 41, 42, 50, 51, 52, 53, 54, 55, 57, 60, 67, 69, 77, 80, 87, 88, 89, 94, 98, 103, 113, 115, 124, 127, 128, 130, 152, 155, 157, 205, 208, 209, 210, 211, 213, 217, 220, 222, 228, 236, 237, 238, 239, 240, 251, 252, 253, 256, 258, 261, 264, 285], "error_funct": 96, "error_term": 128, "error_when_incomplet": 124, "ert": 0, "escap": [88, 130, 206, 220, 261], "especi": [3, 4, 12, 14, 21, 22, 28, 30, 36, 43, 57, 87, 88, 124, 184, 216, 232, 236, 238, 251, 285, 286], "espinosa": 96, "esqu": 30, "essenc": 268, "essenti": [5, 14, 18, 33, 36, 72, 83, 88, 92, 94, 95, 96, 113, 154, 202, 207, 208, 211, 215, 227, 230, 265, 268, 271, 272, 273, 279, 281, 299, 301], "establish": [9, 18, 39, 84, 113, 147, 151, 155, 157, 230, 306], "estim": [57, 67, 87, 88, 92, 113, 286], "et": [115, 131, 132, 134, 169, 213, 216, 217, 229, 232], "eta": [16, 96, 113, 215, 220, 236, 237, 240], "etc": [7, 11, 12, 13, 18, 22, 33, 35, 36, 39, 41, 42, 64, 67, 69, 84, 88, 89, 93, 94, 106, 115, 117, 118, 122, 128, 130, 134, 161, 170, 174, 187, 190, 201, 206, 207, 208, 209, 210, 213, 215, 220, 221, 228, 229, 230, 232, 236, 239, 240, 244, 252, 253, 258, 269, 273], "etiquett": 7, "euclid": [88, 213, 214], "euclidean": [90, 101, 103, 147, 155, 199, 211, 213, 216], "euclidean_algorithm": 88, "euclideanspac": 61, "eucliden": 89, "euclidtool": 213, "euler": [4, 36, 61, 67, 68, 87, 88, 89, 92, 93, 96, 104, 110, 116, 128, 151, 187, 199, 204, 205, 216, 220, 236, 240, 264, 266], "euler_angl": [264, 266], "euler_equ": 67, "euler_maclaurin": [87, 92], "euler_numb": 93, "euler_poli": [93, 216], "euler_pseudoprim": 128, "eulergamma": [4, 88, 92, 93, 96], "eulerian": 96, "eulerlin": 104, "eulernumb": 93, "eulervm": 220, "eulerzigzagnumb": 93, "eurocam": 115, "eurocast": 214, "european": 207, "eval": [4, 13, 14, 41, 63, 64, 69, 88, 94, 96, 132, 176, 190, 211, 216, 220, 253, 285], "eval_approx": 216, "eval_color_func": 206, "eval_control": 174, "eval_diffeq": 298, "eval_eom": 18, "eval_expr": 130, "eval_forc": 18, "eval_frequ": 143, "eval_holo_fsolv": 298, "eval_holonom": 298, "eval_integr": 87, "eval_levicivita": 96, "eval_poli": 209, "eval_poly_mul": 209, "eval_r": [216, 298], "eval_rh": [18, 298], "eval_zeta_funct": 87, "evalf": [2, 4, 14, 15, 16, 22, 30, 41, 48, 54, 57, 69, 87, 92, 93, 94, 96, 107, 110, 111, 124, 130, 172, 211, 216, 220, 227, 228, 232, 240, 252, 259, 286, 287, 301], "evalf_r": 216, "evalfmixin": 88, "evalu": [2, 4, 15, 18, 21, 22, 23, 27, 28, 39, 41, 42, 49, 55, 57, 61, 62, 63, 64, 67, 69, 88, 90, 93, 94, 96, 99, 103, 104, 113, 115, 118, 120, 124, 128, 129, 130, 131, 132, 134, 143, 149, 165, 167, 169, 171, 173, 176, 179, 187, 190, 205, 206, 209, 210, 211, 213, 214, 216, 220, 221, 226, 227, 228, 230, 232, 233, 236, 238, 239, 240, 241, 242, 252, 253, 254, 259, 271, 276, 285, 286, 287, 288, 290, 292, 299], "evaluate_delta": 190, "evaluate_integr": 240, "evaluate_pauli_product": 165, "evaluationfail": 213, "evalul": 88, "even": [3, 4, 5, 9, 11, 12, 14, 15, 16, 18, 22, 23, 38, 41, 43, 48, 51, 54, 55, 56, 57, 62, 63, 64, 65, 66, 69, 70, 71, 76, 79, 80, 87, 88, 89, 92, 93, 94, 96, 100, 104, 113, 115, 118, 124, 127, 128, 130, 144, 150, 175, 186, 193, 195, 199, 205, 208, 209, 210, 211, 213, 215, 216, 217, 220, 221, 228, 229, 230, 232, 233, 236, 238, 239, 247, 251, 273, 285, 286, 288, 290, 291, 296, 297], "evenhandl": 65, "evenli": 233, "evenpred": 65, "event": [215, 240], "eventu": [11, 79, 96, 115, 130, 206, 207, 227, 253, 258], "ever": [12, 13, 14, 15, 36, 43, 94, 207, 216, 230, 236, 253, 256, 291], "everi": [2, 3, 4, 7, 11, 12, 14, 15, 28, 33, 35, 36, 41, 43, 48, 52, 58, 63, 64, 65, 68, 74, 76, 79, 80, 88, 89, 103, 115, 117, 124, 128, 143, 194, 206, 207, 208, 210, 211, 213, 215, 220, 225, 228, 230, 232, 233, 236, 239, 240, 242, 268, 271, 273, 289, 291, 292, 296], "everyon": [12, 217], "everyth": [3, 5, 12, 14, 16, 27, 43, 69, 88, 90, 96, 115, 121, 145, 186, 187, 206, 220, 291, 295], "everywher": [3, 15, 16, 33, 88, 96, 113, 143, 258, 273], "evid": [113, 152, 230, 242, 309], "evinc": 220, "evolut": 98, "ew": 214, "ewen": 240, "ex": [76, 115, 144, 157, 210, 215, 216, 246, 254], "exact": [3, 11, 12, 13, 15, 16, 18, 30, 41, 43, 46, 54, 65, 87, 88, 89, 92, 98, 103, 110, 113, 115, 124, 132, 135, 155, 184, 209, 210, 211, 213, 216, 227, 232, 236, 238, 251, 261, 288, 290, 295], "exact_differential_equ": 236, "exactli": [3, 4, 5, 11, 12, 13, 14, 15, 16, 28, 43, 48, 55, 57, 65, 72, 79, 88, 91, 92, 124, 130, 205, 216, 230, 232, 236, 239, 241, 255, 258, 259, 286, 288, 290, 295, 296], "exactquotientfail": [210, 211, 213, 216], "examin": [69, 89, 179, 251, 253, 296], "exampl": [0, 1, 2, 3, 5, 7, 12, 13, 14, 15, 16, 18, 22, 23, 24, 25, 26, 28, 30, 32, 33, 35, 37, 38, 39, 41, 42, 47, 49, 52, 53, 55, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 110, 111, 113, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 137, 139, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 161, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 184, 185, 187, 188, 189, 190, 191, 192, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 221, 222, 223, 225, 226, 228, 229, 232, 233, 235, 236, 237, 238, 239, 244, 246, 247, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 264, 266, 267, 269, 271, 272, 273, 274, 279, 281, 282, 285, 286, 287, 288, 289, 291, 292, 294, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310], "examples_arg": 251, "examples_kwarg": 251, "exaxmpl": 88, "exc": 213, "exce": [70, 128, 246, 259], "exceed": [14, 16, 215, 301], "exceedingli": 213, "excel": [59, 92, 215, 294], "excent": 104, "except": [2, 3, 4, 11, 13, 14, 15, 16, 39, 41, 42, 43, 53, 57, 67, 69, 79, 80, 88, 89, 92, 93, 94, 96, 113, 115, 128, 148, 194, 196, 205, 207, 209, 210, 211, 215, 216, 217, 218, 220, 229, 232, 233, 236, 237, 239, 244, 249, 251, 253, 254, 257, 258, 268, 271, 283, 285, 288, 291, 309], "exceptional_isomorph": 71, "exceptioninfo": 249, "excerpt": 4, "excess": 15, "exchang": [84, 89, 124, 205, 209, 258], "excircl": 104, "excit": [18, 131, 134, 207, 298, 302], "exclud": [11, 30, 50, 55, 57, 69, 87, 88, 115, 124, 149, 154, 208, 209, 211, 213, 216, 226, 236, 238, 251, 254, 258], "exclude_empti": 251, "exclus": [87, 88, 94, 118, 124, 213, 288], "exec": [69, 88, 116, 259], "execut": [12, 15, 30, 41, 59, 69, 116, 124, 135, 206, 220, 236, 239, 249, 251, 253, 254, 259, 261, 263, 275, 290, 295], "exercis": [43, 79, 255, 289, 296, 300], "exert": 147, "exgaussian": 240, "exhaust": [3, 41, 230, 258, 289], "exhibit": [128, 205, 215, 229], "exict": 131, "exist": [3, 7, 11, 13, 14, 15, 18, 33, 36, 39, 41, 43, 54, 57, 67, 68, 69, 72, 79, 88, 92, 98, 100, 103, 104, 105, 106, 115, 118, 124, 128, 139, 153, 157, 180, 206, 207, 208, 209, 211, 213, 215, 220, 227, 228, 230, 233, 236, 238, 239, 251, 259, 269, 290, 292, 297], "existing_julia_fcn": 220, "existing_octave_fcn": [69, 220], "existing_smtlib_fcn": 220, "exit": [69, 128, 251], "exlud": 238, "exogen": [31, 157], "exotica": 74, "exp": [11, 12, 13, 14, 15, 16, 18, 37, 41, 43, 46, 54, 55, 57, 61, 67, 69, 78, 87, 88, 90, 92, 93, 94, 96, 106, 107, 110, 113, 115, 120, 124, 128, 130, 132, 145, 166, 169, 185, 191, 205, 210, 211, 216, 217, 220, 222, 227, 230, 232, 236, 237, 238, 239, 240, 241, 258, 274, 286, 290, 292, 297], "exp1": [88, 220], "exp2": [69, 220], "exp2_opt": 69, "exp_polar": [88, 94, 96, 230], "exp_r": 222, "expand": [4, 12, 13, 14, 15, 16, 22, 30, 39, 41, 46, 48, 69, 88, 90, 92, 93, 94, 96, 113, 115, 124, 143, 171, 179, 182, 189, 190, 208, 209, 210, 213, 215, 216, 217, 220, 223, 227, 229, 230, 232, 236, 239, 240, 244, 252, 259, 270, 285, 290, 301], "expand_": 43, "expand_complex": [43, 88], "expand_func": [88, 93, 96], "expand_hint": 88, "expand_log": [43, 69, 88, 232], "expand_mul": [88, 113], "expand_multinomi": 88, "expand_opt": 69, "expand_power_bas": [88, 232], "expand_power_exp": 88, "expand_trig": [14, 43, 88, 285], "expanded_expr": 290, "expans": [4, 11, 27, 39, 43, 69, 88, 90, 93, 94, 96, 115, 124, 128, 169, 171, 216, 217, 222, 223, 224, 229, 231, 232, 236, 238, 239, 276, 287, 296], "expansil": [147, 155], "expect": [4, 5, 7, 13, 14, 16, 18, 22, 41, 43, 46, 68, 70, 73, 88, 94, 96, 100, 118, 128, 129, 143, 147, 151, 155, 184, 210, 213, 215, 217, 218, 227, 232, 235, 238, 239, 240, 249, 251, 252, 255, 258, 259, 290, 291, 298, 299], "expectationmatrix": 240, "expectedexcept": 249, "expediti": 12, "expens": [14, 15, 27, 43, 55, 88, 229, 236, 237, 238, 254, 292], "experi": [2, 18, 239, 240, 301], "experienc": [10, 13, 18, 70], "experiment": [2, 3, 232], "expint": [96, 220], "expintegral": [96, 220], "expintegralei": 220, "expj": 236, "explain": [2, 3, 4, 5, 7, 12, 41, 48, 57, 68, 84, 88, 96, 106, 111, 155, 207, 210, 213, 215, 217, 227], "explan": [3, 5, 12, 16, 20, 23, 37, 41, 44, 61, 62, 63, 64, 65, 66, 68, 69, 73, 76, 77, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 94, 96, 100, 110, 111, 113, 115, 124, 128, 131, 132, 134, 143, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 161, 164, 167, 169, 171, 173, 185, 190, 205, 206, 207, 209, 211, 213, 215, 216, 218, 222, 223, 225, 226, 227, 228, 230, 232, 233, 236, 238, 240, 241, 242, 245, 246, 251, 254, 256, 258, 259, 293, 299, 304, 309], "explanatori": 301, "explicit": [11, 13, 14, 15, 18, 22, 27, 31, 36, 41, 43, 48, 51, 52, 80, 87, 88, 92, 104, 105, 115, 127, 128, 134, 152, 153, 157, 207, 216, 219, 220, 222, 228, 230, 236, 237, 238, 239, 255, 298, 305], "explicit_formulas_for_small_system": 124, "explicit_kinemat": [152, 306], "explicitli": [3, 12, 13, 14, 15, 22, 28, 41, 43, 69, 79, 80, 88, 89, 91, 94, 96, 101, 105, 120, 124, 129, 143, 157, 206, 208, 209, 210, 211, 213, 216, 220, 232, 236, 238, 256, 288, 292, 295, 297], "explik": 222, "exploit": [113, 252], "explor": [25, 26, 44, 206, 215, 255, 296], "explos": [125, 209], "expm1": [69, 220], "expm1_opt": 69, "expon": [14, 16, 48, 57, 66, 69, 88, 89, 94, 95, 96, 113, 115, 120, 128, 141, 143, 196, 208, 209, 210, 216, 217, 220, 229, 232, 236, 239, 244, 255, 296], "exponent_vector": 78, "exponenti": [13, 16, 41, 55, 61, 69, 79, 84, 88, 89, 93, 115, 118, 124, 128, 130, 176, 192, 217, 232, 236, 239, 240, 287, 288, 292], "exponential_distribut": 240, "exponential_integr": 96, "exponentialdistribut": 240, "exponentially_modified_gaussian_distribut": 240, "export": [60, 220], "expos": [13, 68, 130, 240], "exposit": 227, "expr": [3, 4, 12, 14, 15, 16, 21, 22, 27, 41, 43, 52, 54, 57, 63, 64, 66, 67, 69, 80, 87, 90, 92, 94, 96, 98, 110, 113, 115, 118, 120, 124, 128, 129, 130, 134, 143, 147, 149, 152, 154, 155, 157, 167, 171, 173, 175, 179, 182, 185, 187, 188, 190, 197, 199, 201, 204, 206, 208, 209, 210, 211, 213, 215, 216, 217, 218, 220, 221, 222, 223, 225, 227, 229, 232, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 247, 252, 253, 254, 256, 259, 264, 266, 267, 268, 269, 271, 285, 286, 288, 290, 291, 295, 296, 297], "expr1": [3, 41, 143, 206, 238, 291], "expr2": [3, 41, 143, 206, 291], "expr_1": 143, "expr_2": 143, "expr_3": 143, "expr_4": 143, "expr_class": 220, "expr_free_symbol": [12, 88], "expr_i": 206, "expr_modifi": 16, "expr_to_holonom": [107, 110, 111, 112], "expr_tr": 242, "expr_with_intlimit": [87, 115], "expr_with_limit": [87, 115], "expr_x": 206, "expr_z": 206, "exprcondpair": 94, "expreal": 41, "express": [2, 3, 4, 5, 15, 17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 41, 42, 43, 49, 50, 53, 55, 57, 61, 62, 63, 64, 65, 66, 67, 80, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 101, 103, 104, 111, 112, 113, 115, 116, 121, 122, 123, 124, 127, 128, 129, 132, 134, 135, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 158, 165, 169, 173, 174, 178, 179, 182, 185, 187, 188, 189, 190, 192, 193, 194, 195, 197, 199, 201, 203, 204, 205, 206, 207, 208, 209, 211, 213, 215, 216, 217, 220, 221, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 249, 252, 253, 254, 255, 256, 259, 261, 264, 266, 267, 268, 270, 271, 273, 279, 281, 286, 287, 288, 289, 290, 292, 295, 296, 297, 305], "express_coordin": [268, 269], "expression_complex": 48, "expression_complex_poli": 48, "expression_expand": 48, "expression_str": 14, "expressiondomain": [210, 211], "expressions_dom": 210, "expressions_sympi": 210, "expressli": 268, "exprtool": 216, "exprwithintlimit": [87, 115], "exprwithlimit": [87, 115], "expsboth": 227, "expsf": 227, "expsg": 227, "exquo": [209, 210, 211, 216], "exquo_ground": [211, 216], "exr": 14, "exradii": 104, "exradiu": 104, "exsqrt": 211, "ext": [5, 207, 211], "ext_rank": 246, "extend": [4, 5, 12, 14, 30, 41, 43, 51, 65, 69, 79, 80, 88, 89, 93, 100, 113, 115, 124, 128, 133, 157, 198, 204, 206, 208, 211, 213, 215, 216, 217, 220, 227, 229, 233, 235, 236, 239, 240, 241, 253, 255, 288, 290, 298], "extend_to_no": 128, "extended_euclidean_algorithm": 88, "extended_neg": [41, 88], "extended_nonneg": [41, 88], "extended_nonposit": [41, 88], "extended_nonzero": [41, 88, 220], "extended_posit": [41, 88], "extended_r": [41, 65, 88, 220, 235, 239], "extended_real_number_lin": 41, "extendedrealhandl": 65, "extendedrealpred": 65, "extens": [0, 2, 4, 5, 7, 12, 30, 41, 43, 79, 88, 93, 94, 100, 104, 115, 124, 132, 133, 134, 147, 154, 155, 208, 210, 211, 213, 214, 215, 216, 220, 230, 232, 236, 238, 239, 252, 253, 289, 296, 298], "extension_veloc": [18, 134, 147, 155, 298], "extensionel": [207, 211], "extensor": 298, "extensorpathwai": 298, "extent": 69, "exterior": [90, 104], "exterior_angl": 104, "extern": [2, 23, 59, 88, 116, 130, 139, 141, 150, 204, 210, 211, 221, 228, 232, 240, 251, 252, 301], "extra": [8, 13, 18, 33, 69, 71, 88, 89, 128, 129, 130, 152, 195, 213, 220, 230, 236, 251, 252, 253, 271, 309], "extra_compile_arg": 252, "extra_data": 14, "extra_link_arg": 252, "extra_preambl": 220, "extract": [15, 23, 28, 36, 48, 52, 56, 57, 67, 88, 115, 120, 124, 128, 144, 147, 150, 209, 213, 215, 216, 238, 239, 240, 251, 253, 258, 301], "extract_addit": 88, "extract_branch_factor": 88, "extract_fundamental_discrimin": 215, "extract_leading_ord": 88, "extract_multipl": 88, "extract_slic": 209, "extract_type_ten": 144, "extraglob": 251, "extran": [5, 236], "extraneousfactor": 213, "extrapol": [92, 227], "extrem": [3, 12, 14, 27, 36, 53, 79, 92, 98, 104, 115, 120, 139, 232, 240], "extrins": 61, "ey": [13, 53, 88, 119, 120, 121, 122, 124, 126, 209, 215, 241, 261, 292], "eyz": [51, 233], "ez": [211, 246], "f": [0, 4, 8, 11, 12, 13, 14, 15, 16, 18, 23, 25, 26, 30, 33, 36, 39, 43, 46, 48, 51, 52, 54, 55, 67, 68, 69, 70, 71, 78, 79, 80, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 106, 111, 112, 113, 115, 117, 120, 124, 128, 129, 130, 131, 132, 134, 136, 139, 141, 147, 148, 150, 151, 152, 153, 155, 157, 159, 163, 164, 175, 176, 179, 188, 190, 193, 199, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 219, 220, 222, 223, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 245, 246, 251, 252, 253, 254, 255, 258, 259, 261, 270, 271, 274, 285, 286, 291, 295, 296, 297, 298, 303, 306], "f0": 211, "f1": [16, 22, 30, 54, 79, 113, 115, 124, 143, 148, 206, 211, 213, 216, 220, 222, 238, 309], "f16": 69, "f2": [16, 22, 30, 54, 88, 113, 124, 143, 148, 193, 206, 213, 216, 220, 222, 238, 309], "f2py": [2, 69, 129, 252, 253], "f2pycodewrapp": 252, "f3": [206, 220, 309], "f4": [117, 206], "f401": 116, "f5": [13, 206], "f5b": [213, 216], "f6": 206, "f8": 206, "f811": [12, 88], "f821": [88, 254], "f90": 253, "f95": [69, 252, 253], "f_": [18, 25, 26, 27, 39, 88, 93, 96, 115, 213, 219, 220, 230, 236], "f_0": [90, 93, 153, 213, 302], "f_1": [31, 90, 93, 96, 113, 143, 153, 157, 207, 213, 216, 236], "f_2": [31, 93, 113, 143, 153, 157, 213, 230, 236], "f_3": [31, 153, 157, 236], "f_4": [117, 153], "f_5": 213, "f_a": 153, "f_c": [153, 305], "f_code": [69, 253], "f_cython": 252, "f_d": [25, 26, 152, 157, 213], "f_dnh": 152, "f_fortran": 252, "f_h": 25, "f_i": [90, 113, 124, 213, 217], "f_j": [213, 230], "f_k": [25, 87, 152, 213], "f_list": 213, "f_m": [18, 157], "f_m_max": [18, 134, 298], "f_m_max_bicep": 298, "f_m_max_tricep": 298, "f_n": [87, 93, 96, 207, 213, 216, 236], "f_name": [69, 253], "f_q": 230, "f_r": [25, 27, 213], "f_real": [88, 95], "f_real_inherit": [88, 95], "f_result": 253, "f_t": [18, 134], "f_v": [153, 305], "f_x": [33, 239, 271], "f_y": [33, 271], "f_z": [33, 93, 271], "fab": [69, 220], "fabian": 0, "fac": 113, "face": [22, 79, 81, 101, 115, 213, 217, 220, 233, 274, 292], "facil": 69, "facilit": [13, 23, 34, 129, 133, 150, 161, 202, 251, 286], "fact": [4, 12, 13, 15, 27, 41, 42, 43, 52, 64, 65, 88, 93, 96, 106, 113, 128, 139, 147, 195, 207, 208, 209, 210, 213, 215, 217, 219, 230, 232, 236, 239, 251, 259, 273, 285, 288, 289, 290, 291, 296, 301], "factor": [2, 12, 14, 15, 16, 30, 70, 79, 80, 87, 88, 89, 92, 93, 94, 96, 113, 115, 124, 128, 135, 143, 159, 167, 171, 174, 186, 190, 194, 195, 196, 197, 207, 209, 210, 211, 212, 214, 215, 216, 223, 229, 230, 232, 233, 236, 238, 240, 244, 255, 268, 271, 290, 292, 302], "factor_": [13, 88, 93, 128, 216, 233], "factor_index": 79, "factor_list": [211, 216, 296], "factor_list_includ": [211, 216], "factor_term": [88, 216, 229, 232, 309], "factori": [4, 12, 39, 43, 53, 87, 88, 92, 93, 96, 124, 128, 130, 205, 211, 213, 214, 215, 216, 220, 222, 232, 238, 240, 253, 254, 258, 259, 260, 296], "factorial2": [93, 191, 220], "factorial_mo": 240, "factorial_not": 130, "factorialmo": 240, "factorialpow": 220, "factoring_visitor": 255, "factorint": [88, 93, 128, 215, 216, 255], "factoris": [128, 209, 210, 211, 213, 216, 236], "factorisatio": 255, "factorrat": 128, "factortool": [210, 213], "factrul": 41, "fagin": 232, "fail": [2, 3, 4, 5, 8, 11, 13, 14, 41, 42, 43, 48, 69, 79, 80, 84, 87, 88, 92, 94, 112, 113, 115, 116, 124, 125, 128, 130, 180, 185, 204, 206, 209, 210, 211, 213, 215, 216, 220, 227, 230, 236, 238, 240, 249, 251, 258, 259, 292, 301], "failing_express": 88, "failing_numb": 88, "failur": [11, 13, 84, 92, 105, 113, 128, 240, 251, 296], "fair": [100, 240], "fairli": [23, 32, 88, 96, 113, 150, 207, 301], "fall": [18, 70, 87, 88, 93, 116, 143, 204, 215, 220, 233, 237, 240], "fallback": [14, 88, 116, 190, 204, 210, 220, 238], "fallingfactori": [93, 220], "fals": [5, 12, 14, 15, 16, 22, 24, 25, 26, 27, 28, 31, 35, 36, 41, 42, 43, 48, 50, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 110, 113, 115, 116, 118, 119, 120, 123, 124, 125, 128, 130, 132, 134, 135, 141, 143, 145, 146, 148, 149, 152, 153, 154, 157, 162, 174, 175, 179, 182, 187, 188, 189, 190, 193, 197, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 232, 233, 235, 236, 237, 238, 239, 240, 245, 246, 249, 251, 252, 253, 254, 258, 259, 261, 264, 267, 288, 291, 292, 295, 301, 303, 308, 309, 310], "falsei": 42, "famili": [69, 72, 106, 115, 208], "familiar": [9, 10, 11, 16, 18, 22, 28, 43, 115, 174, 217, 286, 288, 294], "famou": [70, 96, 115, 128, 233], "fancyset": 228, "far": [12, 14, 16, 68, 88, 102, 115, 205, 207, 210, 220, 230, 259, 285, 286, 288], "farr": 90, "farther": 68, "farthest": [98, 104], "fascin": [23, 150], "fashion": [25, 26, 28, 36, 55, 69, 88, 94, 120, 207, 258, 298, 301], "fast": [2, 14, 41, 55, 69, 88, 122, 124, 128, 152, 153, 162, 211, 212, 213, 214, 215, 216, 217, 223, 227, 236, 238, 255, 258, 259], "fast_walsh": 91, "faster": [2, 11, 13, 14, 21, 27, 41, 48, 53, 54, 69, 73, 88, 96, 124, 128, 129, 149, 152, 153, 209, 210, 211, 213, 215, 216, 217, 221, 223, 227, 232, 233, 236, 237, 239, 252, 255], "fastest": [88, 93, 115, 128, 129, 209, 217], "fastfouriertransform": 91, "fateman": 214, "father": 233, "fauger": [213, 216], "fault": 236, "faux1": 303, "faux2": 303, "favor": 13, "fbra": 190, "fc": 139, "fcall": 69, "fcn": [69, 253], "fcn2": 253, "fcode": [69, 220], "fcodegen": 253, "fcodeprint": [69, 220], "fd": [67, 69, 190], "fd1": 143, "fdict": 115, "fdiff": [4, 11, 43, 69, 88, 94, 95, 96, 132], "fdistribut": 240, "fe": 139, "feasibl": [79, 143], "featur": [0, 2, 3, 5, 7, 11, 12, 13, 16, 17, 18, 19, 22, 23, 30, 34, 43, 58, 59, 88, 90, 92, 220, 236, 240, 249, 253, 256, 272, 284, 289, 290, 294, 296, 298, 300], "feb": 153, "februari": 214, "fed": 143, "feedback": [11, 46, 89, 140, 143, 289, 300], "feedforward": 143, "feel": [11, 30, 31, 41, 59, 232, 236, 238], "feet": 104, "felix": 89, "femtesemest": 135, "fermat": [128, 161], "fermat_pseudoprim": 128, "fermi": [96, 190], "fermi_level": 190, "fermion": [93, 128, 190], "fermionicoper": 190, "fernando": 0, "ferrer": 77, "fetch": 9, "fetch_item": 260, "fetter": 190, "few": [2, 3, 8, 12, 13, 14, 15, 23, 32, 35, 36, 41, 51, 57, 65, 78, 80, 88, 89, 115, 116, 128, 129, 150, 193, 204, 207, 215, 220, 228, 229, 230, 236, 238, 239, 240, 253, 258, 296, 301], "fewer": [27, 103, 104, 155, 240, 286], "fewest": [118, 184], "ff": [87, 89, 93, 205, 208, 209, 210, 215, 216], "ff_dens": 209, "ffgj": 209, "ffield": 270, "fft": [30, 91], "fg": [80, 90, 236, 239], "fgh": 88, "fglm": 216, "fglmtool": 213, "fgp": 236, "fi": [12, 39], "fib": 226, "fiber": [131, 132, 134], "fiber_damping_coeffici": [18, 134], "fiber_force_length_act": 132, "fiber_force_length_pass": 132, "fiber_force_length_passive_invers": 132, "fiber_force_veloc": 132, "fiber_force_velocity_invers": 132, "fiber_length_explicit": 134, "fiber_length_implicit": 134, "fiberforcelengthactivedegroote2016": [18, 132], "fiberforcelengthpassivedegroote2016": [18, 132], "fiberforcelengthpassiveinversedegroote2016": [18, 132], "fiberforcevelocitydegroote2016": [18, 132], "fiberforcevelocityinversedegroote2016": [18, 132, 134], "fibonacci": [88, 92, 93, 128], "fibonacci_numb": 93, "fibonaccinumb": 93, "fiddl": [251, 296], "field": [11, 13, 34, 41, 55, 61, 65, 69, 88, 89, 90, 96, 106, 115, 162, 163, 201, 202, 207, 208, 209, 211, 212, 214, 216, 217, 218, 233, 238, 251, 264, 267, 269, 270, 272, 274, 279, 281, 282, 298], "field_el": 88, "field_gen": 215, "field_isomorph": 215, "fieldfunct": [33, 200], "fifth": [48, 132], "fifth_ord": 48, "fifth_order_solv": 48, "fig": [13, 18, 298], "figsiz": 170, "figur": [5, 11, 13, 22, 35, 36, 88, 89, 98, 99, 101, 103, 104, 115, 136, 185, 205, 206, 209, 217, 220, 274, 296], "file": [0, 2, 3, 4, 5, 7, 8, 9, 12, 15, 16, 22, 30, 45, 69, 124, 130, 179, 206, 220, 227, 230, 232, 249, 251, 252, 253, 259], "filebox": 89, "filenam": [130, 220, 251, 252, 253, 261], "filepath": 252, "filesystem": 8, "fill": [11, 16, 40, 79, 89, 120, 124, 127, 190, 206, 251, 254, 258, 261, 292], "fill_between": 206, "fillded": 261, "filter": [3, 12, 13, 38, 52, 88, 89, 113, 162, 216, 249, 251, 256, 258], "filter_symbol": 258, "filterwarn": [3, 13], "fim1": 39, "final": [3, 4, 5, 11, 12, 13, 18, 23, 25, 28, 35, 36, 41, 43, 46, 55, 68, 80, 87, 88, 94, 96, 113, 115, 118, 124, 128, 134, 136, 141, 150, 151, 152, 170, 182, 185, 187, 188, 190, 192, 193, 195, 199, 207, 209, 210, 213, 215, 222, 228, 229, 230, 232, 233, 236, 238, 239, 246, 258, 259, 289, 290, 291, 301, 308, 310], "final_exp": 141, "finalpdf": 128, "find": [4, 9, 11, 12, 14, 15, 16, 28, 30, 32, 35, 37, 39, 40, 43, 46, 49, 50, 51, 52, 53, 55, 56, 57, 61, 64, 67, 69, 70, 71, 79, 82, 83, 84, 87, 88, 92, 94, 96, 98, 100, 101, 102, 105, 110, 113, 115, 117, 124, 128, 130, 137, 143, 149, 154, 159, 175, 182, 184, 185, 186, 190, 193, 195, 206, 207, 208, 209, 210, 211, 213, 217, 219, 220, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 238, 239, 240, 246, 255, 258, 259, 261, 264, 274, 286, 288, 290, 292, 297, 309], "find_carmichael_numbers_in_rang": [13, 128], "find_dn": 233, "find_dynamicsymbol": [149, 154, 298], "find_execut": 261, "find_first_n_carmichael": [13, 128], "find_linear_recurr": 226, "find_min_poli": 215, "find_transitive_subgroups_of_s6": 71, "findroot": [54, 96, 238], "fine": [11, 12, 13, 14, 39, 43, 51, 88, 92, 116, 204, 209, 210, 220, 232], "finish": [8, 12, 69, 70, 184, 254, 293], "finit": [13, 14, 17, 40, 41, 52, 65, 69, 74, 75, 76, 79, 87, 88, 89, 91, 92, 115, 117, 118, 176, 199, 205, 208, 211, 214, 216, 217, 220, 222, 223, 226, 228, 233, 235, 236, 239, 258, 264, 266, 276, 287, 290, 296], "finite_diff": [67, 88], "finite_diff_weight": [67, 88, 286], "finite_set": [67, 228], "finitediff": 67, "finitedistributionhandmad": 240, "finitedomain": 240, "finiteextens": 207, "finitefield": [210, 211], "finiteformalpowerseri": 222, "finitehandl": 65, "finitepred": 65, "finitepspac": 240, "finiterv": 240, "finiteset": [14, 41, 52, 67, 68, 228, 239, 240, 297], "finset_intersect": 67, "fip1": 39, "fip2": 39, "fire": 3, "first": [2, 4, 5, 7, 8, 9, 11, 12, 14, 15, 16, 22, 23, 24, 27, 28, 31, 35, 36, 39, 41, 42, 43, 45, 48, 52, 55, 56, 59, 61, 68, 69, 70, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 101, 102, 104, 105, 112, 113, 115, 117, 118, 124, 127, 128, 131, 132, 134, 135, 136, 143, 144, 147, 149, 150, 151, 152, 154, 155, 157, 158, 162, 163, 167, 171, 174, 179, 180, 183, 184, 185, 186, 187, 189, 190, 193, 195, 199, 203, 206, 207, 209, 211, 213, 214, 215, 216, 217, 220, 221, 222, 223, 226, 227, 229, 230, 232, 233, 236, 237, 238, 239, 240, 244, 246, 249, 251, 252, 253, 254, 258, 259, 261, 269, 274, 285, 286, 288, 290, 291, 292, 294, 296, 297, 298, 301, 303, 305, 306], "first_index": 120, "first_linear": 236, "first_moment_of_area": 104, "firstexact": 236, "firstli": [3, 13, 14, 41, 43, 158, 230], "firstlinear": 236, "firstnam": 9, "firstorderactivationdegroote2016": [18, 131, 134, 298], "fisher": 240, "fishersz": 240, "fisherz": 240, "fit": [3, 14, 15, 36, 68, 113, 124, 127, 128, 220, 236, 261, 291], "five": [18, 48, 51, 68, 77, 113, 139, 220, 233], "five_lemma": 68, "fivelemma": 68, "fix": [3, 4, 7, 12, 13, 14, 18, 24, 30, 35, 36, 69, 79, 81, 84, 86, 89, 93, 96, 100, 117, 124, 128, 130, 135, 136, 147, 148, 151, 154, 157, 174, 179, 183, 186, 190, 195, 199, 203, 206, 210, 213, 215, 216, 217, 220, 226, 230, 238, 240, 258, 264, 266, 298, 301, 302, 303], "fixed_point": 157, "fixed_row_vector": 240, "fixedbosonicbasi": 190, "fixedfram": 203, "fket": 190, "fl": [18, 25, 26, 30, 132, 152, 214, 301], "fl_": 132, "fl_m": 132, "fl_m_act": [18, 132], "fl_m_act2": 18, "fl_m_act3": 18, "fl_m_act_cal": 18, "fl_m_pa": [18, 132], "fl_m_pas2": 18, "fl_m_pas3": 18, "fl_m_pas_cal": 18, "fl_m_pas_inv": 18, "fl_m_pas_inv2": 18, "fl_m_pas_sym": 18, "fl_t": [18, 132], "fl_t2": 18, "fl_t3": 18, "fl_t_callabl": 18, "fl_t_inv": 18, "fl_t_inv2": 18, "fl_t_sym": 18, "flag": [2, 3, 14, 22, 37, 43, 48, 67, 69, 79, 80, 84, 86, 88, 103, 115, 118, 119, 124, 128, 151, 174, 206, 211, 213, 216, 217, 220, 221, 222, 228, 232, 233, 236, 238, 239, 246, 251, 252, 258, 261, 285, 296], "flag_fram": 151, "flag_joint": 151, "flagerror": 213, "flajolet": 217, "flake8": [11, 12], "flambda": 228, "flank": 89, "flat": [13, 102, 124, 209, 252], "flatmirror": 159, "flatrefract": 159, "flatten": [68, 88, 210, 242, 247, 258, 259, 298], "flavius_josephu": 80, "flavor": 221, "flaw": 13, "flaws_in_coverage_measur": 12, "flex": 298, "flexibl": [14, 22, 30, 35, 80, 88, 157, 206, 210, 239, 286], "flexion": 298, "flexur": 136, "flint": [13, 209, 210, 211], "flip": [147, 175, 184, 240, 301], "float": [2, 12, 15, 18, 30, 41, 43, 50, 69, 79, 88, 94, 96, 103, 105, 115, 116, 124, 128, 130, 131, 132, 134, 141, 143, 163, 204, 206, 209, 210, 211, 213, 216, 220, 232, 238, 240, 251, 259, 261, 285, 288, 298], "float16": 69, "float32": [69, 129, 130, 259], "float64": [14, 54, 69, 129, 240], "float80": [69, 220], "floatbasetyp": 69, "floattyp": 69, "floatx": 220, "floor": [88, 94, 128, 130, 151, 210, 211, 220, 240], "floor1": 220, "floor2": 220, "floor_fram": 151, "floor_joint": 151, "floorfunct": 94, "flow": [41, 215], "floyd": 128, "fma": [69, 220], "fmax": 220, "fmin": 220, "fmpq_mat_charpoli": 209, "fmpq_mat_det": 209, "fmpq_mat_inv": 209, "fmpq_mat_solv": 209, "fmpq_mat_solve_dixon": 209, "fmpz": [210, 211], "fmpz_mat": 209, "fmpz_mat_charpoli": 209, "fmpz_mat_det": 209, "fmpz_mat_inv": 209, "fmpz_mat_solv": 209, "fmt": [209, 211, 215], "fn": [39, 55, 115, 124, 207, 216], "fn_fortran": 69, "fn_numpi": 69, "fname": 253, "fnm1": 39, "fnm2": 39, "focal": [98, 159, 163], "focal_length": 163, "foci": 98, "fock": 190, "fock_spac": 176, "fockspac": 176, "fockstat": 190, "fockstatebosonbra": 190, "fockstatebosonket": 190, "fockstatebra": 190, "fockstatefermionbra": 190, "fockstatefermionket": 190, "fockstateket": 190, "focu": [0, 13, 41, 98, 238, 290], "focus": [14, 15, 54, 213, 233, 235, 236, 238, 239, 297], "focus_dist": 98, "fofc": 147, "fold": [79, 88, 94, 132, 220, 227, 232], "fold_frac_pow": 220, "fold_func_bracket": 220, "fold_short_frac": 220, "folded_cond": 94, "folder": 8, "follow": [2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 16, 18, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 35, 36, 37, 39, 41, 42, 43, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 62, 64, 67, 68, 69, 70, 71, 74, 77, 78, 79, 80, 81, 84, 87, 88, 89, 92, 93, 94, 96, 100, 102, 104, 111, 112, 113, 115, 118, 120, 124, 128, 129, 134, 135, 136, 139, 147, 148, 150, 151, 152, 154, 155, 157, 158, 159, 163, 182, 185, 187, 190, 193, 195, 199, 205, 206, 207, 208, 211, 213, 214, 215, 216, 218, 219, 220, 221, 222, 227, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 244, 245, 246, 251, 254, 255, 258, 259, 268, 269, 271, 285, 286, 288, 289, 291, 292, 296, 297, 301], "font": [8, 116, 204, 220], "fontsiz": [116, 204, 220], "foo": [60, 67, 69, 88, 185, 204, 258, 261], "foo_1": 185, "foo_2": 185, "foo_3": 185, "foobasi": 185, "footnot": [42, 195, 291, 292, 295], "for_i": 69, "for_ji": 69, "for_kji": 69, "foral": [79, 87, 90, 195], "forc": [2, 16, 19, 23, 25, 26, 27, 28, 30, 33, 36, 39, 42, 43, 88, 92, 94, 98, 104, 113, 115, 118, 131, 132, 134, 135, 136, 137, 139, 147, 148, 150, 152, 154, 155, 157, 178, 179, 193, 206, 208, 210, 229, 232, 233, 238, 251, 271, 273, 295, 296, 299, 301, 304, 305, 306, 307, 308], "force1": 148, "force_color": 251, "force_magnitud": 298, "force_o": 30, "force_on_child": 298, "force_on_o": 18, "force_on_p": 18, "force_on_par": 298, "force_p": 22, "force_p1": 18, "force_p2": 18, "force_r": 22, "force_vector": 30, "forceactu": [18, 147], "forcelist": [22, 26, 27, 30, 152, 302, 305, 308, 309], "forces_eq": 303, "forcing_ful": [22, 25, 26, 148, 152, 157, 306], "forcing_kin": 152, "forcing_lin": 301, "fore": 65, "forecolor": [116, 204], "foreground": [116, 204], "foremost": 12, "forest": 258, "forg": [2, 8, 9, 130], "forget": [12, 51, 68, 296], "fork": [0, 5, 13, 301], "fork_i": 301, "fork_mc": 301, "forkcg1": 301, "forkcg3": 301, "forkcgnorm": 301, "forkcgpar": 301, "forklength": 301, "forkoffset": 301, "form": [3, 5, 11, 12, 13, 14, 15, 18, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 39, 41, 43, 46, 53, 54, 61, 64, 65, 66, 67, 69, 70, 78, 79, 80, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 101, 104, 108, 110, 111, 113, 115, 117, 120, 122, 124, 128, 130, 131, 132, 134, 135, 136, 137, 139, 140, 143, 147, 148, 150, 151, 152, 153, 155, 157, 167, 170, 171, 172, 174, 184, 185, 188, 190, 192, 195, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 245, 246, 251, 252, 258, 264, 267, 268, 270, 271, 273, 279, 286, 290, 291, 292, 295, 296, 297, 298, 301, 302, 303, 305, 306, 308, 310], "form_eom": [13, 24, 148, 157, 303, 306], "form_field": 90, "form_lagranges_equ": [26, 27, 152, 302, 305, 310], "formal": [41, 51, 68, 87, 88, 96, 113, 118, 159, 195, 210, 213, 224, 227, 276], "formalpowerseri": 222, "formalpowerseriescompos": 222, "formalpowerseriesinvers": 222, "formalpowerseriesproduct": 222, "format": [3, 8, 11, 12, 15, 31, 37, 39, 52, 55, 56, 68, 80, 88, 89, 110, 111, 115, 118, 124, 127, 128, 135, 152, 153, 157, 163, 174, 184, 206, 209, 210, 215, 216, 218, 220, 230, 236, 239, 251, 261, 264, 268, 289, 292, 295, 298], "formatstr": 69, "formatt": 68, "former": [14, 22, 38, 69, 88, 93, 213, 215, 216, 233, 258], "formul": [18, 23, 25, 26, 36, 39, 53, 131, 132, 134, 148, 150, 151, 190, 298, 303, 304, 305], "formula": [4, 39, 48, 61, 67, 82, 87, 88, 92, 93, 94, 96, 101, 118, 124, 128, 158, 205, 207, 213, 216, 220, 222, 226, 229, 232, 233, 236, 290, 296], "fornberg": [39, 67], "fort": 89, "forth": [210, 215], "forthcom": 115, "fortran": [2, 14, 15, 21, 30, 39, 43, 67, 129, 130, 205, 253, 295], "fortran77": 253, "fortran90": 253, "fortranreturn": 69, "fortun": [69, 129, 216, 217, 305], "forum": [205, 239], "forward": [18, 23, 35, 67, 69, 124, 143, 150, 183, 232, 251, 301], "forward_diff": 143, "found": [0, 2, 3, 4, 5, 8, 11, 12, 18, 27, 30, 35, 41, 42, 48, 52, 67, 70, 71, 79, 80, 82, 84, 86, 88, 89, 90, 98, 99, 104, 113, 115, 124, 128, 130, 143, 149, 151, 152, 153, 194, 207, 208, 209, 210, 215, 216, 217, 220, 222, 223, 226, 227, 230, 233, 236, 237, 238, 239, 240, 244, 258, 259, 261, 295], "foundat": [80, 214, 215], "four": [5, 18, 28, 53, 69, 71, 80, 88, 92, 96, 118, 120, 128, 132, 134, 139, 144, 155, 163, 199, 206, 207, 209, 213, 216, 220, 228, 233, 236, 238, 240, 241, 264, 266, 269, 298, 300, 304], "four_group": 71, "fourier": [13, 88, 96, 115, 146, 183, 224, 276], "fourier_seri": [88, 223], "fourier_transform": 115, "fourierseri": 223, "fouriertransform": 115, "fourth": [48, 88, 89, 132, 208, 236, 286], "fox": 113, "fp": [69, 70, 88, 216, 222], "fp_group": [70, 79], "fpgroup": [70, 79], "fqyej": 89, "fr": [11, 18, 22, 25, 27, 30, 110, 115, 128, 152, 240, 298, 301, 305, 308, 309], "frac": [15, 18, 28, 33, 35, 36, 39, 41, 43, 46, 48, 49, 53, 55, 67, 87, 88, 89, 90, 93, 94, 96, 113, 115, 124, 128, 130, 131, 132, 134, 143, 193, 204, 205, 209, 211, 213, 216, 220, 222, 223, 227, 230, 233, 236, 237, 239, 240, 241, 258, 271, 273, 286, 290, 291, 295, 296, 302, 305], "frac2": 240, "frac_field": [210, 211], "frac_unifi": 211, "fracel": [211, 220], "fracfield": [210, 211], "fraction": [16, 88, 89, 92, 94, 104, 115, 124, 128, 130, 149, 196, 209, 210, 211, 213, 214, 217, 220, 222, 232, 233, 236, 238, 287], "fractional_part": 94, "fractionalpart": 94, "fractionfield": [210, 211], "fracton": 220, "fragil": [14, 43], "fragment": [4, 89], "frame": [4, 18, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 147, 148, 149, 151, 152, 154, 155, 157, 199, 200, 201, 203, 255, 264, 271, 298, 301, 302, 303, 305, 306, 308, 310], "frame1": 199, "frame2": [199, 201], "frame_a": 22, "frame_b": 22, "frame_i": 301, "frame_mc": 301, "frame_n": 22, "framecg1": 301, "framecg3": 301, "framecgnorm": 301, "framecgpar": 301, "framelength": 301, "framework": [13, 22, 23, 88, 150, 245, 251, 253, 259, 281], "francesco": 0, "franci": 214, "frank": [79, 80, 124, 258], "frechet": 240, "fredrik": 0, "free": [0, 11, 12, 13, 15, 23, 34, 48, 53, 54, 59, 67, 68, 69, 78, 79, 84, 88, 93, 100, 115, 120, 124, 128, 131, 134, 135, 136, 141, 144, 150, 151, 154, 159, 179, 197, 199, 202, 206, 207, 209, 211, 213, 214, 215, 216, 220, 222, 228, 230, 232, 233, 236, 238, 239, 246, 258, 290], "free_arg": 246, "free_dynamicsymbol": 199, "free_group": [70, 78, 79], "free_integ": 128, "free_modul": [207, 211], "free_symbol": [13, 15, 51, 69, 88, 97, 115, 124, 179, 197, 199, 216, 226, 233, 298], "free_symbols_in_domain": 216, "free_to_perm": 78, "free_var_index": 124, "freedom": [135, 148, 151, 152, 157, 240, 298, 300, 303, 304, 305], "freegroup": 70, "freeli": [4, 14, 60, 121, 147, 151, 207], "freemodul": 207, "freemoduleel": 207, "freespac": 159, "freevar": 124, "fregli": [18, 131, 132, 134, 298], "freir": 214, "freq_unit": 141, "frequenc": [89, 115, 141, 143, 164, 166, 174, 191], "frequent": [39, 79, 215, 227, 239], "fresh": 12, "freshli": 59, "fresnel": [163, 220, 230], "fresnel_coeffici": 163, "fresnel_equ": 163, "fresnel_integr": 96, "fresnelc": [96, 220, 230], "fresnelintegr": 96, "fridai": 89, "friend": 36, "friendli": [5, 69, 113, 233, 235, 236, 238, 239, 253, 297], "friendlier": 209, "fro": 124, "frobeniu": [112, 124, 128, 213, 214], "from": [2, 3, 4, 5, 7, 8, 9, 11, 12, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 46, 48, 50, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 264, 266, 267, 268, 269, 270, 271, 273, 274, 282, 285, 286, 288, 290, 291, 292, 295, 296, 297, 298, 301, 302, 303, 305, 306, 308, 309, 310], "from_algebraicfield": 211, "from_array_to_matrix": 242, "from_axis_angl": 61, "from_coeff_list": 143, "from_complexfield": 211, "from_ddm": 209, "from_dict": 216, "from_dict_sympi": 209, "from_dod": 209, "from_dod_lik": 209, "from_dok": [124, 209], "from_eul": 61, "from_ex": 211, "from_expr": [69, 216], "from_expressiondomain": 211, "from_expressionrawdomain": 211, "from_ff": 211, "from_ff_gmpi": 211, "from_ff_python": 211, "from_flat_nz": 209, "from_fractionfield": 211, "from_functionprototyp": 69, "from_gaussianinteg": 211, "from_gaussianrationalfield": 211, "from_globalpolynomialr": 211, "from_hyp": [107, 110], "from_index_summ": 120, "from_inertia_scalar": [154, 303], "from_int_list": 215, "from_inversion_vector": 80, "from_list": [209, 211, 216, 217], "from_list_flat": 209, "from_list_sympi": 209, "from_matrix": [46, 61, 143, 209], "from_meijerg": [107, 110], "from_monogenicfiniteextens": 211, "from_newtonian": [13, 24, 157, 303, 306], "from_poli": 216, "from_polynomialr": 211, "from_qq": 211, "from_qq_gmpi": 211, "from_qq_python": 211, "from_rational_express": [46, 143], "from_real": 228, "from_realfield": 211, "from_rep": 209, "from_rg": 77, "from_rotation_matrix": 61, "from_sequ": 80, "from_sympi": [210, 211], "from_sympy_list": 211, "from_tensor": 154, "from_zpk": [46, 143], "from_zz": 211, "from_zz_gmpi": 211, "from_zz_python": 211, "fromit": 88, "front": [79, 88, 159, 189, 211, 213, 216, 220, 232, 296, 301], "frontend": 209, "frontier": [124, 228], "frown": 15, "frstar": [22, 25, 27, 30, 152, 301, 305, 308, 309], "frustrat": 3, "frv": 240, "frv_type": 240, "fsolv": [54, 298], "fsp": 113, "fsu": 115, "ftheta": 90, "fu": [14, 231, 232, 276], "fudg": 3, "fulfil": [113, 205], "full": [3, 4, 5, 11, 12, 13, 16, 18, 25, 26, 37, 41, 43, 51, 65, 67, 69, 79, 80, 88, 92, 96, 100, 101, 115, 120, 124, 130, 157, 199, 209, 210, 213, 214, 216, 220, 222, 232, 233, 259, 290, 296, 298], "full_cyclic_form": 80, "full_impl": 41, "full_pb": 113, "full_prec": [87, 220], "fullform": 130, "fulli": [3, 4, 11, 13, 22, 30, 35, 41, 79, 88, 105, 115, 118, 130, 135, 136, 148, 151, 190, 209, 210, 211, 217, 227, 240, 246, 298], "fullrank": [65, 69], "fullrankhandl": 65, "fullrankpred": 65, "fulltext": 91, "fully_qualified_modul": 220, "fully_symmetr": 246, "fun": [220, 237, 289], "func": [3, 4, 12, 14, 15, 40, 43, 63, 67, 69, 88, 90, 93, 96, 107, 109, 128, 130, 154, 179, 199, 209, 213, 216, 220, 221, 232, 236, 237, 238, 249, 254, 256, 258, 259, 261, 263], "func_field_modgcd": 213, "func_m_1": 69, "func_nam": [3, 69, 94, 124, 261], "funcminusoneoptim": 69, "funcnam": [12, 252], "function": [1, 2, 3, 5, 7, 11, 15, 18, 22, 23, 25, 26, 30, 32, 34, 36, 37, 38, 39, 41, 42, 44, 46, 49, 51, 53, 56, 58, 62, 63, 64, 66, 67, 68, 70, 71, 74, 79, 80, 83, 84, 86, 89, 90, 91, 92, 93, 97, 98, 99, 100, 105, 108, 109, 112, 114, 115, 116, 117, 120, 122, 127, 129, 131, 132, 133, 134, 135, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 156, 157, 162, 163, 164, 165, 169, 174, 175, 176, 179, 184, 185, 186, 187, 188, 189, 190, 193, 194, 199, 202, 203, 204, 205, 207, 209, 212, 213, 214, 215, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 234, 235, 238, 239, 240, 242, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 269, 270, 272, 273, 274, 275, 276, 279, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 294, 297, 298, 300, 302, 303, 304, 305, 306, 307], "function1": 118, "function2": 118, "function_arg": [69, 251], "function_exponenti": 130, "function_kwarg": 251, "function_nam": [7, 69, 252], "function_prototyp": 253, "function_rang": 67, "function_that_emits_a_warn": 12, "function_vari": 115, "functioncal": 69, "functionclass": [88, 220, 259], "functiondefinit": [69, 130], "functionmatrix": 120, "functionprototyp": 69, "functiontyp": 124, "functor": 68, "fundament": [41, 43, 67, 70, 78, 106, 113, 115, 194, 195, 210, 215, 233, 236, 240, 292], "fundamental_matrix": 240, "funtion_nam": 252, "further": [0, 2, 11, 14, 18, 23, 28, 35, 41, 43, 48, 64, 68, 88, 89, 94, 96, 100, 113, 115, 119, 120, 124, 130, 135, 140, 141, 148, 151, 152, 162, 205, 206, 207, 209, 213, 215, 216, 229, 230, 232, 236, 240, 246, 289, 290], "furthermor": [3, 13, 14, 43, 65, 88, 89, 118, 215, 229, 288, 290, 291], "furthest": [67, 89], "fuse": 69, "fused_multipli": 43, "futur": [3, 11, 12, 13, 14, 23, 27, 34, 41, 42, 69, 70, 88, 113, 115, 124, 130, 151, 157, 190, 194, 206, 208, 209, 219, 220, 232, 236, 245, 251, 254, 256, 259, 291, 297, 301], "fuzzi": [14, 15, 41, 43, 44], "fuzzy_": 43, "fuzzy_and": [41, 42, 43], "fuzzy_not": [42, 43], "fuzzy_or": [41, 42], "fv": [18, 132, 211], "fv_m": [18, 132], "fv_m2": 18, "fv_m3": 18, "fv_m_callabl": 18, "fv_m_inv": 18, "fv_m_inv2": 18, "fv_m_pas2": 18, "fv_m_sym": 18, "fwht": 91, "fwrap": 252, "fx": [88, 90, 206, 236, 237], "fxx": 88, "fxy": 233, "fxz": 233, "fy": [90, 206, 237], "fz": 206, "fzx": [51, 233], "g": [2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 18, 22, 27, 28, 30, 31, 33, 41, 42, 43, 46, 54, 55, 57, 67, 68, 69, 70, 73, 76, 78, 79, 80, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 100, 104, 105, 106, 111, 114, 115, 117, 118, 124, 128, 130, 131, 133, 134, 135, 139, 143, 144, 147, 148, 151, 153, 154, 155, 157, 170, 174, 179, 185, 187, 188, 190, 193, 195, 196, 199, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 232, 233, 236, 237, 238, 239, 240, 241, 244, 245, 246, 251, 252, 253, 254, 256, 258, 259, 261, 273, 276, 286, 291, 295, 296, 297, 298, 301, 302, 303, 305, 306, 308, 309, 310], "g1": [46, 69, 73, 78, 79, 113, 124, 143], "g171": 89, "g18": 71, "g2": [46, 69, 73, 78, 79, 113, 117, 124, 143], "g3": [46, 79, 143], "g36": 71, "g36m": 71, "g36p": 71, "g4": [46, 143], "g72": 71, "g_": [71, 79, 86, 87, 96, 113, 124, 233], "g_0": [79, 233], "g_1": [79, 213, 216, 227, 233, 236], "g_2": [79, 117, 213, 227, 236], "g_frame": 151, "g_i": [79, 213, 227], "g_k": 79, "g_n": [87, 93, 216], "g_name": 215, "g_t": 79, "g_x": 213, "gain": [7, 16, 25, 26, 30, 46, 89, 143], "galoi": [75, 210, 211, 213, 216, 276], "galois_group": [211, 215, 216], "galoisgroup": [211, 215, 216], "galoistool": [128, 213], "galton": 240, "game": 230, "gamma": [4, 5, 12, 16, 30, 36, 43, 87, 88, 90, 92, 93, 113, 115, 146, 187, 205, 220, 230, 232, 236, 240, 296], "gamma2": 96, "gamma3": 96, "gamma_": [96, 144, 146], "gamma_0": 146, "gamma_1": [69, 146], "gamma_2": [69, 146], "gamma_3": 146, "gamma_5": 146, "gamma_distribut": 240, "gamma_distribution_and_the_use_of_the_distribution_in_the_bayesian_analysi": 240, "gamma_funct": [4, 96], "gamma_i": 213, "gamma_matric": [144, 146], "gamma_p": 96, "gamma_process": 240, "gamma_trac": 144, "gammabetaerf": [4, 93, 96], "gammadistribut": 240, "gammafunct": [4, 96], "gammainvers": 240, "gammaln": 220, "gammamatrix": 144, "gammamatrixhead": 144, "gammaprocess": 240, "gammasimp": [87, 88, 232], "gap": [22, 40, 79, 128, 217], "garbag": 251, "gate": [118, 170, 175, 177, 183, 184, 186, 281], "gate_idx": [170, 174], "gate_simp": 174, "gate_sort": 174, "gate_spac": 174, "gateinputcount": 118, "gathen": [213, 214], "gathen92": [213, 214], "gathen99": [213, 214], "gather": [236, 298], "gaunt": 205, "gauss": [4, 53, 96, 115, 124, 159, 208, 209, 215, 218, 238, 239], "gauss_chebyshev_t": 115, "gauss_chebyshev_u": 115, "gauss_conj": 159, "gauss_gen_laguerr": 115, "gauss_hermit": 115, "gauss_jacobi": 115, "gauss_jordan_solv": [119, 124], "gauss_laguerr": 115, "gauss_legendr": 115, "gauss_lobatto": 115, "gaussian": [41, 96, 115, 124, 128, 160, 194, 213, 216, 233, 238, 240, 281, 292], "gaussian_beam": 159, "gaussian_conj": 159, "gaussian_elimin": 124, "gaussian_prim": 128, "gaussian_quadratur": 115, "gaussian_reduc": 233, "gaussiandomain": 211, "gaussianel": 211, "gaussianinteg": [210, 211], "gaussianinvers": 240, "gaussianr": [210, 211], "gaussianrationalfield": [210, 211], "gaussopt": 159, "gave": [16, 88, 258], "gb": [11, 79, 139], "gbt": 143, "gcc": [2, 253], "gcd": [87, 88, 89, 124, 128, 186, 209, 210, 211, 214, 215, 216, 220, 232, 233], "gcd_list": 216, "gcd_term": [88, 216], "gcdex": [211, 216], "gcomm": 246, "gd": 240, "ge": [5, 41, 88, 93, 94, 96, 113, 124, 128, 130, 205, 208, 213, 216, 220, 230, 238, 258], "gear": 207, "gedd": [115, 214], "geddes92": [213, 214], "gede": 153, "gedg": 220, "gegenbau": [216, 220], "gegenbauer_poli": [96, 216], "gegenbauer_polynomi": 96, "gegenbauer_rul": 115, "gegenbauerc": 220, "gegenbauerc3": 96, "gegenbauerpolynomi": 96, "gen": [78, 79, 84, 85, 86, 88, 124, 128, 207, 210, 211, 213, 215, 216, 217, 218, 226, 232, 235, 238], "gen0": 70, "gen1": 70, "gen_": 70, "gen_count": 79, "gen_hermite_rul": 115, "gen_laguerre_rul": 115, "gen_mat": 240, "gen_spe": [199, 203], "gender": 5, "gener": [3, 8, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28, 30, 31, 33, 35, 37, 39, 41, 42, 43, 45, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 63, 65, 66, 67, 68, 70, 71, 72, 73, 76, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 102, 104, 106, 111, 113, 115, 116, 117, 118, 120, 124, 128, 129, 130, 131, 133, 134, 137, 143, 147, 148, 150, 151, 152, 153, 155, 157, 158, 162, 173, 174, 175, 176, 179, 184, 185, 188, 189, 190, 195, 197, 199, 200, 203, 204, 205, 206, 207, 208, 209, 211, 213, 216, 217, 218, 219, 220, 221, 222, 226, 229, 230, 232, 233, 235, 236, 237, 238, 240, 245, 246, 252, 253, 255, 256, 257, 258, 259, 264, 268, 269, 271, 272, 273, 279, 286, 288, 289, 290, 291, 292, 296, 297, 298, 300, 301, 302, 303, 305, 306, 308, 310], "general_sum_of_even_pow": 233, "general_sum_of_squar": 233, "generalis": [41, 93, 96, 113, 143, 207], "generalizations_of_fibonacci_numb": [88, 93], "generalized_hypergeometric_funct": 96, "generalized_laguerre_polynomi": 96, "generalized_multivariate_log": 240, "generalizedmultivariateloggamma": 240, "generalizedmultivariateloggammaomega": 240, "generalpythagorean": 233, "generalsumofevenpow": 233, "generalsumofsquar": 233, "generate_bel": [80, 258], "generate_derang": [93, 258], "generate_dimino": [76, 79], "generate_grai": 72, "generate_involut": 258, "generate_logo": 45, "generate_oriented_forest": 258, "generate_schreier_sim": [76, 79], "generator_matrix": 240, "generator_product": 79, "generators_and_rel": 76, "generatorserror": 213, "generatorsneed": 213, "generatortyp": 258, "genform": [236, 237], "genfrac": [93, 128], "genocchi": [93, 96, 216], "genocchi_numb": 93, "genocchi_poli": [93, 216], "genocchinumb": 93, "gens1": 84, "gens2": 84, "gens2a": 84, "gens_a": 84, "gens_f": 84, "gens_h": 79, "gens_i": 84, "gens_k": 79, "gensol": 236, "geodes": [18, 155, 158], "geodesi": 214, "geodesic_end_vector": 158, "geodesic_length": 158, "geodet": [158, 214], "geomalgorithm": 105, "geomet": [93, 207], "geometr": [18, 36, 43, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 159, 207, 214, 240, 292], "geometri": [4, 19, 23, 97, 98, 99, 101, 102, 103, 104, 105, 115, 150, 155, 163, 212, 267, 274, 275, 281, 282, 290, 298], "geometric_conj": 159, "geometric_conj_ab": 159, "geometric_conj_af": 159, "geometric_conj_bf": 159, "geometric_distribut": 240, "geometricdistribut": 240, "geometricent": 103, "geometricrai": 159, "geometryent": [97, 98, 99, 101, 103, 104, 105], "geometryerror": [98, 101, 104, 105], "geometryresult": 100, "georg": [70, 207, 209, 236, 258], "geq": [88, 89, 96, 124, 216, 233, 240, 296], "geq0": 240, "gerardo": 205, "gerhard": 214, "german": 89, "get": [1, 3, 4, 5, 8, 11, 12, 13, 14, 17, 22, 25, 26, 27, 28, 30, 36, 38, 39, 41, 42, 43, 52, 54, 55, 56, 59, 60, 63, 64, 67, 68, 69, 71, 72, 77, 78, 80, 81, 83, 84, 87, 88, 89, 90, 92, 93, 94, 96, 101, 111, 113, 115, 117, 120, 124, 128, 130, 134, 135, 141, 143, 146, 152, 162, 163, 170, 174, 179, 184, 185, 186, 187, 192, 194, 195, 206, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 222, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 246, 247, 252, 258, 259, 260, 264, 268, 285, 288, 290, 291, 292, 295, 296, 297, 305], "get_adjacency_dist": 80, "get_adjacency_matrix": 80, "get_basi": 185, "get_bodi": 157, "get_class": 262, "get_color_arrai": 206, "get_comm": 246, "get_contraction_structur": [244, 245], "get_data": [13, 206], "get_default_datatyp": 253, "get_diag_block": [120, 124], "get_dimensional_depend": [192, 193], "get_domain": 216, "get_exact": 211, "get_field": [210, 211], "get_free_indic": [246, 247], "get_gen_sol_from_part_sol": 236, "get_indic": [244, 245, 246, 247], "get_interfac": 253, "get_joint": 157, "get_label": 206, "get_matrix": [13, 246], "get_mesh": 206, "get_mod_func": 262, "get_modulu": 216, "get_motion_param": 203, "get_num_denom": 215, "get_numpy_arrai": 69, "get_period": [96, 113], "get_perm_group": [71, 215], "get_permut": 190, "get_point": [13, 206], "get_positional_dist": 80, "get_precedence_dist": 80, "get_precedence_matrix": 80, "get_prototyp": 253, "get_r": [209, 211], "get_seg": 206, "get_subno": 190, "get_subset_from_bitstr": 72, "get_symmetric_group_sg": [84, 246], "get_sympy_dir": 251, "get_target_matrix": 174, "get_transvers": 84, "get_units_non_prefix": 198, "getitem": 209, "getn": 88, "geto": 88, "getsourc": 259, "getstat": 88, "getter": [13, 22, 30, 88], "gf": [13, 80, 89, 139, 207, 209, 210, 213, 215], "gf_": 213, "gf_add": 213, "gf_add_ground": 213, "gf_add_mul": 213, "gf_berlekamp": 213, "gf_cofactor": 213, "gf_compos": 213, "gf_compose_mod": 213, "gf_crt": [128, 213], "gf_crt1": [128, 213], "gf_crt2": [128, 213], "gf_csolv": [128, 213], "gf_degre": 213, "gf_diff": 213, "gf_div": 213, "gf_eval": 213, "gf_expand": 213, "gf_exquo": 213, "gf_factor": 213, "gf_factor_method": 213, "gf_factor_sqf": 213, "gf_from_dict": 213, "gf_from_int_poli": 213, "gf_gcd": 213, "gf_gcdex": 213, "gf_int": 213, "gf_irreduc": 213, "gf_irreducible_p": 213, "gf_lc": 213, "gf_lcm": 213, "gf_lshift": 213, "gf_monic": 213, "gf_mul": 213, "gf_mul_ground": 213, "gf_multi_ev": 213, "gf_neg": 213, "gf_normal": 213, "gf_pow": 213, "gf_pow_mod": 213, "gf_qbasi": 213, "gf_qmatrix": 213, "gf_quo": 213, "gf_quo_ground": 213, "gf_random": 213, "gf_rem": 213, "gf_rshift": 213, "gf_shoup": 213, "gf_sqf": 213, "gf_sqf_list": 213, "gf_sqf_p": 213, "gf_sqf_part": 213, "gf_sqr": 213, "gf_strip": 213, "gf_sub": 213, "gf_sub_ground": 213, "gf_sub_mul": 213, "gf_tc": 213, "gf_to_dict": 213, "gf_to_int_poli": 213, "gf_trace_map": 213, "gf_trunc": 213, "gf_valu": 213, "gf_zassenhau": 213, "gff": 216, "gff_list": [211, 216], "gfvar": 226, "gfzhang": 143, "gh": [79, 208, 239, 246], "ghcomm": 246, "gianni": [213, 216, 238], "giant": [128, 239], "gib": 216, "gibb": 223, "gibbs_phenomenon": 223, "gigabyt": 290, "gimp": 220, "giovan": 89, "giovini": [213, 214], "giovini91": 214, "git": [2, 7, 10, 11, 12], "gitconfig": 9, "github": [0, 2, 3, 5, 7, 8, 10, 11, 13, 52, 56, 59, 67, 88, 92, 104, 115, 124, 194, 228, 239, 292], "gitignor": 11, "gitlab": 22, "gitter": [59, 292], "give": [2, 3, 4, 7, 11, 13, 14, 16, 18, 22, 30, 33, 35, 36, 37, 41, 42, 43, 48, 50, 52, 53, 54, 55, 56, 57, 61, 62, 64, 69, 70, 77, 79, 80, 81, 82, 87, 88, 89, 90, 93, 94, 96, 98, 100, 101, 103, 104, 112, 113, 115, 116, 118, 120, 124, 127, 128, 129, 131, 132, 134, 135, 139, 143, 151, 169, 184, 185, 187, 188, 192, 193, 195, 196, 198, 199, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 220, 221, 222, 223, 227, 228, 229, 230, 232, 233, 236, 238, 239, 240, 251, 252, 253, 258, 268, 273, 288, 289, 291, 296, 297], "given": [2, 3, 5, 8, 12, 13, 15, 16, 18, 22, 28, 33, 36, 37, 39, 41, 43, 46, 48, 50, 53, 55, 61, 63, 64, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 84, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 112, 113, 115, 117, 118, 120, 124, 127, 128, 130, 134, 135, 137, 139, 141, 143, 144, 148, 149, 151, 152, 154, 157, 163, 180, 185, 187, 194, 195, 196, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 245, 246, 249, 251, 253, 255, 258, 259, 261, 264, 267, 269, 271, 273, 285, 291, 294, 296, 297, 298, 305], "given_condit": 240, "givens_rot": 124, "gj": [124, 209], "gj_dens": 209, "gl": 89, "glob": [16, 251], "global": [3, 4, 9, 12, 13, 14, 62, 63, 64, 67, 69, 70, 88, 100, 113, 130, 147, 155, 174, 180, 199, 201, 206, 207, 210, 211, 213, 220, 233, 236, 237, 240, 251, 253, 254, 259, 267], "global_assumpt": [62, 63, 64], "global_dict": 130, "global_paramet": 94, "global_var": [69, 253], "globalpolynomialr": 210, "gloss": 227, "glossari": [16, 17], "glu": 195, "glue": 124, "gm": [89, 193], "gm_private_kei": 89, "gm_public_kei": 89, "gmail": [11, 205], "gmp": 2, "gmpy": [12, 88, 92, 210, 211, 295], "gmpy2": [2, 210, 211], "gmpyfinitefield": [210, 211], "gmpyinteg": 211, "gmpyrationalfield": 211, "gmvlg": 240, "gmvlgo": 240, "gn": 73, "gnu": 74, "go": [3, 4, 5, 7, 9, 11, 12, 14, 22, 28, 30, 31, 43, 59, 68, 69, 79, 89, 93, 94, 113, 152, 184, 195, 203, 206, 215, 216, 227, 230, 236, 288, 290, 291, 294, 296, 301], "goal": [13, 15, 21, 31, 32, 68, 215, 217, 251, 252, 254, 289, 290], "goe": [6, 7, 10, 11, 12, 14, 43, 58, 124, 139, 227, 230, 239, 288, 291], "gold": 89, "gold_bug": 89, "goldbuggonavybeatarmyy": 89, "golden": [88, 92, 128], "golden_ratio": 88, "goldenratio": [88, 92, 221, 232], "goldstein": 236, "goldwass": 89, "golomb": [89, 128], "golub": 124, "golumb": 128, "gompertz": 240, "gompertz_distribut": 240, "gon": 76, "gonavybeatarmi": 89, "gonavybeatarmyyesyoucan": 89, "gone": 12, "goo": 89, "good": [3, 5, 7, 12, 14, 15, 27, 30, 41, 43, 51, 57, 69, 88, 89, 92, 100, 113, 124, 128, 207, 210, 211, 220, 227, 229, 230, 232, 236, 258, 285, 289, 292, 301], "googl": [7, 205, 206, 239], "gordan": [177, 187, 205, 281], "gordon": [113, 169, 230], "gosper": 87, "gosper_norm": 87, "gosper_sum": 87, "gosper_term": 87, "got": [124, 207, 210, 213, 216, 219, 251, 252, 258, 259, 288, 290, 291], "gotcha": [12, 14, 15, 17, 23, 36, 88, 259, 289, 297], "gothic_re_im": 220, "goto": 69, "goui": 159, "gov": [4, 94, 96], "govern": [128, 131, 134], "gp": [216, 236], "gpa": 135, "gpu": [2, 30, 129], "gr": 79, "gracefulli": [130, 220, 244], "grad_field": [200, 267], "grade": [89, 116, 204, 216], "gradedlexord": 216, "gradient": [200, 205, 206, 264, 267, 273], "gradient_field": 271, "gradual": [18, 217], "grafarend": 214, "graham": [80, 93, 94, 128], "graham_scan": 105, "grai": [75, 83, 116, 159, 204, 206, 276], "gram": [124, 194, 195, 197], "grammar": [22, 130, 232], "grammar_fil": 130, "gramschmidt": 124, "grand": 67, "granger": [0, 176], "grantham": 128, "granvil": [93, 128], "graph": [2, 4, 15, 80, 96, 117, 124, 129, 209, 220, 239, 258, 291, 295], "graphic": [5, 55, 141], "graphviz": [5, 8, 291, 295], "grav_eq": 193, "gravc": 298, "gravd": 298, "gravit": [18, 33, 193, 273, 298, 301, 302, 308], "gravitational_const": [193, 197], "graviti": [13, 18, 22, 30, 33, 157, 273, 298, 302, 303, 305, 306, 308, 310], "gray_to_bin": 72, "graycod": 72, "graycode_subset": 72, "grayscal": 206, "great": [43, 159, 217, 220, 233, 259], "greater": [5, 48, 65, 80, 88, 93, 94, 96, 113, 117, 128, 143, 157, 211, 213, 216, 219, 227, 232, 236, 238, 240, 255, 258, 271, 286], "greaterthan": [88, 220], "greaterthanobject": 88, "greatest": [88, 93, 98, 128, 208, 210, 211, 213, 214, 216, 219], "greatli": 221, "greedi": [128, 213, 229, 232], "greedy_algorithm_for_egyptian_fract": 128, "greek": [5, 15, 60, 88, 128, 130, 207, 220], "greek_lett": 220, "green": [11, 12, 24, 79, 206], "greet": 118, "greuel": 214, "greuel2008": [207, 214], "grevlex": [88, 116, 204, 208, 213, 216, 219, 220], "grid": [39, 67, 68, 141, 206], "gridpoint": 67, "grigoryan": 237, "grlex": [88, 116, 204, 211, 216, 219, 220], "gro": 79, "groebner": [214, 215, 216, 219, 232, 238, 239], "groebnerbasi": [57, 208, 216, 219], "groebnertool": 213, "groot": [18, 131, 132, 134, 298], "ground": [12, 13, 107, 151, 207, 209, 210, 211, 213, 215, 216, 238, 295, 301, 307, 308, 309, 310], "ground_new": 211, "ground_root": 216, "ground_typ": 254, "group": [5, 7, 68, 75, 80, 81, 84, 85, 86, 88, 91, 93, 117, 118, 128, 132, 169, 178, 179, 190, 205, 206, 207, 211, 216, 232, 236, 238, 239, 246, 258, 276], "group_construct": 73, "group_nam": 117, "group_numb": 74, "group_ord": 117, "groupprop": [76, 79], "groups_count": 74, "grouptheori": 79, "grover": [177, 281], "grover_iter": 175, "grow": [14, 84, 88, 113, 124, 128, 210, 213], "growth": [77, 128, 209, 213, 286], "gruntz": [88, 222], "gr\u00f6bner": 212, "gscholar": 240, "gsl": [21, 253], "gsoc": 239, "gt": [65, 69, 88, 220, 240, 258], "gtkmathview": 220, "guarante": [12, 14, 38, 41, 48, 54, 69, 79, 80, 88, 100, 113, 115, 124, 157, 209, 210, 213, 215, 216, 236, 238, 239, 256, 261, 292, 296], "guard": 253, "guess": [13, 37, 68, 89, 92, 113, 116, 204, 213, 216, 230, 233, 291, 298], "gui": [9, 116, 204], "guid": [2, 6, 7, 8, 9, 11, 14, 15, 17, 20, 22, 27, 43, 53, 59, 68, 88, 95, 220, 233, 235, 236, 238, 239, 246, 289, 293, 294, 297, 299], "guidanc": 49, "guidelin": [3, 11, 14, 57, 236], "guiver": 214, "gumbel": 240, "gumbel_distribut": 240, "gumbel_max": 240, "gumbel_min": 240, "gumbeldistribut": 240, "gupta": [0, 239], "guzman": 11, "gx": 98, "gy": 236, "gymbal": 61, "gyz": 233, "gz": 79, "h": [0, 14, 16, 28, 39, 67, 68, 69, 70, 71, 72, 74, 79, 84, 87, 88, 89, 93, 96, 110, 113, 115, 119, 124, 125, 130, 143, 148, 151, 154, 159, 162, 174, 176, 179, 184, 188, 195, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 219, 220, 228, 232, 236, 238, 239, 240, 241, 246, 253, 274, 286, 295, 302], "h0": 96, "h1": [46, 68, 154], "h2": [46, 154], "h3": 46, "h5": 81, "h_": [68, 79, 84, 93, 96, 115], "h_0": [79, 84], "h_1": [79, 84, 239], "h_2": [79, 239], "h_i": [69, 84], "h_n": [84, 96, 115, 216, 239], "h_name": [69, 253], "ha": [2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 16, 18, 22, 23, 28, 30, 32, 33, 34, 35, 36, 39, 41, 42, 43, 48, 49, 50, 52, 53, 54, 55, 56, 57, 65, 67, 68, 69, 70, 71, 72, 74, 77, 78, 79, 80, 82, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 100, 101, 103, 104, 105, 111, 113, 115, 117, 118, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 143, 144, 148, 150, 151, 152, 157, 163, 164, 174, 175, 184, 187, 192, 195, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 225, 227, 228, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 251, 252, 253, 254, 255, 256, 258, 259, 261, 264, 266, 268, 269, 271, 273, 274, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 305], "haaheim": 236, "hack": [210, 236, 249], "hackman": 128, "had": [13, 14, 18, 22, 27, 43, 52, 53, 80, 88, 89, 124, 128, 215, 216, 217, 220, 228, 230, 236, 238, 239, 254, 259, 285, 288, 291, 292], "hadamard": [120, 124, 174, 175, 186, 220], "hadamard_product": 120, "hadamard_transform": 91, "hadamardg": 174, "hadamardpow": [120, 220], "hadamardproduct": [120, 220], "hadn": 43, "hal": 110, "half": [16, 43, 46, 69, 88, 89, 93, 94, 96, 98, 104, 115, 117, 124, 128, 130, 135, 157, 159, 162, 187, 205, 211, 213, 215, 216, 228, 229, 230, 232, 240, 251, 258], "half_gcdex": [211, 216], "half_per": 211, "half_precis": 69, "half_wave_retard": 162, "hall": [70, 78, 240], "hallei": 69, "halt": 79, "halv": 215, "hamberg": 82, "hamburg": 258, "hamilton": [61, 72, 124], "hamiltonian": [72, 181], "hand": [4, 12, 13, 14, 18, 22, 27, 28, 31, 33, 36, 39, 41, 43, 50, 55, 68, 69, 71, 74, 80, 81, 88, 94, 96, 115, 118, 124, 128, 135, 139, 152, 157, 158, 162, 179, 182, 194, 199, 205, 207, 210, 211, 213, 215, 218, 230, 239, 251, 253, 255, 259, 271, 273, 290, 298], "handbook": [4, 70, 78, 79, 86, 96, 128], "handi": [9, 87, 88, 124, 220, 291], "handl": [5, 7, 11, 12, 14, 18, 21, 22, 27, 39, 41, 42, 43, 67, 69, 76, 80, 88, 94, 115, 116, 118, 122, 128, 129, 130, 135, 144, 170, 173, 179, 180, 185, 194, 209, 210, 216, 217, 226, 232, 236, 238, 241, 244, 252, 258, 259, 261, 291, 296], "handle_first": 115, "handle_nan": 69, "handler": [43, 62, 63, 64, 65, 66, 88, 95, 124], "handwritten": [116, 204], "hang": [12, 55, 124, 236, 237, 302, 305, 309], "hankel": [96, 115], "hankel1": [96, 220], "hankel2": [96, 220], "hankel_transform": 115, "hankelh1": [96, 220], "hankelh2": [96, 220], "hankeltransform": 115, "happen": [3, 4, 7, 11, 12, 13, 14, 15, 39, 41, 42, 43, 52, 61, 69, 80, 87, 88, 92, 100, 103, 112, 151, 185, 189, 195, 207, 213, 215, 216, 219, 228, 232, 236, 240, 259, 269, 288, 295, 296], "happi": 43, "happili": [115, 244], "hard": [3, 11, 12, 13, 14, 15, 22, 41, 80, 89, 124, 128, 190, 210, 220, 227, 236, 239, 288, 290], "harder": [4, 12, 13, 14, 41, 88, 113, 210, 251], "hardest": 89, "hardi": 128, "hardwar": [43, 69], "harm": 3, "harmless": [220, 292], "harmon": [88, 93, 128, 145, 169, 205, 220, 281], "harmonic_numb": 93, "harmonicnumb": [93, 220], "harmonicnumber2": 93, "harsh": [0, 239], "hartre": 145, "has_assoc_field": 211, "has_assoc_r": 211, "has_dup": 258, "has_empty_sequ": [87, 115], "has_finite_limit": [87, 115], "has_fre": 88, "has_integer_pow": 192, "has_only_gen": 216, "has_q_annihil": 190, "has_q_creat": 190, "has_reversed_limit": [87, 115], "has_varieti": 258, "has_xfre": 88, "hasattr": [13, 232, 254], "hash": [12, 14, 88, 211, 213, 221, 232, 236, 251, 253], "hashabl": [14, 15, 85, 88, 113, 258], "hasn": 27, "hat": [24, 32, 33, 35, 36, 124, 151, 199, 204, 268, 269, 271, 273, 274, 298], "hate": 220, "hav91": 70, "hava": 70, "have": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 21, 22, 23, 27, 28, 30, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 45, 46, 48, 50, 51, 53, 54, 55, 57, 59, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 78, 79, 80, 81, 84, 86, 87, 88, 89, 90, 92, 93, 94, 96, 98, 99, 103, 104, 106, 111, 112, 113, 115, 117, 118, 119, 120, 123, 124, 127, 128, 129, 130, 131, 132, 134, 135, 136, 141, 143, 144, 146, 148, 150, 152, 153, 154, 157, 174, 176, 179, 183, 185, 187, 188, 189, 190, 192, 193, 195, 198, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 222, 223, 225, 227, 228, 229, 230, 232, 233, 236, 238, 239, 240, 241, 242, 244, 246, 247, 249, 250, 251, 253, 254, 255, 258, 259, 261, 264, 266, 268, 269, 270, 271, 274, 285, 286, 288, 289, 290, 291, 292, 295, 296, 297, 298, 300, 301, 303, 306, 309], "haven": 16, "hbar": [69, 166, 172, 185, 191, 195, 197, 205], "hd": 89, "he": [5, 93, 113, 213], "he_n": [96, 216], "head": [4, 38, 68, 88, 238, 240, 246, 261, 291], "header": [3, 12, 69, 252, 253], "headquart": 89, "heat": 195, "heavi": [2, 12, 240, 291], "heavili": [3, 227, 237], "heavisid": [4, 11, 96, 113, 115, 220], "heavisidediracdelta": 96, "heavisidestepfunct": 96, "heavisidetheta": 220, "hebrew": 89, "hedetniemi": 258, "heidelberg": 213, "height": [13, 68, 69, 104, 120, 159, 206, 207, 220, 227, 274, 302], "heiko": 74, "heinz": 82, "held": [27, 67, 89, 244, 296], "heldo": 89, "helen": 89, "helium": 145, "hellman": [89, 128], "hello": [89, 258], "helloworld": 89, "help": [3, 4, 5, 7, 9, 11, 12, 14, 17, 18, 22, 30, 36, 41, 52, 60, 69, 78, 88, 96, 113, 115, 124, 128, 129, 130, 135, 141, 165, 175, 206, 215, 217, 220, 229, 230, 233, 236, 237, 240, 251, 252, 253, 259, 281, 289, 292], "helper": [12, 13, 51, 67, 69, 79, 83, 86, 88, 113, 115, 116, 117, 175, 177, 186, 217, 227, 230, 233, 236, 237, 239, 252, 281], "hemispher": 274, "henc": [11, 33, 67, 69, 78, 79, 88, 90, 94, 96, 100, 113, 116, 118, 128, 139, 206, 207, 208, 213, 220, 230, 233, 237, 239, 251, 255, 269, 270, 271, 291, 296], "henri": 214, "hensel": 213, "hep": 144, "her": 239, "herbert": 87, "here": [3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 18, 21, 22, 25, 27, 28, 30, 31, 32, 33, 35, 36, 37, 39, 41, 42, 43, 48, 50, 51, 52, 53, 54, 55, 58, 59, 63, 64, 69, 70, 72, 74, 77, 78, 79, 80, 86, 87, 88, 89, 90, 92, 93, 94, 96, 104, 105, 106, 110, 111, 113, 115, 118, 124, 127, 128, 129, 130, 134, 135, 139, 143, 147, 152, 180, 185, 190, 204, 206, 207, 209, 210, 211, 213, 215, 216, 217, 220, 221, 227, 229, 230, 232, 233, 236, 238, 239, 240, 244, 245, 252, 253, 255, 256, 258, 259, 269, 271, 273, 284, 285, 286, 288, 290, 291, 292, 294, 295, 296, 298, 300, 301, 302, 308, 309, 310], "hermetian": 173, "hermit": [115, 124, 125, 209, 215, 216, 220, 240], "hermite_distribut": 240, "hermite_normal_form": [125, 209, 215], "hermite_poli": [96, 216], "hermite_polynomi": 96, "hermite_prob": 96, "hermite_prob_poli": [96, 216], "hermite_quadratur": 115, "hermite_rul": 115, "hermiteh": [96, 220], "hermitepolynomi": 96, "hermitian": [41, 53, 65, 88, 119, 124, 173, 179, 190, 220], "hermitian_adjoint": 173, "hermitian_matrix": 41, "hermitian_transpos": 173, "hermitianhandl": 65, "hermitianoper": [65, 179], "hermitianpred": 65, "heroic": [216, 238], "herrlich": 68, "hertz": 141, "hessenberg": 124, "hessenbergdecomposit": 124, "hessian": 124, "hessian_matrix": 124, "heurisch": [11, 13, 115], "heurist": [14, 15, 41, 55, 80, 113, 115, 124, 213, 214, 227, 229, 232, 238, 239, 251, 286, 296], "heuristicgcdfail": 213, "hex": 128, "hfst": 89, "hg": 79, "hg2sfuei7t": 89, "hgh": 79, "hi": [233, 238], "hidden": [12, 15, 32], "hide": [89, 220], "hierarch": 88, "hierarchi": [13, 133, 220, 240], "high": [4, 5, 7, 11, 12, 16, 30, 39, 41, 47, 48, 52, 69, 88, 92, 93, 116, 128, 204, 209, 210, 213, 215, 216, 218, 220, 233, 238, 281, 292], "higher": [14, 16, 39, 48, 67, 69, 88, 90, 92, 96, 99, 124, 130, 203, 205, 207, 209, 210, 213, 216, 222, 223, 227, 229, 232, 236, 238, 241, 259, 286], "highest": [16, 21, 69, 82, 117, 207, 216, 223, 233, 236], "highest_root": 117, "highli": [5, 88, 92, 140, 210, 216, 225, 253], "highlight": [11, 14], "hilbert": [177, 179, 185, 281], "hilbert_spac": [176, 179, 188], "hilbertspac": 176, "hill": [18, 29, 34, 89, 96, 115, 152, 199, 202, 264, 299], "hill_ciph": 89, "hillgart": 264, "hinder": 236, "hing": [24, 135, 136], "hint": [4, 12, 14, 30, 43, 68, 72, 79, 88, 91, 94, 115, 124, 128, 132, 143, 167, 171, 187, 189, 190, 199, 216, 227, 230, 238, 296], "hint_integr": 236, "hintnam": [236, 237], "hir": 88, "hire": [18, 46, 55, 124, 135, 136, 139, 141, 206, 223, 298], "histogram": 255, "histor": [13, 15, 37, 43, 89, 209, 236, 240], "histori": [11, 30], "hit": [88, 291], "hjeb": 89, "hk": [143, 233], "hline": 220, "hnf": [125, 209, 215], "hnf_modulu": 215, "ho05": [70, 78], "hobj": 220, "hoc": 113, "hoeij": 214, "hoeij02": 214, "hoeij04": [213, 214], "hoffmann": 264, "hol_coneq": [26, 152, 305], "hold": [14, 15, 16, 28, 43, 64, 68, 79, 84, 88, 89, 90, 94, 96, 110, 113, 124, 127, 130, 143, 145, 151, 153, 154, 186, 216, 230, 232, 236, 240, 253, 296], "holder": 88, "hole": 190, "holomorph": [88, 95, 113], "holonom": [13, 25, 26, 109, 112, 152, 157, 275, 282, 298, 300, 301, 303, 304, 305], "holonomic_constraint": 157, "holonomic_funct": 106, "holonomicfunct": [107, 110, 111], "holonomicsequ": 110, "holt": [70, 78, 79, 86], "holzer": 233, "hom": 68, "home": [12, 135, 215, 233], "homebrew": 8, "homeier": 205, "homeier96": 205, "homogen": [51, 61, 111, 115, 124, 143, 211, 213, 216, 233, 236, 237, 240], "homogeneous_differential_equ": 236, "homogeneous_ord": [211, 216, 233, 236], "homogeneouscoeffbest": 236, "homogeneouscoeffsubsdepdivindep": 236, "homogeneouscoeffsubsindepdivdep": 236, "homogeneousgeneralquadrat": 233, "homogeneousternaryquadrat": 233, "homogeneousternaryquadraticnorm": 233, "homomoprh": 207, "homomorph": 79, "homomorphismfail": 213, "homonym": 13, "hongguang": [231, 276], "hood": [2, 11, 15], "hook": [43, 129, 130, 220], "hookrightarrow": 88, "hope": [14, 21, 39, 79, 207], "hopefulli": [16, 40, 113], "horel": 89, "horizont": [13, 43, 57, 68, 98, 101, 103, 124, 137, 139, 157, 162, 206, 209, 220], "horizontal_direct": 68, "horner": [30, 88, 209, 213, 216], "horner_schem": 216, "horowitz": 115, "host": [2, 5], "hostedtoolcach": 251, "hostnam": 253, "household": 124, "how": [2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 25, 26, 28, 30, 35, 37, 38, 39, 40, 41, 42, 43, 48, 49, 68, 69, 71, 79, 80, 87, 88, 94, 95, 96, 100, 111, 115, 118, 120, 124, 128, 130, 135, 147, 151, 152, 155, 161, 162, 178, 182, 185, 186, 187, 192, 193, 199, 206, 207, 210, 211, 213, 215, 219, 220, 223, 227, 228, 230, 232, 233, 236, 237, 238, 240, 246, 251, 252, 253, 254, 256, 258, 259, 261, 269, 286, 288, 290, 291, 292, 293, 295, 296, 298, 300, 304, 308], "howev": [0, 2, 3, 4, 5, 8, 11, 12, 13, 14, 15, 16, 18, 22, 27, 31, 36, 37, 39, 41, 42, 43, 48, 51, 52, 55, 62, 64, 69, 71, 79, 80, 84, 87, 88, 89, 90, 93, 94, 96, 98, 113, 115, 118, 124, 128, 129, 130, 131, 134, 135, 139, 143, 147, 151, 152, 154, 155, 157, 158, 190, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 221, 227, 228, 229, 230, 232, 236, 237, 238, 239, 251, 252, 259, 268, 269, 273, 285, 288, 290, 292, 296, 297], "hp": 89, "hpobwzcfbubsnz": 89, "hradiu": 98, "hrzqe": 89, "hsin": 214, "hstack": [124, 209, 298], "ht": 115, "hta": 301, "htangl": 301, "htm": [80, 96, 115, 233], "html": [2, 4, 5, 8, 11, 12, 65, 69, 72, 80, 81, 82, 88, 89, 91, 93, 94, 96, 98, 104, 105, 115, 116, 124, 128, 141, 214, 220, 223, 225, 228, 229, 233, 236, 240, 252, 254, 256, 258, 259, 292], "htmldoc": 8, "http": [0, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 34, 41, 43, 59, 61, 63, 64, 65, 67, 68, 69, 71, 72, 74, 76, 77, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 104, 105, 106, 110, 113, 115, 116, 117, 118, 120, 124, 128, 135, 141, 143, 145, 146, 159, 161, 162, 163, 165, 166, 167, 171, 172, 173, 176, 178, 179, 188, 190, 199, 201, 202, 204, 205, 209, 211, 214, 216, 219, 220, 223, 225, 227, 228, 229, 232, 233, 236, 239, 240, 252, 253, 254, 256, 258, 259, 261, 264, 266, 270, 272, 274, 292, 295, 302], "hu": [128, 209], "hubbard": 153, "huge": [115, 128, 216, 256], "hull": 105, "hulpk": 79, "human": [4, 11, 37, 113, 192, 216, 220, 298, 299], "humphrei": 117, "hundr": [129, 259, 290], "hurdl": 22, "hurt": 12, "hurwitz": [93, 96], "hurwitz_zeta_funct": 96, "hw": [166, 191], "hwp": 162, "hxz": 233, "hy": 98, "hybrid": 210, "hydrogen": [69, 281], "hyper": [15, 88, 93, 96, 107, 110, 220, 222, 230, 232, 238, 240, 296], "hyper_algorithm": 222, "hyper_r": 222, "hyperbol": [96, 130, 131, 217, 239, 292, 296], "hyperbolic_funct": 94, "hyperbolicfunct": 94, "hyperegeometr": 232, "hyperexpand": [88, 96, 110, 113, 230, 232], "hyperfocal_dist": 163, "hypergeometr": [92, 93, 106, 112, 113, 214, 231, 232, 236, 238, 240, 276, 296], "hypergeometric_distribut": 240, "hypergeometricdistribut": 240, "hypergeometricfunct": 96, "hypergeometricpfq": 220, "hyperlink": 4, "hyperplan": 117, "hypersimilar": 232, "hypersimp": [87, 232], "hypot": [69, 220], "hypotenus": [69, 104, 158], "hypothesi": 2, "hypothet": 255, "hz": 141, "i": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 18, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 170, 171, 173, 174, 176, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 258, 259, 261, 263, 264, 266, 267, 268, 269, 270, 271, 273, 274, 285, 286, 288, 289, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310], "i0": [144, 162, 246], "i1": [22, 30, 135, 144, 246], "i12": 30, "i2": [22, 30, 144, 246], "i23": 30, "i3": [22, 30, 124, 144, 246], "i31": 30, "i4": [144, 246], "i5": 144, "iT": 113, "i_": [96, 113, 230, 240, 241], "i_0": 240, "i_1": [78, 190, 216, 241], "i_2": [78, 190, 216], "i_a": 241, "i_b": 241, "i_b_bo": 22, "i_b_o": 22, "i_block": 302, "i_c_d": 22, "i_k": 240, "i_n": [215, 216, 241], "i_p_o": 22, "i_p_q": 22, "i_pendulum": 302, "i_r": 78, "i_xi": [98, 104], "i_xx": [98, 104], "i_yi": [98, 104], "ia": [127, 298], "iamit": 239, "ib": 94, "ibin": [118, 258], "ibm": [11, 232], "ibzz": 306, "ic": [55, 128, 236, 298], "icomp": 246, "icomp1": 246, "icomp2": 246, "icosahedr": 81, "id": [68, 84, 94, 242, 298], "id_a": 68, "id_b": 68, "idea": [3, 7, 11, 12, 14, 15, 22, 41, 42, 43, 73, 79, 86, 88, 89, 100, 106, 113, 115, 128, 144, 190, 194, 195, 207, 209, 210, 229, 232, 233, 236, 239, 253, 259, 296], "ideal": [12, 22, 23, 35, 41, 69, 125, 150, 154, 199, 209, 211, 213, 214, 215, 216, 217, 232, 239, 264], "idempot": 69, "ident": [3, 14, 15, 16, 18, 28, 43, 45, 65, 68, 70, 78, 79, 80, 86, 88, 89, 93, 94, 104, 111, 117, 120, 124, 144, 146, 151, 152, 174, 176, 179, 195, 207, 208, 209, 213, 214, 215, 216, 220, 229, 232, 236, 239, 244, 246, 251, 258, 259, 261, 269, 288, 292, 296], "identif": [113, 239], "identifi": [4, 12, 13, 14, 25, 41, 42, 67, 81, 88, 91, 92, 115, 124, 134, 139, 157, 178, 179, 207, 210, 211, 221, 229, 232, 236, 237, 239, 240, 259], "identity_hom": 207, "identityfunct": 94, "identityg": 174, "identitymatrix": 220, "identitymorph": 68, "identityoper": 179, "ideologi": [69, 239], "idiff": [88, 105], "idiom": [15, 288, 289], "idl": 69, "idx": [67, 69, 220, 244, 245, 252], "ie": [80, 233], "ieee": [88, 89], "ieilehfstsfxe": 89, "ieilh": 89, "ieilhhfstsfqy": 89, "ifascii_nougli": 220, "ifels": 220, "iff": [35, 36, 43, 65, 74, 80, 89, 118, 124, 207, 215, 230, 233, 251], "ifft": 91, "ifndef": [69, 253], "ifork11": 301, "ifork22": 301, "ifork31": 301, "ifork33": 301, "ifort": 2, "ifp": 67, "iframe11": 301, "iframe22": 301, "iframe31": 301, "iframe33": 301, "ifwht": 91, "igcd": [88, 128, 208], "igcd_lehm": 88, "igcdex": 88, "ignor": [11, 12, 13, 14, 16, 37, 43, 69, 79, 88, 89, 93, 94, 98, 103, 113, 118, 124, 128, 143, 148, 149, 155, 187, 190, 199, 206, 216, 220, 221, 232, 238, 239, 252, 296, 301], "ignore_exception_detail": 251, "ignore_warn": [3, 148, 249, 254, 256, 259], "igusa": 240, "ii": [41, 94, 113, 115, 216, 220, 228, 236, 239, 242], "iii": [115, 220, 236], "iin": 117, "ij": [65, 124, 190, 195, 205, 240, 242], "ijk": [69, 245], "ijklm": 242, "ijr22d": 89, "ijth": 117, "il": 240, "ilcm": [88, 128], "ild_deflection_jump": 135, "ild_moment": 135, "ild_react": 135, "ild_rotation_jump": 135, "ild_shear": 135, "ild_vari": 135, "ilex": 207, "ill": [48, 130, 193], "illinoi": 67, "illumin": 4, "illustr": [69, 124, 148, 195, 210, 223, 227, 304, 305], "im": [43, 66, 88, 94, 113, 121, 207, 220, 221, 228, 236, 292], "imag": [2, 8, 24, 30, 35, 36, 45, 79, 151, 159, 163, 207, 211, 213, 220, 228, 239, 269, 305, 307], "imagemagick": 8, "imageset": [228, 239, 297], "imaginari": [3, 4, 16, 30, 41, 43, 48, 52, 54, 61, 65, 66, 88, 92, 94, 96, 124, 210, 211, 216, 220, 221, 228, 232, 239], "imaginary_numb": [41, 65, 88], "imaginary_unit": [88, 220], "imaginaryhandl": 65, "imaginarypred": 65, "imaginaryunit": [12, 88, 220], "imath": 230, "imbu": 90, "immateri": 89, "immedi": [3, 12, 14, 41, 53, 71, 79, 88, 113, 118, 157, 190, 207, 210, 241, 252, 259], "immut": [13, 14, 15, 36, 88, 119, 122, 126, 211, 236, 241, 279, 285, 292], "immutabledensematrix": [90, 119, 120, 121, 124, 240], "immutabledensendimarrai": [14, 241], "immutablematrix": [119, 120, 124, 143, 157, 199, 240, 264, 267, 292], "immutablesparsendimarrai": 241, "impact": 13, "implement": [2, 4, 5, 11, 12, 13, 14, 15, 17, 18, 21, 22, 23, 28, 32, 34, 35, 36, 38, 42, 43, 52, 54, 56, 57, 58, 61, 62, 63, 64, 67, 68, 69, 70, 73, 74, 78, 79, 80, 85, 88, 89, 91, 93, 94, 96, 99, 101, 108, 109, 111, 112, 115, 118, 119, 124, 128, 129, 130, 131, 132, 134, 147, 150, 155, 159, 161, 162, 165, 174, 175, 183, 184, 186, 194, 200, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 224, 227, 228, 229, 232, 233, 236, 237, 238, 239, 240, 244, 245, 255, 258, 259, 272, 275, 279, 286, 290, 296, 298], "implemented_funct": [14, 129, 252, 259], "impli": [5, 14, 15, 16, 18, 41, 61, 65, 69, 79, 118, 139, 190, 206, 211, 213, 220, 228, 230, 236, 238, 241, 244, 245, 258, 271], "implic": [14, 88, 118, 213], "implicit": [14, 31, 41, 55, 69, 86, 88, 130, 134, 152, 153, 157, 206, 236, 238, 242, 245, 252, 253, 264, 267, 274, 288], "implicit_appl": 130, "implicit_circl": 274, "implicit_multipl": 130, "implicit_multiplication_appl": 130, "implicitli": [14, 15, 41, 42, 43, 80, 88, 115, 207, 210, 238], "implicitregion": [264, 267, 274], "implicitseri": 206, "implieddoloop": 69, "import": [2, 3, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 141, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 264, 266, 267, 268, 269, 270, 271, 274, 285, 286, 288, 290, 291, 292, 294, 295, 296, 297, 298, 301, 302, 303, 305, 306, 308, 309, 310], "import_modul": [2, 12], "importantli": [14, 41, 43, 217, 255], "importerror": 2, "importlib": 13, "impos": [3, 18, 136], "imposs": [3, 4, 12, 13, 14, 15, 43, 55, 88, 210, 229, 236, 237, 249, 286, 288, 296], "impract": [236, 286], "imprecis": 13, "impress": 16, "improp": [96, 115], "improperli": 88, "improv": [2, 3, 7, 11, 12, 13, 14, 18, 23, 42, 43, 88, 113, 157, 206, 210, 213, 214, 216, 217, 219, 221, 236, 239, 245, 286, 292], "impuls": [46, 143], "impulse_respons": 46, "impulse_response_numerical_data": 141, "impulse_response_plot": 141, "imul_num": 211, "in_terms_of_gener": 207, "inabl": 237, "inaccur": 211, "inappropri": 90, "inc": [34, 202, 214], "incent": 104, "inch": 206, "incid": [159, 163], "incircl": 104, "inclin": [137, 207], "includ": [2, 3, 4, 5, 8, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 25, 27, 30, 33, 36, 41, 43, 45, 48, 51, 52, 56, 59, 64, 65, 67, 68, 69, 80, 84, 87, 88, 89, 90, 92, 93, 94, 96, 100, 106, 113, 115, 118, 120, 122, 123, 124, 128, 129, 130, 131, 134, 135, 145, 150, 157, 170, 174, 179, 184, 187, 188, 198, 208, 209, 211, 212, 213, 215, 216, 219, 220, 221, 226, 227, 228, 230, 232, 235, 236, 237, 238, 240, 243, 246, 249, 251, 253, 254, 255, 256, 258, 264, 266, 268, 273, 275, 286, 290, 291, 292, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "include_dir": 252, "include_numer": 22, "include_pydi": 22, "include_self": 215, "includepr": [211, 213, 216], "inclus": [5, 13, 87, 137, 139, 183, 207, 226, 227, 228, 239], "inclusion_hom": 207, "incom": [215, 240], "incommensur": 67, "incompat": 50, "incomplet": [2, 4, 5, 88, 93, 96, 130, 208, 210, 216, 220, 222, 238, 239], "incomplete_gamma_funct": 96, "inconclus": 238, "incongru": 230, "inconsist": [35, 41, 43, 62, 64, 87, 195, 199, 203, 232, 236, 238, 239], "inconsistentassumpt": 41, "inconveni": 220, "incorpor": [0, 2, 19, 39, 133, 208, 232, 300], "incorrect": [3, 5, 11, 12, 13, 42, 43, 54, 79, 88, 98, 128, 135, 141, 203, 209, 211, 236, 239, 252, 255, 256], "incorrectli": [4, 11, 13, 14, 43, 97, 98, 124, 208], "increas": [16, 18, 21, 32, 35, 36, 53, 67, 68, 80, 86, 87, 88, 91, 92, 96, 124, 128, 129, 157, 174, 199, 201, 210, 213, 215, 216, 222, 225, 229, 236, 240, 256, 258], "increment": [69, 79, 80, 81, 87, 104, 128, 240], "incur": [69, 129], "ind": [84, 222, 246], "inde": [3, 12, 14, 39, 43, 76, 79, 87, 113, 128, 207, 230, 236, 247, 251, 290], "indefinit": [12, 15, 61, 94, 112, 113, 115, 124, 130, 211, 213, 214, 216, 225, 286], "indent": [4, 16, 261], "indent_cod": 220, "indep": 236, "indep_div_dep": 236, "independ": [15, 16, 22, 25, 27, 33, 43, 53, 65, 67, 69, 79, 87, 88, 90, 96, 105, 113, 115, 117, 124, 143, 152, 153, 157, 188, 195, 206, 208, 210, 215, 216, 222, 223, 230, 232, 233, 236, 237, 238, 239, 240, 246, 251, 252, 271, 290, 291, 298, 301, 303, 305], "indetermin": [41, 42, 88, 124, 213, 225, 238], "indeterminate_form": 88, "index": [2, 8, 11, 12, 13, 16, 22, 30, 31, 43, 48, 55, 56, 57, 61, 69, 77, 79, 80, 84, 87, 88, 89, 90, 93, 94, 96, 99, 104, 113, 115, 118, 120, 124, 127, 128, 130, 132, 143, 157, 159, 161, 163, 164, 174, 183, 185, 187, 190, 195, 199, 206, 207, 209, 211, 215, 216, 217, 220, 225, 226, 230, 238, 240, 241, 243, 244, 246, 247, 252, 279], "index_group": 190, "index_method": 244, "index_order_new": [241, 242], "index_order_old": [241, 242], "index_typ": 246, "index_vector": 61, "indexconformanceexcept": 244, "indexedbas": [67, 69, 87, 88, 220, 238, 244, 245, 252], "indexerror": [80, 124, 216], "indexing_maxterm": 118, "indexing_minterm": 118, "indic": [3, 4, 11, 12, 16, 32, 38, 41, 52, 55, 56, 67, 68, 69, 70, 72, 77, 79, 80, 81, 83, 84, 86, 87, 88, 91, 92, 93, 96, 98, 103, 104, 113, 115, 118, 120, 124, 127, 128, 144, 157, 174, 185, 187, 188, 190, 195, 199, 205, 209, 210, 211, 215, 216, 217, 220, 227, 228, 229, 232, 233, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 258, 292, 305], "indices_contain_equal_inform": [96, 190], "indici": [110, 111, 112, 236], "indirect": [12, 88, 90, 96, 128, 190, 236], "indirectli": [14, 41], "individu": [11, 12, 13, 28, 41, 43, 46, 50, 53, 88, 94, 99, 104, 105, 117, 120, 124, 143, 162, 180, 184, 205, 228, 236, 238, 251, 292], "induc": [88, 124, 215, 229, 258], "induct": 207, "ineffici": [51, 88, 124, 210], "inequ": [14, 15, 41, 42, 43, 49, 88, 206, 213, 228, 230, 234, 276], "inequival": 113, "inert": [215, 236], "inerti": [25, 26, 28, 30, 148, 152, 154, 157, 298, 301, 302, 305, 308], "inertia": [13, 21, 22, 23, 30, 32, 35, 36, 135, 136, 146, 148, 150, 157, 199, 215, 281, 299, 301, 302, 303, 306, 308, 309, 310], "inertia_dyad": 199, "inertia_of_point_mass": [13, 154], "inertia_tupl": [148, 154], "inexact": [14, 16, 57, 88, 209, 211], "inexpens": 14, "inexpress": 216, "inextens": 18, "inf": [69, 80, 88, 124, 211, 213, 216, 228, 236, 240], "infal": 288, "infanc": 100, "infeas": [213, 216], "infeasiblelperror": 238, "infer": [41, 63, 64, 80, 88, 115, 210, 219, 220, 225, 230, 236, 252], "infimum": 228, "infin": [15, 41, 50, 65, 87, 88, 93, 94, 96, 101, 113, 115, 124, 163, 211, 213, 216, 220, 225, 226, 227, 228, 232, 235, 236, 240], "infinit": [41, 43, 50, 51, 65, 87, 88, 89, 92, 93, 94, 101, 102, 115, 124, 128, 143, 158, 176, 195, 207, 215, 220, 221, 222, 225, 226, 227, 228, 232, 233, 235, 238, 245, 258, 286, 296, 297, 307], "infinite_product": 87, "infinitehandl": 65, "infinitepred": 65, "infinitesim": [33, 236, 271], "infix": 88, "inflect": 205, "influenc": [12, 18, 70, 135, 158, 207, 208, 298], "info": [5, 9, 11, 16, 143, 220, 236, 237], "inform": [2, 3, 4, 5, 7, 9, 11, 14, 15, 16, 22, 23, 24, 25, 27, 28, 30, 31, 36, 38, 41, 42, 45, 48, 57, 58, 64, 65, 68, 69, 70, 74, 79, 80, 86, 88, 89, 93, 96, 100, 113, 115, 117, 120, 124, 128, 129, 130, 136, 148, 149, 150, 151, 152, 154, 157, 185, 190, 195, 199, 204, 206, 209, 210, 215, 216, 220, 221, 227, 230, 232, 233, 238, 239, 240, 244, 245, 246, 251, 252, 253, 254, 255, 264, 269, 271, 296, 298, 301], "informatik": 258, "informatiqu": 217, "infrastructur": [220, 237], "infti": [4, 14, 15, 41, 65, 87, 88, 89, 93, 94, 96, 113, 115, 130, 207, 216, 223, 227, 230, 236, 239, 240, 286, 290, 296], "inftyright": 239, "infunct": 88, "inher": [22, 259, 288], "inherit": [13, 62, 88, 95, 118, 120, 121, 131, 134, 147, 151, 155, 158, 179, 188, 205, 220, 240, 245, 253, 254], "inhomogen": [233, 236, 238], "inhomogeneousgeneralquadrat": 233, "inhomogeneousternaryquadrat": 233, "init": 238, "init_cond": 90, "init_ipython_sess": 116, "init_print": [13, 14, 48, 53, 59, 69, 80, 92, 115, 116, 124, 136, 204, 207, 208, 219, 286, 290, 292, 295, 296, 297], "init_python_sess": 116, "init_sess": [2, 116, 295], "init_subgroup": 79, "init_vprint": [28, 31, 35, 36, 148, 154, 156, 199, 201, 203, 204, 302], "initcond": [107, 109, 110], "initi": [5, 15, 18, 22, 25, 26, 27, 30, 31, 36, 41, 46, 54, 63, 79, 83, 88, 89, 90, 93, 96, 104, 106, 107, 110, 111, 112, 113, 115, 116, 128, 130, 136, 137, 139, 141, 143, 148, 152, 154, 157, 162, 170, 179, 200, 201, 204, 205, 213, 215, 216, 220, 226, 230, 232, 236, 238, 239, 245, 253, 260, 261, 264, 266, 267, 268, 269, 298, 301, 303, 305, 306, 310], "initial_condit": [22, 30], "initial_exp": 141, "initializing_quadratic_siev": 128, "initialor": 55, "inject": [14, 79, 88, 207, 211, 216, 292], "inlin": [4, 12, 116, 204, 220, 253, 298], "inlist": 199, "inner": [41, 55, 87, 113, 124, 130, 173, 176, 177, 182, 184, 185, 188, 190, 199, 203, 209, 215, 222, 264, 281], "inner_endomorph": 215, "inner_product": 178, "innerendomorph": 215, "innermost": 88, "innerproduct": [173, 178, 179, 185, 187, 190], "inout": 69, "inoutargu": [69, 253], "inp_vec": [27, 305], "inplac": 211, "input": [4, 5, 11, 12, 15, 16, 18, 21, 22, 27, 30, 31, 43, 46, 52, 55, 61, 67, 70, 84, 88, 89, 91, 92, 93, 94, 102, 115, 117, 118, 124, 128, 130, 131, 132, 134, 137, 139, 140, 141, 143, 151, 153, 157, 163, 186, 199, 201, 203, 209, 210, 211, 213, 216, 217, 218, 219, 220, 221, 228, 232, 233, 236, 238, 240, 242, 252, 253, 255, 256, 258, 259, 261, 285, 291, 292, 296, 298, 301, 305], "input_var": [131, 134], "inputargu": [69, 253], "inputoutput": 253, "inquiri": 88, "inradiu": 104, "inria": [110, 115], "insconsist": 88, "inscrib": 104, "insensit": [30, 69, 124, 220, 251, 253], "insert": [18, 68, 70, 124, 130, 134, 135, 185, 190, 220, 240, 261, 298], "insertion_angl": 298, "insertion_dist": 298, "insertion_segment_length": 298, "insid": [5, 12, 13, 14, 15, 16, 21, 27, 36, 43, 79, 80, 85, 88, 98, 99, 104, 135, 149, 189, 190, 194, 195, 204, 216, 220, 228, 230, 233, 238, 239, 240, 242, 244, 255, 259, 291, 292, 305], "insidepoli": 104, "insight": [50, 289, 300], "inspect": [12, 13, 18, 41, 124, 132, 134, 215, 226, 257, 259, 283], "inspir": [237, 292, 302], "instal": [2, 5, 12, 15, 16, 45, 92, 129, 209, 210, 211, 220, 252, 259, 289, 295], "instanc": [1, 3, 4, 5, 12, 13, 14, 15, 18, 22, 31, 33, 38, 41, 42, 43, 62, 63, 64, 66, 68, 69, 71, 79, 81, 83, 88, 90, 92, 93, 94, 96, 101, 104, 105, 106, 111, 112, 115, 116, 120, 123, 124, 128, 130, 131, 132, 134, 135, 144, 147, 148, 152, 155, 157, 158, 163, 170, 174, 180, 184, 185, 187, 189, 190, 199, 201, 204, 206, 209, 210, 211, 215, 216, 217, 218, 220, 228, 230, 232, 236, 238, 239, 240, 244, 245, 246, 251, 252, 253, 255, 258, 259, 264, 266, 267, 268, 269, 271, 273, 285, 286, 291, 296, 297, 303, 306], "instantan": [18, 271], "instanti": [18, 61, 68, 69, 80, 88, 96, 101, 103, 104, 120, 130, 131, 132, 134, 147, 152, 155, 158, 180, 188, 199, 207, 209, 211, 215, 240, 264, 268], "instantia": 206, "instead": [2, 3, 4, 5, 8, 11, 12, 13, 14, 15, 16, 18, 22, 27, 30, 32, 33, 35, 36, 37, 41, 42, 43, 50, 52, 53, 55, 56, 57, 60, 61, 62, 64, 68, 69, 79, 81, 84, 88, 90, 91, 92, 93, 96, 115, 116, 118, 120, 121, 124, 128, 131, 134, 141, 144, 146, 147, 157, 188, 192, 199, 204, 206, 207, 209, 210, 211, 213, 215, 216, 218, 220, 222, 230, 232, 236, 238, 239, 240, 244, 245, 246, 249, 254, 255, 256, 258, 259, 271, 274, 285, 286, 288, 290, 291, 292, 296, 297, 301, 305], "institut": 217, "instruct": [2, 4, 5, 7, 8, 9, 11, 13, 16, 39, 44, 58, 69, 220, 238, 252, 253, 304], "insuffici": [37, 124], "int": [2, 4, 5, 12, 13, 14, 15, 16, 41, 42, 43, 61, 67, 69, 74, 80, 88, 89, 90, 93, 94, 96, 97, 104, 113, 115, 116, 118, 124, 125, 128, 130, 132, 134, 141, 143, 151, 170, 174, 175, 184, 199, 201, 203, 204, 205, 206, 210, 211, 215, 216, 217, 220, 222, 223, 225, 233, 236, 237, 240, 252, 256, 258, 259, 261, 288, 290, 291, 295, 296], "int1": [63, 64], "int16": 69, "int2": [63, 64], "int32": 69, "int64": [14, 69, 240], "int8": 69, "int_": [96, 112, 113, 115, 216, 223, 286, 290], "int_0": [14, 96, 113, 115, 286, 296], "int_1": [96, 113, 130], "int_a": 115, "int_fram": 13, "int_l": [96, 113, 230], "int_to_integ": 116, "int_x": 96, "intact": [3, 13, 69, 252], "intbasetyp": 69, "intc": [69, 130], "intcurve_diffequ": 90, "intcurve_seri": 90, "integ": [2, 4, 5, 12, 14, 15, 16, 41, 43, 50, 51, 52, 62, 63, 64, 65, 67, 69, 70, 74, 77, 79, 80, 81, 82, 84, 87, 88, 89, 90, 91, 92, 93, 96, 98, 101, 112, 113, 115, 116, 117, 118, 120, 124, 125, 128, 130, 134, 135, 137, 143, 145, 151, 179, 184, 186, 187, 188, 190, 192, 199, 201, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 222, 225, 226, 227, 228, 229, 230, 232, 233, 236, 238, 239, 240, 244, 245, 246, 252, 253, 255, 258, 261, 286, 288, 291, 295, 296], "integer_as_sum_of_three_squar": 233, "integer_el": 65, "integer_log": 88, "integer_nthroot": [88, 94, 128], "integer_to_term": 118, "integerelementshandl": 65, "integerelementspred": 65, "integerhandl": 65, "integerpartit": [77, 258], "integerpred": 65, "integers_onli": 206, "integr": [2, 11, 12, 14, 15, 16, 18, 22, 23, 30, 32, 33, 38, 49, 59, 61, 67, 80, 87, 88, 90, 93, 94, 106, 107, 108, 111, 117, 123, 124, 127, 128, 130, 143, 145, 150, 152, 157, 176, 185, 188, 191, 194, 200, 205, 207, 210, 211, 213, 214, 216, 217, 220, 222, 223, 230, 236, 237, 240, 253, 261, 264, 267, 268, 271, 272, 276, 279, 287, 290, 295, 298], "integral_basi": [211, 215], "integral_step": 115, "integraltransform": 115, "integraltransformerror": 115, "integrand": [12, 92, 96, 112, 113, 115, 130, 230, 286], "integrate_result": 185, "integration_techniqu": 115, "integration_vari": 286, "integstp": 22, "intellig": [214, 232, 236, 296], "intelligenc": 74, "intend": [2, 3, 4, 7, 9, 11, 12, 13, 14, 18, 37, 41, 88, 89, 99, 108, 113, 128, 130, 133, 149, 154, 185, 209, 210, 211, 215, 218, 220, 233, 236, 237, 249, 254, 261, 285, 298], "intens": [152, 153, 159, 162], "intent": [12, 14, 41, 69, 87, 88, 130, 209, 253], "intent_in": 69, "intent_out": 69, "intention": 88, "intenum": 134, "interact": [0, 11, 14, 15, 30, 36, 37, 52, 60, 88, 102, 115, 121, 124, 155, 187, 204, 210, 211, 232, 240, 256, 262, 275, 283, 288, 290, 291, 295, 296], "interactive_travers": 13, "interactiveconsol": [116, 204], "interchang": [15, 84, 87, 113, 133, 236], "interconnect": [18, 140, 143, 148], "interest": [7, 11, 14, 16, 18, 36, 37, 43, 48, 51, 57, 84, 88, 90, 93, 94, 104, 113, 115, 124, 128, 130, 155, 190, 195, 207, 211, 215, 216, 217, 219, 227, 230, 232, 233, 238, 239, 252, 253, 269, 286, 289, 291, 292, 293, 296, 301], "interf": 239, "interfac": [2, 5, 7, 9, 11, 12, 15, 18, 23, 34, 36, 52, 67, 88, 116, 131, 133, 151, 159, 185, 204, 209, 210, 213, 218, 239, 252, 253], "interfer": [41, 220], "interfram": [151, 203], "interior": [104, 216, 228], "interior_angl": 104, "intermedi": [15, 18, 22, 24, 35, 69, 70, 111, 124, 151, 174, 184, 192, 193, 199, 203, 239, 253, 293, 301, 306, 308], "intern": [3, 13, 14, 15, 16, 27, 28, 41, 42, 50, 67, 69, 70, 79, 88, 91, 92, 93, 96, 104, 105, 108, 119, 124, 128, 130, 134, 136, 139, 141, 163, 184, 185, 195, 207, 209, 211, 212, 214, 216, 218, 220, 230, 232, 235, 236, 237, 238, 239, 240, 244, 246, 249, 253, 255, 258, 282, 291, 295, 301], "internal_forc": 139, "interpol": [30, 67, 93, 97, 213, 216], "interpolating_poli": [96, 216], "interpolating_splin": 96, "interpret": [16, 21, 42, 55, 57, 69, 79, 87, 88, 93, 94, 96, 101, 104, 115, 120, 124, 128, 130, 195, 206, 208, 215, 216, 220, 227, 233, 238, 239, 240, 245, 251, 252, 255, 261, 292], "interrog": 56, "interrupt": 251, "intersect": [4, 41, 52, 67, 68, 79, 98, 99, 101, 102, 103, 104, 105, 124, 155, 163, 207, 216, 220, 226, 227, 228, 239], "intersecting_product": 91, "intersection_": 228, "interspers": 207, "interv": [48, 50, 52, 55, 65, 67, 79, 88, 92, 94, 96, 97, 98, 101, 104, 113, 115, 118, 128, 176, 185, 209, 211, 213, 215, 216, 223, 226, 228, 235, 239, 240, 286, 297], "interval_": 228, "interval_list": 206, "intfunc": [94, 128, 216], "intgrl": 92, "intim": 207, "intiuit": 124, "intm": 123, "intp": 69, "intpoli": 115, "intqubit": [175, 184], "intqubitbra": 184, "intransit": 79, "intrins": [61, 69], "intrinsic_imped": 161, "introduc": [13, 14, 18, 22, 26, 36, 42, 51, 84, 87, 88, 96, 113, 124, 129, 131, 134, 136, 190, 195, 211, 212, 216, 217, 220, 227, 230, 233, 240, 256, 282, 289, 292, 294, 296, 298, 300, 301, 303, 308, 309, 310], "introduct": [5, 6, 13, 17, 19, 23, 34, 40, 79, 80, 93, 96, 209, 211, 213, 214, 216, 220, 233, 236, 239, 272, 279, 289, 295], "introductori": [16, 30, 39, 58, 59, 210, 211, 216], "introspect": 30, "intstep": 115, "intt": 91, "inttyp": 69, "intuit": [18, 28, 88, 195, 236], "inv": [30, 39, 53, 80, 119, 124, 148, 152, 157, 179, 209, 236, 301, 308, 309], "inv_can_transf_matrix": 192, "inv_den": [124, 209], "inv_method": [148, 152, 157], "inv_perm": 80, "inv_trig_styl": 220, "invalid": [5, 11, 12, 14, 16, 57, 88, 89, 130, 210, 213, 228, 301], "invari": [5, 13, 43, 79, 84, 140, 143, 205, 209, 211, 213, 215, 216, 230, 236], "invent": [89, 215, 238, 290], "inver": 217, "invers": [4, 12, 18, 53, 55, 61, 79, 80, 88, 89, 90, 96, 115, 120, 124, 128, 130, 132, 148, 152, 157, 179, 183, 184, 187, 192, 195, 207, 208, 209, 211, 213, 216, 217, 220, 222, 230, 232, 236, 238, 239, 240, 258, 292, 296], "inverse_adj": [124, 292], "inverse_block": 124, "inverse_ch": 124, "inverse_cosine_transform": 115, "inverse_fourier_transform": 115, "inverse_funct": 96, "inverse_g": [124, 292], "inverse_gaussian_distribut": 240, "inverse_hankel_transform": 115, "inverse_laplace_transform": [46, 115], "inverse_ldl": 124, "inverse_lu": [124, 292], "inverse_mellin_transform": 115, "inverse_mobius_transform": 91, "inverse_qr": 124, "inverse_sine_transform": 115, "inverse_trigonometric_funct": 94, "inversecosinetransform": 115, "inverseerf": [96, 220], "inverseerf2": 96, "inverseerfc": [96, 220], "inversefouriertransform": 115, "inversegaussiandistribut": 240, "inversehankeltransform": 115, "inverselaplacetransform": 115, "inversemellintransform": 115, "inversesinetransform": 115, "inversetrigonometricfunct": 43, "inversion_vector": 80, "invert": [18, 39, 53, 57, 65, 88, 89, 120, 124, 143, 192, 208, 209, 210, 211, 215, 216, 236, 238, 239, 246, 292, 305], "invert_complex": 239, "invert_r": 239, "invertible_matrix": 65, "invertiblehandl": 65, "invertiblepred": 65, "investig": [11, 80, 113, 205, 207, 230, 258, 288], "invok": [227, 251, 252], "invol": 131, "involut": 258, "involv": [11, 12, 13, 14, 16, 22, 32, 35, 36, 39, 41, 48, 50, 52, 64, 66, 79, 87, 88, 89, 93, 100, 101, 113, 115, 128, 133, 143, 148, 152, 158, 169, 179, 185, 187, 197, 207, 208, 211, 213, 215, 216, 217, 221, 222, 227, 228, 229, 230, 232, 233, 236, 238, 241, 259, 296, 298], "io": [2, 5, 116, 220, 259], "ion": [18, 131, 233], "iosi": 89, "iota": [16, 220], "ip": [116, 178, 184, 204], "ip_doit": 182, "ipl": 124, "ipmnet": 236, "ipo": 246, "ipos1": 246, "ipos2": 246, "iproduct": 258, "ipython": [2, 4, 15, 16, 30, 59, 116, 204, 259, 263, 294, 295], "iqft": 183, "iren": [4, 96], "irrat": [41, 48, 65, 67, 88, 128, 210, 216, 220, 228, 290], "irrational_numb": [41, 65, 88], "irrationalhandl": 65, "irrationalpred": 65, "irreduc": [14, 48, 208, 209, 211, 213, 215, 216, 219, 240, 246, 296], "irreducibili": 216, "irregular": [120, 124], "irrelev": 93, "irrespect": [115, 233, 236, 261], "irrot": [33, 271], "irwin": 240, "is2pow": 128, "is_": [15, 43, 88], "is_2dlin": 206, "is_abelian": 79, "is_abelian_numb": 74, "is_above_fermi": [96, 190], "is_absolutely_converg": 87, "is_abund": 128, "is_add": [88, 239], "is_algebra": [41, 88, 211], "is_algebraic_expr": 88, "is_alias": 88, "is_alt_sym": [79, 86], "is_altern": 79, "is_amic": 128, "is_anf": 118, "is_anti_symmetr": 124, "is_below_fermi": [96, 190], "is_biprop": 143, "is_canon_bp": 246, "is_capit": 15, "is_carmichael": [13, 128], "is_clos": 228, "is_cnf": 118, "is_collinear": [100, 103], "is_commut": [41, 115, 179, 188, 258], "is_compar": [41, 88], "is_compat": 215, "is_compat_col": 215, "is_complex": [41, 88], "is_concycl": 103, "is_conserv": [33, 200, 267, 271], "is_consist": [192, 198], "is_const": 88, "is_converg": 87, "is_convex": [67, 104], "is_coplanar": 102, "is_cycl": 79, "is_cyclic_numb": 74, "is_cyclotom": [211, 216], "is_decreas": 67, "is_defici": 128, "is_deriv": [13, 88], "is_diagon": [124, 209], "is_diagonaliz": 124, "is_dihedr": 79, "is_dimensionless": 192, "is_disjoint": 228, "is_dnf": 118, "is_echelon": [124, 292], "is_elementari": 79, "is_empti": [13, 41, 80], "is_equilater": 104, "is_euler_jacobi_pseudoprim": 128, "is_euler_pseudoprim": 128, "is_even": [43, 76, 79, 80], "is_exact": 211, "is_extended_neg": 41, "is_extended_nonneg": 41, "is_extended_nonposit": 41, "is_extended_posit": [41, 42], "is_extended_r": 41, "is_extra_strong_lucas_prp": 128, "is_fermat_pseudoprim": 128, "is_field": [210, 211], "is_finit": [41, 88], "is_finite_set": 41, "is_float": 88, "is_full_modul": 207, "is_funct": 69, "is_gaussian_prim": 128, "is_groebn": 213, "is_ground": [211, 216], "is_group": [76, 79], "is_hermitian": 124, "is_homogen": [211, 216], "is_hypergeometr": 87, "is_ident": [78, 80, 88], "is_increas": 67, "is_indefinit": 124, "is_inert": 215, "is_infinit": 41, "is_inject": 207, "is_int": 215, "is_integ": [14, 15, 41, 43, 88, 201, 220, 245], "is_irr": 88, "is_irreduc": [211, 216], "is_isomorph": 207, "is_isoscel": 104, "is_iter": 228, "is_left_unbound": 228, "is_linear": [211, 216], "is_low": [124, 209], "is_lower_hessenberg": 124, "is_lucas_prp": 128, "is_matrix": [69, 220], "is_maxim": 207, "is_meromorph": 88, "is_mersenne_prim": 128, "is_minim": 213, "is_mon": [211, 216], "is_monomi": [211, 216], "is_monoton": 67, "is_mul": 88, "is_multivari": 216, "is_neg": [41, 43, 88, 211], "is_negative_definit": 124, "is_negative_semidefinit": 124, "is_nilpot": [79, 124], "is_nilpotent_numb": 74, "is_nnf": 118, "is_nonneg": [41, 43, 211], "is_nonposit": 211, "is_nonzero": [41, 103], "is_norm": [79, 188], "is_nthpow_residu": 128, "is_numb": [14, 15, 41, 88, 96, 115], "is_odd": 80, "is_on": [211, 216], "is_only_above_fermi": [96, 190], "is_only_below_fermi": [96, 190], "is_only_q_annihil": 190, "is_only_q_cr": 190, "is_open": 228, "is_palindrom": [128, 258], "is_parallel": [101, 102], "is_perfect": [79, 128], "is_perfect_squar": 13, "is_perpendicular": [101, 102, 103, 104], "is_pid": 211, "is_polycycl": 79, "is_polynomi": 88, "is_posit": [12, 14, 15, 41, 42, 43, 88, 201, 211], "is_positive_definit": 124, "is_positive_semidefinit": 124, "is_pow": [16, 69, 88, 94], "is_prefix": 197, "is_prim": [13, 41, 88, 207], "is_primari": 207, "is_primit": [79, 211, 216], "is_primitive_el": 88, "is_primitive_root": [89, 128], "is_princip": 207, "is_prop": 143, "is_proper_subset": 228, "is_proper_superset": 228, "is_pur": 61, "is_q_annihil": 190, "is_q_creat": 190, "is_quad_residu": [93, 128], "is_quadrat": [211, 216], "is_r": 211, "is_rad": 207, "is_rat": [16, 41, 215, 258], "is_rational_funct": 88, "is_real": [12, 14, 15, 41, 43, 48, 52, 88, 90, 94, 95, 124, 201, 216, 220, 245], "is_recurr": 240, "is_reduc": 213, "is_right": 104, "is_right_unbound": 228, "is_sam": 88, "is_scalar_multipl": 103, "is_scalen": 104, "is_sequ": 258, "is_similar": [99, 101, 104, 105], "is_simpl": 96, "is_singleton": 80, "is_singular": [88, 95, 111], "is_solenoid": [33, 200, 267, 271], "is_solv": 79, "is_sqf": [211, 216], "is_squar": [13, 88, 124, 128, 209, 211], "is_squarefre": 213, "is_stabl": [46, 143], "is_strictly_decreas": 67, "is_strictly_increas": 67, "is_strictly_prop": 143, "is_strong_lucas_prp": 128, "is_strongly_diagonally_domin": 124, "is_subdiagram": 68, "is_subgroup": 79, "is_submodul": 207, "is_subset": [38, 228], "is_superset": 228, "is_surject": 207, "is_symbol": [69, 124], "is_symmetr": [79, 124], "is_tang": [98, 100], "is_this_zero": [3, 256], "is_transit": 79, "is_trivi": 79, "is_tru": [62, 64, 65], "is_unit": 211, "is_univari": 216, "is_up": 246, "is_upp": [124, 209], "is_upper_hessenberg": 124, "is_weakly_diagonally_domin": 124, "is_whole_r": 207, "is_zero": [3, 41, 43, 103, 124, 207, 211, 216, 256, 292], "is_zero_dimension": [216, 239], "is_zero_matrix": [41, 124, 209], "is_zero_quaternion": 61, "isc": 214, "isclos": 88, "isdisjoint": 228, "isfinit": 88, "isign": 69, "isinst": [13, 14, 15, 38, 41, 43, 69, 88, 120, 123, 143, 210, 211, 220, 221, 232, 241, 244, 253, 291], "isint": 43, "isn": [7, 11, 13, 14, 21, 22, 43, 55, 115, 155, 239, 290], "isol": [9, 48, 67, 94, 211, 215, 216, 217, 238, 253], "isometr": [18, 132, 134], "isometri": 117, "isomorph": [71, 79, 82, 207, 210, 213, 215], "isomorphismfail": [213, 215], "isotrop": 191, "ispk": 89, "isposit": 42, "isprim": [13, 65, 89, 93, 128], "isprimit": 88, "isqrt": [88, 128], "issac": [70, 115, 214, 238], "issn": 0, "issu": [3, 5, 7, 12, 13, 14, 15, 16, 23, 34, 42, 43, 48, 50, 51, 52, 53, 54, 55, 56, 59, 60, 67, 87, 88, 105, 115, 118, 124, 129, 170, 205, 214, 215, 217, 220, 228, 229, 238, 239, 251, 253, 255, 256, 258, 261, 287, 288, 291, 296], "issubset": 228, "issuperset": 228, "ist": [214, 229], "istruehandl": 65, "istruepred": 65, "isuru": 0, "isympi": [1, 2, 15, 16, 116], "iszero": 292, "iszerofunc": [124, 292], "it5": 124, "ital": [5, 220], "italic": 5, "ite": 220, "item": [4, 5, 15, 16, 28, 37, 48, 55, 69, 77, 78, 80, 88, 93, 99, 105, 124, 128, 147, 152, 154, 155, 206, 209, 210, 213, 216, 220, 228, 236, 237, 240, 251, 252, 255, 258, 259, 296], "iter": [15, 27, 31, 48, 51, 52, 53, 57, 67, 69, 77, 79, 80, 83, 84, 88, 89, 90, 91, 93, 96, 104, 118, 124, 128, 148, 149, 151, 152, 153, 154, 157, 175, 190, 203, 206, 207, 208, 209, 211, 213, 216, 220, 221, 222, 223, 226, 232, 233, 236, 238, 239, 240, 241, 244, 252, 253, 254, 255, 257, 259, 264, 269, 283], "iter_item": [124, 209], "iter_q_annihil": 190, "iter_q_cr": 190, "iter_valu": [124, 209], "iterat": 209, "iterate_binari": 83, "iterate_graycod": 83, "itercoeff": 211, "itermax": 69, "itermonom": 211, "itermonomi": 216, "iterterm": 211, "itertool": [83, 258], "itex": 220, "ith": [80, 117, 128, 209, 211, 217, 239, 240], "itii": 89, "its": [0, 2, 3, 4, 5, 7, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 27, 28, 30, 31, 33, 35, 36, 37, 39, 41, 42, 43, 48, 50, 51, 52, 53, 54, 55, 57, 61, 63, 64, 65, 68, 69, 70, 72, 76, 78, 79, 80, 87, 88, 89, 90, 93, 94, 96, 98, 100, 104, 106, 113, 115, 116, 118, 120, 124, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 143, 147, 148, 150, 151, 152, 154, 155, 157, 158, 163, 169, 175, 176, 178, 179, 184, 185, 188, 190, 194, 195, 197, 199, 200, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 226, 227, 228, 232, 235, 236, 238, 239, 240, 242, 244, 245, 246, 251, 254, 255, 258, 259, 264, 267, 268, 269, 271, 274, 290, 291, 292, 295, 296, 298, 300, 301, 305], "itself": [2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 18, 22, 28, 33, 35, 43, 65, 77, 79, 80, 86, 88, 90, 93, 94, 101, 105, 110, 124, 128, 133, 152, 157, 180, 187, 206, 207, 209, 210, 211, 213, 215, 216, 220, 228, 229, 232, 239, 244, 245, 246, 253, 255, 258, 273, 290], "iv": [96, 217], "ivan": 213, "ivanov": 0, "iverson": 43, "iwf11": 301, "iwf22": 301, "iwr11": 301, "iwr22": 301, "ixi": [154, 199], "ixx": [148, 154, 199], "ixz": 199, "iy_": 96, "iyi": [154, 199], "iyz": [154, 199], "iz": 96, "izx": 154, "izz": [154, 199], "i\u2080": 162, "j": [0, 5, 12, 13, 14, 16, 18, 29, 30, 32, 33, 46, 61, 65, 67, 69, 70, 74, 78, 79, 80, 84, 86, 87, 89, 90, 93, 96, 110, 113, 115, 117, 120, 124, 128, 131, 132, 134, 144, 148, 157, 162, 169, 170, 187, 190, 195, 205, 207, 209, 211, 213, 214, 215, 216, 217, 219, 220, 222, 228, 230, 232, 233, 236, 238, 239, 240, 241, 242, 244, 245, 246, 247, 252, 258, 264, 266, 267, 268, 269, 270, 271, 273, 274, 298], "j1": [151, 169, 187, 303, 306], "j12": [169, 187], "j13": 169, "j2": [151, 169, 187, 303, 306], "j23": 169, "j24": 169, "j2op": 187, "j3": [169, 187, 303, 306], "j34": 169, "j4": 169, "j_": [93, 96, 113, 115, 187, 222, 230, 290], "j_0": 170, "j_1": [93, 169, 170, 187, 205, 222, 241], "j_2": [93, 169, 170, 187, 205, 222], "j_3": [169, 187, 205], "j_4": [187, 205], "j_5": 205, "j_6": 205, "j_7": 205, "j_8": 205, "j_9": 205, "j_m": 241, "j_n": [96, 187], "j_y": 205, "j_z": 205, "ja": 127, "jacobi": [93, 115, 128, 145, 216, 220], "jacobi_norm": 96, "jacobi_poli": [96, 216], "jacobi_polynomi": 96, "jacobi_rul": 115, "jacobi_symbol": [13, 89, 93, 128], "jacobian": [27, 90, 124, 238], "jacobian_determin": 90, "jacobian_matrix": 90, "jacobip": [96, 220], "jacobipolynomi": 96, "jakob": 216, "jame": [89, 213], "jan": [0, 89], "jane": 70, "januari": 128, "jason": [0, 220], "java": 16, "javascript": 295, "javascriptcodeprint": 220, "jax": [2, 129, 259], "jburkardt": 115, "jc": 135, "jcoupl": 187, "jcoupling_list": 187, "jean": 115, "jeffrei": [124, 232], "jen": 205, "jensen": [11, 69], "jerom": 258, "jeromekelleh": 258, "jewett": 128, "jguzm022": 11, "ji": [124, 242], "jim": 29, "jit": [2, 229], "jj": 187, "jk": 0, "jku": [110, 236, 264], "jl": [214, 253], "jlname": 253, "jm": 187, "jmig5776": 11, "jn": [94, 96, 187, 216, 220, 290], "jn_zero": 96, "jnanjeky": 11, "jnp": 129, "joannah": 11, "joaquim": 11, "job": [12, 39, 43, 80, 170, 217, 220], "jochen": 11, "joe": 11, "joeb": 11, "joel": 236, "jogi": 11, "johan": 11, "johan_bluecreek": 11, "johansson": 0, "john": [70, 74, 79, 96, 214, 216, 233, 236], "johndcook": 93, "johnson": [80, 124], "joi": 68, "join": [9, 14, 16, 50, 80, 88, 89, 101, 124, 135, 136, 155, 220, 232, 236, 238, 241, 258], "joint": [23, 139, 147, 148, 150, 157, 281, 298, 303, 306], "joint1": 303, "joint2": 303, "joint3": 303, "joint_axi": [13, 24, 147, 151, 157, 303, 306], "joint_distribut": 240, "joint_point": 151, "joint_rv_typ": 240, "jointdistributionhandmad": 240, "jointli": 41, "jointrv": 240, "jointsmethod": 148, "jon": 128, "jone": [128, 162], "jones_2_stok": 162, "jones_calculu": 162, "jones_vector": 162, "jordan": [53, 113, 124, 209, 218, 236, 238, 239], "jordan_block": 124, "jordan_cel": 124, "jordan_form": 124, "jordan_matrix": [124, 236], "jordan_normal_form": 236, "joseph": [144, 214], "josephu": 80, "josephus_problem": 80, "josi": 89, "joul": 195, "journal": [0, 4, 7, 61, 87, 93, 144, 214, 232, 255, 258, 302], "joyofcat": 68, "jpr2718": 233, "jr": 96, "js_function_str": 220, "jsc": 214, "jscode": [69, 220], "jstor": 240, "jth": [117, 209, 239], "judgement": 5, "judgment": 12, "juli": [89, 233], "julia": 253, "julia_cod": [69, 220], "juliacodegen": 253, "juliacodeprint": 220, "juliu": 89, "jump": [135, 240, 296], "june": [89, 124], "jupyt": [2, 7, 11, 15, 43, 259], "jurjen": 220, "just": [1, 3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 21, 22, 27, 28, 30, 32, 33, 35, 41, 42, 43, 50, 52, 55, 59, 65, 68, 69, 79, 86, 88, 89, 90, 94, 111, 113, 115, 116, 117, 118, 124, 128, 129, 132, 145, 147, 148, 170, 175, 180, 190, 195, 204, 206, 207, 209, 210, 211, 213, 215, 219, 220, 227, 228, 229, 230, 232, 236, 239, 241, 249, 251, 253, 254, 256, 270, 271, 273, 285, 286, 288, 289, 290, 291, 292, 296, 297, 300, 305, 309], "just_gen": 215, "justifi": 213, "juxtaposit": [28, 32, 268], "jx": 187, "jxbra": 187, "jxbracoupl": 187, "jxket": 187, "jxketcoupl": 187, "jy": 187, "jybra": 187, "jybracoupl": 187, "jyket": 187, "jyketcoupl": 187, "jyr2000": 205, "jz": 187, "jzbra": 187, "jzbracoupl": 187, "jzket": 187, "jzketcoupl": 187, "jzop": 187, "k": [0, 5, 12, 13, 14, 16, 18, 25, 27, 30, 32, 33, 37, 41, 43, 46, 51, 61, 67, 68, 69, 70, 72, 74, 78, 79, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 96, 106, 113, 115, 118, 120, 124, 128, 130, 143, 147, 148, 152, 157, 164, 178, 179, 182, 186, 188, 190, 205, 207, 209, 210, 213, 214, 215, 216, 217, 220, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 236, 238, 240, 241, 242, 244, 245, 246, 247, 251, 255, 258, 264, 266, 267, 268, 269, 270, 271, 273, 274, 295, 296, 298, 306], "k0": [188, 211, 213, 240], "k1": [30, 128, 188, 210, 211, 213, 302], "k2": [30, 128, 210, 302], "k3": [30, 210], "k3d": 13, "k4": 30, "k_": [25, 26, 96, 113, 152], "k_0": 213, "k_1": [89, 128, 213, 230, 302], "k_2": [89, 302], "k_3": 89, "k_arrai": 78, "k_b": 55, "k_d": [25, 152], "k_dnh": 152, "k_f": 55, "k_i": [128, 213, 230], "k_j": 230, "k_kqdot": 152, "k_ku": 152, "k_m": 128, "k_n": [89, 96, 213], "k_sym": 93, "k_u": 230, "k_val": 55, "k_y": 117, "ka": 0, "kahan": 144, "kahane_simplifi": 144, "kalkbrenn": 238, "kaltofen": [213, 214], "kaltofen98": 214, "kane": [18, 21, 22, 23, 24, 29, 30, 32, 148, 150, 157, 199, 264, 281, 298, 304, 307], "kane1983": [29, 36], "kane1985": [25, 29, 32, 309], "kanes_equ": [18, 22, 25, 27, 30, 147, 152, 155, 298, 301, 305, 308, 309], "kanesmethod": [13, 18, 22, 24, 25, 27, 30, 147, 148, 152, 155, 157, 298, 301, 303, 305, 306, 308, 309], "kapitaniaka": 302, "kappa": [16, 205, 220, 240], "kapur": 214, "kapur1994": 214, "karr": 87, "kasiski": 89, "katmat": 68, "kauer": 225, "kb": 55, "kbin": 258, "kconrad": [79, 240], "kd": [25, 152, 301, 308, 309], "kd_eq": [18, 22, 27, 30, 152, 298, 301, 305, 308, 309], "kd_eqs_solv": 152, "kdd": [301, 308, 309], "kde": [24, 27, 148, 151, 157, 305], "kdvi": 220, "ke": 30, "keep": [3, 4, 11, 12, 14, 16, 24, 28, 32, 38, 43, 84, 88, 89, 92, 93, 96, 113, 124, 132, 152, 174, 190, 206, 209, 210, 211, 216, 227, 228, 230, 232, 236, 238, 241, 246, 273, 286, 291, 298, 303], "keep_domain": 209, "keep_only_fully_contract": 190, "kei": [11, 13, 14, 15, 16, 22, 23, 36, 37, 48, 50, 62, 65, 68, 77, 79, 80, 88, 89, 90, 93, 104, 117, 124, 127, 128, 135, 157, 182, 185, 190, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 232, 236, 237, 238, 240, 244, 255, 258, 259, 261, 292, 293, 296, 304], "kelleh": 258, "kelli": [113, 230], "kempf": 207, "kepler": [193, 264], "kept": [36, 90, 192, 258, 291], "ker": 207, "kern": 88, "kernel": [124, 207, 213, 215, 238], "ket": [130, 173, 178, 179, 180, 182, 184, 185, 188, 190], "ket_not": 188, "ketbas": [178, 179, 185, 188], "key1": 206, "key2": 206, "key2bound": 124, "key2ij": 124, "keyboard": 206, "keyboardinterrupt": 251, "keyfunc": 258, "keyword": [0, 3, 4, 12, 13, 14, 15, 25, 26, 37, 43, 68, 69, 70, 79, 80, 88, 89, 92, 93, 101, 103, 104, 105, 124, 128, 132, 135, 141, 143, 147, 152, 155, 184, 190, 204, 206, 208, 209, 210, 211, 213, 215, 216, 219, 220, 221, 227, 232, 233, 238, 245, 251, 252, 254, 256, 258, 259, 261, 269, 292], "kf": 55, "kfkljjhf5mmmktfrgpl": 89, "kg": [18, 195, 274, 298], "kid": 89, "kid_rsa_private_kei": 89, "kid_rsa_public_kei": 89, "kiev": 214, "kijml": 242, "kill": [207, 211, 251], "killable_index": [96, 190], "killed_modul": 207, "kilo": 196, "kilogram": [161, 193, 195, 197], "kilomet": [194, 196, 197], "kin_explicit_rh": [31, 157], "kind": [4, 5, 13, 15, 22, 26, 33, 40, 41, 42, 43, 68, 69, 90, 93, 96, 108, 115, 122, 135, 139, 152, 194, 208, 210, 211, 216, 221, 222, 228, 236, 237, 240, 258, 271, 273, 279, 286, 296], "kindiff": 30, "kindiffdict": [25, 30, 152, 301, 308, 309], "kinema": 157, "kinemat": [18, 21, 22, 24, 25, 27, 28, 30, 31, 34, 36, 151, 152, 157, 199, 202, 281, 299, 301, 303, 304, 305, 306, 308, 310], "kinet": [23, 55, 148, 152, 154], "kinetic_energi": [28, 30, 148, 154], "kinnei": [18, 131, 132, 134, 298], "kirpichev": 0, "kite": 104, "kk": 124, "kleen": 258, "klein": [71, 80], "km": [21, 25, 27, 30, 124, 128, 152, 196, 301, 305, 308, 309], "kn": [124, 135, 136, 137], "knew": [88, 296], "knife": 216, "knot": 96, "know": [3, 4, 5, 12, 13, 14, 15, 16, 18, 22, 28, 31, 35, 36, 41, 42, 43, 48, 55, 56, 57, 62, 64, 68, 71, 80, 88, 89, 92, 100, 105, 113, 115, 124, 128, 130, 184, 188, 192, 193, 195, 199, 206, 209, 216, 217, 219, 220, 230, 232, 236, 238, 239, 240, 254, 258, 259, 269, 285, 286, 288, 289, 290, 291, 294, 296], "knowabl": 41, "knowledg": [15, 87, 88, 89, 215, 236, 291, 294], "known": [4, 11, 12, 14, 15, 18, 27, 35, 41, 42, 43, 46, 55, 64, 68, 69, 70, 71, 74, 77, 79, 80, 88, 89, 92, 93, 96, 98, 101, 106, 113, 115, 116, 125, 128, 141, 143, 144, 146, 148, 154, 157, 193, 199, 209, 210, 211, 215, 216, 220, 223, 226, 228, 229, 230, 232, 235, 236, 237, 238, 240, 258, 259, 264, 271, 273, 296], "known_const": 220, "known_fcns_src1": 220, "known_fcns_src2": 220, "known_funct": 220, "known_functions_c89": 220, "known_functions_c99": 220, "known_typ": 220, "knuth": [72, 80, 213, 255], "koepf": [214, 222, 232], "koepf98": [214, 216], "kog": 258, "koshi": [93, 128], "kozen": [4, 214], "kozen89": [4, 213, 214], "kreher": 80, "kroneck": [93, 96, 189, 190, 205, 241, 246], "kronecker_delta": [96, 190], "kronecker_symbol": 93, "kroneckerdelta": [96, 120, 190, 220, 232], "kroneckerproduct": 220, "kroneckersimp": 232, "krypto": 89, "ksubset": 83, "kt": [89, 306], "kth": [124, 128], "ku": [13, 25, 220], "kulal": 0, "kumar": [0, 239], "kumaraswami": 240, "kumaraswamy_distribut": 240, "kummer": 215, "kurtosi": 240, "kutta": [15, 110], "kw": 251, "kw_arg": [72, 82, 190, 245, 246], "kwarg": [16, 63, 64, 65, 69, 79, 80, 87, 88, 89, 90, 94, 96, 98, 99, 101, 102, 103, 104, 105, 110, 113, 115, 119, 120, 121, 124, 126, 127, 128, 132, 141, 143, 149, 152, 154, 157, 159, 168, 170, 174, 175, 179, 181, 183, 184, 186, 187, 188, 199, 203, 204, 206, 209, 211, 216, 220, 222, 226, 227, 228, 232, 236, 237, 238, 240, 241, 242, 246, 251, 252, 254, 258, 261, 269, 305], "kwong": 214, "kx": 18, "ky": 46, "l": [4, 13, 16, 18, 22, 26, 27, 28, 29, 30, 31, 35, 36, 67, 68, 69, 70, 77, 79, 80, 87, 89, 93, 96, 99, 100, 101, 102, 103, 105, 106, 111, 113, 115, 117, 119, 120, 124, 128, 131, 132, 134, 135, 136, 143, 145, 147, 148, 151, 152, 153, 154, 155, 157, 158, 159, 162, 188, 191, 192, 193, 195, 205, 207, 209, 211, 213, 214, 220, 222, 223, 229, 230, 233, 236, 238, 240, 244, 245, 246, 247, 251, 253, 258, 274, 296, 298, 302, 303, 305, 306, 308, 309, 310], "l0": 213, "l1": [28, 89, 98, 100, 101, 151, 154, 211, 213, 216, 233, 240, 303], "l1_norm": [211, 216], "l2": [89, 100, 101, 151, 154, 176, 192, 211, 213, 240, 303], "l2_norm_squar": 211, "l3": [101, 213, 303], "l3_convfunc": 67, "l4": [101, 303], "l_": [13, 18, 115, 124, 205], "l_0": [93, 144, 246, 247], "l_1": [89, 93, 144, 205, 230, 246, 258], "l_2": 205, "l_3": 205, "l_a": 298, "l_arm": 298, "l_b": 28, "l_c": 298, "l_d": 298, "l_frame": 151, "l_i": [89, 205, 230], "l_m": [18, 132, 134, 258], "l_m_opt": [18, 132, 134, 298], "l_m_opt_bicep": 298, "l_m_opt_tricep": 298, "l_m_tild": [18, 132], "l_m_tilde_muscl": 134, "l_m_tilde_num": 18, "l_mt": 18, "l_n": [96, 115, 216], "l_p": 28, "l_t": [18, 89, 132], "l_t_slack": [18, 132, 134, 298], "l_t_slack_bicep": 298, "l_t_slack_tricep": 298, "l_t_tild": [18, 132], "l_t_tilde_num": 18, "l_u": 230, "l_v": 230, "la": [30, 79, 195, 298], "labahn": 214, "label": [4, 7, 18, 55, 68, 69, 82, 88, 98, 111, 115, 137, 139, 163, 170, 174, 179, 188, 190, 206, 220, 221, 223, 232, 245, 246, 295], "label_displac": 68, "label_posit": 68, "labeledtre": 82, "labelfunc": 220, "lack": [57, 69, 90, 92, 154, 220, 286], "lag": [27, 305, 310], "lag_eq": [27, 305], "lagrang": [23, 67, 88, 148, 150, 153, 157, 216, 233, 281, 304, 307], "lagranges_equ": 152, "lagrangesmethod": [26, 27, 147, 148, 152, 155, 157, 302, 305, 310], "lagrangian": [23, 26, 27, 67, 152, 154, 302, 305, 310], "laguerr": [115, 216, 220], "laguerre_poli": [96, 216], "laguerre_polynomi": 96, "laguerre_rul": 115, "laguerrel": [96, 220], "laguerrel3": 96, "laguerrepolynomi": 96, "laguna": 89, "lai": 68, "laid": [22, 68, 187], "laigl": 128, "lam": [31, 152, 153], "lam1": 26, "lam_f": [54, 259], "lam_op": 305, "lamar": 236, "lambda": [12, 15, 16, 22, 26, 27, 30, 31, 43, 46, 50, 54, 63, 64, 67, 69, 79, 80, 88, 89, 90, 93, 94, 115, 119, 120, 124, 127, 128, 130, 152, 175, 206, 209, 213, 215, 216, 220, 221, 228, 229, 232, 236, 238, 239, 240, 241, 249, 258, 259, 264, 266, 269, 285, 292, 298], "lambda_": 113, "lambda_c": [26, 113], "lambda_i": [199, 264, 266], "lambda_not": 130, "lambda_x": [199, 264, 266], "lambda_z": [199, 264, 266], "lambdaprint": 259, "lambdarepr": [69, 220, 259], "lambdastr": 259, "lambdifi": [14, 15, 18, 43, 54, 55, 69, 96, 220, 238, 252, 257, 283, 287, 298, 301], "lambert": [57, 94, 115, 217], "lambert_w_funct": 94, "lambertw": [94, 217, 220, 238, 239, 297], "lambidfi": 13, "lamda": [15, 120, 220, 228, 240, 292], "lame": 271, "lamina": 274, "lanczo": 223, "land": 89, "landau": [4, 214, 286], "landscap": 80, "langl": [70, 79, 130, 169, 205], "languag": [2, 5, 14, 15, 16, 21, 22, 30, 39, 43, 69, 94, 124, 130, 220, 225, 240, 252, 253, 288, 290, 292, 294, 296], "laplac": [46, 115, 124, 140, 141, 143, 240], "laplace_correspond": [46, 115], "laplace_distribut": 240, "laplace_initial_cond": [46, 115], "laplace_transform": [46, 115, 143], "laplacedistribut": 240, "laplacetransform": 115, "larg": [2, 3, 4, 7, 11, 12, 16, 18, 21, 27, 30, 32, 41, 48, 53, 79, 80, 88, 89, 98, 113, 115, 127, 128, 153, 170, 195, 205, 209, 210, 211, 213, 216, 219, 220, 221, 227, 230, 232, 238, 240, 245, 252, 259, 261, 267, 285, 290, 296], "larger": [3, 5, 14, 15, 43, 53, 69, 79, 80, 87, 88, 89, 96, 113, 120, 124, 128, 209, 211, 217, 221, 227, 232, 238, 253, 255, 288, 296, 305, 309], "largest": [69, 80, 82, 88, 94, 96, 124, 127, 128, 170, 207, 211, 238, 258], "lark": 2, "larklatexpars": 130, "lasserr": 115, "last": [5, 11, 12, 13, 14, 16, 37, 38, 39, 41, 42, 43, 48, 50, 52, 53, 54, 55, 56, 57, 62, 63, 64, 68, 69, 70, 78, 79, 80, 84, 87, 88, 89, 92, 98, 115, 118, 119, 120, 121, 124, 126, 127, 128, 130, 143, 157, 162, 194, 195, 205, 206, 207, 208, 209, 210, 211, 213, 216, 219, 220, 227, 228, 233, 236, 238, 239, 240, 241, 242, 246, 249, 251, 252, 253, 254, 256, 258, 259, 261, 286, 288, 291, 292], "last_index": 120, "lastli": [16, 31, 115, 136, 213, 236, 298], "lastnam": 9, "later": [3, 13, 14, 21, 25, 27, 30, 32, 35, 39, 69, 79, 113, 118, 124, 153, 154, 157, 164, 210, 213, 219, 220, 221, 230, 232, 236, 255, 268, 285, 286, 288, 290, 291, 296, 301, 305, 306], "latest": [2, 9, 12, 59, 68, 254, 256, 259], "latex": [0, 2, 4, 8, 12, 15, 32, 36, 43, 57, 59, 96, 116, 199, 204, 206, 211, 220, 290, 291, 298], "latex2sympi": 130, "latex_mod": [116, 204], "latex_print": [116, 204], "latex_repr": [196, 197], "latex_scalar": 264, "latex_set": 220, "latex_vect": 264, "latexmk": 8, "latexnam": 170, "latexparsingerror": 130, "latexprint": 43, "latin": 60, "latter": [13, 14, 38, 43, 69, 79, 88, 93, 96, 113, 128, 135, 207, 211, 215, 220, 230, 233, 246, 253, 258, 259, 288], "lattic": [91, 209, 233], "lattice_": 94, "latu": 98, "latus_rectum": 98, "lauer": 211, "laurent": [96, 211, 217, 236], "law": [15, 18, 23, 36, 68, 150, 193, 208, 240], "layer": [13, 143, 213, 259], "layout": 68, "lazard": [115, 213, 216], "lazi": [88, 120, 216], "lazili": [120, 226, 258], "lazo": 205, "lb": [69, 110, 255], "lbound": 69, "lc": [211, 213, 216, 298], "lceil": [113, 130], "lcim": 67, "lcm": [88, 128, 211, 213, 216, 220], "lcm_list": 216, "ld": [68, 298], "ldescent": 233, "ldl": [119, 124], "ldldecomposit": [119, 124], "ldlsolv": [119, 124], "ldot": [43, 51, 70, 78, 79, 87, 88, 89, 93, 96, 113, 128, 136, 195, 205, 207, 208, 211, 213, 215, 220, 223, 227, 230, 233, 238, 241, 296], "ldu": 120, "ldudecomposit": 120, "le": [41, 70, 84, 88, 96, 113, 124, 128, 130, 213, 220, 230, 238, 240, 298, 310], "lead": [13, 14, 15, 18, 36, 41, 42, 43, 48, 57, 87, 88, 94, 98, 115, 118, 124, 128, 145, 153, 174, 199, 208, 209, 211, 213, 215, 216, 217, 220, 227, 229, 232, 236, 239, 253, 256, 261, 289, 296], "leader": 128, "leading_expon": 78, "leading_expv": 211, "leading_monom": 211, "leading_term": 211, "leadterm": 88, "leadup": 128, "leaf": [15, 210, 220, 229, 291], "lean": [301, 308, 310], "learn": [2, 5, 8, 28, 36, 49, 55, 57, 124, 229, 239, 285, 288, 289, 290, 294], "least": [2, 3, 5, 7, 11, 12, 13, 37, 41, 55, 65, 67, 69, 79, 88, 94, 100, 112, 113, 115, 124, 128, 129, 152, 170, 184, 192, 194, 207, 208, 210, 211, 213, 215, 216, 227, 229, 232, 236, 238, 239, 240, 253, 296], "least_rot": 258, "leav": [11, 14, 15, 23, 41, 43, 54, 56, 69, 88, 115, 124, 128, 132, 150, 153, 174, 190, 209, 227, 255, 285, 291, 296], "lebesgu": 228, "leblond": 195, "lect1023big": 240, "lectur": [30, 214, 240], "lecture4_6up": 240, "led": 0, "leedham": 79, "left": [3, 5, 13, 18, 32, 33, 39, 41, 43, 46, 49, 50, 53, 61, 67, 69, 70, 79, 80, 84, 88, 89, 90, 93, 94, 96, 104, 105, 111, 113, 115, 116, 118, 124, 127, 128, 131, 132, 137, 143, 148, 157, 158, 162, 169, 174, 178, 179, 182, 187, 199, 205, 206, 207, 209, 216, 217, 218, 219, 220, 222, 223, 227, 228, 229, 230, 232, 236, 237, 238, 239, 240, 251, 252, 253, 255, 258, 271, 286, 290, 292, 296, 298], "left_eigenvect": 124, "left_hand_sid": 69, "left_open": 228, "left_support": 137, "leftmost": 190, "leftrightarrow": 84, "leftslash": 220, "leg": [104, 137], "legaci": [88, 115, 124, 240], "legacy_matrix": [13, 115], "legal": 192, "legend": [18, 30, 55, 206, 223], "legendr": [93, 115, 128, 216, 220, 233], "legendre_poli": [96, 216], "legendre_polynomi": 96, "legendre_rul": 115, "legendre_symbol": [13, 93, 128], "legendrep": [96, 220], "legendrep2": 96, "legendrepolynomi": 96, "legibl": 211, "legitim": 213, "legrang": 233, "lehmer": [80, 88], "lehmer_cod": 80, "lemaitr": 205, "lemma": [68, 79, 113, 208], "len": [67, 76, 77, 78, 79, 80, 84, 86, 88, 89, 93, 96, 103, 113, 118, 159, 163, 174, 184, 209, 216, 232, 236, 245, 258, 298, 305], "len1": 79, "len2": 79, "len3": 79, "len_i": [69, 220], "lenght": 135, "length": [4, 13, 21, 28, 36, 61, 69, 72, 78, 79, 80, 82, 86, 88, 89, 91, 93, 94, 96, 97, 101, 103, 104, 105, 118, 124, 127, 128, 132, 134, 135, 136, 137, 139, 147, 152, 155, 157, 158, 159, 163, 187, 192, 193, 194, 195, 199, 203, 215, 216, 220, 226, 230, 232, 236, 238, 240, 251, 252, 258, 260, 261, 264, 266, 274, 298, 302, 303, 305, 306], "lengthen": [3, 18, 134], "lengthi": 79, "lenic": [107, 109], "lens": 159, "lens_formula": 163, "lens_makers_formula": 163, "lenstra": [128, 209], "leq": [79, 87, 89, 93, 96, 113, 124, 128, 205, 213, 215, 226, 227, 233, 240], "lerch": 96, "lerch_transcend": 96, "lerchphi": [96, 220], "less": [4, 5, 11, 14, 15, 22, 39, 48, 51, 53, 61, 65, 69, 70, 71, 79, 80, 87, 88, 89, 92, 93, 94, 96, 102, 103, 104, 124, 128, 141, 143, 147, 157, 190, 209, 210, 211, 213, 215, 216, 229, 230, 232, 233, 236, 238, 239, 240, 251, 253, 301], "lesser": [80, 139, 216], "lessthan": [88, 220], "lester": 89, "let": [11, 12, 18, 22, 30, 35, 39, 41, 42, 43, 46, 67, 69, 79, 84, 88, 89, 98, 106, 111, 113, 117, 120, 124, 125, 128, 130, 132, 147, 148, 158, 195, 199, 207, 208, 209, 213, 215, 216, 217, 220, 227, 230, 232, 233, 236, 238, 239, 246, 249, 252, 256, 259, 269, 270, 274, 285, 288, 290, 291, 296], "lett": [80, 124], "letter": [5, 15, 16, 60, 81, 88, 89, 128, 130, 190, 209, 220, 258, 286, 288], "lev": 211, "level": [3, 4, 5, 7, 12, 13, 14, 15, 16, 21, 30, 32, 36, 41, 42, 50, 52, 69, 79, 86, 88, 94, 96, 115, 118, 124, 128, 131, 134, 185, 190, 195, 201, 206, 209, 210, 211, 218, 220, 229, 233, 239, 240, 244, 252, 253, 258, 291, 292, 294, 305], "levelt": 238, "lever": [298, 299], "lever_resist": 298, "leverag": [55, 69, 129, 220, 286], "levi": [90, 96, 240, 246], "levicivita": [96, 124], "levinson": [29, 152, 199, 264], "levydistribut": 240, "levyleblond77": 195, "lex": [88, 116, 204, 208, 210, 211, 213, 216, 217, 219, 220, 232], "lexic": [77, 170, 258], "lexicograph": [79, 80, 83, 84, 88, 213, 216, 258], "lexicographically_minimal_string_rot": 258, "lexograph": [116, 204], "lexord": [211, 216], "lfloor": [88, 94, 130, 211, 239, 240], "lfortran": [2, 130], "lfsr": 89, "lfsr_autocorrel": 89, "lfsr_connection_polynomi": 89, "lfsr_sequenc": 89, "lgamma": 220, "lh": [13, 37, 50, 55, 69, 78, 88, 131, 134, 218, 220, 236, 238, 239, 270], "li": [93, 96, 104, 115, 128, 154, 158, 190, 220, 274, 298], "liabl": [88, 118], "liao": 214, "liao95": [213, 214], "lib": 264, "liber": [21, 130, 290], "liberato": 205, "liberatodebrito82": 205, "libgtkmathview": 220, "librari": [0, 2, 3, 4, 12, 13, 14, 15, 21, 22, 30, 41, 43, 54, 58, 59, 69, 88, 89, 93, 113, 115, 116, 124, 129, 157, 194, 206, 210, 211, 240, 251, 252, 253, 258, 259, 285, 286, 288, 289, 290], "library_dir": 252, "librsvg": 8, "librsvg2": 8, "libtcc": 253, "licens": [0, 2, 45, 290], "lie": [18, 46, 48, 80, 90, 102, 103, 104, 155, 158, 216, 240, 275, 282, 298], "lie_algebra": 117, "lie_group": 236, "lie_heuristic_abaco1_product": 236, "lie_heuristic_abaco1_simpl": 236, "lie_heuristic_abaco2_similar": 236, "lie_heuristic_abaco2_unique_gener": 236, "lie_heuristic_abaco2_unique_unknown": 236, "lie_heuristic_bivari": 236, "lie_heuristic_chi": 236, "lie_heuristic_function_sum": 236, "lie_heuristic_linear": 236, "liealgebra": [2, 117], "liederiv": 90, "liegroup": 236, "lift": [18, 69, 84, 94, 96, 113, 211, 213, 216], "light": [145, 162, 194, 195, 204, 207], "lighten": 207, "lightli": 3, "lightweight": [69, 215, 290], "like": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 21, 22, 24, 27, 30, 31, 32, 33, 35, 38, 41, 42, 43, 45, 53, 55, 56, 57, 58, 59, 69, 70, 71, 73, 79, 80, 87, 88, 89, 92, 93, 94, 96, 98, 108, 111, 115, 116, 118, 120, 121, 122, 124, 128, 129, 130, 134, 139, 143, 151, 155, 158, 172, 174, 184, 185, 188, 189, 190, 194, 195, 199, 203, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 223, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 244, 246, 247, 249, 251, 252, 253, 254, 258, 259, 261, 268, 269, 271, 273, 285, 286, 288, 289, 290, 291, 292, 296, 298, 301], "likelihood": 128, "likewis": [4, 41, 68, 135, 303, 305], "likin": [29, 34, 202], "likins1973": [28, 34, 202], "lim": [88, 130, 227, 286], "lim_": [89, 94, 96, 113, 115, 227, 286, 290], "limit": [1, 3, 13, 14, 16, 23, 28, 46, 52, 53, 57, 59, 65, 67, 69, 87, 88, 90, 92, 93, 94, 96, 97, 100, 108, 110, 115, 116, 118, 124, 128, 130, 141, 179, 185, 188, 204, 206, 211, 213, 216, 217, 220, 223, 224, 226, 228, 232, 233, 235, 236, 237, 238, 240, 245, 252, 255, 258, 259, 261, 263, 264, 274, 276, 282, 287, 288, 290, 292, 300], "limit_denomin": 88, "limit_seq": [225, 227], "limitinf": 227, "limiting_distribut": 240, "limits_": [88, 130, 205, 222, 290], "limitseq": 225, "limsup_": 227, "linalg": [53, 54, 69, 298], "lincomb": 215, "line": [3, 4, 9, 11, 12, 13, 14, 15, 16, 18, 22, 33, 35, 39, 41, 59, 68, 69, 71, 79, 80, 84, 89, 98, 99, 100, 102, 103, 104, 105, 110, 113, 115, 116, 117, 124, 128, 134, 135, 137, 139, 141, 144, 147, 154, 155, 158, 170, 199, 204, 205, 206, 220, 223, 230, 232, 236, 240, 241, 249, 251, 252, 253, 256, 259, 261, 271, 274, 282, 288, 298, 301, 309], "line2d": [98, 101, 104], "line2dbaseseri": [13, 206], "line3d": [101, 102, 103], "line3dbaseseri": 206, "line_break": 220, "line_color": [5, 206, 223], "line_integr": 115, "linear": [18, 23, 25, 29, 30, 32, 37, 43, 49, 51, 53, 54, 57, 68, 69, 80, 87, 88, 89, 91, 92, 96, 101, 111, 113, 115, 117, 120, 122, 131, 134, 135, 140, 143, 147, 148, 150, 151, 152, 154, 155, 162, 184, 187, 188, 203, 206, 207, 209, 211, 213, 215, 216, 218, 226, 228, 230, 233, 236, 237, 239, 258, 279, 281, 297, 298, 301, 302, 305, 306], "linear_coeffici": 236, "linear_coefficients_integr": 236, "linear_differential_equ": 236, "linear_eq_to_matrix": [53, 236, 238, 239, 303], "linear_momentum": [28, 30, 148, 154], "linear_ode_to_matrix": 236, "linear_pathwai": [147, 155], "linear_polar": 162, "linear_solv": [152, 153], "linear_stiff": 147, "linearcoeffici": 236, "lineardamp": [147, 302, 306], "linearent": [4, 98, 101, 102, 103, 104], "linearentity2d": 101, "linearentity3d": [101, 102], "linearli": [65, 69, 96, 112, 124, 152, 209, 213, 236, 238, 246], "linearpathwai": [18, 134, 147, 155, 298, 302, 306], "linearspr": [147, 306], "linecollect": [13, 206], "lineover1drangeseri": [141, 206], "linestyl": 13, "link": [3, 4, 5, 7, 11, 15, 16, 23, 24, 49, 53, 69, 89, 98, 104, 115, 144, 147, 151, 252, 255, 256, 294, 303], "link1": 303, "link2": 303, "link3": 303, "link4": 303, "linkag": [300, 304], "linkcod": 5, "linodesolv": 236, "linodesolve_typ": 236, "linprog": [50, 238], "linsolv": [30, 152, 218, 238, 239, 297], "linspac": [14, 18, 22, 30, 55, 69, 111, 129, 298], "linux": [8, 9, 11, 59], "linz": 264, "liouvil": 236, "liouville_integr": 236, "liouvillian": 236, "lip": 240, "list": [0, 2, 3, 4, 5, 9, 11, 12, 14, 17, 18, 24, 25, 26, 30, 31, 36, 41, 51, 52, 53, 54, 55, 56, 57, 59, 61, 64, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 113, 115, 116, 117, 118, 120, 123, 124, 127, 128, 129, 130, 135, 141, 143, 147, 148, 151, 152, 155, 157, 163, 174, 176, 179, 180, 184, 185, 187, 188, 190, 192, 199, 203, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 244, 245, 246, 249, 251, 252, 253, 254, 255, 256, 258, 259, 261, 285, 289, 290, 292, 295, 296, 297, 298, 300, 301, 305, 308], "list2numpi": 124, "list_can_dim": 192, "list_free_indic": 84, "list_of_poli": 111, "list_of_second_moments_of_area": 98, "list_of_trigonometric_ident": 229, "list_to_frac": 296, "list_visitor": 255, "listcoeff": 211, "listmonom": 211, "listofsolut": 236, "listterm": 211, "liter": [4, 12, 14, 16, 43, 69, 78, 88, 116, 118, 130, 190, 197, 232], "literal_dp": 69, "literal_sp": 69, "literatur": [4, 15, 113, 212, 282], "litter": 88, "littl": [12, 41, 43, 68, 80, 98, 124, 128, 129, 195, 209, 214, 216, 220, 230, 232, 240, 255, 268, 301], "liu": 214, "live": [7, 30, 60, 70, 215, 233], "livehtml": 8, "ll": [8, 18, 35, 36, 68, 86, 124, 132, 134, 147, 155, 249, 298, 305], "ll1": 100, "ll2": 100, "ll3": 100, "ll4": 100, "ll5": 100, "ll6": 100, "lll": 209, "lll_transform": 209, "llvm": 2, "llvm_callabl": 2, "llvmjitcod": 2, "llvmlite": 2, "lm": [26, 27, 213, 216, 302, 305], "lmm": 233, "lmn": 69, "lmodern": 8, "ln": [88, 94, 115, 130, 220, 222, 236, 240, 296], "ln_notat": 220, "lnc": [115, 214, 238], "lo": 238, "load": [8, 13, 19, 23, 31, 69, 88, 116, 135, 136, 137, 139, 147, 148, 150, 152, 155, 157, 170, 204, 281, 298, 302, 306], "load_vector": 135, "loadbas": 157, "loads_posit": 137, "loan": 124, "lobatto": 115, "loc": 135, "local": [2, 11, 12, 45, 60, 62, 63, 64, 88, 90, 113, 130, 201, 207, 213, 238, 251, 298, 308, 310], "local_dict": 130, "local_var": 253, "localhost": 8, "localis": 207, "locat": [5, 11, 12, 13, 24, 27, 28, 31, 33, 71, 80, 88, 102, 124, 128, 135, 136, 139, 151, 154, 155, 157, 158, 203, 215, 216, 220, 232, 240, 254, 262, 264, 268, 270, 273, 298, 302, 305], "locate_new": [264, 267, 268, 269, 270, 271], "locatenew": [13, 27, 28, 30, 31, 33, 35, 148, 154, 200, 203, 301, 302, 303, 305, 308, 309, 310], "location_matrix": 240, "lock": 61, "log": [4, 5, 9, 11, 12, 16, 18, 43, 59, 61, 67, 69, 79, 87, 88, 92, 93, 94, 96, 106, 110, 112, 113, 115, 124, 128, 130, 132, 206, 211, 220, 222, 227, 230, 232, 236, 239, 240, 247, 286, 296, 297], "log1": 9, "log10": [69, 220], "log1p": [69, 220], "log1p_opt": 69, "log2": [69, 96, 220], "log2_opt": 69, "log2const_opt": 69, "log_b": 239, "log_warn": 220, "logarithm": [5, 16, 61, 67, 69, 88, 89, 94, 113, 115, 124, 128, 211, 213, 217, 220, 230, 232, 239, 240, 287], "logarithmic_distribut": 240, "logarithmic_integr": 96, "logarithmically_concave_funct": 67, "logarithmically_convex_funct": 67, "logarithmicdistribut": 240, "logarithmicintegr": 96, "logcombin": [232, 236, 239], "loggamma": [4, 5, 96, 220], "loggammafunct": 96, "logger": 130, "logic": [12, 13, 14, 15, 41, 43, 62, 63, 64, 65, 68, 88, 90, 113, 115, 128, 182, 184, 185, 189, 206, 220, 222, 228, 236, 240, 258, 288, 289, 290, 292], "logint": 220, "logintegr": 220, "logist": 240, "logistic_distribut": 240, "logisticdistribut": 240, "loglogist": 240, "lognorm": 240, "lognormaldistribut": 240, "logo": 44, "logx": [88, 227], "lomax": 240, "lomax_distribut": 240, "london": [214, 233], "long": [0, 4, 5, 11, 12, 14, 28, 48, 57, 69, 80, 87, 88, 89, 91, 101, 113, 115, 116, 118, 124, 128, 130, 135, 136, 204, 216, 217, 220, 229, 230, 238, 240, 252, 259, 261, 267, 288, 291, 301], "long_frac_ratio": 220, "longer": [3, 4, 11, 12, 16, 27, 40, 88, 98, 128, 208, 209, 213, 220, 229, 232, 258, 261, 288, 296, 305], "longest": [158, 258], "longrightarrow": 120, "look": [3, 4, 5, 7, 9, 11, 12, 13, 16, 22, 23, 41, 42, 43, 60, 68, 69, 79, 88, 93, 94, 96, 109, 124, 128, 150, 152, 174, 184, 185, 188, 203, 206, 210, 211, 215, 220, 222, 223, 227, 230, 232, 233, 236, 237, 242, 251, 255, 259, 261, 269, 286, 291, 294, 295, 301], "looking_for": 69, "lookup": [115, 124, 128, 230], "lookup_view": 262, "loop": [14, 46, 48, 51, 55, 68, 69, 128, 143, 199, 206, 209, 217, 220, 236, 255, 258, 259, 291, 303], "looping_end": 68, "looping_start": 68, "loos": [69, 88], "lopen": [67, 88, 228, 235, 240], "lorentz": 246, "lorentzindex": 144, "lorenz": 55, "lose": [14, 16, 207, 209], "loss": [14, 15, 69, 113, 190, 252, 270], "lost": [14, 88], "lot": [7, 11, 13, 14, 22, 30, 79, 88, 106, 113, 115, 124, 206, 209, 216, 219, 223, 233, 239, 251, 296], "loui": 222, "lovasz": 209, "love": 7, "lov\u00e1sz": 209, "low": [16, 41, 42, 69, 88, 89, 96, 128, 152, 210, 213, 218, 220, 232, 252, 253, 258], "low_index_subgroup": 70, "lower": [4, 15, 41, 50, 65, 67, 69, 79, 80, 87, 88, 90, 96, 97, 99, 104, 105, 115, 119, 120, 124, 135, 141, 146, 151, 190, 203, 205, 207, 209, 211, 213, 216, 220, 229, 230, 232, 236, 245, 246, 255, 264, 286, 294, 298], "lower_bob": 151, "lower_bound": [97, 98, 101, 104], "lower_central_seri": 79, "lower_incomplete_gamma_funct": 96, "lower_limit": [141, 286], "lower_polygon": 104, "lower_seg": 104, "lower_triangular": [65, 124], "lower_triangular_solv": [119, 124], "lowercas": [15, 16, 61, 130, 236, 251, 286], "lowergamma": [4, 96, 240], "lowertriangularhandl": 65, "lowertriangularmatrix": 65, "lowertriangularpred": 65, "lowest": [39, 69, 79, 84, 128, 137, 207, 209, 222, 239], "lpart": 255, "lpathwai": 18, "lpmax": 238, "lpmin": 238, "lr": 207, "lrh": 310, "ls1": 85, "ls2": 85, "lseri": 88, "lsoda": 21, "lst": 251, "lt": [88, 216, 220, 261], "ltd": 87, "lti": [46, 140, 141], "ltrim": 216, "lu": [53, 120, 124, 152, 153, 209, 214], "lu_": 124, "lu_solv": [53, 124, 209], "luca": [93, 128, 220, 226], "lucas_numb": 93, "lucas_pseudoprim": 128, "lucasl": 220, "lucasnumb": 93, "lucaspseudoprim": 128, "lucien": 70, "lucki": 229, "lucombin": 124, "ludecomposit": [119, 120, 124, 209, 292], "ludecomposition_simpl": [124, 292], "ludecompositionff": 124, "luke": [4, 96, 113, 230], "luke1969": [113, 230], "lukpank": 11, "luschni": [93, 96, 216], "lusolv": [27, 31, 53, 119, 124, 148, 152, 153, 238, 292, 303], "lvert": 113, "lvovich": 5, "ly": [104, 124, 211], "l\u00e9vy": 195, "m": [0, 8, 9, 11, 12, 13, 16, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 39, 41, 43, 46, 59, 61, 65, 69, 70, 76, 77, 79, 80, 84, 87, 88, 89, 90, 91, 93, 96, 98, 100, 104, 105, 113, 115, 117, 119, 120, 121, 123, 124, 125, 127, 128, 130, 131, 132, 134, 135, 136, 139, 143, 145, 146, 148, 150, 152, 153, 154, 157, 159, 161, 166, 173, 187, 188, 191, 193, 195, 205, 207, 208, 209, 211, 213, 214, 215, 216, 217, 220, 221, 222, 223, 225, 226, 227, 228, 230, 232, 233, 236, 238, 239, 240, 241, 242, 245, 246, 252, 253, 255, 258, 260, 264, 267, 269, 273, 274, 286, 292, 295, 296, 297, 298, 302, 305, 308, 309, 310], "m0": [135, 205, 246], "m1": [124, 128, 135, 136, 161, 169, 187, 189, 193, 233, 236, 241, 246], "m11": [39, 240], "m12": [39, 240], "m13": 39, "m15": 135, "m172": 89, "m2": [124, 128, 135, 136, 154, 161, 169, 187, 189, 193, 215, 233, 236, 241, 246], "m20": 71, "m21": [39, 240], "m22": [39, 240], "m23": 39, "m3": [124, 169, 233, 241], "m31": 39, "m32": 39, "m33": [39, 128], "m4": 233, "m4nzdu": 205, "m53": 128, "m_": [18, 26, 65, 132, 134, 205, 213, 242], "m_0": [135, 213, 233], "m_1": [93, 143, 169, 187, 205, 233], "m_15": 135, "m_2": [31, 93, 157, 169, 187, 205], "m_3": [31, 157, 169, 205], "m_a": 298, "m_c": 298, "m_d": [26, 157, 298], "m_frac": 209, "m_i": [93, 128, 205, 213], "m_ik": [93, 128], "m_k": 93, "m_lll": 209, "m_m": 157, "m_n": 213, "m_op": 27, "m_pa": 132, "m_primit": 209, "m_sqrt2": 220, "m_sqrt2l": 220, "m_tf": 143, "ma": [80, 87, 298, 306], "ma217": 240, "macaulai": 96, "macdonald": 214, "machin": [2, 4, 7, 8, 9, 221, 232, 236, 285], "machineri": [4, 88, 215, 259], "maclaurin": [87, 92], "maco": 9, "made": [3, 5, 11, 12, 13, 14, 15, 16, 18, 22, 24, 27, 30, 36, 41, 43, 56, 82, 84, 88, 89, 94, 97, 98, 101, 104, 105, 115, 118, 124, 128, 130, 147, 155, 207, 209, 211, 213, 215, 216, 220, 221, 227, 228, 229, 232, 236, 238, 239, 240, 253, 258, 261, 273, 291, 298], "mag": 30, "magazin": 124, "magic": [80, 232, 251, 288], "magnet": [33, 145, 161, 273], "magnif": 163, "magnitud": [18, 30, 33, 36, 46, 61, 69, 87, 88, 92, 96, 129, 135, 136, 137, 139, 141, 147, 154, 155, 188, 197, 199, 206, 264, 271, 273, 298, 305], "mai": [2, 3, 4, 8, 9, 11, 12, 13, 14, 15, 16, 18, 22, 23, 27, 33, 35, 37, 38, 39, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 65, 67, 68, 69, 70, 71, 79, 80, 81, 87, 88, 89, 90, 92, 93, 94, 96, 98, 100, 101, 103, 104, 105, 113, 115, 116, 118, 119, 123, 124, 125, 127, 128, 130, 139, 149, 150, 152, 153, 157, 176, 185, 190, 191, 192, 194, 197, 199, 203, 206, 207, 208, 209, 211, 213, 215, 219, 220, 221, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 249, 251, 252, 253, 254, 255, 256, 258, 259, 261, 271, 273, 285, 286, 288, 291, 292, 296, 297, 305], "mail": [3, 9, 11, 13, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 220, 289, 300], "mailmap_check": 11, "mailoo": 11, "main": [2, 4, 5, 7, 9, 11, 13, 16, 22, 36, 54, 64, 65, 69, 88, 94, 113, 124, 127, 188, 204, 206, 207, 209, 211, 213, 220, 227, 236, 239, 245, 252, 296, 297, 309], "mainli": [79, 96, 124, 129, 195, 204, 213, 230, 233, 236], "maintain": [7, 14, 15, 16, 88, 89, 128, 136, 220, 228, 229, 236, 239, 255], "mainten": [3, 64], "major": [2, 3, 5, 8, 13, 21, 48, 57, 98, 245, 290, 296], "majorli": 88, "make": [2, 3, 4, 5, 8, 9, 12, 13, 14, 15, 16, 18, 22, 25, 27, 28, 30, 32, 35, 37, 39, 41, 42, 43, 45, 48, 53, 54, 56, 60, 63, 64, 65, 67, 69, 70, 78, 79, 87, 88, 89, 90, 91, 92, 93, 94, 96, 100, 104, 115, 116, 118, 124, 127, 128, 129, 130, 134, 135, 136, 137, 139, 152, 157, 170, 187, 192, 204, 206, 209, 210, 211, 213, 215, 216, 217, 219, 220, 223, 228, 229, 230, 232, 236, 237, 238, 239, 244, 246, 249, 251, 252, 253, 254, 256, 258, 259, 268, 273, 274, 288, 289, 290, 291, 292, 296, 301, 303, 308, 309], "make_mod_elt": 215, "make_monic_over_integers_by_scaling_root": 216, "make_perm": 79, "make_routin": [69, 253], "makefil": 8, "man": [115, 214], "man93": [214, 216], "manag": [3, 7, 9, 12, 18, 59, 63, 64, 130, 148, 170, 213, 232, 246, 249, 251, 256, 298], "mandatori": [69, 220, 252], "mangl": 220, "mani": [2, 3, 4, 7, 12, 14, 15, 16, 18, 22, 23, 26, 27, 30, 36, 37, 39, 41, 42, 43, 48, 49, 50, 52, 54, 55, 57, 59, 67, 68, 69, 70, 76, 79, 84, 88, 89, 90, 92, 93, 94, 96, 100, 113, 115, 118, 124, 128, 129, 130, 133, 150, 152, 153, 174, 190, 198, 207, 209, 210, 211, 213, 215, 216, 224, 227, 228, 230, 232, 233, 236, 237, 238, 239, 240, 244, 253, 258, 285, 286, 288, 289, 290, 291, 295, 296, 297, 300, 301], "manifest": [41, 208], "manifesto": 93, "manifold": [13, 90], "manipul": [2, 15, 22, 23, 28, 35, 38, 39, 41, 48, 51, 53, 55, 68, 69, 70, 79, 88, 94, 96, 113, 128, 129, 150, 188, 209, 210, 211, 214, 219, 220, 222, 229, 232, 243, 258, 275, 281, 282, 285, 286, 287, 288, 289, 290, 292, 295, 296], "manner": [12, 27, 33, 72, 89, 96, 188, 233, 236, 241, 258, 273], "mantissa": 69, "manual": [2, 3, 5, 8, 12, 13, 14, 15, 18, 22, 27, 31, 43, 51, 69, 70, 79, 92, 98, 115, 116, 130, 143, 154, 157, 206, 213, 220, 236, 238, 239, 254, 286, 296, 303], "manualintegr": 115, "manuel": [115, 225], "manufactur": 129, "manuscript": [89, 115], "manwright94": [214, 216], "map": [15, 36, 41, 43, 67, 68, 69, 71, 78, 79, 80, 88, 89, 93, 100, 104, 111, 113, 115, 118, 124, 128, 131, 141, 152, 168, 179, 180, 185, 199, 206, 207, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 227, 232, 233, 236, 237, 238, 239, 240, 244, 245, 252, 255, 258, 259, 261, 264, 305], "mapl": [16, 115, 209, 236, 290], "maple_cod": 220, "maplecodeprint": 220, "maplesoft": 236, "mapsto": [87, 113, 124, 215], "marbl": 240, "march": 88, "marcum": 96, "marcum_q": 96, "marcumq": 96, "margin": [128, 143, 206, 240], "marginal_distribut": 240, "marichev": [113, 230], "mark": [3, 4, 5, 141, 163, 175, 233, 249, 254, 256], "markdown": [3, 11, 15], "marker": [141, 206], "markers": 141, "marko": 87, "markov": 240, "markov_chain": 240, "markup": [3, 11, 220], "mascheroni": [88, 96], "mask": [68, 220], "mass": [13, 18, 21, 22, 23, 24, 25, 26, 30, 31, 33, 35, 46, 105, 145, 146, 148, 151, 152, 154, 157, 166, 191, 193, 194, 195, 251, 273, 298, 301, 302, 303, 305, 306, 308, 310], "mass_cent": 303, "mass_matrix": [25, 26, 31, 148, 152, 157, 298, 301, 308, 309], "mass_matrix_ful": [22, 25, 26, 148, 152, 157, 306], "mass_matrix_kin": 152, "masscent": [13, 24, 28, 30, 148, 151, 154, 157, 298, 303, 306], "masscenter_vel": 148, "massei": 89, "massiv": 302, "massless": 302, "master": [4, 5, 7, 11, 12, 59, 115, 251], "mat": [69, 120, 159, 184, 220], "mat_1": 69, "mat_2": 69, "mat_a": 143, "mat_b": 143, "mat_c": 143, "mat_delim": 220, "mat_str": 220, "mat_symbol_styl": 220, "matadd": [88, 120, 220], "match": [2, 3, 4, 11, 12, 13, 14, 16, 32, 41, 43, 55, 79, 80, 87, 88, 96, 101, 113, 115, 124, 151, 157, 166, 191, 199, 209, 216, 232, 233, 236, 237, 238, 240, 249, 251, 253, 258, 259, 270, 286, 298], "matchdict": 236, "matching_hint": 236, "materi": [0, 45, 135, 161, 294], "mateusz": 0, "math": [2, 4, 8, 12, 14, 22, 23, 33, 43, 57, 61, 65, 68, 70, 79, 88, 93, 96, 98, 115, 124, 128, 129, 139, 150, 206, 209, 211, 213, 214, 219, 220, 236, 237, 240, 252, 253, 259, 269, 270, 271, 272, 273, 285, 286, 290], "math24": 236, "math56a_s08_notes015": 240, "math56as08": 240, "math_macro": 220, "mathbb": [27, 41, 43, 51, 65, 70, 71, 79, 87, 88, 89, 94, 96, 113, 124, 205, 207, 208, 210, 211, 213, 215, 216, 219, 227, 228, 230, 233, 239, 240, 296], "mathbf": [18, 23, 25, 26, 28, 32, 33, 35, 36, 61, 120, 150, 152, 158, 195, 199, 204, 220, 230, 241, 268, 269, 271, 273, 274, 298], "mathc": 240, "mathcal": [28, 93, 94, 113, 143, 187, 205, 216, 228], "mathcin": 69, "mathcircl": 93, "mathemat": [2, 3, 5, 12, 13, 14, 15, 18, 21, 29, 33, 35, 36, 38, 41, 43, 50, 52, 54, 55, 57, 58, 61, 63, 64, 67, 69, 70, 74, 78, 80, 87, 88, 89, 90, 93, 94, 95, 96, 101, 102, 113, 115, 118, 120, 124, 128, 129, 130, 143, 144, 195, 207, 208, 210, 211, 214, 219, 220, 228, 229, 233, 235, 236, 239, 240, 245, 252, 253, 259, 264, 268, 271, 273, 285, 286, 288, 289, 290, 291, 294, 296, 298, 304, 305], "mathematica": [2, 16, 69, 80, 130, 290, 292], "mathematica_cod": [69, 220], "mathematical_express": 5, "mathematical_singular": 67, "mathematician": [233, 239], "mathfrak": 215, "mathieu": 220, "mathieu_funct": 96, "mathieuandspheroidalfunct": 96, "mathieubas": 96, "mathieuc": [96, 220], "mathieucprim": [96, 220], "mathieufunct": 96, "mathieusprim": [96, 220], "mathit": 130, "mathjax": [2, 5, 116, 204, 295], "mathml": 220, "mathml2": 220, "mathml_presentation_repr": 197, "mathml_tag": 220, "mathmlcontentprint": 220, "mathmlpresentationprint": 220, "mathmlprinterbas": 220, "mathrm": [2, 4, 59, 78, 87, 88, 89, 96, 113, 115, 211, 213, 220, 228, 230, 236, 239, 240, 286, 290], "mathtt": 220, "mathwav": 240, "mathwork": [124, 141, 240, 292], "mathworld": [4, 15, 65, 81, 82, 88, 89, 91, 93, 94, 96, 98, 104, 115, 124, 128, 214, 223, 228, 233, 240, 258], "matin_opt": 69, "matinv_opt": 69, "matlab": [21, 30, 69, 253, 292], "matlplotlib": 30, "matmul": [88, 120, 209], "matplotlib": [2, 4, 5, 8, 13, 14, 18, 30, 55, 59, 111, 116, 141, 170, 204, 206, 295, 298], "matplotlibbackend": [13, 206], "matpow": [120, 220], "matric": [2, 4, 15, 22, 27, 30, 36, 40, 41, 65, 69, 88, 89, 115, 123, 125, 127, 130, 143, 151, 152, 153, 159, 162, 163, 165, 173, 174, 184, 189, 199, 205, 209, 215, 220, 221, 228, 230, 232, 233, 236, 238, 239, 241, 253, 254, 281, 287, 289, 290, 305], "matrix": [14, 15, 18, 22, 24, 25, 26, 28, 30, 31, 32, 36, 38, 39, 41, 46, 49, 54, 56, 61, 69, 77, 80, 88, 89, 90, 96, 103, 113, 115, 117, 119, 121, 122, 126, 127, 129, 130, 131, 134, 143, 144, 146, 148, 151, 152, 153, 154, 157, 159, 162, 163, 165, 173, 174, 179, 184, 185, 187, 189, 190, 192, 195, 199, 205, 207, 209, 213, 215, 218, 220, 221, 228, 230, 232, 233, 236, 238, 239, 241, 242, 244, 245, 246, 247, 252, 253, 258, 259, 261, 264, 266, 267, 269, 273, 279, 287, 290, 291, 296, 297, 298, 301, 303, 305, 306, 308, 309, 310], "matrix1": 209, "matrix2numpi": 124, "matrix_differential_equ": 236, "matrix_exp": 236, "matrix_exp_jordan_form": 236, "matrix_exponenti": 236, "matrix_fglm": 213, "matrix_form": 117, "matrix_gamma_distribut": 240, "matrix_multiply_elementwis": 124, "matrix_nod": 69, "matrix_normal_distribut": 240, "matrix_rep": 190, "matrix_tensor_product": 189, "matrix_to_dens": 184, "matrix_to_qubit": 184, "matrix_to_vector": 267, "matrixarithmet": 13, "matrixbas": [4, 13, 53, 119, 120, 123, 124, 152, 153, 209], "matrixcalculu": 13, "matrixcommon": 13, "matrixdeprec": 13, "matrixdetermin": 13, "matrixeigen": 13, "matrixel": [13, 69], "matrixerror": 124, "matrixexpr": [15, 43, 120, 121, 123], "matrixgamma": 240, "matrixi": 124, "matrixkind": [15, 38, 88, 123, 228], "matrixnorm": 240, "matrixoper": 13, "matrixpermut": 120, "matrixproperti": 13, "matrixreduct": 13, "matrixrequir": 13, "matrixset": [120, 228], "matrixshap": 13, "matrixsolv": [69, 220], "matrixspeci": 13, "matrixsubspac": 13, "matrixsymbol": [13, 38, 41, 53, 65, 66, 69, 88, 120, 123, 124, 220, 240, 242], "matt": 176, "matter": [12, 32, 43, 67, 77, 80, 87, 88, 93, 113, 115, 227, 258, 290, 291], "matthew": 0, "matur": [40, 41, 238, 239], "matvec": 252, "max": [13, 18, 69, 79, 80, 88, 94, 96, 98, 124, 128, 130, 134, 135, 205, 206, 213, 215, 216, 220, 227, 229, 230, 259], "max_bending_mo": 135, "max_bmoment": 135, "max_coset": 70, "max_curv": 128, "max_deflect": 135, "max_degre": [115, 216], "max_denomin": 88, "max_div": 79, "max_expon": 69, "max_it": 232, "max_len": 232, "max_norm": [211, 216], "max_ord": 69, "max_shear_forc": 135, "max_stack_s": 70, "max_step": 128, "max_term": 232, "max_tri": [211, 215, 216], "max_wir": 170, "maxdepth": 220, "maxim": [12, 18, 79, 89, 117, 134, 207, 211, 215, 227, 229], "maxima": [2, 52, 130, 239], "maximal_fiber_veloc": [18, 134], "maximal_ord": [211, 215], "maximum": [13, 14, 16, 18, 52, 53, 67, 69, 70, 79, 80, 88, 94, 115, 124, 128, 132, 134, 135, 187, 195, 206, 211, 213, 216, 220, 227, 228, 232, 233, 236, 238, 239, 240, 255, 258, 301], "maxn": [88, 92, 124], "maxprec": 88, "maxsiz": 88, "maxstep": 216, "maxterm": 118, "maxtriesexcept": 215, "maxwel": 240, "maxwell_distribut": 240, "maxwelldistribut": 240, "mayavi": 13, "mayb": [8, 12, 42, 50], "mayor": 162, "mb": [30, 154, 306], "mbox": 68, "mc": [89, 298, 303, 306], "mccluskei": 118, "mccluskey_algorithm": 118, "mcgraw": [29, 34, 96, 115, 152, 199, 202, 264], "mcii": 240, "mcode": 220, "mcodeprint": 220, "mcydwshkogamkzcelyfgayr": 89, "md": [3, 5, 12, 249, 256, 298], "md5": 261, "mdarg": 88, "mdft": 146, "me": [18, 22, 30, 89, 199, 220, 242, 298, 302], "mead": 89, "mean": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 21, 24, 35, 41, 42, 43, 48, 56, 65, 70, 80, 87, 88, 89, 90, 106, 113, 115, 116, 118, 121, 123, 124, 128, 135, 147, 190, 192, 195, 199, 204, 206, 207, 208, 210, 213, 215, 219, 220, 230, 232, 233, 235, 236, 238, 239, 240, 241, 242, 244, 245, 251, 258, 269, 285, 286, 288, 290, 291, 292, 296, 297], "meaning": [41, 62, 64, 68, 89], "meaningfulli": 207, "meaningless": 92, "meant": [4, 5, 12, 13, 16, 22, 30, 41, 43, 69, 88, 96, 101, 115, 128, 206, 211, 228, 232, 237, 242, 269, 291], "meanwhil": 215, "measur": [16, 21, 28, 32, 33, 36, 61, 94, 96, 104, 119, 170, 179, 184, 192, 195, 197, 199, 203, 216, 228, 229, 232, 240, 263, 264, 267, 268, 270, 271, 273, 298], "measure_al": 184, "measure_all_oneshot": 184, "measure_parti": 184, "measure_partial_oneshot": 184, "meat": 69, "mechan": [2, 17, 18, 19, 20, 22, 32, 34, 43, 47, 88, 111, 115, 124, 134, 135, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 172, 176, 179, 185, 187, 188, 189, 192, 199, 202, 205, 281, 298, 300, 301, 302, 303, 305, 306, 308, 309, 310], "mechanicalc": 104, "mechanics_print": [24, 25, 26, 157, 301, 303, 308, 309, 310], "media": [30, 163], "medial": 104, "median": [104, 240], "mediterranean": 207, "medium": [8, 43, 159, 160, 163, 164, 174, 213, 281], "medium1": 163, "medium2": 163, "meet": [41, 89, 227], "meetmeonmondai": 89, "meetmeonmondayat8am": 89, "meijaard": 29, "meijaard2007": [29, 301], "meijer": [96, 106, 114, 115, 276, 286, 296], "meijer_g": 96, "meijerg": [96, 107, 113, 115, 220, 240, 296], "meijerint": [107, 109, 113, 115], "meijerint_definit": 113, "meijerint_indefinit": 113, "meijerint_invers": 113, "mein": 258, "mellin": [96, 115], "mellin_transform": 115, "mellintransform": 115, "member": [0, 4, 13, 41, 48, 68, 77, 79, 89, 111, 134, 137, 139, 207, 228, 245], "member_1": 139, "member_2": 139, "member_3": 139, "member_4": 139, "member_5": 139, "member_length": 139, "membership": [52, 86, 215, 228], "memo": 260, "memoiz": [255, 257, 283], "memoize_properti": 254, "memori": [12, 15, 69, 88, 128, 216, 241, 252, 255], "men": 195, "menez": 128, "mensor": 61, "mental": 15, "mention": [2, 3, 4, 14, 31, 33, 43, 48, 55, 79, 113, 115, 130, 137, 143, 159, 230, 233, 236, 240, 268, 269, 270, 271, 292, 301], "menu": 8, "mere": [63, 64, 69, 71, 92, 185], "merg": [3, 7, 11, 12, 13, 69, 79, 80, 88, 198, 220, 228, 240, 251, 258, 259], "merge_solut": 233, "mermin": 175, "meromorph": [88, 96], "mersenn": 128, "mersenne_prime_expon": 128, "mersenneforum": 128, "mersenneprim": 128, "mesh": 206, "mesh_i": 206, "mesh_u": 206, "mesh_v": 206, "mesh_x": 206, "mesh_z": 206, "mess": [176, 236, 239, 296], "messag": [3, 7, 12, 13, 14, 89, 116, 249, 254, 256, 261], "messi": 230, "met": [88, 139, 233, 239, 254, 296], "meta": [5, 88, 236, 237], "metaclass": 88, "metacycl": 71, "metadata": [3, 11, 68, 254, 256], "metahint": 88, "metaprogram": 88, "meter": [135, 136, 137, 161, 164, 193, 194, 195, 196, 197], "meth": 14, "method": [2, 3, 4, 5, 8, 11, 12, 14, 15, 16, 18, 21, 22, 23, 24, 28, 29, 30, 32, 33, 35, 36, 40, 41, 48, 50, 51, 52, 54, 55, 56, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 79, 80, 81, 87, 88, 89, 90, 91, 92, 94, 95, 96, 99, 100, 101, 102, 104, 107, 110, 112, 113, 115, 117, 119, 120, 124, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 143, 144, 147, 148, 150, 151, 153, 154, 155, 157, 158, 164, 167, 169, 171, 179, 180, 185, 187, 190, 192, 194, 197, 198, 199, 201, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 221, 222, 223, 225, 226, 227, 228, 232, 233, 236, 238, 240, 241, 243, 245, 246, 247, 251, 253, 255, 258, 259, 264, 268, 271, 274, 275, 279, 281, 285, 286, 287, 288, 291, 296, 298, 304, 307], "method_nam": 14, "method_of_undetermined_coeffici": 236, "method_ring": 258, "methodologi": [239, 289], "metric": [14, 69, 80, 84, 90, 144, 232, 236, 239, 246], "metric_nam": 246, "metric_symmetri": [13, 246], "metric_to_christoffel_1st": 90, "metric_to_christoffel_2nd": 90, "metric_to_ricci_compon": 90, "metric_to_riemann_compon": 90, "meurer": 0, "mfork": 301, "mframe": 301, "mgamma": 146, "mi": [128, 220], "mib": 9, "micali": 89, "michael": [87, 214, 219], "microsecond": 129, "microsoft": 8, "mid": [43, 70, 89, 92, 130, 136, 228, 233], "middl": [43, 96, 104, 113, 124, 136, 170, 206, 230, 296], "midpoint": [101, 103, 104, 115, 206, 270], "midwai": 89, "might": [3, 4, 9, 11, 12, 13, 14, 15, 16, 21, 22, 30, 35, 37, 41, 42, 43, 50, 54, 67, 69, 88, 92, 94, 101, 110, 113, 120, 124, 128, 130, 135, 170, 199, 206, 209, 210, 211, 216, 217, 220, 221, 228, 229, 230, 232, 233, 238, 239, 240, 252, 253, 256, 258, 261, 285, 288, 290, 291, 293, 296], "miglani": 11, "mignott": [211, 213], "mignotte_sep_bound_squar": 211, "migrat": 3, "miktex": [2, 8], "mile": 197, "mileston": 253, "militari": 89, "miller": 128, "milton": [4, 96], "mimic": [115, 116, 133, 204, 259], "mimo": [46, 140, 143], "mimofeedback": [46, 140, 143], "mimolineartimeinvari": 143, "mimoparallel": [140, 143], "mimoseri": [140, 143], "min": [13, 80, 84, 88, 93, 94, 124, 130, 205, 206, 215, 220, 226, 236, 258], "min_degre": 216, "min_expon": 69, "min_qubit": [170, 174], "min_wir": 170, "min_x": 233, "min_z": 233, "mind": [4, 11, 12, 14, 16, 28, 38, 41, 52, 88, 124, 206, 227, 228, 273, 291], "minim": [4, 41, 43, 67, 79, 80, 84, 87, 88, 89, 113, 115, 118, 124, 128, 148, 159, 209, 210, 211, 213, 216, 219, 229, 232, 233, 238, 258, 305], "minima": [52, 239], "minimal_block": 79, "minimal_polynomi": 215, "minimal_uncollected_subword": 78, "minimum": [3, 13, 21, 32, 52, 67, 69, 79, 80, 82, 84, 88, 89, 92, 94, 124, 152, 174, 206, 208, 213, 238, 239, 240, 254, 286, 301], "minisat": 2, "minisat22": 2, "minlex": 258, "minor": [88, 98, 124, 209, 220, 251], "minor_submatrix": 124, "minpoli": [88, 210, 211, 213, 215], "minpoly_of_el": 88, "minterm": 118, "minu": [33, 69, 87, 88, 209, 213, 220, 271], "minut": [12, 16, 21, 32, 53, 301], "minv": 209, "minv_reduc": 209, "mirror": [4, 96, 115, 163], "mirror_formula": 163, "misappli": 13, "misc": [94, 124, 261], "miscellan": [257, 283], "mise": 240, "mismatch": 124, "miss": [78, 79, 105, 209, 220, 238, 253, 296], "missingunityerror": 215, "mission": [5, 68, 121], "mississippi": [93, 258], "misspel": 13, "mistak": [5, 11, 12, 14, 16, 51, 79, 130, 259], "mistaken": 12, "mistyp": 12, "misunderstand": 41, "mit": 91, "mix": [32, 41, 60, 87, 94, 124, 130, 210, 211, 216, 220, 239, 242, 244, 246, 259], "mixin": [88, 258], "mixtur": [67, 69, 105, 207, 253], "mj": 0, "mk": [192, 195], "ml": 302, "mlatex": 21, "mlg": 302, "mlq_1": 302, "mlq_2": 302, "mly": 302, "mm": [65, 68, 128, 152, 188, 209, 301, 308, 309], "mm_full": 301, "mn": [188, 220, 240], "mnemon": [16, 229, 258], "mnt": 8, "mo": [30, 128, 220], "moa": 74, "mobiu": [13, 91, 93, 128], "mobius_transform": 91, "mobiusrang": 128, "mock": 170, "mod": [12, 13, 89, 93, 94, 118, 125, 128, 186, 207, 209, 210, 211, 213, 215, 216, 220, 222, 230, 233], "mod_invers": [88, 216], "mod_to_list": 211, "modaugmentedassign": 69, "mode": [1, 8, 48, 88, 116, 130, 162, 185, 204, 216, 220, 251, 298], "model": [3, 14, 15, 19, 20, 92, 93, 118, 128, 131, 132, 133, 134, 143, 147, 153, 157, 162, 216, 229, 240, 299, 300, 301, 302, 304, 305, 306, 307], "moder": [7, 115], "modern": [43, 69, 207, 214, 220], "modest": 70, "modgcd_bivari": 213, "modgcd_multivari": 213, "modgcd_univari": 213, "modif": [79, 94, 124, 130, 239, 240, 255], "modifi": [5, 12, 14, 15, 16, 26, 68, 69, 79, 88, 94, 96, 128, 130, 162, 206, 209, 213, 215, 216, 217, 220, 232, 238, 239, 240, 251, 254, 255, 258, 259, 285, 290, 292], "modn": 128, "modop": 220, "modopmodewrong": 220, "modopnestedwrong": 220, "modopsettingswrong": 220, "modul": [2, 3, 4, 5, 7, 11, 12, 14, 15, 16, 18, 19, 21, 22, 25, 26, 28, 30, 33, 34, 36, 38, 41, 46, 51, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 78, 80, 88, 89, 91, 93, 94, 96, 100, 104, 108, 111, 114, 115, 116, 118, 120, 121, 122, 124, 129, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 144, 150, 159, 160, 162, 164, 165, 177, 180, 193, 194, 195, 196, 202, 206, 211, 212, 214, 217, 218, 220, 224, 227, 230, 234, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 253, 254, 255, 256, 257, 258, 259, 262, 267, 269, 271, 272, 273, 274, 275, 281, 282, 283, 285, 288, 290, 296, 297, 304, 307], "modular": [12, 89, 128, 186, 209, 214, 239], "modular_multiplicative_invers": 88, "modulargcd": 213, "modularinteg": 211, "module_dictionari": 259, "module_quoti": 207, "module_rel": 251, "moduleel": 215, "moduleendomorph": 215, "modulehomomorph": [207, 215], "moduli": [89, 128, 209, 213], "modulo": [13, 88, 89, 93, 125, 128, 186, 207, 209, 210, 211, 213, 215, 216, 217, 219, 220, 223, 232], "modulu": [88, 89, 91, 96, 98, 104, 124, 128, 135, 136, 207, 211, 213, 215, 216, 219, 239], "mol": 205, "mold": 36, "mole": 195, "moll": 96, "momemtum": 187, "moment": [23, 26, 28, 98, 104, 135, 136, 150, 206, 216, 233, 240, 301], "moment_load_vector": 135, "momenta": [23, 169], "momentum": [22, 23, 30, 145, 148, 154, 168, 169, 187, 191, 205, 246], "monad": 255, "monagan": [214, 232], "monagan00": [213, 214], "monagan93": [213, 214], "mondai": 89, "monic": [87, 96, 207, 208, 211, 213, 215, 216, 219], "monitor": 8, "monoalphabet": 89, "monogen": 207, "monogenicfiniteextens": [207, 211], "monoid": 68, "monom": [211, 216], "monomi": [11, 88, 115, 118, 128, 208, 210, 211, 213, 219, 220, 296], "monomial_basi": 211, "monomial_count": 216, "monomial_kei": 216, "monomialord": [211, 216], "monomorph": 215, "monospac": 220, "monoterm": 246, "monoton": [67, 69, 105], "monotonicity_help": 67, "monotorem": 246, "monserrat": 11, "mont": 79, "montgomeri": 213, "month": 0, "monthli": [74, 89, 124], "montreal": 214, "moor": [0, 53, 120, 124], "moot": 88, "moprhism": 68, "mora": [213, 214, 216, 238], "mordel": 233, "more": [2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 25, 26, 27, 28, 30, 32, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 64, 65, 67, 68, 69, 70, 71, 74, 78, 79, 80, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 110, 113, 115, 118, 120, 121, 124, 125, 127, 128, 129, 130, 132, 135, 141, 143, 150, 151, 152, 153, 155, 157, 159, 162, 174, 178, 179, 184, 187, 188, 189, 190, 195, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 229, 230, 232, 233, 236, 237, 238, 239, 240, 251, 253, 254, 255, 258, 259, 261, 264, 268, 272, 279, 281, 285, 286, 288, 289, 291, 292, 294, 295, 296, 297, 298, 300, 301, 305, 307, 309], "moreno": 214, "moreov": [33, 79, 89, 113, 207, 208, 213, 221, 269], "morphism": [68, 207], "morri": 229, "mors": 89, "morse_cod": 89, "mortem": 251, "mose": 236, "most": [2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 27, 28, 31, 32, 38, 39, 41, 42, 43, 48, 50, 52, 53, 54, 55, 56, 57, 59, 62, 63, 64, 67, 68, 69, 70, 79, 80, 87, 88, 89, 92, 94, 98, 100, 115, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 143, 151, 152, 192, 194, 199, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 227, 228, 230, 233, 236, 237, 238, 239, 240, 249, 252, 253, 254, 255, 256, 258, 259, 261, 267, 269, 285, 288, 290, 291, 292, 294, 295, 296, 309], "mostli": [14, 30, 35, 88, 94, 115, 124, 185, 207, 209, 219, 220, 230, 238, 295], "mota": 236, "motion": [13, 18, 21, 23, 24, 25, 26, 27, 30, 31, 35, 36, 79, 133, 147, 148, 150, 151, 152, 153, 155, 157, 203, 204, 240, 299, 301, 302, 303, 304, 305, 306, 308, 310], "motiongenesi": [22, 30], "motionvari": [22, 30], "motiv": [13, 17, 43, 58, 216], "mous": 206, "move": [11, 12, 14, 18, 23, 35, 36, 43, 79, 80, 88, 89, 102, 104, 135, 147, 150, 151, 155, 157, 178, 203, 232, 241, 250, 271, 298, 299, 301, 303, 305], "movement": 90, "moyal": 240, "moyaldistribut": 240, "mp": [61, 187, 238, 254], "mpc": [210, 211], "mpelement": 211, "mpf": [88, 210, 211], "mpi": 228, "mpmath": [2, 8, 12, 15, 30, 43, 53, 54, 69, 93, 96, 124, 129, 210, 211, 220, 228, 238, 254, 259, 286], "mpmathprint": 220, "mpprint": [21, 25], "mpq": [128, 209, 210], "mprint": [21, 25, 308, 309, 310], "mpz": [210, 211], "mr": 128, "mrow": 220, "mrref": 209, "mrv": [88, 227], "mrv_leadterm": 227, "mrv_max1": 227, "mrv_max3": 227, "msg": [89, 115], "msigma": 146, "msub": [21, 27, 149], "msym": 84, "msymbol": 238, "msys2": 8, "mt": [18, 113], "mu": [16, 96, 113, 128, 144, 146, 161, 220, 240, 246], "mu1": 240, "mu2": 240, "mu_1": 240, "mu_2": 240, "much": [3, 4, 11, 12, 13, 27, 28, 35, 36, 39, 41, 42, 43, 48, 54, 68, 69, 73, 84, 88, 92, 96, 110, 113, 115, 198, 205, 207, 209, 210, 213, 216, 227, 230, 232, 236, 237, 238, 239, 253, 255, 288, 290, 296], "mueller": 162, "mueller_calculu": 162, "mueller_matrix": 162, "mul": [4, 13, 15, 16, 38, 43, 61, 113, 115, 124, 128, 170, 174, 184, 185, 209, 210, 211, 215, 216, 220, 221, 222, 229, 232, 236, 237, 238, 239, 244, 291], "mul_elementwis": 209, "mul_ground": [211, 216], "mul_inv": 80, "mul_symbol": 220, "mul_symbol_mathml_numb": 220, "mul_xin": 217, "mulaugmentedassign": 69, "muller": 0, "mulsimp": 124, "mult": 215, "mult_tab": 215, "multi": [23, 30, 60, 88, 89, 150, 170, 174, 184, 206, 220, 239, 300, 304], "multibodi": [18, 22, 23, 29, 30, 31, 35, 133, 134, 150, 153, 154, 157, 300], "multicharact": 261, "multidimension": [54, 214, 251], "multifactor": 213, "multifactori": 93, "multifram": 36, "multigamma": 96, "multilin": [3, 220], "multilinear": 90, "multimodular": 209, "multinomi": [88, 124, 128, 240], "multinomial_coeffici": 128, "multinomial_coefficients_iter": 128, "multinomial_distribut": 240, "multinomialdistribut": 240, "multipl": [2, 3, 4, 11, 12, 13, 14, 15, 16, 18, 21, 23, 30, 31, 35, 37, 41, 43, 46, 50, 52, 56, 57, 61, 63, 64, 65, 67, 68, 69, 70, 77, 79, 80, 84, 87, 88, 89, 93, 94, 96, 98, 103, 106, 108, 113, 115, 117, 118, 120, 124, 125, 128, 130, 137, 139, 140, 143, 150, 155, 174, 175, 176, 180, 187, 189, 192, 195, 196, 197, 199, 203, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 220, 225, 226, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 244, 246, 249, 253, 254, 255, 256, 258, 259, 261, 264, 269, 285, 286, 288, 289, 291, 292, 297, 298, 301], "multipledispatch": [12, 13, 62], "multiplex": 118, "multipli": [13, 16, 26, 27, 32, 53, 61, 65, 69, 79, 88, 99, 103, 110, 117, 124, 128, 135, 147, 152, 153, 167, 176, 190, 195, 196, 207, 208, 209, 211, 213, 215, 216, 220, 222, 229, 230, 233, 236, 241, 258, 268, 288, 291, 305], "multiplicity_in_factori": 128, "multiply_elementwis": [124, 209], "multiply_id": 207, "multiply_transitive_group": 79, "multipow": 89, "multiprecis": [69, 210], "multiprim": 89, "multiset": [93, 113, 255, 258], "multiset_combin": [93, 258], "multiset_derang": 258, "multiset_partit": [77, 93, 113, 255, 258], "multiset_partitions_taocp": 255, "multiset_permut": [93, 258], "multisetpartitiontravers": 255, "multiterm": 246, "multivalu": [88, 94], "multivari": [67, 88, 96, 207, 208, 210, 211, 212, 214, 216, 217, 227, 232, 238, 239, 240, 296], "multivariate_gamma_funct": 96, "multivariate_laplace_distribut": 240, "multivariate_normal_distribut": 240, "multivariatebeta": 240, "multivariateewen": 240, "multivariatelaplac": 240, "multivariatenorm": 240, "multivariatepolynomialerror": [213, 216], "multivariatet": 240, "mun": 220, "mundi": 214, "mupad_ref": 292, "murrai": [79, 209], "muscl": [18, 131, 132, 134, 299], "muscle_activ": 18, "muscle_load": 18, "muscle_pathwai": 18, "musclotendon": 131, "muscular": 133, "musculoskelet": 298, "musculotendon": [19, 131, 132, 133, 281, 298], "musculotendon_dynam": [18, 134], "musculotendonbas": 134, "musculotendondegroote2016": [18, 134, 298], "musculotendonformul": 134, "museum": 89, "must": [2, 3, 4, 11, 12, 13, 15, 16, 18, 22, 23, 25, 26, 27, 28, 30, 32, 36, 41, 42, 55, 61, 62, 63, 64, 69, 79, 80, 82, 84, 86, 87, 88, 89, 90, 93, 94, 96, 98, 101, 104, 107, 110, 111, 113, 115, 118, 119, 120, 124, 127, 128, 130, 134, 135, 136, 137, 139, 141, 143, 144, 147, 150, 151, 152, 153, 155, 158, 170, 185, 187, 190, 199, 205, 206, 207, 208, 209, 211, 213, 215, 216, 220, 221, 228, 229, 230, 232, 233, 236, 238, 239, 240, 244, 245, 251, 252, 253, 254, 255, 256, 258, 259, 288, 290, 291, 295, 296, 301, 303], "mutabl": [15, 16, 70, 88, 119, 120, 121, 135, 211, 220, 221, 232, 241, 292], "mutabledensematrix": [13, 18, 119, 209, 261], "mutabledensendimarrai": 241, "mutablerepmatrix": 13, "mutablesparsematrix": 126, "mutablesparsendimarrai": 241, "mutat": [13, 143, 209, 211, 240], "mute": [69, 252], "mutual": [36, 94, 113], "mwf": 301, "mwr": 301, "mx": [141, 170, 227], "my": [8, 220, 285], "my_dummi": 190, "my_equ": 88, "my_fcn": [69, 220], "my_inequ": 88, "my_iszero": 292, "my_mat_fcn": [69, 220], "my_measur": 232, "my_real_root": 48, "my_root": 48, "my_routin": 69, "my_smt_variable_for_pi": 220, "my_sym": 51, "myclass": 88, "mycoeff": 67, "myfcn": 253, "myfcn_result": 253, "mygamma": 220, "mylatexprint": 220, "mylist": 88, "mylist1": 88, "mylist2": 88, "myop": 258, "myprogram": 69, "myrvold": 80, "mysin": [88, 259, 285], "mysingleton": 88, "myst": 5, "mysub": 69, "mz": 170, "m\u2081": 136, "m\u2082": 136, "n": [0, 4, 5, 9, 12, 15, 16, 18, 22, 25, 26, 27, 28, 30, 31, 32, 35, 36, 39, 41, 43, 48, 51, 52, 60, 65, 67, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 82, 84, 86, 87, 88, 89, 90, 92, 93, 94, 96, 98, 101, 102, 103, 104, 105, 110, 111, 113, 115, 117, 118, 120, 124, 125, 128, 130, 134, 135, 136, 139, 141, 143, 145, 146, 147, 148, 152, 154, 155, 157, 158, 159, 161, 163, 164, 166, 170, 175, 176, 179, 184, 186, 187, 188, 190, 191, 193, 195, 197, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 236, 238, 239, 240, 243, 245, 246, 249, 252, 258, 260, 261, 264, 266, 267, 268, 269, 273, 279, 286, 292, 295, 296, 297, 298, 301, 302, 303, 305, 306, 307, 308, 309, 310], "n1": [22, 30, 32, 41, 69, 79, 88, 89, 159, 163, 206, 233, 240, 264], "n11": 240, "n12": 240, "n2": [30, 41, 69, 79, 88, 89, 159, 163, 206, 233, 240], "n21": 240, "n22": 240, "n3": [22, 88, 206], "n_": [213, 233], "n_0": [110, 213, 238, 239], "n_1": [213, 238, 240], "n_2": [213, 240], "n_a": 22, "n_adj": 80, "n_alpha_b": 199, "n_b": 22, "n_c": 240, "n_digit": 115, "n_ep": 79, "n_frame": 148, "n_i": [84, 213, 238], "n_k": 213, "n_len": 163, "n_level": 190, "n_m": 238, "n_max": 190, "n_order": 128, "n_particl": 190, "n_point_check": 69, "n_surr": 163, "n_x": 201, "n_y": 302, "n_z": 302, "nabla": [33, 264, 270, 271], "naiv": [14, 38, 79, 85, 88, 113, 124, 128, 195, 209, 230, 238, 239, 246], "nakagami": 240, "nakagami_distribut": 240, "nako": 209, "name": [2, 3, 4, 5, 8, 12, 13, 15, 16, 18, 22, 30, 32, 33, 36, 41, 43, 45, 55, 56, 60, 63, 64, 68, 69, 70, 71, 75, 78, 81, 84, 87, 88, 89, 90, 93, 94, 95, 96, 98, 101, 113, 115, 116, 117, 120, 124, 128, 130, 131, 133, 134, 135, 139, 147, 148, 151, 154, 157, 161, 170, 185, 192, 195, 196, 197, 198, 199, 201, 203, 206, 207, 208, 210, 211, 213, 215, 217, 220, 226, 230, 232, 233, 236, 237, 239, 240, 245, 246, 249, 251, 252, 253, 254, 259, 261, 262, 264, 268, 271, 276, 285, 288, 291, 292, 296, 298, 301], "name_dict": 130, "name_expr": [69, 253], "name_mangl": 220, "name_of_bodi": 148, "named_group": [73, 76, 78, 79, 85, 86], "namedmorph": 68, "nameerror": [14, 16, 116, 254, 288], "nameless": 246, "namespac": [2, 4, 13, 14, 60, 69, 70, 88, 211, 233, 236, 237, 251, 253, 254, 259], "nan": [65, 66, 69, 88, 94, 96, 149, 152, 153, 232, 240, 286], "nand": [118, 220], "nanjeky": 11, "nanjekyejoannah": 11, "nano": 129, "nanosecond": 129, "napier": 88, "narg": [88, 213], "narr": [4, 289], "nation": 217, "nativ": [9, 14, 15, 88, 143, 211, 216, 251], "native_coeff": 88, "natur": [3, 12, 14, 16, 22, 41, 46, 53, 61, 65, 69, 70, 71, 79, 88, 89, 93, 94, 121, 128, 192, 194, 195, 207, 210, 211, 213, 215, 217, 220, 228, 229, 233, 239, 240, 258, 274, 291, 296, 298], "naturals0": [88, 220, 228, 239, 240], "navi": 89, "navig": [8, 13], "nb": 88, "nb2": 220, "nb_of_point": 206, "nb_of_points_i": 206, "nb_of_points_u": 206, "nb_of_points_v": 206, "nb_of_points_x": 206, "nbit": 69, "nc": 93, "nca": 215, "nck": 296, "ncol": 209, "ncolumn": 206, "ndarrai": [124, 206, 240, 246, 252, 298], "ndf": 162, "ndimarrai": 14, "ndimension": 252, "ne": [15, 37, 41, 88, 89, 93, 94, 101, 113, 124, 128, 130, 208, 210, 213, 230, 236, 240], "near_int": 128, "nearbi": 11, "nearer": 113, "nearest": [67, 215], "nearest_common_ancestor": 215, "nearli": [16, 128, 229], "necess": 213, "necessari": [2, 3, 4, 6, 8, 11, 12, 13, 14, 16, 23, 41, 43, 58, 67, 68, 79, 80, 88, 98, 113, 115, 118, 124, 128, 130, 150, 152, 206, 208, 210, 215, 216, 220, 223, 229, 232, 236, 237, 238, 239, 240, 241, 246, 251, 253, 258, 259, 264, 289, 294, 298, 299, 301], "necessarili": [3, 4, 18, 41, 65, 88, 89, 90, 113, 115, 118, 152, 207, 208, 209, 215, 216, 218, 232, 233, 236, 238, 239], "necessit": 309, "necesssari": 274, "necklac": [5, 258], "ned": 13, "nedbatcheld": 12, "need": [2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 25, 26, 27, 28, 31, 32, 35, 36, 37, 38, 39, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 63, 64, 67, 68, 69, 73, 79, 80, 84, 86, 87, 88, 89, 90, 93, 94, 96, 99, 103, 104, 111, 112, 113, 115, 116, 118, 124, 128, 129, 130, 134, 135, 136, 139, 143, 147, 152, 154, 157, 158, 159, 170, 174, 182, 188, 193, 199, 204, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 227, 228, 230, 232, 233, 235, 236, 238, 239, 240, 244, 245, 246, 247, 249, 252, 253, 254, 255, 256, 258, 261, 264, 268, 270, 271, 274, 285, 286, 288, 291, 292, 294, 296, 298, 301, 303, 305, 306, 308, 309, 310], "needev": 115, "neg": [4, 13, 15, 16, 18, 41, 42, 46, 52, 65, 66, 69, 70, 83, 87, 88, 93, 94, 96, 98, 100, 101, 104, 113, 115, 117, 118, 124, 127, 128, 135, 136, 139, 140, 141, 143, 147, 151, 155, 190, 199, 205, 208, 209, 211, 213, 215, 216, 217, 220, 226, 228, 229, 230, 232, 233, 236, 238, 239, 240, 259], "neg_feedback": 143, "negat": [42, 43, 65, 88, 94, 118, 143, 199, 209, 211, 213, 216], "negative_binomial_distribut": 240, "negative_multinomial_distribut": 240, "negative_numb": [41, 88], "negativebinomi": 240, "negativebinomialdistribut": 240, "negativehandl": 65, "negativeinfin": [88, 220], "negativemultinomi": 240, "negativeon": [88, 94, 291], "negativepred": 65, "neglect": 69, "neglig": 48, "neighbor": 258, "neighborhood": 228, "neighbourhood": 113, "neither": [41, 42, 65, 88, 164, 185, 206, 209, 216, 227, 228, 229, 236, 246, 259, 264, 273, 296], "nephew": 89, "neq": [15, 36, 43, 88, 94, 96, 113, 115, 124, 128, 195, 205, 213, 216, 236, 238, 296], "nervou": [18, 131], "nessgrh": 113, "nest": [14, 51, 55, 88, 90, 94, 96, 115, 124, 143, 208, 209, 210, 213, 220, 230, 232, 235, 239, 240, 241, 242, 244, 247, 258, 259, 291], "nested_contract": 244, "net": [11, 68, 104, 214, 236, 240, 258], "netwon": 69, "neurolog": 133, "neutral": 5, "never": [9, 10, 11, 12, 14, 15, 41, 43, 55, 88, 94, 115, 130, 192, 216, 217, 220, 228, 238, 240, 249, 268, 288, 289], "nevertheless": 68, "new": [2, 3, 5, 6, 7, 8, 9, 12, 14, 15, 18, 22, 29, 30, 32, 36, 41, 43, 51, 58, 63, 64, 68, 69, 70, 79, 80, 87, 88, 89, 90, 96, 101, 104, 113, 115, 116, 124, 128, 130, 132, 134, 135, 137, 139, 143, 147, 148, 151, 159, 180, 186, 187, 190, 192, 195, 196, 198, 199, 203, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 220, 227, 230, 232, 233, 236, 238, 239, 240, 241, 242, 251, 252, 256, 259, 264, 266, 268, 284, 285, 288, 291, 292, 294, 298, 303, 308, 310], "new_eq": 239, "new_fil": 11, "new_gen": 86, "new_indic": 190, "new_label": [137, 139], "new_matrix": 240, "new_method": [152, 305], "new_msg": 89, "new_nam": 68, "new_support": 137, "new_system": 264, "newa": 229, "newarg": 14, "newchar": 261, "newconst": 236, "newer": [3, 12, 15, 35, 130, 238], "newli": [12, 88, 113, 230], "newlin": [3, 12, 124, 261], "newmatrix": 13, "newnam": 199, "newroot": 117, "newton": [18, 23, 69, 96, 150, 193, 197, 213, 217], "newtonian": [22, 30, 157], "newtonion": 148, "newtons_method": 69, "newtons_method_funct": 69, "newtyp": 88, "newvar": 87, "nexp": 69, "next": [7, 9, 11, 16, 21, 23, 24, 31, 35, 36, 39, 41, 43, 45, 60, 69, 70, 72, 77, 79, 80, 82, 83, 88, 89, 94, 113, 115, 118, 124, 128, 130, 148, 150, 151, 152, 157, 207, 209, 211, 215, 216, 220, 228, 230, 233, 236, 255, 256, 258, 289, 290, 291, 303, 305, 306, 308, 310], "next_binari": 83, "next_grai": 83, "next_lex": [77, 80], "next_lexicograph": 83, "next_nonlex": 80, "next_trotterjohnson": [80, 258], "nextprim": 128, "nf": 213, "nfac": 128, "nfloat": [88, 232], "ngate": 174, "nh": 25, "ni": 96, "nice": [1, 4, 9, 22, 27, 30, 59, 88, 100, 124, 128, 206, 220, 230, 261, 291], "nicefrac": 130, "nicer": [59, 88, 209, 309], "nicest": 14, "nicheck": 22, "nielsen_transform": 79, "niemey": 79, "nigel": 233, "nijenhui": 72, "nilpot": [74, 79, 124], "nilpotent_group": 79, "nilrad": 215, "nine": [104, 220], "nine_point_circl": 104, "ninth": 132, "nist": [4, 94, 96, 195], "nitaj": 233, "niven": 213, "nl": [145, 191], "nlm": 145, "nm": [135, 136, 188, 241, 298], "nmant": 69, "nmax": 128, "nmod": 13, "nmod_mat_charpoli": 209, "nnf": 118, "nnz": 209, "no_attrs_in_subclass": 254, "no_glob": [116, 204], "no_symmetri": 246, "nobr": 55, "nocache_fail": 249, "nocond": [46, 115], "nodal": [166, 191, 207], "node": [13, 15, 67, 82, 88, 115, 130, 139, 149, 166, 191, 199, 205, 210, 220, 227, 239, 244, 255, 259, 291, 295], "node12": 72, "node81": 128, "node_1": 139, "node_2": 139, "node_3": 139, "node_4": 139, "node_label": 139, "node_posit": 139, "nois": 48, "nomin": 12, "non": [2, 3, 12, 14, 15, 16, 18, 21, 25, 26, 30, 33, 36, 41, 43, 48, 54, 55, 57, 60, 65, 67, 70, 78, 81, 87, 88, 89, 93, 94, 95, 96, 97, 98, 101, 102, 103, 115, 117, 118, 119, 120, 124, 125, 127, 128, 131, 134, 147, 152, 154, 174, 179, 189, 190, 192, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 223, 227, 228, 230, 232, 233, 235, 236, 238, 239, 240, 241, 244, 245, 246, 251, 253, 258, 261, 271, 291, 296, 297, 301, 302, 303, 305, 309], "non_trivial_metr": 90, "nonbas": 88, "noncentr": 240, "noncentral_beta_distribut": 240, "noncentral_chi_distribut": 240, "noncentralbetadistribut": 240, "noncommut": [41, 88, 111, 291], "noncommutative_part": 88, "noncomput": 15, "nonconserv": 152, "noncontribut": 304, "noncontributing_forc": 303, "nonconvex": 115, "nondimension": 298, "none": [4, 5, 12, 13, 14, 15, 22, 36, 41, 42, 43, 61, 62, 63, 64, 65, 67, 68, 69, 71, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 109, 110, 111, 113, 115, 116, 118, 120, 124, 125, 128, 129, 130, 131, 134, 135, 139, 143, 147, 148, 149, 151, 152, 153, 154, 157, 159, 161, 163, 164, 170, 175, 180, 185, 187, 190, 192, 196, 197, 198, 199, 201, 203, 204, 205, 206, 207, 209, 211, 213, 215, 216, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 232, 233, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 249, 251, 252, 253, 254, 258, 259, 261, 263, 264, 267, 292, 296, 297], "noneg": 18, "nonelementari": 115, "nonelementaryintegr": 115, "nonempti": [79, 258], "nonetheless": [3, 89, 192, 232, 236], "nonetoken": 69, "nonetyp": [42, 69], "nonhol_coneq": [26, 152, 305], "nonholonom": [152, 157, 301], "nonholonomic_constraint": 157, "nonhomogeneous_equation_with_constant_coeffici": 236, "noninteg": [41, 65, 88, 210, 220], "nonintegr": 43, "noninvert": 240, "noninvertiblematrixerror": [53, 120, 292], "nonlex": 80, "nonlinear": [18, 30, 37, 49, 55, 57, 87, 147, 216, 236, 238, 239], "nonlinear_stiff": 147, "nonlinearerror": 239, "nonlinsolv": [30, 238, 239, 297], "nonminim": [27, 300, 304], "nonneg": [12, 13, 14, 18, 30, 41, 43, 65, 88, 89, 90, 93, 96, 120, 208, 210, 216, 233, 238, 240, 296, 298], "nonnegativehandl": 65, "nonnegativepred": 65, "nonparallel": 151, "nonparametr": 206, "nonpivot": 209, "nonposit": [30, 41, 65, 88, 93, 96, 238], "nonpositivehandl": 65, "nonpositivepred": 65, "nonreal": [43, 54, 238], "nonrep": 246, "nonresidu": [93, 128], "nonsens": [12, 87, 96], "nonsquarematrixerror": [124, 236], "nontrivi": [43, 79, 88, 128], "nonvanish": 88, "nonzero": [41, 43, 65, 66, 87, 88, 103, 124, 134, 145, 208, 209, 210, 211, 220, 223, 233, 239], "nonzero_col": 209, "nonzerohandl": 65, "nonzeropred": 65, "noqa": [12, 88, 116, 211, 254], "nor": [65, 67, 88, 118, 158, 164, 206, 209, 216, 220, 227, 229, 236, 246, 264], "norepli": 11, "norm": [61, 124, 188, 199, 211, 213, 215, 216, 233], "normal": [5, 12, 13, 14, 16, 18, 21, 22, 30, 36, 41, 42, 43, 57, 61, 65, 69, 79, 87, 88, 92, 94, 98, 101, 102, 103, 115, 116, 118, 121, 122, 124, 128, 130, 131, 132, 134, 145, 151, 158, 163, 174, 184, 187, 188, 189, 190, 191, 195, 198, 199, 207, 209, 210, 211, 213, 215, 216, 220, 221, 223, 228, 229, 233, 236, 240, 245, 251, 256, 258, 259, 264, 279, 298, 301, 309], "normal_closur": 79, "normal_distribut": 240, "normal_lin": 98, "normal_matrix": 65, "normal_vector": [102, 163], "normaldistribut": [13, 240], "normaldistributionfunct": 240, "normalform": [125, 209], "normalgamma": 240, "normalhandl": 65, "normalis": [88, 222], "normalize_last": 124, "normalize_theta_set": 228, "normalize_whitespac": 251, "normalpred": 65, "normalpspac": 240, "norman": 115, "normilz": 96, "north": 15, "not_empty_in": [67, 239], "not_in_arg": 69, "not_point": 170, "not_rep": 79, "not_supported_funct": 220, "notabl": [14, 64, 69, 91, 96, 113, 129, 210], "notalgebra": 213, "notarrow": 220, "notat": [16, 32, 36, 39, 48, 52, 55, 57, 74, 76, 80, 81, 87, 88, 89, 93, 96, 113, 120, 124, 130, 143, 153, 188, 199, 204, 207, 220, 227, 232, 239, 245, 246, 258, 271, 286], "note": [2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 22, 28, 30, 32, 33, 35, 36, 37, 39, 41, 42, 45, 46, 49, 50, 51, 53, 54, 55, 56, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 78, 79, 80, 81, 84, 86, 87, 89, 92, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 113, 115, 116, 118, 120, 124, 128, 130, 131, 134, 143, 144, 147, 148, 149, 151, 152, 153, 155, 157, 158, 163, 166, 174, 184, 185, 187, 189, 190, 191, 193, 199, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 221, 222, 223, 226, 228, 230, 232, 233, 235, 236, 237, 238, 239, 240, 245, 246, 249, 251, 252, 253, 254, 255, 256, 258, 259, 261, 269, 271, 273, 285, 286, 287, 289, 290, 291, 292, 296, 298, 301, 305, 306, 308], "notebook": [2, 15, 43, 59, 116, 204, 259, 294, 295], "notequiv": 220, "noth": [12, 13, 48, 68, 79, 88, 115, 152, 174, 190, 207, 211, 219, 220, 232, 236, 238, 249, 251, 259, 261, 288], "notic": [12, 13, 16, 28, 43, 79, 80, 86, 88, 124, 178, 210, 230, 242, 246, 247, 258, 259, 288, 290, 291, 296], "notifi": [4, 130], "notimpl": [98, 215], "notimplementederror": [4, 50, 52, 55, 56, 57, 67, 87, 98, 101, 105, 115, 124, 141, 209, 215, 216, 219, 228, 235, 236, 237, 238, 239], "notimpli": 220, "notin": [78, 113, 228], "notinvert": [207, 213, 216], "notion": [13, 14, 41, 68, 195, 198, 207, 239, 268, 273], "notiter": 258, "notrevers": [213, 216], "novemb": 258, "now": [1, 2, 5, 8, 9, 11, 12, 13, 14, 16, 18, 22, 23, 30, 31, 35, 36, 39, 41, 42, 43, 48, 59, 68, 69, 80, 88, 89, 93, 96, 99, 104, 105, 110, 112, 113, 117, 124, 128, 143, 147, 148, 150, 151, 155, 157, 193, 195, 199, 204, 206, 207, 208, 209, 210, 213, 216, 217, 221, 228, 229, 230, 232, 233, 236, 238, 239, 240, 241, 246, 251, 252, 259, 269, 270, 288, 290, 291, 296, 297, 298, 303, 306, 309], "np": [14, 18, 22, 43, 55, 93, 111, 128, 206, 252, 259, 298], "npartit": [13, 128], "nqubit": [170, 174, 175, 184], "nr": 43, "nright": 239, "nroot": [216, 238], "nrow": [206, 209], "nsa": 89, "nseri": 88, "nsimplifi": [14, 88, 92, 232], "nsolv": [30, 37, 48, 54, 56, 57, 238], "nt": [93, 258], "nth": [39, 88, 93, 96, 117, 128, 211, 216, 217, 226, 232, 236, 240], "nth_algebra": 236, "nth_algebraic_integr": 236, "nth_linear": 236, "nth_linear_constant_coeff_homogen": 236, "nth_linear_constant_coeff_homogeneous_integr": 236, "nth_linear_constant_coeff_undetermined_coeffici": 236, "nth_linear_constant_coeff_variation_of_paramet": 236, "nth_linear_constant_coeff_variation_of_parameters_integr": 236, "nth_linear_euler_eq_homogen": 236, "nth_linear_euler_eq_homogeneous_integr": 236, "nth_linear_euler_eq_nonhomogeneous_undetermined_coeffici": 236, "nth_linear_euler_eq_nonhomogeneous_variation_of_paramet": 236, "nth_linear_euler_eq_nonhomogeneous_variation_of_parameters_integr": 236, "nth_linear_homogeneous_constant_coeff_integr": 236, "nth_order_reduc": 236, "nth_power_roots_poli": 216, "nthalgebra": 236, "ntheori": [65, 79, 88, 89, 93, 213, 216, 233, 258], "nthlinearconstantcoeffhomogen": 236, "nthlinearconstantcoeffundeterminedcoeffici": 236, "nthlinearconstantcoeffvariationofparamet": 236, "nthlineareulereqhomogen": 236, "nthlineareulereqnonhomogeneousundeterminedcoeffici": 236, "nthlineareulereqnonhomogeneousvariationofparamet": 236, "nthorderreduc": 236, "nthroot": 232, "nthroot_mod": 128, "ntop": 124, "ntt": 91, "nu": [5, 16, 93, 96, 115, 128, 191, 208, 220, 232, 240, 246, 290, 302], "nu_1": 208, "nu_2": 208, "nu_i": 208, "nu_n": 208, "nuanc": 14, "null": [16, 88, 124], "nulliti": 209, "nullspac": [124, 209], "nullspace_from_rref": 209, "num": [18, 69, 79, 88, 128, 143, 211, 232, 236, 255, 261, 298], "num_column": [116, 204, 220, 236], "num_digit": [88, 128], "num_input": [46, 143], "num_list": 143, "num_output": [46, 143], "num_qq": 210, "num_zz": 210, "numa": 236, "number": [2, 3, 4, 5, 11, 12, 13, 15, 18, 21, 22, 27, 28, 30, 32, 33, 35, 36, 37, 38, 41, 43, 46, 48, 51, 52, 53, 56, 57, 61, 63, 64, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 93, 94, 96, 98, 101, 102, 103, 104, 105, 107, 115, 116, 117, 118, 120, 123, 124, 125, 127, 129, 130, 133, 134, 136, 139, 141, 143, 144, 145, 147, 152, 153, 157, 163, 166, 169, 170, 173, 174, 175, 176, 178, 179, 184, 185, 186, 187, 188, 190, 191, 192, 195, 198, 199, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 216, 217, 220, 222, 226, 227, 228, 229, 230, 232, 233, 236, 238, 239, 240, 241, 245, 246, 251, 253, 255, 258, 259, 261, 264, 267, 268, 270, 271, 273, 276, 282, 285, 286, 288, 290, 291, 292, 296, 305], "number_cl": 88, "number_field": 215, "number_theori": 93, "numbered_symbol": [221, 232, 236, 258], "numberfield": [211, 215, 216], "numberkind": [15, 38, 88, 123, 228], "numbersymbol": [88, 220], "numbertheoretictransform": 91, "numbertheori": 233, "numberworld": 128, "numer": [2, 4, 12, 13, 15, 16, 18, 22, 23, 27, 28, 31, 32, 36, 37, 39, 41, 49, 50, 51, 52, 53, 56, 61, 65, 67, 69, 87, 88, 93, 96, 100, 104, 111, 124, 128, 130, 131, 132, 133, 134, 139, 140, 141, 143, 148, 150, 152, 153, 162, 169, 172, 187, 206, 209, 210, 211, 213, 214, 215, 216, 219, 220, 229, 230, 232, 236, 238, 239, 245, 251, 252, 258, 259, 276, 285, 287, 288, 292, 296, 298, 301], "numerical_funct": 285, "numerorum": 255, "numexpr": [2, 259], "numi": 236, "numpad": 206, "numpi": [2, 4, 12, 13, 14, 15, 18, 22, 30, 43, 48, 53, 54, 55, 59, 69, 88, 111, 116, 129, 141, 174, 184, 206, 209, 220, 240, 245, 252, 253, 259, 285, 288, 298], "numpydoc": [4, 5], "numpyprint": 69, "numqubit": 175, "numsampl": 240, "numth": 128, "numz": 143, "nuovo": [195, 205], "nutshel": 14, "nvpa": 35, "nvpb": 35, "nwb": 35, "nx": [35, 258, 305, 307], "ny": [35, 199, 211, 305, 307], "nz": [35, 307], "o": [0, 4, 8, 11, 12, 15, 16, 18, 22, 25, 26, 27, 28, 30, 31, 33, 35, 39, 41, 60, 68, 69, 74, 79, 80, 86, 88, 89, 94, 96, 98, 99, 101, 102, 104, 110, 113, 128, 134, 136, 147, 148, 152, 154, 155, 157, 180, 190, 200, 203, 205, 213, 214, 216, 217, 220, 222, 227, 230, 236, 240, 245, 251, 258, 261, 267, 270, 286, 298, 302], "o2": [11, 227], "o____________________________________________________": 136, "o_from": 213, "o_to": 213, "oa": 270, "oabc": 270, "ob": 240, "obei": [4, 96, 205, 220, 230], "obextj": 274, "obj": [4, 14, 41, 88, 211, 216, 220, 254], "object": [2, 3, 4, 5, 7, 11, 12, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 35, 36, 40, 41, 42, 43, 46, 55, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 78, 79, 80, 81, 82, 83, 87, 88, 90, 93, 94, 96, 98, 99, 100, 101, 103, 104, 105, 113, 115, 118, 120, 121, 123, 124, 129, 130, 133, 134, 135, 136, 137, 139, 141, 143, 144, 148, 150, 152, 153, 154, 155, 157, 158, 159, 163, 164, 165, 173, 174, 176, 184, 185, 189, 190, 192, 193, 194, 196, 197, 199, 203, 204, 206, 207, 208, 209, 210, 211, 213, 215, 216, 220, 222, 223, 226, 227, 228, 229, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 251, 252, 253, 254, 255, 258, 259, 262, 267, 268, 269, 274, 275, 279, 285, 286, 288, 290, 291, 292, 295, 296, 305, 310], "oblig": 206, "obscur": [13, 41], "observ": [36, 84, 88, 110, 113, 179, 207, 230, 233, 236, 240, 273, 296], "obsolet": 13, "obstacl": [113, 155], "obstacle_set_pathwai": 155, "obstaclesetpathwai": [18, 155], "obtain": [5, 15, 16, 23, 26, 32, 37, 39, 46, 51, 52, 57, 63, 64, 68, 70, 72, 79, 80, 81, 84, 88, 89, 91, 92, 93, 94, 96, 98, 99, 101, 102, 104, 110, 113, 115, 117, 124, 127, 128, 137, 140, 143, 150, 152, 163, 185, 190, 195, 207, 208, 211, 213, 215, 216, 219, 221, 228, 229, 230, 232, 233, 236, 237, 238, 239, 258, 260, 261, 268, 269], "obtaining_all_solutions_of_a_linear_system": 124, "obtus": 101, "obviou": [41, 42, 43, 53, 71, 79, 87, 207, 210, 219, 233, 290], "obvious": [5, 12, 35, 70, 79, 193, 210, 230], "oc": [220, 270], "occasion": [11, 12, 88], "occup": 190, "occupi": [128, 190, 246], "occur": [4, 13, 14, 15, 16, 18, 21, 27, 32, 35, 79, 80, 88, 92, 96, 105, 113, 124, 130, 151, 199, 215, 223, 232, 237, 238, 241, 242, 251, 258, 291], "occurr": [22, 69, 70, 88, 128, 199, 232, 240], "oct": 128, "octahedr": 81, "octahedron": 115, "octav": [30, 69, 253], "octave_cod": [69, 220], "octavecodegen": 253, "octavecodeprint": 220, "octnam": 253, "octob": 144, "od": [4, 12, 15, 23, 30, 43, 111, 150, 152, 157, 234, 237, 276, 297], "odd": [38, 41, 51, 62, 64, 65, 66, 76, 80, 88, 89, 93, 94, 96, 118, 127, 128, 144, 205, 215, 216, 220, 238], "oddbal": 88, "oddhandl": 65, "oddpred": 65, "ode0106": 236, "ode0123": 236, "ode_": 236, "ode_1st_homogeneous_coeff_best_integr": 236, "ode_1st_power_seri": 236, "ode_2nd_power_series_ordinari": 236, "ode_2nd_power_series_regular": 236, "ode_hintnam": 236, "ode_ord": [236, 237, 238], "ode_problem": 236, "ode_sol_simpl": 236, "odeadvisor": 236, "odel": 124, "odenonlinearerror": 236, "odeordererror": 236, "odesimp": 236, "oei": [74, 93, 96, 128, 216], "oeyag": 89, "of_typ": [210, 211], "ofcours": 268, "off": [14, 24, 88, 98, 113, 124, 127, 129, 174, 207, 216, 220, 236, 251, 264, 290, 301], "off_circl": 102, "offer": [5, 14, 18, 19, 21, 30, 32, 36, 68, 69, 79, 88, 129, 210, 215, 255, 272], "offici": [16, 21, 30, 32, 36, 45, 59, 88, 239, 259, 294], "offset": [68, 69, 88, 93, 96, 147, 245], "offshor": 137, "ofix": 35, "often": [3, 4, 11, 12, 14, 15, 23, 27, 28, 35, 36, 41, 42, 43, 48, 54, 68, 69, 70, 78, 88, 96, 98, 100, 113, 115, 124, 128, 129, 143, 150, 152, 153, 207, 208, 209, 210, 213, 216, 221, 227, 228, 233, 236, 240, 258, 259, 285, 290, 291, 292, 296], "oh": 286, "oil": 7, "ok": [11, 12, 13, 69, 80, 220, 236], "okai": [14, 89], "old": [3, 12, 13, 15, 16, 27, 88, 89, 90, 116, 159, 195, 204, 206, 207, 211, 213, 220, 221, 232, 236, 239, 241, 285], "old_assumpt": 179, "old_frac_field": [210, 211], "old_fractionfield": 210, "old_poly_r": [110, 111, 207, 210, 211], "old_polynomialr": 210, "oldchar": 261, "older": [3, 5, 12, 15, 22, 111, 210, 220, 238], "oldid": 80, "olga": 215, "ollwd": 89, "omega": [16, 28, 31, 35, 69, 70, 79, 93, 113, 124, 128, 143, 148, 154, 157, 164, 166, 191, 199, 203, 204, 205, 220, 227, 240], "omega_": 113, "omicron": [16, 220], "omit": [4, 13, 41, 43, 69, 80, 87, 88, 89, 93, 113, 115, 118, 124, 192, 209, 220, 221, 228, 230, 238, 244, 253, 258, 286], "omposit": 222, "on_circl": 102, "on_morph": 103, "onc": [3, 8, 9, 11, 12, 14, 15, 16, 23, 27, 36, 41, 42, 43, 69, 71, 72, 79, 84, 88, 89, 93, 96, 104, 113, 115, 129, 136, 149, 150, 151, 195, 199, 201, 206, 208, 210, 216, 220, 221, 229, 230, 232, 236, 239, 246, 258, 268, 285, 286, 296, 297, 298], "ond": 0, "one": [2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 27, 28, 30, 32, 33, 35, 36, 37, 39, 41, 42, 43, 45, 48, 49, 50, 51, 52, 53, 54, 55, 58, 60, 61, 64, 65, 67, 68, 69, 71, 72, 74, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 96, 98, 99, 100, 101, 102, 104, 105, 110, 111, 112, 113, 115, 116, 117, 118, 120, 122, 124, 127, 128, 129, 130, 131, 134, 135, 136, 137, 139, 140, 141, 143, 144, 147, 148, 151, 152, 154, 155, 157, 158, 159, 162, 163, 164, 170, 175, 184, 188, 190, 192, 193, 194, 195, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 244, 246, 247, 251, 252, 253, 255, 258, 259, 261, 264, 269, 271, 273, 284, 285, 286, 288, 290, 291, 292, 294, 295, 296, 298, 305], "one_half": 88, "one_qubit_box": 170, "oneform": 90, "onelin": 9, "onematrix": 220, "onequbitg": 174, "ones": [2, 3, 13, 14, 22, 43, 59, 69, 79, 84, 88, 113, 115, 118, 120, 124, 127, 128, 134, 163, 184, 190, 194, 209, 213, 223, 233, 236, 241, 247, 253, 261, 264, 269, 292, 295], "oneshot": 184, "onli": [3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 22, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 48, 51, 52, 53, 54, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 74, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 101, 102, 104, 105, 106, 111, 113, 115, 116, 117, 118, 123, 124, 125, 128, 129, 130, 131, 134, 139, 141, 143, 148, 149, 151, 152, 154, 155, 158, 163, 165, 184, 185, 189, 190, 192, 195, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 264, 267, 269, 271, 273, 274, 285, 286, 288, 289, 291, 292, 296, 297, 298, 301, 303, 305, 307, 308, 310], "onlin": [2, 4, 152, 233, 258], "onlinelibrari": 240, "only_alt": 79, "only_doubl": 113, "only_integ": 206, "only_sym": 79, "onset": 163, "onto": [89, 101, 102, 103, 113, 117, 124, 127, 129, 215], "oo": [4, 14, 15, 37, 41, 42, 46, 50, 65, 67, 87, 88, 92, 93, 94, 96, 101, 113, 115, 118, 124, 143, 145, 176, 188, 191, 216, 225, 226, 227, 228, 232, 235, 236, 238, 239, 240, 245, 258, 261, 286, 290], "oohai": 220, "ooo": 258, "oooo": [136, 258], "oop": 288, "op": [14, 35, 69, 88, 124, 179, 190, 203, 229, 258, 259], "op_point": [27, 152, 153, 305], "opaqu": [113, 220], "opathwai": 18, "open": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 22, 30, 52, 53, 54, 56, 59, 67, 88, 90, 94, 115, 118, 143, 220, 228, 235, 239, 240, 290, 292, 303], "openview": 240, "oper": [2, 4, 9, 14, 15, 18, 21, 27, 28, 30, 34, 41, 42, 43, 53, 54, 55, 57, 61, 65, 67, 69, 79, 80, 81, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 106, 108, 111, 113, 118, 120, 128, 130, 132, 143, 144, 152, 153, 162, 166, 167, 171, 173, 174, 175, 176, 181, 182, 185, 187, 188, 189, 190, 199, 201, 202, 207, 208, 209, 210, 211, 213, 215, 216, 217, 220, 223, 225, 228, 229, 232, 235, 236, 238, 239, 242, 243, 244, 245, 251, 252, 255, 258, 259, 264, 275, 279, 281, 282, 287, 288, 289, 291, 296, 305, 309], "operand": [13, 16, 80, 88, 200, 210, 211, 215, 267], "operar": 88, "operationnotsupport": 213, "operator_": 179, "operator_to_st": 185, "operatornam": [43, 61, 93, 94, 96, 113, 115, 205, 208, 216, 220, 223, 228, 230, 238], "operators_to_st": 180, "operatorset": [168, 180], "opinion": [17, 58], "oplu": [118, 174], "oppenheim": 255, "opportun": [3, 4, 232], "opportunist": 69, "oppos": [69, 147, 259, 286, 298], "opposit": [18, 46, 48, 84, 104, 118, 124, 147, 148, 155, 158, 208, 211, 228, 232, 239, 247, 258, 264, 266, 296, 298, 303], "opqrstuvwxi": 89, "opt": [18, 134, 207, 209, 213, 232, 251, 292], "opt2": 69, "opt_cs": [4, 232], "opt_sub": 232, "optic": [47, 161, 162, 163, 164, 281, 300], "optical_medium": 161, "optim": [4, 15, 18, 21, 30, 54, 69, 72, 79, 92, 118, 128, 131, 132, 134, 170, 174, 209, 216, 220, 221, 229, 232, 240, 252, 298], "optimal_fiber_length": [18, 134], "optimal_pennation_angl": [18, 134], "optimis": [41, 236], "optims_c99": 69, "option": [3, 4, 5, 8, 11, 12, 14, 16, 21, 28, 30, 32, 43, 45, 48, 50, 62, 64, 67, 69, 79, 86, 87, 88, 89, 90, 91, 92, 94, 97, 98, 101, 102, 104, 105, 107, 115, 116, 120, 124, 125, 128, 129, 130, 135, 141, 143, 147, 148, 149, 151, 152, 153, 154, 157, 163, 174, 179, 180, 182, 185, 187, 192, 194, 199, 204, 206, 207, 208, 209, 210, 211, 215, 216, 217, 219, 220, 221, 222, 223, 225, 227, 228, 229, 232, 233, 236, 237, 238, 239, 240, 242, 245, 246, 251, 252, 253, 256, 258, 259, 264, 289, 295, 296, 300], "optionerror": 213, "optionflag": 251, "oq": 35, "oracl": 175, "oracleg": 175, "orang": 141, "orb": 79, "orbit": [79, 86, 190, 191, 193], "orbit_rep": 79, "orbit_transvers": 79, "ord": [84, 89, 124], "order": [2, 3, 4, 5, 11, 12, 14, 15, 16, 21, 22, 24, 25, 26, 27, 28, 32, 35, 36, 37, 39, 41, 42, 46, 48, 50, 55, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 101, 104, 105, 107, 110, 113, 115, 116, 117, 118, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 143, 144, 147, 151, 152, 157, 163, 167, 171, 174, 184, 185, 186, 187, 188, 189, 190, 194, 195, 199, 201, 203, 204, 206, 207, 208, 209, 210, 211, 213, 215, 217, 219, 220, 221, 222, 223, 226, 228, 232, 233, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 251, 252, 253, 255, 258, 259, 261, 264, 266, 268, 269, 274, 286, 288, 289, 291, 295, 296, 297, 298, 301], "order_equation_with_variable_coeffici": 236, "order_symbol": 88, "ordered_flag": 258, "ordered_partit": 258, "ordering_of_class": [88, 99], "ordin": [206, 236, 261], "ordinari": [2, 18, 23, 41, 42, 49, 67, 69, 79, 88, 92, 93, 94, 96, 106, 110, 111, 115, 125, 131, 134, 143, 150, 207, 209, 210, 219, 226, 236, 241, 255, 290, 296], "ordinarili": 215, "org": [0, 2, 4, 5, 11, 12, 16, 34, 41, 43, 61, 63, 64, 65, 67, 68, 69, 71, 72, 74, 76, 77, 79, 80, 87, 88, 89, 90, 91, 93, 94, 96, 98, 100, 104, 105, 106, 115, 116, 117, 118, 120, 124, 128, 141, 143, 145, 146, 159, 161, 162, 163, 165, 166, 167, 171, 172, 173, 176, 178, 179, 188, 190, 199, 201, 202, 204, 209, 211, 214, 216, 220, 223, 227, 228, 229, 232, 233, 236, 239, 240, 252, 253, 254, 256, 258, 264, 266, 270, 272, 274, 292, 295, 302], "organ": [7, 11, 18, 23, 150], "orient": [13, 22, 24, 28, 30, 33, 35, 36, 61, 100, 104, 124, 151, 155, 199, 203, 213, 258, 264, 265, 272, 273, 279, 298, 301, 305, 308], "orient_axi": [13, 18, 32, 148, 151, 199, 201, 298], "orient_body_fix": 199, "orient_dcm": 199, "orient_new": [264, 266], "orient_new_": 269, "orient_new_axi": [264, 267, 269], "orient_new_bodi": [264, 269], "orient_new_quaternion": [264, 269], "orient_new_spac": [264, 269], "orient_quaternion": 199, "orient_space_fix": 199, "orientnew": [27, 31, 33, 35, 36, 155, 199, 201, 203, 301, 302, 305, 308, 309, 310], "orig": 213, "orig_expr": 185, "orig_ext": 211, "orig_frac": 296, "origin": [9, 11, 12, 15, 16, 18, 27, 30, 33, 39, 41, 51, 59, 61, 79, 80, 81, 84, 87, 88, 89, 92, 93, 94, 96, 97, 99, 101, 103, 113, 115, 124, 128, 131, 132, 134, 141, 143, 144, 151, 158, 182, 185, 195, 200, 206, 207, 209, 211, 215, 216, 219, 220, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 246, 251, 258, 259, 264, 267, 268, 269, 270, 271, 273, 274, 296, 298, 305], "origin_angl": 298, "origin_dist": 298, "origin_segment_length": 298, "origsit": 240, "orlando": 214, "ormv": 89, "orszag": 236, "orthocent": 104, "orthogon": [36, 61, 65, 103, 117, 124, 188, 199, 264, 266], "orthogonal_direct": 103, "orthogonal_matrix": 65, "orthogonalbra": 188, "orthogonalhandl": 65, "orthogonalket": 188, "orthogonalpolynomi": 5, "orthogonalpred": 65, "orthogonalst": 188, "orthonorm": [30, 36, 124, 185, 268], "orthopoli": [96, 216], "osc": [88, 92], "oscar": [12, 205], "oscil": [88, 281, 300, 304], "oscillatori": [88, 92, 225], "osi": 89, "osineq": 16, "ostrogradski": 115, "other": [3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 27, 28, 30, 32, 34, 35, 36, 37, 38, 39, 42, 44, 48, 50, 51, 52, 53, 55, 56, 57, 61, 65, 67, 68, 69, 70, 71, 74, 79, 80, 81, 84, 85, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 113, 115, 118, 120, 124, 128, 129, 130, 133, 135, 136, 137, 143, 147, 148, 150, 151, 152, 155, 157, 158, 159, 162, 163, 164, 174, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 199, 201, 203, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 246, 247, 249, 252, 253, 254, 255, 258, 259, 264, 267, 268, 271, 273, 275, 281, 282, 285, 286, 288, 290, 291, 292, 296, 305, 306], "otherfram": [199, 264], "otherpoint": 203, "otherwis": [2, 3, 12, 14, 22, 34, 35, 37, 41, 42, 43, 67, 68, 69, 79, 80, 84, 87, 88, 89, 92, 94, 96, 97, 98, 101, 102, 103, 104, 113, 115, 117, 118, 119, 124, 127, 128, 130, 141, 143, 145, 148, 157, 158, 175, 180, 186, 202, 203, 206, 207, 209, 211, 213, 215, 216, 218, 220, 222, 223, 225, 226, 228, 232, 233, 236, 237, 238, 239, 240, 241, 249, 251, 253, 258, 259, 285, 286, 295], "otim": [32, 241, 242], "our": [5, 11, 13, 14, 18, 32, 35, 36, 39, 43, 59, 69, 88, 96, 113, 124, 128, 134, 152, 157, 195, 206, 207, 209, 211, 215, 216, 217, 220, 227, 230, 233, 236, 239, 251, 285, 288, 289, 291, 296, 298, 300, 303, 306], "out": [5, 11, 12, 13, 16, 18, 22, 28, 30, 41, 42, 43, 51, 68, 69, 79, 80, 88, 89, 90, 93, 96, 104, 113, 115, 120, 124, 128, 130, 135, 143, 144, 167, 171, 182, 185, 187, 189, 190, 207, 208, 209, 210, 211, 215, 216, 217, 218, 220, 221, 227, 230, 232, 236, 241, 242, 251, 253, 258, 259, 288, 290, 291, 295, 296, 301, 305, 308], "out1": 124, "out2": 124, "out_8598435338387848786": [69, 253], "outcom": [118, 193, 240], "outdat": 12, "outer": [28, 30, 32, 36, 55, 115, 130, 148, 154, 173, 178, 179, 199, 201, 203, 222, 228, 244, 264, 267, 268], "outer_product": 179, "outermost": [220, 228, 232, 244], "outerproduct": [173, 179], "outfram": 203, "outlier": 240, "outlin": [0, 2, 3, 11, 14, 41, 43, 86, 115, 207, 236], "outof": 36, "outperform": 69, "output": [2, 4, 5, 11, 12, 13, 14, 16, 17, 18, 22, 27, 30, 31, 32, 33, 36, 39, 41, 43, 46, 52, 55, 57, 68, 69, 88, 89, 96, 112, 115, 116, 118, 120, 124, 128, 129, 130, 140, 143, 152, 157, 162, 163, 174, 186, 190, 199, 203, 204, 210, 213, 216, 220, 221, 230, 232, 233, 235, 236, 238, 240, 245, 251, 252, 253, 255, 258, 259, 264, 288, 290, 291, 292, 295, 296, 297, 309], "output_eqn": 157, "outputargu": [69, 253], "outputbuff": 220, "outputcheck": 251, "outputtexfil": 220, "outright": 239, "outsid": [4, 21, 36, 52, 65, 79, 88, 96, 99, 104, 124, 128, 195, 216, 232, 286, 291], "outweigh": 207, "over": [3, 5, 6, 7, 10, 11, 12, 13, 14, 16, 18, 22, 30, 31, 33, 38, 43, 48, 51, 58, 61, 67, 68, 69, 70, 79, 80, 83, 87, 88, 89, 90, 91, 92, 93, 102, 104, 111, 113, 117, 118, 120, 124, 125, 128, 135, 136, 137, 139, 145, 151, 157, 169, 185, 188, 190, 194, 195, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 223, 225, 227, 232, 233, 235, 236, 238, 239, 240, 241, 242, 244, 245, 254, 258, 259, 264, 267, 271, 274, 290, 294, 296, 298], "over_power_basi": 215, "overal": [88, 197, 206, 238], "overcompens": 89, "overconstrain": 56, "overdetermin": [54, 209, 238, 239], "overflow": [69, 255], "overhang": [135, 136], "overhead": [89, 129, 217], "overlap": [100, 105, 127, 207, 228, 261], "overleaf": 5, "overli": [54, 155], "overlin": [5, 41, 96, 130], "overload": [207, 210, 211, 268, 291, 298], "overrid": [14, 15, 16, 18, 69, 88, 97, 98, 104, 130, 188, 209, 220, 245, 252, 253, 258, 259], "overridden": [198, 207, 222, 296], "overview": [11, 208, 239, 272, 273], "overwrit": [30, 32, 303], "overwritten": 22, "own": [2, 4, 9, 11, 12, 14, 16, 18, 22, 30, 43, 63, 72, 79, 80, 88, 104, 130, 132, 136, 151, 215, 220, 227, 232, 236, 255, 258, 259, 290], "ownership": 209, "oxford": 124, "oyvind": 11, "p": [0, 8, 12, 13, 14, 15, 16, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 39, 41, 42, 43, 46, 48, 49, 51, 61, 63, 64, 65, 69, 70, 71, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 93, 94, 96, 98, 101, 102, 103, 104, 105, 110, 111, 113, 115, 120, 124, 128, 130, 131, 134, 135, 136, 137, 139, 143, 144, 147, 148, 151, 152, 153, 154, 155, 157, 159, 162, 163, 169, 188, 190, 195, 200, 203, 205, 206, 208, 209, 210, 213, 214, 216, 217, 220, 222, 223, 227, 228, 230, 232, 233, 236, 238, 239, 240, 241, 245, 246, 258, 264, 267, 268, 269, 270, 271, 273, 292, 296, 298, 302, 303, 305], "p0": [84, 98, 135, 215, 236], "p1": [18, 30, 35, 70, 79, 80, 84, 87, 98, 100, 101, 102, 103, 104, 135, 143, 148, 151, 154, 158, 159, 203, 206, 210, 211, 213, 217, 229, 240, 241, 298, 305], "p10": [79, 135], "p11": 100, "p12": [100, 135], "p13": 100, "p1_frame": 151, "p1_pt": 154, "p2": [18, 30, 35, 42, 79, 80, 87, 98, 100, 101, 102, 103, 104, 135, 143, 148, 151, 154, 158, 203, 206, 210, 211, 213, 217, 229, 240, 298], "p20": [79, 135], "p21": 100, "p22": 100, "p23": 100, "p2_pt": 154, "p3": [35, 87, 98, 100, 101, 103, 104, 143, 154, 206, 210, 229, 240, 298], "p3_pt": 154, "p4": [98, 101, 103, 104, 143, 154, 206, 298], "p4_pt": 154, "p5": [101, 103, 104, 135, 206], "p50": 135, "p6": [101, 104, 206], "p64": 211, "p7": [101, 104, 135, 206], "p8": [135, 206], "p9": 206, "p90": 88, "p_": [79, 84, 88, 115, 195, 233, 236, 241], "p_0": [79, 84, 106, 230, 233], "p_1": [35, 79, 84, 89, 93, 106, 128, 230, 233, 298], "p_12": 135, "p_2": [35, 79, 89, 93, 106, 128, 230, 298], "p_3": [35, 89, 298], "p_4": 298, "p_5": 135, "p_a": [209, 213], "p_a_b": 209, "p_dom": 210, "p_domain": 211, "p_expr": [210, 211], "p_frame": 151, "p_i": [79, 84, 93, 128], "p_invers": 236, "p_j": [79, 84], "p_k": [79, 93, 128], "p_m": 96, "p_masscent": 151, "p_mat": 46, "p_n": [89, 93, 96, 115, 216], "p_new": 240, "p_o_p": 22, "p_o_q": 30, "p_p": 79, "p_p_q": 30, "p_p_r": 22, "p_pt": 22, "p_q": 230, "p_r": 106, "p_so_o": 22, "p_val": [18, 51, 298], "p_x": 246, "p_y": 246, "p_z": 246, "pa": [18, 25, 28, 31, 35, 124, 132, 147, 152, 154, 155, 213], "packag": [2, 7, 8, 9, 11, 12, 18, 23, 30, 47, 49, 53, 54, 59, 116, 129, 130, 140, 150, 204, 220, 251, 270, 271, 290, 298], "pad": [16, 69, 89, 90, 91, 103, 128], "padded_kei": 89, "pafnuti": 5, "page": [0, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 27, 30, 36, 41, 42, 48, 49, 51, 52, 56, 58, 69, 70, 71, 87, 93, 113, 128, 129, 151, 152, 195, 206, 209, 210, 211, 214, 220, 230, 233, 256, 273, 296], "page52": 195, "page78": 195, "page_228": 96, "page_888": 115, "pai": 67, "pain": 3, "pair": [4, 14, 16, 18, 22, 28, 39, 48, 51, 68, 69, 79, 80, 88, 89, 94, 100, 105, 112, 124, 128, 132, 147, 155, 158, 180, 182, 184, 185, 190, 205, 207, 209, 210, 211, 213, 215, 216, 221, 226, 227, 229, 230, 232, 233, 236, 239, 240, 253, 258, 268, 285, 292, 305], "pairwis": [5, 65, 68, 88, 93, 105, 124, 128, 233, 238], "pakianathan": 74, "palancz08": 214, "palimpsest": 89, "palindrom": 128, "pal\u00e1ncz": 214, "panagioti": 216, "pankowski": 11, "papadopoulo": 29, "paper": [0, 4, 18, 36, 45, 124, 128, 215, 216, 229, 230, 233, 236, 301, 302], "paperforkcgx": 301, "paperforkcgz": 301, "paperforkl": 301, "paperframecgx": 301, "paperframecgz": 301, "paperradfront": 301, "paperradrear": 301, "paperwb": 301, "paprocki": 0, "parabol": 135, "parabola": 264, "paradigm": 14, "paragraph": [3, 4, 5, 43, 68], "parallel": [18, 35, 36, 61, 98, 101, 102, 104, 115, 140, 143, 146, 155, 158, 209, 213, 270, 274, 298], "parallel_axi": [148, 154], "parallel_lin": 101, "parallel_plan": 102, "parallel_poly_from_expr": 216, "parallelogram": 36, "param": [69, 90, 124, 206, 233], "param_circl": 274, "paramet": [3, 5, 12, 13, 14, 15, 16, 18, 21, 22, 30, 33, 36, 48, 54, 56, 61, 62, 64, 67, 69, 70, 71, 74, 79, 80, 84, 86, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 111, 113, 115, 116, 118, 120, 123, 124, 125, 127, 128, 130, 132, 134, 135, 137, 139, 141, 143, 144, 145, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 165, 166, 167, 169, 170, 171, 173, 174, 175, 178, 179, 180, 182, 184, 185, 187, 188, 189, 190, 191, 192, 194, 199, 200, 201, 203, 204, 205, 206, 208, 209, 211, 213, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 232, 233, 235, 236, 237, 238, 240, 241, 242, 245, 246, 249, 251, 252, 253, 255, 256, 258, 259, 264, 266, 267, 268, 269, 274, 286, 291, 298, 301], "parameter": [18, 51, 90, 97, 98, 101, 104, 233], "parameter_valu": [99, 102], "parametr": [69, 96, 97, 101, 124, 134, 206, 233, 239, 264, 267, 274], "parametric2dlineseri": 206, "parametric3dlineinteractiveseri": 206, "parametric3dlineseri": 206, "parametricintegr": 264, "parametricregion": [264, 267, 274], "parametricsurfaceseri": 206, "parametris": [88, 228], "parametrize_ternary_quadrat": 233, "paraxi": [159, 163], "pare1970": 68, "pareigi": 68, "paren": 220, "parent": [13, 24, 79, 88, 111, 147, 151, 157, 199, 203, 210, 211, 215, 251, 255, 264, 268, 269, 298], "parent_axi": [13, 151, 298], "parent_force_direction_vector": 298, "parent_fram": [13, 24], "parent_interfram": [13, 24, 151, 306], "parent_joint_po": [13, 151], "parent_point": [13, 24, 151, 303, 306], "parent_tangency_point": 298, "parent_vector": 151, "parenthes": [4, 12, 16, 21, 36, 88, 130, 178, 179, 220, 244, 261], "parenthesi": [220, 244], "parenthesize_sup": 220, "pareto": 240, "pareto_distribut": 240, "paretodistribut": 240, "parg": 96, "pariti": [13, 41, 80, 88, 216], "parity_": [41, 88], "park": 89, "pars": [12, 13, 14, 22, 24, 80, 88, 120, 217, 219, 275, 283], "parsabl": 15, "parse_autolev": 22, "parse_c": 2, "parse_expr": [2, 13, 14, 41, 57, 88, 130], "parse_latex": [57, 130], "parse_latex_lark": 130, "parse_mathematica": [2, 13, 130], "parse_maxima": [2, 130], "parser": [2, 23, 30, 120, 251], "part": [2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 21, 22, 23, 24, 28, 30, 32, 36, 41, 42, 43, 48, 61, 66, 79, 80, 87, 88, 89, 93, 94, 96, 104, 111, 113, 115, 118, 120, 124, 128, 131, 134, 143, 148, 150, 151, 152, 157, 174, 186, 190, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 221, 228, 230, 232, 233, 236, 238, 251, 253, 255, 258, 286, 291, 296, 301, 302, 309], "part1": 151, "part2": 151, "part_sol": 236, "partcompon": 255, "partfrac": [216, 222], "parti": [157, 256], "partial": [8, 15, 30, 33, 67, 79, 86, 87, 88, 90, 92, 93, 94, 128, 130, 184, 199, 203, 209, 211, 214, 217, 220, 222, 229, 232, 236, 237, 241, 247, 264, 271, 286, 296], "partial_list": 216, "partial_veloc": [30, 199, 203], "partialderiv": 247, "particip": 7, "particl": [13, 18, 22, 23, 25, 27, 30, 31, 35, 148, 150, 151, 152, 154, 157, 166, 169, 176, 177, 188, 190, 193, 195, 246, 281, 305, 306], "particle_p": 22, "particle_r": 22, "particular": [3, 4, 11, 12, 13, 15, 16, 23, 41, 42, 49, 51, 65, 70, 79, 88, 89, 92, 96, 99, 113, 115, 118, 120, 124, 128, 135, 139, 150, 174, 185, 208, 209, 210, 211, 213, 215, 216, 226, 228, 230, 232, 233, 236, 238, 239, 251, 253, 255, 292, 294, 296], "particularli": [12, 14, 41, 92, 115, 210, 211, 230, 296, 297], "partit": [5, 27, 29, 75, 79, 93, 128, 233, 240, 255, 276, 305], "partition_": [77, 93], "partitionfunctionp": 128, "partitions_": [13, 128], "pascal": [93, 128], "pass": [2, 3, 4, 11, 12, 14, 15, 16, 18, 22, 28, 30, 31, 37, 38, 41, 42, 43, 50, 51, 54, 55, 57, 60, 61, 64, 67, 68, 69, 79, 80, 88, 89, 90, 92, 94, 95, 96, 98, 101, 102, 104, 115, 116, 118, 120, 124, 125, 128, 130, 132, 134, 135, 141, 143, 147, 148, 152, 155, 157, 158, 162, 179, 180, 184, 185, 187, 188, 204, 206, 207, 209, 210, 211, 213, 215, 216, 218, 220, 221, 227, 228, 232, 233, 236, 237, 238, 239, 240, 241, 244, 245, 246, 249, 251, 252, 253, 254, 256, 258, 259, 261, 263, 264, 285, 286, 291, 295, 296, 297, 305], "passiv": [132, 134, 187, 298], "past": [11, 12, 16, 94, 128, 219, 220, 295], "pastabl": 261, "pat_matrix": 146, "patashnik": 80, "patch": [13, 90, 220], "path": [4, 8, 12, 13, 18, 33, 35, 79, 104, 110, 130, 143, 155, 158, 206, 229, 232, 236, 239, 251, 252, 255, 256, 258, 261, 262, 271, 298, 302, 309], "pathsep": 261, "pathwai": [19, 134, 147, 150, 158, 281, 298], "pathwaybas": [18, 134, 147, 155, 298], "patrizia": 238, "pattern": [11, 12, 13, 15, 16, 41, 43, 88, 113, 115, 118, 124, 130, 184, 210, 230, 232, 236, 238, 286, 291], "paul": [93, 255], "paulbourk": 104, "pauli": [146, 281], "pauli_matric": [146, 165], "paulialgebra": 165, "paulimatric": 165, "pb": [35, 147, 155, 162], "pc": [151, 155, 217], "pc_group": 78, "pc_present": 78, "pc_resent": 78, "pc_sequenc": [78, 79], "pc_seri": [78, 79], "pcg": 78, "pcgroup": 78, "pd": 155, "pdb": 251, "pde": [234, 236, 276], "pde_1st_linear_constant_coeff": 237, "pde_1st_linear_constant_coeff_homogen": 237, "pde_1st_linear_variable_coeff": 237, "pde_hint": 237, "pde_hintnam": 237, "pde_separ": 237, "pde_separate_add": 237, "pde_separate_mul": 237, "pdf": [2, 5, 7, 18, 46, 55, 58, 67, 68, 79, 89, 91, 93, 110, 115, 124, 128, 135, 136, 139, 141, 143, 206, 209, 211, 214, 219, 220, 223, 229, 232, 233, 236, 240, 258, 264, 298], "pdiv": [211, 216], "pdp": 292, "pdsolv": 237, "pe": 87, "peak": [18, 134, 159], "peak_isometric_forc": [18, 134], "pearc": 232, "pearson": 240, "peculiar": [36, 113], "pedregosa": 0, "peek": [255, 296], "peerj": [0, 7], "pell": 233, "penalti": 21, "pendent": 30, "pendulum": [13, 23, 27, 31, 35, 55, 150, 151, 157, 300, 303, 304, 306], "pendulum_bodi": 302, "pendulum_izz": 13, "pendulum_joint": 151, "pendulum_mass": 13, "pendulum_point": 302, "pennat": [18, 134], "penros": [53, 120, 124], "penrose_pseudoinvers": 124, "pent": 99, "pentagonal_number_theorem": 93, "peopl": [3, 4, 7, 9, 11, 91, 96, 115, 124, 195, 240], "pep": [5, 69, 88, 118], "per": [3, 18, 33, 89, 124, 129, 139, 152, 155, 164, 194, 199, 206, 211, 216, 217, 264, 268, 270, 273], "percent": [124, 239], "percentag": [124, 128], "perfect": [4, 43, 55, 79, 88, 128, 233, 239, 290, 291], "perfect_numb": 128, "perfect_pow": [88, 128], "perfectli": [14, 80, 87, 88, 89, 213, 216, 219], "perfectnumb": 128, "perform": [2, 11, 12, 13, 14, 15, 16, 23, 27, 28, 30, 33, 36, 38, 39, 41, 43, 66, 68, 69, 70, 79, 80, 83, 87, 88, 89, 91, 92, 94, 101, 105, 112, 115, 121, 124, 128, 129, 149, 150, 152, 174, 175, 184, 187, 190, 208, 209, 210, 213, 215, 216, 221, 222, 223, 227, 232, 233, 236, 238, 239, 240, 241, 252, 258, 264, 266, 268, 271, 285, 286, 290, 291, 296, 301, 305], "perhap": [11, 13, 18, 37, 69, 88, 118, 128, 175, 209, 210, 238, 253, 285], "periapsi": 98, "perimet": 104, "period": [3, 4, 11, 13, 27, 52, 67, 88, 89, 94, 113, 128, 143, 164, 186, 193, 215, 220, 223, 226, 235, 239, 240, 258, 302], "period_find": 186, "periodic_argu": 94, "periodic_continued_fract": 128, "perl": 128, "perlikowskia": 302, "perm": [76, 78, 79, 80, 81, 86, 93, 120, 124, 241], "perm1": 242, "perm2": 242, "perm2tensor": 246, "perm_cycl": [13, 80, 220], "perm_group": [73, 78, 79, 80, 85, 86], "perm_mat": [27, 152, 153], "perman": [11, 124], "permanent_": 124, "permeabl": 161, "permiss": [128, 205], "permit": [41, 80, 90, 94, 118, 128, 206, 238], "permitt": 161, "permut": [5, 70, 71, 73, 75, 76, 78, 81, 84, 85, 86, 89, 93, 96, 120, 124, 153, 190, 205, 209, 211, 216, 233, 241, 242, 246, 258, 276, 296], "permutation_oper": 190, "permutationgroup": [71, 73, 76, 78, 79, 80, 85, 86, 215], "permutationinvolut": 258, "permutationmatrix": [120, 124], "permutationoper": 190, "permute_backward": 124, "permute_col": 124, "permute_forward": 124, "permute_row": 124, "permute_sign": [233, 258], "permutebkwd": 124, "permutedim": [120, 241, 242], "permutefwd": 124, "permutlist": 190, "perpendicualar": 102, "perpendicular": [36, 98, 101, 102, 104, 117, 151, 158, 163, 309], "perpendicular_bisector": 101, "perpendicular_lin": [101, 102], "perpendicular_plan": 102, "perpendicular_seg": 101, "perri": 209, "persist": 255, "person": [5, 15], "perspect": [118, 128, 143, 195, 206, 253, 269, 273], "pertain": [34, 200, 202], "pertin": [31, 207, 215], "perus": 11, "peter": [29, 34, 87, 93, 96, 128, 202, 209, 216, 258], "peterson": 153, "petkovsek": [87, 238], "pexquo": [211, 216], "pfd": 216, "pfda": 216, "pfister": 214, "pfix": 35, "pfq": 236, "pgl": 71, "pgl2f5": 71, "pgl_2": 71, "pgroup": [79, 81], "phantom": 213, "phase": [11, 46, 88, 115, 141, 159, 162, 164, 174, 175, 239], "phase_retard": 162, "phase_unit": 141, "phase_unwrap": 141, "phaseg": 174, "phdthesisthieu": 236, "phenomenom": 18, "phenomenon": [67, 195, 213, 223, 291], "phi": [16, 30, 79, 88, 89, 93, 96, 113, 117, 124, 128, 145, 164, 173, 175, 205, 207, 215, 220, 236, 264, 274, 302], "phi1": 164, "phi2": 164, "phi_0": 96, "phi_a": 162, "phi_b": 162, "phia": 162, "phib": 162, "phidd": 220, "phil": 205, "philosoph": 15, "philosophi": [194, 236, 239, 281], "php": [80, 128, 233, 240], "phrase": [5, 11, 15, 89], "phy": [169, 195, 205], "physic": [2, 4, 17, 18, 19, 22, 23, 39, 44, 46, 69, 81, 93, 124, 128, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 214, 240, 255, 258, 271, 290, 296, 298, 301, 302, 303, 304, 305, 306, 308, 309, 310], "physicalconst": 194, "pi": [4, 12, 13, 14, 15, 16, 30, 32, 38, 41, 43, 49, 50, 52, 55, 57, 60, 61, 62, 64, 65, 66, 67, 69, 80, 87, 88, 90, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 107, 113, 115, 124, 128, 145, 151, 158, 159, 161, 162, 163, 164, 166, 174, 185, 187, 188, 191, 193, 199, 205, 206, 208, 210, 211, 216, 220, 223, 227, 228, 229, 230, 232, 235, 236, 238, 239, 240, 258, 264, 267, 274, 285, 290, 296, 298, 301, 303], "pi_": 43, "pi_hex_digit": 128, "piab": 181, "piabbra": 181, "piabhamiltonian": 181, "piabket": 181, "pic": 68, "pick": [27, 41, 89, 93, 184, 186, 296], "pickl": 2, "pictori": 135, "pictur": [78, 220], "piec": [88, 92, 230, 253], "piecewis": [14, 42, 43, 69, 87, 93, 96, 115, 118, 135, 137, 188, 220, 222, 223, 238, 239, 240, 259, 286], "piecewise_exclus": 94, "piecewise_fold": 94, "piecewise_integr": 94, "pietjepuk314": 220, "pii": [214, 229], "pin": [13, 61, 135, 136, 139, 147, 151, 157, 298], "pin_joint": 147, "pinjoint": [13, 24, 147, 151, 157, 303, 306], "pinv": [120, 124], "pinv_solv": [119, 124], "pip": [2, 8, 9, 12, 59, 130], "pipe": 251, "pitch": 301, "pitfal": [14, 17, 36, 43, 210, 288, 293, 296], "pivot": [124, 209, 292, 302], "piziak": 124, "pkdata": 13, "pkg": [116, 204], "pl": 11, "place": [5, 7, 9, 11, 12, 13, 14, 15, 16, 30, 31, 41, 43, 52, 58, 68, 80, 81, 88, 89, 94, 104, 119, 124, 127, 128, 130, 131, 135, 143, 209, 214, 215, 220, 221, 227, 229, 232, 236, 255, 258, 284, 285, 292, 296], "placehold": [88, 259], "plai": [25, 41, 87, 233, 288, 290, 291, 301], "plain": [3, 4, 11, 12, 41, 88, 96, 116, 204, 209, 216, 220], "plaintext": [89, 220], "plan": [14, 21, 67, 211, 295], "planar": [98, 104, 136, 151, 163], "planar_coordin": 151, "planar_spe": 151, "planar_vector": 151, "planarjoint": 151, "planck": [197, 240], "planck_const": 172, "plane": [4, 35, 36, 46, 61, 88, 96, 98, 100, 101, 103, 104, 115, 124, 141, 143, 151, 162, 163, 228, 239, 274, 282, 296, 298, 301], "plane_vector": 151, "planet": [23, 150], "planetmath": 236, "plank": 172, "plant": [46, 143], "plant_mat": 143, "plate": 162, "platform": [4, 36, 88, 137, 190, 236, 252], "platon": 81, "plausibl": 207, "pleas": [0, 3, 4, 5, 7, 12, 13, 14, 21, 22, 23, 27, 28, 32, 36, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 65, 67, 88, 96, 100, 113, 128, 150, 152, 162, 163, 184, 205, 206, 207, 213, 214, 228, 232, 233, 238, 239, 259, 264, 269, 293, 297], "plenti": 13, "plot": [4, 18, 30, 43, 46, 55, 59, 97, 98, 100, 101, 104, 111, 116, 124, 135, 136, 137, 139, 142, 174, 177, 183, 223, 275, 281, 282, 290, 295, 298], "plot3d": [124, 206], "plot3d_parametric_lin": 206, "plot3d_parametric_surfac": 206, "plot_bending_mo": [135, 136], "plot_deflect": [135, 136], "plot_direct": 5, "plot_gat": 174, "plot_ild_mo": 135, "plot_ild_react": 135, "plot_ild_shear": 135, "plot_implicit": 206, "plot_interv": [97, 98, 101, 104], "plot_loading_result": [135, 136], "plot_parametr": 206, "plot_shear_forc": [135, 136], "plot_shear_stress": 135, "plot_slop": [135, 136], "plot_tens": 137, "plot_traj": 298, "plot_typ": 206, "plotgrid": 135, "plotli": 13, "plt": [18, 30, 55, 111, 298], "plu": [30, 69, 87, 124, 130, 170, 213, 216, 220, 230, 258, 259], "plug": [22, 195], "plural": [4, 5], "pm": [41, 48, 49, 51, 61, 87, 113, 115, 128, 208, 219, 227, 233, 236], "pmatrix": [130, 195], "pmf": 240, "pmint": 115, "pmod": [79, 88, 89, 93, 128, 230, 233], "pn": [27, 79, 305], "pn0": 260, "png": [18, 45, 46, 55, 68, 116, 124, 135, 136, 139, 141, 204, 206, 220, 223, 298], "pnot": 35, "po": [28, 30, 79, 113, 118, 124, 154, 155, 158, 211, 238], "pochhamm": [93, 220, 232], "pochhammer_symbol": 93, "pohlig": 128, "pohst": 215, "poin": 90, "poincar\u00e9": 162, "point": [2, 3, 4, 5, 12, 14, 15, 16, 18, 22, 24, 25, 26, 27, 28, 30, 31, 33, 36, 39, 41, 52, 54, 55, 59, 61, 67, 69, 70, 79, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 110, 111, 112, 113, 115, 124, 128, 130, 132, 134, 135, 136, 137, 139, 141, 143, 147, 148, 151, 152, 153, 154, 155, 157, 158, 170, 192, 195, 200, 203, 206, 207, 209, 210, 211, 213, 215, 216, 220, 222, 226, 227, 228, 236, 238, 239, 240, 252, 255, 258, 259, 261, 264, 267, 269, 270, 271, 273, 274, 282, 285, 286, 288, 291, 298, 301, 302, 303, 305, 307, 308, 309, 310], "point1": [52, 200, 267], "point2": [52, 200, 267], "point2d": [97, 98, 99, 100, 101, 103, 104, 105], "point3d": [101, 102, 103, 163], "point_1": 158, "point_2": 158, "point_cflexur": 135, "point_load": 137, "point_o": [22, 154], "point_on_surfac": 158, "point_p": 90, "point_r": 90, "point_to_coord": 90, "pointer": [69, 253, 254], "pointer_const": 69, "pointless": 296, "pointload": [135, 136], "pointwis": [79, 86], "pointwise_stabil": 79, "poisson": 240, "poisson_distribut": 240, "poisson_point_process": 240, "poissondistribut": 240, "poissonprocess": 240, "pol": 90, "polar": [90, 94, 96, 98, 104, 135, 145, 160, 206, 228, 232, 239, 281], "polar_lift": [94, 96, 232], "polar_mo": 135, "polar_moment_of_inertia": [98, 104], "polar_second_moment_of_area": [98, 104], "polarcomplexregion": 228, "polaris": 163, "polarizing_beam_splitt": 162, "pole": [4, 13, 15, 46, 96, 113, 143, 151, 163, 227, 230, 236], "pole_color": 141, "pole_markers": 141, "pole_zero_numerical_data": 141, "pole_zero_plot": [46, 141], "poleerror": 88, "poli": [2, 15, 30, 48, 71, 87, 88, 89, 93, 94, 96, 97, 104, 110, 115, 120, 124, 128, 207, 208, 212, 213, 215, 216, 217, 219, 222, 235, 236, 238, 239, 251, 282], "polici": [6, 13, 254, 256], "polificationfail": 213, "polish": 232, "pollard": [128, 236], "pollard_pm1": 128, "pollard_rho": 128, "pollut": 12, "polnomi": 216, "poly1": 104, "poly2": 104, "poly_from_expr": [215, 216], "poly_lc": 213, "poly_r": [210, 211], "poly_tc": 213, "poly_unifi": 211, "polyalphabet": 89, "polybiu": 89, "polyclass": [210, 211, 216], "polyconfig": [213, 216], "polycycl": [75, 79, 276], "polycyclic_group": [78, 79], "polycyclicgroup": 79, "polycyl": 78, "polyel": [210, 211, 213, 217, 218, 220], "polyerror": [48, 213, 216], "polyfunc": [97, 211, 216], "polygamma": [4, 93, 96, 220], "polygamma2": 96, "polygamma_funct": 96, "polygammafunct": 96, "polygon": [4, 98, 99, 100, 105, 206, 274, 282], "polygonmesh": 104, "polygraph": 89, "polyhedr": 81, "polyhedra": 81, "polyhedralgroup": 81, "polyhedron": [75, 79, 115, 258, 276], "polylog": [96, 220], "polylogarithm": 96, "polymatrix": 13, "polymoni": 179, "polynomi": [4, 5, 14, 15, 30, 32, 39, 41, 49, 51, 57, 65, 79, 87, 88, 89, 92, 93, 106, 107, 109, 111, 115, 118, 120, 124, 128, 136, 143, 207, 209, 214, 218, 222, 227, 229, 230, 232, 233, 235, 236, 239, 251, 275, 282, 287, 292, 297], "polynomial_congru": [128, 213], "polynomialerror": [213, 216], "polynomialr": [207, 211, 218], "polyopt": [213, 217], "polyr": [211, 213, 218], "polyroot": 216, "polysi": 238, "polytool": [88, 209, 213, 216, 239], "polytope_integr": 115, "polyu": 143, "pomer": [128, 255], "pone": 61, "poor": [115, 129], "poorer": 67, "pop": [11, 115, 233], "popen": 220, "popul": [132, 134, 240], "popular": [0, 2, 30, 89, 129, 290], "port": [8, 130, 162, 301], "portabl": [251, 252], "portion": [18, 92, 104, 124, 147, 298], "portug": [84, 246], "pos_from": [13, 18, 22, 24, 30, 35, 147, 151, 154, 155, 157, 158, 203, 298, 301, 303, 305], "pos_vec": 154, "posform": 118, "posifi": [41, 232], "posit": [3, 11, 12, 13, 14, 15, 16, 18, 22, 24, 27, 28, 30, 33, 35, 36, 41, 42, 43, 46, 48, 52, 62, 63, 64, 65, 66, 68, 69, 70, 72, 74, 77, 79, 80, 81, 83, 84, 87, 88, 89, 90, 92, 93, 94, 96, 98, 100, 101, 104, 113, 115, 117, 118, 119, 124, 125, 127, 128, 132, 135, 136, 137, 139, 143, 145, 147, 148, 151, 154, 155, 158, 159, 162, 164, 168, 185, 188, 190, 200, 201, 203, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 225, 226, 228, 229, 230, 232, 233, 236, 238, 239, 240, 241, 246, 258, 259, 264, 267, 268, 269, 271, 273, 274, 292, 296, 297, 298, 301, 302, 305, 308, 310], "position2": [200, 267], "position_i": 168, "position_wrt": [264, 268, 269, 270], "position_x": 168, "position_z": 168, "positionbra3d": 168, "positionket3d": 168, "positionstate3d": 168, "positive_definit": 65, "positive_real_numb": 41, "positive_root": 117, "positivedefinitehandl": 65, "positivedefinitematrix": 124, "positivedefinitepred": 65, "positivehandl": 65, "positivepred": 65, "poss": [36, 78, 301], "possess": [28, 148, 246], "possibl": [4, 8, 11, 12, 13, 14, 15, 18, 21, 26, 32, 33, 37, 41, 42, 43, 46, 48, 51, 56, 59, 67, 69, 70, 71, 72, 77, 79, 80, 82, 83, 84, 88, 89, 93, 94, 96, 98, 100, 102, 103, 105, 110, 112, 113, 115, 117, 118, 120, 124, 128, 130, 132, 134, 144, 145, 147, 152, 155, 158, 184, 186, 190, 192, 194, 195, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 221, 222, 226, 227, 228, 229, 232, 233, 236, 237, 238, 239, 240, 241, 246, 251, 253, 254, 255, 256, 258, 259, 268, 269, 271, 287, 288, 291, 296, 301], "possiblezeroq": 292, "possibli": [14, 41, 69, 80, 86, 88, 113, 115, 128, 193, 209, 211, 213, 227, 228, 238, 253, 258, 286, 292], "post": [7, 13, 41, 48, 50, 51, 52, 53, 54, 55, 56, 57, 69, 82, 88, 220, 221, 232, 251, 291], "postdecr": 69, "postfix": [220, 258], "postincr": 69, "postiv": 96, "postord": 88, "postorder_travers": [13, 88, 291], "postpon": 93, "postprocess": [69, 206, 216, 221, 232], "postprocessor": [221, 232], "postscript": 220, "postul": 128, "potenti": [13, 14, 23, 34, 41, 100, 120, 124, 128, 131, 148, 152, 154, 157, 200, 209, 210, 211, 215, 220, 227, 230, 232, 236, 254, 255, 267, 273, 302, 310], "potential_energi": [13, 28, 148, 152, 154, 157, 310], "pound": 194, "povm": 184, "pow": [4, 13, 15, 16, 61, 66, 69, 88, 89, 94, 113, 124, 128, 189, 209, 210, 211, 216, 220, 222, 229, 232, 238, 239, 291, 295], "pow_cos_sin": 61, "pow_xin": 217, "powdenest": [94, 232], "power": [13, 16, 22, 30, 50, 55, 61, 66, 69, 78, 79, 80, 89, 91, 92, 93, 110, 111, 113, 115, 117, 120, 124, 128, 129, 130, 143, 162, 173, 176, 189, 192, 194, 195, 196, 199, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 221, 224, 227, 229, 232, 233, 236, 238, 239, 240, 244, 253, 258, 276, 285, 286, 287, 288, 289, 291, 292, 295], "power_bas": [88, 124], "power_basis_ancestor": 215, "power_exp": [88, 124], "power_func": 240, "power_represent": 233, "power_set": 228, "powerbasi": 215, "powerbasisel": 215, "powerfunct": 240, "powerrul": 115, "powerset": 228, "powf": 220, "powi": [69, 220], "powl": [69, 220], "powsimp": [16, 88, 94, 229, 232], "pp": [4, 18, 27, 79, 80, 86, 87, 88, 89, 93, 94, 115, 124, 128, 131, 132, 134, 153, 205, 208, 209, 213, 214, 236, 237, 240, 298, 305], "pp1": 100, "pp2": 100, "pp3": 100, "pprint": [12, 14, 15, 16, 18, 43, 46, 52, 67, 68, 90, 96, 115, 124, 128, 143, 162, 205, 220, 221, 228, 232, 236, 237, 239, 240, 258, 295], "pprint_nod": 220, "pq": [240, 270], "pqa": 233, "pquo": [211, 216], "pr": [3, 11, 12, 13, 87, 151, 211, 213, 214, 216, 239], "prabha": 80, "practic": [9, 16, 17, 18, 24, 27, 30, 39, 41, 48, 51, 54, 57, 77, 79, 88, 89, 98, 206, 207, 208, 210, 213, 215, 217, 244, 288, 289], "pre": [15, 61, 68, 69, 88, 205, 206, 221, 229, 232, 238, 239, 251, 269, 273, 291], "preambl": [116, 204, 220], "prebuilt": 240, "prec": [43, 54, 88, 98, 104, 128, 141, 205, 211, 216, 217, 232, 238], "preced": [4, 5, 16, 70, 80, 88, 89, 92, 93, 170, 232, 259], "precedence_float": 220, "precedence_fracel": 220, "precedence_funct": 220, "precedence_integ": 220, "precedence_mul": 220, "precedence_polyel": 220, "precedence_r": 220, "precedence_unevaluatedexpr": 220, "precedence_valu": 220, "precis": [2, 3, 4, 14, 15, 16, 28, 41, 42, 43, 48, 52, 69, 79, 88, 91, 92, 93, 96, 104, 115, 124, 128, 141, 205, 207, 210, 211, 215, 216, 217, 220, 227, 232, 233, 238, 239, 252, 253, 261, 285, 286, 296], "precision_target": 69, "precisionexhaust": [88, 92], "precomput": [41, 93, 128, 259], "predecr": 69, "predefin": [30, 43, 90, 210, 220, 221, 232, 239, 246, 264, 269], "predetermin": [88, 251], "predic": [13, 15, 62, 63, 67, 88, 130, 216, 232, 258, 276], "predicate_": [63, 64], "predict": [41, 190, 232, 258], "prefer": [2, 4, 8, 9, 11, 12, 13, 14, 15, 22, 41, 43, 45, 48, 53, 54, 55, 69, 71, 80, 87, 88, 96, 128, 130, 132, 151, 190, 194, 195, 199, 206, 209, 211, 213, 215, 220, 228, 232, 236, 238, 245, 251, 253, 256, 259, 290, 292], "preferred_index": [96, 190], "prefix": [3, 11, 69, 88, 124, 128, 194, 197, 198, 210, 213, 217, 220, 233, 236, 252, 253, 258, 281], "prefix_express": 220, "prefix_i1_i2_": 124, "preimag": 207, "preincrement": 69, "preliminari": 289, "prem": [211, 216], "premad": 69, "premis": 68, "premises_kei": 68, "premultipli": 216, "preorder_travers": [13, 88, 291], "prep": [128, 236, 237], "prepar": [7, 41, 152, 218], "prepend": [8, 68, 79, 124, 143, 197, 220, 246], "prepopul": 18, "preprint": [128, 214], "preprocess": [41, 115, 218], "preprocessor": [69, 221, 232, 253], "preprocessor_stat": 253, "prerequisit": 8, "presenc": [9, 27, 88, 94, 118, 139, 157, 236, 244, 305], "present": [0, 2, 5, 13, 15, 16, 18, 33, 39, 45, 67, 68, 72, 75, 79, 80, 82, 86, 88, 91, 115, 124, 128, 131, 134, 135, 139, 141, 143, 152, 157, 190, 192, 199, 201, 204, 206, 207, 213, 214, 215, 219, 220, 233, 239, 253, 259, 267, 268, 269, 273, 276, 297, 300, 301], "preserv": [57, 68, 69, 79, 88, 124, 188, 209, 211, 216, 221, 222, 232], "presimplifi": 305, "press": [16, 68, 70, 72, 80, 89, 115, 124, 205, 214, 233, 238, 298], "presum": [41, 113, 210, 230, 253], "pretti": [4, 9, 11, 12, 15, 43, 68, 69, 96, 115, 116, 124, 128, 136, 143, 204, 230, 232, 239, 273, 287, 290, 292, 296, 301], "prettifi": 220, "pretty_ascii_repr": 197, "pretty_atom": 220, "pretty_indic": 190, "pretty_print": [24, 25, 26, 28, 31, 35, 36, 80, 116, 148, 154, 157, 199, 201, 203, 204, 220, 301, 303, 308, 309, 310], "pretty_scalar": 264, "pretty_symbol": 220, "pretty_symbologi": 220, "pretty_try_use_unicod": 220, "pretty_unicode_repr": 197, "pretty_use_unicod": 220, "pretty_vect": 264, "prettyform": 220, "prev": [82, 88, 260], "prev_binari": 83, "prev_grai": 83, "prev_lex": 77, "prev_lexicograph": 83, "prevent": [3, 7, 12, 14, 16, 21, 52, 57, 69, 88, 94, 125, 128, 157, 209, 211, 216, 220, 232, 240, 249, 256, 287], "preview": [2, 11, 68, 254], "preview_diagram": 68, "previou": [3, 4, 12, 13, 14, 27, 35, 36, 43, 72, 77, 78, 79, 80, 83, 88, 93, 94, 115, 118, 124, 127, 130, 148, 192, 213, 226, 233, 237, 241, 258, 289, 291, 296], "previous": [2, 3, 11, 13, 24, 33, 87, 134, 147, 151, 219, 232, 240, 271, 300, 309], "previous_term": [88, 94], "prevprim": [93, 128], "pri": 89, "primal": [128, 207], "primari": [2, 3, 4, 5, 12, 14, 18, 36, 41, 43, 88, 100, 118, 131, 134, 147, 207, 209, 253, 259], "primarili": [2, 14, 15, 41, 69, 88, 94, 128, 135, 189, 216, 218, 252, 255, 261, 268], "prime": [13, 41, 55, 62, 63, 64, 65, 79, 86, 87, 88, 89, 91, 93, 96, 128, 161, 207, 208, 209, 210, 211, 213, 216, 230, 232, 233, 240, 255], "prime_as_sum_of_two_squar": 233, "prime_bound": 128, "prime_decomp": 215, "prime_numb": [41, 88, 128], "prime_number_theorem": 128, "prime_ord": 128, "prime_valu": 215, "primefactor": [93, 128], "primehandl": 65, "primeid": [211, 215], "primenu": [13, 93, 128], "primeomega": [13, 93, 128], "primepi": [13, 15, 43, 93, 128], "primepred": [13, 65], "primerang": [93, 128], "primes_abov": [211, 215], "primetest": [13, 88, 93, 128], "primit": [15, 79, 88, 89, 96, 128, 184, 188, 207, 208, 209, 210, 211, 213, 215, 216, 219, 220, 233, 286], "primitive_el": [88, 210, 211, 215], "primitive_root": [128, 215], "primori": 128, "primtiiv": 215, "princeton": [205, 240], "princip": [68, 89, 94, 96, 113, 115, 124, 125, 145, 163, 207, 208, 209, 210, 211, 213, 215, 216, 217, 301], "principal_branch": [94, 113], "principal_valu": [94, 115], "principl": [2, 89, 124, 128, 161, 205, 207, 208, 213, 229, 238], "print": [1, 3, 4, 5, 7, 11, 12, 14, 15, 16, 22, 29, 34, 36, 39, 41, 42, 46, 48, 51, 52, 54, 59, 62, 63, 64, 65, 67, 68, 70, 71, 72, 77, 79, 80, 87, 88, 89, 92, 93, 94, 96, 115, 117, 118, 120, 124, 125, 128, 129, 130, 135, 136, 143, 150, 152, 157, 162, 170, 183, 184, 188, 190, 199, 202, 206, 209, 210, 211, 213, 215, 216, 226, 227, 229, 230, 232, 236, 238, 245, 247, 251, 253, 258, 259, 261, 264, 268, 275, 281, 283, 286, 287, 288, 289, 290, 291, 292, 296, 301], "print_builtin": [116, 204], "print_ccod": 220, "print_cycl": 80, "print_debug_output": 130, "print_dim_bas": 192, "print_fcod": 220, "print_funct": 39, "print_gtk": 220, "print_latex": 220, "print_maple_cod": 220, "print_mathml": [220, 295], "print_my_latex": 220, "print_nod": 220, "print_nonzero": [124, 258], "print_python": 220, "print_rcod": 220, "print_report": 71, "print_tre": 220, "printabl": [13, 89], "printer": [11, 12, 13, 14, 15, 18, 43, 80, 88, 96, 116, 124, 129, 204, 242, 245, 252, 253, 259, 287, 291], "printer_exampl": 220, "printer_set": 69, "printmethod": [43, 220], "prior": [3, 12, 13, 59, 203, 216, 232, 292], "prioriti": [21, 22, 36, 53, 69, 111, 259], "prism": 71, "prismat": 151, "prismaticjoint": [13, 24, 148, 151, 157, 306], "privat": [3, 4, 22, 88, 89, 206, 253], "prk": 89, "prng": 124, "prob": [188, 240], "probabilist": [96, 216, 240], "probabilit": 13, "probability_book": 240, "probability_distribut": 240, "probabilitycours": 240, "probabl": [7, 11, 14, 22, 71, 79, 88, 93, 96, 100, 128, 184, 188, 230, 236, 239, 240, 252, 288, 294], "problem": [5, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 25, 32, 35, 36, 39, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 72, 82, 84, 88, 89, 100, 113, 115, 124, 128, 131, 132, 134, 135, 137, 138, 139, 144, 150, 152, 207, 208, 213, 230, 232, 233, 236, 238, 239, 255, 258, 281, 286, 288, 292, 298, 302, 304, 305, 309], "problemat": [13, 14, 43, 210], "proc": [88, 211, 238], "proce": [27, 102, 213, 215, 230, 238], "procedur": [8, 28, 51, 53, 70, 71, 73, 79, 85, 86, 87, 115, 124, 152, 213, 215, 232, 233, 238, 239, 264, 292], "proceed": [29, 68, 70, 113, 115, 214, 230], "process": [4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 22, 24, 25, 27, 30, 41, 66, 69, 79, 80, 86, 88, 89, 94, 96, 104, 113, 115, 124, 128, 131, 143, 152, 153, 206, 207, 213, 220, 221, 228, 232, 236, 238, 242, 251, 255, 296, 299, 301, 309], "process_seri": 206, "prod": [88, 130, 210, 213, 217, 229], "prod_": [87, 93, 96, 113, 128, 195, 230], "produc": [2, 4, 5, 12, 14, 15, 18, 42, 43, 51, 53, 54, 55, 57, 68, 79, 88, 89, 101, 115, 118, 124, 131, 132, 134, 147, 155, 199, 209, 210, 215, 216, 220, 227, 236, 237, 238, 240, 249, 251, 255, 256, 258, 259, 295, 298, 299], "product": [12, 13, 21, 28, 30, 32, 34, 35, 36, 41, 61, 71, 73, 76, 79, 80, 84, 86, 87, 88, 89, 90, 92, 93, 96, 98, 101, 103, 104, 111, 113, 115, 117, 118, 120, 124, 128, 129, 130, 134, 143, 144, 145, 151, 165, 169, 170, 173, 175, 176, 177, 179, 182, 184, 185, 187, 188, 190, 194, 195, 196, 199, 201, 202, 205, 207, 208, 209, 211, 213, 215, 216, 217, 220, 221, 222, 225, 228, 229, 232, 233, 236, 237, 238, 239, 240, 242, 244, 245, 246, 252, 255, 258, 264, 268, 281, 301], "product_and_invers": 80, "product_matrix_left": 61, "product_matrix_right": 61, "product_replacement_algorithm": 79, "productdomain": 240, "productpspac": 240, "productset": [228, 239], "prof": 124, "profession": 9, "profil": [135, 143], "prog": [69, 169], "program": [2, 5, 16, 30, 41, 69, 72, 80, 195, 205, 253, 255, 288, 290, 294, 296], "programm": [128, 220], "programmat": [0, 14, 15, 37, 38, 56, 57, 239, 269], "programminggeek": 258, "progress": [11, 62, 64, 128, 253], "prohibit": [68, 80, 81, 199], "project": [5, 9, 10, 11, 13, 29, 45, 69, 71, 101, 102, 103, 117, 124, 252, 253, 264], "project__test__h": [69, 253], "projection_lin": 102, "projective_linear_group": 71, "promin": 217, "prompt": [4, 8, 12, 15], "prone": [43, 51, 69, 88], "pronoun": 5, "pronounc": 296, "proof": [12, 79, 82, 113, 115, 239], "proofwiki": 233, "prooject": 115, "prop": [79, 215], "prop_even": 79, "propag": [18, 92, 101, 161, 164, 298], "proper": [11, 16, 21, 22, 32, 79, 88, 115, 128, 210, 211, 215, 220, 228, 236, 241, 252, 253, 271, 292], "proper_divisor": 128, "proper_divisor_count": 128, "properli": [3, 11, 12, 15, 22, 25, 43, 68, 88, 94, 100, 113, 124, 153, 167, 171, 174, 188, 208, 210, 220, 236, 239, 249, 253, 259, 292, 297], "properti": [3, 12, 14, 15, 18, 28, 30, 32, 33, 36, 38, 43, 48, 53, 55, 61, 63, 64, 67, 68, 69, 70, 71, 72, 76, 77, 79, 80, 81, 82, 83, 87, 88, 89, 90, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 111, 113, 115, 120, 124, 128, 131, 132, 134, 135, 136, 137, 139, 140, 143, 147, 148, 151, 152, 154, 155, 157, 158, 159, 161, 164, 165, 168, 169, 174, 175, 176, 178, 179, 186, 188, 190, 192, 194, 195, 197, 198, 199, 200, 201, 205, 206, 208, 209, 210, 211, 213, 215, 216, 219, 222, 223, 226, 227, 228, 230, 233, 236, 239, 240, 245, 246, 251, 253, 254, 264, 267, 268, 269, 271, 273, 292, 298], "propfunc": 254, "proport": [79, 89, 147, 227, 259], "propos": [9, 128], "proposit": [62, 64, 118], "proprietari": 30, "proquest": 240, "protect": [89, 220], "proth": 128, "proth_prim": 128, "proth_test": 128, "prototyp": [69, 129, 253], "prove": [53, 88, 113, 115, 124, 207, 227, 236, 270], "proven": [115, 128, 270, 288], "provid": [0, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 17, 18, 21, 23, 24, 25, 26, 27, 28, 30, 31, 33, 35, 36, 37, 39, 40, 41, 42, 43, 46, 49, 50, 54, 58, 61, 67, 68, 69, 70, 71, 77, 78, 79, 80, 86, 87, 88, 90, 92, 96, 97, 99, 104, 107, 110, 111, 115, 116, 118, 120, 124, 125, 127, 128, 129, 130, 131, 133, 134, 136, 139, 141, 148, 150, 151, 152, 154, 157, 163, 164, 184, 192, 193, 194, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 223, 225, 228, 229, 230, 232, 236, 237, 238, 239, 240, 241, 245, 246, 251, 252, 253, 255, 256, 258, 259, 261, 264, 267, 268, 269, 271, 272, 274, 286, 290, 291, 292, 296, 298, 299, 301, 302, 303, 305, 306], "providean": 233, "prudent": 12, "prudnikov": [113, 230], "prudnikov1990": [113, 230], "prufer": [75, 276], "prufer_rank": 82, "prufer_repr": 82, "prune": 79, "pset": 228, "pseudo": [80, 124, 128, 211, 213, 216], "pseudocod": 79, "pseudoinvers": [53, 124], "pseudoprim": 128, "pseudorandom": [128, 258], "pseudotensor": 96, "psg": 81, "psi": [16, 93, 96, 113, 162, 173, 174, 180, 188, 215, 220, 246], "psi_": [145, 166], "psi_n": [69, 166], "psi_nl": 69, "psi_nlm": 145, "psl2f5": 71, "psl_2": 71, "psm": 128, "pspace": 240, "pspace1": 240, "pspace2": 240, "pstack": 255, "psu": [214, 229], "psum": 216, "psw_primality_test": 128, "pt": [89, 97, 98, 99, 101, 102, 103, 104, 226], "pt1": 102, "pth": 61, "pub": [89, 264], "public": [0, 4, 11, 12, 69, 88, 89, 110, 131, 132, 134, 210, 211, 213, 214, 218, 233, 236, 240, 254, 264], "public_kei": 89, "publicli": 89, "publish": [4, 18, 113, 131, 132, 134, 230], "pug": 89, "puiseux": 217, "puk": 89, "pull": [2, 3, 4, 5, 8, 9, 12, 13, 14, 18, 43, 59, 69, 88, 93, 96, 147, 189, 221, 232, 236, 239, 292, 296, 298], "puppi": 89, "purdu": 264, "pure": [0, 2, 13, 14, 15, 27, 52, 54, 61, 89, 94, 115, 118, 120, 134, 143, 195, 209, 210, 211, 213, 216, 220, 240, 258], "purepoli": [124, 209, 216], "purpos": [4, 5, 9, 12, 13, 14, 15, 18, 22, 28, 30, 36, 40, 41, 43, 55, 68, 69, 79, 85, 88, 89, 115, 124, 128, 148, 195, 206, 210, 213, 217, 219, 220, 227, 236, 239, 245, 255, 257, 259, 268, 269, 286, 296], "purposefulli": 301, "push": [9, 11, 12, 18, 113, 147, 155, 298], "pushforward": 90, "put": [3, 4, 11, 13, 14, 15, 16, 39, 43, 50, 69, 84, 85, 88, 89, 90, 94, 118, 124, 162, 167, 171, 186, 187, 216, 220, 221, 229, 230, 232, 236, 241, 247, 252, 292, 296, 298], "puyoqrstvwx": 89, "pval": 238, "pw": 220, "px": [154, 180, 185, 246], "px_1": 185, "px_2": 185, "pxbra": [168, 180], "pxket": [168, 180, 185], "pxop": [168, 180, 185], "py": [2, 3, 4, 11, 12, 41, 45, 68, 88, 99, 113, 115, 124, 130, 168, 170, 206, 209, 211, 217, 220, 227, 230, 236, 237, 246, 249, 251, 256, 259], "py3k": 16, "py_mod": 69, "py_str": 69, "pycod": [69, 220], "pycodestyl": 12, "pycosat": 2, "pycqa": 12, "pydi": [22, 30, 199], "pyf": 253, "pyflak": 12, "pyglet": [2, 220], "pyglet_plot": 206, "pygletplot": [2, 206], "pylab": 116, "pymc": [2, 240], "pynam": 253, "pyodid": 249, "pypi": 59, "pyplot": [18, 30, 55, 111, 298], "pysat": 2, "pytest": [2, 3, 11, 12, 13, 248, 254, 256, 259, 283], "pytestreport": 251, "pythag": 51, "pythag_eq": 51, "pythag_v": 51, "pythagora": 158, "pythagorean": [51, 233], "pythogorean": 51, "python": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 15, 21, 22, 30, 38, 41, 42, 43, 47, 48, 49, 52, 53, 55, 57, 58, 59, 62, 63, 64, 67, 80, 88, 89, 92, 94, 100, 116, 118, 120, 124, 128, 129, 130, 135, 141, 199, 206, 207, 208, 209, 210, 211, 217, 219, 220, 228, 232, 236, 239, 241, 251, 252, 253, 254, 255, 258, 259, 264, 288, 289, 290, 291, 292, 294, 295, 296], "python3": [2, 8, 69, 130, 220], "python_trick": 258, "python_vers": 254, "pythonfinitefield": [210, 211], "pythonhashse": [12, 251], "pythoninteg": 211, "pythonmpq": [210, 211], "pythonr": [211, 218], "pythonrationalfield": 211, "pythontyp": 220, "pythonwarn": 13, "pz": [91, 141, 246], "q": [13, 14, 15, 16, 18, 22, 24, 25, 26, 27, 30, 31, 33, 35, 38, 41, 49, 51, 60, 61, 62, 63, 64, 65, 66, 69, 80, 84, 87, 88, 89, 96, 105, 110, 111, 113, 115, 117, 124, 130, 134, 135, 137, 143, 144, 147, 148, 151, 152, 153, 155, 157, 158, 159, 170, 184, 190, 193, 199, 200, 201, 203, 204, 206, 207, 208, 210, 211, 213, 215, 216, 217, 219, 220, 222, 230, 233, 236, 238, 240, 245, 246, 261, 264, 267, 268, 270, 273, 292, 296, 298, 301, 305, 310], "q0": [151, 199, 236, 264, 266], "q0_": 151, "q0_c1": 151, "q0_c2": 151, "q0_pc": 151, "q1": [21, 22, 25, 26, 27, 31, 32, 35, 36, 61, 124, 135, 151, 199, 201, 203, 204, 210, 264, 266, 298, 301, 302, 303, 305, 306, 308, 309, 310], "q1_": 151, "q1_c1": 151, "q1_c2": 151, "q1_pc": 151, "q1d": [21, 22, 25, 26, 27, 28, 32, 36, 204, 301, 302, 305, 308, 309, 310], "q1dd": 204, "q2": [21, 22, 25, 26, 31, 32, 35, 36, 61, 135, 151, 199, 201, 203, 204, 210, 264, 266, 298, 301, 302, 303, 305, 306, 308, 309, 310], "q2_": 151, "q2_pc": 151, "q2d": [21, 22, 25, 26, 203, 204, 301, 305, 308, 309, 310], "q2dd": 204, "q3": [21, 25, 35, 36, 61, 199, 201, 203, 264, 266, 298, 301, 303, 306, 308, 309, 310], "q3d": [21, 25, 308, 309, 310], "q4": [25, 201, 298, 301], "q4d": [25, 301], "q5": [201, 301], "q5d": 301, "q6": 201, "q_": [13, 88, 151, 204, 233, 236, 298], "q_0": [18, 151, 170, 233], "q_1": [27, 35, 151, 170, 216, 233, 298, 302, 303, 305, 306], "q_2": [27, 35, 151, 298, 302, 303, 305, 306], "q_3": [35, 298, 303, 306], "q_4": 298, "q_annihil": 190, "q_aug": 124, "q_creator": 190, "q_d": 153, "q_dep": [25, 27, 152, 157, 303], "q_depend": [25, 30, 152, 298, 301, 305], "q_domain": 211, "q_expr": 211, "q_i": [27, 115, 153], "q_ind": [22, 25, 27, 30, 152, 153, 157, 301, 303, 305, 308, 309], "q_j": 13, "q_j1": 151, "q_j2": 151, "q_m": 96, "q_n": 216, "q_op": [153, 305], "q_orient": [264, 266], "q_p1": 151, "q_p2": 151, "q_pc": 151, "q_pin": [13, 157], "q_slider": 157, "q_val": [51, 298], "q_x": [35, 104], "q_y": [35, 104], "qa": 30, "qad": 30, "qappli": [174, 175, 177, 179, 184, 281], "qb": [30, 208], "qbd": 30, "qd": [25, 148, 152, 157, 203, 298, 301], "qd_dep": [27, 152], "qd_ind": [27, 152], "qd_op": 153, "qdot": [152, 203, 301], "qdoubledot": 152, "qexpr": 185, "qft": [177, 186, 281], "qg": 213, "qho": 69, "qho_1d": [69, 166], "qiq": 89, "qmonserrat": 11, "qn": 88, "qo": 30, "qp": 35, "qq": [11, 106, 107, 109, 110, 111, 115, 207, 208, 209, 210, 213, 215, 216, 217], "qq_col": 215, "qq_i": [209, 210, 213], "qq_matrix": 215, "qq_python": 211, "qquad": [94, 195, 213], "qr": 124, "qr_solv": 124, "qrdecomposit": [119, 124], "qrgk": 89, "qrgkkthrzqebpr": 89, "qrsolv": [119, 124], "qstate": 175, "qt": 2, "qtconsol": [59, 295], "qtf": 183, "quad": [46, 87, 88, 90, 92, 96, 115, 124], "quadrant": [94, 211, 239], "quadrat": [48, 51, 88, 89, 93, 115, 128, 207, 211, 215, 216, 233, 238, 240], "quadratic_congru": 128, "quadratic_distribut": 240, "quadratic_residu": 128, "quadraticu": 240, "quadratur": [88, 92, 115, 236], "quadrupl": [68, 216], "qualifi": [4, 13], "qualiti": [129, 220], "qualnam": [71, 134], "quantifi": 273, "quantil": 240, "quantit": [69, 192], "quantiti": [13, 14, 16, 18, 21, 28, 32, 33, 35, 36, 80, 88, 93, 96, 100, 105, 136, 147, 152, 169, 192, 194, 198, 215, 232, 240, 268, 273, 281, 298, 309], "quantity_simplifi": 194, "quantiz": [176, 281], "quantum": [13, 47, 145, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 205, 281, 300], "quarter": [151, 158, 162], "quarter_wave_retard": 162, "quartic": [48, 98, 216, 238], "quasi": 190, "quaternion": [36, 199, 203, 264, 266], "quaternionorient": [264, 266, 269], "qubit": [170, 174, 175, 176, 177, 183, 281], "qubit_to_matrix": 184, "qubit_valu": 184, "qubitbra": 184, "quebec": 214, "queri": [14, 15, 41, 42, 43, 62, 65, 66, 67, 69, 88, 100, 216, 232, 240], "query_gt": 240, "question": [3, 4, 5, 7, 11, 12, 21, 32, 39, 41, 79, 87, 90, 98, 105, 113, 115, 118, 128, 192, 195, 207, 210, 215, 230, 239, 258, 261], "quick": [4, 5, 11, 14, 43, 88, 124, 128, 232, 238, 259], "quicker": [79, 128], "quickli": [12, 14, 39, 43, 79, 80, 88, 89, 92, 93, 128, 209, 213, 216, 229, 239, 255], "quickstart": 9, "quiet": 116, "quin": 118, "quintic": [48, 216, 238], "quirk": 42, "quit": [15, 35, 39, 43, 96, 124, 128, 206, 217, 219, 230, 238, 258, 273, 288, 291, 301], "quo": [210, 211, 213, 216], "quo_ground": [211, 216], "quot": [4, 11, 16, 69, 118, 220, 261], "quotat": 5, "quotedstr": 69, "quotient": [87, 88, 91, 94, 128, 207, 208, 210, 213, 216, 230, 232, 236], "quotient_codomain": 207, "quotient_domain": 207, "quotient_hom": 207, "quotient_modul": 207, "quotient_r": [207, 211], "quotientmodul": 207, "quotientmoduleel": 207, "quotientr": [207, 211], "qv": 211, "qwerti": 245, "qwp": 162, "r": [0, 4, 5, 8, 9, 12, 13, 16, 18, 22, 27, 28, 29, 30, 31, 33, 35, 39, 41, 43, 48, 61, 68, 69, 70, 72, 79, 80, 88, 89, 90, 92, 93, 94, 101, 102, 104, 106, 110, 111, 113, 115, 124, 128, 130, 131, 134, 136, 139, 143, 145, 148, 151, 152, 153, 154, 155, 157, 158, 159, 162, 186, 187, 190, 191, 193, 199, 200, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 227, 228, 230, 232, 233, 236, 238, 239, 240, 246, 251, 253, 255, 264, 267, 269, 270, 271, 274, 296, 298, 301, 302, 305, 307, 308, 309, 310], "r0": [48, 88, 135, 216], "r1": [33, 48, 61, 88, 98, 101, 117, 124, 135, 136, 163, 199, 216, 264], "r10": [65, 135], "r100": 87, "r1000": 240, "r1001": 240, "r1002": 240, "r1003": 240, "r1004": 240, "r1005": 240, "r1006": 240, "r1007": 240, "r1008": 240, "r1009": 240, "r101": 87, "r1010": 240, "r1011": 240, "r1012": 240, "r1013": 240, "r1014": 240, "r1015": 240, "r1016": 240, "r1017": 240, "r1018": 240, "r1019": 240, "r102": 87, "r1020": 240, "r1021": 240, "r1022": 240, "r1023": 240, "r1024": 240, "r1025": 240, "r1026": 240, "r1027": 240, "r1028": 240, "r1029": 240, "r103": 87, "r1030": 240, "r1031": 240, "r1032": 240, "r1033": 240, "r1034": 240, "r1035": 240, "r1036": 240, "r1037": 240, "r1038": 240, "r1039": 240, "r104": 87, "r1040": 240, "r1041": 240, "r1042": 240, "r1043": 240, "r1044": 240, "r1045": 240, "r1046": 240, "r1047": 240, "r1048": 240, "r1049": 240, "r105": 87, "r1050": 240, "r1051": 240, "r1052": 252, "r1053": 258, "r1054": 258, "r1055": 258, "r1056": 258, "r1057": 258, "r1058": 258, "r1059": 258, "r106": 87, "r1060": 258, "r1061": 258, "r1062": 258, "r1063": 258, "r1064": 258, "r1065": 258, "r1066": 258, "r1067": 258, "r1068": 258, "r1069": 258, "r107": 87, "r1070": 258, "r1071": 258, "r1072": 258, "r1073": 261, "r1074": 264, "r1075": 264, "r108": 87, "r109": 87, "r11": 65, "r110": 88, "r111": 88, "r112": 88, "r113": 88, "r114": 88, "r115": 88, "r116": 88, "r117": 88, "r118": 88, "r119": 88, "r12": 65, "r120": 88, "r121": 88, "r122": 88, "r123": 88, "r124": 88, "r125": 88, "r126": 88, "r127": 88, "r128": 88, "r129": 88, "r13": [65, 135], "r130": 88, "r131": 88, "r132": 88, "r133": 88, "r134": 88, "r135": 88, "r136": 88, "r137": 88, "r138": 88, "r139": 88, "r14": 65, "r140": 88, "r141": 88, "r142": 88, "r143": 88, "r144": 88, "r145": 88, "r146": 88, "r147": 88, "r148": 88, "r149": 88, "r15": [65, 135], "r150": 88, "r151": 89, "r152": 89, "r153": 89, "r154": 89, "r155": 89, "r156": 89, "r157": 89, "r158": 89, "r159": 89, "r16": 65, "r160": 89, "r161": 89, "r162": 89, "r163": 89, "r164": 89, "r165": 89, "r166": 89, "r167": 89, "r168": 89, "r169": 89, "r17": 65, "r170": 89, "r171": 89, "r174": 89, "r175": 90, "r176": 90, "r177": 90, "r178": 91, "r179": 91, "r18": 65, "r180": 91, "r181": 91, "r182": 91, "r183": 91, "r184": 91, "r185": 91, "r186": 91, "r187": 91, "r188": 91, "r189": 91, "r19": 65, "r190": 91, "r191": 91, "r192": 91, "r193": 91, "r194": 91, "r195": 91, "r196": 91, "r197": 91, "r198": 91, "r199": 91, "r1_x": 33, "r1_y": 33, "r2": [48, 61, 88, 90, 101, 117, 124, 135, 136, 163, 199, 216, 220, 232, 264], "r20": 65, "r200": 91, "r201": 91, "r202": 91, "r203": 91, "r204": 91, "r205": 91, "r206": 91, "r207": 93, "r208": 93, "r209": 93, "r21": 65, "r210": 93, "r211": 93, "r212": 93, "r213": 93, "r214": 93, "r215": 93, "r216": 93, "r217": 93, "r218": 93, "r219": 93, "r22": 65, "r220": 93, "r221": 93, "r222": 93, "r223": 93, "r224": 93, "r225": 93, "r226": 93, "r227": 93, "r228": 93, "r229": 93, "r23": 65, "r230": 93, "r231": 93, "r233": 93, "r234": 93, "r235": 93, "r236": 93, "r237": 93, "r238": 93, "r239": 93, "r24": 65, "r240": 93, "r241": 93, "r242": 93, "r243": 93, "r244": 93, "r245": 93, "r246": 93, "r247": 93, "r248": 93, "r249": 93, "r25": 65, "r250": 93, "r251": 93, "r252": 93, "r253": 93, "r254": 93, "r255": 93, "r256": 93, "r257": 93, "r258": 93, "r259": 93, "r26": 65, "r260": 93, "r261": 93, "r262": 93, "r263": 93, "r264": 93, "r265": 93, "r266": 93, "r267": 93, "r268": 93, "r269": 93, "r27": 65, "r270": 93, "r271": 93, "r272": 93, "r273": 93, "r274": 93, "r275": 93, "r276": 94, "r277": 94, "r278": 94, "r279": 94, "r28": 65, "r280": 94, "r281": 94, "r282": 94, "r283": 94, "r284": 94, "r285": 94, "r286": 94, "r287": 94, "r288": 94, "r289": 94, "r29": 65, "r290": 94, "r291": 94, "r292": 94, "r293": 94, "r294": 94, "r295": 94, "r296": 94, "r297": 94, "r298": 94, "r299": 94, "r2_p": 90, "r2_r": 90, "r3": [48, 61, 117, 135, 136, 232], "r30": 65, "r300": 94, "r301": 94, "r302": 94, "r303": 94, "r304": 94, "r305": 94, "r306": 94, "r307": 94, "r308": 94, "r309": 94, "r31": 67, "r310": 94, "r311": 94, "r312": 94, "r313": 94, "r314": 94, "r315": 94, "r316": 94, "r317": 94, "r318": 94, "r319": 94, "r32": 67, "r320": 94, "r321": 94, "r322": 94, "r323": 94, "r324": 94, "r325": 94, "r326": 94, "r327": 94, "r328": 94, "r329": 94, "r33": 67, "r330": 94, "r331": 94, "r332": 94, "r333": 94, "r334": 94, "r335": 94, "r336": 94, "r337": 94, "r338": 94, "r339": 94, "r34": 67, "r340": 94, "r341": 94, "r342": 96, "r343": 96, "r344": 96, "r345": 96, "r346": 96, "r347": 96, "r348": 96, "r349": 96, "r35": 67, "r350": 96, "r351": 96, "r352": 96, "r353": 96, "r354": 96, "r355": 96, "r356": 96, "r357": 96, "r358": 96, "r359": 96, "r36": 67, "r360": 96, "r361": 96, "r362": 96, "r363": 96, "r364": 96, "r365": 96, "r366": 96, "r367": 96, "r368": 96, "r369": 96, "r37": 67, "r370": 96, "r371": 96, "r372": 96, "r373": 96, "r374": 96, "r375": 96, "r376": 96, "r377": 96, "r378": 96, "r379": 96, "r38": 67, "r380": 96, "r381": 96, "r382": 96, "r383": 96, "r384": 96, "r385": 96, "r386": 96, "r387": 96, "r388": 96, "r389": 96, "r39": 69, "r390": 96, "r391": 96, "r392": 96, "r393": 96, "r394": 96, "r395": 96, "r396": 96, "r397": 96, "r398": 96, "r399": 96, "r4": [48, 117, 135], "r40": 69, "r400": 96, "r401": 96, "r402": 96, "r403": 96, "r404": 96, "r405": 96, "r406": 96, "r407": 96, "r408": 96, "r409": 96, "r41": 71, "r410": 96, "r411": 96, "r412": 96, "r413": 96, "r414": 96, "r415": 96, "r416": 96, "r417": 96, "r418": 96, "r419": 96, "r420": 96, "r421": 96, "r422": 96, "r423": 96, "r424": 96, "r425": 96, "r426": 96, "r427": 96, "r428": 96, "r429": 96, "r43": 71, "r430": 96, "r431": 96, "r432": 96, "r433": 96, "r434": 96, "r435": 96, "r436": 96, "r437": 96, "r438": 96, "r439": 96, "r44": [71, 72], "r440": 96, "r441": 96, "r442": 96, "r443": 96, "r444": 96, "r445": 96, "r446": 96, "r447": 96, "r448": 96, "r449": 96, "r45": 72, "r450": 96, "r451": 96, "r452": 96, "r453": 96, "r454": 96, "r455": 96, "r456": 96, "r457": 96, "r458": 96, "r459": 96, "r46": 72, "r460": 96, "r461": 96, "r462": 96, "r463": 96, "r464": 96, "r465": 96, "r466": 96, "r467": 96, "r468": 96, "r469": 96, "r47": 72, "r470": 96, "r471": 96, "r472": 96, "r473": 96, "r474": 96, "r475": 96, "r476": 96, "r477": 96, "r478": 96, "r479": 96, "r48": 74, "r480": 96, "r481": 96, "r482": 96, "r483": 96, "r484": 96, "r485": 96, "r486": 96, "r487": 96, "r488": 96, "r489": 96, "r49": 74, "r490": 96, "r491": 96, "r492": 96, "r493": 96, "r494": 96, "r495": 96, "r496": 96, "r497": 96, "r498": 96, "r499": 96, "r5": [63, 232], "r50": 74, "r500": 96, "r501": 96, "r502": 96, "r503": 96, "r504": 96, "r505": 96, "r506": 96, "r507": 96, "r508": 96, "r509": 96, "r51": 74, "r510": 96, "r511": 96, "r512": 96, "r513": 96, "r514": 96, "r515": 96, "r516": 96, "r517": 96, "r518": 96, "r519": 96, "r52": 74, "r520": 96, "r521": 96, "r522": 96, "r523": 96, "r524": 96, "r525": 96, "r526": 96, "r527": 96, "r528": 96, "r529": 96, "r53": 74, "r530": 96, "r531": 96, "r532": 96, "r533": 96, "r534": 96, "r535": 96, "r536": 96, "r537": 96, "r538": 96, "r539": 96, "r54": 74, "r540": 96, "r541": 96, "r542": 96, "r543": 96, "r544": 96, "r545": 98, "r546": 98, "r547": 98, "r548": 98, "r549": 98, "r55": 74, "r550": 98, "r551": 98, "r552": 98, "r553": 104, "r554": 104, "r555": 104, "r556": 104, "r557": 104, "r558": 104, "r559": 104, "r560": 104, "r561": 104, "r562": 104, "r563": 105, "r564": 105, "r565": 110, "r566": 110, "r567": 115, "r568": 115, "r569": 115, "r57": 76, "r570": 115, "r571": 115, "r572": 115, "r573": 115, "r574": 115, "r575": 115, "r576": 115, "r577": 115, "r578": 115, "r579": 115, "r58": 76, "r580": 115, "r581": 115, "r582": 115, "r583": 115, "r584": 115, "r585": 115, "r586": 115, "r587": 115, "r588": 115, "r589": 115, "r59": 76, "r590": 115, "r591": 115, "r592": 115, "r593": 115, "r594": 115, "r595": 115, "r596": 116, "r597": 116, "r598": 117, "r599": 117, "r6": 63, "r60": 76, "r600": 118, "r601": 118, "r602": 118, "r603": 118, "r604": 118, "r605": 118, "r606": 118, "r607": 118, "r608": 120, "r609": 124, "r61": 77, "r610": 124, "r611": 124, "r612": 124, "r613": 124, "r614": 124, "r615": 124, "r616": 124, "r617": 124, "r618": 124, "r619": 124, "r62": 79, "r620": 124, "r621": 124, "r622": 124, "r623": 124, "r624": 124, "r625": 124, "r626": 124, "r627": 124, "r628": 124, "r629": 124, "r63": 79, "r630": 124, "r631": 124, "r632": 124, "r633": 124, "r634": 124, "r635": 124, "r636": 124, "r637": 124, "r638": 124, "r639": 124, "r64": 79, "r640": 124, "r641": 124, "r642": 124, "r643": 124, "r644": 124, "r645": 124, "r646": 124, "r647": 125, "r648": 128, "r649": 128, "r65": 79, "r650": 128, "r651": 128, "r652": 128, "r653": 128, "r654": 128, "r655": 128, "r656": 128, "r657": 128, "r658": 128, "r659": 128, "r66": 79, "r660": 128, "r661": 128, "r662": 128, "r663": 128, "r664": 128, "r665": 128, "r666": 128, "r667": 128, "r668": 128, "r669": 128, "r67": 79, "r670": 128, "r671": 128, "r672": 128, "r673": 128, "r674": 128, "r675": 128, "r676": 128, "r677": 128, "r678": 128, "r679": 128, "r68": 79, "r680": 128, "r681": 128, "r682": 128, "r683": 128, "r684": 128, "r685": 128, "r686": 128, "r687": 128, "r688": 128, "r689": 128, "r69": 79, "r690": 128, "r691": 128, "r692": 128, "r693": 128, "r694": 128, "r695": 128, "r696": 128, "r697": 128, "r698": 128, "r699": 128, "r7": 64, "r70": 79, "r700": 128, "r701": 128, "r702": 128, "r703": 128, "r704": 128, "r705": 128, "r706": 128, "r707": 128, "r708": 128, "r709": 128, "r71": 79, "r710": 128, "r711": 128, "r712": 128, "r713": 128, "r714": 128, "r715": 128, "r716": 128, "r717": 128, "r718": 128, "r719": 128, "r720": 131, "r721": 132, "r722": 132, "r723": 132, "r724": 132, "r725": 132, "r726": 132, "r727": 132, "r728": 134, "r729": 135, "r73": 79, "r730": 141, "r731": 141, "r732": 141, "r733": 141, "r734": 143, "r735": 143, "r736": 143, "r737": 146, "r738": 146, "r739": 153, "r740": 159, "r741": 159, "r742": 159, "r743": 161, "r744": 162, "r745": 162, "r746": 162, "r747": 163, "r748": 165, "r749": 167, "r75": 79, "r750": 169, "r751": 169, "r752": 169, "r753": 169, "r754": 171, "r755": 172, "r756": 173, "r757": 173, "r758": 176, "r759": 176, "r76": 79, "r760": 176, "r761": 176, "r762": 176, "r763": 178, "r764": 179, "r765": 179, "r766": 179, "r767": 187, "r768": 187, "r769": 188, "r77": 79, "r770": 188, "r771": 190, "r772": 209, "r773": 209, "r774": 209, "r775": 209, "r776": 209, "r777": 209, "r778": 209, "r779": 209, "r780": 209, "r781": 209, "r782": 209, "r783": 211, "r784": 213, "r785": 213, "r786": 213, "r787": 213, "r788": 213, "r789": 213, "r79": [79, 80], "r790": 213, "r791": 213, "r792": 213, "r793": 213, "r794": 213, "r795": 213, "r796": 213, "r797": 213, "r798": 213, "r799": 213, "r8": 64, "r80": 80, "r800": 213, "r801": 213, "r802": 215, "r803": 215, "r804": 215, "r805": 215, "r806": 215, "r807": 215, "r808": 216, "r809": 216, "r81": 80, "r810": 216, "r811": 216, "r812": 216, "r813": 216, "r814": 216, "r815": 216, "r816": 216, "r817": 216, "r818": 216, "r819": 216, "r82": 80, "r820": 216, "r821": 216, "r822": 216, "r823": 217, "r824": 222, "r825": 222, "r826": 222, "r827": 222, "r828": 222, "r829": 222, "r83": 80, "r830": 223, "r831": 223, "r832": 223, "r833": 225, "r834": 225, "r835": 227, "r836": 227, "r837": 228, "r838": 228, "r839": 228, "r84": 80, "r840": 228, "r841": 228, "r842": 228, "r843": 228, "r844": 228, "r845": 228, "r846": 228, "r847": 228, "r848": 228, "r849": 228, "r85": 80, "r850": 228, "r851": 228, "r852": 229, "r853": 229, "r854": 229, "r855": 232, "r856": 232, "r857": 232, "r858": 233, "r859": 233, "r86": 80, "r860": 233, "r861": 233, "r862": 233, "r863": 233, "r864": 233, "r865": 233, "r866": 233, "r867": 233, "r868": 233, "r869": 233, "r87": 80, "r870": 233, "r871": 233, "r872": 233, "r873": 233, "r874": 233, "r875": 233, "r876": 233, "r877": 233, "r878": 233, "r879": 233, "r88": 80, "r880": 233, "r881": 233, "r882": 233, "r883": 233, "r884": 236, "r885": 236, "r886": 236, "r887": 236, "r888": 236, "r889": 236, "r89": 80, "r890": 238, "r891": 238, "r892": 238, "r893": 238, "r894": 238, "r895": 238, "r896": 240, "r897": 240, "r898": 240, "r899": 240, "r9": 65, "r90": 80, "r900": 240, "r901": 240, "r902": 240, "r903": 240, "r904": 240, "r905": 240, "r906": 240, "r907": 240, "r908": 240, "r909": 240, "r91": 80, "r910": 240, "r911": 240, "r912": 240, "r913": 240, "r914": 240, "r915": 240, "r916": 240, "r917": 240, "r918": 240, "r919": 240, "r92": 81, "r920": 240, "r921": 240, "r922": 240, "r923": 240, "r924": 240, "r925": 240, "r926": 240, "r927": 240, "r928": 240, "r929": 240, "r93": 82, "r930": 240, "r931": 240, "r932": 240, "r933": 240, "r934": 240, "r935": 240, "r936": 240, "r937": 240, "r938": 240, "r939": 240, "r94": 82, "r940": 240, "r941": 240, "r942": 240, "r943": 240, "r944": 240, "r945": 240, "r946": 240, "r947": 240, "r948": 240, "r949": 240, "r95": 86, "r950": 240, "r951": 240, "r952": 240, "r953": 240, "r954": 240, "r955": 240, "r956": 240, "r957": 240, "r958": 240, "r959": 240, "r96": 86, "r960": 240, "r961": 240, "r962": 240, "r963": 240, "r964": 240, "r965": 240, "r966": 240, "r967": 240, "r968": 240, "r969": 240, "r97": 86, "r970": 240, "r971": 240, "r972": 240, "r973": 240, "r974": 240, "r975": 240, "r976": 240, "r977": 240, "r978": 240, "r979": 240, "r98": 87, "r980": 240, "r981": 240, "r982": 240, "r983": 240, "r984": 240, "r985": 240, "r986": 240, "r987": 240, "r988": 240, "r989": 240, "r99": 87, "r990": 240, "r991": 240, "r992": 240, "r993": 240, "r994": 240, "r995": 240, "r996": 240, "r997": 240, "r998": 240, "r999": 240, "r_": [88, 145, 191, 217], "r_0": 135, "r_1": [70, 207, 217], "r_10": 135, "r_13": 135, "r_15": 135, "r_2": 70, "r_20": 135, "r_7": 135, "r_8": 135, "r_a_i": 137, "r_a_x": 137, "r_aug": 124, "r_b": 55, "r_b_x": 137, "r_b_y": 137, "r_f": [55, 216], "r_g": 216, "r_i": [70, 217], "r_j": 230, "r_k": [70, 183], "r_n": 207, "r_nl": [69, 145, 191], "r_node_1_i": 139, "r_node_1_x": 139, "r_node_2_i": 139, "r_pt": 22, "r_val": 18, "r_x": [33, 200], "r_y": [33, 200], "r_z": [33, 200], "ra": 222, "rabin": 128, "racah": 205, "rad": [13, 22, 89, 141, 215, 298], "rad2deg": 298, "rad_ration": 232, "rademach": [128, 240], "rademacher_distribut": 240, "radial": [145, 191, 305], "radian": [22, 61, 94, 97, 98, 99, 101, 102, 103, 124, 135, 141, 163, 164, 199], "radiat": 240, "radic": [12, 16, 48, 88, 89, 124, 207, 215, 216, 232, 238, 239], "radii": 98, "radioeng": 91, "radiu": [96, 98, 102, 104, 155, 158, 159, 163, 206, 239, 240, 274, 298, 302, 308, 310], "radius_of_converg": 96, "radix": 91, "radsimp": [88, 232], "rag": 124, "rai": [4, 98, 100, 101, 102, 104, 105, 159, 163], "rail": [89, 157], "rail_fence_ciph": 89, "rail_fram": 157, "rail_mass": 157, "rail_masscent": 157, "railfenc": 89, "raini": 240, "rais": [3, 11, 12, 13, 14, 16, 33, 36, 37, 41, 42, 43, 62, 64, 67, 69, 74, 77, 80, 88, 89, 90, 92, 94, 97, 98, 101, 103, 104, 105, 113, 115, 120, 124, 125, 127, 128, 130, 141, 143, 158, 164, 176, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 220, 222, 228, 232, 233, 235, 236, 237, 238, 239, 240, 244, 246, 249, 251, 253, 256, 258, 261, 271, 292], "raise_on_deprec": 251, "raise_on_error": 251, "raised_cosine_distribut": 240, "raisedcosin": 240, "rake": 301, "ram": 11, "ramanujan": [92, 93, 128], "ramif": 215, "ramp": [135, 136], "ramp_funct": 141, "ramp_response_numerical_data": 141, "ramp_response_plot": 141, "ran": 12, "randal": 214, "randint": [88, 124, 213], "randmatrix": 124, "random": [2, 4, 13, 71, 72, 77, 79, 80, 86, 89, 98, 101, 102, 122, 124, 128, 174, 186, 206, 211, 213, 215, 216, 220, 250, 251, 254, 258, 288, 292, 296], "random_bitstr": 72, "random_circuit": 174, "random_complex_numb": [13, 88], "random_derang": 258, "random_integer_partit": 77, "random_point": [98, 101, 102], "random_poli": 216, "random_pr": 79, "random_stab": 79, "random_symbol": 240, "randomdomain": 240, "randomindexedsymbol": 240, "randomis": [41, 248, 283], "randomli": [12, 79, 88, 89, 128, 184], "randommatrixsymbol": 240, "randomst": 240, "randomsymbol": 240, "randomvari": 240, "randprim": [74, 128], "randrang": 88, "randtest": 250, "rang": [4, 13, 14, 15, 18, 20, 39, 43, 48, 51, 52, 67, 69, 77, 78, 79, 80, 82, 84, 88, 89, 93, 94, 96, 102, 124, 128, 132, 136, 139, 141, 145, 159, 190, 206, 209, 210, 211, 212, 213, 215, 216, 217, 222, 223, 226, 228, 229, 232, 236, 238, 239, 240, 241, 245, 251, 258, 285, 286, 296, 303], "range1": 206, "range2": 206, "range_i": 206, "range_u": 206, "range_v": 206, "range_x": 206, "rangl": [70, 79, 130, 169, 187, 205], "rank": [65, 69, 70, 72, 77, 79, 80, 82, 83, 84, 103, 117, 124, 125, 199, 201, 207, 209, 211, 213, 215, 241, 245, 246, 292], "rank_binari": 83, "rank_decomposit": 124, "rank_factor": 124, "rank_grai": 83, "rank_lexicograph": 83, "rank_nonlex": 80, "rank_trotterjohnson": 80, "rankcheck": 124, "rankdir": [220, 295], "rao": [18, 131, 132, 134, 298], "raphson": 69, "rapidli": [53, 88, 92, 113, 227], "rare": [4, 12, 14, 43, 88, 236, 240, 249, 288], "rasch": 205, "rasch03": 205, "rat": 128, "rat_clear_denom": 216, "rate": [16, 35, 131, 132, 147, 240, 271, 286, 301], "rather": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 30, 32, 35, 37, 39, 41, 42, 43, 48, 52, 55, 56, 57, 60, 65, 69, 70, 71, 79, 80, 81, 88, 92, 94, 99, 104, 106, 113, 118, 120, 124, 128, 130, 133, 134, 157, 170, 184, 188, 190, 194, 207, 209, 210, 213, 216, 218, 223, 230, 233, 235, 236, 239, 240, 242, 255, 258, 259, 273, 288, 290, 291, 308], "rathnayak": 0, "ratint": 115, "ratint_logpart": 115, "ratint_ratpart": 115, "ratio": [46, 65, 78, 79, 87, 88, 92, 93, 96, 98, 101, 102, 103, 104, 119, 128, 132, 143, 163, 195, 209, 220, 229, 232, 238], "ration": [12, 15, 41, 43, 48, 62, 64, 65, 67, 69, 87, 88, 92, 93, 94, 96, 98, 101, 103, 105, 109, 113, 115, 116, 120, 124, 128, 130, 143, 159, 192, 205, 208, 209, 213, 214, 215, 217, 220, 225, 228, 229, 230, 232, 233, 235, 238, 239, 240, 258, 264, 287, 288, 291, 295], "rational": 12, "rational_algorithm": 222, "rational_convers": 232, "rational_funct": 88, "rational_independ": 222, "rational_laurent_seri": 236, "rational_numb": [41, 65], "rational_parametr": 264, "rationalfield": [210, 211], "rationalhandl": 65, "rationalpred": 65, "rationalriccati": 236, "rationaltool": [115, 216], "ratsimp": [11, 88, 232], "ratsimpmodprim": 232, "raw": [4, 5, 69, 88, 89, 94, 129, 130, 184, 189, 209, 210, 211, 216, 228, 232, 295], "rawlin": 261, "ray2d": [101, 104], "ray3d": [101, 102, 163], "ray_transfer_matrix_analysi": 159, "rayleigh": [159, 240], "rayleigh2waist": 159, "rayleigh_distribut": 240, "rayleighdistribut": 240, "raytransfermatrix": 159, "rb": [28, 55, 154], "rb_frame": 28, "rb_masscent": 28, "rcall": [88, 90], "rceil": [113, 130], "rcirc": 99, "rcode": 220, "rcollect": 232, "rd": [22, 124, 220], "re": [3, 11, 13, 16, 33, 43, 66, 67, 69, 79, 80, 88, 89, 92, 94, 96, 113, 115, 124, 199, 201, 207, 213, 220, 221, 222, 228, 229, 230, 236, 238, 251, 267, 269, 286, 288, 291], "reach": [41, 128, 143, 215, 216, 236], "reachabl": [230, 240], "reaction": [135, 136, 137, 139, 147], "reaction_bodi": 148, "reaction_forc": 135, "reaction_fram": 147, "reaction_load": [135, 136, 137, 139], "reaction_mo": 135, "reaction_point": 148, "read": [3, 4, 5, 9, 11, 12, 13, 14, 30, 35, 36, 43, 57, 80, 94, 113, 128, 136, 206, 209, 210, 211, 217, 220, 233, 246, 247, 255, 259, 289, 295, 296], "readabl": [4, 12, 14, 21, 60, 68, 116, 216, 219, 220, 227, 229], "reader": [4, 5, 11, 12, 18, 28, 43, 68, 70, 207, 220, 255, 289, 294], "readi": [3, 11, 41, 157, 210, 220, 236, 303], "readili": [101, 124], "readlin": 251, "readm": 2, "readthedoc": [5, 116, 259], "reagent": 215, "real": [12, 13, 14, 15, 16, 18, 22, 30, 38, 39, 41, 42, 43, 48, 51, 52, 61, 63, 65, 66, 67, 69, 80, 88, 89, 90, 92, 93, 94, 95, 96, 100, 104, 105, 110, 113, 115, 118, 120, 124, 130, 134, 139, 143, 145, 154, 159, 162, 163, 170, 188, 201, 205, 208, 211, 215, 216, 217, 220, 221, 223, 227, 228, 230, 232, 235, 236, 238, 239, 240, 245, 249, 253, 290, 296, 297, 298], "real_el": 65, "real_field": 61, "real_gaunt": 205, "real_num": 105, "real_numb": [41, 65], "real_root": [94, 216, 238], "realel": [210, 211], "realelementshandl": 65, "realelementspred": 65, "realfield": [210, 211], "realgaunt": 205, "realhandl": 65, "realist": 128, "realiz": [16, 71, 73, 79, 90, 93, 118, 128, 207, 208, 213, 240, 305], "realli": [3, 11, 12, 13, 14, 15, 39, 41, 42, 43, 88, 100, 128, 192, 209, 210, 219, 221, 227, 229, 230, 232, 236, 252, 261, 288, 290, 301], "realnormedalgebra": 61, "realnumb": 88, "realpred": 65, "reals_onli": 124, "rear": 301, "rearrang": [18, 25, 26, 52, 144, 152, 174, 236], "reason": [3, 5, 11, 12, 13, 14, 15, 18, 22, 23, 27, 36, 37, 41, 42, 43, 54, 55, 61, 69, 80, 86, 88, 92, 96, 113, 116, 121, 124, 150, 152, 153, 161, 195, 204, 209, 210, 213, 214, 217, 220, 228, 230, 232, 236, 239, 249, 255, 256, 258, 259, 285, 286, 290, 291, 292, 298, 301, 308], "reassembl": 216, "reassign": 22, "rebas": [9, 11], "rebuild": [14, 15, 43, 88, 216, 291], "rebuilt": [15, 291], "recal": [43, 88, 124, 213, 215, 230, 288, 290, 291, 297], "recalcul": [152, 216], "recast": [113, 232, 238, 239], "reccur": 240, "receiv": [16, 57, 71, 88, 89, 128, 148, 185, 215, 245], "recent": [3, 12, 13, 14, 16, 38, 41, 42, 43, 48, 50, 52, 53, 54, 55, 56, 57, 62, 63, 64, 69, 70, 80, 88, 89, 92, 96, 98, 115, 118, 119, 120, 121, 124, 126, 127, 130, 143, 205, 207, 209, 210, 211, 213, 216, 219, 227, 228, 236, 238, 239, 249, 252, 254, 256, 258, 259, 261, 288, 292], "recherch": 217, "recip": [220, 258], "reciph": 89, "reciproc": [124, 240, 296], "reciprocal_distribut": 240, "reciprocaltrigonometricfunct": 43, "recogn": [13, 14, 16, 48, 53, 55, 88, 89, 93, 103, 128, 135, 144, 208, 211, 219, 228, 229, 238, 245, 288], "recognis": [113, 210, 230, 232], "recommend": [4, 8, 9, 11, 13, 14, 15, 16, 17, 18, 21, 25, 30, 35, 41, 43, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 68, 69, 88, 89, 92, 124, 131, 132, 134, 184, 199, 208, 209, 210, 211, 217, 233, 236, 239, 245, 249, 256, 268, 269, 294, 297, 298], "recomput": [84, 216], "reconnect": 69, "reconstruct": [14, 46, 89, 124, 209, 213, 233, 291], "reconstuct": 213, "record": [11, 71, 82, 88, 215, 220, 251], "recov": [89, 115, 130, 195, 213, 215, 216, 233, 236], "recreat": [14, 88, 151], "recrus": 213, "rectangl": [98, 99, 101, 103, 104, 206, 216], "rectangular": [124, 206, 228, 239, 268], "rectum": 98, "recur": 88, "recurr": [87, 93, 110, 124, 215, 226, 232, 236, 240, 260], "recurrence_memo": 260, "recurs": [15, 16, 38, 41, 43, 67, 88, 93, 113, 115, 118, 124, 128, 132, 206, 213, 216, 217, 220, 221, 225, 227, 232, 238, 239, 244, 249, 251, 255, 256, 258, 287, 296, 301], "recursionerror": 14, "recursiveseq": 226, "red": [12, 206], "red_groebn": 213, "redefin": [12, 14, 25, 27, 43, 80, 88, 157, 208, 259], "redistribut": [0, 216], "reduc": [5, 16, 27, 42, 46, 49, 56, 62, 64, 66, 70, 84, 88, 89, 91, 93, 94, 96, 103, 104, 113, 115, 124, 128, 131, 143, 144, 172, 190, 207, 209, 210, 211, 213, 214, 215, 216, 217, 221, 226, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 242, 258, 259, 292], "reduce_abs_inequ": 235, "reduce_alg_num": 215, "reduce_anp": 215, "reduce_el": [207, 215], "reduce_inequ": [37, 50, 235, 238], "reduce_rational_inequ": 235, "reduce_toti": 13, "reduced_expr": [221, 232], "reduced_mod_p": 215, "reduced_row_echelon_form": 209, "reduced_toti": [89, 93, 128], "reduct": [70, 124, 153, 209, 213, 215, 233], "reduction_formula": 229, "redund": [3, 12, 18, 41, 79, 86, 118, 124, 131, 132, 134, 209, 236, 253, 298], "reev": 80, "reevalu": 288, "reexpress": [199, 269], "ref": [3, 30, 79, 94, 124, 141, 225, 240, 254, 292], "ref_fram": 157, "refactor": [13, 236, 244, 255], "refer": [2, 3, 5, 11, 12, 13, 14, 15, 16, 19, 20, 22, 23, 25, 28, 30, 31, 32, 33, 35, 39, 42, 43, 44, 48, 50, 51, 52, 53, 54, 56, 57, 59, 63, 64, 65, 67, 69, 72, 74, 76, 77, 79, 80, 81, 82, 86, 89, 91, 93, 94, 96, 98, 103, 104, 105, 110, 116, 117, 118, 123, 125, 129, 131, 132, 134, 135, 141, 143, 144, 146, 147, 148, 151, 152, 153, 154, 155, 157, 159, 161, 163, 167, 169, 171, 172, 173, 176, 178, 179, 187, 188, 190, 199, 200, 201, 203, 209, 210, 212, 220, 222, 223, 225, 228, 232, 235, 236, 237, 238, 240, 246, 255, 258, 259, 261, 264, 268, 269, 273, 281, 282, 288, 292, 293, 296, 297, 299, 301, 304], "referenc": [5, 11, 72, 77, 128, 157, 187, 215, 301], "reference_fram": [149, 154, 199], "reference_quant": 197, "referencefram": [4, 13, 18, 22, 25, 26, 27, 28, 30, 31, 33, 34, 35, 134, 147, 148, 149, 151, 152, 154, 155, 157, 158, 199, 200, 201, 203, 204, 298, 301, 302, 303, 305, 306, 308, 309, 310], "refin": [62, 64, 88, 124, 207, 211, 215, 216, 232, 253, 276], "refine_ab": 66, "refine_arg": 66, "refine_atan2": 66, "refine_im": 66, "refine_matrixel": 66, "refine_pow": 66, "refine_r": 66, "refine_root": [211, 215, 216], "refine_sign": 66, "refinementfail": 213, "reflect": [50, 57, 72, 76, 80, 88, 98, 99, 104, 117, 139, 159, 162, 163, 199], "reflected_port": 162, "reflected_pow": 162, "reflective_filt": 162, "reflex": 101, "reform": 101, "reformat": 186, "refract": [159, 161, 163, 164], "refraction_angl": 163, "refractive_index": 161, "refus": [41, 296], "reg_point": 264, "regard": [31, 43, 70, 89, 96, 116, 190, 207, 208, 222, 238, 239], "regardless": [3, 4, 43, 80, 88, 115, 128, 209, 213, 228, 232, 258, 268, 273, 296], "regex": 13, "regg": 205, "regge58": 205, "regge59": 205, "region": [67, 96, 105, 115, 135, 206, 228, 236, 239, 240, 264, 267, 274], "regist": [13, 62, 63, 64, 89, 186], "register_handl": [13, 62], "register_mani": [13, 63, 64], "registr": 13, "registri": 88, "regress": 11, "regul": 215, "regular": [3, 11, 12, 13, 14, 16, 22, 41, 42, 70, 76, 88, 89, 92, 96, 104, 110, 111, 115, 128, 184, 210, 217, 236, 246, 251, 295, 296], "regular_point": 264, "regularpolygon": [4, 99, 100, 104, 206], "reidel": 222, "reidemeister_present": 70, "reimport": 16, "reindex": 216, "reintroduc": 84, "reinvent": 13, "reject": [41, 42, 128, 233, 261], "rel": [4, 5, 18, 27, 28, 35, 36, 51, 68, 69, 78, 79, 80, 81, 85, 86, 87, 88, 89, 92, 93, 99, 113, 124, 128, 130, 147, 148, 151, 152, 154, 155, 158, 162, 189, 199, 203, 207, 209, 210, 213, 215, 228, 230, 235, 238, 240, 251, 258, 268, 269, 273, 290, 306], "rel_op": [50, 88], "rela": 207, "relat": [2, 3, 4, 5, 11, 12, 14, 15, 17, 18, 23, 24, 30, 34, 35, 42, 62, 64, 65, 67, 70, 72, 78, 79, 86, 90, 93, 94, 104, 110, 113, 115, 124, 128, 130, 131, 132, 133, 134, 137, 139, 146, 150, 152, 155, 159, 164, 172, 174, 194, 199, 203, 205, 206, 207, 209, 213, 215, 216, 217, 219, 220, 224, 226, 227, 230, 232, 233, 235, 236, 238, 239, 240, 258, 296, 305, 308], "relation_dict": 90, "relation_with_other_funct": 96, "relations_sort": 50, "relationship": [16, 18, 24, 32, 33, 36, 37, 41, 69, 88, 93, 95, 115, 128, 134, 157, 174, 199, 210, 238], "relative_ord": [78, 79], "relativist": 145, "relator_bas": 70, "relax": [124, 130], "relb": 207, "releas": [5, 8, 11, 13, 18, 27, 88, 115, 124, 130, 206, 245, 256, 291], "relev": [3, 4, 5, 11, 12, 13, 14, 36, 41, 69, 86, 101, 116, 117, 148, 152, 154, 157, 195, 204, 210, 230, 236, 237, 246, 251, 272, 301], "reli": [2, 12, 13, 69, 124, 129, 140, 213, 219, 220, 227, 232, 239, 254, 259, 292], "reliabl": [67, 88, 236, 256, 286], "reload": 8, "reloc": 128, "rels_h": 79, "rels_k": 79, "reltol": 69, "rem": [210, 211, 213, 216], "rem_z": 216, "remain": [3, 12, 13, 15, 22, 33, 35, 36, 43, 63, 64, 69, 79, 80, 82, 84, 88, 89, 94, 113, 124, 128, 130, 144, 189, 215, 216, 217, 226, 229, 230, 236, 237, 238, 240, 242, 246, 255, 258, 259, 268, 273, 285, 288, 290, 291, 292, 298], "remaind": [16, 87, 88, 89, 128, 208, 210, 211, 214, 216, 236], "remainder_modulus_pair": 128, "remainin": 213, "remark": [213, 219, 230, 236], "remedi": 113, "rememb": [3, 4, 11, 12, 14, 16, 18, 21, 30, 35, 36, 43, 55, 118, 124, 144, 220, 232, 238, 241, 259, 291, 296], "remot": [9, 88], "remov": [3, 11, 12, 13, 14, 27, 41, 50, 61, 62, 63, 79, 82, 86, 88, 92, 94, 96, 103, 104, 113, 118, 124, 128, 131, 135, 137, 139, 148, 151, 152, 174, 190, 211, 213, 216, 218, 219, 220, 232, 233, 236, 238, 239, 241, 242, 252, 253, 254, 256, 258, 259, 285, 296, 308, 310], "remove_handl": [13, 62], "remove_load": [135, 137, 139, 148], "remove_memb": 139, "remove_nod": 139, "remove_redundant_sol": 236, "remove_support": 139, "removeo": [30, 88, 220, 286], "ren": 69, "renam": [3, 69, 115], "render": [2, 4, 5, 8, 11, 12, 69, 88, 116, 204, 206, 220, 259, 295], "render_as_modul": 69, "render_as_source_fil": 69, "renewcommand": 220, "renumb": 236, "reorder": [11, 80, 87, 94, 190, 216, 236, 240, 258], "reorder_limit": 87, "rep": [41, 79, 84, 88, 174, 207, 209, 210, 211, 215, 216, 229, 232, 261], "rep1": [214, 229], "rep_expect": 185, "rep_innerproduct": 185, "repeat": [8, 9, 15, 16, 79, 82, 87, 88, 94, 96, 115, 117, 124, 128, 130, 174, 176, 190, 206, 207, 208, 213, 215, 216, 220, 226, 236, 240, 244, 245, 252, 254, 258, 296], "repeated_decim": 130, "repeatedli": [53, 128, 144, 252], "repetit": [246, 258], "rephras": 286, "repid": 214, "repl": [15, 246], "repl_dict": 88, "replac": [3, 4, 9, 12, 13, 14, 15, 16, 18, 21, 30, 41, 67, 69, 79, 87, 88, 89, 92, 93, 94, 96, 98, 102, 115, 118, 124, 128, 129, 130, 148, 149, 151, 179, 185, 199, 206, 207, 213, 216, 217, 221, 227, 229, 230, 232, 236, 238, 239, 246, 247, 258, 259, 261, 285, 294], "replace_in_add": 69, "replace_non": 185, "replace_with_arrai": [13, 246, 247], "replacement_dict": 246, "replaceoptim": 69, "replic": 301, "repmatrix": 13, "repo": [9, 11, 12, 22], "report": [12, 60, 67, 79, 88, 101, 124, 128, 217, 228, 239, 251, 292, 297], "report_": 251, "report_cdiff": 251, "report_ndiff": 251, "report_only_first_failur": 251, "report_udiff": 251, "reportedli": 89, "repositori": [2, 5, 9, 59], "repr": [13, 14, 69, 115, 184, 210, 215, 220, 251, 295], "repres": [2, 12, 13, 14, 15, 16, 18, 22, 23, 25, 26, 27, 28, 30, 32, 33, 35, 36, 38, 41, 42, 43, 46, 51, 53, 55, 61, 63, 65, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 83, 84, 87, 88, 89, 90, 93, 94, 96, 98, 99, 101, 103, 104, 105, 110, 111, 115, 117, 118, 120, 123, 124, 128, 130, 131, 132, 134, 135, 136, 140, 141, 143, 147, 148, 150, 151, 152, 154, 155, 157, 158, 159, 161, 162, 164, 176, 177, 179, 183, 184, 187, 188, 190, 192, 194, 195, 196, 197, 198, 199, 203, 204, 205, 206, 207, 208, 209, 211, 213, 216, 218, 220, 222, 223, 226, 227, 228, 230, 232, 233, 236, 238, 239, 240, 241, 242, 244, 245, 246, 253, 255, 258, 259, 264, 267, 271, 273, 281, 286, 288, 290, 291, 296, 297, 298, 301, 302, 303, 305, 306, 309], "represantit": 207, "represent": [13, 14, 15, 21, 23, 27, 32, 33, 35, 43, 48, 52, 61, 68, 69, 70, 71, 79, 82, 88, 89, 94, 96, 100, 108, 110, 112, 113, 115, 117, 118, 119, 120, 124, 127, 128, 140, 141, 146, 148, 150, 157, 159, 174, 179, 184, 185, 187, 188, 190, 192, 204, 206, 207, 209, 211, 213, 215, 216, 217, 218, 219, 220, 222, 230, 232, 233, 236, 239, 240, 245, 246, 259, 261, 264, 267, 274, 282, 286, 288, 291], "reprifi": 220, "reproduc": [2, 12, 14, 48, 216, 251, 296], "reproduct": 12, "reprprint": 220, "request": [2, 3, 4, 5, 8, 9, 12, 13, 22, 41, 48, 59, 67, 88, 92, 104, 113, 128, 190, 206, 213, 216, 244, 252], "requir": [0, 2, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 28, 32, 43, 45, 53, 57, 59, 69, 79, 88, 89, 91, 92, 96, 98, 99, 101, 102, 105, 107, 118, 124, 127, 128, 129, 130, 131, 132, 134, 135, 137, 141, 147, 148, 151, 152, 154, 155, 157, 164, 187, 199, 201, 205, 206, 207, 209, 210, 211, 213, 215, 217, 220, 223, 229, 230, 233, 236, 238, 239, 240, 244, 251, 252, 253, 254, 256, 258, 259, 267, 268, 269, 292, 294, 298, 301, 305], "requisit": 28, "rersiv": 211, "rerun": [8, 11, 12, 216, 251], "res_": 230, "research": [11, 39, 80, 143, 209, 217, 232], "researchg": [214, 240], "reseed": 258, "resembl": [15, 90, 96, 115, 245], "reserv": [15, 22, 41, 246, 253, 292], "reset": [11, 79, 81, 206, 213, 216, 251, 254, 256], "reshap": [22, 30, 69, 124, 241, 247, 258], "resid": 5, "residu": [12, 84, 89, 93, 128, 211, 213, 230], "residue_ntheori": [13, 93, 128, 213, 233], "residue_theorem": 227, "residuos": 89, "resist": [98, 104, 135, 136, 137, 229, 298], "resiz": [79, 80, 120, 124], "resolut": [63, 64, 233], "resolv": [41, 42, 48, 50, 51, 52, 53, 54, 55, 56, 88, 115, 229, 232, 238], "resourc": [4, 5, 8, 13, 43, 124, 214, 236, 252], "resp": [208, 211, 236], "respect": [4, 9, 12, 13, 15, 16, 18, 24, 26, 28, 30, 32, 33, 36, 43, 46, 55, 62, 64, 65, 67, 68, 69, 70, 78, 79, 80, 83, 84, 86, 87, 88, 90, 93, 94, 96, 98, 100, 104, 105, 110, 111, 113, 115, 118, 120, 124, 128, 130, 131, 132, 134, 135, 136, 139, 143, 148, 149, 151, 154, 157, 158, 164, 179, 192, 193, 199, 203, 205, 206, 207, 209, 210, 211, 213, 215, 216, 217, 220, 222, 223, 226, 228, 232, 233, 236, 237, 238, 239, 240, 241, 245, 246, 251, 253, 264, 266, 267, 268, 269, 270, 271, 272, 273, 286, 296, 298, 305], "respond": [11, 88], "respons": [22, 46, 87, 88, 143, 206, 253], "rest": [3, 13, 14, 18, 22, 23, 113, 116, 118, 121, 136, 145, 150, 195, 207, 210, 240, 258, 288, 289, 296, 298, 305], "restor": [16, 210, 232], "restrict": [12, 15, 41, 43, 50, 69, 77, 88, 89, 96, 124, 135, 136, 190, 194, 207, 210, 215, 217, 235], "restrict_codomain": 207, "restrict_domain": 207, "restructur": 5, "restructuredtext": [4, 5], "result": [2, 4, 8, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 27, 30, 32, 36, 37, 38, 39, 41, 42, 43, 57, 61, 62, 63, 64, 65, 67, 68, 69, 78, 79, 80, 84, 87, 88, 89, 90, 92, 94, 96, 100, 105, 106, 110, 112, 113, 115, 117, 118, 120, 124, 127, 128, 129, 130, 131, 135, 143, 144, 147, 148, 149, 150, 152, 153, 158, 173, 175, 182, 184, 185, 187, 189, 190, 192, 193, 194, 195, 199, 206, 207, 209, 210, 211, 213, 214, 215, 216, 217, 218, 220, 222, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 244, 245, 247, 251, 252, 253, 255, 256, 258, 259, 261, 264, 267, 269, 288, 290, 291, 292, 296, 298, 305], "result_5397460570204848505": [69, 253], "result_dom": 210, "result_sympi": 210, "result_var": [69, 253], "result_vari": 253, "result\u2085\u2081\u2084\u2082\u2083\u2084\u2081\u2086\u2088\u2081\u2083\u2089\u2087\u2087\u2081\u2089\u2084\u2082\u2088": 69, "ret": 124, "retain": [80, 88, 94, 96, 115, 128, 130, 216, 221, 229, 232], "retard": 162, "rethink": 170, "retract": 216, "retri": [13, 115, 128], "retriev": [13, 38, 71, 86, 124, 157, 216, 232, 246], "retriv": 124, "return": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 22, 25, 27, 28, 30, 32, 33, 36, 37, 39, 41, 42, 43, 48, 51, 52, 54, 56, 57, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 113, 115, 117, 118, 119, 120, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 137, 139, 141, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 166, 167, 171, 174, 175, 176, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 232, 233, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 264, 267, 269, 271, 285, 286, 291, 292, 295, 296, 297, 298, 301, 305, 309], "return_expr": 130, "return_mpmath": 216, "return_typ": 69, "returnvalu": 253, "reurn": 94, "reus": [12, 16, 43, 69, 190, 290], "rev": 88, "rev1": 306, "rev2": 306, "reveal": [48, 51, 53, 69, 128, 209, 239, 291, 304], "revers": [5, 46, 72, 77, 80, 87, 88, 89, 94, 115, 116, 118, 124, 128, 143, 189, 199, 204, 207, 209, 213, 216, 217, 220, 221, 228, 232, 236, 258, 296], "reverse_ord": 87, "reversedgradedlexord": 216, "reversedsign": 88, "revert": [13, 211, 216], "review": [4, 5, 11, 12, 29], "revis": [11, 238], "revisit": [12, 35, 309], "revolut": 151, "revolv": 139, "rewrit": [12, 87, 88, 90, 93, 94, 96, 113, 115, 118, 135, 143, 187, 211, 216, 227, 228, 229, 232, 236, 237, 238, 239, 240, 276, 290, 292], "rewrite_complex": 115, "rewriterul": 115, "rewritten": [22, 43, 88, 93, 94, 96, 115, 187, 194, 227, 232, 236, 238, 296], "rf": [55, 87, 93, 216], "rfloor": [88, 94, 130, 211, 239, 240], "rfunction_format": 220, "rfunction_str": 220, "rg": 77, "rgs_enum": 77, "rgs_gener": 77, "rgs_rank": 77, "rgs_unrank": 77, "rh": [13, 18, 22, 37, 50, 53, 55, 69, 78, 80, 88, 119, 124, 131, 134, 148, 152, 157, 209, 218, 220, 222, 236, 238, 239, 270, 298, 308, 309, 310], "rho": [16, 90, 113, 124, 128, 184, 220, 240, 246, 274, 303], "rhs_x": 22, "ri": [88, 220], "riccati_equ": 236, "riccati_inverse_norm": 236, "riccati_norm": 236, "riccati_reduc": 236, "riccati_special_minus2": 236, "riccatispeci": 236, "ricci": 90, "rice": 240, "rich": [30, 232], "richard": [0, 128], "richardon": 210, "richardson": [92, 227, 239], "richer": 205, "riemann": [15, 90, 93, 94, 113, 207, 232, 246], "riemann_cycl": 246, "riemann_cyclic_replac": 246, "riemann_sum": 115, "riemann_summation_method": 115, "riemann_xi": 220, "riemannxi": 220, "rieselprim": 128, "right": [3, 4, 5, 8, 11, 12, 13, 16, 18, 22, 27, 30, 31, 32, 33, 36, 39, 43, 46, 49, 50, 53, 55, 61, 67, 69, 70, 79, 80, 84, 88, 89, 91, 93, 94, 96, 104, 105, 113, 115, 118, 124, 127, 128, 130, 131, 132, 135, 136, 137, 139, 143, 152, 157, 158, 162, 169, 174, 176, 178, 179, 184, 187, 190, 199, 205, 206, 207, 209, 215, 216, 217, 218, 220, 222, 223, 227, 228, 230, 236, 237, 239, 240, 251, 253, 255, 258, 271, 286, 290, 292, 296, 298], "right_hand_sid": 157, "right_open": 228, "right_support": 137, "rightarrow": [68, 80, 84, 89, 93, 94, 96, 110, 111, 113, 115, 118, 124, 128, 206, 215, 227, 239, 242, 258, 286], "righthand": 134, "rightmost": [43, 190], "rigibodi": 30, "rigid": [13, 22, 23, 30, 35, 134, 136, 139, 148, 150, 152, 154, 199, 298, 301, 302, 306], "rigid_bodi": 13, "rigid_tendon": 134, "rigid_tendon_muscl": 134, "rigidbodi": [13, 24, 28, 30, 147, 148, 151, 152, 154, 157, 298, 301, 302, 303, 306, 308, 309, 310], "rigidli": 32, "rigor": [3, 36, 96, 253], "rim": 228, "ring": [15, 35, 48, 91, 111, 124, 125, 208, 209, 213, 215, 216, 217, 218, 219, 220, 258], "ring_seri": 217, "ringel": 209, "rioboo": 115, "risc": [110, 236, 264], "risc_1355": 264, "risc_2244": 110, "risc_5387": 236, "risch": [13, 115, 286], "risch_integr": 115, "rise": [87, 93, 96, 205, 232, 236, 240, 268], "riseup": 11, "risingfactori": [87, 93, 96, 220, 222], "risk": 57, "riski": 220, "rivista": 195, "rk": 183, "rk4": 110, "rkgate": 183, "rl1": 229, "rl2": 229, "rm": [8, 69], "rm4": 89, "rmul": [80, 209], "rmul_with_af": 80, "rmultipli": 124, "rn": [88, 90], "rng": 88, "roach": [113, 230], "roach1996": 230, "roach1997": 230, "robert": [0, 128, 209, 240], "robertson": 233, "robot": [23, 150], "robust": [12, 55, 85, 88, 92, 212, 232, 236], "robustli": 48, "roch": 236, "rocklin": 0, "rod": 35, "roken": 261, "role": [41, 94, 218], "roll": [35, 240, 300, 301, 304], "roller": [135, 136, 139], "room": [7, 207], "root": [12, 16, 30, 41, 43, 49, 52, 57, 61, 67, 69, 87, 88, 89, 94, 96, 110, 111, 112, 113, 115, 117, 119, 124, 128, 130, 195, 205, 207, 208, 211, 213, 215, 217, 219, 220, 230, 232, 236, 238, 239, 240, 251, 255, 258, 290, 292, 295, 297], "root1": 117, "root2": 117, "root_index": 211, "root_not": 220, "root_of_un": 94, "root_scalar": 54, "root_spac": 117, "root_system": 117, "rootof": [48, 94, 216], "rootoftool": [94, 124, 216], "rootsum": [115, 216, 222], "rootsystem": 117, "rop": [35, 88], "ropen": [67, 94, 228, 240], "rose": 79, "rosen": 128, "rot": [4, 104, 187], "rot13": 89, "rot90": 124, "rot_axis1": 124, "rot_axis2": 124, "rot_axis3": 124, "rot_ccw_axis1": 124, "rot_ccw_axis2": 124, "rot_ccw_axis3": 124, "rot_given": 124, "rot_ord": [151, 199, 203, 266], "rot_typ": [33, 151, 199, 203], "rotat": [13, 24, 28, 31, 32, 33, 35, 36, 61, 76, 79, 81, 88, 97, 98, 99, 101, 103, 104, 135, 136, 151, 155, 157, 158, 174, 187, 199, 203, 205, 206, 258, 264, 266, 269, 271, 273, 298, 301, 306, 308, 310], "rotate_left": 258, "rotate_point": 61, "rotate_right": 258, "rotated_fram": 151, "rotating_reference_fram": 201, "rotation_axi": 151, "rotation_coordin": 151, "rotation_jump": 135, "rotation_matrix": [264, 266, 269], "rotation_ord": [199, 264, 266], "rotation_spe": 151, "rou": 0, "rough": [23, 195], "roughli": [41, 88, 89, 129, 236, 259], "round": [15, 43, 54, 67, 69, 88, 92, 93, 94, 124, 163, 209, 211, 215, 216, 227, 229, 240], "round_trip": 89, "round_two": 215, "roundfunct": 94, "roundoff": 285, "roundrobin": 258, "routin": [14, 55, 69, 77, 87, 88, 89, 90, 113, 118, 124, 128, 152, 162, 190, 209, 213, 216, 219, 220, 221, 232, 233, 236, 237, 238, 239, 252, 258, 271], "rou\u010dka": 0, "row": [22, 30, 31, 32, 36, 53, 65, 68, 69, 70, 77, 80, 88, 93, 119, 120, 124, 125, 127, 128, 134, 143, 157, 185, 199, 209, 215, 220, 230, 239, 240, 245, 259, 264, 266, 301], "row1": 124, "row2": 124, "row_del": [124, 292], "row_echelon_form": 209, "row_insert": [124, 292], "row_join": [124, 301], "row_matrix": 30, "row_swap": 124, "rowend": 124, "rowmatrix": 30, "rowsep": 124, "rowslic": 209, "rowslist": [124, 209], "rowspac": [124, 209], "rowstart": 124, "royal": 29, "rp": [0, 104, 162], "rpent": 99, "rpm": 8, "rq0": 48, "rq1": 48, "rq2": 48, "rq3": 48, "rr": [68, 88, 106, 209, 210, 216, 217], "rr100": 210, "rref": [124, 209], "rref_den": 209, "rref_matrix": [124, 209], "rref_pivot": [124, 209], "rref_rh": 124, "rrw": 91, "rs_": 217, "rs_asin": 217, "rs_atan": 217, "rs_atanh": 217, "rs_co": 217, "rs_compose_add": 217, "rs_cos_sin": 217, "rs_cosh": 217, "rs_cot": 217, "rs_diff": 217, "rs_exp": 217, "rs_fun": 217, "rs_hadamard_exp": 217, "rs_integr": 217, "rs_is_puiseux": 217, "rs_lambertw": 217, "rs_log": 217, "rs_mul": 217, "rs_newton": 217, "rs_nth_root": 217, "rs_pow": 217, "rs_puiseux": 217, "rs_puiseux2": 217, "rs_series_from_list": 217, "rs_series_invers": 217, "rs_series_revers": 217, "rs_sin": 217, "rs_sinh": 217, "rs_squar": 217, "rs_sub": 217, "rs_swap": 240, "rs_tan": 217, "rs_tanh": 217, "rs_trunc": 217, "rsa": 89, "rsa_": 89, "rsa_private_kei": 89, "rsa_public_kei": 89, "rset": 228, "rsname": 253, "rsolv": 238, "rsolve_hyp": [124, 238], "rsolve_hypergeometr": 222, "rsolve_poli": 238, "rsolve_ratio": 238, "rst": [3, 4, 5, 11, 15, 70, 236, 251], "rsvg": 8, "rtime": 71, "rtol": 69, "ru": 236, "rubik": 79, "rubric": [87, 88], "rudimentari": [2, 43, 213], "ruffini": [48, 57, 124], "ruina": 29, "rule": [3, 5, 11, 12, 13, 14, 22, 33, 36, 39, 41, 43, 69, 79, 80, 87, 88, 96, 111, 113, 115, 118, 124, 135, 152, 158, 171, 174, 195, 199, 205, 209, 211, 217, 219, 220, 221, 226, 230, 232, 236, 246, 258, 259, 271, 288, 291], "run": [3, 4, 5, 8, 14, 15, 16, 30, 39, 41, 43, 45, 70, 79, 80, 82, 88, 89, 113, 124, 129, 130, 152, 157, 190, 204, 206, 207, 220, 230, 232, 236, 237, 238, 248, 249, 252, 254, 255, 258, 259, 283, 288, 295, 301, 303], "run_all_test": 251, "run_in_subprocess_with_hash_random": 251, "rung": [15, 67, 110], "runner": [2, 12, 251], "runtest": [12, 13, 251], "runtim": [2, 15, 69, 88, 153, 259], "runtime_error": 69, "runtimeerror": [16, 67, 69, 228, 239, 258], "runtimeerror_": 69, "runtimewarn": 259, "rusin": 233, "ruskei": [80, 258], "russel": 213, "russian": 5, "rust": 253, "rust_cod": [69, 220], "rustcodegen": 253, "rustcodeprint": 220, "rv": [88, 229, 240, 258], "rvert": 113, "rx": 307, "ry": [30, 307], "ryser": 124, "rz": 307, "r\u2081": 136, "r\u2082": 136, "r\u2083": 136, "s0": [87, 111, 113, 162], "s0020": 80, "s0025": [67, 233], "s0747717183710539": 214, "s0895717706001609": 229, "s1": [41, 71, 79, 87, 101, 104, 111, 143, 200, 207, 216, 223, 233, 258, 267], "s11044": 153, "s1transitivesubgroup": [71, 215], "s2": [41, 71, 79, 80, 87, 101, 104, 143, 200, 207, 216, 223, 227, 233, 258, 267], "s208": 72, "s2transitivesubgroup": [71, 215], "s3": [71, 79, 87, 143, 223, 233], "s3_in_s6": 71, "s3transitivesubgroup": 71, "s4": [71, 80, 143], "s4m": 71, "s4p": 71, "s4transitivesubgroup": [71, 215, 216], "s4xc2": 71, "s5": [71, 79, 143], "s5transitivesubgroup": 71, "s6": 71, "s6transitivesubgroup": [71, 211], "s8": 135, "s_": [22, 78, 84, 213], "s_0": 84, "s_1": [70, 213, 258], "s_2": [70, 213], "s_3": 79, "s_4": 71, "s_5": 71, "s_6": 71, "s_aug": 124, "s_field": 90, "s_hexagon_theorem": 100, "s_i": [70, 84, 115, 117], "s_in": 159, "s_is_j": 117, "s_j": [78, 117, 213], "s_k": 70, "s_n": [71, 87, 216, 258], "s_out": 159, "s_postul": 128, "s_solution_of_systems_of_geodetic_polynomial_equ": 214, "s_transvers": 84, "s_x": [98, 104], "s_y": [98, 104], "sa": [104, 213, 216], "saboo": 0, "saddl": 206, "safe": [88, 128, 210, 216, 238, 244, 286], "safeguard": 225, "safeti": [70, 80, 121], "sage": [51, 88, 128, 205, 290], "sai": [3, 5, 11, 14, 15, 21, 22, 23, 30, 35, 36, 39, 41, 70, 78, 87, 88, 89, 117, 128, 150, 152, 195, 207, 208, 209, 213, 215, 219, 220, 227, 230, 233, 236, 238, 239, 240, 259, 285, 290, 296], "said": [0, 3, 15, 33, 35, 36, 61, 65, 69, 74, 128, 195, 208, 236, 239, 240, 264, 271], "sake": [43, 93, 233], "sakki": 258, "salvi": [214, 217], "sam": 240, "same": [3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 27, 32, 33, 35, 36, 39, 41, 42, 43, 45, 48, 50, 52, 55, 61, 63, 64, 65, 67, 68, 69, 71, 77, 78, 79, 80, 84, 87, 88, 89, 90, 93, 95, 96, 98, 101, 102, 103, 104, 105, 110, 111, 113, 115, 117, 118, 120, 124, 128, 130, 131, 134, 135, 136, 139, 143, 144, 147, 148, 151, 156, 174, 176, 184, 187, 188, 190, 192, 193, 194, 195, 197, 198, 199, 201, 204, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 245, 246, 247, 249, 251, 253, 254, 255, 256, 258, 259, 261, 264, 266, 268, 269, 273, 286, 288, 291, 292, 295, 296, 298, 305, 308, 309], "same_root": 216, "samp": 240, "samp_list": 240, "sampl": [2, 39, 79, 91, 141, 143, 174, 206, 220, 240, 286, 290], "sample_it": [13, 240], "sample_p": 143, "sampling_": 240, "sampling_dens": 240, "sampling_p": 240, "samuel": 128, "samuelson": [124, 209], "sanit": 261, "sartaj": 0, "sat": [2, 63], "satisfi": [2, 5, 12, 13, 14, 27, 41, 51, 52, 56, 64, 65, 67, 70, 76, 79, 84, 88, 89, 93, 96, 98, 111, 113, 117, 118, 124, 128, 153, 174, 179, 207, 208, 211, 213, 215, 216, 220, 226, 227, 228, 233, 236, 237, 238, 239, 240, 246, 291, 296], "satur": 207, "saunder": 124, "savag": 258, "save": [2, 9, 12, 13, 14, 15, 67, 88, 124, 128, 206, 219, 238, 255], "saw": [127, 210, 296], "sawtooth": 223, "saxena": 214, "sb": 0, "sc": [79, 115], "sca": 213, "scalar": [13, 14, 22, 32, 34, 36, 54, 61, 88, 90, 103, 117, 120, 124, 129, 130, 143, 147, 154, 189, 199, 200, 201, 207, 209, 213, 220, 236, 241, 253, 259, 264, 266, 267, 268, 269, 270, 272, 274, 279], "scalar_field": [33, 200, 264, 267, 271], "scalar_map": 264, "scalar_part": 61, "scalar_potenti": [33, 200, 267, 271], "scalar_potential_differ": [33, 200, 267, 271], "scale": [36, 97, 98, 99, 103, 104, 105, 116, 135, 170, 191, 193, 194, 195, 197, 198, 204, 206, 216, 223, 240, 271, 273], "scale_factor": 197, "scale_matrix": 240, "scale_matrix_1": 240, "scale_matrix_2": 240, "scalex": 223, "scan": [88, 209], "scarc": 213, "scc": 209, "scenario": [14, 128, 240], "scene": [22, 232, 288], "schedul": 3, "schemat": [18, 190, 195, 298], "scheme": [3, 8, 41, 80, 87, 92, 205, 206, 213, 216, 245], "schiehlen": 29, "schirm": 29, "schmidt": 124, "school": [89, 229], "schorn": 233, "schost": 217, "schreier": [79, 84, 86], "schreier_sim": [79, 85, 86], "schreier_sims_increment": [79, 86], "schreier_sims_random": [79, 86], "schreier_vector": 79, "schur": 120, "schur_compl": 120, "schwab": 29, "sci": 205, "scienc": [0, 29, 30, 80, 113, 124, 207, 214, 229, 230, 286], "sciencedirect": [214, 229], "scienceworld": 55, "scientif": [0, 15, 30, 59, 88], "scientificamerican": 43, "scientist": 236, "scipi": [2, 7, 14, 15, 18, 21, 30, 48, 50, 53, 96, 184, 220, 240, 259, 285, 294, 298], "scm": 9, "scopatz": 0, "scope": [4, 11, 23, 27, 69, 150, 249, 296], "scott": 79, "scottish": 240, "scratch": [88, 195], "screen": [3, 15, 36, 116, 204, 251, 295], "screenshot": 206, "script": [2, 4, 11, 15, 45, 60, 96, 204, 252], "scroll": [11, 57], "sculptur": 89, "sdm": [209, 213], "sdm_": 213, "sdm_add": 213, "sdm_berk": 209, "sdm_deg": 213, "sdm_ecart": 213, "sdm_from_dict": 213, "sdm_from_vector": 213, "sdm_groebner": 213, "sdm_irref": 209, "sdm_lc": 213, "sdm_lm": 213, "sdm_lt": 213, "sdm_monomial_deg": 213, "sdm_monomial_divid": 213, "sdm_monomial_mul": 213, "sdm_mul_term": 213, "sdm_nf_mora": 213, "sdm_nullspace_from_rref": 209, "sdm_particular_from_rref": 209, "sdm_rref_den": 209, "sdm_spoli": 213, "sdm_to_dict": 213, "sdm_to_vector": 213, "sdm_zero": 213, "se": 18, "seamless": 18, "seamlessli": [18, 173], "sean": 0, "search": [3, 4, 22, 49, 67, 71, 79, 80, 84, 86, 88, 94, 124, 128, 207, 215, 216, 220, 229, 230, 232, 237, 240, 252], "search_funct": 175, "sec": [94, 115, 141, 215, 220, 229, 296], "secant": [94, 216], "sech": [94, 220], "second": [3, 5, 9, 11, 12, 14, 15, 16, 18, 21, 22, 23, 24, 26, 28, 32, 35, 36, 39, 41, 42, 43, 48, 50, 52, 53, 55, 57, 60, 61, 64, 67, 69, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 98, 101, 102, 104, 115, 124, 128, 129, 132, 135, 136, 141, 143, 144, 148, 150, 151, 152, 154, 155, 158, 161, 163, 164, 167, 171, 176, 179, 184, 185, 187, 188, 193, 194, 195, 197, 199, 200, 206, 209, 210, 211, 213, 214, 215, 216, 220, 222, 230, 232, 233, 236, 238, 239, 240, 241, 242, 258, 259, 264, 267, 268, 269, 281, 285, 290, 291, 292, 298, 305, 308, 310], "second_mo": 135, "second_moment_of_area": [98, 104], "second_reference_fram": 199, "second_system": 264, "secondari": 147, "secondarili": [69, 216], "secondhypergeometr": 236, "secondli": [3, 14, 43, 230], "secondlinearairi": 236, "secondlinearbessel": 236, "secondqu": 190, "secret": [43, 89], "secretli": 89, "section": [3, 5, 8, 10, 11, 12, 14, 15, 16, 18, 22, 28, 33, 36, 41, 43, 44, 61, 68, 70, 79, 80, 87, 88, 89, 91, 95, 96, 98, 104, 113, 118, 124, 130, 135, 136, 151, 158, 193, 195, 207, 210, 213, 215, 220, 223, 227, 230, 236, 246, 255, 256, 258, 268, 269, 270, 271, 275, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 302], "section_modulu": [98, 104], "secur": [9, 13], "see": [0, 2, 3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 25, 27, 35, 38, 39, 41, 42, 43, 44, 45, 62, 63, 64, 65, 67, 68, 69, 71, 74, 76, 79, 80, 81, 84, 87, 89, 90, 93, 94, 95, 96, 100, 104, 105, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 124, 125, 128, 129, 130, 134, 141, 148, 151, 152, 153, 157, 159, 162, 165, 166, 175, 179, 180, 184, 185, 186, 187, 189, 190, 193, 195, 199, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 222, 223, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 245, 246, 249, 251, 252, 253, 254, 255, 256, 259, 264, 266, 274, 285, 286, 288, 290, 291, 292, 294, 295, 296, 297, 298, 307, 309], "seed": [12, 77, 79, 88, 89, 98, 101, 102, 124, 128, 213, 240, 251, 258], "seehuhn": 11, "seek": [3, 238], "seem": [12, 14, 22, 37, 41, 43, 112, 113, 195, 207, 209, 232, 236, 296], "seemingli": [87, 239], "seen": [4, 11, 24, 35, 39, 41, 61, 80, 113, 115, 130, 135, 139, 151, 154, 157, 195, 207, 210, 213, 216, 236, 239, 256, 258, 268, 288, 291, 295], "segment": [4, 13, 18, 35, 79, 98, 100, 101, 102, 103, 104, 105, 155, 206, 236, 251, 298], "segment2d": [100, 101, 104, 105], "segment3d": [101, 102], "seldom": 128, "select": [0, 8, 17, 18, 37, 53, 58, 69, 72, 79, 80, 87, 88, 89, 97, 102, 116, 118, 124, 128, 130, 132, 134, 149, 152, 195, 204, 210, 211, 213, 214, 216, 220, 229, 232, 238], "selector": [87, 124, 232, 258], "self": [4, 11, 12, 14, 18, 41, 43, 53, 61, 63, 64, 68, 69, 79, 80, 85, 87, 88, 90, 94, 97, 98, 99, 101, 102, 103, 104, 115, 124, 128, 148, 185, 190, 199, 201, 203, 206, 207, 209, 211, 213, 215, 216, 220, 222, 227, 228, 246, 264, 298, 301], "selfridg": 128, "sell": 290, "semant": [3, 15, 41, 120, 238], "semanticscholar": 128, "semi": [98, 101, 128], "semicircl": 240, "semicolon": 220, "semidefinit": [124, 240], "semidirect": 71, "semilatus_rectum": 98, "semilatusrectum": 98, "semilog": 141, "semisimpl": 117, "semispher": [264, 274], "send": [18, 79, 88, 89, 94, 128, 207, 236, 238], "sender": 89, "sens": [13, 14, 15, 36, 39, 41, 43, 61, 65, 67, 68, 88, 90, 93, 96, 113, 118, 147, 152, 155, 158, 195, 199, 207, 213, 215, 229, 230, 232, 239, 240, 252, 253, 258, 273, 296, 301], "sensibl": [18, 113, 115, 132], "sensit": [30, 88, 130, 143, 206, 213, 232, 251], "sent": [88, 115, 232, 238], "sentenc": [5, 11, 118], "sep": [89, 220, 237, 251], "separ": [3, 4, 11, 12, 13, 15, 16, 27, 28, 31, 39, 42, 43, 45, 50, 56, 68, 76, 88, 89, 94, 96, 113, 115, 124, 144, 147, 151, 155, 157, 163, 187, 190, 199, 206, 208, 209, 211, 213, 216, 217, 220, 229, 232, 233, 236, 237, 239, 244, 249, 251, 255, 259, 261, 264, 288], "separable_integr": [55, 236], "separable_reduc": 236, "separable_reduced_integr": 236, "separablereduc": 236, "separate_integr": 115, "separatevar": [88, 232, 236], "septemb": [80, 255], "seq": [61, 79, 88, 91, 124, 211, 213, 216, 226, 238, 258], "seqadd": 226, "seqbas": 226, "seqformula": 226, "seqmul": 226, "seqper": 226, "sequenc": [5, 16, 30, 61, 67, 69, 72, 75, 78, 79, 80, 84, 86, 87, 88, 89, 91, 93, 96, 98, 101, 102, 103, 104, 105, 112, 118, 120, 124, 127, 128, 131, 134, 143, 163, 189, 190, 209, 211, 214, 220, 222, 224, 227, 229, 230, 232, 233, 236, 237, 239, 246, 249, 252, 253, 258, 260, 261, 276, 298], "sequence_partit": 258, "sequence_partitions_empti": 258, "sequence_term": 87, "sequenti": [68, 72, 89, 94, 264, 266], "serendipit": 229, "seress": 79, "sergei": 0, "sergiu": 0, "seri": [4, 11, 12, 13, 18, 22, 30, 35, 39, 46, 55, 67, 68, 69, 70, 78, 79, 87, 88, 90, 92, 93, 94, 96, 111, 112, 113, 117, 128, 140, 141, 143, 155, 203, 212, 213, 220, 225, 226, 230, 236, 239, 276, 282, 287, 308, 310], "series_approx2": 69, "series_approx3": 69, "series_approx8": 69, "seriesapprox": 69, "seriessolut": 236, "serious": 3, "serv": [5, 12, 13, 15, 39, 43, 63, 64, 69, 71, 85, 88, 95, 111, 215, 236, 237, 261, 289], "servic": 69, "session": [11, 12, 15, 36, 60, 69, 88, 100, 115, 204, 210, 256, 288, 295], "set": [1, 2, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 18, 21, 22, 24, 25, 26, 27, 30, 31, 32, 33, 35, 37, 39, 40, 41, 42, 48, 50, 51, 57, 60, 61, 63, 67, 68, 69, 70, 71, 76, 77, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 101, 103, 105, 106, 107, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 130, 134, 135, 136, 141, 143, 147, 148, 151, 152, 153, 155, 157, 158, 174, 180, 185, 190, 192, 195, 197, 198, 199, 201, 203, 204, 206, 207, 208, 209, 210, 211, 213, 215, 216, 219, 220, 221, 222, 227, 229, 230, 232, 233, 235, 236, 237, 238, 240, 244, 245, 246, 249, 251, 252, 253, 254, 258, 259, 264, 267, 269, 275, 278, 285, 287, 296, 298, 301, 302, 305, 310], "set_": 13, "set_acc": [30, 35, 203], "set_ang_acc": [30, 199], "set_ang_vel": [22, 27, 28, 30, 31, 35, 148, 154, 199, 201, 203, 298, 301, 308, 309], "set_comm": 246, "set_condit": 13, "set_domain": [211, 216], "set_global_relative_scale_factor": 197, "set_global_set": 220, "set_metr": [13, 246], "set_modulu": 216, "set_norm": 61, "set_po": [18, 22, 35, 134, 147, 154, 155, 158, 203, 298], "set_quantity_dimens": 193, "set_quantity_scale_factor": 193, "set_vel": [13, 18, 22, 25, 26, 27, 28, 30, 31, 35, 134, 147, 148, 152, 154, 158, 203, 298, 301, 302, 303, 305, 306, 308, 309, 310], "set_xlabel": [18, 298], "set_ylabel": [18, 298], "setdelai": 130, "seterr": 88, "setitem": 209, "setkind": [88, 123], "setminu": [96, 113], "setsymbol": 41, "setter": [13, 22, 30], "settl": 298, "setup": [6, 10, 11, 12, 13, 69, 88, 159, 199, 213, 216, 218, 219, 230, 251, 252, 254, 263, 295, 302, 305, 306], "seven": 220, "seventh": 132, "sever": [2, 3, 4, 11, 12, 13, 14, 15, 24, 38, 41, 43, 48, 52, 59, 69, 73, 79, 80, 87, 88, 92, 93, 95, 96, 100, 113, 115, 128, 137, 149, 152, 153, 195, 197, 206, 208, 209, 210, 213, 215, 219, 220, 221, 227, 228, 236, 240, 251, 253, 262, 275, 288, 292, 295, 302], "sexi": [63, 64], "sexy_prim": [63, 64], "sexyprim": [63, 64], "sexyprimepred": [63, 64], "sff": 124, "sffge": 124, "sfield": [211, 270], "sfix": 35, "sfu": [96, 115], "sg": [79, 240, 246], "sgen": 84, "sh": 8, "sha": 261, "sha1": 253, "shade": 135, "shadow": [55, 81], "shakthimaan": 7, "shall": [22, 30, 39, 79, 113, 227, 230, 291], "shallow": [211, 227], "shank": 227, "shankar": 74, "shape": [4, 13, 18, 22, 69, 104, 120, 124, 126, 127, 131, 134, 137, 141, 143, 148, 157, 199, 206, 207, 209, 220, 223, 230, 240, 241, 242, 244, 245, 246, 259, 295, 298], "shapeerror": [53, 120, 124], "share": [3, 7, 41, 43, 89, 128, 211, 215, 220, 240, 253], "sharex": [18, 298], "she": [5, 239], "shea": [214, 216], "shear": [135, 136], "shear_forc": [135, 136], "shear_modulu": 135, "shear_stress": 135, "sheet": [96, 229], "shell": [8, 11, 16, 30, 116, 219], "shi": [96, 113, 220, 230], "shier": 240, "shierd": 240, "shift": [73, 79, 80, 82, 89, 96, 99, 103, 105, 118, 206, 211, 213, 216, 223, 230, 238, 240], "shift_list": [211, 213, 216], "shifted_ellips": 98, "shifted_gompertz_distribut": 240, "shiftedgompertz": 240, "shiftx": 223, "ship": [15, 129], "shivam": 0, "sho": 191, "shor": [177, 281], "short": [3, 5, 11, 12, 16, 21, 32, 36, 60, 70, 78, 80, 84, 88, 89, 90, 91, 94, 121, 128, 158, 176, 195, 207, 214, 241, 251, 261, 291, 295], "short_lif": 16, "shortcut": [9, 36, 68, 88, 119, 220, 228, 232, 296], "shorten": [4, 134, 147], "shorter": [13, 18, 21, 25, 32, 57, 88, 98, 207, 211, 220, 253, 261], "shortest": [35, 98, 101, 104, 155, 158, 226, 232, 233, 236, 258], "shorthand": [14, 15, 16, 41, 43, 88, 118, 184, 215, 228, 249], "shortlog": 11, "should": [2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 25, 27, 28, 30, 31, 35, 36, 38, 41, 42, 43, 45, 48, 55, 57, 60, 62, 64, 67, 68, 69, 70, 79, 80, 81, 82, 84, 87, 88, 89, 91, 92, 94, 96, 98, 99, 100, 101, 102, 103, 105, 110, 111, 112, 113, 115, 116, 117, 118, 120, 124, 128, 130, 132, 134, 135, 141, 143, 147, 152, 153, 157, 158, 159, 170, 173, 174, 178, 180, 182, 184, 185, 188, 190, 192, 193, 195, 196, 199, 204, 206, 207, 208, 209, 210, 211, 213, 215, 216, 219, 220, 222, 223, 226, 227, 228, 229, 230, 232, 233, 235, 236, 238, 239, 240, 244, 245, 249, 251, 252, 253, 254, 255, 256, 258, 259, 261, 264, 268, 285, 286, 288, 289, 292, 301, 305], "shoulder": 298, "shouldn": [88, 217], "shoup": [213, 214], "shoup91": 214, "shoup95": 214, "show": [2, 3, 4, 5, 8, 11, 12, 13, 16, 18, 21, 22, 24, 28, 30, 35, 36, 38, 39, 40, 41, 42, 43, 55, 69, 80, 87, 88, 92, 94, 111, 113, 115, 124, 128, 135, 136, 137, 139, 141, 147, 155, 185, 189, 193, 195, 199, 206, 207, 210, 211, 213, 215, 216, 220, 221, 223, 227, 228, 229, 230, 232, 233, 236, 238, 240, 241, 249, 252, 253, 256, 258, 259, 288, 290, 292, 295, 298, 307], "show_ax": 141, "showcas": 304, "shown": [3, 4, 12, 13, 15, 18, 21, 24, 25, 26, 32, 35, 36, 41, 42, 43, 77, 80, 87, 88, 92, 94, 96, 113, 130, 135, 136, 141, 143, 152, 154, 199, 206, 209, 210, 211, 216, 220, 236, 240, 256, 258, 268, 269, 289, 298, 303, 305, 306], "showpost": 128, "shp": 69, "shrink": [99, 113], "shuffl": [80, 124, 296], "shut": [88, 216], "shutil": 13, "si": [43, 96, 112, 113, 163, 192, 193, 194, 195, 196, 197, 213, 220], "siam": [205, 258], "sibx0afl3q": 239, "side": [12, 14, 16, 18, 27, 31, 32, 39, 41, 50, 52, 55, 69, 79, 80, 88, 100, 104, 115, 124, 128, 134, 135, 143, 152, 157, 158, 178, 179, 195, 199, 205, 207, 213, 215, 218, 220, 237, 239, 240, 244, 251, 253, 274, 286], "siev": [79, 128], "sieve_interv": 128, "sift": [79, 86, 258], "sigma": [16, 80, 111, 113, 124, 220, 223, 240], "sigma3": 165, "sigma_": 240, "sigma_approxim": 223, "sigma_i": [146, 240], "sigma_k": [93, 128], "sigma_not": 87, "sigma_x": 240, "sign": [3, 4, 5, 9, 12, 14, 15, 17, 18, 33, 35, 46, 48, 52, 57, 61, 66, 69, 84, 88, 89, 93, 94, 98, 104, 113, 115, 124, 128, 134, 135, 136, 139, 143, 147, 155, 163, 175, 199, 205, 209, 213, 220, 225, 227, 232, 233, 238, 258, 271, 274, 289, 301], "signal": [18, 30, 46, 96, 118, 128, 131, 141, 143, 213, 291], "signallib": 69, "signatur": [4, 7, 43, 63, 64, 80, 88, 124, 133, 253, 254, 258, 259], "signed_permut": [233, 258], "signedinttyp": 69, "signifi": [79, 88, 135, 216, 240], "signific": [3, 14, 16, 21, 32, 41, 69, 88, 89, 92, 115, 124, 184, 210, 239, 259, 291], "significantli": [13, 18, 21, 25, 53, 69, 92, 211, 222, 252, 255], "signsimp": [88, 232, 309], "signum": 220, "sigsam": 115, "silenc": [3, 17, 249, 256], "silent": [14, 42, 92, 128, 252], "silver": 145, "sim": [79, 84, 86, 113], "similar": [3, 9, 11, 12, 13, 14, 16, 18, 22, 27, 28, 32, 33, 35, 36, 39, 41, 43, 48, 80, 87, 88, 89, 92, 93, 94, 96, 99, 104, 105, 109, 118, 124, 129, 143, 147, 188, 208, 210, 211, 213, 217, 227, 229, 230, 232, 236, 238, 241, 246, 249, 252, 255, 256, 264, 266, 268, 269, 273, 285, 290, 291, 292, 294, 296, 301, 305], "similari": 11, "similarli": [11, 12, 13, 18, 28, 32, 41, 48, 55, 84, 88, 89, 96, 100, 124, 135, 136, 143, 152, 155, 194, 206, 207, 210, 215, 217, 227, 228, 230, 236, 251, 259, 269, 270, 292], "similiar": 155, "simmon": 236, "simon": 240, "simp": [113, 199], "simpfunc": 124, "simpl": [4, 11, 12, 13, 14, 15, 16, 19, 21, 23, 27, 31, 35, 36, 39, 41, 43, 54, 59, 68, 69, 79, 87, 88, 92, 96, 100, 104, 106, 113, 115, 117, 124, 128, 129, 130, 131, 132, 134, 135, 136, 143, 144, 147, 148, 150, 151, 152, 154, 157, 158, 164, 178, 179, 187, 188, 189, 199, 209, 210, 211, 212, 216, 217, 220, 222, 227, 229, 230, 232, 233, 236, 239, 246, 252, 253, 258, 263, 264, 266, 267, 271, 285, 288, 291, 292, 296, 298, 301, 302, 303, 305, 306, 308, 310], "simple_pend": 306, "simple_pend_fram": 306, "simple_root": 117, "simpled": 222, "simpledomain": 211, "simplefilt": 256, "simpler": [12, 15, 36, 42, 43, 48, 61, 88, 92, 96, 112, 113, 209, 213, 229, 230, 232, 236, 238, 239, 296, 308], "simplest": [14, 18, 43, 55, 68, 118, 124, 128, 129, 147, 155, 205, 206, 217, 221, 229, 232, 236, 286, 296], "simplex": 238, "simplfiy_thi": 3, "simpli": [2, 3, 5, 8, 12, 14, 22, 27, 33, 36, 41, 42, 50, 51, 65, 70, 71, 87, 88, 90, 94, 98, 120, 124, 128, 130, 131, 135, 139, 144, 148, 180, 185, 195, 210, 216, 217, 228, 229, 230, 235, 236, 239, 256, 258, 259, 271, 298, 301], "simplic": [18, 43, 230, 236, 298], "simplif": [2, 14, 15, 16, 22, 27, 30, 41, 46, 62, 64, 66, 67, 69, 88, 90, 93, 94, 113, 124, 130, 149, 174, 190, 199, 216, 221, 231, 232, 236, 238, 239, 275, 276, 285, 287, 289, 290], "simplifc": 309, "simplifi": [3, 4, 11, 12, 13, 15, 16, 18, 27, 33, 39, 41, 42, 43, 46, 53, 54, 55, 62, 64, 66, 67, 87, 88, 90, 92, 93, 94, 96, 100, 105, 110, 113, 115, 118, 119, 120, 124, 132, 135, 143, 144, 149, 151, 152, 153, 155, 157, 158, 162, 169, 174, 189, 190, 194, 197, 199, 207, 209, 215, 217, 219, 221, 226, 228, 229, 230, 233, 236, 237, 238, 239, 240, 242, 254, 256, 259, 268, 270, 276, 285, 286, 287, 288, 290, 291, 292, 302, 303, 305, 308, 309, 310], "simplified_pair": 118, "simplify_auxiliary_eq": 309, "simplify_cg": 174, "simplify_gpgp": 144, "simplify_index_permut": 190, "simplify_log": 118, "simplify_thi": [3, 4, 254], "simprot": [22, 30], "simul": [18, 19, 22, 30, 88, 219, 299, 300], "simultan": [16, 88, 94, 101, 124, 128, 133, 206, 229], "sin": [4, 5, 12, 13, 14, 15, 16, 18, 22, 27, 30, 33, 35, 36, 41, 43, 46, 49, 52, 54, 55, 57, 59, 61, 67, 69, 87, 88, 90, 92, 93, 94, 96, 97, 98, 102, 106, 107, 110, 111, 112, 113, 115, 116, 124, 129, 130, 145, 148, 149, 151, 155, 157, 158, 162, 164, 188, 199, 201, 203, 205, 206, 208, 210, 216, 217, 219, 220, 221, 222, 223, 227, 228, 229, 230, 232, 235, 236, 238, 239, 241, 247, 253, 259, 264, 266, 267, 268, 269, 274, 285, 286, 288, 290, 291, 296, 297, 298, 301, 302, 303, 306, 308, 309, 310], "sin_co": 259, "sin_cos_numpi": 259, "sin_cos_sympi": 259, "sin_sol": 228, "sinc": [12, 13, 14, 15, 16, 28, 30, 33, 36, 37, 38, 39, 41, 42, 43, 46, 62, 67, 69, 70, 79, 80, 81, 84, 85, 86, 88, 89, 91, 93, 94, 96, 97, 98, 100, 104, 106, 112, 113, 115, 117, 118, 124, 128, 146, 148, 151, 166, 190, 191, 195, 206, 207, 208, 210, 211, 213, 215, 216, 220, 223, 228, 229, 230, 232, 233, 236, 238, 239, 240, 246, 250, 254, 255, 256, 258, 259, 268, 270, 271, 273, 285, 290, 292, 295, 296, 297], "sinc_funct": 94, "sine": [4, 14, 43, 88, 94, 96, 113, 115, 164, 217, 223, 229, 285], "sine_transform": 115, "sinetransform": 115, "sing": 124, "singh": 0, "singl": [3, 5, 8, 11, 13, 14, 15, 17, 18, 24, 39, 41, 43, 49, 55, 60, 61, 68, 69, 72, 79, 88, 89, 93, 94, 96, 101, 102, 104, 105, 106, 113, 115, 118, 124, 127, 130, 132, 134, 135, 143, 144, 147, 149, 151, 152, 170, 174, 176, 184, 187, 190, 197, 199, 203, 206, 207, 209, 210, 211, 213, 215, 216, 220, 221, 222, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 245, 251, 253, 255, 258, 259, 261, 286, 288, 291, 292, 297, 305], "singlecontinuouspspac": 240, "singledomain": 240, "singlefinitepspac": 240, "singlepspac": 240, "singleton": [15, 80, 118, 239, 291], "singletonregistri": [41, 88], "singli": 128, "singular": [27, 65, 69, 80, 88, 92, 94, 95, 96, 110, 111, 113, 115, 124, 135, 138, 199, 207, 214, 227, 236, 239, 264, 281, 286], "singular_point": 264, "singular_valu": 124, "singular_value_decomposit": 124, "singularhandl": 65, "singularit": [27, 115], "singularity_funct": 96, "singularityfunct": [96, 115, 135], "singularityintegr": 115, "singularmatrix": 65, "singularpred": 65, "sinh": [18, 43, 67, 88, 92, 94, 96, 107, 113, 130, 132, 217, 220, 221, 230, 296], "sinhint": 220, "sinhintegr": 220, "sinint": 220, "sinintegr": 220, "sink": [33, 271], "sinrul": 115, "siq": 128, "siret": 214, "siso": [141, 143], "sisolineartimeinvari": [141, 143], "sit": [36, 143], "site": [5, 128, 254], "situat": [12, 14, 36, 41, 57, 88, 92, 113, 236, 238, 240, 256, 286, 288], "six": [37, 136, 220, 233, 239, 240], "sixteenth": 89, "sixth": 132, "size": [13, 25, 26, 27, 39, 53, 69, 70, 72, 77, 79, 80, 81, 82, 83, 84, 88, 89, 91, 93, 116, 120, 124, 127, 128, 141, 163, 185, 186, 204, 206, 209, 213, 220, 232, 233, 236, 240, 258, 286, 301], "sizeof": 69, "sk": 89, "skelet": [18, 133], "skeleton": 18, "skellam": 240, "skellam_distribut": 240, "skew": [41, 111, 124, 128, 240], "skiena": 80, "skip": [2, 3, 4, 8, 16, 68, 72, 88, 124, 128, 199, 215, 219, 220, 222, 236, 238, 249, 251, 286, 294, 295], "skip_nan": 94, "skip_under_pyodid": 249, "skipp": 12, "skyciv": 104, "slack": [18, 132, 134], "slash": [220, 251], "slate": 251, "slater": [96, 230], "slice": [88, 118, 124, 130, 209, 211, 216, 226, 228, 232, 241, 258, 260], "slide": [135, 151], "slider": [13, 157, 306], "slightli": [12, 14, 54, 60, 61, 69, 84, 128, 130, 206, 207, 209, 211, 213, 216, 220, 230, 232, 301], "slip": [12, 35, 301, 307, 309], "slope": [98, 99, 101, 104, 115, 135, 136, 141, 151], "slot": [84, 174, 241, 245, 246, 291], "slow": [14, 21, 32, 36, 41, 43, 48, 53, 84, 88, 92, 115, 129, 162, 210, 211, 220, 221, 222, 223, 232, 236, 238, 239, 251, 252, 296], "slowdown": [13, 92], "slower": [12, 13, 43, 48, 53, 84, 124, 152, 209, 210, 215, 216, 259, 285], "slowest": [53, 115, 129], "slowli": [92, 227], "slp": 86, "slp_dict": 79, "sm": [18, 22, 30, 128, 207, 298, 302], "small": [18, 30, 39, 51, 69, 70, 71, 79, 80, 88, 92, 93, 115, 118, 124, 128, 143, 187, 205, 206, 209, 211, 213, 214, 215, 232, 233, 238, 258, 285, 288, 290, 305, 309], "smallelementof": 220, "smaller": [15, 25, 69, 79, 80, 88, 89, 93, 96, 104, 115, 120, 128, 208, 209, 210, 213, 216, 223, 229, 230, 233, 238, 258, 285, 296], "smallest": [67, 82, 93, 94, 101, 103, 110, 118, 124, 128, 187, 199, 211, 233, 256, 258], "smallest_angle_between": 101, "smallmatrix": [130, 220, 290], "smart": [27, 149, 227, 233, 236], "smarter": [14, 183, 229], "smith": [0, 13, 125, 209], "smith_normal_form": [13, 125, 209], "smooth": [18, 88, 92, 128, 131, 222], "smoothing_r": 131, "smoothli": 155, "smoothness_p": 128, "smt_builtin_func": 220, "smtlib": 220, "smtlib_cod": 220, "smtlibprint": 220, "sn": [79, 80, 87, 110], "sneak": 12, "snippet": [16, 69], "snr": 69, "so": [0, 2, 3, 4, 5, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 36, 38, 39, 41, 42, 43, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 74, 76, 77, 79, 80, 82, 84, 86, 88, 89, 92, 93, 94, 96, 98, 100, 101, 102, 104, 110, 111, 112, 113, 115, 116, 117, 118, 120, 124, 125, 128, 130, 131, 134, 135, 136, 143, 147, 150, 151, 152, 155, 157, 163, 174, 176, 184, 186, 187, 188, 190, 192, 194, 195, 199, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 244, 245, 249, 251, 252, 255, 256, 258, 259, 261, 270, 274, 285, 286, 288, 290, 291, 292, 295, 296, 297, 298, 301, 305], "societi": [29, 233], "socket": 151, "sode0401": 236, "sode0402": 236, "sode0404": 236, "sode0405": 236, "sode0406": 236, "softwar": [2, 5, 115, 214, 290], "soil": 207, "sol": [18, 37, 54, 124, 233, 236, 237, 238, 298], "sol0": 37, "sol1": 236, "sol2": 236, "sol_f": 239, "sol_typ": 152, "sol_uniqu": 124, "sol_vector": 236, "sol_vector_evalu": 236, "sola": 236, "solar": 193, "solar_mass": 193, "solb": 236, "soldner": 96, "soldnersconst": 96, "sole": [13, 14, 48], "solenoid": [200, 267], "solid": [81, 102, 151, 158, 206, 274], "solidspher": 274, "sollist": 236, "soln": 124, "solomon": 89, "solut": [8, 11, 13, 14, 15, 16, 21, 22, 23, 27, 32, 37, 39, 42, 43, 46, 49, 50, 69, 84, 88, 89, 94, 96, 98, 106, 110, 111, 112, 115, 124, 128, 131, 134, 135, 140, 150, 152, 153, 159, 195, 207, 209, 213, 214, 215, 216, 217, 218, 219, 228, 233, 235, 236, 237, 238, 297, 305], "solution2": 53, "solution_dict": [51, 55], "solution_first": 51, "solution_list": [51, 52], "solution_one_soln_set_dict": 55, "solution_outside_2_3": 52, "solution_p4q3": 51, "solution_set": 52, "solution_set_arg": 52, "solutions_list": 55, "solutions_one_soln_set": 55, "solutions_set": 52, "solv": [3, 4, 11, 13, 14, 15, 16, 17, 18, 22, 23, 25, 27, 30, 34, 39, 41, 43, 44, 46, 47, 69, 72, 84, 87, 88, 96, 101, 113, 115, 119, 124, 128, 131, 132, 134, 135, 137, 138, 139, 148, 150, 152, 153, 157, 193, 209, 213, 217, 218, 219, 220, 222, 232, 233, 235, 236, 237, 240, 281, 286, 287, 290, 292, 295, 298, 303, 304, 305, 308, 310], "solvabl": [57, 79, 139, 148, 233, 236, 239, 297], "solve_aux_eq": 236, "solve_congru": [128, 213], "solve_d": 222, "solve_den": 209, "solve_den_charpoli": 209, "solve_den_rref": 209, "solve_expo": 239, "solve_for_func": [236, 237], "solve_for_ild_mo": 135, "solve_for_ild_react": 135, "solve_for_ild_shear": 135, "solve_for_reaction_load": [135, 136], "solve_for_tors": 135, "solve_ivp": [18, 55, 298], "solve_least_squar": 124, "solve_lin_si": [11, 13, 218], "solve_linear": 238, "solve_linear_system": 238, "solve_linear_system_lu": 238, "solve_log": 239, "solve_multipli": [152, 305], "solve_poly_inequ": 235, "solve_poly_system": [208, 216, 238, 239], "solve_rational_inequ": 235, "solve_riccati": 236, "solve_slope_deflect": 135, "solve_triangul": 238, "solve_undetermined_coeff": 238, "solve_univariate_inequ": [50, 235, 239], "solvefun": 237, "solver": [2, 4, 11, 12, 15, 23, 30, 31, 32, 51, 54, 63, 96, 124, 128, 150, 152, 157, 209, 212, 220, 232, 233, 237, 251, 275, 276, 282, 287, 289], "solveset": [3, 30, 43, 54, 57, 152, 218, 234, 235, 238, 276, 297], "solveset_complex": 239, "solveset_r": 239, "solvifi": [235, 239], "some": [2, 3, 4, 7, 8, 9, 11, 12, 14, 15, 16, 18, 21, 22, 23, 24, 25, 27, 31, 32, 33, 35, 36, 39, 41, 42, 43, 46, 48, 51, 52, 53, 54, 56, 57, 59, 60, 61, 65, 68, 69, 70, 71, 76, 79, 80, 86, 87, 88, 89, 92, 93, 94, 96, 98, 99, 100, 104, 113, 115, 117, 118, 120, 124, 128, 129, 130, 141, 144, 148, 151, 154, 157, 170, 175, 179, 187, 190, 194, 195, 196, 200, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 220, 222, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 240, 246, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 264, 266, 267, 269, 271, 275, 285, 286, 288, 290, 291, 292, 294, 295, 296, 298, 301, 303, 305, 306], "some_filenam": 22, "some_funct": 254, "somehow": [11, 12, 15, 43], "someon": [3, 11, 12, 14, 236, 255, 289], "someth": [3, 4, 5, 9, 11, 13, 14, 15, 16, 21, 22, 30, 32, 41, 42, 43, 57, 67, 69, 88, 89, 92, 98, 113, 118, 124, 128, 183, 196, 206, 210, 211, 219, 227, 228, 232, 236, 239, 251, 253, 259, 285, 288, 290, 291, 294], "sometim": [3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 23, 27, 36, 41, 43, 48, 55, 68, 69, 88, 93, 96, 112, 113, 143, 150, 182, 190, 207, 210, 215, 220, 222, 227, 229, 233, 236, 238, 249, 258, 285, 292], "somewhat": [22, 96, 115, 211], "somewher": [3, 4, 5, 12, 14, 15, 69], "soon": [22, 87, 88, 195, 217], "sop": [115, 118], "sopform": 118, "sophist": [43, 129, 238], "sort": [12, 15, 21, 32, 50, 63, 64, 68, 69, 77, 80, 84, 93, 113, 115, 118, 124, 127, 128, 130, 144, 152, 174, 190, 195, 206, 213, 216, 217, 227, 232, 233, 236, 237, 238, 242, 244, 246, 251, 253, 258, 268, 288, 290, 291], "sort_kei": [77, 88, 236], "sorted_compon": 246, "sosmath": 229, "sought": [79, 128, 175, 185, 209, 232, 238, 239], "sound": [220, 296, 302], "sourc": [0, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 22, 30, 33, 43, 53, 54, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 137, 139, 141, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 213, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 271, 283, 290], "source_cod": 130, "source_format": [69, 220], "sourceforg": [5, 68], "sp": 35, "space": [4, 12, 16, 33, 36, 43, 67, 68, 69, 88, 89, 90, 97, 98, 99, 101, 103, 104, 117, 124, 130, 135, 143, 145, 151, 152, 153, 154, 159, 161, 164, 174, 177, 179, 185, 187, 199, 203, 205, 206, 207, 215, 239, 240, 251, 255, 264, 266, 268, 269, 270, 271, 273, 274, 281, 288, 291], "space_orient": [264, 266], "spacecraft": 29, "spaceorient": [264, 266, 269], "spack": 59, "spam": [7, 261], "spamham": 261, "spammer": 220, "span": [4, 13, 117, 124, 135, 136, 151, 155, 215, 220, 256, 292], "sparingli": 12, "spars": [5, 15, 120, 122, 124, 184, 209, 215, 216, 217, 240, 241, 279, 291], "sparsematrix": [124, 127, 221, 232], "sparsetool": [124, 127], "sparsiti": 209, "spatial": [147, 154, 164, 199, 220], "speak": [124, 215, 271], "spec": [215, 216], "speci": [55, 87, 88], "special": [2, 4, 11, 15, 17, 30, 33, 41, 43, 53, 57, 60, 61, 71, 80, 88, 89, 91, 92, 93, 95, 103, 106, 113, 115, 124, 174, 179, 207, 210, 213, 214, 215, 220, 229, 230, 232, 233, 235, 236, 237, 238, 240, 251, 252, 253, 256, 258, 259, 268, 271, 273, 276, 286, 287, 291], "specialpoli": 216, "specif": [4, 5, 7, 8, 11, 12, 13, 14, 15, 18, 22, 23, 30, 36, 41, 43, 44, 51, 58, 79, 80, 88, 89, 90, 96, 100, 115, 117, 124, 132, 134, 148, 150, 151, 152, 157, 159, 195, 206, 207, 211, 213, 215, 216, 219, 220, 221, 226, 232, 233, 236, 237, 238, 240, 246, 251, 252, 253, 258, 292, 296, 298], "specifi": [4, 5, 13, 14, 18, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 41, 43, 48, 53, 54, 56, 57, 68, 69, 70, 83, 87, 88, 89, 90, 91, 94, 96, 97, 101, 104, 113, 115, 117, 118, 120, 123, 124, 128, 130, 131, 132, 134, 135, 136, 137, 139, 143, 147, 148, 150, 151, 152, 157, 158, 174, 179, 184, 185, 187, 188, 193, 199, 201, 203, 207, 208, 209, 210, 211, 213, 215, 216, 217, 220, 222, 223, 226, 227, 228, 230, 232, 236, 237, 238, 239, 240, 241, 245, 246, 247, 251, 252, 253, 258, 259, 264, 266, 267, 270, 273, 286, 292, 298, 301, 303, 305, 306, 308], "spectral": 124, "spectrum": 43, "speed": [2, 4, 11, 13, 18, 22, 24, 25, 26, 30, 31, 32, 36, 64, 69, 79, 88, 89, 92, 124, 128, 129, 145, 148, 151, 152, 153, 157, 161, 164, 194, 199, 203, 205, 217, 220, 221, 227, 232, 236, 252, 255, 258, 291, 292, 298, 301, 303, 305, 306, 308, 309, 310], "speed_con": 25, "speed_idx": [31, 157], "speed_of_light": [194, 197], "speedup": [88, 124, 129, 213, 217, 259], "spell": [4, 13, 15, 236], "spend": 11, "spent": 259, "sph_jn": 96, "sphere": [15, 158, 162, 264, 274], "spheric": [94, 145, 151, 158, 169, 205, 206, 216, 264, 268, 269, 290], "spherical_bessel_fn": [96, 216], "spherical_harmon": 96, "sphericalbess": 220, "sphericalbesselj": 220, "sphericalharmon": 96, "sphericalharmonici": 96, "sphericaljoint": 151, "sphinx": [3, 5, 8, 11, 94, 236, 251, 256], "sphinx_math_dollar": 5, "sphinxext": 5, "spin": [104, 145, 176, 177, 185, 281, 301], "spin_up": 145, "spinor": 144, "spinstat": 187, "split": [10, 43, 69, 88, 89, 92, 113, 115, 130, 213, 215, 218, 219, 220, 238, 240, 246, 251, 258, 262, 291, 296], "split_1": 88, "split_list": 251, "split_super_sub": 220, "split_symbol": 130, "split_symbols_custom": 130, "splitter": 162, "spoli": 213, "sporad": 12, "spot": [31, 124], "spread": [159, 209, 220, 240, 255], "spring": [18, 22, 46, 128, 147, 148, 152, 157, 298, 302, 306], "spring_const": 18, "spring_damp": 18, "spring_damper2": 18, "spring_damper3": 18, "spring_damper_path": 306, "spring_forc": [147, 148], "springdamp": 18, "springer": [89, 115, 128, 213, 214, 236], "spuriou": [48, 213, 238], "sq": [16, 233], "sq2": 88, "sqf": [208, 211, 216, 233], "sqf_list": [208, 211, 213, 216], "sqf_list_includ": [211, 216], "sqf_norm": [211, 213, 216], "sqf_normal": 233, "sqf_part": [211, 213, 216], "sqfr_norm": 213, "sqfreetool": 213, "sqr": [211, 216], "sqrt": [4, 12, 13, 14, 15, 18, 32, 33, 36, 37, 41, 43, 46, 48, 49, 50, 51, 52, 56, 57, 61, 65, 66, 67, 69, 88, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 111, 112, 113, 115, 116, 119, 124, 128, 130, 132, 134, 135, 137, 139, 143, 145, 147, 155, 158, 159, 161, 163, 164, 169, 174, 184, 185, 187, 188, 190, 191, 193, 194, 199, 205, 208, 210, 211, 213, 215, 216, 219, 220, 221, 226, 229, 230, 232, 233, 235, 236, 238, 239, 240, 258, 259, 261, 264, 273, 274, 285, 286, 290, 295, 296, 297, 301], "sqrt2": [207, 210], "sqrt3": 210, "sqrt_mod": [128, 233], "sqrt_mod_it": 128, "sqrtdenest": [11, 12, 232], "sqt": 229, "squar": [12, 16, 25, 26, 41, 48, 51, 52, 57, 61, 65, 69, 79, 88, 89, 93, 94, 104, 105, 113, 115, 119, 124, 127, 128, 130, 131, 134, 135, 143, 145, 176, 192, 199, 205, 209, 211, 213, 214, 215, 216, 217, 220, 228, 232, 233, 236, 239, 240, 290], "square_factor": [128, 233], "square_in_unit_circl": 104, "square_iter": 228, "square_matrix": 65, "square_root": 94, "squareddistribut": 240, "squarefre": [128, 215], "squarefree_cor": 128, "squarehandl": 65, "squarepred": 65, "squeez": [220, 298], "sr": 270, "src": [3, 4, 5, 7, 11, 12, 130, 236, 251, 256], "src2": 130, "src3": 130, "src_code": 130, "sre": 213, "srepr": [210, 291], "sring": [211, 217, 218], "ss": [88, 211], "ss1": 143, "ss2": 143, "sss": 104, "sstr": [87, 204, 220], "sstrrepr": [116, 204, 220], "st": [9, 12, 89, 115, 190], "stab": 79, "stabil": [15, 27, 79, 84, 86, 92, 143, 244], "stabl": [3, 4, 5, 43, 46, 69, 88, 116, 124, 130, 132, 139, 143, 240, 252, 285], "stack": [30, 70, 105, 124, 157, 209, 215, 220, 249, 255, 292], "stackexchang": [5, 79, 98], "stacklevel": [3, 12, 249, 254, 256], "stackoverflow": [7, 11, 128, 258, 261], "stade": 113, "stage": [11, 41, 68, 87, 128, 227, 296], "stai": [43, 215], "stall": 215, "stand": [11, 15, 30, 87, 88, 152, 208, 209, 210, 211, 217], "standalon": [5, 30], "standard": [2, 5, 12, 13, 14, 15, 16, 33, 41, 43, 48, 52, 53, 55, 57, 69, 88, 92, 94, 96, 111, 113, 115, 116, 117, 118, 121, 124, 128, 129, 130, 131, 146, 167, 171, 199, 205, 207, 210, 211, 213, 220, 223, 228, 232, 233, 236, 239, 240, 242, 253, 259, 268, 273, 285, 288, 296], "standard_cartan": 117, "standard_transform": 130, "standardis": [79, 210], "stanford": 72, "star": [220, 238, 258], "starrett": 236, "start": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 22, 25, 26, 35, 36, 43, 54, 58, 59, 68, 69, 71, 72, 77, 78, 79, 80, 84, 87, 88, 89, 90, 96, 118, 120, 124, 127, 128, 129, 132, 134, 135, 136, 139, 185, 186, 189, 193, 206, 210, 213, 215, 216, 220, 223, 226, 228, 229, 230, 233, 236, 238, 239, 240, 241, 244, 251, 252, 258, 260, 261, 270, 284, 285, 288, 290, 298, 301], "start_point": [90, 303], "start_view": 220, "starter": 59, "startnumb": 236, "starts_with_un": 215, "startswith": 298, "stat": [2, 9, 275, 282], "stat317": 240, "state": [11, 12, 15, 18, 31, 39, 41, 55, 79, 86, 88, 96, 128, 131, 132, 134, 135, 143, 145, 148, 152, 153, 157, 162, 166, 167, 169, 170, 171, 173, 174, 175, 179, 182, 184, 185, 186, 187, 189, 190, 209, 216, 220, 229, 230, 232, 240, 255, 281, 292, 298, 301, 305], "state_map": 180, "state_spac": 240, "state_to_oper": 180, "state_var": [131, 134], "statebas": [180, 185, 188], "statement": [0, 4, 13, 22, 41, 42, 43, 59, 68, 69, 88, 96, 113, 118, 120, 169, 220, 240, 249, 253, 258], "statespac": 143, "static": [23, 41, 61, 69, 79, 80, 82, 88, 94, 101, 102, 103, 104, 120, 136, 150, 206, 220, 226, 228, 240, 252, 301], "staticmethod": [13, 251], "stationari": [67, 240, 298], "stationary_distribut": 240, "stationary_point": 67, "statist": [72, 89, 96, 240, 251, 290], "statu": [9, 11, 116], "statweb": 72, "std": [43, 69, 220, 240], "stderr": 69, "stdfactkb": 41, "stdin": [16, 254, 256], "stdlib": [13, 251], "stdout": [69, 71, 251], "steep": 238, "steer": [29, 301], "stefanu": 115, "stegun": [4, 96], "stein": [128, 236], "steinborn": 205, "steinhau": 258, "stem": 245, "step": [3, 8, 9, 18, 23, 25, 30, 31, 36, 43, 44, 46, 58, 67, 69, 79, 83, 84, 87, 88, 89, 96, 112, 113, 115, 124, 128, 129, 150, 152, 157, 192, 203, 205, 206, 209, 210, 211, 213, 215, 216, 220, 221, 222, 225, 228, 229, 230, 232, 233, 236, 238, 240, 245, 252, 258, 259, 286, 299, 304, 308], "step_response_numerical_data": 141, "step_response_plot": [46, 141], "stick": 60, "stieltj": [96, 220], "stieltjes_const": 96, "stieltjesgamma": 220, "stiff": [18, 30, 147, 298, 302], "stiffer": 18, "still": [2, 3, 4, 5, 12, 13, 14, 15, 16, 22, 36, 41, 43, 59, 60, 61, 68, 80, 87, 88, 89, 96, 100, 115, 124, 130, 131, 134, 190, 206, 207, 208, 209, 213, 215, 220, 227, 229, 230, 232, 236, 238, 239, 245, 251, 258, 271, 292], "stiller": 214, "stiller96": 214, "stimul": 18, "stinson": 80, "stirl": [5, 80, 93, 258], "stirling_numbers_of_the_first_kind": 93, "stirling_numbers_of_the_second_kind": 93, "stochast": 13, "stoke": 162, "stokes_paramet": 162, "stokes_vector": 162, "stop": [3, 8, 11, 14, 69, 70, 80, 88, 124, 128, 206, 226, 228, 236, 240], "stopiter": 233, "stopper": 291, "storag": [69, 88, 124, 184, 205, 213], "store": [9, 11, 13, 16, 22, 28, 35, 36, 41, 45, 68, 69, 78, 79, 88, 110, 112, 120, 124, 128, 130, 148, 152, 154, 157, 184, 190, 203, 206, 207, 209, 210, 215, 216, 217, 227, 230, 241, 244, 245, 253, 254, 255, 258, 269, 271, 291, 298], "stori": [12, 195], "stormi": 236, "stqq": 89, "str": [12, 13, 14, 15, 30, 43, 63, 68, 69, 70, 80, 88, 89, 90, 92, 97, 98, 101, 104, 105, 116, 118, 120, 124, 128, 130, 132, 134, 141, 148, 151, 152, 153, 154, 157, 174, 184, 190, 199, 201, 203, 206, 209, 211, 215, 220, 232, 236, 240, 256, 258, 259, 261, 264], "str_expr": 285, "str_printer": [116, 204], "strai": 22, "straight": [35, 104, 110, 141, 147, 155, 158, 236, 305], "straightforward": [5, 12, 14, 18, 43, 79, 89, 124, 230], "strain": 132, "strang": 210, "strategi": [12, 70, 88, 115, 213, 214, 227, 230, 232, 237], "strawberryperl": 8, "stream": [69, 89, 221, 232, 258], "strecker": 68, "strength": 210, "stress": 135, "stretch": [18, 147, 255], "strict": [13, 14, 15, 48, 79, 80, 88, 92, 93, 124, 130, 157, 213, 216, 220, 238, 239, 258, 261, 296], "stricter": 130, "strictgreaterthan": [42, 88, 220], "strictlessthan": [88, 220, 261], "strictli": [15, 16, 38, 40, 41, 65, 67, 88, 96, 124, 128, 143, 211, 213, 232, 238, 259], "stride": [69, 245], "string": [2, 3, 4, 5, 7, 11, 12, 15, 16, 21, 32, 33, 43, 61, 62, 68, 69, 72, 77, 88, 89, 90, 91, 92, 95, 101, 111, 116, 117, 118, 120, 124, 128, 130, 134, 135, 137, 139, 141, 148, 151, 152, 153, 154, 161, 170, 174, 184, 188, 192, 198, 199, 203, 204, 206, 209, 211, 215, 220, 221, 227, 232, 236, 240, 241, 244, 245, 246, 251, 252, 253, 258, 259, 261, 262, 264, 266, 268, 287, 288, 291, 295, 302], "string_input": 14, "string_of_lett": 190, "stringifi": [116, 204], "stringify_expr": 130, "stringpict": 220, "strip": [5, 12, 89, 115, 128, 213, 256, 261], "strip_whitepac": 12, "strip_zero": 211, "strive": 68, "strline": 261, "strong": [79, 84, 85, 86, 128, 129], "strong_gen": [79, 85, 86], "strong_gens_distr": [79, 86], "strong_present": 79, "strong_pseudoprim": 128, "stronger": 292, "strongli": [124, 134, 209, 258], "strongly_connected_compon": [124, 209, 258], "strongly_connected_components_decomposit": 124, "strprinter": [124, 204], "struct": [69, 205], "structr": [147, 155], "structur": [5, 13, 14, 15, 16, 18, 23, 38, 41, 43, 66, 68, 69, 76, 79, 80, 86, 88, 113, 115, 118, 124, 135, 136, 137, 139, 157, 188, 190, 206, 207, 209, 210, 213, 215, 216, 217, 232, 236, 238, 239, 240, 244, 245, 253, 255, 258, 259, 288, 296], "structure_theorem_for_finitely_generated_abelian_group": 76, "structureerror": 215, "struggl": [92, 219], "strzebonski": 216, "stub": 88, "student": [115, 229, 233, 240], "student_t": 240, "studentst": 240, "studentt": 240, "studi": [36, 70, 78, 87, 90, 124, 207, 213, 216, 233, 240], "stuff": [130, 206, 251, 253, 261], "sturm": [211, 216], "sturmian": 216, "sty": 220, "style": [6, 7, 8, 11, 68, 88, 116, 184, 204, 206, 220, 239, 295], "stylis": 220, "stylist": 12, "stzz": 89, "su": 246, "sub": [4, 12, 13, 14, 15, 16, 18, 21, 22, 27, 30, 37, 41, 42, 43, 46, 48, 51, 52, 54, 55, 69, 87, 88, 94, 96, 97, 98, 99, 100, 101, 102, 104, 115, 118, 120, 124, 128, 130, 135, 136, 143, 149, 187, 188, 193, 199, 205, 207, 209, 210, 211, 213, 216, 220, 227, 228, 232, 233, 236, 237, 238, 240, 251, 252, 254, 285, 286, 288, 301, 303, 305, 308, 309], "sub1": [149, 220], "sub2": [149, 220], "sub_dict": [21, 149, 301], "sub_ground": [211, 216], "subalgebra": 117, "subaugmentedassign": 69, "subcategori": [235, 275], "subclass": [13, 14, 15, 18, 41, 43, 63, 64, 69, 88, 95, 99, 101, 115, 118, 130, 131, 134, 147, 155, 157, 158, 159, 165, 174, 178, 179, 180, 185, 187, 188, 194, 206, 207, 209, 210, 211, 215, 216, 220, 240, 251, 252, 253, 256, 259, 264, 268, 291, 298], "subcompon": 220, "subdetermin": 213, "subdiagon": 124, "subdiagram": 68, "subdiagram_from_object": 68, "subdirectori": [8, 12, 45], "subdomain": 213, "subexponenti": 128, "subexpress": [14, 15, 21, 43, 69, 88, 94, 124, 149, 215, 216, 220, 227, 232, 239, 253, 259, 285], "subfactori": [93, 220, 258], "subgraph": 258, "subgroup": [71, 79, 80, 84, 86, 117, 128], "subgroup_search": 79, "subinterv": 115, "subject": [21, 31, 65, 88, 98, 104, 136, 215], "sublist": [67, 84, 89, 115, 187, 286], "submatric": [120, 124, 209, 240], "submatrix": [124, 209, 213, 240], "submiss": 7, "submit": [4, 11], "submodul": [0, 2, 3, 4, 11, 12, 14, 15, 21, 69, 207, 211, 213, 215], "submodule_from_gen": 215, "submodule_from_matrix": 215, "subnorm": [69, 79], "subobject": 220, "suboptim": [18, 230], "subpackag": [2, 275, 300], "subpart": 46, "subplot": [18, 135, 206, 298], "subprocess": [88, 220, 251, 252], "subquadrat": 214, "subquoti": 207, "subquotientmodul": 207, "subresult": [88, 211, 214, 216], "subresultants_qq_zz": 216, "subroutin": [69, 79, 186, 213], "subroutinecal": 69, "subs_dict": 139, "subs_point": 100, "subscheck": 236, "subscript": [51, 53, 80, 88, 130, 211, 220, 230, 233, 258], "subsect": [79, 271], "subsequ": [4, 11, 12, 16, 55, 88, 94, 199, 211, 213, 216, 255, 258, 268, 271], "subset": [5, 11, 12, 39, 41, 43, 48, 67, 68, 72, 75, 79, 80, 86, 93, 94, 100, 111, 113, 115, 117, 128, 153, 207, 209, 213, 215, 220, 228, 258, 276], "subset_from_bitlist": 83, "subset_indic": 83, "subspac": 215, "subsset": 227, "substack": 237, "substanti": [5, 129], "substep": 115, "substitut": [8, 14, 15, 16, 18, 22, 27, 39, 42, 48, 51, 55, 57, 69, 88, 89, 94, 96, 113, 115, 124, 129, 130, 135, 143, 152, 153, 179, 188, 190, 193, 199, 201, 203, 217, 218, 221, 222, 227, 230, 232, 233, 236, 237, 238, 239, 259, 267, 287, 288, 301, 305], "substitute_dummi": 190, "substitute_indic": 13, "substitution_ciph": 89, "substr": 261, "subsum": 96, "subsystem": [8, 220], "subtl": [43, 229], "subtleti": 113, "subtract": [16, 52, 61, 69, 80, 88, 92, 103, 128, 143, 151, 192, 208, 209, 210, 211, 213, 215, 216, 291, 296, 303], "subtre": [88, 220, 255], "subvector": 96, "subwiki": [76, 79], "subword_index": 78, "succ": [227, 240], "succe": [88, 113, 118, 128, 180, 215, 238], "success": [5, 8, 68, 79, 88, 96, 113, 115, 128, 151, 199, 207, 213, 215, 228, 229, 236, 239, 240, 258, 264, 266, 301], "successfulli": 215, "succinct": 88, "succinctli": 88, "sudo": [8, 9], "suetoniu": 89, "suffer": [4, 216], "suffic": [4, 208, 238], "suffici": [3, 4, 11, 18, 41, 68, 69, 79, 80, 84, 88, 124, 195, 211, 223, 227, 233, 236, 240, 255, 296], "suffix": [134, 216, 253], "suffix_express": 220, "sugar": [213, 214, 245], "suggest": [5, 7, 11, 13, 18, 22, 53, 70, 79, 115, 124, 128, 218, 292], "suit": [2, 3, 5, 11, 12, 41, 43, 52, 53, 68, 206, 216, 249, 251], "suitabl": [11, 18, 115, 120, 124, 130, 205, 208, 209, 210, 213, 215, 220, 230, 233, 236, 239, 241, 289], "suku": 115, "sukumar": 115, "sullivan": 258, "sum": [18, 25, 39, 41, 51, 69, 77, 80, 87, 88, 91, 93, 96, 101, 103, 111, 113, 115, 117, 118, 120, 124, 128, 130, 139, 154, 169, 173, 176, 184, 187, 189, 190, 205, 207, 208, 210, 211, 215, 216, 217, 220, 222, 223, 225, 227, 229, 230, 232, 233, 236, 238, 239, 240, 241, 242, 244, 246, 255, 258, 296, 298], "sum_": [69, 87, 88, 89, 93, 96, 113, 115, 120, 124, 128, 205, 216, 217, 222, 223, 230, 236, 240], "sum_0": 230, "sum_approx1": 69, "sum_approx2": 69, "sum_approx3": 69, "sum_domain": 210, "sum_i": [96, 227], "sum_k": 241, "sum_m": 241, "sum_of_four_squar": 233, "sum_of_pow": 233, "sum_of_squar": 233, "sum_of_three_squar": 233, "sumapprox": 69, "sumith": 0, "summand": [77, 215], "summar": [3, 11, 251, 296], "summari": [11, 251, 275, 303], "summat": [69, 87, 88, 92, 93, 96, 190, 214, 216, 220, 223, 232, 240, 241, 244, 245, 246, 252], "sunni": 240, "sup": [211, 216, 220, 228], "super": [69, 96, 211, 220, 264, 266, 298], "super_set": 83, "superclass": [13, 14, 15, 41, 87, 115, 120, 147, 211], "superdiagon": 124, "superfici": 88, "superflu": 113, "supergroup": 79, "superior": [3, 220], "superposit": [164, 175, 186, 207], "superposition_basi": 175, "superscript": [130, 143, 220], "superscriptminu": 220, "superscriptplu": 220, "supersed": [5, 22, 30], "superset": [30, 41, 67, 77, 83, 91, 210, 228, 238], "superset_s": 83, "supplant": 3, "supplement_a_subspac": 215, "supplementari": 0, "suppli": [16, 18, 25, 26, 28, 36, 54, 55, 67, 68, 69, 79, 80, 88, 90, 98, 102, 124, 128, 147, 148, 151, 152, 153, 154, 163, 190, 203, 206, 215, 217, 222, 229, 236, 252, 258, 259, 264, 266, 269, 298, 301, 305, 308], "support": [2, 3, 4, 5, 11, 13, 14, 15, 16, 18, 21, 22, 30, 35, 43, 54, 59, 61, 62, 63, 64, 67, 68, 69, 80, 88, 92, 95, 96, 98, 112, 115, 120, 124, 128, 129, 130, 134, 135, 136, 137, 139, 140, 143, 151, 185, 199, 206, 208, 209, 210, 211, 213, 215, 216, 217, 220, 225, 226, 227, 228, 232, 236, 237, 238, 239, 240, 241, 245, 249, 251, 252, 253, 259, 269, 271, 286, 288, 291, 295], "support_1": 137, "support_2": 137, "suppos": [12, 13, 14, 32, 42, 43, 80, 87, 88, 89, 113, 130, 207, 209, 213, 215, 216, 220, 227, 230, 236, 238, 249, 258, 269, 274, 288, 290, 296], "suppress": [88, 130, 249, 256], "supremum": [94, 228], "surd": 232, "sure": [3, 4, 5, 8, 9, 11, 12, 22, 43, 69, 79, 88, 100, 157, 170, 195, 206, 216, 217, 227, 236, 238, 239, 252, 258, 288, 291, 296], "surfac": [3, 18, 94, 96, 102, 113, 136, 151, 155, 158, 159, 163, 190, 206, 232, 264], "surface_color": 206, "surfacebaseseri": 206, "surfaceover2drangeseri": 206, "surject": 207, "surpris": [15, 41, 239], "surround": [5, 12, 88, 105, 163, 228, 261], "survei": 5, "surviv": 60, "susan": 72, "suspect": [88, 128], "suspend": 302, "suspens": 137, "sussman": 90, "sv": 9, "svg": [8, 35, 36, 45, 116, 204, 269, 305, 307], "sw": 101, "swap": [14, 79, 80, 81, 124, 170, 174, 183, 209, 240, 258], "swap_point": 170, "swapgat": 174, "swig": 252, "swing": 93, "swinnerton": 216, "swinnerton_dyer_poli": 216, "swiss": 216, "switch": [11, 13, 61, 79, 86, 115, 128, 143, 213, 216, 242], "sx": 84, "sy": [11, 22, 30, 59, 69, 90, 220, 251, 270, 288], "sylow": 79, "sylow_subgroup": 79, "sylvest": [128, 213], "sym": [51, 67, 78, 79, 84, 88, 93, 199, 220, 223, 228, 232, 233, 238, 240, 246, 258, 296, 298], "sym2": 246, "sym_expr": 130, "sym_i": 84, "symarrai": 124, "symb": [124, 220], "symb85": 232, "symb_2txt": 220, "symb_nam": 220, "symbol": [0, 2, 4, 5, 7, 11, 12, 15, 17, 18, 21, 22, 23, 28, 30, 32, 33, 35, 36, 37, 39, 44, 46, 47, 48, 49, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 78, 80, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 110, 111, 112, 113, 115, 116, 118, 120, 124, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 162, 163, 164, 165, 167, 169, 170, 172, 174, 176, 178, 179, 182, 185, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 230, 232, 233, 235, 236, 237, 238, 240, 241, 243, 244, 245, 246, 247, 252, 258, 259, 264, 266, 267, 269, 270, 271, 274, 281, 285, 286, 289, 291, 292, 295, 296, 297, 298, 301, 302, 303, 305, 306, 308, 309, 310], "symbol_nam": [88, 220], "symbol_t": 220, "symbolc": 41, "symbolic_complex": 48, "symbolic_expand": 48, "symbolicnumericalcomput": 214, "symbolicsystem": [23, 157], "symbolnam": 236, "symbologi": 220, "symbols_seq": 233, "symbols_to_declar": 220, "symfunc": [252, 259], "symmetr": [13, 28, 53, 65, 66, 70, 71, 76, 79, 80, 84, 104, 119, 120, 124, 128, 205, 211, 213, 216, 219, 228, 230, 246, 258], "symmetri": [4, 13, 71, 76, 81, 84, 96, 124, 169, 205, 236, 244, 246, 285, 296], "symmetric_differ": 228, "symmetric_group": 76, "symmetric_matrix": 65, "symmetric_poli": [211, 216], "symmetric_residu": 128, "symmetricdiffer": [220, 228, 239], "symmetricgroup": [76, 78, 79, 85, 86], "symmetrichandl": 65, "symmetricpred": 65, "symp": [88, 211], "sympfiabl": 298, "sympi": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 35, 36, 37, 41, 42, 43, 44, 46, 47, 48, 49, 51, 53, 54, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 269, 270, 272, 273, 274, 275, 279, 282, 284, 286, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310], "sympif": [13, 60, 88], "sympifi": [12, 14, 15, 16, 18, 28, 41, 42, 69, 92, 98, 118, 132, 163, 188, 190, 199, 200, 210, 211, 285, 291], "sympify": [98, 104, 135, 137, 139, 148, 154, 161, 164, 201], "sympifyerror": 88, "symplifi": [230, 232], "symposium": [70, 113, 213, 214, 230], "sympy_benchmark": 2, "sympy_cod": 22, "sympy_debug": [1, 115, 261], "sympy_deprecation_warn": [3, 249, 254, 256], "sympy_eqs_to_r": 218, "sympy_express": [69, 252], "sympy_gamma": 115, "sympy_ground_typ": [209, 210, 211], "sympy_htmldoc": 8, "sympy_integ": 220, "sympy_nam": 285, "sympy_obj": 14, "sympy_pars": [88, 130], "sympy_use_cach": 88, "sympydeprecationwarn": [3, 12, 13, 249, 251, 254, 256], "sympydoctestfind": 251, "sympydoctestrunn": 251, "sympyexpress": 130, "sympyfi": [200, 201, 203, 267, 298], "sympyifi": 16, "sympyoutputcheck": 251, "sympytestfil": 251, "sympytestresult": 251, "symsac": 214, "symsystem": 157, "symsystem1": 31, "symsystem2": 31, "symsystem3": 31, "sync": 9, "synonym": [98, 215], "syntact": 245, "syntax": [3, 4, 5, 11, 13, 14, 15, 16, 22, 30, 43, 55, 62, 64, 80, 88, 115, 130, 187, 206, 210, 219, 220, 232, 238, 242, 261, 286, 288, 290, 295, 297], "syntaxerror": [14, 16, 130], "synthesi": 89, "sys1": [46, 143], "sys2": [46, 143], "sys3": 46, "sys4": 46, "sys5": 46, "sys6": 46, "sysod": 236, "syst": 153, "system": [0, 1, 2, 5, 7, 8, 9, 13, 14, 15, 16, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 33, 35, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 53, 55, 62, 64, 79, 88, 89, 90, 94, 113, 116, 117, 118, 124, 129, 130, 131, 133, 134, 135, 139, 140, 142, 143, 147, 148, 150, 152, 153, 154, 155, 168, 169, 184, 187, 188, 190, 193, 197, 199, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 228, 229, 235, 239, 240, 251, 252, 264, 266, 267, 270, 272, 274, 279, 281, 288, 290, 292, 296, 297, 299, 300, 301, 302, 303, 304, 305, 308, 310], "system2": 267, "system_default_view": 220, "system_info": 236, "systemat": 219, "syzygy_modul": 207, "sz": 185, "szop": 185, "szupket": 185, "t": [0, 3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 18, 21, 22, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 42, 43, 46, 48, 55, 61, 64, 65, 67, 69, 70, 72, 79, 80, 81, 82, 84, 88, 89, 90, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 112, 113, 115, 117, 118, 119, 120, 124, 128, 129, 130, 131, 132, 134, 139, 143, 144, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 162, 164, 170, 174, 186, 188, 190, 192, 193, 195, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 223, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 246, 249, 251, 254, 258, 259, 264, 267, 269, 273, 285, 286, 290, 291, 292, 295, 296, 297, 298, 302, 305, 306], "t0": [18, 84, 298], "t1": [84, 104, 105, 128, 148, 154, 233, 240], "t2": [99, 104, 105, 128, 148, 154, 233, 240, 246], "t3": [105, 233], "t4": 233, "t5": 233, "t_": [18, 84, 93, 134], "t_0": [93, 233], "t_1": [79, 93, 233], "t_2": [79, 93, 233], "t_b": 28, "t_c": 84, "t_eval": [18, 55, 298], "t_m": 213, "t_n": [5, 93, 96, 115, 213, 216, 269], "t_p": 28, "t_r": [28, 79, 246], "t_t": 28, "ta": [144, 229], "tab": [8, 13, 16, 30, 84], "tab1": 84, "tabl": [4, 30, 41, 70, 79, 88, 93, 96, 109, 115, 124, 128, 151, 205, 215, 242], "table_of_": 128, "tableau": 13, "tableaux": 246, "tableform": [13, 238, 261], "tackl": [23, 150, 253], "tactic": 240, "tag": [12, 220, 238], "tail": [72, 87, 88, 211, 240], "tail_degre": 211, "tailor": 41, "tait": [151, 199, 264, 266], "take": [2, 3, 5, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 27, 30, 32, 35, 36, 39, 41, 42, 43, 50, 51, 52, 53, 55, 64, 67, 69, 70, 73, 78, 79, 83, 87, 88, 89, 90, 94, 96, 100, 101, 111, 115, 117, 118, 124, 128, 129, 130, 132, 134, 135, 137, 139, 143, 151, 152, 154, 157, 158, 159, 173, 176, 179, 180, 184, 186, 187, 188, 189, 190, 192, 195, 198, 199, 200, 201, 204, 206, 207, 208, 209, 210, 211, 213, 216, 217, 220, 223, 226, 227, 228, 229, 230, 232, 233, 236, 238, 239, 240, 242, 245, 251, 252, 254, 255, 258, 259, 264, 266, 267, 285, 286, 288, 290, 291, 292, 296, 298, 301], "taken": [3, 12, 14, 15, 21, 27, 30, 69, 70, 71, 76, 79, 86, 87, 88, 93, 94, 96, 105, 124, 128, 131, 132, 143, 145, 148, 187, 193, 199, 203, 205, 206, 210, 215, 216, 220, 223, 227, 229, 230, 239, 240, 245, 253, 258, 264], "takenouchi": 128, "talk": [5, 11, 12, 17, 58, 89, 207, 215, 268], "tamu": 214, "tan": [12, 27, 67, 88, 93, 94, 115, 130, 149, 217, 219, 220, 227, 229, 236, 239, 296, 308, 309, 310], "tandem": 252, "tangent": [18, 94, 98, 100, 104, 115, 131, 217, 236], "tangent_lin": 98, "tanh": [12, 18, 88, 92, 94, 115, 130, 131, 134, 217, 220, 232, 296, 298], "taocp": 258, "tap": 8, "tapestri": 207, "target": [3, 4, 14, 15, 67, 68, 69, 71, 88, 128, 147, 149, 170, 174, 175, 194, 229, 232, 235, 238, 239, 249, 252, 253, 256, 296], "target1": 174, "target2": 174, "target_fram": 147, "target_unit": 197, "tarjan": [240, 258], "task": [23, 24, 30, 44, 49, 58, 94, 150, 210, 215, 286, 293], "tau": [16, 69, 113, 115, 124, 215, 220, 236], "tau0": [124, 239, 240], "tau1": 124, "tau_": 18, "tau_a": [18, 131], "tau_a_muscl": 134, "tau_d": [18, 131], "tau_d_muscl": 134, "taught": [43, 115], "taus_zero": 124, "tausski": 215, "tautologi": 220, "taxicab": 103, "taxicab_dist": 103, "taxonomi": 79, "taylor": [22, 27, 30, 39, 88, 94, 211, 213, 216, 217, 227, 236], "taylor_term": [88, 94], "tb": [144, 229, 251], "tbanilorngnezl": 89, "tbinom": 130, "tc": [144, 211, 216, 229], "tcc": 253, "tchebychev": 5, "td": [88, 220, 295], "te": 163, "teach": [5, 80, 89, 93, 240], "teacher": 43, "teaching_aid": 240, "team": [0, 3, 11], "tear": 291, "technic": [5, 13, 14, 17, 30, 43, 58, 68, 88, 130, 176, 207, 236, 253, 258, 271, 288, 291], "techniqu": [48, 52, 53, 55, 70, 83, 113, 115, 216, 220, 222, 232, 236, 239, 286, 292], "technolog": 229, "techreport": 89, "tediou": [39, 115], "teeter": 207, "telephon": 96, "tell": [4, 5, 11, 41, 42, 48, 52, 55, 69, 80, 89, 92, 96, 124, 130, 157, 195, 210, 215, 219, 227, 230, 236, 252, 288], "temp": [69, 301], "tempa": 301, "tempb": 301, "tempc": 301, "tempdir": [69, 252], "temper": 33, "temperatur": [33, 192, 273], "tempfork": 301, "tempfram": 301, "templat": [11, 13, 258], "tempor": 164, "temporari": [11, 88, 252], "temporarili": 88, "tempt": [12, 14, 41, 43, 88, 128], "temptat": [3, 229, 296], "ten": [69, 129], "tend": [11, 18, 43, 60, 69, 88, 93, 147, 155, 213, 215, 225, 227, 230, 289, 296], "tendenc": 128, "tendon": [132, 134, 298, 299], "tendon_force_explicit": 134, "tendon_force_implicit": 134, "tendon_force_length": 132, "tendon_force_length_invers": 132, "tendon_slack_length": [18, 134], "tendonforcelengthdegroote2016": [18, 132, 134], "tendonforcelengthinversedegroote2016": [18, 132], "tenenbaum": 236, "tens": 5, "tensadd": [220, 246], "tensexpr": [13, 144, 246], "tensil": [137, 139], "tension": [18, 121, 137], "tension_at": 137, "tensmul": [220, 246], "tensor": [28, 32, 69, 75, 90, 124, 144, 154, 169, 175, 176, 177, 187, 190, 199, 220, 241, 242, 244, 245, 252, 259, 268, 269, 275, 276, 279, 281], "tensor_can": [84, 246], "tensor_funct": 96, "tensor_gen": 84, "tensor_head": [13, 144, 246], "tensor_inde_typ": 246, "tensor_index_typ": 246, "tensor_indic": [13, 144, 246], "tensor_product": 176, "tensor_product_simp": 189, "tensorcontract": [241, 242], "tensordiagon": [241, 242], "tensorflow": [2, 259], "tensorflow_cod": 2, "tensorhead": [246, 247], "tensori": [246, 247], "tensorindex": [13, 246], "tensorindextyp": [246, 247], "tensormanag": 246, "tensorpowerhilbertspac": 176, "tensorproduct": [90, 187, 189, 220, 241, 242], "tensorproducthilbertspac": 176, "tensorsymmetri": 246, "tensortyp": 246, "tensorvari": 220, "tenth": 132, "teo": 238, "term": [5, 12, 15, 16, 18, 23, 25, 27, 32, 33, 35, 39, 41, 43, 48, 51, 53, 55, 57, 69, 79, 88, 89, 90, 92, 93, 94, 96, 107, 111, 112, 113, 115, 118, 124, 128, 131, 136, 141, 143, 147, 149, 150, 152, 169, 174, 186, 187, 190, 192, 194, 195, 199, 201, 205, 207, 208, 209, 210, 211, 213, 215, 216, 217, 220, 222, 223, 225, 226, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 244, 245, 258, 264, 267, 271, 276, 286, 288, 290, 291, 296, 298, 301, 305, 308], "term_to_integ": 118, "termin": [7, 8, 9, 11, 79, 88, 94, 116, 128, 158, 204, 220, 227, 251, 295], "terminal_str": 220, "terminal_width": 220, "terminologi": [15, 49, 246], "termnam": 15, "terms_gcd": [88, 211, 216], "termwis": 216, "ternari": [51, 69, 88, 220, 233], "terrab": 236, "terrel": 0, "terri": 258, "terribl": 79, "test": [3, 4, 5, 6, 9, 10, 14, 15, 16, 18, 36, 40, 42, 43, 50, 51, 64, 65, 67, 68, 69, 75, 79, 80, 87, 88, 89, 93, 95, 98, 103, 113, 120, 124, 128, 157, 170, 179, 183, 184, 185, 193, 210, 211, 213, 215, 217, 228, 230, 233, 236, 237, 238, 239, 249, 252, 253, 254, 255, 256, 258, 259, 261, 275, 276, 283, 288, 290, 291], "test2": 185, "test_": [4, 11, 12, 251], "test_arg": 251, "test_as_leading_term": 12, "test_bas": [11, 251], "test_comb_factori": 12, "test_cos_seri": [11, 12], "test_custom_latex": 130, "test_deprecated_expr_free_symbol": 12, "test_derivative_numer": [13, 88], "test_draw": 68, "test_equ": 251, "test_expr": [12, 88], "test_factor": 215, "test_factorial_rewrit": 12, "test_failing_integr": 12, "test_formula": 230, "test_func": 12, "test_hyperexpand": 230, "test_hypothesi": 12, "test_issue_21177": 12, "test_kwarg": 251, "test_modular": 12, "test_od": 236, "test_optional_depend": 12, "test_pd": 237, "test_pickl": 2, "test_pretti": 12, "test_residu": 12, "test_rewrite1": 227, "test_sin_1_unevalu": 12, "test_sqrtdenest": [11, 12], "test_stacklevel": [12, 249], "test_symbol": 12, "test_tan": 12, "test_trigonometr": [11, 12], "test_upretty_sub_sup": 12, "testbook": 46, "tester": 251, "testmod": 251, "testrunn": 251, "testutil": [79, 85, 86], "tetrahedr": 81, "tetrahedron": [79, 81], "tex": 220, "texliv": [2, 8, 220], "text": [2, 3, 4, 5, 11, 12, 13, 15, 28, 43, 45, 59, 69, 79, 89, 93, 94, 96, 106, 113, 116, 124, 128, 130, 132, 195, 204, 205, 206, 207, 213, 220, 227, 233, 236, 239, 240, 251], "textbackend": 206, "textbook": 46, "textfil": 240, "textplot": 206, "textrm": [18, 35, 36, 131, 228], "texttt": [93, 228], "textual": 220, "textwrap": [190, 261], "tf": [18, 46, 143, 259, 298], "tf1": [46, 141, 143], "tf10": 143, "tf11": 143, "tf12": 143, "tf2": [46, 143], "tf3": 143, "tf4": 143, "tf5": 143, "tf6": 143, "tf7": 143, "tf8": 143, "tf9": 143, "tf_1": 143, "tf_10": 143, "tf_2": 143, "tf_3": 143, "tf_4": 143, "tf_5": 143, "tf_6": 143, "tf_7": 143, "tf_8": 143, "tf_9": 143, "tfinal": 22, "tfm": 143, "tfm1": 143, "tfm2": 143, "tfm3": 143, "tfm_1": 143, "tfm_10": 143, "tfm_11": 143, "tfm_12": 143, "tfm_2": 143, "tfm_3": 143, "tfm_4": 143, "tfm_5": 143, "tfm_6": 143, "tfm_7": 143, "tfm_8": 143, "tfm_9": 143, "tfm_a": 143, "tfm_b": 143, "tfm_c": 143, "tfm_feedback": 46, "tfrac": [96, 130, 236, 240], "tgamma": 220, "tgate": 174, "th": [43, 61, 70, 79, 80, 86, 89, 90, 92, 93, 94, 96, 117, 118, 124, 128, 152, 209, 211, 213, 215, 216, 222, 225, 230, 233, 236, 238, 240, 241, 246], "than": [2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 32, 36, 37, 39, 40, 41, 42, 43, 48, 50, 52, 53, 54, 55, 56, 57, 60, 61, 65, 69, 70, 71, 73, 79, 80, 81, 87, 88, 89, 92, 93, 94, 96, 97, 102, 103, 104, 106, 110, 113, 115, 117, 118, 120, 124, 125, 127, 128, 129, 130, 134, 139, 141, 143, 147, 152, 157, 164, 170, 184, 187, 188, 190, 205, 208, 209, 210, 211, 213, 216, 217, 218, 220, 223, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 247, 252, 253, 255, 258, 259, 261, 285, 286, 288, 289, 290, 291, 292, 294, 296, 300, 305, 308], "the_68_standard_colors_known_to_dvip": 116, "theano": [2, 13, 30, 295], "theano_cod": 13, "theanoprint": 13, "thei": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 25, 26, 27, 30, 31, 33, 36, 37, 41, 42, 43, 48, 53, 55, 56, 57, 59, 65, 68, 69, 70, 76, 78, 79, 80, 86, 87, 88, 89, 90, 93, 94, 96, 98, 101, 102, 103, 104, 105, 110, 113, 115, 116, 118, 120, 121, 124, 127, 128, 130, 131, 132, 135, 147, 148, 150, 152, 154, 157, 158, 164, 169, 174, 179, 182, 187, 192, 193, 195, 196, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 220, 221, 226, 227, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 246, 249, 251, 253, 255, 258, 259, 261, 264, 271, 273, 286, 288, 289, 290, 291, 292, 296, 298, 301, 309], "them": [2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 25, 27, 30, 32, 33, 35, 36, 38, 39, 41, 42, 43, 48, 51, 52, 53, 55, 57, 60, 63, 65, 68, 69, 77, 79, 80, 87, 88, 89, 90, 92, 93, 96, 99, 104, 106, 108, 110, 111, 113, 117, 118, 120, 124, 127, 128, 129, 131, 134, 135, 150, 152, 154, 157, 163, 167, 183, 184, 190, 192, 195, 198, 199, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 221, 227, 228, 229, 230, 232, 233, 236, 238, 239, 241, 242, 251, 253, 255, 258, 267, 285, 286, 288, 290, 291, 296, 298, 301, 303, 305], "theme": 290, "themselv": [2, 5, 12, 13, 14, 23, 24, 43, 65, 68, 80, 84, 86, 88, 115, 128, 150, 210, 211, 215, 226, 240, 246, 255, 258, 261, 296], "theor": 169, "theorem": [21, 32, 35, 46, 48, 57, 76, 89, 93, 96, 98, 104, 115, 124, 128, 146, 158, 190, 207, 210, 213, 227, 230, 233, 239, 301], "theoret": [41, 68, 70, 79, 89, 93, 214, 215, 230, 288], "theori": [22, 27, 29, 38, 43, 70, 71, 77, 78, 79, 80, 86, 88, 89, 93, 96, 117, 125, 152, 169, 187, 190, 199, 203, 209, 213, 214, 215, 219, 233, 255, 264, 282, 290], "theorist": 214, "therebi": 68, "therefor": [2, 3, 4, 12, 14, 18, 33, 36, 43, 48, 52, 70, 79, 84, 88, 92, 96, 101, 104, 117, 128, 131, 134, 143, 151, 205, 206, 210, 213, 216, 220, 236, 239, 240, 241, 246, 264, 266, 268, 269, 271, 273], "thereof": [69, 88, 207, 213, 215], "thesi": [79, 88, 227, 264], "thesis_drl": 209, "theta": [14, 16, 18, 31, 36, 61, 88, 90, 94, 96, 113, 116, 124, 130, 145, 157, 162, 199, 205, 211, 215, 220, 223, 228, 239, 240, 264, 266, 269, 271, 274], "theta1": [55, 305], "theta2": 55, "theta_1": 55, "theta_2": 55, "theta_dot": 157, "theta_oper": 14, "theta_pin": 13, "thetaset": 228, "thi": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 167, 169, 170, 171, 173, 174, 176, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 273, 275, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310], "thick": 163, "thieu": 236, "thilina": 0, "thilinaatsympi": 233, "thin": [63, 124, 159, 298, 307], "thing": [2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 21, 22, 27, 30, 35, 36, 41, 42, 43, 48, 50, 58, 65, 69, 78, 79, 80, 88, 90, 100, 116, 117, 118, 124, 129, 130, 174, 190, 195, 209, 217, 219, 227, 228, 229, 232, 236, 239, 244, 254, 256, 258, 285, 286, 288, 290, 291, 292, 295, 296, 298], "thingi": 69, "think": [4, 11, 12, 13, 15, 41, 42, 43, 52, 59, 67, 79, 195, 213, 255, 259, 288, 296, 301], "thinlen": 159, "third": [2, 3, 35, 37, 48, 61, 69, 79, 80, 88, 96, 98, 102, 124, 132, 143, 151, 157, 187, 193, 194, 208, 216, 230, 236, 239, 240, 242, 256, 258, 286, 291], "thirteen": 18, "thoma": [29, 93, 128], "thorough": [27, 233, 309], "those": [2, 4, 11, 12, 13, 14, 15, 16, 21, 24, 32, 35, 36, 37, 41, 42, 48, 52, 56, 57, 60, 65, 68, 69, 70, 71, 79, 80, 86, 87, 88, 89, 92, 101, 102, 113, 115, 118, 124, 127, 128, 133, 139, 151, 152, 157, 163, 187, 201, 204, 206, 209, 210, 211, 213, 215, 216, 218, 219, 220, 226, 228, 232, 236, 237, 238, 239, 240, 246, 249, 251, 255, 258, 264, 267, 288, 290, 296, 301, 303, 309], "though": [4, 11, 14, 15, 16, 21, 25, 27, 32, 35, 36, 41, 42, 43, 48, 54, 55, 56, 57, 60, 70, 88, 89, 90, 93, 100, 104, 113, 115, 124, 128, 152, 185, 194, 199, 208, 210, 211, 216, 217, 229, 230, 232, 236, 237, 238, 239, 251, 271, 286, 291, 296, 301], "thought": [4, 12, 14, 15, 88, 227, 236, 288, 291], "thousand": [92, 128, 285], "thread": 254, "threaded_factori": 254, "three": [3, 14, 15, 16, 18, 35, 36, 37, 39, 41, 43, 55, 56, 61, 65, 69, 79, 80, 81, 84, 88, 89, 93, 96, 98, 102, 103, 104, 113, 117, 118, 128, 131, 135, 136, 151, 155, 157, 163, 185, 187, 192, 199, 203, 205, 206, 207, 208, 211, 213, 216, 220, 230, 232, 233, 238, 239, 240, 251, 264, 266, 271, 274, 288, 291, 296, 298, 303, 307, 308, 309], "threshold": [69, 128], "through": [0, 3, 4, 7, 8, 13, 14, 15, 16, 18, 22, 23, 28, 41, 43, 48, 52, 53, 55, 57, 59, 67, 69, 79, 80, 82, 87, 88, 89, 92, 93, 96, 98, 99, 100, 101, 102, 104, 113, 117, 118, 124, 128, 131, 135, 136, 137, 141, 147, 148, 150, 152, 155, 158, 161, 162, 199, 207, 213, 215, 220, 226, 230, 232, 236, 238, 239, 240, 241, 252, 258, 264, 266, 271, 274, 286, 287, 288, 289, 294, 298, 300, 301, 304], "throughout": [14, 15, 18, 113, 118, 209, 213, 223, 239, 273, 288], "throw": [22, 69, 124, 130, 209, 215, 233, 239], "throwawai": 60, "thrown": [69, 155, 220], "thu": [2, 3, 11, 13, 15, 16, 18, 23, 27, 39, 50, 52, 53, 55, 65, 73, 79, 80, 88, 89, 90, 94, 96, 111, 113, 115, 121, 124, 127, 128, 144, 150, 152, 153, 157, 195, 199, 208, 213, 215, 217, 221, 227, 230, 232, 253, 258, 259, 269, 270, 288, 291, 296, 297, 305], "thue": 233, "thumb": [5, 14, 118, 258], "ti": [77, 80, 88, 128], "ticket": 59, "tid": 246, "tidi": 124, "tie": [88, 258], "tight": 69, "tight_layout": 298, "tikz": 68, "tild": [18, 88, 94, 132, 134, 241], "till": [22, 88, 135, 136, 236], "tilt": 162, "tim": [128, 258], "time": [2, 3, 5, 7, 8, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 46, 48, 55, 57, 60, 64, 65, 69, 71, 79, 80, 84, 88, 89, 93, 96, 111, 113, 118, 124, 125, 127, 128, 129, 130, 131, 134, 139, 140, 141, 143, 147, 150, 152, 153, 155, 157, 164, 174, 179, 187, 188, 192, 193, 194, 195, 196, 199, 201, 202, 203, 204, 205, 207, 209, 210, 213, 214, 215, 216, 217, 219, 220, 227, 228, 229, 230, 232, 236, 238, 240, 249, 251, 252, 257, 258, 259, 271, 273, 283, 286, 290, 291, 292, 298, 301, 303, 305, 308, 309], "time_bal": 251, "time_deriv": [33, 199, 201], "time_derivatives_in_the_two_fram": 201, "time_markov_chain": 240, "time_period": 164, "timedepbra": 188, "timedepket": 188, "timedepst": 188, "timeit": [69, 217], "timeout": 251, "timestamp": 13, "timeutil": 263, "timevalue1": 203, "timevalue2": 203, "tina": 30, "tini": [69, 88, 211], "tinyurl": 93, "tion_constraint": 30, "tip": [4, 7, 8, 12, 27, 88, 236, 237, 296], "tissu": 18, "titl": [0, 4, 5, 55, 206], "titu": 233, "tlmzebyvzgzinb": 89, "tm": [65, 163], "tmp": 69, "tmpfile": 13, "tmz": 65, "tn": 88, "to_alg_num": [211, 215], "to_algebraic_integ": 88, "to_ancestor": 215, "to_anf": 118, "to_anp": 215, "to_axis_angl": 61, "to_best": 211, "to_cnf": 118, "to_col": 215, "to_ddm": 209, "to_dens": 209, "to_dfm": 209, "to_dfm_or_ddm": 209, "to_dict": 211, "to_dm": 209, "to_dnf": 118, "to_dod": 209, "to_dok": 209, "to_domain": 213, "to_eul": 61, "to_exact": [211, 216], "to_expr": [46, 110, 111, 112, 143], "to_field": [209, 211, 216], "to_fil": [69, 253], "to_flat_nz": 209, "to_hyp": 110, "to_int": 211, "to_int_repr": 118, "to_linear": [27, 152], "to_list": [13, 88, 209, 211], "to_list_flat": 209, "to_load": [18, 147, 155, 298, 302], "to_matrix": [28, 32, 36, 61, 148, 151, 154, 199, 209, 215, 264, 267, 269, 298], "to_meijerg": 110, "to_nnf": 118, "to_number_field": [88, 215], "to_par": 215, "to_primitive_el": 88, "to_pruf": 82, "to_r": [211, 216], "to_rat": 211, "to_root": 88, "to_rotation_matrix": 61, "to_sdm": 209, "to_sequ": 110, "to_si": 90, "to_spars": 209, "to_sympi": [209, 210, 211], "to_sympy_dict": 211, "to_sympy_list": 211, "to_tre": 82, "to_tupl": 211, "todai": [43, 207], "todo": [12, 124, 168, 170, 174, 175, 179, 180, 182, 183, 184, 185, 186, 213, 220, 227, 245], "todod": [124, 209], "todok": [13, 124], "togeth": [13, 15, 23, 36, 39, 69, 79, 88, 92, 117, 124, 128, 132, 135, 143, 147, 150, 176, 187, 195, 207, 211, 213, 215, 216, 219, 220, 232, 236, 238, 240, 251, 252, 258, 290, 296, 298], "toggl": [128, 206], "token": [69, 113, 116, 130], "tol": [69, 88, 211], "told": [8, 11], "toler": [54, 69, 88, 92, 211, 232, 238], "tolist": [124, 241], "tomatrix": 241, "tomfooleri": 251, "tone": 4, "too": [4, 7, 11, 12, 16, 18, 25, 43, 45, 57, 79, 80, 88, 94, 96, 98, 101, 103, 113, 118, 127, 128, 129, 132, 152, 159, 227, 228, 232, 233, 236, 238, 239, 240, 251, 252, 267, 268], "took": [11, 217, 229], "tool": [5, 8, 9, 11, 12, 15, 18, 30, 36, 43, 79, 116, 122, 124, 129, 143, 157, 207, 212, 213, 220, 252, 258, 263, 272, 279], "toolset": 207, "top": [3, 4, 5, 12, 13, 14, 15, 50, 69, 87, 88, 89, 104, 105, 115, 118, 124, 135, 136, 151, 157, 185, 192, 210, 220, 230, 236, 253, 254, 259, 274, 291], "top_fac": 274, "toper": 247, "topic": [7, 17, 20, 23, 28, 34, 35, 36, 44, 58, 69, 205, 207, 209, 210, 215, 239, 288, 293], "topmost": 255, "topolog": [69, 88, 90, 209, 258], "topologi": [113, 228], "topological_sort": [69, 258], "toronto": 128, "torqu": [18, 25, 26, 28, 30, 135, 147, 148, 152, 154, 157, 298, 302, 306], "torque1": 148, "torque_a": 30, "torqueactu": [147, 306], "torsion": [135, 298], "torsional_mo": 135, "toss": 240, "total": [11, 25, 57, 70, 77, 79, 88, 93, 104, 117, 118, 120, 124, 159, 163, 169, 174, 187, 196, 205, 211, 213, 216, 229, 232, 236, 244, 246, 274, 301, 305], "total_degre": [211, 216, 233], "totient": [13, 89, 93, 128], "totientfunct": [93, 128], "totientrang": 128, "totter": 207, "touch": [18, 104, 229, 301], "tough": 236, "tournier": 214, "toward": [37, 69, 88, 96, 147, 207, 227, 239, 298], "tp": [90, 162, 189, 211, 242], "tp1": 90, "tpu": [2, 129], "tr": [13, 70, 79, 220, 229], "tr0": 229, "tr1": 229, "tr10": 229, "tr10i": 229, "tr11": 229, "tr111": 229, "tr12": 229, "tr12i": 229, "tr13": 229, "tr14": 229, "tr15": 229, "tr16": 229, "tr2": 229, "tr22": 229, "tr2i": 229, "tr3": 229, "tr4": 229, "tr5": 229, "tr6": 229, "tr7": 229, "tr8": 229, "tr9": 229, "trace": [30, 84, 120, 124, 144, 213, 220, 240, 241, 242, 244, 258, 292], "traceback": [12, 13, 14, 16, 38, 41, 42, 43, 48, 50, 52, 53, 54, 55, 56, 57, 62, 63, 64, 69, 70, 80, 88, 89, 92, 98, 115, 118, 119, 120, 121, 124, 126, 127, 130, 143, 205, 207, 209, 210, 211, 213, 216, 219, 227, 228, 236, 238, 239, 249, 251, 252, 254, 256, 258, 259, 261, 288, 292], "track": [7, 9, 11, 13, 16, 24, 32, 36, 79, 88, 92, 96, 157, 174, 209, 227, 246, 286], "tracker": [7, 11, 12, 67, 228, 239, 292], "tractabl": [53, 239], "tradeoff": 292, "tradition": [89, 96], "trafo": 87, "trager": [115, 213, 214], "trager76": [213, 214], "trail": [4, 12, 80, 88, 128, 211, 213, 216, 256, 261], "trailpap": 301, "train": 36, "traint": 30, "trait": 211, "traj": 298, "trajectori": [23, 150, 298], "tran": 89, "trans_prob": 240, "transact": [115, 214], "transcedent": 65, "transcend": 96, "transcendent": [11, 41, 52, 56, 57, 65, 88, 96, 115, 210, 215, 216, 220, 238, 239, 292, 297], "transcendental_numb": [41, 88], "transcendentalpred": 65, "transfer": [8, 46, 140, 141, 143, 159, 239], "transfer_funct": 143, "transferfunct": [46, 140, 141, 143], "transferfunctionmatrix": [46, 140, 143], "transform": [13, 14, 15, 24, 57, 61, 66, 69, 84, 87, 88, 89, 90, 92, 93, 96, 103, 120, 124, 141, 143, 151, 162, 183, 185, 187, 192, 205, 208, 209, 211, 213, 215, 216, 222, 227, 228, 229, 232, 233, 235, 236, 237, 238, 239, 240, 242, 245, 253, 259, 264, 271, 290, 301], "transform_vari": 115, "transformation_from_par": 264, "transformation_to_dn": 233, "transformation_to_norm": 233, "transformation_to_par": 264, "transformtosympyexpr": 130, "transient": 240, "transit": [30, 71, 79, 213, 240], "transition_prob": 240, "transitionmatrixof": 240, "transitivity_degre": 79, "translat": [2, 13, 24, 28, 35, 69, 79, 88, 97, 99, 103, 105, 129, 130, 143, 146, 148, 151, 152, 157, 206, 220, 236, 238, 252, 253, 259, 261, 269, 308, 310], "translation_coordin": 151, "translation_spe": 151, "transliter": 5, "transmiss": [137, 162, 163], "transmissive_filt": 162, "transmit": [18, 162, 163], "transmitt": 162, "transmitted_port": 162, "transmitted_pow": 162, "transpar": [113, 116, 204], "transport": 90, "transpos": [30, 36, 65, 68, 120, 124, 143, 173, 199, 209, 215, 233, 241, 246, 247, 292], "transposit": [76, 79, 80, 89, 120, 124, 242], "transposition_": 80, "transvers": [79, 84, 86, 137, 163, 164], "transversals_onli": 86, "transverse_magnif": 163, "trapezoid": [115, 124, 240], "trapezoidal_distribut": 240, "traub": [213, 214], "travel": [33, 161, 164, 271, 273], "travers": [14, 48, 104, 128, 130, 149, 216, 229, 245, 255, 291], "travi": 236, "treat": [13, 14, 15, 18, 22, 33, 41, 42, 43, 51, 55, 56, 61, 78, 79, 86, 88, 93, 96, 103, 104, 124, 130, 134, 163, 199, 208, 210, 211, 213, 215, 216, 217, 219, 220, 227, 228, 230, 232, 233, 236, 238, 244, 252, 255, 271, 288, 292], "treatment": [39, 113, 216], "tree": [1, 7, 13, 15, 22, 38, 79, 82, 88, 130, 149, 182, 185, 199, 216, 227, 229, 232, 239, 242, 244, 255, 258, 261, 287], "tree_cs": 232, "tree_repr": 82, "tri": [13, 14, 15, 16, 18, 27, 41, 50, 52, 55, 68, 88, 96, 104, 113, 115, 185, 207, 208, 215, 220, 222, 232, 236, 237, 239, 251, 288, 296, 298, 301], "trial": [88, 128, 213, 225, 229, 236, 240], "triangl": [4, 43, 68, 93, 99, 100, 104, 105, 115, 124, 128, 158, 205, 206, 267, 274], "triangular": [53, 65, 71, 119, 124, 209, 215, 238, 240, 274], "triangular_distribut": 240, "triangular_matrix": 65, "triangulardistribut": 240, "triangularhandl": 65, "triangularpred": 65, "tribonacci": [88, 93], "tribonacci_numb": [88, 93], "tribonacciconst": 88, "tribonaccinumb": 93, "triceps_activ": 298, "triceps_pathwai": 298, "trick": [12, 13, 15, 16, 84, 230, 246], "tricki": [8, 88, 113], "trig": [43, 88, 115, 216, 220, 229, 232, 296], "trig5": 229, "trigamma": [4, 96, 220], "trigamma_funct": 96, "trigammafunct": 96, "trigexpand": 113, "trigger": [3, 12, 43, 80, 130, 190, 249], "trigintegr": 115, "trigonometr": [4, 14, 43, 50, 57, 88, 115, 130, 217, 223, 231, 232, 235, 236, 239, 259, 276, 287, 297], "trigonometri": [18, 115], "trigonometric_and_hyperbolic_solut": 216, "trigonometric_funct": 94, "trigonometric_integr": 96, "trigonometricfunct": 43, "trigonometryangl": 94, "trigsimp": [12, 14, 16, 22, 61, 88, 124, 151, 199, 229, 232, 268, 309], "trigsimp_groebn": 232, "trim": [27, 80], "tripl": [4, 11, 36, 51, 105, 124, 130, 205, 207, 211, 215, 261], "trivari": 115, "trivial": [3, 14, 25, 70, 79, 84, 87, 88, 89, 94, 103, 118, 120, 124, 128, 190, 207, 208, 213, 216, 230, 233, 236, 239, 244], "trmorri": 229, "trobmvenbgbalv": 89, "trotter": 80, "troubl": [43, 96], "troubleshoot": [4, 9, 27], "trpower": 229, "true": [1, 2, 4, 12, 13, 14, 15, 16, 18, 21, 22, 30, 32, 33, 36, 37, 38, 41, 42, 43, 46, 48, 50, 51, 52, 53, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 113, 115, 116, 118, 119, 120, 123, 124, 125, 128, 130, 132, 134, 135, 136, 141, 143, 144, 145, 146, 149, 151, 152, 153, 154, 155, 157, 158, 161, 162, 171, 174, 175, 182, 184, 185, 188, 189, 190, 193, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 249, 251, 252, 253, 254, 256, 258, 259, 261, 264, 267, 268, 269, 270, 271, 274, 285, 286, 288, 290, 291, 292, 295, 296, 297, 298, 305, 306], "truli": [88, 96, 195], "trunc": [211, 216, 219], "truncat": [39, 80, 88, 124, 128, 136, 195, 206, 217, 219, 222, 223], "truss": 281, "truth": [12, 14, 42, 62, 63, 64, 65, 66, 88, 124, 232], "truth_maintenance_system": 64, "truth_tabl": 118, "truthi": 12, "truthvalu": 118, "try": [4, 5, 11, 12, 13, 14, 15, 16, 41, 42, 43, 48, 50, 51, 54, 55, 57, 80, 87, 88, 92, 96, 98, 103, 113, 115, 118, 120, 124, 127, 128, 130, 157, 180, 182, 189, 190, 206, 210, 211, 215, 220, 225, 227, 228, 229, 230, 232, 233, 236, 238, 258, 259, 261, 285, 288, 291, 296], "try_block_diag": 124, "trysolv": 236, "tschirnhausen": 215, "tsolv": 239, "tube": 151, "tube_fram": 151, "tune": [9, 18, 92, 116, 204, 220, 298], "tupl": [14, 15, 17, 25, 26, 28, 30, 36, 43, 51, 54, 55, 56, 61, 63, 64, 67, 68, 69, 70, 79, 80, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 110, 113, 115, 124, 127, 128, 130, 135, 136, 137, 139, 141, 147, 148, 151, 152, 154, 155, 157, 159, 174, 175, 176, 179, 184, 187, 188, 189, 190, 199, 203, 206, 207, 209, 210, 211, 213, 217, 218, 220, 221, 222, 226, 228, 232, 233, 236, 237, 238, 239, 240, 241, 245, 246, 251, 252, 253, 254, 258, 259, 261, 264, 268, 286, 291, 292, 295], "tuple_count": 88, "tuplekind": [88, 123, 228], "turn": [5, 13, 15, 18, 25, 33, 41, 57, 69, 88, 94, 96, 103, 113, 121, 151, 207, 215, 216, 217, 220, 227, 228, 230, 232, 233, 236, 251, 258, 273, 288, 290, 309], "turner": 209, "tushar": 214, "tutori": [5, 7, 8, 9, 11, 12, 14, 15, 16, 18, 22, 27, 30, 39, 40, 59, 104, 208, 219, 220, 236, 259, 288, 291, 293, 294, 295, 296, 297, 298], "twave": 164, "tweak": [54, 130, 220, 238], "tweflth": 132, "twelv": 18, "twice": [3, 16, 35, 69, 88, 90, 102, 128, 199, 201, 216, 220, 255, 256, 264, 266, 286], "twin": 128, "twist": 113, "two": [2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 18, 21, 23, 24, 25, 27, 28, 32, 33, 35, 36, 37, 39, 41, 42, 43, 48, 50, 52, 55, 56, 61, 67, 68, 69, 70, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 113, 115, 117, 118, 120, 124, 128, 129, 130, 132, 134, 135, 136, 137, 139, 140, 143, 144, 147, 148, 150, 151, 152, 155, 158, 162, 163, 164, 169, 170, 174, 176, 179, 180, 185, 186, 187, 188, 189, 190, 192, 194, 195, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 221, 222, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 245, 255, 258, 259, 264, 267, 269, 270, 271, 273, 285, 286, 289, 291, 292, 296, 298, 303, 309], "two_qubit_box": 170, "twofold": 230, "twoform": 90, "twoform_to_matrix": 90, "twoqubitg": 174, "tx": [113, 294], "txt": [8, 9, 220], "ty": 30, "typ": 246, "type": [4, 7, 9, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 30, 36, 38, 41, 42, 43, 46, 49, 51, 52, 57, 63, 64, 67, 71, 79, 80, 84, 87, 88, 89, 90, 91, 92, 94, 98, 99, 100, 101, 102, 103, 106, 113, 115, 116, 117, 118, 119, 120, 124, 128, 129, 130, 131, 133, 134, 135, 136, 139, 141, 143, 147, 151, 152, 155, 158, 162, 176, 184, 185, 186, 188, 194, 199, 203, 204, 206, 207, 209, 210, 211, 214, 215, 216, 217, 218, 220, 221, 222, 228, 229, 230, 232, 233, 235, 236, 238, 244, 245, 246, 249, 251, 252, 253, 258, 259, 261, 268, 271, 274, 286, 288, 290, 291, 292, 295, 296, 297, 299], "type1": 236, "type2": 236, "type3": 236, "type4": 236, "type5": 236, "type6": 236, "type_": 117, "type_a": 117, "type_alias": [69, 220], "type_b": 117, "type_c": 117, "type_d": 117, "type_f": 117, "type_g": 117, "type_map": 220, "type_of_equ": 236, "typea": 117, "typeb": 117, "typec": 117, "typeerror": [12, 13, 14, 16, 42, 43, 52, 55, 62, 63, 64, 80, 88, 98, 103, 118, 119, 121, 126, 143, 164, 210, 211, 227, 228, 252, 259], "typef": 117, "typefunct": [4, 96], "typeg": 117, "typeinfo": 88, "typeset": [87, 220], "typevar": 209, "typic": [2, 3, 12, 13, 14, 15, 18, 28, 36, 43, 84, 94, 113, 128, 133, 143, 148, 154, 206, 208, 213, 216, 217, 230, 252, 253, 269], "typo": [11, 14, 230], "typograph": 130, "tz": 143, "u": [0, 8, 9, 16, 18, 22, 23, 24, 25, 27, 30, 31, 32, 33, 35, 39, 41, 42, 43, 46, 52, 61, 67, 68, 69, 79, 84, 87, 88, 89, 91, 102, 105, 110, 113, 115, 120, 124, 128, 134, 147, 148, 150, 151, 152, 153, 157, 162, 163, 174, 179, 185, 195, 199, 203, 205, 206, 207, 208, 209, 213, 215, 216, 219, 220, 227, 230, 232, 233, 236, 237, 238, 239, 240, 245, 259, 271, 288, 290, 291, 292, 298, 301, 305, 308], "u03b8": 116, "u0_": 151, "u0_c1": 151, "u0_c2": 151, "u0_pc": 151, "u0child": 151, "u1": [22, 25, 27, 30, 35, 79, 128, 151, 199, 201, 203, 204, 236, 298, 301, 303, 305, 306, 308, 309], "u1_": 151, "u1_c1": 151, "u1_pc": 151, "u1d": [22, 25, 301, 305, 308, 309], "u2": [22, 25, 30, 35, 79, 127, 128, 151, 199, 203, 236, 298, 301, 303, 305, 306, 308, 309], "u2_": 151, "u2_pc": 151, "u2d": [22, 25, 301, 305, 308, 309], "u3": [22, 25, 30, 35, 199, 203, 298, 301, 303, 306, 308, 309], "u3d": [301, 308, 309], "u4": [25, 30, 298, 301, 309], "u4d": 301, "u5": [301, 309], "u5d": 301, "u6": [301, 309], "u6d": 301, "u_": [13, 124, 151, 298], "u_0": 213, "u_1": [35, 215, 233, 236, 298, 303, 305, 306], "u_1v_1": 233, "u_2": [35, 215, 233, 236, 298, 303, 305, 306], "u_3": [35, 298, 303, 306], "u_4": 298, "u_arm": 298, "u_aug": 124, "u_aux": [157, 303], "u_auxilia": 30, "u_auxiliari": [25, 30, 152, 309], "u_d": [30, 153], "u_dep": [25, 157, 303], "u_depend": [25, 30, 152, 298, 301, 305], "u_fram": 151, "u_func": 115, "u_i": [27, 35, 153, 213], "u_ind": [22, 25, 27, 30, 152, 153, 157, 301, 303, 305, 308, 309], "u_j": [13, 215], "u_j1": 151, "u_n": [96, 115, 213, 215, 216], "u_op": [153, 305], "u_p1": 151, "u_p2": 151, "u_pc": 151, "u_pin": 157, "u_slid": 157, "u_val": 298, "u_var": 115, "u_x": 35, "ua": 208, "uaux1": 303, "uaux2": 303, "ub": 255, "ubuntu": 220, "ubv": 124, "ucdavi": 115, "uchicago": 240, "uci": 128, "uconn": [79, 240], "ucr": 11, "ud": [25, 152, 298], "ud_op": [153, 305], "udel": 124, "udivisor": [93, 128], "udivisor_count": [93, 128], "udivisor_sigma": [13, 93, 128], "udl": 120, "udldecomposit": 120, "udot": [152, 301], "ueber": 215, "ueqdueodoctcwq": 89, "uexpr": 291, "uf": 213, "ufunc": [14, 69, 129, 252, 259], "ufuncifi": [2, 69, 252], "ufuncifycodewrapp": 252, "ugat": 174, "ugli": 220, "ui": [11, 115, 128, 237], "uiki": 89, "uint16": 69, "uint32": 69, "uint64": 69, "uint8": 69, "ukrain": 214, "ultim": [11, 43, 94, 195, 213], "umontr": [93, 128], "un": [229, 230], "unabl": [69, 101, 105, 130, 134, 238, 264, 285, 286], "unaffect": [88, 239], "unambigu": [37, 220, 236, 261], "unansw": [21, 32], "unappropri": 90, "unavoid": 195, "unbound": [18, 88, 238, 245], "unbound_theta": 206, "unboundedlperror": 238, "unbranch": [96, 113], "unbreak": 89, "uncertainti": [92, 195], "unchang": [3, 13, 15, 43, 79, 80, 88, 115, 124, 143, 194, 209, 216, 220, 226, 229, 232, 239, 285], "unclear": [11, 13, 21, 41], "uncommon": [12, 69], "uncondition": [3, 12], "unconstrain": 238, "uncontract": 247, "uncount": 239, "uncoupl": [169, 187], "undecid": [41, 43, 52, 124, 210, 239, 292], "undecor": 88, "undefin": [12, 14, 15, 36, 43, 52, 55, 63, 64, 67, 88, 94, 95, 96, 115, 120, 130, 148, 158, 215, 226, 227, 230, 259, 286, 297], "undefinedfunct": [88, 201, 220, 252, 259], "undefinedkind": [88, 123, 228], "undefinedpred": [63, 64], "under": [2, 3, 4, 8, 11, 12, 15, 16, 18, 41, 42, 63, 64, 66, 67, 69, 70, 78, 79, 84, 86, 96, 106, 113, 115, 117, 118, 124, 128, 130, 132, 135, 136, 159, 185, 205, 207, 208, 215, 216, 220, 227, 228, 230, 233, 236, 238, 239, 240, 246, 249, 290, 296, 298], "underbrac": [35, 195], "underdetermin": [124, 209, 238, 239], "underevalu": 292, "undergo": [7, 134, 163], "undergon": [36, 239], "underli": [12, 15, 22, 69, 80, 86, 88, 117, 124, 141, 185, 198, 209, 216, 238, 239, 240], "underlin": [4, 5], "underscor": [3, 4, 12, 13, 88, 124, 236, 246, 254], "understand": [4, 11, 12, 16, 22, 23, 25, 26, 30, 35, 41, 42, 43, 57, 88, 89, 113, 150, 195, 206, 209, 210, 215, 220, 230, 233, 252, 259, 287, 288, 295, 296], "understood": [80, 128, 195, 207, 211, 216], "undertak": 296, "undertermin": 216, "undertest": 292, "undescript": 11, "undesir": [21, 22, 27, 88, 208, 211, 230], "undetermin": [37, 88, 124, 216, 222, 236, 238], "undetermined_coeffici": 236, "undirect": [117, 258], "undo": [14, 230, 296], "undon": [213, 296], "unequ": [14, 15, 37, 88, 135, 220], "unevalu": [12, 13, 14, 15, 41, 42, 43, 46, 63, 64, 67, 80, 87, 88, 94, 96, 105, 115, 128, 143, 167, 171, 178, 179, 190, 216, 219, 227, 228, 232, 236, 238, 239, 240, 241, 286, 290, 291, 297], "unevaluat": 236, "unevaluatedexpr": [15, 88, 220, 291], "unexpand": [88, 210, 219, 229, 252], "unexpect": [12, 14, 88, 251], "unexpectedeof": 130, "unexplain": 68, "unfactor": 209, "unfair": 240, "unflatten": 258, "unfortun": [90, 92, 129, 219, 233], "unhash": 258, "unhind": 236, "uni": [68, 115, 258], "unicod": [11, 12, 96, 116, 124, 204, 220, 251, 290], "unifi": [31, 88, 209, 211, 213, 215, 216, 228], "unificationfail": [213, 215], "uniform": [99, 157, 206, 238, 240], "uniform_distribution_": 240, "uniform_sum_distribut": 240, "uniformdistribut": 240, "uniformli": [13, 39, 79, 104, 105, 128, 135, 137, 141, 206, 254], "uniformsum": 240, "uniformsumdistribut": 240, "unify_anp": 211, "unify_composit": 211, "unify_dmp": 211, "unimod": 240, "unimport": 5, "unintegr": 55, "uninterest": 213, "union": [51, 60, 65, 67, 69, 77, 79, 86, 118, 207, 215, 220, 226, 227, 228, 235, 239, 258], "union_": 228, "union_find": 79, "uniq": 258, "uniqu": [3, 13, 15, 18, 36, 67, 68, 70, 79, 82, 84, 88, 89, 90, 93, 96, 103, 106, 111, 115, 117, 118, 124, 128, 151, 152, 179, 188, 199, 207, 208, 209, 210, 213, 215, 216, 221, 225, 232, 233, 236, 238, 239, 240, 244, 253, 258, 261, 268, 273, 288, 291], "uniquenss": 89, "unit": [16, 22, 28, 30, 32, 33, 36, 43, 46, 47, 61, 65, 68, 88, 89, 93, 101, 102, 103, 115, 124, 128, 132, 135, 137, 141, 143, 145, 146, 147, 151, 155, 157, 158, 166, 191, 192, 193, 197, 199, 206, 208, 209, 211, 213, 215, 216, 218, 220, 228, 230, 233, 239, 241, 264, 266, 268, 273, 274, 281, 298], "unit_cub": 115, "unit_disk": 228, "unit_system": 197, "unit_triangular": 65, "unitari": [65, 93, 115, 128, 174, 179, 205], "unitary_divisor": 128, "unitary_matrix": 65, "unitarydivisor": 128, "unitarydivisorfunct": [93, 128], "unitaryhandl": 65, "unitaryoper": 179, "unitarypred": 65, "uniti": [18, 43, 94, 96, 113, 185, 215], "unitless": [18, 194], "unitsystem": [194, 198], "unittriangularhandl": 65, "unittriangularpred": 65, "unitvec": 30, "univari": [37, 48, 57, 67, 87, 88, 94, 111, 115, 207, 208, 210, 211, 214, 215, 216, 217, 222, 233, 235, 238, 240], "univariatepolynomialerror": 213, "univers": [3, 15, 69, 205, 211, 214, 220, 228, 233, 238, 239], "universal_set": 228, "universalset": [118, 228], "universitat": 264, "unix": [1, 251, 252], "unknow": 41, "unknown": [13, 14, 15, 38, 41, 42, 43, 46, 53, 55, 56, 61, 74, 88, 89, 135, 136, 175, 209, 218, 235, 236, 237, 238, 239, 258, 297], "unknwon": 46, "unless": [2, 4, 11, 12, 14, 15, 35, 36, 41, 43, 45, 62, 64, 67, 69, 79, 87, 88, 89, 93, 96, 103, 104, 113, 124, 127, 157, 163, 208, 209, 210, 215, 216, 220, 225, 228, 229, 236, 238, 251, 255, 258, 259, 261, 264, 273, 286, 292, 296], "unlik": [2, 4, 12, 14, 15, 16, 22, 35, 41, 42, 48, 55, 66, 88, 89, 93, 115, 124, 128, 130, 209, 213, 220, 233, 236, 239, 255, 256, 288, 290, 291, 292, 295], "unload": 134, "unm": 219, "unmodifi": [209, 232], "unmov": 80, "unnam": 253, "unnecessari": [3, 4, 5, 12, 14, 65, 69, 216, 219, 240, 251, 289], "unnecessarili": 296, "unnecessary_permut": 115, "unneed": 15, "unnorm": [94, 96, 209], "unnot": 14, "unord": [13, 16, 88, 128, 211, 239, 258, 259], "unpack": [13, 88, 124, 258, 259], "unpolar": 162, "unpredict": 255, "unprejud": 88, "unpython": 14, "unrad": [232, 238], "unrank": [72, 77, 79, 80, 82], "unrank_binari": 83, "unrank_grai": 83, "unrank_lex": 80, "unrank_nonlex": 80, "unrank_trotterjohnson": 80, "unread": [216, 256], "unrecogn": [13, 124], "unrecognis": 11, "unrel": [12, 13, 53, 88, 95, 208, 288], "unreli": 210, "unresolv": 41, "unrestrict": [5, 77, 258], "unrol": 245, "unrot": 104, "unsanit": [88, 259, 285], "unsat": 118, "unsatisfi": 118, "unset": [220, 232], "unshift": 213, "unsign": [69, 93, 232], "unsignedinttyp": 69, "unsimplifi": [16, 229], "unsolv": [216, 239], "unsolvablefactorerror": [48, 216, 238], "unsort": [21, 32, 88], "unspecifi": [67, 88, 103, 286], "unsplitt": 130, "unstabl": [46, 139], "unstrain": 132, "unsuccess": [79, 86], "unsuit": [13, 205], "unsupport": [13, 16, 38, 143, 210, 211, 215, 220], "unsur": [3, 4, 12], "unsurmount": 253, "until": [3, 12, 14, 27, 36, 39, 41, 48, 50, 51, 52, 53, 54, 55, 56, 60, 80, 82, 88, 89, 98, 115, 124, 128, 213, 216, 229, 236, 288], "untouch": 88, "untyp": 69, "unus": 13, "unusu": [4, 14, 41, 251, 301], "unwant": [88, 238, 258], "unwelcom": 5, "unwieldi": [12, 37], "unwrap": 158, "up": [2, 3, 7, 8, 9, 11, 12, 13, 14, 15, 18, 21, 27, 28, 30, 31, 39, 41, 42, 43, 55, 59, 64, 67, 69, 71, 79, 80, 82, 88, 89, 90, 92, 93, 94, 96, 97, 104, 105, 109, 113, 115, 116, 118, 124, 128, 129, 135, 145, 147, 154, 155, 157, 170, 185, 187, 203, 205, 206, 207, 209, 210, 211, 215, 217, 220, 221, 222, 227, 229, 230, 232, 233, 236, 237, 238, 239, 252, 253, 254, 255, 256, 259, 287, 288, 291, 292, 294, 298, 301, 308, 310], "upcom": 3, "updat": [3, 11, 13, 16, 55, 59, 88, 137, 157, 170, 180, 183, 184, 186, 205, 209, 213, 216, 220, 233, 246, 256, 305], "upgrad": [3, 60], "upload": [5, 128], "upon": [7, 12, 15, 25, 26, 27, 30, 33, 35, 36, 41, 69, 88, 128, 147, 154, 157, 163, 184, 190, 228, 236, 245, 252, 271, 296, 301], "upper": [4, 65, 87, 89, 92, 96, 97, 104, 105, 119, 120, 124, 127, 128, 135, 141, 151, 183, 190, 205, 209, 211, 213, 215, 216, 220, 230, 238, 245, 264, 298], "upper_bob": 151, "upper_bound": [97, 98, 101, 104], "upper_half_plan": 228, "upper_half_unit_disk": 228, "upper_hessenberg_decomposit": 124, "upper_incomplete_gamma_funct": 96, "upper_limit": [141, 286], "upper_polygon": 104, "upper_seg": 104, "upper_triangular": [65, 124], "upper_triangular_solv": [119, 124], "uppercas": [61, 89, 230], "uppergamma": [4, 93, 96, 220, 240], "uppertriangularhandl": 65, "uppertriangularmatrix": 65, "uppertriangularpred": 65, "upretti": 12, "upright": 301, "upsid": 11, "upsilon": [16, 220], "upstream": 11, "upto": [222, 227, 236], "upward": [135, 209, 215], "ur": 233, "url": [0, 89, 256], "urul": 115, "us": [0, 1, 3, 4, 8, 9, 10, 11, 12, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 45, 46, 47, 49, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 162, 163, 165, 167, 169, 170, 171, 174, 176, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 267, 268, 270, 271, 273, 274, 276, 281, 282, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308], "usa": [87, 214], "usabl": [3, 14, 55, 210, 211, 220, 239, 290], "usag": [4, 5, 12, 15, 16, 17, 23, 33, 41, 42, 43, 60, 63, 90, 94, 115, 128, 187, 206, 207, 209, 213, 220, 228, 230, 233, 236, 237, 241, 255, 259, 271, 272, 279, 291], "use_add": 254, "use_cach": 216, "use_ecm": 128, "use_imp": 259, "use_latex": [116, 204, 206, 295], "use_lra_theori": 118, "use_model": 118, "use_pm1": [88, 128], "use_renam": 69, "use_rho": [88, 128], "use_symengin": 2, "use_tri": [88, 128], "use_unicod": [12, 14, 43, 53, 67, 68, 69, 92, 96, 115, 116, 124, 136, 143, 162, 204, 205, 207, 208, 219, 220, 221, 239, 240, 286, 290, 292, 295, 296, 297], "use_unicode_sqrt_char": 220, "usecas": 13, "usefulli": 211, "useless": [12, 192, 211, 213], "usepackag": 220, "user": [0, 2, 3, 4, 5, 8, 9, 12, 13, 14, 15, 21, 22, 23, 26, 28, 31, 35, 38, 40, 41, 43, 68, 69, 70, 79, 80, 87, 88, 89, 90, 96, 100, 113, 117, 120, 124, 130, 131, 133, 135, 136, 139, 141, 143, 147, 150, 155, 158, 178, 179, 188, 194, 195, 199, 203, 207, 210, 213, 215, 217, 218, 219, 220, 221, 229, 232, 238, 239, 240, 249, 252, 253, 255, 256, 259, 264, 268, 269, 274, 285, 288, 289, 291, 292, 293, 300], "user_def_func": 220, "user_funct": [69, 220], "user_guid": 259, "usernam": [9, 11], "userwarn": [12, 199, 249, 256, 292], "usm": 209, "ussr": 214, "usual": [2, 12, 13, 14, 15, 16, 18, 23, 33, 35, 36, 39, 41, 48, 68, 70, 79, 87, 88, 89, 106, 113, 115, 124, 150, 176, 188, 194, 195, 207, 208, 209, 210, 211, 213, 216, 219, 220, 221, 227, 230, 236, 239, 240, 241, 245, 246, 253, 255, 259, 264, 273, 285, 288, 291, 295, 296], "utf": 220, "util": [2, 3, 4, 5, 7, 11, 50, 52, 67, 75, 77, 79, 80, 93, 94, 99, 100, 101, 104, 118, 128, 129, 133, 147, 148, 152, 155, 160, 194, 197, 209, 213, 217, 220, 232, 233, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 276, 281, 282], "utilis": 68, "utm": 128, "uv": [190, 308, 309], "uvar": 115, "uwa": 93, "uwaterloo": 89, "ux": 237, "uxi": 237, "uxt": 237, "v": [0, 8, 9, 18, 27, 28, 30, 31, 32, 33, 35, 36, 37, 46, 48, 52, 57, 61, 69, 78, 84, 87, 88, 89, 90, 91, 92, 96, 102, 113, 115, 117, 124, 128, 131, 132, 134, 136, 147, 148, 149, 151, 154, 158, 162, 163, 175, 190, 195, 199, 201, 203, 206, 213, 214, 215, 216, 220, 230, 232, 233, 236, 238, 240, 251, 258, 264, 267, 268, 269, 270, 271, 273, 298, 301], "v1": [30, 32, 90, 101, 124, 154, 199, 200, 203, 240, 259, 264, 267, 268, 269, 270], "v10": 69, "v18": 69, "v1pt": 30, "v1pt_theori": [30, 35, 203], "v1x": 32, "v1y": 32, "v1z": 32, "v2": [9, 32, 90, 101, 124, 154, 199, 200, 203, 259, 264, 267, 268, 269, 270], "v2pt": [22, 30], "v2pt_theori": [22, 27, 28, 30, 31, 35, 203, 298, 301, 302, 308, 309, 310], "v2x": 32, "v2y": 32, "v2z": 32, "v3": [124, 199, 203, 270], "v4b3": 89, "v5_2": 88, "v6": 69, "v8": 240, "v_": 18, "v_0": 238, "v_1": [90, 215, 233, 238], "v_2": [90, 215, 233], "v_a": 264, "v_arrai": 78, "v_aug": 124, "v_b": 264, "v_field": 90, "v_i": [128, 215, 238], "v_m": [18, 132, 238], "v_m_max": [18, 132, 134], "v_m_tild": [18, 132], "v_m_tilde_num": 18, "v_mt": 18, "v_n": 215, "v_o_n": [22, 30], "v_p_n": 22, "v_r_n": 22, "va": 216, "vacuou": 124, "vajnovszki": 258, "val": [69, 88, 100, 206, 211, 215, 259], "val_dict": 301, "val_inf": 236, "valenc": 247, "valid": [2, 4, 5, 11, 13, 14, 22, 32, 36, 41, 42, 43, 51, 55, 62, 64, 66, 67, 68, 69, 81, 87, 88, 93, 94, 104, 124, 128, 130, 148, 149, 152, 153, 157, 159, 163, 182, 187, 194, 197, 199, 204, 210, 213, 216, 219, 220, 228, 232, 233, 236, 238, 239, 240, 259, 292, 296, 298, 301, 303], "validate_system": [157, 303], "validrelationoper": 88, "valu": [2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 22, 27, 30, 33, 35, 36, 39, 41, 43, 46, 48, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 79, 80, 84, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 113, 115, 116, 118, 119, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 141, 143, 145, 147, 148, 151, 152, 153, 154, 157, 158, 159, 163, 166, 169, 174, 176, 179, 182, 184, 185, 186, 187, 190, 191, 193, 195, 199, 200, 203, 205, 206, 208, 209, 210, 211, 213, 215, 216, 217, 218, 220, 221, 226, 227, 228, 229, 232, 233, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 254, 258, 259, 260, 261, 267, 269, 271, 274, 286, 288, 291, 298, 301, 303], "valuat": 236, "value1": 206, "value2": 206, "value_const": 69, "valueerror": [12, 14, 33, 38, 41, 54, 55, 62, 64, 67, 69, 70, 74, 80, 88, 89, 97, 98, 101, 103, 104, 115, 120, 124, 127, 128, 135, 141, 143, 158, 164, 203, 205, 207, 209, 213, 215, 228, 233, 236, 238, 239, 258, 261, 271], "van": [124, 128, 214], "vanilla": 41, "vanish": [124, 190, 213, 216, 219, 236, 264], "vanston": 128, "var": [14, 16, 46, 51, 67, 69, 87, 88, 92, 93, 111, 115, 118, 124, 143, 199, 206, 215, 219, 220, 232, 233, 259, 297], "var_in_dcm": 199, "var_nam": 88, "var_start_end": 206, "var_start_end_i": 206, "var_start_end_u": 206, "var_start_end_v": 206, "var_start_end_x": 206, "var_sub1__sup_sub2": 220, "var_t": 233, "varbosonicbasi": 190, "varepsilon": 236, "vari": [18, 21, 28, 36, 39, 67, 69, 88, 102, 104, 131, 134, 135, 141, 147, 152, 155, 188, 227, 238, 258, 271, 302], "variabl": [1, 2, 4, 5, 11, 12, 13, 14, 15, 17, 18, 22, 30, 31, 32, 33, 37, 39, 42, 43, 46, 48, 49, 51, 52, 54, 56, 60, 61, 62, 64, 65, 67, 69, 70, 83, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 105, 107, 113, 115, 116, 118, 124, 130, 131, 134, 135, 136, 139, 141, 143, 147, 153, 157, 164, 179, 184, 188, 190, 193, 199, 201, 208, 209, 210, 211, 213, 215, 216, 217, 220, 221, 226, 227, 232, 233, 235, 236, 237, 238, 239, 247, 251, 253, 254, 255, 259, 264, 267, 268, 270, 271, 273, 286, 288, 290, 292, 297, 299, 304, 308, 310], "variable_map": 199, "variable_nam": [264, 271], "varianc": 240, "variancematrix": 240, "variant": [213, 236, 239], "variat": [80, 88, 213, 227, 236, 298], "variation_of_paramet": 236, "variationofparamet": 236, "varieti": [28, 45, 57, 69, 70, 80, 88, 129, 136, 207, 214, 216, 240, 258], "varii": 78, "varion": 43, "variou": [2, 4, 5, 14, 15, 18, 28, 39, 43, 48, 51, 67, 69, 71, 72, 79, 87, 88, 93, 108, 113, 115, 118, 124, 134, 137, 154, 169, 173, 174, 185, 187, 207, 208, 211, 212, 213, 215, 221, 227, 230, 233, 236, 237, 239, 253, 296, 298, 299, 300, 304], "varlist": 124, "varnoth": 228, "varphi": [92, 96, 215, 220, 236], "varshalovich": [169, 187], "vast": [2, 57, 115, 212], "vastli": 36, "vat": 0, "vc": 88, "vdiff": 88, "vdot": [120, 124, 195], "ve": [43, 301], "vec": [30, 55, 124, 151, 199, 205, 213, 270, 271, 273], "vec1": 201, "vec2": 201, "vech": 124, "vect": [200, 264, 267], "vectfield": [33, 200, 267, 271], "vector": [4, 13, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 39, 47, 61, 65, 69, 72, 79, 80, 88, 90, 96, 101, 102, 103, 110, 111, 117, 124, 129, 134, 135, 137, 139, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 162, 163, 176, 185, 187, 192, 195, 199, 201, 203, 204, 207, 209, 215, 220, 230, 233, 236, 238, 240, 245, 246, 251, 252, 266, 270, 275, 279, 281, 292, 298, 301, 305, 308, 309, 310], "vector_coplanar": 61, "vector_field": [90, 271], "vector_integr": [267, 274], "vector_nam": 264, "vector_onli": 61, "vector_part": 61, "vectoradd": 268, "vectorfield": 274, "vectori": [33, 203, 268, 273], "vectorinto": 36, "vectormul": 268, "vectors_in_basi": 90, "vectorzero": 268, "vee": [113, 118, 124], "vega": 79, "vehicl": 2, "vel": [18, 22, 24, 30, 35, 147, 151, 203, 271, 301, 303, 305, 309], "vel_p": 27, "vel_vec": 203, "veloc": [2, 21, 24, 27, 28, 30, 32, 33, 36, 124, 132, 134, 147, 148, 151, 152, 154, 155, 157, 164, 192, 194, 195, 199, 203, 271, 273, 298, 301, 302, 303, 305, 308, 309, 310], "velocity_con": 30, "velocity_constraint": [25, 30, 152, 157, 298, 301, 303, 305], "venu": 193, "venus_a": 193, "venv": [8, 9], "verbatim": [5, 220], "verbos": [12, 69, 88, 124, 128, 220, 251, 252, 295], "veri": [1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 18, 21, 22, 30, 35, 36, 37, 38, 41, 43, 48, 69, 84, 88, 89, 92, 93, 98, 100, 106, 110, 113, 115, 118, 124, 128, 132, 143, 155, 162, 195, 207, 209, 210, 213, 215, 216, 217, 219, 220, 221, 227, 228, 229, 230, 232, 233, 236, 238, 239, 240, 251, 252, 253, 259, 285, 288, 291, 296, 305], "verif": [67, 209, 238], "verifi": [12, 22, 41, 48, 53, 55, 59, 67, 79, 85, 89, 90, 207, 213, 219, 236, 238, 239, 241, 242, 296], "verify_numer": [13, 88], "verion": 88, "verlag": [115, 214], "vers": 43, "versa": [89, 115, 128, 135, 180, 199, 207, 211, 268, 269, 288], "versatil": 113, "version": [2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 17, 18, 22, 41, 42, 43, 45, 57, 58, 59, 62, 68, 69, 79, 80, 86, 88, 89, 93, 94, 96, 115, 118, 119, 121, 124, 126, 128, 146, 148, 151, 174, 188, 192, 199, 205, 206, 207, 209, 210, 211, 213, 215, 216, 220, 223, 232, 238, 240, 250, 251, 253, 254, 255, 256, 258, 259, 262, 264, 270, 288, 291, 292], "versor": 61, "vert": [33, 36, 127, 273], "vertex": [72, 82, 99, 104, 115, 209], "vertic": [13, 68, 72, 81, 82, 98, 99, 101, 103, 104, 105, 115, 117, 124, 135, 136, 137, 139, 157, 162, 170, 205, 206, 209, 215, 220, 228, 258, 274, 306], "vertical_direct": 68, "veryuniqu": 68, "vf": 220, "vfield": [211, 270], "vfree_group": 70, "vg": 213, "vi": 88, "via": [2, 8, 9, 14, 15, 18, 39, 43, 53, 57, 59, 62, 63, 64, 79, 80, 88, 93, 96, 113, 115, 118, 124, 128, 129, 130, 135, 155, 199, 205, 207, 211, 213, 215, 216, 219, 220, 239, 249, 252, 253, 264, 273, 291], "viabl": [8, 89, 286], "vibrat": 302, "vice": [89, 115, 128, 135, 180, 199, 207, 211, 268, 269, 288], "vicki": 96, "video": [7, 294], "viet": 216, "view": [2, 4, 7, 11, 12, 15, 36, 57, 69, 70, 71, 88, 124, 135, 192, 195, 206, 213, 220, 236, 239, 253, 255, 258], "viewcod": 4, "viewcont": 264, "viewdoc": 229, "vieweg": 214, "viewer": [2, 5, 68, 220, 254], "vig": 0, "vigener": 89, "vigenere_ciph": 89, "vigkla": 216, "viktor": 237, "vim": 11, "vincent": [216, 258], "violat": [16, 22, 205, 217, 232], "virtu": [28, 30], "virtual": [3, 8, 14, 36, 59, 88, 104, 289], "viscou": 302, "visibl": [11, 113, 206], "visit": [59, 72, 79, 88, 93, 293], "visit_token": 130, "visitor": 255, "visual": [3, 13, 18, 23, 88, 128, 136, 143, 219, 232, 298], "visualis": 46, "vital": 230, "vlahovski": 229, "vlatex": [32, 36, 156, 199, 204], "vline": 220, "vlist": 124, "vo": 236, "vobj": 220, "void": 253, "vol": [72, 80, 89, 93, 96, 113, 124, 128, 144, 153, 215, 216, 230, 255, 258], "volatil": 69, "volum": [0, 4, 69, 87, 96, 113, 115, 205, 214, 230, 236, 255, 264], "volume_result": 69, "voluntari": 18, "voluntarili": [18, 131], "von": [214, 240], "von_mises_distribut": 240, "vonmis": 240, "vonmisesdistribut": 240, "voss": 11, "vpprint": [32, 36, 156, 204], "vprint": [32, 36, 156, 203, 204], "vr": 233, "vradiu": 98, "vring": 211, "vsin": 88, "vslobodi": 124, "vsort": 88, "vsort0": 88, "vssut": 46, "vstack": [124, 209], "vt": 89, "w": [13, 16, 29, 32, 33, 34, 46, 57, 61, 69, 72, 78, 80, 87, 88, 89, 90, 91, 94, 96, 113, 115, 118, 124, 125, 148, 151, 154, 157, 159, 164, 175, 179, 188, 202, 203, 205, 206, 208, 209, 213, 214, 215, 216, 217, 221, 227, 228, 230, 232, 233, 236, 237, 239, 240, 251, 259, 261, 271, 297, 302, 309], "w1": [35, 164, 232], "w2": [35, 87, 164], "w2e": 87, "w3": [35, 164, 220], "w3j": 169, "w_": [124, 215], "w_0": [159, 233], "w_1": [35, 215], "w_2": [35, 215], "w_3": 35, "w_8": 135, "w_a_n": 22, "w_b_n": [22, 30], "w_frame": 151, "w_i": [115, 159, 216, 236], "w_j": 215, "w_k": 94, "w_o": 159, "w_r": 215, "w_r_n_qd": [308, 309], "w_x": 35, "w_y": 35, "w_z": 35, "wa": [2, 3, 9, 11, 12, 13, 14, 16, 21, 22, 27, 28, 35, 36, 37, 41, 43, 55, 71, 77, 79, 80, 82, 88, 89, 90, 96, 101, 124, 128, 130, 148, 154, 185, 195, 205, 207, 209, 213, 215, 216, 217, 219, 220, 229, 230, 232, 236, 238, 240, 249, 251, 254, 256, 258, 259, 286, 288, 290, 291, 294, 301, 305], "wagstaff": 128, "wai": [2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 21, 22, 23, 27, 32, 33, 35, 38, 39, 40, 41, 42, 43, 48, 50, 52, 55, 60, 68, 70, 71, 72, 77, 79, 80, 81, 84, 88, 90, 93, 96, 104, 108, 112, 113, 115, 117, 120, 124, 127, 128, 130, 132, 133, 135, 139, 147, 150, 152, 154, 157, 170, 184, 187, 188, 193, 195, 198, 199, 201, 203, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 227, 230, 232, 233, 236, 237, 239, 241, 242, 245, 246, 249, 253, 255, 258, 259, 264, 268, 269, 270, 271, 273, 285, 286, 288, 289, 290, 291, 296, 297, 305, 307, 308], "waist": 159, "waist2rayleigh": 159, "waist_approximation_limit": 159, "waist_in": 159, "waist_out": 159, "wait": [12, 36], "wald": 240, "walk": [15, 69, 72, 88, 182, 185, 230], "walker": 236, "wall": [11, 13, 148, 151, 157, 306], "walli": 87, "walter": 29, "wang": [213, 214, 258], "wang78": [213, 214], "wang81": 214, "want": [2, 3, 4, 8, 9, 11, 12, 13, 14, 15, 16, 18, 22, 30, 35, 36, 38, 39, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 65, 67, 69, 70, 71, 72, 80, 88, 89, 95, 100, 102, 104, 107, 113, 115, 120, 124, 125, 128, 129, 131, 134, 141, 143, 146, 153, 173, 183, 184, 187, 190, 193, 195, 201, 203, 206, 208, 209, 210, 213, 215, 216, 217, 219, 220, 221, 227, 228, 230, 232, 233, 236, 237, 238, 239, 240, 241, 246, 249, 251, 253, 255, 258, 259, 269, 271, 274, 285, 286, 288, 290, 291, 292, 293, 295, 296], "war": 89, "warn": [3, 4, 16, 17, 36, 43, 88, 89, 103, 118, 130, 135, 148, 199, 206, 208, 220, 236, 238, 249, 251, 253, 257, 258, 283, 292], "warningcl": [249, 256], "warns_deprecated_sympi": [3, 12, 249, 254, 256], "warrant": 12, "washington": 128, "wasn": [12, 13], "wast": [88, 125, 209], "watch": 80, "watson": [70, 232], "wave": [145, 160, 161, 162, 223, 281], "wavefunct": [166, 179, 188, 191, 281], "wavelen": 159, "wavelength": [159, 164], "wavenumb": 164, "we": [0, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 16, 18, 21, 22, 23, 24, 25, 26, 27, 30, 32, 33, 35, 36, 39, 41, 42, 43, 45, 48, 49, 50, 51, 53, 55, 56, 57, 62, 63, 64, 67, 68, 69, 70, 71, 72, 74, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 96, 101, 106, 111, 112, 113, 115, 116, 117, 118, 124, 125, 127, 128, 130, 132, 134, 143, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 162, 165, 173, 176, 179, 180, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 195, 199, 201, 203, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 227, 228, 230, 232, 233, 235, 236, 237, 238, 240, 242, 244, 246, 251, 252, 253, 255, 256, 258, 259, 264, 268, 269, 270, 271, 273, 274, 285, 286, 288, 290, 291, 292, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310], "weak": [79, 88, 123, 124, 152, 210, 213], "weakli": [124, 258], "web": [5, 7, 8, 11, 30, 34, 72, 80, 89, 93, 96, 100, 105, 115, 128, 202, 209, 214, 232, 233, 240, 258, 292], "webpag": [2, 5], "websit": [5, 7, 294], "wedg": [90, 113], "wedgeproduct": 90, "weibul": 240, "weibull_distribut": 240, "weibulldistribut": 240, "weight": [39, 88, 96, 103, 105, 115, 117, 124, 174, 232, 286], "weisstein": 214, "weisstein09": [213, 214], "welcom": [210, 236, 289, 300], "weld": 151, "weldjoint": 151, "welecka": 190, "well": [3, 4, 5, 7, 11, 13, 14, 15, 16, 18, 21, 22, 27, 28, 32, 35, 37, 39, 41, 43, 59, 65, 67, 68, 69, 70, 71, 72, 74, 80, 87, 88, 93, 94, 96, 115, 121, 124, 139, 144, 151, 157, 180, 189, 192, 193, 205, 206, 207, 209, 210, 211, 213, 215, 220, 227, 228, 229, 230, 232, 236, 238, 239, 251, 252, 268, 269, 273, 288, 290, 291, 296, 301, 305, 306], "welleslei": 87, "wen": 147, "wendi": 80, "went": 35, "were": [3, 5, 11, 12, 13, 14, 15, 16, 21, 27, 32, 33, 36, 37, 41, 43, 68, 71, 80, 82, 88, 89, 94, 105, 113, 124, 128, 129, 130, 132, 157, 207, 209, 211, 213, 214, 215, 216, 219, 220, 221, 229, 232, 238, 258, 259, 261, 288, 290, 291, 295, 296], "werner": 29, "weslei": [72, 80, 128, 214], "wester": [212, 282], "wester1999": 219, "weyl": [111, 117], "weyl_group": 117, "weylelt": 117, "weylgroup": 117, "wf": [145, 301], "wf_cont": 301, "wf_i": 301, "wf_mc": 301, "wfrad": 301, "wgate": 175, "what": [4, 5, 7, 11, 12, 13, 14, 15, 16, 22, 24, 30, 35, 36, 37, 38, 39, 41, 42, 43, 48, 49, 58, 67, 69, 80, 82, 87, 88, 89, 90, 94, 95, 98, 99, 103, 113, 115, 117, 124, 128, 130, 148, 151, 152, 155, 157, 189, 190, 193, 195, 199, 206, 211, 213, 216, 219, 220, 221, 227, 229, 230, 232, 233, 236, 238, 245, 249, 251, 253, 254, 259, 268, 269, 274, 286, 288, 289, 291, 295, 296, 300, 305], "whatev": [13, 14, 16, 43, 79, 88, 89, 232, 236, 237, 239, 259], "wheel": [13, 301], "when": [0, 2, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 35, 36, 37, 38, 39, 41, 42, 43, 46, 48, 52, 54, 55, 56, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 79, 80, 81, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 112, 115, 116, 118, 119, 124, 128, 129, 130, 131, 132, 134, 135, 137, 139, 141, 143, 144, 147, 150, 151, 154, 155, 157, 158, 163, 164, 169, 174, 175, 179, 182, 184, 192, 193, 194, 204, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 242, 244, 245, 249, 251, 252, 253, 254, 256, 258, 259, 261, 263, 268, 286, 288, 290, 291, 296, 297, 298, 301, 303, 309], "whenc": 230, "whenev": [2, 3, 12, 13, 14, 15, 16, 43, 86, 113, 115, 124, 197, 206, 207, 208, 209, 211, 222, 227, 230, 240, 286, 288, 291], "where": [3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 26, 27, 28, 30, 31, 32, 33, 35, 36, 39, 41, 42, 43, 46, 48, 51, 52, 53, 55, 57, 60, 61, 65, 67, 68, 69, 70, 77, 78, 79, 80, 82, 84, 86, 87, 88, 89, 90, 92, 93, 94, 96, 98, 101, 103, 104, 105, 106, 110, 111, 112, 113, 115, 117, 118, 119, 120, 124, 128, 130, 131, 134, 135, 137, 139, 140, 143, 147, 148, 151, 152, 153, 154, 157, 158, 164, 174, 179, 185, 187, 189, 190, 191, 192, 193, 199, 203, 205, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 220, 221, 222, 223, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 240, 241, 244, 246, 251, 252, 253, 254, 258, 259, 261, 264, 271, 273, 286, 288, 290, 292, 296, 297, 301], "wherea": [14, 15, 39, 41, 48, 53, 65, 69, 89, 98, 104, 113, 118, 143, 195, 207, 210, 213, 216, 220, 238, 239, 258, 296], "wherebi": 89, "wherev": [22, 59, 232, 239, 268], "whet": 290, "whether": [3, 7, 8, 12, 13, 14, 15, 21, 22, 36, 41, 42, 43, 48, 53, 55, 56, 57, 67, 68, 69, 74, 79, 87, 88, 89, 95, 96, 100, 103, 115, 116, 118, 124, 128, 132, 134, 139, 152, 153, 157, 173, 178, 197, 201, 206, 209, 210, 211, 215, 216, 220, 223, 227, 228, 232, 233, 236, 238, 239, 240, 241, 251, 253, 258, 259, 264, 267, 288, 292], "which": [1, 2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 39, 41, 42, 43, 45, 46, 48, 49, 51, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 78, 79, 80, 81, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 101, 102, 103, 104, 107, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 123, 124, 127, 128, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 163, 164, 176, 179, 185, 186, 187, 188, 190, 194, 195, 196, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 244, 246, 251, 252, 253, 254, 255, 256, 258, 259, 261, 264, 266, 269, 273, 274, 285, 286, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 301, 302, 303, 306, 309], "while": [3, 4, 7, 11, 12, 13, 14, 15, 16, 22, 27, 33, 41, 43, 45, 49, 50, 55, 57, 68, 69, 70, 79, 80, 81, 84, 87, 88, 89, 90, 92, 93, 94, 98, 102, 104, 112, 118, 124, 128, 129, 130, 132, 135, 137, 139, 147, 148, 151, 152, 153, 155, 157, 174, 194, 195, 199, 207, 209, 215, 218, 220, 236, 238, 239, 251, 253, 255, 258, 273, 285, 291, 292, 305], "white": [116, 135, 204, 240], "whitespac": [5, 12, 88, 256], "whittak": 115, "whittl": 296, "whl": 69, "who": [2, 3, 4, 9, 11, 12, 30, 36, 39, 43, 89, 90, 213, 220, 289, 300], "whole": [4, 12, 13, 41, 88, 90, 96, 115, 136, 145, 206, 207, 209, 215, 216, 220, 223, 228, 230, 236, 239, 258], "whole_submodul": 215, "whose": [5, 13, 15, 25, 33, 36, 41, 43, 48, 68, 70, 72, 77, 80, 87, 88, 89, 94, 98, 102, 104, 105, 111, 115, 118, 124, 128, 147, 154, 162, 185, 195, 200, 201, 208, 209, 211, 215, 216, 227, 228, 232, 236, 237, 238, 240, 246, 251, 255, 258, 259, 264, 267, 269, 271], "wht": 91, "why": [3, 12, 13, 14, 16, 36, 41, 69, 88, 211, 217, 227, 230, 259, 289, 291, 292], "wick": 190, "wide": [9, 30, 41, 116, 124, 137, 204, 209, 210, 216, 220, 240], "widen": 217, "wider": [45, 220], "widget": 220, "width": [13, 68, 69, 116, 204, 206, 216, 220, 251, 302], "wiener": 240, "wiener_process": 240, "wienerprocess": [13, 240], "wigner": [169, 187, 240, 281], "wigner3j": [169, 205], "wigner6j": [169, 205], "wigner9j": [169, 205], "wigner_3j": 205, "wigner_6j": 205, "wigner_9j": 205, "wigner_d": 205, "wigner_d_smal": 205, "wigner_semicircle_distribut": 240, "wignerd": 187, "wignersemicircl": 240, "wignerssemicirclelaw": 240, "wiki": [3, 4, 5, 11, 16, 34, 41, 43, 61, 63, 64, 65, 67, 68, 69, 71, 76, 77, 79, 80, 87, 88, 89, 90, 91, 93, 94, 96, 98, 100, 104, 105, 106, 115, 116, 117, 118, 120, 124, 128, 141, 143, 146, 159, 161, 162, 163, 165, 166, 167, 171, 172, 173, 176, 178, 179, 188, 190, 194, 199, 201, 202, 206, 209, 216, 223, 227, 228, 229, 233, 236, 239, 240, 253, 258, 264, 266, 270, 272, 274, 292], "wikibook": [5, 115, 116], "wikidel": 270, "wikidyad": [32, 34, 202], "wikidyadicproduct": [32, 34, 202], "wikipappu": 100, "wikipedia": [4, 15, 34, 41, 43, 61, 63, 64, 65, 67, 68, 69, 71, 76, 77, 79, 80, 87, 88, 89, 90, 91, 93, 94, 96, 98, 100, 104, 105, 106, 115, 117, 118, 120, 124, 128, 141, 143, 146, 159, 161, 162, 163, 165, 166, 167, 171, 172, 173, 176, 178, 179, 188, 190, 193, 199, 201, 202, 209, 216, 223, 227, 228, 229, 236, 239, 240, 253, 258, 264, 266, 270, 272, 274, 290, 292, 294], "wild": [16, 88, 232, 258], "wildcard": [88, 232], "wildfunct": 88, "wilei": 240, "wilf": [72, 87, 238], "wilkinson": [48, 124], "william": 209, "win": 60, "window": [1, 9, 11, 261], "wip": 11, "wire": 170, "wire_idx": 170, "wirefram": 206, "wisdom": 90, "wise": [69, 70, 94, 124, 209, 213, 220, 226, 252], "wish": [2, 4, 11, 14, 16, 32, 36, 43, 55, 59, 69, 88, 89, 92, 113, 128, 185, 255, 259, 286, 290, 292, 297], "wishart": 240, "wishart_distribut": 240, "wit": 128, "with_default": [18, 131, 132, 134, 298], "with_pivot": 124, "within": [2, 5, 12, 13, 15, 17, 18, 28, 35, 36, 41, 54, 67, 68, 69, 71, 88, 94, 101, 104, 118, 120, 124, 128, 129, 131, 132, 134, 135, 185, 199, 208, 210, 211, 216, 218, 228, 236, 238, 239, 240, 251, 252, 261, 308], "without": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 22, 26, 27, 32, 35, 41, 43, 45, 46, 59, 63, 65, 66, 69, 87, 88, 89, 90, 92, 96, 113, 115, 116, 120, 123, 124, 143, 144, 147, 151, 155, 190, 194, 195, 199, 200, 206, 209, 210, 213, 216, 220, 222, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 242, 245, 246, 249, 251, 252, 253, 256, 258, 259, 261, 267, 270, 292, 296, 307, 309], "withstand": [135, 136], "wittkopf": 214, "wkshum": 233, "wlog": 230, "wm": 240, "wminu": 124, "wn_m": 124, "wo": 22, "wojciech": 29, "wolfram": [4, 65, 81, 82, 88, 89, 91, 93, 94, 96, 98, 104, 115, 124, 128, 130, 214, 220, 222, 223, 225, 228, 233, 240, 258, 292], "wolphramalpha": 236, "won": [3, 11, 12, 14, 16, 43, 69, 132, 232, 239, 291], "wonder": 292, "wor6d": 89, "word": [3, 5, 9, 12, 15, 22, 28, 43, 65, 84, 87, 88, 89, 94, 96, 118, 143, 152, 207, 210, 215, 232, 233, 236, 238, 253, 264, 269, 288], "word_sep": 89, "wordpress": [113, 233], "work": [0, 2, 3, 4, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 28, 30, 36, 38, 39, 41, 42, 43, 48, 54, 59, 62, 64, 67, 68, 69, 71, 79, 80, 81, 88, 89, 92, 96, 113, 115, 117, 118, 120, 124, 125, 128, 130, 135, 148, 158, 170, 174, 179, 183, 184, 185, 186, 189, 192, 201, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 220, 227, 228, 229, 230, 232, 233, 236, 238, 239, 240, 246, 251, 252, 253, 255, 258, 259, 260, 261, 268, 269, 288, 289, 290, 291, 292, 295, 296, 301], "workaround": [8, 259], "workflow": [6, 7, 8, 9, 10, 12, 14, 30, 54, 55, 210, 253, 259], "workhors": 227, "world": [9, 27, 89, 139, 258, 305], "worri": [14, 16, 88, 291], "wors": [14, 43, 118, 232], "worst": [128, 216, 236], "worth": [3, 41, 43, 152, 199, 269, 271], "worthwhil": 92, "wou": 80, "would": [1, 3, 4, 5, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 27, 30, 32, 33, 35, 37, 39, 41, 42, 43, 45, 49, 52, 54, 59, 68, 69, 70, 77, 79, 80, 87, 88, 89, 93, 94, 100, 104, 113, 115, 124, 128, 130, 133, 135, 143, 144, 145, 149, 151, 185, 187, 190, 195, 199, 206, 209, 210, 211, 213, 216, 217, 219, 220, 221, 223, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 242, 244, 245, 251, 253, 255, 258, 259, 261, 269, 270, 271, 273, 285, 286, 288, 290, 291, 292, 295, 296, 297, 305], "wouldn": 43, "woven": 207, "wp1": 90, "wpathwai": 18, "wplu": 124, "wr": 301, "wr_cont": 301, "wr_i": 301, "wr_mc": 301, "wrap": [2, 3, 4, 11, 12, 13, 19, 36, 62, 63, 64, 65, 69, 77, 88, 94, 116, 129, 130, 150, 155, 204, 206, 209, 210, 213, 220, 223, 239, 245, 252, 256, 259, 261, 281, 291, 298], "wrap_lin": [116, 204, 220, 236], "wrapper": [2, 13, 15, 27, 43, 63, 65, 69, 80, 88, 96, 124, 201, 204, 206, 209, 210, 213, 220, 227, 236, 239, 240, 252, 256, 258], "wrapping_geometri": 158, "wrapping_pathwai": 155, "wrappingcylind": [18, 155, 158], "wrappinggeometrybas": [155, 158], "wrappingpathwai": [18, 155], "wrappingspher": 158, "wrench": 96, "wright": 214, "write": [3, 6, 7, 9, 10, 13, 14, 15, 18, 30, 35, 36, 39, 41, 42, 44, 48, 60, 69, 77, 88, 89, 95, 96, 113, 115, 120, 170, 208, 209, 211, 213, 215, 220, 229, 230, 233, 236, 239, 245, 251, 252, 253, 259, 289, 290, 291, 296, 300], "writer": 251, "written": [0, 2, 4, 5, 11, 12, 13, 14, 15, 23, 30, 33, 34, 35, 36, 41, 43, 65, 69, 76, 79, 80, 84, 88, 93, 96, 100, 106, 111, 113, 117, 118, 127, 128, 150, 190, 202, 207, 208, 216, 220, 223, 227, 230, 233, 236, 253, 271, 273, 289, 290, 291, 296, 305], "wrong": [3, 5, 11, 12, 13, 14, 79, 88, 89, 96, 98, 124, 199, 210, 236, 254, 288, 292], "wronskian": [124, 236], "wrote": [290, 291], "wrrad": 301, "wrt": [22, 30, 67, 69, 88, 90, 96, 105, 124, 199, 200, 213, 216, 264, 266, 267, 271], "wsl": 8, "wsym": 227, "wu_1": 233, "wurlitz": 2, "wv": 175, "wv_1": 233, "ww2040": 240, "www": [4, 5, 46, 61, 67, 79, 80, 89, 91, 93, 115, 116, 124, 128, 141, 143, 204, 209, 214, 219, 220, 229, 232, 233, 236, 240, 258, 292, 295], "www3": [110, 236, 264], "x": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 77, 79, 80, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 123, 124, 127, 128, 129, 130, 131, 134, 135, 136, 137, 139, 141, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 162, 164, 165, 166, 167, 168, 170, 171, 174, 179, 180, 185, 187, 188, 189, 190, 191, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 254, 256, 258, 259, 261, 264, 267, 268, 269, 270, 271, 273, 274, 285, 286, 288, 290, 291, 292, 295, 296, 297, 298, 301, 303, 305, 306, 308, 309, 310], "x0": [14, 39, 55, 67, 69, 78, 88, 96, 107, 109, 111, 112, 128, 162, 210, 221, 222, 227, 232, 236, 238, 240, 258, 286, 298], "x01": 88, "x02": 88, "x1": [14, 30, 41, 43, 54, 55, 78, 88, 93, 162, 210, 211, 221, 222, 232, 236, 238, 240, 258], "x11": 88, "x12": [14, 88], "x2": [14, 30, 41, 54, 78, 88, 93, 162, 210, 222, 236, 238, 240], "x3": [14, 78, 88, 93, 210, 236, 238, 240], "x4": [14, 88, 93, 210, 238], "x5": [14, 88, 93, 210], "x50": 88, "x51": 88, "x6": [14, 88, 210], "x64": 251, "x7": [14, 88, 210], "x8": [14, 88, 210], "x86": 69, "x9": [14, 88, 210], "x_": [14, 39, 51, 55, 69, 78, 88, 89, 93, 130, 211, 213, 216, 222, 233, 236, 241], "x_0": [39, 78, 79, 89, 110, 111, 112, 213, 222, 233, 236, 240, 286], "x_1": [14, 43, 70, 78, 79, 89, 93, 110, 124, 185, 208, 211, 213, 216, 222, 233, 239], "x_1x_0": 78, "x_2": [14, 70, 78, 93, 110, 185, 208, 213, 216, 222, 233, 239], "x_2x_0": 78, "x_2x_1": 78, "x_3": [14, 70, 78, 110, 185], "x_3x_0": 78, "x_3x_1": 78, "x_3x_2": 78, "x_4": 14, "x_5": 14, "x_6": 14, "x_7": 14, "x_8": 14, "x_9": 14, "x_arrai": 206, "x_b": 137, "x_dom": 210, "x_domain": 211, "x_i": [39, 43, 78, 96, 115, 124, 208, 211, 213, 216, 217, 220, 239], "x_j": [211, 213, 216], "x_k": [43, 89, 213], "x_ket": 185, "x_list": [67, 286], "x_m": 240, "x_n": [39, 43, 70, 78, 89, 110, 124, 208, 211, 213, 216, 233, 239], "x_op": 185, "x_reduc": 50, "x_u": 213, "x_val": 18, "x_valu": 54, "x_var": 206, "x_y": 14, "x_y_reduc": 50, "xa": [88, 208, 213], "xax": 79, "xb": [88, 261], "xb7": 220, "xbra": [168, 180, 185], "xc": [88, 189, 261], "xd": [30, 36], "xd2": 30, "xd_x": 14, "xdagger": 189, "xden": 209, "xdg": 220, "xdirect": 101, "xdot": 301, "xdvi": 220, "xe": 36, "xelatex": 8, "xetex": 8, "xf": 210, "xf_1": 213, "xfail": [12, 236, 249, 251], "xfield": 211, "xfree_group": 70, "xgate": 174, "xi": [16, 43, 90, 113, 220, 236, 237, 238], "xiuqin": 229, "xj": 207, "xk": [210, 211, 222], "xket": [168, 180, 185], "xl": 88, "xla": [2, 129], "xlabel": [55, 206, 298], "xlim": [88, 206], "xlist": 67, "xm": 240, "xmax": [98, 99, 101, 103, 104, 206], "xmin": [98, 99, 101, 103, 104, 206], "xml": [35, 36, 232, 269, 305, 307], "xn": [39, 43, 211], "xneg": 42, "xnor": 118, "xnum": 209, "xobj": 220, "xop": [168, 180, 185], "xor": [88, 91, 118, 130, 220, 288], "xp": 12, "xpass": [12, 249, 251], "xpath": 232, "xpo": 42, "xr": [210, 218], "xreplac": [14, 15, 18, 88, 124, 199, 303], "xring": 211, "xscale": 206, "xsol": 209, "xsol_uncancel": 209, "xstr": 220, "xsym": 220, "xt": 96, "xthread": 254, "xval": 238, "xvi": [70, 78], "xx": [36, 69, 124, 154, 199, 258], "xxx": [88, 115, 124, 258, 260], "xxxx": 258, "xxxxxx": 258, "xy": [13, 36, 43, 67, 68, 102, 124, 130, 154, 199, 206, 207, 213, 220, 232, 239, 274, 291, 296], "xymatrix": 68, "xypic": 68, "xypic_draw_diagram": 68, "xypicdiagramdraw": 68, "xyx": [199, 264, 266], "xyz": [3, 36, 61, 100, 130, 135, 139, 199, 264, 266, 269], "xz": [36, 199, 206], "xzx": 199, "xzy": 199, "x\u2080": 221, "y": [3, 4, 11, 12, 13, 14, 15, 16, 18, 22, 24, 28, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 79, 80, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 113, 115, 116, 117, 118, 119, 120, 124, 128, 129, 130, 135, 136, 137, 139, 141, 143, 148, 149, 151, 154, 155, 157, 158, 167, 168, 171, 174, 179, 185, 187, 188, 190, 191, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 252, 253, 256, 258, 259, 261, 264, 267, 268, 269, 270, 271, 273, 274, 285, 286, 288, 290, 291, 295, 296, 297, 298, 301, 302, 303, 305, 306, 308, 309, 310], "y0": [55, 88, 107, 109, 111, 236], "y1": [13, 30, 55, 88], "y1d": 30, "y2": [30, 55, 88, 210], "y2d": 30, "y3": [88, 210], "y4": 88, "y_": [55, 69, 96, 113, 145, 205], "y_0": [55, 233, 236], "y_1": [55, 70, 233, 240], "y_2": [55, 70, 233, 240], "y_3": 240, "y_arrai": 206, "y_i": [211, 213, 215, 216, 236], "y_list": [67, 286], "y_n": [96, 233], "y_reduc": 50, "y_var": 206, "yanchukb": 302, "yang": 214, "yann": 128, "yaw": 301, "ybar": 236, "ydirect": 101, "ydot": 55, "ye": [12, 89, 118, 128, 236], "year": [0, 3, 4, 13, 18, 194], "yet": [3, 9, 11, 13, 14, 16, 27, 41, 43, 62, 64, 67, 68, 74, 92, 115, 130, 170, 207, 210, 211, 215, 217, 219, 228, 236, 239, 286], "yf": 210, "yf_1": 213, "ygate": 174, "yi": 41, "yibi": 240, "yield": [48, 50, 51, 52, 53, 55, 56, 67, 69, 79, 88, 89, 93, 96, 112, 113, 128, 135, 143, 149, 184, 205, 208, 213, 215, 216, 221, 222, 227, 228, 229, 232, 233, 238, 255, 258, 292], "yih": 258, "yiu": 214, "yk": [210, 211], "ylabel": [55, 206, 298], "ylim": 206, "ymax": [98, 99, 101, 103, 104, 206], "ymin": [98, 99, 101, 103, 104, 206], "yml": 12, "yn": [96, 220, 226], "ynm": [96, 205], "ynm_c": 96, "yop": 168, "yorgei": 255, "york": [29, 96, 113, 230, 238], "youyou_should_include_your_tests_in_coverag": 12, "young": [13, 135, 246], "your": [0, 2, 3, 4, 5, 8, 12, 13, 14, 16, 18, 21, 25, 27, 36, 43, 45, 48, 49, 50, 51, 53, 55, 56, 57, 59, 63, 88, 89, 115, 116, 124, 129, 130, 131, 132, 143, 151, 206, 220, 227, 232, 236, 239, 240, 258, 259, 286, 290, 292, 293, 295, 296], "your_email": 9, "your_hint": 236, "youremail": 9, "yourobject": 14, "yourself": [2, 7, 11, 12, 14, 43, 45, 57, 69, 254, 286, 301], "yp": 55, "ypp": 55, "yr": [210, 218], "yscale": 206, "yu": [113, 205, 230], "yule": 240, "yulesimon": 240, "yum": 9, "yun": [213, 214], "yun76": [213, 214], "yuvalf": 128, "yx": [36, 79, 199], "yxy": [36, 199], "yxz": 199, "yy": [36, 154, 199, 236], "yz": [36, 154, 199, 206], "yzx": [36, 199], "yzy": 199, "z": [4, 13, 14, 15, 16, 18, 22, 24, 27, 28, 30, 31, 32, 33, 35, 36, 37, 41, 43, 51, 54, 55, 56, 61, 65, 66, 69, 70, 79, 80, 87, 88, 89, 90, 91, 93, 94, 96, 100, 101, 102, 103, 104, 113, 115, 118, 120, 124, 130, 135, 136, 137, 143, 145, 147, 148, 149, 151, 154, 155, 157, 158, 159, 168, 170, 174, 184, 185, 187, 191, 195, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 219, 220, 221, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 244, 245, 246, 252, 253, 259, 264, 267, 268, 269, 270, 271, 273, 274, 285, 286, 288, 290, 291, 295, 296, 297, 298, 301, 302, 303, 305, 306, 308, 309, 310], "z0": [88, 227], "z1": [14, 210, 211, 238], "z1_sympi": 210, "z2": [14, 211], "z3": 211, "z4": 211, "z_": [89, 232], "z_0": [113, 232], "z_1": 113, "z_arrai": 206, "z_eq": 37, "z_k": 215, "z_n": [96, 214], "z_p": 213, "z_r": 159, "z_r_in": 159, "z_r_out": 159, "z_sympi": 210, "z_x": 137, "z_zz": 210, "za": 232, "zaletnyik": 214, "zassenhau": [213, 215], "zc": 210, "zcc09_ijc": 143, "zd_z": 14, "zdirect": 101, "ze": 96, "zeilberg": [87, 238], "zen": 14, "zeng": 229, "zerlegung": 215, "zero": [3, 15, 16, 18, 22, 24, 25, 26, 30, 33, 35, 36, 37, 41, 42, 43, 46, 53, 54, 61, 65, 66, 69, 78, 79, 80, 84, 87, 88, 91, 92, 93, 94, 96, 98, 102, 103, 104, 113, 115, 117, 118, 120, 122, 124, 127, 128, 130, 135, 143, 147, 151, 152, 153, 154, 157, 158, 162, 184, 188, 190, 192, 203, 205, 207, 208, 209, 210, 211, 215, 216, 218, 220, 223, 227, 228, 230, 232, 233, 236, 237, 238, 239, 240, 241, 256, 258, 259, 268, 270, 271, 291, 297, 298, 301, 302, 306, 309], "zero_color": 141, "zero_markers": 141, "zero_matrix": 41, "zero_monom": 211, "zero_to_the_power_of_zero": 88, "zerodivisionerror": [143, 211, 249, 259], "zerohandl": 65, "zeromatrix": [65, 120, 220], "zeropred": 65, "zeroth": [88, 131, 134, 215], "zeroth_order_activ": 18, "zerothorderactiv": [18, 131], "zeta": [4, 15, 16, 87, 88, 92, 93, 211, 215, 220, 227, 240], "zeta5": 211, "zeta7": 211, "zeta_": 211, "zeta_distribut": 240, "zeta_funct": 96, "zeta_pow": 215, "zfade4": 206, "zg": 79, "zgate": 174, "zhegalkin": 118, "zhegalkin_polynomi": 118, "zhenb": 229, "zhong": 229, "zhou": 124, "zigzag": 93, "ziki": 128, "zimmer": 215, "zip": [51, 67, 78, 89, 118, 128, 216, 226, 233, 236, 238, 255, 258, 298, 303], "zk": 215, "zlabel": 206, "znm": 96, "zo42": 80, "zoo": [15, 37, 41, 65, 88, 93, 94, 96, 115, 227, 229, 232], "zoom": 206, "zop": 168, "zotero": 0, "zout": 213, "zp": 100, "zsc347": 11, "zsol": 37, "zt": [96, 113], "zuckerman": 213, "zur": 214, "zx": [36, 154, 199], "zxy": 199, "zxz": [36, 151, 199, 264, 266], "zy": [36, 199], "zyla": 169, "zyx": 199, "zyz": [61, 199], "zz": [13, 36, 88, 93, 110, 111, 115, 120, 124, 125, 128, 154, 199, 207, 208, 209, 210, 213, 215, 216, 217, 218, 235], "zz_i": [209, 210, 213], "zz_python": 211, "zzx": 36, "\u00b2": 220, "\u00b3": 220, "\u00b9": 220, "\u00bc": 220, "\u00bd": 220, "\u00be": 220, "\u00f8yvind": 11, "\u010dert\u00edk": 0, "\u0142ukasz": 11, "\u0161": 0, "\u03b1": [5, 88, 205, 219], "\u03b1\u1d62": 88, "\u03b2": [69, 205], "\u03b2\u2081\u2082": 12, "\u03b3": [205, 286, 296], "\u03b3\u2081": 69, "\u03b3\u2082": 69, "\u03b4": 162, "\u03b8": [36, 116, 151, 162, 239, 269], "\u03bb": [15, 292], "\u03bd": 290, "\u03c0": [43, 92, 162, 220, 239, 286, 290, 296, 297], "\u03c7": 162, "\u03c8": 162, "\u03c9": 151, "\u1d62": 220, "\u1d63": 220, "\u1d64": 220, "\u1d65": 220, "\u1d66": 220, "\u1d67": 220, "\u1d68": 220, "\u1d69": 220, "\u1d6a": 220, "\u2070": 220, "\u2071": 220, "\u2074": 220, "\u2075": 220, "\u2076": 220, "\u2077": 220, "\u2078": 220, "\u2079": 220, "\u207f": 220, "\u2080": 220, "\u2081": 220, "\u2082": 220, "\u2083": 220, "\u2084": 220, "\u2085": 220, "\u2086": 220, "\u2087": 220, "\u2088": 220, "\u2089": 220, "\u2090": 220, "\u2091": 220, "\u2092": 220, "\u2093": 220, "\u2095": 220, "\u2096": 220, "\u2097": 220, "\u2098": 220, "\u2099": 220, "\u209a": 220, "\u209b": 220, "\u209c": 220, "\u2102": [220, 297], "\u2115": 220, "\u2115\u2080": 220, "\u211a": [207, 220], "\u211d": [220, 297], "\u2124": [219, 220, 239, 297], "\u212f": [11, 69, 162, 205, 220, 286, 290, 292, 296, 297], "\u2146": 220, "\u2148": [162, 205, 219, 220, 239, 297], "\u2153": 220, "\u2154": 220, "\u2155": 220, "\u2156": 220, "\u2157": 220, "\u2158": 220, "\u2159": 220, "\u215a": 220, "\u215b": 220, "\u215c": 220, "\u215d": 220, "\u215e": 220, "\u5f6d\u4e8e\u658c": 11, "\ud835\udc45": 274, "\ud835\udd40": 220, "\ud835\udd4c": 220, "\ud835\udfd8": 220, "\ud835\udfd9": 220}, "titles": ["Citing SymPy", "Debugging", "Dependencies", "Deprecation Policy", "Docstrings Style Guide", "Documentation Style Guide", "Contributing", "Introduction to Contributing", "Building the Documentation", "Setup Development Environment", "Guide for New Contributors", "Development Workflow Process", "Writing Tests", "List of active deprecations", "Best Practices", "Glossary", "Gotchas and Pitfalls", "Explanations", "Introduction to Biomechanical Modeling", "Biomechanics", "Physics", "Potential Issues/Advanced Topics/Future Features in Physics/Mechanics", "Autolev Parser", "Classical Mechanics", "Joints Framework in Physics/Mechanics", "Kane\u2019s Method in Physics/Mechanics", "Lagrange\u2019s Method in Physics/Mechanics", "Linearization in Physics/Mechanics", "Masses, Inertias, Particles and Rigid Bodies in Physics/Mechanics", "References for Physics/Mechanics", "SymPy Mechanics for Autolev Users", "Symbolic Systems in Physics/Mechanics", "Potential Issues/Advanced Topics/Future Features in Physics/Vector Module", "Scalar and Vector Field Functionality", "Vector", "Vector: Kinematics", "Vector &amp; ReferenceFrame", "Solve Output by Type", "Classification of SymPy objects", "Finite Difference Approximations to Derivatives", "SymPy Special Topics", "Assumptions", "Symbolic and fuzzy booleans", "Writing Custom Functions", "How-to Guides", "SymPy Logo", "Control Package Examples", "Physics", "Find the Roots of a Polynomial Algebraically or Numerically", "Solve Equations", "Reduce One or a System of Inequalities for a Single Variable Algebraically", "Solve a Diophantine Equation Algebraically", "Solve an Equation Algebraically", "Solve a Matrix Equation Algebraically", "Solve One or a System of Equations Numerically", "Solve an Ordinary Differential Equation (ODE) Algebraically", "Solve a System of Equations Algebraically", "Solving Guidance", "Welcome to SymPy\u2019s documentation!", "Installation", "abc", "Algebras", "Ask", "Assume", "Assumptions", "Predicates", "Refine", "Calculus", "Category Theory", "Code Generation", "Finitely Presented Groups", "Galois Groups", "Gray Code", "Group constructors", "Number of groups", "Combinatorics", "Named Groups", "Partitions", "Polycyclic Groups", "Permutation Groups", "Permutations", "Polyhedron", "Prufer Sequences", "Subsets", "Tensor Canonicalization", "Test Utilities", "Utilities", "Concrete", "Core", "Cryptography", "Differential Geometry", "Discrete", "Numerical Evaluation", "Combinatorial", "Elementary", "Functions", "Special", "Curves", "Ellipses", "Entities", "Geometry", "Lines", "Plane", "Points", "Polygons", "Utils", "About Holonomic Functions", "Converting other representations to holonomic", "Holonomic", "Internal API", "Operations on holonomic functions", "Representation of holonomic functions in SymPy", "Uses and Current limitations", "Computing Integrals using Meijer G-Functions", "Integrals", "Integrals", "Interactive", "Lie Algebra", "Logic", "Dense Matrices", "Matrix Expressions", "Immutable Matrices", "Matrices", "Matrix Kind", "Matrices (linear algebra)", "Matrix Normal Forms", "Sparse Matrices", "Sparse Tools", "Number Theory", "Numeric Computation", "Parsing", "Activation (Docstrings)", "Curve (Docstrings)", "Biomechanics API Reference", "Musculotendon (Docstrings)", "Beam (Docstrings)", "Solving Beam Bending Problems using Singularity Functions", "Cable (Docstrings)", "Continuum Mechanics", "Truss (Docstrings)", "Control", "Control System Plots", "Control", "Control API", "High Energy Physics", "Hydrogen Wavefunctions", "Matrices", "Actuator (Docstrings)", "Deprecated Classes (Docstrings)", "Expression Manipulation (Docstrings)", "Mechanics API Reference", "Joints Framework (Docstrings)", "Kane\u2019s Method &amp; Lagrange\u2019s Method (Docstrings)", "Linearization (Docstrings)", "Bodies, Inertias, Loads &amp; Other Functions (Docstrings)", "Pathway (Docstrings)", "Printing (Docstrings)", "System (Docstrings)", "Wrapping Geometry (Docstrings)", "Gaussian Optics", "Optics", "Medium", "Polarization", "Utilities", "Waves", "Pauli Algebra", "Quantum Harmonic Oscillator in 1-D", "Anticommutator", "Cartesian Operators and States", "Clebsch-Gordan Coefficients", "Circuit Plot", "Commutator", "Constants", "Dagger", "Gates", "Grover\u2019s Algorithm", "Hilbert Space", "Quantum Mechanics", "Inner Product", "Operator", "Operator/State Helper Functions", "Particle in a Box", "Qapply", "QFT", "Qubit", "Represent", "Shor\u2019s Algorithm", "Spin", "State", "Tensor Product", "Second Quantization", "Quantum Harmonic Oscillator in 3-D", "Dimensions and dimension systems", "More examples", "Unit Systems", "Philosophy behind unit systems", "Unit prefixes", "Physical quantities", "Units and unit systems", "Essential Classes", "Docstrings for basic field functions", "Essential Functions (Docstrings)", "Physics Vector API", "Kinematics (Docstrings)", "Printing (Docstrings)", "Wigner Symbols", "Plotting", "AGCA - Algebraic Geometry and Commutative Algebra Module", "Basic functionality of the module", "Introducing the domainmatrix of the poly module", "Introducing the Domains of the poly module", "Reference docs for the Poly Domains", "Polynomial Manipulation", "Internals of the Polynomial Manipulation Module", "Literature", "Number Fields", "Polynomials Manipulation Module Reference", "Series Manipulation using Polynomials", "Poly solvers", "Examples from Wester\u2019s Article", "Printing", "Term Rewriting", "Formal Power Series", "Fourier Series", "Series", "Limits of Sequences", "Sequences", "Series Expansions", "Sets", "Hongguang Fu\u2019s Trigonometric Simplification", "Hypergeometric Expansion", "Simplify", "Simplify", "Diophantine", "Solvers", "Inequality Solvers", "ODE", "PDE", "Solvers", "Solveset", "Stats", "N-dim array", "N-dim array expressions", "Tensor", "Methods", "Indexed Objects", "Tensor", "Tensor Operators", "Testing", "pytest", "Randomised Testing", "Run Tests", "Autowrap Module", "Codegen", "Decorator", "Enumerative", "Exceptions and Warnings", "Utilities", "Iterables", "Lambdify", "Memoization", "Miscellaneous", "Source Code Inspection", "Timing Utilities", "Essential Classes in sympy.vector (docstrings)", "Vector API", "Orienter classes (docstrings)", "Essential Functions in sympy.vector (docstrings)", "Basic Implementation details", "More about Coordinate Systems", "General examples of usage", "Scalar and Vector Field Functionality", "Vector", "Introduction", "Applications of Vector Integrals", "API Reference", "Basics", "Code Generation", "Logic", "Matrices", "Number Theory", "Physics", "Topics", "Utilities", "Tutorials", "Basic Operations", "Calculus", "SymPy Features", "Gotchas", "Introductory Tutorial", "Introduction", "Advanced Expression Manipulation", "Matrices", "What\u2019s Next", "Preliminaries", "Printing", "Simplification", "Solvers", "Biomechanical Model Example", "Biomechanics Tutorials", "Physics Tutorials", "A bicycle", "Duffing Oscillator with a Pendulum", "A four bar linkage", "Mechanics Tutorials", "Nonminimal Coordinates Pendulum", "Multi Degree of Freedom Holonomic System", "A rolling disc", "A rolling disc, with Kane\u2019s method", "A rolling disc, with Kane\u2019s method and constraint forces", "A rolling disc using Lagrange\u2019s Method"], "titleterms": {"": [25, 26, 27, 58, 152, 175, 186, 219, 229, 238, 239, 269, 274, 293, 302, 305, 308, 309, 310], "1": [4, 13, 22, 27, 46, 55, 113, 136, 166], "10": [8, 13, 136], "11": [13, 136], "12": 13, "13": 13, "14": 13, "2": [4, 22, 27, 46, 55, 113, 136], "2d": 115, "3": [4, 22, 46, 115, 136, 191], "4": [4, 13, 46, 136], "5": [4, 13, 46, 136], "6": [4, 13, 136], "7": [13, 136], "8": [13, 136], "9": [13, 136], "A": [18, 27, 39, 290, 297, 301, 303, 307, 308, 309, 310], "AND": 269, "As": 215, "Be": [14, 48, 50, 51, 52, 53, 54, 55], "For": 115, "If": 55, "Into": [52, 54, 56], "Its": 55, "No": [48, 51, 52, 53, 55], "Not": [3, 48, 50, 51, 52, 54, 55, 56, 57], "Of": 37, "One": [50, 54, 55], "That": [50, 51, 52, 54, 56, 57], "The": [3, 13, 27, 41, 43, 70, 78, 113, 195, 215, 227, 230, 270, 271, 290], "There": 55, "With": [48, 51, 52, 53, 54, 55, 56, 57], "__call__": 13, "__eq__": 14, "_eval_": 43, "_mat": 13, "_smat": 13, "a_and_b": 27, "abc": 60, "about": [106, 239, 269, 297], "abov": 41, "absorbing_probabilit": 13, "abstract": [69, 133, 138, 142, 144, 150, 160, 177, 202, 211], "acceler": [21, 32, 35, 227], "accept": 13, "access": 292, "account": 9, "accuraci": 92, "action": 12, "activ": [13, 18, 131, 298], "actuat": [18, 147, 298], "ad": 3, "add": [11, 13, 43, 88], "addit": [43, 110], "address": 11, "adic": 215, "advanc": [14, 21, 32, 219, 291, 292], "aesara": [129, 220], "agca": 207, "airi": 96, "algebra": [36, 48, 50, 51, 52, 53, 55, 56, 61, 117, 124, 165, 207, 210, 215, 219, 238, 297], "algorithm": [69, 70, 175, 186, 213, 216, 222, 227, 230], "all": [48, 50, 51, 52, 54, 55, 56], "all_root": 48, "also": [4, 88, 258], "altern": [36, 48, 50, 51, 52, 53, 54, 55, 56], "an": [11, 13, 14, 22, 52, 54, 55, 100, 195, 230, 239, 291], "anaconda": 59, "analysi": 193, "analyt": [50, 177], "angular": [28, 35], "ani": [57, 239], "annot": 13, "anticommut": 167, "antlr": 130, "apart": 296, "api": [3, 58, 109, 113, 115, 133, 143, 150, 202, 239, 252, 253, 265, 275], "appel": 216, "appli": [41, 113, 230], "applic": 274, "approxim": [39, 48, 69], "ar": [4, 36, 50, 55, 210, 239], "arbitrari": 55, "area": 274, "arg": [13, 14, 291], "argand": 113, "argument": [13, 16, 239], "arithmet": 215, "around": 230, "arrai": [13, 241, 242], "art": 206, "articl": 219, "as_real_imag": 43, "ascii": [206, 295], "ask": 62, "askhandl": 13, "assign": 16, "assum": 63, "assumpt": [13, 14, 38, 41, 43, 64, 88], "ast": [22, 69], "attach": 13, "attribut": [13, 14, 70, 78], "author": [11, 205], "auto": 8, "autolev": [22, 30], "automat": [14, 43, 219], "autowrap": [2, 69, 252], "avail": 100, "avoid": [3, 14], "b": [13, 96], "back": 219, "backend": [2, 130, 206], "background": 27, "backward": 3, "bar": 303, "base": [68, 90, 124, 207, 208, 219, 226, 239], "basi": [36, 213, 215], "basic": [12, 14, 88, 92, 124, 200, 208, 210, 216, 228, 268, 275, 276, 285, 292], "beam": [135, 136, 138], "been": 13, "behind": 195, "benchmark": 2, "bend": 136, "bessel": 96, "best": [4, 5, 14, 43], "beta": 96, "between": [16, 41, 197, 210], "bewar": 55, "beyond": 100, "bibliographi": [70, 78], "bicep": 298, "bicycl": 301, "binari": 13, "biomechan": [18, 19, 133, 298, 299], "block": 120, "bode": 141, "bodi": [13, 28, 154, 274], "bool": 42, "boolean": [37, 42, 118], "boundari": 55, "box": 181, "branch": [11, 113], "bug": [48, 50, 51, 52, 53, 54, 55, 56, 57, 115], "build": [2, 8], "c": [69, 220], "cabl": [137, 138], "cach": 88, "calcul": 274, "calculu": [36, 65, 67, 286], "call": [13, 50, 57], "can": [48, 50, 51, 52, 54, 55, 56, 57], "cancel": 296, "cannot": [50, 52, 55, 56], "canonic": 84, "capabl": 130, "capit": 5, "care": 14, "carmichael": 13, "cartesian": 168, "case": [43, 239], "categori": 68, "caveat": [60, 130], "cc": 211, "cfunction": 69, "chang": [3, 11, 13], "chebyshev": 96, "check": [12, 13, 200], "checklist": [3, 11], "choic": 21, "choos": 210, "circuit": 170, "cite": 0, "class": [4, 13, 27, 38, 68, 69, 87, 90, 121, 124, 126, 128, 130, 148, 199, 206, 215, 220, 233, 241, 264, 266], "classic": [23, 213], "classif": 38, "clebsch": 169, "close": [48, 52, 55, 56, 57], "cnode": 69, "co": 11, "code": [2, 3, 5, 7, 9, 11, 12, 13, 14, 21, 36, 69, 72, 220, 262, 275, 277], "codebas": 7, "codegen": [69, 253], "codeprint": 220, "coeffici": [169, 213], "collect": [14, 78, 221, 296], "collector": 78, "color": 206, "column": 292, "columnspac": 292, "combin": [41, 110], "combinator": [13, 75], "combinatori": 93, "combsimp": 296, "commit": 11, "common": [21, 32, 65, 219, 220, 221], "commut": [171, 207], "compar": 14, "comparison": 13, "compat": [13, 242], "complet": [22, 43, 48], "complex": [48, 54, 94, 210], "composit": 110, "compound": [226, 228, 240], "compress": 70, "comput": [78, 113, 129, 177, 219, 290], "concept": 208, "conclus": 298, "concret": 87, "condit": [13, 55, 113, 228], "conditionset": 13, "conduct": 7, "configur": [9, 213], "confluenc": 230, "conserv": [33, 271], "consid": [48, 50, 51, 52, 53, 54, 55, 56], "consist": [12, 57], "constant": [55, 172, 195], "constraint": 309, "construct": [70, 78, 242], "constructor": [73, 216, 292], "contain": 88, "content": [64, 75, 95, 108, 114, 212, 224, 234, 243], "continu": [240, 296], "continuum": 138, "contract": 241, "contribut": [6, 7, 11, 58, 217], "contributor": 10, "control": [46, 140, 141, 142, 143, 206], "conv_": 13, "converg": 113, "convers": 197, "convert": [107, 110, 210, 285], "convolut": 91, "coordin": [13, 21, 27, 206, 268, 269, 271, 273, 305], "coordsys3d": 269, "copi": 55, "copyright": 205, "core": [13, 88, 120], "coset": 70, "cosett": 70, "cover": 91, "coverag": 12, "coxet": 70, "creat": [9, 11, 13, 16, 43, 54, 124], "credit": 205, "crootof": 48, "cross": 4, "cryptographi": 89, "curl": [33, 271], "current": 112, "curv": [18, 97, 132], "curvilinear": 271, "custom": [14, 18, 43, 206, 220], "cutil": 69, "cxxnode": 69, "cyclotom": 219, "d": [166, 191], "dagger": 173, "damp": 18, "data": 13, "de": [238, 239], "deal": 239, "debian": 8, "debug": [1, 12], "decompos": 50, "decomposit": [215, 216, 219], "decor": 254, "decrement": 230, "defin": [14, 43, 55, 298, 302], "definit": [41, 43, 106], "degre": 306, "del": [270, 271], "delet": [11, 292], "delta": 96, "denest": 14, "denomin": 57, "dens": [119, 210, 211, 213], "densematrix": 13, "depend": [2, 8, 12, 27, 210, 269], "deprec": [3, 12, 13, 148], "depth": [78, 100], "deriv": [36, 39, 55, 241, 271, 286], "descript": [11, 298], "detail": [252, 253, 268], "detect": 221, "determin": 292, "deutil": 238, "develop": [2, 7, 9, 11, 88], "diagon": [241, 292], "diagram": 68, "dictionari": [16, 37, 48, 56], "differ": [30, 39, 41, 67, 210, 269, 286], "differenti": [21, 43, 55, 90, 110, 238, 239, 297, 298], "differentiate_finit": 13, "diffgeom": 13, "dim": [241, 242], "dimens": [100, 192, 195], "dimension": 193, "diophantin": [51, 233, 238, 239], "dirac": 96, "direct": [39, 271], "directli": [27, 269], "disc": [307, 308, 309, 310], "discontinu": 96, "discret": [91, 240], "discretemarkovchain": 13, "dispers": 216, "distribut": [13, 213, 240], "diverg": [33, 271, 274], "divid": 43, "divis": 208, "dixonresult": 13, "dmp": [13, 210], "do": [57, 239], "doc": [8, 211], "docker": 8, "docstr": [4, 131, 132, 134, 135, 137, 139, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 200, 201, 203, 204, 264, 266, 267], "doctest": 12, "document": [2, 3, 4, 5, 7, 8, 11, 58], "doe": [3, 16, 239], "doit": 43, "domain": [52, 208, 210, 211, 216, 219, 239], "domainmatrix": 209, "don": 14, "dot": 295, "dotprint": 220, "doubl": 16, "draw": 68, "duf": 302, "dummi": 12, "dummy_fmt": 13, "dup": 210, "dyadic": [28, 32, 268, 269], "dynam": [18, 22], "dynamicsymbol": 32, "easi": 43, "ecm": 128, "eigenvalu": 292, "eigenvector": 292, "elast": 18, "element": [27, 53, 210, 215], "elementari": [94, 207, 226, 228], "ellips": 98, "ellipt": 96, "email": [9, 11], "emploi": 239, "empti": 37, "encod": 216, "end": 230, "energi": [28, 144], "ensur": [54, 57, 239], "entiti": [99, 100, 206], "entri": [3, 11, 124], "enum": 255, "enumer": [70, 93], "environ": [7, 9], "eq": [13, 52], "equal": [16, 51, 52, 288], "equat": [25, 26, 27, 32, 48, 49, 51, 52, 53, 54, 55, 56, 57, 193, 208, 233, 238, 239, 297, 298], "equival": [30, 118], "error": [92, 96], "essenti": [199, 201, 264, 267], "euclidean": 208, "eval": 43, "evalf": [43, 88, 129, 285], "evalu": [13, 14, 16, 30, 43, 48, 92, 110, 291, 298], "ex": 211, "exact": [14, 48, 57], "exampl": [4, 11, 27, 31, 36, 43, 46, 48, 50, 51, 54, 56, 60, 88, 100, 112, 115, 128, 136, 144, 162, 193, 194, 195, 219, 220, 227, 230, 240, 241, 242, 245, 270, 290, 296, 298], "except": [12, 124, 130, 213, 256], "exercis": 294, "exist": [12, 113], "expand": [43, 219, 221, 296], "expand_func": 296, "expand_log": 296, "expand_power_bas": 296, "expand_power_exp": 296, "expand_trig": 296, "expans": [110, 227, 230, 286], "expect": 12, "experiment": 130, "explan": [4, 17, 58], "explicit": 242, "explicitli": [52, 55], "expon": [78, 219], "exponenti": [94, 96, 296], "expr": [13, 88], "expr_free_symbol": 13, "express": [12, 13, 14, 16, 48, 51, 52, 54, 69, 100, 107, 110, 118, 120, 130, 149, 210, 219, 242, 269, 285, 291], "exprtool": 88, "extend": 230, "extens": [207, 219], "extern": 12, "extra": [14, 216], "extract": [50, 51, 53, 55], "facil": 70, "factor": [48, 208, 213, 219, 296], "factori": 208, "fail": 12, "failur": 12, "fallback": 13, "fals": 13, "familiar": 7, "fast": 91, "featur": [21, 32, 130, 287], "fedora": 8, "fiber": 18, "field": [33, 200, 210, 213, 215, 219, 271, 273], "file": 11, "fill": 13, "final": 288, "find": [48, 54, 215, 216], "find_execut": 13, "finit": [39, 67, 70, 207, 210, 213, 215, 219, 230, 240, 286], "first": [3, 13, 18], "fix": [11, 22], "flag": 13, "float": [14, 16, 92], "flux": 274, "fma": 43, "fnode": 69, "forc": [18, 298, 302, 303, 309], "fork": 9, "form": [27, 48, 52, 55, 56, 57, 118, 125, 242], "formal": [216, 222], "format": [4, 5, 13, 57], "formula": [113, 230], "fortran": [69, 220], "found": 54, "four": 303, "fourier": [91, 223], "fraction": [216, 219, 296], "frame": [13, 36], "framework": [24, 151], "free": [70, 208], "freedom": 306, "fresnel": 96, "from": [13, 14, 16, 51, 52, 53, 57, 219, 242], "from_": 13, "fu": 229, "fulli": 43, "fun_ev": 13, "func": [38, 291], "function": [4, 12, 13, 14, 16, 21, 28, 33, 43, 48, 50, 52, 54, 55, 57, 69, 78, 87, 88, 94, 95, 96, 106, 107, 110, 111, 113, 118, 124, 128, 130, 136, 154, 177, 180, 200, 201, 206, 208, 210, 211, 216, 219, 220, 230, 233, 236, 237, 241, 267, 271, 295, 296], "further": [27, 288], "fuse": 43, "futil": 69, "futur": [21, 22, 32, 100], "fuzzi": 42, "g": [107, 110, 113, 230], "galoi": [71, 215], "gamma": [96, 144], "gammasimp": 296, "gate": 174, "gaussian": [159, 210, 211, 219], "gcd": [208, 213, 219], "gegenbau": 96, "gener": [2, 4, 5, 69, 78, 80, 210, 215, 239, 270, 275, 277], "geometr": 206, "geometri": [18, 90, 100, 158, 207], "get": [2, 7, 9, 16, 48], "get_epsilon": 13, "get_kronecker_delta": 13, "get_seg": 13, "get_upper_degre": 13, "gf": 211, "git": [9, 59], "github": [9, 12], "given": [54, 56], "glossari": 15, "good": 11, "gordan": 169, "gotcha": [16, 22, 41, 288], "gradient": [33, 271], "grai": 72, "groebner": [208, 213], "group": [70, 71, 73, 74, 76, 78, 79, 195, 215], "grover": 175, "gruntz": 227, "gr\u00f6bner": 219, "gtk": 220, "guid": [4, 5, 10, 12, 19, 23, 34, 44, 58, 133, 150, 202, 272], "guidanc": [48, 50, 51, 52, 53, 54, 55, 56, 57], "guidelin": [4, 5], "ha": 27, "hadamard": 91, "hadamardproduct": 13, "handl": [92, 239], "handler": [13, 14, 41], "hard": 2, "hardcod": 14, "harmon": [96, 166, 191], "have": [13, 52, 56, 219], "head": 5, "help": 16, "helper": [180, 220], "hermit": 96, "heurist": 236, "hexagon": 100, "high": 144, "hilbert": 176, "hint": [55, 236, 237], "holonom": [106, 107, 108, 110, 111, 306], "homomorph": [207, 215], "hongguang": 229, "how": [3, 36, 44, 58, 113, 239], "hydrogen": 145, "hyperbol": 94, "hyperexpand": 296, "hypergeometr": [87, 96, 107, 110, 222, 230], "hypothesi": 12, "i": [3, 12, 16, 27, 54, 55, 113, 129, 209, 220, 239, 290], "ideal": 207, "identifi": 7, "immut": [16, 121], "immutablematrix": 121, "immutablesparsematrix": 126, "implement": [33, 41, 113, 220, 230, 252, 253, 268, 271], "implic": 41, "implicitli": [48, 55], "import": 4, "improv": [22, 64], "impuls": 141, "includ": [50, 55, 57], "incompat": 3, "increas": 54, "increment": 230, "indefinit": 13, "independ": 55, "index": [10, 70, 78, 242, 245], "indic": 230, "inequ": [50, 235, 238, 239], "inertia": [28, 154, 298], "infer": 118, "infinit": [14, 52, 239], "inform": [236, 237], "initi": 55, "inner": 178, "input": [14, 41, 239], "insert": 292, "inspect": 262, "instal": [8, 9, 58, 59, 130, 294], "integ": [13, 94, 210], "integr": [13, 21, 55, 92, 96, 110, 112, 113, 114, 115, 208, 215, 274, 286], "interact": [2, 116, 206], "interest": [50, 290], "interfac": [21, 32, 206, 240], "intermedi": 13, "intern": [109, 113, 115, 210, 213, 215, 233], "interpret": 41, "interrog": 52, "intersect": [91, 100], "interv": [54, 206], "intfunc": 88, "introduc": [209, 210], "introduct": [7, 16, 18, 22, 30, 33, 35, 39, 61, 68, 69, 70, 78, 90, 100, 118, 133, 195, 206, 207, 208, 215, 219, 273, 290], "introductori": [284, 289], "intuit": 227, "invari": [14, 291], "invers": [16, 43, 94, 113], "is_": 41, "is_emptyset": 13, "issu": [11, 21, 22, 27, 32, 292], "iter": [13, 228, 258], "jacobi": 96, "javascript": 220, "join": 7, "joint": [13, 24, 151, 240], "jointsmethod": 13, "julia": 220, "junk": 11, "k": 211, "kane": [25, 27, 152, 305, 308, 309], "kei": [9, 30, 43, 291], "keyword": 16, "kind": [38, 88, 123], "kinemat": [35, 203, 298, 302], "kinematic_equ": 203, "kinet": 28, "known": 239, "kwarg": 27, "lagrang": [26, 27, 152, 302, 305, 310], "lagrangian": 28, "laguerr": 96, "lambda": 13, "lambdaprint": 220, "lambdifi": [2, 13, 129, 259, 285], "laplac": 113, "laplace_transform": 13, "lark": 130, "last": 3, "latex": [5, 130, 295], "latexprint": 220, "lcm": 208, "lead": 78, "legendr": 96, "length": 18, "level": 213, "lib": 220, "lie": [117, 236], "like": 13, "limit": [22, 41, 50, 51, 112, 225, 227, 286], "line": 101, "linear": [21, 27, 28, 56, 110, 124, 153, 195, 219, 238], "link": 30, "linkag": 303, "list": [7, 13, 16, 37, 48, 50], "literatur": [195, 214, 219], "live": 8, "load": [18, 28, 154], "local": 8, "locat": 269, "logarithm": [96, 296], "logcombin": 296, "logic": [2, 42, 118, 275, 278], "logo": 45, "long": 3, "longer": 13, "lookup": 113, "loos": 230, "low": 70, "lti": 143, "mac": 8, "mail": 7, "mailmap": 11, "main": 215, "make": [11, 52, 57], "managedproperti": 13, "manipul": [14, 118, 124, 149, 212, 213, 216, 217, 239, 291], "map": 11, "mapl": 220, "mark": 12, "markdown": 5, "marker": 13, "mass": [28, 274], "matadd": 13, "math": [5, 69], "mathemat": [4, 16, 30, 48], "mathematica": [13, 220], "mathieu": 96, "mathml": 295, "mathmlprint": 220, "mathrm": [130, 295], "matlab": 220, "matmul": 13, "matric": [13, 39, 53, 119, 120, 121, 122, 124, 126, 144, 146, 242, 275, 279, 292], "matrix": [13, 27, 53, 65, 120, 123, 124, 125, 240, 292], "max_degre": 13, "mdft": 13, "mechan": [13, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 133, 138, 150, 177, 240, 304], "mechanics_print": 156, "median": 100, "medium": 161, "meijer": [107, 110, 113, 230], "mellin": 113, "memoiz": 260, "messag": 11, "metaclass": 13, "method": [13, 25, 26, 27, 39, 43, 53, 59, 152, 220, 237, 239, 244, 269, 292, 302, 305, 308, 309, 310], "metric": 13, "might": 57, "minim": [78, 215], "misc": [13, 64], "miscellan": [43, 94, 100, 261], "mistak": 220, "mix": 13, "mixin": 13, "mlatex": 156, "mod": 88, "mode": 206, "model": [18, 298], "modifi": 11, "modul": [13, 32, 207, 208, 209, 210, 213, 215, 216, 233, 236, 237, 239, 252], "modular": [13, 213], "modularinteg": 13, "momenta": 28, "momentum": 28, "monomi": 216, "more": [193, 194, 227, 269, 290], "motion": 298, "move": [13, 230], "mpmath": 59, "mpprint": 156, "mpq": 211, "mprint": 156, "much": 14, "mul": 88, "multi": 306, "multidimension": 88, "multipl": [36, 48, 55, 110, 215], "multipli": 43, "multivari": [213, 219], "multivariate_result": 13, "muscl": 298, "musculotendon": [18, 134], "must": 53, "mutabl": 13, "m\u00f6biu": 91, "n": [13, 241, 242], "name": [9, 11, 14, 76], "nan": 27, "narr": 5, "necessarili": 52, "need": 195, "new": [10, 11, 13, 269], "new_method": 27, "next": 293, "nocond": 13, "node": 69, "non": 13, "noncontribut": 303, "nonlinear": 56, "nonminim": 305, "normal": [125, 219], "notat": 230, "note": [3, 27, 43, 88, 100, 227, 229, 288, 297], "nroot": 48, "ntheori": [13, 128], "nullspac": 292, "number": [14, 16, 65, 74, 88, 91, 92, 113, 128, 210, 215, 219, 275, 280], "numer": [14, 21, 30, 43, 48, 54, 55, 57, 92, 110, 115, 129, 286], "numpi": 124, "numsampl": 13, "object": [13, 14, 38, 245], "octav": 220, "od": [55, 236, 238, 239], "old": [41, 210], "onli": [2, 50, 55, 239], "onlin": 22, "oo": 27, "oper": [13, 16, 33, 36, 110, 124, 168, 177, 179, 180, 200, 230, 241, 247, 268, 270, 271, 285, 292], "optic": [159, 160], "optim": 238, "option": [2, 9, 52, 55, 56, 57, 213], "order": [13, 18, 51, 65, 216, 227, 230], "ordinari": [55, 238, 239], "orient": [266, 269], "orient_new": 269, "orthogon": [96, 216, 271], "oscil": [166, 191, 302], "other": [33, 41, 43, 59, 107, 154, 269], "our": 7, "output": [21, 37, 239], "over": [115, 219, 228], "overview": [70, 78, 113], "overwrit": 14, "p": [211, 215], "packag": 46, "pair": 55, "paper": 7, "pappu": 100, "paramet": [4, 51, 230, 239], "pars": [2, 57, 130], "parser": [13, 22, 130], "partial": [216, 219, 238, 239], "particl": [28, 181], "partit": [77, 258], "pass": 13, "passiv": 18, "past": 55, "pathwai": [18, 155], "pauli": 165, "pde": [237, 238, 239], "pdf": 8, "pendulum": [302, 305], "per": 50, "perform": 64, "perhap": 48, "perimet": 274, "period": 50, "permut": [13, 79, 80], "perus": 7, "philosophi": 195, "physic": [13, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 47, 144, 197, 202, 275, 281, 284, 300], "pick": 11, "piecewis": 94, "pitfal": 16, "pkgdata": 13, "place": 3, "plan": 239, "plane": [102, 113], "plot": [2, 13, 141, 170, 206], "plotgrid": 206, "point": [13, 21, 32, 35, 43, 92, 103, 268], "polar": [113, 162], "pole": 141, "poli": [13, 209, 210, 211, 218], "polici": [3, 12], "polycycl": 78, "polycyclicgroup": 78, "polygon": [104, 115], "polyhedra": 115, "polyhedron": 81, "polynomi": [13, 48, 96, 110, 208, 210, 211, 212, 213, 215, 216, 217, 219, 238, 296], "polynomialr": 210, "polyr": 210, "polytop": 115, "possibl": [3, 52, 292], "potenti": [21, 27, 28, 32, 33, 271], "powdenest": 296, "power": [88, 222, 228, 290, 296], "powsimp": 296, "practic": [4, 5, 14, 43], "preced": 220, "precis": 54, "predefin": 69, "predic": [41, 64, 65], "prefer": [5, 57], "prefix": 196, "preliminari": 294, "present": [70, 78], "pretti": [13, 220, 295], "pretty_symbologi": 13, "prettyform": 13, "prettyprint": 220, "prevent": 291, "preview": 220, "prime": 215, "print": [2, 13, 21, 32, 43, 69, 116, 156, 204, 220, 295], "print_cycl": 13, "printer": [2, 69, 220, 295], "privat": 13, "problem": [136, 215, 270], "process": [11, 240], "product": [91, 178, 189, 241, 270], "productset": 13, "program": 238, "programmat": [51, 52], "properti": [13, 41, 207], "prufer": 82, "public": 3, "pull": [7, 11], "punctuat": 5, "purpos": 3, "put": 52, "pyglet": 206, "pytest": 249, "python": [14, 16, 69], "pythoncodeprint": 220, "pythonprint": 220, "pyutil": 69, "q": 128, "qappli": 182, "qft": 183, "qq": 211, "qq_i": 211, "quadrilater": 270, "qualiti": [11, 12], "quantiti": [193, 195, 197, 269], "quantiz": 190, "quantum": [166, 177, 191], "quaternion": 61, "qubit": 184, "queri": 64, "question": 59, "quick": [285, 286, 288, 291, 292], "quotient": 211, "ramp": 141, "random": [12, 88, 240], "randomindexedsymbol": 13, "randomis": 250, "randtest": 13, "ration": [14, 16, 210, 211, 216, 219, 222, 236, 296], "rawmatrix": 13, "rcodeprint": 220, "read": [7, 288], "real": [54, 210], "real_root": 48, "rebuild": 8, "recommend": [2, 5], "rectangl": 13, "recurr": 238, "recurs": [14, 226, 291], "reduc": [50, 219], "reduct": [50, 230], "redund": 13, "refer": [4, 18, 29, 34, 36, 41, 46, 58, 61, 68, 71, 87, 88, 90, 100, 106, 113, 115, 120, 121, 124, 126, 128, 130, 133, 150, 162, 165, 195, 202, 205, 206, 207, 211, 213, 215, 216, 217, 227, 229, 230, 233, 239, 252, 253, 272, 275, 298, 302], "referenc": 4, "referencefram": [32, 36], "refin": 66, "regress": 12, "reidemeist": 70, "relat": [13, 16, 33, 36, 37, 41, 50, 88, 96, 118, 271], "releas": 3, "reloc": 13, "remaind": 213, "remind": 43, "renam": 13, "rep": 13, "report": [48, 50, 51, 52, 53, 54, 55, 56, 57], "repres": [48, 52, 57, 113, 185, 210, 215], "represent": [36, 107, 111, 195, 210], "request": [7, 11], "requir": [3, 8], "residu": 227, "respons": [141, 220], "restrict": 52, "result": [48, 50, 51, 52, 53, 54, 55, 56, 219], "return": [50, 55, 239], "reveal": 303, "review": 7, "rewrit": [13, 43, 69, 221, 296], "riccati": 236, "riemann": 96, "rigid": [18, 28], "ring": [207, 210, 211], "roll": [307, 308, 309, 310], "root": [48, 54, 216], "rotat": 124, "rough": 30, "routin": 253, "row": 292, "rr": 211, "rref": 292, "rs_seri": 217, "rule": [229, 270], "run": [2, 11, 12, 59, 251], "runtim": 130, "rust": 220, "sage": 2, "same": 53, "sampl": [4, 13], "satisfi": 50, "scalar": [33, 271, 273], "schreier": 70, "scipi": [54, 55], "search": 239, "second": 190, "section": 4, "see": [4, 88, 258, 270], "select": 55, "sentenc": 4, "separ": 14, "sequenc": [82, 110, 213, 216, 225, 226], "seri": [110, 206, 217, 222, 223, 224, 227, 286], "server": 8, "session": 116, "set": [9, 13, 36, 38, 52, 55, 56, 65, 100, 228, 239, 295], "set_potential_energi": 13, "setkind": 228, "setup": [7, 9], "sever": 53, "shape": 292, "shor": 186, "should": [3, 129], "sign": [16, 288], "silenc": 13, "simpl": [18, 219], "simplif": [43, 92, 118, 229, 296], "simplifi": [14, 57, 69, 213, 231, 232, 296], "simul": 298, "singl": [4, 16, 37, 50], "singleton": [88, 226, 228], "singular": [67, 136], "skip": 12, "slow": [12, 27], "smt": 220, "so": 129, "softwar": 7, "solenoid": [33, 271], "solut": [48, 51, 52, 53, 54, 55, 56, 57, 177, 239, 270], "solv": [32, 37, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 136, 208, 215, 238, 239, 297], "solver": [13, 55, 218, 234, 235, 236, 238, 239, 297], "solveset": [52, 239], "some": [13, 30, 55, 239], "someth": [7, 12], "sort": [14, 88], "sourc": [2, 262], "space": [176, 195, 230], "spars": [126, 127, 210, 211, 213], "sparsematrix": [13, 126], "special": [12, 16, 40, 69, 96, 216, 228, 296], "specif": [55, 69], "specifi": [51, 55, 206], "speed": [21, 27, 48, 52, 53, 56, 57], "spell": 5, "spheric": 96, "sphinx": 4, "spin": 187, "spline": 96, "sqrt": 16, "squar": [53, 208], "srepr": [220, 295], "ssh": 9, "standard": 70, "stat": [13, 240], "state": [168, 177, 180, 188], "static": 13, "statist": 2, "step": [141, 239], "stochast": 240, "stochasticprocess": 13, "stoke": 274, "store": 14, "str": 295, "string": [13, 14, 41, 57, 285], "stringpict": 13, "strprinter": 220, "structur": [25, 26, 195, 233], "style": [4, 5, 12], "sub": 129, "subexpress": 221, "subfield": 215, "subgroup": 70, "submodul": [13, 100], "subresult": 213, "subset": [83, 91], "substitut": [21, 32, 52, 54, 285], "subword": 78, "sum": 92, "summari": 4, "support": 219, "surfac": 274, "switch": 22, "symbol": [13, 14, 16, 27, 31, 41, 42, 43, 50, 51, 53, 88, 107, 205, 210, 216, 219, 239, 288, 290], "symbolicsystem": 31, "symengin": 2, "sympi": [0, 7, 9, 13, 14, 16, 30, 33, 38, 39, 40, 45, 50, 52, 56, 58, 59, 69, 111, 130, 210, 264, 267, 268, 271, 285, 287, 290], "sympifi": [13, 88], "syntax": 69, "system": [24, 31, 41, 50, 54, 56, 141, 157, 192, 194, 195, 198, 236, 238, 268, 269, 271, 273, 298, 306], "syzygi": 207, "t": 14, "tabl": [113, 118, 230], "technic": 3, "tendon": 18, "tensor": [13, 84, 96, 189, 243, 246, 247], "tensorhead": 13, "tensorindextyp": 13, "tensorsymmetri": 13, "tensortyp": 13, "term": [87, 219, 221, 227], "test": [2, 11, 12, 13, 85, 118, 219, 248, 250, 251, 292], "theanocod": 13, "theorem": [100, 113, 274], "theoret": 91, "theori": [65, 68, 128, 275, 280], "thi": [113, 239], "third": 270, "three": [42, 100], "through": 291, "time": 263, "tip": [43, 285, 286, 288, 291, 292], "titl": 11, "to_int": 13, "todd": 70, "todo": 115, "tone": 5, "too": 14, "tool": [69, 127], "topic": [21, 32, 40, 275, 282], "trace": 13, "tradeoff": 48, "transform": [91, 113, 115, 130, 269], "transolv": 239, "travers": [13, 88], "tree": [69, 210, 220, 291], "tricep": 298, "trig": 16, "trigonometr": [94, 96, 229, 296], "trigsimp": 296, "true": 27, "truss": [138, 139], "truth": [100, 118], "try": 3, "tupl": [13, 16, 37, 50, 216], "tutori": [58, 233, 284, 289, 299, 300, 304], "two": 288, "type": [5, 12, 37, 50, 69, 96, 200, 239, 240], "ubuntu": 8, "ufuncifi": 129, "unchang": 12, "uncollect": 78, "understand": 291, "undocu": 213, "unevalu": 55, "unicod": [13, 295], "unifi": 210, "unit": [194, 195, 196, 198], "univari": [213, 219], "up": [52, 53, 56, 57, 295], "updat": 12, "us": [2, 5, 7, 13, 27, 28, 36, 39, 48, 50, 51, 52, 53, 54, 55, 56, 57, 69, 91, 112, 113, 129, 136, 206, 217, 239, 269, 310], "usag": [14, 22, 31, 100, 210, 270], "user": [11, 30, 233, 236, 237], "usual": 53, "util": [13, 69, 85, 86, 105, 124, 163, 215, 238, 257, 263, 275, 283], "v": [14, 16, 42, 210], "valid": 113, "valu": [37, 42, 57], "valuat": 215, "variabl": [16, 50, 55, 57, 206, 240, 269, 298, 302], "variat": 258, "variou": [13, 219], "vector": [23, 32, 33, 34, 35, 36, 53, 78, 150, 200, 202, 213, 264, 265, 267, 268, 269, 271, 272, 273, 274], "veloc": [18, 35], "verifi": [51, 274], "versin": 43, "version": 13, "view": 8, "virtual": 9, "visual": [30, 100], "volum": 274, "walk": 291, "walsh": 91, "warn": [12, 13, 256], "wave": 164, "wavefunct": 145, "we": 239, "weight": 67, "welcom": 58, "wester": 219, "what": [3, 27, 209, 210, 239, 290, 293], "when": [3, 57, 113], "where": 239, "which": [50, 52, 56, 129, 220], "why": [239, 290], "wigner": 205, "window": [8, 206], "within": 16, "without": [48, 55], "word": [70, 78], "work": [7, 51, 53, 55, 100, 219], "workflow": 11, "wrap": [18, 158], "write": [4, 5, 11, 12, 43], "wrong": 239, "x": 211, "xstr": 13, "you": 57, "your": [7, 9, 11, 52], "zero": [51, 52, 57, 141, 213, 219, 292], "zeroth": 18, "zeta": 96, "zoo": 27, "zz": 211, "zz_i": 211}})