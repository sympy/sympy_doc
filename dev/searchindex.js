Search.setIndex({"alltitles": {"(Optional) Configure Git Settings": [[9, "optional-configure-git-settings"]], "1. Completing Dynamics Online": [[142, "completing-dynamics-online"]], "1. Single-Sentence Summary": [[4, "single-sentence-summary"]], "1. Symbolic linearization with A_and_B=True is slow": [[156, "symbolic-linearization-with-a-and-b-true-is-slow"]], "1. Using the Linearizer class directly:": [[156, "using-the-linearizer-class-directly"], [156, "id2"]], "2. Explanation Section": [[4, "explanation-section"]], "2. Fixing Issues": [[142, "fixing-issues"]], "2. The linearized form has nan, zoo, or oo as matrix elements": [[156, "the-linearized-form-has-nan-zoo-or-oo-as-matrix-elements"]], "2. Using the linearize class method:": [[156, "using-the-linearize-class-method"], [156, "id3"]], "3. Examples Section": [[4, "examples-section"]], "3. Switching to an AST": [[142, "switching-to-an-ast"]], "4. Parameters Section": [[4, "parameters-section"]], "5. See Also Section": [[4, "see-also-section"]], "6. References Section": [[4, "references-section"]], "A Direct Method Using SymPy Matrices": [[20, "a-direct-method-using-sympy-matrices"]], "A More Interesting Example": [[299, "a-more-interesting-example"]], "A Note about Equations": [[306, "a-note-about-equations"]], "A Note on Dependent Coordinates and Speeds": [[156, null]], "A Simple Musculotendon Model": [[292, "a-simple-musculotendon-model"]], "A bicycle": [[144, "a-bicycle"]], "A four bar linkage": [[145, "a-four-bar-linkage"]], "A rolling disc": [[148, "a-rolling-disc"]], "A rolling disc using Lagrange\u2019s Method": [[151, "a-rolling-disc-using-lagrange-s-method"]], "A rolling disc, with Kane\u2019s method": [[149, "a-rolling-disc-with-kane-s-method"]], "A rolling disc, with Kane\u2019s method and constraint forces": [[150, "a-rolling-disc-with-kane-s-method-and-constraint-forces"]], "AGCA - Algebraic Geometry and Commutative Algebra Module": [[214, "agca-algebraic-geometry-and-commutative-algebra-module"]], "ANTLR Backend": [[111, "antlr-backend"]], "ANTLR \\mathrm{\\LaTeX} Parser Caveats": [[111, "antlr-mathrm-latex-parser-caveats"]], "API Reference": [[39, "api-reference"], [259, "module-sympy.utilities.autowrap"], [260, "module-sympy.utilities.codegen"], [282, "api-reference"]], "API reference": [[96, "api-reference"], [96, "id39"]], "ASCII Pretty Printer": [[304, "ascii-pretty-printer"]], "AST Type Tree": [[50, "ast-type-tree"]], "About Holonomic Functions": [[87, "about-holonomic-functions"]], "Abstract": [[116, null], [120, null], [124, null], [126, null], [152, null], [162, null], [179, null], [209, null]], "Abstract Domains": [[218, "abstract-domains"]], "Acceleration of Points": [[129, "acceleration-of-points"], [201, "acceleration-of-points"]], "Accessing Rows and Columns": [[301, "accessing-rows-and-columns"]], "Accuracy and error handling": [[73, "accuracy-and-error-handling"]], "Activation (Docstrings)": [[112, "module-sympy.physics.biomechanics.activation"]], "Activation Dynamics": [[292, "activation-dynamics"]], "Actuator (Docstrings)": [[130, "module-sympy.physics.mechanics.actuator"]], "Actuators": [[292, "actuators"]], "Add Tests": [[11, "add-tests"]], "Add your name and email address to the .mailmap file.": [[11, "add-your-name-and-email-address-to-the-mailmap-file"]], "Adding the deprecation to the code": [[3, "adding-the-deprecation-to-the-code"]], "Addition and Multiplication": [[91, "addition-and-multiplication"]], "Additional Tips": [[24, "additional-tips"]], "Advanced Expression Manipulation": [[300, "advanced-expression-manipulation"]], "Advanced Functionality": [[129, "advanced-functionality"]], "Advanced Interfaces": [[129, "advanced-interfaces"], [201, "advanced-interfaces"]], "Advanced Methods": [[301, "advanced-methods"]], "Advanced Usage": [[14, "advanced-usage"]], "Advanced factoring over finite fields": [[226, "advanced-factoring-over-finite-fields"]], "Aesara": [[110, "aesara"]], "Aesara Code printing": [[227, "module-sympy.printing.aesaracode"]], "Airy Functions": [[77, "airy-functions"]], "Algebraic Solution With Root Multiplicities": [[29, "algebraic-solution-with-root-multiplicities"]], "Algebraic Solution Without Root Multiplicities": [[29, "algebraic-solution-without-root-multiplicities"]], "Algebraic equations": [[245, "algebraic-equations"]], "Algebraic number fields": [[217, "algebraic-number-fields"], [222, "algebraic-number-fields"]], "Algebraically dependent generators": [[217, "algebraically-dependent-generators"]], "Algebras": [[42, "algebras"]], "Algorithms (sympy.codegen.algorithms)": [[50, "module-sympy.codegen.algorithms"]], "Alternative Representation": [[211, "alternative-representation"]], "Alternatives to Consider": [[29, "alternatives-to-consider"], [31, "alternatives-to-consider"], [32, "alternatives-to-consider"], [34, "alternatives-to-consider"], [35, "alternatives-to-consider"], [36, "alternatives-to-consider"], [37, "alternatives-to-consider"]], "Alternatives to consider": [[33, "alternatives-to-consider"]], "An example": [[197, "an-example"], [237, "an-example"]], "An in-depth example: Pappus\u2019 Hexagon Theorem": [[81, "an-in-depth-example-pappus-hexagon-theorem"]], "Anaconda": [[40, "anaconda"]], "Analytic Solutions": [[179, "analytic-solutions"]], "Angular Acceleration": [[210, "angular-acceleration"]], "Angular Momentum": [[157, "angular-momentum"]], "Angular Velocity": [[210, "angular-velocity"]], "Anticommutator": [[169, "module-sympy.physics.quantum.anticommutator"]], "Appell sequences": [[223, "appell-sequences"]], "Applications of Vector Integrals": [[281, "applications-of-vector-integrals"]], "Applying assumptions to string inputs": [[22, "applying-assumptions-to-string-inputs"]], "Applying the Integral Theorems": [[94, "applying-the-integral-theorems"]], "Applying the Operators": [[237, "applying-the-operators"]], "Approximate Numeric Solution With Root Multiplicities": [[29, "approximate-numeric-solution-with-root-multiplicities"]], "Args Invariants": [[14, "args-invariants"]], "Arithmetic with module elements": [[222, "arithmetic-with-module-elements"]], "As elements of finitely-generated modules": [[222, "as-elements-of-finitely-generated-modules"]], "As number field elements": [[222, "as-number-field-elements"]], "Ask": [[43, "module-sympy.assumptions.ask"]], "Assume": [[44, "module-sympy.assumptions.assume"]], "Assumptions": [[22, "assumptions"], [24, "assumptions"], [45, "module-sympy.assumptions"]], "Assumptions predicates for the (old) assumptions": [[22, "id28"]], "Attributes of Collector": [[59, "attributes-of-collector"]], "Attributes of CosetTable": [[51, "attributes-of-cosettable"]], "Attributes of PolycyclicGroup": [[59, "attributes-of-polycyclicgroup"]], "Authors": [[212, "authors"]], "Auto-Rebuild with the Live Server": [[8, "auto-rebuild-with-the-live-server"]], "Autolev Parser": [[142, "autolev-parser"]], "Autowrap": [[2, "autowrap"], [50, "autowrap"]], "Autowrap Module": [[259, "autowrap-module"]], "Available Entities": [[81, "available-entities"]], "Avoid Manipulating Expressions as Strings": [[14, "avoid-manipulating-expressions-as-strings"]], "Avoid Storing Extra Attributes on an Object": [[14, "avoid-storing-extra-attributes-on-an-object"]], "Avoid String Inputs": [[14, "avoid-string-inputs"]], "Avoid Too Much Automatic Evaluation": [[14, "avoid-too-much-automatic-evaluation"]], "Avoid simplify()": [[14, "avoid-simplify"]], "Avoiding Infinite Recursion from Assumptions Handlers": [[14, "avoiding-infinite-recursion-from-assumptions-handlers"]], "B-Splines": [[77, "b-splines"]], "Backends": [[213, "backends"]], "Background": [[156, "background"]], "Base Class Reference": [[49, "module-sympy.categories"], [71, "base-class-reference"]], "Base Rings": [[214, "base-rings"]], "Basic Implementation details": [[275, "basic-implementation-details"]], "Basic Manipulation": [[105, "basic-manipulation"]], "Basic Methods": [[301, "basic-methods"]], "Basic Operations": [[294, "basic-operations"], [301, "basic-operations"]], "Basic Sets": [[235, "module-sympy.sets.sets"]], "Basic Usage": [[14, "basic-usage"]], "Basic concepts": [[215, "basic-concepts"]], "Basic functionality": [[215, "basic-functionality"]], "Basic functionality of the module": [[215, "basic-functionality-of-the-module"]], "Basic polynomial manipulation functions": [[223, "basic-polynomial-manipulation-functions"]], "Basic usage of domains": [[217, "basic-usage-of-domains"]], "Basics": [[73, "basics"], [282, "basics"], [283, "basics"]], "Basics for Writing Tests": [[12, "basics-for-writing-tests"]], "Be Careful Comparing and Sorting Symbolic Objects": [[14, "be-careful-comparing-and-sorting-symbolic-objects"]], "Beam": [[118, "beam"], [120, "beam"]], "Beam (Docstrings)": [[117, "module-sympy.physics.continuum_mechanics.beam"]], "Bessel Type Functions": [[77, "module-sympy.functions.special.bessel"]], "Best Practices": [[14, "best-practices"]], "Best Practices for Writing Docstrings": [[4, "best-practices-for-writing-docstrings"]], "Best Practices for Writing Documentation": [[5, "best-practices-for-writing-documentation"]], "Best Practices for eval()": [[24, "best-practices-for-eval"]], "Beware Copying and Pasting Results": [[36, "beware-copying-and-pasting-results"]], "Bibliography": [[51, "bibliography"], [59, "bibliography"]], "Biceps": [[291, "biceps"]], "Biomechanical Model Example": [[291, "biomechanical-model-example"]], "Biomechanics": [[116, "biomechanics"]], "Biomechanics API Reference": [[114, "biomechanics-api-reference"]], "Biomechanics Tutorials": [[293, "biomechanics-tutorials"]], "Block Matrices": [[101, "block-matrices"]], "Bode Plot": [[123, "bode-plot"]], "Bodies": [[137, "bodies"]], "Bodies, Inertias, Loads & Other Functions (Docstrings)": [[137, "bodies-inertias-loads-other-functions-docstrings"]], "Boolean functions": [[99, "boolean-functions"]], "Boolean or Relational": [[18, "boolean-or-relational"]], "Branch names": [[11, "branch-names"]], "Build the Docs": [[8, "build-the-docs"]], "Building the Documentation": [[2, "building-the-documentation"], [8, "building-the-documentation"]], "C code printers": [[227, "module-sympy.printing.c"]], "C specific AST nodes (sympy.codegen.cnodes)": [[50, "module-sympy.codegen.cnodes"]], "C utilities (sympy.codegen.cutils)": [[50, "module-sympy.codegen.cutils"]], "C++ code printers": [[227, "module-sympy.printing.cxx"]], "C++ specific AST nodes (sympy.codegen.cxxnodes)": [[50, "module-sympy.codegen.cxxnodes"]], "CC": [[218, "cc"]], "Cable": [[119, "module-sympy.physics.continuum_mechanics.cable"], [120, "cable"]], "Cable (Docstrings)": [[119, "cable-docstrings"]], "Calculation of Flux": [[281, "calculation-of-flux"]], "Calculation of Perimeter, Surface Area, and Volume": [[281, "calculation-of-perimeter-surface-area-and-volume"]], "Calculation of mass of a body": [[281, "calculation-of-mass-of-a-body"]], "Calculus": [[46, "calculus"], [48, "module-sympy.calculus"], [295, "calculus"]], "Calling sympy.stats.StochasticProcess.distribution with RandomIndexedSymbol": [[13, "calling-sympy-stats-stochasticprocess-distribution-with-randomindexedsymbol"]], "Capitalization": [[5, "capitalization"]], "Cartesian Operators and States": [[170, "module-sympy.physics.quantum.cartesian"]], "Category Theory": [[49, "category-theory"]], "Caveats": [[41, "caveats"]], "Change in joint attachment point argument": [[13, "change-in-joint-attachment-point-argument"]], "Chebyshev Polynomials": [[77, "chebyshev-polynomials"]], "Checking the type of vector field": [[203, "checking-the-type-of-vector-field"]], "Checklist": [[3, "checklist"]], "Checklist for Contributions": [[11, "checklist-for-contributions"]], "Choice of Coordinates and Speeds": [[129, "choice-of-coordinates-and-speeds"]], "Choosing a domain": [[217, "choosing-a-domain"]], "Choosing a domain for a Poly": [[217, "choosing-a-domain-for-a-poly"]], "Choosing generators": [[217, "choosing-generators"]], "Circuit Plot": [[172, "module-sympy.physics.quantum.circuitplot"]], "Citing SymPy": [[0, "citing-sympy"]], "Class Reference": [[222, "class-reference"]], "Classes": [[248, "classes"]], "Classes and functions for rewriting expressions (sympy.codegen.rewriting)": [[50, "module-sympy.codegen.rewriting"]], "Classes for abstract syntax trees (sympy.codegen.ast)": [[50, "module-sympy.codegen.ast"]], "Classical Mechanics": [[152, "classical-mechanics"]], "Classical remainder sequence": [[220, "classical-remainder-sequence"]], "Classification of SymPy objects": [[19, "classification-of-sympy-objects"]], "Clebsch-Gordan Coefficients": [[171, "module-sympy.physics.quantum.cg"]], "Co-Author": [[11, "co-author"]], "Code": [[5, "code"]], "Code Generation": [[2, "code-generation"], [50, "code-generation"], [282, "code-generation"], [284, "code-generation"]], "Code Output": [[129, "code-output"]], "Code Printers": [[2, "code-printers"]], "Code Quality": [[11, "code-quality"]], "Code Quality Checks": [[12, "code-quality-checks"]], "Code printers (sympy.printing)": [[50, "code-printers-sympy-printing"]], "CodePrinter": [[227, "module-sympy.printing.codeprinter"]], "Codegen": [[260, "codegen"]], "Codegen (sympy.utilities.codegen)": [[50, "codegen-sympy-utilities-codegen"]], "Columnspace": [[301, "columnspace"]], "Combinatorial": [[74, "combinatorial"]], "Combinatorics": [[56, "combinatorics"]], "Combining predicates with or": [[22, "combining-predicates-with-or"]], "Commit the changes": [[11, "commit-the-changes"]], "Common": [[46, "common"]], "Common Issues": [[129, "common-issues"], [201, "common-issues"]], "Common Subexpression Detection and Collection": [[228, "common-subexpression-detection-and-collection"]], "Common mistakes": [[227, "common-mistakes"]], "Commutator": [[173, "module-sympy.physics.quantum.commutator"]], "Compatibility with matrices": [[249, "compatibility-with-matrices"]], "Complete Examples": [[24, "complete-examples"]], "Complex Functions": [[75, "complex-functions"]], "Complex Roots": [[29, "complex-roots"]], "Composition with polynomials": [[91, "composition-with-polynomials"]], "Compound Distribution": [[247, "compound-distribution"]], "Compound Sequences": [[233, "compound-sequences"]], "Compound Sets": [[235, "compound-sets"]], "Compression and Standardization": [[51, "compression-and-standardization"]], "Computation of Collected Word": [[59, "computation-of-collected-word"]], "Computation of Exponent Vector": [[59, "computation-of-exponent-vector"]], "Computation of Leading Exponent": [[59, "computation-of-leading-exponent"]], "Computation of Minimal Uncollected Subword": [[59, "computation-of-minimal-uncollected-subword"]], "Computation of Polycyclic Presentation": [[59, "computation-of-polycyclic-presentation"]], "Computation of Subword Index": [[59, "computation-of-subword-index"]], "Computing Integrals using Meijer G-Functions": [[94, "computing-integrals-using-meijer-g-functions"]], "Computing reduced Gr\u00f6bner bases": [[226, "computing-reduced-grobner-bases"]], "Computing with automatic field extensions": [[226, "computing-with-automatic-field-extensions"]], "Conclusion": [[291, "conclusion"]], "Concrete": [[68, "concrete"]], "Concrete Class Reference": [[68, "concrete-class-reference"]], "Concrete Functions Reference": [[68, "concrete-functions-reference"]], "Condition Sets": [[235, "module-sympy.sets.conditionset"]], "Conditions of Convergence for Integral (1)": [[94, "conditions-of-convergence-for-integral-1"]], "Conditions of Convergence for Integral (2)": [[94, "conditions-of-convergence-for-integral-2"]], "Configuration": [[220, "module-sympy.polys.polyconfig"]], "Configure Your Name and Email in Git": [[9, "configure-your-name-and-email-in-git"]], "Conservative and Solenoidal fields": [[208, "conservative-and-solenoidal-fields"], [278, "conservative-and-solenoidal-fields"]], "Consistency Checks": [[12, "consistency-checks"]], "Constants": [[174, "module-sympy.physics.quantum.constants"], [197, "constants"]], "Constructing a presentation for a subgroup": [[51, "constructing-a-presentation-for-a-subgroup"]], "Constructing array expressions from index-explicit forms": [[249, "constructing-array-expressions-from-index-explicit-forms"]], "Construction of a Free Group": [[51, "construction-of-a-free-group"]], "Construction of words": [[51, "construction-of-words"]], "Contents": [[45, "contents"], [56, "contents"], [76, "contents"], [89, "contents"], [95, "contents"], [219, "contents"], [231, "contents"], [241, "contents"], [250, "contents"]], "Continuous Types": [[247, "continuous-types"]], "Continuum Mechanics": [[120, "continuum-mechanics"]], "Contribute": [[224, "contribute"]], "Contributing": [[6, "contributing"], [39, "contributing"]], "Control": [[122, "control"]], "Control API": [[125, "control-api"]], "Control Module": [[124, "module-sympy.physics.control"]], "Control Package Examples": [[27, "control-package-examples"]], "Control System Plots": [[123, "control-system-plots"]], "Conversion between quantities": [[199, "module-sympy.physics.units.util"]], "Convert to a linear combination of Meijer G-functions": [[91, "convert-to-a-linear-combination-of-meijer-g-functions"]], "Convert to a linear combination of hypergeometric functions": [[91, "convert-to-a-linear-combination-of-hypergeometric-functions"]], "Convert to expressions": [[91, "convert-to-expressions"]], "Convert to holonomic sequence": [[91, "convert-to-holonomic-sequence"]], "Converting Meijer G-functions": [[88, "converting-meijer-g-functions"]], "Converting Strings to SymPy Expressions": [[294, "converting-strings-to-sympy-expressions"]], "Converting elements between different domains": [[217, "converting-elements-between-different-domains"]], "Converting hypergeometric functions": [[88, "converting-hypergeometric-functions"]], "Converting other representations to holonomic": [[88, "converting-other-representations-to-holonomic"]], "Converting symbolic expressions": [[88, "converting-symbolic-expressions"]], "Convolution": [[72, "convolution"]], "Convolution using Fast Fourier Transform": [[72, "convolution-using-fast-fourier-transform"]], "Convolution using Fast Walsh Hadamard Transform": [[72, "convolution-using-fast-walsh-hadamard-transform"]], "Convolution using Number Theoretic Transform": [[72, "convolution-using-number-theoretic-transform"]], "Convolutions": [[72, "module-sympy.discrete.convolutions"]], "Coordinate Modes": [[213, "coordinate-modes"]], "Coordinate Systems": [[280, "coordinate-systems"]], "Coordinate Systems and Vectors": [[275, "coordinate-systems-and-vectors"]], "Coordinate Variables": [[276, "coordinate-variables"]], "Core": [[69, "core"]], "Core operators no longer accept non-Expr args": [[13, "core-operators-no-longer-accept-non-expr-args"]], "Coset Enumeration: The Todd-Coxeter Algorithm": [[51, "coset-enumeration-the-todd-coxeter-algorithm"]], "CosetTable": [[51, "cosettable"]], "Covering Product": [[72, "covering-product"]], "Create a Function That Can Be Solved With SciPy": [[35, "create-a-function-that-can-be-solved-with-scipy"]], "Create a GitHub Account": [[9, "create-a-github-account"]], "Create a new branch": [[11, "create-a-new-branch"]], "Creating Matrices": [[105, "creating-matrices"]], "Creating a Custom Function": [[24, "creating-a-custom-function"]], "Creating an indefinite Integral with an Eq argument": [[13, "creating-an-indefinite-integral-with-an-eq-argument"]], "Credits and Copyright": [[212, "credits-and-copyright"]], "Cross-Referencing": [[4, "cross-referencing"]], "Cryptography": [[70, "cryptography"]], "Curl": [[208, "curl"], [278, "curl"]], "Curve (Docstrings)": [[113, "module-sympy.physics.biomechanics.curve"]], "Curves": [[78, "module-sympy.geometry.curve"]], "Custom": [[292, "custom"]], "Custom SymPy Objects": [[14, "custom-sympy-objects"]], "DMP representation": [[217, "dmp-representation"]], "DUP representation": [[217, "dup-representation"]], "Dagger": [[175, "module-sympy.physics.quantum.dagger"]], "Debian/Ubuntu": [[8, "debian-ubuntu"]], "Debugging": [[1, "debugging"]], "Debugging Test Failures on GitHub Actions": [[12, "debugging-test-failures-on-github-actions"]], "Decorator": [[261, "module-sympy.utilities.decorator"]], "Define Forces": [[291, "define-forces"]], "Define Inertia": [[291, "define-inertia"]], "Define Kinematics": [[291, "define-kinematics"]], "Define Variables": [[291, "define-variables"]], "Defining Automatic Evaluation with eval()": [[24, "defining-automatic-evaluation-with-eval"]], "Defining Derivatives": [[36, "defining-derivatives"]], "Defining Symbols": [[14, "defining-symbols"]], "Definition": [[24, "definition"], [24, "id2"], [24, "id4"], [87, "definition"]], "Deleting and Inserting Rows and Columns": [[301, "deleting-and-inserting-rows-and-columns"]], "Deleting junk files": [[11, "deleting-junk-files"]], "Dense Matrices": [[100, "dense-matrices"]], "Dense polynomials": [[218, "dense-polynomials"]], "Dependencies": [[2, "dependencies"]], "Deprecate Eq.rewrite(Add)": [[13, "deprecate-eq-rewrite-add"]], "Deprecate markers, annotations, fill, rectangles of the Plot class": [[13, "deprecate-markers-annotations-fill-rectangles-of-the-plot-class"]], "Deprecate the DMP.rep attribute.": [[13, "deprecate-the-dmp-rep-attribute"]], "Deprecate the pkgdata module": [[13, "deprecate-the-pkgdata-module"]], "Deprecated Classes (Docstrings)": [[131, "deprecated-classes-docstrings"]], "Deprecated matrix mixin classes": [[13, "deprecated-matrix-mixin-classes"]], "Deprecated mechanics Body class": [[13, "deprecated-mechanics-body-class"]], "Deprecated mechanics JointsMethod": [[13, "deprecated-mechanics-jointsmethod"]], "Deprecation Policy": [[3, "deprecation-policy"]], "Depth of Polycyclic generator": [[59, "depth-of-polycyclic-generator"]], "Derivatives": [[295, "derivatives"]], "Derivatives by array": [[248, "derivatives-by-array"]], "Derivatives of Vectors": [[211, "derivatives-of-vectors"]], "Derivatives with Multiple Frames": [[211, "derivatives-with-multiple-frames"]], "Determinant": [[301, "determinant"]], "Deutils (Utilities for solving ODE\u2019s and PDE\u2019s)": [[245, "deutils-utilities-for-solving-ode-s-and-pde-s"]], "Developers Notes": [[69, "developers-notes"]], "Development Dependencies": [[2, "development-dependencies"]], "Development Workflow Process": [[11, "development-workflow-process"]], "Diagonal operator": [[248, "diagonal-operator"]], "Diagram Drawing": [[49, "module-sympy.categories.diagram_drawing"]], "Dictionaries": [[16, "dictionaries"]], "Dictionary (roots)": [[29, "dictionary-roots"]], "Differential Geometry": [[71, "module-sympy.diffgeom"]], "Differentiating": [[129, "differentiating"]], "Differentiation": [[24, "differentiation"]], "Dimensional analysis": [[195, "dimensional-analysis"]], "Dimensions": [[197, "dimensions"]], "Dimensions and dimension systems": [[194, "module-sympy.physics.units.dimensions"]], "Diophantine": [[240, "diophantine"]], "Diophantine Equation Can be Expressed as Expression That Equals Zero": [[32, "diophantine-equation-can-be-expressed-as-expression-that-equals-zero"]], "Diophantine Equations (DEs)": [[245, "diophantine-equations-des"], [246, "diophantine-equations-des"]], "Diophantine equations": [[240, "diophantine-equations"]], "Dirac Delta and Related Discontinuous Functions": [[77, "dirac-delta-and-related-discontinuous-functions"]], "Directional Derivative": [[278, "directional-derivative"]], "Discrete": [[72, "discrete"]], "Discrete Types": [[247, "discrete-types"]], "Dispersion of Polynomials": [[223, "dispersion-of-polynomials"]], "Divergence": [[208, "divergence"], [278, "divergence"]], "Divisibility": [[215, "divisibility"]], "Divisibility of polynomials": [[215, "divisibility-of-polynomials"]], "Division": [[215, "division"]], "Do Not Simplify Solutions": [[38, "do-not-simplify-solutions"]], "Docker": [[8, "docker"], [8, "id2"], [8, "id3"]], "Docstrings Style Guide": [[4, "docstrings-style-guide"]], "Docstrings for Classes that are Mathematical Functions": [[4, "docstrings-for-classes-that-are-mathematical-functions"]], "Docstrings for basic field functions": [[203, "docstrings-for-basic-field-functions"]], "Doctests": [[12, "doctests"]], "Documentation": [[7, "documentation"], [11, "documentation"]], "Documentation Style Guide": [[5, "documentation-style-guide"]], "Documentation using Markdown": [[5, "documentation-using-markdown"]], "Documenting a deprecation": [[3, "documenting-a-deprecation"]], "Domain constructors": [[223, "domain-constructors"]], "Domain elements vs sympy expressions": [[217, "domain-elements-vs-sympy-expressions"]], "Domains": [[218, "domains"]], "Don\u2019t Denest Collections": [[14, "don-t-denest-collections"]], "Don\u2019t Hardcode Symbol Names in Python Functions": [[14, "don-t-hardcode-symbol-names-in-python-functions"]], "Don\u2019t Overwrite __eq__": [[14, "don-t-overwrite-eq"]], "Dot": [[304, "dot"]], "Double Equals Signs": [[16, "double-equals-signs"]], "Dyadic": [[201, "dyadic"]], "Dyadics": [[275, "dyadics"]], "ECM function": [[109, "ecm-function"]], "EX": [[218, "ex"]], "Easy Cases: Fully Symbolic or Fully Evaluated": [[24, "easy-cases-fully-symbolic-or-fully-evaluated"]], "Eigenvalues, Eigenvectors, and Diagonalization": [[301, "eigenvalues-eigenvectors-and-diagonalization"]], "Elastic Tendon Dynamics": [[292, "elastic-tendon-dynamics"]], "Elementary": [[75, "elementary"]], "Elementary Sequences": [[233, "elementary-sequences"]], "Elementary Sets": [[235, "elementary-sets"]], "Ellipses": [[79, "module-sympy.geometry.ellipse"]], "Elliptic integrals": [[77, "module-sympy.functions.special.elliptic_integrals"]], "Empty List": [[18, "empty-list"]], "Ensure Consistent Formatting From solve()": [[38, "ensure-consistent-formatting-from-solve"]], "Ensure the Root Found is in a Given Interval": [[35, "ensure-the-root-found-is-in-a-given-interval"]], "Entities": [[80, "module-sympy.geometry.entity"]], "Enumeration": [[74, "enumeration"]], "Enumerative": [[262, "module-sympy.utilities.enumerative"]], "Equals Signs (=)": [[16, "equals-signs"]], "Equals signs": [[297, "equals-signs"]], "Equation with quantities": [[195, "equation-with-quantities"]], "Equations Which Have a Closed-Form Solution, and SymPy Cannot Solve": [[33, "equations-which-have-a-closed-form-solution-and-sympy-cannot-solve"], [37, "equations-which-have-a-closed-form-solution-and-sympy-cannot-solve"]], "Equations With No Closed-Form Solution": [[29, "equations-with-no-closed-form-solution"], [33, "equations-with-no-closed-form-solution"], [36, "equations-with-no-closed-form-solution"]], "Equations With No Solution": [[32, "equations-with-no-solution"], [34, "equations-with-no-solution"], [36, "equations-with-no-solution"]], "Equations With no Closed-Form Solution": [[38, "equations-with-no-closed-form-solution"]], "Equations With no Solution": [[35, "equations-with-no-solution"]], "Equations of Motion": [[291, "equations-of-motion"]], "Error Functions and Fresnel Integrals": [[77, "module-sympy.functions.special.error_functions"]], "Essential Classes": [[202, "essential-classes"]], "Essential Classes in sympy.vector (docstrings)": [[271, "essential-classes-in-sympy-vector-docstrings"]], "Essential Functions (Docstrings)": [[204, "essential-functions-docstrings"]], "Essential Functions in sympy.vector (docstrings)": [[274, "essential-functions-in-sympy-vector-docstrings"]], "Euclidean domains": [[215, "euclidean-domains"]], "Evaluate the System Differential Equations": [[291, "evaluate-the-system-differential-equations"]], "Evaluating Expressions with Floats and Rationals": [[16, "evaluating-expressions-with-floats-and-rationals"]], "Exact Numeric Solution With Root Multiplicities": [[29, "exact-numeric-solution-with-root-multiplicities"]], "Exact Rational Numbers vs. Floats": [[14, "exact-rational-numbers-vs-floats"]], "Example 1": [[27, "example-1"], [118, "example-1"]], "Example 10": [[118, "example-10"]], "Example 11": [[118, "example-11"]], "Example 2": [[27, "example-2"], [118, "example-2"]], "Example 3": [[27, "example-3"], [118, "example-3"]], "Example 4": [[27, "example-4"], [118, "example-4"]], "Example 5": [[27, "example-5"], [118, "example-5"]], "Example 6": [[118, "example-6"]], "Example 7": [[118, "example-7"]], "Example 8": [[118, "example-8"]], "Example 9": [[118, "example-9"]], "Example Usage": [[81, "example-usage"]], "Example of Custom Printer": [[227, "example-of-custom-printer"]], "Example of Custom Printing Method": [[227, "example-of-custom-printing-method"]], "Example of Finding the Roots of a Polynomial Algebraically": [[29, "example-of-finding-the-roots-of-a-polynomial-algebraically"]], "Example of Numerically Solving an Equation": [[35, "example-of-numerically-solving-an-equation"]], "Example of Solving a Diophantine Equation": [[32, "example-of-solving-a-diophantine-equation"]], "Example of a good commit message": [[11, "example-of-a-good-commit-message"]], "Example: Continued Fractions": [[305, "example-continued-fractions"]], "Examples": [[24, "examples"], [24, "id3"], [24, "id5"], [31, "examples"], [41, "examples"], [69, "examples"], [69, "id52"], [93, "examples"], [96, "examples"], [96, "id38"], [109, "examples"], [109, "id83"], [118, "examples"], [126, "examples"], [164, "examples"], [196, "examples"], [211, "examples"], [211, "id1"], [226, "examples"], [234, "examples"], [234, "id3"], [247, "examples"], [248, "examples"], [249, "examples"], [252, "examples"]], "Examples for Physics/Mechanics": [[143, "examples-for-physics-mechanics"]], "Examples from Wester\u2019s Article": [[226, "examples-from-wester-s-article"]], "Examples of Solving a System of Equations Algebraically": [[37, "examples-of-solving-a-system-of-equations-algebraically"]], "Exceptions": [[220, "exceptions"]], "Exceptions and Warnings": [[263, "module-sympy.utilities.exceptions"]], "Exercises": [[303, "exercises"]], "Expanding": [[228, "expanding"]], "Expanding expressions and factoring back": [[226, "expanding-expressions-and-factoring-back"]], "Experimental \\mathrm{\\LaTeX} Parsing": [[111, "experimental-mathrm-latex-parsing"]], "Explanations": [[17, "explanations"], [39, "explanations"]], "Explicitly Represent Infinite Sets of Possible Solutions": [[33, "explicitly-represent-infinite-sets-of-possible-solutions"]], "Exponential": [[75, "exponential"]], "Exponential, Logarithmic and Trigonometric Integrals": [[77, "exponential-logarithmic-and-trigonometric-integrals"]], "Exponentials and logarithms": [[305, "exponentials-and-logarithms"]], "Expression (factor)": [[29, "expression-factor"]], "Expression Manipulation (Docstrings)": [[132, "expression-manipulation-docstrings"]], "Expression domain": [[217, "expression-domain"]], "Expression of quantities in different coordinate systems": [[276, "expression-of-quantities-in-different-coordinate-systems"]], "Extending The Hypergeometric Tables": [[237, "extending-the-hypergeometric-tables"]], "Extra polynomial manipulation functions": [[223, "extra-polynomial-manipulation-functions"]], "Extract Elements From the Solution": [[34, "extract-elements-from-the-solution"]], "Extract Expressions From the Result": [[32, "extract-expressions-from-the-result"]], "Extract a List of Decomposed Relations": [[31, "extract-a-list-of-decomposed-relations"]], "Extract a Tuple of Relations": [[31, "extract-a-tuple-of-relations"]], "Extract the Result for Multiple Function-Solution Pairs": [[36, "extract-the-result-for-multiple-function-solution-pairs"]], "Extract the Result for One Solution and Function": [[36, "extract-the-result-for-one-solution-and-function"]], "Factor the Equation": [[29, "factor-the-equation"]], "Factorial domains": [[215, "factorial-domains"]], "Factoring in terms of cyclotomic polynomials": [[226, "factoring-in-terms-of-cyclotomic-polynomials"]], "Factoring polynomials into linear factors": [[226, "factoring-polynomials-into-linear-factors"]], "Factorization": [[215, "factorization"]], "Fast Fourier Transform": [[72, "fast-fourier-transform"]], "Fast Walsh Hadamard Transform": [[72, "fast-walsh-hadamard-transform"]], "Fedora": [[8, "fedora"]], "Fiber Active Force-Length": [[292, "fiber-active-force-length"]], "Fiber Damping": [[292, "fiber-damping"]], "Fiber Force-Velocity": [[292, "fiber-force-velocity"]], "Fiber Passive Force-Length": [[292, "fiber-passive-force-length"]], "Field operation functions": [[203, "field-operation-functions"]], "Field operator in orthogonal curvilinear coordinate system": [[278, "field-operator-in-orthogonal-curvilinear-coordinate-system"]], "Field operators and other related functions": [[208, "field-operators-and-other-related-functions"]], "Field operators and related functions": [[278, "field-operators-and-related-functions"]], "Fields": [[208, "fields"], [280, "fields"]], "Find Complex Roots of a Real Function": [[35, "find-complex-roots-of-a-real-function"]], "Find the Roots of a Polynomial": [[29, "find-the-roots-of-a-polynomial"]], "Find the Roots of a Polynomial Algebraically or Numerically": [[29, "find-the-roots-of-a-polynomial-algebraically-or-numerically"]], "Finding Minimal Polynomials": [[222, "finding-minimal-polynomials"]], "Finite Difference Approximations to Derivatives": [[20, "finite-difference-approximations-to-derivatives"]], "Finite Extensions": [[214, "finite-extensions"]], "Finite Types": [[247, "finite-types"]], "Finite difference weights": [[48, "finite-difference-weights"]], "Finite differences": [[295, "finite-differences"]], "Finite fields": [[217, "finite-fields"]], "Finitely Presented Groups": [[51, "finitely-presented-groups"]], "Finitely-generated modules": [[222, "module-sympy.polys.numberfields.modules"]], "First-Order": [[292, "first-order"]], "Floating-point numbers": [[73, "floating-point-numbers"]], "For 2D Polygons": [[96, "for-2d-polygons"]], "For 3-Polytopes/Polyhedra": [[96, "for-3-polytopes-polyhedra"]], "Fork SymPy": [[9, "fork-sympy"]], "Formal Power Series": [[229, "formal-power-series"]], "Formal manipulation of roots of polynomials": [[223, "formal-manipulation-of-roots-of-polynomials"]], "Formatting": [[4, "formatting"]], "Formatting Preferences": [[5, "formatting-preferences"]], "Forming logical expressions": [[99, "forming-logical-expressions"]], "Fortran Printing": [[227, "fortran-printing"]], "Fortran specific AST nodes (sympy.codegen.fnodes)": [[50, "module-sympy.codegen.fnodes"]], "Fortran utilities (sympy.codegen.futils)": [[50, "module-sympy.codegen.futils"]], "Fourier Series": [[230, "fourier-series"]], "Free Groups and Words": [[51, "free-groups-and-words"]], "Functions": [[16, "functions"], [76, "functions"], [248, "functions"]], "Functions to Find the Roots of a Polynomial": [[29, "functions-to-find-the-roots-of-a-polynomial"]], "Further Examples": [[156, "further-examples"]], "Further Reading": [[297, "further-reading"]], "Fused Multiply-Add (FMA)": [[24, "fused-multiply-add-fma"]], "Future Features": [[129, "future-features"]], "Future Improvements": [[142, "future-improvements"]], "Future Work": [[81, "future-work"]], "GCD and LCM": [[215, "gcd-and-lcm"]], "GF(p)": [[218, "gf-p"]], "Galois Groups": [[52, "module-sympy.combinatorics.galois"], [222, "galois-groups"]], "Gamma matrices": [[126, "module-sympy.physics.hep.gamma_matrices"]], "Gamma, Beta and Related Functions": [[77, "module-sympy.functions.special.gamma_functions"]], "Gates": [[176, "module-sympy.physics.quantum.gate"]], "Gaussian Optics": [[161, "module-sympy.physics.optics.gaussopt"]], "Gaussian domains": [[218, "gaussian-domains"]], "Gaussian integers and Gaussian rationals": [[217, "gaussian-integers-and-gaussian-rationals"]], "Gegenbauer Polynomials": [[77, "gegenbauer-polynomials"]], "General Guidelines": [[4, "general-guidelines"], [5, "general-guidelines"]], "General examples of usage": [[277, "general-examples-of-usage"]], "Generators": [[61, "module-sympy.combinatorics.generators"]], "Geometry": [[81, "geometry"]], "Geometry Visualization": [[81, "geometry-visualization"]], "Get All Roots, Perhaps Implicitly": [[29, "get-all-roots-perhaps-implicitly"]], "Get familiar using the software": [[7, "get-familiar-using-the-software"]], "Get the SymPy Code": [[9, "get-the-sympy-code"]], "Getting help from within SymPy": [[16, "getting-help-from-within-sympy"]], "Getting the Source Code": [[2, "getting-the-source-code"]], "Git": [[40, "git"]], "Glossary": [[15, "glossary"]], "Gotcha: symbols with different assumptions": [[22, "gotcha-symbols-with-different-assumptions"]], "Gotchas": [[142, "gotchas"], [297, "gotchas"]], "Gotchas and Pitfalls": [[16, "gotchas-and-pitfalls"]], "Gradient": [[208, "gradient"], [278, "gradient"]], "Gray Code": [[53, "module-sympy.combinatorics.graycode"]], "Groebner bases": [[215, "groebner-bases"]], "Groebner basis algorithms": [[220, "groebner-basis-algorithms"]], "Group constructors": [[54, "module-sympy.combinatorics.group_constructs"]], "Group structure": [[197, "group-structure"]], "Grover\u2019s Algorithm": [[177, "module-sympy.physics.quantum.grover"]], "Gtk": [[227, "module-sympy.printing.gtk"]], "Guidance": [[29, "guidance"], [31, "guidance"], [32, "guidance"], [33, "guidance"], [34, "guidance"], [35, "guidance"], [36, "guidance"], [37, "guidance"]], "Guide for New Contributors": [[10, "guide-for-new-contributors"]], "Guide to Biomechanics": [[116, "guide-to-biomechanics"]], "Guide to Mechanics": [[152, "guide-to-mechanics"]], "Guide to Vector": [[209, "guide-to-vector"], [279, "guide-to-vector"]], "Hard Dependencies": [[2, "hard-dependencies"]], "Headings": [[5, "headings"]], "Hermite Polynomials": [[77, "hermite-polynomials"]], "High energy physics": [[126, "high-energy-physics"]], "Hilbert Space": [[178, "module-sympy.physics.quantum.hilbert"]], "Hint Functions": [[243, "hint-functions"]], "Hint Methods": [[244, "hint-methods"]], "Holonomic": [[89, "module-sympy.holonomic"]], "Hongguang Fu\u2019s Trigonometric Simplification": [[236, "module-sympy.simplify.fu"]], "How Vectors are Coded": [[211, "how-vectors-are-coded"]], "How are symbolic parameters handled in solveset?": [[246, "how-are-symbolic-parameters-handled-in-solveset"]], "How do we deal with cases where only some of the solutions are known?": [[246, "how-do-we-deal-with-cases-where-only-some-of-the-solutions-are-known"]], "How do we manipulate and return an infinite solution?": [[246, "how-do-we-manipulate-and-return-an-infinite-solution"]], "How does solveset ensure that it is not returning any wrong solution?": [[246, "how-does-solveset-ensure-that-it-is-not-returning-any-wrong-solution"]], "How long should deprecations last?": [[3, "how-long-should-deprecations-last"]], "How to compute the integral": [[94, "how-to-compute-the-integral"]], "How to deprecate code": [[3, "how-to-deprecate-code"]], "How-to Guides": [[25, "how-to-guides"], [39, "how-to-guides"]], "Hydrogen Wavefunctions": [[127, "module-sympy.physics.hydrogen"]], "Hyperbolic": [[75, "hyperbolic"]], "Hyperbolic Functions": [[75, "hyperbolic-functions"]], "Hyperbolic Inverses": [[75, "hyperbolic-inverses"]], "Hypergeometric Algorithm": [[229, "hypergeometric-algorithm"]], "Hypergeometric Expansion": [[237, "hypergeometric-expansion"]], "Hypergeometric Function Expansion Algorithm": [[237, "hypergeometric-function-expansion-algorithm"]], "Hypergeometric Functions": [[77, "hypergeometric-functions"]], "Hypergeometric terms": [[68, "hypergeometric-terms"]], "Hypothesis Testing": [[12, "hypothesis-testing"]], "Identify something to work on": [[7, "identify-something-to-work-on"]], "If There are Multiple Solution Sets": [[36, "if-there-are-multiple-solution-sets"]], "If There is One Solution Set": [[36, "if-there-is-one-solution-set"]], "Immutability of Expressions": [[16, "immutability-of-expressions"]], "Immutable Matrices": [[102, "immutable-matrices"]], "ImmutableMatrix Class Reference": [[102, "module-sympy.matrices.immutable"]], "ImmutableSparseMatrix Class Reference": [[107, "immutablesparsematrix-class-reference"]], "Implementation - Helper Classes/Functions": [[227, "module-sympy.printing.conventions"]], "Implementation Details": [[260, "implementation-details"]], "Implementation details": [[259, "implementation-details"]], "Implementation in sympy.vector": [[278, "implementation-in-sympy-vector"]], "Implementation of fields in sympy.physics.vector": [[208, "implementation-of-fields-in-sympy-physics-vector"]], "Implemented G-Function Formulae": [[94, "implemented-g-function-formulae"]], "Implemented Hypergeometric Formulae": [[237, "implemented-hypergeometric-formulae"]], "Implementing assumptions handlers": [[22, "implementing-assumptions-handlers"]], "Implications": [[22, "implications"]], "Importing Docstrings into the Sphinx Documentation": [[4, "importing-docstrings-into-the-sphinx-documentation"]], "Impulse-Response Plot": [[123, "impulse-response-plot"]], "Include Solutions Making Any Denominator Zero": [[38, "include-solutions-making-any-denominator-zero"]], "Include the Variable to Be Reduced for in the Function Call": [[31, "include-the-variable-to-be-reduced-for-in-the-function-call"]], "Include the Variable to be Solved for in the Function Call": [[38, "include-the-variable-to-be-solved-for-in-the-function-call"]], "Increase Precision of the Solution": [[35, "increase-precision-of-the-solution"]], "Incrementing and decrementing indices": [[237, "incrementing-and-decrementing-indices"]], "Index": [[10, "index"]], "Indexed Objects": [[252, "module-sympy.tensor.indexed"]], "Inequalities": [[245, "inequalities"], [246, "inequalities"]], "Inequalities Which Can Be Reduced Analytically, and SymPy Cannot Reduce": [[31, "inequalities-which-can-be-reduced-analytically-and-sympy-cannot-reduce"]], "Inequality Solvers": [[242, "inequality-solvers"]], "Inertia": [[157, "inertia"]], "Inertia (Dyadics)": [[157, "inertia-dyadics"]], "Inertias": [[137, "inertias"]], "Inference": [[99, "module-sympy.logic.inference"]], "Information on the ode module": [[243, "module-sympy.solvers.ode.ode"]], "Information on the pde module": [[244, "module-sympy.solvers.pde"]], "Inner Product": [[180, "module-sympy.physics.quantum.innerproduct"]], "Input API of solveset": [[246, "input-api-of-solveset"]], "Install Git": [[9, "install-git"]], "Installation": [[39, "installation"], [40, "installation"], [303, "installation"]], "Integer Functions": [[75, "integer-functions"]], "Integral Basis": [[222, "integral-basis"]], "Integral Transforms": [[96, "module-sympy.integrals.transforms"]], "Integral domains": [[215, "integral-domains"]], "Integrals": [[95, "integrals"], [96, "module-sympy.integrals"], [295, "integrals"]], "Integration": [[93, "integration"]], "Integration and Differentiation": [[91, "integration-and-differentiation"]], "Integration over Polytopes": [[96, "module-sympy.integrals.intpoly"]], "Interactive": [[97, "module-sympy.interactive"]], "Interactive Use": [[2, "interactive-use"]], "Interface": [[247, "interface"]], "Internal API": [[90, "internal-api"]], "Internal API Reference": [[94, "module-sympy.integrals.meijerint"]], "Internal Classes": [[240, "internal-classes"]], "Internal Functions": [[240, "internal-functions"]], "Internals": [[96, "internals"], [222, "internals"]], "Internals of a Poly": [[217, "internals-of-a-poly"]], "Internals of the Polynomial Manipulation Module": [[220, "internals-of-the-polynomial-manipulation-module"]], "Interpretation of the predicates": [[22, "interpretation-of-the-predicates"]], "Intersecting Product": [[72, "intersecting-product"]], "Intersection of medians": [[81, "intersection-of-medians"]], "Introducing the Domains of the poly module": [[217, "introducing-the-domains-of-the-poly-module"]], "Introducing the domainmatrix of the poly module": [[216, "introducing-the-domainmatrix-of-the-poly-module"]], "Introduction": [[16, "introduction"], [20, "introduction"], [42, "introduction"], [49, "introduction"], [50, "introduction"], [51, "introduction"], [59, "introduction"], [71, "introduction"], [81, "introduction"], [99, "introduction"], [116, "introduction"], [142, "introduction"], [159, "introduction"], [197, "introduction"], [208, "introduction"], [213, "introduction"], [214, "introduction"], [215, "introduction"], [222, "introduction"], [226, "introduction"], [280, "introduction"], [299, "introduction"]], "Introduction to Biomechanical Modeling": [[292, "introduction-to-biomechanical-modeling"]], "Introduction to Contributing": [[7, "introduction-to-contributing"]], "Introduction to Kinematics": [[210, "introduction-to-kinematics"]], "Introductory Tutorial": [[293, "introductory-tutorial"], [298, "introductory-tutorial"]], "Inverse Trig Functions": [[16, "inverse-trig-functions"]], "Iterables": [[265, "module-sympy.utilities.iterables"]], "Iteration over sets": [[235, "iteration-over-sets"]], "Jacobi Polynomials": [[77, "jacobi-polynomials"]], "Javascript Code printing": [[227, "module-sympy.printing.jscode"]], "Join our mailing list": [[7, "join-our-mailing-list"]], "Joint (Docstrings)": [[134, "module-sympy.physics.mechanics.joint"]], "Joint Types": [[247, "joint-types"]], "Joints Framework (Docstrings)": [[134, "joints-framework-docstrings"]], "Joints Framework in Physics/Mechanics": [[153, "joints-framework-in-physics-mechanics"]], "Joints in Physics/Mechanics": [[153, "joints-in-physics-mechanics"]], "Julia code printing": [[227, "module-sympy.printing.julia"]], "K(x)": [[218, "id11"]], "K[x]": [[218, "k-x"]], "Kane\u2019s Method": [[146, "kane-s-method"]], "Kane\u2019s Method & Lagrange\u2019s Method (Docstrings)": [[135, "module-sympy.physics.mechanics.kane"]], "Kane\u2019s Method in Physics/Mechanics": [[154, "kane-s-method-in-physics-mechanics"], [154, "id2"]], "Key Invariant": [[300, null]], "Key Point": [[24, null]], "Keyword Arguments": [[16, "keyword-arguments"]], "Kinematics (Docstrings)": [[206, "module-sympy.physics.vector.point"]], "Kinematics in physics.vector": [[210, "kinematics-in-physics-vector"]], "Kinetic Energy": [[157, "kinetic-energy"]], "LaTeX Recommendations": [[5, "latex-recommendations"]], "Lagrange\u2019s Method": [[146, "lagrange-s-method"]], "Lagrange\u2019s Method in Physics/Mechanics": [[155, "lagrange-s-method-in-physics-mechanics"], [155, "id1"]], "Lagrangian": [[157, "lagrangian"]], "Laguerre Polynomials": [[77, "laguerre-polynomials"]], "LambdaPrinter": [[227, "module-sympy.printing.lambdarepr"]], "Lambdify": [[110, "lambdify"], [266, "module-sympy.utilities.lambdify"]], "Lark Backend": [[111, "lark-backend"]], "Lark \\mathrm{\\LaTeX} Parser Capabilities": [[111, "lark-mathrm-latex-parser-capabilities"]], "Lark \\mathrm{\\LaTeX} Parser Classes": [[111, "lark-mathrm-latex-parser-classes"]], "Lark \\mathrm{\\LaTeX} Parser Features": [[111, "lark-mathrm-latex-parser-features"]], "Lark \\mathrm{\\LaTeX} Parser Functions": [[111, "lark-mathrm-latex-parser-functions"]], "LatexPrinter": [[227, "module-sympy.printing.latex"]], "Legendre Polynomials": [[77, "legendre-polynomials"]], "Level Zero": [[220, "level-zero"]], "Lie Algebra": [[98, "module-sympy.liealgebras"]], "Lie heuristics": [[243, "lie-heuristics"]], "Limitations": [[22, "limitations"], [32, "limitations"], [93, "limitations"]], "Limitations and Issues": [[142, "limitations-and-issues"]], "Limitations of Inequality Reduction Using SymPy": [[31, "limitations-of-inequality-reduction-using-sympy"]], "Limitations on Types of Inequalities That SymPy Can Solve": [[31, "limitations-on-types-of-inequalities-that-sympy-can-solve"]], "Limits": [[234, "limits"], [295, "limits"]], "Limits of Sequences": [[232, "limits-of-sequences"]], "Linear Momentum": [[157, "linear-momentum"]], "Linear Programming (Optimization)": [[245, "module-sympy.solvers.simplex"]], "Linear algebra": [[105, "linear-algebra"]], "Linear space representation": [[197, "linear-space-representation"]], "Linearization": [[129, "linearization"]], "Linearization (Docstrings)": [[136, "module-sympy.physics.mechanics.linearize"]], "Linearization in Physics/Mechanics": [[156, "linearization-in-physics-mechanics"]], "Linearizing Kane\u2019s Equations": [[156, "linearizing-kane-s-equations"]], "Linearizing Lagrange\u2019s Equations": [[156, "linearizing-lagrange-s-equations"]], "Lines": [[82, "module-sympy.geometry.line"]], "Links": [[159, "links"]], "List (all_roots, real_roots, nroots)": [[29, "list-all-roots-real-roots-nroots"]], "List Of Values": [[18, "list-of-values"]], "List of Dictionaries": [[18, "list-of-dictionaries"]], "List of Tuples": [[18, "list-of-tuples"]], "List of active deprecations": [[13, "list-of-active-deprecations"]], "List of dictionaries (solve)": [[29, "list-of-dictionaries-solve"]], "Lists": [[16, "lists"]], "Literature": [[197, "literature"], [221, "literature"], [226, "literature"]], "Loads": [[137, "loads"], [157, "loads"], [292, "loads"]], "Local Installation": [[8, "local-installation"], [8, "id4"]], "Locating new systems": [[276, "locating-new-systems"]], "Logic": [[2, "logic"], [99, "module-sympy.logic"], [282, "logic"], [285, "logic"]], "Loose Ends": [[237, "loose-ends"]], "Low Index Subgroups": [[51, "low-index-subgroups"]], "MPQ": [[218, "mpq"]], "Mac": [[8, "mac"]], "Make Your Equation Into an Expression That Equals Zero": [[33, "make-your-equation-into-an-expression-that-equals-zero"]], "Make a Pull Request": [[11, "make-a-pull-request"]], "Manipulating expressions": [[99, "manipulating-expressions"]], "Manipulation of dense, multivariate polynomials": [[220, "manipulation-of-dense-multivariate-polynomials"]], "Manipulation of dense, univariate polynomials with finite field coefficients": [[220, "manipulation-of-dense-univariate-polynomials-with-finite-field-coefficients"]], "Manipulation of rational functions": [[223, "manipulation-of-rational-functions"]], "Manipulation of sparse, distributed polynomials and vectors": [[220, "manipulation-of-sparse-distributed-polynomials-and-vectors"]], "Maple code printing": [[227, "module-sympy.printing.maple"]], "Marking Tests as Expected to Fail": [[12, "marking-tests-as-expected-to-fail"]], "Marking Tests as Slow": [[12, "marking-tests-as-slow"]], "Mass": [[157, "mass"]], "Masses, Inertias, Particles and Rigid Bodies in Physics/Mechanics": [[157, "masses-inertias-particles-and-rigid-bodies-in-physics-mechanics"]], "Math": [[5, "math"]], "MathML": [[304, "mathml"]], "MathMLPrinter": [[227, "module-sympy.printing.mathml"]], "Mathematica code printing": [[227, "module-sympy.printing.mathematica"]], "Mathematical Equivalents": [[159, "mathematical-equivalents"]], "Mathematical Exactness, Completeness of List of Roots, and Speed": [[29, "mathematical-exactness-completeness-of-list-of-roots-and-speed"]], "Mathematical Operators": [[16, "mathematical-operators"]], "Mathieu Functions": [[77, "module-sympy.functions.special.mathieu_functions"]], "Matrices": [[103, "module-sympy.matrices"], [128, "module-sympy.physics.matrices"], [282, "matrices"], [286, "matrices"], [301, "matrices"]], "Matrices (linear algebra)": [[105, "module-sympy.matrices.matrixbase"]], "Matrix": [[46, "matrix"]], "Matrix Base Classes": [[105, "matrix-base-classes"]], "Matrix Constructors": [[301, "matrix-constructors"]], "Matrix Distributions": [[247, "matrix-distributions"]], "Matrix Exceptions": [[105, "matrix-exceptions"]], "Matrix Expressions": [[101, "module-sympy.matrices.expressions"]], "Matrix Expressions Core Reference": [[101, "matrix-expressions-core-reference"]], "Matrix Functions": [[105, "matrix-functions"]], "Matrix Kind": [[104, "module-sympy.matrices.kind"]], "Matrix Normal Forms": [[106, "matrix-normal-forms"]], "Matrix Usually Must Be Square": [[34, "matrix-usually-must-be-square"]], "Mechanics": [[116, "mechanics"], [152, "mechanics"], [247, "module-sympy.stats.rv"]], "Mechanics API Reference": [[133, "mechanics-api-reference"]], "Mechanism of the assumptions system": [[22, "mechanism-of-the-assumptions-system"]], "Medium": [[163, "module-sympy.physics.optics.medium"]], "Meijer G-Functions of Finite Confluence": [[237, "meijer-g-functions-of-finite-confluence"]], "Memoization": [[267, "module-sympy.utilities.memoization"]], "Methods": [[251, "module-sympy.tensor.index_methods"]], "Methods for Solving Matrix Equations": [[34, "methods-for-solving-matrix-equations"]], "Misc": [[45, "misc"]], "Miscellaneous": [[75, "miscellaneous"], [268, "module-sympy.utilities.misc"]], "Miscellaneous Notes": [[81, "miscellaneous-notes"]], "Miscellaneous _eval_* methods": [[24, "miscellaneous-eval-methods"]], "Mixing Poly and non-polynomial expressions in binary operations": [[13, "mixing-poly-and-non-polynomial-expressions-in-binary-operations"]], "Model Description": [[291, "model-description"]], "Modify code": [[11, "modify-code"]], "Modular GCD": [[220, "modular-gcd"]], "Module Homomorphisms": [[222, "module-homomorphisms"]], "Module Homomorphisms and Syzygies": [[214, "module-homomorphisms-and-syzygies"]], "Module structure": [[240, "module-structure"]], "Modules sympy.tensor.array.expressions.conv_* renamed to sympy.tensor.array.expressions.from_*": [[13, "modules-sympy-tensor-array-expressions-conv-renamed-to-sympy-tensor-array-expressions-from"]], "Modules, Ideals and their Elementary Properties": [[214, "modules-ideals-and-their-elementary-properties"]], "Monomials encoded as tuples": [[223, "monomials-encoded-as-tuples"]], "More": [[196, "more"]], "More Intuitive Series Expansion": [[234, "more-intuitive-series-expansion"]], "More about Coordinate Systems": [[276, "more-about-coordinate-systems"]], "More examples": [[195, "more-examples"]], "Moved mechanics functions": [[13, "moved-mechanics-functions"]], "Moving Around in the Parameter Space": [[237, "moving-around-in-the-parameter-space"]], "Multi Degree of Freedom Holonomic System": [[147, "multi-degree-of-freedom-holonomic-system"]], "Multiplication": [[222, "multiplication"]], "Multivariate GCD and factorization": [[226, "multivariate-gcd-and-factorization"]], "Multivariate factoring over algebraic numbers": [[226, "multivariate-factoring-over-algebraic-numbers"]], "Muscle Activation Differential Equations": [[291, "muscle-activation-differential-equations"]], "Musculotendon (Docstrings)": [[115, "module-sympy.physics.biomechanics.musculotendon"]], "Musculotendon Curves": [[292, "musculotendon-curves"]], "Musculotendon Dynamics": [[292, "musculotendon-dynamics"]], "Mutable attributes in sympy.diffgeom": [[13, "mutable-attributes-in-sympy-diffgeom"]], "M\u00f6bius Transform": [[72, "mobius-transform"]], "N-dim array": [[248, "module-sympy.tensor.array"]], "N-dim array expressions": [[249, "module-sympy.tensor.array.expressions"]], "Named Groups": [[57, "module-sympy.combinatorics.named_groups"]], "Narrative Documentation Guidelines": [[5, "narrative-documentation-guidelines"]], "New Joint coordinate format": [[13, "new-joint-coordinate-format"]], "New Joint intermediate frames": [[13, "new-joint-intermediate-frames"]], "New Mathematica code parser": [[13, "new-mathematica-code-parser"]], "Non-Expr objects in a Matrix": [[13, "non-expr-objects-in-a-matrix"]], "Non-tuple iterable for the first argument to Lambda": [[13, "non-tuple-iterable-for-the-first-argument-to-lambda"]], "Nonminimal Coordinates Pendulum": [[146, "nonminimal-coordinates-pendulum"]], "Normalizing simple rational functions": [[226, "normalizing-simple-rational-functions"]], "Not All Equations Can Be Solved": [[29, "not-all-equations-can-be-solved"], [32, "not-all-equations-can-be-solved"], [33, "not-all-equations-can-be-solved"], [36, "not-all-equations-can-be-solved"]], "Not All Results Are Returned for Periodic Functions": [[31, "not-all-results-are-returned-for-periodic-functions"]], "Not All Systems of Equations Can be Solved": [[37, "not-all-systems-of-equations-can-be-solved"]], "Not All Systems of Inequalities Can Be Reduced": [[31, "not-all-systems-of-inequalities-can-be-reduced"]], "Not Public API": [[3, null]], "Not all Equations Can be Solved": [[35, "not-all-equations-can-be-solved"]], "Notation": [[237, "notation"]], "Note": [[24, null]], "Notes": [[69, "notes"], [234, "notes"], [236, "notes"]], "Ntheory Class Reference": [[109, "ntheory-class-reference"]], "Ntheory Functions Reference": [[109, "ntheory-functions-reference"]], "Nullspace": [[301, "nullspace"]], "Number Fields": [[222, "number-fields"]], "Number Theoretic Transform": [[72, "number-theoretic-transform"]], "Number Theory": [[46, "number-theory"], [109, "module-sympy.ntheory.generate"], [282, "number-theory"], [287, "number-theory"]], "Number of groups": [[55, "module-sympy.combinatorics.group_numbers"]], "Numeric Computation": [[110, "numeric-computation"]], "Numeric Integrals": [[96, "numeric-integrals"]], "Numeric Integration": [[295, "numeric-integration"]], "Numeric Solutions": [[38, "numeric-solutions"]], "Numerical Evaluation": [[73, "numerical-evaluation"]], "Numerical Evaluation and Visualization": [[159, "numerical-evaluation-and-visualization"]], "Numerical Evaluation with evalf()": [[24, "numerical-evaluation-with-evalf"]], "Numerical evaluation": [[91, "numerical-evaluation"]], "Numerical simplification": [[73, "numerical-simplification"]], "Numerically Evaluate CRootOf Roots": [[29, "numerically-evaluate-crootof-roots"]], "Numerically Integrating Code": [[129, "numerically-integrating-code"]], "Numerically Solve an ODE in SciPy": [[36, "numerically-solve-an-ode-in-scipy"]], "Numpy Utility Functions": [[105, "numpy-utility-functions"]], "ODE": [[243, "ode"]], "Octave (and Matlab) Code printing": [[227, "module-sympy.printing.octave"]], "Old (dense) polynomial rings": [[217, "old-dense-polynomial-rings"]], "Operations on entries": [[105, "operations-on-entries"]], "Operations on holonomic functions": [[91, "operations-on-holonomic-functions"]], "Operator": [[181, "module-sympy.physics.quantum.operator"]], "Operator/State Helper Functions": [[182, "module-sympy.physics.quantum.operatorset"]], "Optics Module": [[162, "optics-module"]], "Option 1: Define a Function Without Including Its Independent Variable": [[36, "option-1-define-a-function-without-including-its-independent-variable"]], "Option 2: Define a Function of an Independent Variable": [[36, "option-2-define-a-function-of-an-independent-variable"]], "Optional Dependencies": [[2, "optional-dependencies"]], "Optional SymEngine Backend": [[2, "optional-symengine-backend"]], "Options": [[220, "module-sympy.polys.polyoptions"]], "Options That Can Speed up solve()": [[33, "options-that-can-speed-up-solve"], [37, "options-that-can-speed-up-solve"], [38, "options-that-can-speed-up-solve"]], "Options to Define an ODE": [[36, "options-to-define-an-ode"]], "Order": [[46, "order"]], "Order Terms": [[234, "order-terms"]], "Ordered comparisons like a < b with modular integers": [[13, "ordered-comparisons-like-a-b-with-modular-integers"]], "Orderings of monomials": [[223, "orderings-of-monomials"]], "Ordinary Differential Equation Solving Hints": [[36, "ordinary-differential-equation-solving-hints"]], "Ordinary Differential equations (ODEs)": [[245, "ordinary-differential-equations-odes"], [246, "ordinary-differential-equations-odes"]], "Orienter classes (docstrings)": [[273, "orienter-classes-docstrings"]], "Orienting AND Locating new systems": [[276, "orienting-and-locating-new-systems"]], "Orienting new systems": [[276, "orienting-new-systems"]], "Orthogonal Polynomials": [[77, "module-sympy.functions.special.polynomials"]], "Orthogonal polynomials": [[223, "orthogonal-polynomials"]], "Other Functions": [[137, "other-functions"]], "Other Methods": [[24, "other-methods"], [40, "other-methods"]], "Other expression-dependent methods": [[276, "other-expression-dependent-methods"]], "Other is_* properties": [[22, "other-is-properties"]], "Overview": [[94, "overview"]], "Overview of Facilities": [[51, "overview-of-facilities"]], "Overview of functionalities": [[59, "overview-of-functionalities"]], "PDE": [[244, "pde"]], "PDF Documentation": [[8, "pdf-documentation"]], "Parse a String Representing the Equation": [[38, "parse-a-string-representing-the-equation"]], "Parsing": [[2, "parsing"], [111, "module-sympy.parsing"]], "Parsing Functions Reference": [[111, "parsing-functions-reference"]], "Parsing Transformations Reference": [[111, "parsing-transformations-reference"]], "Partial Differential Equations (PDEs)": [[245, "partial-differential-equations-pdes"], [246, "partial-differential-equations-pdes"]], "Partial fraction decomposition": [[223, "partial-fraction-decomposition"], [226, "partial-fraction-decomposition"]], "Particle": [[157, "particle"]], "Particle in a Box": [[183, "module-sympy.physics.quantum.piab"]], "Partitions": [[58, "module-sympy.combinatorics.partitions"]], "Passing the arguments to lambdify as a set": [[13, "passing-the-arguments-to-lambdify-as-a-set"]], "Pathway (Docstrings)": [[138, "module-sympy.physics.mechanics.pathway"]], "Pathways": [[292, "pathways"]], "Pauli Algebra": [[167, "module-sympy.physics.paulialgebra"]], "Performance improvements": [[45, "performance-improvements"]], "Permutation Groups": [[60, "module-sympy.combinatorics.perm_groups"]], "Permutations": [[61, "module-sympy.combinatorics.permutations"]], "Peruse the documentation": [[7, "peruse-the-documentation"]], "Philosophy behind unit systems": [[197, "philosophy-behind-unit-systems"]], "Physical Equivalents": [[159, "physical-equivalents"]], "Physical quantities": [[199, "module-sympy.physics.units.quantities"]], "Physics": [[28, "physics"], [282, "physics"], [288, "module-sympy.physics"]], "Physics Vector API": [[205, "physics-vector-api"]], "Pick an issue to fix": [[11, "pick-an-issue-to-fix"]], "Piecewise": [[75, "piecewise"]], "Plane": [[83, "module-sympy.geometry.plane"]], "Plot Class": [[213, "plot-class"]], "Plot Window Controls": [[213, "plot-window-controls"]], "PlotGrid Class": [[213, "plotgrid-class"]], "Plotting": [[2, "plotting"], [213, "module-sympy.plotting.plot"]], "Plotting Function Reference": [[213, "plotting-function-reference"]], "Plotting Geometric Entities": [[213, "plotting-geometric-entities"]], "Plotting with ASCII art": [[213, "plotting-with-ascii-art"]], "Point Velocity & Acceleration": [[210, "point-velocity-acceleration"]], "Points": [[84, "module-sympy.geometry.point"], [275, "points"]], "Polar Numbers and Branched Functions": [[94, "polar-numbers-and-branched-functions"]], "Polarization": [[164, "module-sympy.physics.optics.polarization"]], "Pole-Zero Plot": [[123, "pole-zero-plot"]], "Poly solvers": [[225, "poly-solvers"]], "PolyRing vs PolynomialRing": [[217, "polyring-vs-polynomialring"]], "Polycyclic Groups": [[59, "polycyclic-groups"]], "Polygons": [[85, "module-sympy.geometry.polygon"]], "Polyhedron": [[62, "module-sympy.combinatorics.polyhedron"]], "Polynomial Manipulation": [[219, "polynomial-manipulation"]], "Polynomial factorization algorithms": [[220, "polynomial-factorization-algorithms"]], "Polynomial ring domains": [[217, "polynomial-ring-domains"]], "Polynomial/Rational Function Simplification": [[305, "polynomial-rational-function-simplification"]], "Polynomials": [[215, "polynomials"]], "Polynomials Manipulation Module Reference": [[223, "module-sympy.polys"]], "Possible Issues": [[301, "possible-issues"]], "Potential Energy": [[157, "potential-energy"]], "Potential Issues": [[156, "potential-issues"]], "Potential Issues/Advanced Topics/Future Features in Physics/Mechanics": [[129, "potential-issues-advanced-topics-future-features-in-physics-mechanics"]], "Potential Issues/Advanced Topics/Future Features in Physics/Vector Module": [[201, "potential-issues-advanced-topics-future-features-in-physics-vector-module"]], "Power sets": [[235, "module-sympy.sets.powerset"]], "Powers": [[305, "powers"]], "Precedence": [[227, "module-sympy.printing.precedence"]], "Predefined types": [[50, "predefined-types"]], "Predicate": [[45, "predicate"]], "Predicates": [[22, "predicates"], [46, "module-sympy.assumptions.predicates"]], "Preliminaries": [[303, "preliminaries"]], "Pretty-Printing Implementation Helpers": [[227, "module-sympy.printing.pretty.pretty_symbology"]], "PrettyPrinter Class": [[227, "prettyprinter-class"]], "Prevent expression evaluation": [[300, "prevent-expression-evaluation"]], "Preview": [[227, "preview"]], "Prime Decomposition": [[222, "prime-decomposition"]], "Printer Class": [[227, "module-sympy.printing.printer"]], "Printers": [[304, "printers"]], "Printing": [[2, "printing"], [24, "printing"], [97, "module-sympy.interactive.printing"], [129, "printing"], [201, "printing"], [227, "printing"], [304, "printing"]], "Printing (Docstrings)": [[139, "printing-docstrings"], [207, "printing-docstrings"]], "Printing Functions": [[304, "printing-functions"]], "ProductSet(iterable)": [[13, "productset-iterable"]], "Products and contractions": [[248, "products-and-contractions"]], "Programmatically Extract Parameter Symbols": [[32, "programmatically-extract-parameter-symbols"]], "Prufer Sequences": [[63, "module-sympy.combinatorics.prufer"]], "Public API": [[3, null]], "Put Your Equation Into Eq Form": [[33, "put-your-equation-into-eq-form"]], "Pyglet Plotting": [[213, "module-sympy.plotting.pygletplot"]], "Python numbers vs. SymPy Numbers": [[16, "python-numbers-vs-sympy-numbers"]], "Python utilities (sympy.codegen.pyutils)": [[50, "module-sympy.codegen.pyutils"]], "PythonCodePrinter": [[227, "module-sympy.printing.pycode"]], "PythonPrinter": [[227, "module-sympy.printing.python"]], "QFT": [[185, "module-sympy.physics.quantum.qft"]], "QQ": [[218, "qq"]], "QQ<a>": [[218, "qq-a"]], "QQ_I": [[218, "qq-i"]], "QS function": [[109, "qs-function"]], "Qapply": [[184, "module-sympy.physics.quantum.qapply"]], "Quadrilateral problem": [[277, "quadrilateral-problem"]], "Quantities": [[197, "quantities"]], "Quantum Computation": [[179, "quantum-computation"]], "Quantum Functions": [[179, "quantum-functions"]], "Quantum Harmonic Oscillator in 1-D": [[168, "module-sympy.physics.qho_1d"]], "Quantum Harmonic Oscillator in 3-D": [[193, "module-sympy.physics.sho"]], "Quantum Mechanics": [[179, "quantum-mechanics"]], "Quaternion Reference": [[42, "module-sympy.algebras"]], "Qubit": [[186, "module-sympy.physics.quantum.qubit"]], "Querying": [[45, "querying"]], "Questions": [[40, "questions"]], "Quick Tip": [[294, null], [295, null], [297, null], [300, null], [301, null]], "Quotient ring": [[218, "quotient-ring"]], "RCodePrinter": [[227, "module-sympy.printing.rcode"]], "RR": [[218, "rr"]], "RREF": [[301, "rref"]], "Ramp-Response Plot": [[123, "ramp-response-plot"]], "Random": [[69, "module-sympy.core.random"]], "Random Tests": [[12, "random-tests"]], "Random Variable Types": [[247, "random-variable-types"]], "Randomised Testing": [[257, "module-sympy.testing.randtest"]], "Rational Algorithm": [[229, "rational-algorithm"]], "Rational Riccati Solver": [[243, "rational-riccati-solver"]], "Rational function fields": [[217, "rational-function-fields"]], "Read the paper": [[7, "read-the-paper"]], "Real and complex fields": [[217, "real-and-complex-fields"]], "Recommended Optional Dependencies": [[2, "recommended-optional-dependencies"]], "Recurrence Equations": [[245, "module-sympy.solvers.recurr"]], "Recursing through an Expression Tree": [[300, "recursing-through-an-expression-tree"]], "Recursive Sequences": [[233, "recursive-sequences"]], "Reduce One or a System of Inequalities for a Single Variable Algebraically": [[31, "reduce-one-or-a-system-of-inequalities-for-a-single-variable-algebraically"]], "Reduce a System of Inequalities Algebraically": [[31, "reduce-a-system-of-inequalities-algebraically"]], "Reducing One Inequality for a Single Variable Algebraically": [[31, "reducing-one-inequality-for-a-single-variable-algebraically"]], "Reducing a System of Inequalities for a Single Variable Algebraically": [[31, "reducing-a-system-of-inequalities-for-a-single-variable-algebraically"]], "Reduction of Order": [[237, "reduction-of-order"]], "Redundant static methods in carmichael": [[13, "redundant-static-methods-in-carmichael"]], "Reference": [[105, "reference"], [214, "reference"], [220, "reference"], [224, "reference"], [234, "reference"], [234, "id2"], [234, "id4"], [234, "id7"], [234, "id8"]], "Reference docs for the Poly Domains": [[218, "reference-docs-for-the-poly-domains"]], "ReferenceFrame": [[201, "referenceframe"]], "References": [[27, "references"], [52, "references"], [69, "references"], [81, "references"], [87, "references"], [96, "references"], [164, "references"], [167, "references"], [212, "references"], [236, "references"], [237, "references"], [240, "references"], [246, "references"], [291, "references"], [292, "references"]], "References for Physics/Mechanics": [[158, "references-for-physics-mechanics"]], "References for Physics/Vector": [[209, "references-for-physics-vector"]], "References for Vector": [[279, "references-for-vector"]], "References for the above definitions": [[22, "references-for-the-above-definitions"]], "Refine": [[47, "module-sympy.assumptions.refine"]], "Regression Tests": [[12, "regression-tests"]], "Reidemeister Schreier algorithm": [[51, "reidemeister-schreier-algorithm"]], "Relating Sets of Basis Vectors": [[211, "relating-sets-of-basis-vectors"]], "Relations between different symbols": [[22, "relations-between-different-symbols"]], "Release notes entry": [[3, "release-notes-entry"]], "Relocate symbolic functions from ntheory to functions": [[13, "relocate-symbolic-functions-from-ntheory-to-functions"]], "Reminder": [[24, null]], "Report a Bug": [[29, "report-a-bug"], [31, "report-a-bug"], [32, "report-a-bug"], [33, "report-a-bug"], [34, "report-a-bug"], [35, "report-a-bug"], [36, "report-a-bug"], [37, "report-a-bug"], [38, "report-a-bug"]], "Represent": [[187, "module-sympy.physics.quantum.represent"]], "Representation of holonomic functions in SymPy": [[92, "representation-of-holonomic-functions-in-sympy"]], "Representing Branched Functions on the Argand Plane": [[94, "representing-branched-functions-on-the-argand-plane"]], "Representing Roots": [[29, "representing-roots"]], "Representing algebraic numbers": [[222, "representing-algebraic-numbers"]], "Representing expressions symbolically": [[217, "representing-expressions-symbolically"]], "Required dependencies": [[8, "required-dependencies"]], "Residues": [[234, "residues"]], "Restrict the Domain of Solutions": [[33, "restrict-the-domain-of-solutions"]], "Return Unevaluated Integrals": [[36, "return-unevaluated-integrals"]], "Revealing noncontributing forces": [[145, "revealing-noncontributing-forces"]], "Review pull requests": [[7, "review-pull-requests"]], "Review the Code of Conduct": [[7, "review-the-code-of-conduct"]], "Rewriting and Simplification": [[24, "rewriting-and-simplification"]], "Riemann Zeta and Related Functions": [[77, "module-sympy.functions.special.zeta_functions"]], "Rigid Body": [[157, "rigid-body"]], "Rigid Tendon Dynamics": [[292, "rigid-tendon-dynamics"]], "Rotation matrices": [[105, "rotation-matrices"]], "Rough Autolev-SymPy Equivalents": [[159, "rough-autolev-sympy-equivalents"]], "Routine": [[260, "routine"]], "Rules": [[236, "rules"]], "Run SymPy": [[40, "run-sympy"]], "Run Tests": [[258, "module-sympy.testing.runtests"]], "Run the Tests": [[11, "run-the-tests"]], "Running Tests": [[12, "running-tests"]], "Running the Benchmarks": [[2, "running-the-benchmarks"]], "Running the Tests": [[2, "running-the-tests"]], "Runtime Installation": [[111, "runtime-installation"]], "Rust code printing": [[227, "module-sympy.printing.rust"]], "SMT-Lib printing": [[227, "module-sympy.printing.smtlib"]], "Sage": [[2, "sage"]], "Sample Docstring": [[4, "sample-docstring"]], "Scalar and Vector Field Functionality": [[208, "scalar-and-vector-field-functionality"], [278, "scalar-and-vector-field-functionality"]], "Scalar and vector fields": [[278, "scalar-and-vector-fields"]], "Scalar potential functions": [[208, "scalar-potential-functions"], [278, "scalar-potential-functions"]], "Search based solver and step-by-step solution": [[246, "search-based-solver-and-step-by-step-solution"]], "Second Quantization": [[192, "module-sympy.physics.secondquant"]], "Sections": [[4, "sections"]], "See": [[277, "see"]], "See Also": [[69, "see-also"], [265, "see-also"]], "Select a Specific Solver": [[36, "select-a-specific-solver"]], "Separate Symbolic and Numeric Code": [[14, "separate-symbolic-and-numeric-code"]], "Sequences": [[233, "sequences"]], "Sequences Base": [[233, "sequences-base"]], "Series": [[231, "series"]], "Series Acceleration": [[234, "series-acceleration"]], "Series Classes": [[213, "series-classes"]], "Series Expansion": [[295, "series-expansion"]], "Series Expansions": [[234, "series-expansions"]], "Series Manipulation using Polynomials": [[224, "series-manipulation-using-polynomials"]], "Series expansion": [[91, "series-expansion"]], "Session": [[97, "module-sympy.interactive.session"]], "SetKind": [[235, "setkind"]], "Sets": [[46, "sets"], [235, "sets"]], "Setting up Pretty Printing": [[304, "setting-up-pretty-printing"]], "Setup Development Environment": [[9, "setup-development-environment"]], "Setup GitHub": [[9, "setup-github"]], "Setup SSH Keys": [[9, "setup-ssh-keys"]], "Setup your development environment": [[7, "setup-your-development-environment"]], "Shape": [[301, "shape"]], "Shor\u2019s Algorithm": [[188, "module-sympy.physics.quantum.shor"]], "Silencing SymPy Deprecation Warnings": [[13, "silencing-sympy-deprecation-warnings"]], "Simple univariate polynomial factorization": [[226, "simple-univariate-polynomial-factorization"]], "Simplification": [[305, "simplification"]], "Simplification and equivalence-testing": [[99, "simplification-and-equivalence-testing"]], "Simplified remainder sequences": [[220, "simplified-remainder-sequences"]], "Simplify": [[238, "simplify"], [239, "simplify"]], "Simulate the Muscle-actuated Motion": [[291, "simulate-the-muscle-actuated-motion"]], "Single Dictionary": [[18, "single-dictionary"]], "Single Equals Sign": [[16, "single-equals-sign"]], "Singleton Sequences": [[233, "singleton-sequences"]], "Singleton Sets": [[235, "singleton-sets"]], "Singularities": [[48, "singularities"]], "Skipping Tests": [[12, "skipping-tests"]], "So Which Should I Use?": [[110, "so-which-should-i-use"]], "Solution": [[277, "solution"], [277, "id2"]], "Solve Equations": [[30, "solve-equations"]], "Solve Into a Solution Given as a Dictionary": [[37, "solve-into-a-solution-given-as-a-dictionary"]], "Solve One or a System of Equations Numerically": [[35, "solve-one-or-a-system-of-equations-numerically"]], "Solve Output by Type": [[18, "solve-output-by-type"]], "Solve Results in a Set": [[37, "solve-results-in-a-set"]], "Solve a Diophantine Equation Algebraically": [[32, "solve-a-diophantine-equation-algebraically"]], "Solve a Matrix Equation": [[34, "solve-a-matrix-equation"]], "Solve a Matrix Equation Algebraically": [[34, "solve-a-matrix-equation-algebraically"]], "Solve a System of Equations Algebraically": [[37, "solve-a-system-of-equations-algebraically"]], "Solve a System of Equations Numerically": [[35, "solve-a-system-of-equations-numerically"]], "Solve a System of Linear Equations Algebraically": [[37, "solve-a-system-of-linear-equations-algebraically"]], "Solve a System of Nonlinear Equations Algebraically": [[37, "solve-a-system-of-nonlinear-equations-algebraically"]], "Solve an Equation Algebraically": [[33, "solve-an-equation-algebraically"], [33, "id1"]], "Solve an Ordinary Differential Equation (ODE)": [[36, "solve-an-ordinary-differential-equation-ode"]], "Solve an Ordinary Differential Equation (ODE) Algebraically": [[36, "solve-an-ordinary-differential-equation-ode-algebraically"]], "Solve and Use Results in a Dictionary": [[37, "solve-and-use-results-in-a-dictionary"]], "Solvers": [[241, "solvers"], [245, "module-sympy.solvers"], [306, "solvers"]], "Solveset": [[246, "solveset"]], "Solveset Module Reference": [[246, "solveset-module-reference"]], "Solving Beam Bending Problems using Singularity Functions": [[118, "solving-beam-bending-problems-using-singularity-functions"]], "Solving Differential Equations": [[306, "solving-differential-equations"]], "Solving Equations": [[215, "solving-equations"]], "Solving Equations Algebraically": [[306, "solving-equations-algebraically"]], "Solving Functions": [[33, "solving-functions"]], "Solving Guidance": [[38, "solving-guidance"]], "Solving Several Matrix Equations With the Same Matrix": [[34, "solving-several-matrix-equations-with-the-same-matrix"]], "Solving Vector Equations": [[201, "solving-vector-equations"]], "Solving the Main Problems": [[222, "solving-the-main-problems"]], "Some Key Differences": [[159, "some-key-differences"]], "Some ODEs Cannot Be Solved Explicitly, Only Implicitly": [[36, "some-odes-cannot-be-solved-explicitly-only-implicitly"]], "Some traversal functions have been moved": [[13, "some-traversal-functions-have-been-moved"]], "Sorting": [[69, "sorting"]], "Source Code Inspection": [[269, "module-sympy.utilities.source"]], "Sparse Matrices": [[107, "module-sympy.matrices.sparse"]], "Sparse Tools": [[108, "module-sympy.matrices.sparsetools"]], "Sparse polynomial representation": [[217, "sparse-polynomial-representation"]], "Sparse polynomials": [[218, "sparse-polynomials"]], "Sparse rational functions": [[218, "sparse-rational-functions"]], "SparseMatrix Class Reference": [[107, "sparsematrix-class-reference"]], "Special": [[77, "special"]], "Special C math functions (sympy.codegen.cfunctions)": [[50, "module-sympy.codegen.cfunctions"]], "Special Functions": [[305, "special-functions"]], "Special Sets": [[235, "module-sympy.sets.fancysets"]], "Special Symbols": [[16, "special-symbols"]], "Special Types of Tests": [[12, "special-types-of-tests"]], "Special polynomials": [[223, "special-polynomials"]], "Specify Initial Conditions or Boundary Conditions": [[36, "specify-initial-conditions-or-boundary-conditions"], [36, "id1"]], "Specify the Order of Symbols in the Result": [[32, "specify-the-order-of-symbols-in-the-result"]], "Specifying Intervals for Variables": [[213, "specifying-intervals-for-variables"]], "Speed up Solving Matrix Equations": [[34, "speed-up-solving-matrix-equations"]], "Spelling and Punctuation": [[5, "spelling-and-punctuation"]], "Spherical Harmonics": [[77, "spherical-harmonics"]], "Spin": [[189, "module-sympy.physics.quantum.spin"]], "Sqrt is not a Function": [[16, "sqrt-is-not-a-function"]], "Square-free factorization": [[215, "square-free-factorization"]], "State": [[190, "module-sympy.physics.quantum.state"]], "States and Operators": [[179, "states-and-operators"]], "Statistics": [[2, "statistics"]], "Stats": [[247, "module-sympy.stats"]], "Step-Response Plot": [[123, "step-response-plot"]], "Stochastic Processes": [[247, "stochastic-processes"]], "StrPrinter": [[227, "module-sympy.printing.str"]], "Structure of Equations": [[154, "structure-of-equations"], [155, "structure-of-equations"]], "Style Preferences": [[5, "style-preferences"]], "Subgroups of Finite Index": [[51, "subgroups-of-finite-index"]], "Submodules": [[81, "submodules"]], "Subresultant sequence": [[220, "subresultant-sequence"]], "Subs/evalf": [[110, "subs-evalf"]], "Subset Convolution": [[72, "subset-convolution"]], "Subsets": [[64, "module-sympy.combinatorics.subsets"]], "Substitute Solutions From solve() Into an Expression": [[33, "substitute-solutions-from-solve-into-an-expression"]], "Substitute the Result Into an Expression": [[35, "substitute-the-result-into-an-expression"]], "Substitution": [[129, "substitution"], [201, "substitution"], [294, "substitution"]], "Sums and integrals": [[73, "sums-and-integrals"]], "Support for symbols in exponents": [[226, "support-for-symbols-in-exponents"]], "SymPy Can Reduce for Only One Symbol of Interest Per Inequality": [[31, "sympy-can-reduce-for-only-one-symbol-of-interest-per-inequality"]], "SymPy Codebase": [[7, "sympy-codebase"]], "SymPy Expression Reference": [[111, "module-sympy.parsing.sym_expr"]], "SymPy Features": [[296, "sympy-features"]], "SymPy Logo": [[26, "sympy-logo"]], "SymPy Mechanics for Autolev Users": [[159, "sympy-mechanics-for-autolev-users"]], "SymPy Special Topics": [[21, "sympy-special-topics"]], "SymPy operations on Vectors": [[275, "sympy-operations-on-vectors"]], "Symbolic Boolean vs three valued bool": [[23, "symbolic-boolean-vs-three-valued-bool"]], "Symbolic Expressions": [[16, "symbolic-expressions"]], "Symbolic Systems in Physics/Mechanics": [[160, "symbolic-systems-in-physics-mechanics"]], "Symbolic and fuzzy booleans": [[23, "symbolic-and-fuzzy-booleans"]], "Symbolic root-finding algorithms": [[223, "symbolic-root-finding-algorithms"]], "SymbolicSystem Example Usage": [[160, "symbolicsystem-example-usage"]], "Symbols": [[16, "symbols"], [297, "symbols"]], "System (Docstrings)": [[140, "system-docstrings"]], "System in Physics/Mechanics": [[153, "system-in-physics-mechanics"]], "System of ODEs": [[243, "system-of-odes"]], "Systems of Equations With no Closed-Form Solution": [[37, "systems-of-equations-with-no-closed-form-solution"]], "Systems of Equations With no Solution": [[37, "systems-of-equations-with-no-solution"]], "Systems of Inequalities That Cannot Be Reduced Analytically": [[31, "systems-of-inequalities-that-cannot-be-reduced-analytically"]], "Systems of Inequalities Which Cannot Be Satisfied": [[31, "systems-of-inequalities-which-cannot-be-satisfied"]], "Systems of Polynomial Equations": [[245, "systems-of-polynomial-equations"]], "TODO and Bugs": [[96, "todo-and-bugs"]], "Table Lookups and Inverse Mellin Transforms": [[94, "table-lookups-and-inverse-mellin-transforms"]], "Tendon Force-Length": [[292, "tendon-force-length"]], "Tensor": [[250, "module-sympy.tensor"], [253, "module-sympy.tensor.tensor"]], "Tensor Canonicalization": [[65, "module-sympy.combinatorics.tensor_can"]], "Tensor Functions": [[77, "tensor-functions"]], "Tensor Operators": [[254, "module-sympy.tensor.toperators"]], "Tensor Product": [[191, "module-sympy.physics.quantum.tensorproduct"]], "Tensor.fun_eval and Tensor.__call__": [[13, "tensor-fun-eval-and-tensor-call"]], "TensorIndexType.data and related methods": [[13, "tensorindextype-data-and-related-methods"]], "TensorType": [[13, "tensortype"]], "Term Rewriting": [[228, "term-rewriting"]], "Test Coverage": [[12, "test-coverage"]], "Test Deprecated Functionality": [[12, "test-deprecated-functionality"]], "Test Utilities": [[66, "module-sympy.combinatorics.testutil"]], "Testing": [[255, "testing"]], "Testing Exceptions": [[12, "testing-exceptions"]], "Testing Expressions with Dummy": [[12, "testing-expressions-with-dummy"]], "Testing Policies": [[12, "testing-policies"]], "Testing Warnings": [[12, "testing-warnings"]], "Testing if polynomials have common zeros": [[226, "testing-if-polynomials-have-common-zeros"]], "Testing that Something is Unchanged": [[12, "testing-that-something-is-unchanged"]], "Testing-Only Dependencies": [[2, "testing-only-dependencies"]], "Tests Style Guide": [[12, "tests-style-guide"]], "The (old) assumptions system": [[22, "the-old-assumptions-system"]], "The Construction of Collector": [[59, "the-construction-of-collector"]], "The Construction of Finitely Presented Groups": [[51, "the-construction-of-finitely-presented-groups"]], "The Construction of Polycyclic Groups": [[59, "the-construction-of-polycyclic-groups"]], "The Del operator": [[278, "the-del-operator"]], "The Fully Evaluated Case": [[24, "the-fully-evaluated-case"]], "The Fully Symbolic Case": [[24, "the-fully-symbolic-case"]], "The G-Function Integration Theorems": [[94, "the-g-function-integration-theorems"]], "The Gruntz Algorithm": [[234, "the-gruntz-algorithm"]], "The Inverse Laplace Transform of a G-function": [[94, "the-inverse-laplace-transform-of-a-g-function"]], "The ManagedProperties metaclass": [[13, "the-managedproperties-metaclass"]], "The ModularInteger.to_int() method": [[13, "the-modularinteger-to-int-method"]], "The Physics Vector Module": [[209, "the-physics-vector-module"]], "The Power of Symbolic Computation": [[299, "the-power-of-symbolic-computation"]], "The Problem": [[277, "the-problem"], [277, "id1"]], "The Subfield Problem": [[222, "the-subfield-problem"]], "The check argument to HadamardProduct, MatAdd and MatMul": [[13, "the-check-argument-to-hadamardproduct-matadd-and-matmul"]], "The dummy_fmt argument to TensorIndexType": [[13, "the-dummy-fmt-argument-to-tensorindextype"]], "The evaluate flag to differentiate_finite": [[13, "the-evaluate-flag-to-differentiate-finite"]], "The get_kronecker_delta() and get_epsilon() methods of TensorIndexType": [[13, "the-get-kronecker-delta-and-get-epsilon-methods-of-tensorindextype"]], "The get_segments attribute of plotting objects": [[13, "the-get-segments-attribute-of-plotting-objects"]], "The is_EmptySet attribute of sets": [[13, "the-is-emptyset-attribute-of-sets"]], "The max_degree and get_upper_degree properties of sympy.polys.multivariate_resultants.DixonResultant": [[13, "the-max-degree-and-get-upper-degree-properties-of-sympy-polys-multivariate-resultants-dixonresultant"]], "The mdft function in sympy.physics.matrices": [[13, "the-mdft-function-in-sympy-physics-matrices"]], "The metric argument to TensorIndexType": [[13, "the-metric-argument-to-tensorindextype"]], "The need for a reference": [[197, "the-need-for-a-reference"]], "The print_cyclic flag of sympy.combinatorics.Permutation": [[13, "the-print-cyclic-flag-of-sympy-combinatorics-permutation"]], "The private SparseMatrix._smat and DenseMatrix._mat attributes": [[13, "the-private-sparsematrix-smat-and-densematrix-mat-attributes"]], "The purpose of deprecation": [[3, "the-purpose-of-deprecation"]], "The set_potential_energy method in sympy.physics.mechanics": [[13, "the-set-potential-energy-method-in-sympy-physics-mechanics"]], "The string fallback in sympify()": [[13, "the-string-fallback-in-sympify"]], "The sympy.core.compatibility submodule": [[13, "the-sympy-core-compatibility-submodule"]], "The tensorhead() function": [[13, "the-tensorhead-function"]], "The tensorsymmetry() function": [[13, "the-tensorsymmetry-function"]], "The unicode argument and attribute to sympy.printing.pretty.stringpict.prettyForm and the sympy.printing.pretty.pretty_symbology.xstr function": [[13, "the-unicode-argument-and-attribute-to-sympy-printing-pretty-stringpict-prettyform-and-the-sympy-printing-pretty-pretty-symbology-xstr-function"]], "Third product rule for Del operator": [[277, "third-product-rule-for-del-operator"]], "Three Dimensions and Beyond": [[81, "three-dimensions-and-beyond"]], "Three-valued logic with fuzzy bools": [[23, "three-valued-logic-with-fuzzy-bools"]], "Three-valued logic with symbolic Booleans": [[23, "three-valued-logic-with-symbolic-booleans"]], "Timing Utilities": [[270, "module-sympy.utilities.timeutils"]], "Tone Preferences": [[5, "tone-preferences"]], "Tools for simplifying expressions using approximations (sympy.codegen.approximations)": [[50, "module-sympy.codegen.approximations"]], "Topics": [[282, "topics"], [289, "topics"]], "Tradeoffs": [[29, "tradeoffs"]], "Transforming new system": [[276, "transforming-new-system"]], "Transforms": [[72, "module-sympy.discrete.transforms"]], "Traversal": [[69, "module-sympy.core.traversal"]], "Tree Printing": [[227, "module-sympy.printing.tree"]], "Tree representation": [[217, "tree-representation"]], "Triceps": [[291, "triceps"]], "Trigonometric": [[75, "trigonometric"]], "Trigonometric Functions": [[75, "trigonometric-functions"]], "Trigonometric Inverses": [[75, "trigonometric-inverses"]], "Trigonometric Simplification": [[305, "trigonometric-simplification"]], "Truss": [[120, "truss"]], "Truss (Docstrings)": [[121, "module-sympy.physics.continuum_mechanics.truss"]], "Truth Setting Expressions": [[81, "truth-setting-expressions"]], "Truth tables and related functions": [[99, "truth-tables-and-related-functions"]], "Try to avoid backwards incompatible changes in the first place": [[3, "try-to-avoid-backwards-incompatible-changes-in-the-first-place"]], "Tuples": [[16, "tuples"]], "Tutorial": [[240, "tutorial"]], "Tutorials": [[39, "tutorials"], [293, "tutorials"]], "Two Final Notes: ^ and /": [[297, "two-final-notes-and"]], "Types of Documentation": [[5, "types-of-documentation"]], "Understanding Expression Trees": [[300, "understanding-expression-trees"]], "Undocumented": [[220, "undocumented"]], "Unicode Pretty Printer": [[304, "unicode-pretty-printer"]], "Unifying domains": [[217, "unifying-domains"]], "Unit prefixes": [[198, "module-sympy.physics.units.prefixes"]], "Unit systems": [[196, "unit-systems"]], "Units": [[197, "units"]], "Units and unit systems": [[200, "module-sympy.physics.units.unitsystem"]], "Univariate GCD, resultant and factorization": [[226, "univariate-gcd-resultant-and-factorization"]], "Univariate factoring over Gaussian numbers": [[226, "univariate-factoring-over-gaussian-numbers"]], "Univariate factoring over various domains": [[226, "univariate-factoring-over-various-domains"]], "Updating Existing Tests": [[12, "updating-existing-tests"]], "Usage": [[142, "usage"]], "Use Exact Values": [[38, "use-exact-values"]], "Use a Solution Given as a Dictionary": [[37, "use-a-solution-given-as-a-dictionary"]], "Use the Result": [[31, "use-the-result"]], "Use the Solution Result": [[29, "use-the-solution-result"], [32, "use-the-solution-result"], [33, "use-the-solution-result"], [34, "use-the-solution-result"], [35, "use-the-solution-result"], [36, "use-the-solution-result"]], "Use the Solution as a Vector": [[34, "use-the-solution-as-a-vector"]], "User Functions": [[240, "user-functions"], [243, "user-functions"], [244, "user-functions"]], "Uses and Current limitations": [[93, "uses-and-current-limitations"]], "Using Custom Color Functions": [[213, "using-custom-color-functions"]], "Using Orienter(s) and the orient_new method": [[276, "using-orienter-s-and-the-orient-new-method"]], "Using Vectors and Reference Frames": [[211, "using-vectors-and-reference-frames"]], "Using a method of CoordSys3D directly": [[276, "using-a-method-of-coordsys3d-directly"]], "Using a set for the condition in ConditionSet": [[13, "using-a-set-for-the-condition-in-conditionset"]], "Using energy functions in Mechanics": [[157, "using-energy-functions-in-mechanics"]], "Using integrate with Poly": [[13, "using-integrate-with-poly"]], "Using momenta functions in Mechanics": [[157, "using-momenta-functions-in-mechanics"]], "Using the Interactive Interface": [[213, "using-the-interactive-interface"]], "Using the nodes": [[50, "using-the-nodes"]], "Utilities": [[67, "module-sympy.combinatorics.util"], [165, "module-sympy.physics.optics.utils"], [222, "utilities"], [264, "module-sympy.utilities"], [282, "utilities"], [290, "utilities"]], "Utils": [[86, "module-sympy.geometry.util"]], "Variables": [[16, "variables"]], "Variables Assignment does not Create a Relation Between Expressions": [[16, "variables-assignment-does-not-create-a-relation-between-expressions"]], "Various sympy.utilities submodules have moved": [[13, "various-sympy-utilities-submodules-have-moved"]], "Vector": [[152, "vector"], [211, "vector"], [279, "vector"]], "Vector & ReferenceFrame": [[211, "vector-referenceframe"]], "Vector API": [[272, "vector-api"]], "Vector Algebra": [[211, "vector-algebra"]], "Vector Algebra, in physics.vector": [[211, "vector-algebra-in-physics-vector"]], "Vector Calculus": [[211, "vector-calculus"]], "Vector Calculus, in physics.vector": [[211, "vector-calculus-in-physics-vector"]], "Vector Operations": [[211, "vector-operations"]], "Vector: Kinematics": [[210, "vector-kinematics"]], "Vectors and Dyadics": [[276, "vectors-and-dyadics"]], "Vectors and Scalars": [[208, "vectors-and-scalars"], [280, "vectors-and-scalars"]], "Verify a Solution": [[32, "verify-a-solution"]], "Verifying Divergence Theorem": [[281, "verifying-divergence-theorem"]], "Verifying Stoke\u2019s Theorem": [[281, "verifying-stoke-s-theorem"]], "Versine": [[24, "versine"]], "Version 1.10": [[13, "version-1-10"]], "Version 1.11": [[13, "version-1-11"]], "Version 1.12": [[13, "version-1-12"]], "Version 1.13": [[13, "version-1-13"]], "Version 1.4": [[13, "version-1-4"]], "Version 1.5": [[13, "version-1-5"]], "Version 1.6": [[13, "version-1-6"]], "Version 1.7": [[13, "version-1-7"]], "Version 1.7.1": [[13, "version-1-7-1"]], "Version 1.8": [[13, "version-1-8"]], "Version 1.9": [[13, "version-1-9"]], "View the Docs": [[8, "view-the-docs"]], "Virtual Environment Setup": [[9, "virtual-environment-setup"]], "Walking the Tree": [[300, "walking-the-tree"]], "Waves": [[166, "module-sympy.physics.optics.waves"]], "Welcome to SymPy\u2019s documentation!": [[39, "welcome-to-sympy-s-documentation"]], "What are the domains?": [[217, "what-are-the-domains"]], "What are the general methods employed by solveset to solve an equation?": [[246, "what-are-the-general-methods-employed-by-solveset-to-solve-an-equation"]], "What is Symbolic Computation?": [[299, "what-is-symbolic-computation"]], "What is a deprecation?": [[3, "what-is-a-deprecation"]], "What is domainmatrix?": [[216, "what-is-domainmatrix"]], "What is the plan for solve and solveset?": [[246, "what-is-the-plan-for-solve-and-solveset"]], "What is this domain argument about?": [[246, "what-is-this-domain-argument-about"]], "What\u2019s Next": [[302, "whats-next"]], "What\u2019s with the new_method kwarg?": [[156, null]], "What\u2019s wrong with solve():": [[246, "what-s-wrong-with-solve"]], "When You Might Prefer a Numeric Solution": [[38, "when-you-might-prefer-a-numeric-solution"]], "When does a change require deprecation?": [[3, "when-does-a-change-require-deprecation"]], "When it is not technically possible to deprecate": [[3, "when-it-is-not-technically-possible-to-deprecate"]], "When the integral exists": [[94, "when-the-integral-exists"]], "When this computation is valid": [[94, "when-this-computation-is-valid"]], "Which Method is Responsible for Printing?": [[227, "which-method-is-responsible-for-printing"]], "Why Solveset?": [[246, "why-solveset"]], "Why SymPy?": [[299, "why-sympy"]], "Why do we use Sets as an output type?": [[246, "why-do-we-use-sets-as-an-output-type"]], "Wigner Symbols": [[212, "module-sympy.physics.wigner"]], "Windows 10": [[8, "windows-10"]], "Work With Arbitrary Constants": [[36, "work-with-arbitrary-constants"]], "Work With Parameters": [[32, "work-with-parameters"]], "Work With Symbolic Matrices": [[34, "work-with-symbolic-matrices"]], "Working with expressions as polynomials": [[226, "working-with-expressions-as-polynomials"]], "Wrapping Geometries": [[292, "wrapping-geometries"]], "Wrapping Geometry (Docstrings)": [[141, "module-sympy.physics.mechanics.wrapping_geometry"]], "Writing Custom Functions": [[24, "writing-custom-functions"]], "Writing Tests": [[12, "writing-tests"]], "Writing Tests with External Dependencies": [[12, "writing-tests-with-external-dependencies"]], "Writing commit messages": [[11, "writing-commit-messages"]], "Writing pull request title and description": [[11, "writing-pull-request-title-and-description"]], "ZZ": [[218, "zz"]], "ZZ_I": [[218, "zz-i"]], "Zero Testing": [[301, "zero-testing"]], "Zeroth-Order": [[292, "zeroth-order"]], "\\mathrm{\\LaTeX}": [[304, "mathrm-latex"]], "\\mathrm{\\LaTeX} Parsing Exceptions Reference": [[111, "mathrm-latex-parsing-exceptions-reference"]], "\\mathrm{\\LaTeX} Parsing Functions Reference": [[111, "mathrm-latex-parsing-functions-reference"]], "abc": [[41, "module-sympy.abc"]], "add": [[69, "module-sympy.core.add"]], "apart": [[305, "apart"]], "args": [[300, "args"]], "as_real_imag()": [[24, "as-real-imag"]], "assumptions": [[69, "module-sympy.core.assumptions"]], "basic": [[69, "module-sympy.core.basic"]], "cache": [[69, "module-sympy.core.cache"]], "cancel": [[305, "cancel"]], "class": [[19, "class"]], "collect": [[305, "collect"]], "combsimp": [[305, "combsimp"]], "containers": [[69, "module-sympy.core.containers"]], "divides": [[24, "divides"]], "doit()": [[24, "doit"]], "dotprint": [[227, "dotprint"]], "dynamicsymbols": [[201, "dynamicsymbols"]], "evalf": [[69, "module-sympy.core.evalf"], [294, "evalf"]], "expand": [[305, "expand"]], "expand()": [[24, "expand"]], "expand_func": [[305, "expand-func"]], "expand_log": [[305, "expand-log"]], "expand_power_exp / expand_power_base": [[305, "expand-power-exp-expand-power-base"]], "expand_trig": [[305, "expand-trig"]], "expr": [[69, "module-sympy.core.expr"]], "expr_free_symbols": [[13, "expr-free-symbols"]], "exprtools": [[69, "module-sympy.core.exprtools"]], "factor": [[305, "factor"]], "func": [[19, "func"], [300, "func"]], "function": [[69, "module-sympy.core.function"]], "gammasimp": [[305, "gammasimp"]], "help()": [[16, "help"]], "hyperexpand": [[305, "hyperexpand"]], "intfunc": [[69, "module-sympy.core.intfunc"]], "inverse()": [[24, "inverse"]], "kind": [[19, "kind"], [69, "module-sympy.core.kind"]], "kinematic_equations": [[206, "module-sympy.physics.vector.functions"]], "lambdify": [[2, "lambdify"], [294, "lambdify"]], "laplace_transform of a Matrix with noconds=False": [[13, "laplace-transform-of-a-matrix-with-noconds-false"]], "logcombine": [[305, "logcombine"]], "lti": [[125, "module-sympy.physics.control.lti"]], "mechanics_printing": [[139, "mechanics-printing"]], "mlatex": [[139, "mlatex"]], "mod": [[69, "module-sympy.core.mod"]], "mpmath": [[40, "mpmath"]], "mpprint": [[139, "mpprint"]], "mprint": [[139, "mprint"]], "mul": [[69, "module-sympy.core.mul"]], "multidimensional": [[69, "module-sympy.core.multidimensional"]], "nroots": [[29, "nroots"]], "numbers": [[69, "module-sympy.core.numbers"]], "p-adic Valuation": [[222, "p-adic-valuation"]], "partitions": [[265, "partitions"]], "powdenest": [[305, "powdenest"]], "power": [[69, "module-sympy.core.power"]], "powsimp": [[305, "powsimp"]], "pytest": [[256, "module-sympy.testing.pytest"]], "real_roots": [[29, "real-roots"]], "relational": [[69, "module-sympy.core.relational"]], "rewrite": [[305, "rewrite"]], "rewrite()": [[24, "rewrite"]], "roots": [[29, "roots"]], "rs_series": [[224, "rs-series"]], "sets and assumptions": [[19, "sets-and-assumptions"]], "simplify": [[305, "simplify"]], "singleton": [[69, "module-sympy.core.singleton"]], "solveset() Solution Sets Cannot Necessarily Be Interrogated Programmatically": [[33, "solveset-solution-sets-cannot-necessarily-be-interrogated-programmatically"]], "srepr": [[227, "module-sympy.printing.repr"], [304, "srepr"]], "str": [[304, "str"]], "symbol": [[69, "module-sympy.core.symbol"]], "sympify": [[69, "module-sympy.core.sympify"]], "sympy.assumptions.handlers.AskHandler and related methods": [[13, "sympy-assumptions-handlers-askhandler-and-related-methods"]], "sympy.core.trace": [[13, "sympy-core-trace"]], "sympy.polys.solvers.RawMatrix": [[13, "sympy-polys-solvers-rawmatrix"]], "sympy.printing.theanocode": [[13, "sympy-printing-theanocode"]], "sympy.stats.DiscreteMarkovChain.absorbing_probabilites()": [[13, "sympy-stats-discretemarkovchain-absorbing-probabilites"]], "sympy.stats.sample(numsamples=n)": [[13, "sympy-stats-sample-numsamples-n"]], "sympy.testing.randtest": [[13, "sympy-testing-randtest"]], "sympy.utilities.misc.find_executable()": [[13, "sympy-utilities-misc-find-executable"]], "transolve": [[246, "transolve"]], "trigsimp": [[305, "trigsimp"]], "uFuncify": [[110, "ufuncify"]], "variations": [[265, "variations"]]}, "docnames": ["citing", "contributing/debug", "contributing/dependencies", "contributing/deprecations", "contributing/docstring", "contributing/documentation-style-guide", "contributing/index", "contributing/introduction-to-contributing", "contributing/new-contributors-guide/build-docs", "contributing/new-contributors-guide/dev-setup", "contributing/new-contributors-guide/index", "contributing/new-contributors-guide/workflow-process", "contributing/new-contributors-guide/writing-tests", "explanation/active-deprecations", "explanation/best-practices", "explanation/glossary", "explanation/gotchas", "explanation/index", "explanation/solve_output", "explanation/special_topics/classification", "explanation/special_topics/finite_diff_derivatives", "explanation/special_topics/index", "guides/assumptions", "guides/booleans", "guides/custom-functions", "guides/index", "guides/logo", "guides/physics/control_problems", "guides/physics/index", "guides/solving/find-roots-polynomial", "guides/solving/index", "guides/solving/reduce-inequalities-algebraically", "guides/solving/solve-diophantine-equation", "guides/solving/solve-equation-algebraically", "guides/solving/solve-matrix-equation", "guides/solving/solve-numerically", "guides/solving/solve-ode", "guides/solving/solve-system-of-equations-algebraically", "guides/solving/solving-guidance", "index", "install", "modules/abc", "modules/algebras", "modules/assumptions/ask", "modules/assumptions/assume", "modules/assumptions/index", "modules/assumptions/predicates", "modules/assumptions/refine", "modules/calculus/index", "modules/categories", "modules/codegen", "modules/combinatorics/fp_groups", "modules/combinatorics/galois", "modules/combinatorics/graycode", "modules/combinatorics/group_constructs", "modules/combinatorics/group_numbers", "modules/combinatorics/index", "modules/combinatorics/named_groups", "modules/combinatorics/partitions", "modules/combinatorics/pc_groups", "modules/combinatorics/perm_groups", "modules/combinatorics/permutations", "modules/combinatorics/polyhedron", "modules/combinatorics/prufer", "modules/combinatorics/subsets", "modules/combinatorics/tensor_can", "modules/combinatorics/testutil", "modules/combinatorics/util", "modules/concrete", "modules/core", "modules/crypto", "modules/diffgeom", "modules/discrete", "modules/evalf", "modules/functions/combinatorial", "modules/functions/elementary", "modules/functions/index", "modules/functions/special", "modules/geometry/curves", "modules/geometry/ellipses", "modules/geometry/entities", "modules/geometry/index", "modules/geometry/lines", "modules/geometry/plane", "modules/geometry/points", "modules/geometry/polygons", "modules/geometry/utils", "modules/holonomic/about", "modules/holonomic/convert", "modules/holonomic/index", "modules/holonomic/internal", "modules/holonomic/operations", "modules/holonomic/represent", "modules/holonomic/uses", "modules/integrals/g-functions", "modules/integrals/index", "modules/integrals/integrals", "modules/interactive", "modules/liealgebras/index", "modules/logic", "modules/matrices/dense", "modules/matrices/expressions", "modules/matrices/immutablematrices", "modules/matrices/index", "modules/matrices/kind", "modules/matrices/matrices", "modules/matrices/normalforms", "modules/matrices/sparse", "modules/matrices/sparsetools", "modules/ntheory", "modules/numeric-computation", "modules/parsing", "modules/physics/biomechanics/api/activation", "modules/physics/biomechanics/api/curve", "modules/physics/biomechanics/api/index", "modules/physics/biomechanics/api/musculotendon", "modules/physics/biomechanics/index", "modules/physics/continuum_mechanics/beam", "modules/physics/continuum_mechanics/beam_problems", "modules/physics/continuum_mechanics/cable", "modules/physics/continuum_mechanics/index", "modules/physics/continuum_mechanics/truss", "modules/physics/control/control", "modules/physics/control/control_plots", "modules/physics/control/index", "modules/physics/control/lti", "modules/physics/hep/index", "modules/physics/hydrogen", "modules/physics/matrices", "modules/physics/mechanics/advanced", "modules/physics/mechanics/api/actuator", "modules/physics/mechanics/api/deprecated_classes", "modules/physics/mechanics/api/expr_manip", "modules/physics/mechanics/api/index", "modules/physics/mechanics/api/joint", "modules/physics/mechanics/api/kane_lagrange", "modules/physics/mechanics/api/linearize", "modules/physics/mechanics/api/part_bod", "modules/physics/mechanics/api/pathway", "modules/physics/mechanics/api/printing", "modules/physics/mechanics/api/system", "modules/physics/mechanics/api/wrapping_geometry", "modules/physics/mechanics/autolev_parser", "modules/physics/mechanics/examples", "modules/physics/mechanics/examples/bicycle_example", "modules/physics/mechanics/examples/four_bar_linkage_example", "modules/physics/mechanics/examples/lin_pend_nonmin_example", "modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system", "modules/physics/mechanics/examples/rollingdisc_example", "modules/physics/mechanics/examples/rollingdisc_example_kane", "modules/physics/mechanics/examples/rollingdisc_example_kane_constraints", "modules/physics/mechanics/examples/rollingdisc_example_lagrange", "modules/physics/mechanics/index", "modules/physics/mechanics/joints", "modules/physics/mechanics/kane", "modules/physics/mechanics/lagrange", "modules/physics/mechanics/linearize", "modules/physics/mechanics/masses", "modules/physics/mechanics/reference", "modules/physics/mechanics/sympy_mechanics_for_autolev_users", "modules/physics/mechanics/symsystem", "modules/physics/optics/gaussopt", "modules/physics/optics/index", "modules/physics/optics/medium", "modules/physics/optics/polarization", "modules/physics/optics/utils", "modules/physics/optics/waves", "modules/physics/paulialgebra", "modules/physics/qho_1d", "modules/physics/quantum/anticommutator", "modules/physics/quantum/cartesian", "modules/physics/quantum/cg", "modules/physics/quantum/circuitplot", "modules/physics/quantum/commutator", "modules/physics/quantum/constants", "modules/physics/quantum/dagger", "modules/physics/quantum/gate", "modules/physics/quantum/grover", "modules/physics/quantum/hilbert", "modules/physics/quantum/index", "modules/physics/quantum/innerproduct", "modules/physics/quantum/operator", "modules/physics/quantum/operatorset", "modules/physics/quantum/piab", "modules/physics/quantum/qapply", "modules/physics/quantum/qft", "modules/physics/quantum/qubit", "modules/physics/quantum/represent", "modules/physics/quantum/shor", "modules/physics/quantum/spin", "modules/physics/quantum/state", "modules/physics/quantum/tensorproduct", "modules/physics/secondquant", "modules/physics/sho", "modules/physics/units/dimensions", "modules/physics/units/examples", "modules/physics/units/index", "modules/physics/units/philosophy", "modules/physics/units/prefixes", "modules/physics/units/quantities", "modules/physics/units/unitsystem", "modules/physics/vector/advanced", "modules/physics/vector/api/classes", "modules/physics/vector/api/fieldfunctions", "modules/physics/vector/api/functions", "modules/physics/vector/api/index", "modules/physics/vector/api/kinematics", "modules/physics/vector/api/printing", "modules/physics/vector/fields", "modules/physics/vector/index", "modules/physics/vector/kinematics", "modules/physics/vector/vectors", "modules/physics/wigner", "modules/plotting", "modules/polys/agca", "modules/polys/basics", "modules/polys/domainmatrix", "modules/polys/domainsintro", "modules/polys/domainsref", "modules/polys/index", "modules/polys/internals", "modules/polys/literature", "modules/polys/numberfields", "modules/polys/reference", "modules/polys/ringseries", "modules/polys/solvers", "modules/polys/wester", "modules/printing", "modules/rewriting", "modules/series/formal", "modules/series/fourier", "modules/series/index", "modules/series/limitseq", "modules/series/sequences", "modules/series/series", "modules/sets", "modules/simplify/fu", "modules/simplify/hyperexpand", "modules/simplify/index", "modules/simplify/simplify", "modules/solvers/diophantine", "modules/solvers/index", "modules/solvers/inequalities", "modules/solvers/ode", "modules/solvers/pde", "modules/solvers/solvers", "modules/solvers/solveset", "modules/stats", "modules/tensor/array", "modules/tensor/array_expressions", "modules/tensor/index", "modules/tensor/index_methods", "modules/tensor/indexed", "modules/tensor/tensor", "modules/tensor/toperators", "modules/testing/index", "modules/testing/pytest", "modules/testing/randtest", "modules/testing/runtests", "modules/utilities/autowrap", "modules/utilities/codegen", "modules/utilities/decorator", "modules/utilities/enumerative", "modules/utilities/exceptions", "modules/utilities/index", "modules/utilities/iterables", "modules/utilities/lambdify", "modules/utilities/memoization", "modules/utilities/misc", "modules/utilities/source", "modules/utilities/timeutils", "modules/vector/api/classes", "modules/vector/api/index", "modules/vector/api/orienterclasses", "modules/vector/api/vectorfunctions", "modules/vector/basics", "modules/vector/coordsys", "modules/vector/examples", "modules/vector/fields", "modules/vector/index", "modules/vector/intro", "modules/vector/vector_integration", "reference/index", "reference/public/basics/index", "reference/public/codegeneration/index", "reference/public/logic/index", "reference/public/matrices/index", "reference/public/numbertheory/index", "reference/public/physics/index", "reference/public/topics/index", "reference/public/utilities/index", "tutorials/biomechanics/biomechanical-model-example", "tutorials/biomechanics/biomechanics", "tutorials/index", "tutorials/intro-tutorial/basic_operations", "tutorials/intro-tutorial/calculus", "tutorials/intro-tutorial/features", "tutorials/intro-tutorial/gotchas", "tutorials/intro-tutorial/index", "tutorials/intro-tutorial/intro", "tutorials/intro-tutorial/manipulation", "tutorials/intro-tutorial/matrices", "tutorials/intro-tutorial/next", "tutorials/intro-tutorial/preliminaries", "tutorials/intro-tutorial/printing", "tutorials/intro-tutorial/simplification", "tutorials/intro-tutorial/solvers"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["citing.md", "contributing/debug.rst", "contributing/dependencies.md", "contributing/deprecations.md", "contributing/docstring.rst", "contributing/documentation-style-guide.rst", "contributing/index.md", "contributing/introduction-to-contributing.md", "contributing/new-contributors-guide/build-docs.rst", "contributing/new-contributors-guide/dev-setup.md", "contributing/new-contributors-guide/index.md", "contributing/new-contributors-guide/workflow-process.md", "contributing/new-contributors-guide/writing-tests.md", "explanation/active-deprecations.md", "explanation/best-practices.md", "explanation/glossary.md", "explanation/gotchas.rst", "explanation/index.rst", "explanation/solve_output.rst", "explanation/special_topics/classification.rst", "explanation/special_topics/finite_diff_derivatives.rst", "explanation/special_topics/index.rst", "guides/assumptions.rst", "guides/booleans.rst", "guides/custom-functions.md", "guides/index.rst", "guides/logo.rst", "guides/physics/control_problems.rst", "guides/physics/index.rst", "guides/solving/find-roots-polynomial.md", "guides/solving/index.md", "guides/solving/reduce-inequalities-algebraically.md", "guides/solving/solve-diophantine-equation.md", "guides/solving/solve-equation-algebraically.md", "guides/solving/solve-matrix-equation.md", "guides/solving/solve-numerically.md", "guides/solving/solve-ode.md", "guides/solving/solve-system-of-equations-algebraically.md", "guides/solving/solving-guidance.md", "index.rst", "install.md", "modules/abc.rst", "modules/algebras.rst", "modules/assumptions/ask.rst", "modules/assumptions/assume.rst", "modules/assumptions/index.rst", "modules/assumptions/predicates.rst", "modules/assumptions/refine.rst", "modules/calculus/index.rst", "modules/categories.rst", "modules/codegen.rst", "modules/combinatorics/fp_groups.rst", "modules/combinatorics/galois.rst", "modules/combinatorics/graycode.rst", "modules/combinatorics/group_constructs.rst", "modules/combinatorics/group_numbers.rst", "modules/combinatorics/index.rst", "modules/combinatorics/named_groups.rst", "modules/combinatorics/partitions.rst", "modules/combinatorics/pc_groups.rst", "modules/combinatorics/perm_groups.rst", "modules/combinatorics/permutations.rst", "modules/combinatorics/polyhedron.rst", "modules/combinatorics/prufer.rst", "modules/combinatorics/subsets.rst", "modules/combinatorics/tensor_can.rst", "modules/combinatorics/testutil.rst", "modules/combinatorics/util.rst", "modules/concrete.rst", "modules/core.rst", "modules/crypto.rst", "modules/diffgeom.rst", "modules/discrete.rst", "modules/evalf.rst", "modules/functions/combinatorial.rst", "modules/functions/elementary.rst", "modules/functions/index.rst", "modules/functions/special.rst", "modules/geometry/curves.rst", "modules/geometry/ellipses.rst", "modules/geometry/entities.rst", "modules/geometry/index.rst", "modules/geometry/lines.rst", "modules/geometry/plane.rst", "modules/geometry/points.rst", "modules/geometry/polygons.rst", "modules/geometry/utils.rst", "modules/holonomic/about.rst", "modules/holonomic/convert.rst", "modules/holonomic/index.rst", "modules/holonomic/internal.rst", "modules/holonomic/operations.rst", "modules/holonomic/represent.rst", "modules/holonomic/uses.rst", "modules/integrals/g-functions.rst", "modules/integrals/index.rst", "modules/integrals/integrals.rst", "modules/interactive.rst", "modules/liealgebras/index.rst", "modules/logic.rst", "modules/matrices/dense.rst", "modules/matrices/expressions.rst", "modules/matrices/immutablematrices.rst", "modules/matrices/index.rst", "modules/matrices/kind.rst", "modules/matrices/matrices.rst", "modules/matrices/normalforms.rst", "modules/matrices/sparse.rst", "modules/matrices/sparsetools.rst", "modules/ntheory.rst", "modules/numeric-computation.rst", "modules/parsing.rst", "modules/physics/biomechanics/api/activation.rst", "modules/physics/biomechanics/api/curve.rst", "modules/physics/biomechanics/api/index.rst", "modules/physics/biomechanics/api/musculotendon.rst", "modules/physics/biomechanics/index.rst", "modules/physics/continuum_mechanics/beam.rst", "modules/physics/continuum_mechanics/beam_problems.rst", "modules/physics/continuum_mechanics/cable.rst", "modules/physics/continuum_mechanics/index.rst", "modules/physics/continuum_mechanics/truss.rst", "modules/physics/control/control.rst", "modules/physics/control/control_plots.rst", "modules/physics/control/index.rst", "modules/physics/control/lti.rst", "modules/physics/hep/index.rst", "modules/physics/hydrogen.rst", "modules/physics/matrices.rst", "modules/physics/mechanics/advanced.rst", "modules/physics/mechanics/api/actuator.rst", "modules/physics/mechanics/api/deprecated_classes.rst", "modules/physics/mechanics/api/expr_manip.rst", "modules/physics/mechanics/api/index.rst", "modules/physics/mechanics/api/joint.rst", "modules/physics/mechanics/api/kane_lagrange.rst", "modules/physics/mechanics/api/linearize.rst", "modules/physics/mechanics/api/part_bod.rst", "modules/physics/mechanics/api/pathway.rst", "modules/physics/mechanics/api/printing.rst", "modules/physics/mechanics/api/system.rst", "modules/physics/mechanics/api/wrapping_geometry.rst", "modules/physics/mechanics/autolev_parser.rst", "modules/physics/mechanics/examples.rst", "modules/physics/mechanics/examples/bicycle_example.rst", "modules/physics/mechanics/examples/four_bar_linkage_example.rst", "modules/physics/mechanics/examples/lin_pend_nonmin_example.rst", "modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system.rst", "modules/physics/mechanics/examples/rollingdisc_example.rst", "modules/physics/mechanics/examples/rollingdisc_example_kane.rst", "modules/physics/mechanics/examples/rollingdisc_example_kane_constraints.rst", "modules/physics/mechanics/examples/rollingdisc_example_lagrange.rst", "modules/physics/mechanics/index.rst", "modules/physics/mechanics/joints.rst", "modules/physics/mechanics/kane.rst", "modules/physics/mechanics/lagrange.rst", "modules/physics/mechanics/linearize.rst", "modules/physics/mechanics/masses.rst", "modules/physics/mechanics/reference.rst", "modules/physics/mechanics/sympy_mechanics_for_autolev_users.rst", "modules/physics/mechanics/symsystem.rst", "modules/physics/optics/gaussopt.rst", "modules/physics/optics/index.rst", "modules/physics/optics/medium.rst", "modules/physics/optics/polarization.rst", "modules/physics/optics/utils.rst", "modules/physics/optics/waves.rst", "modules/physics/paulialgebra.rst", "modules/physics/qho_1d.rst", "modules/physics/quantum/anticommutator.rst", "modules/physics/quantum/cartesian.rst", "modules/physics/quantum/cg.rst", "modules/physics/quantum/circuitplot.rst", "modules/physics/quantum/commutator.rst", "modules/physics/quantum/constants.rst", "modules/physics/quantum/dagger.rst", "modules/physics/quantum/gate.rst", "modules/physics/quantum/grover.rst", "modules/physics/quantum/hilbert.rst", "modules/physics/quantum/index.rst", "modules/physics/quantum/innerproduct.rst", "modules/physics/quantum/operator.rst", "modules/physics/quantum/operatorset.rst", "modules/physics/quantum/piab.rst", "modules/physics/quantum/qapply.rst", "modules/physics/quantum/qft.rst", "modules/physics/quantum/qubit.rst", "modules/physics/quantum/represent.rst", "modules/physics/quantum/shor.rst", "modules/physics/quantum/spin.rst", "modules/physics/quantum/state.rst", "modules/physics/quantum/tensorproduct.rst", "modules/physics/secondquant.rst", "modules/physics/sho.rst", "modules/physics/units/dimensions.rst", "modules/physics/units/examples.rst", "modules/physics/units/index.rst", "modules/physics/units/philosophy.rst", "modules/physics/units/prefixes.rst", "modules/physics/units/quantities.rst", "modules/physics/units/unitsystem.rst", "modules/physics/vector/advanced.rst", "modules/physics/vector/api/classes.rst", "modules/physics/vector/api/fieldfunctions.rst", "modules/physics/vector/api/functions.rst", "modules/physics/vector/api/index.rst", "modules/physics/vector/api/kinematics.rst", "modules/physics/vector/api/printing.rst", "modules/physics/vector/fields.rst", "modules/physics/vector/index.rst", "modules/physics/vector/kinematics.rst", "modules/physics/vector/vectors.rst", "modules/physics/wigner.rst", "modules/plotting.rst", "modules/polys/agca.rst", "modules/polys/basics.rst", "modules/polys/domainmatrix.rst", "modules/polys/domainsintro.rst", "modules/polys/domainsref.rst", "modules/polys/index.rst", "modules/polys/internals.rst", "modules/polys/literature.rst", "modules/polys/numberfields.rst", "modules/polys/reference.rst", "modules/polys/ringseries.rst", "modules/polys/solvers.rst", "modules/polys/wester.rst", "modules/printing.rst", "modules/rewriting.rst", "modules/series/formal.rst", "modules/series/fourier.rst", "modules/series/index.rst", "modules/series/limitseq.rst", "modules/series/sequences.rst", "modules/series/series.rst", "modules/sets.rst", "modules/simplify/fu.rst", "modules/simplify/hyperexpand.rst", "modules/simplify/index.rst", "modules/simplify/simplify.rst", "modules/solvers/diophantine.rst", "modules/solvers/index.rst", "modules/solvers/inequalities.rst", "modules/solvers/ode.rst", "modules/solvers/pde.rst", "modules/solvers/solvers.rst", "modules/solvers/solveset.rst", "modules/stats.rst", "modules/tensor/array.rst", "modules/tensor/array_expressions.rst", "modules/tensor/index.rst", "modules/tensor/index_methods.rst", "modules/tensor/indexed.rst", "modules/tensor/tensor.rst", "modules/tensor/toperators.rst", "modules/testing/index.rst", "modules/testing/pytest.rst", "modules/testing/randtest.rst", "modules/testing/runtests.rst", "modules/utilities/autowrap.rst", "modules/utilities/codegen.rst", "modules/utilities/decorator.rst", "modules/utilities/enumerative.rst", "modules/utilities/exceptions.rst", "modules/utilities/index.rst", "modules/utilities/iterables.rst", "modules/utilities/lambdify.rst", "modules/utilities/memoization.rst", "modules/utilities/misc.rst", "modules/utilities/source.rst", "modules/utilities/timeutils.rst", "modules/vector/api/classes.rst", "modules/vector/api/index.rst", "modules/vector/api/orienterclasses.rst", "modules/vector/api/vectorfunctions.rst", "modules/vector/basics.rst", "modules/vector/coordsys.rst", "modules/vector/examples.rst", "modules/vector/fields.rst", "modules/vector/index.rst", "modules/vector/intro.rst", "modules/vector/vector_integration.rst", "reference/index.rst", "reference/public/basics/index.rst", "reference/public/codegeneration/index.rst", "reference/public/logic/index.rst", "reference/public/matrices/index.rst", "reference/public/numbertheory/index.rst", "reference/public/physics/index.rst", "reference/public/topics/index.rst", "reference/public/utilities/index.rst", "tutorials/biomechanics/biomechanical-model-example.rst", "tutorials/biomechanics/biomechanics.rst", "tutorials/index.rst", "tutorials/intro-tutorial/basic_operations.rst", "tutorials/intro-tutorial/calculus.rst", "tutorials/intro-tutorial/features.rst", "tutorials/intro-tutorial/gotchas.rst", "tutorials/intro-tutorial/index.rst", "tutorials/intro-tutorial/intro.rst", "tutorials/intro-tutorial/manipulation.rst", "tutorials/intro-tutorial/matrices.rst", "tutorials/intro-tutorial/next.rst", "tutorials/intro-tutorial/preliminaries.rst", "tutorials/intro-tutorial/printing.rst", "tutorials/intro-tutorial/simplification.rst", "tutorials/intro-tutorial/solvers.rst"], "indexentries": {"__abs__() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.__abs__", false]], "__add__() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.__add__", false]], "__add__() (sympy.polys.numberfields.modules.moduleelement method)": [[222, "sympy.polys.numberfields.modules.ModuleElement.__add__", false]], "__add__() (sympy.polys.numberfields.primes.primeideal method)": [[222, "sympy.polys.numberfields.primes.PrimeIdeal.__add__", false]], "__cacheit() (in module sympy.core.cache)": [[69, "sympy.core.cache.__cacheit", false]], "__call__() (sympy.polys.numberfields.modules.module method)": [[222, "sympy.polys.numberfields.modules.Module.__call__", false]], "__contains__() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.__contains__", false]], "__getitem__() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.__getitem__", false]], "__init__() (sympy.physics.mechanics.linearize.linearizer method)": [[136, "sympy.physics.mechanics.linearize.Linearizer.__init__", false]], "__init__() (sympy.polys.numberfields.modules.endomorphismring method)": [[222, "sympy.polys.numberfields.modules.EndomorphismRing.__init__", false]], "__init__() (sympy.polys.numberfields.modules.innerendomorphism method)": [[222, "sympy.polys.numberfields.modules.InnerEndomorphism.__init__", false]], "__init__() (sympy.polys.numberfields.modules.moduleelement method)": [[222, "sympy.polys.numberfields.modules.ModuleElement.__init__", false]], "__init__() (sympy.polys.numberfields.modules.moduleendomorphism method)": [[222, "sympy.polys.numberfields.modules.ModuleEndomorphism.__init__", false]], "__init__() (sympy.polys.numberfields.modules.modulehomomorphism method)": [[222, "sympy.polys.numberfields.modules.ModuleHomomorphism.__init__", false]], "__init__() (sympy.polys.numberfields.modules.powerbasis method)": [[222, "sympy.polys.numberfields.modules.PowerBasis.__init__", false]], "__init__() (sympy.polys.numberfields.modules.submodule method)": [[222, "sympy.polys.numberfields.modules.Submodule.__init__", false]], "__init__() (sympy.polys.numberfields.primes.primeideal method)": [[222, "sympy.polys.numberfields.primes.PrimeIdeal.__init__", false]], "__init__() (sympy.polys.numberfields.utilities.algintpowers method)": [[222, "sympy.polys.numberfields.utilities.AlgIntPowers.__init__", false]], "__init__() (sympy.vector.coordsysrect.coordsys3d method)": [[271, "sympy.vector.coordsysrect.CoordSys3D.__init__", false]], "__init__() (sympy.vector.orienters.axisorienter method)": [[273, "sympy.vector.orienters.AxisOrienter.__init__", false]], "__init__() (sympy.vector.orienters.bodyorienter method)": [[273, "sympy.vector.orienters.BodyOrienter.__init__", false]], "__init__() (sympy.vector.orienters.quaternionorienter method)": [[273, "sympy.vector.orienters.QuaternionOrienter.__init__", false]], "__init__() (sympy.vector.orienters.spaceorienter method)": [[273, "sympy.vector.orienters.SpaceOrienter.__init__", false]], "__len__() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.__len__", false]], "__mod__() (sympy.polys.numberfields.modules.moduleelement method)": [[222, "sympy.polys.numberfields.modules.ModuleElement.__mod__", false]], "__mul__() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.__mul__", false]], "__mul__() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.__mul__", false]], "__mul__() (sympy.polys.numberfields.modules.moduleelement method)": [[222, "sympy.polys.numberfields.modules.ModuleElement.__mul__", false]], "__mul__() (sympy.polys.numberfields.primes.primeideal method)": [[222, "sympy.polys.numberfields.primes.PrimeIdeal.__mul__", false]], "__new__() (sympy.combinatorics.perm_groups.permutationgroup static method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.__new__", false]], "__new__() (sympy.core.numbers.algebraicnumber static method)": [[69, "sympy.core.numbers.AlgebraicNumber.__new__", false]], "__pow__() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.__pow__", false]], "__weakref__ (sympy.combinatorics.perm_groups.permutationgroup attribute)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.__weakref__", false]], "__weakref__ (sympy.matrices.kind.matrixkind attribute)": [[104, "sympy.matrices.kind.MatrixKind.__weakref__", false]], "__weakref__ (sympy.matrices.matrixbase.matrixbase attribute)": [[105, "sympy.matrices.matrixbase.MatrixBase.__weakref__", false]], "_af_parity() (in module sympy.combinatorics.permutations)": [[61, "sympy.combinatorics.permutations._af_parity", false]], "_all_roots() (sympy.polys.rootoftools.complexrootof class method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._all_roots", false]], "_base_ordering() (in module sympy.combinatorics.util)": [[67, "sympy.combinatorics.util._base_ordering", false]], "_check_antecedents() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._check_antecedents", false]], "_check_antecedents_1() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._check_antecedents_1", false]], "_check_antecedents_inversion() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._check_antecedents_inversion", false]], "_check_cycles_alt_sym() (in module sympy.combinatorics.util)": [[67, "sympy.combinatorics.util._check_cycles_alt_sym", false]], "_cmp_perm_lists() (in module sympy.combinatorics.testutil)": [[66, "sympy.combinatorics.testutil._cmp_perm_lists", false]], "_coeffexpvalueerror": [[94, "sympy.integrals.meijerint._CoeffExpValueError", false]], "_complexes_index() (sympy.polys.rootoftools.complexrootof class method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._complexes_index", false]], "_complexes_sorted() (sympy.polys.rootoftools.complexrootof class method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._complexes_sorted", false]], "_condsimp() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._condsimp", false]], "_convert_poly_rat_alg() (in module sympy.holonomic.holonomic)": [[90, "sympy.holonomic.holonomic._convert_poly_rat_alg", false]], "_coset_representative() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup._coset_representative", false]], "_count_roots() (sympy.polys.rootoftools.complexrootof class method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._count_roots", false]], "_create_lookup_table() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._create_lookup_table", false]], "_create_table() (in module sympy.holonomic.holonomic)": [[90, "sympy.holonomic.holonomic._create_table", false]], "_csrtodok() (in module sympy.matrices.sparsetools)": [[108, "sympy.matrices.sparsetools._csrtodok", false]], "_default_settings (sympy.printing.smtlib.smtlibprinter attribute)": [[227, "sympy.printing.smtlib.SMTLibPrinter._default_settings", false]], "_diff_wrt (sympy.core.function.derivative property)": [[69, "sympy.core.function.Derivative._diff_wrt", false]], "_distinct_primes_lemma() (sympy.combinatorics.perm_groups.permutationgroup class method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup._distinct_primes_lemma", false]], "_distribute_gens_by_base() (in module sympy.combinatorics.util)": [[67, "sympy.combinatorics.util._distribute_gens_by_base", false]], "_doktocsr() (in module sympy.matrices.sparsetools)": [[108, "sympy.matrices.sparsetools._doktocsr", false]], "_dummy() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._dummy", false]], "_dummy_() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._dummy_", false]], "_ensure_complexes_init() (sympy.polys.rootoftools.complexrootof method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._ensure_complexes_init", false]], "_ensure_reals_init() (sympy.polys.rootoftools.complexrootof method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._ensure_reals_init", false]], "_eval_*": [[15, "term-_eval_", true]], "_eval_cond() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._eval_cond", false]], "_eval_evalf() (sympy.polys.rootoftools.complexrootof method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._eval_evalf", false]], "_eval_integral() (sympy.functions.elementary.piecewise.piecewise method)": [[75, "sympy.functions.elementary.piecewise.Piecewise._eval_integral", false]], "_eval_is_alt_sym_monte_carlo() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup._eval_is_alt_sym_monte_carlo", false]], "_eval_is_alt_sym_naive() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup._eval_is_alt_sym_naive", false]], "_eval_is_imaginary() (sympy.polys.rootoftools.complexrootof method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._eval_is_imaginary", false]], "_eval_is_real() (sympy.polys.rootoftools.complexrootof method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._eval_is_real", false]], "_exponents() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._exponents", false]], "_find_splitting_points() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._find_splitting_points", false]], "_flip_g() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._flip_g", false]], "_fourier_transform() (in module sympy.integrals.transforms)": [[96, "sympy.integrals.transforms._fourier_transform", false]], "_functions() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._functions", false]], "_get_coeff_exp() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._get_coeff_exp", false]], "_get_complexes() (sympy.polys.rootoftools.complexrootof class method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._get_complexes", false]], "_get_complexes_sqf() (sympy.polys.rootoftools.complexrootof class method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._get_complexes_sqf", false]], "_get_interval() (sympy.polys.rootoftools.complexrootof method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._get_interval", false]], "_get_reals() (sympy.polys.rootoftools.complexrootof class method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._get_reals", false]], "_get_reals_sqf() (sympy.polys.rootoftools.complexrootof class method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._get_reals_sqf", false]], "_get_roots() (sympy.polys.rootoftools.complexrootof class method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._get_roots", false]], "_guess_expansion() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._guess_expansion", false]], "_handle_integral() (in module sympy.solvers.ode.ode)": [[243, "sympy.solvers.ode.ode._handle_Integral", false]], "_handle_precomputed_bsgs() (in module sympy.combinatorics.util)": [[67, "sympy.combinatorics.util._handle_precomputed_bsgs", false]], "_indexed_root() (sympy.polys.rootoftools.complexrootof class method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._indexed_root", false]], "_inflate_fox_h() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._inflate_fox_h", false]], "_inflate_g() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._inflate_g", false]], "_int0oo() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._int0oo", false]], "_int0oo_1() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._int0oo_1", false]], "_int_inversion() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._int_inversion", false]], "_is_analytic() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._is_analytic", false]], "_is_exponential() (in module sympy.solvers.solveset)": [[246, "sympy.solvers.solveset._is_exponential", false]], "_is_logarithmic() (in module sympy.solvers.solveset)": [[246, "sympy.solvers.solveset._is_logarithmic", false]], "_linear_2eq_order1_type6() (in module sympy.solvers.ode.ode)": [[243, "sympy.solvers.ode.ode._linear_2eq_order1_type6", false]], "_linear_2eq_order1_type7() (in module sympy.solvers.ode.ode)": [[243, "sympy.solvers.ode.ode._linear_2eq_order1_type7", false]], "_meijerint_definite_2() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._meijerint_definite_2", false]], "_meijerint_definite_3() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._meijerint_definite_3", false]], "_meijerint_definite_4() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._meijerint_definite_4", false]], "_meijerint_indefinite_1() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._meijerint_indefinite_1", false]], "_modgcd_multivariate_p() (in module sympy.polys.modulargcd)": [[220, "sympy.polys.modulargcd._modgcd_multivariate_p", false]], "_mul_args() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._mul_args", false]], "_mul_as_two_parts() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._mul_as_two_parts", false]], "_my_principal_branch() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._my_principal_branch", false]], "_mytype() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._mytype", false]], "_naive_list_centralizer() (in module sympy.combinatorics.testutil)": [[66, "sympy.combinatorics.testutil._naive_list_centralizer", false]], "_new() (sympy.polys.rootoftools.complexrootof class method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._new", false]], "_nonlinear_2eq_order1_type1() (in module sympy.solvers.ode.ode)": [[243, "sympy.solvers.ode.ode._nonlinear_2eq_order1_type1", false]], "_nonlinear_2eq_order1_type2() (in module sympy.solvers.ode.ode)": [[243, "sympy.solvers.ode.ode._nonlinear_2eq_order1_type2", false]], "_nonlinear_2eq_order1_type3() (in module sympy.solvers.ode.ode)": [[243, "sympy.solvers.ode.ode._nonlinear_2eq_order1_type3", false]], "_nonlinear_2eq_order1_type4() (in module sympy.solvers.ode.ode)": [[243, "sympy.solvers.ode.ode._nonlinear_2eq_order1_type4", false]], "_nonlinear_2eq_order1_type5() (in module sympy.solvers.ode.ode)": [[243, "sympy.solvers.ode.ode._nonlinear_2eq_order1_type5", false]], "_nonlinear_3eq_order1_type1() (in module sympy.solvers.ode.ode)": [[243, "sympy.solvers.ode.ode._nonlinear_3eq_order1_type1", false]], "_nonlinear_3eq_order1_type2() (in module sympy.solvers.ode.ode)": [[243, "sympy.solvers.ode.ode._nonlinear_3eq_order1_type2", false]], "_nonlinear_3eq_order1_type3() (in module sympy.solvers.ode.ode)": [[243, "sympy.solvers.ode.ode._nonlinear_3eq_order1_type3", false]], "_nonlinear_3eq_order1_type4() (in module sympy.solvers.ode.ode)": [[243, "sympy.solvers.ode.ode._nonlinear_3eq_order1_type4", false]], "_nonlinear_3eq_order1_type5() (in module sympy.solvers.ode.ode)": [[243, "sympy.solvers.ode.ode._nonlinear_3eq_order1_type5", false]], "_orbits_transversals_from_bsgs() (in module sympy.combinatorics.util)": [[67, "sympy.combinatorics.util._orbits_transversals_from_bsgs", false]], "_p_elements_group() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup._p_elements_group", false]], "_postprocess_root() (sympy.polys.rootoftools.complexrootof class method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._postprocess_root", false]], "_preprocess_roots() (sympy.polys.rootoftools.complexrootof class method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._preprocess_roots", false]], "_print() (sympy.printing.printer.printer method)": [[227, "sympy.printing.printer.Printer._print", false]], "_randint() (in module sympy.core.random)": [[69, "sympy.core.random._randint", false]], "_random_pr_init() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup._random_pr_init", false]], "_randrange() (in module sympy.core.random)": [[69, "sympy.core.random._randrange", false]], "_real_roots() (sympy.polys.rootoftools.complexrootof class method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._real_roots", false]], "_reals_index() (sympy.polys.rootoftools.complexrootof class method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._reals_index", false]], "_reals_sorted() (sympy.polys.rootoftools.complexrootof class method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._reals_sorted", false]], "_refine_complexes() (sympy.polys.rootoftools.complexrootof class method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._refine_complexes", false]], "_remove_gens() (in module sympy.combinatorics.util)": [[67, "sympy.combinatorics.util._remove_gens", false]], "_reset() (sympy.polys.rootoftools.complexrootof method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._reset", false]], "_rewrite1() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._rewrite1", false]], "_rewrite2() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._rewrite2", false]], "_rewrite_inversion() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._rewrite_inversion", false]], "_rewrite_saxena() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._rewrite_saxena", false]], "_rewrite_saxena_1() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._rewrite_saxena_1", false]], "_rewrite_single() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._rewrite_single", false]], "_roots_trivial() (sympy.polys.rootoftools.complexrootof class method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._roots_trivial", false]], "_set_interval() (sympy.polys.rootoftools.complexrootof method)": [[223, "sympy.polys.rootoftools.ComplexRootOf._set_interval", false]], "_solve_exponential() (in module sympy.solvers.solveset)": [[246, "sympy.solvers.solveset._solve_exponential", false]], "_solve_lin_sys() (in module sympy.polys.solvers)": [[225, "sympy.polys.solvers._solve_lin_sys", false]], "_solve_lin_sys_component() (in module sympy.polys.solvers)": [[225, "sympy.polys.solvers._solve_lin_sys_component", false]], "_solve_logarithm() (in module sympy.solvers.solveset)": [[246, "sympy.solvers.solveset._solve_logarithm", false]], "_sort_variable_count() (sympy.core.function.derivative class method)": [[69, "sympy.core.function.Derivative._sort_variable_count", false]], "_split_mul() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint._split_mul", false]], "_strip() (in module sympy.combinatorics.util)": [[67, "sympy.combinatorics.util._strip", false]], "_strong_gens_from_distr() (in module sympy.combinatorics.util)": [[67, "sympy.combinatorics.util._strong_gens_from_distr", false]], "_sylow_alt_sym() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup._sylow_alt_sym", false]], "_tan1() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series._tan1", false]], "_tensormanager (class in sympy.tensor.tensor)": [[253, "sympy.tensor.tensor._TensorManager", false]], "_transolve() (in module sympy.solvers.solveset)": [[246, "sympy.solvers.solveset._transolve", false]], "_union_find_merge() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup._union_find_merge", false]], "_union_find_rep() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup._union_find_rep", false]], "_verify() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup._verify", false]], "_verify_bsgs() (in module sympy.combinatorics.testutil)": [[66, "sympy.combinatorics.testutil._verify_bsgs", false]], "_verify_centralizer() (in module sympy.combinatorics.testutil)": [[66, "sympy.combinatorics.testutil._verify_centralizer", false]], "_verify_normal_closure() (in module sympy.combinatorics.testutil)": [[66, "sympy.combinatorics.testutil._verify_normal_closure", false]], "a (sympy.physics.biomechanics.activation.activationbase property)": [[112, "sympy.physics.biomechanics.activation.ActivationBase.a", false]], "a (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.a", false]], "a (sympy.physics.optics.gaussopt.raytransfermatrix property)": [[161, "sympy.physics.optics.gaussopt.RayTransferMatrix.A", false]], "a (sympy.physics.quantum.shor.cmod property)": [[188, "sympy.physics.quantum.shor.CMod.a", false]], "a1pt_theory() (sympy.physics.vector.point.point method)": [[206, "sympy.physics.vector.point.Point.a1pt_theory", false]], "a2idx() (in module sympy.matrices.matrixbase)": [[105, "sympy.matrices.matrixbase.a2idx", false]], "a2pt_theory() (sympy.physics.vector.point.point method)": [[206, "sympy.physics.vector.point.Point.a2pt_theory", false]], "a4_in_s6() (in module sympy.combinatorics.galois)": [[52, "sympy.combinatorics.galois.A4_in_S6", false]], "a4xc2() (in module sympy.combinatorics.galois)": [[52, "sympy.combinatorics.galois.A4xC2", false]], "a_interval (sympy.sets.fancysets.complexregion property)": [[235, "sympy.sets.fancysets.ComplexRegion.a_interval", false]], "abbrev (sympy.physics.units.quantities.quantity property)": [[199, "sympy.physics.units.quantities.Quantity.abbrev", false]], "abelian_invariants() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.abelian_invariants", false]], "abeliangroup() (in module sympy.combinatorics.named_groups)": [[57, "sympy.combinatorics.named_groups.AbelianGroup", false]], "above() (sympy.printing.pretty.stringpict.stringpict method)": [[227, "sympy.printing.pretty.stringpict.stringPict.above", false]], "abs (class in sympy.functions.elementary.complexes)": [[75, "sympy.functions.elementary.complexes.Abs", false]], "abs() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.abs", false]], "abs() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.abs", false]], "abs() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.abs", false]], "absorbing_probabilities() (sympy.stats.discretemarkovchain method)": [[247, "sympy.stats.DiscreteMarkovChain.absorbing_probabilities", false]], "abundance() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.abundance", false]], "acc() (sympy.physics.vector.point.point method)": [[206, "sympy.physics.vector.point.Point.acc", false]], "accepted_latex_functions (in module sympy.printing.latex)": [[227, "sympy.printing.latex.accepted_latex_functions", false]], "acos (class in sympy.functions.elementary.trigonometric)": [[75, "sympy.functions.elementary.trigonometric.acos", false]], "acosh (class in sympy.functions.elementary.hyperbolic)": [[75, "sympy.functions.elementary.hyperbolic.acosh", false]], "acot (class in sympy.functions.elementary.trigonometric)": [[75, "sympy.functions.elementary.trigonometric.acot", false]], "acoth (class in sympy.functions.elementary.hyperbolic)": [[75, "sympy.functions.elementary.hyperbolic.acoth", false]], "acsc (class in sympy.functions.elementary.trigonometric)": [[75, "sympy.functions.elementary.trigonometric.acsc", false]], "acsch (class in sympy.functions.elementary.hyperbolic)": [[75, "sympy.functions.elementary.hyperbolic.acsch", false]], "activation (sympy.physics.biomechanics.activation.activationbase property)": [[112, "sympy.physics.biomechanics.activation.ActivationBase.activation", false]], "activation (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.activation", false]], "activation_dynamics (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.activation_dynamics", false]], "activation_time_constant (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[112, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.activation_time_constant", false]], "activationbase (class in sympy.physics.biomechanics.activation)": [[112, "sympy.physics.biomechanics.activation.ActivationBase", false]], "actuatorbase (class in sympy.physics.mechanics.actuator)": [[130, "sympy.physics.mechanics.actuator.ActuatorBase", false]], "actuators (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.actuators", false]], "add (class in sympy.core.add)": [[69, "sympy.core.add.Add", false]], "add() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.add", false]], "add() (sympy.assumptions.assume.assumptionscontext method)": [[44, "sympy.assumptions.assume.AssumptionsContext.add", false]], "add() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.add", false]], "add() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.add", false]], "add() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.add", false]], "add() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.add", false]], "add() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.add", false]], "add() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.add", false]], "add() (sympy.polys.numberfields.modules.submodule method)": [[222, "sympy.polys.numberfields.modules.Submodule.add", false]], "add() (sympy.polys.polyclasses.dmf method)": [[218, "sympy.polys.polyclasses.DMF.add", false]], "add() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.add", false]], "add() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.add", false]], "add() (sympy.polys.rings.polyring method)": [[218, "sympy.polys.rings.PolyRing.add", false]], "add_actuators() (sympy.physics.mechanics.system.system method)": [[140, "sympy.physics.mechanics.system.System.add_actuators", false]], "add_as_roots() (sympy.liealgebras.root_system.rootsystem method)": [[98, "sympy.liealgebras.root_system.RootSystem.add_as_roots", false]], "add_auxiliary_speeds() (sympy.physics.mechanics.system.system method)": [[140, "sympy.physics.mechanics.system.System.add_auxiliary_speeds", false]], "add_bodies() (sympy.physics.mechanics.system.system method)": [[140, "sympy.physics.mechanics.system.System.add_bodies", false]], "add_coordinates() (sympy.physics.mechanics.system.system method)": [[140, "sympy.physics.mechanics.system.System.add_coordinates", false]], "add_gens() (sympy.polys.rings.polyring method)": [[218, "sympy.polys.rings.PolyRing.add_gens", false]], "add_ground() (sympy.polys.polyclasses.anp method)": [[218, "sympy.polys.polyclasses.ANP.add_ground", false]], "add_ground() (sympy.polys.polyclasses.dmf method)": [[218, "sympy.polys.polyclasses.DMF.add_ground", false]], "add_ground() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.add_ground", false]], "add_ground() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.add_ground", false]], "add_holonomic_constraints() (sympy.physics.mechanics.system.system method)": [[140, "sympy.physics.mechanics.system.System.add_holonomic_constraints", false]], "add_joints() (sympy.physics.mechanics.system.system method)": [[140, "sympy.physics.mechanics.system.System.add_joints", false]], "add_kdes() (sympy.physics.mechanics.system.system method)": [[140, "sympy.physics.mechanics.system.System.add_kdes", false]], "add_loads() (sympy.physics.mechanics.system.system method)": [[140, "sympy.physics.mechanics.system.System.add_loads", false]], "add_member() (sympy.physics.continuum_mechanics.truss.truss method)": [[121, "sympy.physics.continuum_mechanics.truss.Truss.add_member", false]], "add_node() (sympy.physics.continuum_mechanics.truss.truss method)": [[121, "sympy.physics.continuum_mechanics.truss.Truss.add_node", false]], "add_nonholonomic_constraints() (sympy.physics.mechanics.system.system method)": [[140, "sympy.physics.mechanics.system.System.add_nonholonomic_constraints", false]], "add_simple_roots() (sympy.liealgebras.root_system.rootsystem method)": [[98, "sympy.liealgebras.root_system.RootSystem.add_simple_roots", false]], "add_speeds() (sympy.physics.mechanics.system.system method)": [[140, "sympy.physics.mechanics.system.System.add_speeds", false]], "adj_det() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.adj_det", false]], "adj_poly_det() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.adj_poly_det", false]], "adjoint() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.adjoint", false]], "adjugate() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.adjugate", false]], "adjugate() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.adjugate", false]], "aesara_code() (in module sympy.printing.aesaracode)": [[227, "sympy.printing.aesaracode.aesara_code", false]], "aesara_function() (in module sympy.printing.aesaracode)": [[227, "sympy.printing.aesaracode.aesara_function", false]], "aesaraprinter (class in sympy.printing.aesaracode)": [[227, "sympy.printing.aesaracode.AesaraPrinter", false]], "affine_rank() (sympy.geometry.point.point static method)": [[84, "sympy.geometry.point.Point.affine_rank", false]], "airyai (class in sympy.functions.special.bessel)": [[77, "sympy.functions.special.bessel.airyai", false]], "airyaiprime (class in sympy.functions.special.bessel)": [[77, "sympy.functions.special.bessel.airyaiprime", false]], "airybase (class in sympy.functions.special.bessel)": [[77, "sympy.functions.special.bessel.AiryBase", false]], "airybi (class in sympy.functions.special.bessel)": [[77, "sympy.functions.special.bessel.airybi", false]], "airybiprime (class in sympy.functions.special.bessel)": [[77, "sympy.functions.special.bessel.airybiprime", false]], "alg_con (sympy.physics.mechanics.system.symbolicsystem property)": [[140, "sympy.physics.mechanics.system.SymbolicSystem.alg_con", false]], "alg_field_from_poly() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.alg_field_from_poly", false]], "algebraic": [[69, "term-algebraic", true]], "algebraic_field() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.algebraic_field", false]], "algebraic_field() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.algebraic_field", false]], "algebraic_field() (sympy.polys.domains.integerring method)": [[218, "sympy.polys.domains.IntegerRing.algebraic_field", false]], "algebraic_field() (sympy.polys.domains.rationalfield method)": [[218, "sympy.polys.domains.RationalField.algebraic_field", false]], "algebraicfield (class in sympy.polys.domains)": [[218, "sympy.polys.domains.AlgebraicField", false]], "algebraichandler (sympy.assumptions.predicates.sets.algebraicpredicate attribute)": [[46, "sympy.assumptions.predicates.sets.AlgebraicPredicate.AlgebraicHandler", false]], "algebraicnumber (class in sympy.core.numbers)": [[69, "sympy.core.numbers.AlgebraicNumber", false]], "algebraicpredicate (class in sympy.assumptions.predicates.sets)": [[46, "sympy.assumptions.predicates.sets.AlgebraicPredicate", false]], "algintpowers (class in sympy.polys.numberfields.utilities)": [[222, "sympy.polys.numberfields.utilities.AlgIntPowers", false]], "alignof() (in module sympy.codegen.cnodes)": [[50, "sympy.codegen.cnodes.alignof", false]], "all_coeffs() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.all_coeffs", false]], "all_coeffs() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.all_coeffs", false]], "all_monoms() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.all_monoms", false]], "all_monoms() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.all_monoms", false]], "all_roots() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.all_roots", false]], "all_roots() (sympy.liealgebras.root_system.rootsystem method)": [[98, "sympy.liealgebras.root_system.RootSystem.all_roots", false]], "all_roots() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.all_roots", false]], "all_roots() (sympy.polys.rootoftools.complexrootof class method)": [[223, "sympy.polys.rootoftools.ComplexRootOf.all_roots", false]], "all_terms() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.all_terms", false]], "all_terms() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.all_terms", false]], "allhints (in module sympy.solvers.ode)": [[243, "sympy.solvers.ode.allhints", false]], "allocated() (in module sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.allocated", false]], "almosteq() (sympy.polys.domains.complexfield method)": [[218, "sympy.polys.domains.ComplexField.almosteq", false]], "almosteq() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.almosteq", false]], "almosteq() (sympy.polys.domains.realfield method)": [[218, "sympy.polys.domains.RealField.almosteq", false]], "almosteq() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.almosteq", false]], "almostlinear (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.AlmostLinear", false]], "alpha_opt (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.alpha_opt", false]], "alternating() (sympy.combinatorics.generators method)": [[61, "sympy.combinatorics.generators.alternating", false]], "alternatinggroup() (in module sympy.combinatorics.named_groups)": [[57, "sympy.combinatorics.named_groups.AlternatingGroup", false]], "altitudes (sympy.geometry.polygon.triangle property)": [[85, "sympy.geometry.polygon.Triangle.altitudes", false]], "ambient_dimension (sympy.geometry.curve.curve property)": [[78, "sympy.geometry.curve.Curve.ambient_dimension", false]], "ambient_dimension (sympy.geometry.entity.geometryentity property)": [[80, "sympy.geometry.entity.GeometryEntity.ambient_dimension", false]], "ambient_dimension (sympy.geometry.line.linearentity property)": [[82, "sympy.geometry.line.LinearEntity.ambient_dimension", false]], "ambient_dimension (sympy.geometry.point.point property)": [[84, "sympy.geometry.point.Point.ambient_dimension", false]], "amplitude (sympy.physics.optics.waves.twave property)": [[166, "sympy.physics.optics.waves.TWave.amplitude", false]], "an (sympy.functions.special.hyper.meijerg property)": [[77, "sympy.functions.special.hyper.meijerg.an", false]], "analytic_func() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.analytic_func", false]], "ancestors() (sympy.polys.numberfields.modules.module method)": [[222, "sympy.polys.numberfields.modules.Module.ancestors", false]], "and (class in sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.And", false]], "andre (class in sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.andre", false]], "andre_poly() (in module sympy.polys.appellseqs)": [[223, "sympy.polys.appellseqs.andre_poly", false]], "anf_coeffs() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.anf_coeffs", false]], "anfform() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.ANFform", false]], "ang_acc_in() (sympy.physics.vector.frame.referenceframe method)": [[202, "sympy.physics.vector.frame.ReferenceFrame.ang_acc_in", false]], "ang_vel_in() (sympy.physics.mechanics.body.body method)": [[131, "sympy.physics.mechanics.body.Body.ang_vel_in", false]], "ang_vel_in() (sympy.physics.vector.frame.referenceframe method)": [[202, "sympy.physics.vector.frame.ReferenceFrame.ang_vel_in", false]], "angle (sympy.physics.optics.gaussopt.geometricray property)": [[161, "sympy.physics.optics.gaussopt.GeometricRay.angle", false]], "angle() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.angle", false]], "angle_between() (sympy.geometry.line.linearentity method)": [[82, "sympy.geometry.line.LinearEntity.angle_between", false]], "angle_between() (sympy.geometry.plane.plane method)": [[83, "sympy.geometry.plane.Plane.angle_between", false]], "angle_between() (sympy.physics.vector.vector.vector method)": [[202, "sympy.physics.vector.vector.Vector.angle_between", false]], "angles (sympy.geometry.polygon.polygon property)": [[85, "sympy.geometry.polygon.Polygon.angles", false]], "angles (sympy.geometry.polygon.regularpolygon property)": [[85, "sympy.geometry.polygon.RegularPolygon.angles", false]], "angular_deflection() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.angular_deflection", false]], "angular_momentum() (in module sympy.physics.mechanics.functions)": [[137, "sympy.physics.mechanics.functions.angular_momentum", false]], "angular_momentum() (sympy.physics.mechanics.body.body method)": [[131, "sympy.physics.mechanics.body.Body.angular_momentum", false]], "angular_momentum() (sympy.physics.mechanics.particle.particle method)": [[137, "sympy.physics.mechanics.particle.Particle.angular_momentum", false]], "angular_momentum() (sympy.physics.mechanics.rigidbody.rigidbody method)": [[137, "sympy.physics.mechanics.rigidbody.RigidBody.angular_momentum", false]], "angular_velocity (sympy.physics.optics.waves.twave property)": [[166, "sympy.physics.optics.waves.TWave.angular_velocity", false]], "annihilateboson (class in sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.AnnihilateBoson", false]], "annihilatefermion (class in sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.AnnihilateFermion", false]], "annotated() (in module sympy.printing.pretty.pretty_symbology)": [[227, "sympy.printing.pretty.pretty_symbology.annotated", false]], "annotations (sympy.plotting.plot.plot property)": [[213, "sympy.plotting.plot.Plot.annotations", false]], "anp (class in sympy.polys.polyclasses)": [[218, "sympy.polys.polyclasses.ANP", false]], "anticommutator (class in sympy.physics.quantum.anticommutator)": [[169, "sympy.physics.quantum.anticommutator.AntiCommutator", false]], "antiderivative": [[15, "term-Antiderivative", true]], "antidivisor_count() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.antidivisor_count", false]], "antidivisors() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.antidivisors", false]], "antihermitian": [[69, "term-antihermitian", true]], "antihermitianpredicate (class in sympy.assumptions.predicates.sets)": [[46, "sympy.assumptions.predicates.sets.AntihermitianPredicate", false]], "antisymmetrictensor (class in sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.AntiSymmetricTensor", false]], "aother (sympy.functions.special.hyper.meijerg property)": [[77, "sympy.functions.special.hyper.meijerg.aother", false]], "ap (sympy.functions.special.hyper.hyper property)": [[77, "sympy.functions.special.hyper.hyper.ap", false]], "ap (sympy.functions.special.hyper.meijerg property)": [[77, "sympy.functions.special.hyper.meijerg.ap", false]], "apart() (in module sympy.polys.partfrac)": [[223, "sympy.polys.partfrac.apart", false]], "apart() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.apart", false]], "apart_list() (in module sympy.polys.partfrac)": [[223, "sympy.polys.partfrac.apart_list", false]], "apoapsis (sympy.geometry.ellipse.ellipse property)": [[79, "sympy.geometry.ellipse.Ellipse.apoapsis", false]], "apothem (sympy.geometry.polygon.regularpolygon property)": [[85, "sympy.geometry.polygon.RegularPolygon.apothem", false]], "appellf1 (class in sympy.functions.special.hyper)": [[77, "sympy.functions.special.hyper.appellf1", false]], "append() (sympy.plotting.plot.plot method)": [[213, "sympy.plotting.plot.Plot.append", false]], "applied_loads (sympy.physics.continuum_mechanics.beam.beam property)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.applied_loads", false]], "appliedpredicate (class in sympy.assumptions.assume)": [[44, "sympy.assumptions.assume.AppliedPredicate", false]], "apply() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.apply", false]], "apply() (sympy.printing.pretty.stringpict.prettyform static method)": [[227, "sympy.printing.pretty.stringpict.prettyForm.apply", false]], "apply() (sympy.simplify.epathtools.epath method)": [[239, "sympy.simplify.epathtools.EPath.apply", false]], "apply_finite_diff() (in module sympy.calculus.finite_diff)": [[48, "sympy.calculus.finite_diff.apply_finite_diff", false]], "apply_force() (sympy.physics.mechanics.body.body method)": [[131, "sympy.physics.mechanics.body.Body.apply_force", false]], "apply_grover() (in module sympy.physics.quantum.grover)": [[177, "sympy.physics.quantum.grover.apply_grover", false]], "apply_length() (sympy.physics.continuum_mechanics.cable.cable method)": [[119, "sympy.physics.continuum_mechanics.cable.Cable.apply_length", false]], "apply_load() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.apply_load", false]], "apply_load() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.apply_load", false]], "apply_load() (sympy.physics.continuum_mechanics.cable.cable method)": [[119, "sympy.physics.continuum_mechanics.cable.Cable.apply_load", false]], "apply_load() (sympy.physics.continuum_mechanics.truss.truss method)": [[121, "sympy.physics.continuum_mechanics.truss.Truss.apply_load", false]], "apply_moment_load() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.apply_moment_load", false]], "apply_operator() (sympy.physics.secondquant.annihilateboson method)": [[192, "sympy.physics.secondquant.AnnihilateBoson.apply_operator", false]], "apply_operator() (sympy.physics.secondquant.annihilatefermion method)": [[192, "sympy.physics.secondquant.AnnihilateFermion.apply_operator", false]], "apply_operator() (sympy.physics.secondquant.createboson method)": [[192, "sympy.physics.secondquant.CreateBoson.apply_operator", false]], "apply_operator() (sympy.physics.secondquant.createfermion method)": [[192, "sympy.physics.secondquant.CreateFermion.apply_operator", false]], "apply_operators() (in module sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.apply_operators", false]], "apply_support() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.apply_support", false]], "apply_support() (sympy.physics.continuum_mechanics.truss.truss method)": [[121, "sympy.physics.continuum_mechanics.truss.Truss.apply_support", false]], "apply_torque() (sympy.physics.mechanics.body.body method)": [[131, "sympy.physics.mechanics.body.Body.apply_torque", false]], "apply_uniform_gravity() (sympy.physics.mechanics.system.system method)": [[140, "sympy.physics.mechanics.system.System.apply_uniform_gravity", false]], "applyfunc() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.applyfunc", false]], "applyfunc() (sympy.physics.vector.dyadic.dyadic method)": [[202, "sympy.physics.vector.dyadic.Dyadic.applyfunc", false]], "applyfunc() (sympy.physics.vector.vector.vector method)": [[202, "sympy.physics.vector.vector.Vector.applyfunc", false]], "applyfunc() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.applyfunc", false]], "approximation() (sympy.core.numbers.numbersymbol method)": [[69, "sympy.core.numbers.NumberSymbol.approximation", false]], "arbitrary_point() (sympy.geometry.curve.curve method)": [[78, "sympy.geometry.curve.Curve.arbitrary_point", false]], "arbitrary_point() (sympy.geometry.ellipse.ellipse method)": [[79, "sympy.geometry.ellipse.Ellipse.arbitrary_point", false]], "arbitrary_point() (sympy.geometry.line.linearentity method)": [[82, "sympy.geometry.line.LinearEntity.arbitrary_point", false]], "arbitrary_point() (sympy.geometry.plane.plane method)": [[83, "sympy.geometry.plane.Plane.arbitrary_point", false]], "arbitrary_point() (sympy.geometry.polygon.polygon method)": [[85, "sympy.geometry.polygon.Polygon.arbitrary_point", false]], "arc_coplanar() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.arc_coplanar", false]], "arcsin() (in module sympy.stats)": [[247, "sympy.stats.Arcsin", false]], "are_collinear() (sympy.geometry.point.point3d static method)": [[84, "sympy.geometry.point.Point3D.are_collinear", false]], "are_concurrent() (sympy.geometry.line.linearentity static method)": [[82, "sympy.geometry.line.LinearEntity.are_concurrent", false]], "are_concurrent() (sympy.geometry.plane.plane static method)": [[83, "sympy.geometry.plane.Plane.are_concurrent", false]], "are_coplanar() (sympy.geometry.point.point class method)": [[84, "sympy.geometry.point.Point.are_coplanar", false]], "are_similar() (in module sympy.geometry.util)": [[86, "sympy.geometry.util.are_similar", false]], "area (sympy.geometry.ellipse.ellipse property)": [[79, "sympy.geometry.ellipse.Ellipse.area", false]], "area (sympy.geometry.polygon.polygon property)": [[85, "sympy.geometry.polygon.Polygon.area", false]], "area (sympy.geometry.polygon.regularpolygon property)": [[85, "sympy.geometry.polygon.RegularPolygon.area", false]], "area (sympy.physics.continuum_mechanics.beam.beam property)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.area", false]], "area (sympy.physics.continuum_mechanics.beam.beam3d property)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.area", false]], "arg (class in sympy.functions.elementary.complexes)": [[75, "sympy.functions.elementary.complexes.arg", false]], "arg (sympy.assumptions.assume.appliedpredicate property)": [[44, "sympy.assumptions.assume.AppliedPredicate.arg", false]], "args": [[15, "term-args", true]], "args (sympy.core.basic.basic property)": [[69, "sympy.core.basic.Basic.args", false]], "args (sympy.geometry.polygon.regularpolygon property)": [[85, "sympy.geometry.polygon.RegularPolygon.args", false]], "args_cnc() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.args_cnc", false]], "argument (class in sympy.utilities.codegen)": [[260, "sympy.utilities.codegen.Argument", false]], "argument (sympy.functions.special.bessel.besselbase property)": [[77, "sympy.functions.special.bessel.BesselBase.argument", false]], "argument (sympy.functions.special.hyper.hyper property)": [[77, "sympy.functions.special.hyper.hyper.argument", false]], "argument (sympy.functions.special.hyper.meijerg property)": [[77, "sympy.functions.special.hyper.meijerg.argument", false]], "arguments (sympy.assumptions.assume.appliedpredicate property)": [[44, "sympy.assumptions.assume.AppliedPredicate.arguments", false]], "array() (in module sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.array", false]], "array_form (sympy.combinatorics.permutations.permutation property)": [[61, "sympy.combinatorics.permutations.Permutation.array_form", false]], "array_form (sympy.combinatorics.polyhedron.polyhedron property)": [[62, "sympy.combinatorics.polyhedron.Polyhedron.array_form", false]], "arrayconstructor (class in sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.ArrayConstructor", false]], "arraycontraction (class in sympy.tensor.array.expressions)": [[249, "sympy.tensor.array.expressions.ArrayContraction", false]], "arraydiagonal (class in sympy.tensor.array.expressions)": [[249, "sympy.tensor.array.expressions.ArrayDiagonal", false]], "arraytensorproduct (class in sympy.tensor.array.expressions)": [[249, "sympy.tensor.array.expressions.ArrayTensorProduct", false]], "arrowstringdescription (class in sympy.categories.diagram_drawing)": [[49, "sympy.categories.diagram_drawing.ArrowStringDescription", false]], "as_algebraicfield() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianRationalField.as_AlgebraicField", false]], "as_base_exp() (sympy.core.function.function method)": [[69, "sympy.core.function.Function.as_base_exp", false]], "as_base_exp() (sympy.core.power.pow method)": [[69, "sympy.core.power.Pow.as_base_exp", false]], "as_base_exp() (sympy.functions.elementary.exponential.log method)": [[75, "sympy.functions.elementary.exponential.log.as_base_exp", false]], "as_coeff_add() (sympy.core.add.add method)": [[69, "sympy.core.add.Add.as_coeff_Add", false], [69, "sympy.core.add.Add.as_coeff_add", false]], "as_coeff_add() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.as_coeff_Add", false], [69, "sympy.core.expr.Expr.as_coeff_add", false]], "as_coeff_add() (sympy.core.numbers.number method)": [[69, "sympy.core.numbers.Number.as_coeff_Add", false]], "as_coeff_add() (sympy.core.numbers.rational method)": [[69, "sympy.core.numbers.Rational.as_coeff_Add", false]], "as_coeff_exponent() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.as_coeff_exponent", false]], "as_coeff_mul() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.as_coeff_Mul", false], [69, "sympy.core.expr.Expr.as_coeff_mul", false]], "as_coeff_mul() (sympy.core.mul.mul method)": [[69, "sympy.core.mul.Mul.as_coeff_Mul", false]], "as_coeff_mul() (sympy.core.numbers.number method)": [[69, "sympy.core.numbers.Number.as_coeff_Mul", false]], "as_coeff_mul() (sympy.core.numbers.rational method)": [[69, "sympy.core.numbers.Rational.as_coeff_Mul", false]], "as_coeff_mul() (sympy.matrices.expressions.matrixexpr method)": [[101, "sympy.matrices.expressions.MatrixExpr.as_coeff_Mul", false]], "as_coefficient() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.as_coefficient", false]], "as_coefficients_dict() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.as_coefficients_dict", false]], "as_content_primitive() (sympy.core.add.add method)": [[69, "sympy.core.add.Add.as_content_primitive", false]], "as_content_primitive() (sympy.core.basic.basic method)": [[69, "sympy.core.basic.Basic.as_content_primitive", false]], "as_content_primitive() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.as_content_primitive", false]], "as_content_primitive() (sympy.core.mul.mul method)": [[69, "sympy.core.mul.Mul.as_content_primitive", false]], "as_content_primitive() (sympy.core.numbers.rational method)": [[69, "sympy.core.numbers.Rational.as_content_primitive", false]], "as_content_primitive() (sympy.core.power.pow method)": [[69, "sympy.core.power.Pow.as_content_primitive", false]], "as_declaration() (sympy.codegen.ast.variable method)": [[50, "sympy.codegen.ast.Variable.as_Declaration", false]], "as_dict() (sympy.combinatorics.partitions.integerpartition method)": [[58, "sympy.combinatorics.partitions.IntegerPartition.as_dict", false]], "as_dict() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.as_dict", false]], "as_dummy() (sympy.core.basic.basic method)": [[69, "sympy.core.basic.Basic.as_dummy", false]], "as_explicit() (sympy.matrices.expressions.matrixexpr method)": [[101, "sympy.matrices.expressions.MatrixExpr.as_explicit", false]], "as_expr() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.as_expr", false]], "as_expr() (sympy.core.numbers.algebraicnumber method)": [[69, "sympy.core.numbers.AlgebraicNumber.as_expr", false]], "as_expr() (sympy.polys.monomials.monomial method)": [[223, "sympy.polys.monomials.Monomial.as_expr", false]], "as_expr() (sympy.polys.numberfields.modules.powerbasiselement method)": [[222, "sympy.polys.numberfields.modules.PowerBasisElement.as_expr", false]], "as_expr() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.as_expr", false]], "as_expr_set_pairs() (sympy.functions.elementary.piecewise.piecewise method)": [[75, "sympy.functions.elementary.piecewise.Piecewise.as_expr_set_pairs", false]], "as_ferrers() (sympy.combinatorics.partitions.integerpartition method)": [[58, "sympy.combinatorics.partitions.IntegerPartition.as_ferrers", false]], "as_finite_difference() (sympy.core.function.derivative method)": [[69, "sympy.core.function.Derivative.as_finite_difference", false]], "as_immutable() (sympy.matrices.dense.densematrix method)": [[100, "sympy.matrices.dense.DenseMatrix.as_immutable", false]], "as_independent() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.as_independent", false]], "as_int() (in module sympy.utilities.misc)": [[268, "sympy.utilities.misc.as_int", false]], "as_leading_term() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.as_leading_term", false]], "as_list() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.as_list", false]], "as_mutable() (sympy.matrices.dense.densematrix method)": [[100, "sympy.matrices.dense.DenseMatrix.as_mutable", false]], "as_mutable() (sympy.matrices.expressions.matrixexpr method)": [[101, "sympy.matrices.expressions.MatrixExpr.as_mutable", false]], "as_numer_denom() (sympy.core.add.add method)": [[69, "sympy.core.add.Add.as_numer_denom", false]], "as_numer_denom() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.as_numer_denom", false]], "as_ordered_factors() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.as_ordered_factors", false]], "as_ordered_factors() (sympy.core.mul.mul method)": [[69, "sympy.core.mul.Mul.as_ordered_factors", false]], "as_ordered_terms() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.as_ordered_terms", false]], "as_poly() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.as_poly", false]], "as_poly() (sympy.core.numbers.algebraicnumber method)": [[69, "sympy.core.numbers.AlgebraicNumber.as_poly", false]], "as_poly() (sympy.core.relational.equality method)": [[69, "sympy.core.relational.Equality.as_poly", false]], "as_poly() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.as_poly", false]], "as_powers_dict() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.as_powers_dict", false]], "as_real_imag() (sympy.core.add.add method)": [[69, "sympy.core.add.Add.as_real_imag", false]], "as_real_imag() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.as_real_imag", false]], "as_real_imag() (sympy.functions.elementary.complexes.im method)": [[75, "sympy.functions.elementary.complexes.im.as_real_imag", false]], "as_real_imag() (sympy.functions.elementary.complexes.re method)": [[75, "sympy.functions.elementary.complexes.re.as_real_imag", false]], "as_real_imag() (sympy.functions.elementary.exponential.exp method)": [[75, "sympy.functions.elementary.exponential.exp.as_real_imag", false]], "as_real_imag() (sympy.functions.elementary.exponential.log method)": [[75, "sympy.functions.elementary.exponential.log.as_real_imag", false]], "as_real_imag() (sympy.functions.elementary.hyperbolic.sinh method)": [[75, "sympy.functions.elementary.hyperbolic.sinh.as_real_imag", false]], "as_real_imag() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.as_real_imag", false]], "as_relational() (sympy.sets.fancysets.range method)": [[235, "sympy.sets.fancysets.Range.as_relational", false]], "as_relational() (sympy.sets.sets.complement method)": [[235, "sympy.sets.sets.Complement.as_relational", false]], "as_relational() (sympy.sets.sets.finiteset method)": [[235, "sympy.sets.sets.FiniteSet.as_relational", false]], "as_relational() (sympy.sets.sets.intersection method)": [[235, "sympy.sets.sets.Intersection.as_relational", false]], "as_relational() (sympy.sets.sets.interval method)": [[235, "sympy.sets.sets.Interval.as_relational", false]], "as_relational() (sympy.sets.sets.symmetricdifference method)": [[235, "sympy.sets.sets.SymmetricDifference.as_relational", false]], "as_relational() (sympy.sets.sets.union method)": [[235, "sympy.sets.sets.Union.as_relational", false]], "as_set() (sympy.logic.boolalg.boolean method)": [[99, "sympy.logic.boolalg.Boolean.as_set", false]], "as_set() (sympy.logic.boolalg.booleanfalse method)": [[99, "sympy.logic.boolalg.BooleanFalse.as_set", false]], "as_set() (sympy.logic.boolalg.booleantrue method)": [[99, "sympy.logic.boolalg.BooleanTrue.as_set", false]], "as_submodule() (sympy.polys.numberfields.primes.primeideal method)": [[222, "sympy.polys.numberfields.primes.PrimeIdeal.as_submodule", false]], "as_sum() (sympy.integrals.integrals.integral method)": [[96, "sympy.integrals.integrals.Integral.as_sum", false]], "as_terms() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.as_terms", false]], "as_two_terms() (sympy.core.add.add method)": [[69, "sympy.core.add.Add.as_two_terms", false]], "as_two_terms() (sympy.core.mul.mul method)": [[69, "sympy.core.mul.Mul.as_two_terms", false]], "ascents() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.ascents", false]], "asec (class in sympy.functions.elementary.trigonometric)": [[75, "sympy.functions.elementary.trigonometric.asec", false]], "asech (class in sympy.functions.elementary.hyperbolic)": [[75, "sympy.functions.elementary.hyperbolic.asech", false]], "aseries() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.aseries", false]], "asin (class in sympy.functions.elementary.trigonometric)": [[75, "sympy.functions.elementary.trigonometric.asin", false]], "asinh (class in sympy.functions.elementary.hyperbolic)": [[75, "sympy.functions.elementary.hyperbolic.asinh", false]], "ask() (in module sympy.assumptions.ask)": [[43, "sympy.assumptions.ask.ask", false]], "assemble_partfrac_list() (in module sympy.polys.partfrac)": [[223, "sympy.polys.partfrac.assemble_partfrac_list", false]], "assignment (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.Assignment", false]], "assignmentbase (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.AssignmentBase", false]], "assignmenterror": [[227, "sympy.printing.codeprinter.AssignmentError", false]], "assoc_laguerre (class in sympy.functions.special.polynomials)": [[77, "sympy.functions.special.polynomials.assoc_laguerre", false]], "assoc_legendre (class in sympy.functions.special.polynomials)": [[77, "sympy.functions.special.polynomials.assoc_legendre", false]], "assoc_recurrence_memo() (in module sympy.utilities.memoization)": [[267, "sympy.utilities.memoization.assoc_recurrence_memo", false]], "assuming() (in module sympy.assumptions.assume)": [[44, "sympy.assumptions.assume.assuming", false]], "assumptionkeys (class in sympy.assumptions.ask)": [[43, "sympy.assumptions.ask.AssumptionKeys", false]], "assumptions": [[15, "term-Assumptions", true]], "assumptions0 (sympy.core.basic.basic property)": [[69, "sympy.core.basic.Basic.assumptions0", false]], "assumptionscontext (class in sympy.assumptions.assume)": [[44, "sympy.assumptions.assume.AssumptionsContext", false]], "at_pin_joint() (sympy.physics.mechanics.actuator.torqueactuator class method)": [[130, "sympy.physics.mechanics.actuator.TorqueActuator.at_pin_joint", false]], "atan (class in sympy.functions.elementary.trigonometric)": [[75, "sympy.functions.elementary.trigonometric.atan", false]], "atan2 (class in sympy.functions.elementary.trigonometric)": [[75, "sympy.functions.elementary.trigonometric.atan2", false]], "atanh (class in sympy.functions.elementary.hyperbolic)": [[75, "sympy.functions.elementary.hyperbolic.atanh", false]], "atom": [[15, "term-Atom", true]], "atom (class in sympy.core.basic)": [[69, "sympy.core.basic.Atom", false]], "atomicexpr (class in sympy.core.expr)": [[69, "sympy.core.expr.AtomicExpr", false]], "atoms() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.atoms", false]], "atoms() (sympy.core.basic.basic method)": [[69, "sympy.core.basic.Basic.atoms", false]], "atoms() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.atoms", false]], "atoms_table (in module sympy.printing.pretty.pretty_symbology)": [[227, "sympy.printing.pretty.pretty_symbology.atoms_table", false]], "attachments (sympy.physics.mechanics.pathway.obstaclesetpathway property)": [[138, "sympy.physics.mechanics.pathway.ObstacleSetPathway.attachments", false]], "attachments (sympy.physics.mechanics.pathway.pathwaybase property)": [[138, "sympy.physics.mechanics.pathway.PathwayBase.attachments", false]], "attempted (sympy.testing.runtests.sympytestresults attribute)": [[258, "sympy.testing.runtests.SymPyTestResults.attempted", false]], "attr_params() (sympy.codegen.ast.node method)": [[50, "sympy.codegen.ast.Node.attr_params", false]], "attribute (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.Attribute", false]], "aug_assign() (in module sympy.codegen.ast)": [[50, "sympy.codegen.ast.aug_assign", false]], "augmentedassignment (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.AugmentedAssignment", false]], "auto_number() (in module sympy.parsing.sympy_parser)": [[111, "sympy.parsing.sympy_parser.auto_number", false]], "auto_symbol() (in module sympy.parsing.sympy_parser)": [[111, "sympy.parsing.sympy_parser.auto_symbol", false]], "automatic simplification": [[15, "term-Automatic-Simplification", true]], "autowrap() (in module sympy.utilities.autowrap)": [[259, "sympy.utilities.autowrap.autowrap", false]], "auxiliary_circle() (sympy.geometry.ellipse.ellipse method)": [[79, "sympy.geometry.ellipse.Ellipse.auxiliary_circle", false]], "auxiliary_eqs (sympy.physics.mechanics.kane.kanesmethod property)": [[135, "sympy.physics.mechanics.kane.KanesMethod.auxiliary_eqs", false]], "axial_force() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.axial_force", false]], "axial_stress() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.axial_stress", false]], "axis (sympy.physics.mechanics.actuator.torqueactuator property)": [[130, "sympy.physics.mechanics.actuator.TorqueActuator.axis", false]], "axis (sympy.physics.mechanics.wrapping_geometry.wrappingcylinder property)": [[141, "sympy.physics.mechanics.wrapping_geometry.WrappingCylinder.axis", false]], "axis() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.axis", false]], "axisorienter (class in sympy.vector.orienters)": [[273, "sympy.vector.orienters.AxisOrienter", false]], "az() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.AZ", false]], "b (in module sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.B", false]], "b (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[112, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.b", false]], "b (sympy.physics.optics.gaussopt.raytransfermatrix property)": [[161, "sympy.physics.optics.gaussopt.RayTransferMatrix.B", false]], "b_interval (sympy.sets.fancysets.complexregion property)": [[235, "sympy.sets.fancysets.ComplexRegion.b_interval", false]], "backward_diff() (in module sympy.physics.control.lti)": [[125, "sympy.physics.control.lti.backward_diff", false]], "banded() (in module sympy.matrices.sparsetools)": [[108, "sympy.matrices.sparsetools.banded", false]], "base (sympy.combinatorics.perm_groups.permutationgroup property)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.base", false]], "base (sympy.functions.elementary.exponential.exp property)": [[75, "sympy.functions.elementary.exponential.exp.base", false]], "base (sympy.tensor.indexed.indexed property)": [[252, "sympy.tensor.indexed.Indexed.base", false]], "base_oneform() (sympy.diffgeom.coordsystem method)": [[71, "sympy.diffgeom.CoordSystem.base_oneform", false]], "base_oneforms() (sympy.diffgeom.coordsystem method)": [[71, "sympy.diffgeom.CoordSystem.base_oneforms", false]], "base_scalar() (sympy.diffgeom.coordsystem method)": [[71, "sympy.diffgeom.CoordSystem.base_scalar", false]], "base_scalars() (sympy.diffgeom.coordsystem method)": [[71, "sympy.diffgeom.CoordSystem.base_scalars", false]], "base_solution_linear() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.base_solution_linear", false]], "base_vector() (sympy.diffgeom.coordsystem method)": [[71, "sympy.diffgeom.CoordSystem.base_vector", false]], "base_vectors() (sympy.diffgeom.coordsystem method)": [[71, "sympy.diffgeom.CoordSystem.base_vectors", false]], "basecovarderivativeop (class in sympy.diffgeom)": [[71, "sympy.diffgeom.BaseCovarDerivativeOp", false]], "basepolynomialerror (class in sympy.polys.polyerrors)": [[220, "sympy.polys.polyerrors.BasePolynomialError", false]], "basescalarfield (class in sympy.diffgeom)": [[71, "sympy.diffgeom.BaseScalarField", false]], "baseseries (class in sympy.plotting.series)": [[213, "sympy.plotting.series.BaseSeries", false]], "baseswap() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.baseswap", false]], "basevectorfield (class in sympy.diffgeom)": [[71, "sympy.diffgeom.BaseVectorField", false]], "basic": [[15, "term-Basic", true]], "basic (class in sympy.core.basic)": [[69, "sympy.core.basic.Basic", false]], "basic_orbits (sympy.combinatorics.perm_groups.permutationgroup property)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.basic_orbits", false]], "basic_root() (sympy.liealgebras.type_a.typea method)": [[98, "sympy.liealgebras.type_a.TypeA.basic_root", false]], "basic_root() (sympy.liealgebras.type_b.typeb method)": [[98, "sympy.liealgebras.type_b.TypeB.basic_root", false]], "basic_root() (sympy.liealgebras.type_c.typec method)": [[98, "sympy.liealgebras.type_c.TypeC.basic_root", false]], "basic_root() (sympy.liealgebras.type_d.typed method)": [[98, "sympy.liealgebras.type_d.TypeD.basic_root", false]], "basic_root() (sympy.liealgebras.type_e.typee method)": [[98, "sympy.liealgebras.type_e.TypeE.basic_root", false]], "basic_root() (sympy.liealgebras.type_f.typef method)": [[98, "sympy.liealgebras.type_f.TypeF.basic_root", false]], "basic_stabilizers (sympy.combinatorics.perm_groups.permutationgroup property)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.basic_stabilizers", false]], "basic_transversals (sympy.combinatorics.perm_groups.permutationgroup property)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.basic_transversals", false]], "basis() (sympy.liealgebras.type_a.typea method)": [[98, "sympy.liealgebras.type_a.TypeA.basis", false]], "basis() (sympy.liealgebras.type_b.typeb method)": [[98, "sympy.liealgebras.type_b.TypeB.basis", false]], "basis() (sympy.liealgebras.type_c.typec method)": [[98, "sympy.liealgebras.type_c.TypeC.basis", false]], "basis() (sympy.liealgebras.type_d.typed method)": [[98, "sympy.liealgebras.type_d.TypeD.basis", false]], "basis() (sympy.liealgebras.type_e.typee method)": [[98, "sympy.liealgebras.type_e.TypeE.basis", false]], "basis() (sympy.liealgebras.type_f.typef method)": [[98, "sympy.liealgebras.type_f.TypeF.basis", false]], "basis() (sympy.liealgebras.type_g.typeg method)": [[98, "sympy.liealgebras.type_g.TypeG.basis", false]], "basis() (sympy.polys.agca.modules.freemodule method)": [[214, "sympy.polys.agca.modules.FreeModule.basis", false]], "basis_element_pullbacks() (sympy.polys.numberfields.modules.submodule method)": [[222, "sympy.polys.numberfields.modules.Submodule.basis_element_pullbacks", false]], "basis_elements() (sympy.polys.numberfields.modules.module method)": [[222, "sympy.polys.numberfields.modules.Module.basis_elements", false]], "bbra (in module sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.BBra", false]], "bd (in module sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.Bd", false]], "beam (class in sympy.physics.continuum_mechanics.beam)": [[117, "sympy.physics.continuum_mechanics.beam.Beam", false]], "beam3d (class in sympy.physics.continuum_mechanics.beam)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D", false]], "beamparameter (class in sympy.physics.optics.gaussopt)": [[161, "sympy.physics.optics.gaussopt.BeamParameter", false]], "bell (class in sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.bell", false]], "below() (sympy.printing.pretty.stringpict.stringpict method)": [[227, "sympy.printing.pretty.stringpict.stringPict.below", false]], "bending_moment() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.bending_moment", false]], "bending_moment() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.bending_moment", false]], "benini() (in module sympy.stats)": [[247, "sympy.stats.Benini", false]], "berkowitz_det() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.berkowitz_det", false]], "berkowitz_eigenvals() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.berkowitz_eigenvals", false]], "berkowitz_minors() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.berkowitz_minors", false]], "bernoulli (class in sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.bernoulli", false]], "bernoulli (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.Bernoulli", false]], "bernoulli() (in module sympy.stats)": [[247, "sympy.stats.Bernoulli", false]], "bernoulli_c_poly() (in module sympy.polys.appellseqs)": [[223, "sympy.polys.appellseqs.bernoulli_c_poly", false]], "bernoulli_poly() (in module sympy.polys.appellseqs)": [[223, "sympy.polys.appellseqs.bernoulli_poly", false]], "bernoulliprocess (class in sympy.stats)": [[247, "sympy.stats.BernoulliProcess", false]], "besselbase (class in sympy.functions.special.bessel)": [[77, "sympy.functions.special.bessel.BesselBase", false]], "besseli (class in sympy.functions.special.bessel)": [[77, "sympy.functions.special.bessel.besseli", false]], "besselj (class in sympy.functions.special.bessel)": [[77, "sympy.functions.special.bessel.besselj", false]], "besselk (class in sympy.functions.special.bessel)": [[77, "sympy.functions.special.bessel.besselk", false]], "besselsimp() (in module sympy.simplify.simplify)": [[239, "sympy.simplify.simplify.besselsimp", false]], "bessely (class in sympy.functions.special.bessel)": [[77, "sympy.functions.special.bessel.bessely", false]], "beta (class in sympy.functions.special.beta_functions)": [[77, "sympy.functions.special.beta_functions.beta", false]], "beta (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.beta", false]], "beta() (in module sympy.stats)": [[247, "sympy.stats.Beta", false]], "betabinomial() (in module sympy.stats)": [[247, "sympy.stats.BetaBinomial", false]], "betanoncentral() (in module sympy.stats)": [[247, "sympy.stats.BetaNoncentral", false]], "betaprime() (in module sympy.stats)": [[247, "sympy.stats.BetaPrime", false]], "bidiagonal_decomposition() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.bidiagonal_decomposition", false]], "bidiagonalize() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.bidiagonalize", false]], "bifid5_square() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.bifid5_square", false]], "bifid6_square() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.bifid6_square", false]], "bilinear() (in module sympy.physics.control.lti)": [[125, "sympy.physics.control.lti.bilinear", false]], "bin_to_gray() (sympy.combinatorics.graycode method)": [[53, "sympy.combinatorics.graycode.bin_to_gray", false]], "binary_function() (in module sympy.utilities.autowrap)": [[259, "sympy.utilities.autowrap.binary_function", false]], "binary_partitions() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.binary_partitions", false]], "binaryquadratic (class in sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.BinaryQuadratic", false]], "bind_c() (in module sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.bind_C", false]], "binomial (class in sympy.functions.combinatorial.factorials)": [[74, "sympy.functions.combinatorial.factorials.binomial", false]], "binomial() (in module sympy.stats)": [[247, "sympy.stats.Binomial", false]], "binomial_coefficients() (in module sympy.ntheory.multinomial)": [[109, "sympy.ntheory.multinomial.binomial_coefficients", false]], "binomial_coefficients_list() (in module sympy.ntheory.multinomial)": [[109, "sympy.ntheory.multinomial.binomial_coefficients_list", false]], "binomial_mod() (in module sympy.ntheory.residue_ntheory)": [[109, "sympy.ntheory.residue_ntheory.binomial_mod", false]], "bisectors() (sympy.geometry.line.linearentity method)": [[82, "sympy.geometry.line.LinearEntity.bisectors", false]], "bisectors() (sympy.geometry.polygon.polygon method)": [[85, "sympy.geometry.polygon.Polygon.bisectors", false]], "bisectors() (sympy.geometry.polygon.triangle method)": [[85, "sympy.geometry.polygon.Triangle.bisectors", false]], "bitlist_from_subset() (sympy.combinatorics.subsets.subset class method)": [[64, "sympy.combinatorics.subsets.Subset.bitlist_from_subset", false]], "bket (in module sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.BKet", false]], "block_collapse() (in module sympy.matrices.expressions.blockmatrix)": [[101, "sympy.matrices.expressions.blockmatrix.block_collapse", false]], "blockdiagmatrix (class in sympy.matrices.expressions.blockmatrix)": [[101, "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix", false]], "blockmatrix (class in sympy.matrices.expressions.blockmatrix)": [[101, "sympy.matrices.expressions.blockmatrix.BlockMatrix", false]], "bm (sympy.functions.special.hyper.meijerg property)": [[77, "sympy.functions.special.hyper.meijerg.bm", false]], "bode_magnitude_numerical_data() (sympy.physics.control.control_plots method)": [[123, "sympy.physics.control.control_plots.bode_magnitude_numerical_data", false]], "bode_magnitude_plot() (sympy.physics.control.control_plots method)": [[123, "sympy.physics.control.control_plots.bode_magnitude_plot", false]], "bode_phase_numerical_data() (sympy.physics.control.control_plots method)": [[123, "sympy.physics.control.control_plots.bode_phase_numerical_data", false]], "bode_phase_plot() (sympy.physics.control.control_plots method)": [[123, "sympy.physics.control.control_plots.bode_phase_plot", false]], "bode_plot() (sympy.physics.control.control_plots method)": [[123, "sympy.physics.control.control_plots.bode_plot", false]], "bodies (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[131, "sympy.physics.mechanics.jointsmethod.JointsMethod.bodies", false]], "bodies (sympy.physics.mechanics.system.symbolicsystem property)": [[140, "sympy.physics.mechanics.system.SymbolicSystem.bodies", false]], "bodies (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.bodies", false]], "body (class in sympy.physics.mechanics.body)": [[131, "sympy.physics.mechanics.body.Body", false]], "bodyorienter (class in sympy.vector.orienters)": [[273, "sympy.vector.orienters.BodyOrienter", false]], "bool_map() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.bool_map", false]], "bool_maxterm() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.bool_maxterm", false]], "bool_minterm() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.bool_minterm", false]], "bool_monomial() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.bool_monomial", false]], "boolean": [[15, "term-Boolean", true]], "boolean (class in sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.Boolean", false]], "booleanfalse (class in sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.BooleanFalse", false]], "booleankind (in module sympy.core.kind)": [[69, "sympy.core.kind.BooleanKind", false]], "booleantrue (class in sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.BooleanTrue", false]], "bosonicbasis (class in sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.BosonicBasis", false]], "bother (sympy.functions.special.hyper.meijerg property)": [[77, "sympy.functions.special.hyper.meijerg.bother", false]], "bottom_up() (in module sympy.core.traversal)": [[69, "sympy.core.traversal.bottom_up", false]], "bound symbols": [[15, "term-Bound-symbols", true]], "bound_symbols (sympy.concrete.expr_with_limits.exprwithlimits property)": [[96, "sympy.concrete.expr_with_limits.ExprWithLimits.bound_symbols", false]], "bound_symbols (sympy.core.function.lambda property)": [[69, "sympy.core.function.Lambda.bound_symbols", false]], "bound_symbols (sympy.core.function.subs property)": [[69, "sympy.core.function.Subs.bound_symbols", false]], "boundary (sympy.sets.sets.set property)": [[235, "sympy.sets.sets.Set.boundary", false]], "boundary_conditions (sympy.physics.continuum_mechanics.beam.beam property)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.boundary_conditions", false]], "boundary_conditions (sympy.physics.continuum_mechanics.beam.beam3d property)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.boundary_conditions", false]], "boundedpareto() (in module sympy.stats)": [[247, "sympy.stats.BoundedPareto", false]], "bounds (sympy.geometry.ellipse.ellipse property)": [[79, "sympy.geometry.ellipse.Ellipse.bounds", false]], "bounds (sympy.geometry.entity.geometryentity property)": [[80, "sympy.geometry.entity.GeometryEntity.bounds", false]], "bounds (sympy.geometry.line.linearentity2d property)": [[82, "sympy.geometry.line.LinearEntity2D.bounds", false]], "bounds (sympy.geometry.point.point2d property)": [[84, "sympy.geometry.point.Point2D.bounds", false]], "bounds (sympy.geometry.polygon.polygon property)": [[85, "sympy.geometry.polygon.Polygon.bounds", false]], "bq (sympy.functions.special.hyper.hyper property)": [[77, "sympy.functions.special.hyper.hyper.bq", false]], "bq (sympy.functions.special.hyper.meijerg property)": [[77, "sympy.functions.special.hyper.meijerg.bq", false]], "bra (class in sympy.physics.quantum.state)": [[190, "sympy.physics.quantum.state.Bra", false]], "bra (sympy.physics.quantum.operator.outerproduct property)": [[181, "sympy.physics.quantum.operator.OuterProduct.bra", false]], "bra (sympy.physics.secondquant.innerproduct property)": [[192, "sympy.physics.secondquant.InnerProduct.bra", false]], "brabase (class in sympy.physics.quantum.state)": [[190, "sympy.physics.quantum.state.BraBase", false]], "bracelets() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.bracelets", false]], "breaktoken (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.BreakToken", false]], "brewster_angle() (in module sympy.physics.optics.utils)": [[165, "sympy.physics.optics.utils.brewster_angle", false]], "bsgs_direct_product() (in module sympy.combinatorics.tensor_can)": [[65, "sympy.combinatorics.tensor_can.bsgs_direct_product", false]], "bspline_basis() (in module sympy.functions.special.bsplines)": [[77, "sympy.functions.special.bsplines.bspline_basis", false]], "bspline_basis_set() (in module sympy.functions.special.bsplines)": [[77, "sympy.functions.special.bsplines.bspline_basis_set", false]], "build_expression_tree() (in module sympy.series.gruntz)": [[234, "sympy.series.gruntz.build_expression_tree", false]], "build_options() (in module sympy.polys.polyoptions)": [[220, "sympy.polys.polyoptions.build_options", false]], "c (sympy.matrices.matrixbase.matrixbase property)": [[105, "sympy.matrices.matrixbase.MatrixBase.C", false]], "c (sympy.physics.optics.gaussopt.raytransfermatrix property)": [[161, "sympy.physics.optics.gaussopt.RayTransferMatrix.C", false]], "c89codeprinter (class in sympy.printing.c)": [[227, "sympy.printing.c.C89CodePrinter", false]], "c99codeprinter (class in sympy.printing.c)": [[227, "sympy.printing.c.C99CodePrinter", false]], "cable (class in sympy.physics.continuum_mechanics.cable)": [[119, "sympy.physics.continuum_mechanics.cable.Cable", false]], "calculate_series() (in module sympy.series.gruntz)": [[234, "sympy.series.gruntz.calculate_series", false]], "can_transf_matrix (sympy.physics.units.dimensions.dimensionsystem property)": [[194, "sympy.physics.units.dimensions.DimensionSystem.can_transf_matrix", false]], "canberra_distance() (sympy.geometry.point.point method)": [[84, "sympy.geometry.point.Point.canberra_distance", false]], "cancel() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.cancel", false]], "cancel() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.cancel", false]], "cancel() (sympy.polys.polyclasses.dmf method)": [[218, "sympy.polys.polyclasses.DMF.cancel", false]], "cancel() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.cancel", false]], "cancel() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.cancel", false]], "cancel() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.cancel", false]], "cancel_denom() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.cancel_denom", false]], "cancel_denom_elementwise() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.cancel_denom_elementwise", false]], "canon_bp() (in module sympy.tensor.tensor)": [[253, "sympy.tensor.tensor.canon_bp", false]], "canon_bp() (sympy.tensor.tensor.tensadd method)": [[253, "sympy.tensor.tensor.TensAdd.canon_bp", false]], "canon_bp() (sympy.tensor.tensor.tensmul method)": [[253, "sympy.tensor.tensor.TensMul.canon_bp", false]], "canonical (sympy.core.relational.relational property)": [[69, "sympy.core.relational.Relational.canonical", false]], "canonical form": [[15, "term-Canonical-Form", true]], "canonical_form() (sympy.stats.discretemarkovchain method)": [[247, "sympy.stats.DiscreteMarkovChain.canonical_form", false]], "canonical_odes() (in module sympy.solvers.ode.systems)": [[243, "sympy.solvers.ode.systems.canonical_odes", false]], "canonical_variables (sympy.core.basic.basic property)": [[69, "sympy.core.basic.Basic.canonical_variables", false]], "canonicalize": [[15, "term-Canonicalize", true]], "canonicalize() (in module sympy.combinatorics.tensor_can)": [[65, "sympy.combinatorics.tensor_can.canonicalize", false]], "capture() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.capture", false]], "cardinality (sympy.combinatorics.permutations.permutation property)": [[61, "sympy.combinatorics.permutations.Permutation.cardinality", false]], "cardinality (sympy.combinatorics.subsets.subset property)": [[64, "sympy.combinatorics.subsets.Subset.cardinality", false]], "cartan_matrix() (sympy.liealgebras.root_system.rootsystem method)": [[98, "sympy.liealgebras.root_system.RootSystem.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_a.typea method)": [[98, "sympy.liealgebras.type_a.TypeA.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_b.typeb method)": [[98, "sympy.liealgebras.type_b.TypeB.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_c.typec method)": [[98, "sympy.liealgebras.type_c.TypeC.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_d.typed method)": [[98, "sympy.liealgebras.type_d.TypeD.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_e.typee method)": [[98, "sympy.liealgebras.type_e.TypeE.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_f.typef method)": [[98, "sympy.liealgebras.type_f.TypeF.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_g.typeg method)": [[98, "sympy.liealgebras.type_g.TypeG.cartan_matrix", false]], "cartanmatrix() (in module sympy.liealgebras.cartan_matrix)": [[98, "sympy.liealgebras.cartan_matrix.CartanMatrix", false]], "cartantype_generator (class in sympy.liealgebras.cartan_type)": [[98, "sympy.liealgebras.cartan_type.CartanType_generator", false]], "cartesiancomplexregion (class in sympy.sets.fancysets)": [[235, "sympy.sets.fancysets.CartesianComplexRegion", false]], "casoratian() (in module sympy.matrices.dense)": [[105, "sympy.matrices.dense.casoratian", false]], "cast_check() (sympy.codegen.ast.type method)": [[50, "sympy.codegen.ast.Type.cast_check", false]], "cast_nocheck (sympy.codegen.ast.floatbasetype attribute)": [[50, "sympy.codegen.ast.FloatBaseType.cast_nocheck", false]], "cast_nocheck() (sympy.codegen.ast.floattype method)": [[50, "sympy.codegen.ast.FloatType.cast_nocheck", false]], "catalan (class in sympy.core.numbers)": [[69, "sympy.core.numbers.Catalan", false]], "catalan (class in sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.catalan", false]], "category (class in sympy.categories)": [[49, "sympy.categories.Category", false]], "cauchy() (in module sympy.stats)": [[247, "sympy.stats.Cauchy", false]], "cauchy_lower_bound() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.cauchy_lower_bound", false]], "cauchy_upper_bound() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.cauchy_upper_bound", false]], "cbrt (class in sympy.codegen.cfunctions)": [[50, "sympy.codegen.cfunctions.Cbrt", false]], "cbrt() (in module sympy.functions.elementary.miscellaneous)": [[75, "sympy.functions.elementary.miscellaneous.cbrt", false]], "ccode() (in module sympy.printing.c)": [[227, "sympy.printing.c.ccode", false]], "ccodegen (class in sympy.utilities.codegen)": [[260, "sympy.utilities.codegen.CCodeGen", false]], "ceiling (class in sympy.functions.elementary.integers)": [[75, "sympy.functions.elementary.integers.ceiling", false]], "center (sympy.geometry.ellipse.ellipse property)": [[79, "sympy.geometry.ellipse.Ellipse.center", false]], "center (sympy.geometry.polygon.regularpolygon property)": [[85, "sympy.geometry.polygon.RegularPolygon.center", false]], "center() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.center", false]], "center_of_mass() (in module sympy.physics.mechanics.functions)": [[137, "sympy.physics.mechanics.functions.center_of_mass", false]], "central_inertia (sympy.physics.mechanics.body.body property)": [[131, "sympy.physics.mechanics.body.Body.central_inertia", false]], "central_inertia (sympy.physics.mechanics.rigidbody.rigidbody property)": [[137, "sympy.physics.mechanics.rigidbody.RigidBody.central_inertia", false]], "centralizer() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.centralizer", false]], "centralmoment (class in sympy.stats)": [[247, "sympy.stats.CentralMoment", false]], "centroid (sympy.geometry.polygon.polygon property)": [[85, "sympy.geometry.polygon.Polygon.centroid", false]], "centroid (sympy.geometry.polygon.regularpolygon property)": [[85, "sympy.geometry.polygon.RegularPolygon.centroid", false]], "centroid() (in module sympy.geometry.util)": [[86, "sympy.geometry.util.centroid", false]], "cg (class in sympy.physics.quantum.cg)": [[171, "sympy.physics.quantum.cg.CG", false]], "cg_simp() (in module sympy.physics.quantum.cg)": [[171, "sympy.physics.quantum.cg.cg_simp", false]], "cgate (class in sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.CGate", false]], "cgates (class in sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.CGateS", false]], "change_index() (sympy.concrete.expr_with_intlimits.exprwithintlimits method)": [[68, "sympy.concrete.expr_with_intlimits.ExprWithIntLimits.change_index", false]], "change_member_label() (sympy.physics.continuum_mechanics.truss.truss method)": [[121, "sympy.physics.continuum_mechanics.truss.Truss.change_member_label", false]], "change_node_label() (sympy.physics.continuum_mechanics.truss.truss method)": [[121, "sympy.physics.continuum_mechanics.truss.Truss.change_node_label", false]], "change_support() (sympy.physics.continuum_mechanics.cable.cable method)": [[119, "sympy.physics.continuum_mechanics.cable.Cable.change_support", false]], "characteristic() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.characteristic", false]], "characteristic() (sympy.polys.domains.finitefield method)": [[218, "sympy.polys.domains.FiniteField.characteristic", false]], "characteristiccurvecollection (class in sympy.physics.biomechanics.curve)": [[113, "sympy.physics.biomechanics.curve.CharacteristicCurveCollection", false]], "characteristiccurvefunction (class in sympy.physics.biomechanics.curve)": [[113, "sympy.physics.biomechanics.curve.CharacteristicCurveFunction", false]], "charpoly() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.charpoly", false]], "charpoly() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.charpoly", false]], "charpoly() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.charpoly", false]], "charpoly() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.charpoly", false]], "charpoly() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.charpoly", false]], "charpoly_base() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.charpoly_base", false]], "charpoly_berk() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.charpoly_berk", false]], "charpoly_factor_blocks() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.charpoly_factor_blocks", false]], "charpoly_factor_list() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.charpoly_factor_list", false]], "chebyshevt (class in sympy.functions.special.polynomials)": [[77, "sympy.functions.special.polynomials.chebyshevt", false]], "chebyshevt_poly() (in module sympy.polys.orthopolys)": [[223, "sympy.polys.orthopolys.chebyshevt_poly", false]], "chebyshevt_root (class in sympy.functions.special.polynomials)": [[77, "sympy.functions.special.polynomials.chebyshevt_root", false]], "chebyshevu (class in sympy.functions.special.polynomials)": [[77, "sympy.functions.special.polynomials.chebyshevu", false]], "chebyshevu_poly() (in module sympy.polys.orthopolys)": [[223, "sympy.polys.orthopolys.chebyshevu_poly", false]], "chebyshevu_root (class in sympy.functions.special.polynomials)": [[77, "sympy.functions.special.polynomials.chebyshevu_root", false]], "check_and_join() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.check_and_join", false]], "check_output() (sympy.testing.runtests.sympyoutputchecker method)": [[258, "sympy.testing.runtests.SymPyOutputChecker.check_output", false]], "checkinfsol() (in module sympy.solvers.ode)": [[243, "sympy.solvers.ode.checkinfsol", false]], "checkodesol() (in module sympy.solvers.ode)": [[243, "sympy.solvers.ode.checkodesol", false]], "checkpdesol() (in module sympy.solvers.pde)": [[244, "sympy.solvers.pde.checkpdesol", false]], "checksol() (in module sympy.solvers.solvers)": [[245, "sympy.solvers.solvers.checksol", false]], "chi (class in sympy.functions.special.error_functions)": [[77, "sympy.functions.special.error_functions.Chi", false]], "chi() (in module sympy.stats)": [[247, "sympy.stats.Chi", false]], "child (sympy.physics.mechanics.joint.joint property)": [[134, "sympy.physics.mechanics.joint.Joint.child", false]], "child_axis (sympy.physics.mechanics.joint.joint property)": [[134, "sympy.physics.mechanics.joint.Joint.child_axis", false]], "child_point (sympy.physics.mechanics.joint.joint property)": [[134, "sympy.physics.mechanics.joint.Joint.child_point", false]], "chinoncentral() (in module sympy.stats)": [[247, "sympy.stats.ChiNoncentral", false]], "chisquared() (in module sympy.stats)": [[247, "sympy.stats.ChiSquared", false]], "cholesky() (sympy.matrices.dense.densematrix method)": [[100, "sympy.matrices.dense.DenseMatrix.cholesky", false]], "cholesky() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.cholesky", false]], "cholesky_solve() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.cholesky_solve", false]], "choose_domain() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.choose_domain", false]], "ci (class in sympy.functions.special.error_functions)": [[77, "sympy.functions.special.error_functions.Ci", false]], "circle (class in sympy.geometry.ellipse)": [[79, "sympy.geometry.ellipse.Circle", false]], "circuit_plot() (in module sympy.physics.quantum.circuitplot)": [[172, "sympy.physics.quantum.circuitplot.circuit_plot", false]], "circuitplot (class in sympy.physics.quantum.circuitplot)": [[172, "sympy.physics.quantum.circuitplot.CircuitPlot", false]], "circumcenter (sympy.geometry.polygon.regularpolygon property)": [[85, "sympy.geometry.polygon.RegularPolygon.circumcenter", false]], "circumcenter (sympy.geometry.polygon.triangle property)": [[85, "sympy.geometry.polygon.Triangle.circumcenter", false]], "circumcircle (sympy.geometry.polygon.regularpolygon property)": [[85, "sympy.geometry.polygon.RegularPolygon.circumcircle", false]], "circumcircle (sympy.geometry.polygon.triangle property)": [[85, "sympy.geometry.polygon.Triangle.circumcircle", false]], "circumference (sympy.geometry.ellipse.circle property)": [[79, "sympy.geometry.ellipse.Circle.circumference", false]], "circumference (sympy.geometry.ellipse.ellipse property)": [[79, "sympy.geometry.ellipse.Ellipse.circumference", false]], "circumradius (sympy.geometry.polygon.regularpolygon property)": [[85, "sympy.geometry.polygon.RegularPolygon.circumradius", false]], "circumradius (sympy.geometry.polygon.triangle property)": [[85, "sympy.geometry.polygon.Triangle.circumradius", false]], "class_key() (sympy.core.basic.basic class method)": [[69, "sympy.core.basic.Basic.class_key", false]], "classify_diop() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.classify_diop", false]], "classify_ode() (in module sympy.solvers.ode)": [[243, "sympy.solvers.ode.classify_ode", false]], "classify_pde() (in module sympy.solvers.pde)": [[244, "sympy.solvers.pde.classify_pde", false]], "clear() (sympy.tensor.tensor._tensormanager method)": [[253, "sympy.tensor.tensor._TensorManager.clear", false]], "clear_cache() (sympy.polys.rootoftools.complexrootof class method)": [[223, "sympy.polys.rootoftools.ComplexRootOf.clear_cache", false]], "clear_denoms() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.clear_denoms", false]], "clear_denoms() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.clear_denoms", false]], "clear_denoms() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.clear_denoms", false]], "clear_denoms_rowwise() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.clear_denoms_rowwise", false]], "clear_loads() (sympy.physics.mechanics.body.body method)": [[131, "sympy.physics.mechanics.body.Body.clear_loads", false]], "clebsch_gordan() (in module sympy.physics.wigner)": [[212, "sympy.physics.wigner.clebsch_gordan", false]], "clone() (sympy.polys.polyoptions.options method)": [[220, "sympy.polys.polyoptions.Options.clone", false]], "closing_angle() (sympy.geometry.line.ray2d method)": [[82, "sympy.geometry.line.Ray2D.closing_angle", false]], "closure (sympy.sets.sets.set property)": [[235, "sympy.sets.sets.Set.closure", false]], "cmod (class in sympy.physics.quantum.shor)": [[188, "sympy.physics.quantum.shor.CMod", false]], "cmoment() (in module sympy.stats)": [[247, "sympy.stats.cmoment", false]], "cmplx (class in sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.cmplx", false]], "cnot (in module sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.CNOT", false]], "cnotgate (class in sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.CNotGate", false]], "code generation": [[15, "term-Code-Generation", true]], "codeblock (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.CodeBlock", false]], "codegen (class in sympy.utilities.codegen)": [[260, "sympy.utilities.codegen.CodeGen", false]], "codegen() (in module sympy.utilities.codegen)": [[260, "sympy.utilities.codegen.codegen", false]], "codeprinter (class in sympy.printing.codeprinter)": [[227, "sympy.printing.codeprinter.CodePrinter", false]], "codewrapper (class in sympy.utilities.autowrap)": [[259, "sympy.utilities.autowrap.CodeWrapper", false]], "codomain (sympy.categories.compositemorphism property)": [[49, "sympy.categories.CompositeMorphism.codomain", false]], "codomain (sympy.categories.morphism property)": [[49, "sympy.categories.Morphism.codomain", false]], "coeff() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.coeff", false]], "coeff() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.coeff", false]], "coeff() (sympy.series.sequences.seqbase method)": [[233, "sympy.series.sequences.SeqBase.coeff", false]], "coeff_bell() (sympy.series.formal.formalpowerseries method)": [[229, "sympy.series.formal.FormalPowerSeries.coeff_bell", false]], "coeff_monomial() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.coeff_monomial", false]], "coeff_mul() (sympy.series.sequences.emptysequence method)": [[233, "sympy.series.sequences.EmptySequence.coeff_mul", false]], "coeff_mul() (sympy.series.sequences.seqbase method)": [[233, "sympy.series.sequences.SeqBase.coeff_mul", false]], "coeff_mul() (sympy.series.sequences.seqformula method)": [[233, "sympy.series.sequences.SeqFormula.coeff_mul", false]], "coeff_mul() (sympy.series.sequences.seqper method)": [[233, "sympy.series.sequences.SeqPer.coeff_mul", false]], "coeff_search() (in module sympy.polys.numberfields.utilities)": [[222, "sympy.polys.numberfields.utilities.coeff_search", false]], "coeff_wrt() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.coeff_wrt", false]], "coefficients (sympy.geometry.line.line2d property)": [[82, "sympy.geometry.line.Line2D.coefficients", false]], "coeffs() (sympy.core.numbers.algebraicnumber method)": [[69, "sympy.core.numbers.AlgebraicNumber.coeffs", false]], "coeffs() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.coeffs", false]], "coeffs() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.coeffs", false]], "coeffs() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.coeffs", false]], "coercionfailed (class in sympy.polys.polyerrors)": [[220, "sympy.polys.polyerrors.CoercionFailed", false]], "cofactor() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.cofactor", false]], "cofactor_matrix() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.cofactor_matrix", false]], "cofactors() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.cofactors", false]], "cofactors() (sympy.core.numbers.number method)": [[69, "sympy.core.numbers.Number.cofactors", false]], "cofactors() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.cofactors", false]], "cofactors() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.cofactors", false]], "cofactors() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.cofactors", false]], "coherent_state() (in module sympy.physics.qho_1d)": [[168, "sympy.physics.qho_1d.coherent_state", false]], "coin() (in module sympy.stats)": [[247, "sympy.stats.Coin", false]], "col() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.col", false]], "col_del() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.col_del", false]], "col_insert() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.col_insert", false]], "col_join() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.col_join", false]], "collect() (in module sympy.simplify.radsimp)": [[239, "sympy.simplify.radsimp.collect", false]], "collect() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.collect", false]], "collect_const() (in module sympy.simplify.radsimp)": [[239, "sympy.simplify.radsimp.collect_const", false]], "collect_sqrt() (in module sympy.simplify.radsimp)": [[239, "sympy.simplify.radsimp.collect_sqrt", false]], "column() (sympy.polys.numberfields.modules.moduleelement method)": [[222, "sympy.polys.numberfields.modules.ModuleElement.column", false]], "columnspace() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.columnspace", false]], "columnspace() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.columnspace", false]], "comb_explicit_rhs (sympy.physics.mechanics.system.symbolicsystem property)": [[140, "sympy.physics.mechanics.system.SymbolicSystem.comb_explicit_rhs", false]], "comb_implicit_mat (sympy.physics.mechanics.system.symbolicsystem property)": [[140, "sympy.physics.mechanics.system.SymbolicSystem.comb_implicit_mat", false]], "comb_implicit_rhs (sympy.physics.mechanics.system.symbolicsystem property)": [[140, "sympy.physics.mechanics.system.SymbolicSystem.comb_implicit_rhs", false]], "combsimp() (in module sympy.simplify.combsimp)": [[239, "sympy.simplify.combsimp.combsimp", false]], "combsimp() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.combsimp", false]], "comm_i2symbol() (sympy.tensor.tensor._tensormanager method)": [[253, "sympy.tensor.tensor._TensorManager.comm_i2symbol", false]], "comm_symbols2i() (sympy.tensor.tensor._tensormanager method)": [[253, "sympy.tensor.tensor._TensorManager.comm_symbols2i", false]], "commaoperator (class in sympy.codegen.cnodes)": [[50, "sympy.codegen.cnodes.CommaOperator", false]], "comment (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.Comment", false]], "common_prefix() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.common_prefix", false]], "common_suffix() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.common_suffix", false]], "communication_classes() (sympy.stats.discretemarkovchain method)": [[247, "sympy.stats.DiscreteMarkovChain.communication_classes", false]], "commutative": [[69, "term-commutative", true]], "commutative_diagrams (sympy.categories.category property)": [[49, "sympy.categories.Category.commutative_diagrams", false]], "commutativepredicate (class in sympy.assumptions.predicates.common)": [[46, "sympy.assumptions.predicates.common.CommutativePredicate", false]], "commutator (class in sympy.diffgeom)": [[71, "sympy.diffgeom.Commutator", false]], "commutator (class in sympy.physics.quantum.commutator)": [[173, "sympy.physics.quantum.commutator.Commutator", false]], "commutator (class in sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.Commutator", false]], "commutator() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.commutator", false]], "commutator() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.commutator", false]], "commutes_with() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.commutes_with", false]], "commutes_with() (sympy.tensor.tensor.tensorhead method)": [[253, "sympy.tensor.tensor.TensorHead.commutes_with", false]], "companion() (sympy.matrices.matrixbase.matrixbase class method)": [[105, "sympy.matrices.matrixbase.MatrixBase.companion", false]], "companionmatrix (class in sympy.matrices.expressions)": [[101, "sympy.matrices.expressions.CompanionMatrix", false]], "compare() (in module sympy.series.gruntz)": [[234, "sympy.series.gruntz.compare", false]], "compare() (sympy.core.basic.basic method)": [[69, "sympy.core.basic.Basic.compare", false]], "complement (class in sympy.sets.sets)": [[235, "sympy.sets.sets.Complement", false]], "complement() (sympy.sets.sets.set method)": [[235, "sympy.sets.sets.Set.complement", false]], "complex": [[69, "term-complex", true]], "complexelement (class in sympy.polys.domains.mpelements)": [[218, "sympy.polys.domains.mpelements.ComplexElement", false]], "complexelementspredicate (class in sympy.assumptions.predicates.matrices)": [[46, "sympy.assumptions.predicates.matrices.ComplexElementsPredicate", false]], "complexes (class in sympy.sets.fancysets)": [[235, "sympy.sets.fancysets.Complexes", false]], "complexfield (class in sympy.polys.domains)": [[218, "sympy.polys.domains.ComplexField", false]], "complexinfinity (class in sympy.core.numbers)": [[69, "sympy.core.numbers.ComplexInfinity", false]], "complexpredicate (class in sympy.assumptions.predicates.sets)": [[46, "sympy.assumptions.predicates.sets.ComplexPredicate", false]], "complexregion (class in sympy.sets.fancysets)": [[235, "sympy.sets.fancysets.ComplexRegion", false]], "complexrootof (class in sympy.polys.rootoftools)": [[223, "sympy.polys.rootoftools.ComplexRootOf", false]], "complexspace (class in sympy.physics.quantum.hilbert)": [[178, "sympy.physics.quantum.hilbert.ComplexSpace", false]], "complextype (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.ComplexType", false]], "components (sympy.categories.compositemorphism property)": [[49, "sympy.categories.CompositeMorphism.components", false]], "components (sympy.vector.dyadic.dyadic property)": [[271, "sympy.vector.dyadic.Dyadic.components", false]], "components (sympy.vector.vector.vector property)": [[271, "sympy.vector.vector.Vector.components", false]], "components() (in module sympy.integrals.heurisch)": [[96, "sympy.integrals.heurisch.components", false]], "compose() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.compose", false]], "compose() (sympy.categories.morphism method)": [[49, "sympy.categories.Morphism.compose", false]], "compose() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.compose", false]], "compose() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.compose", false]], "compose() (sympy.polys.rings.polyring method)": [[218, "sympy.polys.rings.PolyRing.compose", false]], "compose() (sympy.series.formal.formalpowerseries method)": [[229, "sympy.series.formal.FormalPowerSeries.compose", false]], "composite": [[69, "term-composite", true]], "composite() (in module sympy.ntheory.generate)": [[109, "sympy.ntheory.generate.composite", false]], "compositedomain (class in sympy.polys.domains.compositedomain)": [[218, "sympy.polys.domains.compositedomain.CompositeDomain", false]], "compositemorphism (class in sympy.categories)": [[49, "sympy.categories.CompositeMorphism", false]], "compositepi() (in module sympy.ntheory.generate)": [[109, "sympy.ntheory.generate.compositepi", false]], "compositepredicate (class in sympy.assumptions.predicates.ntheory)": [[46, "sympy.assumptions.predicates.ntheory.CompositePredicate", false]], "composition() (sympy.holonomic.holonomic.holonomicfunction method)": [[91, "sympy.holonomic.holonomic.HolonomicFunction.composition", false]], "composition_series() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.composition_series", false]], "compounddistribution (class in sympy.stats.compound_rv)": [[247, "sympy.stats.compound_rv.CompoundDistribution", false]], "computationfailed (class in sympy.polys.polyerrors)": [[220, "sympy.polys.polyerrors.ComputationFailed", false]], "compute_explicit_form() (sympy.physics.mechanics.system.symbolicsystem method)": [[140, "sympy.physics.mechanics.system.SymbolicSystem.compute_explicit_form", false]], "compute_fps() (in module sympy.series.formal)": [[229, "sympy.series.formal.compute_fps", false]], "compute_leading_term() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.compute_leading_term", false]], "compute_m_ybar() (in module sympy.solvers.ode.riccati)": [[243, "sympy.solvers.ode.riccati.compute_m_ybar", false]], "conclusions (sympy.categories.diagram property)": [[49, "sympy.categories.Diagram.conclusions", false]], "cond (sympy.functions.elementary.piecewise.exprcondpair property)": [[75, "sympy.functions.elementary.piecewise.ExprCondPair.cond", false]], "condition_number() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.condition_number", false]], "conditionaldomain (class in sympy.stats.rv)": [[247, "sympy.stats.rv.ConditionalDomain", false]], "conditionset (class in sympy.sets.conditionset)": [[235, "sympy.sets.conditionset.ConditionSet", false]], "conjugacy_class() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.conjugacy_class", false]], "conjugacy_classes() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.conjugacy_classes", false]], "conjugate (class in sympy.functions.elementary.complexes)": [[75, "sympy.functions.elementary.complexes.conjugate", false]], "conjugate (sympy.combinatorics.partitions.integerpartition property)": [[58, "sympy.combinatorics.partitions.IntegerPartition.conjugate", false]], "conjugate() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.conjugate", false]], "conjugate() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.conjugate", false]], "conjugate_gauss_beams() (in module sympy.physics.optics.gaussopt)": [[161, "sympy.physics.optics.gaussopt.conjugate_gauss_beams", false]], "connected_components() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.connected_components", false]], "connected_components() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.connected_components", false]], "connected_components_decomposition() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.connected_components_decomposition", false]], "conserve_mpmath_dps() (in module sympy.utilities.decorator)": [[261, "sympy.utilities.decorator.conserve_mpmath_dps", false]], "const() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.const", false]], "constant_renumber() (in module sympy.solvers.ode.ode)": [[243, "sympy.solvers.ode.ode.constant_renumber", false]], "constant_symbols() (sympy.physics.mechanics.system.symbolicsystem method)": [[140, "sympy.physics.mechanics.system.SymbolicSystem.constant_symbols", false]], "constants (sympy.physics.biomechanics.activation.activationbase property)": [[112, "sympy.physics.biomechanics.activation.ActivationBase.constants", false]], "constants (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[112, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.constants", false]], "constants (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[112, "sympy.physics.biomechanics.activation.ZerothOrderActivation.constants", false]], "constants (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.constants", false]], "constantsimp() (in module sympy.solvers.ode)": [[243, "sympy.solvers.ode.constantsimp", false]], "construct_c() (in module sympy.solvers.ode.riccati)": [[243, "sympy.solvers.ode.riccati.construct_c", false]], "construct_d() (in module sympy.solvers.ode.riccati)": [[243, "sympy.solvers.ode.riccati.construct_d", false]], "construct_domain() (in module sympy.polys.constructor)": [[223, "sympy.polys.constructor.construct_domain", false]], "contains (class in sympy.sets.conditionset)": [[235, "sympy.sets.conditionset.Contains", false]], "contains() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.contains", false]], "contains() (sympy.geometry.line.line method)": [[82, "sympy.geometry.line.Line.contains", false]], "contains() (sympy.geometry.line.linearentity method)": [[82, "sympy.geometry.line.LinearEntity.contains", false]], "contains() (sympy.geometry.line.ray method)": [[82, "sympy.geometry.line.Ray.contains", false]], "contains() (sympy.geometry.line.segment method)": [[82, "sympy.geometry.line.Segment.contains", false]], "contains() (sympy.polys.agca.ideals.ideal method)": [[214, "sympy.polys.agca.ideals.Ideal.contains", false]], "contains() (sympy.polys.agca.modules.module method)": [[214, "sympy.polys.agca.modules.Module.contains", false]], "contains() (sympy.polys.polytools.groebnerbasis method)": [[223, "sympy.polys.polytools.GroebnerBasis.contains", false]], "contains() (sympy.series.order.order method)": [[234, "sympy.series.order.Order.contains", false]], "contains() (sympy.sets.sets.set method)": [[235, "sympy.sets.sets.Set.contains", false]], "content() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.content", false]], "content() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.content", false]], "content() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.content", false]], "content() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.content", false]], "content() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.content", false]], "continued_fraction() (in module sympy.ntheory.continued_fraction)": [[109, "sympy.ntheory.continued_fraction.continued_fraction", false]], "continued_fraction_convergents() (in module sympy.ntheory.continued_fraction)": [[109, "sympy.ntheory.continued_fraction.continued_fraction_convergents", false]], "continued_fraction_iterator() (in module sympy.ntheory.continued_fraction)": [[109, "sympy.ntheory.continued_fraction.continued_fraction_iterator", false]], "continued_fraction_periodic() (in module sympy.ntheory.continued_fraction)": [[109, "sympy.ntheory.continued_fraction.continued_fraction_periodic", false]], "continued_fraction_reduce() (in module sympy.ntheory.continued_fraction)": [[109, "sympy.ntheory.continued_fraction.continued_fraction_reduce", false]], "continuetoken (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.ContinueToken", false]], "continuous_domain() (in module sympy.calculus.util)": [[48, "sympy.calculus.util.continuous_domain", false]], "continuousdomain (class in sympy.stats.crv)": [[247, "sympy.stats.crv.ContinuousDomain", false]], "continuousmarkovchain (class in sympy.stats)": [[247, "sympy.stats.ContinuousMarkovChain", false]], "continuouspspace (class in sympy.stats.crv)": [[247, "sympy.stats.crv.ContinuousPSpace", false]], "continuousrv() (in module sympy.stats)": [[247, "sympy.stats.ContinuousRV", false]], "contract_metric() (sympy.tensor.tensor.tensadd method)": [[253, "sympy.tensor.tensor.TensAdd.contract_metric", false]], "contract_metric() (sympy.tensor.tensor.tensmul method)": [[253, "sympy.tensor.tensor.TensMul.contract_metric", false]], "contraction() (in module sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.contraction", false]], "control_line() (sympy.physics.quantum.circuitplot.circuitplot method)": [[172, "sympy.physics.quantum.circuitplot.CircuitPlot.control_line", false]], "control_point() (sympy.physics.quantum.circuitplot.circuitplot method)": [[172, "sympy.physics.quantum.circuitplot.CircuitPlot.control_point", false]], "controls (sympy.physics.quantum.gate.cgate property)": [[176, "sympy.physics.quantum.gate.CGate.controls", false]], "controls (sympy.physics.quantum.gate.cnotgate property)": [[176, "sympy.physics.quantum.gate.CNotGate.controls", false]], "convergence_statement (sympy.functions.special.hyper.hyper property)": [[77, "sympy.functions.special.hyper.hyper.convergence_statement", false]], "convert() (sympy.polys.agca.modules.freemodule method)": [[214, "sympy.polys.agca.modules.FreeModule.convert", false]], "convert() (sympy.polys.agca.modules.module method)": [[214, "sympy.polys.agca.modules.Module.convert", false]], "convert() (sympy.polys.agca.modules.quotientmodule method)": [[214, "sympy.polys.agca.modules.QuotientModule.convert", false]], "convert() (sympy.polys.agca.modules.submodule method)": [[214, "sympy.polys.agca.modules.SubModule.convert", false]], "convert() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.convert", false]], "convert() (sympy.polys.polyclasses.anp method)": [[218, "sympy.polys.polyclasses.ANP.convert", false]], "convert() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.convert", false]], "convert_from() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.convert_from", false]], "convert_to() (in module sympy.physics.units.util)": [[199, "sympy.physics.units.util.convert_to", false]], "convert_to() (sympy.physics.units.quantities.quantity method)": [[199, "sympy.physics.units.quantities.Quantity.convert_to", false]], "convert_to() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.convert_to", false]], "convert_to() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.convert_to", false]], "convert_to() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.convert_to", false]], "convert_to_c() (sympy.parsing.sym_expr.sympyexpression method)": [[111, "sympy.parsing.sym_expr.SymPyExpression.convert_to_c", false]], "convert_to_expr() (sympy.parsing.sym_expr.sympyexpression method)": [[111, "sympy.parsing.sym_expr.SymPyExpression.convert_to_expr", false]], "convert_to_fortran() (sympy.parsing.sym_expr.sympyexpression method)": [[111, "sympy.parsing.sym_expr.SymPyExpression.convert_to_fortran", false]], "convert_to_native_paths() (in module sympy.testing.runtests)": [[258, "sympy.testing.runtests.convert_to_native_paths", false]], "convert_to_python() (sympy.parsing.sym_expr.sympyexpression method)": [[111, "sympy.parsing.sym_expr.SymPyExpression.convert_to_python", false]], "convert_xor() (in module sympy.parsing.sympy_parser)": [[111, "sympy.parsing.sympy_parser.convert_xor", false]], "convex_hull() (in module sympy.geometry.util)": [[86, "sympy.geometry.util.convex_hull", false]], "convolution() (in module sympy.discrete.convolutions)": [[72, "sympy.discrete.convolutions.convolution", false]], "convolution_fft() (in module sympy.discrete.convolutions)": [[72, "sympy.discrete.convolutions.convolution_fft", false]], "convolution_fwht() (in module sympy.discrete.convolutions)": [[72, "sympy.discrete.convolutions.convolution_fwht", false]], "convolution_ntt() (in module sympy.discrete.convolutions)": [[72, "sympy.discrete.convolutions.convolution_ntt", false]], "convolution_subset() (in module sympy.discrete.convolutions)": [[72, "sympy.discrete.convolutions.convolution_subset", false]], "coord_function() (sympy.diffgeom.coordsystem method)": [[71, "sympy.diffgeom.CoordSystem.coord_function", false]], "coord_functions() (sympy.diffgeom.coordsystem method)": [[71, "sympy.diffgeom.CoordSystem.coord_functions", false]], "coord_tuple_transform_to() (sympy.diffgeom.coordsystem method)": [[71, "sympy.diffgeom.CoordSystem.coord_tuple_transform_to", false]], "coordinates (sympy.geometry.point.point2d property)": [[84, "sympy.geometry.point.Point2D.coordinates", false]], "coordinates (sympy.geometry.point.point3d property)": [[84, "sympy.geometry.point.Point3D.coordinates", false]], "coordinates (sympy.physics.mechanics.joint.joint property)": [[134, "sympy.physics.mechanics.joint.Joint.coordinates", false]], "coordinates (sympy.physics.mechanics.system.symbolicsystem property)": [[140, "sympy.physics.mechanics.system.SymbolicSystem.coordinates", false]], "coordinatesym (class in sympy.physics.vector.frame)": [[202, "sympy.physics.vector.frame.CoordinateSym", false]], "coordinatesymbol (class in sympy.diffgeom)": [[71, "sympy.diffgeom.CoordinateSymbol", false]], "coords() (sympy.diffgeom.point method)": [[71, "sympy.diffgeom.Point.coords", false]], "coordsys3d (class in sympy.vector.coordsysrect)": [[271, "sympy.vector.coordsysrect.CoordSys3D", false]], "coordsystem (class in sympy.diffgeom)": [[71, "sympy.diffgeom.CoordSystem", false]], "copy() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.copy", false]], "copy() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.copy", false]], "copy() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.copy", false]], "copy() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.copy", false]], "copy() (sympy.series.gruntz.subsset method)": [[234, "sympy.series.gruntz.SubsSet.copy", false]], "core": [[15, "term-Core", true]], "core() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.core", false]], "cornacchia() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.cornacchia", false]], "corners (sympy.combinatorics.polyhedron.polyhedron property)": [[62, "sympy.combinatorics.polyhedron.Polyhedron.corners", false]], "correlation() (in module sympy.stats)": [[247, "sympy.stats.correlation", false]], "cos (class in sympy.functions.elementary.trigonometric)": [[75, "sympy.functions.elementary.trigonometric.cos", false]], "coset_factor() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.coset_factor", false]], "coset_rank() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.coset_rank", false]], "coset_table() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.coset_table", false]], "coset_transversal() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.coset_transversal", false]], "coset_unrank() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.coset_unrank", false]], "cosh (class in sympy.functions.elementary.hyperbolic)": [[75, "sympy.functions.elementary.hyperbolic.cosh", false]], "cosine_transform() (in module sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.cosine_transform", false]], "cosinetransform (class in sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.CosineTransform", false]], "coskewness() (in module sympy.stats)": [[247, "sympy.stats.coskewness", false]], "cot (class in sympy.functions.elementary.trigonometric)": [[75, "sympy.functions.elementary.trigonometric.cot", false]], "coth (class in sympy.functions.elementary.hyperbolic)": [[75, "sympy.functions.elementary.hyperbolic.coth", false]], "could_extract_minus_sign() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.could_extract_minus_sign", false]], "count() (sympy.core.basic.basic method)": [[69, "sympy.core.basic.Basic.count", false]], "count_complex_roots() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.count_complex_roots", false]], "count_digits() (in module sympy.ntheory.digits)": [[109, "sympy.ntheory.digits.count_digits", false]], "count_ops() (in module sympy.core.function)": [[69, "sympy.core.function.count_ops", false]], "count_ops() (sympy.core.basic.basic method)": [[69, "sympy.core.basic.Basic.count_ops", false]], "count_partitions() (sympy.utilities.enumerative.multisetpartitiontraverser method)": [[262, "sympy.utilities.enumerative.MultisetPartitionTraverser.count_partitions", false]], "count_real_roots() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.count_real_roots", false]], "count_roots() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.count_roots", false]], "count_roots() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.count_roots", false]], "couple() (in module sympy.physics.quantum.spin)": [[189, "sympy.physics.quantum.spin.couple", false]], "covarderivativeop (class in sympy.diffgeom)": [[71, "sympy.diffgeom.CovarDerivativeOp", false]], "covariance (class in sympy.stats)": [[247, "sympy.stats.Covariance", false]], "covariance() (in module sympy.stats)": [[247, "sympy.stats.covariance", false]], "covering_product() (in module sympy.discrete.convolutions)": [[72, "sympy.discrete.convolutions.covering_product", false]], "coxeter_diagram() (sympy.liealgebras.weyl_group.weylgroup method)": [[98, "sympy.liealgebras.weyl_group.WeylGroup.coxeter_diagram", false]], "cramer_solve() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.cramer_solve", false]], "create_expand_pow_optimization() (in module sympy.codegen.rewriting)": [[50, "sympy.codegen.rewriting.create_expand_pow_optimization", false]], "create_new() (sympy.vector.coordsysrect.coordsys3d method)": [[271, "sympy.vector.coordsysrect.CoordSys3D.create_new", false]], "createboson (class in sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.CreateBoson", false]], "createcgate() (in module sympy.physics.quantum.circuitplot)": [[172, "sympy.physics.quantum.circuitplot.CreateCGate", false]], "createfermion (class in sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.CreateFermion", false]], "critical_angle() (in module sympy.physics.optics.utils)": [[165, "sympy.physics.optics.utils.critical_angle", false]], "cross() (in module sympy.physics.vector.functions)": [[204, "sympy.physics.vector.functions.cross", false]], "cross() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.cross", false]], "cross() (sympy.physics.vector.dyadic.dyadic method)": [[202, "sympy.physics.vector.dyadic.Dyadic.cross", false]], "cross() (sympy.physics.vector.vector.vector method)": [[202, "sympy.physics.vector.vector.Vector.cross", false]], "cross() (sympy.vector.deloperator.del method)": [[271, "sympy.vector.deloperator.Del.cross", false]], "cross() (sympy.vector.dyadic.dyadic method)": [[271, "sympy.vector.dyadic.Dyadic.cross", false]], "cross() (sympy.vector.vector.vector method)": [[271, "sympy.vector.vector.Vector.cross", false]], "cross_section (sympy.physics.continuum_mechanics.beam.beam property)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.cross_section", false]], "crosscovariancematrix (class in sympy.stats)": [[247, "sympy.stats.CrossCovarianceMatrix", false]], "crt() (in module sympy.ntheory.modular)": [[109, "sympy.ntheory.modular.crt", false]], "crt1() (in module sympy.ntheory.modular)": [[109, "sympy.ntheory.modular.crt1", false]], "crt2() (in module sympy.ntheory.modular)": [[109, "sympy.ntheory.modular.crt2", false]], "csc (class in sympy.functions.elementary.trigonometric)": [[75, "sympy.functions.elementary.trigonometric.csc", false]], "csch (class in sympy.functions.elementary.hyperbolic)": [[75, "sympy.functions.elementary.hyperbolic.csch", false]], "cse() (in module sympy.simplify.cse_main)": [[239, "sympy.simplify.cse_main.cse", false]], "cse() (sympy.codegen.ast.codeblock method)": [[50, "sympy.codegen.ast.CodeBlock.cse", false]], "cubicthue (class in sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.CubicThue", false]], "curl() (in module sympy.physics.vector.fieldfunctions)": [[203, "sympy.physics.vector.fieldfunctions.curl", false]], "curl() (in module sympy.vector)": [[274, "sympy.vector.curl", false]], "current (sympy.combinatorics.graycode.graycode property)": [[53, "sympy.combinatorics.graycode.GrayCode.current", false]], "curve (class in sympy.geometry.curve)": [[78, "sympy.geometry.curve.Curve", false]], "curvedmirror (class in sympy.physics.optics.gaussopt)": [[161, "sympy.physics.optics.gaussopt.CurvedMirror", false]], "curvedrefraction (class in sympy.physics.optics.gaussopt)": [[161, "sympy.physics.optics.gaussopt.CurvedRefraction", false]], "curves() (sympy.physics.biomechanics.musculotendon.musculotendonbase method)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.curves", false]], "cut_section() (sympy.geometry.polygon.polygon method)": [[85, "sympy.geometry.polygon.Polygon.cut_section", false]], "cxx11codeprinter (class in sympy.printing.cxx)": [[227, "sympy.printing.cxx.CXX11CodePrinter", false]], "cxx98codeprinter (class in sympy.printing.cxx)": [[227, "sympy.printing.cxx.CXX98CodePrinter", false]], "cxxcode() (in module sympy.printing.codeprinter)": [[227, "sympy.printing.codeprinter.cxxcode", false]], "cycle (class in sympy.combinatorics.permutations)": [[61, "sympy.combinatorics.permutations.Cycle", false]], "cycle_length() (in module sympy.ntheory.generate)": [[109, "sympy.ntheory.generate.cycle_length", false]], "cycle_list() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.cycle_list", false]], "cycle_structure (sympy.combinatorics.permutations.permutation property)": [[61, "sympy.combinatorics.permutations.Permutation.cycle_structure", false]], "cycles (sympy.combinatorics.permutations.permutation property)": [[61, "sympy.combinatorics.permutations.Permutation.cycles", false]], "cyclic() (sympy.combinatorics.generators method)": [[61, "sympy.combinatorics.generators.cyclic", false]], "cyclic_form (sympy.combinatorics.permutations.permutation property)": [[61, "sympy.combinatorics.permutations.Permutation.cyclic_form", false]], "cyclic_form (sympy.combinatorics.polyhedron.polyhedron property)": [[62, "sympy.combinatorics.polyhedron.Polyhedron.cyclic_form", false]], "cyclicgroup() (in module sympy.combinatorics.named_groups)": [[57, "sympy.combinatorics.named_groups.CyclicGroup", false]], "cyclotomic_field() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.cyclotomic_field", false]], "cyclotomic_poly() (in module sympy.polys.specialpolys)": [[223, "sympy.polys.specialpolys.cyclotomic_poly", false]], "cylindricaljoint (class in sympy.physics.mechanics.joint)": [[134, "sympy.physics.mechanics.joint.CylindricalJoint", false]], "cythoncodewrapper (class in sympy.utilities.autowrap)": [[259, "sympy.utilities.autowrap.CythonCodeWrapper", false]], "d (sympy.matrices.matrixbase.matrixbase property)": [[105, "sympy.matrices.matrixbase.MatrixBase.D", false]], "d (sympy.physics.optics.gaussopt.raytransfermatrix property)": [[161, "sympy.physics.optics.gaussopt.RayTransferMatrix.D", false]], "d() (sympy.physics.quantum.spin.rotation class method)": [[189, "sympy.physics.quantum.spin.Rotation.D", false], [189, "sympy.physics.quantum.spin.Rotation.d", false]], "dagger (class in sympy.physics.quantum.dagger)": [[175, "sympy.physics.quantum.dagger.Dagger", false]], "dagger (class in sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.Dagger", false]], "dagum() (in module sympy.stats)": [[247, "sympy.stats.Dagum", false]], "damping (sympy.physics.mechanics.actuator.lineardamper property)": [[130, "sympy.physics.mechanics.actuator.LinearDamper.damping", false]], "datatype (class in sympy.utilities.codegen)": [[260, "sympy.utilities.codegen.DataType", false]], "davis() (in module sympy.stats)": [[247, "sympy.stats.Davis", false]], "dc_gain() (sympy.physics.control.lti.transferfunction method)": [[125, "sympy.physics.control.lti.TransferFunction.dc_gain", false]], "dcm() (sympy.physics.mechanics.body.body method)": [[131, "sympy.physics.mechanics.body.Body.dcm", false]], "dcm() (sympy.physics.vector.frame.referenceframe method)": [[202, "sympy.physics.vector.frame.ReferenceFrame.dcm", false]], "ddm (class in sympy.polys.matrices.ddm)": [[216, "sympy.polys.matrices.ddm.DDM", false]], "ddm_berk() (in module sympy.polys.matrices.dense)": [[216, "sympy.polys.matrices.dense.ddm_berk", false]], "ddm_iadd() (in module sympy.polys.matrices.dense)": [[216, "sympy.polys.matrices.dense.ddm_iadd", false]], "ddm_idet() (in module sympy.polys.matrices.dense)": [[216, "sympy.polys.matrices.dense.ddm_idet", false]], "ddm_iinv() (in module sympy.polys.matrices.dense)": [[216, "sympy.polys.matrices.dense.ddm_iinv", false]], "ddm_ilu() (in module sympy.polys.matrices.dense)": [[216, "sympy.polys.matrices.dense.ddm_ilu", false]], "ddm_ilu_solve() (in module sympy.polys.matrices.dense)": [[216, "sympy.polys.matrices.dense.ddm_ilu_solve", false]], "ddm_ilu_split() (in module sympy.polys.matrices.dense)": [[216, "sympy.polys.matrices.dense.ddm_ilu_split", false]], "ddm_imatmul() (in module sympy.polys.matrices.dense)": [[216, "sympy.polys.matrices.dense.ddm_imatmul", false]], "ddm_imul() (in module sympy.polys.matrices.dense)": [[216, "sympy.polys.matrices.dense.ddm_imul", false]], "ddm_ineg() (in module sympy.polys.matrices.dense)": [[216, "sympy.polys.matrices.dense.ddm_ineg", false]], "ddm_irmul() (in module sympy.polys.matrices.dense)": [[216, "sympy.polys.matrices.dense.ddm_irmul", false]], "ddm_irref() (in module sympy.polys.matrices.dense)": [[216, "sympy.polys.matrices.dense.ddm_irref", false]], "ddm_irref_den() (in module sympy.polys.matrices.dense)": [[216, "sympy.polys.matrices.dense.ddm_irref_den", false]], "ddm_isub() (in module sympy.polys.matrices.dense)": [[216, "sympy.polys.matrices.dense.ddm_isub", false]], "ddm_transpose() (in module sympy.polys.matrices.dense)": [[216, "sympy.polys.matrices.dense.ddm_transpose", false]], "deactivation_time_constant (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[112, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.deactivation_time_constant", false]], "debug() (in module sympy.utilities.misc)": [[268, "sympy.utilities.misc.debug", false]], "debug_decorator() (in module sympy.utilities.misc)": [[268, "sympy.utilities.misc.debug_decorator", false]], "debugf() (in module sympy.utilities.misc)": [[268, "sympy.utilities.misc.debugf", false]], "decimal_dig (sympy.codegen.ast.floattype property)": [[50, "sympy.codegen.ast.FloatType.decimal_dig", false]], "decipher_affine() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.decipher_affine", false]], "decipher_atbash() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.decipher_atbash", false]], "decipher_bifid() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.decipher_bifid", false]], "decipher_bifid5() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.decipher_bifid5", false]], "decipher_bifid6() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.decipher_bifid6", false]], "decipher_elgamal() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.decipher_elgamal", false]], "decipher_gm() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.decipher_gm", false]], "decipher_hill() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.decipher_hill", false]], "decipher_kid_rsa() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.decipher_kid_rsa", false]], "decipher_railfence() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.decipher_railfence", false]], "decipher_rot13() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.decipher_rot13", false]], "decipher_rsa() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.decipher_rsa", false]], "decipher_shift() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.decipher_shift", false]], "decipher_vigenere() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.decipher_vigenere", false]], "declaration (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.Declaration", false]], "decode_morse() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.decode_morse", false]], "decompose() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.decompose", false]], "decompose() (sympy.physics.quantum.gate.cgate method)": [[176, "sympy.physics.quantum.gate.CGate.decompose", false]], "decompose() (sympy.physics.quantum.gate.swapgate method)": [[176, "sympy.physics.quantum.gate.SwapGate.decompose", false]], "decompose() (sympy.physics.quantum.qft.iqft method)": [[185, "sympy.physics.quantum.qft.IQFT.decompose", false]], "decompose() (sympy.physics.quantum.qft.qft method)": [[185, "sympy.physics.quantum.qft.QFT.decompose", false]], "decompose() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.decompose", false]], "decompose() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.decompose", false]], "decompose() (sympy.stats.discretemarkovchain method)": [[247, "sympy.stats.DiscreteMarkovChain.decompose", false]], "deduced() (sympy.codegen.ast.variable class method)": [[50, "sympy.codegen.ast.Variable.deduced", false]], "default_sort_key() (in module sympy.core.sorting)": [[69, "sympy.core.sorting.default_sort_key", false]], "deflate() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.deflate", false]], "deflate() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.deflate", false]], "deflection() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.deflection", false]], "deflection() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.deflection", false]], "degree (sympy.combinatorics.perm_groups.permutationgroup property)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.degree", false]], "degree() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.degree", false]], "degree() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.degree", false]], "degree() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.degree", false]], "degree() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.degree", false]], "degree_list() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.degree_list", false]], "degree_list() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.degree_list", false]], "degree_list() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.degree_list", false]], "degrees() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.degrees", false]], "del (class in sympy.vector.deloperator)": [[271, "sympy.vector.deloperator.Del", false]], "delete_doubles() (sympy.liealgebras.weyl_group.weylgroup method)": [[98, "sympy.liealgebras.weyl_group.WeylGroup.delete_doubles", false]], "delta (sympy.functions.special.hyper.meijerg property)": [[77, "sympy.functions.special.hyper.meijerg.delta", false]], "deltaintegrate() (in module sympy.integrals.deltafunctions)": [[96, "sympy.integrals.deltafunctions.deltaintegrate", false]], "den (sympy.physics.control.lti.feedback property)": [[125, "sympy.physics.control.lti.Feedback.den", false]], "den (sympy.physics.control.lti.transferfunction property)": [[125, "sympy.physics.control.lti.TransferFunction.den", false]], "denom() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.denom", false]], "denom() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.denom", false]], "denom() (sympy.polys.domains.expressiondomain method)": [[218, "sympy.polys.domains.ExpressionDomain.denom", false]], "denom() (sympy.polys.domains.fractionfield method)": [[218, "sympy.polys.domains.FractionField.denom", false]], "denom() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianRationalField.denom", false]], "denom() (sympy.polys.domains.gmpyrationalfield method)": [[218, "sympy.polys.domains.GMPYRationalField.denom", false]], "denom() (sympy.polys.domains.rationalfield method)": [[218, "sympy.polys.domains.RationalField.denom", false]], "denom() (sympy.polys.domains.ring.ring method)": [[218, "sympy.polys.domains.ring.Ring.denom", false]], "denom() (sympy.polys.polyclasses.dmf method)": [[218, "sympy.polys.polyclasses.DMF.denom", false]], "densematrix (class in sympy.matrices.dense)": [[100, "sympy.matrices.dense.DenseMatrix", false]], "density() (in module sympy.stats)": [[247, "sympy.stats.density", false]], "deprecated() (in module sympy.utilities.decorator)": [[261, "sympy.utilities.decorator.deprecated", false]], "depth() (sympy.polys.agca.ideals.ideal method)": [[214, "sympy.polys.agca.ideals.Ideal.depth", false]], "derivative (class in sympy.core.function)": [[69, "sympy.core.function.Derivative", false]], "derive_by_array() (in module sympy.tensor.array)": [[248, "sympy.tensor.array.derive_by_array", false]], "derived_series() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.derived_series", false]], "derived_subgroup() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.derived_subgroup", false]], "descent() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.descent", false]], "descents() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.descents", false]], "det() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.det", false]], "det() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.det", false]], "det() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.det", false]], "det() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.det", false]], "det() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.det", false]], "det_lu_decomposition() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.det_LU_decomposition", false]], "deviation() (in module sympy.physics.optics.utils)": [[165, "sympy.physics.optics.utils.deviation", false]], "dfm (class in sympy.polys.matrices._dfm)": [[216, "sympy.polys.matrices._dfm.DFM", false]], "dh_private_key() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.dh_private_key", false]], "dh_public_key() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.dh_public_key", false]], "dh_shared_key() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.dh_shared_key", false]], "diag() (in module sympy.matrices.dense)": [[105, "sympy.matrices.dense.diag", false]], "diag() (sympy.matrices.matrixbase.matrixbase class method)": [[105, "sympy.matrices.matrixbase.MatrixBase.diag", false]], "diag() (sympy.polys.matrices._dfm.dfm class method)": [[216, "sympy.polys.matrices._dfm.DFM.diag", false]], "diag() (sympy.polys.matrices.ddm.ddm class method)": [[216, "sympy.polys.matrices.ddm.DDM.diag", false]], "diag() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.diag", false]], "diagonal() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.diagonal", false]], "diagonal() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.diagonal", false]], "diagonal() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.diagonal", false]], "diagonal() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.diagonal", false]], "diagonal() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.diagonal", false]], "diagonal_solve() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.diagonal_solve", false]], "diagonalize() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.diagonalize", false]], "diagonalpredicate (class in sympy.assumptions.predicates.matrices)": [[46, "sympy.assumptions.predicates.matrices.DiagonalPredicate", false]], "diagram (class in sympy.categories)": [[49, "sympy.categories.Diagram", false]], "diagramgrid (class in sympy.categories.diagram_drawing)": [[49, "sympy.categories.diagram_drawing.DiagramGrid", false]], "dict (class in sympy.core.containers)": [[69, "sympy.core.containers.Dict", false]], "dict_merge() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.dict_merge", false]], "die() (in module sympy.stats)": [[247, "sympy.stats.Die", false]], "diepspace (class in sympy.stats.frv_types)": [[247, "sympy.stats.frv_types.DiePSpace", false]], "diff() (in module sympy.core.function)": [[69, "sympy.core.function.diff", false]], "diff() (sympy.holonomic.holonomic.holonomicfunction method)": [[91, "sympy.holonomic.holonomic.HolonomicFunction.diff", false]], "diff() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.diff", false]], "diff() (sympy.physics.vector.vector.vector method)": [[202, "sympy.physics.vector.vector.Vector.diff", false]], "diff() (sympy.polys.fields.fracelement method)": [[218, "sympy.polys.fields.FracElement.diff", false]], "diff() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.diff", false]], "diff() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.diff", false]], "diff() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.diff", false]], "difference_delta() (in module sympy.series.limitseq)": [[232, "sympy.series.limitseq.difference_delta", false]], "differential (class in sympy.diffgeom)": [[71, "sympy.diffgeom.Differential", false]], "differentialoperator (class in sympy.holonomic.holonomic)": [[92, "sympy.holonomic.holonomic.DifferentialOperator", false]], "differentialoperator (class in sympy.physics.quantum.operator)": [[181, "sympy.physics.quantum.operator.DifferentialOperator", false]], "differentialoperatoralgebra (class in sympy.holonomic.holonomic)": [[92, "sympy.holonomic.holonomic.DifferentialOperatorAlgebra", false]], "differentialoperators() (in module sympy.holonomic.holonomic)": [[92, "sympy.holonomic.holonomic.DifferentialOperators", false]], "differentiate_finite() (in module sympy.calculus.finite_diff)": [[48, "sympy.calculus.finite_diff.differentiate_finite", false]], "dig (sympy.codegen.ast.floattype property)": [[50, "sympy.codegen.ast.FloatType.dig", false]], "digamma (class in sympy.functions.special.gamma_functions)": [[77, "sympy.functions.special.gamma_functions.digamma", false]], "digit_2txt (in module sympy.printing.pretty.pretty_symbology)": [[227, "sympy.printing.pretty.pretty_symbology.digit_2txt", false]], "digits() (in module sympy.ntheory.digits)": [[109, "sympy.ntheory.digits.digits", false]], "digits() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.digits", false]], "dihedral() (sympy.combinatorics.generators method)": [[61, "sympy.combinatorics.generators.dihedral", false]], "dihedralgroup() (in module sympy.combinatorics.named_groups)": [[57, "sympy.combinatorics.named_groups.DihedralGroup", false]], "dim (sympy.physics.units.dimensions.dimensionsystem property)": [[194, "sympy.physics.units.dimensions.DimensionSystem.dim", false]], "dim (sympy.physics.units.unitsystem.unitsystem property)": [[200, "sympy.physics.units.unitsystem.UnitSystem.dim", false]], "dim_can_vector() (sympy.physics.units.dimensions.dimensionsystem method)": [[194, "sympy.physics.units.dimensions.DimensionSystem.dim_can_vector", false]], "dim_handling() (in module sympy.printing.aesaracode)": [[227, "sympy.printing.aesaracode.dim_handling", false]], "dim_vector() (sympy.physics.units.dimensions.dimensionsystem method)": [[194, "sympy.physics.units.dimensions.DimensionSystem.dim_vector", false]], "dimension (class in sympy.physics.units.dimensions)": [[194, "sympy.physics.units.dimensions.Dimension", false]], "dimension (sympy.physics.quantum.hilbert.hilbertspace property)": [[178, "sympy.physics.quantum.hilbert.HilbertSpace.dimension", false]], "dimension() (in module sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.dimension", false]], "dimension() (sympy.liealgebras.type_a.typea method)": [[98, "sympy.liealgebras.type_a.TypeA.dimension", false]], "dimension() (sympy.liealgebras.type_b.typeb method)": [[98, "sympy.liealgebras.type_b.TypeB.dimension", false]], "dimension() (sympy.liealgebras.type_c.typec method)": [[98, "sympy.liealgebras.type_c.TypeC.dimension", false]], "dimension() (sympy.liealgebras.type_d.typed method)": [[98, "sympy.liealgebras.type_d.TypeD.dimension", false]], "dimension() (sympy.liealgebras.type_e.typee method)": [[98, "sympy.liealgebras.type_e.TypeE.dimension", false]], "dimension() (sympy.liealgebras.type_f.typef method)": [[98, "sympy.liealgebras.type_f.TypeF.dimension", false]], "dimension() (sympy.liealgebras.type_g.typeg method)": [[98, "sympy.liealgebras.type_g.TypeG.dimension", false]], "dimensionsystem (class in sympy.physics.units.dimensions)": [[194, "sympy.physics.units.dimensions.DimensionSystem", false]], "diop_bf_dn() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.diop_bf_DN", false]], "diop_dn() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.diop_DN", false]], "diop_general_pythagorean() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.diop_general_pythagorean", false]], "diop_general_sum_of_even_powers() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.diop_general_sum_of_even_powers", false]], "diop_general_sum_of_squares() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.diop_general_sum_of_squares", false]], "diop_linear() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.diop_linear", false]], "diop_quadratic() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.diop_quadratic", false]], "diop_solve() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.diop_solve", false]], "diop_ternary_quadratic() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.diop_ternary_quadratic", false]], "diop_ternary_quadratic_normal() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.diop_ternary_quadratic_normal", false]], "diophantine() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.diophantine", false]], "diophantineequationtype (class in sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.DiophantineEquationType", false]], "diophantinesolutionset (class in sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.DiophantineSolutionSet", false]], "diracdelta (class in sympy.functions.special.delta_functions)": [[77, "sympy.functions.special.delta_functions.DiracDelta", false]], "direct_product() (sympy.tensor.tensor.tensorsymmetry class method)": [[253, "sympy.tensor.tensor.TensorSymmetry.direct_product", false]], "direction (sympy.geometry.line.linearentity property)": [[82, "sympy.geometry.line.LinearEntity.direction", false]], "direction_cosine (sympy.geometry.line.linearentity3d property)": [[82, "sympy.geometry.line.LinearEntity3D.direction_cosine", false]], "direction_cosine() (sympy.geometry.point.point3d method)": [[84, "sympy.geometry.point.Point3D.direction_cosine", false]], "direction_ratio (sympy.geometry.line.linearentity3d property)": [[82, "sympy.geometry.line.LinearEntity3D.direction_ratio", false]], "direction_ratio() (sympy.geometry.point.point3d method)": [[84, "sympy.geometry.point.Point3D.direction_ratio", false]], "director_circle() (sympy.geometry.ellipse.ellipse method)": [[79, "sympy.geometry.ellipse.Ellipse.director_circle", false]], "directproduct() (in module sympy.combinatorics.group_constructs)": [[54, "sympy.combinatorics.group_constructs.DirectProduct", false]], "directsumhilbertspace (class in sympy.physics.quantum.hilbert)": [[178, "sympy.physics.quantum.hilbert.DirectSumHilbertSpace", false]], "dirichlet_eta (class in sympy.functions.special.zeta_functions)": [[77, "sympy.functions.special.zeta_functions.dirichlet_eta", false]], "discard_before() (sympy.polys.numberfields.modules.submodule method)": [[222, "sympy.polys.numberfields.modules.Submodule.discard_before", false]], "discrete_log() (in module sympy.ntheory.residue_ntheory)": [[109, "sympy.ntheory.residue_ntheory.discrete_log", false]], "discretemarkovchain (class in sympy.stats)": [[247, "sympy.stats.DiscreteMarkovChain", false]], "discreteuniform() (in module sympy.stats)": [[247, "sympy.stats.DiscreteUniform", false]], "discriminant() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.discriminant", false]], "discriminant() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.discriminant", false]], "discriminant() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.discriminant", false]], "discriminant() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.discriminant", false]], "disjointunion (class in sympy.sets.sets)": [[235, "sympy.sets.sets.DisjointUnion", false]], "dispersion() (in module sympy.polys.dispersion)": [[223, "sympy.polys.dispersion.dispersion", false]], "dispersion() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.dispersion", false]], "dispersionset() (in module sympy.polys.dispersion)": [[223, "sympy.polys.dispersion.dispersionset", false]], "dispersionset() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.dispersionset", false]], "distance() (sympy.geometry.line.line method)": [[82, "sympy.geometry.line.Line.distance", false]], "distance() (sympy.geometry.line.line3d method)": [[82, "sympy.geometry.line.Line3D.distance", false]], "distance() (sympy.geometry.line.ray method)": [[82, "sympy.geometry.line.Ray.distance", false]], "distance() (sympy.geometry.line.segment method)": [[82, "sympy.geometry.line.Segment.distance", false]], "distance() (sympy.geometry.plane.plane method)": [[83, "sympy.geometry.plane.Plane.distance", false]], "distance() (sympy.geometry.point.point method)": [[84, "sympy.geometry.point.Point.distance", false]], "distance() (sympy.geometry.polygon.polygon method)": [[85, "sympy.geometry.polygon.Polygon.distance", false]], "distribute_and_over_or() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.distribute_and_over_or", false]], "distribute_or_over_and() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.distribute_or_over_and", false]], "distribute_xor_over_and() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.distribute_xor_over_and", false]], "div() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.div", false]], "div() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.div", false]], "div() (sympy.polys.domains.field.field method)": [[218, "sympy.polys.domains.field.Field.div", false]], "div() (sympy.polys.domains.gmpyrationalfield method)": [[218, "sympy.polys.domains.GMPYRationalField.div", false]], "div() (sympy.polys.domains.rationalfield method)": [[218, "sympy.polys.domains.RationalField.div", false]], "div() (sympy.polys.domains.ring.ring method)": [[218, "sympy.polys.domains.ring.Ring.div", false]], "div() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.div", false]], "div() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.div", false]], "div() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.div", false]], "divergence (sympy.physics.optics.gaussopt.beamparameter property)": [[161, "sympy.physics.optics.gaussopt.BeamParameter.divergence", false]], "divergence() (in module sympy.physics.vector.fieldfunctions)": [[203, "sympy.physics.vector.fieldfunctions.divergence", false]], "divergence() (in module sympy.vector)": [[274, "sympy.vector.divergence", false]], "divisible() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.divisible", false]], "divisor_count() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.divisor_count", false]], "divisor_sigma (class in sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.divisor_sigma", false]], "divisor_sigma() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.divisor_sigma", false]], "divisors() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.divisors", false]], "dm() (in module sympy.polys.matrices.domainmatrix)": [[216, "sympy.polys.matrices.domainmatrix.DM", false]], "dmf (class in sympy.polys.polyclasses)": [[218, "sympy.polys.polyclasses.DMF", false]], "dmp (class in sympy.polys.polyclasses)": [[218, "sympy.polys.polyclasses.DMP", false]], "dmp_abs() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_abs", false]], "dmp_add() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_add", false]], "dmp_add_ground() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_add_ground", false]], "dmp_add_mul() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_add_mul", false]], "dmp_add_term() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_add_term", false]], "dmp_apply_pairs() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_apply_pairs", false]], "dmp_cancel() (in module sympy.polys.euclidtools)": [[220, "sympy.polys.euclidtools.dmp_cancel", false]], "dmp_clear_denoms() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dmp_clear_denoms", false]], "dmp_compose() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dmp_compose", false]], "dmp_content() (in module sympy.polys.euclidtools)": [[220, "sympy.polys.euclidtools.dmp_content", false]], "dmp_convert() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_convert", false]], "dmp_copy() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_copy", false]], "dmp_deflate() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_deflate", false]], "dmp_degree() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_degree", false]], "dmp_degree_in() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_degree_in", false]], "dmp_degree_list() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_degree_list", false]], "dmp_diff() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dmp_diff", false]], "dmp_diff_eval_in() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dmp_diff_eval_in", false]], "dmp_diff_in() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dmp_diff_in", false]], "dmp_discriminant() (in module sympy.polys.euclidtools)": [[220, "sympy.polys.euclidtools.dmp_discriminant", false]], "dmp_div() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_div", false]], "dmp_eject() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_eject", false]], "dmp_euclidean_prs() (in module sympy.polys.euclidtools)": [[220, "sympy.polys.euclidtools.dmp_euclidean_prs", false]], "dmp_eval() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dmp_eval", false]], "dmp_eval_in() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dmp_eval_in", false]], "dmp_eval_tail() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dmp_eval_tail", false]], "dmp_exclude() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_exclude", false]], "dmp_expand() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_expand", false]], "dmp_exquo() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_exquo", false]], "dmp_exquo_ground() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_exquo_ground", false]], "dmp_ext_factor() (in module sympy.polys.factortools)": [[220, "sympy.polys.factortools.dmp_ext_factor", false]], "dmp_factor_list() (in module sympy.polys.factortools)": [[220, "sympy.polys.factortools.dmp_factor_list", false]], "dmp_factor_list_include() (in module sympy.polys.factortools)": [[220, "sympy.polys.factortools.dmp_factor_list_include", false]], "dmp_ff_div() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_ff_div", false]], "dmp_ff_prs_gcd() (in module sympy.polys.euclidtools)": [[220, "sympy.polys.euclidtools.dmp_ff_prs_gcd", false]], "dmp_from_dict() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_from_dict", false]], "dmp_from_sympy() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_from_sympy", false]], "dmp_gcd() (in module sympy.polys.euclidtools)": [[220, "sympy.polys.euclidtools.dmp_gcd", false]], "dmp_gcdex() (in module sympy.polys.euclidtools)": [[220, "sympy.polys.euclidtools.dmp_gcdex", false]], "dmp_ground() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_ground", false]], "dmp_ground_content() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dmp_ground_content", false]], "dmp_ground_extract() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dmp_ground_extract", false]], "dmp_ground_lc() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_ground_LC", false]], "dmp_ground_monic() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dmp_ground_monic", false]], "dmp_ground_nth() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_ground_nth", false]], "dmp_ground_p() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_ground_p", false]], "dmp_ground_primitive() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dmp_ground_primitive", false]], "dmp_ground_tc() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_ground_TC", false]], "dmp_ground_trunc() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dmp_ground_trunc", false]], "dmp_grounds() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_grounds", false]], "dmp_half_gcdex() (in module sympy.polys.euclidtools)": [[220, "sympy.polys.euclidtools.dmp_half_gcdex", false]], "dmp_include() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_include", false]], "dmp_inflate() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_inflate", false]], "dmp_inject() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_inject", false]], "dmp_inner_gcd() (in module sympy.polys.euclidtools)": [[220, "sympy.polys.euclidtools.dmp_inner_gcd", false]], "dmp_inner_subresultants() (in module sympy.polys.euclidtools)": [[220, "sympy.polys.euclidtools.dmp_inner_subresultants", false]], "dmp_integrate() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dmp_integrate", false]], "dmp_integrate_in() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dmp_integrate_in", false]], "dmp_invert() (in module sympy.polys.euclidtools)": [[220, "sympy.polys.euclidtools.dmp_invert", false]], "dmp_irreducible_p() (in module sympy.polys.factortools)": [[220, "sympy.polys.factortools.dmp_irreducible_p", false]], "dmp_l1_norm() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_l1_norm", false]], "dmp_lc() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_LC", false]], "dmp_lcm() (in module sympy.polys.euclidtools)": [[220, "sympy.polys.euclidtools.dmp_lcm", false]], "dmp_lift() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dmp_lift", false]], "dmp_list_terms() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_list_terms", false]], "dmp_max_norm() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_max_norm", false]], "dmp_mul() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_mul", false]], "dmp_mul_ground() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_mul_ground", false]], "dmp_mul_term() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_mul_term", false]], "dmp_multi_deflate() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_multi_deflate", false]], "dmp_neg() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_neg", false]], "dmp_negative_p() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_negative_p", false]], "dmp_nest() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_nest", false]], "dmp_normal() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_normal", false]], "dmp_nth() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_nth", false]], "dmp_one() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_one", false]], "dmp_one_p() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_one_p", false]], "dmp_pdiv() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_pdiv", false]], "dmp_permute() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_permute", false]], "dmp_pexquo() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_pexquo", false]], "dmp_positive_p() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_positive_p", false]], "dmp_pow() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_pow", false]], "dmp_pquo() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_pquo", false]], "dmp_prem() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_prem", false]], "dmp_primitive() (in module sympy.polys.euclidtools)": [[220, "sympy.polys.euclidtools.dmp_primitive", false]], "dmp_primitive_prs() (in module sympy.polys.euclidtools)": [[220, "sympy.polys.euclidtools.dmp_primitive_prs", false]], "dmp_prs_resultant() (in module sympy.polys.euclidtools)": [[220, "sympy.polys.euclidtools.dmp_prs_resultant", false]], "dmp_qq_collins_resultant() (in module sympy.polys.euclidtools)": [[220, "sympy.polys.euclidtools.dmp_qq_collins_resultant", false]], "dmp_qq_heu_gcd() (in module sympy.polys.euclidtools)": [[220, "sympy.polys.euclidtools.dmp_qq_heu_gcd", false]], "dmp_quo() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_quo", false]], "dmp_quo_ground() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_quo_ground", false]], "dmp_raise() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_raise", false]], "dmp_rem() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_rem", false]], "dmp_resultant() (in module sympy.polys.euclidtools)": [[220, "sympy.polys.euclidtools.dmp_resultant", false]], "dmp_revert() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dmp_revert", false]], "dmp_rr_div() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_rr_div", false]], "dmp_rr_prs_gcd() (in module sympy.polys.euclidtools)": [[220, "sympy.polys.euclidtools.dmp_rr_prs_gcd", false]], "dmp_slice() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_slice", false]], "dmp_sqr() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_sqr", false]], "dmp_strip() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_strip", false]], "dmp_sub() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_sub", false]], "dmp_sub_ground() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_sub_ground", false]], "dmp_sub_mul() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_sub_mul", false]], "dmp_sub_term() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dmp_sub_term", false]], "dmp_subresultants() (in module sympy.polys.euclidtools)": [[220, "sympy.polys.euclidtools.dmp_subresultants", false]], "dmp_swap() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_swap", false]], "dmp_tc() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_TC", false]], "dmp_terms_gcd() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_terms_gcd", false]], "dmp_to_dict() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_to_dict", false]], "dmp_to_tuple() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_to_tuple", false]], "dmp_trial_division() (in module sympy.polys.factortools)": [[220, "sympy.polys.factortools.dmp_trial_division", false]], "dmp_true_lt() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_true_LT", false]], "dmp_trunc() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dmp_trunc", false]], "dmp_validate() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_validate", false]], "dmp_zero() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_zero", false]], "dmp_zero_p() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_zero_p", false]], "dmp_zeros() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dmp_zeros", false]], "dmp_zz_collins_resultant() (in module sympy.polys.euclidtools)": [[220, "sympy.polys.euclidtools.dmp_zz_collins_resultant", false]], "dmp_zz_diophantine() (in module sympy.polys.factortools)": [[220, "sympy.polys.factortools.dmp_zz_diophantine", false]], "dmp_zz_factor() (in module sympy.polys.factortools)": [[220, "sympy.polys.factortools.dmp_zz_factor", false]], "dmp_zz_heu_gcd() (in module sympy.polys.euclidtools)": [[220, "sympy.polys.euclidtools.dmp_zz_heu_gcd", false]], "dmp_zz_mignotte_bound() (in module sympy.polys.factortools)": [[220, "sympy.polys.factortools.dmp_zz_mignotte_bound", false]], "dmp_zz_modular_resultant() (in module sympy.polys.euclidtools)": [[220, "sympy.polys.euclidtools.dmp_zz_modular_resultant", false]], "dmp_zz_wang() (in module sympy.polys.factortools)": [[220, "sympy.polys.factortools.dmp_zz_wang", false]], "dmp_zz_wang_hensel_lifting() (in module sympy.polys.factortools)": [[220, "sympy.polys.factortools.dmp_zz_wang_hensel_lifting", false]], "dmp_zz_wang_lead_coeffs() (in module sympy.polys.factortools)": [[220, "sympy.polys.factortools.dmp_zz_wang_lead_coeffs", false]], "dmp_zz_wang_non_divisors() (in module sympy.polys.factortools)": [[220, "sympy.polys.factortools.dmp_zz_wang_non_divisors", false]], "dmp_zz_wang_test_points() (in module sympy.polys.factortools)": [[220, "sympy.polys.factortools.dmp_zz_wang_test_points", false]], "do (class in sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.Do", false]], "do_subs() (sympy.series.gruntz.subsset method)": [[234, "sympy.series.gruntz.SubsSet.do_subs", false]], "doctest() (in module sympy.testing.runtests)": [[258, "sympy.testing.runtests.doctest", false]], "doctest_depends_on() (in module sympy.utilities.decorator)": [[261, "sympy.utilities.decorator.doctest_depends_on", false]], "doit() (sympy.core.basic.basic method)": [[69, "sympy.core.basic.Basic.doit", false]], "doit() (sympy.functions.elementary.piecewise.piecewise method)": [[75, "sympy.functions.elementary.piecewise.Piecewise.doit", false]], "doit() (sympy.integrals.integrals.integral method)": [[96, "sympy.integrals.integrals.Integral.doit", false]], "doit() (sympy.integrals.transforms.integraltransform method)": [[96, "sympy.integrals.transforms.IntegralTransform.doit", false]], "doit() (sympy.integrals.transforms.inverselaplacetransform method)": [[96, "sympy.integrals.transforms.InverseLaplaceTransform.doit", false]], "doit() (sympy.integrals.transforms.laplacetransform method)": [[96, "sympy.integrals.transforms.LaplaceTransform.doit", false]], "doit() (sympy.physics.biomechanics.curve.fiberforcelengthactivedegroote2016 method)": [[113, "sympy.physics.biomechanics.curve.FiberForceLengthActiveDeGroote2016.doit", false]], "doit() (sympy.physics.biomechanics.curve.fiberforcelengthpassivedegroote2016 method)": [[113, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveDeGroote2016.doit", false]], "doit() (sympy.physics.biomechanics.curve.fiberforcelengthpassiveinversedegroote2016 method)": [[113, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveInverseDeGroote2016.doit", false]], "doit() (sympy.physics.biomechanics.curve.fiberforcevelocitydegroote2016 method)": [[113, "sympy.physics.biomechanics.curve.FiberForceVelocityDeGroote2016.doit", false]], "doit() (sympy.physics.biomechanics.curve.fiberforcevelocityinversedegroote2016 method)": [[113, "sympy.physics.biomechanics.curve.FiberForceVelocityInverseDeGroote2016.doit", false]], "doit() (sympy.physics.biomechanics.curve.tendonforcelengthdegroote2016 method)": [[113, "sympy.physics.biomechanics.curve.TendonForceLengthDeGroote2016.doit", false]], "doit() (sympy.physics.biomechanics.curve.tendonforcelengthinversedegroote2016 method)": [[113, "sympy.physics.biomechanics.curve.TendonForceLengthInverseDeGroote2016.doit", false]], "doit() (sympy.physics.control.lti.feedback method)": [[125, "sympy.physics.control.lti.Feedback.doit", false]], "doit() (sympy.physics.control.lti.mimofeedback method)": [[125, "sympy.physics.control.lti.MIMOFeedback.doit", false]], "doit() (sympy.physics.control.lti.mimoparallel method)": [[125, "sympy.physics.control.lti.MIMOParallel.doit", false]], "doit() (sympy.physics.control.lti.mimoseries method)": [[125, "sympy.physics.control.lti.MIMOSeries.doit", false]], "doit() (sympy.physics.control.lti.parallel method)": [[125, "sympy.physics.control.lti.Parallel.doit", false]], "doit() (sympy.physics.control.lti.series method)": [[125, "sympy.physics.control.lti.Series.doit", false]], "doit() (sympy.physics.quantum.anticommutator.anticommutator method)": [[169, "sympy.physics.quantum.anticommutator.AntiCommutator.doit", false]], "doit() (sympy.physics.quantum.commutator.commutator method)": [[173, "sympy.physics.quantum.commutator.Commutator.doit", false]], "doit() (sympy.physics.secondquant.commutator method)": [[192, "sympy.physics.secondquant.Commutator.doit", false]], "doit() (sympy.physics.secondquant.no method)": [[192, "sympy.physics.secondquant.NO.doit", false]], "doit() (sympy.physics.vector.dyadic.dyadic method)": [[202, "sympy.physics.vector.dyadic.Dyadic.doit", false]], "doit() (sympy.physics.vector.vector.vector method)": [[202, "sympy.physics.vector.vector.Vector.doit", false]], "doit() (sympy.series.limits.limit method)": [[234, "sympy.series.limits.Limit.doit", false]], "doit_numerically() (sympy.core.function.derivative method)": [[69, "sympy.core.function.Derivative.doit_numerically", false]], "domain (class in sympy.polys.domains.domain)": [[218, "sympy.polys.domains.domain.Domain", false]], "domain (sympy.categories.compositemorphism property)": [[49, "sympy.categories.CompositeMorphism.domain", false]], "domain (sympy.categories.morphism property)": [[49, "sympy.categories.Morphism.domain", false]], "domain (sympy.polys.polytools.poly property)": [[223, "sympy.polys.polytools.Poly.domain", false]], "domain_check() (in module sympy.solvers.solveset)": [[246, "sympy.solvers.solveset.domain_check", false]], "domainelement (class in sympy.polys.domains.domainelement)": [[218, "sympy.polys.domains.domainelement.DomainElement", false]], "domainerror (class in sympy.polys.polyerrors)": [[220, "sympy.polys.polyerrors.DomainError", false]], "domainmatrix (class in sympy.polys.matrices.domainmatrix)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix", false]], "dominant() (in module sympy.series.limitseq)": [[232, "sympy.series.limitseq.dominant", false]], "doprint() (sympy.printing.aesaracode.aesaraprinter method)": [[227, "sympy.printing.aesaracode.AesaraPrinter.doprint", false]], "doprint() (sympy.printing.codeprinter.codeprinter method)": [[227, "sympy.printing.codeprinter.CodePrinter.doprint", false]], "doprint() (sympy.printing.mathml.mathmlprinterbase method)": [[227, "sympy.printing.mathml.MathMLPrinterBase.doprint", false]], "doprint() (sympy.printing.printer.printer method)": [[227, "sympy.printing.printer.Printer.doprint", false]], "dot() (in module sympy.physics.vector.functions)": [[204, "sympy.physics.vector.functions.dot", false]], "dot() (sympy.geometry.point.point method)": [[84, "sympy.geometry.point.Point.dot", false]], "dot() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.dot", false]], "dot() (sympy.physics.vector.dyadic.dyadic method)": [[202, "sympy.physics.vector.dyadic.Dyadic.dot", false]], "dot() (sympy.physics.vector.vector.vector method)": [[202, "sympy.physics.vector.vector.Vector.dot", false]], "dot() (sympy.vector.deloperator.del method)": [[271, "sympy.vector.deloperator.Del.dot", false]], "dot() (sympy.vector.dyadic.dyadic method)": [[271, "sympy.vector.dyadic.Dyadic.dot", false]], "dot() (sympy.vector.vector.vector method)": [[271, "sympy.vector.vector.Vector.dot", false]], "dot_rot_grad_ynm() (in module sympy.physics.wigner)": [[212, "sympy.physics.wigner.dot_rot_grad_Ynm", false]], "dotprint() (in module sympy.printing.dot)": [[227, "sympy.printing.dot.dotprint", false]], "double_coset_can_rep() (in module sympy.combinatorics.tensor_can)": [[65, "sympy.combinatorics.tensor_can.double_coset_can_rep", false]], "draw() (sympy.categories.diagram_drawing.xypicdiagramdrawer method)": [[49, "sympy.categories.diagram_drawing.XypicDiagramDrawer.draw", false]], "draw() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.draw", false]], "draw() (sympy.physics.continuum_mechanics.truss.truss method)": [[121, "sympy.physics.continuum_mechanics.truss.Truss.draw", false]], "drop() (sympy.polys.domains.compositedomain.compositedomain method)": [[218, "sympy.polys.domains.compositedomain.CompositeDomain.drop", false]], "drop() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.drop", false]], "drop() (sympy.polys.rings.polyring method)": [[218, "sympy.polys.rings.PolyRing.drop", false]], "drop_to_ground() (sympy.polys.rings.polyring method)": [[218, "sympy.polys.rings.PolyRing.drop_to_ground", false]], "dsign (class in sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.dsign", false]], "dsolve() (in module sympy.solvers.ode)": [[243, "sympy.solvers.ode.dsolve", false]], "dsolve_system() (in module sympy.solvers.ode.systems)": [[243, "sympy.solvers.ode.systems.dsolve_system", false]], "dt() (sympy.physics.vector.dyadic.dyadic method)": [[202, "sympy.physics.vector.dyadic.Dyadic.dt", false]], "dt() (sympy.physics.vector.vector.vector method)": [[202, "sympy.physics.vector.vector.Vector.dt", false]], "dtype (sympy.polys.agca.extensions.monogenicfiniteextension attribute)": [[214, "sympy.polys.agca.extensions.MonogenicFiniteExtension.dtype", false]], "dtype (sympy.polys.agca.modules.freemodule attribute)": [[214, "sympy.polys.agca.modules.FreeModule.dtype", false]], "dtype (sympy.polys.agca.modules.quotientmodule attribute)": [[214, "sympy.polys.agca.modules.QuotientModule.dtype", false]], "dtype (sympy.polys.domains.algebraicfield attribute)": [[218, "sympy.polys.domains.AlgebraicField.dtype", false]], "dtype (sympy.polys.domains.domain.domain attribute)": [[218, "sympy.polys.domains.domain.Domain.dtype", false]], "dtype (sympy.polys.domains.expressiondomain attribute)": [[218, "sympy.polys.domains.ExpressionDomain.dtype", false]], "dtype (sympy.polys.domains.gaussiandomains.gaussianintegerring attribute)": [[218, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.dtype", false]], "dtype (sympy.polys.domains.gaussiandomains.gaussianrationalfield attribute)": [[218, "sympy.polys.domains.gaussiandomains.GaussianRationalField.dtype", false]], "dual (sympy.physics.quantum.state.statebase property)": [[190, "sympy.physics.quantum.state.StateBase.dual", false]], "dual() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.dual", false]], "dual_class() (sympy.physics.quantum.state.statebase class method)": [[190, "sympy.physics.quantum.state.StateBase.dual_class", false]], "duffingspring (class in sympy.physics.mechanics.actuator)": [[130, "sympy.physics.mechanics.actuator.DuffingSpring", false]], "dummy": [[15, "term-Dummy", true]], "dummy (class in sympy.core.symbol)": [[69, "sympy.core.symbol.Dummy", false]], "dummy_eq() (sympy.core.basic.basic method)": [[69, "sympy.core.basic.Basic.dummy_eq", false]], "dummywrapper (class in sympy.utilities.autowrap)": [[259, "sympy.utilities.autowrap.DummyWrapper", false]], "dump_c() (sympy.utilities.autowrap.ufuncifycodewrapper method)": [[259, "sympy.utilities.autowrap.UfuncifyCodeWrapper.dump_c", false]], "dump_c() (sympy.utilities.codegen.ccodegen method)": [[260, "sympy.utilities.codegen.CCodeGen.dump_c", false]], "dump_code() (sympy.utilities.codegen.codegen method)": [[260, "sympy.utilities.codegen.CodeGen.dump_code", false]], "dump_f95() (sympy.utilities.codegen.fcodegen method)": [[260, "sympy.utilities.codegen.FCodeGen.dump_f95", false]], "dump_h() (sympy.utilities.codegen.ccodegen method)": [[260, "sympy.utilities.codegen.CCodeGen.dump_h", false]], "dump_h() (sympy.utilities.codegen.fcodegen method)": [[260, "sympy.utilities.codegen.FCodeGen.dump_h", false]], "dump_jl() (sympy.utilities.codegen.juliacodegen method)": [[260, "sympy.utilities.codegen.JuliaCodeGen.dump_jl", false]], "dump_m() (sympy.utilities.codegen.octavecodegen method)": [[260, "sympy.utilities.codegen.OctaveCodeGen.dump_m", false]], "dump_pyx() (sympy.utilities.autowrap.cythoncodewrapper method)": [[259, "sympy.utilities.autowrap.CythonCodeWrapper.dump_pyx", false]], "dump_rs() (sympy.utilities.codegen.rustcodegen method)": [[260, "sympy.utilities.codegen.RustCodeGen.dump_rs", false]], "dup_content() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dup_content", false]], "dup_cyclotomic_p() (in module sympy.polys.factortools)": [[220, "sympy.polys.factortools.dup_cyclotomic_p", false]], "dup_decompose() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dup_decompose", false]], "dup_extract() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dup_extract", false]], "dup_gf_factor() (in module sympy.polys.factortools)": [[220, "sympy.polys.factortools.dup_gf_factor", false]], "dup_lshift() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dup_lshift", false]], "dup_mirror() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dup_mirror", false]], "dup_monic() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dup_monic", false]], "dup_primitive() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dup_primitive", false]], "dup_random() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dup_random", false]], "dup_real_imag() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dup_real_imag", false]], "dup_reverse() (in module sympy.polys.densebasic)": [[220, "sympy.polys.densebasic.dup_reverse", false]], "dup_rshift() (in module sympy.polys.densearith)": [[220, "sympy.polys.densearith.dup_rshift", false]], "dup_scale() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dup_scale", false]], "dup_shift() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dup_shift", false]], "dup_sign_variations() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dup_sign_variations", false]], "dup_transform() (in module sympy.polys.densetools)": [[220, "sympy.polys.densetools.dup_transform", false]], "dup_zz_cyclotomic_factor() (in module sympy.polys.factortools)": [[220, "sympy.polys.factortools.dup_zz_cyclotomic_factor", false]], "dup_zz_cyclotomic_poly() (in module sympy.polys.factortools)": [[220, "sympy.polys.factortools.dup_zz_cyclotomic_poly", false]], "dup_zz_factor() (in module sympy.polys.factortools)": [[220, "sympy.polys.factortools.dup_zz_factor", false]], "dup_zz_factor_sqf() (in module sympy.polys.factortools)": [[220, "sympy.polys.factortools.dup_zz_factor_sqf", false]], "dup_zz_hensel_lift() (in module sympy.polys.factortools)": [[220, "sympy.polys.factortools.dup_zz_hensel_lift", false]], "dup_zz_hensel_step() (in module sympy.polys.factortools)": [[220, "sympy.polys.factortools.dup_zz_hensel_step", false]], "dup_zz_irreducible_p() (in module sympy.polys.factortools)": [[220, "sympy.polys.factortools.dup_zz_irreducible_p", false]], "dup_zz_zassenhaus() (in module sympy.polys.factortools)": [[220, "sympy.polys.factortools.dup_zz_zassenhaus", false]], "dyadic (class in sympy.physics.vector.dyadic)": [[202, "sympy.physics.vector.dyadic.Dyadic", false]], "dyadic (class in sympy.vector.dyadic)": [[271, "sympy.vector.dyadic.Dyadic", false]], "dyn_implicit_mat (sympy.physics.mechanics.system.symbolicsystem property)": [[140, "sympy.physics.mechanics.system.SymbolicSystem.dyn_implicit_mat", false]], "dyn_implicit_rhs (sympy.physics.mechanics.system.symbolicsystem property)": [[140, "sympy.physics.mechanics.system.SymbolicSystem.dyn_implicit_rhs", false]], "dynamic_symbols() (sympy.physics.mechanics.system.symbolicsystem method)": [[140, "sympy.physics.mechanics.system.SymbolicSystem.dynamic_symbols", false]], "dynamicsymbols() (in module sympy.physics.vector)": [[204, "sympy.physics.vector.dynamicsymbols", false]], "dynkin_diagram() (sympy.liealgebras.root_system.rootsystem method)": [[98, "sympy.liealgebras.root_system.RootSystem.dynkin_diagram", false]], "dynkindiagram() (in module sympy.liealgebras.dynkin_diagram)": [[98, "sympy.liealgebras.dynkin_diagram.DynkinDiagram", false]], "e (sympy.physics.biomechanics.activation.activationbase property)": [[112, "sympy.physics.biomechanics.activation.ActivationBase.e", false]], "e (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.e", false]], "e() (in module sympy.stats)": [[247, "sympy.stats.E", false]], "e1() (in module sympy.functions.special.error_functions)": [[77, "sympy.functions.special.error_functions.E1", false]], "e_n() (in module sympy.physics.qho_1d)": [[168, "sympy.physics.qho_1d.E_n", false]], "e_nl() (in module sympy.physics.hydrogen)": [[127, "sympy.physics.hydrogen.E_nl", false]], "e_nl() (in module sympy.physics.sho)": [[193, "sympy.physics.sho.E_nl", false]], "e_nl_dirac() (in module sympy.physics.hydrogen)": [[127, "sympy.physics.hydrogen.E_nl_dirac", false]], "ec() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.EC", false]], "eccentricity (sympy.geometry.ellipse.ellipse property)": [[79, "sympy.geometry.ellipse.Ellipse.eccentricity", false]], "echelon_form() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.echelon_form", false]], "ecm() (in module sympy.ntheory.ecm)": [[109, "sympy.ntheory.ecm.ecm", false]], "edges (sympy.combinatorics.polyhedron.polyhedron property)": [[62, "sympy.combinatorics.polyhedron.Polyhedron.edges", false]], "edges() (sympy.combinatorics.prufer.prufer static method)": [[63, "sympy.combinatorics.prufer.Prufer.edges", false]], "egyptian_fraction() (in module sympy.ntheory.egyptian_fraction)": [[109, "sympy.ntheory.egyptian_fraction.egyptian_fraction", false]], "ei (class in sympy.functions.special.error_functions)": [[77, "sympy.functions.special.error_functions.Ei", false]], "eigenvals() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.eigenvals", false]], "eigenvects() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.eigenvects", false]], "eijk() (in module sympy.functions.special.tensor_functions)": [[77, "sympy.functions.special.tensor_functions.Eijk", false]], "eject() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.eject", false]], "eject() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.eject", false]], "elastic_modulus (sympy.physics.continuum_mechanics.beam.beam property)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.elastic_modulus", false]], "elem_poles() (sympy.physics.control.lti.transferfunctionmatrix method)": [[125, "sympy.physics.control.lti.TransferFunctionMatrix.elem_poles", false]], "elem_zeros() (sympy.physics.control.lti.transferfunctionmatrix method)": [[125, "sympy.physics.control.lti.TransferFunctionMatrix.elem_zeros", false]], "element (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.Element", false]], "element_from_alg_num() (sympy.polys.numberfields.modules.powerbasis method)": [[222, "sympy.polys.numberfields.modules.PowerBasis.element_from_alg_num", false]], "element_from_anp() (sympy.polys.numberfields.modules.powerbasis method)": [[222, "sympy.polys.numberfields.modules.PowerBasis.element_from_ANP", false]], "element_from_poly() (sympy.polys.numberfields.modules.powerbasis method)": [[222, "sympy.polys.numberfields.modules.PowerBasis.element_from_poly", false]], "element_from_rational() (sympy.polys.numberfields.modules.module method)": [[222, "sympy.polys.numberfields.modules.Module.element_from_rational", false]], "element_order() (sympy.liealgebras.weyl_group.weylgroup method)": [[98, "sympy.liealgebras.weyl_group.WeylGroup.element_order", false]], "elementary_col_op() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.elementary_col_op", false]], "elementary_row_op() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.elementary_row_op", false]], "elements (sympy.combinatorics.perm_groups.permutationgroup property)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.elements", false]], "elgamal_private_key() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.elgamal_private_key", false]], "elgamal_public_key() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.elgamal_public_key", false]], "eliminate_implications() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.eliminate_implications", false]], "ellipse (class in sympy.geometry.ellipse)": [[79, "sympy.geometry.ellipse.Ellipse", false]], "elliptic_e (class in sympy.functions.special.elliptic_integrals)": [[77, "sympy.functions.special.elliptic_integrals.elliptic_e", false]], "elliptic_f (class in sympy.functions.special.elliptic_integrals)": [[77, "sympy.functions.special.elliptic_integrals.elliptic_f", false]], "elliptic_k (class in sympy.functions.special.elliptic_integrals)": [[77, "sympy.functions.special.elliptic_integrals.elliptic_k", false]], "elliptic_pi (class in sympy.functions.special.elliptic_integrals)": [[77, "sympy.functions.special.elliptic_integrals.elliptic_pi", false]], "em() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.EM", false]], "emptyprinter() (sympy.printing.repr.reprprinter method)": [[227, "sympy.printing.repr.ReprPrinter.emptyPrinter", false]], "emptysequence (class in sympy.series.sequences)": [[233, "sympy.series.sequences.EmptySequence", false]], "emptyset (class in sympy.sets.sets)": [[235, "sympy.sets.sets.EmptySet", false]], "enable_automatic_int_sympification() (in module sympy.interactive.session)": [[97, "sympy.interactive.session.enable_automatic_int_sympification", false]], "enable_automatic_symbols() (in module sympy.interactive.session)": [[97, "sympy.interactive.session.enable_automatic_symbols", false]], "encipher_affine() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.encipher_affine", false]], "encipher_atbash() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.encipher_atbash", false]], "encipher_bifid() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.encipher_bifid", false]], "encipher_bifid5() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.encipher_bifid5", false]], "encipher_bifid6() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.encipher_bifid6", false]], "encipher_elgamal() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.encipher_elgamal", false]], "encipher_gm() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.encipher_gm", false]], "encipher_hill() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.encipher_hill", false]], "encipher_kid_rsa() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.encipher_kid_rsa", false]], "encipher_railfence() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.encipher_railfence", false]], "encipher_rot13() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.encipher_rot13", false]], "encipher_rsa() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.encipher_rsa", false]], "encipher_shift() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.encipher_shift", false]], "encipher_substitution() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.encipher_substitution", false]], "encipher_vigenere() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.encipher_vigenere", false]], "encloses() (sympy.geometry.entity.geometryentity method)": [[80, "sympy.geometry.entity.GeometryEntity.encloses", false]], "encloses_point() (sympy.geometry.ellipse.ellipse method)": [[79, "sympy.geometry.ellipse.Ellipse.encloses_point", false]], "encloses_point() (sympy.geometry.polygon.polygon method)": [[85, "sympy.geometry.polygon.Polygon.encloses_point", false]], "encloses_point() (sympy.geometry.polygon.regularpolygon method)": [[85, "sympy.geometry.polygon.RegularPolygon.encloses_point", false]], "encode_morse() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.encode_morse", false]], "end (sympy.sets.sets.interval property)": [[235, "sympy.sets.sets.Interval.end", false]], "endomorphism_ring() (sympy.polys.numberfields.modules.module method)": [[222, "sympy.polys.numberfields.modules.Module.endomorphism_ring", false]], "endomorphismring (class in sympy.polys.numberfields.modules)": [[222, "sympy.polys.numberfields.modules.EndomorphismRing", false]], "entropy() (in module sympy.stats)": [[247, "sympy.stats.entropy", false]], "enum_all() (sympy.utilities.enumerative.multisetpartitiontraverser method)": [[262, "sympy.utilities.enumerative.MultisetPartitionTraverser.enum_all", false]], "enum_large() (sympy.utilities.enumerative.multisetpartitiontraverser method)": [[262, "sympy.utilities.enumerative.MultisetPartitionTraverser.enum_large", false]], "enum_range() (sympy.utilities.enumerative.multisetpartitiontraverser method)": [[262, "sympy.utilities.enumerative.MultisetPartitionTraverser.enum_range", false]], "enum_small() (sympy.utilities.enumerative.multisetpartitiontraverser method)": [[262, "sympy.utilities.enumerative.MultisetPartitionTraverser.enum_small", false]], "enumerate_states() (in module sympy.physics.quantum.represent)": [[187, "sympy.physics.quantum.represent.enumerate_states", false]], "eom_method (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.eom_method", false]], "epath (class in sympy.simplify.epathtools)": [[239, "sympy.simplify.epathtools.EPath", false]], "epath() (in module sympy.simplify.epathtools)": [[239, "sympy.simplify.epathtools.epath", false]], "eps (sympy.codegen.ast.floattype property)": [[50, "sympy.codegen.ast.FloatType.eps", false]], "eq (in module sympy.core.relational)": [[69, "sympy.core.relational.Eq", false]], "eq() (sympy.polys.agca.modules.quotientmoduleelement method)": [[214, "sympy.polys.agca.modules.QuotientModuleElement.eq", false]], "eqs_to_matrix() (in module sympy.polys.solvers)": [[225, "sympy.polys.solvers.eqs_to_matrix", false]], "equal_valued() (in module sympy.core.numbers)": [[69, "sympy.core.numbers.equal_valued", false]], "equality (class in sympy.core.relational)": [[69, "sympy.core.relational.Equality", false]], "equals() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.equals", false]], "equals() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.equals", false]], "equals() (sympy.core.relational.relational method)": [[69, "sympy.core.relational.Relational.equals", false]], "equals() (sympy.geometry.line.line method)": [[82, "sympy.geometry.line.Line.equals", false]], "equals() (sympy.geometry.line.ray method)": [[82, "sympy.geometry.line.Ray.equals", false]], "equals() (sympy.geometry.line.segment method)": [[82, "sympy.geometry.line.Segment.equals", false]], "equals() (sympy.geometry.plane.plane method)": [[83, "sympy.geometry.plane.Plane.equals", false]], "equals() (sympy.geometry.point.point method)": [[84, "sympy.geometry.point.Point.equals", false]], "equals() (sympy.logic.boolalg.boolean method)": [[99, "sympy.logic.boolalg.Boolean.equals", false]], "equals() (sympy.matrices.expressions.matrixexpr method)": [[101, "sympy.matrices.expressions.MatrixExpr.equals", false]], "equation": [[15, "term-Equation", true]], "equation() (sympy.geometry.ellipse.circle method)": [[79, "sympy.geometry.ellipse.Circle.equation", false]], "equation() (sympy.geometry.ellipse.ellipse method)": [[79, "sympy.geometry.ellipse.Ellipse.equation", false]], "equation() (sympy.geometry.line.line2d method)": [[82, "sympy.geometry.line.Line2D.equation", false]], "equation() (sympy.geometry.line.line3d method)": [[82, "sympy.geometry.line.Line3D.equation", false]], "equation() (sympy.geometry.plane.plane method)": [[83, "sympy.geometry.plane.Plane.equation", false]], "equilibrium_length (sympy.physics.mechanics.actuator.linearspring property)": [[130, "sympy.physics.mechanics.actuator.LinearSpring.equilibrium_length", false]], "equiv() (sympy.polys.numberfields.modules.moduleelement method)": [[222, "sympy.polys.numberfields.modules.ModuleElement.equiv", false]], "equivalent (class in sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.Equivalent", false]], "equivalent() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.equivalent", false]], "erf (class in sympy.functions.special.error_functions)": [[77, "sympy.functions.special.error_functions.erf", false]], "erf2 (class in sympy.functions.special.error_functions)": [[77, "sympy.functions.special.error_functions.erf2", false]], "erf2inv (class in sympy.functions.special.error_functions)": [[77, "sympy.functions.special.error_functions.erf2inv", false]], "erfc (class in sympy.functions.special.error_functions)": [[77, "sympy.functions.special.error_functions.erfc", false]], "erfcinv (class in sympy.functions.special.error_functions)": [[77, "sympy.functions.special.error_functions.erfcinv", false]], "erfi (class in sympy.functions.special.error_functions)": [[77, "sympy.functions.special.error_functions.erfi", false]], "erfinv (class in sympy.functions.special.error_functions)": [[77, "sympy.functions.special.error_functions.erfinv", false]], "erlang() (in module sympy.stats)": [[247, "sympy.stats.Erlang", false]], "et() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.ET", false]], "eta (sympy.functions.special.hyper.hyper property)": [[77, "sympy.functions.special.hyper.hyper.eta", false]], "euler (class in sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.euler", false]], "euler_equations() (in module sympy.calculus.euler)": [[48, "sympy.calculus.euler.euler_equations", false]], "euler_maclaurin() (sympy.concrete.summations.sum method)": [[68, "sympy.concrete.summations.Sum.euler_maclaurin", false]], "euler_poly() (in module sympy.polys.appellseqs)": [[223, "sympy.polys.appellseqs.euler_poly", false]], "eulergamma (class in sympy.core.numbers)": [[69, "sympy.core.numbers.EulerGamma", false]], "eulerline (sympy.geometry.polygon.triangle property)": [[85, "sympy.geometry.polygon.Triangle.eulerline", false]], "eval() (sympy.assumptions.assume.predicate method)": [[44, "sympy.assumptions.assume.Predicate.eval", false]], "eval() (sympy.functions.elementary.piecewise.piecewise class method)": [[75, "sympy.functions.elementary.piecewise.Piecewise.eval", false]], "eval() (sympy.functions.special.delta_functions.diracdelta class method)": [[77, "sympy.functions.special.delta_functions.DiracDelta.eval", false]], "eval() (sympy.functions.special.delta_functions.heaviside class method)": [[77, "sympy.functions.special.delta_functions.Heaviside.eval", false]], "eval() (sympy.functions.special.singularity_functions.singularityfunction class method)": [[77, "sympy.functions.special.singularity_functions.SingularityFunction.eval", false]], "eval() (sympy.functions.special.tensor_functions.kroneckerdelta class method)": [[77, "sympy.functions.special.tensor_functions.KroneckerDelta.eval", false]], "eval() (sympy.physics.biomechanics.curve.fiberforcelengthactivedegroote2016 class method)": [[113, "sympy.physics.biomechanics.curve.FiberForceLengthActiveDeGroote2016.eval", false]], "eval() (sympy.physics.biomechanics.curve.fiberforcelengthpassivedegroote2016 class method)": [[113, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveDeGroote2016.eval", false]], "eval() (sympy.physics.biomechanics.curve.fiberforcelengthpassiveinversedegroote2016 class method)": [[113, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveInverseDeGroote2016.eval", false]], "eval() (sympy.physics.biomechanics.curve.fiberforcevelocitydegroote2016 class method)": [[113, "sympy.physics.biomechanics.curve.FiberForceVelocityDeGroote2016.eval", false]], "eval() (sympy.physics.biomechanics.curve.fiberforcevelocityinversedegroote2016 class method)": [[113, "sympy.physics.biomechanics.curve.FiberForceVelocityInverseDeGroote2016.eval", false]], "eval() (sympy.physics.biomechanics.curve.tendonforcelengthdegroote2016 class method)": [[113, "sympy.physics.biomechanics.curve.TendonForceLengthDeGroote2016.eval", false]], "eval() (sympy.physics.biomechanics.curve.tendonforcelengthinversedegroote2016 class method)": [[113, "sympy.physics.biomechanics.curve.TendonForceLengthInverseDeGroote2016.eval", false]], "eval() (sympy.physics.quantum.hilbert.directsumhilbertspace class method)": [[178, "sympy.physics.quantum.hilbert.DirectSumHilbertSpace.eval", false]], "eval() (sympy.physics.quantum.hilbert.tensorproducthilbertspace class method)": [[178, "sympy.physics.quantum.hilbert.TensorProductHilbertSpace.eval", false]], "eval() (sympy.physics.secondquant.commutator class method)": [[192, "sympy.physics.secondquant.Commutator.eval", false]], "eval() (sympy.physics.secondquant.dagger class method)": [[192, "sympy.physics.secondquant.Dagger.eval", false]], "eval() (sympy.physics.secondquant.kroneckerdelta class method)": [[192, "sympy.physics.secondquant.KroneckerDelta.eval", false]], "eval() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.eval", false]], "eval() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.eval", false]], "eval_approx() (sympy.polys.rootoftools.complexrootof method)": [[223, "sympy.polys.rootoftools.ComplexRootOf.eval_approx", false]], "eval_color_func() (sympy.plotting.series.baseseries method)": [[213, "sympy.plotting.series.BaseSeries.eval_color_func", false]], "eval_controls() (sympy.physics.quantum.gate.cgate method)": [[176, "sympy.physics.quantum.gate.CGate.eval_controls", false]], "eval_expr() (in module sympy.parsing.sympy_parser)": [[111, "sympy.parsing.sympy_parser.eval_expr", false]], "eval_frequency() (sympy.physics.control.lti.transferfunction method)": [[125, "sympy.physics.control.lti.TransferFunction.eval_frequency", false]], "eval_frequency() (sympy.physics.control.lti.transferfunctionmatrix method)": [[125, "sympy.physics.control.lti.TransferFunctionMatrix.eval_frequency", false]], "eval_levicivita() (in module sympy.functions.special.tensor_functions)": [[77, "sympy.functions.special.tensor_functions.eval_levicivita", false]], "eval_poly() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.eval_poly", false]], "eval_poly_mul() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.eval_poly_mul", false]], "eval_rational() (sympy.polys.rootoftools.complexrootof method)": [[223, "sympy.polys.rootoftools.ComplexRootOf.eval_rational", false]], "eval_zeta_function() (sympy.concrete.summations.sum method)": [[68, "sympy.concrete.summations.Sum.eval_zeta_function", false]], "evalf": [[15, "term-evalf", true]], "evalf() (sympy.core.evalf.evalfmixin method)": [[69, "sympy.core.evalf.EvalfMixin.evalf", false]], "evalf() (sympy.holonomic.holonomic.holonomicfunction method)": [[91, "sympy.holonomic.holonomic.HolonomicFunction.evalf", false]], "evalf() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.evalf", false]], "evalf() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.evalf", false]], "evalfmixin (class in sympy.core.evalf)": [[69, "sympy.core.evalf.EvalfMixin", false]], "evaluate": [[15, "term-Evaluate", true]], "evaluate_deltas() (in module sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.evaluate_deltas", false]], "evaluate_pauli_product() (in module sympy.physics.paulialgebra)": [[167, "sympy.physics.paulialgebra.evaluate_pauli_product", false]], "evaluationfailed (class in sympy.polys.polyerrors)": [[220, "sympy.polys.polyerrors.EvaluationFailed", false]], "even": [[69, "term-even", true]], "evenpredicate (class in sympy.assumptions.predicates.ntheory)": [[46, "sympy.assumptions.predicates.ntheory.EvenPredicate", false]], "evolute() (sympy.geometry.ellipse.ellipse method)": [[79, "sympy.geometry.ellipse.Ellipse.evolute", false]], "exactquotientfailed (class in sympy.polys.polyerrors)": [[220, "sympy.polys.polyerrors.ExactQuotientFailed", false]], "excenters (sympy.geometry.polygon.triangle property)": [[85, "sympy.geometry.polygon.Triangle.excenters", false]], "excitation (sympy.physics.biomechanics.activation.activationbase property)": [[112, "sympy.physics.biomechanics.activation.ActivationBase.excitation", false]], "excitation (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.excitation", false]], "exclude() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.exclude", false]], "exclude() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.exclude", false]], "exclusive (class in sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.Exclusive", false]], "exgaussian() (in module sympy.stats)": [[247, "sympy.stats.ExGaussian", false]], "exp (class in sympy.functions.elementary.exponential)": [[75, "sympy.functions.elementary.exponential.exp", false]], "exp() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.exp", false]], "exp() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.exp", false]], "exp1 (class in sympy.core.numbers)": [[69, "sympy.core.numbers.Exp1", false]], "exp2 (class in sympy.codegen.cfunctions)": [[50, "sympy.codegen.cfunctions.exp2", false]], "exp_polar (class in sympy.functions.elementary.exponential)": [[75, "sympy.functions.elementary.exponential.exp_polar", false]], "exp_re() (in module sympy.series.formal)": [[229, "sympy.series.formal.exp_re", false]], "expand() (in module sympy.core.function)": [[69, "sympy.core.function.expand", false]], "expand() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.expand", false]], "expand() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.expand", false]], "expand() (sympy.physics.control.lti.transferfunction method)": [[125, "sympy.physics.control.lti.TransferFunction.expand", false]], "expand() (sympy.physics.control.lti.transferfunctionmatrix method)": [[125, "sympy.physics.control.lti.TransferFunctionMatrix.expand", false]], "expand_complex() (in module sympy.core.function)": [[69, "sympy.core.function.expand_complex", false]], "expand_func() (in module sympy.core.function)": [[69, "sympy.core.function.expand_func", false]], "expand_log() (in module sympy.core.function)": [[69, "sympy.core.function.expand_log", false]], "expand_mul() (in module sympy.core.function)": [[69, "sympy.core.function.expand_mul", false]], "expand_multinomial() (in module sympy.core.function)": [[69, "sympy.core.function.expand_multinomial", false]], "expand_power_base() (in module sympy.core.function)": [[69, "sympy.core.function.expand_power_base", false]], "expand_power_exp() (in module sympy.core.function)": [[69, "sympy.core.function.expand_power_exp", false]], "expand_trig() (in module sympy.core.function)": [[69, "sympy.core.function.expand_trig", false]], "expectation (class in sympy.stats)": [[247, "sympy.stats.Expectation", false]], "expectation() (sympy.stats.bernoulliprocess method)": [[247, "sympy.stats.BernoulliProcess.expectation", false]], "expectationmatrix (class in sympy.stats)": [[247, "sympy.stats.ExpectationMatrix", false]], "expint (class in sympy.functions.special.error_functions)": [[77, "sympy.functions.special.error_functions.expint", false]], "expm1 (class in sympy.codegen.cfunctions)": [[50, "sympy.codegen.cfunctions.expm1", false]], "exponential() (in module sympy.stats)": [[247, "sympy.stats.Exponential", false]], "expr": [[15, "term-Expr", true]], "expr (class in sympy.core.expr)": [[69, "sympy.core.expr.Expr", false]], "expr (sympy.core.function.lambda property)": [[69, "sympy.core.function.Lambda.expr", false]], "expr (sympy.core.function.subs property)": [[69, "sympy.core.function.Subs.expr", false]], "expr (sympy.functions.elementary.piecewise.exprcondpair property)": [[75, "sympy.functions.elementary.piecewise.ExprCondPair.expr", false]], "expr (sympy.physics.quantum.operator.differentialoperator property)": [[181, "sympy.physics.quantum.operator.DifferentialOperator.expr", false]], "expr (sympy.physics.quantum.state.wavefunction property)": [[190, "sympy.physics.quantum.state.Wavefunction.expr", false]], "expr (sympy.plotting.series.baseseries property)": [[213, "sympy.plotting.series.BaseSeries.expr", false]], "expr_free_symbols (sympy.core.expr.expr property)": [[69, "sympy.core.expr.Expr.expr_free_symbols", false]], "expr_to_holonomic() (in module sympy.holonomic.holonomic)": [[88, "sympy.holonomic.holonomic.expr_to_holonomic", false]], "exprcondpair (class in sympy.functions.elementary.piecewise)": [[75, "sympy.functions.elementary.piecewise.ExprCondPair", false]], "express() (in module sympy.physics.vector.functions)": [[204, "sympy.physics.vector.functions.express", false]], "express() (in module sympy.vector)": [[274, "sympy.vector.express", false]], "express() (sympy.physics.vector.dyadic.dyadic method)": [[202, "sympy.physics.vector.dyadic.Dyadic.express", false]], "express() (sympy.physics.vector.vector.vector method)": [[202, "sympy.physics.vector.vector.Vector.express", false]], "expression": [[15, "term-Expression", true]], "expression tree": [[15, "term-Expression-Tree", true]], "expressiondomain (class in sympy.polys.domains)": [[218, "sympy.polys.domains.ExpressionDomain", false]], "expressiondomain.expression (class in sympy.polys.domains)": [[218, "sympy.polys.domains.ExpressionDomain.Expression", false]], "expressiondomain.expression (class in sympy.polys.domains.expressiondomain)": [[218, "sympy.polys.domains.expressiondomain.ExpressionDomain.Expression", false]], "exprwithintlimits (class in sympy.concrete.expr_with_intlimits)": [[68, "sympy.concrete.expr_with_intlimits.ExprWithIntLimits", false]], "exprwithlimits (class in sympy.concrete.expr_with_limits)": [[96, "sympy.concrete.expr_with_limits.ExprWithLimits", false]], "exquo() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.exquo", false]], "exquo() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.exquo", false]], "exquo() (sympy.polys.domains.field.field method)": [[218, "sympy.polys.domains.field.Field.exquo", false]], "exquo() (sympy.polys.domains.gmpyrationalfield method)": [[218, "sympy.polys.domains.GMPYRationalField.exquo", false]], "exquo() (sympy.polys.domains.rationalfield method)": [[218, "sympy.polys.domains.RationalField.exquo", false]], "exquo() (sympy.polys.domains.ring.ring method)": [[218, "sympy.polys.domains.ring.Ring.exquo", false]], "exquo() (sympy.polys.polyclasses.dmf method)": [[218, "sympy.polys.polyclasses.DMF.exquo", false]], "exquo() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.exquo", false]], "exquo() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.exquo", false]], "exquo_ground() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.exquo_ground", false]], "exquo_ground() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.exquo_ground", false]], "exradii (sympy.geometry.polygon.triangle property)": [[85, "sympy.geometry.polygon.Triangle.exradii", false]], "exsqrt() (sympy.polys.domains.complexfield method)": [[218, "sympy.polys.domains.ComplexField.exsqrt", false]], "exsqrt() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.exsqrt", false]], "exsqrt() (sympy.polys.domains.finitefield method)": [[218, "sympy.polys.domains.FiniteField.exsqrt", false]], "exsqrt() (sympy.polys.domains.integerring method)": [[218, "sympy.polys.domains.IntegerRing.exsqrt", false]], "exsqrt() (sympy.polys.domains.rationalfield method)": [[218, "sympy.polys.domains.RationalField.exsqrt", false]], "exsqrt() (sympy.polys.domains.realfield method)": [[218, "sympy.polys.domains.RealField.exsqrt", false]], "ext (sympy.polys.domains.algebraicfield attribute)": [[218, "sympy.polys.domains.AlgebraicField.ext", false]], "extend() (sympy.ntheory.generate.sieve method)": [[109, "sympy.ntheory.generate.Sieve.extend", false]], "extend() (sympy.physics.units.unitsystem.unitsystem method)": [[200, "sympy.physics.units.unitsystem.UnitSystem.extend", false]], "extend() (sympy.plotting.plot.plot method)": [[213, "sympy.plotting.plot.Plot.extend", false]], "extend_to_no() (sympy.ntheory.generate.sieve method)": [[109, "sympy.ntheory.generate.Sieve.extend_to_no", false]], "extended_negative": [[69, "term-extended_negative", true]], "extended_nonnegative": [[69, "term-extended_nonnegative", true]], "extended_nonpositive": [[69, "term-extended_nonpositive", true]], "extended_nonzero": [[69, "term-extended_nonzero", true]], "extended_positive": [[69, "term-extended_positive", true]], "extended_real": [[69, "term-extended_real", true]], "extendedrealpredicate (class in sympy.assumptions.predicates.sets)": [[46, "sympy.assumptions.predicates.sets.ExtendedRealPredicate", false]], "extension_velocity (sympy.physics.mechanics.pathway.linearpathway property)": [[138, "sympy.physics.mechanics.pathway.LinearPathway.extension_velocity", false]], "extension_velocity (sympy.physics.mechanics.pathway.obstaclesetpathway property)": [[138, "sympy.physics.mechanics.pathway.ObstacleSetPathway.extension_velocity", false]], "extension_velocity (sympy.physics.mechanics.pathway.pathwaybase property)": [[138, "sympy.physics.mechanics.pathway.PathwayBase.extension_velocity", false]], "extension_velocity (sympy.physics.mechanics.pathway.wrappingpathway property)": [[138, "sympy.physics.mechanics.pathway.WrappingPathway.extension_velocity", false]], "extensionelement (class in sympy.polys.agca.extensions)": [[214, "sympy.polys.agca.extensions.ExtensionElement", false]], "extent (class in sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.Extent", false]], "exterior_angle (sympy.geometry.polygon.regularpolygon property)": [[85, "sympy.geometry.polygon.RegularPolygon.exterior_angle", false]], "extract() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.extract", false]], "extract() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.extract", false]], "extract_additively() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.extract_additively", false]], "extract_branch_factor() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.extract_branch_factor", false]], "extract_fundamental_discriminant() (in module sympy.polys.numberfields.utilities)": [[222, "sympy.polys.numberfields.utilities.extract_fundamental_discriminant", false]], "extract_leading_order() (sympy.core.add.add method)": [[69, "sympy.core.add.Add.extract_leading_order", false]], "extract_multiplicatively() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.extract_multiplicatively", false]], "extract_slice() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.extract_slice", false]], "extract_type_tens() (in module sympy.physics.hep.gamma_matrices)": [[126, "sympy.physics.hep.gamma_matrices.extract_type_tens", false]], "extraneousfactors (class in sympy.polys.polyerrors)": [[220, "sympy.polys.polyerrors.ExtraneousFactors", false]], "eye() (in module sympy.matrices.dense)": [[105, "sympy.matrices.dense.eye", false]], "eye() (sympy.matrices.matrixbase.matrixbase class method)": [[105, "sympy.matrices.matrixbase.MatrixBase.eye", false]], "eye() (sympy.polys.matrices._dfm.dfm class method)": [[216, "sympy.polys.matrices._dfm.DFM.eye", false]], "eye() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.eye", false]], "eye() (sympy.polys.matrices.sdm.sdm class method)": [[216, "sympy.polys.matrices.sdm.SDM.eye", false]], "f (in module sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.F", false]], "f (sympy.physics.biomechanics.activation.activationbase property)": [[112, "sympy.physics.biomechanics.activation.ActivationBase.F", false]], "f (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[112, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.F", false]], "f (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[112, "sympy.physics.biomechanics.activation.ZerothOrderActivation.F", false]], "f (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.F", false]], "f2pycodewrapper (class in sympy.utilities.autowrap)": [[259, "sympy.utilities.autowrap.F2PyCodeWrapper", false]], "f_m_max (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.F_M_max", false]], "faces (sympy.combinatorics.polyhedron.polyhedron property)": [[62, "sympy.combinatorics.polyhedron.Polyhedron.faces", false]], "factor() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.factor", false]], "factor() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.factor", false]], "factor_list() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.factor_list", false]], "factor_list() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.factor_list", false]], "factor_list() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.factor_list", false]], "factor_list_include() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.factor_list_include", false]], "factor_list_include() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.factor_list_include", false]], "factor_terms() (in module sympy.core.exprtools)": [[69, "sympy.core.exprtools.factor_terms", false]], "factorable (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.Factorable", false]], "factorial (class in sympy.functions.combinatorial.factorials)": [[74, "sympy.functions.combinatorial.factorials.factorial", false]], "factorial() (sympy.polys.domains.fractionfield method)": [[218, "sympy.polys.domains.FractionField.factorial", false]], "factorial() (sympy.polys.domains.gmpyintegerring method)": [[218, "sympy.polys.domains.GMPYIntegerRing.factorial", false]], "factorial() (sympy.polys.domains.gmpyrationalfield method)": [[218, "sympy.polys.domains.GMPYRationalField.factorial", false]], "factorial() (sympy.polys.domains.integerring method)": [[218, "sympy.polys.domains.IntegerRing.factorial", false]], "factorial() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.factorial", false]], "factorial2 (class in sympy.functions.combinatorial.factorials)": [[74, "sympy.functions.combinatorial.factorials.factorial2", false]], "factorial_moment() (in module sympy.stats)": [[247, "sympy.stats.factorial_moment", false]], "factorial_notation() (in module sympy.parsing.sympy_parser)": [[111, "sympy.parsing.sympy_parser.factorial_notation", false]], "factoring_visitor() (in module sympy.utilities.enumerative)": [[262, "sympy.utilities.enumerative.factoring_visitor", false]], "factorint() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.factorint", false]], "factorrat() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.factorrat", false]], "factors() (sympy.core.numbers.rational method)": [[69, "sympy.core.numbers.Rational.factors", false]], "failed (sympy.testing.runtests.sympytestresults attribute)": [[258, "sympy.testing.runtests.SymPyTestResults.failed", false]], "fallingfactorial (class in sympy.functions.combinatorial.factorials)": [[74, "sympy.functions.combinatorial.factorials.FallingFactorial", false]], "fbra (in module sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.FBra", false]], "fcode() (in module sympy.printing.fortran)": [[227, "sympy.printing.fortran.fcode", false]], "fcodegen (class in sympy.utilities.codegen)": [[260, "sympy.utilities.codegen.FCodeGen", false]], "fcodeprinter (class in sympy.printing.fortran)": [[227, "sympy.printing.fortran.FCodePrinter", false]], "fd (in module sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.Fd", false]], "fdiff() (sympy.codegen.cfunctions.cbrt method)": [[50, "sympy.codegen.cfunctions.Cbrt.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.exp2 method)": [[50, "sympy.codegen.cfunctions.exp2.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.expm1 method)": [[50, "sympy.codegen.cfunctions.expm1.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.fma method)": [[50, "sympy.codegen.cfunctions.fma.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.hypot method)": [[50, "sympy.codegen.cfunctions.hypot.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.log10 method)": [[50, "sympy.codegen.cfunctions.log10.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.log1p method)": [[50, "sympy.codegen.cfunctions.log1p.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.log2 method)": [[50, "sympy.codegen.cfunctions.log2.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.sqrt method)": [[50, "sympy.codegen.cfunctions.Sqrt.fdiff", false]], "fdiff() (sympy.core.function.function method)": [[69, "sympy.core.function.Function.fdiff", false]], "fdiff() (sympy.functions.elementary.complexes.abs method)": [[75, "sympy.functions.elementary.complexes.Abs.fdiff", false]], "fdiff() (sympy.functions.elementary.exponential.exp method)": [[75, "sympy.functions.elementary.exponential.exp.fdiff", false]], "fdiff() (sympy.functions.elementary.exponential.lambertw method)": [[75, "sympy.functions.elementary.exponential.LambertW.fdiff", false]], "fdiff() (sympy.functions.elementary.exponential.log method)": [[75, "sympy.functions.elementary.exponential.log.fdiff", false]], "fdiff() (sympy.functions.elementary.hyperbolic.csch method)": [[75, "sympy.functions.elementary.hyperbolic.csch.fdiff", false]], "fdiff() (sympy.functions.elementary.hyperbolic.sinh method)": [[75, "sympy.functions.elementary.hyperbolic.sinh.fdiff", false]], "fdiff() (sympy.functions.special.delta_functions.diracdelta method)": [[77, "sympy.functions.special.delta_functions.DiracDelta.fdiff", false]], "fdiff() (sympy.functions.special.delta_functions.heaviside method)": [[77, "sympy.functions.special.delta_functions.Heaviside.fdiff", false]], "fdiff() (sympy.functions.special.singularity_functions.singularityfunction method)": [[77, "sympy.functions.special.singularity_functions.SingularityFunction.fdiff", false]], "fdiff() (sympy.physics.biomechanics.curve.fiberforcelengthactivedegroote2016 method)": [[113, "sympy.physics.biomechanics.curve.FiberForceLengthActiveDeGroote2016.fdiff", false]], "fdiff() (sympy.physics.biomechanics.curve.fiberforcelengthpassivedegroote2016 method)": [[113, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveDeGroote2016.fdiff", false]], "fdiff() (sympy.physics.biomechanics.curve.fiberforcelengthpassiveinversedegroote2016 method)": [[113, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveInverseDeGroote2016.fdiff", false]], "fdiff() (sympy.physics.biomechanics.curve.fiberforcevelocitydegroote2016 method)": [[113, "sympy.physics.biomechanics.curve.FiberForceVelocityDeGroote2016.fdiff", false]], "fdiff() (sympy.physics.biomechanics.curve.fiberforcevelocityinversedegroote2016 method)": [[113, "sympy.physics.biomechanics.curve.FiberForceVelocityInverseDeGroote2016.fdiff", false]], "fdiff() (sympy.physics.biomechanics.curve.tendonforcelengthdegroote2016 method)": [[113, "sympy.physics.biomechanics.curve.TendonForceLengthDeGroote2016.fdiff", false]], "fdiff() (sympy.physics.biomechanics.curve.tendonforcelengthinversedegroote2016 method)": [[113, "sympy.physics.biomechanics.curve.TendonForceLengthInverseDeGroote2016.fdiff", false]], "fdistribution() (in module sympy.stats)": [[247, "sympy.stats.FDistribution", false]], "feedback (class in sympy.physics.control.lti)": [[125, "sympy.physics.control.lti.Feedback", false]], "fft() (in module sympy.discrete.transforms)": [[72, "sympy.discrete.transforms.fft", false]], "fglm() (sympy.polys.polytools.groebnerbasis method)": [[223, "sympy.polys.polytools.GroebnerBasis.fglm", false]], "fiber_damping_coefficient (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.fiber_damping_coefficient", false]], "fiberforcelengthactivedegroote2016 (class in sympy.physics.biomechanics.curve)": [[113, "sympy.physics.biomechanics.curve.FiberForceLengthActiveDeGroote2016", false]], "fiberforcelengthpassivedegroote2016 (class in sympy.physics.biomechanics.curve)": [[113, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveDeGroote2016", false]], "fiberforcelengthpassiveinversedegroote2016 (class in sympy.physics.biomechanics.curve)": [[113, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveInverseDeGroote2016", false]], "fiberforcevelocitydegroote2016 (class in sympy.physics.biomechanics.curve)": [[113, "sympy.physics.biomechanics.curve.FiberForceVelocityDeGroote2016", false]], "fiberforcevelocityinversedegroote2016 (class in sympy.physics.biomechanics.curve)": [[113, "sympy.physics.biomechanics.curve.FiberForceVelocityInverseDeGroote2016", false]], "fibonacci (class in sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.fibonacci", false]], "field (class in sympy.polys.domains.field)": [[218, "sympy.polys.domains.field.Field", false]], "field() (in module sympy.polys.fields)": [[218, "sympy.polys.fields.field", false]], "field_element() (sympy.core.numbers.algebraicnumber method)": [[69, "sympy.core.numbers.AlgebraicNumber.field_element", false]], "field_isomorphism() (in module sympy.polys.numberfields.subfield)": [[222, "sympy.polys.numberfields.subfield.field_isomorphism", false]], "fill (sympy.plotting.plot.plot property)": [[213, "sympy.plotting.plot.Plot.fill", false]], "filldedent() (in module sympy.utilities.misc)": [[268, "sympy.utilities.misc.filldedent", false]], "filter_symbols() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.filter_symbols", false]], "find() (sympy.core.basic.basic method)": [[69, "sympy.core.basic.Basic.find", false]], "find_carmichael_numbers_in_range() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.find_carmichael_numbers_in_range", false]], "find_dn() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.find_DN", false]], "find_dynamicsymbols() (in module sympy.physics.mechanics)": [[132, "sympy.physics.mechanics.find_dynamicsymbols", false]], "find_dynamicsymbols() (in module sympy.physics.mechanics.functions)": [[137, "sympy.physics.mechanics.functions.find_dynamicsymbols", false]], "find_executable() (in module sympy.utilities.misc)": [[268, "sympy.utilities.misc.find_executable", false]], "find_first_n_carmichaels() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.find_first_n_carmichaels", false]], "find_linear_recurrence() (sympy.series.sequences.seqbase method)": [[233, "sympy.series.sequences.SeqBase.find_linear_recurrence", false]], "find_min_poly() (in module sympy.polys.numberfields.modules)": [[222, "sympy.polys.numberfields.modules.find_min_poly", false]], "find_transitive_subgroups_of_s6() (in module sympy.combinatorics.galois)": [[52, "sympy.combinatorics.galois.find_transitive_subgroups_of_S6", false]], "finite": [[69, "term-finite", true]], "finite_diff_weights() (in module sympy.calculus.finite_diff)": [[48, "sympy.calculus.finite_diff.finite_diff_weights", false]], "finitedomain (class in sympy.stats.frv)": [[247, "sympy.stats.frv.FiniteDomain", false]], "finitefield (class in sympy.polys.domains)": [[218, "sympy.polys.domains.FiniteField", false]], "finiteformalpowerseries (class in sympy.series.formal)": [[229, "sympy.series.formal.FiniteFormalPowerSeries", false]], "finitepredicate (class in sympy.assumptions.predicates.calculus)": [[46, "sympy.assumptions.predicates.calculus.FinitePredicate", false]], "finitepspace (class in sympy.stats.frv)": [[247, "sympy.stats.frv.FinitePSpace", false]], "finiterv() (in module sympy.stats)": [[247, "sympy.stats.FiniteRV", false]], "finiteset (class in sympy.sets.sets)": [[235, "sympy.sets.sets.FiniteSet", false]], "first_moment_of_area() (sympy.geometry.polygon.polygon method)": [[85, "sympy.geometry.polygon.Polygon.first_moment_of_area", false]], "firstexact (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.FirstExact", false]], "firstlinear (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.FirstLinear", false]], "firstorderactivationdegroote2016 (class in sympy.physics.biomechanics.activation)": [[112, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016", false]], "fisherz() (in module sympy.stats)": [[247, "sympy.stats.FisherZ", false]], "fixed_point (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.fixed_point", false]], "fixed_row_vector() (sympy.stats.discretemarkovchain method)": [[247, "sympy.stats.DiscreteMarkovChain.fixed_row_vector", false]], "fixedbosonicbasis (class in sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.FixedBosonicBasis", false]], "fket (in module sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.FKet", false]], "flagerror (class in sympy.polys.polyerrors)": [[220, "sympy.polys.polyerrors.FlagError", false]], "flatmirror (class in sympy.physics.optics.gaussopt)": [[161, "sympy.physics.optics.gaussopt.FlatMirror", false]], "flatrefraction (class in sympy.physics.optics.gaussopt)": [[161, "sympy.physics.optics.gaussopt.FlatRefraction", false]], "flatten() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.flatten", false]], "flatten() (sympy.categories.compositemorphism method)": [[49, "sympy.categories.CompositeMorphism.flatten", false]], "flatten() (sympy.core.add.add class method)": [[69, "sympy.core.add.Add.flatten", false]], "flatten() (sympy.core.mul.mul class method)": [[69, "sympy.core.mul.Mul.flatten", false]], "float (class in sympy.core.numbers)": [[69, "sympy.core.numbers.Float", false]], "floatbasetype (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.FloatBaseType", false]], "floattype (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.FloatType", false]], "floor (class in sympy.functions.elementary.integers)": [[75, "sympy.functions.elementary.integers.floor", false]], "fma (class in sympy.codegen.cfunctions)": [[50, "sympy.codegen.cfunctions.fma", false]], "foci (sympy.geometry.ellipse.ellipse property)": [[79, "sympy.geometry.ellipse.Ellipse.foci", false]], "fockspace (class in sympy.physics.quantum.hilbert)": [[178, "sympy.physics.quantum.hilbert.FockSpace", false]], "fockstate (class in sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.FockState", false]], "fockstatebosonbra (class in sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.FockStateBosonBra", false]], "fockstatebosonket (class in sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.FockStateBosonKet", false]], "fockstatebra (class in sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.FockStateBra", false]], "fockstatefermionbra (class in sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.FockStateFermionBra", false]], "fockstatefermionket (class in sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.FockStateFermionKet", false]], "fockstateket (class in sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.FockStateKet", false]], "focus_distance (sympy.geometry.ellipse.ellipse property)": [[79, "sympy.geometry.ellipse.Ellipse.focus_distance", false]], "for (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.For", false]], "force (class in sympy.physics.mechanics.loads)": [[137, "sympy.physics.mechanics.loads.Force", false]], "force (sympy.physics.mechanics.actuator.duffingspring property)": [[130, "sympy.physics.mechanics.actuator.DuffingSpring.force", false]], "force (sympy.physics.mechanics.actuator.forceactuator property)": [[130, "sympy.physics.mechanics.actuator.ForceActuator.force", false]], "force (sympy.physics.mechanics.actuator.lineardamper property)": [[130, "sympy.physics.mechanics.actuator.LinearDamper.force", false]], "force (sympy.physics.mechanics.actuator.linearspring property)": [[130, "sympy.physics.mechanics.actuator.LinearSpring.force", false]], "forceactuator (class in sympy.physics.mechanics.actuator)": [[130, "sympy.physics.mechanics.actuator.ForceActuator", false]], "forcing (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[131, "sympy.physics.mechanics.jointsmethod.JointsMethod.forcing", false]], "forcing (sympy.physics.mechanics.kane.kanesmethod property)": [[135, "sympy.physics.mechanics.kane.KanesMethod.forcing", false]], "forcing (sympy.physics.mechanics.lagrange.lagrangesmethod property)": [[135, "sympy.physics.mechanics.lagrange.LagrangesMethod.forcing", false]], "forcing (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.forcing", false]], "forcing_full (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[131, "sympy.physics.mechanics.jointsmethod.JointsMethod.forcing_full", false]], "forcing_full (sympy.physics.mechanics.kane.kanesmethod property)": [[135, "sympy.physics.mechanics.kane.KanesMethod.forcing_full", false]], "forcing_full (sympy.physics.mechanics.lagrange.lagrangesmethod property)": [[135, "sympy.physics.mechanics.lagrange.LagrangesMethod.forcing_full", false]], "forcing_full (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.forcing_full", false]], "forcing_kin (sympy.physics.mechanics.kane.kanesmethod property)": [[135, "sympy.physics.mechanics.kane.KanesMethod.forcing_kin", false]], "form_eoms() (sympy.physics.mechanics.jointsmethod.jointsmethod method)": [[131, "sympy.physics.mechanics.jointsmethod.JointsMethod.form_eoms", false]], "form_eoms() (sympy.physics.mechanics.system.system method)": [[140, "sympy.physics.mechanics.system.System.form_eoms", false]], "form_lagranges_equations() (sympy.physics.mechanics.lagrange.lagrangesmethod method)": [[135, "sympy.physics.mechanics.lagrange.LagrangesMethod.form_lagranges_equations", false]], "formalpowerseries (class in sympy.series.formal)": [[229, "sympy.series.formal.FormalPowerSeries", false]], "formalpowerseriescompose (class in sympy.series.formal)": [[229, "sympy.series.formal.FormalPowerSeriesCompose", false]], "formalpowerseriesinverse (class in sympy.series.formal)": [[229, "sympy.series.formal.FormalPowerSeriesInverse", false]], "formalpowerseriesproduct (class in sympy.series.formal)": [[229, "sympy.series.formal.FormalPowerSeriesProduct", false]], "fortranreturn (class in sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.FortranReturn", false]], "forward_diff() (in module sympy.physics.control.lti)": [[125, "sympy.physics.control.lti.forward_diff", false]], "four_group() (in module sympy.combinatorics.galois)": [[52, "sympy.combinatorics.galois.four_group", false]], "fourier_series() (in module sympy.series.fourier)": [[230, "sympy.series.fourier.fourier_series", false]], "fourier_series() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.fourier_series", false]], "fourier_transform() (in module sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.fourier_transform", false]], "fourierseries (class in sympy.series.fourier)": [[230, "sympy.series.fourier.FourierSeries", false]], "fouriertransform (class in sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.FourierTransform", false]], "fps() (in module sympy.series.formal)": [[229, "sympy.series.formal.fps", false]], "fps() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.fps", false]], "frac (class in sympy.functions.elementary.integers)": [[75, "sympy.functions.elementary.integers.frac", false]], "frac (in module sympy.printing.pretty.pretty_symbology)": [[227, "sympy.printing.pretty.pretty_symbology.frac", false]], "frac_field() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.frac_field", false]], "frac_unify() (sympy.polys.polyclasses.dmf method)": [[218, "sympy.polys.polyclasses.DMF.frac_unify", false]], "fracelement (class in sympy.polys.fields)": [[218, "sympy.polys.fields.FracElement", false]], "fracfield (class in sympy.polys.fields)": [[218, "sympy.polys.fields.FracField", false]], "fraction() (in module sympy.simplify.radsimp)": [[239, "sympy.simplify.radsimp.fraction", false]], "fractionfield (class in sympy.polys.domains)": [[218, "sympy.polys.domains.FractionField", false]], "frame (sympy.physics.mechanics.body.body property)": [[131, "sympy.physics.mechanics.body.Body.frame", false]], "frame (sympy.physics.mechanics.rigidbody.rigidbody property)": [[137, "sympy.physics.mechanics.rigidbody.RigidBody.frame", false]], "frame (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.frame", false]], "frechet() (in module sympy.stats)": [[247, "sympy.stats.Frechet", false]], "free symbols": [[15, "term-Free-symbols", true]], "free_dynamicsymbols() (sympy.physics.vector.vector.vector method)": [[202, "sympy.physics.vector.vector.Vector.free_dynamicsymbols", false]], "free_module() (sympy.polys.domains.ring.ring method)": [[218, "sympy.polys.domains.ring.Ring.free_module", false]], "free_symbols (sympy.concrete.expr_with_limits.exprwithlimits property)": [[96, "sympy.concrete.expr_with_limits.ExprWithLimits.free_symbols", false]], "free_symbols (sympy.core.basic.basic property)": [[69, "sympy.core.basic.Basic.free_symbols", false]], "free_symbols (sympy.geometry.curve.curve property)": [[78, "sympy.geometry.curve.Curve.free_symbols", false]], "free_symbols (sympy.integrals.integrals.integral property)": [[96, "sympy.integrals.integrals.Integral.free_symbols", false]], "free_symbols (sympy.matrices.matrixbase.matrixbase property)": [[105, "sympy.matrices.matrixbase.MatrixBase.free_symbols", false]], "free_symbols (sympy.physics.quantum.operator.differentialoperator property)": [[181, "sympy.physics.quantum.operator.DifferentialOperator.free_symbols", false]], "free_symbols (sympy.physics.units.quantities.quantity property)": [[199, "sympy.physics.units.quantities.Quantity.free_symbols", false]], "free_symbols (sympy.polys.polytools.poly property)": [[223, "sympy.polys.polytools.Poly.free_symbols", false]], "free_symbols (sympy.polys.polytools.purepoly property)": [[223, "sympy.polys.polytools.PurePoly.free_symbols", false]], "free_symbols (sympy.series.sequences.seqbase property)": [[233, "sympy.series.sequences.SeqBase.free_symbols", false]], "free_symbols() (sympy.physics.vector.vector.vector method)": [[202, "sympy.physics.vector.vector.Vector.free_symbols", false]], "free_symbols_in_domain (sympy.polys.polytools.poly property)": [[223, "sympy.polys.polytools.Poly.free_symbols_in_domain", false]], "freemodule (class in sympy.polys.agca.modules)": [[214, "sympy.polys.agca.modules.FreeModule", false]], "freemoduleelement (class in sympy.polys.agca.modules)": [[214, "sympy.polys.agca.modules.FreeModuleElement", false]], "freespace (class in sympy.physics.optics.gaussopt)": [[161, "sympy.physics.optics.gaussopt.FreeSpace", false]], "frequency (sympy.physics.optics.waves.twave property)": [[166, "sympy.physics.optics.waves.TWave.frequency", false]], "fresnel_coefficients() (in module sympy.physics.optics.utils)": [[165, "sympy.physics.optics.utils.fresnel_coefficients", false]], "fresnelc (class in sympy.functions.special.error_functions)": [[77, "sympy.functions.special.error_functions.fresnelc", false]], "fresnelintegral (class in sympy.functions.special.error_functions)": [[77, "sympy.functions.special.error_functions.FresnelIntegral", false]], "fresnels (class in sympy.functions.special.error_functions)": [[77, "sympy.functions.special.error_functions.fresnels", false]], "from_algebraicfield() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.expressiondomain method)": [[218, "sympy.polys.domains.ExpressionDomain.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.fractionfield method)": [[218, "sympy.polys.domains.FractionField.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.integerring method)": [[218, "sympy.polys.domains.IntegerRing.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.rationalfield method)": [[218, "sympy.polys.domains.RationalField.from_AlgebraicField", false]], "from_axis_angle() (sympy.algebras.quaternion class method)": [[42, "sympy.algebras.Quaternion.from_axis_angle", false]], "from_coeff_lists() (sympy.physics.control.lti.transferfunction class method)": [[125, "sympy.physics.control.lti.TransferFunction.from_coeff_lists", false]], "from_complexfield() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.from_ComplexField", false]], "from_complexfield() (sympy.polys.domains.expressiondomain method)": [[218, "sympy.polys.domains.ExpressionDomain.from_ComplexField", false]], "from_complexfield() (sympy.polys.domains.fractionfield method)": [[218, "sympy.polys.domains.FractionField.from_ComplexField", false]], "from_complexfield() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianRationalField.from_ComplexField", false]], "from_complexfield() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.from_ComplexField", false]], "from_ddm() (sympy.polys.matrices._dfm.dfm class method)": [[216, "sympy.polys.matrices._dfm.DFM.from_ddm", false]], "from_ddm() (sympy.polys.matrices.sdm.sdm class method)": [[216, "sympy.polys.matrices.sdm.SDM.from_ddm", false]], "from_dict() (sympy.polys.polytools.poly class method)": [[223, "sympy.polys.polytools.Poly.from_dict", false]], "from_dict_sympy() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_dict_sympy", false]], "from_dod() (sympy.polys.matrices._dfm.dfm class method)": [[216, "sympy.polys.matrices._dfm.DFM.from_dod", false]], "from_dod() (sympy.polys.matrices.ddm.ddm class method)": [[216, "sympy.polys.matrices.ddm.DDM.from_dod", false]], "from_dod() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_dod", false]], "from_dod() (sympy.polys.matrices.sdm.sdm class method)": [[216, "sympy.polys.matrices.sdm.SDM.from_dod", false]], "from_dod_like() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_dod_like", false]], "from_dok() (sympy.polys.matrices.ddm.ddm class method)": [[216, "sympy.polys.matrices.ddm.DDM.from_dok", false]], "from_dok() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_dok", false]], "from_dok() (sympy.polys.matrices.sdm.sdm class method)": [[216, "sympy.polys.matrices.sdm.SDM.from_dok", false]], "from_euler() (sympy.algebras.quaternion class method)": [[42, "sympy.algebras.Quaternion.from_euler", false]], "from_ex() (sympy.polys.domains.integerring method)": [[218, "sympy.polys.domains.IntegerRing.from_EX", false]], "from_expr() (sympy.codegen.ast.type class method)": [[50, "sympy.codegen.ast.Type.from_expr", false]], "from_expr() (sympy.polys.polytools.poly class method)": [[223, "sympy.polys.polytools.Poly.from_expr", false]], "from_expressiondomain() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.from_ExpressionDomain", false]], "from_expressiondomain() (sympy.polys.domains.expressiondomain method)": [[218, "sympy.polys.domains.ExpressionDomain.from_ExpressionDomain", false]], "from_expressionrawdomain() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.from_ExpressionRawDomain", false]], "from_ff() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.from_FF", false]], "from_ff() (sympy.polys.domains.finitefield method)": [[218, "sympy.polys.domains.FiniteField.from_FF", false]], "from_ff() (sympy.polys.domains.integerring method)": [[218, "sympy.polys.domains.IntegerRing.from_FF", false]], "from_ff_gmpy() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.from_FF_gmpy", false]], "from_ff_gmpy() (sympy.polys.domains.finitefield method)": [[218, "sympy.polys.domains.FiniteField.from_FF_gmpy", false]], "from_ff_gmpy() (sympy.polys.domains.gmpyintegerring method)": [[218, "sympy.polys.domains.GMPYIntegerRing.from_FF_gmpy", false]], "from_ff_gmpy() (sympy.polys.domains.integerring method)": [[218, "sympy.polys.domains.IntegerRing.from_FF_gmpy", false]], "from_ff_python() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.from_FF_python", false]], "from_ff_python() (sympy.polys.domains.finitefield method)": [[218, "sympy.polys.domains.FiniteField.from_FF_python", false]], "from_ff_python() (sympy.polys.domains.gmpyintegerring method)": [[218, "sympy.polys.domains.GMPYIntegerRing.from_FF_python", false]], "from_ff_python() (sympy.polys.domains.integerring method)": [[218, "sympy.polys.domains.IntegerRing.from_FF_python", false]], "from_flat_nz() (sympy.polys.matrices._dfm.dfm class method)": [[216, "sympy.polys.matrices._dfm.DFM.from_flat_nz", false]], "from_flat_nz() (sympy.polys.matrices.ddm.ddm class method)": [[216, "sympy.polys.matrices.ddm.DDM.from_flat_nz", false]], "from_flat_nz() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_flat_nz", false]], "from_flat_nz() (sympy.polys.matrices.sdm.sdm class method)": [[216, "sympy.polys.matrices.sdm.SDM.from_flat_nz", false]], "from_fractionfield() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.from_FractionField", false]], "from_fractionfield() (sympy.polys.domains.expressiondomain method)": [[218, "sympy.polys.domains.ExpressionDomain.from_FractionField", false]], "from_fractionfield() (sympy.polys.domains.fractionfield method)": [[218, "sympy.polys.domains.FractionField.from_FractionField", false]], "from_fractionfield() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.from_FractionField", false]], "from_gaussianintegerring() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.from_GaussianIntegerRing", false]], "from_gaussianintegerring() (sympy.polys.domains.expressiondomain method)": [[218, "sympy.polys.domains.ExpressionDomain.from_GaussianIntegerRing", false]], "from_gaussianintegerring() (sympy.polys.domains.fractionfield method)": [[218, "sympy.polys.domains.FractionField.from_GaussianIntegerRing", false]], "from_gaussianintegerring() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.from_GaussianIntegerRing", false]], "from_gaussianintegerring() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianRationalField.from_GaussianIntegerRing", false]], "from_gaussianintegerring() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.from_GaussianIntegerRing", false]], "from_gaussianrationalfield() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.expressiondomain method)": [[218, "sympy.polys.domains.ExpressionDomain.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.fractionfield method)": [[218, "sympy.polys.domains.FractionField.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianRationalField.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.gmpyrationalfield method)": [[218, "sympy.polys.domains.GMPYRationalField.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.rationalfield method)": [[218, "sympy.polys.domains.RationalField.from_GaussianRationalField", false]], "from_globalpolynomialring() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.from_GlobalPolynomialRing", false]], "from_globalpolynomialring() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.from_GlobalPolynomialRing", false]], "from_hyper() (in module sympy.holonomic.holonomic)": [[88, "sympy.holonomic.holonomic.from_hyper", false]], "from_index_summation() (sympy.matrices.expressions.matrixexpr static method)": [[101, "sympy.matrices.expressions.MatrixExpr.from_index_summation", false]], "from_inertia_scalars() (sympy.physics.mechanics.inertia.inertia class method)": [[137, "sympy.physics.mechanics.inertia.Inertia.from_inertia_scalars", false]], "from_int_list() (sympy.polys.numberfields.modules.moduleelement class method)": [[222, "sympy.polys.numberfields.modules.ModuleElement.from_int_list", false]], "from_inversion_vector() (sympy.combinatorics.permutations.permutation class method)": [[61, "sympy.combinatorics.permutations.Permutation.from_inversion_vector", false]], "from_list() (sympy.polys.matrices._dfm.dfm class method)": [[216, "sympy.polys.matrices._dfm.DFM.from_list", false]], "from_list() (sympy.polys.matrices.ddm.ddm class method)": [[216, "sympy.polys.matrices.ddm.DDM.from_list", false]], "from_list() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_list", false]], "from_list() (sympy.polys.matrices.sdm.sdm class method)": [[216, "sympy.polys.matrices.sdm.SDM.from_list", false]], "from_list() (sympy.polys.polyclasses.dmp class method)": [[218, "sympy.polys.polyclasses.DMP.from_list", false]], "from_list() (sympy.polys.polytools.poly class method)": [[223, "sympy.polys.polytools.Poly.from_list", false]], "from_list_flat() (sympy.polys.matrices._dfm.dfm class method)": [[216, "sympy.polys.matrices._dfm.DFM.from_list_flat", false]], "from_list_flat() (sympy.polys.matrices.ddm.ddm class method)": [[216, "sympy.polys.matrices.ddm.DDM.from_list_flat", false]], "from_list_flat() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_list_flat", false]], "from_list_flat() (sympy.polys.matrices.sdm.sdm class method)": [[216, "sympy.polys.matrices.sdm.SDM.from_list_flat", false]], "from_list_sympy() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_list_sympy", false]], "from_matrix() (sympy.algebras.quaternion class method)": [[42, "sympy.algebras.Quaternion.from_Matrix", false]], "from_matrix() (sympy.physics.control.lti.transferfunctionmatrix class method)": [[125, "sympy.physics.control.lti.TransferFunctionMatrix.from_Matrix", false]], "from_matrix() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_Matrix", false]], "from_meijerg() (in module sympy.holonomic.holonomic)": [[88, "sympy.holonomic.holonomic.from_meijerg", false]], "from_monogenicfiniteextension() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.from_MonogenicFiniteExtension", false]], "from_newtonian() (sympy.physics.mechanics.system.system class method)": [[140, "sympy.physics.mechanics.system.System.from_newtonian", false]], "from_poly() (sympy.polys.polytools.poly class method)": [[223, "sympy.polys.polytools.Poly.from_poly", false]], "from_polynomialring() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.from_PolynomialRing", false]], "from_polynomialring() (sympy.polys.domains.expressiondomain method)": [[218, "sympy.polys.domains.ExpressionDomain.from_PolynomialRing", false]], "from_polynomialring() (sympy.polys.domains.fractionfield method)": [[218, "sympy.polys.domains.FractionField.from_PolynomialRing", false]], "from_polynomialring() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.from_PolynomialRing", false]], "from_qq() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.from_QQ", false]], "from_qq() (sympy.polys.domains.expressiondomain method)": [[218, "sympy.polys.domains.ExpressionDomain.from_QQ", false]], "from_qq() (sympy.polys.domains.finitefield method)": [[218, "sympy.polys.domains.FiniteField.from_QQ", false]], "from_qq() (sympy.polys.domains.fractionfield method)": [[218, "sympy.polys.domains.FractionField.from_QQ", false]], "from_qq() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_QQ", false]], "from_qq() (sympy.polys.domains.gmpyintegerring method)": [[218, "sympy.polys.domains.GMPYIntegerRing.from_QQ", false]], "from_qq() (sympy.polys.domains.integerring method)": [[218, "sympy.polys.domains.IntegerRing.from_QQ", false]], "from_qq() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.from_QQ", false]], "from_qq() (sympy.polys.domains.rationalfield method)": [[218, "sympy.polys.domains.RationalField.from_QQ", false]], "from_qq_gmpy() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.expressiondomain method)": [[218, "sympy.polys.domains.ExpressionDomain.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.finitefield method)": [[218, "sympy.polys.domains.FiniteField.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.fractionfield method)": [[218, "sympy.polys.domains.FractionField.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.gmpyintegerring method)": [[218, "sympy.polys.domains.GMPYIntegerRing.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.gmpyrationalfield method)": [[218, "sympy.polys.domains.GMPYRationalField.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.integerring method)": [[218, "sympy.polys.domains.IntegerRing.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.rationalfield method)": [[218, "sympy.polys.domains.RationalField.from_QQ_gmpy", false]], "from_qq_python() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.expressiondomain method)": [[218, "sympy.polys.domains.ExpressionDomain.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.finitefield method)": [[218, "sympy.polys.domains.FiniteField.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.fractionfield method)": [[218, "sympy.polys.domains.FractionField.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.gmpyintegerring method)": [[218, "sympy.polys.domains.GMPYIntegerRing.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.gmpyrationalfield method)": [[218, "sympy.polys.domains.GMPYRationalField.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.integerring method)": [[218, "sympy.polys.domains.IntegerRing.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.rationalfield method)": [[218, "sympy.polys.domains.RationalField.from_QQ_python", false]], "from_rational_expression() (sympy.physics.control.lti.transferfunction class method)": [[125, "sympy.physics.control.lti.TransferFunction.from_rational_expression", false]], "from_real() (sympy.sets.fancysets.complexregion class method)": [[235, "sympy.sets.fancysets.ComplexRegion.from_real", false]], "from_realfield() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.from_RealField", false]], "from_realfield() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.from_RealField", false]], "from_realfield() (sympy.polys.domains.expressiondomain method)": [[218, "sympy.polys.domains.ExpressionDomain.from_RealField", false]], "from_realfield() (sympy.polys.domains.finitefield method)": [[218, "sympy.polys.domains.FiniteField.from_RealField", false]], "from_realfield() (sympy.polys.domains.fractionfield method)": [[218, "sympy.polys.domains.FractionField.from_RealField", false]], "from_realfield() (sympy.polys.domains.gmpyintegerring method)": [[218, "sympy.polys.domains.GMPYIntegerRing.from_RealField", false]], "from_realfield() (sympy.polys.domains.gmpyrationalfield method)": [[218, "sympy.polys.domains.GMPYRationalField.from_RealField", false]], "from_realfield() (sympy.polys.domains.integerring method)": [[218, "sympy.polys.domains.IntegerRing.from_RealField", false]], "from_realfield() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.from_RealField", false]], "from_realfield() (sympy.polys.domains.rationalfield method)": [[218, "sympy.polys.domains.RationalField.from_RealField", false]], "from_rep() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_rep", false]], "from_rgs() (sympy.combinatorics.partitions.partition class method)": [[58, "sympy.combinatorics.partitions.Partition.from_rgs", false]], "from_rotation_matrix() (sympy.algebras.quaternion class method)": [[42, "sympy.algebras.Quaternion.from_rotation_matrix", false]], "from_sequence() (sympy.combinatorics.permutations.permutation class method)": [[61, "sympy.combinatorics.permutations.Permutation.from_sequence", false]], "from_sympy() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.from_sympy", false]], "from_sympy() (sympy.polys.domains.complexfield method)": [[218, "sympy.polys.domains.ComplexField.from_sympy", false]], "from_sympy() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.from_sympy", false]], "from_sympy() (sympy.polys.domains.expressiondomain method)": [[218, "sympy.polys.domains.ExpressionDomain.from_sympy", false]], "from_sympy() (sympy.polys.domains.finitefield method)": [[218, "sympy.polys.domains.FiniteField.from_sympy", false]], "from_sympy() (sympy.polys.domains.fractionfield method)": [[218, "sympy.polys.domains.FractionField.from_sympy", false]], "from_sympy() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_sympy", false]], "from_sympy() (sympy.polys.domains.gmpyintegerring method)": [[218, "sympy.polys.domains.GMPYIntegerRing.from_sympy", false]], "from_sympy() (sympy.polys.domains.gmpyrationalfield method)": [[218, "sympy.polys.domains.GMPYRationalField.from_sympy", false]], "from_sympy() (sympy.polys.domains.integerring method)": [[218, "sympy.polys.domains.IntegerRing.from_sympy", false]], "from_sympy() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.from_sympy", false]], "from_sympy() (sympy.polys.domains.rationalfield method)": [[218, "sympy.polys.domains.RationalField.from_sympy", false]], "from_sympy() (sympy.polys.domains.realfield method)": [[218, "sympy.polys.domains.RealField.from_sympy", false]], "from_sympy_list() (sympy.polys.polyclasses.dmp class method)": [[218, "sympy.polys.polyclasses.DMP.from_sympy_list", false]], "from_zpk() (sympy.physics.control.lti.transferfunction class method)": [[125, "sympy.physics.control.lti.TransferFunction.from_zpk", false]], "from_zz() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.from_ZZ", false]], "from_zz() (sympy.polys.domains.expressiondomain method)": [[218, "sympy.polys.domains.ExpressionDomain.from_ZZ", false]], "from_zz() (sympy.polys.domains.finitefield method)": [[218, "sympy.polys.domains.FiniteField.from_ZZ", false]], "from_zz() (sympy.polys.domains.fractionfield method)": [[218, "sympy.polys.domains.FractionField.from_ZZ", false]], "from_zz() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_ZZ", false]], "from_zz() (sympy.polys.domains.integerring method)": [[218, "sympy.polys.domains.IntegerRing.from_ZZ", false]], "from_zz() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.from_ZZ", false]], "from_zz() (sympy.polys.domains.rationalfield method)": [[218, "sympy.polys.domains.RationalField.from_ZZ", false]], "from_zz_gmpy() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.expressiondomain method)": [[218, "sympy.polys.domains.ExpressionDomain.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.finitefield method)": [[218, "sympy.polys.domains.FiniteField.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.fractionfield method)": [[218, "sympy.polys.domains.FractionField.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.gmpyintegerring method)": [[218, "sympy.polys.domains.GMPYIntegerRing.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.gmpyrationalfield method)": [[218, "sympy.polys.domains.GMPYRationalField.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.integerring method)": [[218, "sympy.polys.domains.IntegerRing.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.rationalfield method)": [[218, "sympy.polys.domains.RationalField.from_ZZ_gmpy", false]], "from_zz_python() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.expressiondomain method)": [[218, "sympy.polys.domains.ExpressionDomain.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.finitefield method)": [[218, "sympy.polys.domains.FiniteField.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.fractionfield method)": [[218, "sympy.polys.domains.FractionField.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.gmpyintegerring method)": [[218, "sympy.polys.domains.GMPYIntegerRing.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.gmpyrationalfield method)": [[218, "sympy.polys.domains.GMPYRationalField.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.integerring method)": [[218, "sympy.polys.domains.IntegerRing.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.rationalfield method)": [[218, "sympy.polys.domains.RationalField.from_ZZ_python", false]], "fromiter() (sympy.core.basic.basic class method)": [[69, "sympy.core.basic.Basic.fromiter", false]], "fu() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.fu", false]], "full_cyclic_form (sympy.combinatorics.permutations.permutation property)": [[61, "sympy.combinatorics.permutations.Permutation.full_cyclic_form", false]], "fullrankpredicate (class in sympy.assumptions.predicates.matrices)": [[46, "sympy.assumptions.predicates.matrices.FullRankPredicate", false]], "fully_symmetric() (sympy.tensor.tensor.tensorsymmetry class method)": [[253, "sympy.tensor.tensor.TensorSymmetry.fully_symmetric", false]], "func": [[15, "term-func", true]], "func (sympy.core.basic.basic property)": [[69, "sympy.core.basic.Basic.func", false]], "func (sympy.physics.vector.dyadic.dyadic property)": [[202, "sympy.physics.vector.dyadic.Dyadic.func", false]], "func (sympy.physics.vector.vector.vector property)": [[202, "sympy.physics.vector.vector.Vector.func", false]], "func_field_modgcd() (in module sympy.polys.modulargcd)": [[220, "sympy.polys.modulargcd.func_field_modgcd", false]], "func_name() (in module sympy.utilities.misc)": [[268, "sympy.utilities.misc.func_name", false]], "funcminusoneoptim (class in sympy.codegen.rewriting)": [[50, "sympy.codegen.rewriting.FuncMinusOneOptim", false]], "function": [[15, "term-Function", true]], "function (class in sympy.core.function)": [[69, "sympy.core.function.Function", false]], "function (class)": [[15, "term-Function-class", true]], "function (sympy.assumptions.assume.appliedpredicate property)": [[44, "sympy.assumptions.assume.AppliedPredicate.function", false]], "function (sympy.concrete.expr_with_limits.exprwithlimits property)": [[96, "sympy.concrete.expr_with_limits.ExprWithLimits.function", false]], "function (sympy.integrals.transforms.integraltransform property)": [[96, "sympy.integrals.transforms.IntegralTransform.function", false]], "function (sympy.physics.quantum.operator.differentialoperator property)": [[181, "sympy.physics.quantum.operator.DifferentialOperator.function", false]], "function (sympy.series.formal.formalpowerseriescompose property)": [[229, "sympy.series.formal.FormalPowerSeriesCompose.function", false]], "function (sympy.series.formal.formalpowerseriesinverse property)": [[229, "sympy.series.formal.FormalPowerSeriesInverse.function", false]], "function (sympy.series.formal.formalpowerseriesproduct property)": [[229, "sympy.series.formal.FormalPowerSeriesProduct.function", false]], "function_exponentiation() (in module sympy.parsing.sympy_parser)": [[111, "sympy.parsing.sympy_parser.function_exponentiation", false]], "function_range() (in module sympy.calculus.util)": [[48, "sympy.calculus.util.function_range", false]], "function_variable (sympy.integrals.transforms.integraltransform property)": [[96, "sympy.integrals.transforms.IntegralTransform.function_variable", false]], "functioncall (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.FunctionCall", false]], "functionclass (class in sympy.core.function)": [[69, "sympy.core.function.FunctionClass", false]], "functiondefinition (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.FunctionDefinition", false]], "functionmatrix (class in sympy.matrices.expressions)": [[101, "sympy.matrices.expressions.FunctionMatrix", false]], "functionprototype (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.FunctionPrototype", false]], "functions (sympy.geometry.curve.curve property)": [[78, "sympy.geometry.curve.Curve.functions", false]], "fundamental_matrix() (sympy.stats.discretemarkovchain method)": [[247, "sympy.stats.DiscreteMarkovChain.fundamental_matrix", false]], "fwht() (in module sympy.discrete.transforms)": [[72, "sympy.discrete.transforms.fwht", false]], "g() (in module sympy.printing.pretty.pretty_symbology)": [[227, "sympy.printing.pretty.pretty_symbology.G", false], [227, "sympy.printing.pretty.pretty_symbology.g", false]], "g18() (in module sympy.combinatorics.galois)": [[52, "sympy.combinatorics.galois.G18", false]], "g36m() (in module sympy.combinatorics.galois)": [[52, "sympy.combinatorics.galois.G36m", false]], "g36p() (in module sympy.combinatorics.galois)": [[52, "sympy.combinatorics.galois.G36p", false]], "g72() (in module sympy.combinatorics.galois)": [[52, "sympy.combinatorics.galois.G72", false]], "galois_group() (in module sympy.polys.numberfields.galoisgroups)": [[222, "sympy.polys.numberfields.galoisgroups.galois_group", false]], "galois_group() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.galois_group", false]], "galois_group() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.galois_group", false]], "gamma (class in sympy.functions.special.gamma_functions)": [[77, "sympy.functions.special.gamma_functions.gamma", false]], "gamma() (in module sympy.stats)": [[247, "sympy.stats.Gamma", false]], "gamma_trace() (in module sympy.physics.hep.gamma_matrices)": [[126, "sympy.physics.hep.gamma_matrices.gamma_trace", false]], "gammainverse() (in module sympy.stats)": [[247, "sympy.stats.GammaInverse", false]], "gammaprocess (class in sympy.stats)": [[247, "sympy.stats.GammaProcess", false]], "gammasimp() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.gammasimp", false]], "gate (class in sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.Gate", false]], "gate (sympy.physics.quantum.gate.cgate property)": [[176, "sympy.physics.quantum.gate.CGate.gate", false]], "gate (sympy.physics.quantum.gate.cnotgate property)": [[176, "sympy.physics.quantum.gate.CNotGate.gate", false]], "gate_simp() (in module sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.gate_simp", false]], "gate_sort() (in module sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.gate_sort", false]], "gateinputcount() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.gateinputcount", false]], "gaunt() (in module sympy.physics.wigner)": [[212, "sympy.physics.wigner.gaunt", false]], "gauss_chebyshev_t() (in module sympy.integrals.quadrature)": [[96, "sympy.integrals.quadrature.gauss_chebyshev_t", false]], "gauss_chebyshev_u() (in module sympy.integrals.quadrature)": [[96, "sympy.integrals.quadrature.gauss_chebyshev_u", false]], "gauss_gen_laguerre() (in module sympy.integrals.quadrature)": [[96, "sympy.integrals.quadrature.gauss_gen_laguerre", false]], "gauss_hermite() (in module sympy.integrals.quadrature)": [[96, "sympy.integrals.quadrature.gauss_hermite", false]], "gauss_jacobi() (in module sympy.integrals.quadrature)": [[96, "sympy.integrals.quadrature.gauss_jacobi", false]], "gauss_jordan_solve() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.gauss_jordan_solve", false]], "gauss_laguerre() (in module sympy.integrals.quadrature)": [[96, "sympy.integrals.quadrature.gauss_laguerre", false]], "gauss_legendre() (in module sympy.integrals.quadrature)": [[96, "sympy.integrals.quadrature.gauss_legendre", false]], "gauss_lobatto() (in module sympy.integrals.quadrature)": [[96, "sympy.integrals.quadrature.gauss_lobatto", false]], "gaussian_conj() (in module sympy.physics.optics.gaussopt)": [[161, "sympy.physics.optics.gaussopt.gaussian_conj", false]], "gaussian_reduce() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.gaussian_reduce", false]], "gaussiandomain (class in sympy.polys.domains.gaussiandomains)": [[218, "sympy.polys.domains.gaussiandomains.GaussianDomain", false]], "gaussianelement (class in sympy.polys.domains.gaussiandomains)": [[218, "sympy.polys.domains.gaussiandomains.GaussianElement", false]], "gaussianinteger (class in sympy.polys.domains.gaussiandomains)": [[218, "sympy.polys.domains.gaussiandomains.GaussianInteger", false]], "gaussianintegerring (class in sympy.polys.domains.gaussiandomains)": [[218, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing", false]], "gaussianrational (class in sympy.polys.domains.gaussiandomains)": [[218, "sympy.polys.domains.gaussiandomains.GaussianRational", false]], "gaussianrationalfield (class in sympy.polys.domains.gaussiandomains)": [[218, "sympy.polys.domains.gaussiandomains.GaussianRationalField", false]], "gbt() (in module sympy.physics.control.lti)": [[125, "sympy.physics.control.lti.gbt", false]], "gcd() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.gcd", false]], "gcd() (sympy.core.numbers.number method)": [[69, "sympy.core.numbers.Number.gcd", false]], "gcd() (sympy.polys.domains.complexfield method)": [[218, "sympy.polys.domains.ComplexField.gcd", false]], "gcd() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.gcd", false]], "gcd() (sympy.polys.domains.field.field method)": [[218, "sympy.polys.domains.field.Field.gcd", false]], "gcd() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.gcd", false]], "gcd() (sympy.polys.domains.gmpyintegerring method)": [[218, "sympy.polys.domains.GMPYIntegerRing.gcd", false]], "gcd() (sympy.polys.domains.integerring method)": [[218, "sympy.polys.domains.IntegerRing.gcd", false]], "gcd() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.gcd", false]], "gcd() (sympy.polys.domains.realfield method)": [[218, "sympy.polys.domains.RealField.gcd", false]], "gcd() (sympy.polys.monomials.monomial method)": [[223, "sympy.polys.monomials.Monomial.gcd", false]], "gcd() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.gcd", false]], "gcd() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.gcd", false]], "gcd_list() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.gcd_list", false]], "gcd_terms() (in module sympy.core.exprtools)": [[69, "sympy.core.exprtools.gcd_terms", false]], "gcdex() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.gcdex", false]], "gcdex() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.gcdex", false]], "gcdex() (sympy.polys.domains.gmpyintegerring method)": [[218, "sympy.polys.domains.GMPYIntegerRing.gcdex", false]], "gcdex() (sympy.polys.domains.integerring method)": [[218, "sympy.polys.domains.IntegerRing.gcdex", false]], "gcdex() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.gcdex", false]], "gcdex() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.gcdex", false]], "gcdex() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.gcdex", false]], "ge (in module sympy.core.relational)": [[69, "sympy.core.relational.Ge", false]], "gegenbauer (class in sympy.functions.special.polynomials)": [[77, "sympy.functions.special.polynomials.gegenbauer", false]], "gegenbauer_poly() (in module sympy.polys.orthopolys)": [[223, "sympy.polys.orthopolys.gegenbauer_poly", false]], "gen (sympy.polys.polytools.poly property)": [[223, "sympy.polys.polytools.Poly.gen", false]], "gen (sympy.series.sequences.seqbase property)": [[233, "sympy.series.sequences.SeqBase.gen", false]], "generalizedmultivariateloggamma() (in module sympy.stats)": [[247, "sympy.stats.GeneralizedMultivariateLogGamma", false]], "generalizedmultivariateloggammaomega() (in module sympy.stats)": [[247, "sympy.stats.GeneralizedMultivariateLogGammaOmega", false]], "generalpythagorean (class in sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.GeneralPythagorean", false]], "generalsumofevenpowers (class in sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.GeneralSumOfEvenPowers", false]], "generalsumofsquares (class in sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.GeneralSumOfSquares", false]], "generate() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.generate", false]], "generate_bell() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.generate_bell", false]], "generate_derangements() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.generate_derangements", false]], "generate_dimino() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.generate_dimino", false]], "generate_gray() (sympy.combinatorics.graycode.graycode method)": [[53, "sympy.combinatorics.graycode.GrayCode.generate_gray", false]], "generate_involutions() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.generate_involutions", false]], "generate_oriented_forest() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.generate_oriented_forest", false]], "generate_schreier_sims() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.generate_schreier_sims", false]], "generator (sympy.polys.numberfields.modules.powerbasiselement property)": [[222, "sympy.polys.numberfields.modules.PowerBasisElement.generator", false]], "generator_product() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.generator_product", false]], "generators (sympy.combinatorics.perm_groups.permutationgroup property)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.generators", false]], "generators() (sympy.liealgebras.weyl_group.weylgroup method)": [[98, "sympy.liealgebras.weyl_group.WeylGroup.generators", false]], "generatorserror (class in sympy.polys.polyerrors)": [[220, "sympy.polys.polyerrors.GeneratorsError", false]], "generatorsneeded (class in sympy.polys.polyerrors)": [[220, "sympy.polys.polyerrors.GeneratorsNeeded", false]], "genocchi (class in sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.genocchi", false]], "genocchi_poly() (in module sympy.polys.appellseqs)": [[223, "sympy.polys.appellseqs.genocchi_poly", false]], "geodesic_end_vectors() (sympy.physics.mechanics.wrapping_geometry.wrappingcylinder method)": [[141, "sympy.physics.mechanics.wrapping_geometry.WrappingCylinder.geodesic_end_vectors", false]], "geodesic_end_vectors() (sympy.physics.mechanics.wrapping_geometry.wrappinggeometrybase method)": [[141, "sympy.physics.mechanics.wrapping_geometry.WrappingGeometryBase.geodesic_end_vectors", false]], "geodesic_end_vectors() (sympy.physics.mechanics.wrapping_geometry.wrappingsphere method)": [[141, "sympy.physics.mechanics.wrapping_geometry.WrappingSphere.geodesic_end_vectors", false]], "geodesic_length() (sympy.physics.mechanics.wrapping_geometry.wrappingcylinder method)": [[141, "sympy.physics.mechanics.wrapping_geometry.WrappingCylinder.geodesic_length", false]], "geodesic_length() (sympy.physics.mechanics.wrapping_geometry.wrappinggeometrybase method)": [[141, "sympy.physics.mechanics.wrapping_geometry.WrappingGeometryBase.geodesic_length", false]], "geodesic_length() (sympy.physics.mechanics.wrapping_geometry.wrappingsphere method)": [[141, "sympy.physics.mechanics.wrapping_geometry.WrappingSphere.geodesic_length", false]], "geometric() (in module sympy.stats)": [[247, "sympy.stats.Geometric", false]], "geometric_conj_ab() (in module sympy.physics.optics.gaussopt)": [[161, "sympy.physics.optics.gaussopt.geometric_conj_ab", false]], "geometric_conj_af() (in module sympy.physics.optics.gaussopt)": [[161, "sympy.physics.optics.gaussopt.geometric_conj_af", false]], "geometric_conj_bf() (in module sympy.physics.optics.gaussopt)": [[161, "sympy.physics.optics.gaussopt.geometric_conj_bf", false]], "geometricray (class in sympy.physics.optics.gaussopt)": [[161, "sympy.physics.optics.gaussopt.GeometricRay", false]], "geometry (sympy.physics.mechanics.pathway.wrappingpathway property)": [[138, "sympy.physics.mechanics.pathway.WrappingPathway.geometry", false]], "geometryentity (class in sympy.geometry.entity)": [[80, "sympy.geometry.entity.GeometryEntity", false]], "get() (sympy.core.containers.dict method)": [[69, "sympy.core.containers.Dict.get", false]], "get_adjacency_distance() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.get_adjacency_distance", false]], "get_adjacency_matrix() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.get_adjacency_matrix", false]], "get_basis() (in module sympy.physics.quantum.represent)": [[187, "sympy.physics.quantum.represent.get_basis", false]], "get_body() (sympy.physics.mechanics.system.system method)": [[140, "sympy.physics.mechanics.system.System.get_body", false]], "get_class() (in module sympy.utilities.source)": [[269, "sympy.utilities.source.get_class", false]], "get_comm() (sympy.tensor.tensor._tensormanager method)": [[253, "sympy.tensor.tensor._TensorManager.get_comm", false]], "get_contraction_structure() (in module sympy.tensor.index_methods)": [[251, "sympy.tensor.index_methods.get_contraction_structure", false]], "get_data() (sympy.plotting.series.baseseries method)": [[213, "sympy.plotting.series.BaseSeries.get_data", false]], "get_data() (sympy.plotting.series.implicitseries method)": [[213, "sympy.plotting.series.ImplicitSeries.get_data", false]], "get_data() (sympy.plotting.series.line2dbaseseries method)": [[213, "sympy.plotting.series.Line2DBaseSeries.get_data", false]], "get_data() (sympy.plotting.series.parametricsurfaceseries method)": [[213, "sympy.plotting.series.ParametricSurfaceSeries.get_data", false]], "get_data() (sympy.plotting.series.surfaceover2drangeseries method)": [[213, "sympy.plotting.series.SurfaceOver2DRangeSeries.get_data", false]], "get_default_datatype() (in module sympy.utilities.codegen)": [[260, "sympy.utilities.codegen.get_default_datatype", false]], "get_diag_blocks() (sympy.matrices.expressions.blockmatrix.blockdiagmatrix method)": [[101, "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix.get_diag_blocks", false]], "get_diag_blocks() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.get_diag_blocks", false]], "get_domain() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.get_domain", false]], "get_exact() (sympy.polys.domains.complexfield method)": [[218, "sympy.polys.domains.ComplexField.get_exact", false]], "get_exact() (sympy.polys.domains.compositedomain.compositedomain method)": [[218, "sympy.polys.domains.compositedomain.CompositeDomain.get_exact", false]], "get_exact() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.get_exact", false]], "get_exact() (sympy.polys.domains.realfield method)": [[218, "sympy.polys.domains.RealField.get_exact", false]], "get_field() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.get_field", false]], "get_field() (sympy.polys.domains.expressiondomain method)": [[218, "sympy.polys.domains.ExpressionDomain.get_field", false]], "get_field() (sympy.polys.domains.field.field method)": [[218, "sympy.polys.domains.field.Field.get_field", false]], "get_field() (sympy.polys.domains.finitefield method)": [[218, "sympy.polys.domains.FiniteField.get_field", false]], "get_field() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.get_field", false]], "get_field() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianRationalField.get_field", false]], "get_field() (sympy.polys.domains.integerring method)": [[218, "sympy.polys.domains.IntegerRing.get_field", false]], "get_field() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.get_field", false]], "get_free_indices() (sympy.tensor.tensor.tensmul method)": [[253, "sympy.tensor.tensor.TensMul.get_free_indices", false]], "get_gen_sol_from_part_sol() (in module sympy.solvers.ode.riccati)": [[243, "sympy.solvers.ode.riccati.get_gen_sol_from_part_sol", false]], "get_indices() (in module sympy.tensor.index_methods)": [[251, "sympy.tensor.index_methods.get_indices", false]], "get_indices() (sympy.tensor.tensor.tensmul method)": [[253, "sympy.tensor.tensor.TensMul.get_indices", false]], "get_interface() (sympy.utilities.codegen.fcodegen method)": [[260, "sympy.utilities.codegen.FCodeGen.get_interface", false]], "get_joint() (sympy.physics.mechanics.system.system method)": [[140, "sympy.physics.mechanics.system.System.get_joint", false]], "get_label() (sympy.plotting.series.baseseries method)": [[213, "sympy.plotting.series.BaseSeries.get_label", false]], "get_label() (sympy.plotting.series.implicitseries method)": [[213, "sympy.plotting.series.ImplicitSeries.get_label", false]], "get_matrix() (sympy.tensor.tensor.tensexpr method)": [[253, "sympy.tensor.tensor.TensExpr.get_matrix", false]], "get_meshes() (sympy.plotting.series.parametricsurfaceseries method)": [[213, "sympy.plotting.series.ParametricSurfaceSeries.get_meshes", false]], "get_meshes() (sympy.plotting.series.surfaceover2drangeseries method)": [[213, "sympy.plotting.series.SurfaceOver2DRangeSeries.get_meshes", false]], "get_mod_func() (in module sympy.utilities.source)": [[269, "sympy.utilities.source.get_mod_func", false]], "get_modulus() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.get_modulus", false]], "get_motion_params() (in module sympy.physics.vector.functions)": [[206, "sympy.physics.vector.functions.get_motion_params", false]], "get_num_denom() (in module sympy.polys.numberfields.utilities)": [[222, "sympy.polys.numberfields.utilities.get_num_denom", false]], "get_period() (sympy.functions.special.hyper.meijerg method)": [[77, "sympy.functions.special.hyper.meijerg.get_period", false]], "get_permuted() (sympy.physics.secondquant.permutationoperator method)": [[192, "sympy.physics.secondquant.PermutationOperator.get_permuted", false]], "get_points() (sympy.plotting.series.lineover1drangeseries method)": [[213, "sympy.plotting.series.LineOver1DRangeSeries.get_points", false]], "get_positional_distance() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.get_positional_distance", false]], "get_precedence_distance() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.get_precedence_distance", false]], "get_precedence_matrix() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.get_precedence_matrix", false]], "get_prototype() (sympy.utilities.codegen.ccodegen method)": [[260, "sympy.utilities.codegen.CCodeGen.get_prototype", false]], "get_prototype() (sympy.utilities.codegen.rustcodegen method)": [[260, "sympy.utilities.codegen.RustCodeGen.get_prototype", false]], "get_ring() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.get_ring", false]], "get_ring() (sympy.polys.domains.complexfield method)": [[218, "sympy.polys.domains.ComplexField.get_ring", false]], "get_ring() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.get_ring", false]], "get_ring() (sympy.polys.domains.expressiondomain method)": [[218, "sympy.polys.domains.ExpressionDomain.get_ring", false]], "get_ring() (sympy.polys.domains.field.field method)": [[218, "sympy.polys.domains.field.Field.get_ring", false]], "get_ring() (sympy.polys.domains.fractionfield method)": [[218, "sympy.polys.domains.FractionField.get_ring", false]], "get_ring() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.get_ring", false]], "get_ring() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianRationalField.get_ring", false]], "get_ring() (sympy.polys.domains.gmpyrationalfield method)": [[218, "sympy.polys.domains.GMPYRationalField.get_ring", false]], "get_ring() (sympy.polys.domains.rationalfield method)": [[218, "sympy.polys.domains.RationalField.get_ring", false]], "get_ring() (sympy.polys.domains.realfield method)": [[218, "sympy.polys.domains.RealField.get_ring", false]], "get_ring() (sympy.polys.domains.ring.ring method)": [[218, "sympy.polys.domains.ring.Ring.get_ring", false]], "get_segments() (sympy.plotting.plot.matplotlibbackend static method)": [[213, "sympy.plotting.plot.MatplotlibBackend.get_segments", false]], "get_subno() (sympy.physics.secondquant.no method)": [[192, "sympy.physics.secondquant.NO.get_subNO", false]], "get_subset_from_bitstring() (sympy.combinatorics.graycode method)": [[53, "sympy.combinatorics.graycode.get_subset_from_bitstring", false]], "get_symmetric_group_sgs() (in module sympy.combinatorics.tensor_can)": [[65, "sympy.combinatorics.tensor_can.get_symmetric_group_sgs", false]], "get_sympy_dir() (in module sympy.testing.runtests)": [[258, "sympy.testing.runtests.get_sympy_dir", false]], "get_target_matrix() (sympy.physics.quantum.gate.gate method)": [[176, "sympy.physics.quantum.gate.Gate.get_target_matrix", false]], "get_target_matrix() (sympy.physics.quantum.gate.ugate method)": [[176, "sympy.physics.quantum.gate.UGate.get_target_matrix", false]], "get_units_non_prefixed() (sympy.physics.units.unitsystem.unitsystem method)": [[200, "sympy.physics.units.unitsystem.UnitSystem.get_units_non_prefixed", false]], "getitem() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.getitem", false]], "getn() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.getn", false]], "geto() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.getO", false]], "gf_add() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_add", false]], "gf_add_ground() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_add_ground", false]], "gf_add_mul() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_add_mul", false]], "gf_berlekamp() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_berlekamp", false]], "gf_cofactors() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_cofactors", false]], "gf_compose() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_compose", false]], "gf_compose_mod() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_compose_mod", false]], "gf_crt() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_crt", false]], "gf_crt1() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_crt1", false]], "gf_crt2() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_crt2", false]], "gf_csolve() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_csolve", false]], "gf_degree() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_degree", false]], "gf_diff() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_diff", false]], "gf_div() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_div", false]], "gf_eval() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_eval", false]], "gf_expand() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_expand", false]], "gf_exquo() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_exquo", false]], "gf_factor() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_factor", false]], "gf_factor_sqf() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_factor_sqf", false]], "gf_from_dict() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_from_dict", false]], "gf_from_int_poly() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_from_int_poly", false]], "gf_gcd() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_gcd", false]], "gf_gcdex() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_gcdex", false]], "gf_int() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_int", false]], "gf_irreducible() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_irreducible", false]], "gf_irreducible_p() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_irreducible_p", false]], "gf_lc() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_LC", false]], "gf_lcm() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_lcm", false]], "gf_lshift() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_lshift", false]], "gf_monic() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_monic", false]], "gf_mul() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_mul", false]], "gf_mul_ground() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_mul_ground", false]], "gf_multi_eval() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_multi_eval", false]], "gf_neg() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_neg", false]], "gf_normal() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_normal", false]], "gf_pow() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_pow", false]], "gf_pow_mod() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_pow_mod", false]], "gf_qbasis() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_Qbasis", false]], "gf_qmatrix() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_Qmatrix", false]], "gf_quo() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_quo", false]], "gf_quo_ground() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_quo_ground", false]], "gf_random() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_random", false]], "gf_rem() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_rem", false]], "gf_rshift() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_rshift", false]], "gf_shoup() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_shoup", false]], "gf_sqf_list() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_sqf_list", false]], "gf_sqf_p() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_sqf_p", false]], "gf_sqf_part() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_sqf_part", false]], "gf_sqr() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_sqr", false]], "gf_strip() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_strip", false]], "gf_sub() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_sub", false]], "gf_sub_ground() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_sub_ground", false]], "gf_sub_mul() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_sub_mul", false]], "gf_tc() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_TC", false]], "gf_to_dict() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_to_dict", false]], "gf_to_int_poly() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_to_int_poly", false]], "gf_trace_map() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_trace_map", false]], "gf_trunc() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_trunc", false]], "gf_value() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_value", false]], "gf_zassenhaus() (in module sympy.polys.galoistools)": [[220, "sympy.polys.galoistools.gf_zassenhaus", false]], "gff() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.gff", false]], "gff_list() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.gff_list", false]], "gff_list() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.gff_list", false]], "gff_list() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.gff_list", false]], "given() (in module sympy.stats)": [[247, "sympy.stats.given", false]], "gm_private_key() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.gm_private_key", false]], "gm_public_key() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.gm_public_key", false]], "gmpyfinitefield (class in sympy.polys.domains)": [[218, "sympy.polys.domains.GMPYFiniteField", false]], "gmpyintegerring (class in sympy.polys.domains)": [[218, "sympy.polys.domains.GMPYIntegerRing", false]], "gmpyrationalfield (class in sympy.polys.domains)": [[218, "sympy.polys.domains.GMPYRationalField", false]], "goldenratio (class in sympy.core.numbers)": [[69, "sympy.core.numbers.GoldenRatio", false]], "gompertz() (in module sympy.stats)": [[247, "sympy.stats.Gompertz", false]], "gosper_normal() (in module sympy.concrete.gosper)": [[68, "sympy.concrete.gosper.gosper_normal", false]], "gosper_sum() (in module sympy.concrete.gosper)": [[68, "sympy.concrete.gosper.gosper_sum", false]], "gosper_term() (in module sympy.concrete.gosper)": [[68, "sympy.concrete.gosper.gosper_term", false]], "goto (class in sympy.codegen.cnodes)": [[50, "sympy.codegen.cnodes.goto", false]], "goto (class in sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.GoTo", false]], "gouy (sympy.physics.optics.gaussopt.beamparameter property)": [[161, "sympy.physics.optics.gaussopt.BeamParameter.gouy", false]], "gradedlexorder (class in sympy.polys.orderings)": [[223, "sympy.polys.orderings.GradedLexOrder", false]], "gradient() (in module sympy.physics.vector.fieldfunctions)": [[203, "sympy.physics.vector.fieldfunctions.gradient", false]], "gradient() (in module sympy.vector)": [[274, "sympy.vector.gradient", false]], "gradient() (sympy.vector.deloperator.del method)": [[271, "sympy.vector.deloperator.Del.gradient", false]], "gramschmidt() (in module sympy.matrices.dense)": [[105, "sympy.matrices.dense.GramSchmidt", false]], "gray_to_bin() (sympy.combinatorics.graycode method)": [[53, "sympy.combinatorics.graycode.gray_to_bin", false]], "graycode (class in sympy.combinatorics.graycode)": [[53, "sympy.combinatorics.graycode.GrayCode", false]], "graycode_subsets() (sympy.combinatorics.graycode method)": [[53, "sympy.combinatorics.graycode.graycode_subsets", false]], "greaterthan (class in sympy.core.relational)": [[69, "sympy.core.relational.GreaterThan", false]], "greek_letters (in module sympy.printing.pretty.pretty_symbology)": [[227, "sympy.printing.pretty.pretty_symbology.greek_letters", false]], "groebner() (in module sympy.polys.groebnertools)": [[220, "sympy.polys.groebnertools.groebner", false]], "groebner() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.groebner", false]], "groebnerbasis (class in sympy.polys.polytools)": [[223, "sympy.polys.polytools.GroebnerBasis", false]], "ground_new() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.ground_new", false]], "ground_roots() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.ground_roots", false]], "ground_roots() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.ground_roots", false]], "group() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.group", false]], "group_name() (sympy.liealgebras.weyl_group.weylgroup method)": [[98, "sympy.liealgebras.weyl_group.WeylGroup.group_name", false]], "group_order() (sympy.liealgebras.weyl_group.weylgroup method)": [[98, "sympy.liealgebras.weyl_group.WeylGroup.group_order", false]], "groups_count() (in module sympy.combinatorics.group_numbers)": [[55, "sympy.combinatorics.group_numbers.groups_count", false]], "grover_iteration() (in module sympy.physics.quantum.grover)": [[177, "sympy.physics.quantum.grover.grover_iteration", false]], "gruntz() (in module sympy.series.gruntz)": [[234, "sympy.series.gruntz.gruntz", false]], "gt (in module sympy.core.relational)": [[69, "sympy.core.relational.Gt", false]], "gumbel() (in module sympy.stats)": [[247, "sympy.stats.Gumbel", false]], "h (in module sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.H", false]], "h (sympy.matrices.matrixbase.matrixbase property)": [[105, "sympy.matrices.matrixbase.MatrixBase.H", false]], "hadamard_product() (in module sympy.matrices.expressions)": [[101, "sympy.matrices.expressions.hadamard_product", false]], "hadamardgate (class in sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.HadamardGate", false]], "hadamardpower (class in sympy.matrices.expressions)": [[101, "sympy.matrices.expressions.HadamardPower", false]], "hadamardproduct (class in sympy.matrices.expressions)": [[101, "sympy.matrices.expressions.HadamardProduct", false]], "half (class in sympy.core.numbers)": [[69, "sympy.core.numbers.Half", false]], "half_gcdex() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.half_gcdex", false]], "half_gcdex() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.half_gcdex", false]], "half_gcdex() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.half_gcdex", false]], "half_gcdex() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.half_gcdex", false]], "half_per() (sympy.polys.polyclasses.dmf method)": [[218, "sympy.polys.polyclasses.DMF.half_per", false]], "half_wave_retarder() (in module sympy.physics.optics.polarization)": [[164, "sympy.physics.optics.polarization.half_wave_retarder", false]], "handler (sympy.assumptions.assume.predicate attribute)": [[44, "sympy.assumptions.assume.Predicate.handler", false]], "handler (sympy.assumptions.predicates.calculus.finitepredicate attribute)": [[46, "sympy.assumptions.predicates.calculus.FinitePredicate.handler", false]], "handler (sympy.assumptions.predicates.calculus.infinitepredicate attribute)": [[46, "sympy.assumptions.predicates.calculus.InfinitePredicate.handler", false]], "handler (sympy.assumptions.predicates.common.commutativepredicate attribute)": [[46, "sympy.assumptions.predicates.common.CommutativePredicate.handler", false]], "handler (sympy.assumptions.predicates.common.istruepredicate attribute)": [[46, "sympy.assumptions.predicates.common.IsTruePredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.complexelementspredicate attribute)": [[46, "sympy.assumptions.predicates.matrices.ComplexElementsPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.diagonalpredicate attribute)": [[46, "sympy.assumptions.predicates.matrices.DiagonalPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.fullrankpredicate attribute)": [[46, "sympy.assumptions.predicates.matrices.FullRankPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.integerelementspredicate attribute)": [[46, "sympy.assumptions.predicates.matrices.IntegerElementsPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.invertiblepredicate attribute)": [[46, "sympy.assumptions.predicates.matrices.InvertiblePredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.lowertriangularpredicate attribute)": [[46, "sympy.assumptions.predicates.matrices.LowerTriangularPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.normalpredicate attribute)": [[46, "sympy.assumptions.predicates.matrices.NormalPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.orthogonalpredicate attribute)": [[46, "sympy.assumptions.predicates.matrices.OrthogonalPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.positivedefinitepredicate attribute)": [[46, "sympy.assumptions.predicates.matrices.PositiveDefinitePredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.realelementspredicate attribute)": [[46, "sympy.assumptions.predicates.matrices.RealElementsPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.singularpredicate attribute)": [[46, "sympy.assumptions.predicates.matrices.SingularPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.squarepredicate attribute)": [[46, "sympy.assumptions.predicates.matrices.SquarePredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.symmetricpredicate attribute)": [[46, "sympy.assumptions.predicates.matrices.SymmetricPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.triangularpredicate attribute)": [[46, "sympy.assumptions.predicates.matrices.TriangularPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.unitarypredicate attribute)": [[46, "sympy.assumptions.predicates.matrices.UnitaryPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.unittriangularpredicate attribute)": [[46, "sympy.assumptions.predicates.matrices.UnitTriangularPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.uppertriangularpredicate attribute)": [[46, "sympy.assumptions.predicates.matrices.UpperTriangularPredicate.handler", false]], "handler (sympy.assumptions.predicates.ntheory.compositepredicate attribute)": [[46, "sympy.assumptions.predicates.ntheory.CompositePredicate.handler", false]], "handler (sympy.assumptions.predicates.ntheory.evenpredicate attribute)": [[46, "sympy.assumptions.predicates.ntheory.EvenPredicate.handler", false]], "handler (sympy.assumptions.predicates.ntheory.oddpredicate attribute)": [[46, "sympy.assumptions.predicates.ntheory.OddPredicate.handler", false]], "handler (sympy.assumptions.predicates.ntheory.primepredicate attribute)": [[46, "sympy.assumptions.predicates.ntheory.PrimePredicate.handler", false]], "handler (sympy.assumptions.predicates.order.negativepredicate attribute)": [[46, "sympy.assumptions.predicates.order.NegativePredicate.handler", false]], "handler (sympy.assumptions.predicates.order.nonnegativepredicate attribute)": [[46, "sympy.assumptions.predicates.order.NonNegativePredicate.handler", false]], "handler (sympy.assumptions.predicates.order.nonpositivepredicate attribute)": [[46, "sympy.assumptions.predicates.order.NonPositivePredicate.handler", false]], "handler (sympy.assumptions.predicates.order.nonzeropredicate attribute)": [[46, "sympy.assumptions.predicates.order.NonZeroPredicate.handler", false]], "handler (sympy.assumptions.predicates.order.positivepredicate attribute)": [[46, "sympy.assumptions.predicates.order.PositivePredicate.handler", false]], "handler (sympy.assumptions.predicates.order.zeropredicate attribute)": [[46, "sympy.assumptions.predicates.order.ZeroPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.algebraicpredicate attribute)": [[46, "sympy.assumptions.predicates.sets.AlgebraicPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.antihermitianpredicate attribute)": [[46, "sympy.assumptions.predicates.sets.AntihermitianPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.complexpredicate attribute)": [[46, "sympy.assumptions.predicates.sets.ComplexPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.extendedrealpredicate attribute)": [[46, "sympy.assumptions.predicates.sets.ExtendedRealPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.hermitianpredicate attribute)": [[46, "sympy.assumptions.predicates.sets.HermitianPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.imaginarypredicate attribute)": [[46, "sympy.assumptions.predicates.sets.ImaginaryPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.integerpredicate attribute)": [[46, "sympy.assumptions.predicates.sets.IntegerPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.irrationalpredicate attribute)": [[46, "sympy.assumptions.predicates.sets.IrrationalPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.rationalpredicate attribute)": [[46, "sympy.assumptions.predicates.sets.RationalPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.realpredicate attribute)": [[46, "sympy.assumptions.predicates.sets.RealPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.transcendentalpredicate attribute)": [[46, "sympy.assumptions.predicates.sets.TranscendentalPredicate.handler", false]], "hankel1 (class in sympy.functions.special.bessel)": [[77, "sympy.functions.special.bessel.hankel1", false]], "hankel2 (class in sympy.functions.special.bessel)": [[77, "sympy.functions.special.bessel.hankel2", false]], "hankel_transform() (in module sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.hankel_transform", false]], "hankeltransform (class in sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.HankelTransform", false]], "harmonic (class in sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.harmonic", false]], "has() (sympy.core.basic.basic method)": [[69, "sympy.core.basic.Basic.has", false]], "has() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.has", false]], "has_assoc_field (sympy.polys.domains.domain.domain attribute)": [[218, "sympy.polys.domains.domain.Domain.has_assoc_Field", false]], "has_assoc_ring (sympy.polys.domains.domain.domain attribute)": [[218, "sympy.polys.domains.domain.Domain.has_assoc_Ring", false]], "has_dups() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.has_dups", false]], "has_empty_sequence (sympy.concrete.expr_with_intlimits.exprwithintlimits property)": [[68, "sympy.concrete.expr_with_intlimits.ExprWithIntLimits.has_empty_sequence", false]], "has_finite_limits (sympy.concrete.expr_with_limits.exprwithlimits property)": [[96, "sympy.concrete.expr_with_limits.ExprWithLimits.has_finite_limits", false]], "has_free() (sympy.core.basic.basic method)": [[69, "sympy.core.basic.Basic.has_free", false]], "has_integer_powers() (sympy.physics.units.dimensions.dimension method)": [[194, "sympy.physics.units.dimensions.Dimension.has_integer_powers", false]], "has_only_gens() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.has_only_gens", false]], "has_q_annihilators (sympy.physics.secondquant.no property)": [[192, "sympy.physics.secondquant.NO.has_q_annihilators", false]], "has_q_creators (sympy.physics.secondquant.no property)": [[192, "sympy.physics.secondquant.NO.has_q_creators", false]], "has_reversed_limits (sympy.concrete.expr_with_limits.exprwithlimits property)": [[96, "sympy.concrete.expr_with_limits.ExprWithLimits.has_reversed_limits", false]], "has_variety() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.has_variety", false]], "has_xfree() (sympy.core.basic.basic method)": [[69, "sympy.core.basic.Basic.has_xfree", false]], "hat() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.hat", false]], "hbar (class in sympy.physics.quantum.constants)": [[174, "sympy.physics.quantum.constants.HBar", false]], "heaviside (class in sympy.functions.special.delta_functions)": [[77, "sympy.functions.special.delta_functions.Heaviside", false]], "height (sympy.categories.diagram_drawing.diagramgrid property)": [[49, "sympy.categories.diagram_drawing.DiagramGrid.height", false]], "height (sympy.physics.optics.gaussopt.geometricray property)": [[161, "sympy.physics.optics.gaussopt.GeometricRay.height", false]], "height() (sympy.polys.agca.ideals.ideal method)": [[214, "sympy.polys.agca.ideals.Ideal.height", false]], "height() (sympy.printing.pretty.stringpict.stringpict method)": [[227, "sympy.printing.pretty.stringpict.stringPict.height", false]], "hermite (class in sympy.functions.special.polynomials)": [[77, "sympy.functions.special.polynomials.hermite", false]], "hermite() (in module sympy.stats)": [[247, "sympy.stats.Hermite", false]], "hermite_normal_form() (in module sympy.matrices.normalforms)": [[106, "sympy.matrices.normalforms.hermite_normal_form", false]], "hermite_normal_form() (in module sympy.polys.matrices.normalforms)": [[216, "sympy.polys.matrices.normalforms.hermite_normal_form", false]], "hermite_poly() (in module sympy.polys.orthopolys)": [[223, "sympy.polys.orthopolys.hermite_poly", false]], "hermite_prob (class in sympy.functions.special.polynomials)": [[77, "sympy.functions.special.polynomials.hermite_prob", false]], "hermite_prob_poly() (in module sympy.polys.orthopolys)": [[223, "sympy.polys.orthopolys.hermite_prob_poly", false]], "hermitian": [[69, "term-hermitian", true]], "hermitianoperator (class in sympy.physics.quantum.operator)": [[181, "sympy.physics.quantum.operator.HermitianOperator", false]], "hermitianpredicate (class in sympy.assumptions.predicates.sets)": [[46, "sympy.assumptions.predicates.sets.HermitianPredicate", false]], "hessian() (in module sympy.matrices.dense)": [[105, "sympy.matrices.dense.hessian", false]], "heurisch() (in module sympy.integrals.heurisch)": [[96, "sympy.integrals.heurisch.heurisch", false]], "heuristicgcdfailed (class in sympy.polys.polyerrors)": [[220, "sympy.polys.polyerrors.HeuristicGCDFailed", false]], "highest_root() (sympy.liealgebras.type_a.typea method)": [[98, "sympy.liealgebras.type_a.TypeA.highest_root", false]], "hilbertspace (class in sympy.physics.quantum.hilbert)": [[178, "sympy.physics.quantum.hilbert.HilbertSpace", false]], "hobj() (in module sympy.printing.pretty.pretty_symbology)": [[227, "sympy.printing.pretty.pretty_symbology.hobj", false]], "holonomic_constraints (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.holonomic_constraints", false]], "holonomicfunction (class in sympy.holonomic.holonomic)": [[92, "sympy.holonomic.holonomic.HolonomicFunction", false]], "holzer() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.holzer", false]], "hom() (sympy.categories.diagram method)": [[49, "sympy.categories.Diagram.hom", false]], "homogeneous_order() (in module sympy.solvers.ode)": [[243, "sympy.solvers.ode.homogeneous_order", false]], "homogeneous_order() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.homogeneous_order", false]], "homogeneous_order() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.homogeneous_order", false]], "homogeneouscoeffbest (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.HomogeneousCoeffBest", false]], "homogeneouscoeffsubsdepdivindep (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.HomogeneousCoeffSubsDepDivIndep", false]], "homogeneouscoeffsubsindepdivdep (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.HomogeneousCoeffSubsIndepDivDep", false]], "homogeneousgeneralquadratic (class in sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.HomogeneousGeneralQuadratic", false]], "homogeneousternaryquadratic (class in sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.HomogeneousTernaryQuadratic", false]], "homogeneousternaryquadraticnormal (class in sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.HomogeneousTernaryQuadraticNormal", false]], "homogenize() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.homogenize", false]], "homogenize() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.homogenize", false]], "homomorphism() (in module sympy.polys.agca.homomorphisms)": [[214, "sympy.polys.agca.homomorphisms.homomorphism", false]], "homomorphismfailed (class in sympy.polys.polyerrors)": [[220, "sympy.polys.polyerrors.HomomorphismFailed", false]], "horner() (in module sympy.polys.polyfuncs)": [[223, "sympy.polys.polyfuncs.horner", false]], "hradius (sympy.geometry.ellipse.ellipse property)": [[79, "sympy.geometry.ellipse.Ellipse.hradius", false]], "hstack() (sympy.matrices.matrixbase.matrixbase class method)": [[105, "sympy.matrices.matrixbase.MatrixBase.hstack", false]], "hstack() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.hstack", false]], "hstack() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.hstack", false]], "hstack() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.hstack", false]], "hstack() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.hstack", false]], "hyper (class in sympy.functions.special.hyper)": [[77, "sympy.functions.special.hyper.hyper", false]], "hyper_algorithm() (in module sympy.series.formal)": [[229, "sympy.series.formal.hyper_algorithm", false]], "hyper_re() (in module sympy.series.formal)": [[229, "sympy.series.formal.hyper_re", false]], "hyperbolicfunction (class in sympy.functions.elementary.hyperbolic)": [[75, "sympy.functions.elementary.hyperbolic.HyperbolicFunction", false]], "hyperexpand() (in module sympy.simplify.hyperexpand)": [[239, "sympy.simplify.hyperexpand.hyperexpand", false]], "hyperfocal_distance() (in module sympy.physics.optics.utils)": [[165, "sympy.physics.optics.utils.hyperfocal_distance", false]], "hypergeometric() (in module sympy.stats)": [[247, "sympy.stats.Hypergeometric", false]], "hypersimilar() (in module sympy.simplify.simplify)": [[239, "sympy.simplify.simplify.hypersimilar", false]], "hypersimp() (in module sympy.simplify.simplify)": [[239, "sympy.simplify.simplify.hypersimp", false]], "hypot (class in sympy.codegen.cfunctions)": [[50, "sympy.codegen.cfunctions.hypot", false]], "ibin() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.ibin", false]], "ideal (class in sympy.polys.agca.ideals)": [[214, "sympy.polys.agca.ideals.Ideal", false]], "ideal() (sympy.polys.domains.ring.ring method)": [[218, "sympy.polys.domains.ring.Ring.ideal", false]], "identity (class in sympy.matrices.expressions)": [[101, "sympy.matrices.expressions.Identity", false]], "identity (sympy.combinatorics.perm_groups.permutationgroup property)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.identity", false]], "identity_hom() (sympy.polys.agca.modules.freemodule method)": [[214, "sympy.polys.agca.modules.FreeModule.identity_hom", false]], "identity_hom() (sympy.polys.agca.modules.module method)": [[214, "sympy.polys.agca.modules.Module.identity_hom", false]], "identity_hom() (sympy.polys.agca.modules.quotientmodule method)": [[214, "sympy.polys.agca.modules.QuotientModule.identity_hom", false]], "identity_hom() (sympy.polys.agca.modules.submodule method)": [[214, "sympy.polys.agca.modules.SubModule.identity_hom", false]], "identityfunction (class in sympy.functions.elementary.miscellaneous)": [[75, "sympy.functions.elementary.miscellaneous.IdentityFunction", false]], "identitygate (class in sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.IdentityGate", false]], "identitymorphism (class in sympy.categories)": [[49, "sympy.categories.IdentityMorphism", false]], "identityoperator (class in sympy.physics.quantum.operator)": [[181, "sympy.physics.quantum.operator.IdentityOperator", false]], "idiff() (in module sympy.geometry.util)": [[86, "sympy.geometry.util.idiff", false]], "idx (class in sympy.tensor.indexed)": [[252, "sympy.tensor.indexed.Idx", false]], "ifft() (in module sympy.discrete.transforms)": [[72, "sympy.discrete.transforms.ifft", false]], "ifwht() (in module sympy.discrete.transforms)": [[72, "sympy.discrete.transforms.ifwht", false]], "igcd() (in module sympy.core.intfunc)": [[69, "sympy.core.intfunc.igcd", false]], "igcd_lehmer() (in module sympy.core.intfunc)": [[69, "sympy.core.intfunc.igcd_lehmer", false]], "igcdex() (in module sympy.core.intfunc)": [[69, "sympy.core.intfunc.igcdex", false]], "ignore_warnings() (in module sympy.utilities.exceptions)": [[263, "sympy.utilities.exceptions.ignore_warnings", false]], "ilcm() (in module sympy.core.intfunc)": [[69, "sympy.core.intfunc.ilcm", false]], "ild_moment (sympy.physics.continuum_mechanics.beam.beam property)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.ild_moment", false]], "ild_reactions (sympy.physics.continuum_mechanics.beam.beam property)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.ild_reactions", false]], "ild_shear (sympy.physics.continuum_mechanics.beam.beam property)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.ild_shear", false]], "im (class in sympy.functions.elementary.complexes)": [[75, "sympy.functions.elementary.complexes.im", false]], "image() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[214, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.image", false]], "imageset (class in sympy.sets.fancysets)": [[235, "sympy.sets.fancysets.ImageSet", false]], "imageset() (in module sympy.sets.sets)": [[235, "sympy.sets.sets.imageset", false]], "imaginary": [[69, "term-imaginary", true]], "imaginarypredicate (class in sympy.assumptions.predicates.sets)": [[46, "sympy.assumptions.predicates.sets.ImaginaryPredicate", false]], "imaginaryunit (class in sympy.core.numbers)": [[69, "sympy.core.numbers.ImaginaryUnit", false]], "immutable": [[15, "term-Immutable", true]], "immutabledensematrix (class in sympy.matrices.immutable)": [[102, "sympy.matrices.immutable.ImmutableDenseMatrix", false]], "immutabledensendimarray (class in sympy.tensor.array)": [[248, "sympy.tensor.array.ImmutableDenseNDimArray", false]], "immutablematrix (in module sympy.matrices.immutable)": [[102, "sympy.matrices.immutable.ImmutableMatrix", false]], "immutablesparsematrix (class in sympy.matrices.immutable)": [[107, "sympy.matrices.immutable.ImmutableSparseMatrix", false]], "immutablesparsendimarray (class in sympy.tensor.array)": [[248, "sympy.tensor.array.ImmutableSparseNDimArray", false]], "implemented_function() (in module sympy.utilities.lambdify)": [[266, "sympy.utilities.lambdify.implemented_function", false]], "implicit_application() (in module sympy.parsing.sympy_parser)": [[111, "sympy.parsing.sympy_parser.implicit_application", false]], "implicit_multiplication() (in module sympy.parsing.sympy_parser)": [[111, "sympy.parsing.sympy_parser.implicit_multiplication", false]], "implicit_multiplication_application() (in module sympy.parsing.sympy_parser)": [[111, "sympy.parsing.sympy_parser.implicit_multiplication_application", false]], "implicitregion (class in sympy.vector.implicitregion)": [[271, "sympy.vector.implicitregion.ImplicitRegion", false]], "implicitseries (class in sympy.plotting.series)": [[213, "sympy.plotting.series.ImplicitSeries", false]], "implieddoloop (class in sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.ImpliedDoLoop", false]], "implies (class in sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.Implies", false]], "impulse_response_numerical_data() (sympy.physics.control.control_plots method)": [[123, "sympy.physics.control.control_plots.impulse_response_numerical_data", false]], "impulse_response_plot() (sympy.physics.control.control_plots method)": [[123, "sympy.physics.control.control_plots.impulse_response_plot", false]], "imul_num() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.imul_num", false]], "in_terms_of_generators() (sympy.polys.agca.modules.submodule method)": [[214, "sympy.polys.agca.modules.SubModule.in_terms_of_generators", false]], "incenter (sympy.geometry.polygon.triangle property)": [[85, "sympy.geometry.polygon.Triangle.incenter", false]], "incircle (sympy.geometry.polygon.regularpolygon property)": [[85, "sympy.geometry.polygon.RegularPolygon.incircle", false]], "incircle (sympy.geometry.polygon.triangle property)": [[85, "sympy.geometry.polygon.Triangle.incircle", false]], "inclusion_hom() (sympy.polys.agca.modules.submodule method)": [[214, "sympy.polys.agca.modules.SubModule.inclusion_hom", false]], "indent_code() (sympy.printing.c.c89codeprinter method)": [[227, "sympy.printing.c.C89CodePrinter.indent_code", false]], "indent_code() (sympy.printing.fortran.fcodeprinter method)": [[227, "sympy.printing.fortran.FCodePrinter.indent_code", false]], "indent_code() (sympy.printing.jscode.javascriptcodeprinter method)": [[227, "sympy.printing.jscode.JavascriptCodePrinter.indent_code", false]], "indent_code() (sympy.printing.julia.juliacodeprinter method)": [[227, "sympy.printing.julia.JuliaCodePrinter.indent_code", false]], "indent_code() (sympy.printing.octave.octavecodeprinter method)": [[227, "sympy.printing.octave.OctaveCodePrinter.indent_code", false]], "indent_code() (sympy.printing.rcode.rcodeprinter method)": [[227, "sympy.printing.rcode.RCodePrinter.indent_code", false]], "indent_code() (sympy.printing.rust.rustcodeprinter method)": [[227, "sympy.printing.rust.RustCodePrinter.indent_code", false]], "index() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.index", false]], "index() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.index", false]], "index() (sympy.concrete.expr_with_intlimits.exprwithintlimits method)": [[68, "sympy.concrete.expr_with_intlimits.ExprWithIntLimits.index", false]], "index() (sympy.core.containers.tuple method)": [[69, "sympy.core.containers.Tuple.index", false]], "index() (sympy.physics.secondquant.fixedbosonicbasis method)": [[192, "sympy.physics.secondquant.FixedBosonicBasis.index", false]], "index() (sympy.physics.secondquant.varbosonicbasis method)": [[192, "sympy.physics.secondquant.VarBosonicBasis.index", false]], "index() (sympy.polys.rings.polyring method)": [[218, "sympy.polys.rings.PolyRing.index", false]], "index_vector() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.index_vector", false]], "indexed (class in sympy.tensor.indexed)": [[252, "sympy.tensor.indexed.Indexed", false]], "indexedbase (class in sympy.tensor.indexed)": [[252, "sympy.tensor.indexed.IndexedBase", false]], "indices (sympy.tensor.indexed.indexed property)": [[252, "sympy.tensor.indexed.Indexed.indices", false]], "indices_contain_equal_information (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[77, "sympy.functions.special.tensor_functions.KroneckerDelta.indices_contain_equal_information", false]], "indices_contain_equal_information (sympy.physics.secondquant.kroneckerdelta property)": [[192, "sympy.physics.secondquant.KroneckerDelta.indices_contain_equal_information", false]], "inertia (class in sympy.physics.mechanics.inertia)": [[137, "sympy.physics.mechanics.inertia.Inertia", false]], "inertia (sympy.physics.mechanics.body.body property)": [[131, "sympy.physics.mechanics.body.Body.inertia", false]], "inertia (sympy.physics.mechanics.rigidbody.rigidbody property)": [[137, "sympy.physics.mechanics.rigidbody.RigidBody.inertia", false]], "inertia() (in module sympy.physics.mechanics.inertia)": [[137, "sympy.physics.mechanics.inertia.inertia", false]], "inertia_of_point_mass() (in module sympy.physics.mechanics.inertia)": [[137, "sympy.physics.mechanics.inertia.inertia_of_point_mass", false]], "inf (sympy.sets.sets.set property)": [[235, "sympy.sets.sets.Set.inf", false]], "infinite": [[69, "term-infinite", true]], "infinite (sympy.series.formal.formalpowerseries property)": [[229, "sympy.series.formal.FormalPowerSeries.infinite", false]], "infinitepredicate (class in sympy.assumptions.predicates.calculus)": [[46, "sympy.assumptions.predicates.calculus.InfinitePredicate", false]], "infinitesimals() (in module sympy.solvers.ode)": [[243, "sympy.solvers.ode.infinitesimals", false]], "infinity (class in sympy.core.numbers)": [[69, "sympy.core.numbers.Infinity", false]], "inhomogeneousgeneralquadratic (class in sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.InhomogeneousGeneralQuadratic", false]], "inhomogeneousternaryquadratic (class in sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.InhomogeneousTernaryQuadratic", false]], "init_ipython_session() (in module sympy.interactive.session)": [[97, "sympy.interactive.session.init_ipython_session", false]], "init_printing() (in module sympy.interactive.printing)": [[97, "sympy.interactive.printing.init_printing", false]], "init_python_session() (in module sympy.interactive.session)": [[97, "sympy.interactive.session.init_python_session", false]], "init_session() (in module sympy.interactive.session)": [[97, "sympy.interactive.session.init_session", false]], "init_vprinting() (in module sympy.physics.vector.printing)": [[207, "sympy.physics.vector.printing.init_vprinting", false]], "initial (sympy.series.sequences.recursiveseq property)": [[233, "sympy.series.sequences.RecursiveSeq.initial", false]], "inject() (sympy.polys.domains.compositedomain.compositedomain method)": [[218, "sympy.polys.domains.compositedomain.CompositeDomain.inject", false]], "inject() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.inject", false]], "inject() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianDomain.inject", false]], "inject() (sympy.polys.domains.simpledomain.simpledomain method)": [[218, "sympy.polys.domains.simpledomain.SimpleDomain.inject", false]], "inject() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.inject", false]], "inject() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.inject", false]], "inner_endomorphism() (sympy.polys.numberfields.modules.endomorphismring method)": [[222, "sympy.polys.numberfields.modules.EndomorphismRing.inner_endomorphism", false]], "innerendomorphism (class in sympy.polys.numberfields.modules)": [[222, "sympy.polys.numberfields.modules.InnerEndomorphism", false]], "innerproduct (class in sympy.physics.quantum.innerproduct)": [[180, "sympy.physics.quantum.innerproduct.InnerProduct", false]], "innerproduct (class in sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.InnerProduct", false]], "input_vars (sympy.physics.biomechanics.activation.activationbase property)": [[112, "sympy.physics.biomechanics.activation.ActivationBase.input_vars", false]], "input_vars (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[112, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.input_vars", false]], "input_vars (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[112, "sympy.physics.biomechanics.activation.ZerothOrderActivation.input_vars", false]], "input_vars (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.input_vars", false]], "inradius (sympy.geometry.polygon.regularpolygon property)": [[85, "sympy.geometry.polygon.RegularPolygon.inradius", false]], "inradius (sympy.geometry.polygon.triangle property)": [[85, "sympy.geometry.polygon.Triangle.inradius", false]], "int_to_integer() (in module sympy.interactive.session)": [[97, "sympy.interactive.session.int_to_Integer", false]], "intbasetype (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.IntBaseType", false]], "intcurve_diffequ() (in module sympy.diffgeom)": [[71, "sympy.diffgeom.intcurve_diffequ", false]], "intcurve_series() (in module sympy.diffgeom)": [[71, "sympy.diffgeom.intcurve_series", false]], "integer": [[69, "term-integer", true]], "integer (class in sympy.core.numbers)": [[69, "sympy.core.numbers.Integer", false]], "integer_log() (in module sympy.core.intfunc)": [[69, "sympy.core.intfunc.integer_log", false]], "integer_nthroot() (in module sympy.core.intfunc)": [[69, "sympy.core.intfunc.integer_nthroot", false]], "integer_to_term() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.integer_to_term", false]], "integerelementspredicate (class in sympy.assumptions.predicates.matrices)": [[46, "sympy.assumptions.predicates.matrices.IntegerElementsPredicate", false]], "integerpartition (class in sympy.combinatorics.partitions)": [[58, "sympy.combinatorics.partitions.IntegerPartition", false]], "integerpredicate (class in sympy.assumptions.predicates.sets)": [[46, "sympy.assumptions.predicates.sets.IntegerPredicate", false]], "integerring (class in sympy.polys.domains)": [[218, "sympy.polys.domains.IntegerRing", false]], "integers (class in sympy.sets.fancysets)": [[235, "sympy.sets.fancysets.Integers", false]], "integral (class in sympy.integrals.integrals)": [[96, "sympy.integrals.integrals.Integral", false]], "integral.is_commutative (in module sympy.integrals.integrals)": [[96, "sympy.integrals.integrals.Integral.is_commutative", false]], "integral_basis() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.integral_basis", false]], "integral_steps() (in module sympy.integrals.manualintegrate)": [[96, "sympy.integrals.manualintegrate.integral_steps", false]], "integraltransform (class in sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.IntegralTransform", false]], "integraltransformerror": [[96, "sympy.integrals.transforms.IntegralTransformError", false]], "integrand() (sympy.functions.special.hyper.meijerg method)": [[77, "sympy.functions.special.hyper.meijerg.integrand", false]], "integrate() (in module sympy.integrals.integrals)": [[96, "sympy.integrals.integrals.integrate", false]], "integrate() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.integrate", false]], "integrate() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.integrate", false]], "integrate() (sympy.core.relational.equality method)": [[69, "sympy.core.relational.Equality.integrate", false]], "integrate() (sympy.holonomic.holonomic.holonomicfunction method)": [[91, "sympy.holonomic.holonomic.HolonomicFunction.integrate", false]], "integrate() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.integrate", false]], "integrate() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.integrate", false]], "integrate() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.integrate", false]], "integrate() (sympy.series.formal.formalpowerseries method)": [[229, "sympy.series.formal.FormalPowerSeries.integrate", false]], "integrate_result() (in module sympy.physics.quantum.represent)": [[187, "sympy.physics.quantum.represent.integrate_result", false]], "interactive": [[15, "term-Interactive", true]], "interior (sympy.sets.sets.set property)": [[235, "sympy.sets.sets.Set.interior", false]], "interior_angle (sympy.geometry.polygon.regularpolygon property)": [[85, "sympy.geometry.polygon.RegularPolygon.interior_angle", false]], "internal_forces (sympy.physics.continuum_mechanics.truss.truss property)": [[121, "sympy.physics.continuum_mechanics.truss.Truss.internal_forces", false]], "interpolate() (in module sympy.polys.polyfuncs)": [[223, "sympy.polys.polyfuncs.interpolate", false]], "interpolating_poly() (in module sympy.polys.specialpolys)": [[223, "sympy.polys.specialpolys.interpolating_poly", false]], "interpolating_spline() (in module sympy.functions.special.bsplines)": [[77, "sympy.functions.special.bsplines.interpolating_spline", false]], "intersect() (sympy.polys.agca.ideals.ideal method)": [[214, "sympy.polys.agca.ideals.Ideal.intersect", false]], "intersect() (sympy.polys.agca.modules.submodule method)": [[214, "sympy.polys.agca.modules.SubModule.intersect", false]], "intersect() (sympy.sets.sets.set method)": [[235, "sympy.sets.sets.Set.intersect", false]], "intersecting_product() (in module sympy.discrete.convolutions)": [[72, "sympy.discrete.convolutions.intersecting_product", false]], "intersection (class in sympy.sets.sets)": [[235, "sympy.sets.sets.Intersection", false]], "intersection() (in module sympy.geometry.util)": [[86, "sympy.geometry.util.intersection", false]], "intersection() (sympy.geometry.ellipse.circle method)": [[79, "sympy.geometry.ellipse.Circle.intersection", false]], "intersection() (sympy.geometry.ellipse.ellipse method)": [[79, "sympy.geometry.ellipse.Ellipse.intersection", false]], "intersection() (sympy.geometry.entity.geometryentity method)": [[80, "sympy.geometry.entity.GeometryEntity.intersection", false]], "intersection() (sympy.geometry.line.linearentity method)": [[82, "sympy.geometry.line.LinearEntity.intersection", false]], "intersection() (sympy.geometry.plane.plane method)": [[83, "sympy.geometry.plane.Plane.intersection", false]], "intersection() (sympy.geometry.point.point method)": [[84, "sympy.geometry.point.Point.intersection", false]], "intersection() (sympy.geometry.point.point3d method)": [[84, "sympy.geometry.point.Point3D.intersection", false]], "intersection() (sympy.geometry.polygon.polygon method)": [[85, "sympy.geometry.polygon.Polygon.intersection", false]], "intersection() (sympy.sets.sets.set method)": [[235, "sympy.sets.sets.Set.intersection", false]], "interval (class in sympy.sets.sets)": [[235, "sympy.sets.sets.Interval", false]], "interval (sympy.series.sequences.recursiveseq property)": [[233, "sympy.series.sequences.RecursiveSeq.interval", false]], "interval (sympy.series.sequences.seqbase property)": [[233, "sympy.series.sequences.SeqBase.interval", false]], "intervals() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.intervals", false]], "intervals() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.intervals", false]], "intervals() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.intervals", false]], "intqubit (class in sympy.physics.quantum.qubit)": [[186, "sympy.physics.quantum.qubit.IntQubit", false]], "intqubitbra (class in sympy.physics.quantum.qubit)": [[186, "sympy.physics.quantum.qubit.IntQubitBra", false]], "intt() (in module sympy.discrete.transforms)": [[72, "sympy.discrete.transforms.intt", false]], "inv() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.inv", false]], "inv() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.inv", false]], "inv() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.inv", false]], "inv() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.inv", false]], "inv() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.inv", false]], "inv_can_transf_matrix (sympy.physics.units.dimensions.dimensionsystem property)": [[194, "sympy.physics.units.dimensions.DimensionSystem.inv_can_transf_matrix", false]], "inv_den() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.inv_den", false]], "inverse (class in sympy.matrices.expressions)": [[101, "sympy.matrices.expressions.Inverse", false]], "inverse() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.inverse", false]], "inverse() (sympy.functions.elementary.exponential.log method)": [[75, "sympy.functions.elementary.exponential.log.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.acosh method)": [[75, "sympy.functions.elementary.hyperbolic.acosh.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.acoth method)": [[75, "sympy.functions.elementary.hyperbolic.acoth.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.acsch method)": [[75, "sympy.functions.elementary.hyperbolic.acsch.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.asech method)": [[75, "sympy.functions.elementary.hyperbolic.asech.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.asinh method)": [[75, "sympy.functions.elementary.hyperbolic.asinh.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.atanh method)": [[75, "sympy.functions.elementary.hyperbolic.atanh.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.coth method)": [[75, "sympy.functions.elementary.hyperbolic.coth.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.sinh method)": [[75, "sympy.functions.elementary.hyperbolic.sinh.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.tanh method)": [[75, "sympy.functions.elementary.hyperbolic.tanh.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.acos method)": [[75, "sympy.functions.elementary.trigonometric.acos.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.acot method)": [[75, "sympy.functions.elementary.trigonometric.acot.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.acsc method)": [[75, "sympy.functions.elementary.trigonometric.acsc.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.asec method)": [[75, "sympy.functions.elementary.trigonometric.asec.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.asin method)": [[75, "sympy.functions.elementary.trigonometric.asin.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.atan method)": [[75, "sympy.functions.elementary.trigonometric.atan.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.cot method)": [[75, "sympy.functions.elementary.trigonometric.cot.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.tan method)": [[75, "sympy.functions.elementary.trigonometric.tan.inverse", false]], "inverse() (sympy.functions.special.error_functions.erf method)": [[77, "sympy.functions.special.error_functions.erf.inverse", false]], "inverse() (sympy.functions.special.error_functions.erfc method)": [[77, "sympy.functions.special.error_functions.erfc.inverse", false]], "inverse() (sympy.functions.special.error_functions.erfcinv method)": [[77, "sympy.functions.special.error_functions.erfcinv.inverse", false]], "inverse() (sympy.functions.special.error_functions.erfinv method)": [[77, "sympy.functions.special.error_functions.erfinv.inverse", false]], "inverse() (sympy.physics.biomechanics.curve.fiberforcelengthpassivedegroote2016 method)": [[113, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveDeGroote2016.inverse", false]], "inverse() (sympy.physics.biomechanics.curve.fiberforcelengthpassiveinversedegroote2016 method)": [[113, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveInverseDeGroote2016.inverse", false]], "inverse() (sympy.physics.biomechanics.curve.fiberforcevelocitydegroote2016 method)": [[113, "sympy.physics.biomechanics.curve.FiberForceVelocityDeGroote2016.inverse", false]], "inverse() (sympy.physics.biomechanics.curve.fiberforcevelocityinversedegroote2016 method)": [[113, "sympy.physics.biomechanics.curve.FiberForceVelocityInverseDeGroote2016.inverse", false]], "inverse() (sympy.physics.biomechanics.curve.tendonforcelengthdegroote2016 method)": [[113, "sympy.physics.biomechanics.curve.TendonForceLengthDeGroote2016.inverse", false]], "inverse() (sympy.physics.biomechanics.curve.tendonforcelengthinversedegroote2016 method)": [[113, "sympy.physics.biomechanics.curve.TendonForceLengthInverseDeGroote2016.inverse", false]], "inverse() (sympy.polys.agca.extensions.extensionelement method)": [[214, "sympy.polys.agca.extensions.ExtensionElement.inverse", false]], "inverse() (sympy.series.formal.formalpowerseries method)": [[229, "sympy.series.formal.FormalPowerSeries.inverse", false]], "inverse_adj() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.inverse_ADJ", false]], "inverse_block() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.inverse_BLOCK", false]], "inverse_ch() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.inverse_CH", false]], "inverse_cosine_transform() (in module sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.inverse_cosine_transform", false]], "inverse_fourier_transform() (in module sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.inverse_fourier_transform", false]], "inverse_ge() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.inverse_GE", false]], "inverse_hankel_transform() (in module sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.inverse_hankel_transform", false]], "inverse_laplace_transform() (in module sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.inverse_laplace_transform", false]], "inverse_ldl() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.inverse_LDL", false]], "inverse_lu() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.inverse_LU", false]], "inverse_mellin_transform() (in module sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.inverse_mellin_transform", false]], "inverse_mobius_transform() (in module sympy.discrete.transforms)": [[72, "sympy.discrete.transforms.inverse_mobius_transform", false]], "inverse_qr() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.inverse_QR", false]], "inverse_sine_transform() (in module sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.inverse_sine_transform", false]], "inversecosinetransform (class in sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.InverseCosineTransform", false]], "inversefouriertransform (class in sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.InverseFourierTransform", false]], "inversehankeltransform (class in sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.InverseHankelTransform", false]], "inverselaplacetransform (class in sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.InverseLaplaceTransform", false]], "inversemellintransform (class in sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.InverseMellinTransform", false]], "inversesinetransform (class in sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.InverseSineTransform", false]], "inversion_vector() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.inversion_vector", false]], "inversions() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.inversions", false]], "invert() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.invert", false]], "invert() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.invert", false]], "invert() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.invert", false]], "invert() (sympy.polys.domains.ring.ring method)": [[218, "sympy.polys.domains.ring.Ring.invert", false]], "invert() (sympy.polys.polyclasses.dmf method)": [[218, "sympy.polys.polyclasses.DMF.invert", false]], "invert() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.invert", false]], "invert() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.invert", false]], "invert_complex() (in module sympy.solvers.solveset)": [[246, "sympy.solvers.solveset.invert_complex", false]], "invert_real() (in module sympy.solvers.solveset)": [[246, "sympy.solvers.solveset.invert_real", false]], "invertiblepredicate (class in sympy.assumptions.predicates.matrices)": [[46, "sympy.assumptions.predicates.matrices.InvertiblePredicate", false]], "iproduct() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.iproduct", false]], "iqft (class in sympy.physics.quantum.qft)": [[185, "sympy.physics.quantum.qft.IQFT", false]], "irrational": [[69, "term-irrational", true]], "irrationalpredicate (class in sympy.assumptions.predicates.sets)": [[46, "sympy.assumptions.predicates.sets.IrrationalPredicate", false]], "irregular() (sympy.matrices.matrixbase.matrixbase class method)": [[105, "sympy.matrices.matrixbase.MatrixBase.irregular", false]], "is_*": [[15, "term-is_", true]], "is_abelian (sympy.combinatorics.perm_groups.permutationgroup property)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.is_abelian", false]], "is_abelian_number() (in module sympy.combinatorics.group_numbers)": [[55, "sympy.combinatorics.group_numbers.is_abelian_number", false]], "is_above_fermi (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[77, "sympy.functions.special.tensor_functions.KroneckerDelta.is_above_fermi", false]], "is_above_fermi (sympy.physics.secondquant.kroneckerdelta property)": [[192, "sympy.physics.secondquant.KroneckerDelta.is_above_fermi", false]], "is_absolutely_convergent() (sympy.concrete.summations.sum method)": [[68, "sympy.concrete.summations.Sum.is_absolutely_convergent", false]], "is_abundant() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.is_abundant", false]], "is_algebraic_expr() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.is_algebraic_expr", false]], "is_aliased (sympy.core.numbers.algebraicnumber property)": [[69, "sympy.core.numbers.AlgebraicNumber.is_aliased", false]], "is_alt_sym() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.is_alt_sym", false]], "is_alternating (sympy.combinatorics.perm_groups.permutationgroup property)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.is_alternating", false]], "is_amicable() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.is_amicable", false]], "is_anf() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.is_anf", false]], "is_anti_symmetric() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.is_anti_symmetric", false]], "is_below_fermi (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[77, "sympy.functions.special.tensor_functions.KroneckerDelta.is_below_fermi", false]], "is_below_fermi (sympy.physics.secondquant.kroneckerdelta property)": [[192, "sympy.physics.secondquant.KroneckerDelta.is_below_fermi", false]], "is_biproper (sympy.physics.control.lti.parallel property)": [[125, "sympy.physics.control.lti.Parallel.is_biproper", false]], "is_biproper (sympy.physics.control.lti.series property)": [[125, "sympy.physics.control.lti.Series.is_biproper", false]], "is_biproper (sympy.physics.control.lti.transferfunction property)": [[125, "sympy.physics.control.lti.TransferFunction.is_biproper", false]], "is_carmichael() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.is_carmichael", false]], "is_closed (sympy.sets.sets.set property)": [[235, "sympy.sets.sets.Set.is_closed", false]], "is_cnf() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.is_cnf", false]], "is_collinear() (sympy.geometry.point.point method)": [[84, "sympy.geometry.point.Point.is_collinear", false]], "is_commutative (sympy.physics.quantum.state.wavefunction property)": [[190, "sympy.physics.quantum.state.Wavefunction.is_commutative", false]], "is_comparable (sympy.core.basic.basic property)": [[69, "sympy.core.basic.Basic.is_comparable", false]], "is_compat() (sympy.polys.numberfields.modules.moduleelement method)": [[222, "sympy.polys.numberfields.modules.ModuleElement.is_compat", false]], "is_compat_col() (sympy.polys.numberfields.modules.module method)": [[222, "sympy.polys.numberfields.modules.Module.is_compat_col", false]], "is_concyclic() (sympy.geometry.point.point method)": [[84, "sympy.geometry.point.Point.is_concyclic", false]], "is_conservative() (in module sympy.physics.vector.fieldfunctions)": [[203, "sympy.physics.vector.fieldfunctions.is_conservative", false]], "is_conservative() (in module sympy.vector)": [[274, "sympy.vector.is_conservative", false]], "is_consistent (sympy.physics.units.dimensions.dimensionsystem property)": [[194, "sympy.physics.units.dimensions.DimensionSystem.is_consistent", false]], "is_consistent (sympy.physics.units.unitsystem.unitsystem property)": [[200, "sympy.physics.units.unitsystem.UnitSystem.is_consistent", false]], "is_constant() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.is_constant", false]], "is_convergent() (sympy.concrete.products.product method)": [[68, "sympy.concrete.products.Product.is_convergent", false]], "is_convergent() (sympy.concrete.summations.sum method)": [[68, "sympy.concrete.summations.Sum.is_convergent", false]], "is_convex() (in module sympy.calculus.util)": [[48, "sympy.calculus.util.is_convex", false]], "is_convex() (sympy.geometry.polygon.polygon method)": [[85, "sympy.geometry.polygon.Polygon.is_convex", false]], "is_coplanar() (sympy.geometry.plane.plane method)": [[83, "sympy.geometry.plane.Plane.is_coplanar", false]], "is_cyclic (sympy.combinatorics.perm_groups.permutationgroup property)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.is_cyclic", false]], "is_cyclic_number() (in module sympy.combinatorics.group_numbers)": [[55, "sympy.combinatorics.group_numbers.is_cyclic_number", false]], "is_cyclotomic (sympy.polys.polyclasses.dmp property)": [[218, "sympy.polys.polyclasses.DMP.is_cyclotomic", false]], "is_cyclotomic (sympy.polys.polytools.poly property)": [[223, "sympy.polys.polytools.Poly.is_cyclotomic", false]], "is_decreasing() (in module sympy.calculus.singularities)": [[48, "sympy.calculus.singularities.is_decreasing", false]], "is_deficient() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.is_deficient", false]], "is_diagonal (sympy.polys.matrices.domainmatrix.domainmatrix property)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.is_diagonal", false]], "is_diagonal() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.is_diagonal", false]], "is_diagonal() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.is_diagonal", false]], "is_diagonal() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.is_diagonal", false]], "is_diagonal() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.is_diagonal", false]], "is_diagonalizable() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.is_diagonalizable", false]], "is_dihedral (sympy.combinatorics.perm_groups.permutationgroup property)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.is_dihedral", false]], "is_dimensionless() (sympy.physics.units.dimensions.dimensionsystem method)": [[194, "sympy.physics.units.dimensions.DimensionSystem.is_dimensionless", false]], "is_disjoint() (sympy.sets.sets.set method)": [[235, "sympy.sets.sets.Set.is_disjoint", false]], "is_dnf() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.is_dnf", false]], "is_echelon (sympy.matrices.matrixbase.matrixbase property)": [[105, "sympy.matrices.matrixbase.MatrixBase.is_echelon", false]], "is_elementary() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.is_elementary", false]], "is_empty (sympy.combinatorics.permutations.permutation property)": [[61, "sympy.combinatorics.permutations.Permutation.is_Empty", false]], "is_equilateral() (sympy.geometry.polygon.triangle method)": [[85, "sympy.geometry.polygon.Triangle.is_equilateral", false]], "is_euler_jacobi_pseudoprime() (in module sympy.ntheory.primetest)": [[109, "sympy.ntheory.primetest.is_euler_jacobi_pseudoprime", false]], "is_euler_pseudoprime() (in module sympy.ntheory.primetest)": [[109, "sympy.ntheory.primetest.is_euler_pseudoprime", false]], "is_even (sympy.combinatorics.permutations.permutation property)": [[61, "sympy.combinatorics.permutations.Permutation.is_even", false]], "is_exact (sympy.polys.domains.compositedomain.compositedomain property)": [[218, "sympy.polys.domains.compositedomain.CompositeDomain.is_Exact", false]], "is_extra_strong_lucas_prp() (in module sympy.ntheory.primetest)": [[109, "sympy.ntheory.primetest.is_extra_strong_lucas_prp", false]], "is_fermat_pseudoprime() (in module sympy.ntheory.primetest)": [[109, "sympy.ntheory.primetest.is_fermat_pseudoprime", false]], "is_field (sympy.polys.domains.domain.domain attribute)": [[218, "sympy.polys.domains.domain.Domain.is_Field", false]], "is_full_module() (sympy.polys.agca.modules.submodule method)": [[214, "sympy.polys.agca.modules.SubModule.is_full_module", false]], "is_full_module() (sympy.polys.agca.modules.subquotientmodule method)": [[214, "sympy.polys.agca.modules.SubQuotientModule.is_full_module", false]], "is_gaussian_prime() (in module sympy.ntheory.primetest)": [[109, "sympy.ntheory.primetest.is_gaussian_prime", false]], "is_groebner() (in module sympy.polys.groebnertools)": [[220, "sympy.polys.groebnertools.is_groebner", false]], "is_ground (sympy.polys.polyclasses.anp property)": [[218, "sympy.polys.polyclasses.ANP.is_ground", false]], "is_ground (sympy.polys.polyclasses.dmp property)": [[218, "sympy.polys.polyclasses.DMP.is_ground", false]], "is_ground (sympy.polys.polytools.poly property)": [[223, "sympy.polys.polytools.Poly.is_ground", false]], "is_hermitian (sympy.matrices.matrixbase.matrixbase property)": [[105, "sympy.matrices.matrixbase.MatrixBase.is_hermitian", false]], "is_homogeneous (sympy.polys.polyclasses.dmp property)": [[218, "sympy.polys.polyclasses.DMP.is_homogeneous", false]], "is_homogeneous (sympy.polys.polytools.poly property)": [[223, "sympy.polys.polytools.Poly.is_homogeneous", false]], "is_identity (sympy.combinatorics.permutations.permutation property)": [[61, "sympy.combinatorics.permutations.Permutation.is_Identity", false]], "is_identity (sympy.core.function.lambda property)": [[69, "sympy.core.function.Lambda.is_identity", false]], "is_increasing() (in module sympy.calculus.singularities)": [[48, "sympy.calculus.singularities.is_increasing", false]], "is_indefinite (sympy.matrices.matrixbase.matrixbase property)": [[105, "sympy.matrices.matrixbase.MatrixBase.is_indefinite", false]], "is_inert (sympy.polys.numberfields.primes.primeideal property)": [[222, "sympy.polys.numberfields.primes.PrimeIdeal.is_inert", false]], "is_injective() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[214, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.is_injective", false]], "is_int() (in module sympy.polys.numberfields.utilities)": [[222, "sympy.polys.numberfields.utilities.is_int", false]], "is_irreducible (sympy.polys.polyclasses.dmp property)": [[218, "sympy.polys.polyclasses.DMP.is_irreducible", false]], "is_irreducible (sympy.polys.polytools.poly property)": [[223, "sympy.polys.polytools.Poly.is_irreducible", false]], "is_isomorphism() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[214, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.is_isomorphism", false]], "is_isosceles() (sympy.geometry.polygon.triangle method)": [[85, "sympy.geometry.polygon.Triangle.is_isosceles", false]], "is_iterable (sympy.sets.sets.productset property)": [[235, "sympy.sets.sets.ProductSet.is_iterable", false]], "is_left_unbounded (sympy.sets.sets.interval property)": [[235, "sympy.sets.sets.Interval.is_left_unbounded", false]], "is_linear (sympy.polys.polyclasses.dmp property)": [[218, "sympy.polys.polyclasses.DMP.is_linear", false]], "is_linear (sympy.polys.polytools.poly property)": [[223, "sympy.polys.polytools.Poly.is_linear", false]], "is_lower (sympy.matrices.matrixbase.matrixbase property)": [[105, "sympy.matrices.matrixbase.MatrixBase.is_lower", false]], "is_lower (sympy.polys.matrices.domainmatrix.domainmatrix property)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.is_lower", false]], "is_lower() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.is_lower", false]], "is_lower() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.is_lower", false]], "is_lower() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.is_lower", false]], "is_lower_hessenberg (sympy.matrices.matrixbase.matrixbase property)": [[105, "sympy.matrices.matrixbase.MatrixBase.is_lower_hessenberg", false]], "is_lucas_prp() (in module sympy.ntheory.primetest)": [[109, "sympy.ntheory.primetest.is_lucas_prp", false]], "is_maximal() (sympy.polys.agca.ideals.ideal method)": [[214, "sympy.polys.agca.ideals.Ideal.is_maximal", false]], "is_meromorphic() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.is_meromorphic", false]], "is_mersenne_prime() (in module sympy.ntheory.primetest)": [[109, "sympy.ntheory.primetest.is_mersenne_prime", false]], "is_minimal() (in module sympy.polys.groebnertools)": [[220, "sympy.polys.groebnertools.is_minimal", false]], "is_monic (sympy.polys.polyclasses.dmp property)": [[218, "sympy.polys.polyclasses.DMP.is_monic", false]], "is_monic (sympy.polys.polytools.poly property)": [[223, "sympy.polys.polytools.Poly.is_monic", false]], "is_monomial (sympy.polys.polyclasses.dmp property)": [[218, "sympy.polys.polyclasses.DMP.is_monomial", false]], "is_monomial (sympy.polys.polytools.poly property)": [[223, "sympy.polys.polytools.Poly.is_monomial", false]], "is_monotonic() (in module sympy.calculus.singularities)": [[48, "sympy.calculus.singularities.is_monotonic", false]], "is_multivariate (sympy.polys.polytools.poly property)": [[223, "sympy.polys.polytools.Poly.is_multivariate", false]], "is_negative() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.is_negative", false]], "is_negative() (sympy.polys.domains.complexfield method)": [[218, "sympy.polys.domains.ComplexField.is_negative", false]], "is_negative() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.is_negative", false]], "is_negative() (sympy.polys.domains.expressiondomain method)": [[218, "sympy.polys.domains.ExpressionDomain.is_negative", false]], "is_negative() (sympy.polys.domains.finitefield method)": [[218, "sympy.polys.domains.FiniteField.is_negative", false]], "is_negative() (sympy.polys.domains.fractionfield method)": [[218, "sympy.polys.domains.FractionField.is_negative", false]], "is_negative() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianDomain.is_negative", false]], "is_negative() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.is_negative", false]], "is_negative_definite (sympy.matrices.matrixbase.matrixbase property)": [[105, "sympy.matrices.matrixbase.MatrixBase.is_negative_definite", false]], "is_negative_semidefinite (sympy.matrices.matrixbase.matrixbase property)": [[105, "sympy.matrices.matrixbase.MatrixBase.is_negative_semidefinite", false]], "is_nilpotent (sympy.combinatorics.perm_groups.permutationgroup property)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.is_nilpotent", false]], "is_nilpotent() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.is_nilpotent", false]], "is_nilpotent_number() (in module sympy.combinatorics.group_numbers)": [[55, "sympy.combinatorics.group_numbers.is_nilpotent_number", false]], "is_nnf() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.is_nnf", false]], "is_nonnegative() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.complexfield method)": [[218, "sympy.polys.domains.ComplexField.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.expressiondomain method)": [[218, "sympy.polys.domains.ExpressionDomain.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.finitefield method)": [[218, "sympy.polys.domains.FiniteField.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.fractionfield method)": [[218, "sympy.polys.domains.FractionField.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianDomain.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.is_nonnegative", false]], "is_nonpositive() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.complexfield method)": [[218, "sympy.polys.domains.ComplexField.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.expressiondomain method)": [[218, "sympy.polys.domains.ExpressionDomain.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.finitefield method)": [[218, "sympy.polys.domains.FiniteField.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.fractionfield method)": [[218, "sympy.polys.domains.FractionField.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianDomain.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.is_nonpositive", false]], "is_nonzero (sympy.geometry.point.point property)": [[84, "sympy.geometry.point.Point.is_nonzero", false]], "is_normal() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.is_normal", false]], "is_normalized (sympy.physics.quantum.state.wavefunction property)": [[190, "sympy.physics.quantum.state.Wavefunction.is_normalized", false]], "is_nthpow_residue() (in module sympy.ntheory.residue_ntheory)": [[109, "sympy.ntheory.residue_ntheory.is_nthpow_residue", false]], "is_number (sympy.concrete.expr_with_limits.exprwithlimits property)": [[96, "sympy.concrete.expr_with_limits.ExprWithLimits.is_number", false]], "is_number (sympy.core.expr.expr property)": [[69, "sympy.core.expr.Expr.is_number", false]], "is_number (sympy.functions.special.hyper.meijerg property)": [[77, "sympy.functions.special.hyper.meijerg.is_number", false]], "is_odd (sympy.combinatorics.permutations.permutation property)": [[61, "sympy.combinatorics.permutations.Permutation.is_odd", false]], "is_one (sympy.polys.polyclasses.anp property)": [[218, "sympy.polys.polyclasses.ANP.is_one", false]], "is_one (sympy.polys.polyclasses.dmf property)": [[218, "sympy.polys.polyclasses.DMF.is_one", false]], "is_one (sympy.polys.polyclasses.dmp property)": [[218, "sympy.polys.polyclasses.DMP.is_one", false]], "is_one (sympy.polys.polytools.poly property)": [[223, "sympy.polys.polytools.Poly.is_one", false]], "is_one() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.is_one", false]], "is_only_above_fermi (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[77, "sympy.functions.special.tensor_functions.KroneckerDelta.is_only_above_fermi", false]], "is_only_above_fermi (sympy.physics.secondquant.kroneckerdelta property)": [[192, "sympy.physics.secondquant.KroneckerDelta.is_only_above_fermi", false]], "is_only_below_fermi (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[77, "sympy.functions.special.tensor_functions.KroneckerDelta.is_only_below_fermi", false]], "is_only_below_fermi (sympy.physics.secondquant.kroneckerdelta property)": [[192, "sympy.physics.secondquant.KroneckerDelta.is_only_below_fermi", false]], "is_only_q_annihilator (sympy.physics.secondquant.annihilatefermion property)": [[192, "sympy.physics.secondquant.AnnihilateFermion.is_only_q_annihilator", false]], "is_only_q_annihilator (sympy.physics.secondquant.createfermion property)": [[192, "sympy.physics.secondquant.CreateFermion.is_only_q_annihilator", false]], "is_only_q_creator (sympy.physics.secondquant.annihilatefermion property)": [[192, "sympy.physics.secondquant.AnnihilateFermion.is_only_q_creator", false]], "is_only_q_creator (sympy.physics.secondquant.createfermion property)": [[192, "sympy.physics.secondquant.CreateFermion.is_only_q_creator", false]], "is_open (sympy.sets.sets.set property)": [[235, "sympy.sets.sets.Set.is_open", false]], "is_palindromic() (in module sympy.ntheory.digits)": [[109, "sympy.ntheory.digits.is_palindromic", false]], "is_palindromic() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.is_palindromic", false]], "is_parallel() (sympy.geometry.line.linearentity method)": [[82, "sympy.geometry.line.LinearEntity.is_parallel", false]], "is_parallel() (sympy.geometry.plane.plane method)": [[83, "sympy.geometry.plane.Plane.is_parallel", false]], "is_perfect (sympy.combinatorics.perm_groups.permutationgroup property)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.is_perfect", false]], "is_perfect() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.is_perfect", false]], "is_perpendicular() (sympy.geometry.line.linearentity method)": [[82, "sympy.geometry.line.LinearEntity.is_perpendicular", false]], "is_perpendicular() (sympy.geometry.plane.plane method)": [[83, "sympy.geometry.plane.Plane.is_perpendicular", false]], "is_pid (sympy.polys.domains.domain.domain attribute)": [[218, "sympy.polys.domains.domain.Domain.is_PID", false]], "is_polycyclic (sympy.combinatorics.perm_groups.permutationgroup property)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.is_polycyclic", false]], "is_polynomial() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.is_polynomial", false]], "is_positive() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.is_positive", false]], "is_positive() (sympy.polys.domains.complexfield method)": [[218, "sympy.polys.domains.ComplexField.is_positive", false]], "is_positive() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.is_positive", false]], "is_positive() (sympy.polys.domains.expressiondomain method)": [[218, "sympy.polys.domains.ExpressionDomain.is_positive", false]], "is_positive() (sympy.polys.domains.finitefield method)": [[218, "sympy.polys.domains.FiniteField.is_positive", false]], "is_positive() (sympy.polys.domains.fractionfield method)": [[218, "sympy.polys.domains.FractionField.is_positive", false]], "is_positive() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianDomain.is_positive", false]], "is_positive() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.is_positive", false]], "is_positive_definite (sympy.matrices.matrixbase.matrixbase property)": [[105, "sympy.matrices.matrixbase.MatrixBase.is_positive_definite", false]], "is_positive_semidefinite (sympy.matrices.matrixbase.matrixbase property)": [[105, "sympy.matrices.matrixbase.MatrixBase.is_positive_semidefinite", false]], "is_prefixed (sympy.physics.units.quantities.quantity property)": [[199, "sympy.physics.units.quantities.Quantity.is_prefixed", false]], "is_primary() (sympy.polys.agca.ideals.ideal method)": [[214, "sympy.polys.agca.ideals.Ideal.is_primary", false]], "is_prime() (sympy.polys.agca.ideals.ideal method)": [[214, "sympy.polys.agca.ideals.Ideal.is_prime", false]], "is_primitive (sympy.polys.polyclasses.dmp property)": [[218, "sympy.polys.polyclasses.DMP.is_primitive", false]], "is_primitive (sympy.polys.polytools.poly property)": [[223, "sympy.polys.polytools.Poly.is_primitive", false]], "is_primitive() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.is_primitive", false]], "is_primitive_element (sympy.core.numbers.algebraicnumber property)": [[69, "sympy.core.numbers.AlgebraicNumber.is_primitive_element", false]], "is_primitive_root() (in module sympy.ntheory.residue_ntheory)": [[109, "sympy.ntheory.residue_ntheory.is_primitive_root", false]], "is_principal() (sympy.polys.agca.ideals.ideal method)": [[214, "sympy.polys.agca.ideals.Ideal.is_principal", false]], "is_proper (sympy.physics.control.lti.parallel property)": [[125, "sympy.physics.control.lti.Parallel.is_proper", false]], "is_proper (sympy.physics.control.lti.series property)": [[125, "sympy.physics.control.lti.Series.is_proper", false]], "is_proper (sympy.physics.control.lti.transferfunction property)": [[125, "sympy.physics.control.lti.TransferFunction.is_proper", false]], "is_proper_subset() (sympy.sets.sets.set method)": [[235, "sympy.sets.sets.Set.is_proper_subset", false]], "is_proper_superset() (sympy.sets.sets.set method)": [[235, "sympy.sets.sets.Set.is_proper_superset", false]], "is_pure() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.is_pure", false]], "is_q_annihilator (sympy.physics.secondquant.annihilatefermion property)": [[192, "sympy.physics.secondquant.AnnihilateFermion.is_q_annihilator", false]], "is_q_annihilator (sympy.physics.secondquant.createfermion property)": [[192, "sympy.physics.secondquant.CreateFermion.is_q_annihilator", false]], "is_q_creator (sympy.physics.secondquant.annihilatefermion property)": [[192, "sympy.physics.secondquant.AnnihilateFermion.is_q_creator", false]], "is_q_creator (sympy.physics.secondquant.createfermion property)": [[192, "sympy.physics.secondquant.CreateFermion.is_q_creator", false]], "is_quad_residue() (in module sympy.ntheory.residue_ntheory)": [[109, "sympy.ntheory.residue_ntheory.is_quad_residue", false]], "is_quadratic (sympy.polys.polyclasses.dmp property)": [[218, "sympy.polys.polyclasses.DMP.is_quadratic", false]], "is_quadratic (sympy.polys.polytools.poly property)": [[223, "sympy.polys.polytools.Poly.is_quadratic", false]], "is_radical() (sympy.polys.agca.ideals.ideal method)": [[214, "sympy.polys.agca.ideals.Ideal.is_radical", false]], "is_rat() (in module sympy.polys.numberfields.utilities)": [[222, "sympy.polys.numberfields.utilities.is_rat", false]], "is_rational (sympy.polys.numberfields.modules.powerbasiselement property)": [[222, "sympy.polys.numberfields.modules.PowerBasisElement.is_rational", false]], "is_rational_function() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.is_rational_function", false]], "is_reduced() (in module sympy.polys.groebnertools)": [[220, "sympy.polys.groebnertools.is_reduced", false]], "is_right() (sympy.geometry.polygon.triangle method)": [[85, "sympy.geometry.polygon.Triangle.is_right", false]], "is_right_unbounded (sympy.sets.sets.interval property)": [[235, "sympy.sets.sets.Interval.is_right_unbounded", false]], "is_ring (sympy.polys.domains.domain.domain attribute)": [[218, "sympy.polys.domains.domain.Domain.is_Ring", false]], "is_same() (sympy.core.basic.basic method)": [[69, "sympy.core.basic.Basic.is_same", false]], "is_scalar_multiple() (sympy.geometry.point.point method)": [[84, "sympy.geometry.point.Point.is_scalar_multiple", false]], "is_scalene() (sympy.geometry.polygon.triangle method)": [[85, "sympy.geometry.polygon.Triangle.is_scalene", false]], "is_sequence() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.is_sequence", false]], "is_similar() (sympy.geometry.entity.geometryentity method)": [[80, "sympy.geometry.entity.GeometryEntity.is_similar", false]], "is_similar() (sympy.geometry.line.linearentity method)": [[82, "sympy.geometry.line.LinearEntity.is_similar", false]], "is_similar() (sympy.geometry.polygon.triangle method)": [[85, "sympy.geometry.polygon.Triangle.is_similar", false]], "is_simple() (sympy.functions.special.delta_functions.diracdelta method)": [[77, "sympy.functions.special.delta_functions.DiracDelta.is_simple", false]], "is_singleton (sympy.combinatorics.permutations.permutation property)": [[61, "sympy.combinatorics.permutations.Permutation.is_Singleton", false]], "is_singular() (sympy.core.function.function class method)": [[69, "sympy.core.function.Function.is_singular", false]], "is_singular() (sympy.holonomic.holonomic.differentialoperator method)": [[92, "sympy.holonomic.holonomic.DifferentialOperator.is_singular", false]], "is_solenoidal() (in module sympy.physics.vector.fieldfunctions)": [[203, "sympy.physics.vector.fieldfunctions.is_solenoidal", false]], "is_solenoidal() (in module sympy.vector)": [[274, "sympy.vector.is_solenoidal", false]], "is_solvable (sympy.combinatorics.perm_groups.permutationgroup property)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.is_solvable", false]], "is_sqf (sympy.polys.polyclasses.dmp property)": [[218, "sympy.polys.polyclasses.DMP.is_sqf", false]], "is_sqf (sympy.polys.polytools.poly property)": [[223, "sympy.polys.polytools.Poly.is_sqf", false]], "is_square (sympy.matrices.matrixbase.matrixbase property)": [[105, "sympy.matrices.matrixbase.MatrixBase.is_square", false]], "is_square (sympy.polys.matrices.domainmatrix.domainmatrix property)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.is_square", false]], "is_square() (in module sympy.ntheory.primetest)": [[109, "sympy.ntheory.primetest.is_square", false]], "is_square() (sympy.polys.domains.complexfield method)": [[218, "sympy.polys.domains.ComplexField.is_square", false]], "is_square() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.is_square", false]], "is_square() (sympy.polys.domains.finitefield method)": [[218, "sympy.polys.domains.FiniteField.is_square", false]], "is_square() (sympy.polys.domains.integerring method)": [[218, "sympy.polys.domains.IntegerRing.is_square", false]], "is_square() (sympy.polys.domains.rationalfield method)": [[218, "sympy.polys.domains.RationalField.is_square", false]], "is_square() (sympy.polys.domains.realfield method)": [[218, "sympy.polys.domains.RealField.is_square", false]], "is_stable() (sympy.physics.control.lti.transferfunction method)": [[125, "sympy.physics.control.lti.TransferFunction.is_stable", false]], "is_strictly_decreasing() (in module sympy.calculus.singularities)": [[48, "sympy.calculus.singularities.is_strictly_decreasing", false]], "is_strictly_increasing() (in module sympy.calculus.singularities)": [[48, "sympy.calculus.singularities.is_strictly_increasing", false]], "is_strictly_proper (sympy.physics.control.lti.parallel property)": [[125, "sympy.physics.control.lti.Parallel.is_strictly_proper", false]], "is_strictly_proper (sympy.physics.control.lti.series property)": [[125, "sympy.physics.control.lti.Series.is_strictly_proper", false]], "is_strictly_proper (sympy.physics.control.lti.transferfunction property)": [[125, "sympy.physics.control.lti.TransferFunction.is_strictly_proper", false]], "is_strong_lucas_prp() (in module sympy.ntheory.primetest)": [[109, "sympy.ntheory.primetest.is_strong_lucas_prp", false]], "is_strongly_diagonally_dominant (sympy.matrices.matrixbase.matrixbase property)": [[105, "sympy.matrices.matrixbase.MatrixBase.is_strongly_diagonally_dominant", false]], "is_subdiagram() (sympy.categories.diagram method)": [[49, "sympy.categories.Diagram.is_subdiagram", false]], "is_subgroup() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.is_subgroup", false]], "is_submodule() (sympy.polys.agca.modules.freemodule method)": [[214, "sympy.polys.agca.modules.FreeModule.is_submodule", false]], "is_submodule() (sympy.polys.agca.modules.module method)": [[214, "sympy.polys.agca.modules.Module.is_submodule", false]], "is_submodule() (sympy.polys.agca.modules.quotientmodule method)": [[214, "sympy.polys.agca.modules.QuotientModule.is_submodule", false]], "is_submodule() (sympy.polys.agca.modules.submodule method)": [[214, "sympy.polys.agca.modules.SubModule.is_submodule", false]], "is_subset() (sympy.sets.sets.set method)": [[235, "sympy.sets.sets.Set.is_subset", false]], "is_superset() (sympy.sets.sets.set method)": [[235, "sympy.sets.sets.Set.is_superset", false]], "is_surjective() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[214, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.is_surjective", false]], "is_symbolic() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.is_symbolic", false]], "is_symmetric (sympy.combinatorics.perm_groups.permutationgroup property)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.is_symmetric", false]], "is_symmetric() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.is_symmetric", false]], "is_tangent() (sympy.geometry.ellipse.ellipse method)": [[79, "sympy.geometry.ellipse.Ellipse.is_tangent", false]], "is_transitive() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.is_transitive", false]], "is_trivial (sympy.combinatorics.perm_groups.permutationgroup property)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.is_trivial", false]], "is_unit() (sympy.polys.domains.field.field method)": [[218, "sympy.polys.domains.field.Field.is_unit", false]], "is_unit() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.is_unit", false]], "is_univariate (sympy.polys.polytools.poly property)": [[223, "sympy.polys.polytools.Poly.is_univariate", false]], "is_upper (sympy.matrices.matrixbase.matrixbase property)": [[105, "sympy.matrices.matrixbase.MatrixBase.is_upper", false]], "is_upper (sympy.polys.matrices.domainmatrix.domainmatrix property)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.is_upper", false]], "is_upper() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.is_upper", false]], "is_upper() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.is_upper", false]], "is_upper() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.is_upper", false]], "is_upper_hessenberg (sympy.matrices.matrixbase.matrixbase property)": [[105, "sympy.matrices.matrixbase.MatrixBase.is_upper_hessenberg", false]], "is_weakly_diagonally_dominant (sympy.matrices.matrixbase.matrixbase property)": [[105, "sympy.matrices.matrixbase.MatrixBase.is_weakly_diagonally_dominant", false]], "is_whole_ring() (sympy.polys.agca.ideals.ideal method)": [[214, "sympy.polys.agca.ideals.Ideal.is_whole_ring", false]], "is_zero (sympy.geometry.point.point property)": [[84, "sympy.geometry.point.Point.is_zero", false]], "is_zero (sympy.polys.polyclasses.anp property)": [[218, "sympy.polys.polyclasses.ANP.is_zero", false]], "is_zero (sympy.polys.polyclasses.dmf property)": [[218, "sympy.polys.polyclasses.DMF.is_zero", false]], "is_zero (sympy.polys.polyclasses.dmp property)": [[218, "sympy.polys.polyclasses.DMP.is_zero", false]], "is_zero (sympy.polys.polytools.poly property)": [[223, "sympy.polys.polytools.Poly.is_zero", false]], "is_zero() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[214, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.is_zero", false]], "is_zero() (sympy.polys.agca.ideals.ideal method)": [[214, "sympy.polys.agca.ideals.Ideal.is_zero", false]], "is_zero() (sympy.polys.agca.modules.freemodule method)": [[214, "sympy.polys.agca.modules.FreeModule.is_zero", false]], "is_zero() (sympy.polys.agca.modules.module method)": [[214, "sympy.polys.agca.modules.Module.is_zero", false]], "is_zero() (sympy.polys.agca.modules.quotientmodule method)": [[214, "sympy.polys.agca.modules.QuotientModule.is_zero", false]], "is_zero() (sympy.polys.agca.modules.submodule method)": [[214, "sympy.polys.agca.modules.SubModule.is_zero", false]], "is_zero() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.is_zero", false]], "is_zero_dimensional (sympy.polys.polytools.groebnerbasis property)": [[223, "sympy.polys.polytools.GroebnerBasis.is_zero_dimensional", false]], "is_zero_dimensional() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.is_zero_dimensional", false]], "is_zero_matrix (sympy.matrices.matrixbase.matrixbase property)": [[105, "sympy.matrices.matrixbase.MatrixBase.is_zero_matrix", false]], "is_zero_matrix() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.is_zero_matrix", false]], "is_zero_matrix() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.is_zero_matrix", false]], "is_zero_matrix() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.is_zero_matrix", false]], "is_zero_quaternion() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.is_zero_quaternion", false]], "isdisjoint() (sympy.sets.sets.set method)": [[235, "sympy.sets.sets.Set.isdisjoint", false]], "isign (class in sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.isign", false]], "isolate() (in module sympy.polys.numberfields.utilities)": [[222, "sympy.polys.numberfields.utilities.isolate", false]], "isomorphismfailed (class in sympy.polys.polyerrors)": [[220, "sympy.polys.polyerrors.IsomorphismFailed", false]], "isprime() (in module sympy.ntheory.primetest)": [[109, "sympy.ntheory.primetest.isprime", false]], "isqrt() (in module sympy.core.intfunc)": [[69, "sympy.core.intfunc.isqrt", false]], "issubset() (sympy.sets.sets.set method)": [[235, "sympy.sets.sets.Set.issubset", false]], "issuperset() (sympy.sets.sets.set method)": [[235, "sympy.sets.sets.Set.issuperset", false]], "istruepredicate (class in sympy.assumptions.predicates.common)": [[46, "sympy.assumptions.predicates.common.IsTruePredicate", false]], "isympy": [[15, "term-isympy", true]], "ite (class in sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.ITE", false]], "items() (sympy.core.containers.dict method)": [[69, "sympy.core.containers.Dict.items", false]], "iter_q_annihilators() (sympy.physics.secondquant.no method)": [[192, "sympy.physics.secondquant.NO.iter_q_annihilators", false]], "iter_q_creators() (sympy.physics.secondquant.no method)": [[192, "sympy.physics.secondquant.NO.iter_q_creators", false]], "iterable() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.iterable", false]], "iterate_binary() (sympy.combinatorics.subsets.subset method)": [[64, "sympy.combinatorics.subsets.Subset.iterate_binary", false]], "iterate_graycode() (sympy.combinatorics.subsets.subset method)": [[64, "sympy.combinatorics.subsets.Subset.iterate_graycode", false]], "itercoeffs() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.itercoeffs", false]], "itermonomials() (in module sympy.polys.monomials)": [[223, "sympy.polys.monomials.itermonomials", false]], "itermonoms() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.itermonoms", false]], "iterterms() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.iterterms", false]], "j2op (class in sympy.physics.quantum.spin)": [[189, "sympy.physics.quantum.spin.J2Op", false]], "jacobi (class in sympy.functions.special.polynomials)": [[77, "sympy.functions.special.polynomials.jacobi", false]], "jacobi_normalized() (in module sympy.functions.special.polynomials)": [[77, "sympy.functions.special.polynomials.jacobi_normalized", false]], "jacobi_poly() (in module sympy.polys.orthopolys)": [[223, "sympy.polys.orthopolys.jacobi_poly", false]], "jacobi_symbol (class in sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.jacobi_symbol", false]], "jacobi_symbol() (in module sympy.ntheory.residue_ntheory)": [[109, "sympy.ntheory.residue_ntheory.jacobi_symbol", false]], "jacobian() (sympy.diffgeom.coordsystem method)": [[71, "sympy.diffgeom.CoordSystem.jacobian", false]], "jacobian() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.jacobian", false]], "jacobian_determinant() (sympy.diffgeom.coordsystem method)": [[71, "sympy.diffgeom.CoordSystem.jacobian_determinant", false]], "jacobian_matrix() (sympy.diffgeom.coordsystem method)": [[71, "sympy.diffgeom.CoordSystem.jacobian_matrix", false]], "javascriptcodeprinter (class in sympy.printing.jscode)": [[227, "sympy.printing.jscode.JavascriptCodePrinter", false]], "jn (class in sympy.functions.special.bessel)": [[77, "sympy.functions.special.bessel.jn", false]], "jn_zeros() (in module sympy.functions.special.bessel)": [[77, "sympy.functions.special.bessel.jn_zeros", false]], "join() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.join", false]], "joint (class in sympy.physics.mechanics.joint)": [[134, "sympy.physics.mechanics.joint.Joint", false]], "joint_axis (sympy.physics.mechanics.joint.cylindricaljoint property)": [[134, "sympy.physics.mechanics.joint.CylindricalJoint.joint_axis", false]], "joint_axis (sympy.physics.mechanics.joint.pinjoint property)": [[134, "sympy.physics.mechanics.joint.PinJoint.joint_axis", false]], "joint_axis (sympy.physics.mechanics.joint.prismaticjoint property)": [[134, "sympy.physics.mechanics.joint.PrismaticJoint.joint_axis", false]], "jointrv() (in module sympy.stats)": [[247, "sympy.stats.JointRV", false]], "joints (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.joints", false]], "jointsmethod (class in sympy.physics.mechanics.jointsmethod)": [[131, "sympy.physics.mechanics.jointsmethod.JointsMethod", false]], "jones_2_stokes() (in module sympy.physics.optics.polarization)": [[164, "sympy.physics.optics.polarization.jones_2_stokes", false]], "jones_vector() (in module sympy.physics.optics.polarization)": [[164, "sympy.physics.optics.polarization.jones_vector", false]], "jordan_block() (sympy.matrices.matrixbase.matrixbase class method)": [[105, "sympy.matrices.matrixbase.MatrixBase.jordan_block", false]], "jordan_cell() (in module sympy.matrices.dense)": [[105, "sympy.matrices.dense.jordan_cell", false]], "jordan_form() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.jordan_form", false]], "josephus() (sympy.combinatorics.permutations.permutation class method)": [[61, "sympy.combinatorics.permutations.Permutation.josephus", false]], "jscode() (in module sympy.printing.jscode)": [[227, "sympy.printing.jscode.jscode", false]], "julia_code() (in module sympy.printing.julia)": [[227, "sympy.printing.julia.julia_code", false]], "juliacodegen (class in sympy.utilities.codegen)": [[260, "sympy.utilities.codegen.JuliaCodeGen", false]], "juliacodeprinter (class in sympy.printing.julia)": [[227, "sympy.printing.julia.JuliaCodePrinter", false]], "jxbra (class in sympy.physics.quantum.spin)": [[189, "sympy.physics.quantum.spin.JxBra", false]], "jxbracoupled (class in sympy.physics.quantum.spin)": [[189, "sympy.physics.quantum.spin.JxBraCoupled", false]], "jxket (class in sympy.physics.quantum.spin)": [[189, "sympy.physics.quantum.spin.JxKet", false]], "jxketcoupled (class in sympy.physics.quantum.spin)": [[189, "sympy.physics.quantum.spin.JxKetCoupled", false]], "jybra (class in sympy.physics.quantum.spin)": [[189, "sympy.physics.quantum.spin.JyBra", false]], "jybracoupled (class in sympy.physics.quantum.spin)": [[189, "sympy.physics.quantum.spin.JyBraCoupled", false]], "jyket (class in sympy.physics.quantum.spin)": [[189, "sympy.physics.quantum.spin.JyKet", false]], "jyketcoupled (class in sympy.physics.quantum.spin)": [[189, "sympy.physics.quantum.spin.JyKetCoupled", false]], "jzbra (class in sympy.physics.quantum.spin)": [[189, "sympy.physics.quantum.spin.JzBra", false]], "jzbracoupled (class in sympy.physics.quantum.spin)": [[189, "sympy.physics.quantum.spin.JzBraCoupled", false]], "jzket (class in sympy.physics.quantum.spin)": [[189, "sympy.physics.quantum.spin.JzKet", false]], "jzketcoupled (class in sympy.physics.quantum.spin)": [[189, "sympy.physics.quantum.spin.JzKetCoupled", false]], "jzop (class in sympy.physics.quantum.spin)": [[189, "sympy.physics.quantum.spin.JzOp", false]], "kahane_simplify() (in module sympy.physics.hep.gamma_matrices)": [[126, "sympy.physics.hep.gamma_matrices.kahane_simplify", false]], "kanes_equations() (sympy.physics.mechanics.kane.kanesmethod method)": [[135, "sympy.physics.mechanics.kane.KanesMethod.kanes_equations", false]], "kanesmethod (class in sympy.physics.mechanics.kane)": [[135, "sympy.physics.mechanics.kane.KanesMethod", false]], "kbins() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.kbins", false]], "kdes (sympy.physics.mechanics.joint.joint property)": [[134, "sympy.physics.mechanics.joint.Joint.kdes", false]], "kdes (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[131, "sympy.physics.mechanics.jointsmethod.JointsMethod.kdes", false]], "kdes (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.kdes", false]], "kernel() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[214, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.kernel", false]], "kernel() (sympy.polys.numberfields.modules.modulehomomorphism method)": [[222, "sympy.polys.numberfields.modules.ModuleHomomorphism.kernel", false]], "ket (class in sympy.physics.quantum.state)": [[190, "sympy.physics.quantum.state.Ket", false]], "ket (sympy.physics.quantum.operator.outerproduct property)": [[181, "sympy.physics.quantum.operator.OuterProduct.ket", false]], "ket (sympy.physics.secondquant.innerproduct property)": [[192, "sympy.physics.secondquant.InnerProduct.ket", false]], "ketbase (class in sympy.physics.quantum.state)": [[190, "sympy.physics.quantum.state.KetBase", false]], "key2bounds() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.key2bounds", false]], "key2ij() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.key2ij", false]], "keys() (sympy.core.containers.dict method)": [[69, "sympy.core.containers.Dict.keys", false]], "kid_rsa_private_key() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.kid_rsa_private_key", false]], "kid_rsa_public_key() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.kid_rsa_public_key", false]], "killable_index (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[77, "sympy.functions.special.tensor_functions.KroneckerDelta.killable_index", false]], "killable_index (sympy.physics.secondquant.kroneckerdelta property)": [[192, "sympy.physics.secondquant.KroneckerDelta.killable_index", false]], "kin_explicit_rhs (sympy.physics.mechanics.system.symbolicsystem property)": [[140, "sympy.physics.mechanics.system.SymbolicSystem.kin_explicit_rhs", false]], "kind": [[15, "term-Kind", true]], "kind (class in sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.kind", false]], "kind (class in sympy.core.kind)": [[69, "sympy.core.kind.Kind", false]], "kind (sympy.core.containers.tuple property)": [[69, "sympy.core.containers.Tuple.kind", false]], "kind (sympy.sets.sets.set property)": [[235, "sympy.sets.sets.Set.kind", false]], "kindiffdict() (sympy.physics.mechanics.kane.kanesmethod method)": [[135, "sympy.physics.mechanics.kane.KanesMethod.kindiffdict", false]], "kinematic_equations() (in module sympy.physics.vector.functions)": [[206, "sympy.physics.vector.functions.kinematic_equations", false]], "kinetic_energy() (in module sympy.physics.mechanics.functions)": [[137, "sympy.physics.mechanics.functions.kinetic_energy", false]], "kinetic_energy() (sympy.physics.mechanics.body.body method)": [[131, "sympy.physics.mechanics.body.Body.kinetic_energy", false]], "kinetic_energy() (sympy.physics.mechanics.particle.particle method)": [[137, "sympy.physics.mechanics.particle.Particle.kinetic_energy", false]], "kinetic_energy() (sympy.physics.mechanics.rigidbody.rigidbody method)": [[137, "sympy.physics.mechanics.rigidbody.RigidBody.kinetic_energy", false]], "known_fcns_src1 (in module sympy.printing.julia)": [[227, "sympy.printing.julia.known_fcns_src1", false]], "known_fcns_src1 (in module sympy.printing.octave)": [[227, "sympy.printing.octave.known_fcns_src1", false]], "known_fcns_src2 (in module sympy.printing.julia)": [[227, "sympy.printing.julia.known_fcns_src2", false]], "known_fcns_src2 (in module sympy.printing.octave)": [[227, "sympy.printing.octave.known_fcns_src2", false]], "known_functions (in module sympy.printing.jscode)": [[227, "sympy.printing.jscode.known_functions", false]], "known_functions (in module sympy.printing.mathematica)": [[227, "sympy.printing.mathematica.known_functions", false]], "known_functions (in module sympy.printing.rcode)": [[227, "sympy.printing.rcode.known_functions", false]], "known_functions (in module sympy.printing.rust)": [[227, "sympy.printing.rust.known_functions", false]], "known_functions_c89 (in module sympy.printing.c)": [[227, "sympy.printing.c.known_functions_C89", false]], "known_functions_c99 (in module sympy.printing.c)": [[227, "sympy.printing.c.known_functions_C99", false]], "kronecker_symbol (class in sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.kronecker_symbol", false]], "kroneckerdelta (class in sympy.functions.special.tensor_functions)": [[77, "sympy.functions.special.tensor_functions.KroneckerDelta", false]], "kroneckerdelta (class in sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.KroneckerDelta", false]], "kroneckersimp() (in module sympy.simplify.simplify)": [[239, "sympy.simplify.simplify.kroneckersimp", false]], "ksubsets() (sympy.combinatorics.subsets method)": [[64, "sympy.combinatorics.subsets.ksubsets", false]], "kumaraswamy() (in module sympy.stats)": [[247, "sympy.stats.Kumaraswamy", false]], "kurtosis() (in module sympy.stats)": [[247, "sympy.stats.kurtosis", false]], "kwargs() (sympy.codegen.ast.token method)": [[50, "sympy.codegen.ast.Token.kwargs", false]], "l1_norm() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.l1_norm", false]], "l1_norm() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.l1_norm", false]], "l2 (class in sympy.physics.quantum.hilbert)": [[178, "sympy.physics.quantum.hilbert.L2", false]], "l2_norm_squared() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.l2_norm_squared", false]], "l_m_opt (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.l_M_opt", false]], "l_t_slack (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.l_T_slack", false]], "label (class in sympy.codegen.cnodes)": [[50, "sympy.codegen.cnodes.Label", false]], "label (sympy.physics.quantum.state.timedepstate property)": [[190, "sympy.physics.quantum.state.TimeDepState.label", false]], "label (sympy.tensor.indexed.idx property)": [[252, "sympy.tensor.indexed.Idx.label", false]], "label (sympy.tensor.indexed.indexedbase property)": [[252, "sympy.tensor.indexed.IndexedBase.label", false]], "labeller() (in module sympy.physics.quantum.circuitplot)": [[172, "sympy.physics.quantum.circuitplot.labeller", false]], "lagrangesmethod (class in sympy.physics.mechanics.lagrange)": [[135, "sympy.physics.mechanics.lagrange.LagrangesMethod", false]], "lagrangian() (in module sympy.physics.mechanics.functions)": [[137, "sympy.physics.mechanics.functions.Lagrangian", false]], "laguerre (class in sympy.functions.special.polynomials)": [[77, "sympy.functions.special.polynomials.laguerre", false]], "laguerre_poly() (in module sympy.polys.orthopolys)": [[223, "sympy.polys.orthopolys.laguerre_poly", false]], "lambda (class in sympy.core.function)": [[69, "sympy.core.function.Lambda", false]], "lambda_notation() (in module sympy.parsing.sympy_parser)": [[111, "sympy.parsing.sympy_parser.lambda_notation", false]], "lambdaprinter (class in sympy.printing.lambdarepr)": [[227, "sympy.printing.lambdarepr.LambdaPrinter", false]], "lambdarepr() (in module sympy.printing.lambdarepr)": [[227, "sympy.printing.lambdarepr.lambdarepr", false]], "lambdastr() (in module sympy.utilities.lambdify)": [[266, "sympy.utilities.lambdify.lambdastr", false]], "lambdify()": [[15, "term-lambdify", true]], "lambdify() (in module sympy.utilities.lambdify)": [[266, "sympy.utilities.lambdify.lambdify", false]], "lambertw (class in sympy.functions.elementary.exponential)": [[75, "sympy.functions.elementary.exponential.LambertW", false]], "lamda": [[15, "term-lamda", true]], "laplace() (in module sympy.stats)": [[247, "sympy.stats.Laplace", false]], "laplace_correspondence() (in module sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.laplace_correspondence", false]], "laplace_initial_conds() (in module sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.laplace_initial_conds", false]], "laplace_transform() (in module sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.laplace_transform", false]], "laplacetransform (class in sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.LaplaceTransform", false]], "larklatexparser (class in sympy.parsing.latex.lark)": [[111, "sympy.parsing.latex.lark.LarkLaTeXParser", false]], "latex() (in module sympy.printing.latex)": [[227, "sympy.printing.latex.latex", false]], "latexparsingerror (class in sympy.parsing.latex)": [[111, "sympy.parsing.latex.LaTeXParsingError", false]], "latexprinter (class in sympy.printing.latex)": [[227, "sympy.printing.latex.LatexPrinter", false]], "lbound() (in module sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.lbound", false]], "lc() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.LC", false]], "lc() (sympy.polys.polyclasses.anp method)": [[218, "sympy.polys.polyclasses.ANP.LC", false]], "lc() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.LC", false]], "lc() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.LC", false]], "lcim() (in module sympy.calculus.util)": [[48, "sympy.calculus.util.lcim", false]], "lcm() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.lcm", false]], "lcm() (sympy.core.numbers.number method)": [[69, "sympy.core.numbers.Number.lcm", false]], "lcm() (sympy.polys.domains.complexfield method)": [[218, "sympy.polys.domains.ComplexField.lcm", false]], "lcm() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.lcm", false]], "lcm() (sympy.polys.domains.field.field method)": [[218, "sympy.polys.domains.field.Field.lcm", false]], "lcm() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.lcm", false]], "lcm() (sympy.polys.domains.gmpyintegerring method)": [[218, "sympy.polys.domains.GMPYIntegerRing.lcm", false]], "lcm() (sympy.polys.domains.integerring method)": [[218, "sympy.polys.domains.IntegerRing.lcm", false]], "lcm() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.lcm", false]], "lcm() (sympy.polys.domains.realfield method)": [[218, "sympy.polys.domains.RealField.lcm", false]], "lcm() (sympy.polys.monomials.monomial method)": [[223, "sympy.polys.monomials.Monomial.lcm", false]], "lcm() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.lcm", false]], "lcm() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.lcm", false]], "lcm_list() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.lcm_list", false]], "ldescent() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.ldescent", false]], "ldldecomposition() (sympy.matrices.dense.densematrix method)": [[100, "sympy.matrices.dense.DenseMatrix.LDLdecomposition", false]], "ldldecomposition() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.LDLdecomposition", false]], "ldlsolve() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.LDLsolve", false]], "ldudecomposition() (sympy.matrices.expressions.blockmatrix.blockmatrix method)": [[101, "sympy.matrices.expressions.blockmatrix.BlockMatrix.LDUdecomposition", false]], "le (in module sympy.core.relational)": [[69, "sympy.core.relational.Le", false]], "leading_expv() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.leading_expv", false]], "leading_monom() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.leading_monom", false]], "leading_term() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.leading_term", false]], "leadterm() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.leadterm", false]], "least_rotation() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.least_rotation", false]], "left() (sympy.printing.pretty.stringpict.stringpict method)": [[227, "sympy.printing.pretty.stringpict.stringPict.left", false]], "left_eigenvects() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.left_eigenvects", false]], "left_open (sympy.sets.sets.interval property)": [[235, "sympy.sets.sets.Interval.left_open", false]], "left_support (sympy.physics.continuum_mechanics.cable.cable property)": [[119, "sympy.physics.continuum_mechanics.cable.Cable.left_support", false]], "leftslash() (sympy.printing.pretty.stringpict.stringpict method)": [[227, "sympy.printing.pretty.stringpict.stringPict.leftslash", false]], "legendre (class in sympy.functions.special.polynomials)": [[77, "sympy.functions.special.polynomials.legendre", false]], "legendre_poly() (in module sympy.polys.orthopolys)": [[223, "sympy.polys.orthopolys.legendre_poly", false]], "legendre_symbol (class in sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.legendre_symbol", false]], "legendre_symbol() (in module sympy.ntheory.residue_ntheory)": [[109, "sympy.ntheory.residue_ntheory.legendre_symbol", false]], "length (sympy.geometry.curve.curve property)": [[78, "sympy.geometry.curve.Curve.length", false]], "length (sympy.geometry.line.linearentity property)": [[82, "sympy.geometry.line.LinearEntity.length", false]], "length (sympy.geometry.line.segment property)": [[82, "sympy.geometry.line.Segment.length", false]], "length (sympy.geometry.point.point property)": [[84, "sympy.geometry.point.Point.length", false]], "length (sympy.geometry.polygon.regularpolygon property)": [[85, "sympy.geometry.polygon.RegularPolygon.length", false]], "length (sympy.physics.continuum_mechanics.beam.beam property)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.length", false]], "length (sympy.physics.continuum_mechanics.cable.cable property)": [[119, "sympy.physics.continuum_mechanics.cable.Cable.length", false]], "length (sympy.physics.mechanics.pathway.linearpathway property)": [[138, "sympy.physics.mechanics.pathway.LinearPathway.length", false]], "length (sympy.physics.mechanics.pathway.obstaclesetpathway property)": [[138, "sympy.physics.mechanics.pathway.ObstacleSetPathway.length", false]], "length (sympy.physics.mechanics.pathway.pathwaybase property)": [[138, "sympy.physics.mechanics.pathway.PathwayBase.length", false]], "length (sympy.physics.mechanics.pathway.wrappingpathway property)": [[138, "sympy.physics.mechanics.pathway.WrappingPathway.length", false]], "length (sympy.series.sequences.seqbase property)": [[233, "sympy.series.sequences.SeqBase.length", false]], "length() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.length", false]], "length() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.length", false]], "lens_formula() (in module sympy.physics.optics.utils)": [[165, "sympy.physics.optics.utils.lens_formula", false]], "lens_makers_formula() (in module sympy.physics.optics.utils)": [[165, "sympy.physics.optics.utils.lens_makers_formula", false]], "lerchphi (class in sympy.functions.special.zeta_functions)": [[77, "sympy.functions.special.zeta_functions.lerchphi", false]], "lessthan (class in sympy.core.relational)": [[69, "sympy.core.relational.LessThan", false]], "levicivita (class in sympy.functions.special.tensor_functions)": [[77, "sympy.functions.special.tensor_functions.LeviCivita", false]], "levy() (in module sympy.stats)": [[247, "sympy.stats.Levy", false]], "lexorder (class in sympy.polys.orderings)": [[223, "sympy.polys.orderings.LexOrder", false]], "lfsr_autocorrelation() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.lfsr_autocorrelation", false]], "lfsr_connection_polynomial() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.lfsr_connection_polynomial", false]], "lfsr_sequence() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.lfsr_sequence", false]], "lhs (sympy.core.relational.relational property)": [[69, "sympy.core.relational.Relational.lhs", false]], "li (class in sympy.functions.special.error_functions)": [[77, "sympy.functions.special.error_functions.Li", false], [77, "sympy.functions.special.error_functions.li", false]], "lie_algebra() (sympy.liealgebras.type_a.typea method)": [[98, "sympy.liealgebras.type_a.TypeA.lie_algebra", false]], "lie_algebra() (sympy.liealgebras.type_b.typeb method)": [[98, "sympy.liealgebras.type_b.TypeB.lie_algebra", false]], "lie_algebra() (sympy.liealgebras.type_c.typec method)": [[98, "sympy.liealgebras.type_c.TypeC.lie_algebra", false]], "lie_algebra() (sympy.liealgebras.type_d.typed method)": [[98, "sympy.liealgebras.type_d.TypeD.lie_algebra", false]], "lie_heuristic_abaco1_product() (in module sympy.solvers.ode.lie_group)": [[243, "sympy.solvers.ode.lie_group.lie_heuristic_abaco1_product", false]], "lie_heuristic_abaco1_simple() (in module sympy.solvers.ode.lie_group)": [[243, "sympy.solvers.ode.lie_group.lie_heuristic_abaco1_simple", false]], "lie_heuristic_abaco2_similar() (in module sympy.solvers.ode.lie_group)": [[243, "sympy.solvers.ode.lie_group.lie_heuristic_abaco2_similar", false]], "lie_heuristic_abaco2_unique_general() (in module sympy.solvers.ode.lie_group)": [[243, "sympy.solvers.ode.lie_group.lie_heuristic_abaco2_unique_general", false]], "lie_heuristic_abaco2_unique_unknown() (in module sympy.solvers.ode.lie_group)": [[243, "sympy.solvers.ode.lie_group.lie_heuristic_abaco2_unique_unknown", false]], "lie_heuristic_bivariate() (in module sympy.solvers.ode.lie_group)": [[243, "sympy.solvers.ode.lie_group.lie_heuristic_bivariate", false]], "lie_heuristic_chi() (in module sympy.solvers.ode.lie_group)": [[243, "sympy.solvers.ode.lie_group.lie_heuristic_chi", false]], "lie_heuristic_function_sum() (in module sympy.solvers.ode.lie_group)": [[243, "sympy.solvers.ode.lie_group.lie_heuristic_function_sum", false]], "lie_heuristic_linear() (in module sympy.solvers.ode.lie_group)": [[243, "sympy.solvers.ode.lie_group.lie_heuristic_linear", false]], "liederivative (class in sympy.diffgeom)": [[71, "sympy.diffgeom.LieDerivative", false]], "liegroup (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.LieGroup", false]], "lift() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.lift", false]], "lift() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.lift", false]], "limit (class in sympy.series.limits)": [[234, "sympy.series.limits.Limit", false]], "limit() (in module sympy.series.limits)": [[234, "sympy.series.limits.limit", false]], "limit() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.limit", false]], "limit() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.limit", false]], "limit_denominator() (sympy.core.numbers.rational method)": [[69, "sympy.core.numbers.Rational.limit_denominator", false]], "limit_seq() (in module sympy.series.limitseq)": [[232, "sympy.series.limitseq.limit_seq", false]], "limitinf() (in module sympy.series.gruntz)": [[234, "sympy.series.gruntz.limitinf", false]], "limiting_distribution (sympy.stats.discretemarkovchain property)": [[247, "sympy.stats.DiscreteMarkovChain.limiting_distribution", false]], "limits (sympy.concrete.expr_with_limits.exprwithlimits property)": [[96, "sympy.concrete.expr_with_limits.ExprWithLimits.limits", false]], "limits (sympy.geometry.curve.curve property)": [[78, "sympy.geometry.curve.Curve.limits", false]], "limits (sympy.physics.quantum.state.wavefunction property)": [[190, "sympy.physics.quantum.state.Wavefunction.limits", false]], "line (class in sympy.geometry.line)": [[82, "sympy.geometry.line.Line", false]], "line2d (class in sympy.geometry.line)": [[82, "sympy.geometry.line.Line2D", false]], "line2dbaseseries (class in sympy.plotting.series)": [[213, "sympy.plotting.series.Line2DBaseSeries", false]], "line3d (class in sympy.geometry.line)": [[82, "sympy.geometry.line.Line3D", false]], "line3dbaseseries (class in sympy.plotting.series)": [[213, "sympy.plotting.series.Line3DBaseSeries", false]], "line_integrate() (in module sympy.integrals.integrals)": [[96, "sympy.integrals.integrals.line_integrate", false]], "linear (class in sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.Linear", false]], "linear_eq_to_matrix() (in module sympy.solvers.solveset)": [[246, "sympy.solvers.solveset.linear_eq_to_matrix", false]], "linear_momentum() (in module sympy.physics.mechanics.functions)": [[137, "sympy.physics.mechanics.functions.linear_momentum", false]], "linear_momentum() (sympy.physics.mechanics.body.body method)": [[131, "sympy.physics.mechanics.body.Body.linear_momentum", false]], "linear_momentum() (sympy.physics.mechanics.particle.particle method)": [[137, "sympy.physics.mechanics.particle.Particle.linear_momentum", false]], "linear_momentum() (sympy.physics.mechanics.rigidbody.rigidbody method)": [[137, "sympy.physics.mechanics.rigidbody.RigidBody.linear_momentum", false]], "linear_ode_to_matrix() (in module sympy.solvers.ode.systems)": [[243, "sympy.solvers.ode.systems.linear_ode_to_matrix", false]], "linear_polarizer() (in module sympy.physics.optics.polarization)": [[164, "sympy.physics.optics.polarization.linear_polarizer", false]], "linearcoefficients (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.LinearCoefficients", false]], "lineardamper (class in sympy.physics.mechanics.actuator)": [[130, "sympy.physics.mechanics.actuator.LinearDamper", false]], "linearentity (class in sympy.geometry.line)": [[82, "sympy.geometry.line.LinearEntity", false]], "linearentity2d (class in sympy.geometry.line)": [[82, "sympy.geometry.line.LinearEntity2D", false]], "linearentity3d (class in sympy.geometry.line)": [[82, "sympy.geometry.line.LinearEntity3D", false]], "linearize() (sympy.physics.mechanics.kane.kanesmethod method)": [[135, "sympy.physics.mechanics.kane.KanesMethod.linearize", false]], "linearize() (sympy.physics.mechanics.lagrange.lagrangesmethod method)": [[135, "sympy.physics.mechanics.lagrange.LagrangesMethod.linearize", false]], "linearize() (sympy.physics.mechanics.linearize.linearizer method)": [[136, "sympy.physics.mechanics.linearize.Linearizer.linearize", false]], "linearizer (class in sympy.physics.mechanics.linearize)": [[136, "sympy.physics.mechanics.linearize.Linearizer", false]], "linearpathway (class in sympy.physics.mechanics.pathway)": [[138, "sympy.physics.mechanics.pathway.LinearPathway", false]], "linearspring (class in sympy.physics.mechanics.actuator)": [[130, "sympy.physics.mechanics.actuator.LinearSpring", false]], "lineover1drangeseries (class in sympy.plotting.series)": [[213, "sympy.plotting.series.LineOver1DRangeSeries", false]], "linodesolve() (in module sympy.solvers.ode.systems)": [[243, "sympy.solvers.ode.systems.linodesolve", false]], "linodesolve_type() (in module sympy.solvers.ode.systems)": [[243, "sympy.solvers.ode.systems.linodesolve_type", false]], "linprog() (in module sympy.solvers.simplex)": [[245, "sympy.solvers.simplex.linprog", false]], "linsolve() (in module sympy.solvers.solveset)": [[246, "sympy.solvers.solveset.linsolve", false]], "liouville (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.Liouville", false]], "list() (sympy.combinatorics.permutations.cycle method)": [[61, "sympy.combinatorics.permutations.Cycle.list", false]], "list() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.list", false]], "list2numpy() (in module sympy.matrices.dense)": [[105, "sympy.matrices.dense.list2numpy", false]], "list_can_dims (sympy.physics.units.dimensions.dimensionsystem property)": [[194, "sympy.physics.units.dimensions.DimensionSystem.list_can_dims", false]], "list_visitor() (in module sympy.utilities.enumerative)": [[262, "sympy.utilities.enumerative.list_visitor", false]], "listcoeffs() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.listcoeffs", false]], "listmonoms() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.listmonoms", false]], "listterms() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.listterms", false]], "literal_dp (class in sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.literal_dp", false]], "literal_sp (class in sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.literal_sp", false]], "lll() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.lll", false]], "lll() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.lll", false]], "lll() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.lll", false]], "lll_transform() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.lll_transform", false]], "lll_transform() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.lll_transform", false]], "lll_transform() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.lll_transform", false]], "lm() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.LM", false]], "lm() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.LM", false]], "load (sympy.physics.continuum_mechanics.beam.beam property)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.load", false]], "load_vector (sympy.physics.continuum_mechanics.beam.beam3d property)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.load_vector", false]], "loads (sympy.physics.continuum_mechanics.cable.cable property)": [[119, "sympy.physics.continuum_mechanics.cable.Cable.loads", false]], "loads (sympy.physics.continuum_mechanics.truss.truss property)": [[121, "sympy.physics.continuum_mechanics.truss.Truss.loads", false]], "loads (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[131, "sympy.physics.mechanics.jointsmethod.JointsMethod.loads", false]], "loads (sympy.physics.mechanics.system.symbolicsystem property)": [[140, "sympy.physics.mechanics.system.SymbolicSystem.loads", false]], "loads (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.loads", false]], "loads_position (sympy.physics.continuum_mechanics.cable.cable property)": [[119, "sympy.physics.continuum_mechanics.cable.Cable.loads_position", false]], "locate_new() (sympy.vector.coordsysrect.coordsys3d method)": [[271, "sympy.vector.coordsysrect.CoordSys3D.locate_new", false]], "locatenew() (sympy.physics.vector.point.point method)": [[206, "sympy.physics.vector.point.Point.locatenew", false]], "log (class in sympy.functions.elementary.exponential)": [[75, "sympy.functions.elementary.exponential.log", false]], "log() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.log", false]], "log() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.log", false]], "log() (sympy.polys.domains.integerring method)": [[218, "sympy.polys.domains.IntegerRing.log", false]], "log10 (class in sympy.codegen.cfunctions)": [[50, "sympy.codegen.cfunctions.log10", false]], "log1p (class in sympy.codegen.cfunctions)": [[50, "sympy.codegen.cfunctions.log1p", false]], "log2 (class in sympy.codegen.cfunctions)": [[50, "sympy.codegen.cfunctions.log2", false]], "logarithmic() (in module sympy.stats)": [[247, "sympy.stats.Logarithmic", false]], "logcombine() (in module sympy.simplify.simplify)": [[239, "sympy.simplify.simplify.logcombine", false]], "loggamma (class in sympy.functions.special.gamma_functions)": [[77, "sympy.functions.special.gamma_functions.loggamma", false]], "logistic() (in module sympy.stats)": [[247, "sympy.stats.Logistic", false]], "loglogistic() (in module sympy.stats)": [[247, "sympy.stats.LogLogistic", false]], "lognormal() (in module sympy.stats)": [[247, "sympy.stats.LogNormal", false]], "lomax() (in module sympy.stats)": [[247, "sympy.stats.Lomax", false]], "lopen() (sympy.sets.sets.interval class method)": [[235, "sympy.sets.sets.Interval.Lopen", false]], "lower (sympy.physics.secondquant.antisymmetrictensor property)": [[192, "sympy.physics.secondquant.AntiSymmetricTensor.lower", false]], "lower (sympy.tensor.indexed.idx property)": [[252, "sympy.tensor.indexed.Idx.lower", false]], "lower_central_series() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.lower_central_series", false]], "lower_triangular() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.lower_triangular", false]], "lower_triangular_solve() (sympy.matrices.dense.densematrix method)": [[100, "sympy.matrices.dense.DenseMatrix.lower_triangular_solve", false]], "lower_triangular_solve() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.lower_triangular_solve", false]], "lowergamma (class in sympy.functions.special.gamma_functions)": [[77, "sympy.functions.special.gamma_functions.lowergamma", false]], "lowertriangularpredicate (class in sympy.assumptions.predicates.matrices)": [[46, "sympy.assumptions.predicates.matrices.LowerTriangularPredicate", false]], "lpmax() (in module sympy.solvers.simplex)": [[245, "sympy.solvers.simplex.lpmax", false]], "lpmin() (in module sympy.solvers.simplex)": [[245, "sympy.solvers.simplex.lpmin", false]], "lseries() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.lseries", false]], "lt (in module sympy.core.relational)": [[69, "sympy.core.relational.Lt", false]], "lt() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.LT", false]], "lt() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.LT", false]], "ltrim() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.ltrim", false]], "lu() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.lu", false]], "lu() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.lu", false]], "lu() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.lu", false]], "lu() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.lu", false]], "lu_solve() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.lu_solve", false]], "lu_solve() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.lu_solve", false]], "lu_solve() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.lu_solve", false]], "lu_solve() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.lu_solve", false]], "lucas (class in sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.lucas", false]], "ludecomposition() (sympy.matrices.expressions.blockmatrix.blockmatrix method)": [[101, "sympy.matrices.expressions.blockmatrix.BlockMatrix.LUdecomposition", false]], "ludecomposition() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.LUdecomposition", false]], "ludecomposition_simple() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.LUdecomposition_Simple", false]], "ludecompositionff() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.LUdecompositionFF", false]], "lusolve() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.LUsolve", false]], "m (sympy.physics.biomechanics.activation.activationbase property)": [[112, "sympy.physics.biomechanics.activation.ActivationBase.M", false]], "m (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[112, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.M", false]], "m (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[112, "sympy.physics.biomechanics.activation.ZerothOrderActivation.M", false]], "m (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.M", false]], "m20() (in module sympy.combinatorics.galois)": [[52, "sympy.combinatorics.galois.M20", false]], "magnitude() (sympy.physics.vector.vector.vector method)": [[202, "sympy.physics.vector.vector.Vector.magnitude", false]], "magnitude() (sympy.vector.vector.vector method)": [[271, "sympy.vector.vector.Vector.magnitude", false]], "major (sympy.geometry.ellipse.ellipse property)": [[79, "sympy.geometry.ellipse.Ellipse.major", false]], "make_mod_elt() (in module sympy.polys.numberfields.modules)": [[222, "sympy.polys.numberfields.modules.make_mod_elt", false]], "make_monic_over_integers_by_scaling_roots() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.make_monic_over_integers_by_scaling_roots", false]], "make_perm() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.make_perm", false]], "make_routine() (in module sympy.utilities.codegen)": [[260, "sympy.utilities.codegen.make_routine", false]], "manifold (class in sympy.diffgeom)": [[71, "sympy.diffgeom.Manifold", false]], "manualintegrate() (in module sympy.integrals.manualintegrate)": [[96, "sympy.integrals.manualintegrate.manualintegrate", false]], "map() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.map", false]], "maple_code() (in module sympy.printing.maple)": [[227, "sympy.printing.maple.maple_code", false]], "maplecodeprinter (class in sympy.printing.maple)": [[227, "sympy.printing.maple.MapleCodePrinter", false]], "marcumq (class in sympy.functions.special.bessel)": [[77, "sympy.functions.special.bessel.marcumq", false]], "marginal_distribution() (in module sympy.stats)": [[247, "sympy.stats.marginal_distribution", false]], "markers (sympy.plotting.plot.plot property)": [[213, "sympy.plotting.plot.Plot.markers", false]], "mass (sympy.physics.mechanics.body.body property)": [[131, "sympy.physics.mechanics.body.Body.mass", false]], "mass (sympy.physics.mechanics.particle.particle property)": [[137, "sympy.physics.mechanics.particle.Particle.mass", false]], "mass (sympy.physics.mechanics.rigidbody.rigidbody property)": [[137, "sympy.physics.mechanics.rigidbody.RigidBody.mass", false]], "mass_matrix (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[131, "sympy.physics.mechanics.jointsmethod.JointsMethod.mass_matrix", false]], "mass_matrix (sympy.physics.mechanics.kane.kanesmethod property)": [[135, "sympy.physics.mechanics.kane.KanesMethod.mass_matrix", false]], "mass_matrix (sympy.physics.mechanics.lagrange.lagrangesmethod property)": [[135, "sympy.physics.mechanics.lagrange.LagrangesMethod.mass_matrix", false]], "mass_matrix (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.mass_matrix", false]], "mass_matrix_full (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[131, "sympy.physics.mechanics.jointsmethod.JointsMethod.mass_matrix_full", false]], "mass_matrix_full (sympy.physics.mechanics.kane.kanesmethod property)": [[135, "sympy.physics.mechanics.kane.KanesMethod.mass_matrix_full", false]], "mass_matrix_full (sympy.physics.mechanics.lagrange.lagrangesmethod property)": [[135, "sympy.physics.mechanics.lagrange.LagrangesMethod.mass_matrix_full", false]], "mass_matrix_full (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.mass_matrix_full", false]], "mass_matrix_kin (sympy.physics.mechanics.kane.kanesmethod property)": [[135, "sympy.physics.mechanics.kane.KanesMethod.mass_matrix_kin", false]], "masscenter (sympy.physics.mechanics.body.body property)": [[131, "sympy.physics.mechanics.body.Body.masscenter", false]], "masscenter (sympy.physics.mechanics.particle.particle property)": [[137, "sympy.physics.mechanics.particle.Particle.masscenter", false]], "masscenter (sympy.physics.mechanics.rigidbody.rigidbody property)": [[137, "sympy.physics.mechanics.rigidbody.RigidBody.masscenter", false]], "masscenter_vel() (sympy.physics.mechanics.body.body method)": [[131, "sympy.physics.mechanics.body.Body.masscenter_vel", false]], "matadd (class in sympy.matrices.expressions)": [[101, "sympy.matrices.expressions.MatAdd", false]], "match() (sympy.core.basic.basic method)": [[69, "sympy.core.basic.Basic.match", false]], "match() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.match", false]], "matches() (sympy.core.basic.basic method)": [[69, "sympy.core.basic.Basic.matches", false]], "matches() (sympy.solvers.diophantine.diophantine.diophantineequationtype method)": [[240, "sympy.solvers.diophantine.diophantine.DiophantineEquationType.matches", false]], "mathematica_code() (in module sympy.printing.mathematica)": [[227, "sympy.printing.mathematica.mathematica_code", false]], "mathieubase (class in sympy.functions.special.mathieu_functions)": [[77, "sympy.functions.special.mathieu_functions.MathieuBase", false]], "mathieuc (class in sympy.functions.special.mathieu_functions)": [[77, "sympy.functions.special.mathieu_functions.mathieuc", false]], "mathieucprime (class in sympy.functions.special.mathieu_functions)": [[77, "sympy.functions.special.mathieu_functions.mathieucprime", false]], "mathieus (class in sympy.functions.special.mathieu_functions)": [[77, "sympy.functions.special.mathieu_functions.mathieus", false]], "mathieusprime (class in sympy.functions.special.mathieu_functions)": [[77, "sympy.functions.special.mathieu_functions.mathieusprime", false]], "mathml() (in module sympy.printing.mathml)": [[227, "sympy.printing.mathml.mathml", false]], "mathml_tag() (sympy.printing.mathml.mathmlcontentprinter method)": [[227, "sympy.printing.mathml.MathMLContentPrinter.mathml_tag", false]], "mathml_tag() (sympy.printing.mathml.mathmlpresentationprinter method)": [[227, "sympy.printing.mathml.MathMLPresentationPrinter.mathml_tag", false]], "mathmlcontentprinter (class in sympy.printing.mathml)": [[227, "sympy.printing.mathml.MathMLContentPrinter", false]], "mathmlpresentationprinter (class in sympy.printing.mathml)": [[227, "sympy.printing.mathml.MathMLPresentationPrinter", false]], "mathmlprinterbase (class in sympy.printing.mathml)": [[227, "sympy.printing.mathml.MathMLPrinterBase", false]], "matmul (class in sympy.matrices.expressions)": [[101, "sympy.matrices.expressions.MatMul", false]], "matmul() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.matmul", false]], "matmul() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.matmul", false]], "matmul() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.matmul", false]], "matmul() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.matmul", false]], "matplotlibbackend (class in sympy.plotting.plot)": [[213, "sympy.plotting.plot.MatplotlibBackend", false]], "matpow (class in sympy.matrices.expressions)": [[101, "sympy.matrices.expressions.MatPow", false]], "matrix": [[15, "term-Matrix", true]], "matrix (in module sympy.matrices.dense)": [[100, "sympy.matrices.dense.Matrix", false]], "matrix() (sympy.polys.numberfields.modules.modulehomomorphism method)": [[222, "sympy.polys.numberfields.modules.ModuleHomomorphism.matrix", false]], "matrix2numpy() (in module sympy.matrices.dense)": [[105, "sympy.matrices.dense.matrix2numpy", false]], "matrix_exp() (in module sympy.solvers.ode.systems)": [[243, "sympy.solvers.ode.systems.matrix_exp", false]], "matrix_exp_jordan_form() (in module sympy.solvers.ode.systems)": [[243, "sympy.solvers.ode.systems.matrix_exp_jordan_form", false]], "matrix_fglm() (in module sympy.polys.fglmtools)": [[220, "sympy.polys.fglmtools.matrix_fglm", false]], "matrix_form() (sympy.liealgebras.weyl_group.weylgroup method)": [[98, "sympy.liealgebras.weyl_group.WeylGroup.matrix_form", false]], "matrix_multiply_elementwise() (in module sympy.matrices.dense)": [[105, "sympy.matrices.dense.matrix_multiply_elementwise", false]], "matrix_rep() (in module sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.matrix_rep", false]], "matrix_to_density() (in module sympy.physics.quantum.qubit)": [[186, "sympy.physics.quantum.qubit.matrix_to_density", false]], "matrix_to_qubit() (in module sympy.physics.quantum.qubit)": [[186, "sympy.physics.quantum.qubit.matrix_to_qubit", false]], "matrix_to_vector() (in module sympy.vector)": [[274, "sympy.vector.matrix_to_vector", false]], "matrixbase (class in sympy.matrices.matrixbase)": [[105, "sympy.matrices.matrixbase.MatrixBase", false]], "matrixerror (class in sympy.matrices.matrixbase)": [[105, "sympy.matrices.matrixbase.MatrixError", false]], "matrixexpr (class in sympy.matrices.expressions)": [[101, "sympy.matrices.expressions.MatrixExpr", false]], "matrixgamma() (in module sympy.stats)": [[247, "sympy.stats.MatrixGamma", false]], "matrixkind (class in sympy.matrices.kind)": [[104, "sympy.matrices.kind.MatrixKind", false]], "matrixnormal() (in module sympy.stats)": [[247, "sympy.stats.MatrixNormal", false]], "matrixpermute (class in sympy.matrices.expressions)": [[101, "sympy.matrices.expressions.MatrixPermute", false]], "matrixset (class in sympy.matrices.expressions)": [[101, "sympy.matrices.expressions.MatrixSet", false]], "matrixsolve (class in sympy.codegen.matrix_nodes)": [[50, "sympy.codegen.matrix_nodes.MatrixSolve", false]], "matrixsymbol (class in sympy.matrices.expressions)": [[101, "sympy.matrices.expressions.MatrixSymbol", false]], "max (class in sympy.functions.elementary.miscellaneous)": [[75, "sympy.functions.elementary.miscellaneous.Max", false]], "max (sympy.codegen.ast.floattype property)": [[50, "sympy.codegen.ast.FloatType.max", false]], "max() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.max", false]], "max_bending_moment() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.max_bending_moment", false]], "max_bmoment() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.max_bmoment", false]], "max_bmoment() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.max_bmoment", false]], "max_deflection() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.max_deflection", false]], "max_deflection() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.max_deflection", false]], "max_div (sympy.combinatorics.perm_groups.permutationgroup property)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.max_div", false]], "max_exponent (sympy.codegen.ast.floattype property)": [[50, "sympy.codegen.ast.FloatType.max_exponent", false]], "max_norm() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.max_norm", false]], "max_norm() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.max_norm", false]], "max_shear_force() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.max_shear_force", false]], "max_shear_force() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.max_shear_force", false]], "maximal_fiber_velocity (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.maximal_fiber_velocity", false]], "maximal_order() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.maximal_order", false]], "maximum() (in module sympy.calculus.util)": [[48, "sympy.calculus.util.maximum", false]], "maxwell() (in module sympy.stats)": [[247, "sympy.stats.Maxwell", false]], "mcodeprinter (class in sympy.printing.mathematica)": [[227, "sympy.printing.mathematica.MCodePrinter", false]], "mdft() (in module sympy.physics.matrices)": [[128, "sympy.physics.matrices.mdft", false]], "measure (sympy.sets.sets.set property)": [[235, "sympy.sets.sets.Set.measure", false]], "measure_all() (in module sympy.physics.quantum.qubit)": [[186, "sympy.physics.quantum.qubit.measure_all", false]], "measure_all_oneshot() (in module sympy.physics.quantum.qubit)": [[186, "sympy.physics.quantum.qubit.measure_all_oneshot", false]], "measure_partial() (in module sympy.physics.quantum.qubit)": [[186, "sympy.physics.quantum.qubit.measure_partial", false]], "measure_partial_oneshot() (in module sympy.physics.quantum.qubit)": [[186, "sympy.physics.quantum.qubit.measure_partial_oneshot", false]], "medial (sympy.geometry.polygon.triangle property)": [[85, "sympy.geometry.polygon.Triangle.medial", false]], "median() (in module sympy.stats)": [[247, "sympy.stats.median", false]], "medians (sympy.geometry.polygon.triangle property)": [[85, "sympy.geometry.polygon.Triangle.medians", false]], "medium (class in sympy.physics.optics.medium)": [[163, "sympy.physics.optics.medium.Medium", false]], "meets() (sympy.series.gruntz.subsset method)": [[234, "sympy.series.gruntz.SubsSet.meets", false]], "meijerg (class in sympy.functions.special.hyper)": [[77, "sympy.functions.special.hyper.meijerg", false]], "meijerint_definite() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint.meijerint_definite", false]], "meijerint_indefinite() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint.meijerint_indefinite", false]], "meijerint_inversion() (in module sympy.integrals.meijerint)": [[94, "sympy.integrals.meijerint.meijerint_inversion", false]], "mellin_transform() (in module sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.mellin_transform", false]], "mellintransform (class in sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.MellinTransform", false]], "member_lengths (sympy.physics.continuum_mechanics.truss.truss property)": [[121, "sympy.physics.continuum_mechanics.truss.Truss.member_lengths", false]], "members (sympy.physics.continuum_mechanics.truss.truss property)": [[121, "sympy.physics.continuum_mechanics.truss.Truss.members", false]], "memoize_property() (in module sympy.utilities.decorator)": [[261, "sympy.utilities.decorator.memoize_property", false]], "mensor() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.mensor", false]], "merge (class in sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.merge", false]], "merge_solution() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.merge_solution", false]], "mersenne_prime_exponent() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.mersenne_prime_exponent", false]], "method (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[131, "sympy.physics.mechanics.jointsmethod.JointsMethod.method", false]], "metric_to_christoffel_1st() (in module sympy.diffgeom)": [[71, "sympy.diffgeom.metric_to_Christoffel_1st", false]], "metric_to_christoffel_2nd() (in module sympy.diffgeom)": [[71, "sympy.diffgeom.metric_to_Christoffel_2nd", false]], "metric_to_ricci_components() (in module sympy.diffgeom)": [[71, "sympy.diffgeom.metric_to_Ricci_components", false]], "metric_to_riemann_components() (in module sympy.diffgeom)": [[71, "sympy.diffgeom.metric_to_Riemann_components", false]], "mgamma() (in module sympy.physics.matrices)": [[128, "sympy.physics.matrices.mgamma", false]], "midpoint (sympy.geometry.line.segment property)": [[82, "sympy.geometry.line.Segment.midpoint", false]], "midpoint() (sympy.geometry.point.point method)": [[84, "sympy.geometry.point.Point.midpoint", false]], "mignotte_sep_bound_squared() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.mignotte_sep_bound_squared", false]], "mimofeedback (class in sympy.physics.control.lti)": [[125, "sympy.physics.control.lti.MIMOFeedback", false]], "mimoparallel (class in sympy.physics.control.lti)": [[125, "sympy.physics.control.lti.MIMOParallel", false]], "mimoseries (class in sympy.physics.control.lti)": [[125, "sympy.physics.control.lti.MIMOSeries", false]], "min (class in sympy.functions.elementary.miscellaneous)": [[75, "sympy.functions.elementary.miscellaneous.Min", false]], "min() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.min", false]], "min_exponent (sympy.codegen.ast.floattype property)": [[50, "sympy.codegen.ast.FloatType.min_exponent", false]], "min_qubits (sympy.physics.quantum.gate.cgate property)": [[176, "sympy.physics.quantum.gate.CGate.min_qubits", false]], "min_qubits (sympy.physics.quantum.gate.cnotgate property)": [[176, "sympy.physics.quantum.gate.CNotGate.min_qubits", false]], "min_qubits (sympy.physics.quantum.gate.gate property)": [[176, "sympy.physics.quantum.gate.Gate.min_qubits", false]], "minimal_block() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.minimal_block", false]], "minimal_blocks() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.minimal_blocks", false]], "minimal_polynomial() (in module sympy.polys.numberfields.minpoly)": [[222, "sympy.polys.numberfields.minpoly.minimal_polynomial", false]], "minimum() (in module sympy.calculus.util)": [[48, "sympy.calculus.util.minimum", false]], "minlex() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.minlex", false]], "minor (sympy.geometry.ellipse.ellipse property)": [[79, "sympy.geometry.ellipse.Ellipse.minor", false]], "minor() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.minor", false]], "minor_submatrix() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.minor_submatrix", false]], "minpoly() (in module sympy.polys.numberfields.minpoly)": [[222, "sympy.polys.numberfields.minpoly.minpoly", false]], "minpoly_of_element() (sympy.core.numbers.algebraicnumber method)": [[69, "sympy.core.numbers.AlgebraicNumber.minpoly_of_element", false]], "mirror_formula() (in module sympy.physics.optics.utils)": [[165, "sympy.physics.optics.utils.mirror_formula", false]], "mobius (class in sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.mobius", false]], "mobius() (in module sympy.ntheory.residue_ntheory)": [[109, "sympy.ntheory.residue_ntheory.mobius", false]], "mobius_transform() (in module sympy.discrete.transforms)": [[72, "sympy.discrete.transforms.mobius_transform", false]], "mobiusrange() (sympy.ntheory.generate.sieve method)": [[109, "sympy.ntheory.generate.Sieve.mobiusrange", false]], "mod (class in sympy.core.mod)": [[69, "sympy.core.mod.Mod", false]], "mod (sympy.polys.domains.algebraicfield attribute)": [[218, "sympy.polys.domains.AlgebraicField.mod", false]], "mod_inverse() (in module sympy.core.intfunc)": [[69, "sympy.core.intfunc.mod_inverse", false]], "mod_inverse() (in module sympy.core.numbers)": [[69, "sympy.core.numbers.mod_inverse", false]], "mod_to_list() (sympy.polys.polyclasses.anp method)": [[218, "sympy.polys.polyclasses.ANP.mod_to_list", false]], "modgcd_bivariate() (in module sympy.polys.modulargcd)": [[220, "sympy.polys.modulargcd.modgcd_bivariate", false]], "modgcd_multivariate() (in module sympy.polys.modulargcd)": [[220, "sympy.polys.modulargcd.modgcd_multivariate", false]], "modgcd_univariate() (in module sympy.polys.modulargcd)": [[220, "sympy.polys.modulargcd.modgcd_univariate", false]], "module": [[16, "module-sympy.simplify.simplify", false], [39, "module-sympy", false], [41, "module-sympy.abc", false], [42, "module-sympy.algebras", false], [43, "module-sympy.assumptions.ask", false], [44, "module-sympy.assumptions.assume", false], [45, "module-sympy.assumptions", false], [46, "module-sympy.assumptions.predicates", false], [47, "module-sympy.assumptions.refine", false], [48, "module-sympy.calculus", false], [48, "module-sympy.calculus.euler", false], [48, "module-sympy.calculus.finite_diff", false], [48, "module-sympy.calculus.singularities", false], [48, "module-sympy.calculus.util", false], [49, "module-sympy.categories", false], [49, "module-sympy.categories.diagram_drawing", false], [50, "module-sympy.codegen.algorithms", false], [50, "module-sympy.codegen.approximations", false], [50, "module-sympy.codegen.ast", false], [50, "module-sympy.codegen.cfunctions", false], [50, "module-sympy.codegen.cnodes", false], [50, "module-sympy.codegen.cutils", false], [50, "module-sympy.codegen.cxxnodes", false], [50, "module-sympy.codegen.fnodes", false], [50, "module-sympy.codegen.futils", false], [50, "module-sympy.codegen.matrix_nodes", false], [50, "module-sympy.codegen.pyutils", false], [50, "module-sympy.codegen.rewriting", false], [52, "module-sympy.combinatorics.galois", false], [53, "module-sympy.combinatorics.graycode", false], [54, "module-sympy.combinatorics.group_constructs", false], [55, "module-sympy.combinatorics.group_numbers", false], [57, "module-sympy.combinatorics.named_groups", false], [58, "module-sympy.combinatorics.partitions", false], [60, "module-sympy.combinatorics.perm_groups", false], [61, "module-sympy.combinatorics.generators", false], [61, "module-sympy.combinatorics.permutations", false], [62, "module-sympy.combinatorics.polyhedron", false], [63, "module-sympy.combinatorics.prufer", false], [64, "module-sympy.combinatorics.subsets", false], [65, "module-sympy.combinatorics.tensor_can", false], [66, "module-sympy.combinatorics.testutil", false], [67, "module-sympy.combinatorics.util", false], [69, "module-sympy.core.add", false], [69, "module-sympy.core.assumptions", false], [69, "module-sympy.core.basic", false], [69, "module-sympy.core.cache", false], [69, "module-sympy.core.containers", false], [69, "module-sympy.core.evalf", false], [69, "module-sympy.core.expr", false], [69, "module-sympy.core.exprtools", false], [69, "module-sympy.core.function", false], [69, "module-sympy.core.intfunc", false], [69, "module-sympy.core.kind", false], [69, "module-sympy.core.mod", false], [69, "module-sympy.core.mul", false], [69, "module-sympy.core.multidimensional", false], [69, "module-sympy.core.numbers", false], [69, "module-sympy.core.power", false], [69, "module-sympy.core.random", false], [69, "module-sympy.core.relational", false], [69, "module-sympy.core.singleton", false], [69, "module-sympy.core.symbol", false], [69, "module-sympy.core.sympify", false], [69, "module-sympy.core.traversal", false], [70, "module-sympy.crypto.crypto", false], [71, "module-sympy.diffgeom", false], [72, "module-sympy.discrete", false], [72, "module-sympy.discrete.convolutions", false], [72, "module-sympy.discrete.transforms", false], [76, "module-sympy.functions", false], [77, "module-sympy.functions.special.bessel", false], [77, "module-sympy.functions.special.beta_functions", false], [77, "module-sympy.functions.special.elliptic_integrals", false], [77, "module-sympy.functions.special.error_functions", false], [77, "module-sympy.functions.special.gamma_functions", false], [77, "module-sympy.functions.special.mathieu_functions", false], [77, "module-sympy.functions.special.polynomials", false], [77, "module-sympy.functions.special.singularity_functions", false], [77, "module-sympy.functions.special.zeta_functions", false], [78, "module-sympy.geometry.curve", false], [79, "module-sympy.geometry.ellipse", false], [80, "module-sympy.geometry.entity", false], [82, "module-sympy.geometry.line", false], [83, "module-sympy.geometry.plane", false], [84, "module-sympy.geometry.point", false], [85, "module-sympy.geometry.polygon", false], [86, "module-sympy.geometry.util", false], [89, "module-sympy.holonomic", false], [94, "module-sympy.integrals.meijerint", false], [94, "module-sympy.integrals.meijerint_doc", false], [96, "module-sympy.integrals", false], [96, "module-sympy.integrals.intpoly", false], [96, "module-sympy.integrals.transforms", false], [97, "module-sympy.interactive", false], [97, "module-sympy.interactive.printing", false], [97, "module-sympy.interactive.session", false], [98, "module-sympy.liealgebras", false], [99, "module-sympy.logic", false], [99, "module-sympy.logic.inference", false], [101, "module-sympy.matrices.expressions", false], [101, "module-sympy.matrices.expressions.blockmatrix", false], [102, "module-sympy.matrices.immutable", false], [103, "module-sympy.matrices", false], [104, "module-sympy.matrices.kind", false], [105, "module-sympy.matrices.matrixbase", false], [107, "module-sympy.matrices.sparse", false], [108, "module-sympy.matrices.sparsetools", false], [109, "module-sympy.ntheory.bbp_pi", false], [109, "module-sympy.ntheory.continued_fraction", false], [109, "module-sympy.ntheory.digits", false], [109, "module-sympy.ntheory.ecm", false], [109, "module-sympy.ntheory.egyptian_fraction", false], [109, "module-sympy.ntheory.factor_", false], [109, "module-sympy.ntheory.generate", false], [109, "module-sympy.ntheory.modular", false], [109, "module-sympy.ntheory.multinomial", false], [109, "module-sympy.ntheory.partitions_", false], [109, "module-sympy.ntheory.primetest", false], [109, "module-sympy.ntheory.qs", false], [109, "module-sympy.ntheory.residue_ntheory", false], [111, "module-sympy.parsing", false], [111, "module-sympy.parsing.sym_expr", false], [112, "module-sympy.physics.biomechanics.activation", false], [113, "module-sympy.physics.biomechanics.curve", false], [115, "module-sympy.physics.biomechanics.musculotendon", false], [116, "module-sympy.physics.biomechanics", false], [117, "module-sympy.physics.continuum_mechanics.beam", false], [119, "module-sympy.physics.continuum_mechanics.cable", false], [121, "module-sympy.physics.continuum_mechanics.truss", false], [124, "module-sympy.physics.control", false], [125, "module-sympy.physics.control.lti", false], [126, "module-sympy.physics.hep.gamma_matrices", false], [127, "module-sympy.physics.hydrogen", false], [128, "module-sympy.physics.matrices", false], [130, "module-sympy.physics.mechanics.actuator", false], [134, "module-sympy.physics.mechanics.joint", false], [135, "module-sympy.physics.mechanics.kane", false], [135, "module-sympy.physics.mechanics.lagrange", false], [136, "module-sympy.physics.mechanics.linearize", false], [138, "module-sympy.physics.mechanics.pathway", false], [141, "module-sympy.physics.mechanics.wrapping_geometry", false], [152, "module-sympy.physics.mechanics", false], [161, "module-sympy.physics.optics.gaussopt", false], [163, "module-sympy.physics.optics.medium", false], [164, "module-sympy.physics.optics.polarization", false], [165, "module-sympy.physics.optics.utils", false], [166, "module-sympy.physics.optics.waves", false], [167, "module-sympy.physics.paulialgebra", false], [168, "module-sympy.physics.qho_1d", false], [169, "module-sympy.physics.quantum.anticommutator", false], [170, "module-sympy.physics.quantum.cartesian", false], [171, "module-sympy.physics.quantum.cg", false], [172, "module-sympy.physics.quantum.circuitplot", false], [173, "module-sympy.physics.quantum.commutator", false], [174, "module-sympy.physics.quantum.constants", false], [175, "module-sympy.physics.quantum.dagger", false], [176, "module-sympy.physics.quantum.gate", false], [177, "module-sympy.physics.quantum.grover", false], [178, "module-sympy.physics.quantum.hilbert", false], [180, "module-sympy.physics.quantum.innerproduct", false], [181, "module-sympy.physics.quantum.operator", false], [182, "module-sympy.physics.quantum.operatorset", false], [183, "module-sympy.physics.quantum.piab", false], [184, "module-sympy.physics.quantum.qapply", false], [185, "module-sympy.physics.quantum.qft", false], [186, "module-sympy.physics.quantum.qubit", false], [187, "module-sympy.physics.quantum.represent", false], [188, "module-sympy.physics.quantum.shor", false], [189, "module-sympy.physics.quantum.spin", false], [190, "module-sympy.physics.quantum.state", false], [191, "module-sympy.physics.quantum.tensorproduct", false], [192, "module-sympy.physics.secondquant", false], [193, "module-sympy.physics.sho", false], [194, "module-sympy.physics.units.dimensions", false], [198, "module-sympy.physics.units.prefixes", false], [199, "module-sympy.physics.units.quantities", false], [199, "module-sympy.physics.units.util", false], [200, "module-sympy.physics.units.unitsystem", false], [206, "module-sympy.physics.vector.functions", false], [206, "module-sympy.physics.vector.point", false], [209, "module-sympy.physics.vector", false], [212, "module-sympy.physics.wigner", false], [213, "module-sympy.plotting.plot", false], [213, "module-sympy.plotting.pygletplot", false], [216, "module-sympy.polys.matrices._dfm", false], [216, "module-sympy.polys.matrices._typing", false], [216, "module-sympy.polys.matrices.ddm", false], [216, "module-sympy.polys.matrices.dense", false], [216, "module-sympy.polys.matrices.domainmatrix", false], [216, "module-sympy.polys.matrices.sdm", false], [220, "module-sympy.polys.polyconfig", false], [220, "module-sympy.polys.polyoptions", false], [222, "module-sympy.polys.numberfields.modules", false], [222, "module-sympy.polys.numberfields.subfield", false], [223, "module-sympy.polys", false], [225, "module-sympy.polys.solvers", false], [227, "module-sympy.printing.aesaracode", false], [227, "module-sympy.printing.c", false], [227, "module-sympy.printing.codeprinter", false], [227, "module-sympy.printing.conventions", false], [227, "module-sympy.printing.cxx", false], [227, "module-sympy.printing.fortran", false], [227, "module-sympy.printing.gtk", false], [227, "module-sympy.printing.jscode", false], [227, "module-sympy.printing.julia", false], [227, "module-sympy.printing.lambdarepr", false], [227, "module-sympy.printing.latex", false], [227, "module-sympy.printing.maple", false], [227, "module-sympy.printing.mathematica", false], [227, "module-sympy.printing.mathml", false], [227, "module-sympy.printing.octave", false], [227, "module-sympy.printing.precedence", false], [227, "module-sympy.printing.pretty", false], [227, "module-sympy.printing.pretty.pretty", false], [227, "module-sympy.printing.pretty.pretty_symbology", false], [227, "module-sympy.printing.pretty.stringpict", false], [227, "module-sympy.printing.preview", false], [227, "module-sympy.printing.printer", false], [227, "module-sympy.printing.pycode", false], [227, "module-sympy.printing.python", false], [227, "module-sympy.printing.rcode", false], [227, "module-sympy.printing.repr", false], [227, "module-sympy.printing.rust", false], [227, "module-sympy.printing.smtlib", false], [227, "module-sympy.printing.str", false], [227, "module-sympy.printing.tree", false], [235, "module-sympy.sets.conditionset", false], [235, "module-sympy.sets.fancysets", false], [235, "module-sympy.sets.powerset", false], [235, "module-sympy.sets.sets", false], [236, "module-sympy.simplify.fu", false], [237, "module-sympy.simplify.hyperexpand_doc", false], [239, "module-sympy.simplify.combsimp", false], [239, "module-sympy.simplify.cse_main", false], [239, "module-sympy.simplify.epathtools", false], [239, "module-sympy.simplify.hyperexpand", false], [239, "module-sympy.simplify.powsimp", false], [239, "module-sympy.simplify.radsimp", false], [239, "module-sympy.simplify.ratsimp", false], [239, "module-sympy.simplify.sqrtdenest", false], [239, "module-sympy.simplify.trigsimp", false], [242, "module-sympy.solvers.inequalities", false], [243, "module-sympy.solvers.ode", false], [243, "module-sympy.solvers.ode.ode", false], [244, "module-sympy.solvers.pde", false], [245, "module-sympy.solvers", false], [245, "module-sympy.solvers.recurr", false], [245, "module-sympy.solvers.simplex", false], [246, "module-sympy.solvers.solveset", false], [247, "module-sympy.stats", false], [247, "module-sympy.stats.crv", false], [247, "module-sympy.stats.crv_types", false], [247, "module-sympy.stats.frv", false], [247, "module-sympy.stats.frv_types", false], [247, "module-sympy.stats.rv", false], [248, "module-sympy.tensor.array", false], [249, "module-sympy.tensor.array.expressions", false], [250, "module-sympy.tensor", false], [251, "module-sympy.tensor.index_methods", false], [252, "module-sympy.tensor.indexed", false], [253, "module-sympy.tensor.tensor", false], [254, "module-sympy.tensor.toperators", false], [255, "module-sympy.testing", false], [256, "module-sympy.testing.pytest", false], [257, "module-sympy.testing.randtest", false], [258, "module-sympy.testing.runtests", false], [259, "module-sympy.utilities.autowrap", false], [260, "module-sympy.utilities.codegen", false], [261, "module-sympy.utilities.decorator", false], [262, "module-sympy.utilities.enumerative", false], [263, "module-sympy.utilities.exceptions", false], [264, "module-sympy.utilities", false], [265, "module-sympy.utilities.iterables", false], [266, "module-sympy.utilities.lambdify", false], [267, "module-sympy.utilities.memoization", false], [268, "module-sympy.utilities.misc", false], [269, "module-sympy.utilities.source", false], [270, "module-sympy.utilities.timeutils", false], [279, "module-sympy.vector", false], [288, "module-sympy.physics", false]], "module (class in sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.Module", false]], "module (class in sympy.polys.agca.modules)": [[214, "sympy.polys.agca.modules.Module", false]], "module (class in sympy.polys.numberfields.modules)": [[222, "sympy.polys.numberfields.modules.Module", false]], "module_quotient() (sympy.polys.agca.modules.submodule method)": [[214, "sympy.polys.agca.modules.SubModule.module_quotient", false]], "moduleelement (class in sympy.polys.numberfields.modules)": [[222, "sympy.polys.numberfields.modules.ModuleElement", false]], "moduleendomorphism (class in sympy.polys.numberfields.modules)": [[222, "sympy.polys.numberfields.modules.ModuleEndomorphism", false]], "modulehomomorphism (class in sympy.polys.agca.homomorphisms)": [[214, "sympy.polys.agca.homomorphisms.ModuleHomomorphism", false]], "modulehomomorphism (class in sympy.polys.numberfields.modules)": [[222, "sympy.polys.numberfields.modules.ModuleHomomorphism", false]], "moment (class in sympy.stats)": [[247, "sympy.stats.Moment", false]], "moment() (in module sympy.stats)": [[247, "sympy.stats.moment", false]], "moment_load_vector (sympy.physics.continuum_mechanics.beam.beam3d property)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.moment_load_vector", false]], "momentum (sympy.physics.quantum.cartesian.pxbra property)": [[170, "sympy.physics.quantum.cartesian.PxBra.momentum", false]], "momentum (sympy.physics.quantum.cartesian.pxket property)": [[170, "sympy.physics.quantum.cartesian.PxKet.momentum", false]], "monic() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.monic", false]], "monic() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.monic", false]], "monic() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.monic", false]], "monic() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.monic", false]], "monogenicfiniteextension (class in sympy.polys.agca.extensions)": [[214, "sympy.polys.agca.extensions.MonogenicFiniteExtension", false]], "monomial (class in sympy.polys.monomials)": [[223, "sympy.polys.monomials.Monomial", false]], "monomial_basis() (sympy.polys.rings.polyring method)": [[218, "sympy.polys.rings.PolyRing.monomial_basis", false]], "monomial_count() (in module sympy.polys.monomials)": [[223, "sympy.polys.monomials.monomial_count", false]], "monomialorder (class in sympy.polys.orderings)": [[223, "sympy.polys.orderings.MonomialOrder", false]], "monoms() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.monoms", false]], "monoms() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.monoms", false]], "monoms() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.monoms", false]], "monotonicity_helper() (in module sympy.calculus.singularities)": [[48, "sympy.calculus.singularities.monotonicity_helper", false]], "morphism (class in sympy.categories)": [[49, "sympy.categories.Morphism", false]], "morphisms (sympy.categories.diagram_drawing.diagramgrid property)": [[49, "sympy.categories.diagram_drawing.DiagramGrid.morphisms", false]], "moyal() (in module sympy.stats)": [[247, "sympy.stats.Moyal", false]], "mpmath": [[15, "term-mpmath", true]], "mpmathprinter (class in sympy.printing.pycode)": [[227, "sympy.printing.pycode.MpmathPrinter", false]], "mr() (in module sympy.ntheory.primetest)": [[109, "sympy.ntheory.primetest.mr", false]], "mrv() (in module sympy.series.gruntz)": [[234, "sympy.series.gruntz.mrv", false]], "mrv_leadterm() (in module sympy.series.gruntz)": [[234, "sympy.series.gruntz.mrv_leadterm", false]], "mrv_max1() (in module sympy.series.gruntz)": [[234, "sympy.series.gruntz.mrv_max1", false]], "mrv_max3() (in module sympy.series.gruntz)": [[234, "sympy.series.gruntz.mrv_max3", false]], "msigma() (in module sympy.physics.matrices)": [[128, "sympy.physics.matrices.msigma", false]], "msubs() (in module sympy.physics.mechanics)": [[132, "sympy.physics.mechanics.msubs", false]], "mueller_matrix() (in module sympy.physics.optics.polarization)": [[164, "sympy.physics.optics.polarization.mueller_matrix", false]], "mul (class in sympy.core.mul)": [[69, "sympy.core.mul.Mul", false]], "mul() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.mul", false]], "mul() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.mul", false]], "mul() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.mul", false]], "mul() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.mul", false]], "mul() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.mul", false]], "mul() (sympy.polys.numberfields.modules.submodule method)": [[222, "sympy.polys.numberfields.modules.Submodule.mul", false]], "mul() (sympy.polys.polyclasses.dmf method)": [[218, "sympy.polys.polyclasses.DMF.mul", false]], "mul() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.mul", false]], "mul() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.mul", false]], "mul() (sympy.polys.rings.polyring method)": [[218, "sympy.polys.rings.PolyRing.mul", false]], "mul_elementwise() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.mul_elementwise", false]], "mul_ground() (sympy.polys.polyclasses.anp method)": [[218, "sympy.polys.polyclasses.ANP.mul_ground", false]], "mul_ground() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.mul_ground", false]], "mul_ground() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.mul_ground", false]], "mul_inv() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.mul_inv", false]], "mul_xin() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.mul_xin", false]], "mult_tab() (sympy.polys.numberfields.modules.module method)": [[222, "sympy.polys.numberfields.modules.Module.mult_tab", false]], "multifactorial (class in sympy.functions.combinatorial.factorials)": [[74, "sympy.functions.combinatorial.factorials.MultiFactorial", false]], "multigamma (class in sympy.functions.special.gamma_functions)": [[77, "sympy.functions.special.gamma_functions.multigamma", false]], "multinomial() (in module sympy.stats)": [[247, "sympy.stats.Multinomial", false]], "multinomial_coefficients() (in module sympy.ntheory.multinomial)": [[109, "sympy.ntheory.multinomial.multinomial_coefficients", false]], "multinomial_coefficients_iterator() (in module sympy.ntheory.multinomial)": [[109, "sympy.ntheory.multinomial.multinomial_coefficients_iterator", false]], "multiplicity() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.multiplicity", false]], "multiplicity() (sympy.vector.implicitregion.implicitregion method)": [[271, "sympy.vector.implicitregion.ImplicitRegion.multiplicity", false]], "multiply() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.multiply", false]], "multiply_elementwise() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.multiply_elementwise", false]], "multiply_ideal() (sympy.polys.agca.modules.freemodule method)": [[214, "sympy.polys.agca.modules.FreeModule.multiply_ideal", false]], "multiply_ideal() (sympy.polys.agca.modules.module method)": [[214, "sympy.polys.agca.modules.Module.multiply_ideal", false]], "multiply_ideal() (sympy.polys.agca.modules.submodule method)": [[214, "sympy.polys.agca.modules.SubModule.multiply_ideal", false]], "multiset() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.multiset", false]], "multiset_combinations() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.multiset_combinations", false]], "multiset_derangements() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.multiset_derangements", false]], "multiset_partitions() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.multiset_partitions", false]], "multiset_partitions_taocp() (in module sympy.utilities.enumerative)": [[262, "sympy.utilities.enumerative.multiset_partitions_taocp", false]], "multiset_permutations() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.multiset_permutations", false]], "multisetpartitiontraverser (class in sympy.utilities.enumerative)": [[262, "sympy.utilities.enumerative.MultisetPartitionTraverser", false]], "multivariatebeta() (in module sympy.stats)": [[247, "sympy.stats.MultivariateBeta", false]], "multivariateewens() (in module sympy.stats)": [[247, "sympy.stats.MultivariateEwens", false]], "multivariatelaplace() (in module sympy.stats)": [[247, "sympy.stats.MultivariateLaplace", false]], "multivariatenormal() (in module sympy.stats)": [[247, "sympy.stats.MultivariateNormal", false]], "multivariatepolynomialerror (class in sympy.polys.polyerrors)": [[220, "sympy.polys.polyerrors.MultivariatePolynomialError", false]], "multivariatet() (in module sympy.stats)": [[247, "sympy.stats.MultivariateT", false]], "musculotendon_dynamics (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.musculotendon_dynamics", false]], "musculotendonbase (class in sympy.physics.biomechanics.musculotendon)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase", false]], "musculotendondegroote2016 (class in sympy.physics.biomechanics.musculotendon)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonDeGroote2016", false]], "musculotendonformulation (class in sympy.physics.biomechanics.musculotendon)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonFormulation", false]], "mutabledensematrix (class in sympy.matrices.dense)": [[100, "sympy.matrices.dense.MutableDenseMatrix", false]], "mutabledensendimarray (class in sympy.tensor.array)": [[248, "sympy.tensor.array.MutableDenseNDimArray", false]], "mutablesparsematrix (class in sympy.matrices.sparse)": [[107, "sympy.matrices.sparse.MutableSparseMatrix", false]], "mutablesparsendimarray (class in sympy.tensor.array)": [[248, "sympy.tensor.array.MutableSparseNDimArray", false]], "mx (class in sympy.physics.quantum.circuitplot)": [[172, "sympy.physics.quantum.circuitplot.Mx", false]], "mz (class in sympy.physics.quantum.circuitplot)": [[172, "sympy.physics.quantum.circuitplot.Mz", false]], "n (sympy.combinatorics.graycode.graycode property)": [[53, "sympy.combinatorics.graycode.GrayCode.n", false]], "n (sympy.physics.optics.waves.twave property)": [[166, "sympy.physics.optics.waves.TWave.n", false]], "n (sympy.physics.quantum.shor.cmod property)": [[188, "sympy.physics.quantum.shor.CMod.N", false]], "n (sympy.plotting.series.baseseries property)": [[213, "sympy.plotting.series.BaseSeries.n", false]], "n (sympy.polys.numberfields.modules.module property)": [[222, "sympy.polys.numberfields.modules.Module.n", false]], "n (sympy.polys.numberfields.modules.moduleelement property)": [[222, "sympy.polys.numberfields.modules.ModuleElement.n", false]], "n (sympy.series.sequences.recursiveseq property)": [[233, "sympy.series.sequences.RecursiveSeq.n", false]], "n() (in module sympy.core.evalf)": [[69, "sympy.core.evalf.N", false]], "n() (sympy.core.evalf.evalfmixin method)": [[69, "sympy.core.evalf.EvalfMixin.n", false]], "n() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.n", false]], "n() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.n", false]], "n_order() (in module sympy.ntheory.residue_ntheory)": [[109, "sympy.ntheory.residue_ntheory.n_order", false]], "nakagami() (in module sympy.stats)": [[247, "sympy.stats.Nakagami", false]], "name (sympy.categories.category property)": [[49, "sympy.categories.Category.name", false]], "name (sympy.categories.namedmorphism property)": [[49, "sympy.categories.NamedMorphism.name", false]], "name (sympy.physics.mechanics.body.body property)": [[131, "sympy.physics.mechanics.body.Body.name", false]], "name (sympy.physics.mechanics.joint.joint property)": [[134, "sympy.physics.mechanics.joint.Joint.name", false]], "name (sympy.physics.mechanics.particle.particle property)": [[137, "sympy.physics.mechanics.particle.Particle.name", false]], "name (sympy.physics.mechanics.rigidbody.rigidbody property)": [[137, "sympy.physics.mechanics.rigidbody.RigidBody.name", false]], "namedmorphism (class in sympy.categories)": [[49, "sympy.categories.NamedMorphism", false]], "nan (class in sympy.core.numbers)": [[69, "sympy.core.numbers.NaN", false]], "nand (class in sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.Nand", false]], "nargs (sympy.core.function.functionclass property)": [[69, "sympy.core.function.FunctionClass.nargs", false]], "native_coeffs() (sympy.core.numbers.algebraicnumber method)": [[69, "sympy.core.numbers.AlgebraicNumber.native_coeffs", false]], "naturals (class in sympy.sets.fancysets)": [[235, "sympy.sets.fancysets.Naturals", false]], "naturals0 (class in sympy.sets.fancysets)": [[235, "sympy.sets.fancysets.Naturals0", false]], "nc() (in module sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.nC", false]], "ne (in module sympy.core.relational)": [[69, "sympy.core.relational.Ne", false]], "nearest_common_ancestor() (sympy.polys.numberfields.modules.module method)": [[222, "sympy.polys.numberfields.modules.Module.nearest_common_ancestor", false]], "necklaces() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.necklaces", false]], "neg() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.neg", false]], "neg() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.neg", false]], "neg() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.neg", false]], "neg() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.neg", false]], "neg() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.neg", false]], "neg() (sympy.polys.polyclasses.dmf method)": [[218, "sympy.polys.polyclasses.DMF.neg", false]], "neg() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.neg", false]], "neg() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.neg", false]], "negated (sympy.core.relational.relational property)": [[69, "sympy.core.relational.Relational.negated", false]], "negative": [[69, "term-negative", true]], "negativebinomial() (in module sympy.stats)": [[247, "sympy.stats.NegativeBinomial", false]], "negativeinfinity (class in sympy.core.numbers)": [[69, "sympy.core.numbers.NegativeInfinity", false]], "negativemultinomial() (in module sympy.stats)": [[247, "sympy.stats.NegativeMultinomial", false]], "negativeone (class in sympy.core.numbers)": [[69, "sympy.core.numbers.NegativeOne", false]], "negativepredicate (class in sympy.assumptions.predicates.order)": [[46, "sympy.assumptions.predicates.order.NegativePredicate", false]], "new() (sympy.polys.domains.gaussiandomains.gaussianelement class method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianElement.new", false]], "new() (sympy.polys.matrices.sdm.sdm class method)": [[216, "sympy.polys.matrices.sdm.SDM.new", false]], "new() (sympy.polys.polytools.poly class method)": [[223, "sympy.polys.polytools.Poly.new", false]], "new() (sympy.polys.rootoftools.rootsum class method)": [[223, "sympy.polys.rootoftools.RootSum.new", false]], "newtons_method() (in module sympy.codegen.algorithms)": [[50, "sympy.codegen.algorithms.newtons_method", false]], "newtons_method_function() (in module sympy.codegen.algorithms)": [[50, "sympy.codegen.algorithms.newtons_method_function", false]], "next() (sympy.combinatorics.graycode.graycode method)": [[53, "sympy.combinatorics.graycode.GrayCode.next", false]], "next() (sympy.combinatorics.prufer.prufer method)": [[63, "sympy.combinatorics.prufer.Prufer.next", false]], "next() (sympy.printing.pretty.stringpict.stringpict static method)": [[227, "sympy.printing.pretty.stringpict.stringPict.next", false]], "next_binary() (sympy.combinatorics.subsets.subset method)": [[64, "sympy.combinatorics.subsets.Subset.next_binary", false]], "next_gray() (sympy.combinatorics.subsets.subset method)": [[64, "sympy.combinatorics.subsets.Subset.next_gray", false]], "next_lex() (sympy.combinatorics.partitions.integerpartition method)": [[58, "sympy.combinatorics.partitions.IntegerPartition.next_lex", false]], "next_lex() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.next_lex", false]], "next_lexicographic() (sympy.combinatorics.subsets.subset method)": [[64, "sympy.combinatorics.subsets.Subset.next_lexicographic", false]], "next_nonlex() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.next_nonlex", false]], "next_trotterjohnson() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.next_trotterjohnson", false]], "nextprime() (in module sympy.ntheory.generate)": [[109, "sympy.ntheory.generate.nextprime", false]], "nfloat() (in module sympy.core.function)": [[69, "sympy.core.function.nfloat", false]], "nine_point_circle (sympy.geometry.polygon.triangle property)": [[85, "sympy.geometry.polygon.Triangle.nine_point_circle", false]], "nnz() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.nnz", false]], "nnz() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.nnz", false]], "nnz() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.nnz", false]], "nnz() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.nnz", false]], "no (class in sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.NO", false]], "no_attrs_in_subclass (class in sympy.utilities.decorator)": [[261, "sympy.utilities.decorator.no_attrs_in_subclass", false]], "no_symmetry() (sympy.tensor.tensor.tensorsymmetry class method)": [[253, "sympy.tensor.tensor.TensorSymmetry.no_symmetry", false]], "nocache_fail() (in module sympy.testing.pytest)": [[256, "sympy.testing.pytest.nocache_fail", false]], "node (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.Node", false]], "node_labels (sympy.physics.continuum_mechanics.truss.truss property)": [[121, "sympy.physics.continuum_mechanics.truss.Truss.node_labels", false]], "node_positions (sympy.physics.continuum_mechanics.truss.truss property)": [[121, "sympy.physics.continuum_mechanics.truss.Truss.node_positions", false]], "nodes (sympy.combinatorics.prufer.prufer property)": [[63, "sympy.combinatorics.prufer.Prufer.nodes", false]], "nodes (sympy.physics.continuum_mechanics.truss.truss property)": [[121, "sympy.physics.continuum_mechanics.truss.Truss.nodes", false]], "nonelementaryintegral (class in sympy.integrals.risch)": [[96, "sympy.integrals.risch.NonElementaryIntegral", false]], "nonetoken (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.NoneToken", false]], "nonholonomic_constraints (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.nonholonomic_constraints", false]], "nonlinsolve() (in module sympy.solvers.solveset)": [[246, "sympy.solvers.solveset.nonlinsolve", false]], "nonnegative": [[69, "term-nonnegative", true]], "nonnegativepredicate (class in sympy.assumptions.predicates.order)": [[46, "sympy.assumptions.predicates.order.NonNegativePredicate", false]], "nonpositive": [[69, "term-nonpositive", true]], "nonpositivepredicate (class in sympy.assumptions.predicates.order)": [[46, "sympy.assumptions.predicates.order.NonPositivePredicate", false]], "nonsquarematrixerror (class in sympy.matrices.matrixbase)": [[105, "sympy.matrices.matrixbase.NonSquareMatrixError", false]], "nonzero": [[69, "term-nonzero", true]], "nonzeropredicate (class in sympy.assumptions.predicates.order)": [[46, "sympy.assumptions.predicates.order.NonZeroPredicate", false]], "nor (class in sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.Nor", false]], "norm (sympy.physics.quantum.state.wavefunction property)": [[190, "sympy.physics.quantum.state.Wavefunction.norm", false]], "norm() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.norm", false]], "norm() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.norm", false]], "norm() (sympy.polys.numberfields.modules.powerbasiselement method)": [[222, "sympy.polys.numberfields.modules.PowerBasisElement.norm", false]], "norm() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.norm", false]], "norm() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.norm", false]], "normal() (in module sympy.stats)": [[247, "sympy.stats.Normal", false]], "normal() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.normal", false]], "normal_closure() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.normal_closure", false]], "normal_lines() (sympy.geometry.ellipse.ellipse method)": [[79, "sympy.geometry.ellipse.Ellipse.normal_lines", false]], "normal_vector (sympy.geometry.plane.plane property)": [[83, "sympy.geometry.plane.Plane.normal_vector", false]], "normalgamma() (in module sympy.stats)": [[247, "sympy.stats.NormalGamma", false]], "normalize() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.normalize", false]], "normalize() (sympy.physics.quantum.state.wavefunction method)": [[190, "sympy.physics.quantum.state.Wavefunction.normalize", false]], "normalize() (sympy.physics.vector.vector.vector method)": [[202, "sympy.physics.vector.vector.Vector.normalize", false]], "normalize() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.normalize", false]], "normalize() (sympy.vector.vector.vector method)": [[271, "sympy.vector.vector.Vector.normalize", false]], "normalize_theta_set() (in module sympy.sets.fancysets)": [[235, "sympy.sets.fancysets.normalize_theta_set", false]], "normalized() (in module sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.normalized", false]], "normalized() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.normalized", false]], "normalpredicate (class in sympy.assumptions.predicates.matrices)": [[46, "sympy.assumptions.predicates.matrices.NormalPredicate", false]], "normalpspace (class in sympy.stats.crv_types)": [[247, "sympy.stats.crv_types.NormalPSpace", false]], "not (class in sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.Not", false]], "not_empty_in() (in module sympy.calculus.util)": [[48, "sympy.calculus.util.not_empty_in", false]], "not_point() (sympy.physics.quantum.circuitplot.circuitplot method)": [[172, "sympy.physics.quantum.circuitplot.CircuitPlot.not_point", false]], "notalgebraic (class in sympy.polys.polyerrors)": [[220, "sympy.polys.polyerrors.NotAlgebraic", false]], "notinvertible (class in sympy.polys.polyerrors)": [[220, "sympy.polys.polyerrors.NotInvertible", false]], "notiterable (class in sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.NotIterable", false]], "notreversible (class in sympy.polys.polyerrors)": [[220, "sympy.polys.polyerrors.NotReversible", false]], "np() (in module sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.nP", false]], "npartitions() (in module sympy.ntheory.partitions_)": [[109, "sympy.ntheory.partitions_.npartitions", false]], "nqubits (sympy.physics.quantum.gate.cgate property)": [[176, "sympy.physics.quantum.gate.CGate.nqubits", false]], "nqubits (sympy.physics.quantum.gate.gate property)": [[176, "sympy.physics.quantum.gate.Gate.nqubits", false]], "nroots() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.nroots", false]], "nroots() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.nroots", false]], "nseries() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.nseries", false]], "nsimplify() (in module sympy.simplify.simplify)": [[239, "sympy.simplify.simplify.nsimplify", false]], "nsimplify() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.nsimplify", false]], "nsolve() (in module sympy.solvers.solvers)": [[245, "sympy.solvers.solvers.nsolve", false]], "nt() (in module sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.nT", false]], "nth() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.nth", false]], "nth() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.nth", false]], "nth_power_roots_poly() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.nth_power_roots_poly", false]], "nth_power_roots_poly() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.nth_power_roots_poly", false]], "nthalgebraic (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.NthAlgebraic", false]], "nthlinearconstantcoeffhomogeneous (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.NthLinearConstantCoeffHomogeneous", false]], "nthlinearconstantcoeffundeterminedcoefficients (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.NthLinearConstantCoeffUndeterminedCoefficients", false]], "nthlinearconstantcoeffvariationofparameters (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.NthLinearConstantCoeffVariationOfParameters", false]], "nthlineareulereqhomogeneous (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.NthLinearEulerEqHomogeneous", false]], "nthlineareulereqnonhomogeneousundeterminedcoefficients (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.NthLinearEulerEqNonhomogeneousUndeterminedCoefficients", false]], "nthlineareulereqnonhomogeneousvariationofparameters (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.NthLinearEulerEqNonhomogeneousVariationOfParameters", false]], "nthorderreducible (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.NthOrderReducible", false]], "nthroot() (in module sympy.simplify.simplify)": [[239, "sympy.simplify.simplify.nthroot", false]], "nthroot_mod() (in module sympy.ntheory.residue_ntheory)": [[109, "sympy.ntheory.residue_ntheory.nthroot_mod", false]], "ntt() (in module sympy.discrete.transforms)": [[72, "sympy.discrete.transforms.ntt", false]], "nu (sympy.functions.special.hyper.meijerg property)": [[77, "sympy.functions.special.hyper.meijerg.nu", false]], "nullspace() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.nullspace", false]], "nullspace() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.nullspace", false]], "nullspace() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.nullspace", false]], "nullspace() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.nullspace", false]], "nullspace() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.nullspace", false]], "nullspace_from_rref() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.nullspace_from_rref", false]], "nullspace_from_rref() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.nullspace_from_rref", false]], "nullspace_from_rref() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.nullspace_from_rref", false]], "nullspace_from_rref() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.nullspace_from_rref", false]], "num (sympy.physics.control.lti.feedback property)": [[125, "sympy.physics.control.lti.Feedback.num", false]], "num (sympy.physics.control.lti.transferfunction property)": [[125, "sympy.physics.control.lti.TransferFunction.num", false]], "num_digits() (in module sympy.core.intfunc)": [[69, "sympy.core.intfunc.num_digits", false]], "num_inputs (sympy.physics.control.lti.mimoparallel property)": [[125, "sympy.physics.control.lti.MIMOParallel.num_inputs", false]], "num_inputs (sympy.physics.control.lti.mimoseries property)": [[125, "sympy.physics.control.lti.MIMOSeries.num_inputs", false]], "num_inputs (sympy.physics.control.lti.transferfunctionmatrix property)": [[125, "sympy.physics.control.lti.TransferFunctionMatrix.num_inputs", false]], "num_outputs (sympy.physics.control.lti.mimoparallel property)": [[125, "sympy.physics.control.lti.MIMOParallel.num_outputs", false]], "num_outputs (sympy.physics.control.lti.mimoseries property)": [[125, "sympy.physics.control.lti.MIMOSeries.num_outputs", false]], "num_outputs (sympy.physics.control.lti.transferfunctionmatrix property)": [[125, "sympy.physics.control.lti.TransferFunctionMatrix.num_outputs", false]], "number": [[15, "term-Number", true]], "number (class in sympy.core.numbers)": [[69, "sympy.core.numbers.Number", false]], "number_field (sympy.polys.numberfields.modules.module property)": [[222, "sympy.polys.numberfields.modules.Module.number_field", false]], "numbered_symbols() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.numbered_symbols", false]], "numberkind (in module sympy.core.kind)": [[69, "sympy.core.kind.NumberKind", false]], "numbersymbol (class in sympy.core.numbers)": [[69, "sympy.core.numbers.NumberSymbol", false]], "numer() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.numer", false]], "numer() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.numer", false]], "numer() (sympy.polys.domains.expressiondomain method)": [[218, "sympy.polys.domains.ExpressionDomain.numer", false]], "numer() (sympy.polys.domains.fractionfield method)": [[218, "sympy.polys.domains.FractionField.numer", false]], "numer() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianRationalField.numer", false]], "numer() (sympy.polys.domains.gmpyrationalfield method)": [[218, "sympy.polys.domains.GMPYRationalField.numer", false]], "numer() (sympy.polys.domains.rationalfield method)": [[218, "sympy.polys.domains.RationalField.numer", false]], "numer() (sympy.polys.domains.ring.ring method)": [[218, "sympy.polys.domains.ring.Ring.numer", false]], "numer() (sympy.polys.polyclasses.dmf method)": [[218, "sympy.polys.polyclasses.DMF.numer", false]], "numerator() (sympy.polys.numberfields.modules.powerbasiselement method)": [[222, "sympy.polys.numberfields.modules.PowerBasisElement.numerator", false]], "numeric": [[15, "term-Numeric", true]], "object (class in sympy.categories)": [[49, "sympy.categories.Object", false]], "objects (sympy.categories.category property)": [[49, "sympy.categories.Category.objects", false]], "objects (sympy.categories.diagram property)": [[49, "sympy.categories.Diagram.objects", false]], "obstaclesetpathway (class in sympy.physics.mechanics.pathway)": [[138, "sympy.physics.mechanics.pathway.ObstacleSetPathway", false]], "octave_code() (in module sympy.printing.octave)": [[227, "sympy.printing.octave.octave_code", false]], "octavecodegen (class in sympy.utilities.codegen)": [[260, "sympy.utilities.codegen.OctaveCodeGen", false]], "octavecodeprinter (class in sympy.printing.octave)": [[227, "sympy.printing.octave.OctaveCodePrinter", false]], "odd": [[69, "term-odd", true]], "oddpredicate (class in sympy.assumptions.predicates.ntheory)": [[46, "sympy.assumptions.predicates.ntheory.OddPredicate", false]], "ode_1st_power_series() (in module sympy.solvers.ode.ode)": [[243, "sympy.solvers.ode.ode.ode_1st_power_series", false]], "ode_2nd_power_series_ordinary() (in module sympy.solvers.ode.ode)": [[243, "sympy.solvers.ode.ode.ode_2nd_power_series_ordinary", false]], "ode_2nd_power_series_regular() (in module sympy.solvers.ode.ode)": [[243, "sympy.solvers.ode.ode.ode_2nd_power_series_regular", false]], "ode_order() (in module sympy.solvers.deutils)": [[245, "sympy.solvers.deutils.ode_order", false]], "ode_sol_simplicity() (in module sympy.solvers.ode.ode)": [[243, "sympy.solvers.ode.ode.ode_sol_simplicity", false]], "odesimp() (in module sympy.solvers.ode.ode)": [[243, "sympy.solvers.ode.ode.odesimp", false]], "of_type() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.of_type", false]], "offset (sympy.tensor.indexed.indexedbase property)": [[252, "sympy.tensor.indexed.IndexedBase.offset", false]], "old_frac_field() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.old_frac_field", false]], "old_poly_ring() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.old_poly_ring", false]], "one (class in sympy.core.numbers)": [[69, "sympy.core.numbers.One", false]], "one (sympy.polys.domains.domain.domain attribute)": [[218, "sympy.polys.domains.domain.Domain.one", false]], "one (sympy.polys.polytools.poly property)": [[223, "sympy.polys.polytools.Poly.one", false]], "one() (sympy.polys.numberfields.modules.module method)": [[222, "sympy.polys.numberfields.modules.Module.one", false]], "one_qubit_box() (sympy.physics.quantum.circuitplot.circuitplot method)": [[172, "sympy.physics.quantum.circuitplot.CircuitPlot.one_qubit_box", false]], "onequbitgate (class in sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.OneQubitGate", false]], "ones() (in module sympy.matrices.dense)": [[105, "sympy.matrices.dense.ones", false]], "ones() (sympy.matrices.matrixbase.matrixbase class method)": [[105, "sympy.matrices.matrixbase.MatrixBase.ones", false]], "ones() (sympy.polys.matrices._dfm.dfm class method)": [[216, "sympy.polys.matrices._dfm.DFM.ones", false]], "ones() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.ones", false]], "oo": [[15, "term-oo", true]], "open() (sympy.sets.sets.interval class method)": [[235, "sympy.sets.sets.Interval.open", false]], "operationnotsupported (class in sympy.polys.polyerrors)": [[220, "sympy.polys.polyerrors.OperationNotSupported", false]], "operator (class in sympy.physics.quantum.operator)": [[181, "sympy.physics.quantum.operator.Operator", false]], "operators (sympy.physics.quantum.state.statebase property)": [[190, "sympy.physics.quantum.state.StateBase.operators", false]], "operators_to_state() (in module sympy.physics.quantum.operatorset)": [[182, "sympy.physics.quantum.operatorset.operators_to_state", false]], "opt_cse() (in module sympy.simplify.cse_main)": [[239, "sympy.simplify.cse_main.opt_cse", false]], "optimal_fiber_length (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.optimal_fiber_length", false]], "optimal_pennation_angle (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.optimal_pennation_angle", false]], "optimization (class in sympy.codegen.rewriting)": [[50, "sympy.codegen.rewriting.Optimization", false]], "optimize() (in module sympy.codegen.rewriting)": [[50, "sympy.codegen.rewriting.optimize", false]], "optionerror (class in sympy.polys.polyerrors)": [[220, "sympy.polys.polyerrors.OptionError", false]], "options (class in sympy.polys.polyoptions)": [[220, "sympy.polys.polyoptions.Options", false]], "or (class in sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.Or", false]], "oraclegate (class in sympy.physics.quantum.grover)": [[177, "sympy.physics.quantum.grover.OracleGate", false]], "orbit() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.orbit", false]], "orbit_rep() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.orbit_rep", false]], "orbit_transversal() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.orbit_transversal", false]], "orbits() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.orbits", false]], "order (class in sympy.series.order)": [[234, "sympy.series.order.Order", false]], "order (sympy.functions.special.bessel.besselbase property)": [[77, "sympy.functions.special.bessel.BesselBase.order", false]], "order (sympy.physics.biomechanics.activation.activationbase property)": [[112, "sympy.physics.biomechanics.activation.ActivationBase.order", false]], "order (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[112, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.order", false]], "order (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[112, "sympy.physics.biomechanics.activation.ZerothOrderActivation.order", false]], "order() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.order", false]], "order() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.order", false]], "ordered() (in module sympy.core.sorting)": [[69, "sympy.core.sorting.ordered", false]], "ordered_partitions() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.ordered_partitions", false]], "ordinal() (in module sympy.utilities.misc)": [[268, "sympy.utilities.misc.ordinal", false]], "orient() (sympy.physics.vector.frame.referenceframe method)": [[202, "sympy.physics.vector.frame.ReferenceFrame.orient", false]], "orient_axis() (sympy.physics.vector.frame.referenceframe method)": [[202, "sympy.physics.vector.frame.ReferenceFrame.orient_axis", false]], "orient_body_fixed() (sympy.physics.vector.frame.referenceframe method)": [[202, "sympy.physics.vector.frame.ReferenceFrame.orient_body_fixed", false]], "orient_dcm() (sympy.physics.vector.frame.referenceframe method)": [[202, "sympy.physics.vector.frame.ReferenceFrame.orient_dcm", false]], "orient_new() (sympy.vector.coordsysrect.coordsys3d method)": [[271, "sympy.vector.coordsysrect.CoordSys3D.orient_new", false]], "orient_new_axis() (sympy.vector.coordsysrect.coordsys3d method)": [[271, "sympy.vector.coordsysrect.CoordSys3D.orient_new_axis", false]], "orient_new_body() (sympy.vector.coordsysrect.coordsys3d method)": [[271, "sympy.vector.coordsysrect.CoordSys3D.orient_new_body", false]], "orient_new_quaternion() (sympy.vector.coordsysrect.coordsys3d method)": [[271, "sympy.vector.coordsysrect.CoordSys3D.orient_new_quaternion", false]], "orient_new_space() (sympy.vector.coordsysrect.coordsys3d method)": [[271, "sympy.vector.coordsysrect.CoordSys3D.orient_new_space", false]], "orient_quaternion() (sympy.physics.vector.frame.referenceframe method)": [[202, "sympy.physics.vector.frame.ReferenceFrame.orient_quaternion", false]], "orient_space_fixed() (sympy.physics.vector.frame.referenceframe method)": [[202, "sympy.physics.vector.frame.ReferenceFrame.orient_space_fixed", false]], "orienter (class in sympy.vector.orienters)": [[273, "sympy.vector.orienters.Orienter", false]], "orientnew() (sympy.physics.vector.frame.referenceframe method)": [[202, "sympy.physics.vector.frame.ReferenceFrame.orientnew", false]], "orig_ext (sympy.polys.domains.algebraicfield attribute)": [[218, "sympy.polys.domains.AlgebraicField.orig_ext", false]], "origin (sympy.geometry.point.point property)": [[84, "sympy.geometry.point.Point.origin", false]], "orthocenter (sympy.geometry.polygon.triangle property)": [[85, "sympy.geometry.polygon.Triangle.orthocenter", false]], "orthogonal() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.orthogonal", false]], "orthogonal_direction (sympy.geometry.point.point property)": [[84, "sympy.geometry.point.Point.orthogonal_direction", false]], "orthogonalbra (class in sympy.physics.quantum.state)": [[190, "sympy.physics.quantum.state.OrthogonalBra", false]], "orthogonalize() (sympy.matrices.matrixbase.matrixbase class method)": [[105, "sympy.matrices.matrixbase.MatrixBase.orthogonalize", false]], "orthogonalket (class in sympy.physics.quantum.state)": [[190, "sympy.physics.quantum.state.OrthogonalKet", false]], "orthogonalpredicate (class in sympy.assumptions.predicates.matrices)": [[46, "sympy.assumptions.predicates.matrices.OrthogonalPredicate", false]], "orthogonalstate (class in sympy.physics.quantum.state)": [[190, "sympy.physics.quantum.state.OrthogonalState", false]], "outer() (in module sympy.physics.vector.functions)": [[204, "sympy.physics.vector.functions.outer", false]], "outer() (sympy.physics.vector.vector.vector method)": [[202, "sympy.physics.vector.vector.Vector.outer", false]], "outer() (sympy.vector.vector.vector method)": [[271, "sympy.vector.vector.Vector.outer", false]], "outerproduct (class in sympy.physics.quantum.operator)": [[181, "sympy.physics.quantum.operator.OuterProduct", false]], "outputargument (class in sympy.utilities.codegen)": [[260, "sympy.utilities.codegen.OutputArgument", false]], "over_power_basis() (sympy.polys.numberfields.modules.moduleelement method)": [[222, "sympy.polys.numberfields.modules.ModuleElement.over_power_basis", false]], "p (sympy.physics.biomechanics.activation.activationbase property)": [[112, "sympy.physics.biomechanics.activation.ActivationBase.p", false]], "p (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[112, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.p", false]], "p (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[112, "sympy.physics.biomechanics.activation.ZerothOrderActivation.p", false]], "p (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.p", false]], "p() (in module sympy.stats)": [[247, "sympy.stats.P", false]], "p1 (sympy.geometry.line.linearentity property)": [[82, "sympy.geometry.line.LinearEntity.p1", false]], "p1 (sympy.geometry.plane.plane property)": [[83, "sympy.geometry.plane.Plane.p1", false]], "p2 (sympy.geometry.line.linearentity property)": [[82, "sympy.geometry.line.LinearEntity.p2", false]], "padded_key() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.padded_key", false]], "parallel (class in sympy.physics.control.lti)": [[125, "sympy.physics.control.lti.Parallel", false]], "parallel() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.parallel", false]], "parallel_axis() (sympy.physics.mechanics.body.body method)": [[131, "sympy.physics.mechanics.body.Body.parallel_axis", false]], "parallel_axis() (sympy.physics.mechanics.particle.particle method)": [[137, "sympy.physics.mechanics.particle.Particle.parallel_axis", false]], "parallel_axis() (sympy.physics.mechanics.rigidbody.rigidbody method)": [[137, "sympy.physics.mechanics.rigidbody.RigidBody.parallel_axis", false]], "parallel_line() (sympy.geometry.line.linearentity method)": [[82, "sympy.geometry.line.LinearEntity.parallel_line", false]], "parallel_plane() (sympy.geometry.plane.plane method)": [[83, "sympy.geometry.plane.Plane.parallel_plane", false]], "parallel_poly_from_expr() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.parallel_poly_from_expr", false]], "parameter (sympy.geometry.curve.curve property)": [[78, "sympy.geometry.curve.Curve.parameter", false]], "parameter_value() (sympy.geometry.entity.geometryentity method)": [[80, "sympy.geometry.entity.GeometryEntity.parameter_value", false]], "parameter_value() (sympy.geometry.plane.plane method)": [[83, "sympy.geometry.plane.Plane.parameter_value", false]], "parametric2dlineseries (class in sympy.plotting.series)": [[213, "sympy.plotting.series.Parametric2DLineSeries", false]], "parametric3dlineseries (class in sympy.plotting.series)": [[213, "sympy.plotting.series.Parametric3DLineSeries", false]], "parametricintegral (class in sympy.vector.integrals)": [[271, "sympy.vector.integrals.ParametricIntegral", false]], "parametricregion (class in sympy.vector.parametricregion)": [[271, "sympy.vector.parametricregion.ParametricRegion", false]], "parametricsurfaceseries (class in sympy.plotting.series)": [[213, "sympy.plotting.series.ParametricSurfaceSeries", false]], "parametrize_ternary_quadratic() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.parametrize_ternary_quadratic", false]], "params (sympy.plotting.series.baseseries property)": [[213, "sympy.plotting.series.BaseSeries.params", false]], "parens() (sympy.printing.pretty.stringpict.stringpict method)": [[227, "sympy.printing.pretty.stringpict.stringPict.parens", false]], "parent (sympy.physics.mechanics.joint.joint property)": [[134, "sympy.physics.mechanics.joint.Joint.parent", false]], "parent (sympy.polys.numberfields.modules.module property)": [[222, "sympy.polys.numberfields.modules.Module.parent", false]], "parent() (sympy.polys.domains.domainelement.domainelement method)": [[218, "sympy.polys.domains.domainelement.DomainElement.parent", false]], "parent() (sympy.polys.domains.gaussiandomains.gaussianelement method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianElement.parent", false]], "parent_axis (sympy.physics.mechanics.joint.joint property)": [[134, "sympy.physics.mechanics.joint.Joint.parent_axis", false]], "parent_point (sympy.physics.mechanics.joint.joint property)": [[134, "sympy.physics.mechanics.joint.Joint.parent_point", false]], "parenthesize_super() (sympy.printing.latex.latexprinter method)": [[227, "sympy.printing.latex.LatexPrinter.parenthesize_super", false]], "pareto() (in module sympy.stats)": [[247, "sympy.stats.Pareto", false]], "pargs (sympy.functions.special.delta_functions.heaviside property)": [[77, "sympy.functions.special.delta_functions.Heaviside.pargs", false]], "parity() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.parity", false]], "parse_expr() (in module sympy.parsing.sympy_parser)": [[111, "sympy.parsing.sympy_parser.parse_expr", false]], "parse_latex() (in module sympy.parsing.latex)": [[111, "sympy.parsing.latex.parse_latex", false]], "parse_latex_lark() (in module sympy.parsing.latex)": [[111, "sympy.parsing.latex.parse_latex_lark", false]], "parse_mathematica() (in module sympy.parsing.mathematica)": [[111, "sympy.parsing.mathematica.parse_mathematica", false]], "parse_maxima() (in module sympy.parsing.maxima)": [[111, "sympy.parsing.maxima.parse_maxima", false]], "partial_velocity() (in module sympy.physics.vector.functions)": [[206, "sympy.physics.vector.functions.partial_velocity", false]], "partial_velocity() (sympy.physics.vector.frame.referenceframe method)": [[202, "sympy.physics.vector.frame.ReferenceFrame.partial_velocity", false]], "partial_velocity() (sympy.physics.vector.point.point method)": [[206, "sympy.physics.vector.point.Point.partial_velocity", false]], "partialderivative (class in sympy.tensor.toperators)": [[254, "sympy.tensor.toperators.PartialDerivative", false]], "particle (class in sympy.physics.mechanics.particle)": [[137, "sympy.physics.mechanics.particle.Particle", false]], "particular() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.particular", false]], "partition (class in sympy.combinatorics.partitions)": [[58, "sympy.combinatorics.partitions.Partition", false]], "partition (class in sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.partition", false]], "partition (sympy.combinatorics.partitions.partition property)": [[58, "sympy.combinatorics.partitions.Partition.partition", false]], "partition() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.partition", false]], "partitions() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.partitions", false]], "pat_matrix() (in module sympy.physics.matrices)": [[128, "sympy.physics.matrices.pat_matrix", false]], "patch (class in sympy.diffgeom)": [[71, "sympy.diffgeom.Patch", false]], "pathway (sympy.physics.mechanics.actuator.forceactuator property)": [[130, "sympy.physics.mechanics.actuator.ForceActuator.pathway", false]], "pathwaybase (class in sympy.physics.mechanics.pathway)": [[138, "sympy.physics.mechanics.pathway.PathwayBase", false]], "pde_1st_linear_constant_coeff() (in module sympy.solvers.pde)": [[244, "sympy.solvers.pde.pde_1st_linear_constant_coeff", false]], "pde_1st_linear_constant_coeff_homogeneous() (in module sympy.solvers.pde)": [[244, "sympy.solvers.pde.pde_1st_linear_constant_coeff_homogeneous", false]], "pde_1st_linear_variable_coeff() (in module sympy.solvers.pde)": [[244, "sympy.solvers.pde.pde_1st_linear_variable_coeff", false]], "pde_separate() (in module sympy.solvers.pde)": [[244, "sympy.solvers.pde.pde_separate", false]], "pde_separate_add() (in module sympy.solvers.pde)": [[244, "sympy.solvers.pde.pde_separate_add", false]], "pde_separate_mul() (in module sympy.solvers.pde)": [[244, "sympy.solvers.pde.pde_separate_mul", false]], "pdiv() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.pdiv", false]], "pdiv() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.pdiv", false]], "pdiv() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.pdiv", false]], "pdiv() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.pdiv", false]], "pdsolve() (in module sympy.solvers.pde)": [[244, "sympy.solvers.pde.pdsolve", false]], "peak_isometric_force (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.peak_isometric_force", false]], "pep 335": [[69, "index-0", false], [69, "index-1", false], [69, "index-2", false], [69, "index-3", false]], "per() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.per", false]], "per() (sympy.polys.polyclasses.dmf method)": [[218, "sympy.polys.polyclasses.DMF.per", false]], "per() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.per", false]], "perfect_power() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.perfect_power", false]], "periapsis (sympy.geometry.ellipse.ellipse property)": [[79, "sympy.geometry.ellipse.Ellipse.periapsis", false]], "perimeter (sympy.geometry.polygon.polygon property)": [[85, "sympy.geometry.polygon.Polygon.perimeter", false]], "period_find() (in module sympy.physics.quantum.shor)": [[188, "sympy.physics.quantum.shor.period_find", false]], "periodic_argument (class in sympy.functions.elementary.complexes)": [[75, "sympy.functions.elementary.complexes.periodic_argument", false]], "periodicity() (in module sympy.calculus.util)": [[48, "sympy.calculus.util.periodicity", false]], "perm2tensor() (sympy.tensor.tensor.tensmul method)": [[253, "sympy.tensor.tensor.TensMul.perm2tensor", false]], "permutation (class in sympy.combinatorics.permutations)": [[61, "sympy.combinatorics.permutations.Permutation", false]], "permutationgroup (class in sympy.combinatorics.perm_groups)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup", false]], "permutationmatrix (class in sympy.matrices.expressions)": [[101, "sympy.matrices.expressions.PermutationMatrix", false]], "permutationoperator (class in sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.PermutationOperator", false]], "permute() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.permute", false]], "permute() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.permute", false]], "permute_cols() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.permute_cols", false]], "permute_rows() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.permute_rows", false]], "permute_signs() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.permute_signs", false]], "permutebkwd() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.permuteBkwd", false]], "permutedims (class in sympy.tensor.array.expressions)": [[249, "sympy.tensor.array.expressions.PermuteDims", false]], "permutedims() (in module sympy.tensor.array)": [[248, "sympy.tensor.array.permutedims", false]], "permutefwd() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.permuteFwd", false]], "perpendicular_bisector() (sympy.geometry.line.segment method)": [[82, "sympy.geometry.line.Segment.perpendicular_bisector", false]], "perpendicular_line() (sympy.geometry.line.linearentity method)": [[82, "sympy.geometry.line.LinearEntity.perpendicular_line", false]], "perpendicular_line() (sympy.geometry.line.linearentity2d method)": [[82, "sympy.geometry.line.LinearEntity2D.perpendicular_line", false]], "perpendicular_line() (sympy.geometry.plane.plane method)": [[83, "sympy.geometry.plane.Plane.perpendicular_line", false]], "perpendicular_plane() (sympy.geometry.plane.plane method)": [[83, "sympy.geometry.plane.Plane.perpendicular_plane", false]], "perpendicular_segment() (sympy.geometry.line.linearentity method)": [[82, "sympy.geometry.line.LinearEntity.perpendicular_segment", false]], "pexquo() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.pexquo", false]], "pexquo() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.pexquo", false]], "pexquo() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.pexquo", false]], "pexquo() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.pexquo", false]], "pgl2f5() (in module sympy.combinatorics.galois)": [[52, "sympy.combinatorics.galois.PGL2F5", false]], "pgroup (sympy.combinatorics.polyhedron.polyhedron property)": [[62, "sympy.combinatorics.polyhedron.Polyhedron.pgroup", false]], "phase (in module sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.Phase", false]], "phase (sympy.physics.optics.waves.twave property)": [[166, "sympy.physics.optics.waves.TWave.phase", false]], "phase_retarder() (in module sympy.physics.optics.polarization)": [[164, "sympy.physics.optics.polarization.phase_retarder", false]], "phasegate (class in sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.PhaseGate", false]], "pi (class in sympy.core.numbers)": [[69, "sympy.core.numbers.Pi", false]], "pi_hex_digits() (in module sympy.ntheory.bbp_pi)": [[109, "sympy.ntheory.bbp_pi.pi_hex_digits", false]], "piabbra (class in sympy.physics.quantum.piab)": [[183, "sympy.physics.quantum.piab.PIABBra", false]], "piabhamiltonian (class in sympy.physics.quantum.piab)": [[183, "sympy.physics.quantum.piab.PIABHamiltonian", false]], "piabket (class in sympy.physics.quantum.piab)": [[183, "sympy.physics.quantum.piab.PIABKet", false]], "piecewise (class in sympy.functions.elementary.piecewise)": [[75, "sympy.functions.elementary.piecewise.Piecewise", false]], "piecewise_exclusive() (in module sympy.functions.elementary.piecewise)": [[75, "sympy.functions.elementary.piecewise.piecewise_exclusive", false]], "piecewise_fold() (in module sympy.functions.elementary.piecewise)": [[75, "sympy.functions.elementary.piecewise.piecewise_fold", false]], "piecewise_integrate() (sympy.functions.elementary.piecewise.piecewise method)": [[75, "sympy.functions.elementary.piecewise.Piecewise.piecewise_integrate", false]], "pinjoint (class in sympy.physics.mechanics.joint)": [[134, "sympy.physics.mechanics.joint.PinJoint", false]], "pinv() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.pinv", false]], "pinv_solve() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.pinv_solve", false]], "planar_coordinates (sympy.physics.mechanics.joint.planarjoint property)": [[134, "sympy.physics.mechanics.joint.PlanarJoint.planar_coordinates", false]], "planar_speeds (sympy.physics.mechanics.joint.planarjoint property)": [[134, "sympy.physics.mechanics.joint.PlanarJoint.planar_speeds", false]], "planar_vectors (sympy.physics.mechanics.joint.planarjoint property)": [[134, "sympy.physics.mechanics.joint.PlanarJoint.planar_vectors", false]], "planarjoint (class in sympy.physics.mechanics.joint)": [[134, "sympy.physics.mechanics.joint.PlanarJoint", false]], "plane (class in sympy.geometry.plane)": [[83, "sympy.geometry.plane.Plane", false]], "plot (class in sympy.plotting.plot)": [[213, "sympy.plotting.plot.Plot", false]], "plot() (in module sympy.plotting.plot)": [[213, "sympy.plotting.plot.plot", false]], "plot3d() (in module sympy.plotting.plot)": [[213, "sympy.plotting.plot.plot3d", false]], "plot3d_parametric_line() (in module sympy.plotting.plot)": [[213, "sympy.plotting.plot.plot3d_parametric_line", false]], "plot3d_parametric_surface() (in module sympy.plotting.plot)": [[213, "sympy.plotting.plot.plot3d_parametric_surface", false]], "plot_bending_moment() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.plot_bending_moment", false]], "plot_bending_moment() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.plot_bending_moment", false]], "plot_deflection() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.plot_deflection", false]], "plot_deflection() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.plot_deflection", false]], "plot_gate() (sympy.physics.quantum.gate.cgate method)": [[176, "sympy.physics.quantum.gate.CGate.plot_gate", false]], "plot_ild_moment() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.plot_ild_moment", false]], "plot_ild_reactions() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.plot_ild_reactions", false]], "plot_ild_shear() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.plot_ild_shear", false]], "plot_implicit() (in module sympy.plotting.plot_implicit)": [[213, "sympy.plotting.plot_implicit.plot_implicit", false]], "plot_interval() (sympy.geometry.curve.curve method)": [[78, "sympy.geometry.curve.Curve.plot_interval", false]], "plot_interval() (sympy.geometry.ellipse.ellipse method)": [[79, "sympy.geometry.ellipse.Ellipse.plot_interval", false]], "plot_interval() (sympy.geometry.line.line method)": [[82, "sympy.geometry.line.Line.plot_interval", false]], "plot_interval() (sympy.geometry.line.ray method)": [[82, "sympy.geometry.line.Ray.plot_interval", false]], "plot_interval() (sympy.geometry.line.segment method)": [[82, "sympy.geometry.line.Segment.plot_interval", false]], "plot_interval() (sympy.geometry.polygon.polygon method)": [[85, "sympy.geometry.polygon.Polygon.plot_interval", false]], "plot_loading_results() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.plot_loading_results", false]], "plot_loading_results() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.plot_loading_results", false]], "plot_parametric() (in module sympy.plotting.plot)": [[213, "sympy.plotting.plot.plot_parametric", false]], "plot_shear_force() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.plot_shear_force", false]], "plot_shear_force() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.plot_shear_force", false]], "plot_shear_stress() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.plot_shear_stress", false]], "plot_shear_stress() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.plot_shear_stress", false]], "plot_slope() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.plot_slope", false]], "plot_slope() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.plot_slope", false]], "plotgrid (class in sympy.plotting.plot)": [[213, "sympy.plotting.plot.PlotGrid", false]], "point (class in sympy.diffgeom)": [[71, "sympy.diffgeom.Point", false]], "point (class in sympy.geometry.point)": [[84, "sympy.geometry.point.Point", false]], "point (class in sympy.physics.vector.point)": [[206, "sympy.physics.vector.point.Point", false]], "point (sympy.core.function.subs property)": [[69, "sympy.core.function.Subs.point", false]], "point (sympy.physics.mechanics.body.body property)": [[131, "sympy.physics.mechanics.body.Body.point", false]], "point (sympy.physics.mechanics.particle.particle property)": [[137, "sympy.physics.mechanics.particle.Particle.point", false]], "point (sympy.physics.mechanics.wrapping_geometry.wrappingcylinder property)": [[141, "sympy.physics.mechanics.wrapping_geometry.WrappingCylinder.point", false]], "point (sympy.physics.mechanics.wrapping_geometry.wrappinggeometrybase property)": [[141, "sympy.physics.mechanics.wrapping_geometry.WrappingGeometryBase.point", false]], "point (sympy.physics.mechanics.wrapping_geometry.wrappingsphere property)": [[141, "sympy.physics.mechanics.wrapping_geometry.WrappingSphere.point", false]], "point() (sympy.diffgeom.coordsystem method)": [[71, "sympy.diffgeom.CoordSystem.point", false]], "point2d (class in sympy.geometry.point)": [[84, "sympy.geometry.point.Point2D", false]], "point3d (class in sympy.geometry.point)": [[84, "sympy.geometry.point.Point3D", false]], "point_cflexure() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.point_cflexure", false]], "point_on_surface() (sympy.physics.mechanics.wrapping_geometry.wrappingcylinder method)": [[141, "sympy.physics.mechanics.wrapping_geometry.WrappingCylinder.point_on_surface", false]], "point_on_surface() (sympy.physics.mechanics.wrapping_geometry.wrappinggeometrybase method)": [[141, "sympy.physics.mechanics.wrapping_geometry.WrappingGeometryBase.point_on_surface", false]], "point_on_surface() (sympy.physics.mechanics.wrapping_geometry.wrappingsphere method)": [[141, "sympy.physics.mechanics.wrapping_geometry.WrappingSphere.point_on_surface", false]], "point_to_coords() (sympy.diffgeom.coordsystem method)": [[71, "sympy.diffgeom.CoordSystem.point_to_coords", false]], "pointer (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.Pointer", false]], "points (sympy.geometry.line.linearentity property)": [[82, "sympy.geometry.line.LinearEntity.points", false]], "pointwise_stabilizer() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.pointwise_stabilizer", false]], "poisson() (in module sympy.stats)": [[247, "sympy.stats.Poisson", false]], "poissonprocess (class in sympy.stats)": [[247, "sympy.stats.PoissonProcess", false]], "polar_lift (class in sympy.functions.elementary.complexes)": [[75, "sympy.functions.elementary.complexes.polar_lift", false]], "polar_moment() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.polar_moment", false]], "polar_second_moment_of_area() (sympy.geometry.ellipse.ellipse method)": [[79, "sympy.geometry.ellipse.Ellipse.polar_second_moment_of_area", false]], "polar_second_moment_of_area() (sympy.geometry.polygon.polygon method)": [[85, "sympy.geometry.polygon.Polygon.polar_second_moment_of_area", false]], "polarcomplexregion (class in sympy.sets.fancysets)": [[235, "sympy.sets.fancysets.PolarComplexRegion", false]], "polarizing_beam_splitter() (in module sympy.physics.optics.polarization)": [[164, "sympy.physics.optics.polarization.polarizing_beam_splitter", false]], "pole_zero_numerical_data() (sympy.physics.control.control_plots method)": [[123, "sympy.physics.control.control_plots.pole_zero_numerical_data", false]], "pole_zero_plot() (sympy.physics.control.control_plots method)": [[123, "sympy.physics.control.control_plots.pole_zero_plot", false]], "poleerror (class in sympy.core.function)": [[69, "sympy.core.function.PoleError", false]], "poles() (sympy.physics.control.lti.transferfunction method)": [[125, "sympy.physics.control.lti.TransferFunction.poles", false]], "polificationfailed (class in sympy.polys.polyerrors)": [[220, "sympy.polys.polyerrors.PolificationFailed", false]], "pollard_pm1() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.pollard_pm1", false]], "pollard_rho() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.pollard_rho", false]], "poly (class in sympy.polys.polytools)": [[223, "sympy.polys.polytools.Poly", false]], "poly() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.poly", false]], "poly() (sympy.polys.numberfields.modules.powerbasiselement method)": [[222, "sympy.polys.numberfields.modules.PowerBasisElement.poly", false]], "poly_from_expr() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.poly_from_expr", false]], "poly_ring() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.poly_ring", false]], "poly_unify() (sympy.polys.polyclasses.dmf method)": [[218, "sympy.polys.polyclasses.DMF.poly_unify", false]], "polycyclic_group() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.polycyclic_group", false]], "polyelement (class in sympy.polys.rings)": [[218, "sympy.polys.rings.PolyElement", false]], "polygamma (class in sympy.functions.special.gamma_functions)": [[77, "sympy.functions.special.gamma_functions.polygamma", false]], "polygon (class in sympy.geometry.polygon)": [[85, "sympy.geometry.polygon.Polygon", false]], "polyhedron (class in sympy.combinatorics.polyhedron)": [[62, "sympy.combinatorics.polyhedron.Polyhedron", false]], "polylog (class in sympy.functions.special.zeta_functions)": [[77, "sympy.functions.special.zeta_functions.polylog", false]], "polynomial() (sympy.series.formal.formalpowerseries method)": [[229, "sympy.series.formal.FormalPowerSeries.polynomial", false]], "polynomial_congruence() (in module sympy.ntheory.residue_ntheory)": [[109, "sympy.ntheory.residue_ntheory.polynomial_congruence", false]], "polynomialerror (class in sympy.polys.polyerrors)": [[220, "sympy.polys.polyerrors.PolynomialError", false]], "polynomialring (class in sympy.polys.domains)": [[218, "sympy.polys.domains.PolynomialRing", false]], "polyring (class in sympy.polys.rings)": [[218, "sympy.polys.rings.PolyRing", false]], "polys": [[15, "term-Polys", true]], "polytope_integrate() (in module sympy.integrals.intpoly)": [[96, "sympy.integrals.intpoly.polytope_integrate", false]], "pos() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.pos", false]], "pos_from() (sympy.physics.vector.point.point method)": [[206, "sympy.physics.vector.point.Point.pos_from", false]], "posform() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.POSform", false]], "posify() (in module sympy.simplify.simplify)": [[239, "sympy.simplify.simplify.posify", false]], "position (sympy.physics.quantum.cartesian.xbra property)": [[170, "sympy.physics.quantum.cartesian.XBra.position", false]], "position (sympy.physics.quantum.cartesian.xket property)": [[170, "sympy.physics.quantum.cartesian.XKet.position", false]], "position_wrt() (sympy.vector.coordsysrect.coordsys3d method)": [[271, "sympy.vector.coordsysrect.CoordSys3D.position_wrt", false]], "position_x (sympy.physics.quantum.cartesian.positionstate3d property)": [[170, "sympy.physics.quantum.cartesian.PositionState3D.position_x", false]], "position_y (sympy.physics.quantum.cartesian.positionstate3d property)": [[170, "sympy.physics.quantum.cartesian.PositionState3D.position_y", false]], "position_z (sympy.physics.quantum.cartesian.positionstate3d property)": [[170, "sympy.physics.quantum.cartesian.PositionState3D.position_z", false]], "positionbra3d (class in sympy.physics.quantum.cartesian)": [[170, "sympy.physics.quantum.cartesian.PositionBra3D", false]], "positionket3d (class in sympy.physics.quantum.cartesian)": [[170, "sympy.physics.quantum.cartesian.PositionKet3D", false]], "positionstate3d (class in sympy.physics.quantum.cartesian)": [[170, "sympy.physics.quantum.cartesian.PositionState3D", false]], "positive": [[69, "term-positive", true]], "positive_roots() (sympy.liealgebras.type_a.typea method)": [[98, "sympy.liealgebras.type_a.TypeA.positive_roots", false]], "positive_roots() (sympy.liealgebras.type_b.typeb method)": [[98, "sympy.liealgebras.type_b.TypeB.positive_roots", false]], "positive_roots() (sympy.liealgebras.type_c.typec method)": [[98, "sympy.liealgebras.type_c.TypeC.positive_roots", false]], "positive_roots() (sympy.liealgebras.type_d.typed method)": [[98, "sympy.liealgebras.type_d.TypeD.positive_roots", false]], "positive_roots() (sympy.liealgebras.type_e.typee method)": [[98, "sympy.liealgebras.type_e.TypeE.positive_roots", false]], "positive_roots() (sympy.liealgebras.type_f.typef method)": [[98, "sympy.liealgebras.type_f.TypeF.positive_roots", false]], "positive_roots() (sympy.liealgebras.type_g.typeg method)": [[98, "sympy.liealgebras.type_g.TypeG.positive_roots", false]], "positivedefinitepredicate (class in sympy.assumptions.predicates.matrices)": [[46, "sympy.assumptions.predicates.matrices.PositiveDefinitePredicate", false]], "positivepredicate (class in sympy.assumptions.predicates.order)": [[46, "sympy.assumptions.predicates.order.PositivePredicate", false]], "postdecrement (class in sympy.codegen.cnodes)": [[50, "sympy.codegen.cnodes.PostDecrement", false]], "postfixes() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.postfixes", false]], "postincrement (class in sympy.codegen.cnodes)": [[50, "sympy.codegen.cnodes.PostIncrement", false]], "postorder_traversal() (in module sympy.core.traversal)": [[69, "sympy.core.traversal.postorder_traversal", false]], "potential_energy (sympy.physics.mechanics.body.body property)": [[131, "sympy.physics.mechanics.body.Body.potential_energy", false]], "potential_energy (sympy.physics.mechanics.particle.particle property)": [[137, "sympy.physics.mechanics.particle.Particle.potential_energy", false]], "potential_energy (sympy.physics.mechanics.rigidbody.rigidbody property)": [[137, "sympy.physics.mechanics.rigidbody.RigidBody.potential_energy", false]], "potential_energy() (in module sympy.physics.mechanics.functions)": [[137, "sympy.physics.mechanics.functions.potential_energy", false]], "pow (class in sympy.core.power)": [[69, "sympy.core.power.Pow", false]], "pow() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.pow", false]], "pow() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.pow", false]], "pow() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.pow", false]], "pow() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.pow", false]], "pow() (sympy.polys.polyclasses.anp method)": [[218, "sympy.polys.polyclasses.ANP.pow", false]], "pow() (sympy.polys.polyclasses.dmf method)": [[218, "sympy.polys.polyclasses.DMF.pow", false]], "pow() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.pow", false]], "pow() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.pow", false]], "pow_cos_sin() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.pow_cos_sin", false]], "pow_xin() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.pow_xin", false]], "powdenest() (in module sympy.simplify.powsimp)": [[239, "sympy.simplify.powsimp.powdenest", false]], "power_basis_ancestor() (sympy.polys.numberfields.modules.module method)": [[222, "sympy.polys.numberfields.modules.Module.power_basis_ancestor", false]], "power_representation() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.power_representation", false]], "powerbasis (class in sympy.polys.numberfields.modules)": [[222, "sympy.polys.numberfields.modules.PowerBasis", false]], "powerbasiselement (class in sympy.polys.numberfields.modules)": [[222, "sympy.polys.numberfields.modules.PowerBasisElement", false]], "powerfunction() (in module sympy.stats)": [[247, "sympy.stats.PowerFunction", false]], "powerset (class in sympy.sets.powerset)": [[235, "sympy.sets.powerset.PowerSet", false]], "powerset() (sympy.sets.sets.set method)": [[235, "sympy.sets.sets.Set.powerset", false]], "powsimp() (in module sympy.simplify.powsimp)": [[239, "sympy.simplify.powsimp.powsimp", false]], "powsimp() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.powsimp", false]], "pprint_nodes() (in module sympy.printing.tree)": [[227, "sympy.printing.tree.pprint_nodes", false]], "pqa() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.PQa", false]], "pquo() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.pquo", false]], "pquo() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.pquo", false]], "pquo() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.pquo", false]], "pquo() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.pquo", false]], "precedence (in module sympy.printing.precedence)": [[227, "sympy.printing.precedence.PRECEDENCE", false]], "precedence() (in module sympy.printing.precedence)": [[227, "sympy.printing.precedence.precedence", false]], "precedence_functions (in module sympy.printing.precedence)": [[227, "sympy.printing.precedence.PRECEDENCE_FUNCTIONS", false]], "precedence_values (in module sympy.printing.precedence)": [[227, "sympy.printing.precedence.PRECEDENCE_VALUES", false]], "precisionexhausted (class in sympy.core.evalf)": [[69, "sympy.core.evalf.PrecisionExhausted", false]], "predecrement (class in sympy.codegen.cnodes)": [[50, "sympy.codegen.cnodes.PreDecrement", false]], "predicate (class in sympy.assumptions.assume)": [[44, "sympy.assumptions.assume.Predicate", false]], "preferred_index (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[77, "sympy.functions.special.tensor_functions.KroneckerDelta.preferred_index", false]], "preferred_index (sympy.physics.secondquant.kroneckerdelta property)": [[192, "sympy.physics.secondquant.KroneckerDelta.preferred_index", false]], "prefix (class in sympy.physics.units.prefixes)": [[198, "sympy.physics.units.prefixes.Prefix", false]], "prefixes() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.prefixes", false]], "preincrement (class in sympy.codegen.cnodes)": [[50, "sympy.codegen.cnodes.PreIncrement", false]], "prem() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.prem", false]], "prem() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.prem", false]], "prem() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.prem", false]], "prem() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.prem", false]], "premises (sympy.categories.diagram property)": [[49, "sympy.categories.Diagram.premises", false]], "preorder_traversal() (in module sympy.core.traversal)": [[69, "sympy.core.traversal.preorder_traversal", false]], "presentation() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.presentation", false]], "pretty() (in module sympy.printing.pretty.pretty)": [[227, "sympy.printing.pretty.pretty.pretty", false]], "pretty_atom() (in module sympy.printing.pretty.pretty_symbology)": [[227, "sympy.printing.pretty.pretty_symbology.pretty_atom", false]], "pretty_print() (in module sympy.printing.pretty.pretty)": [[227, "sympy.printing.pretty.pretty.pretty_print", false]], "pretty_symbol() (in module sympy.printing.pretty.pretty_symbology)": [[227, "sympy.printing.pretty.pretty_symbology.pretty_symbol", false]], "pretty_try_use_unicode() (in module sympy.printing.pretty.pretty_symbology)": [[227, "sympy.printing.pretty.pretty_symbology.pretty_try_use_unicode", false]], "pretty_use_unicode() (in module sympy.printing.pretty.pretty_symbology)": [[227, "sympy.printing.pretty.pretty_symbology.pretty_use_unicode", false]], "prettyform (class in sympy.printing.pretty.stringpict)": [[227, "sympy.printing.pretty.stringpict.prettyForm", false]], "prettyprinter (class in sympy.printing.pretty.pretty)": [[227, "sympy.printing.pretty.pretty.PrettyPrinter", false]], "prev() (sympy.combinatorics.prufer.prufer method)": [[63, "sympy.combinatorics.prufer.Prufer.prev", false]], "prev_binary() (sympy.combinatorics.subsets.subset method)": [[64, "sympy.combinatorics.subsets.Subset.prev_binary", false]], "prev_gray() (sympy.combinatorics.subsets.subset method)": [[64, "sympy.combinatorics.subsets.Subset.prev_gray", false]], "prev_lex() (sympy.combinatorics.partitions.integerpartition method)": [[58, "sympy.combinatorics.partitions.IntegerPartition.prev_lex", false]], "prev_lexicographic() (sympy.combinatorics.subsets.subset method)": [[64, "sympy.combinatorics.subsets.Subset.prev_lexicographic", false]], "preview() (in module sympy.printing.preview)": [[227, "sympy.printing.preview.preview", false]], "preview_diagram() (in module sympy.categories.diagram_drawing)": [[49, "sympy.categories.diagram_drawing.preview_diagram", false]], "prevprime() (in module sympy.ntheory.generate)": [[109, "sympy.ntheory.generate.prevprime", false]], "prime": [[69, "term-prime", true]], "prime() (in module sympy.ntheory.generate)": [[109, "sympy.ntheory.generate.prime", false]], "prime_as_sum_of_two_squares() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.prime_as_sum_of_two_squares", false]], "prime_decomp() (in module sympy.polys.numberfields.primes)": [[222, "sympy.polys.numberfields.primes.prime_decomp", false]], "prime_valuation() (in module sympy.polys.numberfields.primes)": [[222, "sympy.polys.numberfields.primes.prime_valuation", false]], "primefactors() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.primefactors", false]], "primeideal (class in sympy.polys.numberfields.primes)": [[222, "sympy.polys.numberfields.primes.PrimeIdeal", false]], "primenu (class in sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.primenu", false]], "primenu() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.primenu", false]], "primeomega (class in sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.primeomega", false]], "primeomega() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.primeomega", false]], "primepi (class in sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.primepi", false]], "primepi() (in module sympy.ntheory.generate)": [[109, "sympy.ntheory.generate.primepi", false]], "primepredicate (class in sympy.assumptions.predicates.ntheory)": [[46, "sympy.assumptions.predicates.ntheory.PrimePredicate", false]], "primerange() (in module sympy.ntheory.generate)": [[109, "sympy.ntheory.generate.primerange", false]], "primerange() (sympy.ntheory.generate.sieve method)": [[109, "sympy.ntheory.generate.Sieve.primerange", false]], "primes_above() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.primes_above", false]], "primitive() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.primitive", false]], "primitive() (sympy.core.add.add method)": [[69, "sympy.core.add.Add.primitive", false]], "primitive() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.primitive", false]], "primitive() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.primitive", false]], "primitive() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.primitive", false]], "primitive() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.primitive", false]], "primitive() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.primitive", false]], "primitive_element() (in module sympy.polys.numberfields.subfield)": [[222, "sympy.polys.numberfields.subfield.primitive_element", false]], "primitive_element() (sympy.core.numbers.algebraicnumber method)": [[69, "sympy.core.numbers.AlgebraicNumber.primitive_element", false]], "primitive_root() (in module sympy.ntheory.residue_ntheory)": [[109, "sympy.ntheory.residue_ntheory.primitive_root", false]], "primorial() (in module sympy.ntheory.generate)": [[109, "sympy.ntheory.generate.primorial", false]], "principal_branch (class in sympy.functions.elementary.complexes)": [[75, "sympy.functions.elementary.complexes.principal_branch", false]], "principal_value() (sympy.integrals.integrals.integral method)": [[96, "sympy.integrals.integrals.Integral.principal_value", false]], "print (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.Print", false]], "print_ccode() (in module sympy.printing.c)": [[227, "sympy.printing.c.print_ccode", false]], "print_dim_base() (sympy.physics.units.dimensions.dimensionsystem method)": [[194, "sympy.physics.units.dimensions.DimensionSystem.print_dim_base", false]], "print_fcode() (in module sympy.printing.fortran)": [[227, "sympy.printing.fortran.print_fcode", false]], "print_gtk() (in module sympy.printing.gtk)": [[227, "sympy.printing.gtk.print_gtk", false]], "print_latex() (in module sympy.printing.latex)": [[227, "sympy.printing.latex.print_latex", false]], "print_maple_code() (in module sympy.printing.maple)": [[227, "sympy.printing.maple.print_maple_code", false]], "print_mathml() (in module sympy.printing.mathml)": [[227, "sympy.printing.mathml.print_mathml", false]], "print_node() (in module sympy.printing.tree)": [[227, "sympy.printing.tree.print_node", false]], "print_nonzero() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.print_nonzero", false]], "print_rcode() (in module sympy.printing.rcode)": [[227, "sympy.printing.rcode.print_rcode", false]], "print_tree() (in module sympy.printing.tree)": [[227, "sympy.printing.tree.print_tree", false]], "printer (class in sympy.printing.printer)": [[227, "sympy.printing.printer.Printer", false]], "printing": [[15, "term-Printing", true]], "printmethod (sympy.printing.aesaracode.aesaraprinter attribute)": [[227, "sympy.printing.aesaracode.AesaraPrinter.printmethod", false]], "printmethod (sympy.printing.c.c89codeprinter attribute)": [[227, "sympy.printing.c.C89CodePrinter.printmethod", false]], "printmethod (sympy.printing.c.c99codeprinter attribute)": [[227, "sympy.printing.c.C99CodePrinter.printmethod", false]], "printmethod (sympy.printing.codeprinter.codeprinter attribute)": [[227, "sympy.printing.codeprinter.CodePrinter.printmethod", false]], "printmethod (sympy.printing.cxx.cxx11codeprinter attribute)": [[227, "sympy.printing.cxx.CXX11CodePrinter.printmethod", false]], "printmethod (sympy.printing.cxx.cxx98codeprinter attribute)": [[227, "sympy.printing.cxx.CXX98CodePrinter.printmethod", false]], "printmethod (sympy.printing.fortran.fcodeprinter attribute)": [[227, "sympy.printing.fortran.FCodePrinter.printmethod", false]], "printmethod (sympy.printing.jscode.javascriptcodeprinter attribute)": [[227, "sympy.printing.jscode.JavascriptCodePrinter.printmethod", false]], "printmethod (sympy.printing.julia.juliacodeprinter attribute)": [[227, "sympy.printing.julia.JuliaCodePrinter.printmethod", false]], "printmethod (sympy.printing.lambdarepr.lambdaprinter attribute)": [[227, "sympy.printing.lambdarepr.LambdaPrinter.printmethod", false]], "printmethod (sympy.printing.latex.latexprinter attribute)": [[227, "sympy.printing.latex.LatexPrinter.printmethod", false]], "printmethod (sympy.printing.maple.maplecodeprinter attribute)": [[227, "sympy.printing.maple.MapleCodePrinter.printmethod", false]], "printmethod (sympy.printing.mathematica.mcodeprinter attribute)": [[227, "sympy.printing.mathematica.MCodePrinter.printmethod", false]], "printmethod (sympy.printing.mathml.mathmlcontentprinter attribute)": [[227, "sympy.printing.mathml.MathMLContentPrinter.printmethod", false]], "printmethod (sympy.printing.mathml.mathmlpresentationprinter attribute)": [[227, "sympy.printing.mathml.MathMLPresentationPrinter.printmethod", false]], "printmethod (sympy.printing.octave.octavecodeprinter attribute)": [[227, "sympy.printing.octave.OctaveCodePrinter.printmethod", false]], "printmethod (sympy.printing.pretty.pretty.prettyprinter attribute)": [[227, "sympy.printing.pretty.pretty.PrettyPrinter.printmethod", false]], "printmethod (sympy.printing.printer.printer attribute)": [[227, "sympy.printing.printer.Printer.printmethod", false]], "printmethod (sympy.printing.rcode.rcodeprinter attribute)": [[227, "sympy.printing.rcode.RCodePrinter.printmethod", false]], "printmethod (sympy.printing.repr.reprprinter attribute)": [[227, "sympy.printing.repr.ReprPrinter.printmethod", false]], "printmethod (sympy.printing.rust.rustcodeprinter attribute)": [[227, "sympy.printing.rust.RustCodePrinter.printmethod", false]], "printmethod (sympy.printing.smtlib.smtlibprinter attribute)": [[227, "sympy.printing.smtlib.SMTLibPrinter.printmethod", false]], "printmethod (sympy.printing.str.strprinter attribute)": [[227, "sympy.printing.str.StrPrinter.printmethod", false]], "prismaticjoint (class in sympy.physics.mechanics.joint)": [[134, "sympy.physics.mechanics.joint.PrismaticJoint", false]], "prob() (sympy.physics.quantum.state.wavefunction method)": [[190, "sympy.physics.quantum.state.Wavefunction.prob", false]], "probability (class in sympy.stats)": [[247, "sympy.stats.Probability", false]], "probability() (sympy.stats.bernoulliprocess method)": [[247, "sympy.stats.BernoulliProcess.probability", false]], "process_series() (sympy.plotting.plot.matplotlibbackend method)": [[213, "sympy.plotting.plot.MatplotlibBackend.process_series", false]], "prod() (in module sympy.core.mul)": [[69, "sympy.core.mul.prod", false]], "product (class in sympy.concrete.products)": [[68, "sympy.concrete.products.Product", false]], "product() (in module sympy.concrete.products)": [[68, "sympy.concrete.products.product", false]], "product() (sympy.polys.agca.ideals.ideal method)": [[214, "sympy.polys.agca.ideals.Ideal.product", false]], "product() (sympy.series.formal.formalpowerseries method)": [[229, "sympy.series.formal.FormalPowerSeries.product", false]], "product_matrix_left (sympy.algebras.quaternion property)": [[42, "sympy.algebras.Quaternion.product_matrix_left", false]], "product_matrix_right (sympy.algebras.quaternion property)": [[42, "sympy.algebras.Quaternion.product_matrix_right", false]], "productdomain (class in sympy.stats.rv)": [[247, "sympy.stats.rv.ProductDomain", false]], "productpspace (class in sympy.stats.rv)": [[247, "sympy.stats.rv.ProductPSpace", false]], "productset (class in sympy.sets.sets)": [[235, "sympy.sets.sets.ProductSet", false]], "program (class in sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.Program", false]], "project() (sympy.geometry.point.point static method)": [[84, "sympy.geometry.point.Point.project", false]], "project() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.project", false]], "projection() (sympy.geometry.line.linearentity method)": [[82, "sympy.geometry.line.LinearEntity.projection", false]], "projection() (sympy.geometry.plane.plane method)": [[83, "sympy.geometry.plane.Plane.projection", false]], "projection() (sympy.vector.vector.vector method)": [[271, "sympy.vector.vector.Vector.projection", false]], "projection_line() (sympy.geometry.plane.plane method)": [[83, "sympy.geometry.plane.Plane.projection_line", false]], "proper_divisor_count() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.proper_divisor_count", false]], "proper_divisors() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.proper_divisors", false]], "proth_test() (in module sympy.ntheory.primetest)": [[109, "sympy.ntheory.primetest.proth_test", false]], "prufer (class in sympy.combinatorics.prufer)": [[63, "sympy.combinatorics.prufer.Prufer", false]], "prufer_rank() (sympy.combinatorics.prufer.prufer method)": [[63, "sympy.combinatorics.prufer.Prufer.prufer_rank", false]], "prufer_repr (sympy.combinatorics.prufer.prufer property)": [[63, "sympy.combinatorics.prufer.Prufer.prufer_repr", false]], "psets (sympy.sets.fancysets.complexregion property)": [[235, "sympy.sets.fancysets.ComplexRegion.psets", false]], "psi_n() (in module sympy.physics.qho_1d)": [[168, "sympy.physics.qho_1d.psi_n", false]], "psi_nlm() (in module sympy.physics.hydrogen)": [[127, "sympy.physics.hydrogen.Psi_nlm", false]], "psl2f5() (in module sympy.combinatorics.galois)": [[52, "sympy.combinatorics.galois.PSL2F5", false]], "pspace (class in sympy.stats.rv)": [[247, "sympy.stats.rv.PSpace", false]], "pspace() (in module sympy.stats.rv)": [[247, "sympy.stats.rv.pspace", false]], "public() (in module sympy.utilities.decorator)": [[261, "sympy.utilities.decorator.public", false]], "purepoly (class in sympy.polys.polytools)": [[223, "sympy.polys.polytools.PurePoly", false]], "pxbra (class in sympy.physics.quantum.cartesian)": [[170, "sympy.physics.quantum.cartesian.PxBra", false]], "pxket (class in sympy.physics.quantum.cartesian)": [[170, "sympy.physics.quantum.cartesian.PxKet", false]], "pxop (class in sympy.physics.quantum.cartesian)": [[170, "sympy.physics.quantum.cartesian.PxOp", false]], "pycode() (in module sympy.printing.pycode)": [[227, "sympy.printing.pycode.pycode", false]], "pytestreporter (class in sympy.testing.runtests)": [[258, "sympy.testing.runtests.PyTestReporter", false]], "python enhancement proposals": [[69, "index-0", false], [69, "index-1", false], [69, "index-2", false], [69, "index-3", false]], "pythonfinitefield (class in sympy.polys.domains)": [[218, "sympy.polys.domains.PythonFiniteField", false]], "pythonintegerring (class in sympy.polys.domains)": [[218, "sympy.polys.domains.PythonIntegerRing", false]], "pythonmpq (class in sympy.external.pythonmpq)": [[218, "sympy.external.pythonmpq.PythonMPQ", false]], "pythonrationalfield (class in sympy.polys.domains)": [[218, "sympy.polys.domains.PythonRationalField", false]], "q (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[131, "sympy.physics.mechanics.jointsmethod.JointsMethod.q", false]], "q (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.q", false]], "q (sympy.physics.optics.gaussopt.beamparameter property)": [[161, "sympy.physics.optics.gaussopt.BeamParameter.q", false]], "q_dep (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.q_dep", false]], "q_ind (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.q_ind", false]], "qapply() (in module sympy.physics.quantum.qapply)": [[184, "sympy.physics.quantum.qapply.qapply", false]], "qft (class in sympy.physics.quantum.qft)": [[185, "sympy.physics.quantum.qft.QFT", false]], "qq_col (sympy.polys.numberfields.modules.moduleelement property)": [[222, "sympy.polys.numberfields.modules.ModuleElement.QQ_col", false]], "qq_matrix (sympy.polys.numberfields.modules.submodule property)": [[222, "sympy.polys.numberfields.modules.Submodule.QQ_matrix", false]], "qrdecomposition() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.QRdecomposition", false]], "qrsolve() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.QRsolve", false]], "qs() (in module sympy.ntheory.qs)": [[109, "sympy.ntheory.qs.qs", false]], "quadrant() (sympy.polys.domains.gaussiandomains.gaussianelement method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianElement.quadrant", false]], "quadratic_congruence() (in module sympy.ntheory.residue_ntheory)": [[109, "sympy.ntheory.residue_ntheory.quadratic_congruence", false]], "quadratic_residues() (in module sympy.ntheory.residue_ntheory)": [[109, "sympy.ntheory.residue_ntheory.quadratic_residues", false]], "quadraticu() (in module sympy.stats)": [[247, "sympy.stats.QuadraticU", false]], "quantile() (in module sympy.stats)": [[247, "sympy.stats.quantile", false]], "quantity (class in sympy.physics.units.quantities)": [[199, "sympy.physics.units.quantities.Quantity", false]], "quarter_wave_retarder() (in module sympy.physics.optics.polarization)": [[164, "sympy.physics.optics.polarization.quarter_wave_retarder", false]], "quaternion (class in sympy.algebras)": [[42, "sympy.algebras.Quaternion", false]], "quaternionorienter (class in sympy.vector.orienters)": [[273, "sympy.vector.orienters.QuaternionOrienter", false]], "qubit (class in sympy.physics.quantum.qubit)": [[186, "sympy.physics.quantum.qubit.Qubit", false]], "qubit_to_matrix() (in module sympy.physics.quantum.qubit)": [[186, "sympy.physics.quantum.qubit.qubit_to_matrix", false]], "qubitbra (class in sympy.physics.quantum.qubit)": [[186, "sympy.physics.quantum.qubit.QubitBra", false]], "quo() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.quo", false]], "quo() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.quo", false]], "quo() (sympy.polys.domains.field.field method)": [[218, "sympy.polys.domains.field.Field.quo", false]], "quo() (sympy.polys.domains.gmpyrationalfield method)": [[218, "sympy.polys.domains.GMPYRationalField.quo", false]], "quo() (sympy.polys.domains.rationalfield method)": [[218, "sympy.polys.domains.RationalField.quo", false]], "quo() (sympy.polys.domains.ring.ring method)": [[218, "sympy.polys.domains.ring.Ring.quo", false]], "quo() (sympy.polys.polyclasses.dmf method)": [[218, "sympy.polys.polyclasses.DMF.quo", false]], "quo() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.quo", false]], "quo() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.quo", false]], "quo_ground() (sympy.polys.polyclasses.anp method)": [[218, "sympy.polys.polyclasses.ANP.quo_ground", false]], "quo_ground() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.quo_ground", false]], "quo_ground() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.quo_ground", false]], "quotedstring (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.QuotedString", false]], "quotient() (sympy.polys.agca.ideals.ideal method)": [[214, "sympy.polys.agca.ideals.Ideal.quotient", false]], "quotient_codomain() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[214, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.quotient_codomain", false]], "quotient_domain() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[214, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.quotient_domain", false]], "quotient_hom() (sympy.polys.agca.modules.quotientmodule method)": [[214, "sympy.polys.agca.modules.QuotientModule.quotient_hom", false]], "quotient_hom() (sympy.polys.agca.modules.subquotientmodule method)": [[214, "sympy.polys.agca.modules.SubQuotientModule.quotient_hom", false]], "quotient_module() (sympy.polys.agca.modules.freemodule method)": [[214, "sympy.polys.agca.modules.FreeModule.quotient_module", false]], "quotient_module() (sympy.polys.agca.modules.module method)": [[214, "sympy.polys.agca.modules.Module.quotient_module", false]], "quotient_module() (sympy.polys.agca.modules.submodule method)": [[214, "sympy.polys.agca.modules.SubModule.quotient_module", false]], "quotient_ring() (sympy.polys.domains.ring.ring method)": [[218, "sympy.polys.domains.ring.Ring.quotient_ring", false]], "quotientmodule (class in sympy.polys.agca.modules)": [[214, "sympy.polys.agca.modules.QuotientModule", false]], "quotientmoduleelement (class in sympy.polys.agca.modules)": [[214, "sympy.polys.agca.modules.QuotientModuleElement", false]], "quotientring (class in sympy.polys.domains.quotientring)": [[218, "sympy.polys.domains.quotientring.QuotientRing", false]], "r (class in sympy.polys.matrices.dense)": [[216, "sympy.polys.matrices.dense.R", false]], "r (sympy.physics.biomechanics.activation.activationbase property)": [[112, "sympy.physics.biomechanics.activation.ActivationBase.r", false]], "r (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[112, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.r", false]], "r (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[112, "sympy.physics.biomechanics.activation.ZerothOrderActivation.r", false]], "r (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.r", false]], "r_nl() (in module sympy.physics.hydrogen)": [[127, "sympy.physics.hydrogen.R_nl", false]], "r_nl() (in module sympy.physics.sho)": [[193, "sympy.physics.sho.R_nl", false]], "racah() (in module sympy.physics.wigner)": [[212, "sympy.physics.wigner.racah", false]], "rad_rationalize() (in module sympy.simplify.radsimp)": [[239, "sympy.simplify.radsimp.rad_rationalize", false]], "rademacher() (in module sympy.stats)": [[247, "sympy.stats.Rademacher", false]], "radical() (sympy.polys.agca.ideals.ideal method)": [[214, "sympy.polys.agca.ideals.Ideal.radical", false]], "radius (sympy.geometry.ellipse.circle property)": [[79, "sympy.geometry.ellipse.Circle.radius", false]], "radius (sympy.geometry.polygon.regularpolygon property)": [[85, "sympy.geometry.polygon.RegularPolygon.radius", false]], "radius (sympy.physics.mechanics.wrapping_geometry.wrappingcylinder property)": [[141, "sympy.physics.mechanics.wrapping_geometry.WrappingCylinder.radius", false]], "radius (sympy.physics.mechanics.wrapping_geometry.wrappingsphere property)": [[141, "sympy.physics.mechanics.wrapping_geometry.WrappingSphere.radius", false]], "radius (sympy.physics.optics.gaussopt.beamparameter property)": [[161, "sympy.physics.optics.gaussopt.BeamParameter.radius", false]], "radius_of_convergence (sympy.functions.special.hyper.hyper property)": [[77, "sympy.functions.special.hyper.hyper.radius_of_convergence", false]], "radsimp() (in module sympy.simplify.radsimp)": [[239, "sympy.simplify.radsimp.radsimp", false]], "radsimp() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.radsimp", false]], "raise (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.Raise", false]], "raise_on_deprecated() (in module sympy.testing.runtests)": [[258, "sympy.testing.runtests.raise_on_deprecated", false]], "raisedcosine() (in module sympy.stats)": [[247, "sympy.stats.RaisedCosine", false]], "raises() (in module sympy.testing.pytest)": [[256, "sympy.testing.pytest.raises", false]], "ramp_response_numerical_data() (sympy.physics.control.control_plots method)": [[123, "sympy.physics.control.control_plots.ramp_response_numerical_data", false]], "ramp_response_plot() (sympy.physics.control.control_plots method)": [[123, "sympy.physics.control.control_plots.ramp_response_plot", false]], "randmatrix() (in module sympy.matrices.dense)": [[105, "sympy.matrices.dense.randMatrix", false]], "random() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.random", false]], "random() (sympy.combinatorics.permutations.permutation class method)": [[61, "sympy.combinatorics.permutations.Permutation.random", false]], "random_bitstring() (sympy.combinatorics.graycode method)": [[53, "sympy.combinatorics.graycode.random_bitstring", false]], "random_circuit() (in module sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.random_circuit", false]], "random_complex_number() (in module sympy.core.random)": [[69, "sympy.core.random.random_complex_number", false]], "random_derangement() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.random_derangement", false]], "random_integer_partition() (in module sympy.combinatorics.partitions)": [[58, "sympy.combinatorics.partitions.random_integer_partition", false]], "random_point() (sympy.geometry.ellipse.ellipse method)": [[79, "sympy.geometry.ellipse.Ellipse.random_point", false]], "random_point() (sympy.geometry.line.linearentity method)": [[82, "sympy.geometry.line.LinearEntity.random_point", false]], "random_point() (sympy.geometry.plane.plane method)": [[83, "sympy.geometry.plane.Plane.random_point", false]], "random_poly() (in module sympy.polys.specialpolys)": [[223, "sympy.polys.specialpolys.random_poly", false]], "random_pr() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.random_pr", false]], "random_stab() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.random_stab", false]], "random_symbols() (in module sympy.stats.rv)": [[247, "sympy.stats.rv.random_symbols", false]], "randomdomain (class in sympy.stats.rv)": [[247, "sympy.stats.rv.RandomDomain", false]], "randomsymbol (class in sympy.stats.rv)": [[247, "sympy.stats.rv.RandomSymbol", false]], "randprime() (in module sympy.ntheory.generate)": [[109, "sympy.ntheory.generate.randprime", false]], "range (class in sympy.sets.fancysets)": [[235, "sympy.sets.fancysets.Range", false]], "ranges (sympy.tensor.indexed.indexed property)": [[252, "sympy.tensor.indexed.Indexed.ranges", false]], "rank (sympy.combinatorics.graycode.graycode property)": [[53, "sympy.combinatorics.graycode.GrayCode.rank", false]], "rank (sympy.combinatorics.partitions.partition property)": [[58, "sympy.combinatorics.partitions.Partition.rank", false]], "rank (sympy.combinatorics.prufer.prufer property)": [[63, "sympy.combinatorics.prufer.Prufer.rank", false]], "rank (sympy.tensor.indexed.indexed property)": [[252, "sympy.tensor.indexed.Indexed.rank", false]], "rank() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.rank", false]], "rank() (sympy.liealgebras.cartan_type.standard_cartan method)": [[98, "sympy.liealgebras.cartan_type.Standard_Cartan.rank", false]], "rank() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.rank", false]], "rank_binary (sympy.combinatorics.subsets.subset property)": [[64, "sympy.combinatorics.subsets.Subset.rank_binary", false]], "rank_decomposition() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.rank_decomposition", false]], "rank_gray (sympy.combinatorics.subsets.subset property)": [[64, "sympy.combinatorics.subsets.Subset.rank_gray", false]], "rank_lexicographic (sympy.combinatorics.subsets.subset property)": [[64, "sympy.combinatorics.subsets.Subset.rank_lexicographic", false]], "rank_nonlex() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.rank_nonlex", false]], "rank_trotterjohnson() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.rank_trotterjohnson", false]], "rat_clear_denoms() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.rat_clear_denoms", false]], "ratint() (in module sympy.integrals.rationaltools)": [[96, "sympy.integrals.rationaltools.ratint", false]], "ratint_logpart() (in module sympy.integrals.rationaltools)": [[96, "sympy.integrals.rationaltools.ratint_logpart", false]], "ratint_ratpart() (in module sympy.integrals.rationaltools)": [[96, "sympy.integrals.rationaltools.ratint_ratpart", false]], "rational": [[69, "term-rational", true]], "rational (class in sympy.core.numbers)": [[69, "sympy.core.numbers.Rational", false]], "rational_algorithm() (in module sympy.series.formal)": [[229, "sympy.series.formal.rational_algorithm", false]], "rational_independent() (in module sympy.series.formal)": [[229, "sympy.series.formal.rational_independent", false]], "rational_laurent_series() (in module sympy.solvers.ode.riccati)": [[243, "sympy.solvers.ode.riccati.rational_laurent_series", false]], "rational_parametrization() (sympy.vector.implicitregion.implicitregion method)": [[271, "sympy.vector.implicitregion.ImplicitRegion.rational_parametrization", false]], "rationalfield (class in sympy.polys.domains)": [[218, "sympy.polys.domains.RationalField", false]], "rationalize() (in module sympy.parsing.sympy_parser)": [[111, "sympy.parsing.sympy_parser.rationalize", false]], "rationalpredicate (class in sympy.assumptions.predicates.sets)": [[46, "sympy.assumptions.predicates.sets.RationalPredicate", false]], "rationalriccati (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.RationalRiccati", false]], "rationals (class in sympy.sets.fancysets)": [[235, "sympy.sets.fancysets.Rationals", false]], "ratsimp() (in module sympy.simplify.ratsimp)": [[239, "sympy.simplify.ratsimp.ratsimp", false]], "ratsimp() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.ratsimp", false]], "ratsimpmodprime() (in module sympy.simplify.ratsimp)": [[239, "sympy.simplify.ratsimp.ratsimpmodprime", false]], "rawlines() (in module sympy.utilities.misc)": [[268, "sympy.utilities.misc.rawlines", false]], "ray (class in sympy.geometry.line)": [[82, "sympy.geometry.line.Ray", false]], "ray2d (class in sympy.geometry.line)": [[82, "sympy.geometry.line.Ray2D", false]], "ray3d (class in sympy.geometry.line)": [[82, "sympy.geometry.line.Ray3D", false]], "rayleigh() (in module sympy.stats)": [[247, "sympy.stats.Rayleigh", false]], "rayleigh2waist() (in module sympy.physics.optics.gaussopt)": [[161, "sympy.physics.optics.gaussopt.rayleigh2waist", false]], "raytransfermatrix (class in sympy.physics.optics.gaussopt)": [[161, "sympy.physics.optics.gaussopt.RayTransferMatrix", false]], "rcall() (sympy.core.basic.basic method)": [[69, "sympy.core.basic.Basic.rcall", false]], "rcode() (in module sympy.printing.rcode)": [[227, "sympy.printing.rcode.rcode", false]], "rcodeprinter (class in sympy.printing.rcode)": [[227, "sympy.printing.rcode.RCodePrinter", false]], "rcollect() (in module sympy.simplify.radsimp)": [[239, "sympy.simplify.radsimp.rcollect", false]], "re (class in sympy.functions.elementary.complexes)": [[75, "sympy.functions.elementary.complexes.re", false]], "reaction_frame (sympy.physics.mechanics.actuator.torqueactuator property)": [[130, "sympy.physics.mechanics.actuator.TorqueActuator.reaction_frame", false]], "reaction_loads (sympy.physics.continuum_mechanics.beam.beam property)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.reaction_loads", false]], "reaction_loads (sympy.physics.continuum_mechanics.cable.cable property)": [[119, "sympy.physics.continuum_mechanics.cable.Cable.reaction_loads", false]], "reaction_loads (sympy.physics.continuum_mechanics.truss.truss property)": [[121, "sympy.physics.continuum_mechanics.truss.Truss.reaction_loads", false]], "real": [[69, "term-real", true]], "real_gaunt() (in module sympy.physics.wigner)": [[212, "sympy.physics.wigner.real_gaunt", false]], "real_root() (in module sympy.functions.elementary.miscellaneous)": [[75, "sympy.functions.elementary.miscellaneous.real_root", false]], "real_roots() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.real_roots", false]], "real_roots() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.real_roots", false]], "real_roots() (sympy.polys.rootoftools.complexrootof class method)": [[223, "sympy.polys.rootoftools.ComplexRootOf.real_roots", false]], "realelement (class in sympy.polys.domains.mpelements)": [[218, "sympy.polys.domains.mpelements.RealElement", false]], "realelementspredicate (class in sympy.assumptions.predicates.matrices)": [[46, "sympy.assumptions.predicates.matrices.RealElementsPredicate", false]], "realfield (class in sympy.polys.domains)": [[218, "sympy.polys.domains.RealField", false]], "realnumber (in module sympy.core.numbers)": [[69, "sympy.core.numbers.RealNumber", false]], "realpredicate (class in sympy.assumptions.predicates.sets)": [[46, "sympy.assumptions.predicates.sets.RealPredicate", false]], "reals (class in sympy.sets.fancysets)": [[235, "sympy.sets.fancysets.Reals", false]], "reciprocal() (in module sympy.stats)": [[247, "sympy.stats.Reciprocal", false]], "reconstruct() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.reconstruct", false]], "rectangles (sympy.plotting.plot.plot property)": [[213, "sympy.plotting.plot.Plot.rectangles", false]], "recurrence (sympy.series.sequences.recursiveseq property)": [[233, "sympy.series.sequences.RecursiveSeq.recurrence", false]], "recurrence_memo() (in module sympy.utilities.memoization)": [[267, "sympy.utilities.memoization.recurrence_memo", false]], "recursiveseq (class in sympy.series.sequences)": [[233, "sympy.series.sequences.RecursiveSeq", false]], "red_groebner() (in module sympy.polys.groebnertools)": [[220, "sympy.polys.groebnertools.red_groebner", false]], "reduce() (sympy.polys.polytools.groebnerbasis method)": [[223, "sympy.polys.polytools.GroebnerBasis.reduce", false]], "reduce() (sympy.series.sequences.seqadd static method)": [[233, "sympy.series.sequences.SeqAdd.reduce", false]], "reduce() (sympy.series.sequences.seqmul static method)": [[233, "sympy.series.sequences.SeqMul.reduce", false]], "reduce() (sympy.sets.sets.complement static method)": [[235, "sympy.sets.sets.Complement.reduce", false]], "reduce_abs_inequalities() (in module sympy.solvers.inequalities)": [[242, "sympy.solvers.inequalities.reduce_abs_inequalities", false]], "reduce_abs_inequality() (in module sympy.solvers.inequalities)": [[242, "sympy.solvers.inequalities.reduce_abs_inequality", false]], "reduce_alg_num() (sympy.polys.numberfields.primes.primeideal method)": [[222, "sympy.polys.numberfields.primes.PrimeIdeal.reduce_alg_num", false]], "reduce_anp() (sympy.polys.numberfields.primes.primeideal method)": [[222, "sympy.polys.numberfields.primes.PrimeIdeal.reduce_ANP", false]], "reduce_element() (sympy.polys.agca.ideals.ideal method)": [[214, "sympy.polys.agca.ideals.Ideal.reduce_element", false]], "reduce_element() (sympy.polys.agca.modules.submodule method)": [[214, "sympy.polys.agca.modules.SubModule.reduce_element", false]], "reduce_element() (sympy.polys.numberfields.modules.submodule method)": [[222, "sympy.polys.numberfields.modules.Submodule.reduce_element", false]], "reduce_element() (sympy.polys.numberfields.primes.primeideal method)": [[222, "sympy.polys.numberfields.primes.PrimeIdeal.reduce_element", false]], "reduce_inequalities() (in module sympy.solvers.inequalities)": [[242, "sympy.solvers.inequalities.reduce_inequalities", false]], "reduce_rational_inequalities() (in module sympy.solvers.inequalities)": [[242, "sympy.solvers.inequalities.reduce_rational_inequalities", false]], "reduced() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.reduced", false]], "reduced() (sympy.polys.numberfields.modules.moduleelement method)": [[222, "sympy.polys.numberfields.modules.ModuleElement.reduced", false]], "reduced() (sympy.polys.numberfields.modules.submodule method)": [[222, "sympy.polys.numberfields.modules.Submodule.reduced", false]], "reduced_mod_p() (sympy.polys.numberfields.modules.moduleelement method)": [[222, "sympy.polys.numberfields.modules.ModuleElement.reduced_mod_p", false]], "reduced_totient (class in sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.reduced_totient", false]], "reduced_totient() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.reduced_totient", false]], "referenceframe (class in sympy.physics.vector.frame)": [[202, "sympy.physics.vector.frame.ReferenceFrame", false]], "refine() (in module sympy.assumptions.refine)": [[47, "sympy.assumptions.refine.refine", false]], "refine() (sympy.core.basic.basic method)": [[69, "sympy.core.basic.Basic.refine", false]], "refine() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.refine", false]], "refine_abs() (in module sympy.assumptions.refine)": [[47, "sympy.assumptions.refine.refine_abs", false]], "refine_arg() (in module sympy.assumptions.refine)": [[47, "sympy.assumptions.refine.refine_arg", false]], "refine_atan2() (in module sympy.assumptions.refine)": [[47, "sympy.assumptions.refine.refine_atan2", false]], "refine_im() (in module sympy.assumptions.refine)": [[47, "sympy.assumptions.refine.refine_im", false]], "refine_matrixelement() (in module sympy.assumptions.refine)": [[47, "sympy.assumptions.refine.refine_matrixelement", false]], "refine_pow() (in module sympy.assumptions.refine)": [[47, "sympy.assumptions.refine.refine_Pow", false]], "refine_re() (in module sympy.assumptions.refine)": [[47, "sympy.assumptions.refine.refine_re", false]], "refine_root() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.refine_root", false]], "refine_root() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.refine_root", false]], "refine_root() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.refine_root", false]], "refine_sign() (in module sympy.assumptions.refine)": [[47, "sympy.assumptions.refine.refine_sign", false]], "refinementfailed (class in sympy.polys.polyerrors)": [[220, "sympy.polys.polyerrors.RefinementFailed", false]], "reflect() (sympy.geometry.ellipse.circle method)": [[79, "sympy.geometry.ellipse.Circle.reflect", false]], "reflect() (sympy.geometry.ellipse.ellipse method)": [[79, "sympy.geometry.ellipse.Ellipse.reflect", false]], "reflect() (sympy.geometry.entity.geometryentity method)": [[80, "sympy.geometry.entity.GeometryEntity.reflect", false]], "reflect() (sympy.geometry.polygon.regularpolygon method)": [[85, "sympy.geometry.polygon.RegularPolygon.reflect", false]], "reflective_filter() (in module sympy.physics.optics.polarization)": [[164, "sympy.physics.optics.polarization.reflective_filter", false]], "refraction_angle() (in module sympy.physics.optics.utils)": [[165, "sympy.physics.optics.utils.refraction_angle", false]], "refractive_index (sympy.physics.optics.medium.medium property)": [[163, "sympy.physics.optics.medium.Medium.refractive_index", false]], "register() (sympy.assumptions.assume.predicate class method)": [[44, "sympy.assumptions.assume.Predicate.register", false]], "register_handler() (in module sympy.assumptions.ask)": [[43, "sympy.assumptions.ask.register_handler", false]], "register_many() (sympy.assumptions.assume.predicate class method)": [[44, "sympy.assumptions.assume.Predicate.register_many", false]], "regular_point() (sympy.vector.implicitregion.implicitregion method)": [[271, "sympy.vector.implicitregion.ImplicitRegion.regular_point", false]], "regularpolygon (class in sympy.geometry.polygon)": [[85, "sympy.geometry.polygon.RegularPolygon", false]], "rel (in module sympy.core.relational)": [[69, "sympy.core.relational.Rel", false]], "relational": [[15, "term-Relational", true]], "relational (class in sympy.core.relational)": [[69, "sympy.core.relational.Relational", false]], "rem() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.rem", false]], "rem() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.rem", false]], "rem() (sympy.polys.domains.field.field method)": [[218, "sympy.polys.domains.field.Field.rem", false]], "rem() (sympy.polys.domains.gmpyrationalfield method)": [[218, "sympy.polys.domains.GMPYRationalField.rem", false]], "rem() (sympy.polys.domains.rationalfield method)": [[218, "sympy.polys.domains.RationalField.rem", false]], "rem() (sympy.polys.domains.ring.ring method)": [[218, "sympy.polys.domains.ring.Ring.rem", false]], "rem() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.rem", false]], "rem() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.rem", false]], "remove_handler() (in module sympy.assumptions.ask)": [[43, "sympy.assumptions.ask.remove_handler", false]], "remove_load() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.remove_load", false]], "remove_load() (sympy.physics.continuum_mechanics.truss.truss method)": [[121, "sympy.physics.continuum_mechanics.truss.Truss.remove_load", false]], "remove_load() (sympy.physics.mechanics.body.body method)": [[131, "sympy.physics.mechanics.body.Body.remove_load", false]], "remove_loads() (sympy.physics.continuum_mechanics.cable.cable method)": [[119, "sympy.physics.continuum_mechanics.cable.Cable.remove_loads", false]], "remove_member() (sympy.physics.continuum_mechanics.truss.truss method)": [[121, "sympy.physics.continuum_mechanics.truss.Truss.remove_member", false]], "remove_node() (sympy.physics.continuum_mechanics.truss.truss method)": [[121, "sympy.physics.continuum_mechanics.truss.Truss.remove_node", false]], "remove_redundant_sols() (in module sympy.solvers.ode.riccati)": [[243, "sympy.solvers.ode.riccati.remove_redundant_sols", false]], "remove_support() (sympy.physics.continuum_mechanics.truss.truss method)": [[121, "sympy.physics.continuum_mechanics.truss.Truss.remove_support", false]], "removeo() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.removeO", false]], "render() (sympy.printing.pretty.stringpict.stringpict method)": [[227, "sympy.printing.pretty.stringpict.stringPict.render", false]], "render_as_module() (in module sympy.codegen.futils)": [[50, "sympy.codegen.futils.render_as_module", false]], "render_as_module() (in module sympy.codegen.pyutils)": [[50, "sympy.codegen.pyutils.render_as_module", false]], "render_as_source_file() (in module sympy.codegen.cutils)": [[50, "sympy.codegen.cutils.render_as_source_file", false]], "reorder() (sympy.concrete.expr_with_intlimits.exprwithintlimits method)": [[68, "sympy.concrete.expr_with_intlimits.ExprWithIntLimits.reorder", false]], "reorder() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.reorder", false]], "reorder_limit() (sympy.concrete.expr_with_intlimits.exprwithintlimits method)": [[68, "sympy.concrete.expr_with_intlimits.ExprWithIntLimits.reorder_limit", false]], "rep (sympy.polys.polyclasses.dmp property)": [[218, "sympy.polys.polyclasses.DMP.rep", false]], "rep_expectation() (in module sympy.physics.quantum.represent)": [[187, "sympy.physics.quantum.represent.rep_expectation", false]], "rep_innerproduct() (in module sympy.physics.quantum.represent)": [[187, "sympy.physics.quantum.represent.rep_innerproduct", false]], "repeated_decimals() (in module sympy.parsing.sympy_parser)": [[111, "sympy.parsing.sympy_parser.repeated_decimals", false]], "replace() (in module sympy.utilities.misc)": [[268, "sympy.utilities.misc.replace", false]], "replace() (sympy.core.basic.basic method)": [[69, "sympy.core.basic.Basic.replace", false]], "replace() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.replace", false]], "replace() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.replace", false]], "replace_in_add() (sympy.codegen.rewriting.funcminusoneoptim method)": [[50, "sympy.codegen.rewriting.FuncMinusOneOptim.replace_in_Add", false]], "replace_with_arrays() (sympy.tensor.tensor.tensexpr method)": [[253, "sympy.tensor.tensor.TensExpr.replace_with_arrays", false]], "replaceoptim (class in sympy.codegen.rewriting)": [[50, "sympy.codegen.rewriting.ReplaceOptim", false]], "reporter (class in sympy.testing.runtests)": [[258, "sympy.testing.runtests.Reporter", false]], "repr() (sympy.polys.numberfields.primes.primeideal method)": [[222, "sympy.polys.numberfields.primes.PrimeIdeal.repr", false]], "represent() (in module sympy.physics.quantum.represent)": [[187, "sympy.physics.quantum.represent.represent", false]], "represent() (sympy.polys.numberfields.modules.endomorphismring method)": [[222, "sympy.polys.numberfields.modules.EndomorphismRing.represent", false]], "represent() (sympy.polys.numberfields.modules.module method)": [[222, "sympy.polys.numberfields.modules.Module.represent", false]], "represent() (sympy.polys.numberfields.modules.powerbasis method)": [[222, "sympy.polys.numberfields.modules.PowerBasis.represent", false]], "represent() (sympy.polys.numberfields.modules.submodule method)": [[222, "sympy.polys.numberfields.modules.Submodule.represent", false]], "reprify() (sympy.printing.repr.reprprinter method)": [[227, "sympy.printing.repr.ReprPrinter.reprify", false]], "reprprinter (class in sympy.printing.repr)": [[227, "sympy.printing.repr.ReprPrinter", false]], "reset() (sympy.combinatorics.polyhedron.polyhedron method)": [[62, "sympy.combinatorics.polyhedron.Polyhedron.reset", false]], "reshape() (in module sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.reshape", false]], "reshape() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.reshape", false]], "reshape() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.reshape", false]], "residue() (in module sympy.series.residues)": [[234, "sympy.series.residues.residue", false]], "resize() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.resize", false]], "restrict_codomain() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[214, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.restrict_codomain", false]], "restrict_domain() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[214, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.restrict_domain", false]], "result (class in sympy.utilities.codegen)": [[260, "sympy.utilities.codegen.Result", false]], "result_variables (sympy.utilities.codegen.routine property)": [[260, "sympy.utilities.codegen.Routine.result_variables", false]], "resultant() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.resultant", false]], "resultant() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.resultant", false]], "resultant() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.resultant", false]], "retract() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.retract", false]], "return (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.Return", false]], "return_expr() (sympy.parsing.sym_expr.sympyexpression method)": [[111, "sympy.parsing.sym_expr.SymPyExpression.return_expr", false]], "reverse_order() (sympy.concrete.products.product method)": [[68, "sympy.concrete.products.Product.reverse_order", false]], "reverse_order() (sympy.concrete.summations.sum method)": [[68, "sympy.concrete.summations.Sum.reverse_order", false]], "reversed (sympy.core.relational.relational property)": [[69, "sympy.core.relational.Relational.reversed", false]], "reversed (sympy.sets.fancysets.range property)": [[235, "sympy.sets.fancysets.Range.reversed", false]], "reversedgradedlexorder (class in sympy.polys.orderings)": [[223, "sympy.polys.orderings.ReversedGradedLexOrder", false]], "reversedsign (sympy.core.relational.relational property)": [[69, "sympy.core.relational.Relational.reversedsign", false]], "revert() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.revert", false]], "revert() (sympy.polys.domains.field.field method)": [[218, "sympy.polys.domains.field.Field.revert", false]], "revert() (sympy.polys.domains.ring.ring method)": [[218, "sympy.polys.domains.ring.Ring.revert", false]], "revert() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.revert", false]], "revert() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.revert", false]], "rewrite() (in module sympy.series.gruntz)": [[234, "sympy.series.gruntz.rewrite", false]], "rewrite() (sympy.core.basic.basic method)": [[69, "sympy.core.basic.Basic.rewrite", false]], "rgs (sympy.combinatorics.partitions.partition property)": [[58, "sympy.combinatorics.partitions.Partition.RGS", false]], "rgs_enum() (in module sympy.combinatorics.partitions)": [[58, "sympy.combinatorics.partitions.RGS_enum", false]], "rgs_generalized() (in module sympy.combinatorics.partitions)": [[58, "sympy.combinatorics.partitions.RGS_generalized", false]], "rgs_rank() (in module sympy.combinatorics.partitions)": [[58, "sympy.combinatorics.partitions.RGS_rank", false]], "rgs_unrank() (in module sympy.combinatorics.partitions)": [[58, "sympy.combinatorics.partitions.RGS_unrank", false]], "rhs (sympy.core.relational.relational property)": [[69, "sympy.core.relational.Relational.rhs", false]], "rhs() (sympy.physics.biomechanics.activation.activationbase method)": [[112, "sympy.physics.biomechanics.activation.ActivationBase.rhs", false]], "rhs() (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 method)": [[112, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.rhs", false]], "rhs() (sympy.physics.biomechanics.activation.zerothorderactivation method)": [[112, "sympy.physics.biomechanics.activation.ZerothOrderActivation.rhs", false]], "rhs() (sympy.physics.biomechanics.musculotendon.musculotendonbase method)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.rhs", false]], "rhs() (sympy.physics.mechanics.jointsmethod.jointsmethod method)": [[131, "sympy.physics.mechanics.jointsmethod.JointsMethod.rhs", false]], "rhs() (sympy.physics.mechanics.kane.kanesmethod method)": [[135, "sympy.physics.mechanics.kane.KanesMethod.rhs", false]], "rhs() (sympy.physics.mechanics.lagrange.lagrangesmethod method)": [[135, "sympy.physics.mechanics.lagrange.LagrangesMethod.rhs", false]], "rhs() (sympy.physics.mechanics.system.system method)": [[140, "sympy.physics.mechanics.system.System.rhs", false]], "riccati_inverse_normal() (in module sympy.solvers.ode.riccati)": [[243, "sympy.solvers.ode.riccati.riccati_inverse_normal", false]], "riccati_normal() (in module sympy.solvers.ode.riccati)": [[243, "sympy.solvers.ode.riccati.riccati_normal", false]], "riccati_reduced() (in module sympy.solvers.ode.riccati)": [[243, "sympy.solvers.ode.riccati.riccati_reduced", false]], "riccatispecial (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.RiccatiSpecial", false]], "richardson() (in module sympy.series.acceleration)": [[234, "sympy.series.acceleration.richardson", false]], "riemann() (sympy.tensor.tensor.tensorsymmetry class method)": [[253, "sympy.tensor.tensor.TensorSymmetry.riemann", false]], "riemann_cyclic() (in module sympy.tensor.tensor)": [[253, "sympy.tensor.tensor.riemann_cyclic", false]], "riemann_cyclic_replace() (in module sympy.tensor.tensor)": [[253, "sympy.tensor.tensor.riemann_cyclic_replace", false]], "right() (sympy.printing.pretty.stringpict.stringpict method)": [[227, "sympy.printing.pretty.stringpict.stringPict.right", false]], "right_open (sympy.sets.sets.interval property)": [[235, "sympy.sets.sets.Interval.right_open", false]], "right_support (sympy.physics.continuum_mechanics.cable.cable property)": [[119, "sympy.physics.continuum_mechanics.cable.Cable.right_support", false]], "rigidbody (class in sympy.physics.mechanics.rigidbody)": [[137, "sympy.physics.mechanics.rigidbody.RigidBody", false]], "ring (class in sympy.polys.domains.ring)": [[218, "sympy.polys.domains.ring.Ring", false]], "ring() (in module sympy.polys.rings)": [[218, "sympy.polys.rings.ring", false]], "ringelement (class in sympy.polys.matrices._typing)": [[216, "sympy.polys.matrices._typing.RingElement", false]], "risch_integrate() (in module sympy.integrals.risch)": [[96, "sympy.integrals.risch.risch_integrate", false]], "risingfactorial (class in sympy.functions.combinatorial.factorials)": [[74, "sympy.functions.combinatorial.factorials.RisingFactorial", false]], "rk (in module sympy.physics.quantum.qft)": [[185, "sympy.physics.quantum.qft.Rk", false]], "rkgate (class in sympy.physics.quantum.qft)": [[185, "sympy.physics.quantum.qft.RkGate", false]], "rmul() (sympy.combinatorics.permutations.permutation static method)": [[61, "sympy.combinatorics.permutations.Permutation.rmul", false]], "rmul() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.rmul", false]], "rmul_with_af() (sympy.combinatorics.permutations.permutation class method)": [[61, "sympy.combinatorics.permutations.Permutation.rmul_with_af", false]], "rmultiply() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.rmultiply", false]], "root (in module sympy.printing.pretty.pretty_symbology)": [[227, "sympy.printing.pretty.pretty_symbology.root", false]], "root() (in module sympy.functions.elementary.miscellaneous)": [[75, "sympy.functions.elementary.miscellaneous.root", false]], "root() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.root", false]], "root() (sympy.printing.pretty.stringpict.stringpict method)": [[227, "sympy.printing.pretty.stringpict.stringPict.root", false]], "root_space() (sympy.liealgebras.root_system.rootsystem method)": [[98, "sympy.liealgebras.root_system.RootSystem.root_space", false]], "rootof (class in sympy.polys.rootoftools)": [[223, "sympy.polys.rootoftools.RootOf", false]], "rootof() (in module sympy.polys.rootoftools)": [[223, "sympy.polys.rootoftools.rootof", false]], "roots() (in module sympy.polys.polyroots)": [[223, "sympy.polys.polyroots.roots", false]], "roots() (sympy.liealgebras.type_a.typea method)": [[98, "sympy.liealgebras.type_a.TypeA.roots", false]], "roots() (sympy.liealgebras.type_b.typeb method)": [[98, "sympy.liealgebras.type_b.TypeB.roots", false]], "roots() (sympy.liealgebras.type_c.typec method)": [[98, "sympy.liealgebras.type_c.TypeC.roots", false]], "roots() (sympy.liealgebras.type_d.typed method)": [[98, "sympy.liealgebras.type_d.TypeD.roots", false]], "roots() (sympy.liealgebras.type_e.typee method)": [[98, "sympy.liealgebras.type_e.TypeE.roots", false]], "roots() (sympy.liealgebras.type_f.typef method)": [[98, "sympy.liealgebras.type_f.TypeF.roots", false]], "roots() (sympy.liealgebras.type_g.typeg method)": [[98, "sympy.liealgebras.type_g.TypeG.roots", false]], "rootsum (class in sympy.polys.rootoftools)": [[223, "sympy.polys.rootoftools.RootSum", false]], "rootsystem (class in sympy.liealgebras.root_system)": [[98, "sympy.liealgebras.root_system.RootSystem", false]], "ropen() (sympy.sets.sets.interval class method)": [[235, "sympy.sets.sets.Interval.Ropen", false]], "rot90() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.rot90", false]], "rot_axis1() (in module sympy.matrices.dense)": [[105, "sympy.matrices.dense.rot_axis1", false]], "rot_axis2() (in module sympy.matrices.dense)": [[105, "sympy.matrices.dense.rot_axis2", false]], "rot_axis3() (in module sympy.matrices.dense)": [[105, "sympy.matrices.dense.rot_axis3", false]], "rot_ccw_axis1() (in module sympy.matrices.dense)": [[105, "sympy.matrices.dense.rot_ccw_axis1", false]], "rot_ccw_axis2() (in module sympy.matrices.dense)": [[105, "sympy.matrices.dense.rot_ccw_axis2", false]], "rot_ccw_axis3() (in module sympy.matrices.dense)": [[105, "sympy.matrices.dense.rot_ccw_axis3", false]], "rot_givens() (in module sympy.matrices.dense)": [[105, "sympy.matrices.dense.rot_givens", false]], "rotate() (sympy.combinatorics.polyhedron.polyhedron method)": [[62, "sympy.combinatorics.polyhedron.Polyhedron.rotate", false]], "rotate() (sympy.geometry.curve.curve method)": [[78, "sympy.geometry.curve.Curve.rotate", false]], "rotate() (sympy.geometry.ellipse.ellipse method)": [[79, "sympy.geometry.ellipse.Ellipse.rotate", false]], "rotate() (sympy.geometry.entity.geometryentity method)": [[80, "sympy.geometry.entity.GeometryEntity.rotate", false]], "rotate() (sympy.geometry.point.point2d method)": [[84, "sympy.geometry.point.Point2D.rotate", false]], "rotate() (sympy.geometry.polygon.regularpolygon method)": [[85, "sympy.geometry.polygon.RegularPolygon.rotate", false]], "rotate_left() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.rotate_left", false]], "rotate_point() (sympy.algebras.quaternion static method)": [[42, "sympy.algebras.Quaternion.rotate_point", false]], "rotate_right() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.rotate_right", false]], "rotation (class in sympy.physics.quantum.spin)": [[189, "sympy.physics.quantum.spin.Rotation", false]], "rotation (sympy.geometry.polygon.regularpolygon property)": [[85, "sympy.geometry.polygon.RegularPolygon.rotation", false]], "rotation_axis (sympy.physics.mechanics.joint.planarjoint property)": [[134, "sympy.physics.mechanics.joint.PlanarJoint.rotation_axis", false]], "rotation_coordinate (sympy.physics.mechanics.joint.cylindricaljoint property)": [[134, "sympy.physics.mechanics.joint.CylindricalJoint.rotation_coordinate", false]], "rotation_coordinate (sympy.physics.mechanics.joint.planarjoint property)": [[134, "sympy.physics.mechanics.joint.PlanarJoint.rotation_coordinate", false]], "rotation_matrix() (sympy.vector.coordsysrect.coordsys3d method)": [[271, "sympy.vector.coordsysrect.CoordSys3D.rotation_matrix", false]], "rotation_matrix() (sympy.vector.orienters.axisorienter method)": [[273, "sympy.vector.orienters.AxisOrienter.rotation_matrix", false]], "rotation_matrix() (sympy.vector.orienters.orienter method)": [[273, "sympy.vector.orienters.Orienter.rotation_matrix", false]], "rotation_speed (sympy.physics.mechanics.joint.cylindricaljoint property)": [[134, "sympy.physics.mechanics.joint.CylindricalJoint.rotation_speed", false]], "rotation_speed (sympy.physics.mechanics.joint.planarjoint property)": [[134, "sympy.physics.mechanics.joint.PlanarJoint.rotation_speed", false]], "rotations() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.rotations", false]], "round() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.round", false]], "round_two() (in module sympy.polys.numberfields.basis)": [[222, "sympy.polys.numberfields.basis.round_two", false]], "roundfunction (class in sympy.functions.elementary.integers)": [[75, "sympy.functions.elementary.integers.RoundFunction", false]], "roundrobin() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.roundrobin", false]], "routine (class in sympy.utilities.codegen)": [[260, "sympy.utilities.codegen.Routine", false]], "routine() (sympy.utilities.codegen.codegen method)": [[260, "sympy.utilities.codegen.CodeGen.routine", false]], "routine() (sympy.utilities.codegen.juliacodegen method)": [[260, "sympy.utilities.codegen.JuliaCodeGen.routine", false]], "routine() (sympy.utilities.codegen.octavecodegen method)": [[260, "sympy.utilities.codegen.OctaveCodeGen.routine", false]], "routine() (sympy.utilities.codegen.rustcodegen method)": [[260, "sympy.utilities.codegen.RustCodeGen.routine", false]], "row() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.row", false]], "row_del() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.row_del", false]], "row_insert() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.row_insert", false]], "row_join() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.row_join", false]], "rowspace() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.rowspace", false]], "rowspace() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.rowspace", false]], "rref() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.rref", false]], "rref() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.rref", false]], "rref() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.rref", false]], "rref() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.rref", false]], "rref_den() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.rref_den", false]], "rref_den() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.rref_den", false]], "rref_den() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.rref_den", false]], "rref_rhs() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.rref_rhs", false]], "rs_asin() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_asin", false]], "rs_atan() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_atan", false]], "rs_atanh() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_atanh", false]], "rs_compose_add() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_compose_add", false]], "rs_cos() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_cos", false]], "rs_cos_sin() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_cos_sin", false]], "rs_cosh() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_cosh", false]], "rs_cot() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_cot", false]], "rs_diff() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_diff", false]], "rs_exp() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_exp", false]], "rs_fun() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_fun", false]], "rs_hadamard_exp() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_hadamard_exp", false]], "rs_integrate() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_integrate", false]], "rs_is_puiseux() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_is_puiseux", false]], "rs_lambertw() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_LambertW", false]], "rs_log() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_log", false]], "rs_mul() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_mul", false]], "rs_newton() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_newton", false]], "rs_nth_root() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_nth_root", false]], "rs_pow() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_pow", false]], "rs_puiseux() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_puiseux", false]], "rs_puiseux2() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_puiseux2", false]], "rs_series_from_list() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_series_from_list", false]], "rs_series_inversion() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_series_inversion", false]], "rs_series_reversion() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_series_reversion", false]], "rs_sin() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_sin", false]], "rs_sinh() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_sinh", false]], "rs_square() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_square", false]], "rs_subs() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_subs", false]], "rs_swap() (in module sympy.stats.rv)": [[247, "sympy.stats.rv.rs_swap", false]], "rs_tan() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_tan", false]], "rs_tanh() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_tanh", false]], "rs_trunc() (in module sympy.polys.ring_series)": [[224, "sympy.polys.ring_series.rs_trunc", false]], "rsa_private_key() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.rsa_private_key", false]], "rsa_public_key() (in module sympy.crypto.crypto)": [[70, "sympy.crypto.crypto.rsa_public_key", false]], "rsolve() (in module sympy.solvers.recurr)": [[245, "sympy.solvers.recurr.rsolve", false]], "rsolve_hyper() (in module sympy.solvers.recurr)": [[245, "sympy.solvers.recurr.rsolve_hyper", false]], "rsolve_hypergeometric() (in module sympy.series.formal)": [[229, "sympy.series.formal.rsolve_hypergeometric", false]], "rsolve_poly() (in module sympy.solvers.recurr)": [[245, "sympy.solvers.recurr.rsolve_poly", false]], "rsolve_ratio() (in module sympy.solvers.recurr)": [[245, "sympy.solvers.recurr.rsolve_ratio", false]], "run() (sympy.testing.runtests.sympydoctestrunner method)": [[258, "sympy.testing.runtests.SymPyDocTestRunner.run", false]], "run_all_tests() (in module sympy.testing.runtests)": [[258, "sympy.testing.runtests.run_all_tests", false]], "run_in_subprocess_with_hash_randomization() (in module sympy.testing.runtests)": [[258, "sympy.testing.runtests.run_in_subprocess_with_hash_randomization", false]], "runs() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.runs", false]], "runs() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.runs", false]], "runtimeerror_ (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.RuntimeError_", false]], "rust_code() (in module sympy.printing.rust)": [[227, "sympy.printing.rust.rust_code", false]], "rustcodegen (class in sympy.utilities.codegen)": [[260, "sympy.utilities.codegen.RustCodeGen", false]], "rustcodeprinter (class in sympy.printing.rust)": [[227, "sympy.printing.rust.RustCodePrinter", false]], "s": [[15, "term-S", true]], "s (in module sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.S", false]], "s1transitivesubgroups (class in sympy.combinatorics.galois)": [[52, "sympy.combinatorics.galois.S1TransitiveSubgroups", false]], "s2transitivesubgroups (class in sympy.combinatorics.galois)": [[52, "sympy.combinatorics.galois.S2TransitiveSubgroups", false]], "s3_in_s6() (in module sympy.combinatorics.galois)": [[52, "sympy.combinatorics.galois.S3_in_S6", false]], "s3transitivesubgroups (class in sympy.combinatorics.galois)": [[52, "sympy.combinatorics.galois.S3TransitiveSubgroups", false]], "s4m() (in module sympy.combinatorics.galois)": [[52, "sympy.combinatorics.galois.S4m", false]], "s4p() (in module sympy.combinatorics.galois)": [[52, "sympy.combinatorics.galois.S4p", false]], "s4transitivesubgroups (class in sympy.combinatorics.galois)": [[52, "sympy.combinatorics.galois.S4TransitiveSubgroups", false]], "s4xc2() (in module sympy.combinatorics.galois)": [[52, "sympy.combinatorics.galois.S4xC2", false]], "s5transitivesubgroups (class in sympy.combinatorics.galois)": [[52, "sympy.combinatorics.galois.S5TransitiveSubgroups", false]], "s6transitivesubgroups (class in sympy.combinatorics.galois)": [[52, "sympy.combinatorics.galois.S6TransitiveSubgroups", false]], "same_root() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.same_root", false]], "sample() (in module sympy.stats)": [[247, "sympy.stats.sample", false]], "sample() (sympy.stats.discretemarkovchain method)": [[247, "sympy.stats.DiscreteMarkovChain.sample", false]], "sample_iter() (in module sympy.stats)": [[247, "sympy.stats.sample_iter", false]], "sampling_density() (in module sympy.stats.rv)": [[247, "sympy.stats.rv.sampling_density", false]], "sampling_e() (in module sympy.stats.rv)": [[247, "sympy.stats.rv.sampling_E", false]], "sampling_p() (in module sympy.stats.rv)": [[247, "sympy.stats.rv.sampling_P", false]], "satisfiable() (in module sympy.logic.inference)": [[99, "sympy.logic.inference.satisfiable", false]], "saturate() (sympy.polys.agca.ideals.ideal method)": [[214, "sympy.polys.agca.ideals.Ideal.saturate", false]], "scalar_map() (sympy.vector.coordsysrect.coordsys3d method)": [[271, "sympy.vector.coordsysrect.CoordSys3D.scalar_map", false]], "scalar_part() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.scalar_part", false]], "scalar_potential() (in module sympy.physics.vector.fieldfunctions)": [[203, "sympy.physics.vector.fieldfunctions.scalar_potential", false]], "scalar_potential() (in module sympy.vector)": [[274, "sympy.vector.scalar_potential", false]], "scalar_potential_difference() (in module sympy.physics.vector.fieldfunctions)": [[203, "sympy.physics.vector.fieldfunctions.scalar_potential_difference", false]], "scalar_potential_difference() (in module sympy.vector)": [[274, "sympy.vector.scalar_potential_difference", false]], "scale() (sympy.geometry.curve.curve method)": [[78, "sympy.geometry.curve.Curve.scale", false]], "scale() (sympy.geometry.ellipse.circle method)": [[79, "sympy.geometry.ellipse.Circle.scale", false]], "scale() (sympy.geometry.ellipse.ellipse method)": [[79, "sympy.geometry.ellipse.Ellipse.scale", false]], "scale() (sympy.geometry.entity.geometryentity method)": [[80, "sympy.geometry.entity.GeometryEntity.scale", false]], "scale() (sympy.geometry.point.point2d method)": [[84, "sympy.geometry.point.Point2D.scale", false]], "scale() (sympy.geometry.point.point3d method)": [[84, "sympy.geometry.point.Point3D.scale", false]], "scale() (sympy.geometry.polygon.regularpolygon method)": [[85, "sympy.geometry.polygon.RegularPolygon.scale", false]], "scale() (sympy.series.fourier.fourierseries method)": [[230, "sympy.series.fourier.FourierSeries.scale", false]], "scale_factor (sympy.physics.units.quantities.quantity property)": [[199, "sympy.physics.units.quantities.Quantity.scale_factor", false]], "scalex() (sympy.series.fourier.fourierseries method)": [[230, "sympy.series.fourier.FourierSeries.scalex", false]], "scc() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.scc", false]], "scc() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.scc", false]], "scc() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.scc", false]], "scc() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.scc", false]], "schreier_sims() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.schreier_sims", false]], "schreier_sims_incremental() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.schreier_sims_incremental", false]], "schreier_sims_random() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.schreier_sims_random", false]], "schreier_vector() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.schreier_vector", false]], "schur() (sympy.matrices.expressions.blockmatrix.blockmatrix method)": [[101, "sympy.matrices.expressions.blockmatrix.BlockMatrix.schur", false]], "scope (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.Scope", false]], "sdm (class in sympy.polys.matrices.sdm)": [[216, "sympy.polys.matrices.sdm.SDM", false]], "sdm_add() (in module sympy.polys.distributedmodules)": [[220, "sympy.polys.distributedmodules.sdm_add", false]], "sdm_berk() (in module sympy.polys.matrices.sdm)": [[216, "sympy.polys.matrices.sdm.sdm_berk", false]], "sdm_deg() (in module sympy.polys.distributedmodules)": [[220, "sympy.polys.distributedmodules.sdm_deg", false]], "sdm_ecart() (in module sympy.polys.distributedmodules)": [[220, "sympy.polys.distributedmodules.sdm_ecart", false]], "sdm_from_dict() (in module sympy.polys.distributedmodules)": [[220, "sympy.polys.distributedmodules.sdm_from_dict", false]], "sdm_from_vector() (in module sympy.polys.distributedmodules)": [[220, "sympy.polys.distributedmodules.sdm_from_vector", false]], "sdm_groebner() (in module sympy.polys.distributedmodules)": [[220, "sympy.polys.distributedmodules.sdm_groebner", false]], "sdm_irref() (in module sympy.polys.matrices.sdm)": [[216, "sympy.polys.matrices.sdm.sdm_irref", false]], "sdm_lc() (in module sympy.polys.distributedmodules)": [[220, "sympy.polys.distributedmodules.sdm_LC", false]], "sdm_lm() (in module sympy.polys.distributedmodules)": [[220, "sympy.polys.distributedmodules.sdm_LM", false]], "sdm_lt() (in module sympy.polys.distributedmodules)": [[220, "sympy.polys.distributedmodules.sdm_LT", false]], "sdm_monomial_deg() (in module sympy.polys.distributedmodules)": [[220, "sympy.polys.distributedmodules.sdm_monomial_deg", false]], "sdm_monomial_divides() (in module sympy.polys.distributedmodules)": [[220, "sympy.polys.distributedmodules.sdm_monomial_divides", false]], "sdm_monomial_mul() (in module sympy.polys.distributedmodules)": [[220, "sympy.polys.distributedmodules.sdm_monomial_mul", false]], "sdm_mul_term() (in module sympy.polys.distributedmodules)": [[220, "sympy.polys.distributedmodules.sdm_mul_term", false]], "sdm_nf_mora() (in module sympy.polys.distributedmodules)": [[220, "sympy.polys.distributedmodules.sdm_nf_mora", false]], "sdm_nullspace_from_rref() (in module sympy.polys.matrices.sdm)": [[216, "sympy.polys.matrices.sdm.sdm_nullspace_from_rref", false]], "sdm_particular_from_rref() (in module sympy.polys.matrices.sdm)": [[216, "sympy.polys.matrices.sdm.sdm_particular_from_rref", false]], "sdm_rref_den() (in module sympy.polys.matrices.sdm)": [[216, "sympy.polys.matrices.sdm.sdm_rref_den", false]], "sdm_spoly() (in module sympy.polys.distributedmodules)": [[220, "sympy.polys.distributedmodules.sdm_spoly", false]], "sdm_to_dict() (in module sympy.polys.distributedmodules)": [[220, "sympy.polys.distributedmodules.sdm_to_dict", false]], "sdm_to_vector() (in module sympy.polys.distributedmodules)": [[220, "sympy.polys.distributedmodules.sdm_to_vector", false]], "sdm_zero() (in module sympy.polys.distributedmodules)": [[220, "sympy.polys.distributedmodules.sdm_zero", false]], "search() (sympy.ntheory.generate.sieve method)": [[109, "sympy.ntheory.generate.Sieve.search", false]], "search_function (sympy.physics.quantum.grover.oraclegate property)": [[177, "sympy.physics.quantum.grover.OracleGate.search_function", false]], "sec (class in sympy.functions.elementary.trigonometric)": [[75, "sympy.functions.elementary.trigonometric.sec", false]], "sech (class in sympy.functions.elementary.hyperbolic)": [[75, "sympy.functions.elementary.hyperbolic.sech", false]], "second_moment (sympy.physics.continuum_mechanics.beam.beam property)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.second_moment", false]], "second_moment (sympy.physics.continuum_mechanics.beam.beam3d property)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.second_moment", false]], "second_moment_of_area() (sympy.geometry.ellipse.ellipse method)": [[79, "sympy.geometry.ellipse.Ellipse.second_moment_of_area", false]], "second_moment_of_area() (sympy.geometry.polygon.polygon method)": [[85, "sympy.geometry.polygon.Polygon.second_moment_of_area", false]], "secondhypergeometric (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.SecondHypergeometric", false]], "secondlinearairy (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.SecondLinearAiry", false]], "secondlinearbessel (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.SecondLinearBessel", false]], "section_modulus() (sympy.geometry.ellipse.ellipse method)": [[79, "sympy.geometry.ellipse.Ellipse.section_modulus", false]], "section_modulus() (sympy.geometry.polygon.polygon method)": [[85, "sympy.geometry.polygon.Polygon.section_modulus", false]], "segment (class in sympy.geometry.line)": [[82, "sympy.geometry.line.Segment", false]], "segment2d (class in sympy.geometry.line)": [[82, "sympy.geometry.line.Segment2D", false]], "segment3d (class in sympy.geometry.line)": [[82, "sympy.geometry.line.Segment3D", false]], "select() (sympy.simplify.epathtools.epath method)": [[239, "sympy.simplify.epathtools.EPath.select", false]], "selections (sympy.combinatorics.graycode.graycode property)": [[53, "sympy.combinatorics.graycode.GrayCode.selections", false]], "semilatus_rectum (sympy.geometry.ellipse.ellipse property)": [[79, "sympy.geometry.ellipse.Ellipse.semilatus_rectum", false]], "sensitivity (sympy.physics.control.lti.feedback property)": [[125, "sympy.physics.control.lti.Feedback.sensitivity", false]], "sensitivity (sympy.physics.control.lti.mimofeedback property)": [[125, "sympy.physics.control.lti.MIMOFeedback.sensitivity", false]], "separable (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.Separable", false]], "separablereduced (class in sympy.solvers.ode.single)": [[243, "sympy.solvers.ode.single.SeparableReduced", false]], "separate() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.separate", false]], "separate() (sympy.physics.vector.vector.vector method)": [[202, "sympy.physics.vector.vector.Vector.separate", false]], "separate() (sympy.vector.vector.vector method)": [[271, "sympy.vector.vector.Vector.separate", false]], "separatevars() (in module sympy.simplify.simplify)": [[239, "sympy.simplify.simplify.separatevars", false]], "seqadd (class in sympy.series.sequences)": [[233, "sympy.series.sequences.SeqAdd", false]], "seqbase (class in sympy.series.sequences)": [[233, "sympy.series.sequences.SeqBase", false]], "seqformula (class in sympy.series.sequences)": [[233, "sympy.series.sequences.SeqFormula", false]], "seqmul (class in sympy.series.sequences)": [[233, "sympy.series.sequences.SeqMul", false]], "seqper (class in sympy.series.sequences)": [[233, "sympy.series.sequences.SeqPer", false]], "sequence() (in module sympy.series.sequences)": [[233, "sympy.series.sequences.sequence", false]], "sequence_partitions() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.sequence_partitions", false]], "sequence_partitions_empty() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.sequence_partitions_empty", false]], "series (class in sympy.physics.control.lti)": [[125, "sympy.physics.control.lti.Series", false]], "series() (in module sympy.series.series)": [[234, "sympy.series.series.series", false]], "series() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.series", false]], "series() (sympy.holonomic.holonomic.holonomicfunction method)": [[91, "sympy.holonomic.holonomic.HolonomicFunction.series", false]], "series() (sympy.liealgebras.cartan_type.standard_cartan method)": [[98, "sympy.liealgebras.cartan_type.Standard_Cartan.series", false]], "seriesapprox (class in sympy.codegen.approximations)": [[50, "sympy.codegen.approximations.SeriesApprox", false]], "set (class in sympy.sets.sets)": [[235, "sympy.sets.sets.Set", false]], "set_acc() (sympy.physics.vector.point.point method)": [[206, "sympy.physics.vector.point.Point.set_acc", false]], "set_ang_acc() (sympy.physics.vector.frame.referenceframe method)": [[202, "sympy.physics.vector.frame.ReferenceFrame.set_ang_acc", false]], "set_ang_vel() (sympy.physics.vector.frame.referenceframe method)": [[202, "sympy.physics.vector.frame.ReferenceFrame.set_ang_vel", false]], "set_comm() (sympy.tensor.tensor._tensormanager method)": [[253, "sympy.tensor.tensor._TensorManager.set_comm", false]], "set_comms() (sympy.tensor.tensor._tensormanager method)": [[253, "sympy.tensor.tensor._TensorManager.set_comms", false]], "set_domain() (sympy.polys.domains.compositedomain.compositedomain method)": [[218, "sympy.polys.domains.compositedomain.CompositeDomain.set_domain", false]], "set_domain() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.set_domain", false]], "set_global_relative_scale_factor() (sympy.physics.units.quantities.quantity method)": [[199, "sympy.physics.units.quantities.Quantity.set_global_relative_scale_factor", false]], "set_global_settings() (sympy.printing.printer.printer class method)": [[227, "sympy.printing.printer.Printer.set_global_settings", false]], "set_modulus() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.set_modulus", false]], "set_norm() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.set_norm", false]], "set_pos() (sympy.physics.vector.point.point method)": [[206, "sympy.physics.vector.point.Point.set_pos", false]], "set_vel() (sympy.physics.vector.point.point method)": [[206, "sympy.physics.vector.point.Point.set_vel", false]], "seterr() (in module sympy.core.numbers)": [[69, "sympy.core.numbers.seterr", false]], "setitem() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.setitem", false]], "setkind (class in sympy.sets.conditionset)": [[235, "sympy.sets.conditionset.SetKind", false]], "sets (sympy.sets.fancysets.complexregion property)": [[235, "sympy.sets.fancysets.ComplexRegion.sets", false]], "setup() (in module sympy.polys.polyconfig)": [[220, "sympy.polys.polyconfig.setup", false]], "sfield() (in module sympy.polys.fields)": [[218, "sympy.polys.fields.sfield", false]], "shanks() (in module sympy.series.acceleration)": [[234, "sympy.series.acceleration.shanks", false]], "shape (sympy.matrices.matrixbase.matrixbase property)": [[105, "sympy.matrices.matrixbase.MatrixBase.shape", false]], "shape (sympy.physics.control.lti.mimoparallel property)": [[125, "sympy.physics.control.lti.MIMOParallel.shape", false]], "shape (sympy.physics.control.lti.mimoseries property)": [[125, "sympy.physics.control.lti.MIMOSeries.shape", false]], "shape (sympy.physics.control.lti.transferfunctionmatrix property)": [[125, "sympy.physics.control.lti.TransferFunctionMatrix.shape", false]], "shape (sympy.tensor.indexed.indexed property)": [[252, "sympy.tensor.indexed.Indexed.shape", false]], "shape (sympy.tensor.indexed.indexedbase property)": [[252, "sympy.tensor.indexed.IndexedBase.shape", false]], "shape() (in module sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.shape", false]], "shapeerror (class in sympy.matrices.matrixbase)": [[105, "sympy.matrices.matrixbase.ShapeError", false]], "shear_force() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.shear_force", false]], "shear_force() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.shear_force", false]], "shear_modulus (sympy.physics.continuum_mechanics.beam.beam3d property)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.shear_modulus", false]], "shear_stress() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.shear_stress", false]], "shear_stress() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.shear_stress", false]], "shi (class in sympy.functions.special.error_functions)": [[77, "sympy.functions.special.error_functions.Shi", false]], "shift() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.shift", false]], "shift() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.shift", false]], "shift() (sympy.series.fourier.fourierseries method)": [[230, "sympy.series.fourier.FourierSeries.shift", false]], "shiftedgompertz() (in module sympy.stats)": [[247, "sympy.stats.ShiftedGompertz", false]], "shiftx() (sympy.series.fourier.fourierseries method)": [[230, "sympy.series.fourier.FourierSeries.shiftx", false]], "shor() (in module sympy.physics.quantum.shor)": [[188, "sympy.physics.quantum.shor.shor", false]], "si (class in sympy.functions.special.error_functions)": [[77, "sympy.functions.special.error_functions.Si", false]], "sides (sympy.geometry.polygon.polygon property)": [[85, "sympy.geometry.polygon.Polygon.sides", false]], "sieve (class in sympy.ntheory.generate)": [[109, "sympy.ntheory.generate.Sieve", false]], "sift() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.sift", false]], "sigma_approximation() (sympy.series.fourier.fourierseries method)": [[230, "sympy.series.fourier.FourierSeries.sigma_approximation", false]], "sign (class in sympy.functions.elementary.complexes)": [[75, "sympy.functions.elementary.complexes.sign", false]], "sign (sympy.physics.control.lti.feedback property)": [[125, "sympy.physics.control.lti.Feedback.sign", false]], "sign (sympy.physics.control.lti.mimofeedback property)": [[125, "sympy.physics.control.lti.MIMOFeedback.sign", false]], "sign() (in module sympy.series.gruntz)": [[234, "sympy.series.gruntz.sign", false]], "signature (sympy.core.function.lambda property)": [[69, "sympy.core.function.Lambda.signature", false]], "signature() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.signature", false]], "signed_permutations() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.signed_permutations", false]], "signedinttype (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.SignedIntType", false]], "simple_root() (sympy.liealgebras.type_a.typea method)": [[98, "sympy.liealgebras.type_a.TypeA.simple_root", false]], "simple_root() (sympy.liealgebras.type_b.typeb method)": [[98, "sympy.liealgebras.type_b.TypeB.simple_root", false]], "simple_root() (sympy.liealgebras.type_c.typec method)": [[98, "sympy.liealgebras.type_c.TypeC.simple_root", false]], "simple_root() (sympy.liealgebras.type_d.typed method)": [[98, "sympy.liealgebras.type_d.TypeD.simple_root", false]], "simple_root() (sympy.liealgebras.type_e.typee method)": [[98, "sympy.liealgebras.type_e.TypeE.simple_root", false]], "simple_root() (sympy.liealgebras.type_f.typef method)": [[98, "sympy.liealgebras.type_f.TypeF.simple_root", false]], "simple_root() (sympy.liealgebras.type_g.typeg method)": [[98, "sympy.liealgebras.type_g.TypeG.simple_root", false]], "simple_roots() (sympy.liealgebras.root_system.rootsystem method)": [[98, "sympy.liealgebras.root_system.RootSystem.simple_roots", false]], "simplede() (in module sympy.series.formal)": [[229, "sympy.series.formal.simpleDE", false]], "simpledomain (class in sympy.polys.domains.simpledomain)": [[218, "sympy.polys.domains.simpledomain.SimpleDomain", false]], "simplification": [[15, "term-Simplification", true]], "simplify() (in module sympy.simplify.simplify)": [[239, "sympy.simplify.simplify.simplify", false]], "simplify() (sympy.core.basic.basic method)": [[69, "sympy.core.basic.Basic.simplify", false]], "simplify() (sympy.matrices.dense.mutabledensematrix method)": [[100, "sympy.matrices.dense.MutableDenseMatrix.simplify", false]], "simplify() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.simplify", false]], "simplify() (sympy.physics.vector.dyadic.dyadic method)": [[202, "sympy.physics.vector.dyadic.Dyadic.simplify", false]], "simplify() (sympy.physics.vector.vector.vector method)": [[202, "sympy.physics.vector.vector.Vector.simplify", false]], "simplify_gpgp() (in module sympy.physics.hep.gamma_matrices)": [[126, "sympy.physics.hep.gamma_matrices.simplify_gpgp", false]], "simplify_index_permutations() (in module sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.simplify_index_permutations", false]], "simplify_logic() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.simplify_logic", false]], "sin (class in sympy.functions.elementary.trigonometric)": [[75, "sympy.functions.elementary.trigonometric.sin", false]], "sinc (class in sympy.functions.elementary.trigonometric)": [[75, "sympy.functions.elementary.trigonometric.sinc", false]], "sine_transform() (in module sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.sine_transform", false]], "sinetransform (class in sympy.integrals.transforms)": [[96, "sympy.integrals.transforms.SineTransform", false]], "singledomain (class in sympy.stats.rv)": [[247, "sympy.stats.rv.SingleDomain", false]], "singlepspace (class in sympy.stats.rv)": [[247, "sympy.stats.rv.SinglePSpace", false]], "singleton (class in sympy.core.singleton)": [[69, "sympy.core.singleton.Singleton", false]], "singletonregistry (class in sympy.core.singleton)": [[69, "sympy.core.singleton.SingletonRegistry", false]], "singular_points() (sympy.vector.implicitregion.implicitregion method)": [[271, "sympy.vector.implicitregion.ImplicitRegion.singular_points", false]], "singular_value_decomposition() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.singular_value_decomposition", false]], "singular_values() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.singular_values", false]], "singularities() (in module sympy.calculus.singularities)": [[48, "sympy.calculus.singularities.singularities", false]], "singularityfunction (class in sympy.functions.special.singularity_functions)": [[77, "sympy.functions.special.singularity_functions.SingularityFunction", false]], "singularityintegrate() (in module sympy.integrals.singularityfunctions)": [[96, "sympy.integrals.singularityfunctions.singularityintegrate", false]], "singularpredicate (class in sympy.assumptions.predicates.matrices)": [[46, "sympy.assumptions.predicates.matrices.SingularPredicate", false]], "sinh (class in sympy.functions.elementary.hyperbolic)": [[75, "sympy.functions.elementary.hyperbolic.sinh", false]], "size (sympy.combinatorics.permutations.permutation property)": [[61, "sympy.combinatorics.permutations.Permutation.size", false]], "size (sympy.combinatorics.polyhedron.polyhedron property)": [[62, "sympy.combinatorics.polyhedron.Polyhedron.size", false]], "size (sympy.combinatorics.prufer.prufer property)": [[63, "sympy.combinatorics.prufer.Prufer.size", false]], "size (sympy.combinatorics.subsets.subset property)": [[64, "sympy.combinatorics.subsets.Subset.size", false]], "size() (in module sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.size", false]], "sizeof() (in module sympy.codegen.cnodes)": [[50, "sympy.codegen.cnodes.sizeof", false]], "skellam() (in module sympy.stats)": [[247, "sympy.stats.Skellam", false]], "skewness() (in module sympy.stats)": [[247, "sympy.stats.skewness", false]], "skip() (in module sympy.testing.pytest)": [[256, "sympy.testing.pytest.SKIP", false]], "skip() (sympy.combinatorics.graycode.graycode method)": [[53, "sympy.combinatorics.graycode.GrayCode.skip", false]], "skip_under_pyodide() (in module sympy.testing.pytest)": [[256, "sympy.testing.pytest.skip_under_pyodide", false]], "slice() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.slice", false]], "slice() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.slice", false]], "slope (sympy.geometry.line.linearentity2d property)": [[82, "sympy.geometry.line.LinearEntity2D.slope", false]], "slope() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.slope", false]], "slope() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.slope", false]], "smallest_angle_between() (sympy.geometry.line.linearentity method)": [[82, "sympy.geometry.line.LinearEntity.smallest_angle_between", false]], "smith_normal_form() (in module sympy.matrices.normalforms)": [[106, "sympy.matrices.normalforms.smith_normal_form", false]], "smith_normal_form() (in module sympy.polys.matrices.normalforms)": [[216, "sympy.polys.matrices.normalforms.smith_normal_form", false]], "smoothing_rate (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[112, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.smoothing_rate", false]], "smoothness() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.smoothness", false]], "smoothness_p() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.smoothness_p", false]], "smtlib_code() (in module sympy.printing.smtlib)": [[227, "sympy.printing.smtlib.smtlib_code", false]], "smtlibprinter (class in sympy.printing.smtlib)": [[227, "sympy.printing.smtlib.SMTLibPrinter", false]], "solve": [[15, "term-Solve", true]], "solve() (in module sympy.solvers.solvers)": [[245, "sympy.solvers.solvers.solve", false]], "solve() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.solve", false]], "solve() (sympy.physics.continuum_mechanics.truss.truss method)": [[121, "sympy.physics.continuum_mechanics.truss.Truss.solve", false]], "solve_aux_eq() (in module sympy.solvers.ode.riccati)": [[243, "sympy.solvers.ode.riccati.solve_aux_eq", false]], "solve_congruence() (in module sympy.ntheory.modular)": [[109, "sympy.ntheory.modular.solve_congruence", false]], "solve_de() (in module sympy.series.formal)": [[229, "sympy.series.formal.solve_de", false]], "solve_den() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.solve_den", false]], "solve_den_charpoly() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.solve_den_charpoly", false]], "solve_den_rref() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.solve_den_rref", false]], "solve_for_ild_moment() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.solve_for_ild_moment", false]], "solve_for_ild_reactions() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.solve_for_ild_reactions", false]], "solve_for_ild_shear() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.solve_for_ild_shear", false]], "solve_for_reaction_loads() (sympy.physics.continuum_mechanics.beam.beam method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.solve_for_reaction_loads", false]], "solve_for_reaction_loads() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.solve_for_reaction_loads", false]], "solve_for_torsion() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.solve_for_torsion", false]], "solve_least_squares() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.solve_least_squares", false]], "solve_lin_sys() (in module sympy.polys.solvers)": [[225, "sympy.polys.solvers.solve_lin_sys", false]], "solve_linear() (in module sympy.solvers.solvers)": [[245, "sympy.solvers.solvers.solve_linear", false]], "solve_linear_system() (in module sympy.solvers.solvers)": [[245, "sympy.solvers.solvers.solve_linear_system", false]], "solve_linear_system_lu() (in module sympy.solvers.solvers)": [[245, "sympy.solvers.solvers.solve_linear_system_LU", false]], "solve_multipliers() (sympy.physics.mechanics.lagrange.lagrangesmethod method)": [[135, "sympy.physics.mechanics.lagrange.LagrangesMethod.solve_multipliers", false]], "solve_poly_inequalities() (in module sympy.solvers.inequalities)": [[242, "sympy.solvers.inequalities.solve_poly_inequalities", false]], "solve_poly_inequality() (in module sympy.solvers.inequalities)": [[242, "sympy.solvers.inequalities.solve_poly_inequality", false]], "solve_poly_system() (in module sympy.solvers.polysys)": [[245, "sympy.solvers.polysys.solve_poly_system", false]], "solve_rational_inequalities() (in module sympy.solvers.inequalities)": [[242, "sympy.solvers.inequalities.solve_rational_inequalities", false]], "solve_riccati() (in module sympy.solvers.ode.riccati)": [[243, "sympy.solvers.ode.riccati.solve_riccati", false]], "solve_triangulated() (in module sympy.solvers.polysys)": [[245, "sympy.solvers.polysys.solve_triangulated", false]], "solve_undetermined_coeffs() (in module sympy.solvers.solvers)": [[245, "sympy.solvers.solvers.solve_undetermined_coeffs", false]], "solve_univariate_inequality() (in module sympy.solvers.inequalities)": [[242, "sympy.solvers.inequalities.solve_univariate_inequality", false]], "solvers": [[15, "term-Solvers", true]], "solveset() (in module sympy.solvers.solveset)": [[246, "sympy.solvers.solveset.solveset", false]], "solveset_complex() (in module sympy.solvers.solveset)": [[246, "sympy.solvers.solveset.solveset_complex", false]], "solveset_real() (in module sympy.solvers.solveset)": [[246, "sympy.solvers.solveset.solveset_real", false]], "solvify() (in module sympy.solvers.solveset)": [[246, "sympy.solvers.solveset.solvify", false]], "sopform() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.SOPform", false]], "sort_key() (sympy.combinatorics.partitions.partition method)": [[58, "sympy.combinatorics.partitions.Partition.sort_key", false]], "sort_key() (sympy.core.basic.basic method)": [[69, "sympy.core.basic.Basic.sort_key", false]], "sorted_components() (sympy.tensor.tensor.tensmul method)": [[253, "sympy.tensor.tensor.TensMul.sorted_components", false]], "source (sympy.geometry.line.ray property)": [[82, "sympy.geometry.line.Ray.source", false]], "spaceorienter (class in sympy.vector.orienters)": [[273, "sympy.vector.orienters.SpaceOrienter", false]], "spaces (sympy.physics.quantum.hilbert.directsumhilbertspace property)": [[178, "sympy.physics.quantum.hilbert.DirectSumHilbertSpace.spaces", false]], "spaces (sympy.physics.quantum.hilbert.tensorproducthilbertspace property)": [[178, "sympy.physics.quantum.hilbert.TensorProductHilbertSpace.spaces", false]], "sparsematrix (in module sympy.matrices.sparse)": [[107, "sympy.matrices.sparse.SparseMatrix", false]], "speed (sympy.physics.optics.medium.medium property)": [[163, "sympy.physics.optics.medium.Medium.speed", false]], "speed (sympy.physics.optics.waves.twave property)": [[166, "sympy.physics.optics.waves.TWave.speed", false]], "speeds (sympy.physics.mechanics.joint.joint property)": [[134, "sympy.physics.mechanics.joint.Joint.speeds", false]], "speeds (sympy.physics.mechanics.system.symbolicsystem property)": [[140, "sympy.physics.mechanics.system.SymbolicSystem.speeds", false]], "spherical_bessel_fn() (in module sympy.polys.orthopolys)": [[223, "sympy.polys.orthopolys.spherical_bessel_fn", false]], "sphericaljoint (class in sympy.physics.mechanics.joint)": [[134, "sympy.physics.mechanics.joint.SphericalJoint", false]], "spin() (sympy.geometry.polygon.regularpolygon method)": [[85, "sympy.geometry.polygon.RegularPolygon.spin", false]], "split() (sympy.tensor.tensor.tensmul method)": [[253, "sympy.tensor.tensor.TensMul.split", false]], "split_list() (in module sympy.testing.runtests)": [[258, "sympy.testing.runtests.split_list", false]], "split_super_sub() (in module sympy.printing.conventions)": [[227, "sympy.printing.conventions.split_super_sub", false]], "split_symbols() (in module sympy.parsing.sympy_parser)": [[111, "sympy.parsing.sympy_parser.split_symbols", false]], "split_symbols_custom() (in module sympy.parsing.sympy_parser)": [[111, "sympy.parsing.sympy_parser.split_symbols_custom", false]], "spoly() (in module sympy.polys.groebnertools)": [[220, "sympy.polys.groebnertools.spoly", false]], "sqf() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.sqf", false]], "sqf_list() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.sqf_list", false]], "sqf_list() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.sqf_list", false]], "sqf_list() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.sqf_list", false]], "sqf_list_include() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.sqf_list_include", false]], "sqf_list_include() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.sqf_list_include", false]], "sqf_norm() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.sqf_norm", false]], "sqf_norm() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.sqf_norm", false]], "sqf_norm() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.sqf_norm", false]], "sqf_normal() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.sqf_normal", false]], "sqf_part() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.sqf_part", false]], "sqf_part() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.sqf_part", false]], "sqf_part() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.sqf_part", false]], "sqr() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.sqr", false]], "sqr() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.sqr", false]], "sqrt (class in sympy.codegen.cfunctions)": [[50, "sympy.codegen.cfunctions.Sqrt", false]], "sqrt() (in module sympy.functions.elementary.miscellaneous)": [[75, "sympy.functions.elementary.miscellaneous.sqrt", false]], "sqrt() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.sqrt", false]], "sqrt() (sympy.polys.domains.gmpyintegerring method)": [[218, "sympy.polys.domains.GMPYIntegerRing.sqrt", false]], "sqrt() (sympy.polys.domains.integerring method)": [[218, "sympy.polys.domains.IntegerRing.sqrt", false]], "sqrt_mod() (in module sympy.ntheory.residue_ntheory)": [[109, "sympy.ntheory.residue_ntheory.sqrt_mod", false]], "sqrt_mod_iter() (in module sympy.ntheory.residue_ntheory)": [[109, "sympy.ntheory.residue_ntheory.sqrt_mod_iter", false]], "sqrtdenest() (in module sympy.simplify.sqrtdenest)": [[239, "sympy.simplify.sqrtdenest.sqrtdenest", false]], "square() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.square", false]], "square_factor() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.square_factor", false]], "squarepredicate (class in sympy.assumptions.predicates.matrices)": [[46, "sympy.assumptions.predicates.matrices.SquarePredicate", false]], "srepr() (in module sympy.printing.repr)": [[227, "sympy.printing.repr.srepr", false]], "sring() (in module sympy.polys.rings)": [[218, "sympy.polys.rings.sring", false]], "sstr() (in module sympy.printing.str)": [[227, "sympy.printing.str.sstr", false]], "sstrrepr() (in module sympy.printing.str)": [[227, "sympy.printing.str.sstrrepr", false]], "stabilizer() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.stabilizer", false]], "stack() (sympy.printing.pretty.stringpict.stringpict static method)": [[227, "sympy.printing.pretty.stringpict.stringPict.stack", false]], "standard_cartan (class in sympy.liealgebras.cartan_type)": [[98, "sympy.liealgebras.cartan_type.Standard_Cartan", false]], "standard_transformations (in module sympy.parsing.sympy_parser)": [[111, "sympy.parsing.sympy_parser.standard_transformations", false]], "start (sympy.series.sequences.recursiveseq property)": [[233, "sympy.series.sequences.RecursiveSeq.start", false]], "start (sympy.series.sequences.seqbase property)": [[233, "sympy.series.sequences.SeqBase.start", false]], "start (sympy.sets.sets.interval property)": [[235, "sympy.sets.sets.Interval.start", false]], "starts_with_unity() (sympy.polys.numberfields.modules.module method)": [[222, "sympy.polys.numberfields.modules.Module.starts_with_unity", false]], "state (class in sympy.physics.quantum.state)": [[190, "sympy.physics.quantum.state.State", false]], "state() (sympy.physics.secondquant.fixedbosonicbasis method)": [[192, "sympy.physics.secondquant.FixedBosonicBasis.state", false]], "state() (sympy.physics.secondquant.varbosonicbasis method)": [[192, "sympy.physics.secondquant.VarBosonicBasis.state", false]], "state_to_operators() (in module sympy.physics.quantum.operatorset)": [[182, "sympy.physics.quantum.operatorset.state_to_operators", false]], "state_vars (sympy.physics.biomechanics.activation.activationbase property)": [[112, "sympy.physics.biomechanics.activation.ActivationBase.state_vars", false]], "state_vars (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[112, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.state_vars", false]], "state_vars (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[112, "sympy.physics.biomechanics.activation.ZerothOrderActivation.state_vars", false]], "state_vars (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.state_vars", false]], "statebase (class in sympy.physics.quantum.state)": [[190, "sympy.physics.quantum.state.StateBase", false]], "states (sympy.physics.mechanics.system.symbolicsystem property)": [[140, "sympy.physics.mechanics.system.SymbolicSystem.states", false]], "stationary_distribution() (sympy.stats.discretemarkovchain method)": [[247, "sympy.stats.DiscreteMarkovChain.stationary_distribution", false]], "stationary_points() (in module sympy.calculus.util)": [[48, "sympy.calculus.util.stationary_points", false]], "std() (in module sympy.stats)": [[247, "sympy.stats.std", false]], "step_response_numerical_data() (sympy.physics.control.control_plots method)": [[123, "sympy.physics.control.control_plots.step_response_numerical_data", false]], "step_response_plot() (sympy.physics.control.control_plots method)": [[123, "sympy.physics.control.control_plots.step_response_plot", false]], "stieltjes (class in sympy.functions.special.zeta_functions)": [[77, "sympy.functions.special.zeta_functions.stieltjes", false]], "stiffness (sympy.physics.mechanics.actuator.linearspring property)": [[130, "sympy.physics.mechanics.actuator.LinearSpring.stiffness", false]], "stirling() (in module sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.stirling", false]], "stokes_vector() (in module sympy.physics.optics.polarization)": [[164, "sympy.physics.optics.polarization.stokes_vector", false]], "stop (sympy.series.sequences.recursiveseq property)": [[233, "sympy.series.sequences.RecursiveSeq.stop", false]], "stop (sympy.series.sequences.seqbase property)": [[233, "sympy.series.sequences.SeqBase.stop", false]], "stream (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.Stream", false]], "strict (sympy.core.relational.relational property)": [[69, "sympy.core.relational.Relational.strict", false]], "strictgreaterthan (class in sympy.core.relational)": [[69, "sympy.core.relational.StrictGreaterThan", false]], "strictlessthan (class in sympy.core.relational)": [[69, "sympy.core.relational.StrictLessThan", false]], "strides (sympy.tensor.indexed.indexedbase property)": [[252, "sympy.tensor.indexed.IndexedBase.strides", false]], "string (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.String", false]], "stringify_expr() (in module sympy.parsing.sympy_parser)": [[111, "sympy.parsing.sympy_parser.stringify_expr", false]], "stringpict (class in sympy.printing.pretty.stringpict)": [[227, "sympy.printing.pretty.stringpict.stringPict", false]], "strip_zero() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.strip_zero", false]], "strlines() (in module sympy.utilities.misc)": [[268, "sympy.utilities.misc.strlines", false]], "strong_gens (sympy.combinatorics.perm_groups.permutationgroup property)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.strong_gens", false]], "strong_presentation() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.strong_presentation", false]], "strongly_connected_components() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.strongly_connected_components", false]], "strongly_connected_components() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.strongly_connected_components", false]], "strongly_connected_components_decomposition() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.strongly_connected_components_decomposition", false]], "strprinter (class in sympy.printing.str)": [[227, "sympy.printing.str.StrPrinter", false]], "struct (class in sympy.codegen.cnodes)": [[50, "sympy.codegen.cnodes.struct", false]], "structural equality": [[15, "term-Structural-Equality", true]], "studentt() (in module sympy.stats)": [[247, "sympy.stats.StudentT", false]], "sturm() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.sturm", false]], "sturm() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.sturm", false]], "sturm() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.sturm", false]], "sub (in module sympy.printing.pretty.pretty_symbology)": [[227, "sympy.printing.pretty.pretty_symbology.sub", false]], "sub() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.sub", false]], "sub() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.sub", false]], "sub() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.sub", false]], "sub() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.sub", false]], "sub() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.sub", false]], "sub() (sympy.polys.polyclasses.dmf method)": [[218, "sympy.polys.polyclasses.DMF.sub", false]], "sub() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.sub", false]], "sub() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.sub", false]], "sub_ground() (sympy.polys.polyclasses.anp method)": [[218, "sympy.polys.polyclasses.ANP.sub_ground", false]], "sub_ground() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.sub_ground", false]], "sub_ground() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.sub_ground", false]], "subdiagram_from_objects() (sympy.categories.diagram method)": [[49, "sympy.categories.Diagram.subdiagram_from_objects", false]], "subexpression": [[15, "term-Subexpression", true]], "subfactorial (class in sympy.functions.combinatorial.factorials)": [[74, "sympy.functions.combinatorial.factorials.subfactorial", false]], "subgroup() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.subgroup", false]], "subgroup_search() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.subgroup_search", false]], "submodule (class in sympy.polys.agca.modules)": [[214, "sympy.polys.agca.modules.SubModule", false]], "submodule (class in sympy.polys.numberfields.modules)": [[222, "sympy.polys.numberfields.modules.Submodule", false]], "submodule() (sympy.polys.agca.modules.module method)": [[214, "sympy.polys.agca.modules.Module.submodule", false]], "submodule() (sympy.polys.agca.modules.quotientmodule method)": [[214, "sympy.polys.agca.modules.QuotientModule.submodule", false]], "submodule() (sympy.polys.agca.modules.submodule method)": [[214, "sympy.polys.agca.modules.SubModule.submodule", false]], "submodule_from_gens() (sympy.polys.numberfields.modules.module method)": [[222, "sympy.polys.numberfields.modules.Module.submodule_from_gens", false]], "submodule_from_matrix() (sympy.polys.numberfields.modules.module method)": [[222, "sympy.polys.numberfields.modules.Module.submodule_from_matrix", false]], "subquotientmodule (class in sympy.polys.agca.modules)": [[214, "sympy.polys.agca.modules.SubQuotientModule", false]], "subresultants() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.subresultants", false]], "subresultants() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.subresultants", false]], "subresultants() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.subresultants", false]], "subresultants() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.subresultants", false]], "subroutine (class in sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.Subroutine", false]], "subroutinecall (class in sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.SubroutineCall", false]], "subs (class in sympy.core.function)": [[69, "sympy.core.function.Subs", false]], "subs() (sympy.core.basic.basic method)": [[69, "sympy.core.basic.Basic.subs", false]], "subs() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.subs", false]], "subs() (sympy.physics.vector.dyadic.dyadic method)": [[202, "sympy.physics.vector.dyadic.Dyadic.subs", false]], "subs() (sympy.physics.vector.vector.vector method)": [[202, "sympy.physics.vector.vector.Vector.subs", false]], "subset (class in sympy.combinatorics.subsets)": [[64, "sympy.combinatorics.subsets.Subset", false]], "subset (sympy.combinatorics.subsets.subset property)": [[64, "sympy.combinatorics.subsets.Subset.subset", false]], "subset() (sympy.polys.agca.ideals.ideal method)": [[214, "sympy.polys.agca.ideals.Ideal.subset", false]], "subset() (sympy.polys.agca.modules.module method)": [[214, "sympy.polys.agca.modules.Module.subset", false]], "subset_from_bitlist() (sympy.combinatorics.subsets.subset class method)": [[64, "sympy.combinatorics.subsets.Subset.subset_from_bitlist", false]], "subset_indices() (sympy.combinatorics.subsets.subset class method)": [[64, "sympy.combinatorics.subsets.Subset.subset_indices", false]], "subsets() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.subsets", false]], "subsset (class in sympy.series.gruntz)": [[234, "sympy.series.gruntz.SubsSet", false]], "substitute_dummies() (in module sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.substitute_dummies", false]], "substitution": [[15, "term-Substitution", true]], "sum (class in sympy.concrete.summations)": [[68, "sympy.concrete.summations.Sum", false]], "sum_of_four_squares() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.sum_of_four_squares", false]], "sum_of_powers() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.sum_of_powers", false]], "sum_of_squares() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.sum_of_squares", false]], "sum_of_three_squares() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.sum_of_three_squares", false]], "sumapprox (class in sympy.codegen.approximations)": [[50, "sympy.codegen.approximations.SumApprox", false]], "summation() (in module sympy.concrete.summations)": [[68, "sympy.concrete.summations.summation", false]], "sup (in module sympy.printing.pretty.pretty_symbology)": [[227, "sympy.printing.pretty.pretty_symbology.sup", false]], "sup (sympy.sets.sets.set property)": [[235, "sympy.sets.sets.Set.sup", false]], "superposition_basis() (in module sympy.physics.quantum.grover)": [[177, "sympy.physics.quantum.grover.superposition_basis", false]], "superset (sympy.combinatorics.subsets.subset property)": [[64, "sympy.combinatorics.subsets.Subset.superset", false]], "superset_size (sympy.combinatorics.subsets.subset property)": [[64, "sympy.combinatorics.subsets.Subset.superset_size", false]], "supplement_a_subspace() (in module sympy.polys.numberfields.utilities)": [[222, "sympy.polys.numberfields.utilities.supplement_a_subspace", false]], "support() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.support", false]], "supports (sympy.physics.continuum_mechanics.cable.cable property)": [[119, "sympy.physics.continuum_mechanics.cable.Cable.supports", false]], "supports (sympy.physics.continuum_mechanics.truss.truss property)": [[121, "sympy.physics.continuum_mechanics.truss.Truss.supports", false]], "surfacebaseseries (class in sympy.plotting.series)": [[213, "sympy.plotting.series.SurfaceBaseSeries", false]], "surfaceover2drangeseries (class in sympy.plotting.series)": [[213, "sympy.plotting.series.SurfaceOver2DRangeSeries", false]], "swap (in module sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.SWAP", false]], "swap_point() (sympy.physics.quantum.circuitplot.circuitplot method)": [[172, "sympy.physics.quantum.circuitplot.CircuitPlot.swap_point", false]], "swapgate (class in sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.SwapGate", false]], "swinnerton_dyer_poly() (in module sympy.polys.specialpolys)": [[223, "sympy.polys.specialpolys.swinnerton_dyer_poly", false]], "sylow_subgroup() (sympy.combinatorics.perm_groups.permutationgroup method)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.sylow_subgroup", false]], "symarray() (in module sympy.matrices.dense)": [[105, "sympy.matrices.dense.symarray", false]], "symb_2txt (in module sympy.printing.pretty.pretty_symbology)": [[227, "sympy.printing.pretty.pretty_symbology.symb_2txt", false]], "symbol": [[15, "term-Symbol", true]], "symbol (class in sympy.core.symbol)": [[69, "sympy.core.symbol.Symbol", false]], "symbol (sympy.physics.secondquant.antisymmetrictensor property)": [[192, "sympy.physics.secondquant.AntiSymmetricTensor.symbol", false]], "symbolic": [[15, "term-Symbolic", true]], "symbolicsystem (class in sympy.physics.mechanics.system)": [[140, "sympy.physics.mechanics.system.SymbolicSystem", false]], "symbols() (in module sympy.core.symbol)": [[69, "sympy.core.symbol.symbols", false]], "symmetric() (sympy.combinatorics.generators method)": [[61, "sympy.combinatorics.generators.symmetric", false]], "symmetric_difference() (sympy.sets.sets.set method)": [[235, "sympy.sets.sets.Set.symmetric_difference", false]], "symmetric_poly() (in module sympy.polys.specialpolys)": [[223, "sympy.polys.specialpolys.symmetric_poly", false]], "symmetric_poly() (sympy.polys.rings.polyring method)": [[218, "sympy.polys.rings.PolyRing.symmetric_poly", false]], "symmetric_residue() (in module sympy.ntheory.modular)": [[109, "sympy.ntheory.modular.symmetric_residue", false]], "symmetricdifference (class in sympy.sets.sets)": [[235, "sympy.sets.sets.SymmetricDifference", false]], "symmetricgroup() (in module sympy.combinatorics.named_groups)": [[57, "sympy.combinatorics.named_groups.SymmetricGroup", false]], "symmetricpredicate (class in sympy.assumptions.predicates.matrices)": [[46, "sympy.assumptions.predicates.matrices.SymmetricPredicate", false]], "symmetrize() (in module sympy.polys.polyfuncs)": [[223, "sympy.polys.polyfuncs.symmetrize", false]], "symmetrize() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.symmetrize", false]], "sympify()": [[15, "term-sympify", true]], "sympify() (in module sympy.core.sympify)": [[69, "sympy.core.sympify.sympify", false]], "sympy": [[39, "module-sympy", false]], "sympy.abc": [[41, "module-sympy.abc", false]], "sympy.algebras": [[42, "module-sympy.algebras", false]], "sympy.assumptions": [[45, "module-sympy.assumptions", false]], "sympy.assumptions.ask": [[43, "module-sympy.assumptions.ask", false]], "sympy.assumptions.assume": [[44, "module-sympy.assumptions.assume", false]], "sympy.assumptions.predicates": [[46, "module-sympy.assumptions.predicates", false]], "sympy.assumptions.refine": [[47, "module-sympy.assumptions.refine", false]], "sympy.calculus": [[48, "module-sympy.calculus", false]], "sympy.calculus.euler": [[48, "module-sympy.calculus.euler", false]], "sympy.calculus.finite_diff": [[48, "module-sympy.calculus.finite_diff", false]], "sympy.calculus.singularities": [[48, "module-sympy.calculus.singularities", false]], "sympy.calculus.util": [[48, "module-sympy.calculus.util", false]], "sympy.categories": [[49, "module-sympy.categories", false]], "sympy.categories.diagram_drawing": [[49, "module-sympy.categories.diagram_drawing", false]], "sympy.codegen.algorithms": [[50, "module-sympy.codegen.algorithms", false]], "sympy.codegen.approximations": [[50, "module-sympy.codegen.approximations", false]], "sympy.codegen.ast": [[50, "module-sympy.codegen.ast", false]], "sympy.codegen.cfunctions": [[50, "module-sympy.codegen.cfunctions", false]], "sympy.codegen.cnodes": [[50, "module-sympy.codegen.cnodes", false]], "sympy.codegen.cutils": [[50, "module-sympy.codegen.cutils", false]], "sympy.codegen.cxxnodes": [[50, "module-sympy.codegen.cxxnodes", false]], "sympy.codegen.fnodes": [[50, "module-sympy.codegen.fnodes", false]], "sympy.codegen.futils": [[50, "module-sympy.codegen.futils", false]], "sympy.codegen.matrix_nodes": [[50, "module-sympy.codegen.matrix_nodes", false]], "sympy.codegen.pyutils": [[50, "module-sympy.codegen.pyutils", false]], "sympy.codegen.rewriting": [[50, "module-sympy.codegen.rewriting", false]], "sympy.combinatorics.galois": [[52, "module-sympy.combinatorics.galois", false]], "sympy.combinatorics.generators": [[61, "module-sympy.combinatorics.generators", false]], "sympy.combinatorics.graycode": [[53, "module-sympy.combinatorics.graycode", false]], "sympy.combinatorics.group_constructs": [[54, "module-sympy.combinatorics.group_constructs", false]], "sympy.combinatorics.group_numbers": [[55, "module-sympy.combinatorics.group_numbers", false]], "sympy.combinatorics.named_groups": [[57, "module-sympy.combinatorics.named_groups", false]], "sympy.combinatorics.partitions": [[58, "module-sympy.combinatorics.partitions", false]], "sympy.combinatorics.perm_groups": [[60, "module-sympy.combinatorics.perm_groups", false]], "sympy.combinatorics.permutations": [[61, "module-sympy.combinatorics.permutations", false]], "sympy.combinatorics.polyhedron": [[62, "module-sympy.combinatorics.polyhedron", false]], "sympy.combinatorics.prufer": [[63, "module-sympy.combinatorics.prufer", false]], "sympy.combinatorics.subsets": [[64, "module-sympy.combinatorics.subsets", false]], "sympy.combinatorics.tensor_can": [[65, "module-sympy.combinatorics.tensor_can", false]], "sympy.combinatorics.testutil": [[66, "module-sympy.combinatorics.testutil", false]], "sympy.combinatorics.util": [[67, "module-sympy.combinatorics.util", false]], "sympy.core.add": [[69, "module-sympy.core.add", false]], "sympy.core.assumptions": [[69, "module-sympy.core.assumptions", false]], "sympy.core.basic": [[69, "module-sympy.core.basic", false]], "sympy.core.cache": [[69, "module-sympy.core.cache", false]], "sympy.core.containers": [[69, "module-sympy.core.containers", false]], "sympy.core.evalf": [[69, "module-sympy.core.evalf", false]], "sympy.core.expr": [[69, "module-sympy.core.expr", false]], "sympy.core.exprtools": [[69, "module-sympy.core.exprtools", false]], "sympy.core.function": [[69, "module-sympy.core.function", false]], "sympy.core.intfunc": [[69, "module-sympy.core.intfunc", false]], "sympy.core.kind": [[69, "module-sympy.core.kind", false]], "sympy.core.mod": [[69, "module-sympy.core.mod", false]], "sympy.core.mul": [[69, "module-sympy.core.mul", false]], "sympy.core.multidimensional": [[69, "module-sympy.core.multidimensional", false]], "sympy.core.numbers": [[69, "module-sympy.core.numbers", false]], "sympy.core.power": [[69, "module-sympy.core.power", false]], "sympy.core.random": [[69, "module-sympy.core.random", false]], "sympy.core.relational": [[69, "module-sympy.core.relational", false]], "sympy.core.singleton": [[69, "module-sympy.core.singleton", false]], "sympy.core.symbol": [[69, "module-sympy.core.symbol", false]], "sympy.core.sympify": [[69, "module-sympy.core.sympify", false]], "sympy.core.traversal": [[69, "module-sympy.core.traversal", false]], "sympy.crypto.crypto": [[70, "module-sympy.crypto.crypto", false]], "sympy.diffgeom": [[71, "module-sympy.diffgeom", false]], "sympy.discrete": [[72, "module-sympy.discrete", false]], "sympy.discrete.convolutions": [[72, "module-sympy.discrete.convolutions", false]], "sympy.discrete.transforms": [[72, "module-sympy.discrete.transforms", false]], "sympy.functions": [[76, "module-sympy.functions", false]], "sympy.functions.special.bessel": [[77, "module-sympy.functions.special.bessel", false]], "sympy.functions.special.beta_functions": [[77, "module-sympy.functions.special.beta_functions", false]], "sympy.functions.special.elliptic_integrals": [[77, "module-sympy.functions.special.elliptic_integrals", false]], "sympy.functions.special.error_functions": [[77, "module-sympy.functions.special.error_functions", false]], "sympy.functions.special.gamma_functions": [[77, "module-sympy.functions.special.gamma_functions", false]], "sympy.functions.special.mathieu_functions": [[77, "module-sympy.functions.special.mathieu_functions", false]], "sympy.functions.special.polynomials": [[77, "module-sympy.functions.special.polynomials", false]], "sympy.functions.special.singularity_functions": [[77, "module-sympy.functions.special.singularity_functions", false]], "sympy.functions.special.zeta_functions": [[77, "module-sympy.functions.special.zeta_functions", false]], "sympy.geometry.curve": [[78, "module-sympy.geometry.curve", false]], "sympy.geometry.ellipse": [[79, "module-sympy.geometry.ellipse", false]], "sympy.geometry.entity": [[80, "module-sympy.geometry.entity", false]], "sympy.geometry.line": [[82, "module-sympy.geometry.line", false]], "sympy.geometry.plane": [[83, "module-sympy.geometry.plane", false]], "sympy.geometry.point": [[84, "module-sympy.geometry.point", false]], "sympy.geometry.polygon": [[85, "module-sympy.geometry.polygon", false]], "sympy.geometry.util": [[86, "module-sympy.geometry.util", false]], "sympy.holonomic": [[89, "module-sympy.holonomic", false]], "sympy.integrals": [[96, "module-sympy.integrals", false]], "sympy.integrals.intpoly": [[96, "module-sympy.integrals.intpoly", false]], "sympy.integrals.meijerint": [[94, "module-sympy.integrals.meijerint", false]], "sympy.integrals.meijerint_doc": [[94, "module-sympy.integrals.meijerint_doc", false]], "sympy.integrals.transforms": [[96, "module-sympy.integrals.transforms", false]], "sympy.interactive": [[97, "module-sympy.interactive", false]], "sympy.interactive.printing": [[97, "module-sympy.interactive.printing", false]], "sympy.interactive.session": [[97, "module-sympy.interactive.session", false]], "sympy.liealgebras": [[98, "module-sympy.liealgebras", false]], "sympy.logic": [[99, "module-sympy.logic", false]], "sympy.logic.inference": [[99, "module-sympy.logic.inference", false]], "sympy.matrices": [[103, "module-sympy.matrices", false]], "sympy.matrices.expressions": [[101, "module-sympy.matrices.expressions", false]], "sympy.matrices.expressions.blockmatrix": [[101, "module-sympy.matrices.expressions.blockmatrix", false]], "sympy.matrices.immutable": [[102, "module-sympy.matrices.immutable", false]], "sympy.matrices.kind": [[104, "module-sympy.matrices.kind", false]], "sympy.matrices.matrixbase": [[105, "module-sympy.matrices.matrixbase", false]], "sympy.matrices.sparse": [[107, "module-sympy.matrices.sparse", false]], "sympy.matrices.sparsetools": [[108, "module-sympy.matrices.sparsetools", false]], "sympy.ntheory.bbp_pi": [[109, "module-sympy.ntheory.bbp_pi", false]], "sympy.ntheory.continued_fraction": [[109, "module-sympy.ntheory.continued_fraction", false]], "sympy.ntheory.digits": [[109, "module-sympy.ntheory.digits", false]], "sympy.ntheory.ecm": [[109, "module-sympy.ntheory.ecm", false]], "sympy.ntheory.egyptian_fraction": [[109, "module-sympy.ntheory.egyptian_fraction", false]], "sympy.ntheory.factor_": [[109, "module-sympy.ntheory.factor_", false]], "sympy.ntheory.generate": [[109, "module-sympy.ntheory.generate", false]], "sympy.ntheory.modular": [[109, "module-sympy.ntheory.modular", false]], "sympy.ntheory.multinomial": [[109, "module-sympy.ntheory.multinomial", false]], "sympy.ntheory.partitions_": [[109, "module-sympy.ntheory.partitions_", false]], "sympy.ntheory.primetest": [[109, "module-sympy.ntheory.primetest", false]], "sympy.ntheory.qs": [[109, "module-sympy.ntheory.qs", false]], "sympy.ntheory.residue_ntheory": [[109, "module-sympy.ntheory.residue_ntheory", false]], "sympy.parsing": [[111, "module-sympy.parsing", false]], "sympy.parsing.sym_expr": [[111, "module-sympy.parsing.sym_expr", false]], "sympy.physics": [[288, "module-sympy.physics", false]], "sympy.physics.biomechanics": [[116, "module-sympy.physics.biomechanics", false]], "sympy.physics.biomechanics.activation": [[112, "module-sympy.physics.biomechanics.activation", false]], "sympy.physics.biomechanics.curve": [[113, "module-sympy.physics.biomechanics.curve", false]], "sympy.physics.biomechanics.musculotendon": [[115, "module-sympy.physics.biomechanics.musculotendon", false]], "sympy.physics.continuum_mechanics.beam": [[117, "module-sympy.physics.continuum_mechanics.beam", false]], "sympy.physics.continuum_mechanics.cable": [[119, "module-sympy.physics.continuum_mechanics.cable", false]], "sympy.physics.continuum_mechanics.truss": [[121, "module-sympy.physics.continuum_mechanics.truss", false]], "sympy.physics.control": [[124, "module-sympy.physics.control", false]], "sympy.physics.control.lti": [[125, "module-sympy.physics.control.lti", false]], "sympy.physics.hep.gamma_matrices": [[126, "module-sympy.physics.hep.gamma_matrices", false]], "sympy.physics.hydrogen": [[127, "module-sympy.physics.hydrogen", false]], "sympy.physics.matrices": [[128, "module-sympy.physics.matrices", false]], "sympy.physics.mechanics": [[152, "module-sympy.physics.mechanics", false]], "sympy.physics.mechanics.actuator": [[130, "module-sympy.physics.mechanics.actuator", false]], "sympy.physics.mechanics.joint": [[134, "module-sympy.physics.mechanics.joint", false]], "sympy.physics.mechanics.kane": [[135, "module-sympy.physics.mechanics.kane", false]], "sympy.physics.mechanics.lagrange": [[135, "module-sympy.physics.mechanics.lagrange", false]], "sympy.physics.mechanics.linearize": [[136, "module-sympy.physics.mechanics.linearize", false]], "sympy.physics.mechanics.pathway": [[138, "module-sympy.physics.mechanics.pathway", false]], "sympy.physics.mechanics.wrapping_geometry": [[141, "module-sympy.physics.mechanics.wrapping_geometry", false]], "sympy.physics.optics.gaussopt": [[161, "module-sympy.physics.optics.gaussopt", false]], "sympy.physics.optics.medium": [[163, "module-sympy.physics.optics.medium", false]], "sympy.physics.optics.polarization": [[164, "module-sympy.physics.optics.polarization", false]], "sympy.physics.optics.utils": [[165, "module-sympy.physics.optics.utils", false]], "sympy.physics.optics.waves": [[166, "module-sympy.physics.optics.waves", false]], "sympy.physics.paulialgebra": [[167, "module-sympy.physics.paulialgebra", false]], "sympy.physics.qho_1d": [[168, "module-sympy.physics.qho_1d", false]], "sympy.physics.quantum.anticommutator": [[169, "module-sympy.physics.quantum.anticommutator", false]], "sympy.physics.quantum.cartesian": [[170, "module-sympy.physics.quantum.cartesian", false]], "sympy.physics.quantum.cg": [[171, "module-sympy.physics.quantum.cg", false]], "sympy.physics.quantum.circuitplot": [[172, "module-sympy.physics.quantum.circuitplot", false]], "sympy.physics.quantum.commutator": [[173, "module-sympy.physics.quantum.commutator", false]], "sympy.physics.quantum.constants": [[174, "module-sympy.physics.quantum.constants", false]], "sympy.physics.quantum.dagger": [[175, "module-sympy.physics.quantum.dagger", false]], "sympy.physics.quantum.gate": [[176, "module-sympy.physics.quantum.gate", false]], "sympy.physics.quantum.grover": [[177, "module-sympy.physics.quantum.grover", false]], "sympy.physics.quantum.hilbert": [[178, "module-sympy.physics.quantum.hilbert", false]], "sympy.physics.quantum.innerproduct": [[180, "module-sympy.physics.quantum.innerproduct", false]], "sympy.physics.quantum.operator": [[181, "module-sympy.physics.quantum.operator", false]], "sympy.physics.quantum.operatorset": [[182, "module-sympy.physics.quantum.operatorset", false]], "sympy.physics.quantum.piab": [[183, "module-sympy.physics.quantum.piab", false]], "sympy.physics.quantum.qapply": [[184, "module-sympy.physics.quantum.qapply", false]], "sympy.physics.quantum.qft": [[185, "module-sympy.physics.quantum.qft", false]], "sympy.physics.quantum.qubit": [[186, "module-sympy.physics.quantum.qubit", false]], "sympy.physics.quantum.represent": [[187, "module-sympy.physics.quantum.represent", false]], "sympy.physics.quantum.shor": [[188, "module-sympy.physics.quantum.shor", false]], "sympy.physics.quantum.spin": [[189, "module-sympy.physics.quantum.spin", false]], "sympy.physics.quantum.state": [[190, "module-sympy.physics.quantum.state", false]], "sympy.physics.quantum.tensorproduct": [[191, "module-sympy.physics.quantum.tensorproduct", false]], "sympy.physics.secondquant": [[192, "module-sympy.physics.secondquant", false]], "sympy.physics.sho": [[193, "module-sympy.physics.sho", false]], "sympy.physics.units.dimensions": [[194, "module-sympy.physics.units.dimensions", false]], "sympy.physics.units.prefixes": [[198, "module-sympy.physics.units.prefixes", false]], "sympy.physics.units.quantities": [[199, "module-sympy.physics.units.quantities", false]], "sympy.physics.units.unitsystem": [[200, "module-sympy.physics.units.unitsystem", false]], "sympy.physics.units.util": [[199, "module-sympy.physics.units.util", false]], "sympy.physics.vector": [[209, "module-sympy.physics.vector", false]], "sympy.physics.vector.functions": [[206, "module-sympy.physics.vector.functions", false]], "sympy.physics.vector.point": [[206, "module-sympy.physics.vector.point", false]], "sympy.physics.wigner": [[212, "module-sympy.physics.wigner", false]], "sympy.plotting.plot": [[213, "module-sympy.plotting.plot", false]], "sympy.plotting.pygletplot": [[213, "module-sympy.plotting.pygletplot", false]], "sympy.polys": [[223, "module-sympy.polys", false]], "sympy.polys.matrices._dfm": [[216, "module-sympy.polys.matrices._dfm", false]], "sympy.polys.matrices._typing": [[216, "module-sympy.polys.matrices._typing", false]], "sympy.polys.matrices.ddm": [[216, "module-sympy.polys.matrices.ddm", false]], "sympy.polys.matrices.dense": [[216, "module-sympy.polys.matrices.dense", false]], "sympy.polys.matrices.domainmatrix": [[216, "module-sympy.polys.matrices.domainmatrix", false]], "sympy.polys.matrices.sdm": [[216, "module-sympy.polys.matrices.sdm", false]], "sympy.polys.numberfields.modules": [[222, "module-sympy.polys.numberfields.modules", false]], "sympy.polys.numberfields.subfield": [[222, "module-sympy.polys.numberfields.subfield", false]], "sympy.polys.polyconfig": [[220, "module-sympy.polys.polyconfig", false]], "sympy.polys.polyoptions": [[220, "module-sympy.polys.polyoptions", false]], "sympy.polys.solvers": [[225, "module-sympy.polys.solvers", false]], "sympy.printing.aesaracode": [[227, "module-sympy.printing.aesaracode", false]], "sympy.printing.c": [[227, "module-sympy.printing.c", false]], "sympy.printing.codeprinter": [[227, "module-sympy.printing.codeprinter", false]], "sympy.printing.conventions": [[227, "module-sympy.printing.conventions", false]], "sympy.printing.cxx": [[227, "module-sympy.printing.cxx", false]], "sympy.printing.fortran": [[227, "module-sympy.printing.fortran", false]], "sympy.printing.gtk": [[227, "module-sympy.printing.gtk", false]], "sympy.printing.jscode": [[227, "module-sympy.printing.jscode", false]], "sympy.printing.julia": [[227, "module-sympy.printing.julia", false]], "sympy.printing.lambdarepr": [[227, "module-sympy.printing.lambdarepr", false]], "sympy.printing.latex": [[227, "module-sympy.printing.latex", false]], "sympy.printing.maple": [[227, "module-sympy.printing.maple", false]], "sympy.printing.mathematica": [[227, "module-sympy.printing.mathematica", false]], "sympy.printing.mathml": [[227, "module-sympy.printing.mathml", false]], "sympy.printing.octave": [[227, "module-sympy.printing.octave", false]], "sympy.printing.precedence": [[227, "module-sympy.printing.precedence", false]], "sympy.printing.pretty": [[227, "module-sympy.printing.pretty", false]], "sympy.printing.pretty.pretty": [[227, "module-sympy.printing.pretty.pretty", false]], "sympy.printing.pretty.pretty_symbology": [[227, "module-sympy.printing.pretty.pretty_symbology", false]], "sympy.printing.pretty.stringpict": [[227, "module-sympy.printing.pretty.stringpict", false]], "sympy.printing.preview": [[227, "module-sympy.printing.preview", false]], "sympy.printing.printer": [[227, "module-sympy.printing.printer", false]], "sympy.printing.pycode": [[227, "module-sympy.printing.pycode", false]], "sympy.printing.python": [[227, "module-sympy.printing.python", false]], "sympy.printing.rcode": [[227, "module-sympy.printing.rcode", false]], "sympy.printing.repr": [[227, "module-sympy.printing.repr", false]], "sympy.printing.rust": [[227, "module-sympy.printing.rust", false]], "sympy.printing.smtlib": [[227, "module-sympy.printing.smtlib", false]], "sympy.printing.str": [[227, "module-sympy.printing.str", false]], "sympy.printing.tree": [[227, "module-sympy.printing.tree", false]], "sympy.sets.conditionset": [[235, "module-sympy.sets.conditionset", false]], "sympy.sets.fancysets": [[235, "module-sympy.sets.fancysets", false]], "sympy.sets.powerset": [[235, "module-sympy.sets.powerset", false]], "sympy.sets.sets": [[235, "module-sympy.sets.sets", false]], "sympy.simplify.combsimp": [[239, "module-sympy.simplify.combsimp", false]], "sympy.simplify.cse_main": [[239, "module-sympy.simplify.cse_main", false]], "sympy.simplify.epathtools": [[239, "module-sympy.simplify.epathtools", false]], "sympy.simplify.fu": [[236, "module-sympy.simplify.fu", false]], "sympy.simplify.hyperexpand": [[239, "module-sympy.simplify.hyperexpand", false]], "sympy.simplify.hyperexpand_doc": [[237, "module-sympy.simplify.hyperexpand_doc", false]], "sympy.simplify.powsimp": [[239, "module-sympy.simplify.powsimp", false]], "sympy.simplify.radsimp": [[239, "module-sympy.simplify.radsimp", false]], "sympy.simplify.ratsimp": [[239, "module-sympy.simplify.ratsimp", false]], "sympy.simplify.simplify": [[16, "module-sympy.simplify.simplify", false]], "sympy.simplify.sqrtdenest": [[239, "module-sympy.simplify.sqrtdenest", false]], "sympy.simplify.trigsimp": [[239, "module-sympy.simplify.trigsimp", false]], "sympy.solvers": [[245, "module-sympy.solvers", false]], "sympy.solvers.inequalities": [[242, "module-sympy.solvers.inequalities", false]], "sympy.solvers.ode": [[243, "module-sympy.solvers.ode", false]], "sympy.solvers.ode.ode": [[243, "module-sympy.solvers.ode.ode", false]], "sympy.solvers.pde": [[244, "module-sympy.solvers.pde", false]], "sympy.solvers.recurr": [[245, "module-sympy.solvers.recurr", false]], "sympy.solvers.simplex": [[245, "module-sympy.solvers.simplex", false]], "sympy.solvers.solveset": [[246, "module-sympy.solvers.solveset", false]], "sympy.stats": [[247, "module-sympy.stats", false]], "sympy.stats.crv": [[247, "module-sympy.stats.crv", false]], "sympy.stats.crv_types": [[247, "module-sympy.stats.crv_types", false]], "sympy.stats.die() (in module sympy.stats.crv_types)": [[247, "sympy.stats.crv_types.sympy.stats.Die", false]], "sympy.stats.frv": [[247, "module-sympy.stats.frv", false]], "sympy.stats.frv_types": [[247, "module-sympy.stats.frv_types", false]], "sympy.stats.normal() (in module sympy.stats.crv_types)": [[247, "sympy.stats.crv_types.sympy.stats.Normal", false]], "sympy.stats.rv": [[247, "module-sympy.stats.rv", false]], "sympy.tensor": [[250, "module-sympy.tensor", false]], "sympy.tensor.array": [[248, "module-sympy.tensor.array", false]], "sympy.tensor.array.expressions": [[249, "module-sympy.tensor.array.expressions", false]], "sympy.tensor.index_methods": [[251, "module-sympy.tensor.index_methods", false]], "sympy.tensor.indexed": [[252, "module-sympy.tensor.indexed", false]], "sympy.tensor.tensor": [[253, "module-sympy.tensor.tensor", false]], "sympy.tensor.toperators": [[254, "module-sympy.tensor.toperators", false]], "sympy.testing": [[255, "module-sympy.testing", false]], "sympy.testing.pytest": [[256, "module-sympy.testing.pytest", false]], "sympy.testing.randtest": [[257, "module-sympy.testing.randtest", false]], "sympy.testing.runtests": [[258, "module-sympy.testing.runtests", false]], "sympy.utilities": [[264, "module-sympy.utilities", false]], "sympy.utilities.autowrap": [[259, "module-sympy.utilities.autowrap", false]], "sympy.utilities.codegen": [[260, "module-sympy.utilities.codegen", false]], "sympy.utilities.decorator": [[261, "module-sympy.utilities.decorator", false]], "sympy.utilities.enumerative": [[262, "module-sympy.utilities.enumerative", false]], "sympy.utilities.exceptions": [[263, "module-sympy.utilities.exceptions", false]], "sympy.utilities.iterables": [[265, "module-sympy.utilities.iterables", false]], "sympy.utilities.lambdify": [[266, "module-sympy.utilities.lambdify", false]], "sympy.utilities.memoization": [[267, "module-sympy.utilities.memoization", false]], "sympy.utilities.misc": [[268, "module-sympy.utilities.misc", false]], "sympy.utilities.source": [[269, "module-sympy.utilities.source", false]], "sympy.utilities.timeutils": [[270, "module-sympy.utilities.timeutils", false]], "sympy.vector": [[279, "module-sympy.vector", false]], "sympy_deprecation_warning() (in module sympy.utilities.exceptions)": [[263, "sympy.utilities.exceptions.sympy_deprecation_warning", false]], "sympy_eqs_to_ring() (in module sympy.polys.solvers)": [[225, "sympy.polys.solvers.sympy_eqs_to_ring", false]], "sympydeprecationwarning": [[263, "sympy.utilities.exceptions.SymPyDeprecationWarning", false]], "sympydoctestfinder (class in sympy.testing.runtests)": [[258, "sympy.testing.runtests.SymPyDocTestFinder", false]], "sympydoctestrunner (class in sympy.testing.runtests)": [[258, "sympy.testing.runtests.SymPyDocTestRunner", false]], "sympyexpression (class in sympy.parsing.sym_expr)": [[111, "sympy.parsing.sym_expr.SymPyExpression", false]], "sympyoutputchecker (class in sympy.testing.runtests)": [[258, "sympy.testing.runtests.SymPyOutputChecker", false]], "sympytestfile() (in module sympy.testing.runtests)": [[258, "sympy.testing.runtests.sympytestfile", false]], "sympytestresults (class in sympy.testing.runtests)": [[258, "sympy.testing.runtests.SymPyTestResults", false]], "sys1 (sympy.physics.control.lti.feedback property)": [[125, "sympy.physics.control.lti.Feedback.sys1", false]], "sys1 (sympy.physics.control.lti.mimofeedback property)": [[125, "sympy.physics.control.lti.MIMOFeedback.sys1", false]], "sys2 (sympy.physics.control.lti.feedback property)": [[125, "sympy.physics.control.lti.Feedback.sys2", false]], "sys2 (sympy.physics.control.lti.mimofeedback property)": [[125, "sympy.physics.control.lti.MIMOFeedback.sys2", false]], "system (class in sympy.physics.mechanics.system)": [[140, "sympy.physics.mechanics.system.System", false]], "syzygy_module() (sympy.polys.agca.modules.submodule method)": [[214, "sympy.polys.agca.modules.SubModule.syzygy_module", false]], "t (class in sympy.polys.matrices.dense)": [[216, "sympy.polys.matrices.dense.T", false]], "t (in module sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.T", false]], "t (sympy.matrices.expressions.matrixexpr property)": [[101, "sympy.matrices.expressions.MatrixExpr.T", false]], "t (sympy.matrices.matrixbase.matrixbase property)": [[105, "sympy.matrices.matrixbase.MatrixBase.T", false]], "t (sympy.physics.quantum.shor.cmod property)": [[188, "sympy.physics.quantum.shor.CMod.t", false]], "t (sympy.polys.numberfields.modules.powerbasiselement property)": [[222, "sympy.polys.numberfields.modules.PowerBasisElement.T", false]], "table() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.table", false]], "tail_degree() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.tail_degree", false]], "tail_degrees() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.tail_degrees", false]], "take() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.take", false]], "tan (class in sympy.functions.elementary.trigonometric)": [[75, "sympy.functions.elementary.trigonometric.tan", false]], "tangent_lines() (sympy.geometry.ellipse.ellipse method)": [[79, "sympy.geometry.ellipse.Ellipse.tangent_lines", false]], "tanh (class in sympy.functions.elementary.hyperbolic)": [[75, "sympy.functions.elementary.hyperbolic.tanh", false]], "target_frame (sympy.physics.mechanics.actuator.torqueactuator property)": [[130, "sympy.physics.mechanics.actuator.TorqueActuator.target_frame", false]], "targets (sympy.physics.quantum.gate.cgate property)": [[176, "sympy.physics.quantum.gate.CGate.targets", false]], "targets (sympy.physics.quantum.gate.cnotgate property)": [[176, "sympy.physics.quantum.gate.CNotGate.targets", false]], "targets (sympy.physics.quantum.gate.gate property)": [[176, "sympy.physics.quantum.gate.Gate.targets", false]], "targets (sympy.physics.quantum.gate.ugate property)": [[176, "sympy.physics.quantum.gate.UGate.targets", false]], "targets (sympy.physics.quantum.grover.oraclegate property)": [[177, "sympy.physics.quantum.grover.OracleGate.targets", false]], "tau_a (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[112, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.tau_a", false]], "tau_d (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[112, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.tau_d", false]], "taxicab_distance() (sympy.geometry.point.point method)": [[84, "sympy.geometry.point.Point.taxicab_distance", false]], "taylor_term() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.taylor_term", false]], "taylor_term() (sympy.functions.elementary.exponential.exp static method)": [[75, "sympy.functions.elementary.exponential.exp.taylor_term", false]], "taylor_term() (sympy.functions.elementary.exponential.log static method)": [[75, "sympy.functions.elementary.exponential.log.taylor_term", false]], "taylor_term() (sympy.functions.elementary.hyperbolic.csch static method)": [[75, "sympy.functions.elementary.hyperbolic.csch.taylor_term", false]], "taylor_term() (sympy.functions.elementary.hyperbolic.sinh static method)": [[75, "sympy.functions.elementary.hyperbolic.sinh.taylor_term", false]], "tc() (sympy.polys.polyclasses.anp method)": [[218, "sympy.polys.polyclasses.ANP.TC", false]], "tc() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.TC", false]], "tc() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.TC", false]], "tendon_slack_length (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.tendon_slack_length", false]], "tendonforcelengthdegroote2016 (class in sympy.physics.biomechanics.curve)": [[113, "sympy.physics.biomechanics.curve.TendonForceLengthDeGroote2016", false]], "tendonforcelengthinversedegroote2016 (class in sympy.physics.biomechanics.curve)": [[113, "sympy.physics.biomechanics.curve.TendonForceLengthInverseDeGroote2016", false]], "tensadd (class in sympy.tensor.tensor)": [[253, "sympy.tensor.tensor.TensAdd", false]], "tensexpr (class in sympy.tensor.tensor)": [[253, "sympy.tensor.tensor.TensExpr", false]], "tensmul (class in sympy.tensor.tensor)": [[253, "sympy.tensor.tensor.TensMul", false]], "tensor_heads() (in module sympy.tensor.tensor)": [[253, "sympy.tensor.tensor.tensor_heads", false]], "tensor_product_simp() (in module sympy.physics.quantum.tensorproduct)": [[191, "sympy.physics.quantum.tensorproduct.tensor_product_simp", false]], "tensorcontraction() (in module sympy.tensor.array)": [[248, "sympy.tensor.array.tensorcontraction", false]], "tensordiagonal() (in module sympy.tensor.array)": [[248, "sympy.tensor.array.tensordiagonal", false]], "tensorhead (class in sympy.tensor.tensor)": [[253, "sympy.tensor.tensor.TensorHead", false]], "tensorindex (class in sympy.tensor.tensor)": [[253, "sympy.tensor.tensor.TensorIndex", false]], "tensorindextype (class in sympy.tensor.tensor)": [[253, "sympy.tensor.tensor.TensorIndexType", false]], "tensorpowerhilbertspace (class in sympy.physics.quantum.hilbert)": [[178, "sympy.physics.quantum.hilbert.TensorPowerHilbertSpace", false]], "tensorproduct (class in sympy.diffgeom)": [[71, "sympy.diffgeom.TensorProduct", false]], "tensorproduct (class in sympy.physics.quantum.tensorproduct)": [[191, "sympy.physics.quantum.tensorproduct.TensorProduct", false]], "tensorproduct() (in module sympy.tensor.array)": [[248, "sympy.tensor.array.tensorproduct", false]], "tensorproducthilbertspace (class in sympy.physics.quantum.hilbert)": [[178, "sympy.physics.quantum.hilbert.TensorProductHilbertSpace", false]], "tensorsymmetry (class in sympy.tensor.tensor)": [[253, "sympy.tensor.tensor.TensorSymmetry", false]], "tensorsymmetry() (in module sympy.tensor.tensor)": [[253, "sympy.tensor.tensor.tensorsymmetry", false]], "tensortype (class in sympy.tensor.tensor)": [[253, "sympy.tensor.tensor.TensorType", false]], "term_to_integer() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.term_to_integer", false]], "terminal_width() (sympy.printing.pretty.stringpict.stringpict method)": [[227, "sympy.printing.pretty.stringpict.stringPict.terminal_width", false]], "terms() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.terms", false]], "terms() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.terms", false]], "terms() (sympy.polys.rings.polyelement method)": [[218, "sympy.polys.rings.PolyElement.terms", false]], "terms_gcd() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.terms_gcd", false]], "terms_gcd() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.terms_gcd", false]], "terms_gcd() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.terms_gcd", false]], "termwise() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.termwise", false]], "test() (in module sympy.testing.runtests)": [[258, "sympy.testing.runtests.test", false]], "test_derivative_numerically() (in module sympy.core.random)": [[69, "sympy.core.random.test_derivative_numerically", false]], "test_factor() (sympy.polys.numberfields.primes.primeideal method)": [[222, "sympy.polys.numberfields.primes.PrimeIdeal.test_factor", false]], "textbackend (class in sympy.plotting.plot)": [[213, "sympy.plotting.plot.TextBackend", false]], "textplot() (in module sympy.plotting.textplot)": [[213, "sympy.plotting.textplot.textplot", false]], "tgate (class in sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.TGate", false]], "thinlens (class in sympy.physics.optics.gaussopt)": [[161, "sympy.physics.optics.gaussopt.ThinLens", false]], "threaded() (in module sympy.utilities.decorator)": [[261, "sympy.utilities.decorator.threaded", false]], "threaded_factory() (in module sympy.utilities.decorator)": [[261, "sympy.utilities.decorator.threaded_factory", false]], "three-valued logic": [[15, "term-Three-valued-logic", true]], "time (sympy.physics.quantum.state.timedepstate property)": [[190, "sympy.physics.quantum.state.TimeDepState.time", false]], "time_derivative() (in module sympy.physics.vector.functions)": [[204, "sympy.physics.vector.functions.time_derivative", false]], "time_period (sympy.physics.optics.waves.twave property)": [[166, "sympy.physics.optics.waves.TWave.time_period", false]], "timed() (in module sympy.utilities.timeutils)": [[270, "sympy.utilities.timeutils.timed", false]], "timedepbra (class in sympy.physics.quantum.state)": [[190, "sympy.physics.quantum.state.TimeDepBra", false]], "timedepket (class in sympy.physics.quantum.state)": [[190, "sympy.physics.quantum.state.TimeDepKet", false]], "timedepstate (class in sympy.physics.quantum.state)": [[190, "sympy.physics.quantum.state.TimeDepState", false]], "tiny (sympy.codegen.ast.floattype property)": [[50, "sympy.codegen.ast.FloatType.tiny", false]], "to_alg_num() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.to_alg_num", false]], "to_alg_num() (sympy.polys.numberfields.modules.powerbasiselement method)": [[222, "sympy.polys.numberfields.modules.PowerBasisElement.to_alg_num", false]], "to_algebraic_integer() (sympy.core.numbers.algebraicnumber method)": [[69, "sympy.core.numbers.AlgebraicNumber.to_algebraic_integer", false]], "to_ancestor() (sympy.polys.numberfields.modules.moduleelement method)": [[222, "sympy.polys.numberfields.modules.ModuleElement.to_ancestor", false]], "to_anf() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.to_anf", false]], "to_anp() (sympy.polys.numberfields.modules.powerbasiselement method)": [[222, "sympy.polys.numberfields.modules.PowerBasisElement.to_ANP", false]], "to_axis_angle() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.to_axis_angle", false]], "to_best() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.to_best", false]], "to_cnf() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.to_cnf", false]], "to_ddm() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.to_ddm", false]], "to_ddm() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.to_ddm", false]], "to_ddm() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_ddm", false]], "to_ddm() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.to_ddm", false]], "to_dense() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_dense", false]], "to_dfm() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.to_dfm", false]], "to_dfm() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.to_dfm", false]], "to_dfm() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_dfm", false]], "to_dfm() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.to_dfm", false]], "to_dfm_or_ddm() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.to_dfm_or_ddm", false]], "to_dfm_or_ddm() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.to_dfm_or_ddm", false]], "to_dfm_or_ddm() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_dfm_or_ddm", false]], "to_dfm_or_ddm() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.to_dfm_or_ddm", false]], "to_dict() (sympy.polys.polyclasses.anp method)": [[218, "sympy.polys.polyclasses.ANP.to_dict", false]], "to_dict() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.to_dict", false]], "to_dnf() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.to_dnf", false]], "to_dod() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.to_dod", false]], "to_dod() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.to_dod", false]], "to_dod() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_dod", false]], "to_dod() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.to_dod", false]], "to_dok() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.to_dok", false]], "to_dok() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.to_dok", false]], "to_dok() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_dok", false]], "to_dok() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.to_dok", false]], "to_euler() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.to_euler", false]], "to_exact() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.to_exact", false]], "to_exact() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.to_exact", false]], "to_expr() (sympy.holonomic.holonomic.holonomicfunction method)": [[91, "sympy.holonomic.holonomic.HolonomicFunction.to_expr", false]], "to_expr() (sympy.physics.control.lti.feedback method)": [[125, "sympy.physics.control.lti.Feedback.to_expr", false]], "to_expr() (sympy.physics.control.lti.parallel method)": [[125, "sympy.physics.control.lti.Parallel.to_expr", false]], "to_expr() (sympy.physics.control.lti.series method)": [[125, "sympy.physics.control.lti.Series.to_expr", false]], "to_expr() (sympy.physics.control.lti.transferfunction method)": [[125, "sympy.physics.control.lti.TransferFunction.to_expr", false]], "to_field() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_field", false]], "to_field() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.to_field", false]], "to_field() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.to_field", false]], "to_flat_nz() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.to_flat_nz", false]], "to_flat_nz() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.to_flat_nz", false]], "to_flat_nz() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_flat_nz", false]], "to_flat_nz() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.to_flat_nz", false]], "to_hyper() (sympy.holonomic.holonomic.holonomicfunction method)": [[91, "sympy.holonomic.holonomic.HolonomicFunction.to_hyper", false]], "to_int() (sympy.polys.domains.finitefield method)": [[218, "sympy.polys.domains.FiniteField.to_int", false]], "to_int_repr() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.to_int_repr", false]], "to_linearizer() (sympy.physics.mechanics.kane.kanesmethod method)": [[135, "sympy.physics.mechanics.kane.KanesMethod.to_linearizer", false]], "to_linearizer() (sympy.physics.mechanics.lagrange.lagrangesmethod method)": [[135, "sympy.physics.mechanics.lagrange.LagrangesMethod.to_linearizer", false]], "to_list() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.to_list", false]], "to_list() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.to_list", false]], "to_list() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_list", false]], "to_list() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.to_list", false]], "to_list() (sympy.polys.polyclasses.anp method)": [[218, "sympy.polys.polyclasses.ANP.to_list", false]], "to_list() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.to_list", false]], "to_list_flat() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.to_list_flat", false]], "to_list_flat() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.to_list_flat", false]], "to_list_flat() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_list_flat", false]], "to_list_flat() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.to_list_flat", false]], "to_loads() (sympy.physics.mechanics.actuator.actuatorbase method)": [[130, "sympy.physics.mechanics.actuator.ActuatorBase.to_loads", false]], "to_loads() (sympy.physics.mechanics.actuator.forceactuator method)": [[130, "sympy.physics.mechanics.actuator.ForceActuator.to_loads", false]], "to_loads() (sympy.physics.mechanics.actuator.torqueactuator method)": [[130, "sympy.physics.mechanics.actuator.TorqueActuator.to_loads", false]], "to_loads() (sympy.physics.mechanics.pathway.linearpathway method)": [[138, "sympy.physics.mechanics.pathway.LinearPathway.to_loads", false]], "to_loads() (sympy.physics.mechanics.pathway.obstaclesetpathway method)": [[138, "sympy.physics.mechanics.pathway.ObstacleSetPathway.to_loads", false]], "to_loads() (sympy.physics.mechanics.pathway.pathwaybase method)": [[138, "sympy.physics.mechanics.pathway.PathwayBase.to_loads", false]], "to_loads() (sympy.physics.mechanics.pathway.wrappingpathway method)": [[138, "sympy.physics.mechanics.pathway.WrappingPathway.to_loads", false]], "to_matrix() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.to_Matrix", false]], "to_matrix() (sympy.physics.vector.dyadic.dyadic method)": [[202, "sympy.physics.vector.dyadic.Dyadic.to_matrix", false]], "to_matrix() (sympy.physics.vector.vector.vector method)": [[202, "sympy.physics.vector.vector.Vector.to_matrix", false]], "to_matrix() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_Matrix", false]], "to_matrix() (sympy.vector.dyadic.dyadic method)": [[271, "sympy.vector.dyadic.Dyadic.to_matrix", false]], "to_matrix() (sympy.vector.vector.vector method)": [[271, "sympy.vector.vector.Vector.to_matrix", false]], "to_meijerg() (sympy.holonomic.holonomic.holonomicfunction method)": [[91, "sympy.holonomic.holonomic.HolonomicFunction.to_meijerg", false]], "to_nnf() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.to_nnf", false]], "to_number_field() (in module sympy.polys.numberfields.subfield)": [[222, "sympy.polys.numberfields.subfield.to_number_field", false]], "to_parent() (sympy.polys.numberfields.modules.moduleelement method)": [[222, "sympy.polys.numberfields.modules.ModuleElement.to_parent", false]], "to_primitive_element() (sympy.core.numbers.algebraicnumber method)": [[69, "sympy.core.numbers.AlgebraicNumber.to_primitive_element", false]], "to_prufer() (sympy.combinatorics.prufer.prufer static method)": [[63, "sympy.combinatorics.prufer.Prufer.to_prufer", false]], "to_rational() (sympy.polys.domains.realfield method)": [[218, "sympy.polys.domains.RealField.to_rational", false]], "to_ring() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.to_ring", false]], "to_ring() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.to_ring", false]], "to_root() (sympy.core.numbers.algebraicnumber method)": [[69, "sympy.core.numbers.AlgebraicNumber.to_root", false]], "to_rotation_matrix() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.to_rotation_matrix", false]], "to_sdm() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.to_sdm", false]], "to_sdm() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.to_sdm", false]], "to_sdm() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_sdm", false]], "to_sdm() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.to_sdm", false]], "to_sequence() (sympy.holonomic.holonomic.holonomicfunction method)": [[91, "sympy.holonomic.holonomic.HolonomicFunction.to_sequence", false]], "to_sparse() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_sparse", false]], "to_sympy() (sympy.polys.domains.algebraicfield method)": [[218, "sympy.polys.domains.AlgebraicField.to_sympy", false]], "to_sympy() (sympy.polys.domains.complexfield method)": [[218, "sympy.polys.domains.ComplexField.to_sympy", false]], "to_sympy() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.to_sympy", false]], "to_sympy() (sympy.polys.domains.expressiondomain method)": [[218, "sympy.polys.domains.ExpressionDomain.to_sympy", false]], "to_sympy() (sympy.polys.domains.finitefield method)": [[218, "sympy.polys.domains.FiniteField.to_sympy", false]], "to_sympy() (sympy.polys.domains.fractionfield method)": [[218, "sympy.polys.domains.FractionField.to_sympy", false]], "to_sympy() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[218, "sympy.polys.domains.gaussiandomains.GaussianDomain.to_sympy", false]], "to_sympy() (sympy.polys.domains.gmpyintegerring method)": [[218, "sympy.polys.domains.GMPYIntegerRing.to_sympy", false]], "to_sympy() (sympy.polys.domains.gmpyrationalfield method)": [[218, "sympy.polys.domains.GMPYRationalField.to_sympy", false]], "to_sympy() (sympy.polys.domains.integerring method)": [[218, "sympy.polys.domains.IntegerRing.to_sympy", false]], "to_sympy() (sympy.polys.domains.polynomialring method)": [[218, "sympy.polys.domains.PolynomialRing.to_sympy", false]], "to_sympy() (sympy.polys.domains.rationalfield method)": [[218, "sympy.polys.domains.RationalField.to_sympy", false]], "to_sympy() (sympy.polys.domains.realfield method)": [[218, "sympy.polys.domains.RealField.to_sympy", false]], "to_sympy_dict() (sympy.polys.polyclasses.anp method)": [[218, "sympy.polys.polyclasses.ANP.to_sympy_dict", false]], "to_sympy_dict() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.to_sympy_dict", false]], "to_sympy_list() (sympy.polys.polyclasses.anp method)": [[218, "sympy.polys.polyclasses.ANP.to_sympy_list", false]], "to_sympy_list() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.to_sympy_list", false]], "to_tree() (sympy.combinatorics.prufer.prufer static method)": [[63, "sympy.combinatorics.prufer.Prufer.to_tree", false]], "to_tuple() (sympy.polys.polyclasses.anp method)": [[218, "sympy.polys.polyclasses.ANP.to_tuple", false]], "to_tuple() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.to_tuple", false]], "todod() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.todod", false]], "todok() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.todok", false]], "together() (in module sympy.polys.rationaltools)": [[223, "sympy.polys.rationaltools.together", false]], "together() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.together", false]], "token (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.Token", false]], "tolist() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.tolist", false]], "topological_sort() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.topological_sort", false]], "topological_sort() (sympy.codegen.ast.codeblock class method)": [[50, "sympy.codegen.ast.CodeBlock.topological_sort", false]], "torque (class in sympy.physics.mechanics.loads)": [[137, "sympy.physics.mechanics.loads.Torque", false]], "torque (sympy.physics.mechanics.actuator.torqueactuator property)": [[130, "sympy.physics.mechanics.actuator.TorqueActuator.torque", false]], "torqueactuator (class in sympy.physics.mechanics.actuator)": [[130, "sympy.physics.mechanics.actuator.TorqueActuator", false]], "torsional_moment() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[117, "sympy.physics.continuum_mechanics.beam.Beam3D.torsional_moment", false]], "total_degree() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.total_degree", false]], "total_degree() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.total_degree", false]], "totient (class in sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.totient", false]], "totient() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.totient", false]], "totientrange() (sympy.ntheory.generate.sieve method)": [[109, "sympy.ntheory.generate.Sieve.totientrange", false]], "tp (sympy.polys.domains.domain.domain property)": [[218, "sympy.polys.domains.domain.Domain.tp", false]], "tr0() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.TR0", false]], "tr1() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.TR1", false]], "tr10() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.TR10", false]], "tr10i() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.TR10i", false]], "tr11() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.TR11", false]], "tr111() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.TR111", false]], "tr12() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.TR12", false]], "tr12i() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.TR12i", false]], "tr13() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.TR13", false]], "tr14() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.TR14", false]], "tr15() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.TR15", false]], "tr16() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.TR16", false]], "tr2() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.TR2", false]], "tr22() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.TR22", false]], "tr2i() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.TR2i", false]], "tr3() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.TR3", false]], "tr4() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.TR4", false]], "tr5() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.TR5", false]], "tr6() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.TR6", false]], "tr7() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.TR7", false]], "tr8() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.TR8", false]], "tr9() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.TR9", false]], "trace (class in sympy.matrices.expressions)": [[101, "sympy.matrices.expressions.Trace", false]], "trace() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.trace", false]], "trailing() (in module sympy.core.intfunc)": [[69, "sympy.core.intfunc.trailing", false]], "transcendental": [[69, "term-transcendental", true]], "transcendentalpredicate (class in sympy.assumptions.predicates.sets)": [[46, "sympy.assumptions.predicates.sets.TranscendentalPredicate", false]], "transferfunction (class in sympy.physics.control.lti)": [[125, "sympy.physics.control.lti.TransferFunction", false]], "transferfunctionmatrix (class in sympy.physics.control.lti)": [[125, "sympy.physics.control.lti.TransferFunctionMatrix", false]], "transform() (sympy.diffgeom.coordsystem method)": [[71, "sympy.diffgeom.CoordSystem.transform", false]], "transform() (sympy.geometry.point.point2d method)": [[84, "sympy.geometry.point.Point2D.transform", false]], "transform() (sympy.geometry.point.point3d method)": [[84, "sympy.geometry.point.Point3D.transform", false]], "transform() (sympy.integrals.integrals.integral method)": [[96, "sympy.integrals.integrals.Integral.transform", false]], "transform() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.transform", false]], "transform() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.transform", false]], "transform_variable (sympy.integrals.transforms.integraltransform property)": [[96, "sympy.integrals.transforms.IntegralTransform.transform_variable", false]], "transformation() (sympy.diffgeom.coordsystem method)": [[71, "sympy.diffgeom.CoordSystem.transformation", false]], "transformation_to_dn() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.transformation_to_DN", false]], "transformation_to_normal() (in module sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.transformation_to_normal", false]], "transformtosympyexpr (class in sympy.parsing.latex.lark)": [[111, "sympy.parsing.latex.lark.TransformToSymPyExpr", false]], "transition_probabilities (sympy.stats.discretemarkovchain property)": [[247, "sympy.stats.DiscreteMarkovChain.transition_probabilities", false]], "transitivity_degree (sympy.combinatorics.perm_groups.permutationgroup property)": [[60, "sympy.combinatorics.perm_groups.PermutationGroup.transitivity_degree", false]], "translate() (in module sympy.utilities.misc)": [[268, "sympy.utilities.misc.translate", false]], "translate() (sympy.geometry.curve.curve method)": [[78, "sympy.geometry.curve.Curve.translate", false]], "translate() (sympy.geometry.entity.geometryentity method)": [[80, "sympy.geometry.entity.GeometryEntity.translate", false]], "translate() (sympy.geometry.point.point2d method)": [[84, "sympy.geometry.point.Point2D.translate", false]], "translate() (sympy.geometry.point.point3d method)": [[84, "sympy.geometry.point.Point3D.translate", false]], "translation_coordinate (sympy.physics.mechanics.joint.cylindricaljoint property)": [[134, "sympy.physics.mechanics.joint.CylindricalJoint.translation_coordinate", false]], "translation_speed (sympy.physics.mechanics.joint.cylindricaljoint property)": [[134, "sympy.physics.mechanics.joint.CylindricalJoint.translation_speed", false]], "transmissive_filter() (in module sympy.physics.optics.polarization)": [[164, "sympy.physics.optics.polarization.transmissive_filter", false]], "transpose (class in sympy.matrices.expressions)": [[101, "sympy.matrices.expressions.Transpose", false]], "transpose() (sympy.matrices.expressions.blockmatrix.blockmatrix method)": [[101, "sympy.matrices.expressions.blockmatrix.BlockMatrix.transpose", false]], "transpose() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.transpose", false]], "transpose() (sympy.physics.control.lti.transferfunctionmatrix method)": [[125, "sympy.physics.control.lti.TransferFunctionMatrix.transpose", false]], "transpose() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.transpose", false]], "transpose() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.transpose", false]], "transpose() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.transpose", false]], "transpositions() (sympy.combinatorics.permutations.permutation method)": [[61, "sympy.combinatorics.permutations.Permutation.transpositions", false]], "transverse_magnification() (in module sympy.physics.optics.utils)": [[165, "sympy.physics.optics.utils.transverse_magnification", false]], "trapezoidal() (in module sympy.stats)": [[247, "sympy.stats.Trapezoidal", false]], "tree() (in module sympy.printing.tree)": [[227, "sympy.printing.tree.tree", false]], "tree_cse() (in module sympy.simplify.cse_main)": [[239, "sympy.simplify.cse_main.tree_cse", false]], "tree_repr (sympy.combinatorics.prufer.prufer property)": [[63, "sympy.combinatorics.prufer.Prufer.tree_repr", false]], "triangle (class in sympy.geometry.polygon)": [[85, "sympy.geometry.polygon.Triangle", false]], "triangular() (in module sympy.stats)": [[247, "sympy.stats.Triangular", false]], "triangularpredicate (class in sympy.assumptions.predicates.matrices)": [[46, "sympy.assumptions.predicates.matrices.TriangularPredicate", false]], "tribonacci (class in sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.tribonacci", false]], "tribonacciconstant (class in sympy.core.numbers)": [[69, "sympy.core.numbers.TribonacciConstant", false]], "trigamma (class in sympy.functions.special.gamma_functions)": [[77, "sympy.functions.special.gamma_functions.trigamma", false]], "trigintegrate() (in module sympy.integrals.trigonometry)": [[96, "sympy.integrals.trigonometry.trigintegrate", false]], "trigsimp() (in module sympy.simplify.trigsimp)": [[239, "sympy.simplify.trigsimp.trigsimp", false]], "trigsimp() (sympy.core.expr.expr method)": [[69, "sympy.core.expr.Expr.trigsimp", false]], "trmorrie() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.TRmorrie", false]], "trpower() (in module sympy.simplify.fu)": [[236, "sympy.simplify.fu.TRpower", false]], "trunc() (in module sympy.polys.polytools)": [[223, "sympy.polys.polytools.trunc", false]], "trunc() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.trunc", false]], "trunc() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.trunc", false]], "truncate() (sympy.series.formal.formalpowerseries method)": [[229, "sympy.series.formal.FormalPowerSeries.truncate", false]], "truncate() (sympy.series.fourier.fourierseries method)": [[230, "sympy.series.fourier.FourierSeries.truncate", false]], "truss (class in sympy.physics.continuum_mechanics.truss)": [[121, "sympy.physics.continuum_mechanics.truss.Truss", false]], "truth_table() (in module sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.truth_table", false]], "tuple (class in sympy.core.containers)": [[69, "sympy.core.containers.Tuple", false]], "tuple_count() (sympy.core.containers.tuple method)": [[69, "sympy.core.containers.Tuple.tuple_count", false]], "tuplekind (class in sympy.core.containers)": [[69, "sympy.core.containers.TupleKind", false]], "twave (class in sympy.physics.optics.waves)": [[166, "sympy.physics.optics.waves.TWave", false]], "two_qubit_box() (sympy.physics.quantum.circuitplot.circuitplot method)": [[172, "sympy.physics.quantum.circuitplot.CircuitPlot.two_qubit_box", false]], "twoform_to_matrix() (in module sympy.diffgeom)": [[71, "sympy.diffgeom.twoform_to_matrix", false]], "twoqubitgate (class in sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.TwoQubitGate", false]], "type (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.Type", false]], "typea (class in sympy.liealgebras.type_a)": [[98, "sympy.liealgebras.type_a.TypeA", false]], "typeb (class in sympy.liealgebras.type_b)": [[98, "sympy.liealgebras.type_b.TypeB", false]], "typec (class in sympy.liealgebras.type_c)": [[98, "sympy.liealgebras.type_c.TypeC", false]], "typed (class in sympy.liealgebras.type_d)": [[98, "sympy.liealgebras.type_d.TypeD", false]], "typee (class in sympy.liealgebras.type_e)": [[98, "sympy.liealgebras.type_e.TypeE", false]], "typef (class in sympy.liealgebras.type_f)": [[98, "sympy.liealgebras.type_f.TypeF", false]], "typeg (class in sympy.liealgebras.type_g)": [[98, "sympy.liealgebras.type_g.TypeG", false]], "u (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[131, "sympy.physics.mechanics.jointsmethod.JointsMethod.u", false]], "u (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.u", false]], "u (sympy.physics.vector.frame.referenceframe property)": [[202, "sympy.physics.vector.frame.ReferenceFrame.u", false]], "u() (in module sympy.printing.pretty.pretty_symbology)": [[227, "sympy.printing.pretty.pretty_symbology.U", false]], "u_aux (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.u_aux", false]], "u_dep (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.u_dep", false]], "u_ind (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.u_ind", false]], "udivisor_count() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.udivisor_count", false]], "udivisor_sigma (class in sympy.functions.combinatorial.numbers)": [[74, "sympy.functions.combinatorial.numbers.udivisor_sigma", false]], "udivisor_sigma() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.udivisor_sigma", false]], "udivisors() (in module sympy.ntheory.factor_)": [[109, "sympy.ntheory.factor_.udivisors", false]], "udldecomposition() (sympy.matrices.expressions.blockmatrix.blockmatrix method)": [[101, "sympy.matrices.expressions.blockmatrix.BlockMatrix.UDLdecomposition", false]], "ufuncify() (in module sympy.utilities.autowrap)": [[259, "sympy.utilities.autowrap.ufuncify", false]], "ufuncifycodewrapper (class in sympy.utilities.autowrap)": [[259, "sympy.utilities.autowrap.UfuncifyCodeWrapper", false]], "ugate (class in sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.UGate", false]], "uncouple() (in module sympy.physics.quantum.spin)": [[189, "sympy.physics.quantum.spin.uncouple", false]], "undefined function": [[15, "term-Undefined-Function", true]], "undefinedkind (in module sympy.core.kind)": [[69, "sympy.core.kind.UndefinedKind", false]], "undefinedpredicate (class in sympy.assumptions.assume)": [[44, "sympy.assumptions.assume.UndefinedPredicate", false]], "unequality (class in sympy.core.relational)": [[69, "sympy.core.relational.Unequality", false]], "unevaluated": [[15, "term-Unevaluated", true]], "unevaluatedexpr (class in sympy.core.expr)": [[69, "sympy.core.expr.UnevaluatedExpr", false]], "unflatten() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.unflatten", false]], "unificationfailed (class in sympy.polys.polyerrors)": [[220, "sympy.polys.polyerrors.UnificationFailed", false]], "uniform() (in module sympy.stats)": [[247, "sympy.stats.Uniform", false]], "uniformsum() (in module sympy.stats)": [[247, "sympy.stats.UniformSum", false]], "unify() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.unify", false]], "unify() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.unify", false]], "unify() (sympy.polys.numberfields.modules.moduleelement method)": [[222, "sympy.polys.numberfields.modules.ModuleElement.unify", false]], "unify() (sympy.polys.polyclasses.anp method)": [[218, "sympy.polys.polyclasses.ANP.unify", false]], "unify() (sympy.polys.polytools.poly method)": [[223, "sympy.polys.polytools.Poly.unify", false]], "unify_anp() (sympy.polys.polyclasses.anp method)": [[218, "sympy.polys.polyclasses.ANP.unify_ANP", false]], "unify_composite() (sympy.polys.domains.domain.domain method)": [[218, "sympy.polys.domains.domain.Domain.unify_composite", false]], "unify_dmp() (sympy.polys.polyclasses.dmp method)": [[218, "sympy.polys.polyclasses.DMP.unify_DMP", false]], "union (class in sympy.codegen.cnodes)": [[50, "sympy.codegen.cnodes.union", false]], "union (class in sympy.sets.sets)": [[235, "sympy.sets.sets.Union", false]], "union() (sympy.polys.agca.ideals.ideal method)": [[214, "sympy.polys.agca.ideals.Ideal.union", false]], "union() (sympy.polys.agca.modules.submodule method)": [[214, "sympy.polys.agca.modules.SubModule.union", false]], "union() (sympy.series.gruntz.subsset method)": [[234, "sympy.series.gruntz.SubsSet.union", false]], "union() (sympy.sets.sets.set method)": [[235, "sympy.sets.sets.Set.union", false]], "uniq() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.uniq", false]], "unit (sympy.geometry.point.point property)": [[84, "sympy.geometry.point.Point.unit", false]], "unit (sympy.polys.polytools.poly property)": [[223, "sympy.polys.polytools.Poly.unit", false]], "unitaryoperator (class in sympy.physics.quantum.operator)": [[181, "sympy.physics.quantum.operator.UnitaryOperator", false]], "unitarypredicate (class in sympy.assumptions.predicates.matrices)": [[46, "sympy.assumptions.predicates.matrices.UnitaryPredicate", false]], "unitsystem (class in sympy.physics.units.unitsystem)": [[200, "sympy.physics.units.unitsystem.UnitSystem", false]], "unittriangularpredicate (class in sympy.assumptions.predicates.matrices)": [[46, "sympy.assumptions.predicates.matrices.UnitTriangularPredicate", false]], "univariate (class in sympy.solvers.diophantine.diophantine)": [[240, "sympy.solvers.diophantine.diophantine.Univariate", false]], "univariatepolynomialerror (class in sympy.polys.polyerrors)": [[220, "sympy.polys.polyerrors.UnivariatePolynomialError", false]], "universalset (class in sympy.sets.sets)": [[235, "sympy.sets.sets.UniversalSet", false]], "unrad() (in module sympy.solvers.solvers)": [[245, "sympy.solvers.solvers.unrad", false]], "unrank() (sympy.combinatorics.graycode.graycode class method)": [[53, "sympy.combinatorics.graycode.GrayCode.unrank", false]], "unrank() (sympy.combinatorics.prufer.prufer class method)": [[63, "sympy.combinatorics.prufer.Prufer.unrank", false]], "unrank_binary() (sympy.combinatorics.subsets.subset class method)": [[64, "sympy.combinatorics.subsets.Subset.unrank_binary", false]], "unrank_gray() (sympy.combinatorics.subsets.subset class method)": [[64, "sympy.combinatorics.subsets.Subset.unrank_gray", false]], "unrank_lex() (sympy.combinatorics.permutations.permutation class method)": [[61, "sympy.combinatorics.permutations.Permutation.unrank_lex", false]], "unrank_nonlex() (sympy.combinatorics.permutations.permutation class method)": [[61, "sympy.combinatorics.permutations.Permutation.unrank_nonlex", false]], "unrank_trotterjohnson() (sympy.combinatorics.permutations.permutation class method)": [[61, "sympy.combinatorics.permutations.Permutation.unrank_trotterjohnson", false]], "unsignedinttype (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.UnsignedIntType", false]], "update() (sympy.physics.quantum.circuitplot.circuitplot method)": [[172, "sympy.physics.quantum.circuitplot.CircuitPlot.update", false]], "upper (sympy.physics.secondquant.antisymmetrictensor property)": [[192, "sympy.physics.secondquant.AntiSymmetricTensor.upper", false]], "upper (sympy.tensor.indexed.idx property)": [[252, "sympy.tensor.indexed.Idx.upper", false]], "upper_hessenberg_decomposition() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.upper_hessenberg_decomposition", false]], "upper_triangular() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.upper_triangular", false]], "upper_triangular_solve() (sympy.matrices.dense.densematrix method)": [[100, "sympy.matrices.dense.DenseMatrix.upper_triangular_solve", false]], "upper_triangular_solve() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.upper_triangular_solve", false]], "uppergamma (class in sympy.functions.special.gamma_functions)": [[77, "sympy.functions.special.gamma_functions.uppergamma", false]], "uppertriangularpredicate (class in sympy.assumptions.predicates.matrices)": [[46, "sympy.assumptions.predicates.matrices.UpperTriangularPredicate", false]], "use (class in sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.use", false]], "use() (in module sympy.core.traversal)": [[69, "sympy.core.traversal.use", false]], "use_rename (class in sympy.codegen.fnodes)": [[50, "sympy.codegen.fnodes.use_rename", false]], "using (class in sympy.codegen.cxxnodes)": [[50, "sympy.codegen.cxxnodes.using", false]], "v1pt_theory() (sympy.physics.vector.point.point method)": [[206, "sympy.physics.vector.point.Point.v1pt_theory", false]], "v2pt_theory() (sympy.physics.vector.point.point method)": [[206, "sympy.physics.vector.point.Point.v2pt_theory", false]], "v_m_max (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.v_M_max", false]], "validate_system() (sympy.physics.mechanics.system.system method)": [[140, "sympy.physics.mechanics.system.System.validate_system", false]], "valuation() (sympy.polys.numberfields.primes.primeideal method)": [[222, "sympy.polys.numberfields.primes.PrimeIdeal.valuation", false]], "values() (sympy.core.containers.dict method)": [[69, "sympy.core.containers.Dict.values", false]], "values() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.values", false]], "var (sympy.physics.control.lti.feedback property)": [[125, "sympy.physics.control.lti.Feedback.var", false]], "var (sympy.physics.control.lti.mimofeedback property)": [[125, "sympy.physics.control.lti.MIMOFeedback.var", false]], "var (sympy.physics.control.lti.mimoparallel property)": [[125, "sympy.physics.control.lti.MIMOParallel.var", false]], "var (sympy.physics.control.lti.mimoseries property)": [[125, "sympy.physics.control.lti.MIMOSeries.var", false]], "var (sympy.physics.control.lti.parallel property)": [[125, "sympy.physics.control.lti.Parallel.var", false]], "var (sympy.physics.control.lti.series property)": [[125, "sympy.physics.control.lti.Series.var", false]], "var (sympy.physics.control.lti.transferfunction property)": [[125, "sympy.physics.control.lti.TransferFunction.var", false]], "var (sympy.physics.control.lti.transferfunctionmatrix property)": [[125, "sympy.physics.control.lti.TransferFunctionMatrix.var", false]], "var() (in module sympy.core.symbol)": [[69, "sympy.core.symbol.var", false]], "varbosonicbasis (class in sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.VarBosonicBasis", false]], "variable (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.Variable", false]], "variable (sympy.physics.continuum_mechanics.beam.beam property)": [[117, "sympy.physics.continuum_mechanics.beam.Beam.variable", false]], "variable_map() (sympy.physics.vector.frame.referenceframe method)": [[202, "sympy.physics.vector.frame.ReferenceFrame.variable_map", false]], "variables (sympy.concrete.expr_with_limits.exprwithlimits property)": [[96, "sympy.concrete.expr_with_limits.ExprWithLimits.variables", false]], "variables (sympy.core.function.lambda property)": [[69, "sympy.core.function.Lambda.variables", false]], "variables (sympy.core.function.subs property)": [[69, "sympy.core.function.Subs.variables", false]], "variables (sympy.physics.quantum.operator.differentialoperator property)": [[181, "sympy.physics.quantum.operator.DifferentialOperator.variables", false]], "variables (sympy.physics.quantum.state.wavefunction property)": [[190, "sympy.physics.quantum.state.Wavefunction.variables", false]], "variables (sympy.series.sequences.seqbase property)": [[233, "sympy.series.sequences.SeqBase.variables", false]], "variables (sympy.utilities.codegen.routine property)": [[260, "sympy.utilities.codegen.Routine.variables", false]], "variance (class in sympy.stats)": [[247, "sympy.stats.Variance", false]], "variance() (in module sympy.stats)": [[247, "sympy.stats.variance", false]], "variancematrix (class in sympy.stats)": [[247, "sympy.stats.VarianceMatrix", false]], "variations() (in module sympy.utilities.iterables)": [[265, "sympy.utilities.iterables.variations", false]], "vec() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.vec", false]], "vech() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.vech", false]], "vector (class in sympy.physics.vector.vector)": [[202, "sympy.physics.vector.vector.Vector", false]], "vector (class in sympy.vector.vector)": [[271, "sympy.vector.vector.Vector", false]], "vector_coplanar() (sympy.algebras.quaternion class method)": [[42, "sympy.algebras.Quaternion.vector_coplanar", false]], "vector_integrate() (in module sympy.vector.integrals)": [[274, "sympy.vector.integrals.vector_integrate", false]], "vector_part() (sympy.algebras.quaternion method)": [[42, "sympy.algebras.Quaternion.vector_part", false]], "vectorize (class in sympy.core.multidimensional)": [[69, "sympy.core.multidimensional.vectorize", false]], "vectors_in_basis() (in module sympy.diffgeom)": [[71, "sympy.diffgeom.vectors_in_basis", false]], "vee() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.vee", false]], "vel() (sympy.physics.vector.point.point method)": [[206, "sympy.physics.vector.point.Point.vel", false]], "velocity_constraints (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.velocity_constraints", false]], "verify_numerically() (in module sympy.core.random)": [[69, "sympy.core.random.verify_numerically", false]], "vertices (sympy.combinatorics.polyhedron.polyhedron property)": [[62, "sympy.combinatorics.polyhedron.Polyhedron.vertices", false]], "vertices (sympy.geometry.polygon.polygon property)": [[85, "sympy.geometry.polygon.Polygon.vertices", false]], "vertices (sympy.geometry.polygon.regularpolygon property)": [[85, "sympy.geometry.polygon.RegularPolygon.vertices", false]], "vertices (sympy.geometry.polygon.triangle property)": [[85, "sympy.geometry.polygon.Triangle.vertices", false]], "vf() (in module sympy.printing.pretty.pretty_symbology)": [[227, "sympy.printing.pretty.pretty_symbology.VF", false]], "vfield() (in module sympy.polys.fields)": [[218, "sympy.polys.fields.vfield", false]], "viete() (in module sympy.polys.polyfuncs)": [[223, "sympy.polys.polyfuncs.viete", false]], "vlatex() (in module sympy.physics.vector.printing)": [[207, "sympy.physics.vector.printing.vlatex", false]], "vobj() (in module sympy.printing.pretty.pretty_symbology)": [[227, "sympy.printing.pretty.pretty_symbology.vobj", false]], "vonmises() (in module sympy.stats)": [[247, "sympy.stats.VonMises", false]], "vpprint() (in module sympy.physics.vector.printing)": [[207, "sympy.physics.vector.printing.vpprint", false]], "vprint() (in module sympy.physics.vector.printing)": [[207, "sympy.physics.vector.printing.vprint", false]], "vradius (sympy.geometry.ellipse.circle property)": [[79, "sympy.geometry.ellipse.Circle.vradius", false]], "vradius (sympy.geometry.ellipse.ellipse property)": [[79, "sympy.geometry.ellipse.Ellipse.vradius", false]], "vring() (in module sympy.polys.rings)": [[218, "sympy.polys.rings.vring", false]], "vstack() (sympy.matrices.matrixbase.matrixbase class method)": [[105, "sympy.matrices.matrixbase.MatrixBase.vstack", false]], "vstack() (sympy.polys.matrices._dfm.dfm method)": [[216, "sympy.polys.matrices._dfm.DFM.vstack", false]], "vstack() (sympy.polys.matrices.ddm.ddm method)": [[216, "sympy.polys.matrices.ddm.DDM.vstack", false]], "vstack() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.vstack", false]], "vstack() (sympy.polys.matrices.sdm.sdm method)": [[216, "sympy.polys.matrices.sdm.SDM.vstack", false]], "w (sympy.physics.optics.gaussopt.beamparameter property)": [[161, "sympy.physics.optics.gaussopt.BeamParameter.w", false]], "w_0 (sympy.physics.optics.gaussopt.beamparameter property)": [[161, "sympy.physics.optics.gaussopt.BeamParameter.w_0", false]], "waist2rayleigh() (in module sympy.physics.optics.gaussopt)": [[161, "sympy.physics.optics.gaussopt.waist2rayleigh", false]], "waist_approximation_limit (sympy.physics.optics.gaussopt.beamparameter property)": [[161, "sympy.physics.optics.gaussopt.BeamParameter.waist_approximation_limit", false]], "wald() (in module sympy.stats)": [[247, "sympy.stats.Wald", false]], "walk() (in module sympy.core.traversal)": [[69, "sympy.core.traversal.walk", false]], "warns() (in module sympy.testing.pytest)": [[256, "sympy.testing.pytest.warns", false]], "warns_deprecated_sympy() (in module sympy.testing.pytest)": [[256, "sympy.testing.pytest.warns_deprecated_sympy", false]], "wavefunction (class in sympy.physics.quantum.state)": [[190, "sympy.physics.quantum.state.Wavefunction", false]], "wavelength (sympy.physics.optics.waves.twave property)": [[166, "sympy.physics.optics.waves.TWave.wavelength", false]], "wavenumber (sympy.physics.optics.waves.twave property)": [[166, "sympy.physics.optics.waves.TWave.wavenumber", false]], "weak (sympy.core.relational.relational property)": [[69, "sympy.core.relational.Relational.weak", false]], "wedgeproduct (class in sympy.diffgeom)": [[71, "sympy.diffgeom.WedgeProduct", false]], "weibull() (in module sympy.stats)": [[247, "sympy.stats.Weibull", false]], "weldjoint (class in sympy.physics.mechanics.joint)": [[134, "sympy.physics.mechanics.joint.WeldJoint", false]], "weylgroup (class in sympy.liealgebras.weyl_group)": [[98, "sympy.liealgebras.weyl_group.WeylGroup", false]], "wgate (class in sympy.physics.quantum.grover)": [[177, "sympy.physics.quantum.grover.WGate", false]], "where() (in module sympy.stats)": [[247, "sympy.stats.where", false]], "while (class in sympy.codegen.ast)": [[50, "sympy.codegen.ast.While", false]], "whole_submodule() (sympy.polys.numberfields.modules.module method)": [[222, "sympy.polys.numberfields.modules.Module.whole_submodule", false]], "wicks() (in module sympy.physics.secondquant)": [[192, "sympy.physics.secondquant.wicks", false]], "width (sympy.categories.diagram_drawing.diagramgrid property)": [[49, "sympy.categories.diagram_drawing.DiagramGrid.width", false]], "width() (sympy.printing.pretty.stringpict.stringpict method)": [[227, "sympy.printing.pretty.stringpict.stringPict.width", false]], "wienerprocess (class in sympy.stats)": [[247, "sympy.stats.WienerProcess", false]], "wigner3j (class in sympy.physics.quantum.cg)": [[171, "sympy.physics.quantum.cg.Wigner3j", false]], "wigner6j (class in sympy.physics.quantum.cg)": [[171, "sympy.physics.quantum.cg.Wigner6j", false]], "wigner9j (class in sympy.physics.quantum.cg)": [[171, "sympy.physics.quantum.cg.Wigner9j", false]], "wigner_3j() (in module sympy.physics.wigner)": [[212, "sympy.physics.wigner.wigner_3j", false]], "wigner_6j() (in module sympy.physics.wigner)": [[212, "sympy.physics.wigner.wigner_6j", false]], "wigner_9j() (in module sympy.physics.wigner)": [[212, "sympy.physics.wigner.wigner_9j", false]], "wigner_d() (in module sympy.physics.wigner)": [[212, "sympy.physics.wigner.wigner_d", false]], "wigner_d_small() (in module sympy.physics.wigner)": [[212, "sympy.physics.wigner.wigner_d_small", false]], "wignerd (class in sympy.physics.quantum.spin)": [[189, "sympy.physics.quantum.spin.WignerD", false]], "wignersemicircle() (in module sympy.stats)": [[247, "sympy.stats.WignerSemicircle", false]], "wild (class in sympy.core.symbol)": [[69, "sympy.core.symbol.Wild", false]], "wildfunction (class in sympy.core.function)": [[69, "sympy.core.function.WildFunction", false]], "wilkinson() (sympy.matrices.matrixbase.matrixbase class method)": [[105, "sympy.matrices.matrixbase.MatrixBase.wilkinson", false]], "wishart() (in module sympy.stats)": [[247, "sympy.stats.Wishart", false]], "with_defaults() (sympy.physics.biomechanics.activation.activationbase class method)": [[112, "sympy.physics.biomechanics.activation.ActivationBase.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 class method)": [[112, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.activation.zerothorderactivation class method)": [[112, "sympy.physics.biomechanics.activation.ZerothOrderActivation.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.curve.fiberforcelengthactivedegroote2016 class method)": [[113, "sympy.physics.biomechanics.curve.FiberForceLengthActiveDeGroote2016.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.curve.fiberforcelengthpassivedegroote2016 class method)": [[113, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveDeGroote2016.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.curve.fiberforcelengthpassiveinversedegroote2016 class method)": [[113, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveInverseDeGroote2016.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.curve.fiberforcevelocitydegroote2016 class method)": [[113, "sympy.physics.biomechanics.curve.FiberForceVelocityDeGroote2016.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.curve.fiberforcevelocityinversedegroote2016 class method)": [[113, "sympy.physics.biomechanics.curve.FiberForceVelocityInverseDeGroote2016.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.curve.tendonforcelengthdegroote2016 class method)": [[113, "sympy.physics.biomechanics.curve.TendonForceLengthDeGroote2016.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.curve.tendonforcelengthinversedegroote2016 class method)": [[113, "sympy.physics.biomechanics.curve.TendonForceLengthInverseDeGroote2016.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.musculotendon.musculotendonbase class method)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.with_defaults", false]], "wrappingcylinder (class in sympy.physics.mechanics.wrapping_geometry)": [[141, "sympy.physics.mechanics.wrapping_geometry.WrappingCylinder", false]], "wrappinggeometrybase (class in sympy.physics.mechanics.wrapping_geometry)": [[141, "sympy.physics.mechanics.wrapping_geometry.WrappingGeometryBase", false]], "wrappingpathway (class in sympy.physics.mechanics.pathway)": [[138, "sympy.physics.mechanics.pathway.WrappingPathway", false]], "wrappingsphere (class in sympy.physics.mechanics.wrapping_geometry)": [[141, "sympy.physics.mechanics.wrapping_geometry.WrappingSphere", false]], "write() (sympy.testing.runtests.pytestreporter method)": [[258, "sympy.testing.runtests.PyTestReporter.write", false]], "write() (sympy.utilities.codegen.codegen method)": [[260, "sympy.utilities.codegen.CodeGen.write", false]], "wronskian() (in module sympy.matrices.dense)": [[105, "sympy.matrices.dense.wronskian", false]], "x (in module sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.X", false]], "x (sympy.geometry.point.point2d property)": [[84, "sympy.geometry.point.Point2D.x", false]], "x (sympy.geometry.point.point3d property)": [[84, "sympy.geometry.point.Point3D.x", false]], "x (sympy.physics.biomechanics.activation.activationbase property)": [[112, "sympy.physics.biomechanics.activation.ActivationBase.x", false]], "x (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[112, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.x", false]], "x (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[112, "sympy.physics.biomechanics.activation.ZerothOrderActivation.x", false]], "x (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[115, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.x", false]], "x (sympy.physics.mechanics.body.body property)": [[131, "sympy.physics.mechanics.body.Body.x", false]], "x (sympy.physics.mechanics.rigidbody.rigidbody property)": [[137, "sympy.physics.mechanics.rigidbody.RigidBody.x", false]], "x (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.x", false]], "x (sympy.physics.vector.frame.referenceframe property)": [[202, "sympy.physics.vector.frame.ReferenceFrame.x", false]], "xbra (class in sympy.physics.quantum.cartesian)": [[170, "sympy.physics.quantum.cartesian.XBra", false]], "xdirection (sympy.geometry.line.ray2d property)": [[82, "sympy.geometry.line.Ray2D.xdirection", false]], "xdirection (sympy.geometry.line.ray3d property)": [[82, "sympy.geometry.line.Ray3D.xdirection", false]], "xfield() (in module sympy.polys.fields)": [[218, "sympy.polys.fields.xfield", false]], "xgate (class in sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.XGate", false]], "xket (class in sympy.physics.quantum.cartesian)": [[170, "sympy.physics.quantum.cartesian.XKet", false]], "xnor (class in sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.Xnor", false]], "xobj() (in module sympy.printing.pretty.pretty_symbology)": [[227, "sympy.printing.pretty.pretty_symbology.xobj", false]], "xop (class in sympy.physics.quantum.cartesian)": [[170, "sympy.physics.quantum.cartesian.XOp", false]], "xor (class in sympy.logic.boolalg)": [[99, "sympy.logic.boolalg.Xor", false]], "xreplace() (sympy.core.basic.basic method)": [[69, "sympy.core.basic.Basic.xreplace", false]], "xreplace() (sympy.matrices.matrixbase.matrixbase method)": [[105, "sympy.matrices.matrixbase.MatrixBase.xreplace", false]], "xreplace() (sympy.physics.vector.dyadic.dyadic method)": [[202, "sympy.physics.vector.dyadic.Dyadic.xreplace", false]], "xreplace() (sympy.physics.vector.vector.vector method)": [[202, "sympy.physics.vector.vector.Vector.xreplace", false]], "xring() (in module sympy.polys.rings)": [[218, "sympy.polys.rings.xring", false]], "xstr() (in module sympy.printing.pretty.pretty_symbology)": [[227, "sympy.printing.pretty.pretty_symbology.xstr", false]], "xsym() (in module sympy.printing.pretty.pretty_symbology)": [[227, "sympy.printing.pretty.pretty_symbology.xsym", false]], "xthreaded() (in module sympy.utilities.decorator)": [[261, "sympy.utilities.decorator.xthreaded", false]], "xx (sympy.physics.vector.frame.referenceframe property)": [[202, "sympy.physics.vector.frame.ReferenceFrame.xx", false]], "xy (sympy.physics.vector.frame.referenceframe property)": [[202, "sympy.physics.vector.frame.ReferenceFrame.xy", false]], "xypic_draw_diagram() (in module sympy.categories.diagram_drawing)": [[49, "sympy.categories.diagram_drawing.xypic_draw_diagram", false]], "xypicdiagramdrawer (class in sympy.categories.diagram_drawing)": [[49, "sympy.categories.diagram_drawing.XypicDiagramDrawer", false]], "xz (sympy.physics.vector.frame.referenceframe property)": [[202, "sympy.physics.vector.frame.ReferenceFrame.xz", false]], "y (in module sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.Y", false]], "y (sympy.geometry.point.point2d property)": [[84, "sympy.geometry.point.Point2D.y", false]], "y (sympy.geometry.point.point3d property)": [[84, "sympy.geometry.point.Point3D.y", false]], "y (sympy.physics.mechanics.body.body property)": [[131, "sympy.physics.mechanics.body.Body.y", false]], "y (sympy.physics.mechanics.rigidbody.rigidbody property)": [[137, "sympy.physics.mechanics.rigidbody.RigidBody.y", false]], "y (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.y", false]], "y (sympy.physics.vector.frame.referenceframe property)": [[202, "sympy.physics.vector.frame.ReferenceFrame.y", false]], "y (sympy.series.sequences.recursiveseq property)": [[233, "sympy.series.sequences.RecursiveSeq.y", false]], "ydirection (sympy.geometry.line.ray2d property)": [[82, "sympy.geometry.line.Ray2D.ydirection", false]], "ydirection (sympy.geometry.line.ray3d property)": [[82, "sympy.geometry.line.Ray3D.ydirection", false]], "ygate (class in sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.YGate", false]], "yn (class in sympy.functions.special.bessel)": [[77, "sympy.functions.special.bessel.yn", false]], "yn (sympy.series.sequences.recursiveseq property)": [[233, "sympy.series.sequences.RecursiveSeq.yn", false]], "ynm (class in sympy.functions.special.spherical_harmonics)": [[77, "sympy.functions.special.spherical_harmonics.Ynm", false]], "ynm_c() (in module sympy.functions.special.spherical_harmonics)": [[77, "sympy.functions.special.spherical_harmonics.Ynm_c", false]], "yop (class in sympy.physics.quantum.cartesian)": [[170, "sympy.physics.quantum.cartesian.YOp", false]], "yulesimon() (in module sympy.stats)": [[247, "sympy.stats.YuleSimon", false]], "yx (sympy.physics.vector.frame.referenceframe property)": [[202, "sympy.physics.vector.frame.ReferenceFrame.yx", false]], "yy (sympy.physics.vector.frame.referenceframe property)": [[202, "sympy.physics.vector.frame.ReferenceFrame.yy", false]], "yz (sympy.physics.vector.frame.referenceframe property)": [[202, "sympy.physics.vector.frame.ReferenceFrame.yz", false]], "z (in module sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.Z", false]], "z (sympy.geometry.point.point3d property)": [[84, "sympy.geometry.point.Point3D.z", false]], "z (sympy.physics.mechanics.body.body property)": [[131, "sympy.physics.mechanics.body.Body.z", false]], "z (sympy.physics.mechanics.rigidbody.rigidbody property)": [[137, "sympy.physics.mechanics.rigidbody.RigidBody.z", false]], "z (sympy.physics.mechanics.system.system property)": [[140, "sympy.physics.mechanics.system.System.z", false]], "z (sympy.physics.vector.frame.referenceframe property)": [[202, "sympy.physics.vector.frame.ReferenceFrame.z", false]], "zdirection (sympy.geometry.line.ray3d property)": [[82, "sympy.geometry.line.Ray3D.zdirection", false]], "zero": [[69, "term-zero", true]], "zero (class in sympy.core.numbers)": [[69, "sympy.core.numbers.Zero", false]], "zero (sympy.polys.domains.domain.domain attribute)": [[218, "sympy.polys.domains.domain.Domain.zero", false]], "zero (sympy.polys.polytools.poly property)": [[223, "sympy.polys.polytools.Poly.zero", false]], "zero() (sympy.polys.numberfields.modules.module method)": [[222, "sympy.polys.numberfields.modules.Module.zero", false]], "zeromatrix (class in sympy.matrices.expressions)": [[101, "sympy.matrices.expressions.ZeroMatrix", false]], "zeropredicate (class in sympy.assumptions.predicates.order)": [[46, "sympy.assumptions.predicates.order.ZeroPredicate", false]], "zeros() (in module sympy.matrices.dense)": [[105, "sympy.matrices.dense.zeros", false]], "zeros() (sympy.matrices.matrixbase.matrixbase class method)": [[105, "sympy.matrices.matrixbase.MatrixBase.zeros", false]], "zeros() (sympy.physics.control.lti.transferfunction method)": [[125, "sympy.physics.control.lti.TransferFunction.zeros", false]], "zeros() (sympy.polys.matrices._dfm.dfm class method)": [[216, "sympy.polys.matrices._dfm.DFM.zeros", false]], "zeros() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[216, "sympy.polys.matrices.domainmatrix.DomainMatrix.zeros", false]], "zeros() (sympy.polys.matrices.sdm.sdm class method)": [[216, "sympy.polys.matrices.sdm.SDM.zeros", false]], "zerothorderactivation (class in sympy.physics.biomechanics.activation)": [[112, "sympy.physics.biomechanics.activation.ZerothOrderActivation", false]], "zeta (class in sympy.functions.special.zeta_functions)": [[77, "sympy.functions.special.zeta_functions.zeta", false]], "zeta() (in module sympy.stats)": [[247, "sympy.stats.Zeta", false]], "zgate (class in sympy.physics.quantum.gate)": [[176, "sympy.physics.quantum.gate.ZGate", false]], "znm (class in sympy.functions.special.spherical_harmonics)": [[77, "sympy.functions.special.spherical_harmonics.Znm", false]], "zoo": [[15, "term-zoo", true]], "zop (class in sympy.physics.quantum.cartesian)": [[170, "sympy.physics.quantum.cartesian.ZOp", false]], "zx (sympy.physics.vector.frame.referenceframe property)": [[202, "sympy.physics.vector.frame.ReferenceFrame.zx", false]], "zy (sympy.physics.vector.frame.referenceframe property)": [[202, "sympy.physics.vector.frame.ReferenceFrame.zy", false]], "zz (sympy.physics.vector.frame.referenceframe property)": [[202, "sympy.physics.vector.frame.ReferenceFrame.zz", false]]}, "objects": {"": [[39, 0, 0, "-", "sympy"]], "sympy": [[41, 0, 0, "-", "abc"], [42, 0, 0, "-", "algebras"], [45, 0, 0, "-", "assumptions"], [48, 0, 0, "-", "calculus"], [49, 0, 0, "-", "categories"], [71, 0, 0, "-", "diffgeom"], [72, 0, 0, "-", "discrete"], [76, 0, 0, "-", "functions"], [89, 0, 0, "-", "holonomic"], [96, 0, 0, "-", "integrals"], [97, 0, 0, "-", "interactive"], [98, 0, 0, "-", "liealgebras"], [99, 0, 0, "-", "logic"], [103, 0, 0, "-", "matrices"], [111, 0, 0, "-", "parsing"], [288, 0, 0, "-", "physics"], [223, 0, 0, "-", "polys"], [245, 0, 0, "-", "solvers"], [247, 0, 0, "-", "stats"], [250, 0, 0, "-", "tensor"], [255, 0, 0, "-", "testing"], [264, 0, 0, "-", "utilities"], [279, 0, 0, "-", "vector"]], "sympy.algebras": [[42, 1, 1, "", "Quaternion"]], "sympy.algebras.Quaternion": [[42, 2, 1, "", "add"], [42, 2, 1, "", "angle"], [42, 2, 1, "", "arc_coplanar"], [42, 2, 1, "", "axis"], [42, 2, 1, "", "exp"], [42, 2, 1, "", "from_Matrix"], [42, 2, 1, "", "from_axis_angle"], [42, 2, 1, "", "from_euler"], [42, 2, 1, "", "from_rotation_matrix"], [42, 2, 1, "", "index_vector"], [42, 2, 1, "", "integrate"], [42, 2, 1, "", "inverse"], [42, 2, 1, "", "is_pure"], [42, 2, 1, "", "is_zero_quaternion"], [42, 2, 1, "", "mensor"], [42, 2, 1, "", "mul"], [42, 2, 1, "", "norm"], [42, 2, 1, "", "normalize"], [42, 2, 1, "", "orthogonal"], [42, 2, 1, "", "parallel"], [42, 2, 1, "", "pow"], [42, 2, 1, "", "pow_cos_sin"], [42, 3, 1, "", "product_matrix_left"], [42, 3, 1, "", "product_matrix_right"], [42, 2, 1, "", "rotate_point"], [42, 2, 1, "", "scalar_part"], [42, 2, 1, "", "set_norm"], [42, 2, 1, "", "to_Matrix"], [42, 2, 1, "", "to_axis_angle"], [42, 2, 1, "", "to_euler"], [42, 2, 1, "", "to_rotation_matrix"], [42, 2, 1, "", "vector_coplanar"], [42, 2, 1, "", "vector_part"]], "sympy.assumptions": [[43, 0, 0, "-", "ask"], [44, 0, 0, "-", "assume"], [46, 0, 0, "-", "predicates"], [47, 0, 0, "-", "refine"]], "sympy.assumptions.ask": [[43, 1, 1, "", "AssumptionKeys"], [43, 4, 1, "", "ask"], [43, 4, 1, "", "register_handler"], [43, 4, 1, "", "remove_handler"]], "sympy.assumptions.assume": [[44, 1, 1, "", "AppliedPredicate"], [44, 1, 1, "", "AssumptionsContext"], [44, 1, 1, "", "Predicate"], [44, 1, 1, "", "UndefinedPredicate"], [44, 4, 1, "", "assuming"]], "sympy.assumptions.assume.AppliedPredicate": [[44, 3, 1, "", "arg"], [44, 3, 1, "", "arguments"], [44, 3, 1, "", "function"]], "sympy.assumptions.assume.AssumptionsContext": [[44, 2, 1, "", "add"]], "sympy.assumptions.assume.Predicate": [[44, 2, 1, "", "eval"], [44, 5, 1, "", "handler"], [44, 2, 1, "", "register"], [44, 2, 1, "", "register_many"]], "sympy.assumptions.predicates.calculus": [[46, 1, 1, "", "FinitePredicate"], [46, 1, 1, "", "InfinitePredicate"]], "sympy.assumptions.predicates.calculus.FinitePredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.calculus.InfinitePredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common": [[46, 1, 1, "", "CommutativePredicate"], [46, 1, 1, "", "IsTruePredicate"]], "sympy.assumptions.predicates.common.CommutativePredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common.IsTruePredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices": [[46, 1, 1, "", "ComplexElementsPredicate"], [46, 1, 1, "", "DiagonalPredicate"], [46, 1, 1, "", "FullRankPredicate"], [46, 1, 1, "", "IntegerElementsPredicate"], [46, 1, 1, "", "InvertiblePredicate"], [46, 1, 1, "", "LowerTriangularPredicate"], [46, 1, 1, "", "NormalPredicate"], [46, 1, 1, "", "OrthogonalPredicate"], [46, 1, 1, "", "PositiveDefinitePredicate"], [46, 1, 1, "", "RealElementsPredicate"], [46, 1, 1, "", "SingularPredicate"], [46, 1, 1, "", "SquarePredicate"], [46, 1, 1, "", "SymmetricPredicate"], [46, 1, 1, "", "TriangularPredicate"], [46, 1, 1, "", "UnitTriangularPredicate"], [46, 1, 1, "", "UnitaryPredicate"], [46, 1, 1, "", "UpperTriangularPredicate"]], "sympy.assumptions.predicates.matrices.ComplexElementsPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.DiagonalPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.FullRankPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.IntegerElementsPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.InvertiblePredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.LowerTriangularPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.NormalPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.OrthogonalPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.PositiveDefinitePredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.RealElementsPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SingularPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SquarePredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SymmetricPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.TriangularPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitTriangularPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitaryPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UpperTriangularPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory": [[46, 1, 1, "", "CompositePredicate"], [46, 1, 1, "", "EvenPredicate"], [46, 1, 1, "", "OddPredicate"], [46, 1, 1, "", "PrimePredicate"]], "sympy.assumptions.predicates.ntheory.CompositePredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.EvenPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.OddPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.PrimePredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order": [[46, 1, 1, "", "NegativePredicate"], [46, 1, 1, "", "NonNegativePredicate"], [46, 1, 1, "", "NonPositivePredicate"], [46, 1, 1, "", "NonZeroPredicate"], [46, 1, 1, "", "PositivePredicate"], [46, 1, 1, "", "ZeroPredicate"]], "sympy.assumptions.predicates.order.NegativePredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonNegativePredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonPositivePredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonZeroPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.PositivePredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.ZeroPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets": [[46, 1, 1, "", "AlgebraicPredicate"], [46, 1, 1, "", "AntihermitianPredicate"], [46, 1, 1, "", "ComplexPredicate"], [46, 1, 1, "", "ExtendedRealPredicate"], [46, 1, 1, "", "HermitianPredicate"], [46, 1, 1, "", "ImaginaryPredicate"], [46, 1, 1, "", "IntegerPredicate"], [46, 1, 1, "", "IrrationalPredicate"], [46, 1, 1, "", "RationalPredicate"], [46, 1, 1, "", "RealPredicate"], [46, 1, 1, "", "TranscendentalPredicate"]], "sympy.assumptions.predicates.sets.AlgebraicPredicate": [[46, 5, 1, "", "AlgebraicHandler"], [46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.AntihermitianPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ComplexPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ExtendedRealPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.HermitianPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ImaginaryPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IntegerPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IrrationalPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RationalPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RealPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.TranscendentalPredicate": [[46, 5, 1, "", "handler"]], "sympy.assumptions.refine": [[47, 4, 1, "", "refine"], [47, 4, 1, "", "refine_Pow"], [47, 4, 1, "", "refine_abs"], [47, 4, 1, "", "refine_arg"], [47, 4, 1, "", "refine_atan2"], [47, 4, 1, "", "refine_im"], [47, 4, 1, "", "refine_matrixelement"], [47, 4, 1, "", "refine_re"], [47, 4, 1, "", "refine_sign"]], "sympy.calculus": [[48, 0, 0, "-", "euler"], [48, 0, 0, "-", "finite_diff"], [48, 0, 0, "-", "singularities"], [48, 0, 0, "-", "util"]], "sympy.calculus.euler": [[48, 4, 1, "", "euler_equations"]], "sympy.calculus.finite_diff": [[48, 4, 1, "", "apply_finite_diff"], [48, 4, 1, "", "differentiate_finite"], [48, 4, 1, "", "finite_diff_weights"]], "sympy.calculus.singularities": [[48, 4, 1, "", "is_decreasing"], [48, 4, 1, "", "is_increasing"], [48, 4, 1, "", "is_monotonic"], [48, 4, 1, "", "is_strictly_decreasing"], [48, 4, 1, "", "is_strictly_increasing"], [48, 4, 1, "", "monotonicity_helper"], [48, 4, 1, "", "singularities"]], "sympy.calculus.util": [[48, 4, 1, "", "continuous_domain"], [48, 4, 1, "", "function_range"], [48, 4, 1, "", "is_convex"], [48, 4, 1, "", "lcim"], [48, 4, 1, "", "maximum"], [48, 4, 1, "", "minimum"], [48, 4, 1, "", "not_empty_in"], [48, 4, 1, "", "periodicity"], [48, 4, 1, "", "stationary_points"]], "sympy.categories": [[49, 1, 1, "", "Category"], [49, 1, 1, "", "CompositeMorphism"], [49, 1, 1, "", "Diagram"], [49, 1, 1, "", "IdentityMorphism"], [49, 1, 1, "", "Morphism"], [49, 1, 1, "", "NamedMorphism"], [49, 1, 1, "", "Object"], [49, 0, 0, "-", "diagram_drawing"]], "sympy.categories.Category": [[49, 3, 1, "", "commutative_diagrams"], [49, 3, 1, "", "name"], [49, 3, 1, "", "objects"]], "sympy.categories.CompositeMorphism": [[49, 3, 1, "", "codomain"], [49, 3, 1, "", "components"], [49, 3, 1, "", "domain"], [49, 2, 1, "", "flatten"]], "sympy.categories.Diagram": [[49, 3, 1, "", "conclusions"], [49, 2, 1, "", "hom"], [49, 2, 1, "", "is_subdiagram"], [49, 3, 1, "", "objects"], [49, 3, 1, "", "premises"], [49, 2, 1, "", "subdiagram_from_objects"]], "sympy.categories.Morphism": [[49, 3, 1, "", "codomain"], [49, 2, 1, "", "compose"], [49, 3, 1, "", "domain"]], "sympy.categories.NamedMorphism": [[49, 3, 1, "", "name"]], "sympy.categories.diagram_drawing": [[49, 1, 1, "", "ArrowStringDescription"], [49, 1, 1, "", "DiagramGrid"], [49, 1, 1, "", "XypicDiagramDrawer"], [49, 4, 1, "", "preview_diagram"], [49, 4, 1, "", "xypic_draw_diagram"]], "sympy.categories.diagram_drawing.DiagramGrid": [[49, 3, 1, "", "height"], [49, 3, 1, "", "morphisms"], [49, 3, 1, "", "width"]], "sympy.categories.diagram_drawing.XypicDiagramDrawer": [[49, 2, 1, "", "draw"]], "sympy.codegen": [[50, 0, 0, "-", "algorithms"], [50, 0, 0, "-", "approximations"], [50, 0, 0, "-", "ast"], [50, 0, 0, "-", "cfunctions"], [50, 0, 0, "-", "cnodes"], [50, 0, 0, "-", "cutils"], [50, 0, 0, "-", "cxxnodes"], [50, 0, 0, "-", "fnodes"], [50, 0, 0, "-", "futils"], [50, 0, 0, "-", "matrix_nodes"], [50, 0, 0, "-", "pyutils"], [50, 0, 0, "-", "rewriting"]], "sympy.codegen.algorithms": [[50, 4, 1, "", "newtons_method"], [50, 4, 1, "", "newtons_method_function"]], "sympy.codegen.approximations": [[50, 1, 1, "", "SeriesApprox"], [50, 1, 1, "", "SumApprox"]], "sympy.codegen.ast": [[50, 1, 1, "", "Assignment"], [50, 1, 1, "", "AssignmentBase"], [50, 1, 1, "", "Attribute"], [50, 1, 1, "", "AugmentedAssignment"], [50, 1, 1, "", "BreakToken"], [50, 1, 1, "", "CodeBlock"], [50, 1, 1, "", "Comment"], [50, 1, 1, "", "ComplexType"], [50, 1, 1, "", "ContinueToken"], [50, 1, 1, "", "Declaration"], [50, 1, 1, "", "Element"], [50, 1, 1, "", "FloatBaseType"], [50, 1, 1, "", "FloatType"], [50, 1, 1, "", "For"], [50, 1, 1, "", "FunctionCall"], [50, 1, 1, "", "FunctionDefinition"], [50, 1, 1, "", "FunctionPrototype"], [50, 1, 1, "", "IntBaseType"], [50, 1, 1, "", "Node"], [50, 1, 1, "", "NoneToken"], [50, 1, 1, "", "Pointer"], [50, 1, 1, "", "Print"], [50, 1, 1, "", "QuotedString"], [50, 1, 1, "", "Raise"], [50, 1, 1, "", "Return"], [50, 1, 1, "", "RuntimeError_"], [50, 1, 1, "", "Scope"], [50, 1, 1, "", "SignedIntType"], [50, 1, 1, "", "Stream"], [50, 1, 1, "", "String"], [50, 1, 1, "", "Token"], [50, 1, 1, "", "Type"], [50, 1, 1, "", "UnsignedIntType"], [50, 1, 1, "", "Variable"], [50, 1, 1, "", "While"], [50, 4, 1, "", "aug_assign"]], "sympy.codegen.ast.CodeBlock": [[50, 2, 1, "", "cse"], [50, 2, 1, "", "topological_sort"]], "sympy.codegen.ast.FloatBaseType": [[50, 5, 1, "", "cast_nocheck"]], "sympy.codegen.ast.FloatType": [[50, 2, 1, "", "cast_nocheck"], [50, 3, 1, "", "decimal_dig"], [50, 3, 1, "", "dig"], [50, 3, 1, "", "eps"], [50, 3, 1, "", "max"], [50, 3, 1, "", "max_exponent"], [50, 3, 1, "", "min_exponent"], [50, 3, 1, "", "tiny"]], "sympy.codegen.ast.Node": [[50, 2, 1, "", "attr_params"]], "sympy.codegen.ast.Token": [[50, 2, 1, "", "kwargs"]], "sympy.codegen.ast.Type": [[50, 2, 1, "", "cast_check"], [50, 2, 1, "", "from_expr"]], "sympy.codegen.ast.Variable": [[50, 2, 1, "", "as_Declaration"], [50, 2, 1, "", "deduced"]], "sympy.codegen.cfunctions": [[50, 1, 1, "", "Cbrt"], [50, 1, 1, "", "Sqrt"], [50, 1, 1, "", "exp2"], [50, 1, 1, "", "expm1"], [50, 1, 1, "", "fma"], [50, 1, 1, "", "hypot"], [50, 1, 1, "", "log10"], [50, 1, 1, "", "log1p"], [50, 1, 1, "", "log2"]], "sympy.codegen.cfunctions.Cbrt": [[50, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.Sqrt": [[50, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.exp2": [[50, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.expm1": [[50, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.fma": [[50, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.hypot": [[50, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log10": [[50, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log1p": [[50, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log2": [[50, 2, 1, "", "fdiff"]], "sympy.codegen.cnodes": [[50, 1, 1, "", "CommaOperator"], [50, 1, 1, "", "Label"], [50, 1, 1, "", "PostDecrement"], [50, 1, 1, "", "PostIncrement"], [50, 1, 1, "", "PreDecrement"], [50, 1, 1, "", "PreIncrement"], [50, 4, 1, "", "alignof"], [50, 1, 1, "", "goto"], [50, 4, 1, "", "sizeof"], [50, 1, 1, "", "struct"], [50, 1, 1, "", "union"]], "sympy.codegen.cutils": [[50, 4, 1, "", "render_as_source_file"]], "sympy.codegen.cxxnodes": [[50, 1, 1, "", "using"]], "sympy.codegen.fnodes": [[50, 1, 1, "", "ArrayConstructor"], [50, 1, 1, "", "Do"], [50, 1, 1, "", "Extent"], [50, 1, 1, "", "FortranReturn"], [50, 1, 1, "", "GoTo"], [50, 1, 1, "", "ImpliedDoLoop"], [50, 1, 1, "", "Module"], [50, 1, 1, "", "Program"], [50, 1, 1, "", "Subroutine"], [50, 1, 1, "", "SubroutineCall"], [50, 4, 1, "", "allocated"], [50, 4, 1, "", "array"], [50, 4, 1, "", "bind_C"], [50, 1, 1, "", "cmplx"], [50, 4, 1, "", "dimension"], [50, 1, 1, "", "dsign"], [50, 1, 1, "", "isign"], [50, 1, 1, "", "kind"], [50, 4, 1, "", "lbound"], [50, 1, 1, "", "literal_dp"], [50, 1, 1, "", "literal_sp"], [50, 1, 1, "", "merge"], [50, 4, 1, "", "reshape"], [50, 4, 1, "", "shape"], [50, 4, 1, "", "size"], [50, 1, 1, "", "use"], [50, 1, 1, "", "use_rename"]], "sympy.codegen.futils": [[50, 4, 1, "", "render_as_module"]], "sympy.codegen.matrix_nodes": [[50, 1, 1, "", "MatrixSolve"]], "sympy.codegen.pyutils": [[50, 4, 1, "", "render_as_module"]], "sympy.codegen.rewriting": [[50, 1, 1, "", "FuncMinusOneOptim"], [50, 1, 1, "", "Optimization"], [50, 1, 1, "", "ReplaceOptim"], [50, 4, 1, "", "create_expand_pow_optimization"], [50, 4, 1, "", "optimize"]], "sympy.codegen.rewriting.FuncMinusOneOptim": [[50, 2, 1, "", "replace_in_Add"]], "sympy.combinatorics": [[52, 0, 0, "-", "galois"], [61, 0, 0, "-", "generators"], [53, 0, 0, "-", "graycode"], [54, 0, 0, "-", "group_constructs"], [55, 0, 0, "-", "group_numbers"], [57, 0, 0, "-", "named_groups"], [58, 0, 0, "-", "partitions"], [60, 0, 0, "-", "perm_groups"], [61, 0, 0, "-", "permutations"], [62, 0, 0, "-", "polyhedron"], [63, 0, 0, "-", "prufer"], [64, 0, 0, "-", "subsets"], [65, 0, 0, "-", "tensor_can"], [66, 0, 0, "-", "testutil"], [67, 0, 0, "-", "util"]], "sympy.combinatorics.galois": [[52, 4, 1, "", "A4_in_S6"], [52, 4, 1, "", "A4xC2"], [52, 4, 1, "", "G18"], [52, 4, 1, "", "G36m"], [52, 4, 1, "", "G36p"], [52, 4, 1, "", "G72"], [52, 4, 1, "", "M20"], [52, 4, 1, "", "PGL2F5"], [52, 4, 1, "", "PSL2F5"], [52, 1, 1, "", "S1TransitiveSubgroups"], [52, 1, 1, "", "S2TransitiveSubgroups"], [52, 1, 1, "", "S3TransitiveSubgroups"], [52, 4, 1, "", "S3_in_S6"], [52, 1, 1, "", "S4TransitiveSubgroups"], [52, 4, 1, "", "S4m"], [52, 4, 1, "", "S4p"], [52, 4, 1, "", "S4xC2"], [52, 1, 1, "", "S5TransitiveSubgroups"], [52, 1, 1, "", "S6TransitiveSubgroups"], [52, 4, 1, "", "find_transitive_subgroups_of_S6"], [52, 4, 1, "", "four_group"]], "sympy.combinatorics.generators": [[61, 2, 1, "", "alternating"], [61, 2, 1, "", "cyclic"], [61, 2, 1, "", "dihedral"], [61, 2, 1, "", "symmetric"]], "sympy.combinatorics.graycode": [[53, 1, 1, "", "GrayCode"], [53, 2, 1, "", "bin_to_gray"], [53, 2, 1, "", "get_subset_from_bitstring"], [53, 2, 1, "", "gray_to_bin"], [53, 2, 1, "", "graycode_subsets"], [53, 2, 1, "", "random_bitstring"]], "sympy.combinatorics.graycode.GrayCode": [[53, 3, 1, "", "current"], [53, 2, 1, "", "generate_gray"], [53, 3, 1, "", "n"], [53, 2, 1, "", "next"], [53, 3, 1, "", "rank"], [53, 3, 1, "", "selections"], [53, 2, 1, "", "skip"], [53, 2, 1, "", "unrank"]], "sympy.combinatorics.group_constructs": [[54, 4, 1, "", "DirectProduct"]], "sympy.combinatorics.group_numbers": [[55, 4, 1, "", "groups_count"], [55, 4, 1, "", "is_abelian_number"], [55, 4, 1, "", "is_cyclic_number"], [55, 4, 1, "", "is_nilpotent_number"]], "sympy.combinatorics.named_groups": [[57, 4, 1, "", "AbelianGroup"], [57, 4, 1, "", "AlternatingGroup"], [57, 4, 1, "", "CyclicGroup"], [57, 4, 1, "", "DihedralGroup"], [57, 4, 1, "", "SymmetricGroup"]], "sympy.combinatorics.partitions": [[58, 1, 1, "", "IntegerPartition"], [58, 1, 1, "", "Partition"], [58, 4, 1, "", "RGS_enum"], [58, 4, 1, "", "RGS_generalized"], [58, 4, 1, "", "RGS_rank"], [58, 4, 1, "", "RGS_unrank"], [58, 4, 1, "", "random_integer_partition"]], "sympy.combinatorics.partitions.IntegerPartition": [[58, 2, 1, "", "as_dict"], [58, 2, 1, "", "as_ferrers"], [58, 3, 1, "", "conjugate"], [58, 2, 1, "", "next_lex"], [58, 2, 1, "", "prev_lex"]], "sympy.combinatorics.partitions.Partition": [[58, 3, 1, "", "RGS"], [58, 2, 1, "", "from_rgs"], [58, 3, 1, "", "partition"], [58, 3, 1, "", "rank"], [58, 2, 1, "", "sort_key"]], "sympy.combinatorics.perm_groups": [[60, 1, 1, "", "PermutationGroup"]], "sympy.combinatorics.perm_groups.PermutationGroup": [[60, 2, 1, "", "__contains__"], [60, 2, 1, "", "__mul__"], [60, 2, 1, "", "__new__"], [60, 5, 1, "", "__weakref__"], [60, 2, 1, "", "_coset_representative"], [60, 2, 1, "", "_distinct_primes_lemma"], [60, 2, 1, "", "_eval_is_alt_sym_monte_carlo"], [60, 2, 1, "", "_eval_is_alt_sym_naive"], [60, 2, 1, "", "_p_elements_group"], [60, 2, 1, "", "_random_pr_init"], [60, 2, 1, "", "_sylow_alt_sym"], [60, 2, 1, "", "_union_find_merge"], [60, 2, 1, "", "_union_find_rep"], [60, 2, 1, "", "_verify"], [60, 2, 1, "", "abelian_invariants"], [60, 3, 1, "", "base"], [60, 2, 1, "", "baseswap"], [60, 3, 1, "", "basic_orbits"], [60, 3, 1, "", "basic_stabilizers"], [60, 3, 1, "", "basic_transversals"], [60, 2, 1, "", "center"], [60, 2, 1, "", "centralizer"], [60, 2, 1, "", "commutator"], [60, 2, 1, "", "composition_series"], [60, 2, 1, "", "conjugacy_class"], [60, 2, 1, "", "conjugacy_classes"], [60, 2, 1, "", "contains"], [60, 2, 1, "", "coset_factor"], [60, 2, 1, "", "coset_rank"], [60, 2, 1, "", "coset_table"], [60, 2, 1, "", "coset_transversal"], [60, 2, 1, "", "coset_unrank"], [60, 3, 1, "", "degree"], [60, 2, 1, "", "derived_series"], [60, 2, 1, "", "derived_subgroup"], [60, 3, 1, "", "elements"], [60, 2, 1, "", "equals"], [60, 2, 1, "", "generate"], [60, 2, 1, "", "generate_dimino"], [60, 2, 1, "", "generate_schreier_sims"], [60, 2, 1, "", "generator_product"], [60, 3, 1, "", "generators"], [60, 3, 1, "", "identity"], [60, 2, 1, "", "index"], [60, 3, 1, "", "is_abelian"], [60, 2, 1, "", "is_alt_sym"], [60, 3, 1, "", "is_alternating"], [60, 3, 1, "", "is_cyclic"], [60, 3, 1, "", "is_dihedral"], [60, 2, 1, "", "is_elementary"], [60, 3, 1, "", "is_nilpotent"], [60, 2, 1, "", "is_normal"], [60, 3, 1, "", "is_perfect"], [60, 3, 1, "", "is_polycyclic"], [60, 2, 1, "", "is_primitive"], [60, 3, 1, "", "is_solvable"], [60, 2, 1, "", "is_subgroup"], [60, 3, 1, "", "is_symmetric"], [60, 2, 1, "", "is_transitive"], [60, 3, 1, "", "is_trivial"], [60, 2, 1, "", "lower_central_series"], [60, 2, 1, "", "make_perm"], [60, 3, 1, "", "max_div"], [60, 2, 1, "", "minimal_block"], [60, 2, 1, "", "minimal_blocks"], [60, 2, 1, "", "normal_closure"], [60, 2, 1, "", "orbit"], [60, 2, 1, "", "orbit_rep"], [60, 2, 1, "", "orbit_transversal"], [60, 2, 1, "", "orbits"], [60, 2, 1, "", "order"], [60, 2, 1, "", "pointwise_stabilizer"], [60, 2, 1, "", "polycyclic_group"], [60, 2, 1, "", "presentation"], [60, 2, 1, "", "random"], [60, 2, 1, "", "random_pr"], [60, 2, 1, "", "random_stab"], [60, 2, 1, "", "schreier_sims"], [60, 2, 1, "", "schreier_sims_incremental"], [60, 2, 1, "", "schreier_sims_random"], [60, 2, 1, "", "schreier_vector"], [60, 2, 1, "", "stabilizer"], [60, 3, 1, "", "strong_gens"], [60, 2, 1, "", "strong_presentation"], [60, 2, 1, "", "subgroup"], [60, 2, 1, "", "subgroup_search"], [60, 2, 1, "", "sylow_subgroup"], [60, 3, 1, "", "transitivity_degree"]], "sympy.combinatorics.permutations": [[61, 1, 1, "", "Cycle"], [61, 1, 1, "", "Permutation"], [61, 4, 1, "", "_af_parity"]], "sympy.combinatorics.permutations.Cycle": [[61, 2, 1, "", "list"]], "sympy.combinatorics.permutations.Permutation": [[61, 2, 1, "", "apply"], [61, 3, 1, "", "array_form"], [61, 2, 1, "", "ascents"], [61, 2, 1, "", "atoms"], [61, 3, 1, "", "cardinality"], [61, 2, 1, "", "commutator"], [61, 2, 1, "", "commutes_with"], [61, 3, 1, "", "cycle_structure"], [61, 3, 1, "", "cycles"], [61, 3, 1, "", "cyclic_form"], [61, 2, 1, "", "descents"], [61, 2, 1, "", "from_inversion_vector"], [61, 2, 1, "", "from_sequence"], [61, 3, 1, "", "full_cyclic_form"], [61, 2, 1, "", "get_adjacency_distance"], [61, 2, 1, "", "get_adjacency_matrix"], [61, 2, 1, "", "get_positional_distance"], [61, 2, 1, "", "get_precedence_distance"], [61, 2, 1, "", "get_precedence_matrix"], [61, 2, 1, "", "index"], [61, 2, 1, "", "inversion_vector"], [61, 2, 1, "", "inversions"], [61, 3, 1, "", "is_Empty"], [61, 3, 1, "", "is_Identity"], [61, 3, 1, "", "is_Singleton"], [61, 3, 1, "", "is_even"], [61, 3, 1, "", "is_odd"], [61, 2, 1, "", "josephus"], [61, 2, 1, "", "length"], [61, 2, 1, "", "list"], [61, 2, 1, "", "max"], [61, 2, 1, "", "min"], [61, 2, 1, "", "mul_inv"], [61, 2, 1, "", "next_lex"], [61, 2, 1, "", "next_nonlex"], [61, 2, 1, "", "next_trotterjohnson"], [61, 2, 1, "", "order"], [61, 2, 1, "", "parity"], [61, 2, 1, "", "random"], [61, 2, 1, "", "rank"], [61, 2, 1, "", "rank_nonlex"], [61, 2, 1, "", "rank_trotterjohnson"], [61, 2, 1, "", "resize"], [61, 2, 1, "", "rmul"], [61, 2, 1, "", "rmul_with_af"], [61, 2, 1, "", "runs"], [61, 2, 1, "", "signature"], [61, 3, 1, "", "size"], [61, 2, 1, "", "support"], [61, 2, 1, "", "transpositions"], [61, 2, 1, "", "unrank_lex"], [61, 2, 1, "", "unrank_nonlex"], [61, 2, 1, "", "unrank_trotterjohnson"]], "sympy.combinatorics.polyhedron": [[62, 1, 1, "", "Polyhedron"]], "sympy.combinatorics.polyhedron.Polyhedron": [[62, 3, 1, "", "array_form"], [62, 3, 1, "", "corners"], [62, 3, 1, "", "cyclic_form"], [62, 3, 1, "", "edges"], [62, 3, 1, "", "faces"], [62, 3, 1, "", "pgroup"], [62, 2, 1, "", "reset"], [62, 2, 1, "", "rotate"], [62, 3, 1, "", "size"], [62, 3, 1, "", "vertices"]], "sympy.combinatorics.prufer": [[63, 1, 1, "", "Prufer"]], "sympy.combinatorics.prufer.Prufer": [[63, 2, 1, "", "edges"], [63, 2, 1, "", "next"], [63, 3, 1, "", "nodes"], [63, 2, 1, "", "prev"], [63, 2, 1, "", "prufer_rank"], [63, 3, 1, "", "prufer_repr"], [63, 3, 1, "", "rank"], [63, 3, 1, "", "size"], [63, 2, 1, "", "to_prufer"], [63, 2, 1, "", "to_tree"], [63, 3, 1, "", "tree_repr"], [63, 2, 1, "", "unrank"]], "sympy.combinatorics.subsets": [[64, 1, 1, "", "Subset"], [64, 2, 1, "", "ksubsets"]], "sympy.combinatorics.subsets.Subset": [[64, 2, 1, "", "bitlist_from_subset"], [64, 3, 1, "", "cardinality"], [64, 2, 1, "", "iterate_binary"], [64, 2, 1, "", "iterate_graycode"], [64, 2, 1, "", "next_binary"], [64, 2, 1, "", "next_gray"], [64, 2, 1, "", "next_lexicographic"], [64, 2, 1, "", "prev_binary"], [64, 2, 1, "", "prev_gray"], [64, 2, 1, "", "prev_lexicographic"], [64, 3, 1, "", "rank_binary"], [64, 3, 1, "", "rank_gray"], [64, 3, 1, "", "rank_lexicographic"], [64, 3, 1, "", "size"], [64, 3, 1, "", "subset"], [64, 2, 1, "", "subset_from_bitlist"], [64, 2, 1, "", "subset_indices"], [64, 3, 1, "", "superset"], [64, 3, 1, "", "superset_size"], [64, 2, 1, "", "unrank_binary"], [64, 2, 1, "", "unrank_gray"]], "sympy.combinatorics.tensor_can": [[65, 4, 1, "", "bsgs_direct_product"], [65, 4, 1, "", "canonicalize"], [65, 4, 1, "", "double_coset_can_rep"], [65, 4, 1, "", "get_symmetric_group_sgs"]], "sympy.combinatorics.testutil": [[66, 4, 1, "", "_cmp_perm_lists"], [66, 4, 1, "", "_naive_list_centralizer"], [66, 4, 1, "", "_verify_bsgs"], [66, 4, 1, "", "_verify_centralizer"], [66, 4, 1, "", "_verify_normal_closure"]], "sympy.combinatorics.util": [[67, 4, 1, "", "_base_ordering"], [67, 4, 1, "", "_check_cycles_alt_sym"], [67, 4, 1, "", "_distribute_gens_by_base"], [67, 4, 1, "", "_handle_precomputed_bsgs"], [67, 4, 1, "", "_orbits_transversals_from_bsgs"], [67, 4, 1, "", "_remove_gens"], [67, 4, 1, "", "_strip"], [67, 4, 1, "", "_strong_gens_from_distr"]], "sympy.concrete.expr_with_intlimits": [[68, 1, 1, "", "ExprWithIntLimits"]], "sympy.concrete.expr_with_intlimits.ExprWithIntLimits": [[68, 2, 1, "", "change_index"], [68, 3, 1, "", "has_empty_sequence"], [68, 2, 1, "", "index"], [68, 2, 1, "", "reorder"], [68, 2, 1, "", "reorder_limit"]], "sympy.concrete.expr_with_limits": [[96, 1, 1, "", "ExprWithLimits"]], "sympy.concrete.expr_with_limits.ExprWithLimits": [[96, 3, 1, "", "bound_symbols"], [96, 3, 1, "", "free_symbols"], [96, 3, 1, "", "function"], [96, 3, 1, "", "has_finite_limits"], [96, 3, 1, "", "has_reversed_limits"], [96, 3, 1, "", "is_number"], [96, 3, 1, "", "limits"], [96, 3, 1, "", "variables"]], "sympy.concrete.gosper": [[68, 4, 1, "", "gosper_normal"], [68, 4, 1, "", "gosper_sum"], [68, 4, 1, "", "gosper_term"]], "sympy.concrete.products": [[68, 1, 1, "", "Product"], [68, 4, 1, "", "product"]], "sympy.concrete.products.Product": [[68, 2, 1, "", "is_convergent"], [68, 2, 1, "", "reverse_order"]], "sympy.concrete.summations": [[68, 1, 1, "", "Sum"], [68, 4, 1, "", "summation"]], "sympy.concrete.summations.Sum": [[68, 2, 1, "", "euler_maclaurin"], [68, 2, 1, "", "eval_zeta_function"], [68, 2, 1, "", "is_absolutely_convergent"], [68, 2, 1, "", "is_convergent"], [68, 2, 1, "", "reverse_order"]], "sympy.core": [[69, 0, 0, "-", "add"], [69, 0, 0, "-", "assumptions"], [69, 0, 0, "-", "basic"], [69, 0, 0, "-", "cache"], [69, 0, 0, "-", "containers"], [69, 0, 0, "-", "evalf"], [69, 0, 0, "-", "expr"], [69, 0, 0, "-", "exprtools"], [69, 0, 0, "-", "function"], [69, 0, 0, "-", "intfunc"], [69, 0, 0, "-", "kind"], [69, 0, 0, "-", "mod"], [69, 0, 0, "-", "mul"], [69, 0, 0, "-", "multidimensional"], [69, 0, 0, "-", "numbers"], [69, 0, 0, "-", "power"], [69, 0, 0, "-", "random"], [69, 0, 0, "-", "relational"], [69, 0, 0, "-", "singleton"], [69, 0, 0, "-", "symbol"], [69, 0, 0, "-", "sympify"], [69, 0, 0, "-", "traversal"]], "sympy.core.add": [[69, 1, 1, "", "Add"]], "sympy.core.add.Add": [[69, 2, 1, "", "as_coeff_Add"], [69, 2, 1, "", "as_coeff_add"], [69, 2, 1, "", "as_content_primitive"], [69, 2, 1, "", "as_numer_denom"], [69, 2, 1, "", "as_real_imag"], [69, 2, 1, "", "as_two_terms"], [69, 2, 1, "", "extract_leading_order"], [69, 2, 1, "", "flatten"], [69, 2, 1, "", "primitive"]], "sympy.core.basic": [[69, 1, 1, "", "Atom"], [69, 1, 1, "", "Basic"]], "sympy.core.basic.Basic": [[69, 3, 1, "", "args"], [69, 2, 1, "", "as_content_primitive"], [69, 2, 1, "", "as_dummy"], [69, 3, 1, "", "assumptions0"], [69, 2, 1, "", "atoms"], [69, 3, 1, "", "canonical_variables"], [69, 2, 1, "", "class_key"], [69, 2, 1, "", "compare"], [69, 2, 1, "", "count"], [69, 2, 1, "", "count_ops"], [69, 2, 1, "", "doit"], [69, 2, 1, "", "dummy_eq"], [69, 2, 1, "", "find"], [69, 3, 1, "", "free_symbols"], [69, 2, 1, "", "fromiter"], [69, 3, 1, "", "func"], [69, 2, 1, "", "has"], [69, 2, 1, "", "has_free"], [69, 2, 1, "", "has_xfree"], [69, 3, 1, "", "is_comparable"], [69, 2, 1, "", "is_same"], [69, 2, 1, "", "match"], [69, 2, 1, "", "matches"], [69, 2, 1, "", "rcall"], [69, 2, 1, "", "refine"], [69, 2, 1, "", "replace"], [69, 2, 1, "", "rewrite"], [69, 2, 1, "", "simplify"], [69, 2, 1, "", "sort_key"], [69, 2, 1, "", "subs"], [69, 2, 1, "", "xreplace"]], "sympy.core.cache": [[69, 4, 1, "", "__cacheit"]], "sympy.core.containers": [[69, 1, 1, "", "Dict"], [69, 1, 1, "", "Tuple"], [69, 1, 1, "", "TupleKind"]], "sympy.core.containers.Dict": [[69, 2, 1, "", "get"], [69, 2, 1, "", "items"], [69, 2, 1, "", "keys"], [69, 2, 1, "", "values"]], "sympy.core.containers.Tuple": [[69, 2, 1, "", "index"], [69, 3, 1, "", "kind"], [69, 2, 1, "", "tuple_count"]], "sympy.core.evalf": [[69, 1, 1, "", "EvalfMixin"], [69, 4, 1, "", "N"], [69, 1, 1, "", "PrecisionExhausted"]], "sympy.core.evalf.EvalfMixin": [[69, 2, 1, "", "evalf"], [69, 2, 1, "", "n"]], "sympy.core.expr": [[69, 1, 1, "", "AtomicExpr"], [69, 1, 1, "", "Expr"], [69, 1, 1, "", "UnevaluatedExpr"]], "sympy.core.expr.Expr": [[69, 2, 1, "", "apart"], [69, 2, 1, "", "args_cnc"], [69, 2, 1, "", "as_coeff_Add"], [69, 2, 1, "", "as_coeff_Mul"], [69, 2, 1, "", "as_coeff_add"], [69, 2, 1, "", "as_coeff_exponent"], [69, 2, 1, "", "as_coeff_mul"], [69, 2, 1, "", "as_coefficient"], [69, 2, 1, "", "as_coefficients_dict"], [69, 2, 1, "", "as_content_primitive"], [69, 2, 1, "", "as_expr"], [69, 2, 1, "", "as_independent"], [69, 2, 1, "", "as_leading_term"], [69, 2, 1, "", "as_numer_denom"], [69, 2, 1, "", "as_ordered_factors"], [69, 2, 1, "", "as_ordered_terms"], [69, 2, 1, "", "as_poly"], [69, 2, 1, "", "as_powers_dict"], [69, 2, 1, "", "as_real_imag"], [69, 2, 1, "", "as_terms"], [69, 2, 1, "", "aseries"], [69, 2, 1, "", "cancel"], [69, 2, 1, "", "coeff"], [69, 2, 1, "", "collect"], [69, 2, 1, "", "combsimp"], [69, 2, 1, "", "compute_leading_term"], [69, 2, 1, "", "conjugate"], [69, 2, 1, "", "could_extract_minus_sign"], [69, 2, 1, "", "equals"], [69, 2, 1, "", "expand"], [69, 3, 1, "", "expr_free_symbols"], [69, 2, 1, "", "extract_additively"], [69, 2, 1, "", "extract_branch_factor"], [69, 2, 1, "", "extract_multiplicatively"], [69, 2, 1, "", "factor"], [69, 2, 1, "", "fourier_series"], [69, 2, 1, "", "fps"], [69, 2, 1, "", "gammasimp"], [69, 2, 1, "", "getO"], [69, 2, 1, "", "getn"], [69, 2, 1, "", "integrate"], [69, 2, 1, "", "invert"], [69, 2, 1, "", "is_algebraic_expr"], [69, 2, 1, "", "is_constant"], [69, 2, 1, "", "is_meromorphic"], [69, 3, 1, "", "is_number"], [69, 2, 1, "", "is_polynomial"], [69, 2, 1, "", "is_rational_function"], [69, 2, 1, "", "leadterm"], [69, 2, 1, "", "limit"], [69, 2, 1, "", "lseries"], [69, 2, 1, "", "normal"], [69, 2, 1, "", "nseries"], [69, 2, 1, "", "nsimplify"], [69, 2, 1, "", "powsimp"], [69, 2, 1, "", "primitive"], [69, 2, 1, "", "radsimp"], [69, 2, 1, "", "ratsimp"], [69, 2, 1, "", "removeO"], [69, 2, 1, "", "round"], [69, 2, 1, "", "separate"], [69, 2, 1, "", "series"], [69, 2, 1, "", "taylor_term"], [69, 2, 1, "", "together"], [69, 2, 1, "", "trigsimp"]], "sympy.core.exprtools": [[69, 4, 1, "", "factor_terms"], [69, 4, 1, "", "gcd_terms"]], "sympy.core.function": [[69, 1, 1, "", "Derivative"], [69, 1, 1, "", "Function"], [69, 1, 1, "", "FunctionClass"], [69, 1, 1, "", "Lambda"], [69, 1, 1, "", "PoleError"], [69, 1, 1, "", "Subs"], [69, 1, 1, "", "WildFunction"], [69, 4, 1, "", "count_ops"], [69, 4, 1, "", "diff"], [69, 4, 1, "", "expand"], [69, 4, 1, "", "expand_complex"], [69, 4, 1, "", "expand_func"], [69, 4, 1, "", "expand_log"], [69, 4, 1, "", "expand_mul"], [69, 4, 1, "", "expand_multinomial"], [69, 4, 1, "", "expand_power_base"], [69, 4, 1, "", "expand_power_exp"], [69, 4, 1, "", "expand_trig"], [69, 4, 1, "", "nfloat"]], "sympy.core.function.Derivative": [[69, 3, 1, "", "_diff_wrt"], [69, 2, 1, "", "_sort_variable_count"], [69, 2, 1, "", "as_finite_difference"], [69, 2, 1, "", "doit_numerically"]], "sympy.core.function.Function": [[69, 2, 1, "", "as_base_exp"], [69, 2, 1, "", "fdiff"], [69, 2, 1, "", "is_singular"]], "sympy.core.function.FunctionClass": [[69, 3, 1, "", "nargs"]], "sympy.core.function.Lambda": [[69, 3, 1, "", "bound_symbols"], [69, 3, 1, "", "expr"], [69, 3, 1, "", "is_identity"], [69, 3, 1, "", "signature"], [69, 3, 1, "", "variables"]], "sympy.core.function.Subs": [[69, 3, 1, "", "bound_symbols"], [69, 3, 1, "", "expr"], [69, 3, 1, "", "point"], [69, 3, 1, "", "variables"]], "sympy.core.intfunc": [[69, 4, 1, "", "igcd"], [69, 4, 1, "", "igcd_lehmer"], [69, 4, 1, "", "igcdex"], [69, 4, 1, "", "ilcm"], [69, 4, 1, "", "integer_log"], [69, 4, 1, "", "integer_nthroot"], [69, 4, 1, "", "isqrt"], [69, 4, 1, "", "mod_inverse"], [69, 4, 1, "", "num_digits"], [69, 4, 1, "", "trailing"]], "sympy.core.kind": [[69, 5, 1, "", "BooleanKind"], [69, 1, 1, "", "Kind"], [69, 5, 1, "", "NumberKind"], [69, 5, 1, "", "UndefinedKind"]], "sympy.core.mod": [[69, 1, 1, "", "Mod"]], "sympy.core.mul": [[69, 1, 1, "", "Mul"], [69, 4, 1, "", "prod"]], "sympy.core.mul.Mul": [[69, 2, 1, "", "as_coeff_Mul"], [69, 2, 1, "", "as_content_primitive"], [69, 2, 1, "", "as_ordered_factors"], [69, 2, 1, "", "as_two_terms"], [69, 2, 1, "", "flatten"]], "sympy.core.multidimensional": [[69, 1, 1, "", "vectorize"]], "sympy.core.numbers": [[69, 1, 1, "", "AlgebraicNumber"], [69, 1, 1, "", "Catalan"], [69, 1, 1, "", "ComplexInfinity"], [69, 1, 1, "", "EulerGamma"], [69, 1, 1, "", "Exp1"], [69, 1, 1, "", "Float"], [69, 1, 1, "", "GoldenRatio"], [69, 1, 1, "", "Half"], [69, 1, 1, "", "ImaginaryUnit"], [69, 1, 1, "", "Infinity"], [69, 1, 1, "", "Integer"], [69, 1, 1, "", "NaN"], [69, 1, 1, "", "NegativeInfinity"], [69, 1, 1, "", "NegativeOne"], [69, 1, 1, "", "Number"], [69, 1, 1, "", "NumberSymbol"], [69, 1, 1, "", "One"], [69, 1, 1, "", "Pi"], [69, 1, 1, "", "Rational"], [69, 5, 1, "", "RealNumber"], [69, 1, 1, "", "TribonacciConstant"], [69, 1, 1, "", "Zero"], [69, 4, 1, "", "equal_valued"], [69, 4, 1, "", "mod_inverse"], [69, 4, 1, "", "seterr"]], "sympy.core.numbers.AlgebraicNumber": [[69, 2, 1, "", "__new__"], [69, 2, 1, "", "as_expr"], [69, 2, 1, "", "as_poly"], [69, 2, 1, "", "coeffs"], [69, 2, 1, "", "field_element"], [69, 3, 1, "", "is_aliased"], [69, 3, 1, "", "is_primitive_element"], [69, 2, 1, "", "minpoly_of_element"], [69, 2, 1, "", "native_coeffs"], [69, 2, 1, "", "primitive_element"], [69, 2, 1, "", "to_algebraic_integer"], [69, 2, 1, "", "to_primitive_element"], [69, 2, 1, "", "to_root"]], "sympy.core.numbers.Number": [[69, 2, 1, "", "as_coeff_Add"], [69, 2, 1, "", "as_coeff_Mul"], [69, 2, 1, "", "cofactors"], [69, 2, 1, "", "gcd"], [69, 2, 1, "", "lcm"]], "sympy.core.numbers.NumberSymbol": [[69, 2, 1, "", "approximation"]], "sympy.core.numbers.Rational": [[69, 2, 1, "", "as_coeff_Add"], [69, 2, 1, "", "as_coeff_Mul"], [69, 2, 1, "", "as_content_primitive"], [69, 2, 1, "", "factors"], [69, 2, 1, "", "limit_denominator"]], "sympy.core.power": [[69, 1, 1, "", "Pow"]], "sympy.core.power.Pow": [[69, 2, 1, "", "as_base_exp"], [69, 2, 1, "", "as_content_primitive"]], "sympy.core.random": [[69, 4, 1, "", "_randint"], [69, 4, 1, "", "_randrange"], [69, 4, 1, "", "random_complex_number"], [69, 4, 1, "", "test_derivative_numerically"], [69, 4, 1, "", "verify_numerically"]], "sympy.core.relational": [[69, 5, 1, "", "Eq"], [69, 1, 1, "", "Equality"], [69, 5, 1, "", "Ge"], [69, 1, 1, "", "GreaterThan"], [69, 5, 1, "", "Gt"], [69, 5, 1, "", "Le"], [69, 1, 1, "", "LessThan"], [69, 5, 1, "", "Lt"], [69, 5, 1, "", "Ne"], [69, 5, 1, "", "Rel"], [69, 1, 1, "", "Relational"], [69, 1, 1, "", "StrictGreaterThan"], [69, 1, 1, "", "StrictLessThan"], [69, 1, 1, "", "Unequality"]], "sympy.core.relational.Equality": [[69, 2, 1, "", "as_poly"], [69, 2, 1, "", "integrate"]], "sympy.core.relational.Relational": [[69, 3, 1, "", "canonical"], [69, 2, 1, "", "equals"], [69, 3, 1, "", "lhs"], [69, 3, 1, "", "negated"], [69, 3, 1, "", "reversed"], [69, 3, 1, "", "reversedsign"], [69, 3, 1, "", "rhs"], [69, 3, 1, "", "strict"], [69, 3, 1, "", "weak"]], "sympy.core.singleton": [[69, 1, 1, "", "Singleton"], [69, 1, 1, "", "SingletonRegistry"]], "sympy.core.sorting": [[69, 4, 1, "", "default_sort_key"], [69, 4, 1, "", "ordered"]], "sympy.core.symbol": [[69, 1, 1, "", "Dummy"], [69, 1, 1, "", "Symbol"], [69, 1, 1, "", "Wild"], [69, 4, 1, "", "symbols"], [69, 4, 1, "", "var"]], "sympy.core.sympify": [[69, 4, 1, "", "sympify"]], "sympy.core.traversal": [[69, 4, 1, "", "bottom_up"], [69, 4, 1, "", "postorder_traversal"], [69, 4, 1, "", "preorder_traversal"], [69, 4, 1, "", "use"], [69, 4, 1, "", "walk"]], "sympy.crypto": [[70, 0, 0, "-", "crypto"]], "sympy.crypto.crypto": [[70, 4, 1, "", "AZ"], [70, 4, 1, "", "bifid5_square"], [70, 4, 1, "", "bifid6_square"], [70, 4, 1, "", "check_and_join"], [70, 4, 1, "", "cycle_list"], [70, 4, 1, "", "decipher_affine"], [70, 4, 1, "", "decipher_atbash"], [70, 4, 1, "", "decipher_bifid"], [70, 4, 1, "", "decipher_bifid5"], [70, 4, 1, "", "decipher_bifid6"], [70, 4, 1, "", "decipher_elgamal"], [70, 4, 1, "", "decipher_gm"], [70, 4, 1, "", "decipher_hill"], [70, 4, 1, "", "decipher_kid_rsa"], [70, 4, 1, "", "decipher_railfence"], [70, 4, 1, "", "decipher_rot13"], [70, 4, 1, "", "decipher_rsa"], [70, 4, 1, "", "decipher_shift"], [70, 4, 1, "", "decipher_vigenere"], [70, 4, 1, "", "decode_morse"], [70, 4, 1, "", "dh_private_key"], [70, 4, 1, "", "dh_public_key"], [70, 4, 1, "", "dh_shared_key"], [70, 4, 1, "", "elgamal_private_key"], [70, 4, 1, "", "elgamal_public_key"], [70, 4, 1, "", "encipher_affine"], [70, 4, 1, "", "encipher_atbash"], [70, 4, 1, "", "encipher_bifid"], [70, 4, 1, "", "encipher_bifid5"], [70, 4, 1, "", "encipher_bifid6"], [70, 4, 1, "", "encipher_elgamal"], [70, 4, 1, "", "encipher_gm"], [70, 4, 1, "", "encipher_hill"], [70, 4, 1, "", "encipher_kid_rsa"], [70, 4, 1, "", "encipher_railfence"], [70, 4, 1, "", "encipher_rot13"], [70, 4, 1, "", "encipher_rsa"], [70, 4, 1, "", "encipher_shift"], [70, 4, 1, "", "encipher_substitution"], [70, 4, 1, "", "encipher_vigenere"], [70, 4, 1, "", "encode_morse"], [70, 4, 1, "", "gm_private_key"], [70, 4, 1, "", "gm_public_key"], [70, 4, 1, "", "kid_rsa_private_key"], [70, 4, 1, "", "kid_rsa_public_key"], [70, 4, 1, "", "lfsr_autocorrelation"], [70, 4, 1, "", "lfsr_connection_polynomial"], [70, 4, 1, "", "lfsr_sequence"], [70, 4, 1, "", "padded_key"], [70, 4, 1, "", "rsa_private_key"], [70, 4, 1, "", "rsa_public_key"]], "sympy.diffgeom": [[71, 1, 1, "", "BaseCovarDerivativeOp"], [71, 1, 1, "", "BaseScalarField"], [71, 1, 1, "", "BaseVectorField"], [71, 1, 1, "", "Commutator"], [71, 1, 1, "", "CoordSystem"], [71, 1, 1, "", "CoordinateSymbol"], [71, 1, 1, "", "CovarDerivativeOp"], [71, 1, 1, "", "Differential"], [71, 1, 1, "", "LieDerivative"], [71, 1, 1, "", "Manifold"], [71, 1, 1, "", "Patch"], [71, 1, 1, "", "Point"], [71, 1, 1, "", "TensorProduct"], [71, 1, 1, "", "WedgeProduct"], [71, 4, 1, "", "intcurve_diffequ"], [71, 4, 1, "", "intcurve_series"], [71, 4, 1, "", "metric_to_Christoffel_1st"], [71, 4, 1, "", "metric_to_Christoffel_2nd"], [71, 4, 1, "", "metric_to_Ricci_components"], [71, 4, 1, "", "metric_to_Riemann_components"], [71, 4, 1, "", "twoform_to_matrix"], [71, 4, 1, "", "vectors_in_basis"]], "sympy.diffgeom.CoordSystem": [[71, 2, 1, "", "base_oneform"], [71, 2, 1, "", "base_oneforms"], [71, 2, 1, "", "base_scalar"], [71, 2, 1, "", "base_scalars"], [71, 2, 1, "", "base_vector"], [71, 2, 1, "", "base_vectors"], [71, 2, 1, "", "coord_function"], [71, 2, 1, "", "coord_functions"], [71, 2, 1, "", "coord_tuple_transform_to"], [71, 2, 1, "", "jacobian"], [71, 2, 1, "", "jacobian_determinant"], [71, 2, 1, "", "jacobian_matrix"], [71, 2, 1, "", "point"], [71, 2, 1, "", "point_to_coords"], [71, 2, 1, "", "transform"], [71, 2, 1, "", "transformation"]], "sympy.diffgeom.Point": [[71, 2, 1, "", "coords"]], "sympy.discrete": [[72, 0, 0, "-", "convolutions"], [72, 0, 0, "-", "transforms"]], "sympy.discrete.convolutions": [[72, 4, 1, "", "convolution"], [72, 4, 1, "", "convolution_fft"], [72, 4, 1, "", "convolution_fwht"], [72, 4, 1, "", "convolution_ntt"], [72, 4, 1, "", "convolution_subset"], [72, 4, 1, "", "covering_product"], [72, 4, 1, "", "intersecting_product"]], "sympy.discrete.transforms": [[72, 4, 1, "", "fft"], [72, 4, 1, "", "fwht"], [72, 4, 1, "", "ifft"], [72, 4, 1, "", "ifwht"], [72, 4, 1, "", "intt"], [72, 4, 1, "", "inverse_mobius_transform"], [72, 4, 1, "", "mobius_transform"], [72, 4, 1, "", "ntt"]], "sympy.external.pythonmpq": [[218, 1, 1, "", "PythonMPQ"]], "sympy.functions.combinatorial.factorials": [[74, 1, 1, "", "FallingFactorial"], [74, 1, 1, "", "MultiFactorial"], [74, 1, 1, "", "RisingFactorial"], [74, 1, 1, "", "binomial"], [74, 1, 1, "", "factorial"], [74, 1, 1, "", "factorial2"], [74, 1, 1, "", "subfactorial"]], "sympy.functions.combinatorial.numbers": [[74, 1, 1, "", "andre"], [74, 1, 1, "", "bell"], [74, 1, 1, "", "bernoulli"], [74, 1, 1, "", "catalan"], [74, 1, 1, "", "divisor_sigma"], [74, 1, 1, "", "euler"], [74, 1, 1, "", "fibonacci"], [74, 1, 1, "", "genocchi"], [74, 1, 1, "", "harmonic"], [74, 1, 1, "", "jacobi_symbol"], [74, 1, 1, "", "kronecker_symbol"], [74, 1, 1, "", "legendre_symbol"], [74, 1, 1, "", "lucas"], [74, 1, 1, "", "mobius"], [74, 4, 1, "", "nC"], [74, 4, 1, "", "nP"], [74, 4, 1, "", "nT"], [74, 1, 1, "", "partition"], [74, 1, 1, "", "primenu"], [74, 1, 1, "", "primeomega"], [74, 1, 1, "", "primepi"], [74, 1, 1, "", "reduced_totient"], [74, 4, 1, "", "stirling"], [74, 1, 1, "", "totient"], [74, 1, 1, "", "tribonacci"], [74, 1, 1, "", "udivisor_sigma"]], "sympy.functions.elementary.complexes": [[75, 1, 1, "", "Abs"], [75, 1, 1, "", "arg"], [75, 1, 1, "", "conjugate"], [75, 1, 1, "", "im"], [75, 1, 1, "", "periodic_argument"], [75, 1, 1, "", "polar_lift"], [75, 1, 1, "", "principal_branch"], [75, 1, 1, "", "re"], [75, 1, 1, "", "sign"]], "sympy.functions.elementary.complexes.Abs": [[75, 2, 1, "", "fdiff"]], "sympy.functions.elementary.complexes.im": [[75, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.complexes.re": [[75, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.exponential": [[75, 1, 1, "", "LambertW"], [75, 1, 1, "", "exp"], [75, 1, 1, "", "exp_polar"], [75, 1, 1, "", "log"]], "sympy.functions.elementary.exponential.LambertW": [[75, 2, 1, "", "fdiff"]], "sympy.functions.elementary.exponential.exp": [[75, 2, 1, "", "as_real_imag"], [75, 3, 1, "", "base"], [75, 2, 1, "", "fdiff"], [75, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.exponential.log": [[75, 2, 1, "", "as_base_exp"], [75, 2, 1, "", "as_real_imag"], [75, 2, 1, "", "fdiff"], [75, 2, 1, "", "inverse"], [75, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic": [[75, 1, 1, "", "HyperbolicFunction"], [75, 1, 1, "", "acosh"], [75, 1, 1, "", "acoth"], [75, 1, 1, "", "acsch"], [75, 1, 1, "", "asech"], [75, 1, 1, "", "asinh"], [75, 1, 1, "", "atanh"], [75, 1, 1, "", "cosh"], [75, 1, 1, "", "coth"], [75, 1, 1, "", "csch"], [75, 1, 1, "", "sech"], [75, 1, 1, "", "sinh"], [75, 1, 1, "", "tanh"]], "sympy.functions.elementary.hyperbolic.acosh": [[75, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acoth": [[75, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acsch": [[75, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asech": [[75, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asinh": [[75, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.atanh": [[75, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.coth": [[75, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.csch": [[75, 2, 1, "", "fdiff"], [75, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.sinh": [[75, 2, 1, "", "as_real_imag"], [75, 2, 1, "", "fdiff"], [75, 2, 1, "", "inverse"], [75, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.tanh": [[75, 2, 1, "", "inverse"]], "sympy.functions.elementary.integers": [[75, 1, 1, "", "RoundFunction"], [75, 1, 1, "", "ceiling"], [75, 1, 1, "", "floor"], [75, 1, 1, "", "frac"]], "sympy.functions.elementary.miscellaneous": [[75, 1, 1, "", "IdentityFunction"], [75, 1, 1, "", "Max"], [75, 1, 1, "", "Min"], [75, 4, 1, "", "cbrt"], [75, 4, 1, "", "real_root"], [75, 4, 1, "", "root"], [75, 4, 1, "", "sqrt"]], "sympy.functions.elementary.piecewise": [[75, 1, 1, "", "ExprCondPair"], [75, 1, 1, "", "Piecewise"], [75, 4, 1, "", "piecewise_exclusive"], [75, 4, 1, "", "piecewise_fold"]], "sympy.functions.elementary.piecewise.ExprCondPair": [[75, 3, 1, "", "cond"], [75, 3, 1, "", "expr"]], "sympy.functions.elementary.piecewise.Piecewise": [[75, 2, 1, "", "_eval_integral"], [75, 2, 1, "", "as_expr_set_pairs"], [75, 2, 1, "", "doit"], [75, 2, 1, "", "eval"], [75, 2, 1, "", "piecewise_integrate"]], "sympy.functions.elementary.trigonometric": [[75, 1, 1, "", "acos"], [75, 1, 1, "", "acot"], [75, 1, 1, "", "acsc"], [75, 1, 1, "", "asec"], [75, 1, 1, "", "asin"], [75, 1, 1, "", "atan"], [75, 1, 1, "", "atan2"], [75, 1, 1, "", "cos"], [75, 1, 1, "", "cot"], [75, 1, 1, "", "csc"], [75, 1, 1, "", "sec"], [75, 1, 1, "", "sin"], [75, 1, 1, "", "sinc"], [75, 1, 1, "", "tan"]], "sympy.functions.elementary.trigonometric.acos": [[75, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acot": [[75, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acsc": [[75, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asec": [[75, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asin": [[75, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.atan": [[75, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.cot": [[75, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.tan": [[75, 2, 1, "", "inverse"]], "sympy.functions.special": [[77, 0, 0, "-", "bessel"], [77, 0, 0, "-", "beta_functions"], [77, 0, 0, "-", "elliptic_integrals"], [77, 0, 0, "-", "error_functions"], [77, 0, 0, "-", "gamma_functions"], [77, 0, 0, "-", "mathieu_functions"], [77, 0, 0, "-", "polynomials"], [77, 0, 0, "-", "singularity_functions"], [77, 0, 0, "-", "zeta_functions"]], "sympy.functions.special.bessel": [[77, 1, 1, "", "AiryBase"], [77, 1, 1, "", "BesselBase"], [77, 1, 1, "", "airyai"], [77, 1, 1, "", "airyaiprime"], [77, 1, 1, "", "airybi"], [77, 1, 1, "", "airybiprime"], [77, 1, 1, "", "besseli"], [77, 1, 1, "", "besselj"], [77, 1, 1, "", "besselk"], [77, 1, 1, "", "bessely"], [77, 1, 1, "", "hankel1"], [77, 1, 1, "", "hankel2"], [77, 1, 1, "", "jn"], [77, 4, 1, "", "jn_zeros"], [77, 1, 1, "", "marcumq"], [77, 1, 1, "", "yn"]], "sympy.functions.special.bessel.BesselBase": [[77, 3, 1, "", "argument"], [77, 3, 1, "", "order"]], "sympy.functions.special.beta_functions": [[77, 1, 1, "", "beta"]], "sympy.functions.special.bsplines": [[77, 4, 1, "", "bspline_basis"], [77, 4, 1, "", "bspline_basis_set"], [77, 4, 1, "", "interpolating_spline"]], "sympy.functions.special.delta_functions": [[77, 1, 1, "", "DiracDelta"], [77, 1, 1, "", "Heaviside"]], "sympy.functions.special.delta_functions.DiracDelta": [[77, 2, 1, "", "eval"], [77, 2, 1, "", "fdiff"], [77, 2, 1, "", "is_simple"]], "sympy.functions.special.delta_functions.Heaviside": [[77, 2, 1, "", "eval"], [77, 2, 1, "", "fdiff"], [77, 3, 1, "", "pargs"]], "sympy.functions.special.elliptic_integrals": [[77, 1, 1, "", "elliptic_e"], [77, 1, 1, "", "elliptic_f"], [77, 1, 1, "", "elliptic_k"], [77, 1, 1, "", "elliptic_pi"]], "sympy.functions.special.error_functions": [[77, 1, 1, "", "Chi"], [77, 1, 1, "", "Ci"], [77, 4, 1, "", "E1"], [77, 1, 1, "", "Ei"], [77, 1, 1, "", "FresnelIntegral"], [77, 1, 1, "", "Li"], [77, 1, 1, "", "Shi"], [77, 1, 1, "", "Si"], [77, 1, 1, "", "erf"], [77, 1, 1, "", "erf2"], [77, 1, 1, "", "erf2inv"], [77, 1, 1, "", "erfc"], [77, 1, 1, "", "erfcinv"], [77, 1, 1, "", "erfi"], [77, 1, 1, "", "erfinv"], [77, 1, 1, "", "expint"], [77, 1, 1, "", "fresnelc"], [77, 1, 1, "", "fresnels"], [77, 1, 1, "", "li"]], "sympy.functions.special.error_functions.erf": [[77, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfc": [[77, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfcinv": [[77, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfinv": [[77, 2, 1, "", "inverse"]], "sympy.functions.special.gamma_functions": [[77, 1, 1, "", "digamma"], [77, 1, 1, "", "gamma"], [77, 1, 1, "", "loggamma"], [77, 1, 1, "", "lowergamma"], [77, 1, 1, "", "multigamma"], [77, 1, 1, "", "polygamma"], [77, 1, 1, "", "trigamma"], [77, 1, 1, "", "uppergamma"]], "sympy.functions.special.hyper": [[77, 1, 1, "", "appellf1"], [77, 1, 1, "", "hyper"], [77, 1, 1, "", "meijerg"]], "sympy.functions.special.hyper.hyper": [[77, 3, 1, "", "ap"], [77, 3, 1, "", "argument"], [77, 3, 1, "", "bq"], [77, 3, 1, "", "convergence_statement"], [77, 3, 1, "", "eta"], [77, 3, 1, "", "radius_of_convergence"]], "sympy.functions.special.hyper.meijerg": [[77, 3, 1, "", "an"], [77, 3, 1, "", "aother"], [77, 3, 1, "", "ap"], [77, 3, 1, "", "argument"], [77, 3, 1, "", "bm"], [77, 3, 1, "", "bother"], [77, 3, 1, "", "bq"], [77, 3, 1, "", "delta"], [77, 2, 1, "", "get_period"], [77, 2, 1, "", "integrand"], [77, 3, 1, "", "is_number"], [77, 3, 1, "", "nu"]], "sympy.functions.special.mathieu_functions": [[77, 1, 1, "", "MathieuBase"], [77, 1, 1, "", "mathieuc"], [77, 1, 1, "", "mathieucprime"], [77, 1, 1, "", "mathieus"], [77, 1, 1, "", "mathieusprime"]], "sympy.functions.special.polynomials": [[77, 1, 1, "", "assoc_laguerre"], [77, 1, 1, "", "assoc_legendre"], [77, 1, 1, "", "chebyshevt"], [77, 1, 1, "", "chebyshevt_root"], [77, 1, 1, "", "chebyshevu"], [77, 1, 1, "", "chebyshevu_root"], [77, 1, 1, "", "gegenbauer"], [77, 1, 1, "", "hermite"], [77, 1, 1, "", "hermite_prob"], [77, 1, 1, "", "jacobi"], [77, 4, 1, "", "jacobi_normalized"], [77, 1, 1, "", "laguerre"], [77, 1, 1, "", "legendre"]], "sympy.functions.special.singularity_functions": [[77, 1, 1, "", "SingularityFunction"]], "sympy.functions.special.singularity_functions.SingularityFunction": [[77, 2, 1, "", "eval"], [77, 2, 1, "", "fdiff"]], "sympy.functions.special.spherical_harmonics": [[77, 1, 1, "", "Ynm"], [77, 4, 1, "", "Ynm_c"], [77, 1, 1, "", "Znm"]], "sympy.functions.special.tensor_functions": [[77, 4, 1, "", "Eijk"], [77, 1, 1, "", "KroneckerDelta"], [77, 1, 1, "", "LeviCivita"], [77, 4, 1, "", "eval_levicivita"]], "sympy.functions.special.tensor_functions.KroneckerDelta": [[77, 2, 1, "", "eval"], [77, 3, 1, "", "indices_contain_equal_information"], [77, 3, 1, "", "is_above_fermi"], [77, 3, 1, "", "is_below_fermi"], [77, 3, 1, "", "is_only_above_fermi"], [77, 3, 1, "", "is_only_below_fermi"], [77, 3, 1, "", "killable_index"], [77, 3, 1, "", "preferred_index"]], "sympy.functions.special.zeta_functions": [[77, 1, 1, "", "dirichlet_eta"], [77, 1, 1, "", "lerchphi"], [77, 1, 1, "", "polylog"], [77, 1, 1, "", "stieltjes"], [77, 1, 1, "", "zeta"]], "sympy.geometry": [[78, 0, 0, "-", "curve"], [79, 0, 0, "-", "ellipse"], [80, 0, 0, "-", "entity"], [82, 0, 0, "-", "line"], [83, 0, 0, "-", "plane"], [84, 0, 0, "-", "point"], [85, 0, 0, "-", "polygon"], [86, 0, 0, "-", "util"]], "sympy.geometry.curve": [[78, 1, 1, "", "Curve"]], "sympy.geometry.curve.Curve": [[78, 3, 1, "", "ambient_dimension"], [78, 2, 1, "", "arbitrary_point"], [78, 3, 1, "", "free_symbols"], [78, 3, 1, "", "functions"], [78, 3, 1, "", "length"], [78, 3, 1, "", "limits"], [78, 3, 1, "", "parameter"], [78, 2, 1, "", "plot_interval"], [78, 2, 1, "", "rotate"], [78, 2, 1, "", "scale"], [78, 2, 1, "", "translate"]], "sympy.geometry.ellipse": [[79, 1, 1, "", "Circle"], [79, 1, 1, "", "Ellipse"]], "sympy.geometry.ellipse.Circle": [[79, 3, 1, "", "circumference"], [79, 2, 1, "", "equation"], [79, 2, 1, "", "intersection"], [79, 3, 1, "", "radius"], [79, 2, 1, "", "reflect"], [79, 2, 1, "", "scale"], [79, 3, 1, "", "vradius"]], "sympy.geometry.ellipse.Ellipse": [[79, 3, 1, "", "apoapsis"], [79, 2, 1, "", "arbitrary_point"], [79, 3, 1, "", "area"], [79, 2, 1, "", "auxiliary_circle"], [79, 3, 1, "", "bounds"], [79, 3, 1, "", "center"], [79, 3, 1, "", "circumference"], [79, 2, 1, "", "director_circle"], [79, 3, 1, "", "eccentricity"], [79, 2, 1, "", "encloses_point"], [79, 2, 1, "", "equation"], [79, 2, 1, "", "evolute"], [79, 3, 1, "", "foci"], [79, 3, 1, "", "focus_distance"], [79, 3, 1, "", "hradius"], [79, 2, 1, "", "intersection"], [79, 2, 1, "", "is_tangent"], [79, 3, 1, "", "major"], [79, 3, 1, "", "minor"], [79, 2, 1, "", "normal_lines"], [79, 3, 1, "", "periapsis"], [79, 2, 1, "", "plot_interval"], [79, 2, 1, "", "polar_second_moment_of_area"], [79, 2, 1, "", "random_point"], [79, 2, 1, "", "reflect"], [79, 2, 1, "", "rotate"], [79, 2, 1, "", "scale"], [79, 2, 1, "", "second_moment_of_area"], [79, 2, 1, "", "section_modulus"], [79, 3, 1, "", "semilatus_rectum"], [79, 2, 1, "", "tangent_lines"], [79, 3, 1, "", "vradius"]], "sympy.geometry.entity": [[80, 1, 1, "", "GeometryEntity"]], "sympy.geometry.entity.GeometryEntity": [[80, 3, 1, "", "ambient_dimension"], [80, 3, 1, "", "bounds"], [80, 2, 1, "", "encloses"], [80, 2, 1, "", "intersection"], [80, 2, 1, "", "is_similar"], [80, 2, 1, "", "parameter_value"], [80, 2, 1, "", "reflect"], [80, 2, 1, "", "rotate"], [80, 2, 1, "", "scale"], [80, 2, 1, "", "translate"]], "sympy.geometry.line": [[82, 1, 1, "", "Line"], [82, 1, 1, "", "Line2D"], [82, 1, 1, "", "Line3D"], [82, 1, 1, "", "LinearEntity"], [82, 1, 1, "", "LinearEntity2D"], [82, 1, 1, "", "LinearEntity3D"], [82, 1, 1, "", "Ray"], [82, 1, 1, "", "Ray2D"], [82, 1, 1, "", "Ray3D"], [82, 1, 1, "", "Segment"], [82, 1, 1, "", "Segment2D"], [82, 1, 1, "", "Segment3D"]], "sympy.geometry.line.Line": [[82, 2, 1, "", "contains"], [82, 2, 1, "", "distance"], [82, 2, 1, "", "equals"], [82, 2, 1, "", "plot_interval"]], "sympy.geometry.line.Line2D": [[82, 3, 1, "", "coefficients"], [82, 2, 1, "", "equation"]], "sympy.geometry.line.Line3D": [[82, 2, 1, "", "distance"], [82, 2, 1, "", "equation"]], "sympy.geometry.line.LinearEntity": [[82, 3, 1, "", "ambient_dimension"], [82, 2, 1, "", "angle_between"], [82, 2, 1, "", "arbitrary_point"], [82, 2, 1, "", "are_concurrent"], [82, 2, 1, "", "bisectors"], [82, 2, 1, "", "contains"], [82, 3, 1, "", "direction"], [82, 2, 1, "", "intersection"], [82, 2, 1, "", "is_parallel"], [82, 2, 1, "", "is_perpendicular"], [82, 2, 1, "", "is_similar"], [82, 3, 1, "", "length"], [82, 3, 1, "", "p1"], [82, 3, 1, "", "p2"], [82, 2, 1, "", "parallel_line"], [82, 2, 1, "", "perpendicular_line"], [82, 2, 1, "", "perpendicular_segment"], [82, 3, 1, "", "points"], [82, 2, 1, "", "projection"], [82, 2, 1, "", "random_point"], [82, 2, 1, "", "smallest_angle_between"]], "sympy.geometry.line.LinearEntity2D": [[82, 3, 1, "", "bounds"], [82, 2, 1, "", "perpendicular_line"], [82, 3, 1, "", "slope"]], "sympy.geometry.line.LinearEntity3D": [[82, 3, 1, "", "direction_cosine"], [82, 3, 1, "", "direction_ratio"]], "sympy.geometry.line.Ray": [[82, 2, 1, "", "contains"], [82, 2, 1, "", "distance"], [82, 2, 1, "", "equals"], [82, 2, 1, "", "plot_interval"], [82, 3, 1, "", "source"]], "sympy.geometry.line.Ray2D": [[82, 2, 1, "", "closing_angle"], [82, 3, 1, "", "xdirection"], [82, 3, 1, "", "ydirection"]], "sympy.geometry.line.Ray3D": [[82, 3, 1, "", "xdirection"], [82, 3, 1, "", "ydirection"], [82, 3, 1, "", "zdirection"]], "sympy.geometry.line.Segment": [[82, 2, 1, "", "contains"], [82, 2, 1, "", "distance"], [82, 2, 1, "", "equals"], [82, 3, 1, "", "length"], [82, 3, 1, "", "midpoint"], [82, 2, 1, "", "perpendicular_bisector"], [82, 2, 1, "", "plot_interval"]], "sympy.geometry.plane": [[83, 1, 1, "", "Plane"]], "sympy.geometry.plane.Plane": [[83, 2, 1, "", "angle_between"], [83, 2, 1, "", "arbitrary_point"], [83, 2, 1, "", "are_concurrent"], [83, 2, 1, "", "distance"], [83, 2, 1, "", "equals"], [83, 2, 1, "", "equation"], [83, 2, 1, "", "intersection"], [83, 2, 1, "", "is_coplanar"], [83, 2, 1, "", "is_parallel"], [83, 2, 1, "", "is_perpendicular"], [83, 3, 1, "", "normal_vector"], [83, 3, 1, "", "p1"], [83, 2, 1, "", "parallel_plane"], [83, 2, 1, "", "parameter_value"], [83, 2, 1, "", "perpendicular_line"], [83, 2, 1, "", "perpendicular_plane"], [83, 2, 1, "", "projection"], [83, 2, 1, "", "projection_line"], [83, 2, 1, "", "random_point"]], "sympy.geometry.point": [[84, 1, 1, "", "Point"], [84, 1, 1, "", "Point2D"], [84, 1, 1, "", "Point3D"]], "sympy.geometry.point.Point": [[84, 2, 1, "", "affine_rank"], [84, 3, 1, "", "ambient_dimension"], [84, 2, 1, "", "are_coplanar"], [84, 2, 1, "", "canberra_distance"], [84, 2, 1, "", "distance"], [84, 2, 1, "", "dot"], [84, 2, 1, "", "equals"], [84, 2, 1, "", "intersection"], [84, 2, 1, "", "is_collinear"], [84, 2, 1, "", "is_concyclic"], [84, 3, 1, "", "is_nonzero"], [84, 2, 1, "", "is_scalar_multiple"], [84, 3, 1, "", "is_zero"], [84, 3, 1, "", "length"], [84, 2, 1, "", "midpoint"], [84, 3, 1, "", "origin"], [84, 3, 1, "", "orthogonal_direction"], [84, 2, 1, "", "project"], [84, 2, 1, "", "taxicab_distance"], [84, 3, 1, "", "unit"]], "sympy.geometry.point.Point2D": [[84, 3, 1, "", "bounds"], [84, 3, 1, "", "coordinates"], [84, 2, 1, "", "rotate"], [84, 2, 1, "", "scale"], [84, 2, 1, "", "transform"], [84, 2, 1, "", "translate"], [84, 3, 1, "", "x"], [84, 3, 1, "", "y"]], "sympy.geometry.point.Point3D": [[84, 2, 1, "", "are_collinear"], [84, 3, 1, "", "coordinates"], [84, 2, 1, "", "direction_cosine"], [84, 2, 1, "", "direction_ratio"], [84, 2, 1, "", "intersection"], [84, 2, 1, "", "scale"], [84, 2, 1, "", "transform"], [84, 2, 1, "", "translate"], [84, 3, 1, "", "x"], [84, 3, 1, "", "y"], [84, 3, 1, "", "z"]], "sympy.geometry.polygon": [[85, 1, 1, "", "Polygon"], [85, 1, 1, "", "RegularPolygon"], [85, 1, 1, "", "Triangle"]], "sympy.geometry.polygon.Polygon": [[85, 3, 1, "", "angles"], [85, 2, 1, "", "arbitrary_point"], [85, 3, 1, "", "area"], [85, 2, 1, "", "bisectors"], [85, 3, 1, "", "bounds"], [85, 3, 1, "", "centroid"], [85, 2, 1, "", "cut_section"], [85, 2, 1, "", "distance"], [85, 2, 1, "", "encloses_point"], [85, 2, 1, "", "first_moment_of_area"], [85, 2, 1, "", "intersection"], [85, 2, 1, "", "is_convex"], [85, 3, 1, "", "perimeter"], [85, 2, 1, "", "plot_interval"], [85, 2, 1, "", "polar_second_moment_of_area"], [85, 2, 1, "", "second_moment_of_area"], [85, 2, 1, "", "section_modulus"], [85, 3, 1, "", "sides"], [85, 3, 1, "", "vertices"]], "sympy.geometry.polygon.RegularPolygon": [[85, 3, 1, "", "angles"], [85, 3, 1, "", "apothem"], [85, 3, 1, "", "area"], [85, 3, 1, "", "args"], [85, 3, 1, "", "center"], [85, 3, 1, "", "centroid"], [85, 3, 1, "", "circumcenter"], [85, 3, 1, "", "circumcircle"], [85, 3, 1, "", "circumradius"], [85, 2, 1, "", "encloses_point"], [85, 3, 1, "", "exterior_angle"], [85, 3, 1, "", "incircle"], [85, 3, 1, "", "inradius"], [85, 3, 1, "", "interior_angle"], [85, 3, 1, "", "length"], [85, 3, 1, "", "radius"], [85, 2, 1, "", "reflect"], [85, 2, 1, "", "rotate"], [85, 3, 1, "", "rotation"], [85, 2, 1, "", "scale"], [85, 2, 1, "", "spin"], [85, 3, 1, "", "vertices"]], "sympy.geometry.polygon.Triangle": [[85, 3, 1, "", "altitudes"], [85, 2, 1, "", "bisectors"], [85, 3, 1, "", "circumcenter"], [85, 3, 1, "", "circumcircle"], [85, 3, 1, "", "circumradius"], [85, 3, 1, "", "eulerline"], [85, 3, 1, "", "excenters"], [85, 3, 1, "", "exradii"], [85, 3, 1, "", "incenter"], [85, 3, 1, "", "incircle"], [85, 3, 1, "", "inradius"], [85, 2, 1, "", "is_equilateral"], [85, 2, 1, "", "is_isosceles"], [85, 2, 1, "", "is_right"], [85, 2, 1, "", "is_scalene"], [85, 2, 1, "", "is_similar"], [85, 3, 1, "", "medial"], [85, 3, 1, "", "medians"], [85, 3, 1, "", "nine_point_circle"], [85, 3, 1, "", "orthocenter"], [85, 3, 1, "", "vertices"]], "sympy.geometry.util": [[86, 4, 1, "", "are_similar"], [86, 4, 1, "", "centroid"], [86, 4, 1, "", "convex_hull"], [86, 4, 1, "", "idiff"], [86, 4, 1, "", "intersection"]], "sympy.holonomic.holonomic": [[92, 1, 1, "", "DifferentialOperator"], [92, 1, 1, "", "DifferentialOperatorAlgebra"], [92, 4, 1, "", "DifferentialOperators"], [92, 1, 1, "", "HolonomicFunction"], [90, 4, 1, "", "_convert_poly_rat_alg"], [90, 4, 1, "", "_create_table"], [88, 4, 1, "", "expr_to_holonomic"], [88, 4, 1, "", "from_hyper"], [88, 4, 1, "", "from_meijerg"]], "sympy.holonomic.holonomic.DifferentialOperator": [[92, 2, 1, "", "is_singular"]], "sympy.holonomic.holonomic.HolonomicFunction": [[91, 2, 1, "", "composition"], [91, 2, 1, "", "diff"], [91, 2, 1, "", "evalf"], [91, 2, 1, "", "integrate"], [91, 2, 1, "", "series"], [91, 2, 1, "", "to_expr"], [91, 2, 1, "", "to_hyper"], [91, 2, 1, "", "to_meijerg"], [91, 2, 1, "", "to_sequence"]], "sympy.integrals": [[96, 0, 0, "-", "intpoly"], [94, 0, 0, "-", "meijerint"], [94, 0, 0, "-", "meijerint_doc"], [96, 0, 0, "-", "transforms"]], "sympy.integrals.deltafunctions": [[96, 4, 1, "", "deltaintegrate"]], "sympy.integrals.heurisch": [[96, 4, 1, "", "components"], [96, 4, 1, "", "heurisch"]], "sympy.integrals.integrals": [[96, 1, 1, "", "Integral"], [96, 4, 1, "", "integrate"], [96, 4, 1, "", "line_integrate"]], "sympy.integrals.integrals.Integral": [[96, 2, 1, "", "as_sum"], [96, 2, 1, "", "doit"], [96, 3, 1, "", "free_symbols"], [96, 6, 1, "", "is_commutative"], [96, 2, 1, "", "principal_value"], [96, 2, 1, "", "transform"]], "sympy.integrals.intpoly": [[96, 4, 1, "", "polytope_integrate"]], "sympy.integrals.manualintegrate": [[96, 4, 1, "", "integral_steps"], [96, 4, 1, "", "manualintegrate"]], "sympy.integrals.meijerint": [[94, 7, 1, "", "_CoeffExpValueError"], [94, 4, 1, "", "_check_antecedents"], [94, 4, 1, "", "_check_antecedents_1"], [94, 4, 1, "", "_check_antecedents_inversion"], [94, 4, 1, "", "_condsimp"], [94, 4, 1, "", "_create_lookup_table"], [94, 4, 1, "", "_dummy"], [94, 4, 1, "", "_dummy_"], [94, 4, 1, "", "_eval_cond"], [94, 4, 1, "", "_exponents"], [94, 4, 1, "", "_find_splitting_points"], [94, 4, 1, "", "_flip_g"], [94, 4, 1, "", "_functions"], [94, 4, 1, "", "_get_coeff_exp"], [94, 4, 1, "", "_guess_expansion"], [94, 4, 1, "", "_inflate_fox_h"], [94, 4, 1, "", "_inflate_g"], [94, 4, 1, "", "_int0oo"], [94, 4, 1, "", "_int0oo_1"], [94, 4, 1, "", "_int_inversion"], [94, 4, 1, "", "_is_analytic"], [94, 4, 1, "", "_meijerint_definite_2"], [94, 4, 1, "", "_meijerint_definite_3"], [94, 4, 1, "", "_meijerint_definite_4"], [94, 4, 1, "", "_meijerint_indefinite_1"], [94, 4, 1, "", "_mul_args"], [94, 4, 1, "", "_mul_as_two_parts"], [94, 4, 1, "", "_my_principal_branch"], [94, 4, 1, "", "_mytype"], [94, 4, 1, "", "_rewrite1"], [94, 4, 1, "", "_rewrite2"], [94, 4, 1, "", "_rewrite_inversion"], [94, 4, 1, "", "_rewrite_saxena"], [94, 4, 1, "", "_rewrite_saxena_1"], [94, 4, 1, "", "_rewrite_single"], [94, 4, 1, "", "_split_mul"], [94, 4, 1, "", "meijerint_definite"], [94, 4, 1, "", "meijerint_indefinite"], [94, 4, 1, "", "meijerint_inversion"]], "sympy.integrals.quadrature": [[96, 4, 1, "", "gauss_chebyshev_t"], [96, 4, 1, "", "gauss_chebyshev_u"], [96, 4, 1, "", "gauss_gen_laguerre"], [96, 4, 1, "", "gauss_hermite"], [96, 4, 1, "", "gauss_jacobi"], [96, 4, 1, "", "gauss_laguerre"], [96, 4, 1, "", "gauss_legendre"], [96, 4, 1, "", "gauss_lobatto"]], "sympy.integrals.rationaltools": [[96, 4, 1, "", "ratint"], [96, 4, 1, "", "ratint_logpart"], [96, 4, 1, "", "ratint_ratpart"]], "sympy.integrals.risch": [[96, 1, 1, "", "NonElementaryIntegral"], [96, 4, 1, "", "risch_integrate"]], "sympy.integrals.singularityfunctions": [[96, 4, 1, "", "singularityintegrate"]], "sympy.integrals.transforms": [[96, 1, 1, "", "CosineTransform"], [96, 1, 1, "", "FourierTransform"], [96, 1, 1, "", "HankelTransform"], [96, 1, 1, "", "IntegralTransform"], [96, 7, 1, "", "IntegralTransformError"], [96, 1, 1, "", "InverseCosineTransform"], [96, 1, 1, "", "InverseFourierTransform"], [96, 1, 1, "", "InverseHankelTransform"], [96, 1, 1, "", "InverseLaplaceTransform"], [96, 1, 1, "", "InverseMellinTransform"], [96, 1, 1, "", "InverseSineTransform"], [96, 1, 1, "", "LaplaceTransform"], [96, 1, 1, "", "MellinTransform"], [96, 1, 1, "", "SineTransform"], [96, 4, 1, "", "_fourier_transform"], [96, 4, 1, "", "cosine_transform"], [96, 4, 1, "", "fourier_transform"], [96, 4, 1, "", "hankel_transform"], [96, 4, 1, "", "inverse_cosine_transform"], [96, 4, 1, "", "inverse_fourier_transform"], [96, 4, 1, "", "inverse_hankel_transform"], [96, 4, 1, "", "inverse_laplace_transform"], [96, 4, 1, "", "inverse_mellin_transform"], [96, 4, 1, "", "inverse_sine_transform"], [96, 4, 1, "", "laplace_correspondence"], [96, 4, 1, "", "laplace_initial_conds"], [96, 4, 1, "", "laplace_transform"], [96, 4, 1, "", "mellin_transform"], [96, 4, 1, "", "sine_transform"]], "sympy.integrals.transforms.IntegralTransform": [[96, 2, 1, "", "doit"], [96, 3, 1, "", "function"], [96, 3, 1, "", "function_variable"], [96, 3, 1, "", "transform_variable"]], "sympy.integrals.transforms.InverseLaplaceTransform": [[96, 2, 1, "", "doit"]], "sympy.integrals.transforms.LaplaceTransform": [[96, 2, 1, "", "doit"]], "sympy.integrals.trigonometry": [[96, 4, 1, "", "trigintegrate"]], "sympy.interactive": [[97, 0, 0, "-", "printing"], [97, 0, 0, "-", "session"]], "sympy.interactive.printing": [[97, 4, 1, "", "init_printing"]], "sympy.interactive.session": [[97, 4, 1, "", "enable_automatic_int_sympification"], [97, 4, 1, "", "enable_automatic_symbols"], [97, 4, 1, "", "init_ipython_session"], [97, 4, 1, "", "init_python_session"], [97, 4, 1, "", "init_session"], [97, 4, 1, "", "int_to_Integer"]], "sympy.liealgebras.cartan_matrix": [[98, 4, 1, "", "CartanMatrix"]], "sympy.liealgebras.cartan_type": [[98, 1, 1, "", "CartanType_generator"], [98, 1, 1, "", "Standard_Cartan"]], "sympy.liealgebras.cartan_type.Standard_Cartan": [[98, 2, 1, "", "rank"], [98, 2, 1, "", "series"]], "sympy.liealgebras.dynkin_diagram": [[98, 4, 1, "", "DynkinDiagram"]], "sympy.liealgebras.root_system": [[98, 1, 1, "", "RootSystem"]], "sympy.liealgebras.root_system.RootSystem": [[98, 2, 1, "", "add_as_roots"], [98, 2, 1, "", "add_simple_roots"], [98, 2, 1, "", "all_roots"], [98, 2, 1, "", "cartan_matrix"], [98, 2, 1, "", "dynkin_diagram"], [98, 2, 1, "", "root_space"], [98, 2, 1, "", "simple_roots"]], "sympy.liealgebras.type_a": [[98, 1, 1, "", "TypeA"]], "sympy.liealgebras.type_a.TypeA": [[98, 2, 1, "", "basic_root"], [98, 2, 1, "", "basis"], [98, 2, 1, "", "cartan_matrix"], [98, 2, 1, "", "dimension"], [98, 2, 1, "", "highest_root"], [98, 2, 1, "", "lie_algebra"], [98, 2, 1, "", "positive_roots"], [98, 2, 1, "", "roots"], [98, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_b": [[98, 1, 1, "", "TypeB"]], "sympy.liealgebras.type_b.TypeB": [[98, 2, 1, "", "basic_root"], [98, 2, 1, "", "basis"], [98, 2, 1, "", "cartan_matrix"], [98, 2, 1, "", "dimension"], [98, 2, 1, "", "lie_algebra"], [98, 2, 1, "", "positive_roots"], [98, 2, 1, "", "roots"], [98, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_c": [[98, 1, 1, "", "TypeC"]], "sympy.liealgebras.type_c.TypeC": [[98, 2, 1, "", "basic_root"], [98, 2, 1, "", "basis"], [98, 2, 1, "", "cartan_matrix"], [98, 2, 1, "", "dimension"], [98, 2, 1, "", "lie_algebra"], [98, 2, 1, "", "positive_roots"], [98, 2, 1, "", "roots"], [98, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_d": [[98, 1, 1, "", "TypeD"]], "sympy.liealgebras.type_d.TypeD": [[98, 2, 1, "", "basic_root"], [98, 2, 1, "", "basis"], [98, 2, 1, "", "cartan_matrix"], [98, 2, 1, "", "dimension"], [98, 2, 1, "", "lie_algebra"], [98, 2, 1, "", "positive_roots"], [98, 2, 1, "", "roots"], [98, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_e": [[98, 1, 1, "", "TypeE"]], "sympy.liealgebras.type_e.TypeE": [[98, 2, 1, "", "basic_root"], [98, 2, 1, "", "basis"], [98, 2, 1, "", "cartan_matrix"], [98, 2, 1, "", "dimension"], [98, 2, 1, "", "positive_roots"], [98, 2, 1, "", "roots"], [98, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_f": [[98, 1, 1, "", "TypeF"]], "sympy.liealgebras.type_f.TypeF": [[98, 2, 1, "", "basic_root"], [98, 2, 1, "", "basis"], [98, 2, 1, "", "cartan_matrix"], [98, 2, 1, "", "dimension"], [98, 2, 1, "", "positive_roots"], [98, 2, 1, "", "roots"], [98, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_g": [[98, 1, 1, "", "TypeG"]], "sympy.liealgebras.type_g.TypeG": [[98, 2, 1, "", "basis"], [98, 2, 1, "", "cartan_matrix"], [98, 2, 1, "", "dimension"], [98, 2, 1, "", "positive_roots"], [98, 2, 1, "", "roots"], [98, 2, 1, "", "simple_root"]], "sympy.liealgebras.weyl_group": [[98, 1, 1, "", "WeylGroup"]], "sympy.liealgebras.weyl_group.WeylGroup": [[98, 2, 1, "", "coxeter_diagram"], [98, 2, 1, "", "delete_doubles"], [98, 2, 1, "", "element_order"], [98, 2, 1, "", "generators"], [98, 2, 1, "", "group_name"], [98, 2, 1, "", "group_order"], [98, 2, 1, "", "matrix_form"]], "sympy.logic": [[99, 0, 0, "-", "inference"]], "sympy.logic.boolalg": [[99, 4, 1, "", "ANFform"], [99, 1, 1, "", "And"], [99, 1, 1, "", "Boolean"], [99, 1, 1, "", "BooleanFalse"], [99, 1, 1, "", "BooleanTrue"], [99, 1, 1, "", "Equivalent"], [99, 1, 1, "", "Exclusive"], [99, 1, 1, "", "ITE"], [99, 1, 1, "", "Implies"], [99, 1, 1, "", "Nand"], [99, 1, 1, "", "Nor"], [99, 1, 1, "", "Not"], [99, 1, 1, "", "Or"], [99, 4, 1, "", "POSform"], [99, 4, 1, "", "SOPform"], [99, 1, 1, "", "Xnor"], [99, 1, 1, "", "Xor"], [99, 4, 1, "", "anf_coeffs"], [99, 4, 1, "", "bool_map"], [99, 4, 1, "", "bool_maxterm"], [99, 4, 1, "", "bool_minterm"], [99, 4, 1, "", "bool_monomial"], [99, 4, 1, "", "distribute_and_over_or"], [99, 4, 1, "", "distribute_or_over_and"], [99, 4, 1, "", "distribute_xor_over_and"], [99, 4, 1, "", "eliminate_implications"], [99, 4, 1, "", "gateinputcount"], [99, 4, 1, "", "integer_to_term"], [99, 4, 1, "", "is_anf"], [99, 4, 1, "", "is_cnf"], [99, 4, 1, "", "is_dnf"], [99, 4, 1, "", "is_nnf"], [99, 4, 1, "", "simplify_logic"], [99, 4, 1, "", "term_to_integer"], [99, 4, 1, "", "to_anf"], [99, 4, 1, "", "to_cnf"], [99, 4, 1, "", "to_dnf"], [99, 4, 1, "", "to_int_repr"], [99, 4, 1, "", "to_nnf"], [99, 4, 1, "", "truth_table"]], "sympy.logic.boolalg.Boolean": [[99, 2, 1, "", "as_set"], [99, 2, 1, "", "equals"]], "sympy.logic.boolalg.BooleanFalse": [[99, 2, 1, "", "as_set"]], "sympy.logic.boolalg.BooleanTrue": [[99, 2, 1, "", "as_set"]], "sympy.logic.inference": [[99, 4, 1, "", "satisfiable"]], "sympy.matrices": [[101, 0, 0, "-", "expressions"], [102, 0, 0, "-", "immutable"], [104, 0, 0, "-", "kind"], [105, 0, 0, "-", "matrixbase"], [107, 0, 0, "-", "sparse"], [108, 0, 0, "-", "sparsetools"]], "sympy.matrices.dense": [[100, 1, 1, "", "DenseMatrix"], [105, 4, 1, "", "GramSchmidt"], [100, 5, 1, "", "Matrix"], [100, 1, 1, "", "MutableDenseMatrix"], [105, 4, 1, "", "casoratian"], [105, 4, 1, "", "diag"], [105, 4, 1, "", "eye"], [105, 4, 1, "", "hessian"], [105, 4, 1, "", "jordan_cell"], [105, 4, 1, "", "list2numpy"], [105, 4, 1, "", "matrix2numpy"], [105, 4, 1, "", "matrix_multiply_elementwise"], [105, 4, 1, "", "ones"], [105, 4, 1, "", "randMatrix"], [105, 4, 1, "", "rot_axis1"], [105, 4, 1, "", "rot_axis2"], [105, 4, 1, "", "rot_axis3"], [105, 4, 1, "", "rot_ccw_axis1"], [105, 4, 1, "", "rot_ccw_axis2"], [105, 4, 1, "", "rot_ccw_axis3"], [105, 4, 1, "", "rot_givens"], [105, 4, 1, "", "symarray"], [105, 4, 1, "", "wronskian"], [105, 4, 1, "", "zeros"]], "sympy.matrices.dense.DenseMatrix": [[100, 2, 1, "", "LDLdecomposition"], [100, 2, 1, "", "as_immutable"], [100, 2, 1, "", "as_mutable"], [100, 2, 1, "", "cholesky"], [100, 2, 1, "", "lower_triangular_solve"], [100, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.dense.MutableDenseMatrix": [[100, 2, 1, "", "simplify"]], "sympy.matrices.expressions": [[101, 1, 1, "", "CompanionMatrix"], [101, 1, 1, "", "FunctionMatrix"], [101, 1, 1, "", "HadamardPower"], [101, 1, 1, "", "HadamardProduct"], [101, 1, 1, "", "Identity"], [101, 1, 1, "", "Inverse"], [101, 1, 1, "", "MatAdd"], [101, 1, 1, "", "MatMul"], [101, 1, 1, "", "MatPow"], [101, 1, 1, "", "MatrixExpr"], [101, 1, 1, "", "MatrixPermute"], [101, 1, 1, "", "MatrixSet"], [101, 1, 1, "", "MatrixSymbol"], [101, 1, 1, "", "PermutationMatrix"], [101, 1, 1, "", "Trace"], [101, 1, 1, "", "Transpose"], [101, 1, 1, "", "ZeroMatrix"], [101, 0, 0, "-", "blockmatrix"], [101, 4, 1, "", "hadamard_product"]], "sympy.matrices.expressions.MatrixExpr": [[101, 3, 1, "", "T"], [101, 2, 1, "", "as_coeff_Mul"], [101, 2, 1, "", "as_explicit"], [101, 2, 1, "", "as_mutable"], [101, 2, 1, "", "equals"], [101, 2, 1, "", "from_index_summation"]], "sympy.matrices.expressions.blockmatrix": [[101, 1, 1, "", "BlockDiagMatrix"], [101, 1, 1, "", "BlockMatrix"], [101, 4, 1, "", "block_collapse"]], "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix": [[101, 2, 1, "", "get_diag_blocks"]], "sympy.matrices.expressions.blockmatrix.BlockMatrix": [[101, 2, 1, "", "LDUdecomposition"], [101, 2, 1, "", "LUdecomposition"], [101, 2, 1, "", "UDLdecomposition"], [101, 2, 1, "", "schur"], [101, 2, 1, "", "transpose"]], "sympy.matrices.immutable": [[102, 1, 1, "", "ImmutableDenseMatrix"], [102, 5, 1, "", "ImmutableMatrix"], [107, 1, 1, "", "ImmutableSparseMatrix"]], "sympy.matrices.kind": [[104, 1, 1, "", "MatrixKind"]], "sympy.matrices.kind.MatrixKind": [[104, 5, 1, "", "__weakref__"]], "sympy.matrices.matrixbase": [[105, 1, 1, "", "MatrixBase"], [105, 1, 1, "", "MatrixError"], [105, 1, 1, "", "NonSquareMatrixError"], [105, 1, 1, "", "ShapeError"], [105, 4, 1, "", "a2idx"]], "sympy.matrices.matrixbase.MatrixBase": [[105, 3, 1, "", "C"], [105, 3, 1, "", "D"], [105, 3, 1, "", "H"], [105, 2, 1, "", "LDLdecomposition"], [105, 2, 1, "", "LDLsolve"], [105, 2, 1, "", "LUdecomposition"], [105, 2, 1, "", "LUdecompositionFF"], [105, 2, 1, "", "LUdecomposition_Simple"], [105, 2, 1, "", "LUsolve"], [105, 2, 1, "", "QRdecomposition"], [105, 2, 1, "", "QRsolve"], [105, 3, 1, "", "T"], [105, 2, 1, "", "__abs__"], [105, 2, 1, "", "__add__"], [105, 2, 1, "", "__getitem__"], [105, 2, 1, "", "__len__"], [105, 2, 1, "", "__mul__"], [105, 2, 1, "", "__pow__"], [105, 5, 1, "", "__weakref__"], [105, 2, 1, "", "add"], [105, 2, 1, "", "adjoint"], [105, 2, 1, "", "adjugate"], [105, 2, 1, "", "analytic_func"], [105, 2, 1, "", "applyfunc"], [105, 2, 1, "", "as_real_imag"], [105, 2, 1, "", "atoms"], [105, 2, 1, "", "berkowitz_det"], [105, 2, 1, "", "berkowitz_eigenvals"], [105, 2, 1, "", "berkowitz_minors"], [105, 2, 1, "", "bidiagonal_decomposition"], [105, 2, 1, "", "bidiagonalize"], [105, 2, 1, "", "charpoly"], [105, 2, 1, "", "cholesky"], [105, 2, 1, "", "cholesky_solve"], [105, 2, 1, "", "cofactor"], [105, 2, 1, "", "cofactor_matrix"], [105, 2, 1, "", "col"], [105, 2, 1, "", "col_del"], [105, 2, 1, "", "col_insert"], [105, 2, 1, "", "col_join"], [105, 2, 1, "", "columnspace"], [105, 2, 1, "", "companion"], [105, 2, 1, "", "condition_number"], [105, 2, 1, "", "conjugate"], [105, 2, 1, "", "connected_components"], [105, 2, 1, "", "connected_components_decomposition"], [105, 2, 1, "", "copy"], [105, 2, 1, "", "cramer_solve"], [105, 2, 1, "", "cross"], [105, 2, 1, "", "det"], [105, 2, 1, "", "det_LU_decomposition"], [105, 2, 1, "", "diag"], [105, 2, 1, "", "diagonal"], [105, 2, 1, "", "diagonal_solve"], [105, 2, 1, "", "diagonalize"], [105, 2, 1, "", "diff"], [105, 2, 1, "", "dot"], [105, 2, 1, "", "dual"], [105, 2, 1, "", "echelon_form"], [105, 2, 1, "", "eigenvals"], [105, 2, 1, "", "eigenvects"], [105, 2, 1, "", "elementary_col_op"], [105, 2, 1, "", "elementary_row_op"], [105, 2, 1, "", "evalf"], [105, 2, 1, "", "exp"], [105, 2, 1, "", "expand"], [105, 2, 1, "", "extract"], [105, 2, 1, "", "eye"], [105, 3, 1, "", "free_symbols"], [105, 2, 1, "", "gauss_jordan_solve"], [105, 2, 1, "", "get_diag_blocks"], [105, 2, 1, "", "has"], [105, 2, 1, "", "hat"], [105, 2, 1, "", "hstack"], [105, 2, 1, "", "integrate"], [105, 2, 1, "", "inv"], [105, 2, 1, "", "inverse_ADJ"], [105, 2, 1, "", "inverse_BLOCK"], [105, 2, 1, "", "inverse_CH"], [105, 2, 1, "", "inverse_GE"], [105, 2, 1, "", "inverse_LDL"], [105, 2, 1, "", "inverse_LU"], [105, 2, 1, "", "inverse_QR"], [105, 2, 1, "", "irregular"], [105, 2, 1, "", "is_anti_symmetric"], [105, 2, 1, "", "is_diagonal"], [105, 2, 1, "", "is_diagonalizable"], [105, 3, 1, "", "is_echelon"], [105, 3, 1, "", "is_hermitian"], [105, 3, 1, "", "is_indefinite"], [105, 3, 1, "", "is_lower"], [105, 3, 1, "", "is_lower_hessenberg"], [105, 3, 1, "", "is_negative_definite"], [105, 3, 1, "", "is_negative_semidefinite"], [105, 2, 1, "", "is_nilpotent"], [105, 3, 1, "", "is_positive_definite"], [105, 3, 1, "", "is_positive_semidefinite"], [105, 3, 1, "", "is_square"], [105, 3, 1, "", "is_strongly_diagonally_dominant"], [105, 2, 1, "", "is_symbolic"], [105, 2, 1, "", "is_symmetric"], [105, 3, 1, "", "is_upper"], [105, 3, 1, "", "is_upper_hessenberg"], [105, 3, 1, "", "is_weakly_diagonally_dominant"], [105, 3, 1, "", "is_zero_matrix"], [105, 2, 1, "", "jacobian"], [105, 2, 1, "", "jordan_block"], [105, 2, 1, "", "jordan_form"], [105, 2, 1, "", "key2bounds"], [105, 2, 1, "", "key2ij"], [105, 2, 1, "", "left_eigenvects"], [105, 2, 1, "", "limit"], [105, 2, 1, "", "log"], [105, 2, 1, "", "lower_triangular"], [105, 2, 1, "", "lower_triangular_solve"], [105, 2, 1, "", "minor"], [105, 2, 1, "", "minor_submatrix"], [105, 2, 1, "", "multiply"], [105, 2, 1, "", "multiply_elementwise"], [105, 2, 1, "", "n"], [105, 2, 1, "", "norm"], [105, 2, 1, "", "normalized"], [105, 2, 1, "", "nullspace"], [105, 2, 1, "", "ones"], [105, 2, 1, "", "orthogonalize"], [105, 2, 1, "", "per"], [105, 2, 1, "", "permute"], [105, 2, 1, "", "permuteBkwd"], [105, 2, 1, "", "permuteFwd"], [105, 2, 1, "", "permute_cols"], [105, 2, 1, "", "permute_rows"], [105, 2, 1, "", "pinv"], [105, 2, 1, "", "pinv_solve"], [105, 2, 1, "", "pow"], [105, 2, 1, "", "print_nonzero"], [105, 2, 1, "", "project"], [105, 2, 1, "", "rank"], [105, 2, 1, "", "rank_decomposition"], [105, 2, 1, "", "refine"], [105, 2, 1, "", "replace"], [105, 2, 1, "", "reshape"], [105, 2, 1, "", "rmultiply"], [105, 2, 1, "", "rot90"], [105, 2, 1, "", "row"], [105, 2, 1, "", "row_del"], [105, 2, 1, "", "row_insert"], [105, 2, 1, "", "row_join"], [105, 2, 1, "", "rowspace"], [105, 2, 1, "", "rref"], [105, 2, 1, "", "rref_rhs"], [105, 3, 1, "", "shape"], [105, 2, 1, "", "simplify"], [105, 2, 1, "", "singular_value_decomposition"], [105, 2, 1, "", "singular_values"], [105, 2, 1, "", "solve"], [105, 2, 1, "", "solve_least_squares"], [105, 2, 1, "", "strongly_connected_components"], [105, 2, 1, "", "strongly_connected_components_decomposition"], [105, 2, 1, "", "subs"], [105, 2, 1, "", "table"], [105, 2, 1, "", "todod"], [105, 2, 1, "", "todok"], [105, 2, 1, "", "tolist"], [105, 2, 1, "", "trace"], [105, 2, 1, "", "transpose"], [105, 2, 1, "", "upper_hessenberg_decomposition"], [105, 2, 1, "", "upper_triangular"], [105, 2, 1, "", "upper_triangular_solve"], [105, 2, 1, "", "values"], [105, 2, 1, "", "vec"], [105, 2, 1, "", "vech"], [105, 2, 1, "", "vee"], [105, 2, 1, "", "vstack"], [105, 2, 1, "", "wilkinson"], [105, 2, 1, "", "xreplace"], [105, 2, 1, "", "zeros"]], "sympy.matrices.normalforms": [[106, 4, 1, "", "hermite_normal_form"], [106, 4, 1, "", "smith_normal_form"]], "sympy.matrices.sparse": [[107, 1, 1, "", "MutableSparseMatrix"], [107, 5, 1, "", "SparseMatrix"]], "sympy.matrices.sparsetools": [[108, 2, 1, "", "_csrtodok"], [108, 2, 1, "", "_doktocsr"], [108, 2, 1, "", "banded"]], "sympy.ntheory": [[109, 0, 0, "-", "bbp_pi"], [109, 0, 0, "-", "continued_fraction"], [109, 0, 0, "-", "digits"], [109, 0, 0, "-", "ecm"], [109, 0, 0, "-", "egyptian_fraction"], [109, 0, 0, "-", "factor_"], [109, 0, 0, "-", "generate"], [109, 0, 0, "-", "modular"], [109, 0, 0, "-", "multinomial"], [109, 0, 0, "-", "partitions_"], [109, 0, 0, "-", "primetest"], [109, 0, 0, "-", "qs"], [109, 0, 0, "-", "residue_ntheory"]], "sympy.ntheory.bbp_pi": [[109, 4, 1, "", "pi_hex_digits"]], "sympy.ntheory.continued_fraction": [[109, 4, 1, "", "continued_fraction"], [109, 4, 1, "", "continued_fraction_convergents"], [109, 4, 1, "", "continued_fraction_iterator"], [109, 4, 1, "", "continued_fraction_periodic"], [109, 4, 1, "", "continued_fraction_reduce"]], "sympy.ntheory.digits": [[109, 4, 1, "", "count_digits"], [109, 4, 1, "", "digits"], [109, 4, 1, "", "is_palindromic"]], "sympy.ntheory.ecm": [[109, 4, 1, "", "ecm"]], "sympy.ntheory.egyptian_fraction": [[109, 4, 1, "", "egyptian_fraction"]], "sympy.ntheory.factor_": [[109, 4, 1, "", "abundance"], [109, 4, 1, "", "antidivisor_count"], [109, 4, 1, "", "antidivisors"], [109, 4, 1, "", "core"], [109, 4, 1, "", "digits"], [109, 4, 1, "", "divisor_count"], [109, 4, 1, "", "divisor_sigma"], [109, 4, 1, "", "divisors"], [109, 4, 1, "", "factorint"], [109, 4, 1, "", "factorrat"], [109, 4, 1, "", "find_carmichael_numbers_in_range"], [109, 4, 1, "", "find_first_n_carmichaels"], [109, 4, 1, "", "is_abundant"], [109, 4, 1, "", "is_amicable"], [109, 4, 1, "", "is_carmichael"], [109, 4, 1, "", "is_deficient"], [109, 4, 1, "", "is_perfect"], [109, 4, 1, "", "mersenne_prime_exponent"], [109, 4, 1, "", "multiplicity"], [109, 4, 1, "", "perfect_power"], [109, 4, 1, "", "pollard_pm1"], [109, 4, 1, "", "pollard_rho"], [109, 4, 1, "", "primefactors"], [109, 4, 1, "", "primenu"], [109, 4, 1, "", "primeomega"], [109, 4, 1, "", "proper_divisor_count"], [109, 4, 1, "", "proper_divisors"], [109, 4, 1, "", "reduced_totient"], [109, 4, 1, "", "smoothness"], [109, 4, 1, "", "smoothness_p"], [109, 4, 1, "", "totient"], [109, 4, 1, "", "udivisor_count"], [109, 4, 1, "", "udivisor_sigma"], [109, 4, 1, "", "udivisors"]], "sympy.ntheory.generate": [[109, 1, 1, "", "Sieve"], [109, 4, 1, "", "composite"], [109, 4, 1, "", "compositepi"], [109, 4, 1, "", "cycle_length"], [109, 4, 1, "", "nextprime"], [109, 4, 1, "", "prevprime"], [109, 4, 1, "", "prime"], [109, 4, 1, "", "primepi"], [109, 4, 1, "", "primerange"], [109, 4, 1, "", "primorial"], [109, 4, 1, "", "randprime"]], "sympy.ntheory.generate.Sieve": [[109, 2, 1, "", "extend"], [109, 2, 1, "", "extend_to_no"], [109, 2, 1, "", "mobiusrange"], [109, 2, 1, "", "primerange"], [109, 2, 1, "", "search"], [109, 2, 1, "", "totientrange"]], "sympy.ntheory.modular": [[109, 4, 1, "", "crt"], [109, 4, 1, "", "crt1"], [109, 4, 1, "", "crt2"], [109, 4, 1, "", "solve_congruence"], [109, 4, 1, "", "symmetric_residue"]], "sympy.ntheory.multinomial": [[109, 4, 1, "", "binomial_coefficients"], [109, 4, 1, "", "binomial_coefficients_list"], [109, 4, 1, "", "multinomial_coefficients"], [109, 4, 1, "", "multinomial_coefficients_iterator"]], "sympy.ntheory.partitions_": [[109, 4, 1, "", "npartitions"]], "sympy.ntheory.primetest": [[109, 4, 1, "", "is_euler_jacobi_pseudoprime"], [109, 4, 1, "", "is_euler_pseudoprime"], [109, 4, 1, "", "is_extra_strong_lucas_prp"], [109, 4, 1, "", "is_fermat_pseudoprime"], [109, 4, 1, "", "is_gaussian_prime"], [109, 4, 1, "", "is_lucas_prp"], [109, 4, 1, "", "is_mersenne_prime"], [109, 4, 1, "", "is_square"], [109, 4, 1, "", "is_strong_lucas_prp"], [109, 4, 1, "", "isprime"], [109, 4, 1, "", "mr"], [109, 4, 1, "", "proth_test"]], "sympy.ntheory.qs": [[109, 4, 1, "", "qs"]], "sympy.ntheory.residue_ntheory": [[109, 4, 1, "", "binomial_mod"], [109, 4, 1, "", "discrete_log"], [109, 4, 1, "", "is_nthpow_residue"], [109, 4, 1, "", "is_primitive_root"], [109, 4, 1, "", "is_quad_residue"], [109, 4, 1, "", "jacobi_symbol"], [109, 4, 1, "", "legendre_symbol"], [109, 4, 1, "", "mobius"], [109, 4, 1, "", "n_order"], [109, 4, 1, "", "nthroot_mod"], [109, 4, 1, "", "polynomial_congruence"], [109, 4, 1, "", "primitive_root"], [109, 4, 1, "", "quadratic_congruence"], [109, 4, 1, "", "quadratic_residues"], [109, 4, 1, "", "sqrt_mod"], [109, 4, 1, "", "sqrt_mod_iter"]], "sympy.parsing": [[111, 0, 0, "-", "sym_expr"]], "sympy.parsing.latex": [[111, 1, 1, "", "LaTeXParsingError"], [111, 4, 1, "", "parse_latex"], [111, 4, 1, "", "parse_latex_lark"]], "sympy.parsing.latex.lark": [[111, 1, 1, "", "LarkLaTeXParser"], [111, 1, 1, "", "TransformToSymPyExpr"]], "sympy.parsing.mathematica": [[111, 4, 1, "", "parse_mathematica"]], "sympy.parsing.maxima": [[111, 4, 1, "", "parse_maxima"]], "sympy.parsing.sym_expr": [[111, 1, 1, "", "SymPyExpression"]], "sympy.parsing.sym_expr.SymPyExpression": [[111, 2, 1, "", "convert_to_c"], [111, 2, 1, "", "convert_to_expr"], [111, 2, 1, "", "convert_to_fortran"], [111, 2, 1, "", "convert_to_python"], [111, 2, 1, "", "return_expr"]], "sympy.parsing.sympy_parser": [[111, 4, 1, "", "auto_number"], [111, 4, 1, "", "auto_symbol"], [111, 4, 1, "", "convert_xor"], [111, 4, 1, "", "eval_expr"], [111, 4, 1, "", "factorial_notation"], [111, 4, 1, "", "function_exponentiation"], [111, 4, 1, "", "implicit_application"], [111, 4, 1, "", "implicit_multiplication"], [111, 4, 1, "", "implicit_multiplication_application"], [111, 4, 1, "", "lambda_notation"], [111, 4, 1, "", "parse_expr"], [111, 4, 1, "", "rationalize"], [111, 4, 1, "", "repeated_decimals"], [111, 4, 1, "", "split_symbols"], [111, 4, 1, "", "split_symbols_custom"], [111, 6, 1, "", "standard_transformations"], [111, 4, 1, "", "stringify_expr"]], "sympy.physics": [[116, 0, 0, "-", "biomechanics"], [124, 0, 0, "-", "control"], [127, 0, 0, "-", "hydrogen"], [128, 0, 0, "-", "matrices"], [152, 0, 0, "-", "mechanics"], [167, 0, 0, "-", "paulialgebra"], [168, 0, 0, "-", "qho_1d"], [192, 0, 0, "-", "secondquant"], [193, 0, 0, "-", "sho"], [209, 0, 0, "-", "vector"], [212, 0, 0, "-", "wigner"]], "sympy.physics.biomechanics": [[112, 0, 0, "-", "activation"], [113, 0, 0, "-", "curve"], [115, 0, 0, "-", "musculotendon"]], "sympy.physics.biomechanics.activation": [[112, 1, 1, "", "ActivationBase"], [112, 1, 1, "", "FirstOrderActivationDeGroote2016"], [112, 1, 1, "", "ZerothOrderActivation"]], "sympy.physics.biomechanics.activation.ActivationBase": [[112, 3, 1, "", "F"], [112, 3, 1, "", "M"], [112, 3, 1, "", "a"], [112, 3, 1, "", "activation"], [112, 3, 1, "", "constants"], [112, 3, 1, "", "e"], [112, 3, 1, "", "excitation"], [112, 3, 1, "", "input_vars"], [112, 3, 1, "", "order"], [112, 3, 1, "", "p"], [112, 3, 1, "", "r"], [112, 2, 1, "", "rhs"], [112, 3, 1, "", "state_vars"], [112, 2, 1, "", "with_defaults"], [112, 3, 1, "", "x"]], "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016": [[112, 3, 1, "", "F"], [112, 3, 1, "", "M"], [112, 3, 1, "", "activation_time_constant"], [112, 3, 1, "", "b"], [112, 3, 1, "", "constants"], [112, 3, 1, "", "deactivation_time_constant"], [112, 3, 1, "", "input_vars"], [112, 3, 1, "", "order"], [112, 3, 1, "", "p"], [112, 3, 1, "", "r"], [112, 2, 1, "", "rhs"], [112, 3, 1, "", "smoothing_rate"], [112, 3, 1, "", "state_vars"], [112, 3, 1, "", "tau_a"], [112, 3, 1, "", "tau_d"], [112, 2, 1, "", "with_defaults"], [112, 3, 1, "", "x"]], "sympy.physics.biomechanics.activation.ZerothOrderActivation": [[112, 3, 1, "", "F"], [112, 3, 1, "", "M"], [112, 3, 1, "", "constants"], [112, 3, 1, "", "input_vars"], [112, 3, 1, "", "order"], [112, 3, 1, "", "p"], [112, 3, 1, "", "r"], [112, 2, 1, "", "rhs"], [112, 3, 1, "", "state_vars"], [112, 2, 1, "", "with_defaults"], [112, 3, 1, "", "x"]], "sympy.physics.biomechanics.curve": [[113, 1, 1, "", "CharacteristicCurveCollection"], [113, 1, 1, "", "CharacteristicCurveFunction"], [113, 1, 1, "", "FiberForceLengthActiveDeGroote2016"], [113, 1, 1, "", "FiberForceLengthPassiveDeGroote2016"], [113, 1, 1, "", "FiberForceLengthPassiveInverseDeGroote2016"], [113, 1, 1, "", "FiberForceVelocityDeGroote2016"], [113, 1, 1, "", "FiberForceVelocityInverseDeGroote2016"], [113, 1, 1, "", "TendonForceLengthDeGroote2016"], [113, 1, 1, "", "TendonForceLengthInverseDeGroote2016"]], "sympy.physics.biomechanics.curve.FiberForceLengthActiveDeGroote2016": [[113, 2, 1, "", "doit"], [113, 2, 1, "", "eval"], [113, 2, 1, "", "fdiff"], [113, 2, 1, "", "with_defaults"]], "sympy.physics.biomechanics.curve.FiberForceLengthPassiveDeGroote2016": [[113, 2, 1, "", "doit"], [113, 2, 1, "", "eval"], [113, 2, 1, "", "fdiff"], [113, 2, 1, "", "inverse"], [113, 2, 1, "", "with_defaults"]], "sympy.physics.biomechanics.curve.FiberForceLengthPassiveInverseDeGroote2016": [[113, 2, 1, "", "doit"], [113, 2, 1, "", "eval"], [113, 2, 1, "", "fdiff"], [113, 2, 1, "", "inverse"], [113, 2, 1, "", "with_defaults"]], "sympy.physics.biomechanics.curve.FiberForceVelocityDeGroote2016": [[113, 2, 1, "", "doit"], [113, 2, 1, "", "eval"], [113, 2, 1, "", "fdiff"], [113, 2, 1, "", "inverse"], [113, 2, 1, "", "with_defaults"]], "sympy.physics.biomechanics.curve.FiberForceVelocityInverseDeGroote2016": [[113, 2, 1, "", "doit"], [113, 2, 1, "", "eval"], [113, 2, 1, "", "fdiff"], [113, 2, 1, "", "inverse"], [113, 2, 1, "", "with_defaults"]], "sympy.physics.biomechanics.curve.TendonForceLengthDeGroote2016": [[113, 2, 1, "", "doit"], [113, 2, 1, "", "eval"], [113, 2, 1, "", "fdiff"], [113, 2, 1, "", "inverse"], [113, 2, 1, "", "with_defaults"]], "sympy.physics.biomechanics.curve.TendonForceLengthInverseDeGroote2016": [[113, 2, 1, "", "doit"], [113, 2, 1, "", "eval"], [113, 2, 1, "", "fdiff"], [113, 2, 1, "", "inverse"], [113, 2, 1, "", "with_defaults"]], "sympy.physics.biomechanics.musculotendon": [[115, 1, 1, "", "MusculotendonBase"], [115, 1, 1, "", "MusculotendonDeGroote2016"], [115, 1, 1, "", "MusculotendonFormulation"]], "sympy.physics.biomechanics.musculotendon.MusculotendonBase": [[115, 3, 1, "", "F"], [115, 3, 1, "", "F_M_max"], [115, 3, 1, "", "M"], [115, 3, 1, "", "a"], [115, 3, 1, "", "activation"], [115, 3, 1, "", "activation_dynamics"], [115, 3, 1, "", "alpha_opt"], [115, 3, 1, "", "beta"], [115, 3, 1, "", "constants"], [115, 2, 1, "", "curves"], [115, 3, 1, "", "e"], [115, 3, 1, "", "excitation"], [115, 3, 1, "", "fiber_damping_coefficient"], [115, 3, 1, "", "input_vars"], [115, 3, 1, "", "l_M_opt"], [115, 3, 1, "", "l_T_slack"], [115, 3, 1, "", "maximal_fiber_velocity"], [115, 3, 1, "", "musculotendon_dynamics"], [115, 3, 1, "", "optimal_fiber_length"], [115, 3, 1, "", "optimal_pennation_angle"], [115, 3, 1, "", "p"], [115, 3, 1, "", "peak_isometric_force"], [115, 3, 1, "", "r"], [115, 2, 1, "", "rhs"], [115, 3, 1, "", "state_vars"], [115, 3, 1, "", "tendon_slack_length"], [115, 3, 1, "", "v_M_max"], [115, 2, 1, "", "with_defaults"], [115, 3, 1, "", "x"]], "sympy.physics.continuum_mechanics": [[117, 0, 0, "-", "beam"], [119, 0, 0, "-", "cable"], [121, 0, 0, "-", "truss"]], "sympy.physics.continuum_mechanics.beam": [[117, 1, 1, "", "Beam"], [117, 1, 1, "", "Beam3D"]], "sympy.physics.continuum_mechanics.beam.Beam": [[117, 3, 1, "", "applied_loads"], [117, 2, 1, "", "apply_load"], [117, 2, 1, "", "apply_support"], [117, 3, 1, "", "area"], [117, 2, 1, "", "bending_moment"], [117, 3, 1, "", "boundary_conditions"], [117, 3, 1, "", "cross_section"], [117, 2, 1, "", "deflection"], [117, 2, 1, "", "draw"], [117, 3, 1, "", "elastic_modulus"], [117, 3, 1, "", "ild_moment"], [117, 3, 1, "", "ild_reactions"], [117, 3, 1, "", "ild_shear"], [117, 2, 1, "", "join"], [117, 3, 1, "", "length"], [117, 3, 1, "", "load"], [117, 2, 1, "", "max_bmoment"], [117, 2, 1, "", "max_deflection"], [117, 2, 1, "", "max_shear_force"], [117, 2, 1, "", "plot_bending_moment"], [117, 2, 1, "", "plot_deflection"], [117, 2, 1, "", "plot_ild_moment"], [117, 2, 1, "", "plot_ild_reactions"], [117, 2, 1, "", "plot_ild_shear"], [117, 2, 1, "", "plot_loading_results"], [117, 2, 1, "", "plot_shear_force"], [117, 2, 1, "", "plot_shear_stress"], [117, 2, 1, "", "plot_slope"], [117, 2, 1, "", "point_cflexure"], [117, 3, 1, "", "reaction_loads"], [117, 2, 1, "", "remove_load"], [117, 3, 1, "", "second_moment"], [117, 2, 1, "", "shear_force"], [117, 2, 1, "", "shear_stress"], [117, 2, 1, "", "slope"], [117, 2, 1, "", "solve_for_ild_moment"], [117, 2, 1, "", "solve_for_ild_reactions"], [117, 2, 1, "", "solve_for_ild_shear"], [117, 2, 1, "", "solve_for_reaction_loads"], [117, 3, 1, "", "variable"]], "sympy.physics.continuum_mechanics.beam.Beam3D": [[117, 2, 1, "", "angular_deflection"], [117, 2, 1, "", "apply_load"], [117, 2, 1, "", "apply_moment_load"], [117, 3, 1, "", "area"], [117, 2, 1, "", "axial_force"], [117, 2, 1, "", "axial_stress"], [117, 2, 1, "", "bending_moment"], [117, 3, 1, "", "boundary_conditions"], [117, 2, 1, "", "deflection"], [117, 3, 1, "", "load_vector"], [117, 2, 1, "", "max_bending_moment"], [117, 2, 1, "", "max_bmoment"], [117, 2, 1, "", "max_deflection"], [117, 2, 1, "", "max_shear_force"], [117, 3, 1, "", "moment_load_vector"], [117, 2, 1, "", "plot_bending_moment"], [117, 2, 1, "", "plot_deflection"], [117, 2, 1, "", "plot_loading_results"], [117, 2, 1, "", "plot_shear_force"], [117, 2, 1, "", "plot_shear_stress"], [117, 2, 1, "", "plot_slope"], [117, 2, 1, "", "polar_moment"], [117, 3, 1, "", "second_moment"], [117, 2, 1, "", "shear_force"], [117, 3, 1, "", "shear_modulus"], [117, 2, 1, "", "shear_stress"], [117, 2, 1, "", "slope"], [117, 2, 1, "", "solve_for_reaction_loads"], [117, 2, 1, "", "solve_for_torsion"], [117, 2, 1, "", "torsional_moment"]], "sympy.physics.continuum_mechanics.cable": [[119, 1, 1, "", "Cable"]], "sympy.physics.continuum_mechanics.cable.Cable": [[119, 2, 1, "", "apply_length"], [119, 2, 1, "", "apply_load"], [119, 2, 1, "", "change_support"], [119, 3, 1, "", "left_support"], [119, 3, 1, "", "length"], [119, 3, 1, "", "loads"], [119, 3, 1, "", "loads_position"], [119, 3, 1, "", "reaction_loads"], [119, 2, 1, "", "remove_loads"], [119, 3, 1, "", "right_support"], [119, 3, 1, "", "supports"]], "sympy.physics.continuum_mechanics.truss": [[121, 1, 1, "", "Truss"]], "sympy.physics.continuum_mechanics.truss.Truss": [[121, 2, 1, "", "add_member"], [121, 2, 1, "", "add_node"], [121, 2, 1, "", "apply_load"], [121, 2, 1, "", "apply_support"], [121, 2, 1, "", "change_member_label"], [121, 2, 1, "", "change_node_label"], [121, 2, 1, "", "draw"], [121, 3, 1, "", "internal_forces"], [121, 3, 1, "", "loads"], [121, 3, 1, "", "member_lengths"], [121, 3, 1, "", "members"], [121, 3, 1, "", "node_labels"], [121, 3, 1, "", "node_positions"], [121, 3, 1, "", "nodes"], [121, 3, 1, "", "reaction_loads"], [121, 2, 1, "", "remove_load"], [121, 2, 1, "", "remove_member"], [121, 2, 1, "", "remove_node"], [121, 2, 1, "", "remove_support"], [121, 2, 1, "", "solve"], [121, 3, 1, "", "supports"]], "sympy.physics.control": [[125, 0, 0, "-", "lti"]], "sympy.physics.control.control_plots": [[123, 2, 1, "", "bode_magnitude_numerical_data"], [123, 2, 1, "", "bode_magnitude_plot"], [123, 2, 1, "", "bode_phase_numerical_data"], [123, 2, 1, "", "bode_phase_plot"], [123, 2, 1, "", "bode_plot"], [123, 2, 1, "", "impulse_response_numerical_data"], [123, 2, 1, "", "impulse_response_plot"], [123, 2, 1, "", "pole_zero_numerical_data"], [123, 2, 1, "", "pole_zero_plot"], [123, 2, 1, "", "ramp_response_numerical_data"], [123, 2, 1, "", "ramp_response_plot"], [123, 2, 1, "", "step_response_numerical_data"], [123, 2, 1, "", "step_response_plot"]], "sympy.physics.control.lti": [[125, 1, 1, "", "Feedback"], [125, 1, 1, "", "MIMOFeedback"], [125, 1, 1, "", "MIMOParallel"], [125, 1, 1, "", "MIMOSeries"], [125, 1, 1, "", "Parallel"], [125, 1, 1, "", "Series"], [125, 1, 1, "", "TransferFunction"], [125, 1, 1, "", "TransferFunctionMatrix"], [125, 4, 1, "", "backward_diff"], [125, 4, 1, "", "bilinear"], [125, 4, 1, "", "forward_diff"], [125, 4, 1, "", "gbt"]], "sympy.physics.control.lti.Feedback": [[125, 3, 1, "", "den"], [125, 2, 1, "", "doit"], [125, 3, 1, "", "num"], [125, 3, 1, "", "sensitivity"], [125, 3, 1, "", "sign"], [125, 3, 1, "", "sys1"], [125, 3, 1, "", "sys2"], [125, 2, 1, "", "to_expr"], [125, 3, 1, "", "var"]], "sympy.physics.control.lti.MIMOFeedback": [[125, 2, 1, "", "doit"], [125, 3, 1, "", "sensitivity"], [125, 3, 1, "", "sign"], [125, 3, 1, "", "sys1"], [125, 3, 1, "", "sys2"], [125, 3, 1, "", "var"]], "sympy.physics.control.lti.MIMOParallel": [[125, 2, 1, "", "doit"], [125, 3, 1, "", "num_inputs"], [125, 3, 1, "", "num_outputs"], [125, 3, 1, "", "shape"], [125, 3, 1, "", "var"]], "sympy.physics.control.lti.MIMOSeries": [[125, 2, 1, "", "doit"], [125, 3, 1, "", "num_inputs"], [125, 3, 1, "", "num_outputs"], [125, 3, 1, "", "shape"], [125, 3, 1, "", "var"]], "sympy.physics.control.lti.Parallel": [[125, 2, 1, "", "doit"], [125, 3, 1, "", "is_biproper"], [125, 3, 1, "", "is_proper"], [125, 3, 1, "", "is_strictly_proper"], [125, 2, 1, "", "to_expr"], [125, 3, 1, "", "var"]], "sympy.physics.control.lti.Series": [[125, 2, 1, "", "doit"], [125, 3, 1, "", "is_biproper"], [125, 3, 1, "", "is_proper"], [125, 3, 1, "", "is_strictly_proper"], [125, 2, 1, "", "to_expr"], [125, 3, 1, "", "var"]], "sympy.physics.control.lti.TransferFunction": [[125, 2, 1, "", "dc_gain"], [125, 3, 1, "", "den"], [125, 2, 1, "", "eval_frequency"], [125, 2, 1, "", "expand"], [125, 2, 1, "", "from_coeff_lists"], [125, 2, 1, "", "from_rational_expression"], [125, 2, 1, "", "from_zpk"], [125, 3, 1, "", "is_biproper"], [125, 3, 1, "", "is_proper"], [125, 2, 1, "", "is_stable"], [125, 3, 1, "", "is_strictly_proper"], [125, 3, 1, "", "num"], [125, 2, 1, "", "poles"], [125, 2, 1, "", "to_expr"], [125, 3, 1, "", "var"], [125, 2, 1, "", "zeros"]], "sympy.physics.control.lti.TransferFunctionMatrix": [[125, 2, 1, "", "elem_poles"], [125, 2, 1, "", "elem_zeros"], [125, 2, 1, "", "eval_frequency"], [125, 2, 1, "", "expand"], [125, 2, 1, "", "from_Matrix"], [125, 3, 1, "", "num_inputs"], [125, 3, 1, "", "num_outputs"], [125, 3, 1, "", "shape"], [125, 2, 1, "", "transpose"], [125, 3, 1, "", "var"]], "sympy.physics.hep": [[126, 0, 0, "-", "gamma_matrices"]], "sympy.physics.hep.gamma_matrices": [[126, 4, 1, "", "extract_type_tens"], [126, 4, 1, "", "gamma_trace"], [126, 4, 1, "", "kahane_simplify"], [126, 4, 1, "", "simplify_gpgp"]], "sympy.physics.hydrogen": [[127, 4, 1, "", "E_nl"], [127, 4, 1, "", "E_nl_dirac"], [127, 4, 1, "", "Psi_nlm"], [127, 4, 1, "", "R_nl"]], "sympy.physics.matrices": [[128, 4, 1, "", "mdft"], [128, 4, 1, "", "mgamma"], [128, 4, 1, "", "msigma"], [128, 4, 1, "", "pat_matrix"]], "sympy.physics.mechanics": [[130, 0, 0, "-", "actuator"], [132, 4, 1, "", "find_dynamicsymbols"], [134, 0, 0, "-", "joint"], [135, 0, 0, "-", "kane"], [135, 0, 0, "-", "lagrange"], [136, 0, 0, "-", "linearize"], [132, 4, 1, "", "msubs"], [138, 0, 0, "-", "pathway"], [141, 0, 0, "-", "wrapping_geometry"]], "sympy.physics.mechanics.actuator": [[130, 1, 1, "", "ActuatorBase"], [130, 1, 1, "", "DuffingSpring"], [130, 1, 1, "", "ForceActuator"], [130, 1, 1, "", "LinearDamper"], [130, 1, 1, "", "LinearSpring"], [130, 1, 1, "", "TorqueActuator"]], "sympy.physics.mechanics.actuator.ActuatorBase": [[130, 2, 1, "", "to_loads"]], "sympy.physics.mechanics.actuator.DuffingSpring": [[130, 3, 1, "", "force"]], "sympy.physics.mechanics.actuator.ForceActuator": [[130, 3, 1, "", "force"], [130, 3, 1, "", "pathway"], [130, 2, 1, "", "to_loads"]], "sympy.physics.mechanics.actuator.LinearDamper": [[130, 3, 1, "", "damping"], [130, 3, 1, "", "force"]], "sympy.physics.mechanics.actuator.LinearSpring": [[130, 3, 1, "", "equilibrium_length"], [130, 3, 1, "", "force"], [130, 3, 1, "", "stiffness"]], "sympy.physics.mechanics.actuator.TorqueActuator": [[130, 2, 1, "", "at_pin_joint"], [130, 3, 1, "", "axis"], [130, 3, 1, "", "reaction_frame"], [130, 3, 1, "", "target_frame"], [130, 2, 1, "", "to_loads"], [130, 3, 1, "", "torque"]], "sympy.physics.mechanics.body": [[131, 1, 1, "", "Body"]], "sympy.physics.mechanics.body.Body": [[131, 2, 1, "", "ang_vel_in"], [131, 2, 1, "", "angular_momentum"], [131, 2, 1, "", "apply_force"], [131, 2, 1, "", "apply_torque"], [131, 3, 1, "", "central_inertia"], [131, 2, 1, "", "clear_loads"], [131, 2, 1, "", "dcm"], [131, 3, 1, "", "frame"], [131, 3, 1, "", "inertia"], [131, 2, 1, "", "kinetic_energy"], [131, 2, 1, "", "linear_momentum"], [131, 3, 1, "", "mass"], [131, 3, 1, "", "masscenter"], [131, 2, 1, "", "masscenter_vel"], [131, 3, 1, "", "name"], [131, 2, 1, "", "parallel_axis"], [131, 3, 1, "", "point"], [131, 3, 1, "", "potential_energy"], [131, 2, 1, "", "remove_load"], [131, 3, 1, "", "x"], [131, 3, 1, "", "y"], [131, 3, 1, "", "z"]], "sympy.physics.mechanics.functions": [[137, 4, 1, "", "Lagrangian"], [137, 4, 1, "", "angular_momentum"], [137, 4, 1, "", "center_of_mass"], [137, 4, 1, "", "find_dynamicsymbols"], [137, 4, 1, "", "kinetic_energy"], [137, 4, 1, "", "linear_momentum"], [137, 4, 1, "", "potential_energy"]], "sympy.physics.mechanics.inertia": [[137, 1, 1, "", "Inertia"], [137, 4, 1, "", "inertia"], [137, 4, 1, "", "inertia_of_point_mass"]], "sympy.physics.mechanics.inertia.Inertia": [[137, 2, 1, "", "from_inertia_scalars"]], "sympy.physics.mechanics.joint": [[134, 1, 1, "", "CylindricalJoint"], [134, 1, 1, "", "Joint"], [134, 1, 1, "", "PinJoint"], [134, 1, 1, "", "PlanarJoint"], [134, 1, 1, "", "PrismaticJoint"], [134, 1, 1, "", "SphericalJoint"], [134, 1, 1, "", "WeldJoint"]], "sympy.physics.mechanics.joint.CylindricalJoint": [[134, 3, 1, "", "joint_axis"], [134, 3, 1, "", "rotation_coordinate"], [134, 3, 1, "", "rotation_speed"], [134, 3, 1, "", "translation_coordinate"], [134, 3, 1, "", "translation_speed"]], "sympy.physics.mechanics.joint.Joint": [[134, 3, 1, "", "child"], [134, 3, 1, "", "child_axis"], [134, 3, 1, "", "child_point"], [134, 3, 1, "", "coordinates"], [134, 3, 1, "", "kdes"], [134, 3, 1, "", "name"], [134, 3, 1, "", "parent"], [134, 3, 1, "", "parent_axis"], [134, 3, 1, "", "parent_point"], [134, 3, 1, "", "speeds"]], "sympy.physics.mechanics.joint.PinJoint": [[134, 3, 1, "", "joint_axis"]], "sympy.physics.mechanics.joint.PlanarJoint": [[134, 3, 1, "", "planar_coordinates"], [134, 3, 1, "", "planar_speeds"], [134, 3, 1, "", "planar_vectors"], [134, 3, 1, "", "rotation_axis"], [134, 3, 1, "", "rotation_coordinate"], [134, 3, 1, "", "rotation_speed"]], "sympy.physics.mechanics.joint.PrismaticJoint": [[134, 3, 1, "", "joint_axis"]], "sympy.physics.mechanics.jointsmethod": [[131, 1, 1, "", "JointsMethod"]], "sympy.physics.mechanics.jointsmethod.JointsMethod": [[131, 3, 1, "", "bodies"], [131, 3, 1, "", "forcing"], [131, 3, 1, "", "forcing_full"], [131, 2, 1, "", "form_eoms"], [131, 3, 1, "", "kdes"], [131, 3, 1, "", "loads"], [131, 3, 1, "", "mass_matrix"], [131, 3, 1, "", "mass_matrix_full"], [131, 3, 1, "", "method"], [131, 3, 1, "", "q"], [131, 2, 1, "", "rhs"], [131, 3, 1, "", "u"]], "sympy.physics.mechanics.kane": [[135, 1, 1, "", "KanesMethod"]], "sympy.physics.mechanics.kane.KanesMethod": [[135, 3, 1, "", "auxiliary_eqs"], [135, 3, 1, "", "forcing"], [135, 3, 1, "", "forcing_full"], [135, 3, 1, "", "forcing_kin"], [135, 2, 1, "", "kanes_equations"], [135, 2, 1, "", "kindiffdict"], [135, 2, 1, "", "linearize"], [135, 3, 1, "", "mass_matrix"], [135, 3, 1, "", "mass_matrix_full"], [135, 3, 1, "", "mass_matrix_kin"], [135, 2, 1, "", "rhs"], [135, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.lagrange": [[135, 1, 1, "", "LagrangesMethod"]], "sympy.physics.mechanics.lagrange.LagrangesMethod": [[135, 3, 1, "", "forcing"], [135, 3, 1, "", "forcing_full"], [135, 2, 1, "", "form_lagranges_equations"], [135, 2, 1, "", "linearize"], [135, 3, 1, "", "mass_matrix"], [135, 3, 1, "", "mass_matrix_full"], [135, 2, 1, "", "rhs"], [135, 2, 1, "", "solve_multipliers"], [135, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.linearize": [[136, 1, 1, "", "Linearizer"]], "sympy.physics.mechanics.linearize.Linearizer": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "linearize"]], "sympy.physics.mechanics.loads": [[137, 1, 1, "", "Force"], [137, 1, 1, "", "Torque"]], "sympy.physics.mechanics.particle": [[137, 1, 1, "", "Particle"]], "sympy.physics.mechanics.particle.Particle": [[137, 2, 1, "", "angular_momentum"], [137, 2, 1, "", "kinetic_energy"], [137, 2, 1, "", "linear_momentum"], [137, 3, 1, "", "mass"], [137, 3, 1, "", "masscenter"], [137, 3, 1, "", "name"], [137, 2, 1, "", "parallel_axis"], [137, 3, 1, "", "point"], [137, 3, 1, "", "potential_energy"]], "sympy.physics.mechanics.pathway": [[138, 1, 1, "", "LinearPathway"], [138, 1, 1, "", "ObstacleSetPathway"], [138, 1, 1, "", "PathwayBase"], [138, 1, 1, "", "WrappingPathway"]], "sympy.physics.mechanics.pathway.LinearPathway": [[138, 3, 1, "", "extension_velocity"], [138, 3, 1, "", "length"], [138, 2, 1, "", "to_loads"]], "sympy.physics.mechanics.pathway.ObstacleSetPathway": [[138, 3, 1, "", "attachments"], [138, 3, 1, "", "extension_velocity"], [138, 3, 1, "", "length"], [138, 2, 1, "", "to_loads"]], "sympy.physics.mechanics.pathway.PathwayBase": [[138, 3, 1, "", "attachments"], [138, 3, 1, "", "extension_velocity"], [138, 3, 1, "", "length"], [138, 2, 1, "", "to_loads"]], "sympy.physics.mechanics.pathway.WrappingPathway": [[138, 3, 1, "", "extension_velocity"], [138, 3, 1, "", "geometry"], [138, 3, 1, "", "length"], [138, 2, 1, "", "to_loads"]], "sympy.physics.mechanics.rigidbody": [[137, 1, 1, "", "RigidBody"]], "sympy.physics.mechanics.rigidbody.RigidBody": [[137, 2, 1, "", "angular_momentum"], [137, 3, 1, "", "central_inertia"], [137, 3, 1, "", "frame"], [137, 3, 1, "", "inertia"], [137, 2, 1, "", "kinetic_energy"], [137, 2, 1, "", "linear_momentum"], [137, 3, 1, "", "mass"], [137, 3, 1, "", "masscenter"], [137, 3, 1, "", "name"], [137, 2, 1, "", "parallel_axis"], [137, 3, 1, "", "potential_energy"], [137, 3, 1, "", "x"], [137, 3, 1, "", "y"], [137, 3, 1, "", "z"]], "sympy.physics.mechanics.system": [[140, 1, 1, "", "SymbolicSystem"], [140, 1, 1, "", "System"]], "sympy.physics.mechanics.system.SymbolicSystem": [[140, 3, 1, "", "alg_con"], [140, 3, 1, "", "bodies"], [140, 3, 1, "", "comb_explicit_rhs"], [140, 3, 1, "", "comb_implicit_mat"], [140, 3, 1, "", "comb_implicit_rhs"], [140, 2, 1, "", "compute_explicit_form"], [140, 2, 1, "", "constant_symbols"], [140, 3, 1, "", "coordinates"], [140, 3, 1, "", "dyn_implicit_mat"], [140, 3, 1, "", "dyn_implicit_rhs"], [140, 2, 1, "", "dynamic_symbols"], [140, 3, 1, "", "kin_explicit_rhs"], [140, 3, 1, "", "loads"], [140, 3, 1, "", "speeds"], [140, 3, 1, "", "states"]], "sympy.physics.mechanics.system.System": [[140, 3, 1, "", "actuators"], [140, 2, 1, "", "add_actuators"], [140, 2, 1, "", "add_auxiliary_speeds"], [140, 2, 1, "", "add_bodies"], [140, 2, 1, "", "add_coordinates"], [140, 2, 1, "", "add_holonomic_constraints"], [140, 2, 1, "", "add_joints"], [140, 2, 1, "", "add_kdes"], [140, 2, 1, "", "add_loads"], [140, 2, 1, "", "add_nonholonomic_constraints"], [140, 2, 1, "", "add_speeds"], [140, 2, 1, "", "apply_uniform_gravity"], [140, 3, 1, "", "bodies"], [140, 3, 1, "", "eom_method"], [140, 3, 1, "", "fixed_point"], [140, 3, 1, "", "forcing"], [140, 3, 1, "", "forcing_full"], [140, 2, 1, "", "form_eoms"], [140, 3, 1, "", "frame"], [140, 2, 1, "", "from_newtonian"], [140, 2, 1, "", "get_body"], [140, 2, 1, "", "get_joint"], [140, 3, 1, "", "holonomic_constraints"], [140, 3, 1, "", "joints"], [140, 3, 1, "", "kdes"], [140, 3, 1, "", "loads"], [140, 3, 1, "", "mass_matrix"], [140, 3, 1, "", "mass_matrix_full"], [140, 3, 1, "", "nonholonomic_constraints"], [140, 3, 1, "", "q"], [140, 3, 1, "", "q_dep"], [140, 3, 1, "", "q_ind"], [140, 2, 1, "", "rhs"], [140, 3, 1, "", "u"], [140, 3, 1, "", "u_aux"], [140, 3, 1, "", "u_dep"], [140, 3, 1, "", "u_ind"], [140, 2, 1, "", "validate_system"], [140, 3, 1, "", "velocity_constraints"], [140, 3, 1, "", "x"], [140, 3, 1, "", "y"], [140, 3, 1, "", "z"]], "sympy.physics.mechanics.wrapping_geometry": [[141, 1, 1, "", "WrappingCylinder"], [141, 1, 1, "", "WrappingGeometryBase"], [141, 1, 1, "", "WrappingSphere"]], "sympy.physics.mechanics.wrapping_geometry.WrappingCylinder": [[141, 3, 1, "", "axis"], [141, 2, 1, "", "geodesic_end_vectors"], [141, 2, 1, "", "geodesic_length"], [141, 3, 1, "", "point"], [141, 2, 1, "", "point_on_surface"], [141, 3, 1, "", "radius"]], "sympy.physics.mechanics.wrapping_geometry.WrappingGeometryBase": [[141, 2, 1, "", "geodesic_end_vectors"], [141, 2, 1, "", "geodesic_length"], [141, 3, 1, "", "point"], [141, 2, 1, "", "point_on_surface"]], "sympy.physics.mechanics.wrapping_geometry.WrappingSphere": [[141, 2, 1, "", "geodesic_end_vectors"], [141, 2, 1, "", "geodesic_length"], [141, 3, 1, "", "point"], [141, 2, 1, "", "point_on_surface"], [141, 3, 1, "", "radius"]], "sympy.physics.optics": [[161, 0, 0, "-", "gaussopt"], [163, 0, 0, "-", "medium"], [164, 0, 0, "-", "polarization"], [165, 0, 0, "-", "utils"], [166, 0, 0, "-", "waves"]], "sympy.physics.optics.gaussopt": [[161, 1, 1, "", "BeamParameter"], [161, 1, 1, "", "CurvedMirror"], [161, 1, 1, "", "CurvedRefraction"], [161, 1, 1, "", "FlatMirror"], [161, 1, 1, "", "FlatRefraction"], [161, 1, 1, "", "FreeSpace"], [161, 1, 1, "", "GeometricRay"], [161, 1, 1, "", "RayTransferMatrix"], [161, 1, 1, "", "ThinLens"], [161, 4, 1, "", "conjugate_gauss_beams"], [161, 4, 1, "", "gaussian_conj"], [161, 4, 1, "", "geometric_conj_ab"], [161, 4, 1, "", "geometric_conj_af"], [161, 4, 1, "", "geometric_conj_bf"], [161, 4, 1, "", "rayleigh2waist"], [161, 4, 1, "", "waist2rayleigh"]], "sympy.physics.optics.gaussopt.BeamParameter": [[161, 3, 1, "", "divergence"], [161, 3, 1, "", "gouy"], [161, 3, 1, "", "q"], [161, 3, 1, "", "radius"], [161, 3, 1, "", "w"], [161, 3, 1, "", "w_0"], [161, 3, 1, "", "waist_approximation_limit"]], "sympy.physics.optics.gaussopt.GeometricRay": [[161, 3, 1, "", "angle"], [161, 3, 1, "", "height"]], "sympy.physics.optics.gaussopt.RayTransferMatrix": [[161, 3, 1, "", "A"], [161, 3, 1, "", "B"], [161, 3, 1, "", "C"], [161, 3, 1, "", "D"]], "sympy.physics.optics.medium": [[163, 1, 1, "", "Medium"]], "sympy.physics.optics.medium.Medium": [[163, 3, 1, "", "refractive_index"], [163, 3, 1, "", "speed"]], "sympy.physics.optics.polarization": [[164, 4, 1, "", "half_wave_retarder"], [164, 4, 1, "", "jones_2_stokes"], [164, 4, 1, "", "jones_vector"], [164, 4, 1, "", "linear_polarizer"], [164, 4, 1, "", "mueller_matrix"], [164, 4, 1, "", "phase_retarder"], [164, 4, 1, "", "polarizing_beam_splitter"], [164, 4, 1, "", "quarter_wave_retarder"], [164, 4, 1, "", "reflective_filter"], [164, 4, 1, "", "stokes_vector"], [164, 4, 1, "", "transmissive_filter"]], "sympy.physics.optics.utils": [[165, 4, 1, "", "brewster_angle"], [165, 4, 1, "", "critical_angle"], [165, 4, 1, "", "deviation"], [165, 4, 1, "", "fresnel_coefficients"], [165, 4, 1, "", "hyperfocal_distance"], [165, 4, 1, "", "lens_formula"], [165, 4, 1, "", "lens_makers_formula"], [165, 4, 1, "", "mirror_formula"], [165, 4, 1, "", "refraction_angle"], [165, 4, 1, "", "transverse_magnification"]], "sympy.physics.optics.waves": [[166, 1, 1, "", "TWave"]], "sympy.physics.optics.waves.TWave": [[166, 3, 1, "", "amplitude"], [166, 3, 1, "", "angular_velocity"], [166, 3, 1, "", "frequency"], [166, 3, 1, "", "n"], [166, 3, 1, "", "phase"], [166, 3, 1, "", "speed"], [166, 3, 1, "", "time_period"], [166, 3, 1, "", "wavelength"], [166, 3, 1, "", "wavenumber"]], "sympy.physics.paulialgebra": [[167, 4, 1, "", "evaluate_pauli_product"]], "sympy.physics.qho_1d": [[168, 4, 1, "", "E_n"], [168, 4, 1, "", "coherent_state"], [168, 4, 1, "", "psi_n"]], "sympy.physics.quantum": [[169, 0, 0, "-", "anticommutator"], [170, 0, 0, "-", "cartesian"], [171, 0, 0, "-", "cg"], [172, 0, 0, "-", "circuitplot"], [173, 0, 0, "-", "commutator"], [174, 0, 0, "-", "constants"], [175, 0, 0, "-", "dagger"], [176, 0, 0, "-", "gate"], [177, 0, 0, "-", "grover"], [178, 0, 0, "-", "hilbert"], [180, 0, 0, "-", "innerproduct"], [181, 0, 0, "-", "operator"], [182, 0, 0, "-", "operatorset"], [183, 0, 0, "-", "piab"], [184, 0, 0, "-", "qapply"], [185, 0, 0, "-", "qft"], [186, 0, 0, "-", "qubit"], [187, 0, 0, "-", "represent"], [188, 0, 0, "-", "shor"], [189, 0, 0, "-", "spin"], [190, 0, 0, "-", "state"], [191, 0, 0, "-", "tensorproduct"]], "sympy.physics.quantum.anticommutator": [[169, 1, 1, "", "AntiCommutator"]], "sympy.physics.quantum.anticommutator.AntiCommutator": [[169, 2, 1, "", "doit"]], "sympy.physics.quantum.cartesian": [[170, 1, 1, "", "PositionBra3D"], [170, 1, 1, "", "PositionKet3D"], [170, 1, 1, "", "PositionState3D"], [170, 1, 1, "", "PxBra"], [170, 1, 1, "", "PxKet"], [170, 1, 1, "", "PxOp"], [170, 1, 1, "", "XBra"], [170, 1, 1, "", "XKet"], [170, 1, 1, "", "XOp"], [170, 1, 1, "", "YOp"], [170, 1, 1, "", "ZOp"]], "sympy.physics.quantum.cartesian.PositionState3D": [[170, 3, 1, "", "position_x"], [170, 3, 1, "", "position_y"], [170, 3, 1, "", "position_z"]], "sympy.physics.quantum.cartesian.PxBra": [[170, 3, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.PxKet": [[170, 3, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.XBra": [[170, 3, 1, "", "position"]], "sympy.physics.quantum.cartesian.XKet": [[170, 3, 1, "", "position"]], "sympy.physics.quantum.cg": [[171, 1, 1, "", "CG"], [171, 1, 1, "", "Wigner3j"], [171, 1, 1, "", "Wigner6j"], [171, 1, 1, "", "Wigner9j"], [171, 4, 1, "", "cg_simp"]], "sympy.physics.quantum.circuitplot": [[172, 1, 1, "", "CircuitPlot"], [172, 4, 1, "", "CreateCGate"], [172, 1, 1, "", "Mx"], [172, 1, 1, "", "Mz"], [172, 4, 1, "", "circuit_plot"], [172, 4, 1, "", "labeller"]], "sympy.physics.quantum.circuitplot.CircuitPlot": [[172, 2, 1, "", "control_line"], [172, 2, 1, "", "control_point"], [172, 2, 1, "", "not_point"], [172, 2, 1, "", "one_qubit_box"], [172, 2, 1, "", "swap_point"], [172, 2, 1, "", "two_qubit_box"], [172, 2, 1, "", "update"]], "sympy.physics.quantum.commutator": [[173, 1, 1, "", "Commutator"]], "sympy.physics.quantum.commutator.Commutator": [[173, 2, 1, "", "doit"]], "sympy.physics.quantum.constants": [[174, 1, 1, "", "HBar"]], "sympy.physics.quantum.dagger": [[175, 1, 1, "", "Dagger"]], "sympy.physics.quantum.gate": [[176, 1, 1, "", "CGate"], [176, 1, 1, "", "CGateS"], [176, 5, 1, "", "CNOT"], [176, 1, 1, "", "CNotGate"], [176, 1, 1, "", "Gate"], [176, 5, 1, "", "H"], [176, 1, 1, "", "HadamardGate"], [176, 1, 1, "", "IdentityGate"], [176, 1, 1, "", "OneQubitGate"], [176, 5, 1, "", "Phase"], [176, 1, 1, "", "PhaseGate"], [176, 5, 1, "", "S"], [176, 5, 1, "", "SWAP"], [176, 1, 1, "", "SwapGate"], [176, 5, 1, "", "T"], [176, 1, 1, "", "TGate"], [176, 1, 1, "", "TwoQubitGate"], [176, 1, 1, "", "UGate"], [176, 5, 1, "", "X"], [176, 1, 1, "", "XGate"], [176, 5, 1, "", "Y"], [176, 1, 1, "", "YGate"], [176, 5, 1, "", "Z"], [176, 1, 1, "", "ZGate"], [176, 4, 1, "", "gate_simp"], [176, 4, 1, "", "gate_sort"], [176, 4, 1, "", "normalized"], [176, 4, 1, "", "random_circuit"]], "sympy.physics.quantum.gate.CGate": [[176, 3, 1, "", "controls"], [176, 2, 1, "", "decompose"], [176, 2, 1, "", "eval_controls"], [176, 3, 1, "", "gate"], [176, 3, 1, "", "min_qubits"], [176, 3, 1, "", "nqubits"], [176, 2, 1, "", "plot_gate"], [176, 3, 1, "", "targets"]], "sympy.physics.quantum.gate.CNotGate": [[176, 3, 1, "", "controls"], [176, 3, 1, "", "gate"], [176, 3, 1, "", "min_qubits"], [176, 3, 1, "", "targets"]], "sympy.physics.quantum.gate.Gate": [[176, 2, 1, "", "get_target_matrix"], [176, 3, 1, "", "min_qubits"], [176, 3, 1, "", "nqubits"], [176, 3, 1, "", "targets"]], "sympy.physics.quantum.gate.SwapGate": [[176, 2, 1, "", "decompose"]], "sympy.physics.quantum.gate.UGate": [[176, 2, 1, "", "get_target_matrix"], [176, 3, 1, "", "targets"]], "sympy.physics.quantum.grover": [[177, 1, 1, "", "OracleGate"], [177, 1, 1, "", "WGate"], [177, 4, 1, "", "apply_grover"], [177, 4, 1, "", "grover_iteration"], [177, 4, 1, "", "superposition_basis"]], "sympy.physics.quantum.grover.OracleGate": [[177, 3, 1, "", "search_function"], [177, 3, 1, "", "targets"]], "sympy.physics.quantum.hilbert": [[178, 1, 1, "", "ComplexSpace"], [178, 1, 1, "", "DirectSumHilbertSpace"], [178, 1, 1, "", "FockSpace"], [178, 1, 1, "", "HilbertSpace"], [178, 1, 1, "", "L2"], [178, 1, 1, "", "TensorPowerHilbertSpace"], [178, 1, 1, "", "TensorProductHilbertSpace"]], "sympy.physics.quantum.hilbert.DirectSumHilbertSpace": [[178, 2, 1, "", "eval"], [178, 3, 1, "", "spaces"]], "sympy.physics.quantum.hilbert.HilbertSpace": [[178, 3, 1, "", "dimension"]], "sympy.physics.quantum.hilbert.TensorProductHilbertSpace": [[178, 2, 1, "", "eval"], [178, 3, 1, "", "spaces"]], "sympy.physics.quantum.innerproduct": [[180, 1, 1, "", "InnerProduct"]], "sympy.physics.quantum.operator": [[181, 1, 1, "", "DifferentialOperator"], [181, 1, 1, "", "HermitianOperator"], [181, 1, 1, "", "IdentityOperator"], [181, 1, 1, "", "Operator"], [181, 1, 1, "", "OuterProduct"], [181, 1, 1, "", "UnitaryOperator"]], "sympy.physics.quantum.operator.DifferentialOperator": [[181, 3, 1, "", "expr"], [181, 3, 1, "", "free_symbols"], [181, 3, 1, "", "function"], [181, 3, 1, "", "variables"]], "sympy.physics.quantum.operator.OuterProduct": [[181, 3, 1, "", "bra"], [181, 3, 1, "", "ket"]], "sympy.physics.quantum.operatorset": [[182, 4, 1, "", "operators_to_state"], [182, 4, 1, "", "state_to_operators"]], "sympy.physics.quantum.piab": [[183, 1, 1, "", "PIABBra"], [183, 1, 1, "", "PIABHamiltonian"], [183, 1, 1, "", "PIABKet"]], "sympy.physics.quantum.qapply": [[184, 4, 1, "", "qapply"]], "sympy.physics.quantum.qft": [[185, 1, 1, "", "IQFT"], [185, 1, 1, "", "QFT"], [185, 5, 1, "", "Rk"], [185, 1, 1, "", "RkGate"]], "sympy.physics.quantum.qft.IQFT": [[185, 2, 1, "", "decompose"]], "sympy.physics.quantum.qft.QFT": [[185, 2, 1, "", "decompose"]], "sympy.physics.quantum.qubit": [[186, 1, 1, "", "IntQubit"], [186, 1, 1, "", "IntQubitBra"], [186, 1, 1, "", "Qubit"], [186, 1, 1, "", "QubitBra"], [186, 4, 1, "", "matrix_to_density"], [186, 4, 1, "", "matrix_to_qubit"], [186, 4, 1, "", "measure_all"], [186, 4, 1, "", "measure_all_oneshot"], [186, 4, 1, "", "measure_partial"], [186, 4, 1, "", "measure_partial_oneshot"], [186, 4, 1, "", "qubit_to_matrix"]], "sympy.physics.quantum.represent": [[187, 4, 1, "", "enumerate_states"], [187, 4, 1, "", "get_basis"], [187, 4, 1, "", "integrate_result"], [187, 4, 1, "", "rep_expectation"], [187, 4, 1, "", "rep_innerproduct"], [187, 4, 1, "", "represent"]], "sympy.physics.quantum.shor": [[188, 1, 1, "", "CMod"], [188, 4, 1, "", "period_find"], [188, 4, 1, "", "shor"]], "sympy.physics.quantum.shor.CMod": [[188, 3, 1, "", "N"], [188, 3, 1, "", "a"], [188, 3, 1, "", "t"]], "sympy.physics.quantum.spin": [[189, 1, 1, "", "J2Op"], [189, 1, 1, "", "JxBra"], [189, 1, 1, "", "JxBraCoupled"], [189, 1, 1, "", "JxKet"], [189, 1, 1, "", "JxKetCoupled"], [189, 1, 1, "", "JyBra"], [189, 1, 1, "", "JyBraCoupled"], [189, 1, 1, "", "JyKet"], [189, 1, 1, "", "JyKetCoupled"], [189, 1, 1, "", "JzBra"], [189, 1, 1, "", "JzBraCoupled"], [189, 1, 1, "", "JzKet"], [189, 1, 1, "", "JzKetCoupled"], [189, 1, 1, "", "JzOp"], [189, 1, 1, "", "Rotation"], [189, 1, 1, "", "WignerD"], [189, 4, 1, "", "couple"], [189, 4, 1, "", "uncouple"]], "sympy.physics.quantum.spin.Rotation": [[189, 2, 1, "", "D"], [189, 2, 1, "", "d"]], "sympy.physics.quantum.state": [[190, 1, 1, "", "Bra"], [190, 1, 1, "", "BraBase"], [190, 1, 1, "", "Ket"], [190, 1, 1, "", "KetBase"], [190, 1, 1, "", "OrthogonalBra"], [190, 1, 1, "", "OrthogonalKet"], [190, 1, 1, "", "OrthogonalState"], [190, 1, 1, "", "State"], [190, 1, 1, "", "StateBase"], [190, 1, 1, "", "TimeDepBra"], [190, 1, 1, "", "TimeDepKet"], [190, 1, 1, "", "TimeDepState"], [190, 1, 1, "", "Wavefunction"]], "sympy.physics.quantum.state.StateBase": [[190, 3, 1, "", "dual"], [190, 2, 1, "", "dual_class"], [190, 3, 1, "", "operators"]], "sympy.physics.quantum.state.TimeDepState": [[190, 3, 1, "", "label"], [190, 3, 1, "", "time"]], "sympy.physics.quantum.state.Wavefunction": [[190, 3, 1, "", "expr"], [190, 3, 1, "", "is_commutative"], [190, 3, 1, "", "is_normalized"], [190, 3, 1, "", "limits"], [190, 3, 1, "", "norm"], [190, 2, 1, "", "normalize"], [190, 2, 1, "", "prob"], [190, 3, 1, "", "variables"]], "sympy.physics.quantum.tensorproduct": [[191, 1, 1, "", "TensorProduct"], [191, 4, 1, "", "tensor_product_simp"]], "sympy.physics.secondquant": [[192, 1, 1, "", "AnnihilateBoson"], [192, 1, 1, "", "AnnihilateFermion"], [192, 1, 1, "", "AntiSymmetricTensor"], [192, 5, 1, "", "B"], [192, 5, 1, "", "BBra"], [192, 5, 1, "", "BKet"], [192, 5, 1, "", "Bd"], [192, 1, 1, "", "BosonicBasis"], [192, 1, 1, "", "Commutator"], [192, 1, 1, "", "CreateBoson"], [192, 1, 1, "", "CreateFermion"], [192, 1, 1, "", "Dagger"], [192, 5, 1, "", "F"], [192, 5, 1, "", "FBra"], [192, 5, 1, "", "FKet"], [192, 5, 1, "", "Fd"], [192, 1, 1, "", "FixedBosonicBasis"], [192, 1, 1, "", "FockState"], [192, 1, 1, "", "FockStateBosonBra"], [192, 1, 1, "", "FockStateBosonKet"], [192, 1, 1, "", "FockStateBra"], [192, 1, 1, "", "FockStateFermionBra"], [192, 1, 1, "", "FockStateFermionKet"], [192, 1, 1, "", "FockStateKet"], [192, 1, 1, "", "InnerProduct"], [192, 1, 1, "", "KroneckerDelta"], [192, 1, 1, "", "NO"], [192, 1, 1, "", "PermutationOperator"], [192, 1, 1, "", "VarBosonicBasis"], [192, 4, 1, "", "apply_operators"], [192, 4, 1, "", "contraction"], [192, 4, 1, "", "evaluate_deltas"], [192, 4, 1, "", "matrix_rep"], [192, 4, 1, "", "simplify_index_permutations"], [192, 4, 1, "", "substitute_dummies"], [192, 4, 1, "", "wicks"]], "sympy.physics.secondquant.AnnihilateBoson": [[192, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.AnnihilateFermion": [[192, 2, 1, "", "apply_operator"], [192, 3, 1, "", "is_only_q_annihilator"], [192, 3, 1, "", "is_only_q_creator"], [192, 3, 1, "", "is_q_annihilator"], [192, 3, 1, "", "is_q_creator"]], "sympy.physics.secondquant.AntiSymmetricTensor": [[192, 3, 1, "", "lower"], [192, 3, 1, "", "symbol"], [192, 3, 1, "", "upper"]], "sympy.physics.secondquant.Commutator": [[192, 2, 1, "", "doit"], [192, 2, 1, "", "eval"]], "sympy.physics.secondquant.CreateBoson": [[192, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.CreateFermion": [[192, 2, 1, "", "apply_operator"], [192, 3, 1, "", "is_only_q_annihilator"], [192, 3, 1, "", "is_only_q_creator"], [192, 3, 1, "", "is_q_annihilator"], [192, 3, 1, "", "is_q_creator"]], "sympy.physics.secondquant.Dagger": [[192, 2, 1, "", "eval"]], "sympy.physics.secondquant.FixedBosonicBasis": [[192, 2, 1, "", "index"], [192, 2, 1, "", "state"]], "sympy.physics.secondquant.InnerProduct": [[192, 3, 1, "", "bra"], [192, 3, 1, "", "ket"]], "sympy.physics.secondquant.KroneckerDelta": [[192, 2, 1, "", "eval"], [192, 3, 1, "", "indices_contain_equal_information"], [192, 3, 1, "", "is_above_fermi"], [192, 3, 1, "", "is_below_fermi"], [192, 3, 1, "", "is_only_above_fermi"], [192, 3, 1, "", "is_only_below_fermi"], [192, 3, 1, "", "killable_index"], [192, 3, 1, "", "preferred_index"]], "sympy.physics.secondquant.NO": [[192, 2, 1, "", "doit"], [192, 2, 1, "", "get_subNO"], [192, 3, 1, "", "has_q_annihilators"], [192, 3, 1, "", "has_q_creators"], [192, 2, 1, "", "iter_q_annihilators"], [192, 2, 1, "", "iter_q_creators"]], "sympy.physics.secondquant.PermutationOperator": [[192, 2, 1, "", "get_permuted"]], "sympy.physics.secondquant.VarBosonicBasis": [[192, 2, 1, "", "index"], [192, 2, 1, "", "state"]], "sympy.physics.sho": [[193, 4, 1, "", "E_nl"], [193, 4, 1, "", "R_nl"]], "sympy.physics.units": [[194, 0, 0, "-", "dimensions"], [198, 0, 0, "-", "prefixes"], [199, 0, 0, "-", "quantities"], [200, 0, 0, "-", "unitsystem"], [199, 0, 0, "-", "util"]], "sympy.physics.units.dimensions": [[194, 1, 1, "", "Dimension"], [194, 1, 1, "", "DimensionSystem"]], "sympy.physics.units.dimensions.Dimension": [[194, 2, 1, "", "has_integer_powers"]], "sympy.physics.units.dimensions.DimensionSystem": [[194, 3, 1, "", "can_transf_matrix"], [194, 3, 1, "", "dim"], [194, 2, 1, "", "dim_can_vector"], [194, 2, 1, "", "dim_vector"], [194, 3, 1, "", "inv_can_transf_matrix"], [194, 3, 1, "", "is_consistent"], [194, 2, 1, "", "is_dimensionless"], [194, 3, 1, "", "list_can_dims"], [194, 2, 1, "", "print_dim_base"]], "sympy.physics.units.prefixes": [[198, 1, 1, "", "Prefix"]], "sympy.physics.units.quantities": [[199, 1, 1, "", "Quantity"]], "sympy.physics.units.quantities.Quantity": [[199, 3, 1, "", "abbrev"], [199, 2, 1, "", "convert_to"], [199, 3, 1, "", "free_symbols"], [199, 3, 1, "", "is_prefixed"], [199, 3, 1, "", "scale_factor"], [199, 2, 1, "", "set_global_relative_scale_factor"]], "sympy.physics.units.unitsystem": [[200, 1, 1, "", "UnitSystem"]], "sympy.physics.units.unitsystem.UnitSystem": [[200, 3, 1, "", "dim"], [200, 2, 1, "", "extend"], [200, 2, 1, "", "get_units_non_prefixed"], [200, 3, 1, "", "is_consistent"]], "sympy.physics.units.util": [[199, 4, 1, "", "convert_to"]], "sympy.physics.vector": [[204, 4, 1, "", "dynamicsymbols"], [206, 0, 0, "-", "functions"], [206, 0, 0, "-", "point"]], "sympy.physics.vector.dyadic": [[202, 1, 1, "", "Dyadic"]], "sympy.physics.vector.dyadic.Dyadic": [[202, 2, 1, "", "applyfunc"], [202, 2, 1, "", "cross"], [202, 2, 1, "", "doit"], [202, 2, 1, "", "dot"], [202, 2, 1, "", "dt"], [202, 2, 1, "", "express"], [202, 3, 1, "", "func"], [202, 2, 1, "", "simplify"], [202, 2, 1, "", "subs"], [202, 2, 1, "", "to_matrix"], [202, 2, 1, "", "xreplace"]], "sympy.physics.vector.fieldfunctions": [[203, 4, 1, "", "curl"], [203, 4, 1, "", "divergence"], [203, 4, 1, "", "gradient"], [203, 4, 1, "", "is_conservative"], [203, 4, 1, "", "is_solenoidal"], [203, 4, 1, "", "scalar_potential"], [203, 4, 1, "", "scalar_potential_difference"]], "sympy.physics.vector.frame": [[202, 1, 1, "", "CoordinateSym"], [202, 1, 1, "", "ReferenceFrame"]], "sympy.physics.vector.frame.ReferenceFrame": [[202, 2, 1, "", "ang_acc_in"], [202, 2, 1, "", "ang_vel_in"], [202, 2, 1, "", "dcm"], [202, 2, 1, "", "orient"], [202, 2, 1, "", "orient_axis"], [202, 2, 1, "", "orient_body_fixed"], [202, 2, 1, "", "orient_dcm"], [202, 2, 1, "", "orient_quaternion"], [202, 2, 1, "", "orient_space_fixed"], [202, 2, 1, "", "orientnew"], [202, 2, 1, "", "partial_velocity"], [202, 2, 1, "", "set_ang_acc"], [202, 2, 1, "", "set_ang_vel"], [202, 3, 1, "", "u"], [202, 2, 1, "", "variable_map"], [202, 3, 1, "", "x"], [202, 3, 1, "", "xx"], [202, 3, 1, "", "xy"], [202, 3, 1, "", "xz"], [202, 3, 1, "", "y"], [202, 3, 1, "", "yx"], [202, 3, 1, "", "yy"], [202, 3, 1, "", "yz"], [202, 3, 1, "", "z"], [202, 3, 1, "", "zx"], [202, 3, 1, "", "zy"], [202, 3, 1, "", "zz"]], "sympy.physics.vector.functions": [[204, 4, 1, "", "cross"], [204, 4, 1, "", "dot"], [204, 4, 1, "", "express"], [206, 4, 1, "", "get_motion_params"], [206, 4, 1, "", "kinematic_equations"], [204, 4, 1, "", "outer"], [206, 4, 1, "", "partial_velocity"], [204, 4, 1, "", "time_derivative"]], "sympy.physics.vector.point": [[206, 1, 1, "", "Point"]], "sympy.physics.vector.point.Point": [[206, 2, 1, "", "a1pt_theory"], [206, 2, 1, "", "a2pt_theory"], [206, 2, 1, "", "acc"], [206, 2, 1, "", "locatenew"], [206, 2, 1, "", "partial_velocity"], [206, 2, 1, "", "pos_from"], [206, 2, 1, "", "set_acc"], [206, 2, 1, "", "set_pos"], [206, 2, 1, "", "set_vel"], [206, 2, 1, "", "v1pt_theory"], [206, 2, 1, "", "v2pt_theory"], [206, 2, 1, "", "vel"]], "sympy.physics.vector.printing": [[207, 4, 1, "", "init_vprinting"], [207, 4, 1, "", "vlatex"], [207, 4, 1, "", "vpprint"], [207, 4, 1, "", "vprint"]], "sympy.physics.vector.vector": [[202, 1, 1, "", "Vector"]], "sympy.physics.vector.vector.Vector": [[202, 2, 1, "", "angle_between"], [202, 2, 1, "", "applyfunc"], [202, 2, 1, "", "cross"], [202, 2, 1, "", "diff"], [202, 2, 1, "", "doit"], [202, 2, 1, "", "dot"], [202, 2, 1, "", "dt"], [202, 2, 1, "", "express"], [202, 2, 1, "", "free_dynamicsymbols"], [202, 2, 1, "", "free_symbols"], [202, 3, 1, "", "func"], [202, 2, 1, "", "magnitude"], [202, 2, 1, "", "normalize"], [202, 2, 1, "", "outer"], [202, 2, 1, "", "separate"], [202, 2, 1, "", "simplify"], [202, 2, 1, "", "subs"], [202, 2, 1, "", "to_matrix"], [202, 2, 1, "", "xreplace"]], "sympy.physics.wigner": [[212, 4, 1, "", "clebsch_gordan"], [212, 4, 1, "", "dot_rot_grad_Ynm"], [212, 4, 1, "", "gaunt"], [212, 4, 1, "", "racah"], [212, 4, 1, "", "real_gaunt"], [212, 4, 1, "", "wigner_3j"], [212, 4, 1, "", "wigner_6j"], [212, 4, 1, "", "wigner_9j"], [212, 4, 1, "", "wigner_d"], [212, 4, 1, "", "wigner_d_small"]], "sympy.plotting": [[213, 0, 0, "-", "plot"], [213, 0, 0, "-", "pygletplot"]], "sympy.plotting.plot": [[213, 1, 1, "", "MatplotlibBackend"], [213, 1, 1, "", "Plot"], [213, 1, 1, "", "PlotGrid"], [213, 1, 1, "", "TextBackend"], [213, 4, 1, "", "plot"], [213, 4, 1, "", "plot3d"], [213, 4, 1, "", "plot3d_parametric_line"], [213, 4, 1, "", "plot3d_parametric_surface"], [213, 4, 1, "", "plot_parametric"]], "sympy.plotting.plot.MatplotlibBackend": [[213, 2, 1, "", "get_segments"], [213, 2, 1, "", "process_series"]], "sympy.plotting.plot.Plot": [[213, 3, 1, "", "annotations"], [213, 2, 1, "", "append"], [213, 2, 1, "", "extend"], [213, 3, 1, "", "fill"], [213, 3, 1, "", "markers"], [213, 3, 1, "", "rectangles"]], "sympy.plotting.plot_implicit": [[213, 4, 1, "", "plot_implicit"]], "sympy.plotting.series": [[213, 1, 1, "", "BaseSeries"], [213, 1, 1, "", "ImplicitSeries"], [213, 1, 1, "", "Line2DBaseSeries"], [213, 1, 1, "", "Line3DBaseSeries"], [213, 1, 1, "", "LineOver1DRangeSeries"], [213, 1, 1, "", "Parametric2DLineSeries"], [213, 1, 1, "", "Parametric3DLineSeries"], [213, 1, 1, "", "ParametricSurfaceSeries"], [213, 1, 1, "", "SurfaceBaseSeries"], [213, 1, 1, "", "SurfaceOver2DRangeSeries"]], "sympy.plotting.series.BaseSeries": [[213, 2, 1, "", "eval_color_func"], [213, 3, 1, "", "expr"], [213, 2, 1, "", "get_data"], [213, 2, 1, "", "get_label"], [213, 3, 1, "", "n"], [213, 3, 1, "", "params"]], "sympy.plotting.series.ImplicitSeries": [[213, 2, 1, "", "get_data"], [213, 2, 1, "", "get_label"]], "sympy.plotting.series.Line2DBaseSeries": [[213, 2, 1, "", "get_data"]], "sympy.plotting.series.LineOver1DRangeSeries": [[213, 2, 1, "", "get_points"]], "sympy.plotting.series.ParametricSurfaceSeries": [[213, 2, 1, "", "get_data"], [213, 2, 1, "", "get_meshes"]], "sympy.plotting.series.SurfaceOver2DRangeSeries": [[213, 2, 1, "", "get_data"], [213, 2, 1, "", "get_meshes"]], "sympy.plotting.textplot": [[213, 4, 1, "", "textplot"]], "sympy.polys": [[220, 0, 0, "-", "polyconfig"], [220, 0, 0, "-", "polyoptions"], [225, 0, 0, "-", "solvers"]], "sympy.polys.agca.extensions": [[214, 1, 1, "", "ExtensionElement"], [214, 1, 1, "", "MonogenicFiniteExtension"]], "sympy.polys.agca.extensions.ExtensionElement": [[214, 2, 1, "", "inverse"]], "sympy.polys.agca.extensions.MonogenicFiniteExtension": [[214, 5, 1, "", "dtype"]], "sympy.polys.agca.homomorphisms": [[214, 1, 1, "", "ModuleHomomorphism"], [214, 4, 1, "", "homomorphism"]], "sympy.polys.agca.homomorphisms.ModuleHomomorphism": [[214, 2, 1, "", "image"], [214, 2, 1, "", "is_injective"], [214, 2, 1, "", "is_isomorphism"], [214, 2, 1, "", "is_surjective"], [214, 2, 1, "", "is_zero"], [214, 2, 1, "", "kernel"], [214, 2, 1, "", "quotient_codomain"], [214, 2, 1, "", "quotient_domain"], [214, 2, 1, "", "restrict_codomain"], [214, 2, 1, "", "restrict_domain"]], "sympy.polys.agca.ideals": [[214, 1, 1, "", "Ideal"]], "sympy.polys.agca.ideals.Ideal": [[214, 2, 1, "", "contains"], [214, 2, 1, "", "depth"], [214, 2, 1, "", "height"], [214, 2, 1, "", "intersect"], [214, 2, 1, "", "is_maximal"], [214, 2, 1, "", "is_primary"], [214, 2, 1, "", "is_prime"], [214, 2, 1, "", "is_principal"], [214, 2, 1, "", "is_radical"], [214, 2, 1, "", "is_whole_ring"], [214, 2, 1, "", "is_zero"], [214, 2, 1, "", "product"], [214, 2, 1, "", "quotient"], [214, 2, 1, "", "radical"], [214, 2, 1, "", "reduce_element"], [214, 2, 1, "", "saturate"], [214, 2, 1, "", "subset"], [214, 2, 1, "", "union"]], "sympy.polys.agca.modules": [[214, 1, 1, "", "FreeModule"], [214, 1, 1, "", "FreeModuleElement"], [214, 1, 1, "", "Module"], [214, 1, 1, "", "QuotientModule"], [214, 1, 1, "", "QuotientModuleElement"], [214, 1, 1, "", "SubModule"], [214, 1, 1, "", "SubQuotientModule"]], "sympy.polys.agca.modules.FreeModule": [[214, 2, 1, "", "basis"], [214, 2, 1, "", "convert"], [214, 5, 1, "", "dtype"], [214, 2, 1, "", "identity_hom"], [214, 2, 1, "", "is_submodule"], [214, 2, 1, "", "is_zero"], [214, 2, 1, "", "multiply_ideal"], [214, 2, 1, "", "quotient_module"]], "sympy.polys.agca.modules.Module": [[214, 2, 1, "", "contains"], [214, 2, 1, "", "convert"], [214, 2, 1, "", "identity_hom"], [214, 2, 1, "", "is_submodule"], [214, 2, 1, "", "is_zero"], [214, 2, 1, "", "multiply_ideal"], [214, 2, 1, "", "quotient_module"], [214, 2, 1, "", "submodule"], [214, 2, 1, "", "subset"]], "sympy.polys.agca.modules.QuotientModule": [[214, 2, 1, "", "convert"], [214, 5, 1, "", "dtype"], [214, 2, 1, "", "identity_hom"], [214, 2, 1, "", "is_submodule"], [214, 2, 1, "", "is_zero"], [214, 2, 1, "", "quotient_hom"], [214, 2, 1, "", "submodule"]], "sympy.polys.agca.modules.QuotientModuleElement": [[214, 2, 1, "", "eq"]], "sympy.polys.agca.modules.SubModule": [[214, 2, 1, "", "convert"], [214, 2, 1, "", "identity_hom"], [214, 2, 1, "", "in_terms_of_generators"], [214, 2, 1, "", "inclusion_hom"], [214, 2, 1, "", "intersect"], [214, 2, 1, "", "is_full_module"], [214, 2, 1, "", "is_submodule"], [214, 2, 1, "", "is_zero"], [214, 2, 1, "", "module_quotient"], [214, 2, 1, "", "multiply_ideal"], [214, 2, 1, "", "quotient_module"], [214, 2, 1, "", "reduce_element"], [214, 2, 1, "", "submodule"], [214, 2, 1, "", "syzygy_module"], [214, 2, 1, "", "union"]], "sympy.polys.agca.modules.SubQuotientModule": [[214, 2, 1, "", "is_full_module"], [214, 2, 1, "", "quotient_hom"]], "sympy.polys.appellseqs": [[223, 4, 1, "", "andre_poly"], [223, 4, 1, "", "bernoulli_c_poly"], [223, 4, 1, "", "bernoulli_poly"], [223, 4, 1, "", "euler_poly"], [223, 4, 1, "", "genocchi_poly"]], "sympy.polys.constructor": [[223, 4, 1, "", "construct_domain"]], "sympy.polys.densearith": [[220, 4, 1, "", "dmp_abs"], [220, 4, 1, "", "dmp_add"], [220, 4, 1, "", "dmp_add_ground"], [220, 4, 1, "", "dmp_add_mul"], [220, 4, 1, "", "dmp_add_term"], [220, 4, 1, "", "dmp_div"], [220, 4, 1, "", "dmp_expand"], [220, 4, 1, "", "dmp_exquo"], [220, 4, 1, "", "dmp_exquo_ground"], [220, 4, 1, "", "dmp_ff_div"], [220, 4, 1, "", "dmp_l1_norm"], [220, 4, 1, "", "dmp_max_norm"], [220, 4, 1, "", "dmp_mul"], [220, 4, 1, "", "dmp_mul_ground"], [220, 4, 1, "", "dmp_mul_term"], [220, 4, 1, "", "dmp_neg"], [220, 4, 1, "", "dmp_pdiv"], [220, 4, 1, "", "dmp_pexquo"], [220, 4, 1, "", "dmp_pow"], [220, 4, 1, "", "dmp_pquo"], [220, 4, 1, "", "dmp_prem"], [220, 4, 1, "", "dmp_quo"], [220, 4, 1, "", "dmp_quo_ground"], [220, 4, 1, "", "dmp_rem"], [220, 4, 1, "", "dmp_rr_div"], [220, 4, 1, "", "dmp_sqr"], [220, 4, 1, "", "dmp_sub"], [220, 4, 1, "", "dmp_sub_ground"], [220, 4, 1, "", "dmp_sub_mul"], [220, 4, 1, "", "dmp_sub_term"], [220, 4, 1, "", "dup_lshift"], [220, 4, 1, "", "dup_rshift"]], "sympy.polys.densebasic": [[220, 4, 1, "", "dmp_LC"], [220, 4, 1, "", "dmp_TC"], [220, 4, 1, "", "dmp_apply_pairs"], [220, 4, 1, "", "dmp_convert"], [220, 4, 1, "", "dmp_copy"], [220, 4, 1, "", "dmp_deflate"], [220, 4, 1, "", "dmp_degree"], [220, 4, 1, "", "dmp_degree_in"], [220, 4, 1, "", "dmp_degree_list"], [220, 4, 1, "", "dmp_eject"], [220, 4, 1, "", "dmp_exclude"], [220, 4, 1, "", "dmp_from_dict"], [220, 4, 1, "", "dmp_from_sympy"], [220, 4, 1, "", "dmp_ground"], [220, 4, 1, "", "dmp_ground_LC"], [220, 4, 1, "", "dmp_ground_TC"], [220, 4, 1, "", "dmp_ground_nth"], [220, 4, 1, "", "dmp_ground_p"], [220, 4, 1, "", "dmp_grounds"], [220, 4, 1, "", "dmp_include"], [220, 4, 1, "", "dmp_inflate"], [220, 4, 1, "", "dmp_inject"], [220, 4, 1, "", "dmp_list_terms"], [220, 4, 1, "", "dmp_multi_deflate"], [220, 4, 1, "", "dmp_negative_p"], [220, 4, 1, "", "dmp_nest"], [220, 4, 1, "", "dmp_normal"], [220, 4, 1, "", "dmp_nth"], [220, 4, 1, "", "dmp_one"], [220, 4, 1, "", "dmp_one_p"], [220, 4, 1, "", "dmp_permute"], [220, 4, 1, "", "dmp_positive_p"], [220, 4, 1, "", "dmp_raise"], [220, 4, 1, "", "dmp_slice"], [220, 4, 1, "", "dmp_strip"], [220, 4, 1, "", "dmp_swap"], [220, 4, 1, "", "dmp_terms_gcd"], [220, 4, 1, "", "dmp_to_dict"], [220, 4, 1, "", "dmp_to_tuple"], [220, 4, 1, "", "dmp_true_LT"], [220, 4, 1, "", "dmp_validate"], [220, 4, 1, "", "dmp_zero"], [220, 4, 1, "", "dmp_zero_p"], [220, 4, 1, "", "dmp_zeros"], [220, 4, 1, "", "dup_random"], [220, 4, 1, "", "dup_reverse"]], "sympy.polys.densetools": [[220, 4, 1, "", "dmp_clear_denoms"], [220, 4, 1, "", "dmp_compose"], [220, 4, 1, "", "dmp_diff"], [220, 4, 1, "", "dmp_diff_eval_in"], [220, 4, 1, "", "dmp_diff_in"], [220, 4, 1, "", "dmp_eval"], [220, 4, 1, "", "dmp_eval_in"], [220, 4, 1, "", "dmp_eval_tail"], [220, 4, 1, "", "dmp_ground_content"], [220, 4, 1, "", "dmp_ground_extract"], [220, 4, 1, "", "dmp_ground_monic"], [220, 4, 1, "", "dmp_ground_primitive"], [220, 4, 1, "", "dmp_ground_trunc"], [220, 4, 1, "", "dmp_integrate"], [220, 4, 1, "", "dmp_integrate_in"], [220, 4, 1, "", "dmp_lift"], [220, 4, 1, "", "dmp_revert"], [220, 4, 1, "", "dmp_trunc"], [220, 4, 1, "", "dup_content"], [220, 4, 1, "", "dup_decompose"], [220, 4, 1, "", "dup_extract"], [220, 4, 1, "", "dup_mirror"], [220, 4, 1, "", "dup_monic"], [220, 4, 1, "", "dup_primitive"], [220, 4, 1, "", "dup_real_imag"], [220, 4, 1, "", "dup_scale"], [220, 4, 1, "", "dup_shift"], [220, 4, 1, "", "dup_sign_variations"], [220, 4, 1, "", "dup_transform"]], "sympy.polys.dispersion": [[223, 4, 1, "", "dispersion"], [223, 4, 1, "", "dispersionset"]], "sympy.polys.distributedmodules": [[220, 4, 1, "", "sdm_LC"], [220, 4, 1, "", "sdm_LM"], [220, 4, 1, "", "sdm_LT"], [220, 4, 1, "", "sdm_add"], [220, 4, 1, "", "sdm_deg"], [220, 4, 1, "", "sdm_ecart"], [220, 4, 1, "", "sdm_from_dict"], [220, 4, 1, "", "sdm_from_vector"], [220, 4, 1, "", "sdm_groebner"], [220, 4, 1, "", "sdm_monomial_deg"], [220, 4, 1, "", "sdm_monomial_divides"], [220, 4, 1, "", "sdm_monomial_mul"], [220, 4, 1, "", "sdm_mul_term"], [220, 4, 1, "", "sdm_nf_mora"], [220, 4, 1, "", "sdm_spoly"], [220, 4, 1, "", "sdm_to_dict"], [220, 4, 1, "", "sdm_to_vector"], [220, 4, 1, "", "sdm_zero"]], "sympy.polys.domains": [[218, 1, 1, "", "AlgebraicField"], [218, 1, 1, "", "ComplexField"], [218, 1, 1, "", "ExpressionDomain"], [218, 1, 1, "", "FiniteField"], [218, 1, 1, "", "FractionField"], [218, 1, 1, "", "GMPYFiniteField"], [218, 1, 1, "", "GMPYIntegerRing"], [218, 1, 1, "", "GMPYRationalField"], [218, 1, 1, "", "IntegerRing"], [218, 1, 1, "", "PolynomialRing"], [218, 1, 1, "", "PythonFiniteField"], [218, 1, 1, "", "PythonIntegerRing"], [218, 1, 1, "", "PythonRationalField"], [218, 1, 1, "", "RationalField"], [218, 1, 1, "", "RealField"]], "sympy.polys.domains.AlgebraicField": [[218, 2, 1, "", "algebraic_field"], [218, 2, 1, "", "denom"], [218, 2, 1, "", "discriminant"], [218, 5, 1, "", "dtype"], [218, 5, 1, "", "ext"], [218, 2, 1, "", "from_AlgebraicField"], [218, 2, 1, "", "from_GaussianIntegerRing"], [218, 2, 1, "", "from_GaussianRationalField"], [218, 2, 1, "", "from_QQ"], [218, 2, 1, "", "from_QQ_gmpy"], [218, 2, 1, "", "from_QQ_python"], [218, 2, 1, "", "from_RealField"], [218, 2, 1, "", "from_ZZ"], [218, 2, 1, "", "from_ZZ_gmpy"], [218, 2, 1, "", "from_ZZ_python"], [218, 2, 1, "", "from_sympy"], [218, 2, 1, "", "galois_group"], [218, 2, 1, "", "get_ring"], [218, 2, 1, "", "integral_basis"], [218, 2, 1, "", "is_negative"], [218, 2, 1, "", "is_nonnegative"], [218, 2, 1, "", "is_nonpositive"], [218, 2, 1, "", "is_positive"], [218, 2, 1, "", "maximal_order"], [218, 5, 1, "", "mod"], [218, 2, 1, "", "numer"], [218, 5, 1, "", "orig_ext"], [218, 2, 1, "", "primes_above"], [218, 2, 1, "", "to_alg_num"], [218, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ComplexField": [[218, 2, 1, "", "almosteq"], [218, 2, 1, "", "exsqrt"], [218, 2, 1, "", "from_sympy"], [218, 2, 1, "", "gcd"], [218, 2, 1, "", "get_exact"], [218, 2, 1, "", "get_ring"], [218, 2, 1, "", "is_negative"], [218, 2, 1, "", "is_nonnegative"], [218, 2, 1, "", "is_nonpositive"], [218, 2, 1, "", "is_positive"], [218, 2, 1, "", "is_square"], [218, 2, 1, "", "lcm"], [218, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ExpressionDomain": [[218, 1, 1, "", "Expression"], [218, 2, 1, "", "denom"], [218, 5, 1, "", "dtype"], [218, 2, 1, "", "from_AlgebraicField"], [218, 2, 1, "", "from_ComplexField"], [218, 2, 1, "", "from_ExpressionDomain"], [218, 2, 1, "", "from_FractionField"], [218, 2, 1, "", "from_GaussianIntegerRing"], [218, 2, 1, "", "from_GaussianRationalField"], [218, 2, 1, "", "from_PolynomialRing"], [218, 2, 1, "", "from_QQ"], [218, 2, 1, "", "from_QQ_gmpy"], [218, 2, 1, "", "from_QQ_python"], [218, 2, 1, "", "from_RealField"], [218, 2, 1, "", "from_ZZ"], [218, 2, 1, "", "from_ZZ_gmpy"], [218, 2, 1, "", "from_ZZ_python"], [218, 2, 1, "", "from_sympy"], [218, 2, 1, "", "get_field"], [218, 2, 1, "", "get_ring"], [218, 2, 1, "", "is_negative"], [218, 2, 1, "", "is_nonnegative"], [218, 2, 1, "", "is_nonpositive"], [218, 2, 1, "", "is_positive"], [218, 2, 1, "", "numer"], [218, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FiniteField": [[218, 2, 1, "", "characteristic"], [218, 2, 1, "", "exsqrt"], [218, 2, 1, "", "from_FF"], [218, 2, 1, "", "from_FF_gmpy"], [218, 2, 1, "", "from_FF_python"], [218, 2, 1, "", "from_QQ"], [218, 2, 1, "", "from_QQ_gmpy"], [218, 2, 1, "", "from_QQ_python"], [218, 2, 1, "", "from_RealField"], [218, 2, 1, "", "from_ZZ"], [218, 2, 1, "", "from_ZZ_gmpy"], [218, 2, 1, "", "from_ZZ_python"], [218, 2, 1, "", "from_sympy"], [218, 2, 1, "", "get_field"], [218, 2, 1, "", "is_negative"], [218, 2, 1, "", "is_nonnegative"], [218, 2, 1, "", "is_nonpositive"], [218, 2, 1, "", "is_positive"], [218, 2, 1, "", "is_square"], [218, 2, 1, "", "to_int"], [218, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FractionField": [[218, 2, 1, "", "denom"], [218, 2, 1, "", "factorial"], [218, 2, 1, "", "from_AlgebraicField"], [218, 2, 1, "", "from_ComplexField"], [218, 2, 1, "", "from_FractionField"], [218, 2, 1, "", "from_GaussianIntegerRing"], [218, 2, 1, "", "from_GaussianRationalField"], [218, 2, 1, "", "from_PolynomialRing"], [218, 2, 1, "", "from_QQ"], [218, 2, 1, "", "from_QQ_gmpy"], [218, 2, 1, "", "from_QQ_python"], [218, 2, 1, "", "from_RealField"], [218, 2, 1, "", "from_ZZ"], [218, 2, 1, "", "from_ZZ_gmpy"], [218, 2, 1, "", "from_ZZ_python"], [218, 2, 1, "", "from_sympy"], [218, 2, 1, "", "get_ring"], [218, 2, 1, "", "is_negative"], [218, 2, 1, "", "is_nonnegative"], [218, 2, 1, "", "is_nonpositive"], [218, 2, 1, "", "is_positive"], [218, 2, 1, "", "numer"], [218, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYIntegerRing": [[218, 2, 1, "", "factorial"], [218, 2, 1, "", "from_FF_gmpy"], [218, 2, 1, "", "from_FF_python"], [218, 2, 1, "", "from_QQ"], [218, 2, 1, "", "from_QQ_gmpy"], [218, 2, 1, "", "from_QQ_python"], [218, 2, 1, "", "from_RealField"], [218, 2, 1, "", "from_ZZ_gmpy"], [218, 2, 1, "", "from_ZZ_python"], [218, 2, 1, "", "from_sympy"], [218, 2, 1, "", "gcd"], [218, 2, 1, "", "gcdex"], [218, 2, 1, "", "lcm"], [218, 2, 1, "", "sqrt"], [218, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYRationalField": [[218, 2, 1, "", "denom"], [218, 2, 1, "", "div"], [218, 2, 1, "", "exquo"], [218, 2, 1, "", "factorial"], [218, 2, 1, "", "from_GaussianRationalField"], [218, 2, 1, "", "from_QQ_gmpy"], [218, 2, 1, "", "from_QQ_python"], [218, 2, 1, "", "from_RealField"], [218, 2, 1, "", "from_ZZ_gmpy"], [218, 2, 1, "", "from_ZZ_python"], [218, 2, 1, "", "from_sympy"], [218, 2, 1, "", "get_ring"], [218, 2, 1, "", "numer"], [218, 2, 1, "", "quo"], [218, 2, 1, "", "rem"], [218, 2, 1, "", "to_sympy"]], "sympy.polys.domains.IntegerRing": [[218, 2, 1, "", "algebraic_field"], [218, 2, 1, "", "exsqrt"], [218, 2, 1, "", "factorial"], [218, 2, 1, "", "from_AlgebraicField"], [218, 2, 1, "", "from_EX"], [218, 2, 1, "", "from_FF"], [218, 2, 1, "", "from_FF_gmpy"], [218, 2, 1, "", "from_FF_python"], [218, 2, 1, "", "from_QQ"], [218, 2, 1, "", "from_QQ_gmpy"], [218, 2, 1, "", "from_QQ_python"], [218, 2, 1, "", "from_RealField"], [218, 2, 1, "", "from_ZZ"], [218, 2, 1, "", "from_ZZ_gmpy"], [218, 2, 1, "", "from_ZZ_python"], [218, 2, 1, "", "from_sympy"], [218, 2, 1, "", "gcd"], [218, 2, 1, "", "gcdex"], [218, 2, 1, "", "get_field"], [218, 2, 1, "", "is_square"], [218, 2, 1, "", "lcm"], [218, 2, 1, "", "log"], [218, 2, 1, "", "sqrt"], [218, 2, 1, "", "to_sympy"]], "sympy.polys.domains.PolynomialRing": [[218, 2, 1, "", "factorial"], [218, 2, 1, "", "from_AlgebraicField"], [218, 2, 1, "", "from_ComplexField"], [218, 2, 1, "", "from_FractionField"], [218, 2, 1, "", "from_GaussianIntegerRing"], [218, 2, 1, "", "from_GaussianRationalField"], [218, 2, 1, "", "from_GlobalPolynomialRing"], [218, 2, 1, "", "from_PolynomialRing"], [218, 2, 1, "", "from_QQ"], [218, 2, 1, "", "from_QQ_gmpy"], [218, 2, 1, "", "from_QQ_python"], [218, 2, 1, "", "from_RealField"], [218, 2, 1, "", "from_ZZ"], [218, 2, 1, "", "from_ZZ_gmpy"], [218, 2, 1, "", "from_ZZ_python"], [218, 2, 1, "", "from_sympy"], [218, 2, 1, "", "gcd"], [218, 2, 1, "", "gcdex"], [218, 2, 1, "", "get_field"], [218, 2, 1, "", "is_negative"], [218, 2, 1, "", "is_nonnegative"], [218, 2, 1, "", "is_nonpositive"], [218, 2, 1, "", "is_positive"], [218, 2, 1, "", "is_unit"], [218, 2, 1, "", "lcm"], [218, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RationalField": [[218, 2, 1, "", "algebraic_field"], [218, 2, 1, "", "denom"], [218, 2, 1, "", "div"], [218, 2, 1, "", "exquo"], [218, 2, 1, "", "exsqrt"], [218, 2, 1, "", "from_AlgebraicField"], [218, 2, 1, "", "from_GaussianRationalField"], [218, 2, 1, "", "from_QQ"], [218, 2, 1, "", "from_QQ_gmpy"], [218, 2, 1, "", "from_QQ_python"], [218, 2, 1, "", "from_RealField"], [218, 2, 1, "", "from_ZZ"], [218, 2, 1, "", "from_ZZ_gmpy"], [218, 2, 1, "", "from_ZZ_python"], [218, 2, 1, "", "from_sympy"], [218, 2, 1, "", "get_ring"], [218, 2, 1, "", "is_square"], [218, 2, 1, "", "numer"], [218, 2, 1, "", "quo"], [218, 2, 1, "", "rem"], [218, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RealField": [[218, 2, 1, "", "almosteq"], [218, 2, 1, "", "exsqrt"], [218, 2, 1, "", "from_sympy"], [218, 2, 1, "", "gcd"], [218, 2, 1, "", "get_exact"], [218, 2, 1, "", "get_ring"], [218, 2, 1, "", "is_square"], [218, 2, 1, "", "lcm"], [218, 2, 1, "", "to_rational"], [218, 2, 1, "", "to_sympy"]], "sympy.polys.domains.compositedomain": [[218, 1, 1, "", "CompositeDomain"]], "sympy.polys.domains.compositedomain.CompositeDomain": [[218, 2, 1, "", "drop"], [218, 2, 1, "", "get_exact"], [218, 2, 1, "", "inject"], [218, 3, 1, "", "is_Exact"], [218, 2, 1, "", "set_domain"]], "sympy.polys.domains.domain": [[218, 1, 1, "", "Domain"]], "sympy.polys.domains.domain.Domain": [[218, 2, 1, "", "abs"], [218, 2, 1, "", "add"], [218, 2, 1, "", "alg_field_from_poly"], [218, 2, 1, "", "algebraic_field"], [218, 2, 1, "", "almosteq"], [218, 2, 1, "", "characteristic"], [218, 2, 1, "", "cofactors"], [218, 2, 1, "", "convert"], [218, 2, 1, "", "convert_from"], [218, 2, 1, "", "cyclotomic_field"], [218, 2, 1, "", "denom"], [218, 2, 1, "", "div"], [218, 2, 1, "", "drop"], [218, 5, 1, "", "dtype"], [218, 2, 1, "", "evalf"], [218, 2, 1, "", "exquo"], [218, 2, 1, "", "exsqrt"], [218, 2, 1, "", "frac_field"], [218, 2, 1, "", "from_AlgebraicField"], [218, 2, 1, "", "from_ComplexField"], [218, 2, 1, "", "from_ExpressionDomain"], [218, 2, 1, "", "from_ExpressionRawDomain"], [218, 2, 1, "", "from_FF"], [218, 2, 1, "", "from_FF_gmpy"], [218, 2, 1, "", "from_FF_python"], [218, 2, 1, "", "from_FractionField"], [218, 2, 1, "", "from_GlobalPolynomialRing"], [218, 2, 1, "", "from_MonogenicFiniteExtension"], [218, 2, 1, "", "from_PolynomialRing"], [218, 2, 1, "", "from_QQ_gmpy"], [218, 2, 1, "", "from_QQ_python"], [218, 2, 1, "", "from_RealField"], [218, 2, 1, "", "from_ZZ_gmpy"], [218, 2, 1, "", "from_ZZ_python"], [218, 2, 1, "", "from_sympy"], [218, 2, 1, "", "gcd"], [218, 2, 1, "", "gcdex"], [218, 2, 1, "", "get_exact"], [218, 2, 1, "", "get_field"], [218, 2, 1, "", "get_ring"], [218, 2, 1, "", "half_gcdex"], [218, 5, 1, "", "has_assoc_Field"], [218, 5, 1, "", "has_assoc_Ring"], [218, 2, 1, "", "inject"], [218, 2, 1, "", "invert"], [218, 5, 1, "", "is_Field"], [218, 5, 1, "", "is_PID"], [218, 5, 1, "", "is_Ring"], [218, 2, 1, "", "is_negative"], [218, 2, 1, "", "is_nonnegative"], [218, 2, 1, "", "is_nonpositive"], [218, 2, 1, "", "is_one"], [218, 2, 1, "", "is_positive"], [218, 2, 1, "", "is_square"], [218, 2, 1, "", "is_zero"], [218, 2, 1, "", "lcm"], [218, 2, 1, "", "log"], [218, 2, 1, "", "map"], [218, 2, 1, "", "mul"], [218, 2, 1, "", "n"], [218, 2, 1, "", "neg"], [218, 2, 1, "", "numer"], [218, 2, 1, "", "of_type"], [218, 2, 1, "", "old_frac_field"], [218, 2, 1, "", "old_poly_ring"], [218, 5, 1, "", "one"], [218, 2, 1, "", "poly_ring"], [218, 2, 1, "", "pos"], [218, 2, 1, "", "pow"], [218, 2, 1, "", "quo"], [218, 2, 1, "", "rem"], [218, 2, 1, "", "revert"], [218, 2, 1, "", "sqrt"], [218, 2, 1, "", "sub"], [218, 2, 1, "", "to_sympy"], [218, 3, 1, "", "tp"], [218, 2, 1, "", "unify"], [218, 2, 1, "", "unify_composite"], [218, 5, 1, "", "zero"]], "sympy.polys.domains.domainelement": [[218, 1, 1, "", "DomainElement"]], "sympy.polys.domains.domainelement.DomainElement": [[218, 2, 1, "", "parent"]], "sympy.polys.domains.expressiondomain.ExpressionDomain": [[218, 1, 1, "", "Expression"]], "sympy.polys.domains.field": [[218, 1, 1, "", "Field"]], "sympy.polys.domains.field.Field": [[218, 2, 1, "", "div"], [218, 2, 1, "", "exquo"], [218, 2, 1, "", "gcd"], [218, 2, 1, "", "get_field"], [218, 2, 1, "", "get_ring"], [218, 2, 1, "", "is_unit"], [218, 2, 1, "", "lcm"], [218, 2, 1, "", "quo"], [218, 2, 1, "", "rem"], [218, 2, 1, "", "revert"]], "sympy.polys.domains.gaussiandomains": [[218, 1, 1, "", "GaussianDomain"], [218, 1, 1, "", "GaussianElement"], [218, 1, 1, "", "GaussianInteger"], [218, 1, 1, "", "GaussianIntegerRing"], [218, 1, 1, "", "GaussianRational"], [218, 1, 1, "", "GaussianRationalField"]], "sympy.polys.domains.gaussiandomains.GaussianDomain": [[218, 2, 1, "", "from_AlgebraicField"], [218, 2, 1, "", "from_QQ"], [218, 2, 1, "", "from_QQ_gmpy"], [218, 2, 1, "", "from_QQ_python"], [218, 2, 1, "", "from_ZZ"], [218, 2, 1, "", "from_ZZ_gmpy"], [218, 2, 1, "", "from_ZZ_python"], [218, 2, 1, "", "from_sympy"], [218, 2, 1, "", "inject"], [218, 2, 1, "", "is_negative"], [218, 2, 1, "", "is_nonnegative"], [218, 2, 1, "", "is_nonpositive"], [218, 2, 1, "", "is_positive"], [218, 2, 1, "", "to_sympy"]], "sympy.polys.domains.gaussiandomains.GaussianElement": [[218, 2, 1, "", "new"], [218, 2, 1, "", "parent"], [218, 2, 1, "", "quadrant"]], "sympy.polys.domains.gaussiandomains.GaussianIntegerRing": [[218, 5, 1, "", "dtype"], [218, 2, 1, "", "from_GaussianIntegerRing"], [218, 2, 1, "", "from_GaussianRationalField"], [218, 2, 1, "", "gcd"], [218, 2, 1, "", "get_field"], [218, 2, 1, "", "get_ring"], [218, 2, 1, "", "lcm"], [218, 2, 1, "", "normalize"]], "sympy.polys.domains.gaussiandomains.GaussianRationalField": [[218, 2, 1, "", "as_AlgebraicField"], [218, 2, 1, "", "denom"], [218, 5, 1, "", "dtype"], [218, 2, 1, "", "from_ComplexField"], [218, 2, 1, "", "from_GaussianIntegerRing"], [218, 2, 1, "", "from_GaussianRationalField"], [218, 2, 1, "", "get_field"], [218, 2, 1, "", "get_ring"], [218, 2, 1, "", "numer"]], "sympy.polys.domains.mpelements": [[218, 1, 1, "", "ComplexElement"], [218, 1, 1, "", "RealElement"]], "sympy.polys.domains.quotientring": [[218, 1, 1, "", "QuotientRing"]], "sympy.polys.domains.ring": [[218, 1, 1, "", "Ring"]], "sympy.polys.domains.ring.Ring": [[218, 2, 1, "", "denom"], [218, 2, 1, "", "div"], [218, 2, 1, "", "exquo"], [218, 2, 1, "", "free_module"], [218, 2, 1, "", "get_ring"], [218, 2, 1, "", "ideal"], [218, 2, 1, "", "invert"], [218, 2, 1, "", "numer"], [218, 2, 1, "", "quo"], [218, 2, 1, "", "quotient_ring"], [218, 2, 1, "", "rem"], [218, 2, 1, "", "revert"]], "sympy.polys.domains.simpledomain": [[218, 1, 1, "", "SimpleDomain"]], "sympy.polys.domains.simpledomain.SimpleDomain": [[218, 2, 1, "", "inject"]], "sympy.polys.euclidtools": [[220, 4, 1, "", "dmp_cancel"], [220, 4, 1, "", "dmp_content"], [220, 4, 1, "", "dmp_discriminant"], [220, 4, 1, "", "dmp_euclidean_prs"], [220, 4, 1, "", "dmp_ff_prs_gcd"], [220, 4, 1, "", "dmp_gcd"], [220, 4, 1, "", "dmp_gcdex"], [220, 4, 1, "", "dmp_half_gcdex"], [220, 4, 1, "", "dmp_inner_gcd"], [220, 4, 1, "", "dmp_inner_subresultants"], [220, 4, 1, "", "dmp_invert"], [220, 4, 1, "", "dmp_lcm"], [220, 4, 1, "", "dmp_primitive"], [220, 4, 1, "", "dmp_primitive_prs"], [220, 4, 1, "", "dmp_prs_resultant"], [220, 4, 1, "", "dmp_qq_collins_resultant"], [220, 4, 1, "", "dmp_qq_heu_gcd"], [220, 4, 1, "", "dmp_resultant"], [220, 4, 1, "", "dmp_rr_prs_gcd"], [220, 4, 1, "", "dmp_subresultants"], [220, 4, 1, "", "dmp_zz_collins_resultant"], [220, 4, 1, "", "dmp_zz_heu_gcd"], [220, 4, 1, "", "dmp_zz_modular_resultant"]], "sympy.polys.factortools": [[220, 4, 1, "", "dmp_ext_factor"], [220, 4, 1, "", "dmp_factor_list"], [220, 4, 1, "", "dmp_factor_list_include"], [220, 4, 1, "", "dmp_irreducible_p"], [220, 4, 1, "", "dmp_trial_division"], [220, 4, 1, "", "dmp_zz_diophantine"], [220, 4, 1, "", "dmp_zz_factor"], [220, 4, 1, "", "dmp_zz_mignotte_bound"], [220, 4, 1, "", "dmp_zz_wang"], [220, 4, 1, "", "dmp_zz_wang_hensel_lifting"], [220, 4, 1, "", "dmp_zz_wang_lead_coeffs"], [220, 4, 1, "", "dmp_zz_wang_non_divisors"], [220, 4, 1, "", "dmp_zz_wang_test_points"], [220, 4, 1, "", "dup_cyclotomic_p"], [220, 4, 1, "", "dup_gf_factor"], [220, 4, 1, "", "dup_zz_cyclotomic_factor"], [220, 4, 1, "", "dup_zz_cyclotomic_poly"], [220, 4, 1, "", "dup_zz_factor"], [220, 4, 1, "", "dup_zz_factor_sqf"], [220, 4, 1, "", "dup_zz_hensel_lift"], [220, 4, 1, "", "dup_zz_hensel_step"], [220, 4, 1, "", "dup_zz_irreducible_p"], [220, 4, 1, "", "dup_zz_zassenhaus"]], "sympy.polys.fglmtools": [[220, 4, 1, "", "matrix_fglm"]], "sympy.polys.fields": [[218, 1, 1, "", "FracElement"], [218, 1, 1, "", "FracField"], [218, 4, 1, "", "field"], [218, 4, 1, "", "sfield"], [218, 4, 1, "", "vfield"], [218, 4, 1, "", "xfield"]], "sympy.polys.fields.FracElement": [[218, 2, 1, "", "diff"]], "sympy.polys.galoistools": [[220, 4, 1, "", "gf_LC"], [220, 4, 1, "", "gf_Qbasis"], [220, 4, 1, "", "gf_Qmatrix"], [220, 4, 1, "", "gf_TC"], [220, 4, 1, "", "gf_add"], [220, 4, 1, "", "gf_add_ground"], [220, 4, 1, "", "gf_add_mul"], [220, 4, 1, "", "gf_berlekamp"], [220, 4, 1, "", "gf_cofactors"], [220, 4, 1, "", "gf_compose"], [220, 4, 1, "", "gf_compose_mod"], [220, 4, 1, "", "gf_crt"], [220, 4, 1, "", "gf_crt1"], [220, 4, 1, "", "gf_crt2"], [220, 4, 1, "", "gf_csolve"], [220, 4, 1, "", "gf_degree"], [220, 4, 1, "", "gf_diff"], [220, 4, 1, "", "gf_div"], [220, 4, 1, "", "gf_eval"], [220, 4, 1, "", "gf_expand"], [220, 4, 1, "", "gf_exquo"], [220, 4, 1, "", "gf_factor"], [220, 4, 1, "", "gf_factor_sqf"], [220, 4, 1, "", "gf_from_dict"], [220, 4, 1, "", "gf_from_int_poly"], [220, 4, 1, "", "gf_gcd"], [220, 4, 1, "", "gf_gcdex"], [220, 4, 1, "", "gf_int"], [220, 4, 1, "", "gf_irreducible"], [220, 4, 1, "", "gf_irreducible_p"], [220, 4, 1, "", "gf_lcm"], [220, 4, 1, "", "gf_lshift"], [220, 4, 1, "", "gf_monic"], [220, 4, 1, "", "gf_mul"], [220, 4, 1, "", "gf_mul_ground"], [220, 4, 1, "", "gf_multi_eval"], [220, 4, 1, "", "gf_neg"], [220, 4, 1, "", "gf_normal"], [220, 4, 1, "", "gf_pow"], [220, 4, 1, "", "gf_pow_mod"], [220, 4, 1, "", "gf_quo"], [220, 4, 1, "", "gf_quo_ground"], [220, 4, 1, "", "gf_random"], [220, 4, 1, "", "gf_rem"], [220, 4, 1, "", "gf_rshift"], [220, 4, 1, "", "gf_shoup"], [220, 4, 1, "", "gf_sqf_list"], [220, 4, 1, "", "gf_sqf_p"], [220, 4, 1, "", "gf_sqf_part"], [220, 4, 1, "", "gf_sqr"], [220, 4, 1, "", "gf_strip"], [220, 4, 1, "", "gf_sub"], [220, 4, 1, "", "gf_sub_ground"], [220, 4, 1, "", "gf_sub_mul"], [220, 4, 1, "", "gf_to_dict"], [220, 4, 1, "", "gf_to_int_poly"], [220, 4, 1, "", "gf_trace_map"], [220, 4, 1, "", "gf_trunc"], [220, 4, 1, "", "gf_value"], [220, 4, 1, "", "gf_zassenhaus"]], "sympy.polys.groebnertools": [[220, 4, 1, "", "groebner"], [220, 4, 1, "", "is_groebner"], [220, 4, 1, "", "is_minimal"], [220, 4, 1, "", "is_reduced"], [220, 4, 1, "", "red_groebner"], [220, 4, 1, "", "spoly"]], "sympy.polys.matrices": [[216, 0, 0, "-", "_dfm"], [216, 0, 0, "-", "_typing"], [216, 0, 0, "-", "ddm"], [216, 0, 0, "-", "dense"], [216, 0, 0, "-", "domainmatrix"], [216, 0, 0, "-", "sdm"]], "sympy.polys.matrices._dfm": [[216, 1, 1, "", "DFM"]], "sympy.polys.matrices._dfm.DFM": [[216, 2, 1, "", "add"], [216, 2, 1, "", "applyfunc"], [216, 2, 1, "", "charpoly"], [216, 2, 1, "", "convert_to"], [216, 2, 1, "", "copy"], [216, 2, 1, "", "det"], [216, 2, 1, "", "diag"], [216, 2, 1, "", "diagonal"], [216, 2, 1, "", "extract"], [216, 2, 1, "", "extract_slice"], [216, 2, 1, "", "eye"], [216, 2, 1, "", "from_ddm"], [216, 2, 1, "", "from_dod"], [216, 2, 1, "", "from_flat_nz"], [216, 2, 1, "", "from_list"], [216, 2, 1, "", "from_list_flat"], [216, 2, 1, "", "getitem"], [216, 2, 1, "", "hstack"], [216, 2, 1, "", "inv"], [216, 2, 1, "", "is_diagonal"], [216, 2, 1, "", "is_lower"], [216, 2, 1, "", "is_upper"], [216, 2, 1, "", "is_zero_matrix"], [216, 2, 1, "", "lll"], [216, 2, 1, "", "lll_transform"], [216, 2, 1, "", "lu"], [216, 2, 1, "", "lu_solve"], [216, 2, 1, "", "matmul"], [216, 2, 1, "", "mul"], [216, 2, 1, "", "mul_elementwise"], [216, 2, 1, "", "neg"], [216, 2, 1, "", "nnz"], [216, 2, 1, "", "nullspace"], [216, 2, 1, "", "nullspace_from_rref"], [216, 2, 1, "", "ones"], [216, 2, 1, "", "particular"], [216, 2, 1, "", "rmul"], [216, 2, 1, "", "scc"], [216, 2, 1, "", "setitem"], [216, 2, 1, "", "sub"], [216, 2, 1, "", "to_ddm"], [216, 2, 1, "", "to_dfm"], [216, 2, 1, "", "to_dfm_or_ddm"], [216, 2, 1, "", "to_dod"], [216, 2, 1, "", "to_dok"], [216, 2, 1, "", "to_flat_nz"], [216, 2, 1, "", "to_list"], [216, 2, 1, "", "to_list_flat"], [216, 2, 1, "", "to_sdm"], [216, 2, 1, "", "transpose"], [216, 2, 1, "", "vstack"], [216, 2, 1, "", "zeros"]], "sympy.polys.matrices._typing": [[216, 1, 1, "", "RingElement"]], "sympy.polys.matrices.ddm": [[216, 1, 1, "", "DDM"]], "sympy.polys.matrices.ddm.DDM": [[216, 2, 1, "", "add"], [216, 2, 1, "", "charpoly"], [216, 2, 1, "", "det"], [216, 2, 1, "", "diag"], [216, 2, 1, "", "diagonal"], [216, 2, 1, "", "from_dod"], [216, 2, 1, "", "from_dok"], [216, 2, 1, "", "from_flat_nz"], [216, 2, 1, "", "from_list"], [216, 2, 1, "", "from_list_flat"], [216, 2, 1, "", "hstack"], [216, 2, 1, "", "inv"], [216, 2, 1, "", "is_diagonal"], [216, 2, 1, "", "is_lower"], [216, 2, 1, "", "is_upper"], [216, 2, 1, "", "is_zero_matrix"], [216, 2, 1, "", "lu"], [216, 2, 1, "", "lu_solve"], [216, 2, 1, "", "matmul"], [216, 2, 1, "", "neg"], [216, 2, 1, "", "nnz"], [216, 2, 1, "", "nullspace"], [216, 2, 1, "", "nullspace_from_rref"], [216, 2, 1, "", "rref"], [216, 2, 1, "", "rref_den"], [216, 2, 1, "", "scc"], [216, 2, 1, "", "sub"], [216, 2, 1, "", "to_ddm"], [216, 2, 1, "", "to_dfm"], [216, 2, 1, "", "to_dfm_or_ddm"], [216, 2, 1, "", "to_dod"], [216, 2, 1, "", "to_dok"], [216, 2, 1, "", "to_flat_nz"], [216, 2, 1, "", "to_list"], [216, 2, 1, "", "to_list_flat"], [216, 2, 1, "", "to_sdm"], [216, 2, 1, "", "vstack"]], "sympy.polys.matrices.dense": [[216, 1, 1, "", "R"], [216, 1, 1, "", "T"], [216, 4, 1, "", "ddm_berk"], [216, 4, 1, "", "ddm_iadd"], [216, 4, 1, "", "ddm_idet"], [216, 4, 1, "", "ddm_iinv"], [216, 4, 1, "", "ddm_ilu"], [216, 4, 1, "", "ddm_ilu_solve"], [216, 4, 1, "", "ddm_ilu_split"], [216, 4, 1, "", "ddm_imatmul"], [216, 4, 1, "", "ddm_imul"], [216, 4, 1, "", "ddm_ineg"], [216, 4, 1, "", "ddm_irmul"], [216, 4, 1, "", "ddm_irref"], [216, 4, 1, "", "ddm_irref_den"], [216, 4, 1, "", "ddm_isub"], [216, 4, 1, "", "ddm_transpose"]], "sympy.polys.matrices.domainmatrix": [[216, 4, 1, "", "DM"], [216, 1, 1, "", "DomainMatrix"]], "sympy.polys.matrices.domainmatrix.DomainMatrix": [[216, 2, 1, "", "add"], [216, 2, 1, "", "adj_det"], [216, 2, 1, "", "adj_poly_det"], [216, 2, 1, "", "adjugate"], [216, 2, 1, "", "cancel_denom"], [216, 2, 1, "", "cancel_denom_elementwise"], [216, 2, 1, "", "charpoly"], [216, 2, 1, "", "charpoly_base"], [216, 2, 1, "", "charpoly_berk"], [216, 2, 1, "", "charpoly_factor_blocks"], [216, 2, 1, "", "charpoly_factor_list"], [216, 2, 1, "", "choose_domain"], [216, 2, 1, "", "clear_denoms"], [216, 2, 1, "", "clear_denoms_rowwise"], [216, 2, 1, "", "columnspace"], [216, 2, 1, "", "content"], [216, 2, 1, "", "convert_to"], [216, 2, 1, "", "det"], [216, 2, 1, "", "diag"], [216, 2, 1, "", "diagonal"], [216, 2, 1, "", "eval_poly"], [216, 2, 1, "", "eval_poly_mul"], [216, 2, 1, "", "eye"], [216, 2, 1, "", "from_Matrix"], [216, 2, 1, "", "from_dict_sympy"], [216, 2, 1, "", "from_dod"], [216, 2, 1, "", "from_dod_like"], [216, 2, 1, "", "from_dok"], [216, 2, 1, "", "from_flat_nz"], [216, 2, 1, "", "from_list"], [216, 2, 1, "", "from_list_flat"], [216, 2, 1, "", "from_list_sympy"], [216, 2, 1, "", "from_rep"], [216, 2, 1, "", "hstack"], [216, 2, 1, "", "inv"], [216, 2, 1, "", "inv_den"], [216, 3, 1, "", "is_diagonal"], [216, 3, 1, "", "is_lower"], [216, 3, 1, "", "is_square"], [216, 3, 1, "", "is_upper"], [216, 2, 1, "", "lll"], [216, 2, 1, "", "lll_transform"], [216, 2, 1, "", "lu"], [216, 2, 1, "", "lu_solve"], [216, 2, 1, "", "matmul"], [216, 2, 1, "", "mul"], [216, 2, 1, "", "neg"], [216, 2, 1, "", "nnz"], [216, 2, 1, "", "nullspace"], [216, 2, 1, "", "nullspace_from_rref"], [216, 2, 1, "", "ones"], [216, 2, 1, "", "pow"], [216, 2, 1, "", "primitive"], [216, 2, 1, "", "rowspace"], [216, 2, 1, "", "rref"], [216, 2, 1, "", "rref_den"], [216, 2, 1, "", "scc"], [216, 2, 1, "", "solve_den"], [216, 2, 1, "", "solve_den_charpoly"], [216, 2, 1, "", "solve_den_rref"], [216, 2, 1, "", "sub"], [216, 2, 1, "", "to_Matrix"], [216, 2, 1, "", "to_ddm"], [216, 2, 1, "", "to_dense"], [216, 2, 1, "", "to_dfm"], [216, 2, 1, "", "to_dfm_or_ddm"], [216, 2, 1, "", "to_dod"], [216, 2, 1, "", "to_dok"], [216, 2, 1, "", "to_field"], [216, 2, 1, "", "to_flat_nz"], [216, 2, 1, "", "to_list"], [216, 2, 1, "", "to_list_flat"], [216, 2, 1, "", "to_sdm"], [216, 2, 1, "", "to_sparse"], [216, 2, 1, "", "transpose"], [216, 2, 1, "", "unify"], [216, 2, 1, "", "vstack"], [216, 2, 1, "", "zeros"]], "sympy.polys.matrices.normalforms": [[216, 4, 1, "", "hermite_normal_form"], [216, 4, 1, "", "smith_normal_form"]], "sympy.polys.matrices.sdm": [[216, 1, 1, "", "SDM"], [216, 4, 1, "", "sdm_berk"], [216, 4, 1, "", "sdm_irref"], [216, 4, 1, "", "sdm_nullspace_from_rref"], [216, 4, 1, "", "sdm_particular_from_rref"], [216, 4, 1, "", "sdm_rref_den"]], "sympy.polys.matrices.sdm.SDM": [[216, 2, 1, "", "add"], [216, 2, 1, "", "charpoly"], [216, 2, 1, "", "convert_to"], [216, 2, 1, "", "copy"], [216, 2, 1, "", "det"], [216, 2, 1, "", "diagonal"], [216, 2, 1, "", "eye"], [216, 2, 1, "", "from_ddm"], [216, 2, 1, "", "from_dod"], [216, 2, 1, "", "from_dok"], [216, 2, 1, "", "from_flat_nz"], [216, 2, 1, "", "from_list"], [216, 2, 1, "", "from_list_flat"], [216, 2, 1, "", "hstack"], [216, 2, 1, "", "inv"], [216, 2, 1, "", "is_diagonal"], [216, 2, 1, "", "is_lower"], [216, 2, 1, "", "is_upper"], [216, 2, 1, "", "is_zero_matrix"], [216, 2, 1, "", "lll"], [216, 2, 1, "", "lll_transform"], [216, 2, 1, "", "lu"], [216, 2, 1, "", "lu_solve"], [216, 2, 1, "", "matmul"], [216, 2, 1, "", "mul"], [216, 2, 1, "", "neg"], [216, 2, 1, "", "new"], [216, 2, 1, "", "nnz"], [216, 2, 1, "", "nullspace"], [216, 2, 1, "", "nullspace_from_rref"], [216, 2, 1, "", "rref"], [216, 2, 1, "", "rref_den"], [216, 2, 1, "", "scc"], [216, 2, 1, "", "sub"], [216, 2, 1, "", "to_ddm"], [216, 2, 1, "", "to_dfm"], [216, 2, 1, "", "to_dfm_or_ddm"], [216, 2, 1, "", "to_dod"], [216, 2, 1, "", "to_dok"], [216, 2, 1, "", "to_flat_nz"], [216, 2, 1, "", "to_list"], [216, 2, 1, "", "to_list_flat"], [216, 2, 1, "", "to_sdm"], [216, 2, 1, "", "transpose"], [216, 2, 1, "", "vstack"], [216, 2, 1, "", "zeros"]], "sympy.polys.modulargcd": [[220, 4, 1, "", "_modgcd_multivariate_p"], [220, 4, 1, "", "func_field_modgcd"], [220, 4, 1, "", "modgcd_bivariate"], [220, 4, 1, "", "modgcd_multivariate"], [220, 4, 1, "", "modgcd_univariate"]], "sympy.polys.monomials": [[223, 1, 1, "", "Monomial"], [223, 4, 1, "", "itermonomials"], [223, 4, 1, "", "monomial_count"]], "sympy.polys.monomials.Monomial": [[223, 2, 1, "", "as_expr"], [223, 2, 1, "", "gcd"], [223, 2, 1, "", "lcm"]], "sympy.polys.numberfields": [[222, 0, 0, "-", "modules"], [222, 0, 0, "-", "subfield"]], "sympy.polys.numberfields.basis": [[222, 4, 1, "", "round_two"]], "sympy.polys.numberfields.galoisgroups": [[222, 4, 1, "", "galois_group"]], "sympy.polys.numberfields.minpoly": [[222, 4, 1, "", "minimal_polynomial"], [222, 4, 1, "", "minpoly"]], "sympy.polys.numberfields.modules": [[222, 1, 1, "", "EndomorphismRing"], [222, 1, 1, "", "InnerEndomorphism"], [222, 1, 1, "", "Module"], [222, 1, 1, "", "ModuleElement"], [222, 1, 1, "", "ModuleEndomorphism"], [222, 1, 1, "", "ModuleHomomorphism"], [222, 1, 1, "", "PowerBasis"], [222, 1, 1, "", "PowerBasisElement"], [222, 1, 1, "", "Submodule"], [222, 4, 1, "", "find_min_poly"], [222, 4, 1, "", "make_mod_elt"]], "sympy.polys.numberfields.modules.EndomorphismRing": [[222, 2, 1, "", "__init__"], [222, 2, 1, "", "inner_endomorphism"], [222, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.InnerEndomorphism": [[222, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.Module": [[222, 2, 1, "", "__call__"], [222, 2, 1, "", "ancestors"], [222, 2, 1, "", "basis_elements"], [222, 2, 1, "", "element_from_rational"], [222, 2, 1, "", "endomorphism_ring"], [222, 2, 1, "", "is_compat_col"], [222, 2, 1, "", "mult_tab"], [222, 3, 1, "", "n"], [222, 2, 1, "", "nearest_common_ancestor"], [222, 3, 1, "", "number_field"], [222, 2, 1, "", "one"], [222, 3, 1, "", "parent"], [222, 2, 1, "", "power_basis_ancestor"], [222, 2, 1, "", "represent"], [222, 2, 1, "", "starts_with_unity"], [222, 2, 1, "", "submodule_from_gens"], [222, 2, 1, "", "submodule_from_matrix"], [222, 2, 1, "", "whole_submodule"], [222, 2, 1, "", "zero"]], "sympy.polys.numberfields.modules.ModuleElement": [[222, 3, 1, "", "QQ_col"], [222, 2, 1, "", "__add__"], [222, 2, 1, "", "__init__"], [222, 2, 1, "", "__mod__"], [222, 2, 1, "", "__mul__"], [222, 2, 1, "", "column"], [222, 2, 1, "", "equiv"], [222, 2, 1, "", "from_int_list"], [222, 2, 1, "", "is_compat"], [222, 3, 1, "", "n"], [222, 2, 1, "", "over_power_basis"], [222, 2, 1, "", "reduced"], [222, 2, 1, "", "reduced_mod_p"], [222, 2, 1, "", "to_ancestor"], [222, 2, 1, "", "to_parent"], [222, 2, 1, "", "unify"]], "sympy.polys.numberfields.modules.ModuleEndomorphism": [[222, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.ModuleHomomorphism": [[222, 2, 1, "", "__init__"], [222, 2, 1, "", "kernel"], [222, 2, 1, "", "matrix"]], "sympy.polys.numberfields.modules.PowerBasis": [[222, 2, 1, "", "__init__"], [222, 2, 1, "", "element_from_ANP"], [222, 2, 1, "", "element_from_alg_num"], [222, 2, 1, "", "element_from_poly"], [222, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.PowerBasisElement": [[222, 3, 1, "", "T"], [222, 2, 1, "", "as_expr"], [222, 3, 1, "", "generator"], [222, 3, 1, "", "is_rational"], [222, 2, 1, "", "norm"], [222, 2, 1, "", "numerator"], [222, 2, 1, "", "poly"], [222, 2, 1, "", "to_ANP"], [222, 2, 1, "", "to_alg_num"]], "sympy.polys.numberfields.modules.Submodule": [[222, 3, 1, "", "QQ_matrix"], [222, 2, 1, "", "__init__"], [222, 2, 1, "", "add"], [222, 2, 1, "", "basis_element_pullbacks"], [222, 2, 1, "", "discard_before"], [222, 2, 1, "", "mul"], [222, 2, 1, "", "reduce_element"], [222, 2, 1, "", "reduced"], [222, 2, 1, "", "represent"]], "sympy.polys.numberfields.primes": [[222, 1, 1, "", "PrimeIdeal"], [222, 4, 1, "", "prime_decomp"], [222, 4, 1, "", "prime_valuation"]], "sympy.polys.numberfields.primes.PrimeIdeal": [[222, 2, 1, "", "__add__"], [222, 2, 1, "", "__init__"], [222, 2, 1, "", "__mul__"], [222, 2, 1, "", "as_submodule"], [222, 3, 1, "", "is_inert"], [222, 2, 1, "", "reduce_ANP"], [222, 2, 1, "", "reduce_alg_num"], [222, 2, 1, "", "reduce_element"], [222, 2, 1, "", "repr"], [222, 2, 1, "", "test_factor"], [222, 2, 1, "", "valuation"]], "sympy.polys.numberfields.subfield": [[222, 4, 1, "", "field_isomorphism"], [222, 4, 1, "", "primitive_element"], [222, 4, 1, "", "to_number_field"]], "sympy.polys.numberfields.utilities": [[222, 1, 1, "", "AlgIntPowers"], [222, 4, 1, "", "coeff_search"], [222, 4, 1, "", "extract_fundamental_discriminant"], [222, 4, 1, "", "get_num_denom"], [222, 4, 1, "", "is_int"], [222, 4, 1, "", "is_rat"], [222, 4, 1, "", "isolate"], [222, 4, 1, "", "supplement_a_subspace"]], "sympy.polys.numberfields.utilities.AlgIntPowers": [[222, 2, 1, "", "__init__"]], "sympy.polys.orderings": [[223, 1, 1, "", "GradedLexOrder"], [223, 1, 1, "", "LexOrder"], [223, 1, 1, "", "MonomialOrder"], [223, 1, 1, "", "ReversedGradedLexOrder"]], "sympy.polys.orthopolys": [[223, 4, 1, "", "chebyshevt_poly"], [223, 4, 1, "", "chebyshevu_poly"], [223, 4, 1, "", "gegenbauer_poly"], [223, 4, 1, "", "hermite_poly"], [223, 4, 1, "", "hermite_prob_poly"], [223, 4, 1, "", "jacobi_poly"], [223, 4, 1, "", "laguerre_poly"], [223, 4, 1, "", "legendre_poly"], [223, 4, 1, "", "spherical_bessel_fn"]], "sympy.polys.partfrac": [[223, 4, 1, "", "apart"], [223, 4, 1, "", "apart_list"], [223, 4, 1, "", "assemble_partfrac_list"]], "sympy.polys.polyclasses": [[218, 1, 1, "", "ANP"], [218, 1, 1, "", "DMF"], [218, 1, 1, "", "DMP"]], "sympy.polys.polyclasses.ANP": [[218, 2, 1, "", "LC"], [218, 2, 1, "", "TC"], [218, 2, 1, "", "add_ground"], [218, 2, 1, "", "convert"], [218, 3, 1, "", "is_ground"], [218, 3, 1, "", "is_one"], [218, 3, 1, "", "is_zero"], [218, 2, 1, "", "mod_to_list"], [218, 2, 1, "", "mul_ground"], [218, 2, 1, "", "pow"], [218, 2, 1, "", "quo_ground"], [218, 2, 1, "", "sub_ground"], [218, 2, 1, "", "to_dict"], [218, 2, 1, "", "to_list"], [218, 2, 1, "", "to_sympy_dict"], [218, 2, 1, "", "to_sympy_list"], [218, 2, 1, "", "to_tuple"], [218, 2, 1, "", "unify"], [218, 2, 1, "", "unify_ANP"]], "sympy.polys.polyclasses.DMF": [[218, 2, 1, "", "add"], [218, 2, 1, "", "add_ground"], [218, 2, 1, "", "cancel"], [218, 2, 1, "", "denom"], [218, 2, 1, "", "exquo"], [218, 2, 1, "", "frac_unify"], [218, 2, 1, "", "half_per"], [218, 2, 1, "", "invert"], [218, 3, 1, "", "is_one"], [218, 3, 1, "", "is_zero"], [218, 2, 1, "", "mul"], [218, 2, 1, "", "neg"], [218, 2, 1, "", "numer"], [218, 2, 1, "", "per"], [218, 2, 1, "", "poly_unify"], [218, 2, 1, "", "pow"], [218, 2, 1, "", "quo"], [218, 2, 1, "", "sub"]], "sympy.polys.polyclasses.DMP": [[218, 2, 1, "", "LC"], [218, 2, 1, "", "TC"], [218, 2, 1, "", "abs"], [218, 2, 1, "", "add"], [218, 2, 1, "", "add_ground"], [218, 2, 1, "", "all_coeffs"], [218, 2, 1, "", "all_monoms"], [218, 2, 1, "", "all_terms"], [218, 2, 1, "", "cancel"], [218, 2, 1, "", "cauchy_lower_bound"], [218, 2, 1, "", "cauchy_upper_bound"], [218, 2, 1, "", "clear_denoms"], [218, 2, 1, "", "coeffs"], [218, 2, 1, "", "cofactors"], [218, 2, 1, "", "compose"], [218, 2, 1, "", "content"], [218, 2, 1, "", "convert"], [218, 2, 1, "", "count_complex_roots"], [218, 2, 1, "", "count_real_roots"], [218, 2, 1, "", "decompose"], [218, 2, 1, "", "deflate"], [218, 2, 1, "", "degree"], [218, 2, 1, "", "degree_list"], [218, 2, 1, "", "diff"], [218, 2, 1, "", "discriminant"], [218, 2, 1, "", "div"], [218, 2, 1, "", "eject"], [218, 2, 1, "", "eval"], [218, 2, 1, "", "exclude"], [218, 2, 1, "", "exquo"], [218, 2, 1, "", "exquo_ground"], [218, 2, 1, "", "factor_list"], [218, 2, 1, "", "factor_list_include"], [218, 2, 1, "", "from_list"], [218, 2, 1, "", "from_sympy_list"], [218, 2, 1, "", "gcd"], [218, 2, 1, "", "gcdex"], [218, 2, 1, "", "gff_list"], [218, 2, 1, "", "ground_new"], [218, 2, 1, "", "half_gcdex"], [218, 2, 1, "", "homogeneous_order"], [218, 2, 1, "", "homogenize"], [218, 2, 1, "", "inject"], [218, 2, 1, "", "integrate"], [218, 2, 1, "", "intervals"], [218, 2, 1, "", "invert"], [218, 3, 1, "", "is_cyclotomic"], [218, 3, 1, "", "is_ground"], [218, 3, 1, "", "is_homogeneous"], [218, 3, 1, "", "is_irreducible"], [218, 3, 1, "", "is_linear"], [218, 3, 1, "", "is_monic"], [218, 3, 1, "", "is_monomial"], [218, 3, 1, "", "is_one"], [218, 3, 1, "", "is_primitive"], [218, 3, 1, "", "is_quadratic"], [218, 3, 1, "", "is_sqf"], [218, 3, 1, "", "is_zero"], [218, 2, 1, "", "l1_norm"], [218, 2, 1, "", "l2_norm_squared"], [218, 2, 1, "", "lcm"], [218, 2, 1, "", "lift"], [218, 2, 1, "", "max_norm"], [218, 2, 1, "", "mignotte_sep_bound_squared"], [218, 2, 1, "", "monic"], [218, 2, 1, "", "monoms"], [218, 2, 1, "", "mul"], [218, 2, 1, "", "mul_ground"], [218, 2, 1, "", "neg"], [218, 2, 1, "", "norm"], [218, 2, 1, "", "nth"], [218, 2, 1, "", "pdiv"], [218, 2, 1, "", "permute"], [218, 2, 1, "", "pexquo"], [218, 2, 1, "", "pow"], [218, 2, 1, "", "pquo"], [218, 2, 1, "", "prem"], [218, 2, 1, "", "primitive"], [218, 2, 1, "", "quo"], [218, 2, 1, "", "quo_ground"], [218, 2, 1, "", "refine_root"], [218, 2, 1, "", "rem"], [218, 3, 1, "", "rep"], [218, 2, 1, "", "resultant"], [218, 2, 1, "", "revert"], [218, 2, 1, "", "shift"], [218, 2, 1, "", "slice"], [218, 2, 1, "", "sqf_list"], [218, 2, 1, "", "sqf_list_include"], [218, 2, 1, "", "sqf_norm"], [218, 2, 1, "", "sqf_part"], [218, 2, 1, "", "sqr"], [218, 2, 1, "", "sturm"], [218, 2, 1, "", "sub"], [218, 2, 1, "", "sub_ground"], [218, 2, 1, "", "subresultants"], [218, 2, 1, "", "terms"], [218, 2, 1, "", "terms_gcd"], [218, 2, 1, "", "to_best"], [218, 2, 1, "", "to_dict"], [218, 2, 1, "", "to_exact"], [218, 2, 1, "", "to_field"], [218, 2, 1, "", "to_list"], [218, 2, 1, "", "to_ring"], [218, 2, 1, "", "to_sympy_dict"], [218, 2, 1, "", "to_sympy_list"], [218, 2, 1, "", "to_tuple"], [218, 2, 1, "", "total_degree"], [218, 2, 1, "", "transform"], [218, 2, 1, "", "trunc"], [218, 2, 1, "", "unify_DMP"]], "sympy.polys.polyconfig": [[220, 4, 1, "", "setup"]], "sympy.polys.polyerrors": [[220, 1, 1, "", "BasePolynomialError"], [220, 1, 1, "", "CoercionFailed"], [220, 1, 1, "", "ComputationFailed"], [220, 1, 1, "", "DomainError"], [220, 1, 1, "", "EvaluationFailed"], [220, 1, 1, "", "ExactQuotientFailed"], [220, 1, 1, "", "ExtraneousFactors"], [220, 1, 1, "", "FlagError"], [220, 1, 1, "", "GeneratorsError"], [220, 1, 1, "", "GeneratorsNeeded"], [220, 1, 1, "", "HeuristicGCDFailed"], [220, 1, 1, "", "HomomorphismFailed"], [220, 1, 1, "", "IsomorphismFailed"], [220, 1, 1, "", "MultivariatePolynomialError"], [220, 1, 1, "", "NotAlgebraic"], [220, 1, 1, "", "NotInvertible"], [220, 1, 1, "", "NotReversible"], [220, 1, 1, "", "OperationNotSupported"], [220, 1, 1, "", "OptionError"], [220, 1, 1, "", "PolificationFailed"], [220, 1, 1, "", "PolynomialError"], [220, 1, 1, "", "RefinementFailed"], [220, 1, 1, "", "UnificationFailed"], [220, 1, 1, "", "UnivariatePolynomialError"]], "sympy.polys.polyfuncs": [[223, 4, 1, "", "horner"], [223, 4, 1, "", "interpolate"], [223, 4, 1, "", "symmetrize"], [223, 4, 1, "", "viete"]], "sympy.polys.polyoptions": [[220, 1, 1, "", "Options"], [220, 4, 1, "", "build_options"]], "sympy.polys.polyoptions.Options": [[220, 2, 1, "", "clone"]], "sympy.polys.polyroots": [[223, 4, 1, "", "roots"]], "sympy.polys.polytools": [[223, 1, 1, "", "GroebnerBasis"], [223, 4, 1, "", "LC"], [223, 4, 1, "", "LM"], [223, 4, 1, "", "LT"], [223, 1, 1, "", "Poly"], [223, 1, 1, "", "PurePoly"], [223, 4, 1, "", "all_roots"], [223, 4, 1, "", "cancel"], [223, 4, 1, "", "cofactors"], [223, 4, 1, "", "compose"], [223, 4, 1, "", "content"], [223, 4, 1, "", "count_roots"], [223, 4, 1, "", "decompose"], [223, 4, 1, "", "degree"], [223, 4, 1, "", "degree_list"], [223, 4, 1, "", "discriminant"], [223, 4, 1, "", "div"], [223, 4, 1, "", "exquo"], [223, 4, 1, "", "factor"], [223, 4, 1, "", "factor_list"], [223, 4, 1, "", "gcd"], [223, 4, 1, "", "gcd_list"], [223, 4, 1, "", "gcdex"], [223, 4, 1, "", "gff"], [223, 4, 1, "", "gff_list"], [223, 4, 1, "", "groebner"], [223, 4, 1, "", "ground_roots"], [223, 4, 1, "", "half_gcdex"], [223, 4, 1, "", "intervals"], [223, 4, 1, "", "invert"], [223, 4, 1, "", "is_zero_dimensional"], [223, 4, 1, "", "lcm"], [223, 4, 1, "", "lcm_list"], [223, 4, 1, "", "monic"], [223, 4, 1, "", "nroots"], [223, 4, 1, "", "nth_power_roots_poly"], [223, 4, 1, "", "parallel_poly_from_expr"], [223, 4, 1, "", "pdiv"], [223, 4, 1, "", "pexquo"], [223, 4, 1, "", "poly"], [223, 4, 1, "", "poly_from_expr"], [223, 4, 1, "", "pquo"], [223, 4, 1, "", "prem"], [223, 4, 1, "", "primitive"], [223, 4, 1, "", "quo"], [223, 4, 1, "", "real_roots"], [223, 4, 1, "", "reduced"], [223, 4, 1, "", "refine_root"], [223, 4, 1, "", "rem"], [223, 4, 1, "", "resultant"], [223, 4, 1, "", "sqf"], [223, 4, 1, "", "sqf_list"], [223, 4, 1, "", "sqf_norm"], [223, 4, 1, "", "sqf_part"], [223, 4, 1, "", "sturm"], [223, 4, 1, "", "subresultants"], [223, 4, 1, "", "terms_gcd"], [223, 4, 1, "", "trunc"]], "sympy.polys.polytools.GroebnerBasis": [[223, 2, 1, "", "contains"], [223, 2, 1, "", "fglm"], [223, 3, 1, "", "is_zero_dimensional"], [223, 2, 1, "", "reduce"]], "sympy.polys.polytools.Poly": [[223, 2, 1, "", "EC"], [223, 2, 1, "", "EM"], [223, 2, 1, "", "ET"], [223, 2, 1, "", "LC"], [223, 2, 1, "", "LM"], [223, 2, 1, "", "LT"], [223, 2, 1, "", "TC"], [223, 2, 1, "", "abs"], [223, 2, 1, "", "add"], [223, 2, 1, "", "add_ground"], [223, 2, 1, "", "all_coeffs"], [223, 2, 1, "", "all_monoms"], [223, 2, 1, "", "all_roots"], [223, 2, 1, "", "all_terms"], [223, 2, 1, "", "as_dict"], [223, 2, 1, "", "as_expr"], [223, 2, 1, "", "as_list"], [223, 2, 1, "", "as_poly"], [223, 2, 1, "", "cancel"], [223, 2, 1, "", "clear_denoms"], [223, 2, 1, "", "coeff_monomial"], [223, 2, 1, "", "coeffs"], [223, 2, 1, "", "cofactors"], [223, 2, 1, "", "compose"], [223, 2, 1, "", "content"], [223, 2, 1, "", "count_roots"], [223, 2, 1, "", "decompose"], [223, 2, 1, "", "deflate"], [223, 2, 1, "", "degree"], [223, 2, 1, "", "degree_list"], [223, 2, 1, "", "diff"], [223, 2, 1, "", "discriminant"], [223, 2, 1, "", "dispersion"], [223, 2, 1, "", "dispersionset"], [223, 2, 1, "", "div"], [223, 3, 1, "", "domain"], [223, 2, 1, "", "eject"], [223, 2, 1, "", "eval"], [223, 2, 1, "", "exclude"], [223, 2, 1, "", "exquo"], [223, 2, 1, "", "exquo_ground"], [223, 2, 1, "", "factor_list"], [223, 2, 1, "", "factor_list_include"], [223, 3, 1, "", "free_symbols"], [223, 3, 1, "", "free_symbols_in_domain"], [223, 2, 1, "", "from_dict"], [223, 2, 1, "", "from_expr"], [223, 2, 1, "", "from_list"], [223, 2, 1, "", "from_poly"], [223, 2, 1, "", "galois_group"], [223, 2, 1, "", "gcd"], [223, 2, 1, "", "gcdex"], [223, 3, 1, "", "gen"], [223, 2, 1, "", "get_domain"], [223, 2, 1, "", "get_modulus"], [223, 2, 1, "", "gff_list"], [223, 2, 1, "", "ground_roots"], [223, 2, 1, "", "half_gcdex"], [223, 2, 1, "", "has_only_gens"], [223, 2, 1, "", "homogeneous_order"], [223, 2, 1, "", "homogenize"], [223, 2, 1, "", "inject"], [223, 2, 1, "", "integrate"], [223, 2, 1, "", "intervals"], [223, 2, 1, "", "invert"], [223, 3, 1, "", "is_cyclotomic"], [223, 3, 1, "", "is_ground"], [223, 3, 1, "", "is_homogeneous"], [223, 3, 1, "", "is_irreducible"], [223, 3, 1, "", "is_linear"], [223, 3, 1, "", "is_monic"], [223, 3, 1, "", "is_monomial"], [223, 3, 1, "", "is_multivariate"], [223, 3, 1, "", "is_one"], [223, 3, 1, "", "is_primitive"], [223, 3, 1, "", "is_quadratic"], [223, 3, 1, "", "is_sqf"], [223, 3, 1, "", "is_univariate"], [223, 3, 1, "", "is_zero"], [223, 2, 1, "", "l1_norm"], [223, 2, 1, "", "lcm"], [223, 2, 1, "", "length"], [223, 2, 1, "", "lift"], [223, 2, 1, "", "ltrim"], [223, 2, 1, "", "make_monic_over_integers_by_scaling_roots"], [223, 2, 1, "", "match"], [223, 2, 1, "", "max_norm"], [223, 2, 1, "", "monic"], [223, 2, 1, "", "monoms"], [223, 2, 1, "", "mul"], [223, 2, 1, "", "mul_ground"], [223, 2, 1, "", "neg"], [223, 2, 1, "", "new"], [223, 2, 1, "", "norm"], [223, 2, 1, "", "nroots"], [223, 2, 1, "", "nth"], [223, 2, 1, "", "nth_power_roots_poly"], [223, 3, 1, "", "one"], [223, 2, 1, "", "pdiv"], [223, 2, 1, "", "per"], [223, 2, 1, "", "pexquo"], [223, 2, 1, "", "pow"], [223, 2, 1, "", "pquo"], [223, 2, 1, "", "prem"], [223, 2, 1, "", "primitive"], [223, 2, 1, "", "quo"], [223, 2, 1, "", "quo_ground"], [223, 2, 1, "", "rat_clear_denoms"], [223, 2, 1, "", "real_roots"], [223, 2, 1, "", "refine_root"], [223, 2, 1, "", "rem"], [223, 2, 1, "", "reorder"], [223, 2, 1, "", "replace"], [223, 2, 1, "", "resultant"], [223, 2, 1, "", "retract"], [223, 2, 1, "", "revert"], [223, 2, 1, "", "root"], [223, 2, 1, "", "same_root"], [223, 2, 1, "", "set_domain"], [223, 2, 1, "", "set_modulus"], [223, 2, 1, "", "shift"], [223, 2, 1, "", "slice"], [223, 2, 1, "", "sqf_list"], [223, 2, 1, "", "sqf_list_include"], [223, 2, 1, "", "sqf_norm"], [223, 2, 1, "", "sqf_part"], [223, 2, 1, "", "sqr"], [223, 2, 1, "", "sturm"], [223, 2, 1, "", "sub"], [223, 2, 1, "", "sub_ground"], [223, 2, 1, "", "subresultants"], [223, 2, 1, "", "terms"], [223, 2, 1, "", "terms_gcd"], [223, 2, 1, "", "termwise"], [223, 2, 1, "", "to_exact"], [223, 2, 1, "", "to_field"], [223, 2, 1, "", "to_ring"], [223, 2, 1, "", "total_degree"], [223, 2, 1, "", "transform"], [223, 2, 1, "", "trunc"], [223, 2, 1, "", "unify"], [223, 3, 1, "", "unit"], [223, 3, 1, "", "zero"]], "sympy.polys.polytools.PurePoly": [[223, 3, 1, "", "free_symbols"]], "sympy.polys.rationaltools": [[223, 4, 1, "", "together"]], "sympy.polys.ring_series": [[224, 4, 1, "", "_tan1"], [224, 4, 1, "", "mul_xin"], [224, 4, 1, "", "pow_xin"], [224, 4, 1, "", "rs_LambertW"], [224, 4, 1, "", "rs_asin"], [224, 4, 1, "", "rs_atan"], [224, 4, 1, "", "rs_atanh"], [224, 4, 1, "", "rs_compose_add"], [224, 4, 1, "", "rs_cos"], [224, 4, 1, "", "rs_cos_sin"], [224, 4, 1, "", "rs_cosh"], [224, 4, 1, "", "rs_cot"], [224, 4, 1, "", "rs_diff"], [224, 4, 1, "", "rs_exp"], [224, 4, 1, "", "rs_fun"], [224, 4, 1, "", "rs_hadamard_exp"], [224, 4, 1, "", "rs_integrate"], [224, 4, 1, "", "rs_is_puiseux"], [224, 4, 1, "", "rs_log"], [224, 4, 1, "", "rs_mul"], [224, 4, 1, "", "rs_newton"], [224, 4, 1, "", "rs_nth_root"], [224, 4, 1, "", "rs_pow"], [224, 4, 1, "", "rs_puiseux"], [224, 4, 1, "", "rs_puiseux2"], [224, 4, 1, "", "rs_series_from_list"], [224, 4, 1, "", "rs_series_inversion"], [224, 4, 1, "", "rs_series_reversion"], [224, 4, 1, "", "rs_sin"], [224, 4, 1, "", "rs_sinh"], [224, 4, 1, "", "rs_square"], [224, 4, 1, "", "rs_subs"], [224, 4, 1, "", "rs_tan"], [224, 4, 1, "", "rs_tanh"], [224, 4, 1, "", "rs_trunc"]], "sympy.polys.rings": [[218, 1, 1, "", "PolyElement"], [218, 1, 1, "", "PolyRing"], [218, 4, 1, "", "ring"], [218, 4, 1, "", "sring"], [218, 4, 1, "", "vring"], [218, 4, 1, "", "xring"]], "sympy.polys.rings.PolyElement": [[218, 2, 1, "", "almosteq"], [218, 2, 1, "", "cancel"], [218, 2, 1, "", "coeff"], [218, 2, 1, "", "coeff_wrt"], [218, 2, 1, "", "coeffs"], [218, 2, 1, "", "const"], [218, 2, 1, "", "content"], [218, 2, 1, "", "copy"], [218, 2, 1, "", "degree"], [218, 2, 1, "", "degrees"], [218, 2, 1, "", "diff"], [218, 2, 1, "", "div"], [218, 2, 1, "", "imul_num"], [218, 2, 1, "", "itercoeffs"], [218, 2, 1, "", "itermonoms"], [218, 2, 1, "", "iterterms"], [218, 2, 1, "", "leading_expv"], [218, 2, 1, "", "leading_monom"], [218, 2, 1, "", "leading_term"], [218, 2, 1, "", "listcoeffs"], [218, 2, 1, "", "listmonoms"], [218, 2, 1, "", "listterms"], [218, 2, 1, "", "monic"], [218, 2, 1, "", "monoms"], [218, 2, 1, "", "pdiv"], [218, 2, 1, "", "pexquo"], [218, 2, 1, "", "pquo"], [218, 2, 1, "", "prem"], [218, 2, 1, "", "primitive"], [218, 2, 1, "", "square"], [218, 2, 1, "", "strip_zero"], [218, 2, 1, "", "subresultants"], [218, 2, 1, "", "symmetrize"], [218, 2, 1, "", "tail_degree"], [218, 2, 1, "", "tail_degrees"], [218, 2, 1, "", "terms"]], "sympy.polys.rings.PolyRing": [[218, 2, 1, "", "add"], [218, 2, 1, "", "add_gens"], [218, 2, 1, "", "compose"], [218, 2, 1, "", "drop"], [218, 2, 1, "", "drop_to_ground"], [218, 2, 1, "", "index"], [218, 2, 1, "", "monomial_basis"], [218, 2, 1, "", "mul"], [218, 2, 1, "", "symmetric_poly"]], "sympy.polys.rootoftools": [[223, 1, 1, "", "ComplexRootOf"], [223, 1, 1, "", "RootOf"], [223, 1, 1, "", "RootSum"], [223, 4, 1, "", "rootof"]], "sympy.polys.rootoftools.ComplexRootOf": [[223, 2, 1, "", "_all_roots"], [223, 2, 1, "", "_complexes_index"], [223, 2, 1, "", "_complexes_sorted"], [223, 2, 1, "", "_count_roots"], [223, 2, 1, "", "_ensure_complexes_init"], [223, 2, 1, "", "_ensure_reals_init"], [223, 2, 1, "", "_eval_evalf"], [223, 2, 1, "", "_eval_is_imaginary"], [223, 2, 1, "", "_eval_is_real"], [223, 2, 1, "", "_get_complexes"], [223, 2, 1, "", "_get_complexes_sqf"], [223, 2, 1, "", "_get_interval"], [223, 2, 1, "", "_get_reals"], [223, 2, 1, "", "_get_reals_sqf"], [223, 2, 1, "", "_get_roots"], [223, 2, 1, "", "_indexed_root"], [223, 2, 1, "", "_new"], [223, 2, 1, "", "_postprocess_root"], [223, 2, 1, "", "_preprocess_roots"], [223, 2, 1, "", "_real_roots"], [223, 2, 1, "", "_reals_index"], [223, 2, 1, "", "_reals_sorted"], [223, 2, 1, "", "_refine_complexes"], [223, 2, 1, "", "_reset"], [223, 2, 1, "", "_roots_trivial"], [223, 2, 1, "", "_set_interval"], [223, 2, 1, "", "all_roots"], [223, 2, 1, "", "clear_cache"], [223, 2, 1, "", "eval_approx"], [223, 2, 1, "", "eval_rational"], [223, 2, 1, "", "real_roots"]], "sympy.polys.rootoftools.RootSum": [[223, 2, 1, "", "new"]], "sympy.polys.solvers": [[225, 4, 1, "", "_solve_lin_sys"], [225, 4, 1, "", "_solve_lin_sys_component"], [225, 4, 1, "", "eqs_to_matrix"], [225, 4, 1, "", "solve_lin_sys"], [225, 4, 1, "", "sympy_eqs_to_ring"]], "sympy.polys.specialpolys": [[223, 4, 1, "", "cyclotomic_poly"], [223, 4, 1, "", "interpolating_poly"], [223, 4, 1, "", "random_poly"], [223, 4, 1, "", "swinnerton_dyer_poly"], [223, 4, 1, "", "symmetric_poly"]], "sympy.printing": [[227, 0, 0, "-", "aesaracode"], [227, 0, 0, "-", "c"], [227, 0, 0, "-", "codeprinter"], [227, 0, 0, "-", "conventions"], [227, 0, 0, "-", "cxx"], [227, 0, 0, "-", "fortran"], [227, 0, 0, "-", "gtk"], [227, 0, 0, "-", "jscode"], [227, 0, 0, "-", "julia"], [227, 0, 0, "-", "lambdarepr"], [227, 0, 0, "-", "latex"], [227, 0, 0, "-", "maple"], [227, 0, 0, "-", "mathematica"], [227, 0, 0, "-", "mathml"], [227, 0, 0, "-", "octave"], [227, 0, 0, "-", "precedence"], [227, 0, 0, "-", "pretty"], [227, 0, 0, "-", "preview"], [227, 0, 0, "-", "printer"], [227, 0, 0, "-", "pycode"], [227, 0, 0, "-", "python"], [227, 0, 0, "-", "rcode"], [227, 0, 0, "-", "repr"], [227, 0, 0, "-", "rust"], [227, 0, 0, "-", "smtlib"], [227, 0, 0, "-", "str"], [227, 0, 0, "-", "tree"]], "sympy.printing.aesaracode": [[227, 1, 1, "", "AesaraPrinter"], [227, 4, 1, "", "aesara_code"], [227, 4, 1, "", "aesara_function"], [227, 4, 1, "", "dim_handling"]], "sympy.printing.aesaracode.AesaraPrinter": [[227, 2, 1, "", "doprint"], [227, 5, 1, "", "printmethod"]], "sympy.printing.c": [[227, 1, 1, "", "C89CodePrinter"], [227, 1, 1, "", "C99CodePrinter"], [227, 4, 1, "", "ccode"], [227, 6, 1, "", "known_functions_C89"], [227, 6, 1, "", "known_functions_C99"], [227, 4, 1, "", "print_ccode"]], "sympy.printing.c.C89CodePrinter": [[227, 2, 1, "", "indent_code"], [227, 5, 1, "", "printmethod"]], "sympy.printing.c.C99CodePrinter": [[227, 5, 1, "", "printmethod"]], "sympy.printing.codeprinter": [[227, 7, 1, "", "AssignmentError"], [227, 1, 1, "", "CodePrinter"], [227, 4, 1, "", "cxxcode"]], "sympy.printing.codeprinter.CodePrinter": [[227, 2, 1, "", "doprint"], [227, 5, 1, "", "printmethod"]], "sympy.printing.conventions": [[227, 4, 1, "", "split_super_sub"]], "sympy.printing.cxx": [[227, 1, 1, "", "CXX11CodePrinter"], [227, 1, 1, "", "CXX98CodePrinter"]], "sympy.printing.cxx.CXX11CodePrinter": [[227, 5, 1, "", "printmethod"]], "sympy.printing.cxx.CXX98CodePrinter": [[227, 5, 1, "", "printmethod"]], "sympy.printing.dot": [[227, 4, 1, "", "dotprint"]], "sympy.printing.fortran": [[227, 1, 1, "", "FCodePrinter"], [227, 4, 1, "", "fcode"], [227, 4, 1, "", "print_fcode"]], "sympy.printing.fortran.FCodePrinter": [[227, 2, 1, "", "indent_code"], [227, 5, 1, "", "printmethod"]], "sympy.printing.gtk": [[227, 4, 1, "", "print_gtk"]], "sympy.printing.jscode": [[227, 1, 1, "", "JavascriptCodePrinter"], [227, 4, 1, "", "jscode"], [227, 6, 1, "", "known_functions"]], "sympy.printing.jscode.JavascriptCodePrinter": [[227, 2, 1, "", "indent_code"], [227, 5, 1, "", "printmethod"]], "sympy.printing.julia": [[227, 1, 1, "", "JuliaCodePrinter"], [227, 4, 1, "", "julia_code"], [227, 6, 1, "", "known_fcns_src1"], [227, 6, 1, "", "known_fcns_src2"]], "sympy.printing.julia.JuliaCodePrinter": [[227, 2, 1, "", "indent_code"], [227, 5, 1, "", "printmethod"]], "sympy.printing.lambdarepr": [[227, 1, 1, "", "LambdaPrinter"], [227, 4, 1, "", "lambdarepr"]], "sympy.printing.lambdarepr.LambdaPrinter": [[227, 5, 1, "", "printmethod"]], "sympy.printing.latex": [[227, 1, 1, "", "LatexPrinter"], [227, 6, 1, "", "accepted_latex_functions"], [227, 4, 1, "", "latex"], [227, 4, 1, "", "print_latex"]], "sympy.printing.latex.LatexPrinter": [[227, 2, 1, "", "parenthesize_super"], [227, 5, 1, "", "printmethod"]], "sympy.printing.maple": [[227, 1, 1, "", "MapleCodePrinter"], [227, 4, 1, "", "maple_code"], [227, 4, 1, "", "print_maple_code"]], "sympy.printing.maple.MapleCodePrinter": [[227, 5, 1, "", "printmethod"]], "sympy.printing.mathematica": [[227, 1, 1, "", "MCodePrinter"], [227, 6, 1, "", "known_functions"], [227, 4, 1, "", "mathematica_code"]], "sympy.printing.mathematica.MCodePrinter": [[227, 5, 1, "", "printmethod"]], "sympy.printing.mathml": [[227, 1, 1, "", "MathMLContentPrinter"], [227, 1, 1, "", "MathMLPresentationPrinter"], [227, 1, 1, "", "MathMLPrinterBase"], [227, 4, 1, "", "mathml"], [227, 4, 1, "", "print_mathml"]], "sympy.printing.mathml.MathMLContentPrinter": [[227, 2, 1, "", "mathml_tag"], [227, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPresentationPrinter": [[227, 2, 1, "", "mathml_tag"], [227, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPrinterBase": [[227, 2, 1, "", "doprint"]], "sympy.printing.octave": [[227, 1, 1, "", "OctaveCodePrinter"], [227, 6, 1, "", "known_fcns_src1"], [227, 6, 1, "", "known_fcns_src2"], [227, 4, 1, "", "octave_code"]], "sympy.printing.octave.OctaveCodePrinter": [[227, 2, 1, "", "indent_code"], [227, 5, 1, "", "printmethod"]], "sympy.printing.precedence": [[227, 6, 1, "", "PRECEDENCE"], [227, 6, 1, "", "PRECEDENCE_FUNCTIONS"], [227, 6, 1, "", "PRECEDENCE_VALUES"], [227, 4, 1, "", "precedence"]], "sympy.printing.pretty": [[227, 0, 0, "-", "pretty"], [227, 0, 0, "-", "pretty_symbology"], [227, 0, 0, "-", "stringpict"]], "sympy.printing.pretty.pretty": [[227, 1, 1, "", "PrettyPrinter"], [227, 4, 1, "", "pretty"], [227, 4, 1, "", "pretty_print"]], "sympy.printing.pretty.pretty.PrettyPrinter": [[227, 5, 1, "", "printmethod"]], "sympy.printing.pretty.pretty_symbology": [[227, 4, 1, "", "G"], [227, 4, 1, "", "U"], [227, 4, 1, "", "VF"], [227, 4, 1, "", "annotated"], [227, 6, 1, "", "atoms_table"], [227, 6, 1, "", "digit_2txt"], [227, 6, 1, "", "frac"], [227, 4, 1, "", "g"], [227, 6, 1, "", "greek_letters"], [227, 4, 1, "", "hobj"], [227, 4, 1, "", "pretty_atom"], [227, 4, 1, "", "pretty_symbol"], [227, 4, 1, "", "pretty_try_use_unicode"], [227, 4, 1, "", "pretty_use_unicode"], [227, 6, 1, "", "root"], [227, 6, 1, "", "sub"], [227, 6, 1, "", "sup"], [227, 6, 1, "", "symb_2txt"], [227, 4, 1, "", "vobj"], [227, 4, 1, "", "xobj"], [227, 4, 1, "", "xstr"], [227, 4, 1, "", "xsym"]], "sympy.printing.pretty.stringpict": [[227, 1, 1, "", "prettyForm"], [227, 1, 1, "", "stringPict"]], "sympy.printing.pretty.stringpict.prettyForm": [[227, 2, 1, "", "apply"]], "sympy.printing.pretty.stringpict.stringPict": [[227, 2, 1, "", "above"], [227, 2, 1, "", "below"], [227, 2, 1, "", "height"], [227, 2, 1, "", "left"], [227, 2, 1, "", "leftslash"], [227, 2, 1, "", "next"], [227, 2, 1, "", "parens"], [227, 2, 1, "", "render"], [227, 2, 1, "", "right"], [227, 2, 1, "", "root"], [227, 2, 1, "", "stack"], [227, 2, 1, "", "terminal_width"], [227, 2, 1, "", "width"]], "sympy.printing.preview": [[227, 4, 1, "", "preview"]], "sympy.printing.printer": [[227, 1, 1, "", "Printer"]], "sympy.printing.printer.Printer": [[227, 2, 1, "", "_print"], [227, 2, 1, "", "doprint"], [227, 5, 1, "", "printmethod"], [227, 2, 1, "", "set_global_settings"]], "sympy.printing.pycode": [[227, 1, 1, "", "MpmathPrinter"], [227, 4, 1, "", "pycode"]], "sympy.printing.rcode": [[227, 1, 1, "", "RCodePrinter"], [227, 6, 1, "", "known_functions"], [227, 4, 1, "", "print_rcode"], [227, 4, 1, "", "rcode"]], "sympy.printing.rcode.RCodePrinter": [[227, 2, 1, "", "indent_code"], [227, 5, 1, "", "printmethod"]], "sympy.printing.repr": [[227, 1, 1, "", "ReprPrinter"], [227, 4, 1, "", "srepr"]], "sympy.printing.repr.ReprPrinter": [[227, 2, 1, "", "emptyPrinter"], [227, 5, 1, "", "printmethod"], [227, 2, 1, "", "reprify"]], "sympy.printing.rust": [[227, 1, 1, "", "RustCodePrinter"], [227, 6, 1, "", "known_functions"], [227, 4, 1, "", "rust_code"]], "sympy.printing.rust.RustCodePrinter": [[227, 2, 1, "", "indent_code"], [227, 5, 1, "", "printmethod"]], "sympy.printing.smtlib": [[227, 1, 1, "", "SMTLibPrinter"], [227, 4, 1, "", "smtlib_code"]], "sympy.printing.smtlib.SMTLibPrinter": [[227, 5, 1, "", "_default_settings"], [227, 5, 1, "", "printmethod"]], "sympy.printing.str": [[227, 1, 1, "", "StrPrinter"], [227, 4, 1, "", "sstr"], [227, 4, 1, "", "sstrrepr"]], "sympy.printing.str.StrPrinter": [[227, 5, 1, "", "printmethod"]], "sympy.printing.tree": [[227, 4, 1, "", "pprint_nodes"], [227, 4, 1, "", "print_node"], [227, 4, 1, "", "print_tree"], [227, 4, 1, "", "tree"]], "sympy.series.acceleration": [[234, 4, 1, "", "richardson"], [234, 4, 1, "", "shanks"]], "sympy.series.formal": [[229, 1, 1, "", "FiniteFormalPowerSeries"], [229, 1, 1, "", "FormalPowerSeries"], [229, 1, 1, "", "FormalPowerSeriesCompose"], [229, 1, 1, "", "FormalPowerSeriesInverse"], [229, 1, 1, "", "FormalPowerSeriesProduct"], [229, 4, 1, "", "compute_fps"], [229, 4, 1, "", "exp_re"], [229, 4, 1, "", "fps"], [229, 4, 1, "", "hyper_algorithm"], [229, 4, 1, "", "hyper_re"], [229, 4, 1, "", "rational_algorithm"], [229, 4, 1, "", "rational_independent"], [229, 4, 1, "", "rsolve_hypergeometric"], [229, 4, 1, "", "simpleDE"], [229, 4, 1, "", "solve_de"]], "sympy.series.formal.FormalPowerSeries": [[229, 2, 1, "", "coeff_bell"], [229, 2, 1, "", "compose"], [229, 3, 1, "", "infinite"], [229, 2, 1, "", "integrate"], [229, 2, 1, "", "inverse"], [229, 2, 1, "", "polynomial"], [229, 2, 1, "", "product"], [229, 2, 1, "", "truncate"]], "sympy.series.formal.FormalPowerSeriesCompose": [[229, 3, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesInverse": [[229, 3, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesProduct": [[229, 3, 1, "", "function"]], "sympy.series.fourier": [[230, 1, 1, "", "FourierSeries"], [230, 4, 1, "", "fourier_series"]], "sympy.series.fourier.FourierSeries": [[230, 2, 1, "", "scale"], [230, 2, 1, "", "scalex"], [230, 2, 1, "", "shift"], [230, 2, 1, "", "shiftx"], [230, 2, 1, "", "sigma_approximation"], [230, 2, 1, "", "truncate"]], "sympy.series.gruntz": [[234, 1, 1, "", "SubsSet"], [234, 4, 1, "", "build_expression_tree"], [234, 4, 1, "", "calculate_series"], [234, 4, 1, "", "compare"], [234, 4, 1, "", "gruntz"], [234, 4, 1, "", "limitinf"], [234, 4, 1, "", "mrv"], [234, 4, 1, "", "mrv_leadterm"], [234, 4, 1, "", "mrv_max1"], [234, 4, 1, "", "mrv_max3"], [234, 4, 1, "", "rewrite"], [234, 4, 1, "", "sign"]], "sympy.series.gruntz.SubsSet": [[234, 2, 1, "", "copy"], [234, 2, 1, "", "do_subs"], [234, 2, 1, "", "meets"], [234, 2, 1, "", "union"]], "sympy.series.limits": [[234, 1, 1, "", "Limit"], [234, 4, 1, "", "limit"]], "sympy.series.limits.Limit": [[234, 2, 1, "", "doit"]], "sympy.series.limitseq": [[232, 4, 1, "", "difference_delta"], [232, 4, 1, "", "dominant"], [232, 4, 1, "", "limit_seq"]], "sympy.series.order": [[234, 1, 1, "", "Order"]], "sympy.series.order.Order": [[234, 2, 1, "", "contains"]], "sympy.series.residues": [[234, 4, 1, "", "residue"]], "sympy.series.sequences": [[233, 1, 1, "", "EmptySequence"], [233, 1, 1, "", "RecursiveSeq"], [233, 1, 1, "", "SeqAdd"], [233, 1, 1, "", "SeqBase"], [233, 1, 1, "", "SeqFormula"], [233, 1, 1, "", "SeqMul"], [233, 1, 1, "", "SeqPer"], [233, 4, 1, "", "sequence"]], "sympy.series.sequences.EmptySequence": [[233, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.RecursiveSeq": [[233, 3, 1, "", "initial"], [233, 3, 1, "", "interval"], [233, 3, 1, "", "n"], [233, 3, 1, "", "recurrence"], [233, 3, 1, "", "start"], [233, 3, 1, "", "stop"], [233, 3, 1, "", "y"], [233, 3, 1, "", "yn"]], "sympy.series.sequences.SeqAdd": [[233, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqBase": [[233, 2, 1, "", "coeff"], [233, 2, 1, "", "coeff_mul"], [233, 2, 1, "", "find_linear_recurrence"], [233, 3, 1, "", "free_symbols"], [233, 3, 1, "", "gen"], [233, 3, 1, "", "interval"], [233, 3, 1, "", "length"], [233, 3, 1, "", "start"], [233, 3, 1, "", "stop"], [233, 3, 1, "", "variables"]], "sympy.series.sequences.SeqFormula": [[233, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.SeqMul": [[233, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqPer": [[233, 2, 1, "", "coeff_mul"]], "sympy.series.series": [[234, 4, 1, "", "series"]], "sympy.sets": [[235, 0, 0, "-", "conditionset"], [235, 0, 0, "-", "fancysets"], [235, 0, 0, "-", "powerset"], [235, 0, 0, "-", "sets"]], "sympy.sets.conditionset": [[235, 1, 1, "", "ConditionSet"], [235, 1, 1, "", "Contains"], [235, 1, 1, "", "SetKind"]], "sympy.sets.fancysets": [[235, 1, 1, "", "CartesianComplexRegion"], [235, 1, 1, "", "ComplexRegion"], [235, 1, 1, "", "Complexes"], [235, 1, 1, "", "ImageSet"], [235, 1, 1, "", "Integers"], [235, 1, 1, "", "Naturals"], [235, 1, 1, "", "Naturals0"], [235, 1, 1, "", "PolarComplexRegion"], [235, 1, 1, "", "Range"], [235, 1, 1, "", "Rationals"], [235, 1, 1, "", "Reals"], [235, 4, 1, "", "normalize_theta_set"]], "sympy.sets.fancysets.ComplexRegion": [[235, 3, 1, "", "a_interval"], [235, 3, 1, "", "b_interval"], [235, 2, 1, "", "from_real"], [235, 3, 1, "", "psets"], [235, 3, 1, "", "sets"]], "sympy.sets.fancysets.Range": [[235, 2, 1, "", "as_relational"], [235, 3, 1, "", "reversed"]], "sympy.sets.powerset": [[235, 1, 1, "", "PowerSet"]], "sympy.sets.sets": [[235, 1, 1, "", "Complement"], [235, 1, 1, "", "DisjointUnion"], [235, 1, 1, "", "EmptySet"], [235, 1, 1, "", "FiniteSet"], [235, 1, 1, "", "Intersection"], [235, 1, 1, "", "Interval"], [235, 1, 1, "", "ProductSet"], [235, 1, 1, "", "Set"], [235, 1, 1, "", "SymmetricDifference"], [235, 1, 1, "", "Union"], [235, 1, 1, "", "UniversalSet"], [235, 4, 1, "", "imageset"]], "sympy.sets.sets.Complement": [[235, 2, 1, "", "as_relational"], [235, 2, 1, "", "reduce"]], "sympy.sets.sets.FiniteSet": [[235, 2, 1, "", "as_relational"]], "sympy.sets.sets.Intersection": [[235, 2, 1, "", "as_relational"]], "sympy.sets.sets.Interval": [[235, 2, 1, "", "Lopen"], [235, 2, 1, "", "Ropen"], [235, 2, 1, "", "as_relational"], [235, 3, 1, "", "end"], [235, 3, 1, "", "is_left_unbounded"], [235, 3, 1, "", "is_right_unbounded"], [235, 3, 1, "", "left_open"], [235, 2, 1, "", "open"], [235, 3, 1, "", "right_open"], [235, 3, 1, "", "start"]], "sympy.sets.sets.ProductSet": [[235, 3, 1, "", "is_iterable"]], "sympy.sets.sets.Set": [[235, 3, 1, "", "boundary"], [235, 3, 1, "", "closure"], [235, 2, 1, "", "complement"], [235, 2, 1, "", "contains"], [235, 3, 1, "", "inf"], [235, 3, 1, "", "interior"], [235, 2, 1, "", "intersect"], [235, 2, 1, "", "intersection"], [235, 3, 1, "", "is_closed"], [235, 2, 1, "", "is_disjoint"], [235, 3, 1, "", "is_open"], [235, 2, 1, "", "is_proper_subset"], [235, 2, 1, "", "is_proper_superset"], [235, 2, 1, "", "is_subset"], [235, 2, 1, "", "is_superset"], [235, 2, 1, "", "isdisjoint"], [235, 2, 1, "", "issubset"], [235, 2, 1, "", "issuperset"], [235, 3, 1, "", "kind"], [235, 3, 1, "", "measure"], [235, 2, 1, "", "powerset"], [235, 3, 1, "", "sup"], [235, 2, 1, "", "symmetric_difference"], [235, 2, 1, "", "union"]], "sympy.sets.sets.SymmetricDifference": [[235, 2, 1, "", "as_relational"]], "sympy.sets.sets.Union": [[235, 2, 1, "", "as_relational"]], "sympy.simplify": [[239, 0, 0, "-", "combsimp"], [239, 0, 0, "-", "cse_main"], [239, 0, 0, "-", "epathtools"], [236, 0, 0, "-", "fu"], [239, 0, 0, "-", "hyperexpand"], [237, 0, 0, "-", "hyperexpand_doc"], [239, 0, 0, "-", "powsimp"], [239, 0, 0, "-", "radsimp"], [239, 0, 0, "-", "ratsimp"], [16, 0, 0, "-", "simplify"], [239, 0, 0, "-", "sqrtdenest"], [239, 0, 0, "-", "trigsimp"]], "sympy.simplify.combsimp": [[239, 4, 1, "", "combsimp"]], "sympy.simplify.cse_main": [[239, 4, 1, "", "cse"], [239, 4, 1, "", "opt_cse"], [239, 4, 1, "", "tree_cse"]], "sympy.simplify.epathtools": [[239, 1, 1, "", "EPath"], [239, 4, 1, "", "epath"]], "sympy.simplify.epathtools.EPath": [[239, 2, 1, "", "apply"], [239, 2, 1, "", "select"]], "sympy.simplify.fu": [[236, 4, 1, "", "TR0"], [236, 4, 1, "", "TR1"], [236, 4, 1, "", "TR10"], [236, 4, 1, "", "TR10i"], [236, 4, 1, "", "TR11"], [236, 4, 1, "", "TR111"], [236, 4, 1, "", "TR12"], [236, 4, 1, "", "TR12i"], [236, 4, 1, "", "TR13"], [236, 4, 1, "", "TR14"], [236, 4, 1, "", "TR15"], [236, 4, 1, "", "TR16"], [236, 4, 1, "", "TR2"], [236, 4, 1, "", "TR22"], [236, 4, 1, "", "TR2i"], [236, 4, 1, "", "TR3"], [236, 4, 1, "", "TR4"], [236, 4, 1, "", "TR5"], [236, 4, 1, "", "TR6"], [236, 4, 1, "", "TR7"], [236, 4, 1, "", "TR8"], [236, 4, 1, "", "TR9"], [236, 4, 1, "", "TRmorrie"], [236, 4, 1, "", "TRpower"], [236, 4, 1, "", "fu"]], "sympy.simplify.hyperexpand": [[239, 4, 1, "", "hyperexpand"]], "sympy.simplify.powsimp": [[239, 4, 1, "", "powdenest"], [239, 4, 1, "", "powsimp"]], "sympy.simplify.radsimp": [[239, 4, 1, "", "collect"], [239, 4, 1, "", "collect_const"], [239, 4, 1, "", "collect_sqrt"], [239, 4, 1, "", "fraction"], [239, 4, 1, "", "rad_rationalize"], [239, 4, 1, "", "radsimp"], [239, 4, 1, "", "rcollect"]], "sympy.simplify.ratsimp": [[239, 4, 1, "", "ratsimp"], [239, 4, 1, "", "ratsimpmodprime"]], "sympy.simplify.simplify": [[239, 4, 1, "", "besselsimp"], [239, 4, 1, "", "hypersimilar"], [239, 4, 1, "", "hypersimp"], [239, 4, 1, "", "kroneckersimp"], [239, 4, 1, "", "logcombine"], [239, 4, 1, "", "nsimplify"], [239, 4, 1, "", "nthroot"], [239, 4, 1, "", "posify"], [239, 4, 1, "", "separatevars"], [239, 4, 1, "", "simplify"]], "sympy.simplify.sqrtdenest": [[239, 4, 1, "", "sqrtdenest"]], "sympy.simplify.trigsimp": [[239, 4, 1, "", "trigsimp"]], "sympy.solvers": [[242, 0, 0, "-", "inequalities"], [243, 0, 0, "-", "ode"], [244, 0, 0, "-", "pde"], [245, 0, 0, "-", "recurr"], [245, 0, 0, "-", "simplex"], [246, 0, 0, "-", "solveset"]], "sympy.solvers.deutils": [[245, 4, 1, "", "ode_order"]], "sympy.solvers.diophantine.diophantine": [[240, 1, 1, "", "BinaryQuadratic"], [240, 1, 1, "", "CubicThue"], [240, 1, 1, "", "DiophantineEquationType"], [240, 1, 1, "", "DiophantineSolutionSet"], [240, 1, 1, "", "GeneralPythagorean"], [240, 1, 1, "", "GeneralSumOfEvenPowers"], [240, 1, 1, "", "GeneralSumOfSquares"], [240, 1, 1, "", "HomogeneousGeneralQuadratic"], [240, 1, 1, "", "HomogeneousTernaryQuadratic"], [240, 1, 1, "", "HomogeneousTernaryQuadraticNormal"], [240, 1, 1, "", "InhomogeneousGeneralQuadratic"], [240, 1, 1, "", "InhomogeneousTernaryQuadratic"], [240, 1, 1, "", "Linear"], [240, 4, 1, "", "PQa"], [240, 1, 1, "", "Univariate"], [240, 4, 1, "", "base_solution_linear"], [240, 4, 1, "", "classify_diop"], [240, 4, 1, "", "cornacchia"], [240, 4, 1, "", "descent"], [240, 4, 1, "", "diop_DN"], [240, 4, 1, "", "diop_bf_DN"], [240, 4, 1, "", "diop_general_pythagorean"], [240, 4, 1, "", "diop_general_sum_of_even_powers"], [240, 4, 1, "", "diop_general_sum_of_squares"], [240, 4, 1, "", "diop_linear"], [240, 4, 1, "", "diop_quadratic"], [240, 4, 1, "", "diop_solve"], [240, 4, 1, "", "diop_ternary_quadratic"], [240, 4, 1, "", "diop_ternary_quadratic_normal"], [240, 4, 1, "", "diophantine"], [240, 4, 1, "", "divisible"], [240, 4, 1, "", "equivalent"], [240, 4, 1, "", "find_DN"], [240, 4, 1, "", "gaussian_reduce"], [240, 4, 1, "", "holzer"], [240, 4, 1, "", "ldescent"], [240, 4, 1, "", "merge_solution"], [240, 4, 1, "", "parametrize_ternary_quadratic"], [240, 4, 1, "", "partition"], [240, 4, 1, "", "power_representation"], [240, 4, 1, "", "prime_as_sum_of_two_squares"], [240, 4, 1, "", "reconstruct"], [240, 4, 1, "", "sqf_normal"], [240, 4, 1, "", "square_factor"], [240, 4, 1, "", "sum_of_four_squares"], [240, 4, 1, "", "sum_of_powers"], [240, 4, 1, "", "sum_of_squares"], [240, 4, 1, "", "sum_of_three_squares"], [240, 4, 1, "", "transformation_to_DN"], [240, 4, 1, "", "transformation_to_normal"]], "sympy.solvers.diophantine.diophantine.DiophantineEquationType": [[240, 2, 1, "", "matches"]], "sympy.solvers.inequalities": [[242, 4, 1, "", "reduce_abs_inequalities"], [242, 4, 1, "", "reduce_abs_inequality"], [242, 4, 1, "", "reduce_inequalities"], [242, 4, 1, "", "reduce_rational_inequalities"], [242, 4, 1, "", "solve_poly_inequalities"], [242, 4, 1, "", "solve_poly_inequality"], [242, 4, 1, "", "solve_rational_inequalities"], [242, 4, 1, "", "solve_univariate_inequality"]], "sympy.solvers.ode": [[243, 6, 1, "", "allhints"], [243, 4, 1, "", "checkinfsol"], [243, 4, 1, "", "checkodesol"], [243, 4, 1, "", "classify_ode"], [243, 4, 1, "", "constantsimp"], [243, 4, 1, "", "dsolve"], [243, 4, 1, "", "homogeneous_order"], [243, 4, 1, "", "infinitesimals"], [243, 0, 0, "-", "ode"]], "sympy.solvers.ode.lie_group": [[243, 4, 1, "", "lie_heuristic_abaco1_product"], [243, 4, 1, "", "lie_heuristic_abaco1_simple"], [243, 4, 1, "", "lie_heuristic_abaco2_similar"], [243, 4, 1, "", "lie_heuristic_abaco2_unique_general"], [243, 4, 1, "", "lie_heuristic_abaco2_unique_unknown"], [243, 4, 1, "", "lie_heuristic_bivariate"], [243, 4, 1, "", "lie_heuristic_chi"], [243, 4, 1, "", "lie_heuristic_function_sum"], [243, 4, 1, "", "lie_heuristic_linear"]], "sympy.solvers.ode.ode": [[243, 4, 1, "", "_handle_Integral"], [243, 4, 1, "", "_linear_2eq_order1_type6"], [243, 4, 1, "", "_linear_2eq_order1_type7"], [243, 4, 1, "", "_nonlinear_2eq_order1_type1"], [243, 4, 1, "", "_nonlinear_2eq_order1_type2"], [243, 4, 1, "", "_nonlinear_2eq_order1_type3"], [243, 4, 1, "", "_nonlinear_2eq_order1_type4"], [243, 4, 1, "", "_nonlinear_2eq_order1_type5"], [243, 4, 1, "", "_nonlinear_3eq_order1_type1"], [243, 4, 1, "", "_nonlinear_3eq_order1_type2"], [243, 4, 1, "", "_nonlinear_3eq_order1_type3"], [243, 4, 1, "", "_nonlinear_3eq_order1_type4"], [243, 4, 1, "", "_nonlinear_3eq_order1_type5"], [243, 4, 1, "", "constant_renumber"], [243, 4, 1, "", "ode_1st_power_series"], [243, 4, 1, "", "ode_2nd_power_series_ordinary"], [243, 4, 1, "", "ode_2nd_power_series_regular"], [243, 4, 1, "", "ode_sol_simplicity"], [243, 4, 1, "", "odesimp"]], "sympy.solvers.ode.riccati": [[243, 4, 1, "", "compute_m_ybar"], [243, 4, 1, "", "construct_c"], [243, 4, 1, "", "construct_d"], [243, 4, 1, "", "get_gen_sol_from_part_sol"], [243, 4, 1, "", "rational_laurent_series"], [243, 4, 1, "", "remove_redundant_sols"], [243, 4, 1, "", "riccati_inverse_normal"], [243, 4, 1, "", "riccati_normal"], [243, 4, 1, "", "riccati_reduced"], [243, 4, 1, "", "solve_aux_eq"], [243, 4, 1, "", "solve_riccati"]], "sympy.solvers.ode.single": [[243, 1, 1, "", "AlmostLinear"], [243, 1, 1, "", "Bernoulli"], [243, 1, 1, "", "Factorable"], [243, 1, 1, "", "FirstExact"], [243, 1, 1, "", "FirstLinear"], [243, 1, 1, "", "HomogeneousCoeffBest"], [243, 1, 1, "", "HomogeneousCoeffSubsDepDivIndep"], [243, 1, 1, "", "HomogeneousCoeffSubsIndepDivDep"], [243, 1, 1, "", "LieGroup"], [243, 1, 1, "", "LinearCoefficients"], [243, 1, 1, "", "Liouville"], [243, 1, 1, "", "NthAlgebraic"], [243, 1, 1, "", "NthLinearConstantCoeffHomogeneous"], [243, 1, 1, "", "NthLinearConstantCoeffUndeterminedCoefficients"], [243, 1, 1, "", "NthLinearConstantCoeffVariationOfParameters"], [243, 1, 1, "", "NthLinearEulerEqHomogeneous"], [243, 1, 1, "", "NthLinearEulerEqNonhomogeneousUndeterminedCoefficients"], [243, 1, 1, "", "NthLinearEulerEqNonhomogeneousVariationOfParameters"], [243, 1, 1, "", "NthOrderReducible"], [243, 1, 1, "", "RationalRiccati"], [243, 1, 1, "", "RiccatiSpecial"], [243, 1, 1, "", "SecondHypergeometric"], [243, 1, 1, "", "SecondLinearAiry"], [243, 1, 1, "", "SecondLinearBessel"], [243, 1, 1, "", "Separable"], [243, 1, 1, "", "SeparableReduced"]], "sympy.solvers.ode.systems": [[243, 4, 1, "", "canonical_odes"], [243, 4, 1, "", "dsolve_system"], [243, 4, 1, "", "linear_ode_to_matrix"], [243, 4, 1, "", "linodesolve"], [243, 4, 1, "", "linodesolve_type"], [243, 4, 1, "", "matrix_exp"], [243, 4, 1, "", "matrix_exp_jordan_form"]], "sympy.solvers.pde": [[244, 4, 1, "", "checkpdesol"], [244, 4, 1, "", "classify_pde"], [244, 4, 1, "", "pde_1st_linear_constant_coeff"], [244, 4, 1, "", "pde_1st_linear_constant_coeff_homogeneous"], [244, 4, 1, "", "pde_1st_linear_variable_coeff"], [244, 4, 1, "", "pde_separate"], [244, 4, 1, "", "pde_separate_add"], [244, 4, 1, "", "pde_separate_mul"], [244, 4, 1, "", "pdsolve"]], "sympy.solvers.polysys": [[245, 4, 1, "", "solve_poly_system"], [245, 4, 1, "", "solve_triangulated"]], "sympy.solvers.recurr": [[245, 4, 1, "", "rsolve"], [245, 4, 1, "", "rsolve_hyper"], [245, 4, 1, "", "rsolve_poly"], [245, 4, 1, "", "rsolve_ratio"]], "sympy.solvers.simplex": [[245, 4, 1, "", "linprog"], [245, 4, 1, "", "lpmax"], [245, 4, 1, "", "lpmin"]], "sympy.solvers.solvers": [[245, 4, 1, "", "checksol"], [245, 4, 1, "", "nsolve"], [245, 4, 1, "", "solve"], [245, 4, 1, "", "solve_linear"], [245, 4, 1, "", "solve_linear_system"], [245, 4, 1, "", "solve_linear_system_LU"], [245, 4, 1, "", "solve_undetermined_coeffs"], [245, 4, 1, "", "unrad"]], "sympy.solvers.solveset": [[246, 4, 1, "", "_is_exponential"], [246, 4, 1, "", "_is_logarithmic"], [246, 4, 1, "", "_solve_exponential"], [246, 4, 1, "", "_solve_logarithm"], [246, 4, 1, "", "_transolve"], [246, 4, 1, "", "domain_check"], [246, 4, 1, "", "invert_complex"], [246, 4, 1, "", "invert_real"], [246, 4, 1, "", "linear_eq_to_matrix"], [246, 4, 1, "", "linsolve"], [246, 4, 1, "", "nonlinsolve"], [246, 4, 1, "", "solveset"], [246, 4, 1, "", "solveset_complex"], [246, 4, 1, "", "solveset_real"], [246, 4, 1, "", "solvify"]], "sympy.stats": [[247, 4, 1, "", "Arcsin"], [247, 4, 1, "", "Benini"], [247, 4, 1, "", "Bernoulli"], [247, 1, 1, "", "BernoulliProcess"], [247, 4, 1, "", "Beta"], [247, 4, 1, "", "BetaBinomial"], [247, 4, 1, "", "BetaNoncentral"], [247, 4, 1, "", "BetaPrime"], [247, 4, 1, "", "Binomial"], [247, 4, 1, "", "BoundedPareto"], [247, 4, 1, "", "Cauchy"], [247, 1, 1, "", "CentralMoment"], [247, 4, 1, "", "Chi"], [247, 4, 1, "", "ChiNoncentral"], [247, 4, 1, "", "ChiSquared"], [247, 4, 1, "", "Coin"], [247, 1, 1, "", "ContinuousMarkovChain"], [247, 4, 1, "", "ContinuousRV"], [247, 1, 1, "", "Covariance"], [247, 1, 1, "", "CrossCovarianceMatrix"], [247, 4, 1, "", "Dagum"], [247, 4, 1, "", "Davis"], [247, 4, 1, "", "Die"], [247, 1, 1, "", "DiscreteMarkovChain"], [247, 4, 1, "", "DiscreteUniform"], [247, 4, 1, "", "E"], [247, 4, 1, "", "Erlang"], [247, 4, 1, "", "ExGaussian"], [247, 1, 1, "", "Expectation"], [247, 1, 1, "", "ExpectationMatrix"], [247, 4, 1, "", "Exponential"], [247, 4, 1, "", "FDistribution"], [247, 4, 1, "", "FiniteRV"], [247, 4, 1, "", "FisherZ"], [247, 4, 1, "", "Frechet"], [247, 4, 1, "", "Gamma"], [247, 4, 1, "", "GammaInverse"], [247, 1, 1, "", "GammaProcess"], [247, 4, 1, "", "GeneralizedMultivariateLogGamma"], [247, 4, 1, "", "GeneralizedMultivariateLogGammaOmega"], [247, 4, 1, "", "Geometric"], [247, 4, 1, "", "Gompertz"], [247, 4, 1, "", "Gumbel"], [247, 4, 1, "", "Hermite"], [247, 4, 1, "", "Hypergeometric"], [247, 4, 1, "", "JointRV"], [247, 4, 1, "", "Kumaraswamy"], [247, 4, 1, "", "Laplace"], [247, 4, 1, "", "Levy"], [247, 4, 1, "", "LogLogistic"], [247, 4, 1, "", "LogNormal"], [247, 4, 1, "", "Logarithmic"], [247, 4, 1, "", "Logistic"], [247, 4, 1, "", "Lomax"], [247, 4, 1, "", "MatrixGamma"], [247, 4, 1, "", "MatrixNormal"], [247, 4, 1, "", "Maxwell"], [247, 1, 1, "", "Moment"], [247, 4, 1, "", "Moyal"], [247, 4, 1, "", "Multinomial"], [247, 4, 1, "", "MultivariateBeta"], [247, 4, 1, "", "MultivariateEwens"], [247, 4, 1, "", "MultivariateLaplace"], [247, 4, 1, "", "MultivariateNormal"], [247, 4, 1, "", "MultivariateT"], [247, 4, 1, "", "Nakagami"], [247, 4, 1, "", "NegativeBinomial"], [247, 4, 1, "", "NegativeMultinomial"], [247, 4, 1, "", "Normal"], [247, 4, 1, "", "NormalGamma"], [247, 4, 1, "", "P"], [247, 4, 1, "", "Pareto"], [247, 4, 1, "", "Poisson"], [247, 1, 1, "", "PoissonProcess"], [247, 4, 1, "", "PowerFunction"], [247, 1, 1, "", "Probability"], [247, 4, 1, "", "QuadraticU"], [247, 4, 1, "", "Rademacher"], [247, 4, 1, "", "RaisedCosine"], [247, 4, 1, "", "Rayleigh"], [247, 4, 1, "", "Reciprocal"], [247, 4, 1, "", "ShiftedGompertz"], [247, 4, 1, "", "Skellam"], [247, 4, 1, "", "StudentT"], [247, 4, 1, "", "Trapezoidal"], [247, 4, 1, "", "Triangular"], [247, 4, 1, "", "Uniform"], [247, 4, 1, "", "UniformSum"], [247, 1, 1, "", "Variance"], [247, 1, 1, "", "VarianceMatrix"], [247, 4, 1, "", "VonMises"], [247, 4, 1, "", "Wald"], [247, 4, 1, "", "Weibull"], [247, 1, 1, "", "WienerProcess"], [247, 4, 1, "", "WignerSemicircle"], [247, 4, 1, "", "Wishart"], [247, 4, 1, "", "YuleSimon"], [247, 4, 1, "", "Zeta"], [247, 4, 1, "", "cmoment"], [247, 4, 1, "", "correlation"], [247, 4, 1, "", "coskewness"], [247, 4, 1, "", "covariance"], [247, 0, 0, "-", "crv"], [247, 0, 0, "-", "crv_types"], [247, 4, 1, "", "density"], [247, 4, 1, "", "entropy"], [247, 4, 1, "", "factorial_moment"], [247, 0, 0, "-", "frv"], [247, 0, 0, "-", "frv_types"], [247, 4, 1, "", "given"], [247, 4, 1, "", "kurtosis"], [247, 4, 1, "", "marginal_distribution"], [247, 4, 1, "", "median"], [247, 4, 1, "", "moment"], [247, 4, 1, "", "quantile"], [247, 0, 0, "-", "rv"], [247, 4, 1, "", "sample"], [247, 4, 1, "", "sample_iter"], [247, 4, 1, "", "skewness"], [247, 4, 1, "", "std"], [247, 4, 1, "", "variance"], [247, 4, 1, "", "where"]], "sympy.stats.BernoulliProcess": [[247, 2, 1, "", "expectation"], [247, 2, 1, "", "probability"]], "sympy.stats.DiscreteMarkovChain": [[247, 2, 1, "", "absorbing_probabilities"], [247, 2, 1, "", "canonical_form"], [247, 2, 1, "", "communication_classes"], [247, 2, 1, "", "decompose"], [247, 2, 1, "", "fixed_row_vector"], [247, 2, 1, "", "fundamental_matrix"], [247, 3, 1, "", "limiting_distribution"], [247, 2, 1, "", "sample"], [247, 2, 1, "", "stationary_distribution"], [247, 3, 1, "", "transition_probabilities"]], "sympy.stats.compound_rv": [[247, 1, 1, "", "CompoundDistribution"]], "sympy.stats.crv": [[247, 1, 1, "", "ContinuousDomain"], [247, 1, 1, "", "ContinuousPSpace"]], "sympy.stats.crv_types": [[247, 1, 1, "", "NormalPSpace"]], "sympy.stats.crv_types.sympy.stats": [[247, 4, 1, "", "Die"], [247, 4, 1, "", "Normal"]], "sympy.stats.frv": [[247, 1, 1, "", "FiniteDomain"], [247, 1, 1, "", "FinitePSpace"]], "sympy.stats.frv_types": [[247, 1, 1, "", "DiePSpace"]], "sympy.stats.rv": [[247, 1, 1, "", "ConditionalDomain"], [247, 1, 1, "", "PSpace"], [247, 1, 1, "", "ProductDomain"], [247, 1, 1, "", "ProductPSpace"], [247, 1, 1, "", "RandomDomain"], [247, 1, 1, "", "RandomSymbol"], [247, 1, 1, "", "SingleDomain"], [247, 1, 1, "", "SinglePSpace"], [247, 4, 1, "", "pspace"], [247, 4, 1, "", "random_symbols"], [247, 4, 1, "", "rs_swap"], [247, 4, 1, "", "sampling_E"], [247, 4, 1, "", "sampling_P"], [247, 4, 1, "", "sampling_density"]], "sympy.tensor": [[248, 0, 0, "-", "array"], [251, 0, 0, "-", "index_methods"], [252, 0, 0, "-", "indexed"], [253, 0, 0, "-", "tensor"], [254, 0, 0, "-", "toperators"]], "sympy.tensor.array": [[248, 1, 1, "", "ImmutableDenseNDimArray"], [248, 1, 1, "", "ImmutableSparseNDimArray"], [248, 1, 1, "", "MutableDenseNDimArray"], [248, 1, 1, "", "MutableSparseNDimArray"], [248, 4, 1, "", "derive_by_array"], [249, 0, 0, "-", "expressions"], [248, 4, 1, "", "permutedims"], [248, 4, 1, "", "tensorcontraction"], [248, 4, 1, "", "tensordiagonal"], [248, 4, 1, "", "tensorproduct"]], "sympy.tensor.array.expressions": [[249, 1, 1, "", "ArrayContraction"], [249, 1, 1, "", "ArrayDiagonal"], [249, 1, 1, "", "ArrayTensorProduct"], [249, 1, 1, "", "PermuteDims"]], "sympy.tensor.index_methods": [[251, 4, 1, "", "get_contraction_structure"], [251, 4, 1, "", "get_indices"]], "sympy.tensor.indexed": [[252, 1, 1, "", "Idx"], [252, 1, 1, "", "Indexed"], [252, 1, 1, "", "IndexedBase"]], "sympy.tensor.indexed.Idx": [[252, 3, 1, "", "label"], [252, 3, 1, "", "lower"], [252, 3, 1, "", "upper"]], "sympy.tensor.indexed.Indexed": [[252, 3, 1, "", "base"], [252, 3, 1, "", "indices"], [252, 3, 1, "", "ranges"], [252, 3, 1, "", "rank"], [252, 3, 1, "", "shape"]], "sympy.tensor.indexed.IndexedBase": [[252, 3, 1, "", "label"], [252, 3, 1, "", "offset"], [252, 3, 1, "", "shape"], [252, 3, 1, "", "strides"]], "sympy.tensor.tensor": [[253, 1, 1, "", "TensAdd"], [253, 1, 1, "", "TensExpr"], [253, 1, 1, "", "TensMul"], [253, 1, 1, "", "TensorHead"], [253, 1, 1, "", "TensorIndex"], [253, 1, 1, "", "TensorIndexType"], [253, 1, 1, "", "TensorSymmetry"], [253, 1, 1, "", "TensorType"], [253, 1, 1, "", "_TensorManager"], [253, 4, 1, "", "canon_bp"], [253, 4, 1, "", "riemann_cyclic"], [253, 4, 1, "", "riemann_cyclic_replace"], [253, 4, 1, "", "tensor_heads"], [253, 4, 1, "", "tensorsymmetry"]], "sympy.tensor.tensor.TensAdd": [[253, 2, 1, "", "canon_bp"], [253, 2, 1, "", "contract_metric"]], "sympy.tensor.tensor.TensExpr": [[253, 2, 1, "", "get_matrix"], [253, 2, 1, "", "replace_with_arrays"]], "sympy.tensor.tensor.TensMul": [[253, 2, 1, "", "canon_bp"], [253, 2, 1, "", "contract_metric"], [253, 2, 1, "", "get_free_indices"], [253, 2, 1, "", "get_indices"], [253, 2, 1, "", "perm2tensor"], [253, 2, 1, "", "sorted_components"], [253, 2, 1, "", "split"]], "sympy.tensor.tensor.TensorHead": [[253, 2, 1, "", "commutes_with"]], "sympy.tensor.tensor.TensorSymmetry": [[253, 2, 1, "", "direct_product"], [253, 2, 1, "", "fully_symmetric"], [253, 2, 1, "", "no_symmetry"], [253, 2, 1, "", "riemann"]], "sympy.tensor.tensor._TensorManager": [[253, 2, 1, "", "clear"], [253, 2, 1, "", "comm_i2symbol"], [253, 2, 1, "", "comm_symbols2i"], [253, 2, 1, "", "get_comm"], [253, 2, 1, "", "set_comm"], [253, 2, 1, "", "set_comms"]], "sympy.tensor.toperators": [[254, 1, 1, "", "PartialDerivative"]], "sympy.testing": [[256, 0, 0, "-", "pytest"], [257, 0, 0, "-", "randtest"], [258, 0, 0, "-", "runtests"]], "sympy.testing.pytest": [[256, 4, 1, "", "SKIP"], [256, 4, 1, "", "nocache_fail"], [256, 4, 1, "", "raises"], [256, 4, 1, "", "skip_under_pyodide"], [256, 4, 1, "", "warns"], [256, 4, 1, "", "warns_deprecated_sympy"]], "sympy.testing.runtests": [[258, 1, 1, "", "PyTestReporter"], [258, 1, 1, "", "Reporter"], [258, 1, 1, "", "SymPyDocTestFinder"], [258, 1, 1, "", "SymPyDocTestRunner"], [258, 1, 1, "", "SymPyOutputChecker"], [258, 1, 1, "", "SymPyTestResults"], [258, 4, 1, "", "convert_to_native_paths"], [258, 4, 1, "", "doctest"], [258, 4, 1, "", "get_sympy_dir"], [258, 4, 1, "", "raise_on_deprecated"], [258, 4, 1, "", "run_all_tests"], [258, 4, 1, "", "run_in_subprocess_with_hash_randomization"], [258, 4, 1, "", "split_list"], [258, 4, 1, "", "sympytestfile"], [258, 4, 1, "", "test"]], "sympy.testing.runtests.PyTestReporter": [[258, 2, 1, "", "write"]], "sympy.testing.runtests.SymPyDocTestRunner": [[258, 2, 1, "", "run"]], "sympy.testing.runtests.SymPyOutputChecker": [[258, 2, 1, "", "check_output"]], "sympy.testing.runtests.SymPyTestResults": [[258, 5, 1, "", "attempted"], [258, 5, 1, "", "failed"]], "sympy.utilities": [[259, 0, 0, "-", "autowrap"], [260, 0, 0, "-", "codegen"], [261, 0, 0, "-", "decorator"], [262, 0, 0, "-", "enumerative"], [263, 0, 0, "-", "exceptions"], [265, 0, 0, "-", "iterables"], [266, 0, 0, "-", "lambdify"], [267, 0, 0, "-", "memoization"], [268, 0, 0, "-", "misc"], [269, 0, 0, "-", "source"], [270, 0, 0, "-", "timeutils"]], "sympy.utilities.autowrap": [[259, 1, 1, "", "CodeWrapper"], [259, 1, 1, "", "CythonCodeWrapper"], [259, 1, 1, "", "DummyWrapper"], [259, 1, 1, "", "F2PyCodeWrapper"], [259, 1, 1, "", "UfuncifyCodeWrapper"], [259, 4, 1, "", "autowrap"], [259, 4, 1, "", "binary_function"], [259, 4, 1, "", "ufuncify"]], "sympy.utilities.autowrap.CythonCodeWrapper": [[259, 2, 1, "", "dump_pyx"]], "sympy.utilities.autowrap.UfuncifyCodeWrapper": [[259, 2, 1, "", "dump_c"]], "sympy.utilities.codegen": [[260, 1, 1, "", "Argument"], [260, 1, 1, "", "CCodeGen"], [260, 1, 1, "", "CodeGen"], [260, 1, 1, "", "DataType"], [260, 1, 1, "", "FCodeGen"], [260, 1, 1, "", "JuliaCodeGen"], [260, 1, 1, "", "OctaveCodeGen"], [260, 1, 1, "", "OutputArgument"], [260, 1, 1, "", "Result"], [260, 1, 1, "", "Routine"], [260, 1, 1, "", "RustCodeGen"], [260, 4, 1, "", "codegen"], [260, 4, 1, "", "get_default_datatype"], [260, 4, 1, "", "make_routine"]], "sympy.utilities.codegen.CCodeGen": [[260, 2, 1, "", "dump_c"], [260, 2, 1, "", "dump_h"], [260, 2, 1, "", "get_prototype"]], "sympy.utilities.codegen.CodeGen": [[260, 2, 1, "", "dump_code"], [260, 2, 1, "", "routine"], [260, 2, 1, "", "write"]], "sympy.utilities.codegen.FCodeGen": [[260, 2, 1, "", "dump_f95"], [260, 2, 1, "", "dump_h"], [260, 2, 1, "", "get_interface"]], "sympy.utilities.codegen.JuliaCodeGen": [[260, 2, 1, "", "dump_jl"], [260, 2, 1, "", "routine"]], "sympy.utilities.codegen.OctaveCodeGen": [[260, 2, 1, "", "dump_m"], [260, 2, 1, "", "routine"]], "sympy.utilities.codegen.Routine": [[260, 3, 1, "", "result_variables"], [260, 3, 1, "", "variables"]], "sympy.utilities.codegen.RustCodeGen": [[260, 2, 1, "", "dump_rs"], [260, 2, 1, "", "get_prototype"], [260, 2, 1, "", "routine"]], "sympy.utilities.decorator": [[261, 4, 1, "", "conserve_mpmath_dps"], [261, 4, 1, "", "deprecated"], [261, 4, 1, "", "doctest_depends_on"], [261, 4, 1, "", "memoize_property"], [261, 1, 1, "", "no_attrs_in_subclass"], [261, 4, 1, "", "public"], [261, 4, 1, "", "threaded"], [261, 4, 1, "", "threaded_factory"], [261, 4, 1, "", "xthreaded"]], "sympy.utilities.enumerative": [[262, 1, 1, "", "MultisetPartitionTraverser"], [262, 4, 1, "", "factoring_visitor"], [262, 4, 1, "", "list_visitor"], [262, 4, 1, "", "multiset_partitions_taocp"]], "sympy.utilities.enumerative.MultisetPartitionTraverser": [[262, 2, 1, "", "count_partitions"], [262, 2, 1, "", "enum_all"], [262, 2, 1, "", "enum_large"], [262, 2, 1, "", "enum_range"], [262, 2, 1, "", "enum_small"]], "sympy.utilities.exceptions": [[263, 7, 1, "", "SymPyDeprecationWarning"], [263, 4, 1, "", "ignore_warnings"], [263, 4, 1, "", "sympy_deprecation_warning"]], "sympy.utilities.iterables": [[265, 1, 1, "", "NotIterable"], [265, 4, 1, "", "binary_partitions"], [265, 4, 1, "", "bracelets"], [265, 4, 1, "", "capture"], [265, 4, 1, "", "common_prefix"], [265, 4, 1, "", "common_suffix"], [265, 4, 1, "", "connected_components"], [265, 4, 1, "", "dict_merge"], [265, 4, 1, "", "filter_symbols"], [265, 4, 1, "", "flatten"], [265, 4, 1, "", "generate_bell"], [265, 4, 1, "", "generate_derangements"], [265, 4, 1, "", "generate_involutions"], [265, 4, 1, "", "generate_oriented_forest"], [265, 4, 1, "", "group"], [265, 4, 1, "", "has_dups"], [265, 4, 1, "", "has_variety"], [265, 4, 1, "", "ibin"], [265, 4, 1, "", "iproduct"], [265, 4, 1, "", "is_palindromic"], [265, 4, 1, "", "is_sequence"], [265, 4, 1, "", "iterable"], [265, 4, 1, "", "kbins"], [265, 4, 1, "", "least_rotation"], [265, 4, 1, "", "minlex"], [265, 4, 1, "", "multiset"], [265, 4, 1, "", "multiset_combinations"], [265, 4, 1, "", "multiset_derangements"], [265, 4, 1, "", "multiset_partitions"], [265, 4, 1, "", "multiset_permutations"], [265, 4, 1, "", "necklaces"], [265, 4, 1, "", "numbered_symbols"], [265, 4, 1, "", "ordered_partitions"], [265, 4, 1, "", "partitions"], [265, 4, 1, "", "permute_signs"], [265, 4, 1, "", "postfixes"], [265, 4, 1, "", "prefixes"], [265, 4, 1, "", "random_derangement"], [265, 4, 1, "", "reshape"], [265, 4, 1, "", "rotate_left"], [265, 4, 1, "", "rotate_right"], [265, 4, 1, "", "rotations"], [265, 4, 1, "", "roundrobin"], [265, 4, 1, "", "runs"], [265, 4, 1, "", "sequence_partitions"], [265, 4, 1, "", "sequence_partitions_empty"], [265, 4, 1, "", "sift"], [265, 4, 1, "", "signed_permutations"], [265, 4, 1, "", "strongly_connected_components"], [265, 4, 1, "", "subsets"], [265, 4, 1, "", "take"], [265, 4, 1, "", "topological_sort"], [265, 4, 1, "", "unflatten"], [265, 4, 1, "", "uniq"], [265, 4, 1, "", "variations"]], "sympy.utilities.lambdify": [[266, 4, 1, "", "implemented_function"], [266, 4, 1, "", "lambdastr"], [266, 4, 1, "", "lambdify"]], "sympy.utilities.memoization": [[267, 4, 1, "", "assoc_recurrence_memo"], [267, 4, 1, "", "recurrence_memo"]], "sympy.utilities.misc": [[268, 4, 1, "", "as_int"], [268, 4, 1, "", "debug"], [268, 4, 1, "", "debug_decorator"], [268, 4, 1, "", "debugf"], [268, 4, 1, "", "filldedent"], [268, 4, 1, "", "find_executable"], [268, 4, 1, "", "func_name"], [268, 4, 1, "", "ordinal"], [268, 4, 1, "", "rawlines"], [268, 4, 1, "", "replace"], [268, 4, 1, "", "strlines"], [268, 4, 1, "", "translate"]], "sympy.utilities.source": [[269, 4, 1, "", "get_class"], [269, 4, 1, "", "get_mod_func"]], "sympy.utilities.timeutils": [[270, 4, 1, "", "timed"]], "sympy.vector": [[274, 4, 1, "", "curl"], [274, 4, 1, "", "divergence"], [274, 4, 1, "", "express"], [274, 4, 1, "", "gradient"], [274, 4, 1, "", "is_conservative"], [274, 4, 1, "", "is_solenoidal"], [274, 4, 1, "", "matrix_to_vector"], [274, 4, 1, "", "scalar_potential"], [274, 4, 1, "", "scalar_potential_difference"]], "sympy.vector.coordsysrect": [[271, 1, 1, "", "CoordSys3D"]], "sympy.vector.coordsysrect.CoordSys3D": [[271, 2, 1, "", "__init__"], [271, 2, 1, "", "create_new"], [271, 2, 1, "", "locate_new"], [271, 2, 1, "", "orient_new"], [271, 2, 1, "", "orient_new_axis"], [271, 2, 1, "", "orient_new_body"], [271, 2, 1, "", "orient_new_quaternion"], [271, 2, 1, "", "orient_new_space"], [271, 2, 1, "", "position_wrt"], [271, 2, 1, "", "rotation_matrix"], [271, 2, 1, "", "scalar_map"]], "sympy.vector.deloperator": [[271, 1, 1, "", "Del"]], "sympy.vector.deloperator.Del": [[271, 2, 1, "", "cross"], [271, 2, 1, "", "dot"], [271, 2, 1, "", "gradient"]], "sympy.vector.dyadic": [[271, 1, 1, "", "Dyadic"]], "sympy.vector.dyadic.Dyadic": [[271, 3, 1, "", "components"], [271, 2, 1, "", "cross"], [271, 2, 1, "", "dot"], [271, 2, 1, "", "to_matrix"]], "sympy.vector.implicitregion": [[271, 1, 1, "", "ImplicitRegion"]], "sympy.vector.implicitregion.ImplicitRegion": [[271, 2, 1, "", "multiplicity"], [271, 2, 1, "", "rational_parametrization"], [271, 2, 1, "", "regular_point"], [271, 2, 1, "", "singular_points"]], "sympy.vector.integrals": [[271, 1, 1, "", "ParametricIntegral"], [274, 4, 1, "", "vector_integrate"]], "sympy.vector.orienters": [[273, 1, 1, "", "AxisOrienter"], [273, 1, 1, "", "BodyOrienter"], [273, 1, 1, "", "Orienter"], [273, 1, 1, "", "QuaternionOrienter"], [273, 1, 1, "", "SpaceOrienter"]], "sympy.vector.orienters.AxisOrienter": [[273, 2, 1, "", "__init__"], [273, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.BodyOrienter": [[273, 2, 1, "", "__init__"]], "sympy.vector.orienters.Orienter": [[273, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.QuaternionOrienter": [[273, 2, 1, "", "__init__"]], "sympy.vector.orienters.SpaceOrienter": [[273, 2, 1, "", "__init__"]], "sympy.vector.parametricregion": [[271, 1, 1, "", "ParametricRegion"]], "sympy.vector.vector": [[271, 1, 1, "", "Vector"]], "sympy.vector.vector.Vector": [[271, 3, 1, "", "components"], [271, 2, 1, "", "cross"], [271, 2, 1, "", "dot"], [271, 2, 1, "", "magnitude"], [271, 2, 1, "", "normalize"], [271, 2, 1, "", "outer"], [271, 2, 1, "", "projection"], [271, 2, 1, "", "separate"], [271, 2, 1, "", "to_matrix"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute", "6": "py:data", "7": "py:exception"}, "terms": {"": [0, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 85, 86, 87, 88, 91, 92, 94, 96, 97, 98, 99, 101, 102, 105, 108, 109, 110, 111, 113, 115, 117, 118, 119, 121, 123, 125, 127, 129, 130, 131, 133, 134, 136, 137, 138, 140, 141, 142, 144, 148, 152, 153, 157, 159, 163, 164, 165, 171, 172, 174, 176, 178, 179, 182, 186, 187, 189, 190, 192, 195, 196, 197, 201, 202, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 247, 253, 258, 259, 260, 261, 262, 263, 265, 266, 268, 271, 273, 277, 278, 280, 283, 288, 289, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 305, 306], "0": [3, 4, 11, 12, 13, 14, 15, 16, 18, 20, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 121, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 137, 138, 140, 141, 142, 144, 145, 146, 147, 149, 151, 154, 155, 156, 157, 159, 160, 161, 164, 165, 166, 168, 171, 176, 177, 178, 181, 186, 187, 188, 189, 190, 191, 192, 193, 197, 199, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 258, 259, 261, 262, 263, 265, 266, 267, 271, 273, 274, 275, 276, 277, 278, 281, 291, 292, 294, 295, 297, 299, 300, 301, 304, 305, 306], "00": [14, 16, 69, 109, 176, 186, 265], "000": [53, 73, 96, 99, 186, 265], "0000": 53, "000000000000": 16, "0000000000000": [115, 165], "00000000000000": [14, 35, 69, 73, 193, 227, 247, 295], "00000000000000e": 69, "00000000260573": 123, "00000000e": 14, "0000000154172579002800188521596734869": 77, "00001": 186, "00002480019791932209313156167176797577821140084216297395518482071448": 212, "0001": [53, 73], "00010": 53, "000100000000000000": 69, "00011001011": 265, "00011010011": 265, "0001111011": [99, 265], "0001953125": 117, "00026102": 96, "000507214304613640": 110, "000507214304614": 110, "0005241": 291, "00053": 161, "00070025": 91, "001": [53, 73, 99, 161, 265], "0010": 53, "00100": 69, "00100000000000000": 161, "00101413072159615": 161, "00109772": 291, "0011": [53, 64], "0011276": 291, "00138541666666667": 117, "00141": 61, "00152436": 291, "00210803120913829": 161, "0023152": 96, "003": 73, "0033": 165, "00333333": 291, "00453": 96, "004707066000264604": 50, "006": 105, "006046440489058766": 123, "0063339426292673": 77, "006895004219221134484332976156744208248842039317638217822322799675": 212, "00708": 144, "0075": [291, 292], "00756": 144, "00906": 96, "00996712": 291, "01": [61, 69, 73, 142, 186, 221, 239, 265], "010": [53, 99, 265], "0100": 53, "0101": [53, 186], "010389": 96, "010399": 96, "011": [53, 99, 186, 265], "0110": 53, "0111": [53, 186], "01197": 109, "012": 69, "012297": 73, "012345": 61, "01375162659678": 91, "014": 136, "01480": 240, "014895573969924817587": 77, "015": [112, 292], "0150588346410601": 292, "016": 236, "0166133211401": 113, "01743115": 291, "0174533": 142, "01747268": 247, "0175000000000000": 68, "0186573603637741": [113, 292], "0189": 72, "0190": 61, "0196": 265, "02": [144, 221, 240], "02005": 165, "020599914256786": 123, "0205999155219505": 123, "020884341620842555705": 74, "0225": [291, 292], "023844582399907256": 123, "025413462339411542": 123, "02671848900111377452242355235388489324562": 77, "0276302": 42, "02841027019385211055596446229489549303819644288109756659334461284756482337867831": 73, "0299": [113, 292], "02_03_40_42": 72, "03": [212, 247, 291], "034": 70, "035581932165858e": 123, "035999037": 127, "035999037000": 127, "0365": 223, "04": [11, 105, 247], "04166666666667e": 117, "042894276802320226": 123, "045": 221, "04516378011749278484458888919": 77, "0458952018652595": 292, "0472": 96, "0484508722725343": 123, "04923615": 291, "05": [60, 91, 123, 209, 212, 292], "050584": 96, "0509758447494279": 38, "0519737844841": 113, "052": 245, "05426074": 110, "05426079": 110, "05433146": 110, "05433151": 110, "05440211": 110, "054525080242173562897": 77, "05457162000000e": 174, "05457162d": 50, "05555555555555555555555555555555555555555555555555555555555555555": 212, "0555556377366884": 127, "0555558020932949": 127, "0555562951740285": 127, "0583518": 109, "05892": 144, "06": [63, 69, 113, 144, 212, 247, 292], "060": [112, 292], "0603": 144, "0633": [113, 292], "0652795784357498247001125598": 77, "06616480200395854": 123, "06743": [74, 77, 223], "06e": 161, "07": 94, "08": [38, 105, 144, 223], "08333333333333e": 117, "08346052231061726610939702133": 77, "083954101": 29, "08395410131771": 29, "083c01": 171, "084489": 96, "087": 221, "0874989834394464": 294, "08895483066e": 123, "09": [69, 123, 212], "0904": 105, "0909": 265, "091999668350375232456": 73, "09326036123": 123, "0935077": 48, "095": 77, "0973": 96, "099419756723640344491": 77, "099609": 69, "0998334166468": 294, "0_": 156, "0_0": 92, "0_1": 92, "0d0": [50, 227], "0e": [14, 50, 69], "0f1": 243, "0i": 42, "0j": [42, 217], "0k": 42, "0l": [50, 227], "0o121": 109, "0o171": 109, "0right": 246, "0th": [48, 61, 70, 77], "0x": [14, 192], "0x10e997790": 12, "0x12": 97, "0x324": 109, "0x3243f6a8885a30": 109, "0xfa": 109, "1": [2, 3, 5, 7, 8, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 119, 121, 123, 125, 126, 127, 128, 129, 131, 132, 134, 135, 137, 138, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 159, 160, 161, 163, 164, 165, 166, 167, 171, 174, 175, 176, 177, 178, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 271, 274, 275, 276, 278, 281, 288, 291, 292, 294, 295, 297, 299, 300, 301, 304, 305, 306], "10": [0, 2, 4, 12, 14, 16, 24, 27, 29, 35, 36, 38, 40, 42, 48, 50, 55, 58, 60, 61, 65, 67, 68, 69, 70, 72, 73, 74, 75, 77, 82, 83, 85, 86, 94, 96, 97, 99, 101, 105, 106, 109, 110, 111, 112, 113, 115, 117, 119, 121, 123, 125, 126, 132, 136, 137, 142, 144, 159, 161, 165, 176, 186, 187, 198, 202, 203, 204, 206, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 230, 233, 234, 235, 236, 239, 240, 243, 246, 247, 248, 257, 258, 263, 265, 266, 268, 271, 274, 291, 292, 294, 301, 305], "100": [12, 16, 24, 27, 50, 53, 58, 68, 69, 70, 73, 77, 85, 92, 99, 105, 109, 117, 213, 217, 222, 224, 226, 227, 234, 245, 246, 265, 294], "1000": [16, 50, 53, 69, 70, 73, 101, 109, 159, 196, 197, 198, 199, 212, 226, 227, 236, 266], "10000": [50, 73, 109, 110, 117, 245], "100000": [73, 109, 123], "1000000": [69, 109], "10000000": [73, 223], "1000000000": 73, "100000000000000": [73, 115], "10000000000000000": 14, "100000000000000000000": 69, "100000000000000000000000000000": 73, "100000000000000005551115123126": 73, "10000000001": 109, "1000001": 74, "1001": 53, "1002": 247, "100500": 79, "100644": 11, "1007": [55, 70, 136], "1009": 109, "100x": 13, "101": [53, 77, 99, 109, 125, 186, 240, 265], "1010": [53, 69], "1010203040506070809": 109, "1010381": 109, "1011": 53, "1012": 127, "10120": 301, "101456353": 96, "1016": [61, 105, 265], "102": [60, 105], "1024": [60, 227, 247], "10279": 301, "103": [0, 7, 60], "1031": 70, "103993": 109, "104": 73, "10431": 109, "104348": 109, "104755": 223, "105": [77, 109, 223, 240], "10517083333333": 91, "106": 109, "107": [55, 221], "10713341e": 14, "1072": 105, "1074": 105, "10793": 117, "108": [67, 118], "108208000e3": 195, "108270": 79, "10877": 109, "109": [109, 221, 240], "1090": [48, 109, 223, 240], "1092": 223, "10kn": 117, "10n": 110, "10pt": [97, 207, 227], "10sin": 111, "10th": 109, "11": [4, 22, 44, 45, 50, 55, 60, 63, 65, 67, 69, 70, 72, 74, 77, 81, 82, 83, 85, 86, 94, 96, 99, 100, 105, 109, 111, 113, 125, 142, 144, 176, 186, 201, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 226, 227, 234, 236, 240, 243, 245, 246, 247, 248, 259, 265, 275, 292], "110": [53, 99, 243, 245, 259, 265], "1100": 53, "1101": 53, "11010011000": 265, "1101111000": [99, 265], "1103": 73, "110896": 109, "111": [53, 72, 74, 79, 99, 105, 109, 265], "1110": 53, "1111": 53, "1111339": 109, "11163337": 247, "1118": 109, "112": [109, 220, 224], "1121416371": 50, "113": [73, 109, 240], "11337": 96, "1137796": 240, "113820": 109, "114": [60, 74, 109], "1145": [68, 216, 218, 221, 239], "1145768": 239, "1145809": 239, "115": 77, "1159": 109, "11590": 109, "115975": 74, "116": [212, 221], "1169": 236, "117": [60, 77], "1177": 236, "1178": 109, "1179": 221, "11895": 96, "1193": 70, "1197": 221, "11_0_0_intro": 247, "11_2_6_stationary_and_limiting_distribut": 247, "11_4_0_brownian_motion_wiener_process": 247, "12": [4, 12, 14, 16, 24, 27, 29, 42, 48, 49, 50, 55, 57, 58, 60, 61, 62, 65, 67, 68, 69, 70, 72, 74, 75, 77, 79, 82, 83, 85, 94, 96, 99, 105, 106, 109, 113, 117, 118, 119, 123, 125, 127, 134, 144, 145, 189, 201, 202, 212, 215, 216, 217, 220, 222, 223, 224, 226, 227, 233, 235, 236, 240, 242, 243, 247, 248, 258, 259, 262, 265, 274, 291, 292, 301, 305], "120": [12, 20, 68, 69, 74, 75, 91, 109, 117, 118, 224, 226, 227, 229, 243, 295], "1200": 212, "12000": 117, "121": [69, 74, 109, 125, 202, 245], "1211": 72, "1215": 221, "12166980856813935": 123, "122": [70, 72, 77], "1224": [74, 109], "1225": 105, "12288": 281, "122921448543883967430908091422761898618349713604256384403202282756086473494959648313841": 109, "123": [11, 69, 74, 79, 99, 134, 189, 202, 265, 271, 273], "1231": 221, "1231026625769": 109, "1233": 265, "1234": [11, 109, 240], "12345": [11, 50, 73], "123456": [50, 69, 109], "123456789": 69, "123456789012345646": 50, "123456789012345649": 50, "12345678901234567890": 16, "12345678910111213141516": 109, "123_456": 69, "124": [221, 294], "12438240242516": 113, "12465": 223, "12499999999568202": 123, "12499999999661349": 123, "124a": 244, "125": [69, 73, 96, 109, 218, 233, 240], "12500": 69, "1250000": 163, "12500000000000000000": 69, "125000000000000000000000000000": 73, "125000416028342": 127, "125002080189006": 127, "12524": 13, "125e": 117, "126": [105, 109, 226], "127": [70, 109], "12757857962640e": 35, "127750": 262, "128": [60, 69, 74, 77, 79, 109, 221, 227], "1283": 72, "1294585930293": 240, "1296": 63, "1296959": 77, "1299709": 109, "12e": 69, "12kn": 118, "12mm": 49, "13": [4, 12, 42, 50, 58, 60, 65, 69, 70, 72, 74, 77, 81, 82, 83, 84, 94, 99, 105, 109, 113, 118, 123, 125, 131, 142, 201, 213, 216, 220, 222, 223, 224, 226, 227, 233, 240, 242, 244, 245, 247, 248, 259, 265, 281], "130": 79, "130198866629986772369127970337": 73, "1307": [11, 38], "131": [77, 202], "131072": 223, "13131491": 265, "132": [67, 74, 202], "1336": 73, "134": 105, "135": 109, "1350": 117, "136": [69, 105], "137": [74, 105, 127], "1371": 42, "1373651": 109, "13750": 117, "138": 109, "1381": 70, "1385": [74, 223], "139": 220, "1391": 109, "13y": 240, "14": [4, 27, 29, 50, 58, 60, 64, 65, 67, 69, 70, 74, 75, 77, 94, 105, 106, 109, 110, 117, 123, 142, 212, 213, 216, 218, 220, 221, 222, 223, 224, 226, 227, 236, 239, 240, 243, 245, 247, 248, 295], "140": 109, "1401": 223, "1405": 144, "1407633717262338957430697921446883": 109, "141": 127, "14112001": 294, "1415": 73, "1415085799262523": 123, "14155265358979": 123, "14159": 227, "14159265358979": [73, 77, 245], "141592653589793": [14, 69, 73], "141592653589793238462643383279502884197169399375105820974944592307816406286208": 73, "141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117068": 294, "14159265358979323846264338328": 73, "141592653589793238462643d0": 227, "1415926535897932d0": 227, "14159265358979d0": 50, "141592654": 69, "1416": 212, "1417": [109, 240], "142": 221, "14219": 72, "1428": 212, "14285278320312500000": 16, "142857": 16, "142857142857143": 16, "143": [16, 136, 171, 212], "1430": 74, "14358881": 91, "144": [29, 38, 74, 96, 212, 216], "1441": 240, "147": 83, "14751999969868": 38, "1482": 109, "1484": 27, "149": [74, 109, 113, 292], "1495": [113, 292], "149896229": [163, 166, 196], "15": [4, 14, 16, 24, 48, 55, 58, 60, 65, 67, 69, 70, 72, 73, 74, 77, 79, 82, 83, 85, 86, 94, 96, 99, 100, 105, 106, 109, 117, 131, 165, 212, 213, 215, 216, 217, 218, 222, 223, 224, 226, 227, 229, 233, 234, 236, 239, 240, 244, 245, 246, 247, 248, 265, 291, 294, 295, 300, 301], "150": [105, 125, 240], "15033720e": 14, "151": 58, "15141": 301, "1515151515151": 165, "15154262241479": 109, "15174161": 291, "152": [74, 109], "1520": 117, "1521": 74, "153": 226, "15416": 13, "15423094826093": 109, "15494982830181068512": [4, 77], "155": 223, "15502": 72, "1551": 105, "1553": 70, "15555": 72, "15605338197184": 77, "15625": [117, 199], "156675": 74, "157": [96, 109, 118, 221], "1570": 240, "15707": 96, "1577": 70, "158": [105, 118], "15x15": 216, "16": [4, 12, 14, 27, 29, 38, 42, 48, 50, 52, 60, 61, 64, 68, 69, 70, 74, 77, 78, 79, 83, 94, 96, 99, 105, 106, 108, 109, 118, 208, 215, 216, 217, 220, 221, 222, 223, 226, 227, 233, 235, 236, 237, 240, 247, 248, 265, 271, 280, 291, 292, 301], "160": [16, 117, 221], "1600": [117, 118], "16000": 117, "160249952256379": 224, "161": [70, 136], "16109": 109, "162": [113, 292], "1633833": 265, "1644": 27, "165": [223, 247, 265], "1666666666666666666666666666666666666666666666666666666666666667": 212, "166666666666667": 224, "16667": 96, "167": 105, "167303978": 29, "16730397826142": 29, "16840434497100886801e": 35, "16843009": 109, "1684e": 245, "169": 223, "1692": 105, "17": [4, 35, 36, 38, 58, 60, 61, 69, 70, 73, 74, 75, 79, 82, 85, 94, 105, 109, 125, 217, 218, 222, 223, 226, 227, 234, 236, 240, 243, 248, 262, 292, 299], "170": [82, 247], "170748906965121e": 123, "172": 117, "172870711": 77, "1729": 240, "175": [79, 105, 220, 221], "176": 243, "1764": 109, "1768": 74, "17737": 109, "17749": 13, "17805383034794561964694160130": 77, "1785690389": 11, "1786": 109, "1787": 109, "17881": 13, "179143454621291692285822705344": 77, "18": [4, 35, 52, 60, 61, 69, 72, 74, 77, 79, 82, 85, 100, 105, 109, 117, 118, 123, 125, 127, 203, 212, 216, 220, 221, 226, 227, 235, 236, 240, 243, 245, 246, 247, 248, 274, 292], "180": [85, 211, 221], "1800": [42, 70], "18014398509481984": [69, 239], "18056": 13, "181": [38, 223], "181232444469875": 29, "1812324445": 29, "1816": 96, "1827": 271, "1829": 109, "184": [48, 243], "18466446988997098217": 35, "1847": 222, "18482169793536e": 29, "18525034196069722536": 77, "187": [197, 221], "1870": 72, "18844": 13, "1889": 96, "18891601900395472": 50, "189": 220, "18971": 109, "19": [4, 27, 35, 60, 69, 72, 77, 79, 82, 85, 105, 109, 111, 113, 117, 212, 218, 222, 223, 226, 236, 240, 242, 245, 259, 294], "1901": 70, "1901263495547205e": 123, "19016": 96, "190347": 221, "190413": 221, "19093197": 77, "191": [51, 246], "1914": 105, "192": 98, "1920": 70, "1921": 109, "19287309935246": [35, 245], "192873099352460791205211": 35, "1929": 70, "193": [27, 105, 123], "1931127624": 11, "19351": 72, "19404": 72, "1944": 214, "195": 74, "1952": 197, "1953": [77, 222], "1954": 96, "19548": 301, "1955": 158, "1957": 212, "1958": [109, 212], "1959": 212, "1962": 109, "1963": 243, "1965": [4, 77, 105], "1967": [70, 221], "1968": 126, "1969": [4, 70, 77, 94, 221, 237], "197": 74, "1970": [49, 105], "1971": [221, 243], "1972": 109, "1973": [51, 70, 209], "1974": 229, "1976": 218, "1977": 197, "1978": [53, 60, 197, 221], "1979": [86, 197], "198": 105, "1980": [109, 265], "1981": [68, 221], "1982": [96, 212], "1983": [158, 262], "1985": [96, 135, 158, 202, 271], "1988": [48, 171, 189, 220, 221], "19882": 13, "1989": [4, 221, 245], "199": 51, "1990": [61, 94, 237, 271], "1991": [51, 221], "1992": [109, 221, 245, 265], "19923894": 291, "1993": [69, 221], "1994": [61, 220, 221, 223], "1995": [74, 221, 239, 245], "1996": [212, 221, 237, 245, 271], "1997": [68, 94, 109, 221, 237], "1998": [221, 240], "1999": [61, 105, 221, 226, 243], "1_": 69, "1_0": 92, "1_1": 92, "1_2": 14, "1cm": 49, "1d": [168, 170, 183, 202, 252, 292], "1d0": 50, "1e": [14, 50, 69, 73, 105, 123, 161, 223, 245], "1e11": 109, "1e16": 69, "1e20": 69, "1e23": [109, 268], "1e3": 109, "1e5": 50, "1f1": 243, "1g": 50, "1j": [125, 217], "1kn": 117, "1m": 118, "1st": [27, 48, 61, 109, 125, 243, 244, 268, 295], "1st_exact": [4, 12, 243], "1st_exact_integr": 243, "1st_homogeneous_coeff": 243, "1st_homogeneous_coeff_best": 243, "1st_homogeneous_coeff_subs_dep_div_indep": 243, "1st_homogeneous_coeff_subs_dep_div_indep_integr": 243, "1st_homogeneous_coeff_subs_indep_div_dep": 243, "1st_homogeneous_coeff_subs_indep_div_dep_integr": 243, "1st_linear": 243, "1st_linear_constant_coeff_homogen": 244, "1st_linear_constant_coeff_integr": 244, "1st_linear_integr": 243, "1st_power_seri": 243, "1st_rational_riccati": 243, "1u": 110, "1x1": [108, 247], "1x3": 105, "2": [5, 7, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 111, 112, 113, 115, 117, 119, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 157, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 256, 258, 259, 260, 261, 262, 265, 266, 267, 268, 271, 273, 274, 275, 276, 277, 278, 280, 281, 291, 292, 294, 295, 297, 299, 300, 301, 304, 305, 306], "20": [4, 14, 16, 27, 35, 38, 46, 50, 58, 60, 61, 68, 69, 70, 73, 74, 77, 85, 86, 96, 105, 109, 117, 118, 119, 121, 125, 137, 197, 199, 212, 213, 216, 217, 221, 222, 223, 224, 226, 227, 233, 234, 235, 236, 239, 240, 243, 246, 247, 271, 295], "200": [70, 105, 109, 117, 123, 271], "2000": [50, 55, 96, 109, 221], "20000": 109, "20000000": [73, 223], "20000000000000": 16, "2000000000000002": 16, "2000061035": 16, "2001": [61, 109, 221], "2002": [72, 214, 221, 224], "2003": [50, 212, 221, 227, 240], "20033": 69, "2004": [69, 77, 221, 240], "2005": [51, 59, 96, 109, 223], "2006": [70, 236], "2007": [109, 158, 262], "200710": 12, "20071116100808": 70, "20078": 13, "2008": [55, 105, 212, 221, 223, 227], "2009": [74, 77, 109, 212, 223], "2010": [63, 244, 265], "2011": [53, 61, 94, 105, 109, 209, 236], "2012": 69, "2013": [71, 81, 105, 303], "2014": [7, 246, 247], "20140123": 96, "2015": [96, 136, 246], "20150716201437": 109, "2016": [7, 112, 113, 115, 291, 292], "20160": 216, "20160313023044": 265, "20160323033111": 240, "20160323033128": 240, "2017": [0, 7, 212], "20170202003812": [74, 109], "20171008094331": 61, "20180413004012": 109, "2020": [79, 171], "20200118141346": 96, "20200204081320": 247, "20200224064753": 53, "20200307091449": 301, "20200628222206": 247, "20200628222212": 247, "202008": 12, "20201021115213": 240, "20201128173312": 77, "20201230182007": 247, "20205690315959": 77, "20209": 13, "20210507012732": 74, "20210508104430": 247, "20210511015444": 86, "20210806201615": 239, "2022": 212, "20220207032113": 247, "20221029115428": 216, "2026366": 247, "202916782076162456022877024859": 109, "203": [58, 74, 216], "2048": [70, 109, 227], "205": [74, 94, 237], "2057": 72, "206": [218, 223], "20621": 13, "207": 240, "20759": 13, "20780": 13, "2079": 223, "208": [73, 223], "20833333333333e": 117, "208341": 109, "2084": 158, "2093": 96, "2097152": 223, "20conic": 271, "20e9": 118, "20kn": [117, 118], "20on": 271, "20point": 271, "20th": 214, "21": [4, 13, 55, 60, 69, 72, 74, 82, 83, 91, 105, 109, 111, 113, 117, 201, 213, 216, 218, 220, 221, 222, 224, 226, 227, 233, 243, 247, 248, 292, 305], "210": [12, 73, 74, 109, 216, 240], "211": [94, 109, 223, 237, 243], "2111": 111, "2112166839943": 109, "2112723729365330143": 77, "21147": 74, "21177": 12, "212": [70, 96, 221], "21245": 12, "21253": 12, "213": 105, "21306132": 50, "214": 197, "21402": 13, "21427": 13, "21441": 13, "21477639576571": 109, "21494": 13, "21496": 13, "21563": 13, "216": [105, 220], "2161": 240, "21626": 13, "217": [96, 221], "218332": 265, "21875": 96, "21938393439552": 77, "219383934395520": 77, "22": [4, 12, 16, 60, 69, 72, 73, 74, 77, 105, 109, 117, 118, 201, 221, 226, 239, 240, 245, 247], "220": [109, 223], "2204": 220, "2209": 127, "221": 243, "22140257085069": 91, "22169": 96, "222": 72, "22252": 96, "22285": 96, "223": 221, "224": [42, 195, 221], "22464679914735e": 14, "2247": 96, "225": [74, 109, 221], "22553956329232": 91, "225607735_dixon_result": 221, "226": 60, "227": 60, "22740742820168557599192443603787379946077222541710": 77, "22827": 74, "229": 109, "22906851": 11, "22925376": 259, "23": [4, 48, 60, 61, 69, 72, 75, 77, 83, 85, 105, 109, 117, 125, 201, 218, 220, 223, 226, 233, 240, 265], "230": [223, 245], "2307": 105, "231": [109, 202], "232": 77, "233": [109, 221, 243], "2331v2": 265, "234": 109, "234137346_on_a_multivariate_log": 247, "2345": 240, "23456789123456789": 69, "23456789123457": 69, "235": 74, "235625382192159": 165, "236": 109, "236237": 220, "237": [29, 221], "2376": 0, "238": [69, 109], "239": 69, "23903": 69, "24": [4, 11, 12, 32, 34, 35, 42, 48, 57, 61, 62, 69, 72, 74, 77, 83, 91, 96, 105, 109, 117, 118, 123, 125, 189, 199, 212, 218, 220, 222, 223, 224, 226, 229, 234, 240, 243, 247, 262, 265, 267, 281, 295, 301], "240": [221, 229, 274], "2400": 117, "242": 218, "243": [60, 77, 240, 245], "24310": 109, "2434931": 109, "244": [69, 220], "247": [218, 221, 245], "2478": 236, "24780825": 247, "248": 109, "2489": 109, "249": 221, "25": [4, 16, 27, 32, 35, 60, 61, 70, 72, 74, 77, 79, 82, 84, 100, 105, 108, 109, 113, 117, 118, 125, 131, 137, 206, 212, 216, 220, 222, 223, 226, 227, 233, 234, 236, 240, 242, 243, 244, 247, 259, 292], "250": [16, 109, 240], "2500": 117, "25000000000000000000": 16, "2507191691": 109, "251": 220, "2514261_algebraic_and_geometric_reasoning_using_dixon_result": 221, "25146": 199, "25165824": 259, "252": 12, "253": 61, "2531": 61, "25314": 61, "253140": 61, "255": 109, "256": [33, 50, 60, 109, 223, 227], "25645121643901801": 109, "257": [5, 109, 245], "2580": 109, "25882": 96, "259": 105, "25e": 118, "25x25": 216, "26": [4, 58, 69, 70, 72, 77, 81, 105, 109, 117, 118, 223, 240, 247], "2620": 77, "26390": 73, "264": [105, 245], "265": 223, "26629073187415": 68, "268": 74, "2690882": 105, "27": [4, 11, 33, 50, 51, 60, 64, 74, 79, 105, 109, 117, 118, 125, 127, 220, 223, 245], "270": [119, 121], "2700": [42, 117], "2702765": 74, "2709077133180915240135586837960864768806330782747": 109, "271130": 216, "271133": 216, "2715": 223, "272": [74, 223], "27261": 105, "2730": 74, "274": 74, "27433": 96, "2753": 70, "27720": 74, "278444111699106966687122": 35, "27844411169911": [35, 245], "27852": 96, "27879516692116952268509756941098324140300059345163": 77, "2788": 109, "279": 223, "2794155": 294, "27_number": 109, "27_theorem": 281, "27s_constant": 69, "27s_gcd_algorithm": 69, "27s_law": 236, "27s_method": 50, "27s_rule": 105, "27s_sampling_formula": 247, "27s_strongly_connected_components_algorithm": 265, "27s_theorem": [74, 246], "27s_totient_funct": [74, 109], "27s_z": 247, "27t": 99, "28": [4, 50, 60, 68, 72, 73, 77, 105, 109, 117, 144, 236, 240, 243, 300], "280": 74, "2809": 161, "281": 61, "282": 52, "28318530717959": 24, "28333333333333": 68, "284": [61, 109], "285": 245, "2857142857142857": 14, "286": 109, "28625": 74, "287": 109, "288037795340032417959588909060233922890": [4, 77], "288716": 262, "289": 245, "28902548222223624241": 73, "2899": 96, "28continu": 247, "28cryptosystem": 70, "28graph_theori": 265, "28group_theori": 60, "28information_theori": 247, "28mathemat": [22, 61, 69, 105, 235], "28mathematical_const": 69, "28mathematical_log": [44, 45], "28number": 69, "28number_theori": 58, "28order": 75, "28permutation_group_theori": 60, "28physic": 181, "28set_theori": 235, "28x": 109, "29": [4, 22, 42, 44, 45, 52, 58, 60, 61, 69, 70, 72, 74, 75, 82, 83, 105, 109, 125, 181, 217, 235, 247, 265], "290": [245, 274], "290764986058437": 77, "291": 69, "29128599706266": 73, "2912859970626635404072825905956005414986193682745": 73, "29136443417283": 77, "292": 109, "2922": [112, 113, 115, 291, 292], "29256885": 291, "2936": [112, 113, 115, 291, 292], "2943": 96, "2948": 246, "29541": 96, "29585191": 291, "296": 245, "297": [221, 223], "299792458": [163, 166, 196, 199], "29983226": 291, "29999999999999998890": 69, "2a": [29, 30, 211, 217, 247], "2bb46c0852bf74c9d74d1a12af6d11f69f7e8363": 221, "2c_and_li": 109, "2c_x_": 109, "2d": [2, 82, 83, 85, 117, 118, 119, 121, 170, 202, 213, 227, 240, 252, 299], "2d_1": 247, "2e": [30, 34, 69], "2f": [20, 292, 306], "2f1": 243, "2f_1": 220, "2f_log_x": 109, "2fs0025": 109, "2g": 36, "2h": 20, "2i": 69, "2j": [74, 220, 247], "2j_2": [74, 229], "2j_3": 212, "2k": [22, 69, 74, 94, 109, 240], "2l": 220, "2l_1": 212, "2l_2": 212, "2l_3": 212, "2m": 118, "2n": [61, 68, 74, 77, 96, 105, 121, 126, 155, 212, 230, 237], "2nd": [27, 48, 61, 70, 109, 125, 159, 243, 248, 265], "2nd_hypergeometr": 243, "2nd_hypergeometric_integr": 243, "2nd_linear_airi": 243, "2nd_linear_bessel": 243, "2nd_nonlinear_autonomous_conserv": 243, "2nd_nonlinear_autonomous_conserved_integr": 243, "2nd_power_series_ordinari": 243, "2nd_power_series_regular": 243, "2pq": [30, 32], "2q": 109, "2t": [27, 74], "2u": 27, "2x": [16, 32, 69, 77, 94, 109, 111, 239, 240, 246, 247, 294, 297, 305], "2x1": 161, "2x2": [101, 108, 161, 216, 243], "2x_": 240, "2xy": [220, 299], "2y": [27, 220, 240, 243, 246, 299], "2z": [30, 37, 77, 246, 247], "3": [0, 3, 5, 7, 11, 12, 13, 14, 16, 18, 20, 22, 23, 24, 29, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 45, 46, 47, 48, 50, 51, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 115, 117, 119, 121, 123, 125, 126, 127, 128, 130, 131, 132, 134, 137, 140, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 163, 165, 169, 171, 172, 173, 177, 181, 186, 187, 189, 191, 192, 195, 196, 198, 199, 201, 202, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 258, 259, 261, 262, 263, 265, 266, 267, 268, 271, 273, 274, 275, 276, 278, 280, 281, 288, 291, 292, 294, 295, 297, 299, 300, 301, 304, 305, 306], "30": [4, 14, 42, 48, 50, 55, 69, 70, 72, 73, 74, 77, 83, 85, 96, 105, 106, 109, 117, 118, 119, 142, 165, 201, 216, 218, 222, 223, 227, 233, 236, 239, 247, 248, 305], "300": [105, 109, 117, 208, 213, 224, 280], "3000": [85, 117], "300000": 199, "30000000000000000000": 69, "30030": 70, "301": [117, 237, 240, 291], "301369863013699": 105, "30247": 74, "303": [216, 240], "304": [221, 223], "305": 68, "30589": 105, "306": 70, "30625": 105, "307": 69, "30769105034035": 292, "308": 237, "309016994374947": 69, "3096": 247, "31": [11, 57, 69, 72, 73, 85, 109, 113, 201, 212, 223, 240, 291], "311": [69, 109], "312": [70, 202, 245, 271, 273], "3125": [85, 247], "31250": 117, "313": 206, "313552108895239": 38, "31413": 96, "31417": 73, "3144337": 223, "315": 245, "3152519739159347": 14, "317": 12, "3176591": 247, "317843553417859": 165, "318": [113, 292], "3192": 109, "3193": 96, "32": [11, 60, 72, 75, 77, 79, 96, 105, 109, 117, 123, 201, 221, 223, 224, 236, 237, 240, 247, 258], "320": 69, "321": 83, "322248": 68, "322255": 68, "323": [52, 77, 109], "3233": 70, "3239": 109, "324": [29, 109, 216, 221], "3243f6a8885a30": 109, "3248186011": 123, "325": 52, "3251": 105, "32555634906645": 77, "3257": 109, "3267000013": 109, "327": [72, 243], "3275": 223, "32767": 109, "32768": 227, "329": 243, "33": [50, 69, 72, 105, 113, 136, 165, 201, 216, 220, 224, 227, 247, 292], "330": 221, "33062": 109, "331": 91, "33102": 109, "3312": 265, "3321": 265, "33215": 109, "333": [72, 109], "3333": 96, "33333": [73, 96], "333333333333333": [73, 217, 239], "333333333333333314830": 69, "333333333333333333333": 69, "33333333333333333333333333333": 217, "335": 69, "3358": 96, "336": 42, "33768": 216, "33795": 96, "33984": 223, "33998": 96, "34": [16, 50, 61, 74, 82, 105, 109, 131, 174, 221, 226, 233, 239, 240], "3400000000000": 16, "341": [82, 109], "34105": 74, "3416277185114782": 35, "3418463277618": 165, "34211": 247, "342923500": 101, "343415678363698242195300815958": 77, "345": 61, "3456": 240, "346": 73, "34635637913639": 73, "34665576869e": 73, "34747534407696": 75, "34785": 96, "348": 105, "348645229818821": 165, "349745826211722": 29, "34985849706254": 91, "35": [60, 63, 72, 74, 82, 83, 96, 105, 109, 144, 216, 222, 227, 240, 243, 247], "350": [68, 137], "3506": 96, "352": [38, 223], "352471546": 29, "352471546031726": 29, "353": [72, 105], "354": [113, 292], "355": [73, 109, 221], "356": [96, 222, 245], "357947691": 91, "36": [12, 29, 52, 63, 70, 74, 85, 96, 105, 109, 118, 223, 227, 240, 243, 247, 281], "360": [119, 121], "3600": [42, 74], "3602879701896397": 69, "36188804005": 123, "362": 96, "3627": 127, "363": [79, 109, 221], "364": 79, "3674160": 60, "368": 212, "369": 70, "37": [58, 70, 74, 75, 79, 105, 109, 118, 212, 227, 240], "374": [113, 292], "37439874427164e": 292, "3744312326": [69, 74], "376": 221, "377": 109, "379": [109, 223], "379238": 109, "37933": 247, "38": [74, 85, 105, 109, 227, 240, 242, 247], "381": 109, "38177329": 266, "38177329068": 266, "3827": 109, "384": 72, "387": 72, "38954165": 247, "39": [74, 77, 109, 226], "390740740740741": [113, 292], "391": 246, "3923913114": 12, "39267e": 245, "3927": 96, "393": 240, "39439": 96, "39578": 216, "396": [73, 142], "397": 221, "397042": 109, "39764993382373624267": 74, "399": 239, "3a": [112, 292], "3af6dc1": 11, "3aintegr": 96, "3aissu": 96, "3aopen": 96, "3d": [2, 42, 53, 82, 83, 117, 170, 193, 208, 213, 275, 277, 278, 279, 280], "3e": 50, "3f_1": 220, "3i": 109, "3j": [77, 171, 212], "3j_2": [74, 229], "3kn": 117, "3m": 118, "3rd": [48, 61, 75, 109, 159, 223, 245, 248, 265], "3x": [30, 36, 69, 111, 220, 246, 297], "3x1": 105, "3x3": [20, 34, 84, 105, 216, 276], "3xy": 240, "3xyz": 111, "3y": 240, "3z": 246, "4": [2, 5, 11, 12, 14, 16, 18, 20, 22, 23, 24, 29, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 45, 46, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 91, 92, 94, 96, 98, 99, 100, 101, 102, 105, 106, 108, 109, 111, 113, 115, 117, 119, 121, 123, 125, 126, 127, 132, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 156, 157, 159, 160, 161, 164, 168, 171, 176, 186, 187, 189, 190, 191, 192, 193, 195, 202, 203, 206, 208, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 258, 259, 262, 265, 266, 267, 271, 274, 275, 276, 278, 280, 281, 291, 292, 294, 295, 297, 299, 300, 301, 305, 306], "40": [4, 38, 50, 72, 74, 77, 79, 86, 105, 109, 117, 213, 224, 226, 227, 247, 268, 294], "400": [117, 213, 223], "4000": [117, 118], "40000": 117, "4002723175": 247, "4013": 117, "40207856": 247, "40320": [11, 12], "404": 240, "4067977442463": [113, 292], "409": 247, "4096": 74, "4096000": 51, "41": [72, 79, 105, 109, 218, 240], "41152": 165, "4117304087953": 123, "41211849": 294, "412214747707527": 190, "41230258795639848808323405461146104203453483447240": 77, "413": 70, "414": 265, "4140": 74, "4142": 223, "414213562": 69, "4142135623730951": 38, "4142135623731": [22, 35, 227, 245], "414645": 223, "415": 72, "41577": 96, "41624341514535": 75, "417": [96, 239], "42": [36, 50, 58, 69, 72, 74, 82, 83, 85, 100, 102, 105, 107, 109, 216, 218, 220, 223, 240, 258], "420": [109, 240], "4200": 109, "423": 105, "42519758": 247, "42525": 74, "42658": 96, "429": [74, 227], "43": [64, 105, 109, 117, 118, 247, 305], "430": 265, "432": [38, 82, 222], "433": [113, 292], "434607": 38, "43466557686937456435688527675040625802564660517371780402481729089536555417949051890403879840079255169295922593080322634775209689623239873322471161642996440906533187938298969649928516003704476137795166849228875": 73, "43608": 96, "438990337475312": 29, "44": [14, 72, 74, 105, 109, 112, 113, 115, 236, 247, 291, 292], "4410317": 109, "4418": 127, "44224957030741": 224, "4423": 109, "4428829381583662470158809900606936986146216893757": 73, "44288293815837": 73, "4429": 73, "4433": 74, "444": 72, "445": [4, 221], "44542": 240, "44626032": 50, "44721": 96, "4472354033813751e": 123, "448": 42, "44918589": 291, "4493": 96, "45": [12, 49, 69, 74, 85, 105, 109, 121, 211, 223, 224, 240], "450": [11, 105], "4503599627370496": 14, "4504508011325967e": 123, "45136923488338": 77, "45279": 247, "4536": 109, "456": [4, 69, 221], "456457160755703e": 123, "4579": 224, "45896": 96, "4596": 69, "45960141378007": 91, "459697694131860": 24, "46": [105, 109, 117, 197, 226, 245, 247], "463": [51, 158], "4641": 91, "4641991": 109, "46699555e": 14, "46792545969349058": 245, "47": [74, 77, 105, 109, 127, 165, 197, 226], "4701": 247, "4701sum07": 247, "472": 247, "473": 61, "47450": [74, 109], "4753701529": 109, "47577": 123, "47757": 216, "478": 221, "479001599": 109, "48": [72, 79, 118, 240, 245, 247, 295], "4856615": 265, "4857018": 265, "4862": 74, "4869863": 109, "4877893607115270300540019e": 35, "488253406075340754500223503357": 77, "49": [73, 74, 109, 118, 220, 240], "490": [51, 61], "4915": 69, "49182424008069": 91, "49299": 240, "49315059": 266, "495": [117, 216], "49801566811835604271": [4, 77], "499948155": 61, "4a": 262, "4ac": [29, 30, 240], "4adc6a51d8371be5b0e4c7dff287fc70": 247, "4e": [16, 50, 245], "4i": 109, "4m": 118, "4th": [74, 75, 91, 105, 109, 159], "4x": [240, 246, 294], "4x1": [164, 247], "4x4": [34, 42, 84, 108, 164, 216, 247], "4xy": [208, 280], "4y": [32, 220, 246, 294], "4z": [30, 37, 246], "5": [5, 11, 12, 14, 16, 18, 22, 24, 29, 31, 33, 35, 38, 42, 44, 45, 46, 48, 50, 51, 52, 53, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 105, 106, 108, 109, 111, 113, 117, 119, 121, 123, 125, 127, 128, 131, 136, 137, 142, 144, 145, 149, 150, 151, 152, 154, 157, 161, 165, 186, 187, 190, 192, 199, 203, 206, 208, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 258, 259, 265, 266, 267, 271, 274, 276, 278, 280, 281, 291, 292, 294, 295, 297, 300, 301, 304, 305], "50": [36, 51, 60, 72, 73, 74, 77, 85, 105, 109, 117, 118, 165, 196, 223, 227, 236, 245, 295], "500": [51, 73, 137, 291], "5000": [73, 117], "50000": 109, "50000000000000": [69, 73], "500000000000000": 125, "50000000000000000000000000000": 73, "5000000000291665e": 123, "500006656595360": 127, "5020": 5, "50232379629182": 77, "503": 222, "504": [73, 221], "5040": [20, 74, 91, 223, 224], "504067061906928": 73, "50406706190692837199": 73, "505": 221, "50521": [74, 223], "50923695405127": 77, "50u": 110, "51": [48, 105, 109], "51041666666667e": 117, "5109": 96, "511": 74, "5112118495813": 195, "512": [60, 77], "5124": 223, "514": [51, 59, 221], "5140": 258, "5148378120533502e": 123, "515": 77, "5173168": 77, "52": [58, 74, 109, 117, 118, 212, 226, 240, 243, 265, 295], "5236": 96, "525": 85, "5253": 96, "5269": 74, "52818775009509558395695966887": 109, "53": [24, 70, 72, 105, 161, 215, 217, 218], "53087": 96, "530e": 161, "5394769": 109, "54": [69, 105, 118, 220, 226, 265], "5404319552844595": 69, "542": 60, "544": 212, "5459": 109, "55": [60, 72, 74, 105, 212, 213, 223, 240, 291], "55203744279187": 77, "55271367880050e": 48, "555": 72, "55556": 96, "558": 243, "55872552179222e": 29, "55998576005696": 161, "56": [38, 72, 74, 96, 109, 223], "560": 117, "561": [13, 109], "562": 11, "5648024145755525987042919132": 77, "567": 75, "57": [60, 105, 109, 247], "5706": 69, "5718": [48, 109, 240], "5728": 69, "574": 109, "57721566490153286060651209008240243104215933593992": 73, "577215664901533": 73, "5772157": 69, "577377951366403": 165, "5777": 109, "579": 74, "58": [70, 105, 253], "58602": 247, "5880": 74, "588469032184": 245, "59": [105, 243], "591382": 113, "5915587277": 109, "5917": 96, "5919532755215": 24, "5937424601": 91, "59375e": 117, "5992": 0, "5b7c3e8ee5b40332abdb206c": 301, "5c52": 109, "5e": 27, "5g": 50, "5kn": 117, "5m": [118, 262], "5th": [69, 159, 220, 222], "5x": [109, 240], "5x5": 70, "5y": 240, "6": [11, 12, 14, 16, 18, 20, 27, 29, 37, 38, 42, 44, 45, 48, 50, 51, 52, 53, 55, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 81, 82, 83, 84, 85, 91, 92, 94, 96, 98, 99, 101, 102, 105, 106, 108, 109, 111, 113, 117, 119, 121, 123, 125, 126, 127, 137, 144, 145, 149, 150, 151, 157, 161, 165, 171, 189, 201, 202, 211, 212, 213, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 229, 232, 233, 234, 235, 236, 239, 240, 243, 244, 245, 246, 247, 248, 258, 259, 262, 265, 266, 267, 271, 274, 276, 281, 291, 292, 295, 301, 305, 306], "60": [42, 55, 60, 62, 68, 69, 74, 77, 96, 105, 109, 117, 118, 216, 226, 227, 240, 243, 265], "6000": 69, "6004799503160655": 239, "600e": 69, "601": 292, "60123853010113e": 73, "609": 74, "609344": 199, "60986636": 291, "60e2": 69, "60n": 70, "60x60": 216, "61": [69, 70, 74, 85, 105, 109, 223, 229], "61051": 91, "6116978": 268, "6125": [105, 109], "617": 109, "6174190361677": 113, "618": 111, "61803398874989": 69, "6180885085e": 123, "61825902074169104140626429133247528291577794512415": 77, "62": [105, 220], "62349": 96, "625": [85, 281], "625146415202697": 77, "62963087839509e": 199, "63": [69, 72, 105], "630": 223, "631": 55, "63232916": 247, "634": 55, "6349839002": 234, "635": 73, "635564016364870": 75, "636": 70, "639985": [109, 220], "64": [8, 12, 54, 60, 69, 109, 158, 212, 226, 236, 245, 247, 258, 265, 268, 304], "6400": 117, "643": [72, 109], "6435": 74, "643501108793284": 75, "6449340668": 234, "64493406684823": 73, "645": 109, "6460": 109, "64613129282185e": 73, "64705": 247, "648": 247, "64872063859684": 91, "65": [109, 125, 220, 247, 291], "65092319930185633889": 77, "651354770181179": 165, "65215": 96, "6543612251060553497428174e": 35, "6545": 223, "65504": 50, "65536": [223, 226, 227], "65537": [109, 226], "6569866": 294, "657": 236, "658921776708929": 165, "659097795948": 195, "659936": 77, "66": [74, 105, 223, 227, 292], "660539060e": 199, "662": 105, "66317": 109, "6634255": 223, "6659": 246, "666": 72, "666666666666667": [117, 118], "66666666666667": [113, 292], "6666666666667": [291, 292], "668": 42, "67": [105, 220, 221], "670250533855183": 123, "6707": 105, "6711f12": 247, "6720": 223, "676": 240, "67721": 96, "6774": 265, "67884": 123, "67894": 50, "679": 118, "68": [72, 97, 105, 109, 216, 240], "6832579186": 247, "68437": 123, "686": 262, "6868680200532414": [4, 12], "687": 29, "6875": 117, "68812842": 291, "6881721793": 234, "689": [96, 118], "69": [60, 105, 216, 245, 262], "691": 74, "6931396564": 234, "693147180559945": 111, "6931471805599453094172321215": 234, "6931471806": 234, "693147255559946": 73, "69629": 223, "6963328": 247, "6988699669998001": 109, "699": 48, "6j": [171, 212], "6k": 74, "6th": [53, 109], "6x": [69, 220], "6x6": 70, "6z": [30, 37], "7": [4, 11, 12, 14, 16, 22, 24, 27, 29, 32, 36, 42, 44, 45, 48, 50, 53, 55, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 72, 73, 74, 75, 77, 79, 82, 83, 84, 85, 91, 94, 96, 99, 101, 102, 105, 109, 111, 117, 119, 123, 125, 144, 151, 154, 155, 159, 192, 197, 199, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 229, 230, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 252, 253, 258, 259, 262, 265, 266, 271, 281, 291, 292, 295, 300, 301, 304], "70": [69, 70, 86, 96, 105, 109, 226, 227, 240, 247, 268], "700000000000000": 247, "701": 195, "7042848373025861": 123, "7048138294": 234, "706": [48, 105], "7060005655815754299976961394452809": 109, "7063": 96, "70710678118654752440084436210484903928483593768847": 295, "707106781186548": [75, 295], "70711": 96, "71": [11, 60, 85, 105, 109, 195], "71109": 96, "712": [27, 96], "712328767123288": 105, "712524808": 69, "71318": 223, "7143": 247, "715": [171, 212, 227], "717": [113, 292], "71827974413517": 91, "718281828": 69, "718281828459045235360287d0": 227, "7182818284590452d0": 227, "718281828459045j": 73, "71828182845905": 91, "7182818285": 234, "718281835": 109, "72": [48, 52, 69, 82, 105, 109, 117, 212, 226, 240], "720": [11, 12, 229, 243, 265], "721": 221, "72463": 96, "729": 220, "73": [60, 68, 69, 82, 109, 243], "730": 96, "730061685774": 245, "73071763923152794095062": 77, "732": 223, "73205080756887729352744634151": 223, "73205080756888": 223, "7357232": 12, "73908513321516": 35, "73908513321516064165531208767387340401341175890076": 245, "739085133215161": [30, 35, 37, 38, 245], "74": [60, 74, 109, 125], "74126166983329d": 50, "744": 218, "74720545502474": 77, "75": [69, 72, 216, 247, 271, 291], "750": 74, "7523": 246, "754": 69, "7568025": 294, "7598d94": 11, "76": [74, 77, 105, 109, 220, 223], "760939574180767": 77, "761": 74, "7635": 77, "764": 77, "7648844336": 29, "764884433600585": 29, "7649": 69, "765": [38, 223], "7655283165378005676": 77, "766": 50, "767": 72, "77": [9, 58, 74, 77, 105, 109, 226, 227, 260], "771561": 91, "7717": 0, "77245385090552": [38, 295], "7746": 96, "7751": 96, "777": [63, 72], "778": 63, "779": 63, "78": [11, 60, 83, 105, 109, 118, 197, 243, 247], "7845": 96, "7854": 96, "787338754623378": 113, "789": [69, 109], "79": [60, 61, 118], "79115232": 247, "7936": [74, 223], "797": 70, "79798269973507": 113, "799333555511111": 109, "7_f64": 227, "7abb76ffed50425299b9065129ae87261668a0f7": 246, "7fa63b1": 11, "7o38": 212, "7y": 240, "8": [4, 11, 12, 14, 20, 27, 29, 35, 40, 42, 43, 48, 50, 53, 60, 61, 62, 65, 67, 69, 70, 72, 73, 74, 75, 77, 79, 82, 83, 85, 91, 94, 96, 98, 99, 101, 102, 105, 106, 108, 109, 111, 113, 117, 121, 123, 125, 127, 144, 159, 164, 165, 176, 212, 213, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 229, 230, 233, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 252, 258, 260, 262, 265, 271, 274, 275, 281, 291, 292, 294, 295, 299, 301, 305], "80": [3, 4, 8, 12, 16, 24, 48, 60, 69, 72, 96, 105, 109, 117, 118, 123, 216, 223, 226, 243, 247, 263, 265, 291], "8000": [8, 117], "800205": 218, "803206": 109, "805": 223, "806342": 218, "809": 96, "809709509409109": 109, "81": [60, 74, 79, 105, 109, 142, 144, 145, 212, 216, 226, 291, 292], "8100": 247, "814": [113, 292], "816477005968898": 165, "817106179880225": 292, "818": 197, "81879421395609": 77, "82": [60, 96, 105, 247], "82211796209193": 91, "823": 70, "825": 113, "827230": 60, "827273": 60, "82842712474619": 294, "82842712475": 299, "828770759094287e": 123, "83": [60, 226], "831": 109, "83333": 96, "83403519": 247, "83711": 74, "8375": 96, "8392867552141611326": 69, "84": [69, 73, 109], "84092844": 110, "8411998": 110, "84119981": 110, "84147096": 110, "84147098": [110, 266, 294], "8414709848078965": [14, 266], "841470984807896506652502321630": 14, "844291913708725": 123, "846749014511809332450147": 74, "85": [58, 73, 74, 105, 109, 144, 190, 212, 247], "850908514477849": 165, "854500743565858": 123, "85768055": 247, "85819627": 247, "86": [61, 105, 158, 226, 236], "861136": 223, "86113631159405258": 223, "86114": 96, "861246379582118": 123, "86400": 199, "86458333333333e": 117, "865": 223, "865474033102": 50, "865474033111": 50, "865477135298": 50, "86602": 96, "8660254j": 123, "867263818209": 50, "869604401089358618834491d0": 227, "87": [60, 75, 105, 109], "87174": 96, "8724366472624298171": 77, "873": [27, 109], "87636": 223, "877": 74, "88": [69, 105, 109, 291], "884": 240, "886": [113, 292], "88679245283019": 161, "888": 72, "888888877777777": 109, "88889": 96, "89": [60, 67, 96], "891": 109, "8a975c1405bd35c65993abf5a4edb667c1db": 109, "8am": 70, "8kn": 118, "8m": 240, "8xy": 220, "9": [4, 11, 12, 14, 18, 27, 36, 38, 40, 48, 50, 57, 59, 60, 61, 65, 67, 68, 69, 70, 72, 74, 75, 77, 78, 79, 82, 83, 85, 91, 94, 96, 100, 101, 102, 105, 106, 108, 109, 111, 117, 119, 123, 125, 126, 127, 128, 131, 142, 144, 145, 147, 153, 159, 161, 165, 197, 212, 213, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 233, 235, 236, 237, 239, 240, 243, 245, 246, 247, 248, 258, 262, 265, 271, 274, 291, 292, 299, 301, 306], "90": [48, 60, 67, 77, 105, 111, 117, 121, 129, 142, 160, 227, 229, 239, 247, 260], "900": 42, "90047": 265, "90097": 96, "903": 117, "90300": 117, "906425478894557": 18, "90642547889456": 18, "9071": 109, "90929743": [266, 294], "909449841483": 77, "909672693737": 50, "91": [16, 51, 221, 226, 233, 247], "9121071": 291, "912285": [109, 220], "914148152112161": 109, "91596559": 69, "9179": 109, "92": [82, 221, 243, 247, 265, 292], "920": 240, "9215": 220, "921_": 69, "92242131492155809316615998938": 77, "926093295503462": 165, "92753330865999": 161, "93": [60, 221], "932": 236, "9330": 74, "93669377311689": [113, 292], "9369318": 240, "93accumulate_oper": 24, "93add": 24, "93berkowitz_algorithm": 216, "93euler_equ": 243, "93gauss_quadratur": 96, "93hadamard_transform": 72, "93jacobi_pseudoprim": 109, "93jacobi_quadratur": 96, "93johnson": 265, "93lagrange_equ": 48, "93laguerre_quadratur": 96, "93lenstra": 216, "93lobatto_rul": 96, "93lov": 216, "93mascheroni_const": 69, "93rabin_primality_test": 109, "93ruffini_theorem": 223, "93schmidt_process": 105, "93simon_distribut": 247, "93trotter_algorithm": 265, "93tukey_fft_algorithm": 72, "93zero_plot": 123, "94": [127, 221], "9405": 220, "9412172": 247, "9424": 109, "943396226415094": [113, 292], "9436": 136, "945": [218, 224], "9487171": 91, "9496": 77, "94991743": 247, "95": [50, 67, 109, 220, 227, 240, 243, 245, 260, 292], "951": 73, "951056516295154": 69, "954": 109, "956": 73, "9562288417661": 73, "95678796130331164628399634646042209010610577945815": 73, "95892427": 294, "96": [105, 247], "9603": 220, "96593": 96, "967": 96, "96716083": 247, "9696": 246, "97": [60, 69, 70, 109, 220], "971843958291041": 165, "9780470316887": 247, "97851": 96, "98": [60, 70, 145, 158, 223, 243], "9801": 73, "9804659461513846513": 109, "981": 96, "98101184": 50, "982": 158, "983": 96, "983697455232980674869851942390639915940": 74, "9855e": 96, "986": 240, "987": 109, "989": 109, "9891e30": 195, "98935825": 294, "98991349867535": [113, 292], "99": [8, 50, 69, 70, 105, 109, 125, 220, 221], "9900": 74, "99009901": 109, "9904": 96, "991": 109, "991052601328069": 77, "9927": 96, "995": [113, 292], "995322265018952734162069256367": 77, "9964469100598874": 292, "99862803482534211706798214808651328230664709384460955058223172535940812848111745": 73, "999": [69, 73], "9999": 256, "9999999799999999": 123, "999999984582742099719981147840": 77, "9999999999999999": 14, "99999999999999991611392": 268, "99999999999999999999": 69, "9j": [171, 212], "9th": [74, 109], "9x": 246, "9y": [30, 36], "9z": 246, "A": [0, 2, 3, 4, 5, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 91, 92, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 111, 112, 113, 115, 117, 118, 119, 121, 123, 125, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 143, 146, 147, 152, 153, 154, 157, 158, 159, 160, 161, 164, 166, 169, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 265, 266, 271, 273, 275, 276, 277, 278, 280, 281, 288, 291, 296, 298, 300, 301, 305], "AND": [72, 99], "And": [3, 11, 12, 13, 14, 23, 24, 31, 44, 60, 61, 68, 69, 70, 77, 94, 99, 105, 108, 134, 164, 211, 213, 215, 223, 224, 227, 235, 239, 240, 245, 246, 247, 265, 266, 276, 305], "As": [4, 13, 14, 19, 20, 23, 24, 29, 34, 35, 36, 41, 50, 60, 61, 69, 70, 73, 74, 75, 77, 93, 94, 99, 105, 108, 109, 111, 112, 115, 131, 134, 138, 140, 142, 144, 145, 146, 153, 156, 157, 192, 197, 210, 214, 215, 217, 218, 220, 223, 224, 226, 227, 234, 235, 237, 243, 246, 247, 265, 266, 275, 276, 292, 294, 295, 297, 299, 300, 301, 304, 305], "At": [2, 12, 22, 24, 33, 48, 65, 75, 77, 96, 109, 117, 118, 129, 197, 201, 211, 216, 222, 237, 266], "BE": [0, 12], "BY": 240, "Be": [3, 4, 8, 24, 48, 69, 99, 105, 220, 243, 246, 254, 266], "Being": [3, 65, 79, 85, 217], "But": [2, 3, 5, 7, 12, 13, 14, 15, 16, 24, 29, 38, 68, 69, 74, 77, 83, 93, 105, 109, 180, 181, 192, 197, 202, 214, 215, 220, 224, 234, 236, 237, 239, 240, 243, 245, 246, 252, 262, 265, 266, 274, 295, 297, 299, 300, 305], "By": [2, 14, 16, 22, 24, 29, 33, 34, 36, 42, 43, 45, 50, 59, 68, 69, 71, 73, 74, 77, 83, 84, 88, 92, 94, 99, 105, 108, 109, 110, 111, 115, 117, 118, 123, 131, 187, 192, 213, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 229, 234, 236, 239, 240, 243, 245, 246, 247, 251, 253, 254, 258, 261, 265, 266, 278, 294, 299, 300, 305], "For": [1, 2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 19, 22, 23, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 65, 68, 69, 70, 71, 72, 73, 74, 75, 77, 81, 83, 84, 87, 90, 92, 93, 94, 98, 99, 105, 109, 110, 111, 113, 115, 117, 118, 119, 121, 125, 127, 131, 132, 134, 135, 136, 140, 142, 146, 152, 153, 154, 155, 156, 157, 159, 161, 175, 176, 181, 185, 187, 189, 190, 191, 192, 194, 196, 197, 198, 201, 202, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 242, 243, 245, 246, 247, 248, 251, 252, 253, 254, 258, 259, 260, 262, 263, 265, 266, 269, 271, 273, 276, 278, 280, 281, 291, 292, 294, 295, 297, 300, 301, 305, 306], "ITE": [75, 99, 227], "If": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 58, 60, 61, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 91, 92, 94, 96, 97, 98, 99, 101, 105, 106, 108, 109, 110, 111, 112, 113, 115, 117, 123, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 143, 154, 155, 156, 157, 159, 160, 165, 169, 173, 176, 182, 186, 187, 188, 189, 190, 192, 196, 200, 201, 202, 203, 204, 206, 207, 208, 211, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 263, 265, 266, 268, 271, 274, 276, 278, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "In": [2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 22, 23, 24, 29, 33, 38, 40, 46, 48, 49, 50, 51, 52, 53, 55, 58, 59, 60, 61, 68, 69, 70, 71, 73, 74, 75, 77, 82, 84, 85, 86, 87, 94, 96, 97, 98, 99, 101, 105, 106, 109, 111, 115, 116, 117, 118, 121, 125, 129, 130, 134, 135, 137, 140, 142, 145, 146, 147, 152, 153, 154, 155, 156, 157, 159, 160, 178, 180, 181, 182, 187, 191, 192, 195, 196, 197, 201, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 234, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 248, 249, 251, 253, 256, 258, 260, 262, 263, 265, 266, 271, 275, 276, 278, 280, 291, 292, 294, 297, 298, 299, 300, 301, 304, 305, 306], "It": [0, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 29, 32, 33, 35, 36, 37, 40, 42, 43, 44, 45, 48, 49, 50, 57, 60, 61, 63, 64, 65, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 81, 85, 86, 92, 94, 96, 98, 99, 105, 109, 110, 111, 113, 115, 116, 117, 118, 119, 121, 123, 125, 127, 129, 130, 131, 132, 134, 135, 138, 140, 141, 142, 144, 150, 152, 153, 154, 155, 157, 159, 161, 165, 166, 176, 181, 182, 187, 188, 189, 190, 191, 192, 194, 197, 200, 202, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 227, 230, 234, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 258, 259, 260, 261, 262, 263, 266, 271, 274, 275, 276, 278, 280, 281, 292, 294, 295, 297, 298, 299, 300, 301, 303, 304, 305], "Its": [69, 75, 85, 131, 159, 190, 216, 220, 227, 235, 291], "NO": [36, 192], "NOT": [13, 14, 27, 99, 125, 172, 176, 191, 194, 256, 259], "No": [2, 4, 5, 11, 16, 38, 49, 69, 77, 84, 99, 109, 117, 126, 142, 187, 213, 216, 223, 229, 230, 239, 240, 245, 246, 247, 252, 256, 262, 263, 265, 292, 294, 306], "Not": [13, 15, 23, 24, 34, 69, 74, 99, 125, 227, 246, 247, 265, 299, 306], "OF": 262, "ONE": 227, "OR": [15, 48, 72, 99, 220], "Of": [12, 20, 22, 29, 68, 94, 105, 243, 246, 265, 305], "On": [8, 11, 13, 14, 22, 45, 55, 62, 69, 71, 77, 96, 99, 109, 117, 142, 196, 197, 208, 217, 218, 220, 221, 222, 223, 243, 245, 262, 266, 278, 280], "One": [11, 14, 15, 16, 19, 22, 24, 48, 49, 50, 59, 61, 68, 69, 74, 75, 77, 88, 91, 93, 94, 96, 99, 105, 109, 111, 117, 118, 140, 142, 157, 159, 168, 197, 201, 218, 220, 221, 223, 226, 229, 235, 239, 242, 245, 246, 247, 248, 253, 266, 278, 294, 295, 297, 300, 301, 305], "Or": [5, 8, 12, 13, 14, 16, 23, 31, 33, 60, 69, 70, 71, 77, 94, 99, 109, 137, 214, 224, 226, 227, 239, 246, 247, 258, 266, 278, 300, 303], "Ore": 92, "Such": [3, 4, 12, 22, 50, 69, 85, 146, 214, 215, 222, 228, 236, 237, 239, 294, 300], "That": [0, 3, 5, 11, 12, 14, 15, 16, 22, 23, 24, 69, 70, 75, 99, 105, 109, 152, 189, 194, 200, 210, 211, 214, 215, 217, 218, 220, 222, 233, 234, 243, 247, 259, 260, 266, 294, 297, 300, 305], "The": [0, 2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 18, 20, 21, 23, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 52, 53, 55, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 160, 161, 163, 164, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 263, 265, 266, 268, 271, 273, 274, 275, 276, 279, 280, 281, 288, 291, 292, 294, 295, 297, 298, 300, 301, 302, 303, 304, 305, 306], "Their": [4, 69, 77, 94, 212, 213, 217, 220, 237, 292], "Then": [8, 9, 11, 12, 14, 15, 20, 22, 60, 65, 68, 69, 94, 98, 105, 109, 132, 135, 149, 151, 152, 157, 161, 189, 197, 210, 214, 215, 217, 220, 222, 224, 227, 234, 237, 239, 240, 243, 245, 266, 292], "There": [2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 19, 22, 23, 24, 26, 29, 32, 33, 37, 50, 51, 55, 60, 61, 62, 63, 66, 68, 69, 70, 73, 74, 77, 93, 94, 96, 97, 98, 99, 101, 105, 109, 115, 117, 118, 121, 125, 129, 140, 152, 154, 156, 157, 165, 182, 187, 202, 207, 210, 211, 213, 217, 218, 219, 220, 222, 223, 224, 227, 228, 229, 235, 236, 237, 239, 240, 243, 245, 246, 247, 249, 252, 261, 262, 265, 266, 268, 276, 291, 292, 294, 295, 297, 299, 300, 304, 305], "These": [0, 2, 4, 5, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 38, 39, 41, 49, 50, 60, 68, 69, 70, 71, 77, 94, 96, 99, 105, 109, 111, 112, 113, 115, 116, 118, 125, 130, 134, 135, 136, 138, 140, 141, 144, 146, 150, 156, 159, 182, 187, 188, 196, 202, 203, 208, 210, 211, 214, 215, 216, 217, 218, 220, 223, 227, 237, 240, 243, 244, 246, 247, 249, 254, 258, 259, 260, 265, 278, 291, 292, 295, 298, 301, 304, 305], "To": [0, 1, 2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 20, 23, 24, 27, 31, 32, 33, 35, 36, 37, 38, 40, 41, 44, 45, 48, 49, 50, 51, 59, 60, 61, 65, 68, 69, 70, 71, 73, 74, 75, 76, 77, 82, 92, 94, 96, 98, 99, 101, 105, 109, 111, 113, 115, 117, 118, 123, 125, 126, 128, 130, 131, 134, 135, 138, 140, 141, 145, 155, 156, 157, 159, 169, 173, 186, 195, 197, 201, 208, 211, 213, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 234, 235, 237, 240, 243, 244, 245, 246, 247, 248, 251, 252, 256, 258, 259, 262, 263, 265, 266, 271, 273, 275, 276, 278, 280, 281, 291, 292, 294, 295, 297, 298, 300, 301, 304, 305, 306], "WILL": 12, "Will": [50, 105, 222, 227, 258], "With": [3, 13, 16, 23, 27, 40, 50, 52, 68, 69, 73, 94, 109, 140, 145, 146, 147, 153, 155, 156, 165, 189, 192, 211, 213, 214, 215, 216, 217, 218, 225, 226, 227, 234, 239, 248, 265, 291, 292, 299, 300], "_": [3, 4, 5, 13, 14, 16, 18, 20, 24, 27, 44, 45, 49, 57, 58, 60, 61, 62, 65, 68, 69, 70, 71, 72, 73, 74, 75, 77, 80, 82, 83, 84, 85, 94, 96, 99, 100, 101, 102, 105, 107, 109, 111, 125, 154, 157, 159, 171, 192, 197, 201, 207, 210, 212, 216, 218, 222, 223, 226, 227, 228, 230, 234, 235, 236, 237, 239, 240, 243, 244, 245, 248, 249, 265, 274, 276, 292, 304], "_0": [69, 74, 94, 105, 223, 266, 291], "_1": [77, 105, 134, 141, 202, 212, 237, 266], "_1cm": 49, "_1f_1": 77, "_2": [36, 105, 134, 141, 201, 202, 212, 243], "_2cm": 49, "_2f_1": 305, "_3": [202, 212], "_3mm": 49, "_5": [52, 214], "__": [16, 77, 96, 227, 247, 252], "__1": 77, "___": [68, 73, 96, 97, 105, 215, 239, 247, 252, 265, 304], "____": [68, 73, 96, 164, 215, 228, 247, 265, 306], "_____": [68, 247], "______": 252, "________": [228, 247, 265], "__________": [50, 215], "___________": [73, 118, 243], "____________": 118, "_____________": 118, "_______________": 118, "________________": [118, 243], "_________________": [12, 118], "__________________": 243, "_____________________": 118, "______________________": 118, "_______________________": 118, "________________________": 118, "______________________________": 247, "________________________________": 118, "_____________________________________": 118, "______________________________________________": 118, "_______________________________________________": 118, "____________________________________________________": 118, "_______________________________________________________": 213, "_____________________________________________________________________________________________________": 12, "_____________________o_______________________": 118, "_______________v": 118, "____________o________________________": 118, "_______i_______": 118, "__abs__": [105, 218], "__add__": [105, 218, 222], "__all__": 261, "__bool__": 69, "__builtins__": 16, "__cacheit": 69, "__call__": [50, 61, 69, 222], "__class__": [138, 266], "__cmp__": [169, 173, 192], "__contains__": 60, "__divmod__": 218, "__doc__": [4, 16], "__file__": 16, "__floordiv__": 218, "__future__": [16, 20, 297, 304], "__getitem__": [13, 69, 105, 216, 252], "__globals__": 266, "__index__": 268, "__init__": [3, 4, 24, 69, 135, 136, 222, 271, 273, 291, 292, 300], "__init_subclass__": [13, 22], "__iter__": [13, 61, 69, 239], "__len__": 105, "__main__": [16, 50, 301], "__mod__": [218, 222], "__mul__": [54, 60, 105, 218, 222], "__name__": [16, 227], "__neg__": 218, "__new__": [14, 22, 24, 50, 60, 69, 300], "__package__": 16, "__pos__": 218, "__pow__": [13, 105, 218, 224], "__repr__": [13, 227], "__rmul__": 105, "__setitem__": 213, "__sub__": 218, "__truediv__": [69, 218], "__weakref__": [60, 104, 105], "_a": [65, 77, 192, 223, 291], "_add": [214, 233], "_aesara": 227, "_af_par": 61, "_af_rmul": 65, "_all_": 216, "_all_root": 223, "_amv": 223, "_appli": 214, "_apply_operators_qubit": 176, "_arg": [69, 75], "_array_form": 61, "_as_integr": 96, "_ask": 22, "_assume_rul": 22, "_assumpt": [22, 69], "_assumptions_orig": 69, "_b": [65, 77, 192], "_backend": 13, "_base_ord": 67, "_basic": 258, "_basic_orbit": 60, "_best": 243, "_build": [4, 8, 26], "_c": 192, "_ccode": [24, 227], "_check_anteced": 94, "_check_antecedents_1": 94, "_check_antecedents_invers": 94, "_check_cycles_alt_sym": [60, 67], "_clash": [41, 69], "_clash1": [41, 69], "_clash2": [41, 69], "_cmp_perm_list": 66, "_coeffexpvalueerror": 94, "_collapse_extra": 96, "_complexes_index": 223, "_complexes_sort": 223, "_components_data_full_destroi": 13, "_compos": 214, "_compute_transform": 96, "_condsimp": 94, "_construct_": 50, "_contain": 214, "_contains_elem": 214, "_contains_id": 214, "_convert_poly_rat_alg": [88, 90], "_coset_repres": 60, "_count_root": 223, "_create_lookup_t": [90, 94], "_create_t": [88, 90], "_csrtodok": 108, "_cxxcode": [24, 227], "_d": [192, 291], "_default_set": 227, "_dfm": 216, "_dict": 240, "_diff_wrt": 69, "_distinct_primes_lemma": 60, "_distribute_gens_by_bas": 67, "_doktocsr": 108, "_dummi": 94, "_dummy_": 94, "_dummy_10": 69, "_dummy_fmt": 13, "_ecm_one_factor": 109, "_ensure_complexes_init": 223, "_ensure_reals_init": 223, "_enumerate_st": 187, "_eval_": 15, "_eval_adjoint": 190, "_eval_as_leading_term": 69, "_eval_cond": 94, "_eval_deriv": [15, 24, 69, 77], "_eval_eq": 69, "_eval_evalf": [24, 223], "_eval_expand_": 24, "_eval_expand_bas": 69, "_eval_expand_complex": 69, "_eval_expand_doubl": 69, "_eval_expand_func": 14, "_eval_expand_hint": 69, "_eval_expand_trig": 24, "_eval_i": 22, "_eval_integr": [75, 96], "_eval_is_": 22, "_eval_is_algebra": 22, "_eval_is_alt_sym_monte_carlo": 60, "_eval_is_alt_sym_na": 60, "_eval_is_eq": 69, "_eval_is_finit": 22, "_eval_is_g": 69, "_eval_is_imaginari": 223, "_eval_is_integ": [14, 22], "_eval_is_nonneg": 24, "_eval_is_posit": [14, 24], "_eval_is_r": [22, 24, 223], "_eval_is_zero": [22, 24], "_eval_nseri": 69, "_eval_rewrit": [24, 69], "_eval_rewrite_as_": 69, "_eval_rewrite_as_co": 69, "_expand": 5, "_expon": 94, "_fcode": 227, "_field": 50, "_find_reasonable_pivot": 105, "_find_splitting_point": 94, "_first": [69, 75], "_flint": [216, 217], "_flip_g": 94, "_fourier_transform": 96, "_fun": 224, "_function": 94, "_g": 70, "_gcd_term": 69, "_generate_coordin": 134, "_generate_spe": 134, "_get_coeff_exp": 94, "_get_complex": 223, "_get_complexes_sqf": 223, "_get_interv": 223, "_get_ordered_dummi": 192, "_get_real": 223, "_get_reals_sqf": 223, "_get_root": 223, "_greek": 16, "_guess_expans": 94, "_h": [60, 246], "_handle_integr": 243, "_handle_precomputed_bsg": 67, "_hull": 86, "_i": [12, 96, 192, 197, 224], "_ignor": 223, "_imag": 214, "_img": 214, "_imp_": [259, 266], "_in_terms_of_gener": 214, "_indexed_root": 223, "_inflate_fox_h": 94, "_inflate_g": 94, "_int0oo": 94, "_int0oo_1": 94, "_int_invers": 94, "_integr": [36, 243, 244], "_intersect": 214, "_invers": 70, "_is_analyt": 94, "_is_class": 246, "_is_exponenti": 246, "_is_logarithm": 246, "_is_zero_after_expand_mul": 105, "_iszero": [105, 301], "_iter": 265, "_j": [192, 197, 212, 229], "_javascript": 227, "_julia": 227, "_k": [74, 77, 96, 212, 222, 247], "_k_kqdot": 144, "_ker": 214, "_kernel": 214, "_l": 212, "_lambdacod": 227, "_lambdifygener": 266, "_latex": [24, 227], "_latin": 16, "_linear_2eq_order1_type6": 243, "_linear_2eq_order1_type7": 243, "_list": 109, "_m": [24, 77, 113], "_mapl": 227, "_mathml_cont": 227, "_mathml_present": 227, "_mcode": 227, "_meijerint_definite_2": 94, "_meijerint_definite_3": 94, "_meijerint_definite_4": 94, "_meijerint_indefinite_1": 94, "_minpoly_compos": 222, "_modgcd_multivariate_p": 220, "_module_quoti": 214, "_mpc_": 217, "_mpf_": [69, 217], "_mul": 233, "_mul_arg": 94, "_mul_as_two_part": 94, "_mul_scalar": 214, "_mult_tab": 222, "_my_principal_branch": 94, "_mytyp": 94, "_n": [24, 70, 74, 77, 96, 223, 237, 246], "_naive_list_centr": 66, "_name": 96, "_new": 223, "_nocheck": 84, "_node": 69, "_nonlinear_2eq_order1_type1": 243, "_nonlinear_2eq_order1_type2": 243, "_nonlinear_2eq_order1_type3": 243, "_nonlinear_2eq_order1_type4": 243, "_nonlinear_2eq_order1_type5": 243, "_nonlinear_3eq_order1_type1": 243, "_nonlinear_3eq_order1_type2": 243, "_nonlinear_3eq_order1_type3": 243, "_nonlinear_3eq_order1_type4": 243, "_nonlinear_3eq_order1_type5": 243, "_nth": 224, "_octav": 227, "_only_": 223, "_operators_to_st": 182, "_orbits_transversals_from_bsg": 67, "_order": 59, "_orient_fram": 134, "_p": [70, 192, 218, 220, 222, 234, 237, 245], "_p_0": 192, "_p_1": 192, "_p_elements_group": 60, "_partial_pivot": 216, "_pf_q": [77, 237, 243, 305], "_pg": 223, "_postprocess_root": 223, "_prec": 69, "_preprocess": 244, "_preprocess_root": 223, "_pretti": 227, "_print": [24, 227], "_print_": 227, "_print_atom": 227, "_print_bas": 227, "_print_deriv": 227, "_print_hyp": 227, "_print_meijerg": 227, "_print_numb": 227, "_print_rat": 227, "_process_seri": 213, "_product": 214, "_q": 192, "_quotient": 214, "_quotient_codomain": 214, "_quotient_domain": 214, "_r": [69, 192, 237, 246], "_randint": [13, 69, 220], "_random_gen": 60, "_random_pr_init": 60, "_random_prec": 60, "_random_prec_n": 60, "_randrang": [13, 69, 70], "_rang": 262, "_raw": 225, "_rcode": 227, "_real_root": 223, "_reals_index": 223, "_reals_sort": 223, "_recur": 91, "_refine_complex": 223, "_remove_gen": 67, "_repres": 187, "_represent_foobasi": 187, "_represent_szop": 187, "_represent_zg": 177, "_reset": [109, 223], "_restrict_codomain": 214, "_restrict_domain": 214, "_rewrit": 5, "_rewrite1": [88, 94], "_rewrite2": 94, "_rewrite_invers": 94, "_rewrite_saxena": 94, "_rewrite_saxena_1": 94, "_rewrite_singl": 94, "_root": 224, "_roots_trivi": 223, "_rust_cod": 227, "_sage_": 2, "_seri": [213, 224], "_set": 247, "_set_angular_veloc": 134, "_set_interv": 223, "_set_linear_veloc": 134, "_signsimp": 223, "_simplifi": 105, "_sizedinttyp": 50, "_slope": 79, "_smtlib": 227, "_solve_ab": 246, "_solve_as_poli": 246, "_solve_as_poly_complex": 246, "_solve_as_poly_r": 246, "_solve_as_r": 246, "_solve_class": 246, "_solve_expo": 246, "_solve_exponenti": 246, "_solve_lin_si": 225, "_solve_lin_sys_compon": 225, "_solve_logarithm": 246, "_solve_rad": 246, "_solve_real_trig": 246, "_solve_system": 246, "_solve_using_known_valu": 246, "_some_": 216, "_sort_variable_count": 69, "_sparse_": 228, "_split_mul": 94, "_state_to_oper": 182, "_str": 201, "_strip": [60, 67], "_strong_gens_from_distr": 67, "_succ": 60, "_sylow_alt_sym": 60, "_sympifi": [13, 14, 69, 101, 300], "_sympy_": [13, 14, 69], "_sympyrepr": 227, "_sympystr": 227, "_syzygi": 214, "_t": [77, 96, 142, 159, 192, 201, 202, 206, 237, 247, 291, 292], "_tan": 224, "_tan1": 224, "_tensormanag": 253, "_test": 258, "_token_splitt": 111, "_tr56": 236, "_transolv": 246, "_try_heurisch": 96, "_tsolv": 246, "_tupl": 109, "_type": 216, "_u": [96, 192], "_union": 214, "_union_find_merg": 60, "_union_find_rep": 60, "_v": [192, 211], "_verifi": 60, "_verify_bsg": [60, 66, 67], "_verify_centr": 66, "_verify_normal_closur": 66, "_w": [223, 234], "_w0_0": 105, "_w1_0": 105, "_w2_0": 105, "_x": [22, 24, 105, 153, 201, 207, 210, 211, 218, 224, 239, 243, 259, 291], "_xi_1": 244, "_y": [24, 31, 153, 201, 207, 210, 211, 291], "_z": [24, 96, 153, 201, 210, 211, 247, 291], "a0": [65, 112, 243, 305], "a000001": 55, "a000010": 74, "a000073": 74, "a000085": 77, "a000111": [74, 223], "a000720": 74, "a001221": 74, "a001222": 74, "a002322": 74, "a002997": 109, "a003277": 55, "a008683": 74, "a051532": 55, "a056867": 55, "a066272": 109, "a066272a": 109, "a1": [61, 65, 69, 97, 105, 109, 118, 142, 159, 166, 243, 247, 248, 277, 305], "a10": 86, "a1pt": 159, "a1pt_theori": [159, 206], "a1sz_lattice_basis_reduction_algorithm": 216, "a2": [61, 65, 69, 98, 105, 109, 118, 142, 159, 166, 216, 247, 248, 277, 305], "a217120": 109, "a217255": 109, "a217719": 109, "a2idx": 105, "a2pt": 159, "a2pt_theori": [159, 206, 210], "a3": [61, 65, 69, 98, 105, 159, 277, 305], "a4": [52, 65, 69, 98, 159, 305], "a4_in_s6": 52, "a4xc2": 52, "a5": [65, 69], "a6": 69, "a6_wrong": 69, "a9chet_distribut": 247, "a9vy_distribut": 247, "a_": [32, 65, 69, 70, 77, 94, 98, 101, 105, 125, 126, 201, 229, 237, 240, 243, 245, 247, 248, 249, 291], "a_0": [105, 230, 240, 243, 248, 305], "a_0_0": 105, "a_0_0_0": 105, "a_0_0_1": 105, "a_0_1": 105, "a_0_1_0": 105, "a_0_1_1": 105, "a_0_2": 105, "a_0_2_0": 105, "a_0_2_1": 105, "a_1": [59, 60, 70, 77, 91, 94, 105, 126, 192, 197, 215, 220, 237, 240, 243, 247, 305], "a_1_0": 105, "a_1_0_0": 105, "a_1_0_1": 105, "a_1_1": 105, "a_1_1_0": 105, "a_1_1_1": 105, "a_1_2": 105, "a_1_2_0": 105, "a_1_2_1": 105, "a_1x_1": [32, 240], "a_2": [60, 70, 91, 105, 220, 237, 240, 243, 247, 305], "a_2x_2": [32, 240], "a_3": 105, "a_4": 52, "a_5": 52, "a_6": 52, "a_and_b": [135, 136, 146], "a_b": 159, "a_bicep": 291, "a_eq": 245, "a_first": 292, "a_i": [94, 197, 202, 211, 215, 220, 237], "a_ij": 252, "a_interv": 235, "a_ixi": 131, "a_ixx": 131, "a_iyi": 131, "a_iyz": 131, "a_izx": 131, "a_izz": 131, "a_j": [59, 77, 94, 197, 220, 229, 237], "a_k": [60, 70, 224, 230], "a_kx_k": 224, "a_lin": 156, "a_m": [65, 243], "a_mass": 131, "a_muscl": [115, 292], "a_n": [65, 70, 77, 94, 98, 197, 215, 220, 222, 230, 240, 243, 305], "a_non_commut": 243, "a_nul": 216, "a_nx_n": [32, 240], "a_o_n": 159, "a_op": 156, "a_p": [77, 94, 237, 305], "a_prim": 69, "a_r": [59, 237], "a_real": 252, "a_rref": 216, "a_t": 243, "a_tricep": 291, "a_val": 291, "a_x": [202, 211, 227], "a_z": [202, 211], "aa": [74, 212], "aaa": 265, "aaaabbbbcccc": 74, "aab": [74, 265], "aabbc": 74, "aabc": 74, "aaecc": 245, "aand": [77, 96], "aaron": 0, "aaronmeur": 12, "aau": 117, "ab": [14, 16, 47, 50, 51, 68, 69, 70, 73, 74, 75, 77, 81, 82, 92, 94, 99, 105, 111, 115, 121, 127, 159, 192, 215, 218, 222, 223, 227, 240, 242, 245, 246, 247, 249, 253, 262, 265, 268, 277, 292, 305], "aba": 265, "abb": [262, 265], "abbrev": [9, 198, 199, 227], "abbrevi": [199, 215, 227, 246, 248], "abc": [3, 4, 11, 12, 16, 18, 19, 24, 27, 29, 31, 33, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 50, 58, 60, 62, 68, 69, 70, 71, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 92, 93, 94, 96, 97, 99, 101, 104, 105, 108, 109, 110, 123, 125, 127, 163, 165, 167, 168, 173, 190, 192, 193, 214, 216, 218, 220, 222, 223, 224, 227, 228, 229, 230, 232, 233, 234, 235, 236, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 252, 254, 259, 260, 261, 262, 263, 265, 266, 268, 271, 274, 275, 276, 281, 283, 297, 300, 304], "abcbb": 265, "abcd": [58, 62, 192, 249, 265, 268], "abcdef": 297, "abel": [29, 38, 105, 223], "abelian": [55, 57, 60, 98, 197, 214], "abelian_invari": 60, "abeliangroup": [57, 60], "abi": 265, "abid": 7, "abij": 192, "abil": [13, 14, 16, 22, 48, 105, 152, 222, 226, 243, 246, 299, 305], "abji": 192, "abl": [2, 3, 4, 11, 12, 14, 15, 20, 22, 24, 32, 36, 49, 50, 60, 65, 69, 70, 71, 80, 88, 96, 101, 105, 109, 112, 122, 142, 154, 156, 157, 159, 160, 214, 216, 217, 218, 223, 224, 243, 246, 258, 275, 292, 299, 304, 306], "abnorm": 220, "abort": 256, "about": [3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 29, 34, 36, 38, 39, 40, 42, 43, 45, 46, 49, 50, 60, 61, 62, 63, 69, 73, 75, 77, 79, 80, 81, 83, 84, 85, 89, 91, 95, 96, 98, 105, 109, 111, 117, 118, 125, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 142, 146, 156, 157, 187, 189, 190, 192, 196, 201, 202, 210, 211, 212, 214, 216, 217, 222, 224, 227, 229, 234, 239, 240, 241, 243, 247, 251, 252, 258, 259, 260, 261, 262, 263, 271, 273, 275, 278, 279, 286, 289, 291, 294, 296, 297, 299, 300, 301, 305], "abov": [2, 3, 4, 5, 8, 11, 12, 13, 14, 16, 18, 20, 23, 24, 26, 27, 29, 31, 35, 36, 38, 48, 49, 50, 51, 53, 59, 60, 61, 65, 68, 69, 73, 74, 77, 79, 82, 85, 86, 94, 96, 99, 105, 110, 111, 118, 125, 129, 134, 135, 137, 138, 140, 142, 144, 145, 146, 147, 152, 153, 155, 156, 157, 160, 187, 189, 192, 202, 208, 210, 211, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 228, 234, 237, 239, 240, 243, 245, 246, 247, 251, 252, 259, 260, 266, 275, 276, 277, 278, 281, 291, 292, 297, 299, 300, 301, 305], "above_fermi": [77, 192], "abracadabra": 265, "abramov": [221, 245], "abramov71": [221, 223], "abramowitz": [4, 77], "abridg": 214, "abs_sqrd": 127, "absarglineseri": 213, "absenc": [52, 65, 99], "absent": [4, 53, 245], "absolt": 292, "absolut": [8, 12, 46, 47, 50, 68, 69, 75, 77, 84, 94, 96, 105, 111, 127, 190, 218, 222, 223, 237, 239, 242, 247, 258, 280, 281, 282], "absolute_converg": 68, "absorb": [13, 15, 94, 243, 247, 295], "absorbing_markov_chain": 247, "absorbing_prob": [13, 247], "absorpt": 243, "abstract": [0, 13, 48, 49, 58, 69, 71, 75, 77, 82, 87, 101, 112, 115, 130, 134, 138, 141, 142, 176, 178, 187, 190, 191, 192, 214, 222, 246, 247, 249, 253, 260, 280, 292], "abund": 109, "abundantnumb": 109, "abus": [69, 253], "ac": [27, 42, 50, 61, 81, 121, 137, 157, 169, 247, 265, 268], "academ": [0, 26, 49, 53, 221], "acb": 265, "acc": [49, 159, 206, 210], "acceler": [3, 110, 135, 137, 140, 144, 149, 151, 156, 157, 159, 195, 202, 206, 208, 216, 262, 280, 291], "acceleration_": 159, "acceleration_constraint": 135, "accept": [4, 11, 12, 14, 15, 24, 31, 38, 49, 50, 60, 69, 75, 82, 83, 96, 99, 101, 105, 108, 111, 125, 142, 186, 196, 202, 207, 213, 222, 223, 226, 227, 228, 235, 237, 239, 245, 259, 266, 271, 273, 276, 301], "accepted_latex_funct": 227, "access": [2, 4, 5, 9, 13, 15, 16, 22, 24, 43, 44, 45, 50, 69, 77, 98, 99, 101, 105, 110, 112, 115, 118, 125, 126, 134, 135, 138, 140, 142, 160, 201, 202, 208, 211, 213, 216, 217, 218, 220, 222, 239, 243, 248, 251, 259, 260, 275, 278, 291, 292, 300, 304], "accid": [11, 12, 14, 70, 266], "accident": [11, 12, 14, 15], "accompani": [11, 12, 49], "accomplish": [31, 96, 156, 159, 278], "accord": [5, 16, 50, 57, 60, 61, 65, 68, 69, 70, 77, 99, 101, 105, 109, 111, 134, 140, 141, 143, 152, 186, 192, 213, 218, 220, 222, 223, 224, 240, 245, 246, 253, 258, 260, 265, 280], "accordingli": [60, 215, 222], "account": [3, 15, 75, 105, 230, 239, 243, 292], "accumul": [60, 258, 262], "accur": [3, 13, 14, 16, 20, 24, 29, 48, 60, 69, 73, 74, 91, 96, 122, 213, 234, 294, 301], "accuraci": [14, 16, 20, 48, 69, 216, 223, 295, 301], "achiev": [13, 15, 16, 24, 69, 73, 77, 101, 109, 142, 145, 159, 201, 226, 234, 237, 239, 246, 249, 261, 276], "acm": [51, 68, 94, 96, 216, 218, 221, 237, 239, 243, 245], "aco": [4, 16, 42, 75, 82, 85, 144, 159, 165, 202, 227, 243, 271, 305], "acosh": [75, 227], "acot": [75, 227], "acoth": [75, 227], "acquaint": 7, "across": [3, 5, 11, 60, 67, 69, 80, 96, 118, 191, 192, 199, 213, 227, 262, 264, 265, 266, 295, 303], "acsc": [75, 227], "acsch": [75, 227], "act": [12, 15, 49, 52, 59, 60, 61, 65, 69, 77, 85, 98, 99, 105, 113, 116, 117, 119, 121, 130, 131, 134, 137, 138, 140, 142, 147, 155, 164, 176, 181, 184, 185, 235, 246, 248, 249, 276, 280, 291, 292, 294], "actf": 292, "actf2": 292, "action": [2, 5, 8, 11, 60, 98, 115, 130, 137, 184, 187, 197, 223, 239, 246, 292], "activ": [3, 8, 9, 17, 113, 114, 115, 116, 144, 145, 213, 256, 261, 263, 288], "activation_dynam": 115, "activation_time_const": 112, "activationbas": [112, 115, 292], "active_deprecations_target": [3, 256, 261, 263], "activepython": 40, "activest": 265, "actual": [2, 3, 4, 5, 8, 9, 11, 12, 14, 15, 16, 20, 22, 23, 24, 27, 49, 50, 51, 58, 60, 67, 69, 70, 77, 81, 94, 96, 98, 101, 105, 109, 113, 115, 125, 129, 130, 138, 141, 142, 144, 154, 155, 156, 207, 213, 214, 216, 217, 222, 227, 235, 237, 239, 240, 243, 246, 254, 258, 259, 262, 263, 265, 266, 299], "actuat": [115, 133, 138, 140, 152, 288], "actuatorbas": [130, 140, 292], "actz": 292, "acycl": 265, "ad": [4, 5, 7, 8, 9, 11, 12, 13, 14, 22, 31, 33, 42, 49, 50, 53, 59, 60, 69, 70, 80, 84, 91, 94, 98, 109, 111, 117, 121, 129, 131, 134, 140, 142, 143, 145, 159, 166, 194, 197, 203, 212, 213, 222, 224, 226, 227, 229, 237, 240, 243, 245, 246, 247, 249, 252, 253, 258, 274, 291, 297], "adam": [212, 223], "adamek": 49, "adapt": [13, 123, 213, 233, 245, 265, 270], "add": [2, 3, 4, 9, 12, 14, 15, 16, 19, 22, 36, 42, 44, 48, 50, 58, 60, 65, 70, 73, 76, 84, 86, 94, 98, 101, 105, 109, 117, 119, 121, 131, 140, 142, 145, 159, 170, 176, 186, 191, 192, 195, 210, 211, 213, 216, 217, 218, 220, 222, 223, 224, 227, 228, 237, 239, 240, 243, 244, 246, 247, 249, 251, 252, 253, 261, 266, 269, 291, 295, 297, 300, 304, 305], "add_actu": [140, 147], "add_as_root": 98, "add_auxiliary_spe": 140, "add_bodi": [140, 147], "add_coordin": 140, "add_formula": 237, "add_gen": 218, "add_ground": [218, 223], "add_handl": 13, "add_holonomic_constraint": [140, 145], "add_joint": [13, 140, 145, 147, 153], "add_kd": 140, "add_load": [140, 145, 147], "add_memb": 121, "add_nod": 121, "add_nonholonomic_constraint": 140, "add_simple_root": 98, "add_spe": 140, "add_typ": 246, "addaugmentedassign": 50, "addb": 237, "addend": 253, "addison": [53, 61, 109, 221], "addit": [0, 2, 3, 5, 9, 12, 13, 14, 15, 16, 18, 20, 40, 42, 50, 59, 60, 61, 68, 69, 75, 77, 81, 87, 89, 93, 94, 96, 97, 99, 101, 105, 109, 111, 112, 113, 115, 122, 123, 125, 129, 131, 135, 156, 160, 178, 190, 191, 194, 201, 207, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 223, 227, 233, 236, 237, 239, 240, 243, 244, 245, 246, 247, 258, 259, 260, 262, 263, 265, 266, 268, 275, 291, 292, 297, 299, 300, 301, 304, 305], "addition": [2, 4, 11, 13, 14, 69, 154, 190, 211, 220, 227, 247, 256, 263, 275, 292], "additional_transl": 13, "address": [9, 12, 69, 227, 246], "addrul": 96, "adequ": 227, "adher": [3, 5, 94], "adi": 249, "adic": 221, "adj": [105, 216], "adj_det": 216, "adj_poly_det": 216, "adja": 216, "adjac": [59, 60, 61, 69, 74, 125, 164, 216, 265], "adject": [15, 247], "adjoin": [60, 215], "adjoint": [98, 105, 169, 173, 227], "adjoint_styl": 227, "adjug": [105, 216], "adjust": [12, 140, 230, 234, 292], "admiss": [229, 232], "admit": [77, 243], "adopt": [60, 253], "advanc": [5, 19, 21, 24, 44, 60, 69, 73, 74, 105, 106, 152, 157, 209, 213, 216, 217, 219, 221, 222, 229, 236, 243, 258, 259, 260, 265, 288, 294, 296, 298, 302, 303, 304, 305], "advantag": [9, 13, 18, 22, 24, 29, 45, 48, 50, 69, 70, 74, 96, 99, 105, 109, 122, 196, 216, 217, 224, 235, 240, 243, 246, 262, 297, 299, 301, 305], "advers": 69, "advertis": 5, "advis": [12, 13, 22, 38, 49, 134, 142], "ae": 224, "aegean": 70, "aeq": 245, "aesara": [2, 13, 50, 159], "aesara_cod": [13, 227], "aesara_funct": [50, 110, 227], "aesaracod": [2, 13, 50, 110, 227], "aesaraprint": [13, 227], "aeseara": 2, "aesthet": [5, 15, 213], "af": [57, 60, 66, 159], "affect": [11, 13, 14, 22, 24, 68, 69, 105, 201, 223, 245, 246, 276], "affin": [69, 70, 84, 214], "affine_ciph": 70, "affine_rank": 84, "affirm": 235, "aforement": [144, 208, 240, 278], "after": [3, 4, 5, 8, 9, 11, 12, 13, 14, 16, 40, 42, 44, 45, 49, 51, 57, 60, 61, 65, 67, 68, 69, 70, 71, 75, 84, 86, 91, 96, 105, 109, 111, 117, 125, 140, 145, 153, 154, 156, 159, 161, 165, 177, 189, 197, 201, 208, 211, 216, 220, 222, 223, 224, 225, 227, 228, 233, 240, 243, 244, 245, 246, 248, 258, 261, 266, 268, 271, 274, 278, 294, 295, 297, 301, 305], "afterward": [16, 50, 69, 137, 146], "afunc": 266, "ag": [121, 243], "again": [3, 8, 9, 12, 14, 16, 20, 23, 52, 61, 69, 84, 109, 130, 140, 142, 144, 187, 188, 201, 202, 210, 214, 215, 222, 230, 237, 243, 256, 275, 292, 297, 305], "against": [12, 13, 22, 24, 38, 70, 105, 117, 142, 259, 291, 292], "agca": [219, 289], "agnost": 260, "agre": [12, 69, 70, 77, 84, 94, 237], "agreement": 11, "ahead": [4, 109], "ai": [77, 109, 146, 211, 223, 240, 249, 268, 276, 305], "aid": [50, 144], "aim": [4, 5, 12, 87, 94, 197, 214, 237, 243, 246, 298, 299], "ainv": 216, "airi": [96, 243], "airspe": 2, "airy_funct": 77, "airyai": [77, 227, 243], "airyaiprim": [77, 227], "airybas": 77, "airybi": [77, 227, 243], "airybiprim": [77, 227], "airyfunct": 77, "aitken_html": 240, "ajwa": 221, "ajwa95": 221, "ak": [68, 229], "aka": [13, 101], "akrita": 223, "al": [96, 112, 113, 115, 142, 171, 220, 236, 239], "albeit": [96, 275], "aleaxit": 73, "alembertian": 245, "alexandria": 240, "alf_b_n": 159, "alg": [218, 222, 226], "alg_con": [140, 160], "alg_con_ful": 160, "alg_field_from_poli": [218, 222], "algebra": [0, 5, 15, 16, 18, 22, 28, 30, 35, 38, 46, 51, 52, 60, 69, 70, 73, 74, 75, 87, 90, 91, 92, 94, 96, 99, 103, 106, 109, 110, 111, 140, 152, 159, 160, 212, 215, 216, 218, 219, 220, 221, 223, 224, 227, 229, 237, 240, 242, 243, 246, 282, 283, 286, 288, 289, 292, 296, 297, 299, 301], "algebraic_express": 69, "algebraic_field": [217, 218, 220, 222], "algebraic_multipl": 301, "algebraic_numb": [22, 46, 69], "algebraiccomput": 69, "algebraicfield": [217, 218, 220, 222], "algebraichandl": 46, "algebraicnumb": [69, 218, 222, 226], "algebraicpred": 46, "algintpow": 222, "algo": [50, 61], "algo2008": 61, "algorithm": [2, 4, 14, 15, 22, 29, 33, 35, 37, 38, 48, 53, 54, 59, 60, 61, 63, 65, 67, 68, 69, 70, 73, 74, 75, 81, 86, 94, 96, 99, 101, 105, 106, 109, 117, 126, 134, 156, 179, 197, 202, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 228, 232, 235, 236, 239, 240, 243, 245, 246, 247, 253, 262, 265, 288, 295, 300, 301, 305], "algorithmist": 60, "alia": [9, 50, 62, 69, 79, 85, 100, 102, 105, 107, 112, 115, 176, 185, 192, 214, 216, 217, 218, 222, 226, 235, 258, 268, 305], "alias": [9, 102, 218], "alic": [60, 70], "align": [13, 50, 79, 105, 134, 141, 211, 212, 227, 245, 258, 291], "alignof": 50, "alkiviadi": 223, "all": [0, 2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 22, 23, 24, 26, 34, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 94, 96, 98, 99, 100, 101, 104, 105, 108, 109, 110, 111, 112, 113, 115, 117, 118, 121, 123, 125, 126, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 147, 152, 154, 156, 159, 160, 166, 171, 172, 176, 186, 188, 189, 190, 192, 194, 195, 196, 197, 199, 200, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 251, 253, 254, 256, 258, 259, 260, 261, 263, 265, 266, 268, 271, 273, 275, 277, 278, 279, 280, 282, 291, 292, 294, 295, 297, 299, 300, 301, 304, 305, 306], "all_coeff": [217, 218, 223], "all_integr": [36, 243, 244], "all_model": 99, "all_monom": [218, 223], "all_root": [98, 109, 223], "all_term": [218, 223], "allei": 77, "allhint": [243, 244], "alli": 222, "alloc": [50, 75], "allow": [2, 3, 5, 11, 12, 13, 14, 15, 16, 22, 24, 26, 29, 46, 49, 50, 51, 53, 60, 62, 65, 68, 69, 70, 73, 75, 77, 79, 80, 81, 94, 97, 99, 101, 102, 105, 109, 110, 111, 115, 118, 134, 135, 141, 142, 144, 152, 156, 157, 159, 164, 176, 192, 196, 197, 198, 211, 213, 214, 217, 218, 220, 222, 223, 224, 227, 232, 234, 235, 236, 239, 240, 243, 245, 246, 247, 248, 252, 258, 261, 263, 265, 266, 276, 292, 295, 297, 300], "allow_half": 69, "allow_hyp": [77, 239], "allow_unknown_funct": 227, "almost": [12, 14, 34, 94, 102, 111, 194, 214, 218, 223, 224, 243, 247, 261, 262, 265, 299], "almost_linear": 243, "almost_linear_integr": 243, "almosteq": 218, "almostlinear": 243, "alon": [14, 22, 70, 97, 220, 243, 245, 252, 265, 299, 300], "along": [12, 20, 24, 29, 50, 60, 69, 70, 71, 75, 77, 78, 79, 83, 84, 87, 89, 92, 94, 101, 105, 117, 118, 119, 121, 128, 129, 130, 134, 135, 137, 138, 140, 141, 144, 146, 149, 150, 151, 154, 155, 156, 157, 159, 161, 189, 201, 202, 208, 211, 213, 216, 217, 222, 223, 243, 246, 274, 278, 280, 291, 292], "alongsid": [3, 11, 12, 13, 14, 24, 101, 130], "alp": 70, "alpertron": 240, "alpha": [5, 16, 60, 69, 77, 96, 98, 111, 125, 130, 164, 168, 171, 189, 206, 210, 211, 212, 218, 220, 222, 223, 226, 227, 239, 243, 247, 292], "alpha_": [105, 115, 212, 292], "alpha_0": 105, "alpha_1": [74, 105, 109, 222], "alpha_2": [74, 109, 222], "alpha_i": [69, 222], "alpha_k": [74, 109], "alpha_m": 222, "alpha_n": 222, "alpha_opt": [115, 292], "alpha_r": 237, "alphabet": [11, 69, 70, 125, 197, 215, 240, 260], "alphanumer": 243, "alreadi": [2, 3, 7, 9, 10, 11, 12, 13, 14, 16, 22, 24, 26, 32, 33, 36, 38, 40, 42, 60, 61, 69, 70, 78, 79, 82, 83, 85, 94, 96, 105, 106, 109, 121, 126, 131, 140, 142, 145, 156, 161, 187, 189, 192, 208, 210, 211, 213, 216, 217, 220, 222, 226, 230, 236, 237, 239, 243, 246, 247, 253, 276, 278, 292, 295, 297, 298, 299, 303, 304, 305, 306], "also": [0, 2, 3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 22, 23, 24, 26, 27, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 52, 58, 60, 61, 68, 70, 71, 73, 74, 75, 76, 77, 81, 85, 87, 89, 91, 92, 94, 96, 98, 99, 102, 105, 106, 109, 110, 111, 112, 113, 115, 117, 118, 121, 122, 123, 125, 129, 130, 131, 132, 134, 135, 137, 138, 140, 141, 142, 144, 145, 146, 147, 150, 153, 154, 155, 156, 157, 159, 160, 161, 165, 175, 176, 178, 182, 186, 191, 192, 195, 196, 197, 201, 202, 204, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 256, 258, 259, 260, 261, 262, 263, 266, 268, 271, 274, 275, 276, 277, 278, 280, 281, 291, 292, 294, 295, 297, 299, 300, 301, 304, 305, 306], "alt": [50, 222], "alter": [16, 51, 60, 69, 202, 217, 227, 229, 246], "altern": [2, 3, 4, 8, 13, 14, 15, 16, 23, 24, 40, 50, 57, 60, 61, 68, 69, 73, 74, 75, 76, 77, 101, 105, 106, 110, 111, 112, 115, 130, 142, 145, 154, 156, 202, 210, 212, 213, 215, 216, 217, 222, 223, 227, 232, 234, 236, 245, 246, 248, 249, 265, 292, 297, 299, 301], "alternating_permut": 74, "alternatinggroup": [57, 60, 66], "alternatingpermut": 74, "although": [0, 2, 3, 4, 5, 11, 12, 14, 15, 16, 19, 20, 22, 24, 32, 61, 69, 70, 75, 81, 93, 94, 97, 99, 101, 105, 109, 129, 144, 159, 214, 216, 217, 218, 220, 222, 223, 235, 236, 239, 240, 245, 259, 265, 266, 297, 300, 305], "altitud": 85, "alwai": [3, 4, 5, 11, 12, 13, 14, 15, 16, 22, 23, 24, 34, 40, 42, 49, 60, 61, 68, 69, 70, 71, 73, 75, 77, 79, 81, 84, 85, 93, 94, 96, 99, 105, 108, 109, 119, 121, 125, 126, 138, 140, 141, 142, 144, 146, 150, 160, 192, 194, 197, 198, 208, 210, 214, 215, 216, 217, 218, 220, 222, 223, 227, 228, 229, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 254, 258, 260, 265, 266, 271, 273, 278, 291, 295, 297, 298, 299, 300, 305], "am": [109, 197, 227], "ama": 125, "amalgam": 94, "amat": 144, "ambient": 84, "ambient_dimens": [78, 80, 82, 84], "ambigu": [5, 13, 14, 16, 18, 69, 111, 180, 186, 239, 251, 256], "amd64": 50, "amen": 152, "amend": 60, "amer": 105, "american": [5, 55, 70], "ami": 109, "ami_42_from129to134": 109, "amic": 109, "amicable_numb": 109, "amirgi": 247, "amit": [0, 246], "among": [22, 49, 50, 51, 53, 60, 61, 70, 97, 110, 223, 243, 248, 251, 253, 275, 292], "amongst": [22, 245], "amount": [4, 12, 49, 69, 70, 81, 134, 152, 202, 208, 211, 220, 230, 258, 271, 273, 292], "amper": [163, 196], "amplitud": [123, 166], "amsfont": 227, "amsmath": 227, "amus": 214, "an": [0, 2, 3, 4, 5, 7, 8, 9, 10, 12, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 29, 30, 31, 32, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 121, 123, 125, 126, 127, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 144, 145, 146, 147, 152, 154, 156, 157, 159, 160, 163, 164, 165, 169, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 185, 186, 187, 189, 190, 192, 193, 194, 196, 201, 202, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 239, 240, 242, 243, 244, 245, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 263, 265, 266, 268, 271, 273, 275, 276, 278, 279, 280, 281, 291, 292, 294, 295, 296, 297, 298, 299, 301, 304, 305, 306], "anaconda3": 12, "analog": [13, 24, 29, 34, 62, 68, 70, 74, 157, 210, 211, 214, 215, 216, 220, 232, 248, 265], "analogi": [68, 220], "analogu": [23, 46, 68, 83, 217, 218], "analyitc": 94, "analys": [27, 49, 123, 125, 159, 247], "analysi": [20, 50, 51, 60, 69, 70, 75, 122, 144, 156, 157, 160, 214, 223, 237, 240, 247, 295], "analyt": [15, 40, 74, 77, 94, 105, 113, 138, 152, 243, 292, 295], "analytic_func": 105, "analyz": [12, 239, 252], "anatomi": 116, "anc": 222, "ancestor": 222, "andi": [0, 158], "andr": [74, 223], "andre_poli": [74, 223], "andreescu": 240, "andrew": [74, 86, 109], "andrica": 240, "anew": 69, "anf": 99, "anf_coeff": 99, "anfform": 99, "ang": 144, "ang_acc_in": [159, 202], "ang_vel_in": [131, 134, 142, 149, 150, 159, 202, 210], "angelia": 48, "angl": [24, 42, 75, 77, 78, 79, 80, 82, 83, 84, 85, 115, 119, 121, 127, 134, 140, 141, 142, 144, 145, 146, 147, 153, 156, 161, 164, 165, 166, 189, 197, 202, 210, 211, 212, 227, 236, 246, 271, 273, 276, 291, 292, 305], "angle1": [271, 273], "angle2": [271, 273], "angle3": [271, 273], "angle_addit": 42, "angle_between": [82, 83, 85, 202], "angle_of_incid": 165, "angular": [105, 117, 127, 131, 134, 137, 144, 145, 146, 147, 149, 151, 153, 156, 159, 161, 165, 166, 168, 171, 189, 193, 202, 206, 212, 291], "angular_deflect": 117, "angular_momentum": [131, 137, 157, 159], "angular_veloc": 166, "angvel": 159, "ani": [2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 22, 23, 24, 29, 31, 32, 33, 36, 40, 46, 47, 48, 49, 50, 51, 58, 59, 60, 61, 67, 68, 69, 70, 71, 73, 74, 75, 77, 79, 80, 81, 84, 85, 86, 94, 96, 97, 99, 102, 104, 105, 106, 109, 111, 112, 113, 115, 117, 118, 121, 125, 127, 130, 131, 134, 135, 136, 137, 138, 140, 142, 152, 155, 156, 157, 160, 161, 165, 178, 181, 186, 187, 190, 192, 194, 197, 202, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 227, 228, 233, 234, 235, 236, 237, 239, 240, 243, 244, 245, 247, 249, 252, 253, 258, 259, 261, 262, 263, 265, 266, 271, 275, 276, 277, 278, 280, 281, 292, 294, 295, 297, 300, 301, 304, 305, 306], "annal": [61, 112, 113, 115, 291, 292], "annihil": [68, 87, 88, 92, 168, 192, 245], "annihilateboson": 192, "annihilatefermion": 192, "annoi": 12, "annot": [36, 109, 213, 227], "annoy": 69, "anoth": [3, 4, 5, 11, 12, 13, 14, 15, 19, 20, 22, 23, 24, 29, 31, 33, 34, 35, 36, 37, 46, 49, 50, 61, 66, 68, 69, 70, 71, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 94, 96, 101, 105, 109, 115, 117, 118, 130, 131, 135, 137, 138, 141, 153, 157, 181, 196, 197, 199, 202, 206, 210, 211, 213, 215, 216, 217, 218, 220, 222, 223, 224, 227, 228, 234, 235, 237, 243, 245, 246, 247, 259, 260, 266, 271, 275, 276, 280, 292, 294, 297, 299, 300, 305, 306], "anp": [69, 217, 218, 222, 223], "answer": [3, 7, 12, 14, 22, 24, 29, 60, 69, 73, 91, 94, 96, 99, 105, 109, 197, 220, 224, 236, 237, 239, 245, 247, 262, 268, 299, 301, 305], "anteced": [94, 234], "anthoni": 0, "anti": [11, 15, 42, 46, 65, 75, 96, 105, 164, 169, 253], "anti_symmetr": 105, "anticip": 197, "anticlockwis": [105, 121], "anticommut": [65, 179, 181, 191, 192, 253, 288], "antideriv": [15, 75, 77, 96, 243, 295], "antiderv": 243, "antidivisor": 109, "antidivisor_count": 109, "antihermitian": [22, 46, 69], "antihermitianhandl": 46, "antihermitianpred": 46, "antipattern": [14, 24, 298], "antisym": 65, "antisymmetr": [65, 71, 105, 192, 253], "antisymmetrictensor": 192, "antlr": [2, 142], "antlr4": [2, 111], "anum": 216, "anycod": 13, "anymor": [11, 12, 213], "anyon": [4, 5, 13, 39, 223, 227, 293, 303, 304], "anyth": [3, 4, 5, 12, 13, 14, 16, 24, 48, 50, 69, 70, 80, 84, 105, 142, 166, 176, 224, 227, 233, 235, 239, 243, 245, 259, 265, 268, 297], "anyv": 70, "anywai": [94, 239, 243], "anywher": [3, 4, 13, 22, 50, 69, 77, 83, 192, 268, 299], "ao": [159, 291], "aocp": 262, "aother": 77, "ap": [77, 81, 237], "apart": [14, 24, 42, 60, 65, 69, 73, 75, 96, 111, 130, 138, 208, 215, 216, 218, 220, 223, 226, 229, 240, 246, 253, 276, 278, 300], "apart_list": 223, "aperiod": 48, "apfloat": 72, "aphras": 70, "api": [4, 5, 11, 13, 14, 22, 25, 32, 34, 50, 69, 81, 89, 110, 111, 116, 124, 152, 157, 159, 188, 209, 213, 220, 240, 242, 266, 275, 276, 279, 286, 288, 289, 292, 298, 299, 302], "apoapsi": 79, "apothem": 85, "app": 96, "app1": 247, "appar": [11, 12, 14, 15, 16, 69, 268, 305], "apparatu": 13, "appdata": 8, "appeal": 94, "appear": [4, 5, 11, 12, 14, 15, 16, 18, 36, 49, 50, 53, 58, 60, 69, 70, 74, 75, 78, 79, 82, 85, 88, 92, 94, 96, 105, 109, 111, 138, 142, 146, 176, 192, 194, 197, 213, 215, 217, 220, 222, 223, 227, 236, 239, 243, 244, 245, 247, 251, 253, 258, 265, 266, 271, 276], "appel": [74, 77], "appell_seri": 77, "appellf1": [77, 227], "appellseq": [74, 223], "append": [14, 31, 36, 60, 69, 70, 105, 118, 159, 187, 213, 218, 227, 245, 248, 260, 261, 265, 305], "appetit": 299, "appli": [5, 9, 11, 12, 13, 14, 15, 23, 24, 27, 34, 38, 42, 43, 44, 45, 46, 50, 60, 61, 62, 67, 68, 69, 70, 71, 72, 75, 76, 79, 84, 85, 87, 96, 99, 100, 105, 109, 111, 117, 118, 119, 121, 125, 126, 130, 131, 132, 135, 137, 138, 140, 144, 145, 147, 154, 156, 158, 169, 173, 176, 177, 181, 184, 185, 189, 192, 202, 211, 213, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 228, 229, 233, 234, 235, 236, 239, 243, 244, 245, 246, 247, 248, 251, 258, 261, 265, 271, 273, 276, 291, 292, 301, 304, 305], "applic": [0, 5, 13, 30, 33, 51, 52, 53, 59, 60, 61, 62, 69, 70, 74, 75, 96, 105, 109, 117, 119, 121, 130, 134, 135, 140, 142, 152, 156, 158, 159, 176, 177, 202, 206, 210, 215, 216, 220, 221, 222, 223, 227, 229, 234, 240, 243, 246, 260, 265, 271, 278, 279, 286, 292, 299], "applied_load": 117, "appliedfunct": 111, "appliedpermut": 61, "appliedpred": [19, 43, 44, 45], "appliedundef": 69, "apply_finite_diff": [48, 69, 295], "apply_forc": [13, 131], "apply_grov": 177, "apply_length": 119, "apply_load": [117, 118, 119, 121], "apply_moment_load": 117, "apply_oper": [181, 192], "apply_support": [117, 121], "apply_torqu": 131, "apply_uniform_grav": [13, 140, 145, 147], "applyfunc": [27, 100, 105, 150, 202, 216, 248], "approach": [8, 14, 20, 29, 32, 33, 34, 36, 37, 38, 49, 68, 69, 96, 125, 146, 152, 216, 217, 220, 221, 222, 224, 235, 244, 245, 247, 259, 262, 265, 295, 301], "appropri": [2, 4, 5, 11, 12, 13, 14, 16, 20, 33, 37, 60, 69, 75, 84, 105, 129, 144, 181, 182, 192, 202, 210, 213, 216, 217, 223, 224, 227, 233, 234, 239, 240, 245, 247, 252, 260, 276, 304], "approx": [20, 30, 35, 69, 96], "approxim": [4, 14, 16, 21, 38, 48, 60, 68, 69, 70, 73, 77, 79, 85, 94, 96, 105, 109, 118, 122, 161, 195, 217, 218, 223, 230, 234, 237, 247, 295, 299], "approximations_for_the_nth_prime_numb": 109, "apr": 81, "april": 68, "apt": [8, 9], "aq": 216, "ar": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 105, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 164, 165, 166, 167, 169, 171, 173, 176, 178, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 206, 207, 208, 210, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 258, 259, 260, 262, 263, 264, 265, 266, 268, 271, 273, 274, 275, 276, 277, 278, 280, 282, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "ar_": 224, "ar_i": 224, "ara": 70, "arab": 214, "arang": [24, 259, 294], "arb": 79, "arbitrari": [2, 4, 13, 14, 15, 16, 22, 24, 29, 33, 35, 37, 38, 48, 54, 61, 62, 68, 69, 70, 73, 74, 77, 80, 81, 83, 99, 105, 118, 136, 153, 157, 178, 181, 211, 213, 214, 217, 218, 220, 222, 224, 239, 243, 244, 245, 253, 263, 266, 271, 273, 292, 294, 295, 300, 305, 306], "arbitrarili": [18, 29, 48, 69, 82, 109, 220, 222, 234, 237, 243, 244, 245, 247], "arbitrary_matrix": 105, "arbitrary_point": [78, 79, 80, 81, 82, 83, 85], "arc": [42, 75, 141, 291, 305], "arc_coplanar": 42, "arc_length": 291, "arcco": [16, 75, 141, 227], "arccosh": 227, "arccot": [75, 227], "arccoth": 227, "arccsc": [75, 227], "arccsch": [75, 227], "architectur": [0, 12, 159, 217, 258], "archiv": [53, 61, 70, 74, 77, 86, 96, 109, 158, 216, 239, 240, 247, 265, 301], "arcsec": [75, 227], "arcsech": [75, 227], "arcsin": [16, 75, 111, 224, 227, 247], "arcsine_distribut": 247, "arcsinh": 227, "arctan": [75, 224, 227], "arctan2": [75, 227], "arctang": 224, "arctanh": [111, 227], "arctanrul": 96, "arcversin": 24, "arduou": 152, "are_collinear": 84, "are_concurr": [82, 83], "are_coplanar": 84, "are_similar": [4, 80, 81, 86], "area": [69, 79, 81, 85, 86, 117, 118, 140], "aren": [3, 11, 12, 13, 14, 15, 24, 50, 69, 142, 226, 246], "arg": [5, 11, 15, 22, 24, 31, 33, 36, 42, 44, 45, 46, 47, 48, 49, 50, 53, 60, 61, 63, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 82, 84, 85, 86, 91, 94, 96, 99, 100, 101, 102, 105, 107, 109, 111, 119, 121, 125, 161, 167, 170, 172, 175, 176, 177, 178, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 202, 207, 211, 213, 216, 218, 220, 222, 223, 224, 227, 229, 230, 233, 234, 235, 236, 239, 243, 245, 246, 247, 248, 249, 252, 253, 258, 259, 260, 261, 265, 266, 268, 271, 273], "arg1": [12, 247], "arg2": [12, 247], "argand": 246, "argindex": [4, 11, 24, 50, 69, 75, 76, 77, 113], "args_cnc": 69, "argu": 109, "argular": 189, "argument": [2, 3, 4, 11, 12, 14, 15, 19, 22, 23, 24, 29, 31, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 82, 85, 86, 94, 96, 97, 99, 101, 105, 108, 109, 111, 113, 115, 117, 123, 125, 130, 134, 135, 138, 140, 141, 142, 154, 155, 157, 159, 166, 169, 173, 175, 178, 181, 186, 187, 189, 190, 191, 192, 200, 207, 208, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 226, 227, 228, 229, 233, 234, 235, 236, 237, 239, 240, 243, 244, 245, 247, 249, 251, 252, 258, 259, 260, 261, 262, 263, 265, 266, 268, 275, 276, 278, 292, 294, 295, 300, 301, 305], "argument_sequ": [50, 260], "argument_test": [50, 227], "argument_tupl": 259, "argumentindexerror": [11, 24], "argv": [97, 258], "aris": [22, 23, 69, 74, 94, 96, 189, 211, 216, 217, 222], "arithmet": [2, 12, 14, 50, 69, 70, 73, 105, 109, 181, 188, 212, 213, 214, 216, 217, 218, 220, 221, 225, 228], "arithmetica": 240, "ariti": [5, 213], "arjona": 212, "arm": 291, "armi": 70, "armstrong": 57, "around": [2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 16, 23, 24, 40, 48, 58, 61, 69, 70, 71, 73, 75, 78, 85, 89, 105, 108, 109, 121, 131, 134, 138, 141, 152, 156, 160, 211, 217, 220, 222, 227, 229, 234, 240, 243, 246, 247, 258, 271, 273, 291, 292, 295, 297, 299], "arr": 50, "arr1": 109, "arr2": 109, "arrai": [14, 24, 30, 34, 35, 36, 50, 60, 61, 65, 66, 70, 77, 96, 101, 105, 109, 110, 111, 123, 136, 159, 189, 213, 216, 218, 223, 227, 246, 247, 250, 252, 253, 254, 259, 260, 262, 266, 286, 291, 292, 301], "arrang": [27, 61, 125, 135, 157, 159, 223, 236, 240, 253], "array_der": [248, 249], "array_express": 248, "array_form": [59, 61, 62, 249], "array_lik": [135, 136, 291], "arrayadd": 249, "arrayconstructor": 50, "arraycontract": [248, 249], "arraydiagon": [248, 249], "arrayexpr": 50, "arraysymbol": 249, "arraytensorproduct": [101, 248, 249], "arref": 216, "arriv": [71, 220, 237, 239, 243, 247, 305], "arrow": [49, 98, 117, 213, 227], "arrow_formatt": 49, "arrow_styl": 49, "arrowfrombar": 227, "arrowstringdescript": 49, "art": [53, 61, 214, 227, 229, 262], "articl": [0, 7, 69, 70, 101, 105, 219, 221, 222, 227, 236, 271, 289, 299], "articul": 222, "artifact": 105, "artifici": [221, 230], "artist": 70, "arxiv": [72, 74, 77, 105, 127, 223, 265], "as_add": [24, 69], "as_algebraicfield": 218, "as_base_exp": [69, 75, 76, 265], "as_coef_add": 69, "as_coef_mul": 69, "as_coeff_add": 69, "as_coeff_expon": 69, "as_coeff_mul": [13, 14, 69, 94, 101], "as_coeffici": [14, 69], "as_coefficients_dict": 69, "as_content_primit": [69, 105, 215, 223], "as_declar": 50, "as_dict": [58, 217, 223], "as_dummi": [69, 96], "as_explicit": [13, 34, 101, 105, 128, 248, 249], "as_expr": [13, 69, 105, 216, 217, 222, 223, 224, 301], "as_expr_set_pair": 75, "as_ferr": 58, "as_finite_differ": [13, 48, 69, 295], "as_immut": 100, "as_independ": [14, 24, 69, 246], "as_int": [186, 268], "as_leading_term": [12, 69, 234], "as_list": [91, 223], "as_mut": [69, 100, 101], "as_numer_denom": [69, 245], "as_ordered_factor": 69, "as_ordered_term": 69, "as_poli": [13, 69, 215, 223], "as_powers_dict": 69, "as_real_imag": [69, 75, 105, 228], "as_rel": 235, "as_set": [31, 99], "as_submodul": 222, "as_sum": 96, "as_term": 69, "as_two_term": [24, 69], "as_unevaluated_bas": 239, "asa": 85, "asarrai": [14, 110], "ascend": [61, 96, 240, 265], "ascent": 61, "ascertain": 141, "ascii": 227, "asec": [75, 227], "asech": [75, 227], "aseri": 69, "ashutosh": 0, "asid": [12, 16, 99, 243, 244, 299], "asin": [16, 75, 77, 83, 224, 227, 237, 239, 243, 247, 291, 305], "asinh": [75, 227], "ask": [2, 4, 7, 9, 11, 15, 16, 19, 22, 23, 44, 45, 46, 47, 69, 81, 94, 142, 197, 214, 233, 239, 246, 265, 283, 297], "askalgebraicpredicatehandl": 46, "askhandl": 43, "askpredicatehandl": [44, 45], "askprimehandl": 13, "asnumpi": 110, "aspect": [5, 7, 11, 12, 14, 22, 105, 116, 217, 291], "aspect_ratio": 213, "aspx": 243, "assembl": [70, 94, 234, 291], "assemble_partfrac_list": 223, "assembli": [121, 144], "assert": [3, 11, 12, 49, 58, 59, 60, 61, 69, 79, 81, 111, 156, 216, 227, 235, 243, 244, 245, 256, 263, 265], "assertionerror": [12, 256], "assess": 20, "assign": [5, 9, 22, 36, 49, 50, 51, 65, 69, 74, 85, 96, 98, 99, 105, 111, 135, 142, 149, 159, 197, 208, 211, 213, 215, 220, 227, 245, 246, 253, 260, 275, 278, 297], "assign_to": [50, 227], "assignmentbas": 50, "assignmenterror": 227, "assist": 243, "assoc_laguerr": [50, 77, 227], "assoc_legendr": [77, 227], "assoc_recurrence_memo": 267, "associ": [5, 9, 11, 15, 22, 32, 49, 51, 67, 69, 70, 76, 77, 91, 92, 94, 98, 112, 115, 130, 137, 140, 141, 147, 157, 159, 182, 190, 201, 202, 210, 211, 213, 215, 216, 217, 218, 220, 222, 227, 235, 237, 240, 253, 267, 291, 292], "associated_legendre_polynomi": 77, "associatedlaguerrepolynomi": 77, "assocop": 69, "assoic": 216, "asssumpt": 227, "assum": [2, 4, 14, 15, 16, 19, 22, 24, 33, 36, 37, 42, 45, 50, 51, 53, 58, 60, 68, 69, 70, 71, 74, 75, 77, 79, 86, 87, 94, 96, 105, 109, 117, 121, 125, 130, 138, 140, 141, 142, 148, 154, 155, 156, 157, 159, 165, 187, 191, 192, 202, 206, 208, 214, 215, 217, 220, 223, 225, 227, 234, 235, 237, 239, 240, 243, 244, 245, 246, 247, 251, 252, 253, 260, 265, 268, 274, 276, 280, 283, 291, 292, 298, 300, 303, 305, 306], "assump": [44, 45], "assumpt": [4, 12, 15, 16, 21, 23, 25, 32, 33, 34, 43, 44, 46, 47, 49, 50, 60, 61, 63, 68, 71, 73, 75, 76, 96, 99, 105, 106, 117, 125, 129, 159, 196, 199, 204, 216, 226, 227, 235, 236, 239, 243, 245, 246, 252, 260, 265, 282, 283, 291, 292, 305], "assumptionkei": 43, "assumptions0": [22, 69], "assumptionscontext": [43, 44, 45], "assur": [3, 109, 223], "ast": [69, 227], "asterisk": 5, "astr": 49, "astrophys": 195, "asv": 2, "asym2": 253, "asymmetr": [70, 85], "asymmetri": 247, "asymp": 234, "asymptot": [69, 94, 125, 295], "asymptotic_expans": 69, "at_pin_joint": 130, "atan": [42, 47, 71, 73, 75, 80, 85, 93, 96, 146, 160, 161, 224, 227, 229], "atan2": [42, 47, 71, 75, 166, 227, 271], "atan_2": 42, "atanh": [12, 75, 224, 227, 237], "atbash": 70, "atiyah": 221, "atiyah69": [214, 221], "atkinson": 60, "atleast": 243, "atol": 50, "atom": [15, 31, 50, 61, 69, 96, 99, 105, 127, 193, 217, 224, 227, 245, 246, 252], "atom_nam": 227, "atomic_mass_const": 199, "atomicexpr": [13, 69], "atoms_t": 227, "atop": [74, 77, 229, 237], "attach": [22, 61, 63, 94, 110, 115, 117, 130, 134, 135, 138, 153, 211, 259, 261, 266, 291, 292], "attachment_1": 138, "attachment_2": 138, "attack": 70, "attain": [245, 276], "attempt": [12, 18, 20, 23, 24, 29, 32, 36, 38, 50, 60, 65, 67, 69, 73, 74, 81, 94, 96, 105, 109, 129, 132, 187, 216, 217, 218, 222, 227, 229, 236, 239, 240, 243, 245, 246, 247, 258, 297, 305], "attent": [48, 60, 75], "attenu": 164, "attr": [3, 50], "attr_param": 50, "attribut": [4, 15, 19, 22, 24, 44, 45, 49, 50, 60, 61, 69, 77, 78, 79, 82, 83, 84, 85, 101, 105, 111, 112, 115, 116, 118, 125, 131, 134, 135, 136, 137, 138, 140, 149, 157, 160, 181, 186, 190, 197, 201, 202, 208, 211, 213, 214, 217, 218, 222, 227, 235, 239, 240, 252, 253, 259, 261, 265, 266, 275, 292, 300], "attributeerror": [13, 14, 22, 69, 105, 246], "au": 74, "aug": [209, 246], "aug_assign": 50, "augment": [4, 50, 105, 135, 140, 154, 155, 159, 225, 245, 246, 263, 266, 306], "augmentedassign": 50, "august": [243, 262], "augustu": 70, "austin": 303, "authent": 9, "author": [0, 4, 7, 109, 178, 222], "auto": [11, 13, 16, 32, 48, 69, 70, 97, 213, 216, 220, 223, 227, 239, 243, 247], "auto_assert": 227, "auto_declar": 227, "auto_int_to_integ": [2, 97], "auto_kei": 70, "auto_numb": 111, "auto_symbol": [2, 97, 111], "autoclass": 4, "autocomplet": 16, "autocorrel": 70, "autodetect": [243, 244], "autodoc": 5, "autoexpand": [16, 239], "autofunc": 50, "autofunct": [4, 11], "autogener": 172, "autolev": [2, 144, 152, 288], "autom": [50, 75, 110, 236, 259, 299], "automat": [2, 3, 4, 5, 8, 11, 12, 13, 15, 16, 18, 22, 32, 33, 36, 38, 49, 50, 51, 61, 69, 71, 72, 73, 74, 75, 77, 82, 84, 88, 94, 97, 99, 109, 111, 113, 115, 117, 135, 140, 142, 144, 150, 178, 180, 181, 190, 192, 196, 206, 210, 213, 214, 216, 217, 218, 222, 223, 224, 227, 230, 233, 234, 236, 237, 239, 240, 243, 245, 246, 252, 253, 258, 259, 260, 263, 266, 276, 281, 292, 295, 297, 299, 300, 304, 305, 306], "automatiqu": 224, "automorphisms_of_the_symmetric_and_alternating_group": 52, "autonom": 243, "autos": [61, 108], "autoscal": 213, "autosimplif": [69, 236, 239], "autowrap": [110, 252, 260, 264, 290], "auxiliari": [50, 96, 135, 140, 142, 145, 154, 243, 259], "auxiliary_circl": 79, "auxiliary_eq": [135, 145, 150], "avail": [2, 5, 7, 8, 9, 13, 15, 16, 22, 29, 35, 38, 39, 40, 49, 50, 60, 61, 68, 69, 74, 77, 96, 105, 109, 110, 111, 142, 156, 159, 213, 217, 218, 220, 223, 227, 228, 233, 235, 237, 239, 240, 245, 246, 247, 248, 252, 253, 258, 265, 266, 270, 271, 292, 297, 304], "averag": [86, 96, 109, 220, 247], "aversin": 24, "avoid": [5, 11, 12, 13, 15, 23, 24, 29, 32, 42, 50, 51, 69, 70, 75, 94, 96, 99, 105, 108, 111, 146, 156, 186, 210, 211, 215, 216, 217, 223, 227, 228, 235, 239, 243, 245, 247, 251, 260, 263, 266, 297, 298], "avoid_square_root": 42, "aw": 291, "awai": [4, 14, 49, 51, 70, 117, 118, 121, 130, 138, 144, 222, 227, 292], "awang": 221, "awar": [2, 3, 4, 12, 14, 15, 16, 23, 48, 69, 73, 99, 105, 237, 247, 266], "awhil": 140, "ax": [13, 14, 29, 30, 32, 34, 42, 70, 73, 79, 82, 94, 100, 105, 117, 123, 134, 135, 141, 146, 164, 189, 202, 210, 211, 212, 213, 216, 224, 240, 243, 246, 248, 249, 252, 271, 273, 275, 276, 278, 280, 291, 292, 305], "ax2p": 240, "axb": 191, "axc": 191, "axhlin": 13, "axi": [13, 36, 42, 62, 74, 75, 79, 80, 82, 83, 85, 91, 94, 96, 101, 105, 117, 121, 123, 128, 130, 134, 138, 140, 141, 142, 144, 146, 149, 150, 151, 153, 156, 159, 160, 161, 164, 165, 189, 201, 202, 204, 206, 208, 210, 211, 213, 218, 246, 271, 273, 276, 278, 281, 291], "axial": [117, 161], "axial_forc": 117, "axial_stress": 117, "axiom": [60, 214], "axiom_of_power_set": 235, "axis_cent": 213, "axis_orient": [271, 276], "axis_orienter1": 273, "axis_orienter2": 273, "axis_orienter3": 273, "axis_point": 291, "axisorient": [271, 273, 276], "az": [70, 125, 240], "azbz": [211, 276], "azimuth": 127, "a\u2080": 305, "a\u2080\u2080": 34, "a\u2080\u2081": 34, "a\u2080\u2082": 34, "a\u2080\u2083": 34, "a\u2081": [34, 118, 305], "a\u2081\u2080": 34, "a\u2081\u2081": 34, "a\u2081\u2082": 34, "a\u2081\u2083": 34, "a\u2082": [34, 118, 305], "a\u2082\u2080": 34, "a\u2082\u2081": 34, "a\u2082\u2082": 34, "a\u2082\u2083": 34, "a\u2083": [34, 305], "a\u2083\u2080": 34, "a\u2083\u2081": 34, "a\u2083\u2082": 34, "a\u2083\u2083": 34, "a\u2084": 305, "b": [0, 11, 12, 14, 15, 16, 18, 22, 23, 24, 27, 29, 30, 32, 34, 42, 49, 50, 51, 53, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 92, 94, 96, 98, 99, 100, 101, 105, 109, 111, 112, 113, 115, 117, 118, 119, 121, 123, 125, 131, 132, 134, 135, 136, 137, 138, 140, 142, 146, 147, 156, 157, 159, 161, 164, 169, 171, 173, 175, 180, 181, 184, 189, 190, 191, 192, 201, 202, 204, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 227, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 258, 261, 262, 265, 268, 271, 273, 274, 275, 276, 277, 291, 292, 295, 297, 301, 305, 306], "b0": [65, 77, 218, 237, 243], "b1": [60, 65, 77, 109, 117, 118, 131, 142, 159, 202, 218, 227, 237, 240, 243, 277], "b11": 159, "b12": 159, "b1_frame": 131, "b1prime": 237, "b2": [34, 77, 109, 117, 118, 131, 142, 159, 202, 216, 218, 227, 237, 240, 243, 277], "b21": 159, "b22": 159, "b2_frame": 131, "b3": [98, 142, 159, 202, 277], "b4": 98, "b6bius_funct": [74, 109], "b6bius_inversion_formula": 72, "b_": [60, 65, 67, 69, 74, 77, 94, 101, 125, 229, 237, 240, 248, 249], "b_0": [65, 70, 74, 237, 240, 243], "b_1": [60, 67, 77, 91, 94, 214, 237, 240, 243, 305], "b_2": [60, 67, 77, 91, 237, 243], "b_cm": [137, 142], "b_eq": 245, "b_f": [137, 142], "b_frame": [131, 134], "b_i": [60, 65, 67, 94, 214, 237], "b_ij": 252, "b_interv": 235, "b_ixx": 131, "b_j": [65, 67, 77, 94, 237], "b_k": [60, 67, 70, 74, 77, 229, 230], "b_m": [77, 94, 245], "b_mass": 131, "b_masscent": 131, "b_muscl": 115, "b_n": [70, 74, 98, 214, 230], "b_op": 156, "b_q": [77, 94, 237, 305], "b_r": 60, "b_x": [202, 204, 211, 253], "b_y": [202, 204, 211, 253], "b_z": [202, 211, 253], "ba": [74, 265], "baa": 265, "bab": 57, "babbag": 70, "babi": [74, 109, 265], "back": [0, 24, 32, 33, 35, 49, 50, 65, 68, 69, 70, 75, 77, 84, 85, 91, 93, 94, 96, 97, 105, 109, 110, 125, 186, 207, 210, 213, 216, 217, 222, 223, 225, 227, 237, 243, 245, 248, 249, 291], "backcolor": [97, 207], "backend": [13, 50, 97, 110, 123, 140, 145, 147, 153, 207, 224, 259, 266], "background": [77, 97, 207, 210, 303], "backport": 3, "backslash": [4, 69, 227], "backtick": [4, 5, 8], "backtrac": 227, "backtrack": 67, "backward": [2, 20, 48, 69, 105, 125, 140, 227, 265, 305], "backward_diff": 125, "bad": [8, 11, 12, 13, 14, 68, 109, 194, 216, 227], "badli": 60, "baij": 192, "bailli": 109, "baji": 192, "balanc": [70, 158, 214, 247, 258, 291], "ball": 134, "ban275": 105, "banana": 265, "band": [105, 108], "bar": [13, 50, 77, 143, 152, 181, 187, 268, 288], "bar_10": 187, "bar_4": 187, "bar_5": 187, "bare": [70, 135], "barei": 105, "bareiss": [105, 216], "bareiss_algorithm": 216, "barn": 77, "barri": 265, "base": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 22, 24, 29, 40, 42, 44, 45, 48, 50, 51, 58, 59, 60, 65, 66, 67, 69, 70, 72, 74, 75, 76, 77, 80, 82, 85, 92, 96, 97, 98, 99, 100, 101, 109, 110, 111, 112, 113, 115, 122, 130, 131, 134, 137, 138, 140, 141, 142, 144, 159, 160, 161, 170, 172, 176, 177, 181, 187, 188, 190, 192, 194, 197, 198, 200, 202, 204, 207, 208, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 227, 229, 234, 235, 236, 237, 239, 240, 243, 245, 247, 251, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 267, 271, 274, 275, 278, 292, 300, 305], "base1": 65, "base10": 239, "base2": 65, "base2a": 65, "base_a": 65, "base_char": 117, "base_dim": 194, "base_f": 65, "base_i": 65, "base_id": [214, 218], "base_oneform": 71, "base_ord": 67, "base_req": 50, "base_scalar": 71, "base_seq": 267, "base_set": 235, "base_solution_linear": 240, "base_unit": 200, "base_vector": [71, 271], "basebackend": 213, "basecovarderivativeop": 71, "basedyad": [271, 275], "baselin": 227, "basenam": [258, 259, 260], "basepolynomialerror": 220, "basescalar": [276, 278], "basescalarfield": 71, "baseseri": 213, "baseswap": 60, "basevector": [271, 275, 276], "basevectorfield": 71, "basi": [3, 69, 71, 98, 101, 105, 131, 137, 149, 151, 177, 186, 187, 189, 192, 194, 197, 200, 201, 202, 208, 210, 212, 214, 216, 218, 223, 226, 237, 239, 240, 245, 246, 248, 253, 274, 275, 278, 303], "basic": [2, 3, 4, 5, 7, 10, 11, 13, 15, 22, 24, 38, 42, 44, 49, 50, 51, 57, 60, 64, 67, 68, 72, 75, 85, 87, 92, 93, 94, 99, 102, 104, 106, 113, 125, 134, 140, 142, 145, 154, 155, 157, 159, 160, 166, 176, 190, 197, 200, 205, 208, 209, 211, 213, 214, 216, 218, 219, 220, 222, 224, 225, 227, 228, 234, 239, 240, 243, 244, 245, 246, 247, 258, 260, 265, 266, 269, 277, 278, 279, 286, 288, 289, 295, 296, 297, 298, 303], "basic_orbit": [60, 67], "basic_root": 98, "basic_stabil": 60, "basic_transvers": [60, 67], "basis_el": 222, "basis_element_pullback": 222, "basis_st": 177, "batcheld": 13, "bateman": [77, 96], "batista": 70, "batman": 70, "battl": 299, "baz": 50, "bb": [74, 212, 239, 265], "bb1": 239, "bb2": 239, "bbp_pi": 109, "bbra": 192, "bby": 265, "bc": [42, 81, 121, 265, 268, 277], "bc_deflect": [117, 118], "bc_new": 121, "bc_slope": [117, 118], "bcd": 265, "bch": 70, "bd": [42, 121, 192], "bd_new": 121, "be1": 239, "be2": 239, "bead": 265, "beam": [85, 121, 161, 164, 288], "beam3d": 117, "beamparamet": 161, "beams3d": 117, "bear": [5, 22], "beat": 70, "becam": [70, 152], "becaus": [2, 3, 4, 5, 8, 11, 12, 13, 14, 15, 16, 18, 22, 23, 24, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 46, 50, 61, 68, 69, 70, 75, 81, 85, 86, 94, 96, 99, 102, 105, 109, 111, 112, 113, 115, 130, 134, 140, 141, 142, 145, 146, 172, 180, 192, 194, 196, 197, 210, 213, 214, 216, 217, 218, 220, 222, 223, 224, 226, 227, 230, 234, 237, 239, 240, 243, 244, 245, 246, 256, 258, 259, 261, 265, 266, 268, 275, 292, 295, 297, 299, 300, 301, 304, 305, 306], "beckerweispfenning93": 220, "becom": [0, 3, 4, 5, 11, 12, 13, 15, 16, 20, 22, 60, 65, 68, 69, 70, 73, 92, 97, 105, 111, 130, 140, 207, 210, 214, 215, 217, 218, 224, 227, 230, 236, 243, 246, 247, 253, 266, 268, 274, 276, 295, 305], "bee": 268, "been": [3, 11, 14, 16, 22, 24, 29, 48, 50, 51, 55, 60, 61, 62, 65, 68, 69, 70, 75, 81, 94, 96, 105, 109, 110, 111, 112, 115, 116, 117, 131, 134, 135, 140, 142, 144, 152, 156, 157, 165, 177, 187, 189, 197, 208, 209, 210, 211, 214, 217, 218, 222, 224, 225, 227, 229, 234, 237, 239, 244, 245, 246, 248, 249, 257, 258, 260, 261, 263, 265, 268, 275, 278, 292, 297, 298, 300, 301, 305], "befor": [3, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 22, 23, 24, 36, 38, 40, 50, 60, 61, 63, 65, 69, 70, 71, 77, 97, 105, 109, 111, 117, 118, 129, 136, 140, 142, 144, 145, 146, 149, 150, 156, 159, 161, 192, 201, 207, 211, 215, 216, 217, 222, 223, 227, 228, 234, 235, 239, 240, 243, 245, 246, 247, 254, 258, 261, 265, 266, 275, 291, 292, 298, 299, 300, 305], "beforehand": [135, 140, 260], "begin": [4, 7, 11, 12, 13, 16, 22, 24, 27, 30, 34, 36, 42, 69, 70, 74, 75, 77, 94, 101, 105, 109, 111, 115, 146, 154, 155, 156, 157, 188, 197, 201, 202, 211, 212, 216, 227, 237, 240, 243, 244, 246, 247, 258, 268, 291, 297, 299, 301, 305], "beginn": [240, 242, 243, 245, 246, 306], "behav": [13, 16, 46, 48, 69, 70, 75, 77, 109, 223, 235, 239, 245, 248, 254, 292, 301], "behavior": [2, 3, 12, 13, 14, 15, 16, 24, 60, 69, 74, 77, 96, 111, 128, 129, 152, 156, 187, 214, 215, 222, 223, 227, 228, 232, 234, 236, 239, 256, 259, 261, 265, 266, 291, 297], "behavior1": 3, "behavior2": 3, "behaviour": [13, 22, 94, 99, 131, 217, 220, 224, 230, 233], "behind": [17, 39, 126, 142, 156, 196, 216, 236, 239, 243, 246, 288, 297], "bei": 239, "being": [3, 5, 12, 14, 15, 16, 18, 22, 23, 46, 48, 50, 60, 61, 67, 68, 69, 70, 74, 75, 77, 79, 81, 82, 85, 86, 94, 99, 105, 106, 109, 117, 118, 121, 129, 130, 138, 140, 142, 144, 156, 157, 159, 160, 188, 197, 201, 204, 208, 210, 211, 212, 213, 214, 216, 217, 218, 222, 223, 224, 226, 227, 236, 237, 239, 240, 243, 244, 245, 246, 247, 253, 256, 258, 262, 263, 265, 266, 268, 271, 276, 280, 292, 299, 301], "beings": 4, "belaso": 70, "believ": [106, 109, 216], "belittl": 5, "bell": [74, 176, 229, 265, 292], "bell_numb": 74, "bell_seq": 229, "bellnumb": 74, "bellpolynomi": 74, "belong": [5, 12, 22, 46, 49, 60, 65, 69, 92, 105, 137, 192, 202, 210, 213, 214, 216, 217, 218, 220, 222, 223, 234, 235, 239, 240, 246, 253], "below": [2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 16, 22, 24, 27, 29, 33, 36, 37, 38, 40, 48, 49, 50, 59, 60, 61, 69, 70, 74, 76, 77, 78, 79, 85, 86, 92, 94, 96, 105, 108, 109, 111, 115, 117, 118, 119, 125, 130, 131, 134, 135, 136, 137, 138, 140, 142, 144, 146, 147, 148, 153, 154, 155, 156, 157, 159, 186, 192, 197, 202, 211, 212, 213, 214, 216, 223, 227, 228, 230, 236, 239, 240, 242, 243, 244, 245, 246, 247, 258, 260, 265, 266, 268, 276, 278, 281, 282, 292, 301, 305], "below_fermi": [77, 192], "ben": 105, "benchmark": [13, 144, 158], "bend": [79, 85, 117, 120, 288], "bender": 243, "bending_mo": [117, 118], "benefici": 12, "benefit": [0, 2, 14, 24, 31, 50, 129, 156, 207, 216], "bengt": [20, 48], "benini": 247, "benini_distribut": 247, "beninidistribut": 247, "beq": 245, "berkelei": 105, "berkowitz": [105, 216], "berkowitz_det": 105, "berkowitz_eigenv": 105, "berkowitz_minor": 105, "berlekamp": 220, "berlin": 220, "bernd": 105, "bernoulli": [74, 77, 223, 227, 243, 245, 247], "bernoulli_c_poli": 223, "bernoulli_differential_equ": 243, "bernoulli_distribut": 247, "bernoulli_integr": 243, "bernoulli_numb": 74, "bernoulli_poli": [74, 223], "bernoulli_polynomi": [74, 223], "bernoulli_process": 247, "bernoullidistribut": 247, "bernoullinumb": 74, "bernoullipolynomi": 74, "bernoulliprocess": 247, "bertrand": 109, "besid": [7, 52, 69, 220, 245], "bess": [4, 77, 227, 239, 243, 247], "bessel": [4, 5, 75, 87, 96, 223, 239, 243, 247, 299], "bessel_funct": [4, 77], "besselbas": [4, 77], "besselj": [4, 77, 91, 227, 239, 243, 299], "besseljzero": 77, "besselk": [4, 77, 227, 247], "besselsimp": 239, "best": [3, 7, 11, 12, 13, 16, 17, 29, 33, 35, 36, 39, 40, 50, 69, 77, 94, 96, 110, 191, 213, 224, 227, 236, 237, 239, 243, 246, 251, 259, 293, 297, 298, 304, 305], "best_hint": 243, "beta": [4, 16, 50, 60, 69, 96, 115, 130, 189, 202, 212, 222, 224, 227, 243, 247, 292], "beta_": 60, "beta_1_2": 12, "beta_distribut": 247, "beta_funct": 77, "beta_prime_distribut": 247, "beta_r": 237, "betabinomi": 247, "betabinomialdistribut": 247, "betadistribut": 247, "betafunct": 77, "betanoncentr": 247, "betaprim": 247, "betaprimedistribut": 247, "better": [2, 3, 4, 8, 11, 12, 13, 14, 15, 16, 22, 23, 24, 42, 49, 50, 61, 69, 73, 77, 96, 99, 125, 142, 172, 200, 213, 216, 217, 218, 230, 234, 235, 236, 237, 243, 244, 245, 246, 247, 259, 265, 266, 299, 305], "betweem": 292, "between": [2, 3, 9, 12, 13, 14, 15, 19, 23, 24, 29, 33, 49, 50, 59, 60, 61, 63, 67, 69, 71, 74, 77, 79, 81, 82, 83, 84, 85, 86, 96, 98, 99, 101, 102, 105, 109, 110, 111, 112, 113, 115, 121, 122, 123, 125, 130, 134, 137, 138, 140, 141, 142, 145, 149, 151, 153, 156, 157, 159, 160, 161, 164, 165, 171, 178, 180, 181, 182, 186, 189, 190, 191, 192, 195, 196, 197, 201, 202, 203, 204, 206, 208, 210, 211, 213, 214, 216, 218, 220, 222, 223, 227, 229, 239, 243, 244, 245, 246, 247, 248, 261, 266, 271, 274, 275, 278, 280, 291, 292, 297], "betweensubtleshadingandtheabsenc": 70, "bewar": [14, 48, 77], "beyer": 265, "beyond": [2, 11, 12, 14, 22, 31, 63, 85, 109, 156, 214, 217, 236, 239, 301], "bf": [121, 159], "bf02985731": 55, "bf0e81e12a2f75711c30f0788daf4e58f72b2a41": 11, "bfb0055738": 70, "bg": 243, "bh": 243, "bi": [42, 69, 75, 77, 96, 211, 234, 243], "bianchi": 253, "bias": 18, "bibtex": 0, "biceps_activ": 291, "biceps_pathwai": 291, "bicycl": [143, 152, 158, 288], "bidiagn": 105, "bidiagon": 105, "bidiagonal_decomposit": 105, "bifid": 70, "bifid5": 70, "bifid5_squar": 70, "bifid6_squar": 70, "bifid_ciph": 70, "big": [13, 14, 16, 20, 22, 53, 69, 71, 109, 159, 172, 212, 226, 227, 234, 249, 268, 295, 297], "big_trig_ident": 16, "bigg": 27, "bigger": [24, 50, 69, 74, 105, 237, 243, 305], "biggest": 14, "bigl": 230, "bigr": 230, "biholomorph": 94, "biject": [61, 63, 70, 105, 214], "bilater": 96, "bilinear": 125, "bin": [1, 2, 4, 8, 9, 11, 12, 97, 227, 258, 265], "bin_prefix": 198, "bin_to_grai": 53, "binari": [11, 12, 16, 23, 24, 32, 46, 50, 53, 64, 69, 70, 96, 99, 109, 110, 186, 198, 214, 217, 223, 240, 259, 262, 265], "binary_cal": 259, "binary_func": [50, 259], "binary_funct": [50, 110, 259], "binary_partit": 265, "binaryquadrat": 240, "bincoeff": [74, 109, 227], "bind": [2, 50, 227, 259], "bind_c": 50, "binet": 73, "binom": [74, 109, 111, 247, 305], "binomi": [68, 69, 73, 74, 77, 109, 111, 223, 227, 232, 239, 243, 247, 265, 305], "binomial_coeffici": [74, 109], "binomial_coefficients_list": 109, "binomial_distribut": 247, "binomial_mod": 109, "binomialdistribut": 247, "binop": 50, "bio": 70, "biolog": [112, 292], "biomechan": [112, 113, 115, 288], "biomed": [112, 113, 115, 291, 292], "biproduct": 214, "bird": 105, "bisect": [35, 109, 223, 245], "bisector": [82, 85], "bit": [8, 12, 20, 24, 49, 50, 53, 69, 70, 72, 99, 105, 109, 186, 197, 214, 216, 223, 237, 240, 246, 258, 265, 275, 276, 292, 304], "bitcount": 69, "bitlist": [53, 64], "bitlist_from_subset": 64, "bitmap": 227, "bitmask": 72, "bitstr": 53, "bitwis": [23, 72, 99], "bitwiseand": 227, "bitwiseor": 227, "bitwisexor": 227, "biu": 247, "bivari": [220, 226, 243, 247], "bixk": 96, "bizarr": 246, "bket": 192, "bl": [135, 144, 154, 159], "blaback": 11, "black": [97, 117, 177, 188, 207, 227, 304], "blacklist": 258, "blais": 70, "blajer": 158, "blajer1994": [156, 158], "blank": [4, 11, 12, 111, 213], "blanklin": 12, "blazingli": 224, "bleicher": 109, "blindli": 237, "blob": 96, "block": [3, 4, 14, 27, 38, 50, 58, 60, 70, 105, 134, 140, 142, 144, 147, 202, 211, 216, 240, 266, 275, 292], "block_": 60, "block_collaps": 101, "block_fram": 147, "blockdiagmatrix": [101, 105], "blockmatrix": [101, 105], "blockwis": 105, "blog": [12, 13, 24, 50, 74, 105, 240, 246], "blogg": 11, "blogpost": 94, "blow": 109, "blowup": [105, 216], "blue": [123, 153, 213, 227], "blurb": [60, 247], "bl\u00e5b\u00e4ck": 11, "bm": [77, 291], "bmatrix": [27, 36, 42, 101, 105, 111, 146, 154, 155, 156, 201, 202, 211, 240, 291], "bmd": 85, "bmod": [70, 223, 227], "bmtwmg": 70, "bn": 230, "bo": 227, "bob": [70, 134, 140], "bob_fram": 140, "bob_mass": 140, "bob_masscent": 140, "bode": 27, "bode_magnitude_numerical_data": 123, "bode_magnitude_plot": [27, 123], "bode_phase_numerical_data": 123, "bode_phase_plot": [27, 123], "bode_plot": 123, "bodi": [11, 16, 50, 94, 111, 128, 129, 130, 131, 133, 134, 135, 140, 142, 144, 145, 146, 147, 149, 152, 153, 154, 159, 160, 195, 202, 206, 210, 211, 271, 273, 288, 291, 292], "body1": 137, "body2": 137, "body3": 137, "body_b": 142, "body_b_f": 142, "body_inertia": 131, "body_orient": [271, 273, 276], "body_orienter1": 273, "body_orienter2": 273, "body_orienter3": 273, "bodybas": 140, "bodyd": [149, 150, 151], "bodyfork": 144, "bodyfram": 144, "bodylist": [149, 150], "bodyorient": [271, 273, 276], "bodywf": 144, "bodywr": 144, "boer": 197, "boil": 12, "bokeh": 13, "bold": 227, "bold_nam": 227, "boltzmann": 196, "bonazzi": 0, "bone": 292, "bonn": 51, "book": [7, 9, 49, 60, 70, 75, 135, 142, 145, 153, 157, 158, 177, 221, 226, 227, 298], "books_articl": 247, "bool": [14, 22, 42, 48, 50, 52, 55, 65, 67, 69, 70, 72, 75, 96, 97, 99, 101, 105, 109, 111, 113, 115, 123, 135, 136, 140, 175, 176, 204, 207, 213, 216, 222, 223, 225, 227, 228, 229, 234, 235, 239, 242, 247, 259, 260, 265, 266, 271, 274, 297], "bool1": 99, "bool2": 99, "bool_": 50, "bool_map": 99, "bool_maxterm": 99, "bool_minterm": 99, "bool_monomi": 99, "boolalg": [69, 99], "boolean": [13, 14, 15, 24, 25, 31, 36, 43, 44, 45, 46, 47, 48, 50, 69, 75, 79, 83, 84, 85, 86, 97, 105, 106, 109, 117, 123, 125, 135, 140, 177, 202, 204, 207, 213, 216, 218, 220, 222, 224, 227, 239, 243, 245, 247, 265, 274, 301], "booleanfals": 99, "booleanfunct": 227, "booleankind": [15, 69], "booleantru": 99, "boost": 50, "boost_mp50": 50, "border": [79, 85], "borrow": 262, "bose": 221, "bose03": 221, "boson": 192, "bosonbra": 192, "bosonicbasi": 192, "bostan": 224, "bot": [3, 11], "botanist": 247, "both": [0, 2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 16, 19, 22, 23, 24, 29, 31, 32, 33, 36, 41, 42, 48, 49, 50, 61, 64, 65, 67, 68, 69, 70, 74, 75, 77, 84, 93, 94, 96, 99, 105, 109, 111, 115, 116, 117, 118, 125, 130, 131, 134, 135, 137, 138, 140, 144, 146, 147, 153, 156, 164, 165, 176, 182, 189, 192, 196, 197, 202, 206, 210, 211, 213, 214, 215, 217, 218, 220, 222, 223, 225, 226, 227, 229, 234, 235, 236, 237, 239, 240, 243, 245, 246, 248, 252, 258, 260, 265, 266, 271, 273, 291, 292, 295, 298, 299, 300, 305, 306], "both_posit": 23, "both_positive_best": 23, "both_positive_bett": 23, "bother": [14, 77, 300], "bottom": [11, 59, 60, 69, 70, 85, 105, 108, 140, 222, 227, 236, 281], "bottom_fac": 281, "bottom_up": [13, 69], "bound": [15, 31, 46, 50, 51, 68, 69, 78, 79, 80, 82, 84, 85, 96, 109, 137, 190, 213, 216, 218, 220, 222, 223, 227, 233, 243, 245, 246, 247, 252, 262, 268, 271, 292], "bound_symbol": [69, 96], "boundari": [52, 80, 82, 115, 117, 118, 206, 224, 235, 243, 247], "boundary_condit": 117, "bounded_pareto_distribut": 247, "boundedpareto": 247, "box": [172, 177, 179, 188, 190, 281, 288], "bp": [211, 243], "bpp": 211, "bpr": 70, "bpsw": 109, "bq": [77, 215, 216, 237], "br": 36, "bra": [111, 175, 180, 181, 182, 184, 186, 187, 190, 192], "brabas": [180, 181, 187, 190], "brace": [4, 74, 142, 227], "bracelet": [5, 265], "bracket": [16, 24, 35, 37, 61, 69, 77, 190, 192, 202, 227], "bradford": 220, "brain": [262, 292], "branch": [12, 23, 48, 69, 74, 75, 76, 77, 224, 237, 246, 300, 305], "branchpoint": 94, "brandei": 247, "brass": 70, "braun": 243, "breach": [94, 237], "breadth": [50, 69, 247], "break": [3, 4, 11, 12, 13, 14, 24, 49, 50, 61, 69, 70, 109, 210, 224, 227, 235, 265], "break_": 50, "breakag": 3, "breaker": 69, "breaktoken": 50, "bremen": 49, "bremner": 216, "brent": [109, 262], "brew": 8, "brewster": 165, "brewster_angl": 165, "brgc": 53, "brian": [0, 178], "bridg": [102, 119, 121, 142, 266], "brief": [11, 50, 246, 258, 280], "briefli": [22, 215, 220], "brien": [55, 60, 67], "bring": [5, 94, 135, 150, 216, 230, 239, 301], "brito": 212, "broad": [69, 300], "broadcast": [50, 110, 227, 252, 259], "broader": 217, "brocard": 109, "broke": 12, "broken": [12, 13, 58, 69, 210, 227, 243, 268], "bronstein": [96, 221, 223, 229, 245], "bronstein93": [221, 223], "brought": [156, 247], "brown": [220, 221, 247], "brown71": [220, 221], "brown78": [220, 221], "brownian": 247, "browntraub71": [220, 221], "brows": [7, 9], "browser": 8, "bruce": 221, "bruce97": 221, "brute": [20, 236, 240], "bryan": [134, 202, 271, 273], "brychkov": [94, 237], "bsd": [0, 2, 26, 299], "bsg": [60, 65, 67, 253], "bsgs_direct_product": 65, "bspline": 77, "bspline_basi": 77, "bspline_basis_set": 77, "bu_2": 240, "bubbl": 176, "buchberg": [215, 220, 221, 223], "buchberger01": [221, 223], "bug": [3, 4, 7, 11, 12, 14, 22, 24, 40, 48, 70, 217, 235, 243, 246, 297], "build": [4, 5, 6, 10, 11, 12, 14, 19, 44, 45, 50, 69, 71, 77, 99, 159, 186, 197, 202, 211, 214, 219, 222, 223, 224, 234, 247, 275, 294, 297, 300], "build_expression_tre": 234, "build_opt": 220, "built": [0, 2, 4, 5, 8, 14, 15, 16, 19, 43, 45, 51, 69, 75, 96, 105, 142, 159, 215, 218, 227, 228, 232, 243, 246, 247, 253, 262, 265, 266, 299, 300, 304], "builtin": [14, 69, 218, 227, 235, 268, 304], "bulk": [220, 237], "bullet": [5, 11, 12], "bulletin": 96, "bunch": 223, "bundl": 222, "burden": [3, 227], "burtonl": 61, "butler": [65, 253], "button": [9, 12, 213, 259], "bv_2": 240, "bvar": 304, "bw": 291, "bx": [29, 30, 94, 210, 211, 247, 253, 276], "bxc": 191, "bxy": [32, 240], "by_nam": [218, 222, 223], "bypass": [24, 223, 243], "bytesio": 227, "bz": [94, 210, 240, 253], "c": [0, 2, 7, 8, 9, 12, 14, 15, 16, 20, 22, 24, 27, 29, 30, 32, 34, 41, 42, 48, 49, 53, 54, 58, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 74, 75, 77, 78, 79, 81, 82, 83, 85, 86, 92, 94, 96, 98, 99, 101, 105, 109, 110, 111, 117, 118, 119, 121, 125, 127, 129, 130, 131, 132, 134, 135, 137, 142, 147, 149, 150, 151, 153, 155, 156, 159, 161, 165, 171, 172, 173, 176, 178, 181, 186, 189, 191, 192, 197, 201, 202, 206, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 234, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 248, 252, 253, 259, 260, 262, 265, 268, 271, 273, 274, 275, 276, 277, 278, 281, 291, 292, 295, 297, 304, 305, 306], "c0": [101, 105, 113, 234, 243, 245, 292], "c1": [4, 12, 20, 36, 70, 79, 86, 101, 105, 113, 134, 178, 192, 235, 240, 243, 245, 277, 292, 306], "c10": [113, 292], "c11": [113, 292], "c2": [36, 52, 70, 79, 86, 101, 105, 113, 134, 178, 192, 235, 243, 247, 274, 277, 292, 306], "c3": [20, 36, 52, 72, 74, 98, 101, 105, 109, 113, 216, 243, 247, 277, 292, 306], "c4": [52, 98, 101, 105, 113, 243, 292], "c5": [20, 113, 243, 292], "c6": [113, 218, 292], "c7": [20, 60, 113, 292], "c77": 109, "c8": [113, 292], "c89": [50, 227, 260], "c89codeprint": 227, "c9": [113, 292], "c99": [50, 227, 260], "c99codeprint": [24, 50, 227], "c_": [20, 30, 36, 70, 92, 94, 113, 211, 215, 243, 292], "c_0": [20, 70, 92, 113, 292], "c_0_fl_m_act_muscl": 115, "c_0_fl_m_pas_muscl": 115, "c_0_fl_t_muscl": 115, "c_0_fv_m_muscl": 115, "c_1": [20, 36, 70, 92, 94, 113, 234, 237, 243, 292], "c_10_fl_m_act_muscl": 115, "c_11_fl_m_act_muscl": 115, "c_1_fl_m_act_muscl": 115, "c_1_fl_m_pas_muscl": 115, "c_1_fl_t_muscl": 115, "c_1_fv_m_muscl": 115, "c_2": [20, 36, 52, 94, 113, 234, 243, 292], "c_2_fl_m_act_muscl": 115, "c_2_fl_t_muscl": 115, "c_2_fv_m_muscl": 115, "c_3": [52, 94, 113, 243, 292], "c_3_fl_m_act_muscl": 115, "c_3_fl_t_muscl": 115, "c_3_fv_m_muscl": 115, "c_4": [52, 94, 113, 292], "c_4_fl_m_act_muscl": 115, "c_5": [94, 113, 292], "c_5_fl_m_act_muscl": 115, "c_6": [94, 113, 292], "c_6_fl_m_act_muscl": 115, "c_7": [94, 113, 292], "c_7_fl_m_act_muscl": 115, "c_8": [94, 113, 292], "c_8_fl_m_act_muscl": 115, "c_9": [94, 113, 292], "c_9_fl_m_act_muscl": 115, "c_code": [50, 260], "c_explicit": 252, "c_frame": 134, "c_g": 60, "c_header": [50, 260], "c_i": [20, 94, 234, 237, 243], "c_inherit": 252, "c_j": [91, 94, 237], "c_k": 70, "c_kn": 109, "c_m": 291, "c_masscent": 134, "c_mat": 27, "c_n": [74, 77, 98, 223, 243], "c_name": [50, 260], "c_o": 291, "c_r": [51, 237], "c_t": 70, "c_u": 94, "c_w": 237, "c_x": 211, "c_xr": 71, "c_xy": 71, "c_y": 211, "c_z": 211, "ca": [5, 40, 70, 74, 77, 96, 109, 112, 226, 227, 265, 292], "cab": 248, "cabl": 288, "cach": [12, 22, 74, 94, 214, 223, 227, 256, 261, 262, 267], "cache_length": 267, "cacheit": 69, "cacr": 70, "cacr2006": 70, "cadabra": 253, "caesar": 70, "caesar_ciph": 70, "caesarsmethod": 70, "caeser": 70, "cafe": 96, "calc_transform": 105, "calcul": [2, 14, 16, 20, 22, 35, 36, 42, 48, 51, 61, 67, 69, 70, 71, 72, 73, 74, 75, 77, 79, 81, 82, 83, 85, 86, 96, 101, 105, 109, 117, 118, 127, 129, 130, 131, 135, 140, 141, 144, 146, 161, 164, 165, 168, 171, 187, 188, 189, 190, 192, 193, 201, 202, 203, 204, 206, 208, 210, 212, 213, 214, 216, 217, 218, 220, 222, 223, 224, 229, 234, 243, 247, 251, 259, 260, 266, 271, 274, 278, 280, 291, 292, 295, 301, 304], "calculate_seri": 234, "calculu": [31, 33, 69, 74, 96, 159, 208, 236, 247, 277, 278, 279, 282, 283, 296, 298, 303], "call": [2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 19, 20, 22, 23, 24, 29, 30, 33, 34, 35, 36, 37, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 67, 69, 70, 72, 73, 74, 76, 77, 79, 84, 85, 87, 92, 94, 96, 98, 99, 100, 101, 102, 105, 107, 108, 109, 111, 113, 115, 116, 117, 118, 125, 129, 130, 134, 138, 142, 144, 146, 153, 156, 157, 182, 184, 187, 192, 196, 197, 202, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 229, 234, 235, 237, 239, 240, 242, 243, 245, 246, 247, 248, 249, 251, 253, 254, 256, 258, 259, 260, 261, 262, 263, 265, 266, 268, 271, 274, 275, 278, 280, 295, 297, 299, 300, 301, 304, 305, 306], "callabl": [2, 14, 16, 36, 50, 60, 105, 111, 135, 136, 177, 222, 227, 228, 239, 256, 259, 260, 265, 266, 267, 292], "callback": 269, "caller": [24, 216], "calori": 197, "caltech": 96, "caltechauthor": 96, "calulc": 271, "cambridg": [221, 240], "came": [152, 300], "camera": 213, "can": [0, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 125, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 145, 146, 147, 150, 152, 153, 154, 155, 156, 157, 159, 160, 164, 165, 166, 171, 173, 176, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 258, 259, 260, 262, 263, 265, 266, 267, 268, 274, 275, 276, 277, 278, 280, 281, 291, 292, 294, 295, 297, 299, 300, 301, 303, 304, 305, 306], "can_split": 111, "can_transf_matrix": 194, "canada": 221, "canberra": 84, "canberra_dist": 84, "cancel": [12, 14, 20, 24, 27, 50, 69, 73, 77, 85, 94, 96, 105, 109, 125, 126, 130, 216, 217, 218, 220, 223, 226, 239, 245, 299], "cancel_denom": 216, "cancel_denom_elementwis": 216, "candid": [11, 33, 60, 69, 105, 109, 220, 239], "canfield": 262, "cannon": 51, "cannot": [2, 3, 4, 5, 12, 13, 14, 15, 16, 19, 23, 24, 29, 32, 35, 40, 43, 44, 45, 46, 47, 48, 50, 61, 66, 68, 69, 71, 73, 75, 79, 81, 82, 84, 86, 91, 96, 98, 100, 102, 105, 107, 109, 111, 112, 125, 130, 138, 141, 187, 195, 197, 201, 210, 211, 213, 216, 218, 220, 222, 223, 224, 227, 234, 235, 239, 240, 242, 243, 245, 246, 247, 248, 256, 258, 259, 260, 265, 271, 273, 292, 299, 300, 301, 305, 306], "canon": [4, 14, 15, 22, 31, 50, 53, 58, 60, 61, 65, 69, 70, 71, 75, 85, 94, 99, 105, 109, 111, 113, 135, 169, 173, 192, 194, 197, 199, 216, 220, 228, 235, 236, 239, 243, 245, 247, 253, 265, 305], "canon_bp": 253, "canonic": [14, 15, 56, 69, 236, 253, 283], "canonical_eq": 243, "canonical_form": 247, "canonical_fre": 65, "canonical_normal_form": 99, "canonical_od": 243, "canonical_system": 243, "canonical_vari": 69, "canonicalize_na": 65, "canonicalz": 70, "cantilev": [117, 118], "cantor": 220, "canva": 213, "cap": [70, 73, 192, 235, 246], "capabl": [7, 13, 15, 22, 35, 48, 50, 69, 73, 81, 94, 109, 117, 118, 152, 159, 213, 224, 227, 246, 292, 295, 298, 299, 305, 306], "capit": [15, 68, 70, 125, 243], "capital_pi_not": 68, "capitalis": 22, "captur": [2, 13, 69, 131, 265], "car2d": 71, "cardin": [60, 61, 64, 214, 235], "care": [12, 15, 16, 23, 24, 60, 69, 77, 96, 99, 105, 117, 121, 129, 142, 156, 202, 211, 216, 217, 222, 239, 240, 243, 245, 246, 251, 254, 259, 294, 297, 299], "care_term": 99, "carefulli": [12, 23, 69, 113, 220, 229], "carl": [109, 262], "carla": 265, "carlo": 60, "carmichael": [70, 74, 109], "carmichael_funct": [74, 109], "carmichael_numb": 109, "carmichaelfunct": [74, 109], "carri": [49, 50, 69, 184, 190, 197, 214, 217, 220, 222, 224, 225, 266], "cart": [13, 140], "cart_mass": [13, 140], "cart_masscent": 140, "cartan": 98, "cartan_matrix": 98, "cartan_typ": 98, "cartanmatrix": 98, "cartantyp": 98, "cartantype_gener": 98, "cartesian": [71, 117, 121, 160, 165, 179, 182, 187, 208, 213, 214, 235, 246, 265, 275, 276, 278, 279, 288], "cartesian_product": 235, "cartesiancomplexregion": 235, "case": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 20, 22, 23, 27, 29, 32, 33, 34, 35, 36, 37, 38, 42, 48, 49, 50, 51, 52, 54, 57, 60, 61, 65, 68, 69, 70, 71, 73, 74, 75, 77, 81, 84, 85, 86, 87, 91, 94, 96, 99, 101, 105, 106, 109, 110, 111, 115, 118, 125, 129, 130, 134, 135, 141, 142, 144, 145, 146, 147, 153, 155, 157, 159, 165, 176, 182, 187, 189, 191, 192, 197, 198, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 232, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 247, 248, 251, 253, 256, 258, 260, 261, 263, 265, 266, 267, 268, 271, 274, 275, 291, 292, 295, 299, 300, 301, 304, 305, 306], "cask": 8, "casoratian": 105, "cass": 299, "cast": [50, 101, 115, 297], "cast_check": 50, "cast_nocheck": 50, "casu": 223, "casus_irreducibili": 223, "cat": [49, 201], "catalan": [69, 74, 227], "catalan_numb": 74, "catalannumb": [74, 227], "catastroph": 50, "catch": [19, 69, 243, 258, 301], "catch_warn": 263, "catchal": 305, "categor": [3, 29, 105, 214], "categori": [13, 214, 282, 289], "cauchi": [77, 94, 96, 218, 243, 247], "cauchy_distribut": 247, "cauchy_lower_bound": 218, "cauchy_principal_valu": 96, "cauchy_upper_bound": 218, "cauchydistribut": 247, "cauchyprincipalvalu": 96, "caught": [14, 243], "caus": [3, 5, 12, 13, 15, 24, 36, 40, 69, 70, 73, 75, 105, 112, 130, 138, 142, 150, 156, 210, 227, 236, 243, 244, 245, 262, 263, 291, 292, 301], "caution": [61, 69, 75, 227, 239], "caveat": [69, 223, 297], "caylei": [60, 63, 105], "cb": [215, 265], "cba": [60, 248, 265], "cbead": 58, "cbl": 247, "cbm": [77, 96], "cbrt": [50, 75, 227], "cc": [30, 34, 70, 85, 212, 215, 216, 217, 223, 301], "ccc": [216, 246], "cccc": 246, "ccode": [24, 50, 227, 252, 260], "ccodegen": 260, "ccw": [82, 85], "cd": [4, 8, 9, 26, 121, 216, 246, 249, 265], "cd_dens": 216, "cdf": 247, "cdhw73": 51, "cdir": 69, "cdot": [13, 22, 27, 51, 68, 74, 77, 87, 91, 92, 94, 101, 105, 109, 111, 126, 128, 141, 157, 197, 201, 208, 210, 211, 212, 214, 215, 223, 230, 234, 237, 240, 243, 245, 248, 249, 265, 277, 278, 292, 299, 300, 305], "cdot1": 305, "cdot2": 305, "ce": [30, 34, 121, 292], "cea": 11, "ceca": 247, "ceil": [70, 75, 109, 111, 134, 227], "ceiling_joint": 134, "ceilingfunct": 75, "cell": 49, "celler": 60, "center": [5, 7, 13, 20, 48, 60, 68, 69, 79, 83, 85, 86, 96, 105, 131, 134, 137, 141, 142, 144, 149, 151, 153, 157, 159, 165, 210, 213, 222, 227, 235, 281, 291], "center_": 60, "center_of_mass": [137, 159], "centimet": 199, "centr": [49, 66, 213], "central": [39, 60, 66, 77, 79, 85, 131, 137, 157, 222, 223, 240, 247], "central_inertia": [131, 137, 147], "centralizer_and_norm": 60, "centralmo": 247, "centric": 213, "centripet": 144, "centroid": [79, 85, 86, 117], "centuri": [70, 214], "cep849r": 74, "certain": [2, 5, 12, 14, 15, 24, 38, 40, 47, 49, 50, 52, 60, 67, 69, 73, 77, 85, 94, 96, 109, 111, 140, 156, 202, 203, 214, 217, 220, 222, 227, 228, 234, 237, 239, 240, 243, 245, 246, 247, 249, 260, 261, 266, 271, 274, 280, 305], "certainli": [20, 81, 111, 262], "cexpr": 247, "cf": [109, 220], "cff": [220, 223], "cfg": [12, 220, 223], "cfrac": 305, "cfunction": 24, "cfunction_format": 227, "cfunction_str": [50, 227], "cg": [171, 189, 196, 249], "cg_simp": 171, "cgate": 176, "cgi": 271, "cgs_gauss": 196, "cgt": 60, "cgtnote": 60, "ch": [71, 105, 240], "ch4": 142, "ch5": 142, "ch6": 142, "chain": [22, 24, 50, 60, 65, 69, 77, 86, 110, 210, 222, 247], "challeng": [152, 292], "chan": 243, "chanc": [3, 12, 16, 23, 69, 97, 105, 237, 247, 300], "chang": [0, 4, 5, 7, 8, 9, 12, 14, 15, 16, 22, 40, 49, 50, 51, 60, 61, 65, 68, 69, 70, 73, 74, 75, 77, 83, 84, 94, 96, 99, 105, 109, 111, 112, 113, 117, 119, 121, 125, 130, 134, 137, 142, 144, 149, 166, 177, 187, 197, 198, 201, 208, 210, 211, 212, 213, 214, 215, 216, 218, 220, 223, 224, 227, 234, 235, 236, 237, 239, 242, 243, 245, 246, 247, 248, 258, 265, 266, 276, 278, 291, 292, 294, 297, 300, 304], "change_index": 68, "change_member_label": 121, "change_node_label": 121, "change_support": 119, "chao": 221, "chaotic": 36, "chapman": [51, 59], "chapter": [4, 60, 77, 109, 142, 221], "chapter1": 7, "chapter11": 247, "chapter3": 227, "chapter4": 227, "chapui": 109, "char": 58, "charact": [3, 4, 5, 11, 12, 14, 69, 70, 94, 97, 111, 172, 202, 207, 213, 227, 243, 258, 260, 263, 268, 297, 299, 304], "character": [117, 118, 208, 211, 234, 247, 253, 280], "characteris": 247, "characterist": [0, 71, 87, 105, 113, 115, 210, 216, 218, 220, 221, 243, 245, 292, 301], "characteristiccurvecollect": [113, 115], "characteristiccurvefunct": 113, "charg": [208, 280], "charl": 60, "charles_marsh_continuous_entropi": 247, "charpoli": [105, 216, 301], "charpoly_bas": 216, "charpoly_berk": 216, "charpoly_factor_block": 216, "charpoly_factor_list": 216, "chart": [71, 213], "chat": [7, 40], "cheap": [24, 69, 109], "cheat": 105, "cheb": 243, "chebyshev": [5, 48, 69, 96, 220, 223], "chebyshev1_rul": 96, "chebyshev2_rul": 96, "chebyshev_polynomi": 77, "chebyshev_root": 77, "chebyshevpolynomialofthefirstkind": 77, "chebyshevpolynomialofthesecondkind": 77, "chebyshevt": [5, 77, 227], "chebyshevt_poli": [77, 223], "chebyshevt_root": 77, "chebyshevu": [77, 227], "chebyshevu_poli": [77, 223], "chebyshevu_root": 77, "check": [2, 3, 4, 5, 7, 8, 9, 11, 14, 15, 16, 18, 19, 20, 22, 23, 24, 32, 36, 38, 44, 45, 48, 49, 50, 52, 55, 58, 60, 61, 62, 67, 68, 69, 70, 74, 77, 81, 92, 94, 98, 99, 101, 104, 105, 106, 109, 125, 131, 132, 140, 141, 142, 145, 156, 159, 172, 180, 192, 194, 195, 200, 208, 213, 214, 216, 217, 218, 220, 222, 223, 229, 235, 237, 239, 243, 244, 245, 246, 247, 251, 252, 256, 258, 260, 263, 265, 274, 278, 297, 305], "check_and_join": 70, "check_dupl": 140, "check_output": 258, "check_rank": [106, 216], "check_sqf": 223, "check_symmetri": 105, "checker": 258, "checkinfsol": 243, "checkodesol": [12, 36, 243], "checkout": [9, 11, 49], "checkpdesol": 244, "checksol": 245, "chemic": [36, 112], "chemistri": 197, "chi": [16, 77, 94, 164, 227, 237, 243, 247, 253], "chi_distribut": 247, "chi_squared_distribut": 247, "chidistribut": 247, "child": [13, 15, 115, 130, 134, 140, 153, 202, 217, 262, 291], "child_axi": [13, 134, 291], "child_force_direction_vector": 291, "child_fram": [13, 153], "child_interfram": [13, 134, 140, 147, 153], "child_izz": 153, "child_joint_po": [13, 134], "child_mass": 153, "child_point": [13, 134, 140, 145, 147, 153], "child_tangency_point": 291, "children": [15, 69, 70, 217, 262], "chin": 96, "china": 105, "chines": [70, 109, 220], "chinoncentr": 247, "chisquar": 247, "choco": 8, "chocolatei": 8, "choic": [36, 50, 61, 74, 77, 94, 96, 110, 115, 156, 188, 197, 201, 202, 210, 218, 220, 223, 227, 239, 243, 265, 292, 299], "choleski": [100, 105], "cholesky_solv": [100, 105], "choos": [4, 8, 9, 11, 14, 33, 36, 60, 65, 69, 71, 74, 105, 109, 115, 118, 123, 146, 157, 192, 196, 202, 210, 211, 216, 223, 224, 227, 234, 236, 237, 243, 244, 247, 258, 263, 291, 292, 305], "choose_domain": 216, "chop": [69, 73, 77, 105, 245, 294], "chord": 79, "chose": [8, 70], "chosen": [60, 61, 69, 70, 71, 82, 83, 105, 109, 117, 160, 194, 196, 197, 213, 214, 216, 218, 220, 222, 227, 234, 237, 243, 247, 258, 271], "christoffel": 71, "christoph": [0, 271], "chrome": 8, "chromium": 8, "chula": 61, "ci": [2, 5, 9, 11, 12, 77, 94, 227, 304], "cia": 70, "cimento": [197, 212], "cimrman": 0, "cipher": 70, "ciphertext": 70, "circ": [49, 69, 80, 86, 94, 101], "circ_plot": 176, "circl": [4, 24, 69, 79, 80, 81, 83, 84, 85, 86, 94, 141, 165, 172, 213, 246, 271, 274, 281, 291], "circuit": [69, 176, 179, 288], "circuit_plot": 172, "circuitplot": 172, "circular": [13, 16, 22, 117, 123, 141, 164, 220, 291], "circumcent": 85, "circumcircl": 85, "circumfer": [69, 79, 141], "circumradiu": 85, "circumscrib": 85, "circumst": [222, 299], "citat": 4, "cite": [4, 25], "cites": 221, "citeseerx": [221, 236], "citi": 240, "cits7209": 74, "civil": [70, 117], "civita": [71, 77, 253], "cj": 42, "cl": [14, 16, 22, 24, 36, 50, 60, 69, 96, 105, 115, 192, 206, 218, 222, 243, 252, 261, 265, 277, 291, 292, 295, 304, 306], "claim": [70, 211, 237, 246], "clairaut": 243, "clang": [2, 111], "claredon": 105, "clarifi": 4, "clariti": [5, 13, 60, 206], "clarku": 247, "clash": [15, 41, 69, 105], "class": [3, 5, 7, 11, 12, 14, 15, 16, 21, 22, 23, 24, 27, 29, 33, 34, 38, 39, 42, 43, 44, 45, 46, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 91, 92, 94, 96, 97, 98, 99, 100, 101, 104, 112, 113, 115, 116, 117, 119, 121, 122, 123, 125, 130, 133, 134, 135, 136, 137, 138, 140, 141, 142, 146, 152, 153, 157, 159, 160, 161, 163, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 197, 198, 199, 200, 205, 206, 207, 209, 214, 216, 217, 218, 220, 223, 224, 225, 226, 228, 229, 230, 233, 234, 235, 237, 239, 243, 244, 245, 246, 247, 249, 252, 253, 254, 258, 259, 260, 261, 262, 263, 265, 266, 269, 272, 275, 276, 278, 279, 281, 282, 286, 288, 291, 292, 295, 297, 300, 305], "class_kei": 69, "class_nam": 69, "classic": [28, 36, 48, 75, 77, 105, 178, 194, 202, 211, 214, 288], "classif": [15, 21, 69, 243, 244], "classifi": [19, 105, 217, 243, 244, 246, 247], "classify_diop": 240, "classify_od": [36, 243], "classify_pd": 244, "classify_sysod": 243, "classmethod": [14, 22, 24, 42, 44, 45, 50, 53, 58, 60, 61, 63, 64, 69, 75, 76, 77, 84, 105, 112, 113, 115, 125, 130, 137, 140, 178, 189, 190, 192, 216, 218, 222, 223, 227, 235, 253, 258], "classnam": 4, "claus": [22, 99], "clean": [3, 258], "cleaner": [12, 129, 159, 243], "cleanest": 276, "cleanup": 223, "clear": [4, 7, 11, 12, 13, 22, 44, 59, 69, 94, 98, 131, 210, 211, 213, 216, 218, 220, 223, 237, 245, 246, 253, 258, 262, 280, 297], "clear_cach": 223, "clear_denom": [216, 218, 223], "clear_denoms_rowwis": 216, "clear_glob": 258, "clear_load": 131, "clearer": [12, 13, 115, 275], "clearli": [3, 4, 24, 74, 109, 211, 217, 237, 301], "clebsch": [179, 189, 212, 288], "clebsch_gordan": 212, "clebsh": 171, "clemson": 247, "cleve": 105, "click": [7, 8, 9, 11], "clickabl": 4, "client": [69, 262], "clipboard": 12, "clo": 218, "clock": [75, 236], "clockwis": [81, 96, 105, 117, 118, 119, 121], "clone": [9, 40, 220], "close": [4, 11, 14, 15, 27, 35, 50, 68, 69, 73, 74, 77, 85, 87, 94, 96, 98, 113, 125, 145, 213, 214, 215, 221, 222, 235, 245, 246, 260, 295, 305], "closed": 235, "closer": [12, 35, 130, 138, 144, 246, 300], "closest": [35, 69, 82], "closing_angl": 82, "closur": [60, 66, 92, 172, 218, 222, 235], "closurefailur": 222, "cloudi": 247, "cloudpickl": 2, "clunki": 41, "clutter": 4, "cm": [49, 159, 247, 291], "cmod": 188, "cmoment": 247, "cmplx": [50, 227], "cn": [61, 227, 304], "cname": 260, "cnf": 99, "cnot": 176, "cnotgat": 176, "co": [4, 9, 12, 13, 14, 16, 24, 27, 30, 31, 33, 35, 36, 37, 38, 42, 48, 50, 68, 69, 71, 73, 74, 75, 77, 78, 79, 82, 83, 85, 87, 91, 92, 93, 94, 96, 105, 109, 111, 131, 132, 134, 138, 140, 141, 142, 144, 145, 147, 149, 150, 151, 156, 159, 164, 166, 202, 204, 206, 208, 210, 211, 212, 213, 217, 220, 223, 224, 226, 227, 228, 229, 230, 234, 235, 236, 237, 239, 243, 245, 246, 247, 248, 254, 266, 271, 273, 274, 275, 276, 281, 291, 292, 294, 295, 297, 299, 305, 306], "coalesc": 262, "coc": 165, "code": [4, 8, 10, 15, 20, 22, 23, 24, 32, 35, 36, 37, 38, 40, 41, 51, 56, 60, 63, 64, 69, 70, 71, 77, 81, 94, 96, 97, 105, 109, 110, 111, 112, 115, 131, 134, 142, 144, 150, 152, 153, 159, 160, 186, 192, 201, 207, 210, 212, 213, 214, 215, 216, 217, 220, 226, 237, 239, 243, 245, 246, 247, 249, 252, 255, 256, 258, 259, 260, 263, 264, 265, 266, 275, 283, 290, 292, 297, 299, 302, 304], "code_gen": [259, 260], "code_qu": 11, "code_text": 227, "codebas": [3, 12, 13, 22, 217, 256], "codeblock": [50, 111], "codegen": [2, 24, 110, 227, 259, 264, 290], "codegenast": 50, "codegenerror": 260, "codeprint": 50, "codewrapp": 259, "codifi": 3, "codirect": 202, "codomain": [49, 214, 222], "coef": [142, 159], "coeff": [24, 69, 71, 99, 159, 218, 222, 223, 233, 239, 243, 245, 253, 305], "coeff_bel": 229, "coeff_monomi": [69, 223], "coeff_mul": 233, "coeff_search": 222, "coeff_wrt": 218, "coeffici": [4, 13, 14, 18, 20, 22, 29, 32, 34, 45, 48, 50, 68, 69, 71, 73, 74, 77, 82, 87, 88, 91, 92, 94, 98, 99, 101, 105, 106, 109, 112, 115, 125, 126, 130, 135, 142, 165, 179, 189, 197, 212, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 229, 230, 233, 234, 237, 239, 240, 242, 243, 244, 245, 246, 247, 253, 259, 275, 278, 288, 291, 292, 300, 305], "coerc": [69, 156, 220], "coercibl": 218, "coercionfail": [217, 220], "cofactor": [69, 105, 216, 218, 220, 223], "cofactor_matrix": 105, "cogniz": 3, "cohen": [52, 106, 216, 221, 222], "cohen00": 222, "cohen93": [221, 222], "coher": [168, 194, 200], "coherent_st": 168, "coin": [235, 247], "coin_flip": 247, "coincid": [11, 85, 105, 108, 134, 142, 214, 271, 276, 297], "coincis": 214, "coker": 214, "cokernel": 214, "col": [101, 105, 108, 125, 159, 216, 222, 301], "col1": 105, "col2": 105, "col_del": [105, 301], "col_insert": [105, 301], "col_join": [105, 144, 291], "col_matrix": 159, "colin": 61, "collabor": 9, "collaps": [69, 186, 239], "collect": [2, 5, 21, 26, 49, 50, 60, 69, 86, 96, 109, 117, 125, 140, 150, 159, 192, 199, 212, 218, 223, 236, 237, 239, 243, 247, 258, 265, 291, 292], "collect_const": 239, "collect_sqrt": 239, "collected_expr": 305, "collected_word": 59, "collid": [41, 253], "collin": [220, 221], "collinear": [79, 81, 83, 84, 85], "collins67": [220, 221], "collis": [14, 69, 108, 227], "colloc": [112, 113, 115, 291, 292], "colloqui": [15, 30], "colmatrix": 159, "colon": [4, 69], "color": [5, 9, 14, 97, 123, 207, 227, 258, 265, 304], "colost": 60, "colour": 5, "colsep": 105, "colslic": 216, "colslist": [105, 216], "columbia": 247, "column": [34, 42, 46, 49, 50, 51, 97, 99, 101, 105, 106, 108, 112, 115, 125, 135, 140, 144, 187, 194, 201, 202, 207, 212, 216, 222, 227, 243, 245, 246, 252, 271, 292], "columnspac": [105, 216], "com": [2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 24, 27, 40, 42, 46, 48, 60, 62, 63, 69, 70, 72, 73, 74, 75, 77, 79, 85, 86, 94, 96, 105, 109, 123, 212, 221, 230, 232, 235, 236, 239, 240, 243, 246, 247, 265, 268, 301], "comb_explicit_rh": [140, 160], "comb_implicit_mat": [140, 160], "comb_implicit_rh": [140, 160], "combin": [4, 11, 13, 14, 16, 24, 29, 37, 49, 69, 73, 74, 77, 96, 98, 99, 105, 109, 118, 125, 134, 135, 140, 152, 160, 171, 178, 186, 187, 189, 190, 191, 195, 196, 197, 198, 214, 215, 217, 218, 220, 222, 223, 227, 228, 236, 237, 239, 240, 243, 245, 247, 248, 262, 265, 292, 294, 297, 300], "combinator": [51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 101, 109, 222, 229, 248, 253, 262, 265, 283, 299, 305], "combinatori": [12, 13, 24, 53, 61, 68, 69, 70, 76, 77, 109, 223, 229, 239, 265, 283, 305], "combintor": 13, "combo": 99, "combsimp": [68, 69, 74, 239], "come": [3, 11, 12, 14, 34, 40, 60, 65, 67, 68, 69, 75, 77, 94, 96, 105, 110, 129, 142, 144, 154, 195, 211, 214, 217, 220, 222, 223, 237, 240, 243, 246, 256, 258, 263, 266, 297, 299, 300, 303, 305], "comfort": [109, 110], "comm": [173, 192, 253], "comm_i2symbol": 253, "comm_symbols2i": 253, "comma": [4, 5, 12, 16, 50, 69, 227, 266, 297], "command": [2, 4, 8, 9, 11, 12, 15, 16, 29, 32, 38, 40, 50, 73, 97, 142, 154, 159, 207, 213, 227, 258, 259, 304], "commaoper": 50, "comment": [4, 5, 11, 12, 50, 60, 142, 144, 224, 227, 260, 265], "commerci": [0, 299], "commit": [9, 12], "common": [5, 9, 11, 12, 13, 14, 15, 16, 22, 23, 24, 30, 31, 32, 33, 36, 48, 50, 60, 61, 69, 70, 75, 80, 83, 86, 96, 105, 109, 110, 111, 123, 125, 131, 134, 136, 140, 145, 152, 157, 159, 164, 197, 202, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 229, 235, 236, 237, 239, 240, 243, 245, 246, 247, 259, 260, 263, 265, 266, 278, 280, 292, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306], "common_prefix": 265, "common_suffix": 265, "commonli": [5, 15, 61, 74, 77, 96, 105, 111, 129, 210, 215, 243, 278, 292], "commun": [3, 5, 7, 11, 40, 212, 243, 245, 247, 301], "communication_class": 247, "commut": [15, 22, 42, 46, 49, 60, 61, 65, 69, 71, 92, 96, 105, 169, 176, 179, 180, 181, 191, 192, 197, 204, 211, 215, 216, 218, 219, 220, 221, 223, 227, 234, 235, 237, 243, 253, 288, 289, 300], "commutative_diagram": 49, "commutative_part": 69, "commutative_properti": [22, 69], "commutativehandl": 46, "commutativepred": 46, "commutes_with": [61, 253], "comp": [51, 109, 243], "compa": 254, "compact": [63, 69, 122, 135, 159, 190, 207, 223, 227, 245, 262], "compactif": 69, "companion": [101, 105], "companionmatrix": 101, "compar": [11, 12, 13, 16, 22, 38, 48, 50, 61, 66, 69, 74, 75, 86, 99, 105, 109, 110, 144, 171, 195, 199, 217, 220, 223, 224, 227, 232, 234, 239, 243, 246, 248, 252, 258, 265, 297, 300, 305], "comparison": [50, 68, 69, 99, 105, 142, 214, 222, 226, 245, 258, 265], "compat": [2, 3, 8, 19, 50, 69, 77, 97, 105, 109, 110, 129, 140, 194, 199, 207, 213, 216, 218, 222, 223, 227, 247, 251, 254, 258, 260, 266], "compatibli": 2, "compb": 254, "compil": [2, 50, 97, 110, 129, 159, 207, 227, 239, 252, 258, 259, 260, 282, 299], "compileflag": [16, 258], "complement": [99, 101, 223, 235, 246], "complementari": [4, 77, 125], "complementset": 235, "complet": [2, 3, 4, 9, 11, 12, 13, 14, 15, 16, 22, 33, 36, 45, 50, 69, 70, 71, 73, 75, 76, 77, 85, 94, 96, 105, 109, 111, 129, 135, 136, 146, 152, 159, 178, 181, 182, 211, 216, 220, 222, 223, 224, 228, 234, 239, 240, 243, 246, 247, 258, 260, 268, 291, 292, 299, 300, 305], "complex": [4, 7, 12, 13, 14, 15, 16, 19, 22, 24, 32, 33, 34, 38, 42, 46, 47, 48, 50, 60, 69, 70, 72, 73, 74, 77, 81, 91, 94, 100, 105, 109, 110, 111, 112, 123, 125, 129, 135, 138, 140, 142, 159, 161, 165, 175, 178, 180, 181, 192, 201, 202, 211, 215, 216, 218, 222, 223, 227, 228, 232, 235, 237, 239, 243, 245, 246, 247, 260, 268, 292, 305, 306], "complex128": 50, "complex64": 50, "complex_": 50, "complex_allow": 260, "complex_beam_paramet": 161, "complex_conjug": 75, "complex_el": 46, "complex_numb": [22, 46, 69], "complexbasetyp": 50, "complexel": [217, 218], "complexelementshandl": 46, "complexelementspred": 46, "complexfield": 218, "complexhandl": 46, "complexinfin": [69, 125], "complexpred": 46, "complexregion": [235, 246], "complexrootof": [29, 69, 105, 218, 223, 243], "complexspac": 178, "complextyp": 50, "compliant": 50, "complic": [4, 12, 14, 16, 18, 22, 24, 29, 35, 42, 50, 60, 68, 70, 71, 73, 74, 75, 77, 94, 96, 101, 111, 152, 154, 192, 211, 216, 217, 220, 224, 226, 237, 239, 246, 247, 251, 252, 260, 262, 266, 268, 292, 295, 297, 300, 301], "compon": [29, 49, 50, 65, 69, 71, 84, 96, 101, 105, 113, 115, 116, 126, 134, 137, 140, 152, 153, 157, 164, 189, 194, 201, 202, 208, 209, 210, 211, 212, 213, 214, 215, 216, 223, 225, 247, 249, 252, 253, 262, 265, 271, 274, 277, 278, 291, 292], "component_": 265, "componentwis": [214, 227], "compos": [49, 69, 70, 146, 156, 194, 197, 210, 214, 218, 222, 223, 224, 227, 229, 239], "composit": [22, 46, 49, 58, 60, 61, 69, 70, 87, 89, 96, 109, 117, 218, 220, 223, 226, 239, 246, 261], "composite_numb": [22, 69], "compositedomain": 218, "compositehandl": 46, "compositemorph": 49, "compositepi": 109, "compositepred": 46, "composition_seri": 60, "compound": [69, 147, 190], "compound_pend": 147, "compound_probability_distribut": 247, "compound_rv": 247, "compounddistribut": 247, "comprehens": [13, 22, 27, 33, 34, 36, 221, 235, 247, 294], "compress": [60, 105, 108, 121, 292], "compris": [60, 70, 101, 125, 137, 157, 160, 223, 265], "compulsori": 125, "comput": [0, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 27, 29, 30, 33, 34, 35, 40, 42, 48, 50, 51, 52, 53, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 82, 84, 88, 91, 92, 93, 95, 96, 98, 101, 105, 106, 108, 109, 111, 117, 118, 123, 125, 129, 134, 135, 136, 140, 142, 144, 145, 149, 152, 159, 176, 177, 178, 186, 191, 192, 194, 196, 197, 201, 202, 203, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 229, 230, 232, 234, 235, 236, 237, 239, 240, 243, 245, 246, 247, 249, 259, 262, 265, 266, 271, 273, 274, 275, 276, 277, 278, 280, 283, 291, 294, 295, 297, 298, 301, 305], "computation": [14, 34, 65, 75, 134, 135, 136], "computationfail": 220, "compute_explicit_form": 140, "compute_fp": 229, "compute_leading_term": 69, "compute_m_ybar": 243, "comtet": 229, "comupt": 243, "concaten": [70, 105, 130, 138, 265], "concav": [48, 161], "concave_funct": 48, "concentr": [36, 118, 247, 292], "concept": [13, 15, 22, 60, 144, 211, 217, 219, 222, 227, 246, 251, 280, 298, 303], "conceptu": [197, 214, 280], "concern": [4, 12, 14, 15, 22, 48, 51, 68, 73, 109, 208, 213, 215, 216, 217, 226, 227, 228, 239, 240, 245, 259, 260, 262, 268], "concis": [4, 159], "conclud": [22, 77, 92, 144, 208, 234, 245, 280], "conclus": [49, 69], "concret": [11, 22, 49, 61, 69, 74, 75, 96, 98, 105, 109, 112, 115, 130, 142, 197, 218, 222, 227, 283, 292], "concur": 224, "concurr": [82, 83, 224], "concycl": 84, "cond": [75, 94, 96, 235], "conda": [2, 8, 9, 40, 111], "condens": [105, 246], "condit": [12, 14, 15, 22, 23, 27, 29, 31, 50, 60, 69, 71, 75, 77, 87, 88, 91, 92, 93, 96, 99, 105, 109, 111, 117, 118, 121, 125, 132, 136, 144, 152, 156, 159, 161, 206, 212, 224, 227, 230, 237, 240, 242, 243, 245, 246, 247, 252, 292, 305], "condition_numb": 105, "condition_set": 247, "conditionaldomain": 247, "conditionset": [235, 246, 247, 306], "conduct": [5, 113, 292], "cone": 281, "confederaci": 70, "confer": [74, 110, 303], "confid": 299, "config": [9, 97], "configur": [2, 3, 11, 12, 13, 27, 61, 99, 125, 131, 135, 145, 146, 149, 151, 152, 154, 156, 227, 291, 292], "configura": 159, "configuration_constraint": [135, 144, 146, 154, 291], "confirm": [3, 12, 13, 60, 109, 243], "conflict": [13, 75, 109, 125, 142, 260], "confluent": [77, 237], "conform": [69, 246, 251, 252, 265, 292], "confus": [3, 5, 12, 13, 14, 15, 22, 32, 69, 74, 99, 165, 211, 215, 223, 246, 294, 295, 297], "confusingli": 77, "cong": 220, "congratul": 302, "congruenc": [60, 69, 109, 237, 240], "congruent": [220, 237, 240], "conic": [79, 240, 271], "conicis": 214, "conj": 227, "conjectur": [109, 220], "conjg": 227, "conjug": [4, 29, 46, 58, 59, 60, 69, 75, 77, 105, 111, 127, 161, 175, 178, 192, 223, 227, 243, 253], "conjugaci": [51, 52, 60], "conjugacy_class": 60, "conjugate_convent": 105, "conjugate_gauss_beam": 161, "conjunct": [75, 99, 109, 213, 237, 258, 305], "conlist_coord": 144, "conlist_spe": 144, "connect": [9, 22, 63, 70, 71, 84, 85, 105, 110, 117, 121, 131, 134, 140, 141, 144, 147, 153, 214, 215, 216, 225, 243, 247, 265, 271, 292], "connect_to": 13, "connected_compon": [105, 265], "connected_components_decomposit": 105, "connector": 118, "consec": 60, "consec_succ": 60, "consecut": [5, 50, 60, 65, 68, 69, 70, 74, 85, 138, 239, 245], "consequ": [12, 13, 24, 46, 69, 115, 215, 217, 297, 305], "consequenti": 116, "conserv": [69, 135, 155, 203, 274, 280], "conservative_field": [208, 278], "conserve_mpmath_dp": 261, "consid": [0, 3, 5, 12, 13, 14, 15, 16, 19, 22, 23, 24, 27, 38, 42, 46, 49, 50, 58, 61, 64, 68, 69, 70, 72, 73, 74, 75, 77, 79, 81, 85, 93, 94, 96, 97, 98, 99, 101, 105, 109, 125, 129, 130, 131, 137, 143, 154, 160, 182, 189, 192, 196, 197, 203, 207, 208, 210, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 230, 234, 239, 240, 243, 244, 245, 246, 247, 258, 260, 265, 274, 276, 278, 280, 281, 292, 297, 301, 305], "consider": [3, 12, 23, 69, 110, 129, 217, 226, 235, 240, 243, 275], "consist": [4, 5, 13, 15, 20, 22, 31, 33, 37, 49, 60, 61, 65, 69, 70, 74, 75, 77, 79, 85, 87, 94, 99, 109, 111, 112, 117, 121, 134, 137, 145, 153, 157, 166, 186, 192, 197, 200, 206, 213, 215, 216, 217, 218, 220, 235, 243, 245, 246, 247, 251, 256, 259, 260, 265, 292, 298, 300], "consol": [2, 3, 16, 69, 97, 207, 213, 304], "const": [218, 227], "constanc": 69, "constant": [12, 13, 14, 15, 27, 29, 31, 32, 34, 37, 48, 50, 68, 69, 73, 75, 77, 93, 94, 96, 112, 113, 115, 117, 118, 125, 130, 140, 141, 142, 144, 159, 160, 169, 173, 179, 195, 196, 198, 199, 200, 203, 206, 208, 213, 215, 218, 220, 222, 223, 224, 227, 229, 234, 237, 239, 240, 243, 244, 245, 246, 247, 258, 260, 265, 266, 274, 278, 281, 288, 291, 292, 295, 301, 306], "constant_problem": 301, "constant_renumb": 243, "constant_symbol": 140, "constantli": 234, "constantrul": 96, "constantsimp": 243, "constanttimesrul": 96, "constitu": [79, 85, 137, 202, 233, 271], "constitut": [3, 5, 15, 96, 109, 227], "constr": 245, "constrain": [135, 136, 145, 146, 155, 159, 245, 291], "constraint": [20, 31, 105, 118, 125, 131, 135, 136, 140, 142, 144, 145, 146, 148, 152, 154, 155, 156, 159, 224, 245, 288, 291], "constraint_solv": 135, "construct": [13, 14, 20, 27, 31, 42, 44, 45, 48, 49, 50, 52, 69, 71, 75, 77, 79, 83, 85, 97, 101, 105, 110, 113, 115, 118, 125, 129, 130, 131, 135, 137, 138, 140, 142, 144, 177, 181, 190, 191, 194, 198, 214, 216, 217, 218, 220, 222, 223, 227, 240, 245, 247, 248, 252, 260, 262, 263, 275, 277, 278, 291, 292, 297, 300, 301, 305], "construct_c": 243, "construct_d": 243, "construct_domain": [216, 217, 218, 223], "constructor": [13, 14, 15, 24, 44, 45, 49, 50, 56, 60, 61, 62, 69, 76, 77, 98, 102, 105, 111, 112, 113, 115, 130, 138, 146, 185, 186, 190, 194, 213, 214, 216, 217, 218, 227, 235, 243, 252, 260, 275, 283, 292, 296, 300], "construtor": 130, "constuct": 292, "consult": 51, "consum": [4, 50, 77, 136, 156], "contact": [85, 144, 148, 149, 150, 151, 210, 251], "contain": [2, 3, 4, 5, 8, 11, 12, 13, 14, 15, 16, 18, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 41, 43, 44, 48, 49, 50, 51, 52, 60, 61, 65, 67, 68, 71, 72, 73, 74, 75, 77, 78, 80, 82, 83, 84, 85, 86, 95, 96, 98, 99, 101, 104, 105, 108, 109, 110, 111, 113, 115, 117, 120, 121, 123, 124, 126, 130, 131, 135, 136, 137, 140, 144, 146, 156, 157, 159, 160, 161, 162, 163, 165, 166, 167, 179, 182, 184, 187, 189, 192, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 227, 228, 229, 234, 235, 237, 239, 240, 241, 243, 244, 245, 246, 247, 251, 252, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 271, 274, 282, 291, 292, 295, 297, 301, 305], "contbound": 220, "content": [3, 6, 14, 17, 50, 69, 70, 103, 215, 216, 218, 220, 223, 226, 227, 246, 255, 260, 263, 264, 283, 284, 285, 286, 287, 288, 289, 290, 296, 298], "context": [3, 4, 5, 11, 12, 13, 14, 18, 22, 24, 35, 43, 44, 45, 69, 71, 77, 99, 130, 131, 142, 197, 217, 218, 220, 222, 235, 256, 258, 263, 271], "contigu": [69, 237, 260], "continu": [3, 4, 5, 12, 13, 20, 23, 24, 27, 48, 50, 59, 61, 63, 69, 74, 75, 77, 94, 97, 105, 109, 122, 123, 125, 187, 190, 207, 218, 220, 223, 240, 242, 243, 251, 296], "continue_": 50, "continued_fract": 109, "continued_fraction_converg": 109, "continued_fraction_iter": 109, "continued_fraction_period": 109, "continued_fraction_reduc": 109, "continuetoken": 50, "continuous_domain": [48, 242], "continuousdistributionhandmad": 247, "continuousdomain": 247, "continuousmarkovchain": 247, "continuouspspac": 247, "continuousrv": 247, "continuum": [28, 40, 288], "continuum_mechan": [117, 118, 119, 121], "contour": [77, 79, 94, 213, 237], "contourf": 213, "contract": [50, 71, 112, 113, 115, 126, 192, 227, 236, 249, 251, 252, 253, 254, 291, 292], "contract_al": 253, "contract_metr": 253, "contractil": [115, 130, 292], "contraction_ax": 248, "contraction_indic": 249, "contradict": [22, 227], "contrarili": 29, "contrast": [12, 14, 15, 24, 68, 69, 146, 217, 223, 237, 243, 299], "contravari": [65, 105, 253, 254], "contribut": [0, 2, 3, 4, 5, 9, 10, 12, 40, 85, 109, 135, 147, 150, 217, 220, 222, 243, 281, 302], "contributor": [2, 5, 6, 7, 8, 11, 13, 24], "control": [2, 7, 9, 13, 14, 16, 18, 22, 24, 28, 49, 51, 69, 70, 73, 94, 99, 105, 112, 113, 115, 130, 156, 159, 172, 176, 187, 188, 192, 216, 223, 224, 228, 235, 240, 246, 265, 288, 291, 292, 294], "control_lin": 172, "control_plot": 123, "control_point": 172, "control_valu": 176, "controller_mat": 125, "conv": 72, "convei": [11, 29], "conveni": [0, 8, 13, 14, 15, 16, 31, 33, 38, 41, 48, 50, 61, 69, 70, 74, 77, 96, 99, 111, 142, 157, 159, 204, 210, 211, 213, 214, 215, 216, 217, 218, 222, 225, 234, 235, 239, 245, 251, 252, 259, 261, 262, 266, 278, 295, 297], "convent": [3, 4, 5, 24, 36, 60, 61, 65, 68, 69, 70, 74, 75, 77, 79, 84, 94, 96, 99, 111, 117, 118, 121, 125, 128, 130, 138, 144, 159, 161, 165, 186, 187, 189, 194, 195, 208, 213, 227, 243, 244, 246, 247, 253, 280, 292, 297, 305], "converg": [13, 14, 50, 68, 73, 77, 96, 109, 161, 223, 230, 234, 237, 295], "convergence_stat": 77, "convergence_test": 68, "convers": [4, 5, 13, 14, 22, 32, 50, 69, 89, 111, 156, 196, 215, 216, 217, 218, 220, 222, 224, 227, 240, 252, 259, 271], "convert": [2, 3, 8, 13, 14, 15, 16, 18, 22, 23, 24, 27, 32, 34, 35, 36, 42, 46, 50, 53, 61, 65, 69, 70, 73, 74, 75, 82, 83, 84, 86, 89, 90, 93, 97, 99, 105, 108, 109, 111, 125, 130, 137, 157, 186, 189, 195, 196, 197, 199, 201, 206, 213, 214, 216, 218, 220, 222, 223, 224, 225, 227, 228, 229, 235, 236, 237, 239, 240, 243, 244, 246, 247, 248, 249, 252, 258, 259, 265, 266, 268, 269, 274, 289, 296, 297, 300, 305], "convert_array_to_matrix": 249, "convert_equals_sign": 111, "convert_from": [217, 218], "convert_indexed_to_arrai": 249, "convert_matrix_to_arrai": 249, "convert_to": [195, 196, 199, 216, 222], "convert_to_c": 111, "convert_to_expr": 111, "convert_to_fortran": 111, "convert_to_native_path": 258, "convert_to_python": 111, "convert_xor": [69, 111], "convex": [48, 85, 86, 96], "convex_funct": 48, "convex_hul": [4, 81, 85, 86], "convolut": [12, 13, 77, 229], "convolution2d": 50, "convolution_fft": 72, "convolution_fwht": 72, "convolution_ntt": 72, "convolution_subset": 72, "convolution_theorem": 72, "conwai": 55, "coolei": 72, "cooper": 69, "coord": [71, 84, 86, 129, 190, 206], "coord_con": 154, "coord_funct": 71, "coord_idx": [140, 160], "coord_index": 71, "coord_si": [71, 274], "coord_stat": 140, "coord_system": 13, "coord_tuple_transform_to": [13, 71], "coordin": [42, 50, 70, 71, 75, 77, 78, 80, 84, 86, 101, 105, 117, 119, 121, 123, 127, 130, 131, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 147, 149, 152, 153, 154, 155, 158, 160, 168, 170, 189, 190, 193, 201, 202, 203, 204, 206, 208, 211, 214, 222, 223, 235, 243, 271, 273, 274, 277, 279, 281, 286, 288, 291, 292], "coordinate_deriv": [140, 160], "coordinate_system": 71, "coordinatesym": [202, 204], "coordinatesymbol": 71, "coordsyrect": 271, "coordsys3d": [271, 273, 274, 275, 277, 278, 281], "coordsysrect": 271, "coordsystem": [13, 71], "copi": [0, 9, 11, 12, 13, 16, 22, 26, 51, 61, 62, 69, 85, 105, 109, 110, 216, 218, 220, 222, 226, 227, 234, 245, 258, 265, 268, 304], "coplanar": [42, 83, 211], "coprim": [70, 96, 109, 188, 220, 240], "core": [2, 3, 4, 7, 11, 12, 14, 15, 16, 19, 22, 23, 24, 31, 46, 48, 50, 60, 70, 75, 76, 78, 86, 104, 105, 109, 111, 190, 191, 215, 216, 217, 218, 219, 220, 222, 223, 224, 227, 234, 235, 239, 240, 243, 247, 257, 258, 259, 265, 266, 269, 282, 283, 297, 300], "core_2": 109, "core_t": 109, "corioli": 144, "cornacchia": 240, "corner": [11, 12, 60, 62, 105, 223, 243, 246, 266], "correct": [3, 4, 5, 11, 12, 13, 14, 16, 23, 24, 32, 34, 36, 50, 58, 60, 66, 68, 69, 73, 75, 93, 94, 96, 105, 109, 125, 130, 138, 142, 156, 210, 211, 220, 223, 234, 240, 243, 245, 246, 251, 259, 265, 291, 292, 297, 304], "correctli": [2, 3, 4, 5, 8, 11, 12, 13, 14, 23, 24, 48, 73, 94, 97, 105, 111, 116, 130, 138, 142, 144, 156, 227, 234, 240, 243], "correl": 247, "correspond": [3, 4, 5, 7, 11, 12, 13, 20, 22, 23, 24, 27, 32, 36, 48, 49, 50, 51, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 72, 74, 75, 77, 79, 80, 82, 83, 84, 85, 92, 94, 96, 98, 99, 105, 108, 109, 113, 115, 117, 118, 125, 132, 134, 135, 136, 137, 140, 142, 144, 146, 160, 164, 168, 182, 186, 187, 189, 193, 194, 197, 202, 206, 208, 212, 213, 215, 216, 217, 218, 220, 222, 223, 227, 233, 234, 237, 239, 240, 243, 244, 245, 246, 247, 249, 251, 252, 253, 260, 261, 262, 263, 265, 266, 268, 271, 273, 275, 276, 278, 280, 292, 300, 306], "correspondingli": 49, "cosec": 75, "coset": [60, 65, 222], "coset_enumer": 51, "coset_enumeration_c": 51, "coset_enumeration_r": 51, "coset_factor": 60, "coset_rank": 60, "coset_t": [51, 60], "coset_table_bas": 51, "coset_table_max_limit": 51, "coset_transvers": 60, "coset_unrank": 60, "cosh": [24, 69, 75, 77, 88, 94, 111, 113, 224, 227, 228, 237, 239, 245, 301, 305], "coshint": 227, "coshintegr": 227, "cosin": [24, 69, 75, 77, 84, 96, 131, 134, 202, 211, 223, 224, 230, 236, 247, 271, 292, 305], "cosine_transform": 96, "cosinetransform": 96, "cosint": 227, "cosintegr": 227, "coskew": 247, "cosmet": [12, 227], "cost": [12, 48, 50, 109, 146, 216, 246, 299], "cost_funct": 50, "costli": [94, 146, 216, 223, 301], "cot": [12, 69, 75, 77, 111, 224, 227, 236], "cotang": [75, 224], "coth": [75, 227, 239], "could": [12, 13, 14, 15, 16, 20, 22, 24, 33, 35, 37, 45, 50, 62, 69, 81, 94, 96, 99, 134, 137, 142, 152, 156, 192, 195, 197, 214, 217, 220, 222, 224, 227, 235, 237, 239, 243, 244, 245, 246, 247, 248, 251, 252, 259, 263, 276, 277, 292, 297, 300, 305], "could_extract_minus_sign": 69, "couldn": 96, "count": [3, 5, 15, 55, 61, 68, 69, 70, 74, 79, 99, 105, 108, 109, 187, 223, 235, 236, 239, 246, 247, 253, 262, 265], "count_complex_root": 218, "count_digit": [69, 109], "count_op": [12, 16, 69, 236, 239], "count_partit": 262, "count_real_root": 218, "count_root": 223, "countabl": [197, 246], "counter": [50, 69, 75, 81, 105, 118, 119, 121], "counterclockwis": [78, 79, 80, 84, 105, 117, 118], "counterexampl": [109, 305], "counterpart": [69, 70, 243, 295], "coupl": [36, 69, 105, 111, 140, 156, 171, 186, 189, 212, 292], "coupledspinst": 189, "cours": [12, 20, 22, 26, 52, 53, 60, 68, 77, 94, 96, 105, 106, 109, 157, 208, 216, 217, 221, 222, 234, 236, 237, 278, 305], "cov": 245, "covarderivativeop": 71, "covari": [65, 71, 105, 247, 253, 254], "cover": [12, 20, 75, 109, 111, 129, 142, 201, 210, 253, 260, 295, 297], "coverag": 4, "coverage_doctest": 4, "coverage_report": 12, "covering_product": 72, "covhtml": 12, "cox": [51, 221, 223], "cox97": [221, 223], "coxet": 98, "coxeter_diagram": 98, "cp": [0, 61, 110, 215, 216], "cphase": 176, "cpp_dec_float_50": 50, "cpp_src": 96, "cpu": [11, 50, 110, 159], "cpython": [12, 159], "crack": 109, "cramer": [105, 135, 216, 243], "cramer_solv": [100, 105], "crandal": 109, "crazi": 297, "crc": [51, 59, 61], "creat": [0, 2, 4, 5, 7, 8, 12, 14, 15, 22, 23, 31, 32, 33, 34, 36, 37, 38, 42, 44, 49, 50, 51, 58, 60, 61, 69, 70, 71, 73, 75, 76, 77, 79, 81, 82, 84, 85, 90, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 107, 109, 110, 111, 112, 113, 115, 117, 121, 125, 130, 131, 134, 135, 137, 138, 140, 141, 142, 145, 146, 147, 149, 151, 153, 155, 156, 157, 159, 160, 169, 171, 173, 177, 180, 181, 182, 186, 187, 189, 190, 192, 195, 198, 201, 202, 204, 206, 210, 211, 213, 214, 216, 217, 218, 220, 222, 223, 224, 227, 234, 239, 243, 246, 247, 248, 252, 253, 258, 259, 260, 262, 263, 265, 266, 271, 276, 278, 291, 292, 295, 297, 300, 301, 304, 305, 306], "create_expand_pow_optim": 50, "create_new": [271, 276], "createboson": 192, "createcg": 172, "createfermion": 192, "creation": [13, 16, 24, 69, 71, 105, 116, 131, 137, 149, 152, 153, 154, 155, 156, 166, 176, 180, 181, 182, 192, 210, 211, 227, 247, 252, 260, 266, 292], "creator": 192, "credit": 265, "crell": 222, "cremona": 240, "criteria": [22, 69, 300], "criterion": [50, 60, 158, 215, 220], "critic": [33, 48, 115, 165, 210, 222, 246], "critical_angl": 165, "critical_point": 33, "critiqu": 226, "crmarsh": 247, "croot": 29, "crootof": [38, 69, 223, 243, 245], "cross": [3, 5, 11, 12, 15, 69, 79, 85, 105, 117, 118, 131, 134, 137, 141, 150, 159, 172, 201, 202, 204, 210, 211, 240, 246, 271, 275, 277, 278, 291], "cross_sect": 117, "crosscovariancematrix": 247, "crt": [70, 109, 216, 220], "crt1": [109, 220], "crt2": [109, 220], "crucial": [60, 68, 217], "crude": [94, 144, 213], "crv": 247, "crv_type": 247, "cryptanalysi": 70, "crypto": 70, "cryptograph": 70, "cryptographi": [109, 282, 289], "cryptosystem": 70, "csail": 72, "csc": [75, 111, 227, 236], "csch": [75, 227], "cse": [50, 110, 129, 181, 228, 239, 260, 266, 291], "cse_main": [50, 228, 239], "cset": 69, "csr": 108, "csse": 74, "cst": 142, "cstech": 271, "csusm": 240, "ct": [70, 98, 220], "ctan": [97, 207], "ctimesd": 16, "ctmcnote": 247, "ctr1": 236, "ctr2": 236, "ctr3": 236, "ctr4": 236, "ctrl": 8, "cube": [29, 48, 50, 53, 60, 62, 75, 96, 220, 221, 240, 246, 281], "cube_root": 75, "cubefre": 109, "cuberoot": 75, "cubic": [29, 77, 130, 214, 223, 240, 245], "cubic_curv": 271, "cubic_equ": 223, "cubicthu": 240, "cucurezeanu": 240, "cuda": [2, 110], "cuhk": 240, "cultur": 214, "cumbersom": [4, 11, 38], "cup": [22, 223, 235, 246], "cupi": [2, 110], "curl": [203, 271, 274, 281], "curli": [16, 142, 227], "current": [3, 5, 11, 12, 13, 14, 16, 22, 31, 32, 42, 45, 48, 49, 50, 51, 53, 60, 63, 64, 66, 67, 68, 69, 71, 75, 77, 79, 81, 84, 89, 92, 94, 96, 98, 105, 109, 111, 117, 122, 129, 131, 142, 152, 186, 191, 192, 196, 200, 211, 213, 214, 215, 216, 218, 220, 223, 224, 226, 227, 228, 234, 237, 239, 240, 242, 243, 244, 245, 246, 247, 253, 258, 259, 260, 262, 275, 289, 301, 306], "currentfactor": 223, "curri": [0, 178], "curv": [4, 49, 71, 81, 96, 109, 114, 115, 116, 117, 161, 213, 214, 243, 271, 281, 288, 289, 295], "curvatur": [33, 161, 165], "curvedmirror": 161, "curvedrefract": 161, "curvilinear": [213, 275, 276], "curving_amount": 49, "custom": [4, 9, 13, 25, 50, 61, 69, 73, 76, 97, 105, 111, 112, 130, 132, 134, 138, 141, 201, 207, 208, 229, 233, 240, 247, 253, 259, 266, 271, 280, 291, 299, 301], "custom_funct": [50, 227], "custom_sin": 266, "customarili": 215, "cut": [69, 74, 75, 77, 85, 94, 214, 237, 262, 268, 305], "cut_sect": 85, "cvd": 71, "cx": [70, 118, 210], "cxd": 191, "cxx": 227, "cxx11codeprint": [24, 227], "cxx98codeprint": 227, "cxxcode": [24, 50, 227], "cy": [32, 210, 240], "cyan": 213, "cybertest": 239, "cycl": [5, 13, 50, 57, 60, 61, 67, 69, 72, 74, 105, 109, 166, 235, 265], "cycle_detect": 109, "cycle_length": 109, "cycle_list": 70, "cycle_structur": 61, "cyclic": [55, 57, 60, 61, 62, 72, 105, 109, 253, 265], "cyclic_form": [57, 61, 62], "cyclic_ord": 57, "cyclicgroup": [54, 57, 60], "cyclotom": [69, 218, 220, 221, 222, 223], "cyclotomic_field": [218, 222], "cyclotomic_poli": [69, 222, 223], "cyclotomicpolynomi": 221, "cygwin": 8, "cyl": 292, "cylind": [138, 141, 281, 291, 292], "cylindr": [134, 141, 213, 278], "cylindricaljoint": 134, "cython": [2, 50, 110, 159, 259], "cythoncodewrapp": 259, "cz": [32, 72, 125, 210, 240], "czapor": 221, "c\u2081": [299, 306], "c\u2082": [299, 306], "d": [4, 5, 7, 8, 11, 12, 13, 15, 16, 20, 24, 27, 30, 32, 34, 36, 42, 49, 53, 58, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 74, 77, 79, 83, 87, 92, 94, 96, 98, 99, 100, 101, 105, 106, 108, 109, 111, 117, 121, 125, 134, 135, 136, 159, 161, 164, 165, 171, 181, 189, 191, 192, 197, 201, 202, 204, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 227, 229, 233, 237, 239, 240, 243, 244, 245, 246, 247, 248, 249, 251, 253, 265, 268, 271, 273, 274, 275, 276, 280, 288, 291, 292, 301, 306], "d0": 65, "d1": [49, 65, 202, 214, 234, 247, 271], "d2": [65, 202, 214, 234, 247, 265, 271], "d2fdx2": 295, "d2fdxdy": 69, "d3": [65, 234], "d4": [52, 98, 223, 247], "d6": 247, "d_": [65, 237], "d_0": [65, 70], "d_1": [94, 197, 223, 247], "d_1e": 247, "d_1z": 247, "d_2": [197, 223, 247], "d_3": 197, "d_4": 52, "d_6": 52, "d_i": [65, 94, 197], "d_ij": 192, "d_ip": 192, "d_j": [94, 197, 237], "d_m": 291, "d_n": [57, 98, 223], "d_o": 291, "d_qp": 192, "d_v": 94, "d_x": 291, "d_y": 291, "d_z": 291, "da": [112, 243, 292], "dadt": [291, 292], "dae": [140, 160], "dag": 15, "dagger": [169, 173, 179, 181, 184, 186, 191, 192, 227, 288], "dagum": 247, "dagum_distribut": 247, "dai": [195, 199, 243], "damp": [115, 130, 159, 291], "damper": [27, 130, 131, 135, 140, 142, 147, 291, 292], "damper_const": 292, "damping_coeffici": 130, "damping_forc": 130, "danger": [13, 215], "danilevski": 216, "dartmouth": 247, "dash": 49, "dat": [101, 265], "data": [14, 15, 20, 50, 60, 69, 70, 77, 96, 105, 110, 111, 113, 123, 135, 171, 213, 214, 216, 217, 218, 220, 223, 224, 227, 239, 252, 253, 258, 260, 262, 265], "databas": [227, 237], "datatyp": [111, 218, 227, 260], "date": 260, "daunt": 7, "davenport": [96, 220, 221], "davenport88": 221, "davi": 247, "david": [158, 223], "davis_distribut": 247, "davisdistribut": 247, "dbase": 65, "dbinom": 111, "dc": [27, 125, 155], "dc_gain": [27, 125], "dcm": [13, 131, 134, 142, 144, 159, 202, 210, 211, 271], "dd": [212, 232], "ddm": 216, "ddm_": 216, "ddm_berk": 216, "ddm_iadd": 216, "ddm_idet": 216, "ddm_iinv": 216, "ddm_ilu": 216, "ddm_ilu_solv": 216, "ddm_ilu_split": 216, "ddm_imatmul": 216, "ddm_imul": 216, "ddm_ineg": 216, "ddm_irmul": 216, "ddm_irref": 216, "ddm_irref_den": 216, "ddm_isub": 216, "ddm_rref": 216, "ddm_transpos": 216, "ddot": [101, 105, 146, 155, 207, 210, 227, 292, 305], "de": [11, 49, 70, 74, 109, 112, 113, 115, 121, 197, 212, 224, 229, 240, 243, 265, 291, 292], "deactiv": [112, 291, 292], "deactivation_time_const": 112, "dead": 236, "deal": [14, 22, 50, 68, 69, 73, 81, 89, 94, 96, 122, 129, 135, 136, 142, 208, 210, 211, 215, 220, 223, 240, 245, 256, 266, 268, 275, 280, 295, 297, 299, 305], "dealt": [73, 94], "debian": 227, "deboer79": 197, "debug": [6, 50, 69, 96, 111, 144, 181, 258, 259, 268], "debug_decor": 268, "debugf": 268, "decad": 243, "decai": 96, "decent": 303, "decid": [3, 4, 9, 20, 22, 23, 24, 29, 49, 68, 105, 129, 156, 185, 217, 220, 222, 223, 227, 243, 246, 260, 301], "decim": [16, 24, 50, 69, 72, 73, 109, 111, 123, 217, 223, 299], "decimal_dig": 50, "decimal_separ": 227, "deciph": 70, "decipher_affin": 70, "decipher_atbash": 70, "decipher_bifid": 70, "decipher_bifid5": 70, "decipher_bifid6": 70, "decipher_elgam": 70, "decipher_gm": 70, "decipher_hil": 70, "decipher_kid_rsa": 70, "decipher_railf": 70, "decipher_rot13": 70, "decipher_rsa": 70, "decipher_shift": 70, "decipher_vigener": 70, "decis": [17, 39, 69, 75, 96, 236, 245, 260], "decistmt": 97, "decl1": 50, "decl2": 50, "declar": [16, 22, 33, 50, 82, 94, 105, 111, 126, 142, 144, 159, 171, 216, 227, 234, 237, 242, 243, 244, 247, 260], "decod": 70, "decode_mors": 70, "decompos": [38, 60, 61, 67, 69, 71, 75, 80, 105, 109, 176, 185, 186, 188, 218, 223, 226, 247], "decomposit": [4, 29, 34, 60, 67, 100, 101, 105, 216, 218, 220, 221, 229, 305], "decor": [3, 12, 24, 60, 69, 77, 256, 258, 263, 264, 267, 268, 290], "decoupl": 105, "decre": 94, "decreas": [48, 50, 61, 220, 292], "decrement": [50, 262], "decrypt": 70, "dedekind": 214, "dedent": [263, 268], "dedic": [5, 50, 52, 157, 219, 242, 260, 276, 278], "deduc": [24, 50, 94, 99, 237, 299], "deduct": [24, 50], "deduction_stack": 51, "deem": [13, 236], "deep": [14, 16, 24, 69, 75, 99, 105, 113, 223, 234, 239, 247, 300], "deepak": 221, "deeper": [25, 251, 300], "deepest": 251, "def": [3, 4, 5, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 44, 45, 49, 69, 74, 81, 99, 105, 109, 111, 150, 187, 217, 223, 227, 236, 239, 246, 261, 263, 265, 266, 267, 291, 292, 294, 297, 300, 301, 305], "default": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 22, 24, 29, 33, 34, 36, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 59, 60, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 91, 96, 97, 99, 101, 104, 105, 106, 109, 110, 111, 112, 113, 115, 117, 118, 121, 123, 125, 127, 129, 130, 131, 132, 134, 135, 136, 140, 142, 145, 156, 165, 182, 184, 187, 189, 190, 192, 196, 198, 201, 202, 204, 206, 207, 212, 213, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 228, 229, 230, 234, 235, 236, 239, 240, 243, 244, 245, 246, 247, 252, 253, 258, 259, 260, 262, 263, 265, 266, 268, 271, 292, 294, 295, 299, 301, 304, 305], "default_arrow_formatt": 49, "default_assumpt": 22, "default_curving_amount": 49, "default_curving_step": 49, "default_formatt": 49, "default_sort_kei": [13, 49, 58, 69, 251], "defaultdict": [22, 69, 265], "defeat": [3, 12, 243], "defect": 243, "defective_matrix": 243, "defens": 12, "defer": 105, "defici": [105, 109, 246], "deficientnumb": 109, "defin": [3, 4, 5, 11, 12, 13, 15, 16, 18, 20, 22, 23, 38, 41, 42, 44, 45, 48, 50, 51, 52, 53, 59, 60, 61, 64, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 92, 94, 96, 97, 101, 105, 109, 112, 113, 115, 117, 118, 123, 129, 130, 131, 134, 137, 138, 140, 141, 142, 144, 145, 147, 149, 151, 152, 153, 157, 159, 160, 163, 169, 171, 173, 178, 181, 187, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 229, 230, 233, 234, 235, 237, 239, 240, 243, 245, 246, 247, 248, 252, 253, 259, 260, 261, 265, 266, 267, 268, 271, 273, 274, 275, 276, 277, 278, 280, 281, 292, 297, 299, 305], "defined_fact": 22, "definit": [4, 13, 14, 15, 16, 23, 42, 46, 50, 51, 60, 61, 66, 68, 69, 71, 72, 74, 75, 77, 82, 85, 92, 94, 96, 100, 101, 105, 109, 111, 134, 140, 144, 149, 150, 157, 194, 197, 200, 202, 210, 211, 214, 215, 218, 223, 224, 227, 234, 247, 248, 259, 260, 261, 265, 266, 271, 275, 276, 277, 278, 292, 295, 305], "definite_matrix": 46, "definiteness_of_a_matrix": 105, "deflat": [218, 223], "deflect": [79, 85, 117, 118], "defn": 220, "deform": [94, 118], "deg": [96, 123, 142, 215, 218, 220, 222, 223], "deg2rad": [142, 291], "degbound": 220, "degener": [42, 245, 246], "degre": [20, 29, 51, 52, 60, 67, 68, 74, 77, 85, 96, 105, 117, 119, 121, 123, 125, 131, 134, 135, 140, 142, 143, 145, 146, 152, 160, 164, 201, 211, 214, 215, 218, 220, 222, 223, 226, 227, 230, 233, 236, 237, 239, 240, 243, 245, 247, 271, 288, 291], "degree_list": [218, 223], "degree_offset": 96, "degroote2016": [291, 292], "dejavu": 8, "dejavufont": 8, "del": [197, 262, 271, 279, 305], "delai": [69, 112, 123, 156, 236, 258, 292, 295], "delastel": 70, "delet": [12, 53, 98, 105, 224, 268, 305], "delete_doubl": 98, "deletechar": 268, "deliber": 222, "delic": [96, 214], "delimit": [5, 69, 227], "delin": 3, "delop": [271, 277, 278], "deloper": [271, 279], "delta": [13, 16, 50, 53, 63, 74, 92, 94, 98, 123, 156, 164, 192, 212, 216, 227, 234, 240, 243, 247, 248, 253], "delta_": [77, 189, 197, 212], "delta_fn": 50, "delta_funct": [11, 77, 96], "delta_i": 237, "delta_rang": [77, 192], "deltafunct": [77, 96], "deltaintegr": 96, "demand": [24, 41], "demonstr": [4, 5, 16, 22, 24, 27, 29, 33, 34, 35, 60, 61, 69, 74, 96, 109, 131, 134, 142, 146, 147, 156, 214, 217, 277, 292, 305], "den": [125, 216, 218, 239, 243], "den_list": 125, "den_reduc": 216, "dena": 243, "denest": [13, 69, 223, 239, 245, 265], "deni": 243, "denom": [69, 216, 217, 218, 222, 239], "denomin": [16, 69, 73, 77, 96, 109, 125, 132, 215, 216, 217, 218, 220, 222, 223, 226, 227, 236, 237, 239, 240, 243, 245, 305], "denoms_invert": 216, "denot": [13, 15, 16, 20, 60, 61, 69, 71, 77, 91, 92, 94, 96, 98, 99, 105, 109, 111, 121, 125, 130, 141, 197, 202, 208, 213, 214, 215, 220, 222, 230, 234, 235, 237, 243, 247, 252, 253, 271, 273, 275, 276, 278, 280], "dens": [15, 101, 103, 105, 216, 222, 223, 248, 266, 286, 300], "densearith": 220, "densebas": 220, "densematrix": [100, 105], "densetool": 220, "densiti": [145, 247, 258, 281], "denz": 125, "dep": [69, 243], "depend": [6, 9, 11, 13, 14, 15, 16, 18, 22, 24, 26, 29, 34, 35, 36, 40, 48, 50, 51, 60, 61, 68, 69, 70, 71, 74, 75, 77, 81, 86, 93, 94, 96, 97, 98, 105, 109, 110, 111, 115, 123, 127, 131, 135, 136, 140, 142, 144, 145, 146, 152, 154, 164, 165, 166, 181, 190, 192, 194, 196, 197, 207, 208, 213, 215, 216, 218, 220, 222, 223, 224, 226, 227, 228, 233, 237, 239, 240, 243, 244, 245, 246, 247, 258, 259, 260, 261, 265, 266, 278, 280, 281, 292, 297, 299], "depict": [117, 208, 246, 280], "deploy": 40, "deprec": [4, 6, 17, 31, 43, 61, 69, 96, 99, 105, 109, 128, 133, 134, 135, 152, 156, 213, 223, 227, 247, 253, 256, 257, 261, 263, 266, 288], "deprecat": 3, "deprecated_since_vers": [3, 256, 261, 263], "deprecationwarn": [131, 258, 263], "depth": [4, 5, 14, 16, 17, 39, 60, 69, 144, 213, 214, 227], "der": [59, 60], "derang": [74, 265], "derefer": 227, "dereferenc": 227, "derek": [51, 59], "deriv": [0, 4, 11, 12, 13, 15, 21, 24, 33, 48, 49, 50, 53, 59, 60, 69, 71, 75, 76, 77, 79, 86, 91, 92, 94, 96, 97, 99, 101, 105, 111, 113, 115, 121, 125, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 144, 145, 146, 147, 149, 152, 154, 155, 156, 181, 190, 194, 197, 198, 201, 202, 204, 206, 207, 208, 210, 213, 214, 215, 216, 218, 220, 222, 223, 224, 227, 229, 237, 239, 243, 244, 245, 249, 254, 260, 271, 274, 275, 291, 292, 296, 299, 306], "derivand": 254, "derive_by_arrai": 248, "derived_dim": 194, "derived_seri": [59, 60], "derived_subgroup": 60, "derived_unit": 200, "descend": [69, 214, 222, 260], "descent": [61, 240], "descr": 200, "describ": [3, 4, 5, 7, 11, 13, 14, 16, 22, 23, 24, 29, 36, 42, 49, 51, 59, 60, 61, 63, 64, 67, 68, 69, 70, 74, 77, 79, 84, 85, 94, 96, 105, 108, 109, 115, 125, 129, 130, 131, 134, 135, 136, 137, 138, 140, 142, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 171, 192, 197, 201, 202, 208, 210, 211, 214, 216, 217, 220, 222, 228, 234, 237, 239, 240, 243, 246, 247, 251, 260, 265, 266, 271, 273, 278, 292, 295], "descript": [0, 3, 4, 5, 13, 14, 30, 39, 49, 51, 59, 77, 96, 109, 164, 182, 189, 200, 210, 211, 212, 227, 251, 258, 260, 262, 263, 282, 302], "design": [2, 3, 4, 13, 14, 15, 17, 19, 23, 24, 27, 30, 35, 39, 46, 51, 59, 69, 105, 108, 111, 115, 116, 140, 159, 160, 216, 217, 221, 227, 232, 237, 243, 246, 299, 300, 304], "desir": [4, 13, 14, 16, 20, 24, 31, 36, 38, 41, 60, 61, 69, 70, 72, 73, 74, 75, 79, 83, 85, 99, 105, 108, 109, 110, 131, 135, 136, 137, 140, 152, 156, 177, 202, 210, 211, 216, 218, 220, 222, 223, 224, 227, 228, 230, 235, 239, 243, 245, 246, 259, 261, 262, 265, 278, 294], "desktop": 9, "despit": [3, 29, 38, 69, 305], "destin": 260, "destroi": [192, 236], "destruct": 223, "det": [34, 42, 105, 106, 159, 211, 216, 301], "det_lu": 105, "det_lu_decomposit": 105, "det_method": 105, "deta": 216, "detach": 8, "detail": [0, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 17, 19, 22, 24, 39, 49, 60, 69, 71, 74, 76, 77, 94, 95, 96, 97, 105, 109, 123, 134, 135, 142, 157, 159, 164, 182, 186, 202, 204, 212, 213, 214, 216, 220, 222, 229, 234, 239, 240, 241, 243, 244, 247, 252, 253, 258, 261, 263, 266, 276, 277, 278, 279, 282, 286, 295, 297, 301, 302, 304], "detect": [2, 8, 41, 48, 101, 105, 109, 111, 213, 217, 227, 243, 244, 246, 248, 265, 304], "determin": [3, 5, 13, 14, 15, 18, 20, 22, 23, 24, 27, 29, 32, 33, 34, 37, 43, 45, 46, 47, 48, 50, 51, 52, 53, 60, 69, 70, 71, 72, 73, 75, 79, 80, 82, 84, 85, 96, 97, 98, 101, 105, 109, 111, 117, 118, 125, 130, 132, 134, 136, 137, 138, 140, 151, 157, 160, 171, 184, 186, 188, 189, 192, 195, 197, 202, 208, 213, 214, 215, 216, 220, 222, 223, 227, 233, 234, 235, 237, 239, 240, 242, 243, 245, 246, 247, 251, 263, 265, 271, 278, 281, 292, 297, 305], "determinisit": 227, "determinist": [22, 60, 96, 109, 220, 221], "deterministic_vari": 109, "detool": 243, "deutil": [243, 244], "dev": [2, 3, 8, 9, 11, 263], "devel": [5, 212], "develop": [0, 3, 4, 5, 6, 10, 15, 20, 22, 24, 48, 51, 67, 111, 119, 159, 196, 213, 214, 217, 220, 245, 246, 291, 292, 299, 302], "deviat": [5, 165, 247], "devis": 20, "df": [20, 71, 243], "dfdx": 295, "dfdxcheck": 20, "dfm": 216, "dfrac": [111, 247], "dft": [13, 72, 128], "dfx": 69, "dg": 71, "dh_private_kei": 70, "dh_public_kei": 70, "dh_shared_kei": 70, "di": [9, 223], "di1": 60, "di2": 60, "di3": 60, "di4": 60, "diag": [101, 105, 108, 159, 216, 253, 301], "diag_block": 101, "diagmat": 159, "diagon": [46, 74, 100, 101, 105, 108, 140, 164, 216, 249], "diagonal_ax": 248, "diagonal_indic": 249, "diagonal_matrix": 46, "diagonal_solv": [100, 105], "diagonalhandl": 46, "diagonaliz": [105, 301], "diagonalpred": 46, "diagram": [27, 50, 58, 98, 117, 130, 138, 145, 146, 147, 152, 172, 252, 276, 300], "diagram_draw": 49, "diagram_format": 49, "diagramgrid": 49, "diamet": [69, 79], "diaz": 221, "dic": 220, "dice": 247, "dict": [13, 14, 16, 18, 22, 29, 32, 33, 37, 38, 50, 52, 61, 69, 70, 71, 85, 86, 99, 105, 109, 111, 113, 135, 136, 172, 184, 187, 198, 200, 202, 213, 216, 217, 218, 220, 222, 223, 224, 225, 227, 239, 240, 243, 244, 245, 246, 247, 251, 258, 259, 265, 271, 306], "dict_iter": 240, "dict_merg": 265, "dictionari": [2, 12, 13, 14, 15, 32, 36, 38, 49, 50, 58, 60, 61, 67, 69, 74, 83, 85, 96, 98, 105, 108, 109, 111, 117, 132, 135, 136, 140, 142, 144, 146, 149, 154, 156, 182, 192, 202, 211, 213, 215, 216, 218, 220, 222, 223, 225, 227, 234, 239, 240, 243, 244, 245, 246, 247, 251, 253, 258, 262, 265, 266, 271, 294, 301], "did": [2, 5, 11, 14, 23, 69, 96, 109, 129, 149, 197, 220, 224, 235, 245, 256, 266, 297, 299, 305], "didn": [12, 96, 105, 156], "die": [13, 222, 247], "die_rol": 247, "diedistribut": 247, "diepspac": 247, "dietrich": 55, "dif": 69, "diff": [4, 9, 11, 12, 13, 14, 15, 20, 24, 27, 33, 36, 48, 50, 69, 74, 75, 76, 77, 86, 91, 96, 101, 105, 113, 129, 132, 137, 145, 146, 159, 190, 202, 204, 207, 208, 211, 213, 218, 223, 226, 227, 237, 243, 244, 245, 248, 249, 254, 275, 278, 291, 292, 295, 299, 306], "diff_oper": 227, "diffeq": 306, "differ": [3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 29, 31, 32, 33, 34, 35, 36, 37, 41, 49, 50, 51, 52, 58, 59, 60, 61, 65, 68, 69, 70, 71, 73, 74, 75, 77, 80, 82, 84, 85, 89, 91, 93, 94, 96, 97, 98, 99, 101, 105, 109, 110, 111, 115, 117, 123, 125, 129, 131, 135, 137, 140, 142, 144, 148, 156, 160, 164, 165, 177, 178, 186, 187, 190, 192, 194, 196, 197, 201, 202, 203, 206, 207, 208, 211, 213, 214, 215, 216, 218, 220, 222, 223, 224, 226, 227, 228, 229, 230, 232, 234, 235, 236, 239, 240, 243, 244, 245, 246, 247, 248, 251, 253, 256, 258, 259, 260, 261, 262, 263, 265, 266, 271, 274, 278, 280, 292, 296, 297, 299, 300, 301, 304, 305], "difference_delta": 232, "differencedelta": 232, "differenti": [4, 5, 12, 13, 15, 27, 30, 48, 69, 74, 75, 77, 86, 87, 89, 92, 96, 111, 112, 113, 115, 125, 134, 135, 140, 142, 144, 146, 149, 152, 153, 154, 155, 156, 159, 160, 181, 187, 201, 202, 204, 206, 208, 211, 214, 220, 224, 226, 227, 232, 237, 239, 243, 244, 271, 278, 279, 282, 289, 292, 295, 296, 299], "differentialoper": [91, 92, 181], "differentialoperatoralgebra": 92, "differentiate_finit": [48, 69, 295], "differnc": 218, "diffgeom": 71, "diffi": 70, "difficult": [5, 11, 12, 13, 14, 22, 36, 38, 69, 105, 142, 224, 237, 243, 244, 246, 259, 266, 281, 299, 305], "difficulti": [71, 109, 143], "diffus": [112, 292], "dig": [24, 50, 300], "digamma": [4, 74, 77, 227], "digamma_funct": 77, "digammafunct": 77, "digit": [4, 11, 14, 15, 16, 35, 50, 69, 70, 72, 73, 79, 96, 99, 109, 152, 202, 217, 223, 234, 239, 265, 294], "digit_2txt": 227, "digraph": [227, 265, 304], "dihedr": [52, 55, 57, 60, 61], "dihedral2": 60, "dihedral_group": [57, 60], "dihedralgroup": [57, 60, 67], "dilbert": 96, "dim": [50, 71, 84, 105, 110, 194, 200, 227, 250, 253, 286], "dim1": 252, "dim2": 252, "dim_can_vector": 194, "dim_handl": 227, "dim_si": 194, "dim_vector": 194, "dimens": [34, 50, 53, 70, 71, 77, 78, 80, 82, 83, 84, 86, 98, 101, 105, 108, 112, 115, 117, 126, 146, 166, 176, 178, 181, 186, 195, 196, 199, 200, 202, 213, 216, 227, 240, 243, 245, 247, 248, 249, 252, 253, 260, 271, 274, 276, 288], "dimension": [34, 48, 50, 53, 71, 81, 82, 83, 84, 85, 101, 105, 118, 126, 159, 166, 168, 178, 194, 208, 209, 213, 214, 220, 222, 223, 226, 227, 245, 246, 248, 249, 253, 259, 280, 306], "dimension_system": 200, "dimensional_depend": 194, "dimensionless": [196, 197, 292], "dimensions": 194, "dimensionsystem": 194, "diment": 105, "dimino": [51, 60], "dimitar": 236, "dimsys_si": [194, 195], "diop_bf_dn": 240, "diop_dn": 240, "diop_general_pythagorean": 240, "diop_general_sum_of_even_pow": 240, "diop_general_sum_of_squar": 240, "diop_linear": 240, "diop_quadrat": 240, "diop_solv": 240, "diop_ternary_quadrat": 240, "diop_ternary_quadratic_norm": 240, "diophantin": [30, 31, 109, 220, 241, 283], "diophantineequ": 240, "diophantineequationtyp": 240, "diophantinesolutionset": 240, "diophantu": 240, "diplform": 91, "diploma": 271, "diplomat": 70, "dir": [16, 69, 117, 229, 234, 265], "dir_vec": 292, "dirac": [105, 123, 127, 128, 190, 227], "diracdelta": [4, 11, 77, 96, 187, 192, 227], "direct": [3, 4, 5, 13, 14, 15, 21, 36, 42, 44, 45, 49, 54, 57, 60, 65, 68, 69, 71, 73, 75, 78, 82, 83, 84, 85, 99, 105, 112, 113, 115, 117, 118, 119, 121, 129, 130, 131, 134, 137, 138, 140, 141, 144, 145, 146, 150, 159, 178, 202, 208, 210, 211, 214, 216, 217, 220, 224, 234, 237, 245, 253, 256, 265, 271, 276, 277, 280, 291, 292], "direct_product": 253, "direct_sum": 178, "directed_complete_partial_ord": 75, "direction": 211, "direction_cosin": [82, 84], "direction_ratio": [82, 84], "directional_deriv": 278, "directli": [2, 3, 4, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 29, 40, 44, 45, 48, 49, 50, 60, 68, 69, 71, 75, 80, 101, 105, 109, 111, 112, 130, 138, 141, 142, 175, 178, 190, 195, 201, 202, 206, 213, 214, 216, 217, 218, 222, 223, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 258, 259, 260, 261, 262, 263, 292, 295, 306], "director": 79, "director_circl": 79, "directori": [2, 4, 5, 7, 8, 11, 12, 40, 45, 50, 111, 243, 258, 259, 268], "directproduct": [54, 57], "directrix": 79, "directsumhilbertspac": 178, "dirichlet": [68, 77, 247], "dirichlet_distribut": 247, "dirichlet_eta": [77, 227], "dirichlet_eta_funct": 77, "dirichletdistribut": 247, "dirichleteta": 227, "disabl": [9, 12, 15, 36, 69, 70, 94, 96, 109, 220, 223, 227, 235, 243, 245, 256, 258, 261, 265, 266], "disable_view": 261, "disadvantag": [14, 69], "disallow": [14, 24, 69, 223, 228, 239, 261], "disambigu": 69, "disc": [117, 143, 152, 210, 288], "discard": [69, 216, 222, 227, 246], "discard_befor": 222, "discern": [43, 45], "disciplin": 214, "disco": 221, "discontinu": [13, 48, 73, 75, 96, 117, 230, 245], "discourag": [15, 22, 69, 239], "discov": [70, 94, 129, 251, 301], "discoveri": [220, 301], "discrat": 213, "discrep": 196, "discret": [13, 48, 50, 51, 59, 61, 69, 70, 77, 109, 125, 192, 197, 213, 229, 232, 243, 245, 246, 283, 294], "discrete_fourier_transform_": 72, "discrete_log": 109, "discrete_uniform_distribut": 247, "discretedistributionhandmad": 247, "discretelogarithm": 109, "discretemarkovchain": 247, "discreterv": 247, "discreteuniform": 247, "discreteuniformdistribut": 247, "discrimin": [109, 218, 220, 222, 223], "discrit": 20, "discuss": [0, 3, 4, 5, 7, 11, 12, 13, 16, 17, 18, 20, 22, 23, 24, 39, 51, 60, 70, 77, 109, 116, 129, 135, 142, 152, 156, 157, 201, 209, 210, 211, 217, 253, 262, 282, 292, 294, 296, 297, 299, 300, 302, 304, 305], "disguis": 94, "disjoint": [46, 49, 58, 61, 223, 235, 265], "disjoint_set": 235, "disjoint_union": 235, "disjointunion": 235, "disjunct": 99, "disk": [50, 70, 235, 246, 266], "dispatch": [12, 15, 44, 45, 46, 69, 70, 187, 227, 246, 262], "dispers": [221, 247], "dispersionset": 223, "displac": [130, 208, 210, 280], "displai": [4, 5, 7, 11, 16, 22, 23, 36, 69, 70, 73, 94, 98, 117, 118, 123, 163, 196, 202, 206, 207, 213, 217, 218, 227, 235, 251, 258], "displayhook": [227, 258], "disregard": 49, "diss": 247, "dissimilar": 245, "dist": 247, "distanc": [24, 49, 53, 61, 79, 82, 83, 84, 85, 117, 118, 128, 129, 130, 134, 138, 141, 146, 147, 161, 165, 195, 206, 208, 280, 292], "distinct": [3, 5, 14, 15, 18, 22, 24, 37, 50, 60, 61, 69, 70, 74, 82, 94, 99, 105, 109, 140, 210, 217, 222, 223, 227, 235, 237, 305], "distinguish": [11, 19, 22, 23, 49, 60, 73, 98, 142, 191, 197, 214], "distract": 4, "distribut": [2, 8, 40, 60, 67, 69, 77, 85, 96, 117, 118, 119, 191, 215, 218, 223, 227, 253], "distribute_and_over_or": 99, "distribute_or_over_and": 99, "distribute_order_term": [69, 239], "distribute_xor_over_and": 99, "distributedmodul": 220, "distributionshandbook": 247, "distutil": 259, "div": [69, 111, 215, 217, 218, 223, 227, 239, 300], "divaugmentedassign": 50, "diverg": [68, 77, 161, 203, 271, 274], "divergence_theorem": 281, "divid": [13, 15, 60, 68, 69, 70, 74, 85, 105, 109, 135, 136, 196, 197, 215, 216, 217, 218, 220, 222, 223, 227, 243, 262, 300], "divide_last": 216, "dividend": [69, 218], "divis": [12, 16, 24, 69, 105, 109, 135, 194, 196, 214, 216, 217, 218, 219, 220, 223, 225, 227, 240, 243, 245, 258, 266, 297, 300, 304], "divisisor": 109, "divisor": [24, 46, 60, 69, 70, 74, 105, 109, 214, 215, 216, 217, 218, 220, 221, 222, 223, 226], "divisor_count": [74, 109], "divisor_funct": [74, 109], "divisor_sigma": [13, 15, 74, 109], "divmod": [215, 217, 218], "dixon": [216, 221], "django": 297, "djoyc": 247, "dk": [42, 117, 222], "dkei": 69, "dl": [68, 211, 216, 218, 221, 239], "dlmf": [4, 75, 77], "dlp": 70, "dm": [74, 105, 109, 216, 222, 291], "dmc": [149, 150, 151], "dmdomainerror": [106, 216], "dmension": 98, "dmf": 218, "dmnc": 105, "dmnoninvertiblematrixerror": 216, "dmnonsquarematrixerror": 216, "dmnotafield": 216, "dmp": [69, 214, 218, 223], "dmp_": [217, 220], "dmp_ab": 220, "dmp_add": 220, "dmp_add_ground": 220, "dmp_add_mul": 220, "dmp_add_term": 220, "dmp_apply_pair": 220, "dmp_cancel": 220, "dmp_clear_denom": 220, "dmp_compos": 220, "dmp_content": 220, "dmp_convert": 220, "dmp_copi": 220, "dmp_deflat": 220, "dmp_degre": 220, "dmp_degree_in": 220, "dmp_degree_list": 220, "dmp_diff": 220, "dmp_diff_eval_in": 220, "dmp_diff_in": 220, "dmp_discrimin": 220, "dmp_div": 220, "dmp_eject": 220, "dmp_euclidean_pr": 220, "dmp_eval": 220, "dmp_eval_in": 220, "dmp_eval_tail": 220, "dmp_exclud": 220, "dmp_expand": 220, "dmp_exquo": 220, "dmp_exquo_ground": 220, "dmp_ext_factor": 220, "dmp_factor_list": 220, "dmp_factor_list_includ": 220, "dmp_ff_div": 220, "dmp_ff_prs_gcd": 220, "dmp_from_dict": 220, "dmp_from_sympi": 220, "dmp_gcd": 220, "dmp_gcdex": 220, "dmp_ground": 220, "dmp_ground_cont": 220, "dmp_ground_extract": 220, "dmp_ground_lc": 220, "dmp_ground_mon": 220, "dmp_ground_nth": 220, "dmp_ground_p": 220, "dmp_ground_primit": 220, "dmp_ground_tc": 220, "dmp_ground_trunc": 220, "dmp_half_gcdex": 220, "dmp_includ": 220, "dmp_inflat": 220, "dmp_inject": 220, "dmp_inner_gcd": 220, "dmp_inner_subresult": 220, "dmp_integr": 220, "dmp_integrate_in": 220, "dmp_invert": 220, "dmp_irreducible_p": 220, "dmp_l1_norm": 220, "dmp_lc": 220, "dmp_lcm": 220, "dmp_lift": 220, "dmp_list_term": 220, "dmp_max_norm": 220, "dmp_mul": 220, "dmp_mul_ground": 220, "dmp_mul_term": 220, "dmp_multi_defl": 220, "dmp_neg": 220, "dmp_negative_p": 220, "dmp_nest": 220, "dmp_normal": 220, "dmp_nth": 220, "dmp_one": 220, "dmp_one_p": 220, "dmp_pdiv": 220, "dmp_permut": 220, "dmp_pexquo": 220, "dmp_positive_p": 220, "dmp_pow": 220, "dmp_pquo": 220, "dmp_prem": 220, "dmp_primit": 220, "dmp_primitive_pr": 220, "dmp_prs_result": 220, "dmp_python": [13, 214, 217, 218], "dmp_qq_collins_result": 220, "dmp_qq_heu_gcd": 220, "dmp_quo": 220, "dmp_quo_ground": 220, "dmp_rais": 220, "dmp_rem": 220, "dmp_result": 220, "dmp_revert": 220, "dmp_rr_div": 220, "dmp_rr_prs_gcd": 220, "dmp_slice": 220, "dmp_sqr": 220, "dmp_strip": 220, "dmp_sub": 220, "dmp_sub_ground": 220, "dmp_sub_mul": 220, "dmp_sub_term": 220, "dmp_subresult": 220, "dmp_swap": 220, "dmp_tc": 220, "dmp_terms_gcd": 220, "dmp_to_dict": 220, "dmp_to_tupl": 220, "dmp_trial_divis": 220, "dmp_true_lt": 220, "dmp_trunc": 220, "dmp_valid": 220, "dmp_zero": 220, "dmp_zero_p": 220, "dmp_zz_collins_result": 220, "dmp_zz_diophantin": 220, "dmp_zz_factor": 220, "dmp_zz_heu_gcd": 220, "dmp_zz_mignotte_bound": 220, "dmp_zz_modular_result": 220, "dmp_zz_wang": 220, "dmp_zz_wang_hensel_lift": 220, "dmp_zz_wang_lead_coeff": 220, "dmp_zz_wang_non_divisor": 220, "dmp_zz_wang_test_point": 220, "dmrankerror": [216, 222], "dmshapeerror": [106, 216], "dmtc": 265, "dmvalueerror": 216, "dn": [61, 247], "dnf": [8, 99], "dnh": 154, "do": [1, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 48, 49, 50, 51, 52, 61, 65, 68, 69, 70, 71, 72, 75, 77, 79, 81, 84, 85, 88, 94, 96, 97, 99, 101, 102, 105, 106, 109, 110, 111, 122, 125, 129, 131, 135, 140, 142, 143, 145, 146, 147, 150, 153, 154, 157, 159, 164, 167, 172, 176, 181, 184, 186, 188, 194, 196, 197, 200, 203, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 228, 230, 234, 235, 236, 237, 239, 240, 243, 244, 245, 249, 252, 253, 256, 258, 259, 261, 263, 265, 266, 268, 274, 276, 277, 278, 280, 291, 292, 294, 295, 297, 298, 299, 300, 301, 303, 305], "do1": 50, "do2": 50, "do_sub": 234, "dobelman": 247, "doc": [2, 3, 4, 5, 7, 9, 11, 12, 16, 26, 39, 50, 60, 68, 69, 85, 97, 194, 217, 219, 240, 243, 258, 259, 261, 263, 265, 271, 276, 289], "docbook": 8, "docbook2x": 8, "dockerfil": 8, "docstr": [3, 5, 6, 7, 11, 12, 13, 16, 24, 31, 49, 50, 62, 69, 91, 94, 96, 105, 109, 114, 116, 120, 124, 126, 133, 152, 157, 162, 179, 185, 186, 188, 205, 209, 223, 230, 233, 234, 236, 239, 243, 244, 245, 246, 252, 253, 258, 261, 266, 268, 272, 279, 282, 286, 288, 292], "docstring_limit": 266, "doctest": [3, 4, 5, 11, 16, 24, 62, 77, 105, 109, 144, 181, 192, 217, 223, 243, 258, 261, 263, 304], "doctest_arg": 258, "doctest_depends_on": [12, 261], "doctest_kwarg": 258, "doctestpars": 258, "doctestrunn": 258, "document": [6, 10, 12, 13, 14, 15, 21, 24, 30, 44, 45, 46, 60, 65, 69, 70, 75, 76, 77, 81, 91, 94, 95, 97, 101, 105, 109, 110, 116, 118, 129, 135, 152, 154, 155, 157, 159, 167, 181, 187, 201, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 223, 227, 237, 241, 243, 245, 246, 256, 258, 260, 261, 263, 265, 271, 278, 279, 282, 295, 297, 298, 304, 305], "documentclass": [97, 207, 227], "docutil": 5, "dod": 216, "doe": [2, 4, 5, 7, 9, 11, 12, 13, 14, 15, 19, 22, 23, 24, 29, 30, 36, 37, 38, 39, 40, 41, 44, 45, 48, 49, 50, 51, 60, 61, 65, 67, 68, 69, 70, 71, 73, 75, 77, 79, 80, 83, 85, 94, 96, 99, 105, 108, 109, 111, 127, 129, 132, 135, 136, 140, 142, 144, 149, 153, 157, 172, 176, 182, 186, 188, 191, 210, 211, 213, 215, 216, 217, 218, 220, 222, 223, 224, 227, 234, 235, 236, 237, 239, 240, 242, 243, 245, 248, 252, 253, 256, 258, 260, 262, 265, 266, 268, 271, 273, 276, 292, 294, 295, 297, 300, 301, 304, 305, 306], "doesn": [3, 4, 12, 13, 14, 16, 24, 29, 50, 93, 112, 141, 142, 146, 156, 159, 211, 215, 224, 226, 236, 239, 246, 306], "dof": 145, "doi": [0, 4, 42, 48, 55, 61, 68, 105, 109, 136, 216, 218, 221, 236, 239, 240, 247, 265], "doit": [14, 27, 68, 69, 71, 74, 75, 77, 96, 101, 113, 125, 169, 171, 173, 184, 186, 189, 190, 192, 202, 212, 223, 229, 234, 239, 243, 244, 247, 249, 271, 274, 275, 277, 278, 292, 295, 300], "doit_numer": 69, "dok": [108, 216], "dollar": [5, 12, 299], "dom": [217, 218, 220, 235], "domain": [2, 4, 11, 13, 15, 20, 24, 27, 29, 34, 48, 49, 69, 70, 72, 74, 75, 77, 88, 90, 91, 94, 96, 101, 105, 106, 109, 122, 125, 142, 159, 213, 214, 216, 219, 220, 222, 224, 225, 242, 243, 245, 247, 289, 301, 306], "domain_check": 246, "domain_or_field": 218, "domain_or_r": [214, 218], "domainel": [216, 217, 218, 225], "domainerror": [216, 220, 223], "domainmatrix": [13, 34, 100, 105, 219, 222, 225, 289], "domainscalar": 216, "domin": [94, 105, 232, 234], "dominik": [69, 229], "don": [3, 11, 12, 13, 16, 23, 24, 45, 50, 77, 94, 99, 105, 110, 111, 113, 129, 142, 201, 210, 211, 217, 227, 237, 246, 248, 256, 261, 280, 294, 295, 299, 300, 305], "donal": 223, "donald": [221, 262], "donaldlab": 221, "done": [3, 4, 9, 11, 12, 13, 14, 15, 16, 20, 24, 44, 45, 47, 48, 49, 50, 60, 62, 67, 69, 70, 71, 74, 77, 80, 81, 94, 96, 105, 109, 116, 134, 135, 140, 142, 144, 150, 157, 159, 178, 187, 188, 189, 192, 194, 195, 202, 208, 210, 211, 213, 214, 216, 220, 223, 224, 226, 227, 228, 236, 239, 240, 243, 245, 246, 247, 252, 253, 258, 259, 262, 266, 275, 276, 292, 294, 297, 299, 300, 301], "dont_accept_blanklin": 258, "dont_accept_true_for_1": 258, "dontcar": 99, "doprint": [50, 227], "dorin": 240, "doron": 68, "dot": [60, 61, 65, 67, 70, 82, 84, 91, 105, 125, 131, 135, 137, 140, 144, 145, 146, 149, 150, 151, 154, 155, 156, 159, 176, 201, 202, 204, 207, 210, 211, 212, 214, 215, 220, 223, 227, 246, 247, 265, 271, 275, 277, 278, 291, 292], "dot_rot_grad_ynm": 212, "dotprint": [12, 300, 304], "dotprodsimp": 105, "dotsb": [74, 229], "dotsc": [74, 229], "doubl": [4, 5, 8, 36, 48, 50, 65, 69, 70, 74, 105, 111, 134, 151, 152, 210, 216, 217, 227, 236, 237, 260, 305], "double_coset_can_rep": 65, "double_factori": 74, "double_pendulum": 142, "doubli": 109, "doubt": [11, 99, 142], "dover": 243, "down": [3, 4, 8, 11, 12, 22, 74, 101, 127, 146, 210, 211, 213, 218, 229, 235, 237, 239, 243, 262, 301, 305], "download": [5, 7, 9, 40, 49, 91, 236, 243, 271, 299], "downsid": [11, 301], "downstream": [13, 22], "downward": [117, 118, 119, 121, 222], "doy": 60, "dozen": [3, 15, 24, 305], "dp": [24, 50, 69, 72, 77, 109, 217, 218, 245, 261], "dpi": [97, 207], "dpll": 2, "dq_dict": 146, "dqdt": 292, "dr": [49, 71, 227, 243], "draft": 11, "drag": 213, "dramat": 262, "drastic": 212, "draw": [117, 121, 172, 227, 247], "drawer": 49, "drawn": [49, 60, 98, 213, 217, 225], "dreal": 227, "drep": 216, "drho": 71, "driver": [227, 259], "drop": [8, 11, 75, 96, 110, 149, 218, 220], "drop_to_ground": 218, "dsign": 50, "dsolv": [4, 12, 15, 36, 243, 244, 245, 295, 299, 306], "dsolve_system": 243, "dt": [27, 36, 71, 77, 112, 146, 159, 201, 202, 204, 210, 211, 223, 243, 292, 305], "dt2": 159, "dth": 20, "dtheta": 71, "dtmc": 247, "dtype": [14, 105, 110, 214, 216, 217, 218, 227, 266], "du": 244, "dual": [105, 184, 190], "dual_class": 190, "duart": 243, "dudt": 292, "due": [4, 8, 12, 13, 14, 20, 24, 35, 48, 50, 52, 59, 60, 69, 71, 86, 105, 109, 117, 121, 140, 142, 144, 156, 165, 192, 208, 211, 217, 218, 223, 227, 230, 240, 242, 244, 247, 263, 274, 280, 291, 292, 305], "duf": 130, "duffingspr": 130, "duke": 221, "dum": 253, "dummi": [15, 50, 65, 68, 69, 75, 94, 96, 105, 142, 159, 187, 192, 213, 217, 218, 222, 223, 224, 233, 234, 235, 237, 239, 243, 246, 251, 253, 256, 260, 265, 266], "dummifi": 266, "dummy_eq": [12, 69], "dummy_index": 69, "dummy_nam": [13, 253], "dummy_vari": 68, "dummywrapp": 259, "dump_c": [259, 260], "dump_cod": 260, "dump_f95": 260, "dump_h": 260, "dump_jl": 260, "dump_m": 260, "dump_pyx": 259, "dump_r": 260, "dup": [60, 218], "dup_": [217, 220], "dup__": 220, "dup_cont": 220, "dup_cyclotomic_p": 220, "dup_decompos": 220, "dup_extract": 220, "dup_factor_list": 217, "dup_flint": [13, 218], "dup_gf_factor": 220, "dup_lshift": 220, "dup_mirror": 220, "dup_mon": 220, "dup_primit": 220, "dup_random": 220, "dup_real_imag": 220, "dup_revers": 220, "dup_rshift": 220, "dup_scal": 220, "dup_shift": 220, "dup_sign_vari": 220, "dup_transform": 220, "dup_zz_cyclotomic_factor": 220, "dup_zz_cyclotomic_poli": 220, "dup_zz_factor": 220, "dup_zz_factor_sqf": 220, "dup_zz_hensel_lift": 220, "dup_zz_hensel_step": 220, "dup_zz_irreducible_p": 220, "dup_zz_zassenhau": 220, "duplic": [12, 14, 16, 60, 63, 70, 75, 77, 105, 109, 140, 235, 243, 265, 298], "dure": [3, 12, 13, 16, 41, 50, 69, 70, 105, 109, 111, 112, 115, 131, 135, 159, 160, 210, 222, 227, 236, 245, 246, 263, 265], "dv": 240, "dvi": [97, 207, 227], "dvioption": 227, "dvip": 97, "dvipng": 8, "dx": [5, 13, 14, 15, 20, 24, 32, 48, 50, 65, 69, 71, 73, 77, 86, 88, 91, 92, 93, 94, 96, 105, 111, 117, 128, 135, 181, 211, 223, 224, 230, 240, 243, 244, 248, 291, 295, 299, 304, 306], "dxa": 92, "dxdt": 291, "dxi": 71, "dxy": [32, 240], "dy": [24, 27, 50, 71, 86, 105, 117, 128, 159, 223, 227, 240, 243, 244, 291, 295], "dy2": 159, "dyad": [129, 159, 202, 275], "dyadic": [4, 72, 131, 137, 142, 144, 149, 151, 159, 202, 204, 207, 209, 271, 274, 279, 291], "dyadic_product": [209, 279], "dyadic_tensor": [202, 271], "dyadicadd": 275, "dyadicmul": 275, "dyadicproduct": 279, "dyer": 223, "dyn": 136, "dyn_implicit_mat": [140, 160], "dyn_implicit_rh": [140, 160], "dynam": [109, 112, 115, 116, 122, 123, 125, 129, 132, 135, 136, 137, 138, 140, 141, 144, 152, 154, 155, 156, 157, 158, 159, 160, 201, 202, 204, 206, 210, 211, 262, 263, 271, 291], "dynamic_symbol": 140, "dynamicsymbol": [4, 105, 115, 129, 130, 131, 132, 134, 135, 137, 138, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 202, 204, 206, 207, 208, 210, 211, 291, 292], "dynamicsystem": 123, "dynkin": 98, "dynkin_diagram": 98, "dynkindiagram": 98, "dz": [24, 117, 128, 237, 291], "e": [0, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 22, 23, 24, 27, 30, 34, 35, 38, 40, 41, 42, 46, 48, 49, 50, 51, 55, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 79, 81, 82, 83, 84, 85, 86, 91, 92, 94, 96, 98, 99, 105, 109, 111, 112, 115, 116, 117, 118, 121, 125, 126, 130, 131, 134, 135, 137, 138, 140, 141, 142, 155, 156, 159, 160, 161, 164, 171, 172, 176, 181, 182, 184, 187, 189, 191, 192, 197, 198, 202, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 265, 266, 268, 271, 275, 278, 280, 281, 291, 292, 294, 295, 299, 300, 305], "e0": 234, "e1": [77, 79, 86, 142, 217, 222, 234, 243, 246], "e103": 0, "e2": [24, 48, 69, 72, 79, 86, 96, 105, 109, 123, 142, 216, 217, 222, 223, 234, 243, 246, 247, 265], "e2row": 142, "e3": [142, 234, 243], "e4": [142, 234], "e6": 98, "e_": [69, 74, 105], "e_0": 70, "e_1": [59, 105, 214, 220, 223], "e_2": [220, 223], "e_bicep": 291, "e_d": 220, "e_dom": 217, "e_first": 292, "e_i": [71, 214, 237, 253], "e_j": 71, "e_k": 220, "e_muscl": [115, 292], "e_n": [59, 74, 98, 105, 168, 214, 223], "e_nl": [127, 193], "e_nl_dirac": 127, "e_r": 71, "e_rho": 71, "e_theta": 71, "e_tricep": 291, "e_val": 291, "e_x": [71, 253], "e_z": 253, "e_zeroth": 292, "each": [3, 8, 9, 11, 12, 13, 14, 15, 16, 18, 22, 24, 29, 31, 32, 33, 34, 36, 39, 42, 45, 46, 48, 49, 50, 51, 52, 53, 60, 61, 65, 69, 70, 71, 72, 73, 74, 75, 77, 79, 84, 85, 86, 91, 92, 94, 96, 98, 99, 101, 105, 109, 111, 115, 117, 121, 123, 125, 130, 132, 134, 135, 138, 142, 144, 146, 149, 151, 153, 154, 157, 176, 189, 192, 201, 202, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 225, 227, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 248, 251, 252, 253, 256, 258, 260, 262, 265, 266, 268, 271, 273, 274, 276, 278, 280, 291, 292, 295, 298, 300, 305, 306], "eager": [69, 266], "eagertensor": 266, "earli": [3, 11, 14, 69, 109, 181, 240], "earlier": [13, 111, 129, 224, 228, 237, 239, 266, 276, 278, 300], "earth": [208, 280, 291], "eas": [0, 142, 211, 213, 227, 230], "easi": [3, 7, 11, 12, 14, 15, 26, 57, 61, 69, 77, 94, 96, 110, 146, 152, 210, 214, 217, 222, 227, 234, 237, 240, 243, 246, 251, 252, 253, 292, 294, 295, 297, 298, 299, 300, 301, 304], "easier": [3, 9, 11, 12, 13, 14, 15, 23, 37, 52, 69, 118, 142, 144, 210, 218, 222, 224, 237, 243, 246, 260, 266, 275, 292, 299, 305, 306], "easiest": [5, 9, 11, 13, 15, 16, 69, 214, 217, 240, 266, 276, 294, 300, 305], "easili": [5, 13, 14, 22, 24, 36, 40, 52, 69, 70, 92, 94, 105, 109, 110, 130, 134, 137, 138, 154, 190, 210, 223, 226, 227, 232, 239, 240, 243, 245, 246, 249, 259, 299], "east": 70, "easyfit": 247, "ebnf": 239, "ec": 223, "ecart": 220, "eccentr": [77, 79], "echelon": [105, 216, 246, 301], "echelon_form": [105, 301], "eco": 265, "econ": 247, "econom": [61, 96, 265], "economi": 61, "ecosystem": [0, 14], "ect": 245, "ed": [4, 61, 77, 96, 105, 221, 245, 247], "edg": [53, 62, 63, 98, 216, 227, 246, 265, 304], "edit": [5, 9, 11, 12, 96, 105, 109, 220, 221, 223], "editor": [11, 12, 14], "edmond": 212, "edmonds74": 212, "edu": [11, 48, 53, 60, 61, 70, 72, 74, 96, 105, 109, 125, 216, 221, 226, 236, 240, 243, 247, 271], "educ": [36, 70, 105], "ee": [212, 222, 292], "eea": 220, "eeci": 105, "eez": 220, "ef": 265, "effect": [2, 4, 7, 12, 14, 24, 35, 40, 60, 62, 69, 86, 94, 96, 105, 117, 142, 144, 156, 164, 192, 202, 213, 217, 220, 224, 226, 243, 291, 292, 297], "effici": [15, 20, 22, 29, 34, 42, 48, 50, 53, 60, 65, 69, 72, 73, 74, 85, 86, 101, 105, 109, 110, 125, 134, 135, 159, 212, 215, 216, 217, 218, 220, 223, 224, 225, 226, 239, 240, 245, 259, 266, 294, 300, 301, 305], "effort": [11, 110, 218, 220], "eg": [69, 142, 199, 246], "egg": 268, "eggsham": 268, "egypt": 109, "egyptian": 109, "egyptian_fract": 109, "ei": [32, 36, 77, 94, 222, 227, 237, 240, 243, 253], "eick": [60, 67], "eig": [105, 142, 159], "eigen": 168, "eigenbra": [170, 183, 189], "eigenket": [170, 183, 189], "eigenspac": 105, "eigenst": [170, 182, 187, 189, 190], "eigenv": [105, 142, 144, 159, 186, 299, 301], "eigenvalu": [105, 142, 144, 186, 189, 299], "eigenvec": 142, "eigenvect": [105, 142, 159, 186, 301], "eigenvector": [105, 142, 186, 187, 212], "eight": [20, 38, 227], "eighth": 113, "eigval": 159, "eigvec": [142, 159], "eijk": 77, "einstein": [192, 253], "eisenstein": 220, "either": [2, 4, 5, 8, 11, 12, 13, 14, 15, 16, 22, 23, 24, 29, 32, 33, 34, 35, 37, 42, 46, 48, 49, 53, 61, 68, 69, 70, 73, 74, 75, 77, 84, 86, 92, 94, 96, 97, 99, 105, 109, 115, 125, 130, 131, 134, 135, 136, 138, 140, 141, 142, 155, 157, 159, 176, 182, 189, 192, 194, 196, 207, 211, 213, 215, 216, 217, 218, 220, 222, 223, 227, 229, 234, 235, 236, 237, 240, 243, 244, 245, 246, 247, 248, 251, 252, 259, 265, 266, 271, 280, 292, 297, 300, 301], "ej": 0, "eject": [218, 223], "ektf": 109, "elabor": [4, 25, 208, 278], "elast": [115, 117, 118], "elastic_modulu": 117, "elastic_tendon_muscl": 115, "elbow": [214, 291], "electr": [112, 163, 165, 208, 278, 280, 292], "electric_potenti": [208, 278], "electromagnet": [163, 196, 208, 253, 280], "electron": [77, 127, 236], "eleg": [52, 224, 226], "elegantli": 32, "elem": [50, 60, 214], "elem_pol": [27, 125], "elem_zero": [27, 125], "element": [5, 13, 14, 15, 16, 19, 22, 27, 32, 42, 46, 49, 50, 52, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 85, 92, 94, 96, 98, 99, 100, 101, 104, 105, 108, 109, 110, 115, 117, 118, 125, 126, 137, 159, 161, 164, 178, 189, 197, 206, 209, 211, 213, 214, 215, 216, 218, 220, 223, 225, 226, 227, 233, 234, 235, 237, 239, 240, 243, 245, 246, 247, 248, 252, 259, 261, 262, 265, 266, 267, 274, 291, 292, 295, 300, 301, 304, 305], "element_": 235, "element_from_alg_num": 222, "element_from_anp": 222, "element_from_poli": 222, "element_from_r": 222, "element_kind": [69, 104, 235], "element_list": 216, "element_ord": 98, "elementari": [4, 11, 12, 22, 23, 24, 60, 69, 70, 73, 74, 76, 77, 91, 94, 96, 105, 109, 157, 185, 188, 218, 223, 224, 265, 266, 275, 283], "elementary_col_op": 105, "elementary_row_op": 105, "elementaryfunct": 75, "elementof": 227, "elements_doubl": 216, "elements_k": 217, "elements_sympi": 217, "elementwis": [101, 105, 216, 248], "elemsdict": 216, "eleventh": 113, "elgam": 70, "elgamal_private_kei": 70, "elgamal_public_kei": 70, "elif": [22, 23, 24, 75], "elimin": [18, 20, 34, 50, 65, 69, 99, 100, 105, 129, 145, 216, 218, 225, 226, 228, 230, 239, 243, 245, 246, 253, 260, 301], "eliminate_gen": 60, "eliminate_impl": 99, "ellips": [4, 80, 81, 85, 164, 213, 227, 289, 304], "ellipsi": [258, 266], "ellipt": [79, 109, 214], "elliptic": [77, 227], "elliptic_": [77, 79, 227], "elliptic_f": [77, 227], "elliptic_integr": 77, "elliptic_k": [77, 227], "elliptic_pi": [77, 227], "ellipticcurv": 32, "elliptice2": 77, "ellipticf": 77, "ellipticintegr": 77, "elliptick": [77, 227], "ellipticpi": [77, 227], "ellipticpi3": 77, "ellis": 79, "els": [3, 7, 11, 12, 13, 14, 15, 22, 23, 24, 31, 50, 59, 61, 65, 69, 70, 77, 79, 83, 85, 86, 94, 96, 99, 105, 109, 125, 192, 202, 213, 216, 218, 222, 223, 227, 228, 235, 239, 243, 245, 246, 251, 253, 258, 265, 268, 271, 274, 291, 294, 300], "elsewher": [15, 22, 74, 98, 216, 258], "elt": [216, 222], "em": 223, "email": [7, 227], "eman": 82, "embed": [4, 5, 48, 61, 69, 97, 222], "embryon": 49, "emerg": [161, 215], "emg": 247, "emit": [3, 12, 99, 227, 256, 263], "emphas": [29, 68], "emphasi": [5, 217], "empir": 292, "emploi": [49, 68, 73, 96, 109, 223, 226, 243, 247, 295], "empti": [13, 15, 22, 29, 32, 33, 37, 44, 48, 49, 50, 51, 60, 64, 68, 69, 81, 84, 85, 86, 99, 105, 109, 112, 115, 135, 136, 156, 187, 200, 218, 222, 223, 227, 233, 234, 235, 237, 243, 245, 246, 258, 260, 265, 268, 292, 300], "empty_product": 68, "empty_set": 235, "empty_sum": 68, "emptyprint": 227, "emptysequ": [227, 233], "emptyset": [13, 22, 33, 48, 49, 99, 227, 235, 246, 271, 306], "emufphzlrfaxyusdjkzldkrnshgnfivj": 70, "emul": [13, 239, 246, 248, 266], "en": [4, 5, 8, 12, 22, 24, 42, 44, 45, 46, 48, 49, 50, 52, 57, 58, 60, 61, 68, 69, 70, 71, 72, 74, 75, 77, 79, 81, 85, 86, 87, 96, 97, 98, 99, 101, 105, 109, 123, 125, 128, 161, 163, 164, 165, 167, 168, 169, 173, 174, 175, 178, 180, 181, 190, 192, 202, 204, 209, 216, 223, 224, 230, 234, 235, 236, 243, 246, 247, 260, 265, 266, 271, 273, 277, 279, 281, 301], "enabl": [2, 5, 9, 15, 24, 40, 69, 96, 97, 109, 118, 142, 144, 192, 202, 207, 227, 243, 247, 258, 263, 266, 301, 304, 305], "enable_automatic_int_sympif": 97, "enable_automatic_symbol": 97, "enable_eager_execut": 266, "encapsul": [198, 220, 246, 260], "enciph": 70, "encipher_affin": 70, "encipher_atbash": 70, "encipher_bifid": 70, "encipher_bifid5": 70, "encipher_bifid6": 70, "encipher_elgam": 70, "encipher_gm": 70, "encipher_hil": 70, "encipher_kid_rsa": 70, "encipher_railf": 70, "encipher_rot13": 70, "encipher_rsa": 70, "encipher_shift": 70, "encipher_substitut": 70, "encipher_vigener": 70, "encircl": 94, "enclos": [4, 79, 80, 85, 108, 126, 227, 237, 266], "encloses_point": [79, 80, 85], "encod": [3, 13, 53, 61, 67, 70, 99, 227, 258, 262, 265], "encode_mors": 70, "encompass": 217, "encount": [5, 16, 20, 29, 69, 96, 105, 135, 184, 215, 220, 223, 245, 246, 260, 271, 301], "encourag": [4, 13, 49, 154, 155, 222], "encryp": 70, "encrypt": 70, "encyclopedia": [81, 209], "encyclopediaofmath": 77, "end": [0, 2, 4, 7, 11, 12, 13, 14, 16, 20, 22, 23, 24, 27, 30, 34, 36, 42, 48, 49, 50, 59, 60, 65, 67, 68, 69, 70, 74, 75, 77, 79, 81, 85, 94, 97, 99, 101, 105, 109, 111, 117, 118, 121, 130, 138, 140, 141, 144, 146, 149, 154, 155, 156, 197, 201, 202, 207, 208, 211, 212, 216, 220, 227, 230, 233, 235, 236, 240, 243, 244, 245, 246, 247, 248, 249, 258, 260, 261, 263, 265, 268, 278, 291, 292, 295, 299, 301, 305], "end_point": 145, "end_point_aux": 145, "end_point_forc": 145, "endian": 53, "endif": [50, 260], "endnumb": 243, "endomorph": [92, 222], "endomorphism_r": 222, "endomorphismr": 222, "endow": [215, 223], "endpoint": [68, 69, 73, 82, 130, 145, 208, 235, 278, 292], "energi": [13, 28, 127, 131, 135, 137, 142, 151, 168, 193, 197, 208, 253, 278, 288], "enforc": [61, 144, 291, 292], "eng": 61, "engag": 52, "engin": [16, 112, 113, 115, 119, 121, 158, 159, 209, 243, 291, 292, 304], "english": [4, 11, 70], "engr": 96, "enhanc": [69, 220, 247, 291, 292, 295], "enlarg": 80, "enough": [3, 4, 11, 14, 31, 33, 60, 69, 73, 96, 105, 108, 109, 125, 142, 159, 218, 220, 227, 243, 295, 297], "enricogiampieri": 265, "ensembl": 186, "enspac": [243, 246], "ensur": [3, 11, 12, 16, 24, 29, 31, 32, 33, 34, 37, 40, 69, 70, 73, 100, 105, 112, 115, 134, 138, 145, 222, 223, 227, 258, 263, 266, 291, 292], "ent": 109, "entail": 96, "enter": [9, 18, 61, 69, 70, 74, 82, 109, 111, 117, 121, 135, 140, 144, 154, 227, 237, 245, 258, 300, 304], "entertain": 298, "enthought": 40, "entir": [2, 3, 12, 14, 22, 60, 69, 70, 73, 74, 77, 83, 85, 94, 108, 132, 140, 145, 153, 157, 202, 214, 216, 222, 235, 252, 261, 263, 299, 305], "entireti": 201, "entiti": [69, 79, 82, 83, 85, 86, 94, 142, 157, 208, 246, 280, 289, 301], "entity1": 81, "entity2": 81, "entri": [0, 11, 34, 46, 51, 59, 61, 67, 70, 81, 94, 98, 100, 101, 108, 112, 135, 137, 142, 144, 157, 164, 216, 220, 222, 223, 237, 247, 266], "entropi": [70, 247], "entropy_": 247, "entropypost": 247, "enum": [52, 222, 264, 290], "enum_al": 262, "enum_larg": 262, "enum_rang": 262, "enum_smal": 262, "enumer": [22, 39, 53, 58, 61, 64, 72, 76, 94, 99, 109, 115, 222, 223, 237, 262, 265, 283], "enumerate_st": 187, "env": 111, "envelop": 243, "environ": [2, 6, 8, 10, 11, 12, 13, 15, 69, 97, 207, 227, 247, 258, 268, 297, 299, 304], "envis": 20, "eom": [145, 146, 147, 156], "eom_method": [140, 145, 153], "ep": [50, 60, 68, 218, 222, 223], "epath": 239, "epathtool": 239, "eppstein": 109, "eps_dim": 253, "epsilon": [13, 16, 68, 70, 77, 94, 96, 163, 227, 253], "eq": [4, 12, 14, 15, 16, 18, 22, 24, 31, 32, 36, 38, 46, 48, 50, 69, 74, 75, 77, 79, 82, 86, 94, 99, 195, 213, 214, 218, 223, 225, 227, 229, 233, 235, 236, 239, 240, 242, 243, 244, 245, 246, 247, 259, 260, 266, 271, 297, 299, 306], "eq1": [36, 79, 243, 245, 246], "eq2": [36, 79, 99, 243, 246], "eq3": 246, "eq4": 246, "eq_x": 239, "eqn": [33, 36, 48, 246], "eqs_coeff": 225, "eqs_mat": 243, "eqs_one_soln_set": 36, "eqs_r": 225, "eqs_rh": 225, "eqs_to_matrix": 225, "equ": 245, "equal": [4, 12, 13, 14, 15, 18, 22, 23, 24, 29, 36, 38, 42, 46, 49, 50, 51, 58, 59, 60, 61, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 82, 83, 84, 85, 86, 88, 94, 99, 101, 105, 109, 113, 115, 117, 121, 125, 126, 130, 131, 135, 137, 138, 140, 144, 145, 154, 155, 176, 177, 192, 196, 197, 202, 206, 211, 214, 215, 216, 217, 218, 220, 222, 223, 225, 227, 233, 235, 237, 240, 243, 244, 245, 246, 247, 253, 258, 259, 260, 265, 268, 271, 276, 281, 291, 292, 295, 298, 306], "equal_valu": 69, "equat": [5, 13, 14, 15, 16, 18, 20, 25, 27, 31, 48, 50, 65, 68, 69, 71, 75, 77, 79, 82, 83, 87, 91, 92, 93, 94, 96, 97, 105, 109, 112, 113, 115, 116, 117, 121, 125, 127, 129, 130, 131, 134, 135, 136, 138, 140, 142, 144, 145, 146, 147, 149, 151, 152, 153, 158, 159, 160, 161, 165, 206, 207, 210, 211, 212, 213, 214, 216, 218, 220, 221, 222, 225, 226, 227, 233, 237, 239, 242, 243, 244, 252, 271, 276, 277, 281, 292, 295, 296, 299], "equidimension": 243, "equidist": 69, "equidistantli": 295, "equilater": 85, "equilibrium": [118, 121, 130, 144, 156, 291, 292], "equilibrium_length": 130, "equispac": 223, "equiv": [60, 70, 74, 109, 222, 227, 237, 240], "equival": [3, 12, 13, 14, 15, 16, 18, 22, 23, 24, 27, 34, 36, 42, 46, 50, 51, 59, 60, 65, 69, 70, 73, 75, 77, 94, 96, 105, 109, 111, 122, 123, 125, 134, 142, 175, 186, 189, 192, 195, 196, 202, 207, 211, 213, 214, 215, 216, 217, 218, 222, 223, 227, 234, 235, 239, 240, 243, 245, 246, 248, 249, 252, 253, 262, 266, 268], "equivalent_dim": 195, "eqworld": 243, "eqyptian": 240, "eratosthen": 109, "erdelyi": [77, 96], "erdo": 262, "erf": [4, 77, 94, 96, 227, 237, 247], "erf2": [4, 77, 227], "erf2inv": [4, 77, 227], "erfc": [4, 77, 94, 227, 247], "erfcinv": [4, 77, 227], "erfi": [4, 77, 94, 227], "erfinv": [4, 77, 227, 247], "eric": [96, 221], "erik": 271, "erlang": 247, "erlang_distribut": 247, "erlangdistribut": 247, "erlend": 63, "erron": 73, "error": [2, 3, 4, 5, 8, 11, 12, 13, 14, 18, 22, 23, 31, 32, 33, 34, 35, 36, 38, 41, 48, 50, 58, 61, 68, 69, 70, 75, 79, 84, 94, 96, 105, 108, 109, 111, 135, 138, 140, 142, 211, 212, 215, 216, 217, 218, 220, 224, 227, 229, 235, 243, 244, 245, 246, 247, 258, 259, 260, 263, 265, 268, 271, 294], "error_funct": 77, "error_term": 109, "error_when_incomplet": 105, "ert": 0, "escap": [69, 111, 213, 227, 268], "especi": [3, 4, 12, 14, 24, 38, 68, 69, 105, 129, 142, 157, 159, 186, 211, 223, 239, 243, 245, 258, 294, 295], "espinosa": 77, "esqu": 159, "essenc": 275, "essenti": [5, 14, 53, 64, 69, 73, 75, 76, 77, 94, 137, 144, 205, 208, 209, 211, 214, 215, 218, 222, 234, 237, 272, 275, 278, 279, 280, 286, 288, 292], "establish": [9, 20, 65, 94, 130, 134, 138, 140, 147, 237, 292], "estim": [38, 48, 68, 69, 73, 94, 295], "et": [49, 96, 112, 113, 115, 171, 220, 223, 224, 236, 239], "eta": [16, 77, 94, 222, 227, 243, 244, 247], "etc": [7, 11, 12, 13, 20, 22, 23, 45, 48, 50, 65, 69, 70, 74, 75, 87, 96, 98, 99, 103, 109, 111, 115, 142, 163, 172, 176, 189, 192, 204, 208, 210, 211, 213, 214, 215, 216, 217, 220, 222, 227, 228, 235, 236, 237, 239, 243, 246, 247, 251, 259, 260, 265, 276, 280, 292], "etiquett": 7, "euclid": [69, 220, 221], "euclidean": [71, 82, 84, 130, 138, 202, 218, 220, 223], "euclidean_algorithm": 69, "euclideanspac": 42, "eucliden": 70, "euclidtool": 220, "euler": [4, 42, 48, 49, 68, 69, 70, 73, 74, 77, 85, 91, 97, 109, 134, 189, 202, 207, 211, 212, 223, 227, 243, 247, 271, 273], "euler_angl": [271, 273], "euler_equ": 48, "euler_maclaurin": [68, 73], "euler_numb": 74, "euler_poli": [74, 223], "euler_pseudoprim": 109, "eulergamma": [4, 69, 73, 74, 77], "eulerian": 77, "eulerlin": 85, "eulernumb": 74, "eulervm": 227, "eulerzigzagnumb": 74, "eurocam": 96, "eurocast": 221, "european": 214, "eval": [4, 13, 14, 22, 44, 45, 50, 69, 75, 77, 113, 178, 192, 218, 223, 227, 260, 294], "eval_approx": 223, "eval_color_func": 213, "eval_control": 176, "eval_diffeq": 291, "eval_eom": 292, "eval_expr": 111, "eval_forc": 292, "eval_frequ": 125, "eval_holo_fsolv": 291, "eval_holonom": 291, "eval_integr": 68, "eval_levicivita": 77, "eval_poli": 216, "eval_poly_mul": 216, "eval_r": [223, 291], "eval_rh": [291, 292], "eval_zeta_funct": 68, "evalf": [2, 4, 14, 15, 16, 22, 29, 35, 38, 50, 68, 73, 74, 75, 77, 88, 91, 92, 105, 111, 142, 144, 159, 174, 218, 223, 227, 234, 235, 239, 247, 259, 266, 295, 296], "evalf_r": 223, "evalfmixin": 69, "evalu": [2, 4, 15, 20, 22, 23, 30, 36, 38, 42, 43, 44, 45, 48, 50, 69, 71, 74, 75, 77, 80, 84, 85, 94, 96, 99, 101, 105, 109, 110, 111, 112, 113, 115, 125, 129, 132, 142, 156, 157, 167, 169, 171, 173, 175, 178, 181, 189, 192, 212, 213, 216, 217, 218, 220, 221, 223, 227, 228, 233, 234, 235, 237, 239, 240, 243, 245, 246, 247, 248, 249, 259, 260, 261, 266, 278, 283, 292, 294, 295, 296, 297, 299, 301], "evaluate_delta": 192, "evaluate_integr": 247, "evaluate_pauli_product": 167, "evaluationfail": 220, "evalul": 69, "even": [3, 4, 5, 9, 11, 12, 14, 15, 16, 19, 22, 24, 29, 32, 35, 36, 37, 38, 43, 44, 45, 46, 47, 50, 51, 52, 57, 60, 61, 68, 69, 70, 73, 74, 75, 77, 81, 85, 94, 96, 99, 105, 108, 109, 111, 126, 142, 152, 177, 188, 195, 197, 202, 212, 215, 216, 217, 218, 220, 222, 223, 224, 227, 228, 235, 236, 237, 239, 240, 243, 245, 246, 254, 258, 280, 292, 294, 295, 297, 299, 300, 305, 306], "evenhandl": 46, "evenli": 240, "evenpred": 46, "event": [222, 247], "eventu": [60, 77, 96, 111, 213, 214, 234, 260, 265], "ever": [12, 13, 14, 15, 24, 75, 211, 214, 223, 237, 243, 260, 263, 300], "everi": [2, 3, 4, 7, 11, 12, 14, 15, 22, 24, 29, 33, 39, 44, 45, 46, 49, 55, 57, 60, 61, 69, 70, 84, 96, 98, 105, 109, 125, 157, 196, 208, 210, 211, 213, 214, 215, 217, 218, 220, 222, 227, 232, 235, 237, 239, 240, 243, 246, 247, 249, 275, 278, 280, 298, 300, 301, 305], "everyon": [12, 224], "everyth": [3, 5, 12, 14, 16, 24, 50, 69, 71, 77, 96, 102, 127, 156, 188, 189, 213, 227, 300, 304], "everywher": [3, 15, 16, 69, 77, 94, 125, 208, 265, 280], "evid": [94, 135, 150, 237, 249], "evinc": 227, "evolut": 79, "ew": 221, "ewen": 247, "ex": [57, 96, 126, 140, 217, 222, 223, 253, 261], "exact": [3, 11, 12, 13, 15, 16, 22, 24, 27, 35, 46, 68, 69, 70, 73, 79, 84, 91, 94, 96, 105, 113, 117, 138, 159, 186, 216, 217, 218, 220, 223, 234, 239, 243, 245, 258, 268, 292, 297, 299, 304], "exact_differential_equ": 243, "exactli": [3, 4, 5, 11, 12, 13, 14, 15, 16, 24, 29, 36, 38, 46, 53, 60, 69, 72, 73, 105, 111, 157, 212, 223, 237, 239, 243, 246, 248, 262, 265, 266, 295, 297, 299, 304, 305], "exactquotientfail": [217, 218, 220, 223], "examin": [50, 70, 181, 258, 260, 305], "exampl": [0, 1, 2, 3, 5, 7, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 28, 30, 33, 34, 36, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 91, 92, 94, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 113, 115, 117, 119, 121, 123, 125, 127, 128, 130, 131, 132, 134, 135, 137, 138, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 159, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 184, 186, 187, 189, 190, 191, 192, 193, 194, 198, 199, 201, 202, 203, 204, 206, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 228, 229, 230, 232, 233, 235, 236, 239, 240, 242, 243, 244, 245, 246, 251, 253, 254, 256, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 271, 273, 274, 276, 278, 279, 280, 281, 286, 288, 289, 292, 293, 294, 295, 296, 297, 298, 300, 301, 303, 304, 306], "examples_arg": 258, "examples_kwarg": 258, "exaxmpl": 69, "exc": 220, "exce": [51, 109, 253, 266], "exceed": [14, 16, 144, 222], "exceedingli": 220, "excel": [40, 73, 222, 303], "excent": 85, "except": [2, 3, 4, 11, 13, 14, 15, 16, 20, 22, 23, 24, 34, 38, 48, 50, 60, 61, 69, 70, 73, 74, 75, 77, 94, 96, 109, 131, 150, 196, 198, 212, 214, 216, 217, 218, 222, 223, 224, 225, 227, 236, 239, 240, 243, 244, 246, 251, 256, 258, 260, 261, 264, 265, 275, 278, 290, 294, 297, 300], "exceptional_isomorph": 52, "exceptioninfo": 256, "excerpt": 4, "excess": 15, "exchang": [65, 70, 105, 212, 216, 265], "excircl": 85, "excit": [112, 115, 214, 291, 292], "exclud": [11, 31, 36, 38, 50, 68, 69, 96, 105, 132, 137, 159, 215, 216, 218, 220, 223, 233, 243, 245, 258, 261, 265], "exclude_empti": 258, "exclus": [68, 69, 75, 99, 105, 220, 297], "exec": [50, 69, 97, 266], "execut": [12, 15, 22, 40, 50, 97, 105, 117, 159, 213, 227, 243, 246, 256, 258, 260, 261, 266, 268, 270, 282, 299, 304], "exercis": [24, 60, 262, 298, 305], "exert": 130, "exgaussian": 247, "exhaust": [3, 22, 237, 265, 298], "exhibit": [109, 212, 222, 236], "exict": 112, "exist": [3, 7, 11, 13, 14, 15, 20, 22, 24, 35, 38, 48, 49, 50, 53, 60, 69, 73, 79, 81, 84, 85, 86, 87, 96, 99, 105, 109, 121, 136, 140, 182, 208, 211, 213, 214, 215, 216, 218, 220, 222, 227, 234, 235, 237, 240, 243, 245, 246, 258, 266, 276, 292, 299, 301, 306], "existing_julia_fcn": 227, "existing_octave_fcn": [50, 227], "existing_smtlib_fcn": 227, "exit": [50, 109, 258], "exlud": 245, "exogen": [140, 160], "exotica": 55, "exp": [11, 12, 13, 14, 15, 16, 18, 22, 24, 27, 35, 36, 38, 42, 48, 50, 59, 68, 69, 71, 73, 74, 75, 77, 87, 88, 91, 94, 96, 101, 105, 109, 111, 113, 127, 168, 171, 187, 193, 212, 217, 218, 223, 224, 227, 229, 234, 237, 239, 243, 244, 245, 246, 247, 248, 265, 281, 292, 295, 299, 301, 306], "exp1": [69, 227], "exp2": [50, 227], "exp2_opt": 50, "exp_polar": [69, 75, 77, 237], "exp_r": 229, "expand": [4, 12, 13, 14, 15, 16, 20, 22, 27, 29, 50, 69, 71, 73, 74, 75, 77, 94, 96, 105, 125, 142, 144, 159, 173, 181, 184, 191, 192, 215, 216, 217, 220, 222, 223, 224, 227, 230, 234, 236, 237, 239, 243, 246, 247, 251, 259, 266, 277, 294, 299], "expand_": 24, "expand_complex": [24, 69], "expand_func": [69, 74, 77], "expand_hint": 69, "expand_log": [24, 50, 69, 239], "expand_mul": [69, 94], "expand_multinomi": 69, "expand_opt": 50, "expand_power_bas": [69, 239], "expand_power_exp": 69, "expand_trig": [14, 24, 69, 294], "expanded_expr": 299, "expans": [4, 11, 20, 24, 50, 69, 71, 74, 75, 77, 96, 105, 109, 156, 171, 173, 223, 224, 229, 230, 231, 236, 238, 239, 243, 245, 246, 283, 296, 305], "expansil": [130, 138], "expect": [4, 5, 7, 13, 14, 16, 22, 24, 27, 49, 51, 54, 69, 75, 77, 81, 99, 109, 110, 125, 130, 134, 138, 142, 186, 217, 220, 222, 224, 225, 234, 239, 242, 245, 246, 247, 256, 258, 259, 262, 265, 266, 291, 292, 299, 300], "expectationmatrix": 247, "expectedexcept": 256, "expediti": 12, "expens": [14, 15, 24, 36, 69, 156, 236, 243, 244, 245, 261, 301], "experi": [2, 144, 246, 247, 292], "experienc": [10, 13, 51, 292], "experiment": [2, 3, 239], "expint": [77, 227], "expintegral": [77, 227], "expintegralei": 227, "expj": 243, "explain": [2, 3, 4, 5, 7, 12, 22, 29, 38, 49, 65, 69, 77, 87, 92, 138, 214, 217, 220, 222, 224, 234], "explan": [3, 5, 12, 16, 18, 22, 25, 42, 43, 44, 45, 46, 47, 49, 50, 54, 57, 58, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 75, 77, 81, 91, 92, 94, 96, 105, 109, 112, 113, 115, 125, 128, 130, 131, 132, 134, 135, 137, 138, 140, 141, 150, 161, 163, 166, 169, 171, 173, 175, 187, 192, 212, 213, 214, 216, 218, 222, 223, 225, 229, 230, 232, 233, 234, 235, 237, 239, 240, 243, 245, 247, 248, 249, 252, 253, 258, 261, 263, 265, 266, 302], "explanatori": 144, "explicit": [11, 13, 14, 15, 22, 24, 29, 32, 33, 61, 68, 69, 73, 85, 86, 96, 108, 109, 115, 135, 136, 140, 142, 146, 156, 160, 211, 214, 223, 226, 227, 229, 235, 237, 243, 244, 245, 246, 262, 291, 292], "explicit_formulas_for_small_system": 105, "explicit_kinemat": [135, 147], "explicitli": [3, 12, 13, 14, 15, 22, 24, 50, 60, 61, 69, 70, 72, 75, 77, 82, 86, 101, 105, 110, 125, 140, 142, 157, 213, 215, 216, 217, 218, 220, 223, 227, 239, 243, 245, 263, 297, 301, 304, 306], "explik": 229, "exploit": [94, 259], "explor": [25, 154, 155, 213, 222, 262, 305], "explos": [106, 216], "expm1": [50, 227], "expm1_opt": 50, "expon": [14, 16, 29, 38, 47, 50, 69, 70, 75, 76, 77, 94, 96, 101, 109, 123, 125, 198, 215, 216, 217, 223, 224, 227, 236, 239, 243, 246, 251, 262, 305], "exponent_vector": 59, "exponenti": [13, 16, 22, 36, 42, 50, 60, 65, 69, 70, 74, 96, 99, 105, 109, 111, 178, 194, 224, 239, 243, 246, 247, 296, 297, 301], "exponential_distribut": 247, "exponential_integr": 77, "exponentialdistribut": 247, "exponentially_modified_gaussian_distribut": 247, "export": [41, 227], "expos": [13, 49, 111, 247], "exposit": 234, "expr": [3, 4, 12, 14, 15, 16, 22, 24, 33, 35, 38, 44, 45, 47, 48, 50, 61, 68, 71, 73, 75, 77, 79, 91, 94, 96, 99, 101, 105, 109, 110, 111, 115, 125, 129, 130, 132, 135, 137, 138, 140, 142, 156, 169, 173, 175, 177, 181, 184, 187, 189, 190, 192, 199, 202, 204, 207, 213, 215, 216, 217, 218, 220, 222, 223, 224, 225, 227, 228, 229, 230, 232, 234, 236, 239, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 259, 260, 261, 263, 266, 271, 273, 274, 275, 276, 278, 294, 295, 297, 299, 300, 304, 305, 306], "expr1": [3, 22, 125, 213, 245, 300], "expr2": [3, 22, 125, 213, 300], "expr_1": 125, "expr_2": 125, "expr_3": 125, "expr_4": 125, "expr_class": 227, "expr_free_symbol": [12, 69], "expr_i": 213, "expr_modifi": 16, "expr_to_holonom": [88, 91, 92, 93], "expr_tr": 249, "expr_with_intlimit": [68, 96], "expr_with_limit": [68, 96], "expr_x": 213, "expr_z": 213, "exprcondpair": 75, "expreal": 22, "express": [2, 3, 4, 5, 15, 18, 19, 22, 23, 24, 30, 31, 34, 36, 38, 42, 43, 44, 45, 46, 47, 48, 61, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 82, 84, 85, 92, 93, 94, 96, 97, 102, 103, 104, 105, 108, 109, 110, 113, 115, 117, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 146, 152, 153, 154, 155, 156, 157, 159, 160, 167, 171, 175, 176, 180, 181, 184, 187, 189, 190, 191, 192, 194, 195, 196, 197, 199, 201, 202, 204, 206, 207, 208, 211, 212, 213, 214, 215, 216, 218, 220, 222, 223, 224, 227, 228, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 256, 259, 260, 261, 262, 263, 266, 268, 271, 273, 274, 275, 277, 278, 280, 286, 288, 292, 295, 296, 297, 298, 299, 301, 304, 305, 306], "express_coordin": [275, 276], "expression_complex": 29, "expression_complex_poli": 29, "expression_expand": 29, "expression_str": 14, "expressiondomain": [217, 218], "expressions_dom": 217, "expressions_sympi": 217, "expressli": 275, "exprtool": 223, "exprwithintlimit": [68, 96], "exprwithlimit": [68, 96], "expsboth": 234, "expsf": 234, "expsg": 234, "exquo": [216, 217, 218, 223], "exquo_ground": [218, 223], "exr": 14, "exradii": 85, "exradiu": 85, "exsqrt": 218, "ext": [5, 214, 218], "ext_rank": 253, "extend": [4, 5, 12, 14, 22, 24, 32, 46, 50, 60, 61, 69, 70, 74, 81, 94, 96, 105, 109, 116, 140, 159, 200, 207, 213, 215, 218, 220, 222, 223, 224, 227, 234, 236, 240, 242, 243, 246, 247, 248, 260, 262, 291, 297, 299], "extend_to_no": 109, "extended_euclidean_algorithm": 69, "extended_neg": [22, 69], "extended_nonneg": [22, 69], "extended_nonposit": [22, 69], "extended_nonzero": [22, 69, 227], "extended_posit": [22, 69], "extended_r": [22, 46, 69, 227, 242, 246], "extended_real_number_lin": 22, "extendedrealhandl": 46, "extendedrealpred": 46, "extens": [0, 2, 4, 5, 7, 12, 22, 24, 60, 69, 74, 75, 81, 85, 96, 105, 113, 115, 116, 130, 137, 138, 159, 215, 217, 218, 220, 221, 222, 223, 227, 237, 239, 243, 245, 246, 259, 260, 291, 298, 305], "extension_veloc": [115, 130, 138, 291, 292], "extensionel": [214, 218], "extensor": 291, "extensorpathwai": 291, "extent": 50, "exterior": [71, 85], "exterior_angl": 85, "extern": [2, 40, 69, 97, 111, 121, 123, 144, 152, 207, 217, 218, 228, 235, 239, 247, 258, 259], "extra": [8, 13, 50, 52, 69, 70, 109, 110, 111, 135, 150, 197, 208, 220, 227, 237, 243, 258, 259, 260, 278, 292], "extra_compile_arg": 259, "extra_data": 14, "extra_link_arg": 259, "extra_preambl": 227, "extract": [15, 29, 33, 37, 38, 48, 69, 96, 101, 105, 109, 126, 130, 144, 152, 157, 211, 216, 220, 222, 223, 245, 246, 247, 258, 260, 265], "extract_addit": 69, "extract_branch_factor": 69, "extract_fundamental_discrimin": 222, "extract_leading_ord": 69, "extract_multipl": 69, "extract_slic": 216, "extract_type_ten": 126, "extraglob": 258, "extran": [5, 243], "extraneousfactor": 220, "extrapol": [73, 234], "extrem": [3, 12, 14, 34, 60, 73, 79, 85, 96, 101, 121, 156, 211, 239, 247], "extrins": 42, "ey": [13, 34, 69, 100, 101, 102, 103, 105, 107, 216, 222, 248, 268, 301], "eyz": [32, 240], "ez": [218, 253], "f": [0, 4, 8, 11, 12, 13, 14, 15, 16, 20, 24, 27, 29, 32, 33, 35, 36, 48, 49, 50, 51, 52, 59, 60, 61, 65, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 87, 92, 93, 94, 96, 98, 101, 105, 109, 110, 111, 112, 113, 115, 118, 121, 123, 130, 131, 134, 135, 136, 138, 140, 145, 147, 152, 154, 155, 159, 161, 165, 166, 177, 178, 181, 190, 192, 195, 202, 207, 208, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 226, 227, 229, 230, 233, 234, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 248, 252, 253, 258, 259, 260, 261, 262, 265, 266, 268, 277, 278, 281, 291, 292, 294, 295, 300, 304, 305, 306], "f0": 218, "f1": [16, 35, 60, 94, 96, 105, 125, 131, 142, 150, 159, 213, 218, 220, 223, 227, 229, 245], "f16": 50, "f2": [16, 35, 69, 94, 105, 125, 131, 142, 150, 159, 195, 213, 220, 223, 227, 229, 245], "f2py": [2, 50, 110, 259, 260], "f2pycodewrapp": 259, "f3": [150, 213, 227], "f4": [98, 213], "f401": 97, "f5": [13, 213], "f5b": [220, 223], "f6": 213, "f8": 213, "f811": [12, 69], "f821": [69, 261], "f90": 260, "f95": [50, 259, 260], "f_": [20, 69, 74, 77, 96, 154, 155, 156, 220, 226, 227, 237, 243, 292], "f_0": [71, 74, 136, 220], "f_1": [71, 74, 77, 94, 125, 136, 140, 160, 214, 220, 223, 243], "f_2": [74, 94, 125, 136, 140, 160, 220, 237, 243], "f_3": [136, 140, 160, 243], "f_4": [98, 136], "f_5": 220, "f_a": 136, "f_c": [136, 146], "f_code": [50, 260], "f_cython": 259, "f_d": [135, 140, 154, 155, 220], "f_dnh": 135, "f_fortran": 259, "f_h": 154, "f_i": [71, 94, 105, 220, 224], "f_j": [220, 237], "f_k": [68, 135, 154, 220], "f_list": 220, "f_m": [140, 292], "f_m_max": [115, 291, 292], "f_m_max_bicep": 291, "f_m_max_tricep": 291, "f_n": [68, 74, 77, 214, 220, 223, 243], "f_name": [50, 260], "f_q": 237, "f_r": [154, 156, 220], "f_real": [69, 76], "f_real_inherit": [69, 76], "f_result": 260, "f_t": [115, 292], "f_v": [136, 146], "f_x": [208, 246, 278], "f_y": [208, 278], "f_z": [74, 208, 278], "fab": [50, 227], "fabian": 0, "fac": 94, "face": [60, 62, 82, 96, 142, 220, 224, 227, 240, 281, 301], "facil": 50, "facilit": [13, 110, 116, 152, 163, 209, 258, 295], "fact": [4, 12, 13, 15, 22, 23, 24, 33, 45, 46, 69, 74, 77, 87, 94, 109, 121, 130, 144, 156, 197, 214, 215, 216, 217, 220, 222, 224, 226, 237, 239, 243, 246, 258, 266, 280, 294, 297, 298, 299, 300, 305], "factor": [2, 12, 14, 15, 16, 51, 60, 61, 68, 69, 70, 73, 74, 75, 77, 94, 96, 105, 109, 117, 125, 159, 161, 169, 173, 176, 188, 192, 196, 197, 198, 199, 214, 216, 217, 218, 219, 221, 222, 223, 230, 236, 237, 239, 240, 243, 245, 247, 251, 262, 275, 278, 299, 301], "factor_": [13, 69, 74, 109, 223, 240], "factor_index": 60, "factor_list": [218, 223, 305], "factor_list_includ": [218, 223], "factor_term": [69, 150, 223, 236, 239], "factori": [4, 12, 20, 24, 34, 68, 69, 73, 74, 77, 105, 109, 111, 212, 218, 220, 222, 223, 227, 229, 239, 245, 247, 260, 261, 265, 266, 267, 305], "factorial2": [74, 193, 227], "factorial_mo": 247, "factorial_not": 111, "factorialmo": 247, "factorialpow": 227, "factoring_visitor": 262, "factorint": [69, 74, 109, 222, 223, 262], "factoris": [109, 216, 217, 218, 223, 243], "factorisatio": 262, "factorrat": 109, "factortool": [217, 220], "factrul": 22, "fagin": 239, "fail": [2, 3, 4, 5, 8, 11, 13, 14, 22, 23, 24, 29, 50, 60, 61, 65, 68, 69, 73, 75, 93, 94, 96, 97, 105, 106, 109, 111, 144, 182, 187, 207, 213, 216, 217, 218, 220, 222, 223, 227, 234, 237, 243, 245, 247, 256, 258, 265, 266, 301], "failing_express": 69, "failing_numb": 69, "failur": [11, 13, 65, 73, 86, 94, 109, 247, 258, 305], "fair": [81, 247], "fairli": [69, 77, 94, 144, 152, 201, 214], "fall": [51, 68, 69, 74, 97, 125, 207, 222, 227, 240, 244, 247, 292], "fallback": [14, 69, 97, 192, 207, 217, 227, 245], "fallingfactori": [74, 227], "fals": [5, 12, 14, 15, 16, 22, 23, 24, 29, 31, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 55, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 91, 94, 96, 97, 99, 100, 101, 104, 105, 106, 109, 111, 113, 115, 117, 118, 123, 125, 127, 128, 131, 132, 135, 136, 137, 140, 142, 144, 145, 149, 150, 151, 153, 154, 155, 156, 157, 160, 164, 176, 177, 181, 184, 189, 190, 191, 192, 195, 199, 202, 203, 204, 206, 207, 210, 211, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 235, 236, 239, 240, 242, 243, 244, 245, 246, 247, 252, 253, 256, 258, 259, 260, 261, 265, 266, 268, 271, 274, 297, 300, 301, 304], "falsei": 23, "famili": [50, 53, 87, 96, 215], "familiar": [9, 10, 11, 16, 24, 96, 142, 157, 176, 224, 292, 295, 297, 303], "famou": [51, 77, 96, 109, 240], "fancyset": 235, "far": [12, 14, 16, 49, 69, 83, 96, 212, 214, 217, 227, 237, 266, 294, 295, 297], "farr": 71, "farther": 49, "farthest": [79, 85], "fascin": 152, "fashion": [36, 50, 69, 75, 101, 144, 154, 155, 157, 211, 214, 265, 291], "fast": [2, 14, 22, 36, 50, 69, 103, 105, 109, 135, 136, 164, 218, 219, 220, 221, 222, 223, 224, 230, 234, 243, 245, 262, 265, 266], "fast_walsh": 72, "faster": [2, 11, 13, 14, 22, 29, 34, 35, 50, 54, 69, 77, 105, 109, 110, 129, 132, 135, 136, 156, 216, 217, 218, 220, 222, 223, 224, 228, 230, 234, 239, 240, 243, 244, 246, 259, 262], "fastest": [69, 74, 96, 109, 110, 216, 224], "fastfouriertransform": 72, "fateman": 221, "father": 240, "fauger": [220, 223], "fault": 243, "faux1": 145, "faux2": 145, "favor": 13, "fbra": 192, "fc": 121, "fcall": 50, "fcn": [50, 260], "fcn2": 260, "fcode": [50, 227], "fcodegen": 260, "fcodeprint": [50, 227], "fd": [48, 50, 192], "fd1": 125, "fdict": 96, "fdiff": [4, 11, 24, 50, 69, 75, 76, 77, 113], "fdistribut": 247, "fe": 121, "feasibl": [60, 125], "featur": [0, 2, 3, 5, 7, 11, 12, 13, 16, 17, 24, 39, 40, 69, 71, 73, 142, 152, 159, 209, 227, 243, 247, 256, 260, 263, 279, 288, 291, 292, 293, 298, 299, 303, 305], "feb": 136, "februari": 221, "fed": 125, "feedback": [11, 27, 70, 122, 125, 298], "feedforward": 125, "feel": [11, 22, 40, 159, 160, 239, 243, 245], "feet": 85, "felix": 70, "femtesemest": 117, "fermat": [109, 163], "fermat_pseudoprim": 109, "fermi": [77, 192], "fermi_level": 192, "fermion": [74, 109, 192], "fermionicoper": 192, "fernando": 0, "ferrer": 58, "fetch": 9, "fetch_item": 267, "fetter": 192, "few": [2, 3, 8, 12, 13, 14, 15, 22, 32, 38, 46, 59, 61, 69, 70, 96, 97, 109, 110, 144, 152, 195, 201, 207, 210, 211, 214, 222, 227, 235, 236, 237, 243, 245, 246, 247, 260, 265, 305], "fewer": [84, 85, 138, 156, 247, 295], "fewest": [99, 186], "ff": [68, 70, 74, 212, 215, 216, 217, 222, 223], "ff_dens": 216, "ffgj": 216, "ffield": 277, "fft": [72, 159], "fg": [61, 71, 243, 246], "fgh": 69, "fglm": 223, "fglmtool": 220, "fgp": 243, "fi": [12, 20], "fib": 233, "fiber": [112, 113, 115], "fiber_damping_coeffici": [115, 292], "fiber_force_length_act": 113, "fiber_force_length_pass": 113, "fiber_force_length_passive_invers": 113, "fiber_force_veloc": 113, "fiber_force_velocity_invers": 113, "fiber_length_explicit": 115, "fiber_length_implicit": 115, "fiberforcelengthactivedegroote2016": [113, 292], "fiberforcelengthpassivedegroote2016": [113, 292], "fiberforcelengthpassiveinversedegroote2016": [113, 292], "fiberforcevelocitydegroote2016": [113, 292], "fiberforcevelocityinversedegroote2016": [113, 115, 292], "fibonacci": [69, 73, 74, 109], "fibonacci_numb": 74, "fibonaccinumb": 74, "fiddl": [258, 305], "field": [11, 13, 22, 36, 42, 46, 50, 69, 70, 71, 77, 87, 96, 164, 165, 204, 205, 209, 214, 215, 216, 218, 219, 221, 223, 224, 225, 240, 245, 258, 271, 274, 276, 277, 279, 281, 286, 288, 289, 291], "field_el": 69, "field_gen": 222, "field_isomorph": 222, "fieldfunct": [203, 208], "fifth": [29, 113], "fifth_ord": 29, "fifth_order_solv": 29, "fig": [13, 291, 292], "figsiz": 172, "figur": [5, 11, 13, 69, 70, 79, 80, 82, 84, 85, 96, 118, 142, 187, 210, 211, 212, 213, 216, 224, 227, 281, 305], "file": [0, 2, 3, 4, 5, 7, 8, 9, 12, 15, 16, 26, 50, 105, 111, 142, 159, 181, 213, 227, 234, 237, 239, 256, 258, 259, 260, 266], "filebox": 70, "filenam": [111, 227, 258, 259, 260, 268], "filepath": 259, "filesystem": 8, "fill": [11, 16, 21, 60, 70, 101, 105, 108, 192, 213, 258, 261, 265, 268, 301], "fill_between": 213, "fillded": 268, "filter": [3, 12, 13, 19, 33, 69, 70, 94, 164, 223, 256, 258, 263, 265], "filter_symbol": 265, "filterwarn": [3, 13], "fim1": 20, "final": [3, 4, 5, 11, 12, 13, 22, 24, 27, 36, 49, 61, 68, 69, 75, 77, 94, 96, 99, 105, 109, 115, 118, 123, 134, 135, 144, 149, 151, 152, 154, 157, 172, 184, 187, 189, 190, 192, 194, 195, 197, 202, 210, 211, 214, 216, 217, 220, 222, 229, 235, 236, 237, 239, 240, 243, 245, 246, 253, 265, 266, 292, 298, 299, 300], "final_exp": 123, "finalpdf": 109, "find": [4, 9, 11, 12, 14, 15, 16, 18, 20, 21, 24, 27, 30, 31, 32, 33, 34, 36, 37, 38, 42, 45, 48, 50, 51, 52, 60, 63, 64, 65, 68, 69, 73, 75, 77, 79, 81, 82, 83, 86, 91, 94, 96, 98, 105, 109, 111, 119, 132, 137, 143, 150, 157, 159, 161, 177, 184, 186, 187, 188, 192, 195, 197, 201, 210, 213, 214, 215, 216, 217, 218, 220, 224, 226, 227, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 245, 246, 247, 253, 262, 265, 266, 268, 271, 281, 295, 297, 299, 301, 306], "find_carmichael_numbers_in_rang": [13, 109], "find_dn": 240, "find_dynamicsymbol": [132, 137, 291], "find_execut": 268, "find_first_n_carmichael": [13, 109], "find_linear_recurr": 233, "find_min_poli": 222, "find_transitive_subgroups_of_s6": 52, "findroot": [35, 77, 245], "fine": [11, 12, 13, 14, 20, 24, 32, 69, 73, 97, 207, 216, 217, 227, 239], "finish": [8, 12, 50, 51, 186, 261, 302], "finit": [13, 14, 21, 22, 33, 46, 50, 55, 56, 57, 60, 68, 69, 70, 72, 73, 96, 98, 99, 178, 202, 212, 215, 218, 221, 223, 224, 227, 229, 230, 233, 235, 240, 242, 243, 246, 265, 271, 273, 283, 296, 299, 305], "finite_diff": [48, 69], "finite_diff_weight": [48, 69, 295], "finite_set": [48, 235], "finitediff": 48, "finitedistributionhandmad": 247, "finitedomain": 247, "finiteextens": 214, "finitefield": [217, 218], "finiteformalpowerseri": 229, "finitehandl": 46, "finitepred": 46, "finitepspac": 247, "finiterv": 247, "finiteset": [14, 22, 33, 48, 49, 235, 246, 247, 306], "finset_intersect": 48, "fip1": 20, "fip2": 20, "fire": 3, "first": [2, 4, 5, 7, 8, 9, 11, 12, 14, 15, 16, 20, 22, 23, 24, 26, 29, 33, 36, 37, 40, 42, 49, 50, 51, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 82, 83, 85, 86, 93, 94, 96, 98, 99, 105, 108, 109, 112, 113, 115, 117, 118, 125, 126, 130, 132, 134, 135, 137, 138, 140, 141, 142, 144, 145, 146, 147, 152, 153, 156, 157, 160, 164, 165, 169, 173, 176, 181, 182, 185, 186, 187, 188, 189, 191, 192, 195, 197, 202, 206, 210, 211, 213, 214, 216, 218, 220, 221, 222, 223, 224, 227, 228, 229, 230, 233, 234, 236, 237, 239, 240, 243, 244, 245, 246, 247, 251, 253, 256, 258, 259, 260, 261, 265, 266, 268, 276, 281, 291, 294, 295, 297, 299, 300, 301, 303, 305, 306], "first_index": 101, "first_linear": 243, "first_moment_of_area": 85, "firstexact": 243, "firstli": [3, 13, 14, 22, 24, 141, 237], "firstlinear": 243, "firstnam": 9, "firstorderactivationdegroote2016": [112, 115, 291, 292], "fisher": 247, "fishersz": 247, "fisherz": 247, "fit": [3, 14, 15, 49, 94, 105, 108, 109, 211, 227, 243, 268, 300], "five": [29, 32, 49, 58, 94, 121, 227, 240, 292], "five_lemma": 49, "fivelemma": 49, "fix": [3, 4, 7, 12, 13, 14, 50, 60, 62, 65, 67, 70, 74, 77, 81, 98, 105, 109, 111, 117, 118, 130, 131, 134, 137, 140, 144, 145, 153, 159, 176, 181, 185, 188, 192, 197, 202, 206, 210, 211, 213, 217, 220, 222, 223, 224, 227, 233, 237, 245, 247, 265, 271, 273, 291, 292], "fixed_point": 140, "fixed_row_vector": 247, "fixedbosonicbasi": 192, "fixedfram": 206, "fket": 192, "fl": [113, 135, 144, 154, 155, 159, 221, 292], "fl_": 113, "fl_m": 113, "fl_m_act": [113, 292], "fl_m_act2": 292, "fl_m_act3": 292, "fl_m_act_cal": 292, "fl_m_pa": [113, 292], "fl_m_pas2": 292, "fl_m_pas3": 292, "fl_m_pas_cal": 292, "fl_m_pas_inv": 292, "fl_m_pas_inv2": 292, "fl_m_pas_sym": 292, "fl_t": [113, 292], "fl_t2": 292, "fl_t3": 292, "fl_t_callabl": 292, "fl_t_inv": 292, "fl_t_inv2": 292, "fl_t_sym": 292, "flag": [2, 3, 14, 18, 24, 29, 48, 50, 60, 61, 65, 67, 69, 84, 96, 99, 100, 105, 109, 134, 142, 176, 213, 218, 220, 223, 224, 227, 228, 229, 235, 239, 240, 243, 245, 246, 253, 258, 259, 265, 268, 294, 305], "flag_fram": 134, "flag_joint": 134, "flagerror": 220, "flajolet": 224, "flake8": [11, 12], "flambda": 235, "flank": 70, "flat": [13, 83, 105, 216, 259], "flatmirror": 161, "flatrefract": 161, "flatten": [49, 69, 217, 249, 254, 265, 266, 291], "flavius_josephu": 61, "flavor": 228, "flaw": 13, "flaws_in_coverage_measur": 12, "flex": 291, "flexibl": [14, 61, 69, 140, 142, 159, 210, 213, 217, 246, 295], "flexion": 291, "flexur": 118, "flint": [13, 216, 217, 218], "flip": [130, 144, 177, 186, 247], "float": [2, 12, 15, 22, 24, 31, 50, 60, 69, 75, 77, 84, 86, 96, 97, 105, 109, 111, 112, 113, 115, 123, 125, 159, 165, 207, 213, 216, 217, 218, 220, 223, 227, 239, 245, 247, 258, 266, 268, 291, 292, 294, 297], "float16": 50, "float32": [50, 110, 111, 266], "float64": [14, 35, 50, 110, 247], "float80": [50, 227], "floatbasetyp": 50, "floattyp": 50, "floatx": 227, "floor": [69, 75, 109, 111, 134, 217, 218, 227, 247], "floor1": 227, "floor2": 227, "floor_fram": 134, "floor_joint": 134, "floorfunct": 75, "flow": [22, 222], "floyd": 109, "fma": [50, 227], "fmax": 227, "fmin": 227, "fmpq_mat_charpoli": 216, "fmpq_mat_det": 216, "fmpq_mat_inv": 216, "fmpq_mat_solv": 216, "fmpq_mat_solve_dixon": 216, "fmpz": [217, 218], "fmpz_mat": 216, "fmpz_mat_charpoli": 216, "fmpz_mat_det": 216, "fmpz_mat_inv": 216, "fmpz_mat_solv": 216, "fmt": [216, 218, 222], "fn": [20, 36, 96, 105, 214, 223], "fn_fortran": 50, "fn_numpi": 50, "fname": 260, "fnm1": 20, "fnm2": 20, "focal": [79, 161, 165], "focal_length": 165, "foci": 79, "fock": 192, "fock_spac": 178, "fockspac": 178, "fockstat": 192, "fockstatebosonbra": 192, "fockstatebosonket": 192, "fockstatebra": 192, "fockstatefermionbra": 192, "fockstatefermionket": 192, "fockstateket": 192, "focu": [0, 13, 22, 79, 245, 299], "focus": [14, 15, 35, 220, 240, 242, 243, 245, 246, 306], "focus_dist": 79, "fofc": 130, "fold": [60, 69, 75, 113, 227, 234, 239], "fold_frac_pow": 227, "fold_func_bracket": 227, "fold_short_frac": 227, "folded_cond": 75, "folder": 8, "follow": [2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 16, 18, 20, 22, 23, 24, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 45, 48, 49, 50, 51, 52, 55, 58, 59, 60, 61, 62, 65, 68, 69, 70, 73, 74, 75, 77, 81, 83, 85, 92, 93, 94, 96, 99, 101, 105, 109, 110, 115, 117, 118, 121, 130, 131, 134, 135, 137, 138, 140, 141, 142, 144, 152, 153, 154, 155, 156, 157, 159, 161, 165, 184, 187, 189, 192, 195, 197, 201, 202, 208, 210, 211, 212, 213, 214, 215, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 234, 236, 237, 239, 240, 243, 244, 245, 246, 247, 248, 251, 252, 253, 258, 261, 262, 265, 266, 275, 276, 278, 292, 294, 295, 297, 298, 300, 301, 305, 306], "font": [8, 97, 207, 227], "fontsiz": [97, 207, 227], "foo": [41, 48, 50, 69, 187, 207, 265, 268], "foo_1": 187, "foo_2": 187, "foo_3": 187, "foobasi": 187, "footnot": [23, 197, 300, 301, 304], "for_i": 50, "for_ji": 50, "for_kji": 50, "foral": [60, 68, 71, 197], "forc": [2, 16, 20, 23, 24, 69, 73, 75, 79, 85, 94, 96, 99, 112, 113, 115, 117, 118, 119, 121, 130, 131, 135, 137, 138, 140, 144, 146, 147, 148, 149, 152, 154, 155, 156, 157, 159, 180, 181, 195, 208, 211, 213, 215, 217, 236, 239, 240, 245, 258, 278, 280, 288, 304, 305], "force1": 131, "force_color": 258, "force_magnitud": 291, "force_o": 159, "force_on_child": 291, "force_on_o": 292, "force_on_p": 292, "force_on_par": 291, "force_p": 142, "force_p1": 292, "force_p2": 292, "force_r": 142, "force_vector": 159, "forceactu": [130, 292], "forcelist": [135, 142, 146, 149, 150, 155, 156, 159], "forces_eq": 145, "forcing_ful": [131, 135, 140, 142, 147, 154, 155], "forcing_kin": 135, "forcing_lin": 144, "fore": 46, "forecolor": [97, 207], "foreground": [97, 207], "foremost": 12, "forest": 265, "forg": [2, 8, 9, 111], "forget": [12, 32, 49, 305], "fork": [0, 5, 13, 144], "fork_i": 144, "fork_mc": 144, "forkcg1": 144, "forkcg3": 144, "forkcgnorm": 144, "forkcgpar": 144, "forklength": 144, "forkoffset": 144, "form": [3, 5, 11, 12, 13, 14, 15, 20, 22, 24, 27, 34, 35, 42, 45, 46, 47, 48, 50, 51, 59, 60, 61, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 82, 85, 89, 91, 92, 94, 96, 98, 101, 103, 105, 109, 111, 112, 113, 115, 117, 118, 119, 121, 122, 125, 129, 130, 131, 134, 135, 136, 138, 140, 142, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 157, 159, 160, 169, 172, 173, 174, 176, 186, 187, 190, 192, 194, 197, 200, 201, 202, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 252, 253, 258, 259, 265, 271, 274, 275, 277, 278, 280, 286, 291, 292, 295, 299, 300, 301, 304, 305, 306], "form_eom": [13, 131, 140, 145, 147, 153], "form_field": 71, "form_lagranges_equ": [135, 146, 151, 155, 156], "formal": [22, 32, 49, 68, 69, 77, 94, 99, 161, 197, 217, 220, 231, 234, 283], "formalpowerseri": 229, "formalpowerseriescompos": 229, "formalpowerseriesinvers": 229, "formalpowerseriesproduct": 229, "format": [3, 8, 11, 12, 15, 18, 20, 33, 36, 37, 49, 61, 69, 70, 91, 92, 96, 99, 105, 108, 109, 117, 135, 136, 140, 160, 165, 176, 186, 213, 216, 217, 222, 223, 225, 227, 237, 243, 246, 258, 268, 271, 275, 291, 298, 301, 304], "formatstr": 50, "formatt": 49, "former": [14, 19, 50, 69, 74, 142, 220, 222, 223, 240, 265], "formul": [20, 34, 112, 113, 115, 131, 134, 145, 146, 152, 154, 155, 192, 211, 291, 292], "formula": [4, 20, 29, 42, 48, 63, 68, 69, 73, 74, 75, 77, 82, 99, 105, 109, 141, 212, 214, 220, 223, 227, 229, 233, 236, 239, 240, 243, 299, 305], "fornberg": [20, 48], "fort": 70, "forth": [217, 222], "forthcom": 96, "fortran": [2, 14, 15, 20, 24, 48, 110, 111, 129, 159, 212, 260, 304], "fortran77": 260, "fortran90": 260, "fortranreturn": 50, "fortun": [50, 110, 146, 223, 224], "forum": [212, 246], "forward": [48, 50, 105, 125, 144, 152, 185, 210, 239, 258, 292], "forward_diff": 125, "found": [0, 2, 3, 4, 5, 8, 11, 12, 22, 23, 29, 33, 48, 51, 52, 60, 61, 63, 65, 67, 69, 70, 71, 79, 80, 85, 94, 96, 105, 109, 111, 125, 132, 134, 135, 136, 156, 159, 196, 210, 214, 215, 216, 217, 222, 223, 224, 227, 229, 230, 233, 234, 237, 240, 243, 244, 245, 246, 247, 251, 265, 266, 268, 292, 304], "foundat": [61, 221, 222], "four": [5, 34, 50, 52, 61, 69, 73, 77, 99, 101, 109, 113, 115, 121, 126, 138, 143, 152, 157, 165, 202, 213, 214, 216, 220, 223, 227, 235, 240, 243, 245, 247, 248, 271, 273, 276, 288, 291, 292], "four_group": 52, "fourier": [13, 69, 77, 96, 128, 185, 231, 283], "fourier_seri": [69, 230], "fourier_transform": 96, "fourierseri": 230, "fouriertransform": 96, "fourth": [29, 69, 70, 113, 215, 243, 295], "fox": 94, "fp": [50, 51, 69, 223, 229], "fp_group": [51, 60], "fpgroup": [51, 60], "fqyej": 70, "fr": [11, 91, 96, 109, 135, 142, 144, 146, 149, 150, 154, 156, 159, 247, 291, 292], "frac": [15, 20, 22, 24, 27, 29, 30, 34, 36, 48, 68, 69, 70, 71, 74, 75, 77, 94, 96, 105, 109, 111, 112, 113, 115, 125, 146, 157, 195, 207, 208, 210, 211, 212, 216, 218, 220, 223, 227, 229, 230, 234, 237, 240, 243, 244, 246, 247, 248, 265, 278, 280, 292, 295, 299, 300, 304, 305], "frac2": 247, "frac_field": [217, 218], "frac_unifi": 218, "fracel": [218, 227], "fracfield": [217, 218], "fraction": [16, 69, 70, 73, 75, 85, 96, 105, 109, 111, 132, 198, 216, 217, 218, 220, 221, 224, 227, 229, 239, 240, 243, 245, 296], "fractional_part": 75, "fractionalpart": 75, "fractionfield": [217, 218], "fracton": 227, "fragil": [14, 24], "fragment": [4, 70], "frame": [4, 129, 130, 131, 132, 134, 135, 137, 138, 140, 142, 144, 145, 146, 147, 149, 151, 153, 154, 155, 156, 157, 159, 160, 201, 202, 203, 204, 206, 208, 210, 262, 271, 278, 291, 292], "frame1": 202, "frame2": [202, 204], "frame_a": 142, "frame_b": 142, "frame_i": 144, "frame_mc": 144, "frame_n": 142, "framecg1": 144, "framecg3": 144, "framecgnorm": 144, "framecgpar": 144, "framelength": 144, "framework": [13, 69, 133, 142, 152, 252, 258, 260, 266, 288], "francesco": 0, "franci": 221, "frank": [60, 61, 105, 265], "frechet": 247, "fredrik": 0, "free": [0, 11, 12, 13, 15, 29, 34, 35, 40, 48, 49, 50, 59, 60, 65, 69, 74, 81, 96, 101, 105, 109, 112, 115, 117, 118, 123, 126, 134, 137, 152, 161, 181, 199, 202, 209, 213, 214, 216, 218, 220, 222, 223, 227, 229, 235, 237, 239, 240, 243, 245, 246, 253, 265, 299], "free_arg": 253, "free_dynamicsymbol": 202, "free_group": [51, 59, 60], "free_integ": 109, "free_modul": [214, 218], "free_symbol": [13, 15, 32, 50, 69, 78, 96, 105, 181, 199, 202, 223, 233, 240, 291], "free_symbols_in_domain": 223, "free_to_perm": 59, "free_var_index": 105, "freedom": [117, 131, 134, 135, 140, 143, 145, 146, 152, 247, 288, 291], "freegroup": 51, "freeli": [4, 14, 41, 102, 130, 134, 214], "freemodul": 214, "freemoduleel": 214, "freespac": 161, "freevar": 105, "fregli": [112, 113, 115, 291, 292], "freir": 221, "freq_unit": 123, "frequenc": [70, 96, 123, 125, 166, 168, 176, 193], "frequent": [20, 60, 222, 234, 246], "fresh": 12, "freshli": 40, "fresnel": [165, 227, 237], "fresnel_coeffici": 165, "fresnel_equ": 165, "fresnel_integr": 77, "fresnelc": [77, 227, 237], "fresnelintegr": 77, "fridai": 70, "friend": 211, "friendli": [5, 50, 94, 240, 242, 243, 245, 246, 260, 306], "friendlier": 216, "fro": 105, "frobeniu": [93, 105, 109, 220, 221], "from": [2, 3, 4, 5, 7, 8, 9, 11, 12, 15, 18, 19, 20, 22, 23, 24, 27, 29, 31, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 184, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 280, 281, 289, 291, 292, 294, 295, 297, 299, 300, 301, 304, 305, 306], "from_algebraicfield": 218, "from_array_to_matrix": 249, "from_axis_angl": 42, "from_coeff_list": 125, "from_complexfield": 218, "from_ddm": 216, "from_dict": 223, "from_dict_sympi": 216, "from_dod": 216, "from_dod_lik": 216, "from_dok": 216, "from_eul": 42, "from_ex": 218, "from_expr": [50, 223], "from_expressiondomain": 218, "from_expressionrawdomain": 218, "from_ff": 218, "from_ff_gmpi": 218, "from_ff_python": 218, "from_flat_nz": 216, "from_fractionfield": 218, "from_functionprototyp": 50, "from_gaussianinteg": 218, "from_gaussianrationalfield": 218, "from_globalpolynomialr": 218, "from_hyp": [88, 91], "from_index_summ": 101, "from_inertia_scalar": [137, 145], "from_int_list": 222, "from_inversion_vector": 61, "from_list": [216, 218, 223, 224], "from_list_flat": 216, "from_list_sympi": 216, "from_matrix": [27, 42, 125, 216], "from_meijerg": [88, 91], "from_monogenicfiniteextens": 218, "from_newtonian": [13, 140, 145, 147, 153], "from_poli": 223, "from_polynomialr": 218, "from_qq": 218, "from_qq_gmpi": 218, "from_qq_python": 218, "from_rational_express": [27, 125], "from_real": 235, "from_realfield": 218, "from_rep": 216, "from_rg": 58, "from_rotation_matrix": 42, "from_sequ": 61, "from_sympi": [217, 218], "from_sympy_list": 218, "from_tensor": 137, "from_zpk": [27, 125], "from_zz": 218, "from_zz_gmpi": 218, "from_zz_python": 218, "fromit": 69, "front": [60, 69, 144, 161, 191, 218, 220, 223, 227, 239, 305], "frontend": 216, "frontier": [105, 235], "frown": 15, "frstar": [135, 142, 144, 146, 149, 150, 154, 156, 159], "frustrat": 3, "frv": 247, "frv_type": 247, "fsolv": [35, 291], "fsp": 94, "fsu": 96, "ftheta": 71, "fu": [14, 238, 239, 283], "fudg": 3, "fulfil": [94, 212], "full": [3, 4, 5, 11, 12, 13, 16, 18, 22, 24, 32, 46, 48, 50, 60, 61, 69, 73, 77, 81, 82, 96, 101, 105, 111, 140, 154, 155, 202, 216, 217, 220, 221, 223, 227, 229, 239, 240, 266, 291, 292, 299, 305], "full_cyclic_form": 61, "full_impl": 22, "full_pb": 94, "full_prec": [68, 227], "fullform": 111, "fulli": [3, 4, 11, 13, 22, 60, 69, 86, 96, 99, 111, 117, 118, 131, 134, 142, 159, 192, 210, 216, 217, 218, 224, 234, 247, 253, 291], "fullrank": [46, 50], "fullrankhandl": 46, "fullrankpred": 46, "fulltext": 72, "fully_qualified_modul": 227, "fully_symmetr": 253, "fun": [227, 244, 298], "func": [3, 4, 12, 14, 15, 21, 24, 44, 48, 50, 69, 71, 74, 77, 88, 90, 109, 111, 137, 181, 202, 216, 220, 223, 227, 228, 239, 243, 244, 245, 256, 261, 263, 265, 266, 268, 270], "func_field_modgcd": 220, "func_m_1": 50, "func_nam": [3, 50, 75, 105, 268], "funcminusoneoptim": 50, "funcnam": [12, 259], "function": [1, 2, 3, 5, 7, 11, 15, 18, 19, 20, 22, 23, 25, 27, 30, 32, 34, 37, 39, 43, 44, 45, 47, 48, 49, 51, 52, 55, 60, 61, 64, 65, 67, 70, 71, 72, 73, 74, 78, 79, 80, 81, 86, 89, 90, 93, 95, 96, 97, 98, 101, 103, 108, 110, 112, 113, 115, 116, 117, 120, 121, 122, 123, 125, 126, 127, 130, 131, 132, 133, 134, 139, 140, 142, 145, 146, 147, 148, 152, 154, 155, 159, 164, 165, 166, 167, 171, 176, 177, 178, 181, 186, 187, 188, 189, 190, 191, 192, 195, 196, 201, 202, 205, 206, 207, 209, 211, 212, 214, 216, 219, 220, 221, 222, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 241, 242, 245, 246, 247, 249, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 272, 276, 277, 279, 280, 281, 282, 283, 286, 288, 289, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 303, 306], "function1": 99, "function2": 99, "function_arg": [50, 258], "function_exponenti": 111, "function_kwarg": 258, "function_nam": [7, 50, 259], "function_prototyp": 260, "function_rang": 48, "function_that_emits_a_warn": 12, "function_vari": 96, "functioncal": 50, "functionclass": [69, 227, 266], "functiondefinit": [50, 111], "functionmatrix": 101, "functionprototyp": 50, "functiontyp": 105, "functor": 49, "fundament": [22, 24, 48, 51, 59, 87, 94, 96, 196, 197, 217, 222, 240, 243, 247, 301], "fundamental_matrix": 247, "funtion_nam": 259, "further": [0, 2, 11, 14, 22, 24, 29, 45, 49, 69, 70, 75, 77, 81, 94, 96, 100, 101, 105, 111, 117, 122, 123, 131, 134, 135, 157, 164, 210, 212, 213, 214, 216, 220, 222, 223, 236, 237, 239, 243, 247, 253, 292, 298, 299], "furthermor": [3, 13, 14, 24, 46, 69, 70, 99, 222, 236, 297, 299, 300], "furthest": [48, 70], "fuse": 50, "fused_multipli": 24, "futur": [3, 11, 12, 13, 14, 22, 23, 50, 51, 69, 94, 96, 105, 111, 134, 140, 144, 152, 156, 192, 196, 209, 213, 215, 216, 226, 227, 239, 243, 252, 258, 261, 263, 266, 288, 300, 306], "fuzzi": [14, 15, 22, 24, 25], "fuzzy_": 24, "fuzzy_and": [22, 23, 24], "fuzzy_not": [23, 24], "fuzzy_or": [22, 23], "fv": [113, 218, 292], "fv_m": [113, 292], "fv_m2": 292, "fv_m3": 292, "fv_m_callabl": 292, "fv_m_inv": 292, "fv_m_inv2": 292, "fv_m_pas2": 292, "fv_m_sym": 292, "fwht": 72, "fwrap": 259, "fx": [69, 71, 213, 243, 244], "fxx": 69, "fxy": 240, "fxz": 240, "fy": [71, 213, 244], "fz": 213, "fzx": [32, 240], "g": [2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 22, 23, 24, 27, 35, 36, 38, 48, 49, 50, 51, 54, 57, 59, 60, 61, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 81, 85, 86, 87, 92, 95, 96, 98, 99, 105, 109, 111, 112, 115, 116, 117, 121, 125, 126, 130, 131, 134, 136, 137, 138, 140, 142, 144, 145, 146, 147, 149, 150, 151, 156, 157, 159, 160, 172, 176, 181, 187, 189, 190, 192, 195, 197, 198, 202, 208, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 239, 240, 243, 244, 245, 246, 247, 248, 251, 252, 253, 258, 259, 260, 261, 263, 265, 266, 268, 280, 283, 291, 292, 295, 300, 304, 305, 306], "g1": [27, 50, 54, 59, 60, 94, 105, 125], "g171": 70, "g18": 52, "g2": [27, 50, 54, 59, 60, 94, 98, 105, 125], "g3": [27, 60, 125], "g36": 52, "g36m": 52, "g36p": 52, "g4": [27, 125], "g72": 52, "g_": [52, 60, 67, 68, 77, 94, 105, 240], "g_0": [60, 240], "g_1": [60, 223, 234, 240, 243], "g_2": [60, 98, 234, 243], "g_frame": 134, "g_i": [60, 234], "g_k": 60, "g_n": [68, 74, 223], "g_name": 222, "g_t": 60, "gain": [7, 16, 27, 70, 125, 154, 155, 159], "galoi": [56, 217, 218, 220, 223, 283], "galois_group": [218, 222, 223], "galoisgroup": [218, 222, 223], "galoistool": [109, 220], "galton": 247, "game": 237, "gamma": [4, 5, 12, 16, 24, 68, 69, 71, 73, 74, 94, 96, 128, 159, 189, 211, 212, 227, 237, 239, 243, 247, 305], "gamma2": 77, "gamma3": 77, "gamma_": [77, 126, 128], "gamma_0": 128, "gamma_1": [50, 128], "gamma_2": [50, 128], "gamma_3": 128, "gamma_5": 128, "gamma_distribut": 247, "gamma_distribution_and_the_use_of_the_distribution_in_the_bayesian_analysi": 247, "gamma_funct": [4, 77], "gamma_i": 220, "gamma_matric": [126, 128], "gamma_p": 77, "gamma_process": 247, "gamma_trac": 126, "gammabetaerf": [4, 74, 77], "gammadistribut": 247, "gammafunct": [4, 77], "gammainvers": 247, "gammaln": 227, "gammamatrix": 126, "gammamatrixhead": 126, "gammaprocess": 247, "gammasimp": [68, 69, 239], "gap": [21, 60, 109, 142, 224], "garbag": 258, "gate": [99, 172, 177, 179, 185, 186, 188, 288], "gate_idx": [172, 176], "gate_simp": 176, "gate_sort": 176, "gate_spac": 176, "gateinputcount": 99, "gathen": [220, 221], "gathen92": [220, 221], "gathen99": [220, 221], "gather": [243, 291], "gaunt": 212, "gauss": [4, 34, 77, 96, 105, 161, 215, 216, 222, 225, 245, 246], "gauss_chebyshev_t": 96, "gauss_chebyshev_u": 96, "gauss_conj": 161, "gauss_gen_laguerr": 96, "gauss_hermit": 96, "gauss_jacobi": 96, "gauss_jordan_solv": [100, 105], "gauss_laguerr": 96, "gauss_legendr": 96, "gauss_lobatto": 96, "gaussian": [22, 77, 96, 105, 109, 162, 196, 220, 223, 240, 245, 247, 288, 301], "gaussian_beam": 161, "gaussian_conj": 161, "gaussian_elimin": 105, "gaussian_prim": 109, "gaussian_quadratur": 96, "gaussian_reduc": 240, "gaussiandomain": 218, "gaussianel": 218, "gaussianinteg": [217, 218], "gaussianinvers": 247, "gaussianr": [217, 218], "gaussianrationalfield": [217, 218], "gaussopt": 161, "gave": [16, 69, 265], "gb": [11, 60, 121], "gbt": 125, "gcc": [2, 260], "gcd": [68, 69, 70, 105, 109, 188, 216, 217, 218, 221, 222, 223, 227, 239, 240], "gcd_list": 223, "gcd_term": [69, 223], "gcdex": [218, 223], "gcomm": 253, "gd": 247, "ge": [5, 22, 69, 74, 75, 77, 94, 105, 109, 111, 212, 215, 220, 223, 227, 237, 245, 265], "gear": 214, "gedd": [96, 221], "geddes92": [220, 221], "gede": 136, "gedg": 227, "gegenbau": [223, 227], "gegenbauer_poli": [77, 223], "gegenbauer_polynomi": 77, "gegenbauer_rul": 96, "gegenbauerc": 227, "gegenbauerc3": 77, "gegenbauerpolynomi": 77, "gen": [59, 60, 65, 66, 67, 69, 105, 109, 214, 217, 218, 220, 222, 223, 224, 225, 233, 239, 242, 245], "gen0": 51, "gen1": 51, "gen_": 51, "gen_count": 60, "gen_hermite_rul": 96, "gen_laguerre_rul": 96, "gen_mat": 247, "gen_spe": [202, 206], "gender": 5, "gener": [3, 8, 11, 12, 13, 14, 15, 16, 18, 20, 22, 23, 24, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 44, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 83, 85, 87, 92, 94, 96, 97, 98, 99, 101, 105, 109, 110, 111, 112, 115, 116, 125, 129, 130, 131, 134, 135, 136, 138, 140, 141, 142, 144, 145, 146, 147, 149, 151, 152, 153, 155, 156, 157, 159, 160, 164, 175, 176, 177, 178, 181, 186, 187, 190, 191, 192, 197, 199, 202, 203, 206, 207, 208, 210, 212, 213, 214, 215, 216, 218, 220, 223, 224, 225, 226, 227, 228, 229, 233, 236, 237, 239, 240, 242, 243, 244, 245, 247, 252, 253, 259, 260, 262, 263, 264, 265, 266, 271, 275, 276, 278, 279, 280, 286, 291, 292, 295, 297, 298, 299, 300, 301, 305, 306], "general_sum_of_even_pow": 240, "general_sum_of_squar": 240, "generalis": [22, 74, 77, 94, 125, 214], "generalizations_of_fibonacci_numb": [69, 74], "generalized_hypergeometric_funct": 77, "generalized_laguerre_polynomi": 77, "generalized_multivariate_log": 247, "generalizedmultivariateloggamma": 247, "generalizedmultivariateloggammaomega": 247, "generalpythagorean": 240, "generalsumofevenpow": 240, "generalsumofsquar": 240, "generate_bel": [61, 265], "generate_derang": [74, 265], "generate_dimino": [57, 60], "generate_grai": 53, "generate_involut": 265, "generate_logo": 26, "generate_oriented_forest": 265, "generate_schreier_sim": [57, 60], "generator_matrix": 247, "generator_product": 60, "generators_and_rel": 57, "generatorserror": 220, "generatorsneed": 220, "generatortyp": 265, "genform": [243, 244], "genfrac": [74, 109], "genocchi": [74, 77, 223], "genocchi_numb": 74, "genocchi_poli": [74, 223], "genocchinumb": 74, "gens1": 65, "gens2": 65, "gens2a": 65, "gens_a": 65, "gens_f": 65, "gens_h": 60, "gens_i": 65, "gens_k": 60, "gensol": 243, "geodes": [138, 141, 292], "geodesi": 221, "geodesic_end_vector": 141, "geodesic_length": 141, "geodet": [141, 221], "geomalgorithm": 86, "geomet": [74, 214], "geometr": [24, 71, 78, 79, 80, 81, 82, 83, 84, 85, 86, 105, 161, 211, 214, 221, 247, 292, 301], "geometri": [4, 78, 79, 80, 82, 83, 84, 85, 86, 96, 133, 138, 152, 165, 219, 274, 281, 282, 288, 289, 291, 299], "geometric_conj": 161, "geometric_conj_ab": 161, "geometric_conj_af": 161, "geometric_conj_bf": 161, "geometric_distribut": 247, "geometricdistribut": 247, "geometricent": 84, "geometricrai": 161, "geometryent": [78, 79, 80, 82, 84, 85, 86], "geometryerror": [79, 82, 85, 86], "geometryresult": 81, "georg": [51, 214, 216, 243, 265], "geq": [69, 70, 77, 105, 223, 240, 247, 305], "geq0": 247, "gerardo": 212, "gerhard": 221, "german": 70, "get": [1, 3, 4, 5, 8, 11, 12, 13, 14, 19, 20, 22, 23, 24, 33, 35, 36, 37, 40, 41, 44, 45, 48, 49, 50, 52, 53, 58, 59, 61, 62, 64, 65, 68, 69, 70, 71, 73, 74, 75, 77, 82, 92, 94, 96, 98, 101, 105, 109, 111, 115, 117, 123, 125, 128, 135, 142, 146, 154, 155, 156, 157, 159, 164, 165, 172, 176, 181, 186, 187, 188, 189, 194, 196, 197, 211, 213, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 229, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 248, 249, 253, 254, 259, 265, 266, 267, 271, 275, 294, 297, 299, 300, 301, 304, 305, 306], "get_adjacency_dist": 61, "get_adjacency_matrix": 61, "get_basi": 187, "get_bodi": 140, "get_class": 269, "get_color_arrai": 213, "get_comm": 253, "get_contraction_structur": [251, 252], "get_data": [13, 213], "get_default_datatyp": 260, "get_diag_block": [101, 105], "get_dimensional_depend": [194, 195], "get_domain": 223, "get_exact": 218, "get_field": [217, 218], "get_free_indic": [253, 254], "get_gen_sol_from_part_sol": 243, "get_indic": [251, 252, 253, 254], "get_interfac": 260, "get_joint": 140, "get_label": 213, "get_matrix": [13, 253], "get_mesh": 213, "get_mod_func": 269, "get_modulu": 223, "get_motion_param": 206, "get_num_denom": 222, "get_numpy_arrai": 50, "get_period": [77, 94], "get_perm_group": [52, 222], "get_permut": 192, "get_point": [13, 213], "get_positional_dist": 61, "get_precedence_dist": 61, "get_precedence_matrix": 61, "get_prototyp": 260, "get_r": [216, 218], "get_seg": 213, "get_subno": 192, "get_subset_from_bitstr": 53, "get_symmetric_group_sg": [65, 253], "get_sympy_dir": 258, "get_target_matrix": 176, "get_transvers": 65, "get_units_non_prefix": 200, "getitem": 216, "getn": 69, "geto": 69, "getsourc": 266, "getstat": 69, "getter": [13, 69, 142, 159], "gf": [13, 61, 70, 121, 214, 216, 217, 220, 222], "gf_": 220, "gf_add": 220, "gf_add_ground": 220, "gf_add_mul": 220, "gf_berlekamp": 220, "gf_cofactor": 220, "gf_compos": 220, "gf_compose_mod": 220, "gf_crt": [109, 220], "gf_crt1": [109, 220], "gf_crt2": [109, 220], "gf_csolv": [109, 220], "gf_degre": 220, "gf_diff": 220, "gf_div": 220, "gf_eval": 220, "gf_expand": 220, "gf_exquo": 220, "gf_factor": 220, "gf_factor_method": 220, "gf_factor_sqf": 220, "gf_from_dict": 220, "gf_from_int_poli": 220, "gf_gcd": 220, "gf_gcdex": 220, "gf_int": 220, "gf_irreduc": 220, "gf_irreducible_p": 220, "gf_lc": 220, "gf_lcm": 220, "gf_lshift": 220, "gf_monic": 220, "gf_mul": 220, "gf_mul_ground": 220, "gf_multi_ev": 220, "gf_neg": 220, "gf_normal": 220, "gf_pow": 220, "gf_pow_mod": 220, "gf_qbasi": 220, "gf_qmatrix": 220, "gf_quo": 220, "gf_quo_ground": 220, "gf_random": 220, "gf_rem": 220, "gf_rshift": 220, "gf_shoup": 220, "gf_sqf": 220, "gf_sqf_list": 220, "gf_sqf_p": 220, "gf_sqf_part": 220, "gf_sqr": 220, "gf_strip": 220, "gf_sub": 220, "gf_sub_ground": 220, "gf_sub_mul": 220, "gf_tc": 220, "gf_to_dict": 220, "gf_to_int_poli": 220, "gf_trace_map": 220, "gf_trunc": 220, "gf_valu": 220, "gf_zassenhau": 220, "gff": 223, "gff_list": [218, 223], "gfvar": 233, "gfzhang": 125, "gh": [60, 215, 246, 253], "ghcomm": 253, "gianni": [220, 223, 245], "giant": [109, 246], "gib": 223, "gibb": 230, "gibbs_phenomenon": 230, "gigabyt": 299, "gimp": 227, "giovan": 70, "giovini": [220, 221], "giovini91": 221, "git": [2, 7, 10, 11, 12], "gitconfig": 9, "github": [0, 2, 3, 5, 7, 8, 10, 11, 13, 33, 37, 40, 48, 69, 73, 85, 96, 105, 196, 235, 246, 301], "gitignor": 11, "gitlab": 142, "gitter": [40, 301], "give": [2, 3, 4, 7, 11, 13, 14, 16, 18, 22, 23, 24, 29, 31, 33, 34, 35, 36, 37, 38, 42, 43, 45, 50, 51, 58, 60, 61, 62, 63, 68, 69, 70, 71, 74, 75, 77, 79, 81, 82, 84, 85, 93, 94, 96, 97, 99, 101, 105, 108, 109, 110, 112, 113, 115, 117, 121, 125, 134, 142, 159, 171, 186, 187, 189, 190, 194, 195, 197, 198, 200, 202, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 227, 228, 229, 230, 234, 235, 236, 237, 239, 240, 243, 245, 246, 247, 258, 259, 260, 265, 275, 280, 292, 297, 298, 300, 305, 306], "given": [2, 3, 5, 8, 12, 13, 15, 16, 18, 20, 22, 24, 27, 29, 31, 34, 36, 42, 44, 45, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 91, 92, 93, 94, 96, 98, 99, 101, 105, 108, 109, 111, 115, 117, 121, 123, 125, 126, 131, 132, 134, 135, 137, 140, 142, 146, 157, 165, 182, 187, 189, 196, 197, 198, 200, 202, 203, 204, 206, 208, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 252, 253, 256, 258, 260, 262, 265, 266, 268, 271, 274, 276, 278, 280, 291, 292, 294, 300, 303, 305, 306], "given_condit": 247, "givens_rot": 105, "gj": [105, 216], "gj_dens": 216, "gl": 70, "glob": [16, 258], "global": [3, 4, 9, 12, 13, 14, 43, 44, 45, 48, 50, 51, 69, 81, 94, 111, 130, 138, 176, 182, 202, 204, 213, 214, 217, 218, 220, 227, 240, 243, 244, 247, 258, 260, 261, 266, 274], "global_assumpt": [43, 44, 45], "global_dict": 111, "global_paramet": 75, "global_var": [50, 260], "globalpolynomialr": 217, "gloss": 234, "glossari": [16, 17], "glu": 197, "glue": 105, "gm": [70, 195], "gm_private_kei": 70, "gm_public_kei": 70, "gmail": [11, 212], "gmp": 2, "gmpy": [12, 69, 73, 217, 218, 304], "gmpy2": [2, 217, 218], "gmpyfinitefield": [217, 218], "gmpyinteg": 218, "gmpyrationalfield": 218, "gmvlg": 247, "gmvlgo": 247, "gn": 54, "gnu": 55, "go": [3, 4, 5, 7, 9, 11, 12, 14, 24, 40, 49, 50, 60, 70, 74, 75, 94, 135, 142, 144, 157, 159, 160, 186, 197, 206, 213, 222, 223, 234, 237, 243, 297, 299, 300, 303, 305], "goal": [13, 15, 49, 129, 160, 201, 222, 224, 258, 259, 261, 298, 299], "goe": [6, 7, 10, 11, 12, 14, 24, 39, 105, 121, 234, 237, 246, 297, 300], "gold": 70, "gold_bug": 70, "goldbuggonavybeatarmyy": 70, "golden": [69, 73, 109], "golden_ratio": 69, "goldenratio": [69, 73, 228, 239], "goldstein": 243, "goldwass": 70, "golomb": [70, 109], "golub": 105, "golumb": 109, "gompertz": 247, "gompertz_distribut": 247, "gon": 57, "gonavybeatarmi": 70, "gonavybeatarmyyesyoucan": 70, "gone": 12, "goo": 70, "good": [3, 5, 7, 12, 14, 15, 22, 24, 32, 38, 50, 69, 70, 73, 81, 94, 105, 109, 144, 156, 159, 214, 217, 218, 227, 234, 236, 237, 239, 243, 265, 294, 298, 301], "googl": [7, 212, 213, 246], "gordan": [179, 189, 212, 288], "gordon": [94, 171, 237], "gosper": 68, "gosper_norm": 68, "gosper_sum": 68, "gosper_term": 68, "got": [105, 214, 217, 220, 223, 226, 258, 259, 265, 266, 297, 299, 300], "gotcha": [12, 14, 15, 17, 69, 211, 266, 298, 306], "gothic_re_im": 227, "goto": 50, "goui": 161, "gov": [4, 75, 77], "govern": [109, 112, 115], "gp": [223, 243], "gpa": 117, "gpu": [2, 110, 159], "gr": 60, "gracefulli": [111, 227, 251], "grad_field": [203, 274], "grade": [70, 97, 207, 223], "gradedlexord": 223, "gradient": [203, 212, 213, 271, 274, 280], "gradient_field": 278, "gradual": [224, 292], "grafarend": 221, "graham": [61, 74, 75, 109], "graham_scan": 86, "grai": [56, 64, 97, 161, 207, 213, 283], "gram": [105, 196, 197, 199], "grammar": [111, 142, 239], "grammar_fil": 111, "gramschmidt": 105, "grand": 48, "granger": [0, 178], "grantham": 109, "granvil": [74, 109], "graph": [2, 4, 15, 61, 77, 98, 105, 110, 216, 227, 246, 265, 300, 304], "graphic": [5, 36, 123], "graphviz": [5, 8, 300, 304], "grav_eq": 195, "gravc": 291, "gravd": 291, "gravit": [144, 149, 195, 208, 280, 291, 292], "gravitational_const": [195, 199], "graviti": [13, 140, 142, 145, 146, 147, 149, 151, 159, 208, 280, 291, 292], "gray_to_bin": 53, "graycod": 53, "graycode_subset": 53, "grayscal": 213, "great": [24, 161, 224, 227, 240, 266], "greater": [5, 29, 46, 61, 69, 74, 75, 77, 94, 98, 109, 125, 140, 218, 220, 223, 226, 234, 239, 243, 245, 247, 262, 265, 278, 295], "greaterthan": [69, 227], "greaterthanobject": 69, "greatest": [69, 74, 79, 109, 215, 217, 218, 220, 221, 223, 226], "greatli": 228, "greedi": [109, 220, 236, 239], "greedy_algorithm_for_egyptian_fract": 109, "greek": [5, 15, 41, 69, 109, 111, 214, 227], "greek_lett": 227, "green": [11, 12, 60, 153, 213], "greet": 99, "greuel": 221, "greuel2008": [214, 221], "grevlex": [69, 97, 207, 215, 220, 223, 226, 227], "grid": [20, 48, 49, 123, 213], "gridpoint": 48, "grigoryan": 244, "grlex": [69, 97, 207, 218, 223, 226, 227], "gro": 60, "groebner": [221, 222, 223, 226, 239, 245, 246], "groebnerbasi": [38, 215, 223, 226], "groebnertool": 220, "groot": [112, 113, 115, 291, 292], "ground": [12, 13, 88, 134, 144, 148, 149, 150, 151, 214, 216, 217, 218, 220, 222, 223, 245, 304], "ground_new": 218, "ground_root": 223, "ground_typ": 261, "group": [5, 7, 49, 56, 61, 62, 65, 66, 67, 69, 72, 74, 98, 99, 109, 113, 171, 180, 181, 192, 212, 213, 214, 218, 223, 239, 243, 245, 246, 253, 265, 283], "group_construct": 54, "group_nam": 98, "group_numb": 55, "group_ord": 98, "groupprop": [57, 60], "groups_count": 55, "grouptheori": 60, "grover": [179, 288], "grover_iter": 177, "grow": [14, 65, 69, 94, 105, 109, 217, 220], "growth": [58, 109, 216, 220, 295], "gruntz": [69, 229], "gr\u00f6bner": 219, "gscholar": 247, "gsl": [129, 260], "gsoc": 246, "gt": [46, 50, 69, 227, 247, 265], "gtkmathview": 227, "guarante": [12, 14, 19, 22, 29, 35, 50, 60, 61, 69, 81, 94, 96, 105, 140, 216, 217, 220, 222, 223, 243, 245, 246, 263, 268, 301, 305], "guard": 260, "guess": [13, 18, 49, 70, 73, 94, 97, 207, 220, 223, 237, 240, 291, 300], "gui": [9, 97, 207], "guid": [2, 6, 7, 8, 9, 11, 14, 15, 17, 24, 34, 40, 49, 69, 76, 142, 156, 227, 240, 242, 243, 245, 246, 253, 298, 302, 303, 306], "guidanc": 30, "guidelin": [3, 11, 14, 38, 243], "guiver": 221, "gumbel": 247, "gumbel_distribut": 247, "gumbel_max": 247, "gumbel_min": 247, "gumbeldistribut": 247, "gupta": [0, 246], "guzman": 11, "gx": 79, "gy": 243, "gymbal": 42, "gyz": 240, "gz": 60, "h": [0, 14, 16, 20, 48, 49, 50, 51, 52, 53, 55, 60, 65, 68, 69, 70, 74, 77, 91, 94, 96, 100, 105, 106, 111, 125, 131, 134, 137, 157, 161, 164, 176, 178, 181, 186, 190, 197, 212, 213, 214, 215, 216, 218, 220, 221, 222, 223, 226, 227, 235, 239, 243, 245, 246, 247, 248, 253, 260, 281, 295, 304], "h0": 77, "h1": [27, 49, 137], "h2": [27, 137], "h3": 27, "h5": 62, "h_": [49, 60, 65, 74, 77, 96], "h_0": [60, 65], "h_1": [60, 65, 246], "h_2": [60, 246], "h_i": [50, 65], "h_n": [65, 77, 96, 223, 246], "h_name": [50, 260], "ha": [2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 29, 30, 31, 33, 34, 35, 36, 37, 38, 46, 48, 49, 50, 51, 52, 53, 55, 58, 59, 60, 61, 63, 65, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 81, 82, 84, 85, 86, 92, 94, 96, 98, 99, 101, 104, 105, 106, 108, 109, 110, 111, 112, 115, 116, 117, 118, 121, 125, 126, 131, 134, 135, 140, 142, 144, 146, 152, 157, 159, 165, 166, 176, 177, 186, 189, 194, 197, 201, 202, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 232, 234, 235, 237, 239, 240, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 268, 271, 273, 275, 276, 278, 280, 281, 291, 292, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "haaheim": 243, "hack": [217, 243, 256], "hackman": 109, "had": [13, 14, 24, 33, 34, 61, 69, 70, 105, 109, 142, 156, 222, 223, 224, 227, 235, 237, 243, 245, 246, 261, 266, 292, 294, 297, 300, 301], "hadamard": [101, 105, 176, 177, 188, 227], "hadamard_product": 101, "hadamard_transform": 72, "hadamardg": 176, "hadamardpow": [101, 227], "hadamardproduct": [101, 227], "hadn": 24, "hal": 91, "half": [16, 24, 27, 50, 69, 70, 74, 75, 77, 79, 85, 96, 98, 105, 109, 111, 117, 140, 161, 164, 189, 212, 218, 220, 222, 223, 235, 236, 237, 239, 247, 258, 265], "half_gcdex": [218, 223], "half_per": 218, "half_precis": 50, "half_wave_retard": 164, "hall": [51, 59, 247], "hallei": 50, "halt": 60, "halv": 222, "hamberg": 63, "hamburg": 265, "hamilton": [42, 53, 105], "hamiltonian": [53, 183], "hand": [4, 12, 13, 14, 20, 22, 24, 31, 36, 49, 50, 52, 55, 61, 62, 69, 75, 77, 96, 99, 105, 109, 117, 121, 135, 140, 141, 142, 156, 157, 160, 164, 181, 184, 196, 202, 208, 211, 212, 214, 217, 218, 220, 222, 225, 237, 246, 258, 260, 262, 266, 278, 280, 291, 292, 299], "handbook": [4, 51, 59, 60, 67, 77, 109], "handi": [9, 68, 69, 105, 227, 300], "handl": [5, 7, 11, 12, 14, 20, 22, 23, 24, 48, 50, 57, 61, 69, 75, 96, 97, 99, 103, 109, 110, 111, 117, 126, 129, 142, 156, 172, 175, 181, 182, 187, 196, 216, 217, 223, 224, 233, 239, 243, 245, 248, 251, 259, 265, 266, 268, 292, 300, 305], "handle_first": 96, "handle_nan": 50, "handler": [24, 43, 44, 45, 46, 47, 69, 76, 105], "handwritten": [97, 207], "hang": [12, 36, 105, 146, 150, 243, 244], "hankel": [77, 96], "hankel1": [77, 227], "hankel2": [77, 227], "hankel_transform": 96, "hankelh1": [77, 227], "hankelh2": [77, 227], "hankeltransform": 96, "happen": [3, 4, 7, 11, 12, 13, 14, 15, 20, 22, 23, 24, 33, 42, 50, 61, 68, 69, 73, 81, 84, 93, 134, 187, 191, 197, 214, 220, 222, 223, 226, 235, 239, 243, 247, 266, 276, 297, 304, 305], "happi": 24, "happili": [96, 251], "hard": [3, 11, 12, 13, 14, 15, 22, 61, 70, 105, 109, 142, 192, 217, 227, 234, 243, 246, 297, 299], "harder": [4, 12, 13, 14, 22, 69, 94, 217, 258], "hardest": 70, "hardi": 109, "hardwar": [24, 50], "harm": 3, "harmless": [227, 301], "harmon": [69, 74, 109, 127, 171, 212, 227, 288], "harmonic_numb": 74, "harmonicnumb": [74, 227], "harmonicnumber2": 74, "harsh": [0, 246], "hartre": 127, "has_assoc_field": 218, "has_assoc_r": 218, "has_dup": 265, "has_empty_sequ": [68, 96], "has_finite_limit": [68, 96], "has_fre": 69, "has_integer_pow": 194, "has_only_gen": 223, "has_q_annihil": 192, "has_q_creat": 192, "has_reversed_limit": [68, 96], "has_varieti": 265, "has_xfre": 69, "hasattr": [13, 239, 261], "hash": [12, 14, 69, 218, 220, 228, 239, 243, 258, 260], "hashabl": [14, 15, 66, 69, 94, 265], "hasn": 156, "hat": [105, 134, 153, 201, 202, 207, 208, 210, 211, 275, 276, 278, 280, 281, 291], "hate": 227, "hav91": 51, "hava": 51, "have": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 20, 22, 23, 24, 26, 27, 29, 31, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 79, 80, 84, 85, 87, 92, 93, 94, 96, 98, 99, 100, 101, 104, 105, 108, 109, 110, 111, 112, 113, 115, 117, 118, 123, 125, 126, 128, 129, 131, 135, 136, 137, 140, 142, 143, 144, 145, 147, 150, 152, 156, 157, 159, 176, 178, 181, 185, 187, 189, 190, 191, 192, 194, 195, 197, 200, 201, 202, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 229, 230, 232, 234, 235, 236, 237, 239, 240, 243, 245, 246, 247, 248, 249, 251, 253, 254, 256, 257, 258, 260, 261, 262, 265, 266, 268, 271, 273, 275, 276, 277, 278, 281, 291, 292, 294, 295, 297, 298, 299, 300, 301, 304, 305, 306], "haven": 16, "hbar": [50, 168, 174, 187, 193, 197, 199, 212], "hd": 70, "he": [5, 74, 94, 220], "he_n": [77, 223], "head": [4, 19, 49, 69, 245, 247, 253, 268, 300], "header": [3, 12, 50, 259, 260], "headquart": 70, "heat": 197, "heavi": [2, 12, 247, 300], "heavili": [3, 234, 244], "heavisid": [4, 11, 77, 94, 96, 227], "heavisidediracdelta": 77, "heavisidestepfunct": 77, "heavisidetheta": 227, "hebrew": 70, "hedetniemi": 265, "heidelberg": 220, "height": [13, 49, 50, 85, 101, 161, 213, 214, 227, 234, 281], "heiko": 55, "heinz": 63, "held": [48, 70, 156, 251, 305], "heldo": 70, "helen": 70, "helium": 127, "hellman": [70, 109], "hello": [70, 265], "helloworld": 70, "help": [3, 4, 5, 7, 9, 11, 12, 14, 22, 33, 41, 50, 59, 69, 77, 94, 96, 105, 109, 110, 111, 117, 123, 142, 159, 167, 177, 211, 213, 222, 224, 227, 236, 237, 240, 243, 244, 247, 258, 259, 260, 266, 288, 292, 298, 301], "helper": [12, 13, 32, 48, 50, 60, 64, 67, 69, 94, 96, 97, 98, 177, 179, 188, 224, 234, 237, 240, 243, 244, 246, 259, 288], "hemispher": 281, "henc": [11, 48, 50, 59, 60, 69, 71, 75, 77, 81, 94, 97, 99, 109, 121, 208, 213, 214, 215, 220, 227, 237, 240, 244, 246, 258, 262, 276, 277, 278, 300, 305], "henri": 221, "hensel": 220, "hep": 126, "her": 246, "herbert": 68, "here": [3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 18, 20, 22, 23, 24, 29, 31, 32, 33, 34, 35, 36, 39, 40, 44, 45, 50, 51, 53, 55, 58, 59, 60, 61, 67, 68, 69, 70, 71, 73, 74, 75, 77, 85, 86, 87, 91, 92, 94, 96, 99, 105, 108, 109, 110, 111, 115, 117, 121, 125, 129, 130, 135, 142, 143, 144, 149, 150, 151, 154, 156, 157, 159, 160, 182, 187, 192, 201, 207, 208, 210, 211, 213, 214, 216, 217, 218, 220, 222, 223, 224, 227, 228, 234, 236, 237, 239, 240, 243, 245, 246, 247, 251, 252, 259, 260, 262, 263, 265, 266, 276, 278, 280, 291, 292, 293, 294, 295, 297, 299, 300, 301, 303, 304, 305], "hermetian": 175, "hermit": [96, 105, 106, 216, 222, 223, 227, 247], "hermite_distribut": 247, "hermite_normal_form": [106, 216, 222], "hermite_poli": [77, 223], "hermite_polynomi": 77, "hermite_prob": 77, "hermite_prob_poli": [77, 223], "hermite_quadratur": 96, "hermite_rul": 96, "hermiteh": [77, 227], "hermitepolynomi": 77, "hermitian": [22, 34, 46, 69, 100, 105, 175, 181, 192, 227], "hermitian_adjoint": 175, "hermitian_matrix": 22, "hermitian_transpos": 175, "hermitianhandl": 46, "hermitianoper": [46, 181], "hermitianpred": 46, "heroic": [223, 245], "herrlich": 49, "hertz": 123, "hessenberg": 105, "hessenbergdecomposit": 105, "hessian": 105, "hessian_matrix": 105, "heurisch": [11, 13, 96], "heurist": [14, 15, 22, 36, 61, 94, 96, 105, 220, 221, 234, 236, 239, 245, 246, 258, 295, 305], "heuristicgcdfail": 220, "hex": 109, "hfst": 70, "hg": 60, "hg2sfuei7t": 70, "hgh": 60, "hi": [240, 245], "hidden": [12, 15, 201], "hide": [70, 227], "hierarch": 69, "hierarchi": [13, 116, 227, 247], "high": [4, 5, 7, 11, 12, 16, 20, 22, 28, 29, 33, 50, 69, 73, 74, 97, 109, 159, 207, 216, 217, 222, 223, 225, 227, 240, 245, 288, 301], "higher": [14, 16, 20, 29, 48, 50, 69, 71, 73, 77, 80, 105, 111, 206, 212, 214, 216, 217, 220, 223, 229, 230, 234, 236, 239, 243, 245, 248, 266, 295], "highest": [16, 50, 63, 98, 129, 214, 223, 230, 240, 243], "highest_root": 98, "highli": [5, 69, 73, 122, 217, 223, 232, 260], "highlight": [11, 14], "hilbert": [179, 181, 187, 288], "hilbert_spac": [178, 181, 190], "hilbertspac": 178, "hill": [70, 77, 96, 135, 158, 202, 209, 271, 292], "hill_ciph": 70, "hillgart": 271, "hinder": 243, "hing": [117, 118, 153], "hint": [4, 12, 14, 24, 49, 53, 60, 69, 72, 75, 96, 105, 109, 113, 125, 159, 169, 173, 189, 191, 192, 202, 223, 234, 237, 245, 305], "hint_integr": 243, "hintnam": [243, 244], "hir": 69, "hire": [27, 36, 105, 117, 118, 121, 123, 213, 230, 291, 292], "histogram": 262, "histor": [13, 15, 18, 24, 70, 216, 243, 247], "histori": [11, 159], "hit": [69, 300], "hjeb": 70, "hk": [125, 240], "hline": 227, "hnf": [106, 216, 222], "hnf_modulu": 222, "ho05": [51, 59], "hobj": 227, "hoc": 94, "hoeij": 221, "hoeij02": 221, "hoeij04": [220, 221], "hoffmann": 271, "hol_coneq": [135, 146, 155], "hold": [14, 15, 16, 24, 45, 49, 60, 65, 69, 70, 71, 75, 77, 91, 94, 105, 108, 111, 125, 127, 134, 136, 137, 157, 188, 223, 237, 239, 243, 247, 260, 305], "holder": 69, "hole": 192, "holomorph": [69, 76, 94], "holonom": [13, 90, 93, 135, 140, 143, 144, 145, 146, 152, 154, 155, 282, 288, 289, 291], "holonomic_constraint": 140, "holonomic_funct": 87, "holonomicfunct": [88, 91, 92], "holonomicsequ": 91, "holt": [51, 59, 60, 67], "holzer": 240, "hom": 49, "home": [12, 117, 222, 240], "homebrew": 8, "homeier": 212, "homeier96": 212, "homogen": [32, 42, 92, 96, 105, 125, 218, 220, 223, 240, 243, 244, 247], "homogeneous_differential_equ": 243, "homogeneous_ord": [218, 223, 240, 243], "homogeneouscoeffbest": 243, "homogeneouscoeffsubsdepdivindep": 243, "homogeneouscoeffsubsindepdivdep": 243, "homogeneousgeneralquadrat": 240, "homogeneousternaryquadrat": 240, "homogeneousternaryquadraticnorm": 240, "homomoprh": 214, "homomorph": 60, "homomorphismfail": 220, "homonym": 13, "hongguang": [238, 283], "hood": [2, 11, 15], "hook": [24, 110, 111, 227], "hookrightarrow": 69, "hope": [14, 20, 60, 129, 214], "hopefulli": [16, 21, 94], "horel": 70, "horizont": [13, 24, 38, 49, 79, 82, 84, 105, 119, 121, 140, 164, 213, 216, 227], "horizontal_direct": 49, "horner": [69, 159, 216, 220, 223], "horner_schem": 223, "horowitz": 96, "host": [2, 5], "hostedtoolcach": 258, "hostnam": 260, "household": 105, "how": [2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 29, 30, 49, 50, 52, 60, 61, 68, 69, 75, 76, 77, 81, 92, 96, 99, 101, 105, 109, 111, 117, 129, 130, 134, 135, 138, 142, 143, 149, 154, 155, 157, 159, 163, 164, 180, 184, 187, 188, 189, 194, 195, 202, 210, 213, 214, 217, 218, 220, 222, 226, 227, 230, 234, 235, 237, 239, 240, 243, 244, 245, 247, 253, 258, 259, 260, 261, 263, 265, 266, 268, 276, 291, 292, 295, 297, 299, 300, 301, 302, 304, 305], "howev": [0, 2, 3, 4, 5, 8, 11, 12, 13, 14, 15, 16, 18, 20, 22, 23, 24, 29, 32, 33, 36, 43, 45, 50, 52, 60, 61, 65, 68, 69, 70, 71, 74, 75, 77, 79, 94, 96, 99, 105, 109, 110, 111, 112, 115, 117, 121, 130, 134, 135, 137, 138, 140, 141, 142, 156, 160, 192, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 228, 234, 235, 236, 237, 239, 243, 244, 245, 246, 258, 259, 266, 275, 276, 280, 292, 294, 297, 299, 301, 305, 306], "hp": 70, "hpobwzcfbubsnz": 70, "hradiu": 79, "hrzqe": 70, "hsin": 221, "hstack": [105, 216, 291], "ht": 96, "hta": 144, "htangl": 144, "htm": [61, 77, 96, 240], "html": [2, 4, 5, 8, 11, 12, 46, 50, 53, 61, 62, 63, 69, 70, 72, 74, 75, 77, 79, 85, 86, 96, 97, 105, 109, 123, 221, 227, 230, 232, 235, 236, 240, 243, 247, 259, 261, 263, 265, 266, 301], "htmldoc": 8, "http": [0, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 22, 24, 40, 42, 44, 45, 46, 48, 49, 50, 52, 53, 55, 57, 58, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 81, 85, 86, 87, 91, 94, 96, 97, 98, 99, 101, 105, 109, 117, 123, 125, 127, 128, 161, 163, 164, 165, 167, 168, 169, 173, 174, 175, 178, 180, 181, 190, 192, 202, 204, 207, 209, 212, 216, 218, 221, 223, 226, 227, 230, 232, 234, 235, 236, 239, 240, 243, 246, 247, 259, 260, 261, 263, 265, 266, 268, 271, 273, 277, 279, 281, 301, 304], "hu": [109, 216], "hubbard": 136, "huge": [96, 109, 223, 263], "hull": 86, "hulpk": 60, "human": [4, 11, 18, 94, 194, 223, 227, 291], "humphrei": 98, "hundr": [110, 266, 299], "hurdl": 142, "hurt": 12, "hurwitz": [74, 77], "hurwitz_zeta_funct": 77, "hw": [168, 193], "hwp": 164, "hxz": 240, "hy": 79, "hybrid": 217, "hydrogen": [50, 288], "hyper": [15, 69, 74, 77, 88, 91, 227, 229, 237, 239, 245, 247, 305], "hyper_algorithm": 229, "hyper_r": 229, "hyperbol": [77, 111, 112, 224, 246, 301, 305], "hyperbolic_funct": 75, "hyperbolicfunct": 75, "hyperegeometr": 239, "hyperexpand": [69, 77, 91, 94, 237, 239], "hyperfocal_dist": 165, "hypergeometr": [73, 74, 87, 93, 94, 221, 238, 239, 243, 245, 247, 283, 305], "hypergeometric_distribut": 247, "hypergeometricdistribut": 247, "hypergeometricfunct": 77, "hypergeometricpfq": 227, "hyperlink": 4, "hyperplan": 98, "hypersimilar": 239, "hypersimp": [68, 239], "hypot": [50, 227], "hypotenus": [50, 85, 141], "hypothesi": 2, "hypothet": 262, "hz": 123, "i": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 175, 176, 178, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 263, 265, 266, 268, 270, 271, 273, 274, 275, 276, 277, 278, 280, 281, 291, 292, 294, 295, 297, 298, 300, 301, 303, 304, 305, 306], "i0": [126, 164, 253], "i1": [117, 126, 142, 159, 253], "i12": 159, "i2": [126, 142, 159, 253], "i23": 159, "i3": [105, 126, 142, 159, 253], "i31": 159, "i4": [126, 253], "i5": 126, "iT": 94, "i_": [77, 94, 237, 247, 248], "i_0": 247, "i_1": [59, 192, 223, 248], "i_2": [59, 192, 223], "i_a": 248, "i_b": 248, "i_b_bo": 142, "i_b_o": 142, "i_c_d": 142, "i_k": 247, "i_n": [222, 223, 248], "i_p_o": 142, "i_p_q": 142, "i_r": 59, "i_xi": [79, 85], "i_xx": [79, 85], "i_yi": [79, 85], "ia": [108, 291], "iamit": 246, "ib": 75, "ibin": [99, 265], "ibm": [11, 239], "ibzz": 147, "ic": [36, 109, 243, 291], "icomp": 253, "icomp1": 253, "icomp2": 253, "icosahedr": 62, "id": [49, 65, 75, 249, 291], "id_a": 49, "id_b": 49, "idea": [3, 7, 11, 12, 14, 15, 22, 23, 24, 54, 60, 67, 69, 70, 81, 87, 94, 96, 109, 126, 142, 192, 196, 197, 214, 216, 217, 236, 239, 240, 243, 246, 260, 266, 305], "ideal": [12, 22, 50, 106, 137, 142, 152, 202, 210, 216, 218, 220, 221, 222, 223, 224, 239, 246, 271], "idempot": 50, "ident": [3, 14, 15, 16, 24, 26, 46, 49, 51, 59, 60, 61, 67, 69, 70, 74, 75, 85, 92, 98, 101, 105, 126, 128, 134, 135, 157, 176, 178, 181, 197, 214, 215, 216, 220, 221, 222, 223, 227, 236, 239, 243, 246, 251, 253, 258, 265, 266, 268, 276, 292, 297, 301, 305], "identif": [94, 246], "identifi": [4, 12, 13, 14, 22, 23, 48, 62, 69, 72, 73, 96, 105, 115, 121, 140, 154, 180, 181, 214, 217, 218, 228, 236, 239, 243, 244, 246, 247, 266], "identity_hom": 214, "identityfunct": 75, "identityg": 176, "identitymatrix": 227, "identitymorph": 49, "identityoper": 181, "ideologi": [50, 246], "idiff": [69, 86], "idiom": [15, 297, 298], "idl": 50, "idx": [48, 50, 227, 251, 252, 259], "ie": [61, 240], "ieee": [69, 70], "ieilehfstsfxe": 70, "ieilh": 70, "ieilhhfstsfqy": 70, "ifascii_nougli": 227, "ifels": 227, "iff": [24, 46, 55, 61, 70, 99, 105, 210, 211, 214, 222, 237, 240, 258], "ifft": 72, "ifndef": [50, 260], "ifork11": 144, "ifork22": 144, "ifork31": 144, "ifork33": 144, "ifort": 2, "ifp": 48, "iframe11": 144, "iframe22": 144, "iframe31": 144, "iframe33": 144, "ifwht": 72, "igcd": [69, 109, 215], "igcd_lehm": 69, "igcdex": 69, "ignor": [11, 12, 13, 14, 16, 18, 24, 50, 60, 69, 70, 74, 75, 79, 84, 94, 99, 105, 109, 125, 131, 132, 138, 144, 189, 192, 202, 213, 223, 227, 228, 239, 245, 246, 259, 305], "ignore_exception_detail": 258, "ignore_warn": [3, 131, 256, 261, 263, 266], "igusa": 247, "ii": [22, 75, 94, 96, 223, 227, 235, 243, 246, 249], "iii": [96, 227, 243], "iin": 98, "ij": [46, 105, 192, 197, 212, 247, 249], "ijk": [50, 252], "ijklm": 249, "ijr22d": 70, "ijth": 98, "il": 247, "ilcm": [69, 109], "ild_moment": 117, "ild_react": 117, "ild_shear": 117, "ilex": 214, "ill": [29, 111, 195], "illinoi": 48, "illumin": 4, "illustr": [50, 105, 131, 143, 146, 197, 217, 230, 234], "im": [24, 47, 69, 75, 94, 102, 214, 227, 228, 235, 243, 301], "imag": [2, 8, 26, 60, 134, 146, 148, 153, 159, 161, 165, 210, 211, 214, 218, 220, 227, 235, 246, 276], "imagemagick": 8, "imageset": [235, 246, 306], "imaginari": [3, 4, 16, 22, 24, 29, 33, 35, 42, 46, 47, 69, 73, 75, 77, 105, 159, 217, 218, 223, 227, 228, 235, 239, 246], "imaginary_numb": [22, 46, 69], "imaginary_unit": [69, 227], "imaginaryhandl": 46, "imaginarypred": 46, "imaginaryunit": [12, 69, 227], "imath": 237, "imbu": 71, "immateri": 70, "immedi": [3, 12, 14, 22, 34, 52, 60, 69, 94, 99, 140, 192, 214, 217, 248, 259, 266], "immut": [13, 14, 15, 69, 100, 103, 107, 211, 218, 243, 248, 286, 294, 301], "immutabledensematrix": [71, 100, 101, 102, 105, 247], "immutabledensendimarrai": [14, 248], "immutablematrix": [100, 101, 105, 125, 140, 202, 247, 271, 274, 301], "immutablesparsendimarrai": 248, "impact": 13, "implement": [2, 4, 5, 11, 12, 13, 14, 15, 17, 19, 23, 24, 33, 35, 37, 38, 39, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 59, 60, 61, 66, 69, 70, 72, 74, 75, 77, 80, 82, 89, 90, 92, 93, 96, 99, 100, 105, 109, 110, 111, 112, 113, 115, 129, 130, 138, 142, 152, 157, 161, 163, 164, 167, 176, 177, 185, 186, 188, 196, 201, 203, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 231, 234, 235, 236, 239, 240, 243, 244, 245, 246, 247, 251, 252, 262, 265, 266, 279, 282, 286, 291, 292, 295, 299, 305], "implemented_funct": [14, 110, 259, 266], "impli": [5, 14, 15, 16, 22, 42, 46, 50, 60, 99, 121, 192, 213, 218, 220, 227, 235, 237, 243, 245, 248, 251, 252, 265, 278, 292], "implic": [14, 69, 99, 220], "implicit": [14, 22, 36, 50, 67, 69, 111, 115, 135, 136, 140, 160, 213, 243, 245, 249, 252, 259, 260, 271, 274, 281, 297], "implicit_appl": 111, "implicit_circl": 281, "implicit_multipl": 111, "implicit_multiplication_appl": 111, "implicitli": [14, 15, 22, 23, 24, 61, 69, 96, 214, 217, 245], "implicitregion": [271, 274, 281], "implicitseri": 213, "implieddoloop": 50, "import": [2, 3, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 184, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 281, 291, 292, 294, 295, 297, 299, 300, 301, 303, 304, 305, 306], "import_modul": [2, 12], "importantli": [14, 22, 24, 224, 262], "importerror": 2, "importlib": 13, "impos": [3, 118, 292], "imposs": [3, 4, 12, 13, 14, 15, 24, 36, 69, 217, 236, 243, 244, 256, 295, 297, 305], "impract": [243, 295], "imprecis": 13, "impress": 16, "improp": [77, 96], "improperli": 69, "improv": [2, 3, 7, 11, 12, 13, 14, 23, 24, 69, 94, 140, 213, 217, 220, 221, 223, 224, 226, 228, 243, 246, 252, 292, 295, 301], "impuls": [27, 125], "impulse_respons": 27, "impulse_response_numerical_data": 123, "impulse_response_plot": 123, "imul_num": 218, "in_terms_of_gener": 214, "inabl": 244, "inaccur": 218, "inappropri": 71, "inc": [209, 221], "incent": 85, "inch": 213, "incid": [161, 165], "incircl": 85, "inclin": [119, 214], "includ": [2, 3, 4, 5, 8, 11, 12, 13, 14, 15, 16, 22, 24, 26, 29, 32, 33, 37, 40, 45, 46, 48, 49, 50, 61, 65, 68, 69, 70, 71, 73, 74, 75, 77, 81, 87, 94, 96, 99, 101, 103, 104, 105, 109, 110, 111, 112, 115, 117, 127, 129, 140, 142, 144, 145, 146, 147, 152, 154, 156, 159, 172, 176, 181, 186, 189, 190, 200, 208, 211, 215, 216, 218, 219, 220, 222, 223, 226, 227, 228, 233, 234, 235, 237, 239, 242, 243, 244, 245, 247, 250, 253, 256, 258, 260, 261, 262, 263, 265, 271, 273, 275, 280, 282, 291, 292, 295, 299, 300, 301, 305, 306], "include_dir": 259, "include_numer": 142, "include_pydi": 142, "include_self": 222, "includepr": [218, 220, 223], "inclus": [5, 13, 68, 119, 121, 185, 214, 233, 234, 235, 246], "inclusion_hom": 214, "incom": [222, 247], "incommensur": 48, "incompat": 31, "incomplet": [2, 4, 5, 69, 74, 77, 111, 215, 217, 223, 227, 229, 245, 246], "incomplete_gamma_funct": 77, "inconclus": 245, "incongru": 237, "inconsist": [22, 24, 43, 45, 68, 197, 202, 206, 210, 239, 243, 245, 246], "inconsistentassumpt": 22, "inconveni": 227, "incorpor": [0, 2, 20, 116, 215, 239], "incorrect": [3, 5, 11, 12, 13, 23, 24, 35, 60, 69, 79, 109, 123, 206, 216, 218, 243, 246, 259, 262, 263], "incorrectli": [4, 11, 13, 14, 24, 78, 79, 105, 215], "increas": [16, 34, 48, 49, 61, 67, 68, 69, 72, 73, 77, 105, 109, 110, 129, 140, 143, 176, 201, 202, 204, 210, 211, 217, 220, 222, 223, 229, 232, 236, 243, 247, 263, 265, 292], "increment": [50, 60, 61, 62, 68, 85, 109, 247], "incur": [50, 110], "ind": [65, 229, 253], "inde": [3, 12, 14, 20, 24, 57, 60, 68, 94, 109, 214, 237, 243, 254, 258, 299], "indefinit": [12, 15, 42, 75, 93, 94, 96, 105, 111, 218, 220, 221, 223, 232, 295], "indent": [4, 16, 268], "indent_cod": 227, "indep": 243, "indep_div_dep": 243, "independ": [15, 16, 24, 34, 46, 48, 50, 60, 68, 69, 71, 77, 86, 94, 96, 98, 105, 125, 135, 136, 140, 142, 144, 145, 146, 154, 156, 190, 197, 208, 213, 215, 217, 222, 223, 229, 230, 237, 239, 240, 243, 244, 245, 246, 247, 253, 258, 259, 278, 291, 299, 300], "indetermin": [22, 23, 69, 105, 220, 232, 245], "indeterminate_form": 69, "index": [2, 8, 11, 12, 13, 16, 24, 29, 36, 37, 38, 42, 50, 58, 60, 61, 65, 68, 69, 70, 71, 74, 75, 77, 80, 85, 94, 96, 99, 101, 105, 108, 109, 111, 113, 125, 140, 142, 159, 160, 161, 163, 165, 166, 176, 185, 187, 189, 192, 197, 202, 213, 214, 216, 218, 222, 223, 224, 227, 232, 233, 237, 245, 247, 248, 250, 251, 253, 254, 259, 286], "index_group": 192, "index_method": 251, "index_order_new": [248, 249], "index_order_old": [248, 249], "index_typ": 253, "index_vector": 42, "indexconformanceexcept": 251, "indexedbas": [48, 50, 68, 69, 227, 245, 251, 252, 259], "indexerror": [61, 105, 223], "indexing_maxterm": 99, "indexing_minterm": 99, "indic": [3, 4, 11, 12, 16, 19, 22, 33, 36, 37, 48, 49, 50, 51, 53, 58, 60, 61, 62, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 84, 85, 94, 96, 99, 101, 105, 108, 109, 126, 140, 146, 176, 187, 189, 190, 192, 197, 201, 202, 212, 216, 217, 218, 222, 223, 224, 227, 234, 235, 236, 239, 240, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 265, 301], "indices_contain_equal_inform": [77, 192], "indici": [91, 92, 93, 243], "indirect": [12, 69, 71, 77, 109, 192, 243], "indirectli": [14, 22], "individu": [11, 12, 13, 22, 24, 27, 31, 34, 69, 75, 80, 85, 86, 98, 101, 105, 125, 157, 164, 182, 186, 212, 235, 243, 245, 258, 301], "induc": [69, 105, 222, 236, 265], "induct": 214, "ineffici": [32, 69, 105, 217], "inequ": [14, 15, 22, 23, 24, 30, 69, 213, 220, 235, 237, 241, 283], "inequival": 94, "inert": [222, 243], "inerti": [131, 135, 137, 140, 144, 146, 149, 154, 155, 157, 159, 291], "inertia": [13, 117, 118, 128, 129, 131, 133, 140, 142, 144, 145, 147, 149, 150, 151, 152, 159, 201, 202, 210, 211, 222, 288], "inertia_dyad": 202, "inertia_of_point_mass": [13, 137], "inertia_tupl": [131, 137], "inexact": [14, 16, 38, 69, 216, 218], "inexpens": 14, "inexpress": 223, "inextens": 292, "inf": [50, 61, 69, 105, 218, 220, 223, 235, 243, 247], "infal": 297, "infanc": 81, "infeas": [220, 223], "infeasiblelperror": 245, "infer": [22, 44, 45, 61, 69, 96, 217, 226, 227, 232, 237, 243, 259], "infimum": 235, "infin": [15, 22, 31, 46, 68, 69, 74, 75, 77, 82, 94, 96, 105, 165, 218, 220, 223, 227, 232, 233, 234, 235, 239, 242, 243, 247], "infinit": [22, 24, 31, 32, 46, 68, 69, 70, 73, 74, 75, 82, 83, 96, 105, 109, 125, 141, 148, 178, 197, 214, 222, 227, 228, 229, 232, 233, 234, 235, 239, 240, 242, 245, 252, 265, 295, 305, 306], "infinite_product": 68, "infinitehandl": 46, "infinitepred": 46, "infinitesim": [208, 243, 278], "infix": 69, "inflect": 212, "influenc": [12, 51, 117, 141, 214, 215, 291, 292], "info": [5, 9, 11, 16, 125, 227, 243, 244], "inform": [2, 3, 4, 5, 7, 9, 11, 14, 15, 16, 19, 22, 23, 26, 29, 38, 39, 45, 46, 49, 50, 51, 55, 60, 61, 67, 69, 70, 74, 77, 81, 94, 96, 98, 101, 105, 109, 110, 111, 118, 131, 132, 134, 135, 137, 140, 142, 144, 152, 153, 154, 156, 157, 159, 160, 187, 192, 197, 202, 207, 211, 213, 216, 217, 222, 223, 227, 228, 234, 237, 239, 240, 245, 246, 247, 251, 252, 253, 258, 259, 260, 261, 262, 271, 276, 278, 291, 305], "informatik": 265, "informatiqu": 224, "infrastructur": [227, 244], "infti": [4, 14, 15, 22, 46, 68, 69, 70, 74, 75, 77, 94, 96, 111, 214, 223, 230, 234, 237, 243, 246, 247, 295, 299, 305], "inftyright": 246, "infunct": 69, "inher": [142, 266, 297], "inherit": [13, 43, 69, 76, 99, 101, 102, 112, 115, 130, 134, 138, 141, 181, 190, 212, 227, 247, 252, 260, 261], "inhomogen": [240, 243, 245], "inhomogeneousgeneralquadrat": 240, "inhomogeneousternaryquadrat": 240, "init": 245, "init_cond": 71, "init_ipython_sess": 97, "init_print": [13, 14, 29, 34, 40, 50, 61, 73, 96, 97, 105, 118, 207, 214, 215, 226, 295, 299, 301, 304, 305, 306], "init_python_sess": 97, "init_sess": [2, 97, 304], "init_subgroup": 60, "init_vprint": [131, 137, 139, 157, 160, 202, 204, 206, 207, 210, 211], "initcond": [88, 90, 91], "initi": [5, 15, 22, 27, 35, 44, 60, 64, 69, 70, 71, 74, 77, 85, 87, 88, 91, 92, 93, 94, 96, 97, 109, 111, 118, 119, 121, 123, 125, 131, 135, 137, 140, 142, 144, 145, 146, 147, 151, 154, 155, 156, 159, 160, 164, 172, 181, 203, 204, 207, 211, 212, 220, 222, 223, 227, 233, 237, 239, 243, 245, 246, 252, 260, 267, 268, 271, 273, 274, 275, 276, 291, 292], "initial_condit": [142, 159], "initial_exp": 123, "initializing_quadratic_siev": 109, "initialor": 36, "inject": [14, 60, 69, 214, 218, 223, 301], "inlin": [4, 12, 97, 207, 227, 260, 291], "inlist": 202, "inner": [22, 36, 68, 94, 105, 111, 175, 178, 179, 184, 186, 187, 190, 192, 202, 206, 216, 222, 229, 271, 288], "inner_endomorph": 222, "inner_product": 180, "innerendomorph": 222, "innermost": 69, "innerproduct": [175, 180, 181, 187, 189, 192], "inout": 50, "inoutargu": [50, 260], "inp_vec": [146, 156], "inplac": 218, "input": [4, 5, 11, 12, 15, 16, 24, 27, 33, 36, 42, 48, 51, 65, 69, 70, 72, 73, 74, 75, 83, 96, 98, 99, 105, 109, 111, 112, 113, 115, 119, 121, 122, 123, 125, 129, 134, 136, 140, 142, 144, 146, 156, 159, 160, 165, 188, 202, 204, 206, 216, 217, 218, 220, 223, 224, 225, 226, 227, 228, 235, 239, 240, 243, 245, 247, 249, 259, 260, 262, 263, 265, 266, 268, 291, 292, 294, 300, 301, 305], "input_var": [112, 115], "inputargu": [50, 260], "inputoutput": 260, "inquiri": 69, "inradiu": 85, "inria": [91, 96], "insconsist": 69, "inscrib": 85, "insensit": [50, 105, 159, 227, 258, 260], "insert": [49, 51, 105, 111, 115, 117, 187, 192, 227, 247, 268, 291, 292], "insertion_angl": 291, "insertion_dist": 291, "insertion_segment_length": 291, "insid": [5, 12, 13, 14, 15, 16, 24, 60, 61, 66, 69, 79, 80, 85, 117, 129, 132, 146, 156, 191, 192, 196, 197, 207, 211, 223, 227, 235, 237, 240, 245, 246, 247, 249, 251, 262, 266, 300, 301], "insidepoli": 85, "insight": [31, 298], "inspect": [12, 13, 22, 105, 113, 115, 222, 233, 264, 266, 290, 292], "inspir": [244, 301], "instal": [2, 5, 12, 15, 16, 26, 73, 110, 216, 217, 218, 227, 259, 266, 298, 304], "instanc": [1, 3, 4, 5, 12, 13, 14, 15, 19, 22, 23, 24, 43, 44, 45, 47, 49, 50, 52, 60, 62, 64, 69, 71, 73, 74, 75, 77, 82, 85, 86, 87, 92, 93, 96, 97, 101, 104, 105, 109, 111, 112, 113, 115, 117, 126, 130, 131, 135, 138, 140, 141, 142, 145, 147, 160, 165, 172, 176, 182, 186, 187, 189, 191, 192, 202, 204, 207, 208, 213, 216, 217, 218, 222, 223, 224, 225, 227, 235, 237, 239, 243, 245, 246, 247, 251, 252, 253, 258, 259, 260, 262, 265, 266, 271, 273, 274, 275, 276, 278, 280, 292, 294, 295, 300, 305, 306], "instantan": [278, 292], "instanti": [42, 49, 50, 61, 69, 77, 82, 84, 85, 101, 111, 112, 113, 115, 130, 135, 138, 141, 182, 190, 202, 214, 216, 218, 222, 247, 271, 275, 292], "instantia": 213, "instead": [2, 3, 4, 5, 8, 11, 12, 13, 14, 15, 16, 18, 22, 23, 24, 31, 33, 34, 36, 37, 38, 41, 42, 43, 45, 49, 50, 60, 62, 65, 69, 71, 72, 73, 74, 77, 96, 97, 99, 101, 102, 105, 109, 112, 115, 123, 126, 128, 130, 140, 142, 144, 146, 156, 159, 190, 194, 201, 202, 207, 208, 210, 211, 213, 214, 216, 217, 218, 220, 222, 223, 225, 227, 229, 237, 239, 243, 245, 246, 247, 251, 252, 253, 256, 261, 262, 263, 265, 266, 278, 281, 292, 294, 295, 297, 299, 300, 301, 305, 306], "institut": 224, "instruct": [2, 4, 5, 7, 8, 9, 11, 13, 16, 20, 25, 39, 50, 227, 245, 259, 260], "insuffici": [18, 105], "int": [2, 4, 5, 12, 13, 14, 15, 16, 22, 23, 24, 42, 48, 50, 55, 61, 69, 70, 71, 74, 75, 77, 78, 85, 94, 96, 97, 99, 105, 106, 109, 111, 113, 115, 123, 125, 134, 172, 176, 177, 186, 202, 204, 206, 207, 212, 213, 217, 218, 222, 223, 224, 227, 229, 230, 232, 240, 243, 244, 247, 259, 263, 265, 266, 268, 297, 299, 300, 304, 305], "int1": [44, 45], "int16": 50, "int2": [44, 45], "int32": 50, "int64": [14, 50, 247], "int8": 50, "int_": [77, 93, 94, 96, 223, 230, 295, 299], "int_0": [14, 77, 94, 96, 295, 305], "int_1": [77, 94, 111], "int_a": 96, "int_fram": 13, "int_l": [77, 94, 237], "int_to_integ": 97, "int_x": 77, "intact": [3, 13, 50, 259], "intbasetyp": 50, "intc": [50, 111], "intcurve_diffequ": 71, "intcurve_seri": 71, "integ": [2, 4, 5, 12, 14, 15, 16, 22, 24, 31, 32, 33, 43, 44, 45, 46, 48, 50, 51, 55, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 73, 74, 77, 79, 82, 93, 94, 96, 97, 98, 99, 101, 105, 106, 109, 111, 115, 117, 119, 125, 127, 134, 181, 186, 188, 189, 190, 192, 194, 202, 204, 207, 212, 213, 214, 215, 216, 218, 220, 221, 222, 223, 224, 226, 227, 229, 232, 233, 234, 235, 236, 237, 239, 240, 243, 245, 246, 247, 251, 252, 253, 259, 260, 262, 265, 268, 295, 297, 300, 304, 305], "integer_as_sum_of_three_squar": 240, "integer_el": 46, "integer_log": 69, "integer_nthroot": [69, 75, 109], "integer_to_term": 99, "integerelementshandl": 46, "integerelementspred": 46, "integerhandl": 46, "integerpartit": [58, 265], "integerpred": 46, "integers_onli": 213, "integr": [2, 11, 12, 14, 15, 16, 19, 30, 40, 42, 48, 61, 68, 69, 71, 74, 75, 87, 88, 89, 92, 98, 104, 105, 108, 109, 111, 125, 127, 135, 140, 142, 152, 159, 178, 187, 190, 193, 196, 201, 203, 208, 212, 214, 217, 218, 220, 223, 224, 227, 229, 230, 237, 243, 244, 247, 260, 268, 271, 274, 275, 278, 279, 283, 286, 291, 292, 296, 299, 304], "integral_basi": [218, 222], "integral_step": 96, "integraltransform": 96, "integraltransformerror": 96, "integrand": [12, 73, 77, 93, 94, 96, 111, 237, 295], "integrate_result": 187, "integration_techniqu": 96, "integration_vari": 295, "integstp": 142, "intellig": [221, 239, 243, 305], "intelligenc": 55, "intend": [2, 3, 4, 7, 9, 11, 12, 13, 14, 18, 22, 69, 70, 80, 89, 94, 109, 111, 116, 132, 137, 187, 216, 217, 218, 222, 225, 227, 240, 243, 244, 256, 261, 268, 291, 292, 294], "intens": [135, 136, 161, 164], "intent": [12, 14, 22, 50, 68, 69, 111, 216, 260], "intent_in": 50, "intent_out": 50, "intention": 69, "intenum": 115, "interact": [0, 11, 14, 15, 18, 33, 41, 69, 83, 96, 102, 105, 138, 159, 189, 207, 211, 217, 218, 239, 247, 263, 269, 282, 290, 297, 299, 300, 304, 305], "interactive_travers": 13, "interactiveconsol": [97, 207], "interchang": [15, 65, 68, 94, 116, 243], "interconnect": [122, 125, 131, 292], "interest": [7, 11, 14, 16, 18, 24, 29, 32, 38, 65, 69, 71, 74, 75, 85, 94, 96, 105, 109, 111, 138, 143, 144, 192, 197, 211, 214, 218, 222, 223, 224, 226, 234, 237, 239, 240, 245, 246, 259, 260, 276, 292, 295, 298, 300, 301, 302, 305], "interf": 246, "interfac": [2, 5, 7, 9, 11, 12, 15, 33, 48, 69, 97, 112, 116, 134, 161, 187, 207, 211, 216, 217, 220, 225, 246, 259, 260, 292], "interfer": [22, 227], "interfram": [134, 206], "interior": [85, 223, 235], "interior_angl": 85, "intermedi": [15, 50, 51, 92, 105, 134, 142, 144, 147, 149, 153, 176, 186, 194, 195, 202, 206, 210, 246, 260, 292, 302], "intern": [3, 13, 14, 15, 16, 22, 23, 31, 48, 50, 51, 60, 69, 72, 73, 74, 77, 85, 86, 89, 100, 105, 109, 111, 115, 118, 121, 123, 144, 156, 157, 165, 186, 187, 197, 214, 216, 218, 219, 221, 223, 225, 227, 237, 239, 242, 243, 244, 245, 246, 247, 251, 253, 256, 260, 262, 265, 289, 300, 304], "internal_forc": 121, "interpol": [48, 74, 78, 159, 220, 223], "interpolating_poli": [77, 223], "interpolating_splin": 77, "interpret": [16, 23, 36, 38, 50, 60, 68, 69, 74, 75, 77, 82, 85, 96, 101, 105, 109, 111, 129, 197, 213, 215, 222, 223, 227, 234, 240, 245, 246, 247, 252, 258, 259, 262, 268, 301], "interrog": 37, "interrupt": 258, "intersect": [4, 22, 33, 48, 49, 60, 79, 80, 82, 83, 84, 85, 86, 105, 138, 165, 214, 223, 227, 233, 234, 235, 246], "intersecting_product": 72, "intersection_": 235, "interspers": 214, "interv": [29, 31, 33, 36, 46, 48, 60, 69, 73, 75, 77, 78, 79, 82, 85, 94, 96, 99, 109, 178, 187, 216, 218, 220, 222, 223, 230, 233, 235, 242, 246, 247, 295, 306], "interval_": 235, "interval_list": 213, "intfunc": [75, 109, 223], "intgrl": 73, "intim": 214, "intiuit": 105, "intm": 104, "intp": 50, "intpoli": 96, "intqubit": [177, 186], "intqubitbra": 186, "intransit": 60, "intrins": [42, 50], "intrinsic_imped": 163, "introduc": [13, 14, 23, 32, 65, 68, 69, 77, 94, 105, 110, 112, 115, 118, 142, 144, 145, 149, 150, 151, 155, 192, 197, 211, 218, 219, 223, 224, 227, 234, 237, 240, 247, 263, 289, 291, 292, 298, 301, 303, 305], "introduct": [5, 6, 13, 21, 60, 61, 74, 77, 216, 218, 220, 221, 223, 227, 240, 243, 246, 279, 286, 293, 298, 304], "introductori": [16, 20, 39, 40, 159, 217, 218, 223], "introspect": 159, "intstep": 96, "intt": 72, "inttyp": 50, "intuit": [69, 157, 197, 243, 292], "inv": [20, 34, 61, 100, 105, 131, 135, 140, 144, 149, 150, 159, 181, 216, 243], "inv_can_transf_matrix": 194, "inv_den": [105, 216], "inv_method": [131, 135, 140], "inv_perm": 61, "inv_trig_styl": 227, "invalid": [5, 11, 12, 14, 16, 38, 69, 70, 111, 144, 217, 220, 235], "invari": [5, 13, 24, 60, 65, 122, 125, 212, 216, 218, 222, 223, 237, 243], "invent": [70, 222, 245, 299], "inver": 224, "invers": [4, 12, 34, 36, 42, 60, 61, 69, 70, 71, 77, 96, 101, 105, 109, 111, 113, 131, 135, 140, 181, 185, 186, 189, 194, 197, 214, 215, 216, 218, 220, 223, 224, 227, 229, 237, 239, 243, 245, 246, 247, 265, 292, 301, 305], "inverse_adj": [105, 301], "inverse_block": 105, "inverse_ch": 105, "inverse_cosine_transform": 96, "inverse_fourier_transform": 96, "inverse_funct": 77, "inverse_g": [105, 301], "inverse_gaussian_distribut": 247, "inverse_hankel_transform": 96, "inverse_laplace_transform": [27, 96], "inverse_ldl": 105, "inverse_lu": [105, 301], "inverse_mellin_transform": 96, "inverse_mobius_transform": 72, "inverse_qr": 105, "inverse_sine_transform": 96, "inverse_trigonometric_funct": 75, "inversecosinetransform": 96, "inverseerf": [77, 227], "inverseerf2": 77, "inverseerfc": [77, 227], "inversefouriertransform": 96, "inversegaussiandistribut": 247, "inversehankeltransform": 96, "inverselaplacetransform": 96, "inversemellintransform": 96, "inversesinetransform": 96, "inversetrigonometricfunct": 24, "inversion_vector": 61, "invert": [20, 34, 38, 46, 69, 70, 101, 105, 125, 146, 194, 215, 216, 217, 218, 222, 223, 243, 245, 246, 253, 292, 301], "invert_complex": 246, "invert_r": 246, "invertible_matrix": 46, "invertiblehandl": 46, "invertiblepred": 46, "investig": [11, 61, 94, 212, 214, 237, 265, 297], "invok": [234, 258, 259], "invol": 112, "involut": 265, "involv": [11, 12, 13, 14, 16, 20, 22, 29, 31, 33, 45, 47, 60, 68, 69, 70, 74, 81, 82, 94, 96, 109, 116, 125, 131, 135, 141, 142, 171, 181, 187, 189, 199, 201, 210, 211, 214, 215, 218, 220, 222, 223, 224, 228, 229, 234, 235, 236, 237, 239, 240, 243, 245, 248, 266, 291, 305], "io": [2, 5, 97, 227, 266], "ion": [112, 240, 292], "iosi": 70, "iota": [16, 227], "ip": [97, 180, 186, 207], "ip_doit": 184, "ipl": 105, "ipmnet": 243, "ipo": 253, "ipos1": 253, "ipos2": 253, "iproduct": 265, "ipython": [2, 4, 15, 16, 40, 97, 159, 207, 266, 270, 303, 304], "iqft": 185, "iren": [4, 77], "irrat": [22, 29, 46, 48, 69, 109, 217, 223, 227, 235, 299], "irrational_numb": [22, 46, 69], "irrationalhandl": 46, "irrationalpred": 46, "irreduc": [14, 29, 215, 216, 218, 220, 222, 223, 226, 247, 253, 305], "irreducibili": 223, "irregular": [101, 105], "irrelev": 74, "irrespect": [96, 240, 243, 268], "irrot": [208, 278], "irwin": 247, "is2pow": 109, "is_": [15, 24, 69], "is_2dlin": 213, "is_abelian": 60, "is_abelian_numb": 55, "is_above_fermi": [77, 192], "is_absolutely_converg": 68, "is_abund": 109, "is_add": [69, 246], "is_algebra": [22, 69, 218], "is_algebraic_expr": 69, "is_alias": 69, "is_alt_sym": [60, 67], "is_altern": 60, "is_amic": 109, "is_anf": 99, "is_anti_symmetr": 105, "is_below_fermi": [77, 192], "is_biprop": 125, "is_canon_bp": 253, "is_capit": 15, "is_carmichael": [13, 109], "is_clos": 235, "is_cnf": 99, "is_collinear": [81, 84], "is_commut": [22, 96, 181, 190, 265], "is_compar": [22, 69], "is_compat": 222, "is_compat_col": 222, "is_complex": [22, 69], "is_concycl": 84, "is_conserv": [203, 208, 274, 278], "is_consist": [194, 200], "is_const": 69, "is_converg": 68, "is_convex": [48, 85], "is_coplanar": 83, "is_cycl": 60, "is_cyclic_numb": 55, "is_cyclotom": [218, 223], "is_decreas": 48, "is_defici": 109, "is_deriv": [13, 69], "is_diagon": [105, 216], "is_diagonaliz": 105, "is_dihedr": 60, "is_dimensionless": 194, "is_disjoint": 235, "is_dnf": 99, "is_echelon": [105, 301], "is_elementari": 60, "is_empti": [13, 22, 61], "is_equilater": 85, "is_euler_jacobi_pseudoprim": 109, "is_euler_pseudoprim": 109, "is_even": [24, 57, 60, 61], "is_exact": 218, "is_extended_neg": 22, "is_extended_nonneg": 22, "is_extended_nonposit": 22, "is_extended_posit": [22, 23], "is_extended_r": 22, "is_extra_strong_lucas_prp": 109, "is_fermat_pseudoprim": 109, "is_field": [217, 218], "is_finit": [22, 69], "is_finite_set": 22, "is_float": 69, "is_full_modul": 214, "is_funct": 50, "is_gaussian_prim": 109, "is_groebn": 220, "is_ground": [218, 223], "is_group": [57, 60], "is_hermitian": 105, "is_homogen": [218, 223], "is_hypergeometr": 68, "is_ident": [59, 61, 69], "is_increas": 48, "is_indefinit": 105, "is_inert": 222, "is_infinit": 22, "is_inject": 214, "is_int": 222, "is_integ": [14, 15, 22, 24, 69, 204, 227, 252], "is_irr": 69, "is_irreduc": [218, 223], "is_isomorph": 214, "is_isoscel": 85, "is_iter": 235, "is_left_unbound": 235, "is_linear": [218, 223], "is_low": [105, 216], "is_lower_hessenberg": 105, "is_lucas_prp": 109, "is_matrix": [50, 227], "is_maxim": 214, "is_meromorph": 69, "is_mersenne_prim": 109, "is_minim": 220, "is_mon": [218, 223], "is_monomi": [218, 223], "is_monoton": 48, "is_mul": 69, "is_multivari": 223, "is_neg": [22, 24, 69, 218], "is_negative_definit": 105, "is_negative_semidefinit": 105, "is_nilpot": [60, 105], "is_nilpotent_numb": 55, "is_nnf": 99, "is_nonneg": [22, 24, 218], "is_nonposit": 218, "is_nonzero": [22, 84], "is_norm": [60, 190], "is_nthpow_residu": 109, "is_numb": [14, 15, 22, 69, 77, 96], "is_odd": 61, "is_on": [218, 223], "is_only_above_fermi": [77, 192], "is_only_below_fermi": [77, 192], "is_only_q_annihil": 192, "is_only_q_cr": 192, "is_open": 235, "is_palindrom": [109, 265], "is_parallel": [82, 83], "is_perfect": [60, 109], "is_perfect_squar": 13, "is_perpendicular": [82, 83, 84, 85], "is_pid": 218, "is_polycycl": 60, "is_polynomi": 69, "is_posit": [12, 14, 15, 22, 23, 24, 69, 204, 218], "is_positive_definit": 105, "is_positive_semidefinit": 105, "is_pow": [16, 50, 69, 75], "is_prefix": 199, "is_prim": [13, 22, 69, 214], "is_primari": 214, "is_primit": [60, 218, 223], "is_primitive_el": 69, "is_primitive_root": [70, 109], "is_princip": 214, "is_prop": 125, "is_proper_subset": 235, "is_proper_superset": 235, "is_pur": 42, "is_q_annihil": 192, "is_q_creat": 192, "is_quad_residu": [74, 109], "is_quadrat": [218, 223], "is_r": 218, "is_rad": 214, "is_rat": [16, 22, 222, 265], "is_rational_funct": 69, "is_real": [12, 14, 15, 22, 24, 29, 33, 69, 71, 75, 76, 105, 204, 223, 227, 252], "is_recurr": 247, "is_reduc": 220, "is_right": 85, "is_right_unbound": 235, "is_sam": 69, "is_scalar_multipl": 84, "is_scalen": 85, "is_sequ": 265, "is_similar": [80, 82, 85, 86], "is_simpl": 77, "is_singleton": 61, "is_singular": [69, 76, 92], "is_solenoid": [203, 208, 274, 278], "is_solv": 60, "is_sqf": [218, 223], "is_squar": [13, 69, 105, 109, 216, 218], "is_stabl": [27, 125], "is_strictly_decreas": 48, "is_strictly_increas": 48, "is_strictly_prop": 125, "is_strong_lucas_prp": 109, "is_strongly_diagonally_domin": 105, "is_subdiagram": 49, "is_subgroup": 60, "is_submodul": 214, "is_subset": [19, 235], "is_superset": 235, "is_surject": 214, "is_symbol": [50, 105], "is_symmetr": [60, 105], "is_tang": [79, 81], "is_this_zero": [3, 263], "is_transit": 60, "is_trivi": 60, "is_tru": [43, 45, 46], "is_unit": 218, "is_univari": 223, "is_up": 253, "is_upp": [105, 216], "is_upper_hessenberg": 105, "is_weakly_diagonally_domin": 105, "is_whole_r": 214, "is_zero": [3, 22, 24, 84, 105, 214, 218, 223, 263, 301], "is_zero_dimension": [223, 246], "is_zero_matrix": [22, 105, 216], "is_zero_quaternion": 42, "isc": 221, "isclos": 69, "isdisjoint": 235, "isfinit": 69, "isign": 50, "isinst": [13, 14, 15, 19, 22, 24, 50, 69, 101, 104, 125, 217, 218, 227, 228, 239, 248, 251, 260, 300], "isint": 24, "isn": [7, 11, 13, 14, 24, 36, 96, 129, 138, 142, 246, 299], "isol": [9, 29, 48, 75, 218, 222, 223, 224, 245, 260], "isometr": [113, 115, 292], "isometri": 98, "isomorph": [52, 60, 63, 214, 217, 220, 222], "isomorphismfail": [220, 222], "isotrop": 193, "ispk": 70, "isposit": 23, "isprim": [13, 46, 70, 74, 109], "isprimit": 69, "isqrt": [69, 109], "issac": [51, 96, 221, 245], "issn": 0, "issu": [3, 5, 7, 12, 13, 14, 15, 16, 23, 24, 29, 31, 32, 33, 34, 35, 36, 37, 40, 41, 48, 68, 69, 86, 96, 99, 105, 110, 152, 172, 209, 212, 221, 222, 224, 227, 235, 236, 245, 246, 258, 260, 262, 263, 265, 268, 288, 296, 297, 300, 305], "issubset": 235, "issuperset": 235, "ist": [221, 236], "istruehandl": 46, "istruepred": 46, "isuru": 0, "isympi": [1, 2, 15, 16, 97], "iszero": 301, "iszerofunc": [105, 301], "it5": 105, "ital": [5, 227], "italic": 5, "ite": 227, "item": [4, 5, 15, 16, 18, 29, 36, 50, 58, 59, 61, 69, 74, 80, 86, 105, 109, 130, 135, 137, 138, 157, 213, 216, 217, 220, 223, 227, 235, 243, 244, 247, 258, 259, 262, 265, 266, 305], "iter": [15, 29, 32, 33, 34, 38, 48, 50, 58, 60, 61, 64, 65, 69, 70, 71, 72, 74, 77, 85, 99, 109, 131, 132, 134, 135, 136, 137, 140, 156, 160, 177, 192, 206, 213, 214, 215, 216, 218, 220, 223, 227, 228, 229, 230, 233, 239, 240, 243, 245, 246, 247, 248, 251, 259, 260, 261, 262, 264, 266, 271, 276, 290], "iter_q_annihil": 192, "iter_q_cr": 192, "iterate_binari": 64, "iterate_graycod": 64, "itercoeff": 218, "itermax": 50, "itermonom": 218, "itermonomi": 223, "iterterm": 218, "itertool": [64, 265], "itex": 227, "ith": [61, 98, 109, 216, 218, 224, 246, 247], "itii": 70, "its": [0, 2, 3, 4, 5, 7, 12, 13, 14, 15, 16, 18, 20, 22, 23, 24, 29, 31, 32, 33, 34, 35, 36, 38, 42, 44, 45, 46, 49, 50, 51, 53, 57, 59, 60, 61, 68, 69, 70, 71, 74, 75, 77, 79, 81, 85, 87, 94, 96, 97, 99, 101, 105, 109, 111, 112, 113, 115, 116, 117, 118, 119, 121, 125, 129, 130, 131, 134, 135, 137, 138, 140, 141, 142, 144, 146, 152, 153, 156, 157, 159, 160, 165, 171, 177, 178, 180, 181, 186, 187, 190, 192, 196, 197, 199, 202, 203, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 233, 234, 235, 239, 242, 243, 245, 246, 247, 249, 251, 252, 253, 258, 261, 262, 265, 266, 271, 274, 275, 276, 278, 281, 291, 292, 299, 300, 301, 304, 305], "itself": [2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 24, 46, 58, 60, 61, 67, 69, 71, 74, 75, 82, 86, 91, 105, 109, 116, 135, 140, 142, 157, 182, 189, 208, 210, 213, 214, 216, 217, 218, 220, 222, 223, 227, 235, 236, 239, 246, 251, 252, 253, 260, 262, 265, 280, 292, 299], "iv": [77, 224], "ivan": 220, "ivanov": 0, "iverson": 24, "iwf11": 144, "iwf22": 144, "iwr11": 144, "iwr22": 144, "ixi": [137, 202], "ixx": [131, 137, 202], "ixz": 202, "iy_": 77, "iyi": [137, 202], "iyz": [137, 202], "iz": 77, "izx": 137, "izz": [137, 202], "i\u2080": 164, "j": [0, 5, 12, 13, 14, 16, 27, 42, 46, 48, 50, 51, 55, 59, 60, 61, 65, 67, 68, 70, 71, 74, 77, 91, 94, 96, 98, 101, 105, 109, 112, 113, 115, 123, 126, 131, 140, 158, 159, 164, 171, 172, 189, 192, 197, 201, 208, 212, 214, 216, 218, 220, 221, 222, 223, 224, 226, 227, 229, 235, 237, 239, 240, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 259, 265, 271, 273, 274, 275, 276, 277, 278, 280, 281, 291, 292], "j1": [134, 145, 147, 171, 189], "j12": [171, 189], "j13": 171, "j2": [134, 145, 147, 171, 189], "j23": 171, "j24": 171, "j2op": 189, "j3": [145, 147, 171, 189], "j34": 171, "j4": 171, "j_": [74, 77, 94, 96, 189, 229, 237, 299], "j_0": 172, "j_1": [74, 171, 172, 189, 212, 229, 248], "j_2": [74, 171, 172, 189, 212, 229], "j_3": [171, 189, 212], "j_4": [189, 212], "j_5": 212, "j_6": 212, "j_7": 212, "j_8": 212, "j_9": 212, "j_m": 248, "j_n": [77, 189], "j_y": 212, "j_z": 212, "ja": 108, "jacobi": [74, 96, 109, 127, 223, 227], "jacobi_norm": 77, "jacobi_poli": [77, 223], "jacobi_polynomi": 77, "jacobi_rul": 96, "jacobi_symbol": [13, 70, 74, 109], "jacobian": [71, 105, 156, 245], "jacobian_determin": 71, "jacobian_matrix": 71, "jacobip": [77, 227], "jacobipolynomi": 77, "jakob": 223, "jame": [70, 220], "jan": [0, 70], "jane": 51, "januari": 109, "jason": [0, 227], "java": 16, "javascript": 304, "javascriptcodeprint": 227, "jax": [2, 110, 266], "jburkardt": 96, "jc": 117, "jcoupl": 189, "jcoupling_list": 189, "jean": 96, "jeffrei": [105, 239], "jen": 212, "jensen": [11, 50], "jerom": 265, "jeromekelleh": 265, "jewett": 109, "jguzm022": 11, "ji": [105, 249], "jim": 158, "jit": [2, 236], "jj": 189, "jk": 0, "jku": [91, 243, 271], "jl": [221, 260], "jlname": 260, "jm": 189, "jmig5776": 11, "jn": [75, 77, 189, 223, 227, 299], "jn_zero": 77, "jnanjeky": 11, "jnp": 110, "joannah": 11, "joaquim": 11, "job": [12, 20, 24, 61, 172, 224, 227], "jochen": 11, "joe": 11, "joeb": 11, "joel": 243, "jogi": 11, "johan": 11, "johan_bluecreek": 11, "johansson": 0, "john": [51, 55, 60, 77, 223, 240, 243], "johndcook": 74, "johnson": [61, 105], "joi": 49, "join": [9, 14, 16, 31, 61, 69, 70, 82, 105, 117, 118, 138, 227, 239, 243, 245, 248, 265], "joint": [121, 130, 131, 133, 140, 145, 147, 152, 288, 291], "joint1": 145, "joint2": 145, "joint3": 145, "joint_axi": [13, 130, 134, 140, 145, 147, 153], "joint_distribut": 247, "joint_point": 134, "joint_rv_typ": 247, "jointdistributionhandmad": 247, "jointli": 22, "jointrv": 247, "jointsmethod": 131, "jon": 109, "jone": [109, 164], "jones_2_stok": 164, "jones_calculu": 164, "jones_vector": 164, "jordan": [34, 94, 105, 216, 225, 243, 245, 246], "jordan_block": 105, "jordan_cel": 105, "jordan_form": 105, "jordan_matrix": [105, 243], "jordan_normal_form": 243, "joseph": [126, 221], "josephu": 61, "josephus_problem": 61, "josi": 70, "joul": 197, "journal": [0, 4, 7, 42, 68, 74, 126, 221, 239, 262, 265], "joyofcat": 49, "jpr2718": 240, "jr": 77, "js_function_str": 227, "jscode": [50, 227], "jstor": 247, "jth": [98, 216, 246], "judgement": 5, "judgment": 12, "juli": [70, 240], "julia": 260, "julia_cod": [50, 227], "juliacodegen": 260, "juliacodeprint": 227, "juliu": 70, "jump": [247, 305], "june": [70, 105], "jupyt": [2, 7, 11, 15, 24, 266], "jurjen": 227, "just": [1, 3, 4, 5, 11, 12, 13, 14, 15, 16, 22, 23, 24, 31, 33, 36, 40, 46, 49, 50, 60, 67, 69, 70, 71, 75, 92, 94, 96, 97, 98, 99, 105, 109, 110, 113, 127, 129, 130, 131, 142, 146, 150, 156, 157, 159, 172, 177, 182, 192, 197, 201, 207, 208, 210, 213, 214, 216, 217, 218, 220, 222, 226, 227, 234, 235, 236, 237, 239, 243, 246, 248, 256, 258, 260, 261, 263, 277, 278, 280, 292, 294, 295, 297, 298, 299, 300, 301, 305, 306], "just_gen": 222, "justifi": 220, "juxtaposit": [157, 201, 275], "jx": 189, "jxbra": 189, "jxbracoupl": 189, "jxket": 189, "jxketcoupl": 189, "jy": 189, "jybra": 189, "jybracoupl": 189, "jyket": 189, "jyketcoupl": 189, "jyr2000": 212, "jz": 189, "jzbra": 189, "jzbracoupl": 189, "jzket": 189, "jzketcoupl": 189, "jzop": 189, "k": [0, 5, 12, 13, 14, 16, 18, 22, 24, 27, 32, 42, 48, 49, 50, 51, 53, 55, 59, 60, 63, 64, 67, 68, 69, 70, 72, 73, 74, 75, 77, 87, 94, 96, 99, 101, 105, 109, 111, 125, 130, 131, 135, 140, 147, 154, 156, 159, 166, 180, 181, 184, 188, 190, 192, 201, 208, 212, 214, 216, 217, 220, 221, 222, 223, 224, 227, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 243, 245, 247, 248, 249, 251, 252, 253, 254, 258, 262, 265, 271, 273, 274, 275, 276, 277, 278, 280, 281, 291, 292, 304, 305], "k0": [190, 218, 220, 247], "k1": [109, 159, 190, 217, 218, 220], "k2": [109, 159, 217], "k3": [159, 217], "k3d": 13, "k4": 159, "k_": [77, 94, 135, 154, 155], "k_0": 220, "k_1": [70, 109, 220, 237], "k_2": 70, "k_3": 70, "k_arrai": 59, "k_b": 36, "k_d": [135, 154], "k_dnh": 135, "k_f": 36, "k_i": [109, 220, 237], "k_j": 237, "k_kqdot": 135, "k_ku": 135, "k_m": 109, "k_n": [70, 77, 220], "k_sym": 74, "k_u": 237, "k_val": 36, "k_y": 98, "ka": 0, "kahan": 126, "kahane_simplifi": 126, "kalkbrenn": 245, "kaltofen": [220, 221], "kaltofen98": 221, "kane": [129, 131, 133, 140, 142, 148, 152, 153, 158, 159, 201, 202, 271, 288, 291, 292], "kane1983": [158, 211], "kane1985": [150, 154, 158, 201], "kanes_equ": [130, 135, 138, 142, 144, 146, 149, 150, 154, 156, 159, 291, 292], "kanesmethod": [13, 130, 131, 135, 138, 140, 142, 144, 145, 146, 147, 149, 150, 153, 154, 156, 159, 291, 292], "kappa": [16, 212, 227, 247], "kapur": 221, "kapur1994": 221, "karr": 68, "kasiski": 70, "katmat": 49, "kauer": 232, "kb": 36, "kbin": 265, "kconrad": [60, 247], "kd": [135, 144, 149, 150, 154], "kd_eq": [135, 142, 144, 146, 149, 150, 156, 159, 291, 292], "kd_eqs_solv": 135, "kdd": [144, 149, 150], "kde": [131, 134, 140, 146, 153, 156], "kdvi": 227, "ke": 159, "keep": [3, 4, 11, 12, 14, 16, 19, 24, 65, 69, 70, 73, 74, 77, 94, 105, 113, 135, 145, 153, 157, 176, 192, 201, 213, 216, 217, 218, 223, 234, 235, 237, 239, 243, 245, 248, 253, 280, 291, 295, 300], "keep_domain": 216, "keep_only_fully_contract": 192, "kei": [11, 13, 14, 15, 16, 18, 29, 31, 43, 46, 49, 58, 60, 61, 69, 70, 71, 74, 85, 98, 105, 108, 109, 117, 140, 142, 184, 187, 192, 211, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 239, 243, 244, 245, 247, 251, 262, 265, 266, 268, 301, 302, 305], "kelleh": 265, "kelli": [94, 237], "kempf": 214, "kepler": [195, 271], "kept": [71, 194, 211, 265, 300], "ker": 214, "kern": 69, "kernel": [105, 214, 220, 222, 245], "ket": [111, 175, 180, 181, 182, 184, 186, 187, 190, 192], "ket_not": 190, "ketbas": [180, 181, 187, 190], "key1": 213, "key2": 213, "key2bound": 105, "key2ij": 105, "keyboard": 213, "keyboardinterrupt": 258, "keyfunc": 265, "keyword": [0, 3, 4, 12, 13, 14, 15, 18, 24, 49, 50, 51, 60, 61, 69, 70, 73, 74, 82, 84, 85, 86, 105, 109, 113, 117, 123, 125, 130, 135, 138, 154, 155, 186, 192, 207, 213, 215, 216, 217, 218, 220, 222, 223, 226, 227, 228, 234, 239, 240, 245, 252, 258, 259, 261, 263, 265, 266, 268, 276, 301], "kf": 36, "kfkljjhf5mmmktfrgpl": 70, "kg": [197, 281, 291, 292], "kid": 70, "kid_rsa_private_kei": 70, "kid_rsa_public_kei": 70, "kiev": 221, "kijml": 249, "kill": [214, 218, 258], "killable_index": [77, 192], "killed_modul": 214, "kilo": 198, "kilogram": [163, 195, 197, 199], "kilomet": [196, 198, 199], "kin_explicit_rh": [140, 160], "kind": [4, 5, 13, 15, 21, 22, 23, 24, 49, 50, 71, 74, 77, 89, 96, 103, 117, 121, 135, 142, 155, 196, 208, 215, 217, 218, 223, 228, 229, 235, 243, 244, 247, 265, 278, 280, 286, 295, 305], "kindiff": 159, "kindiffdict": [135, 144, 149, 150, 154, 159], "kinema": 140, "kinemat": [129, 134, 135, 140, 142, 144, 145, 146, 147, 149, 151, 153, 154, 156, 157, 159, 160, 202, 205, 209, 211, 288, 292], "kinet": [36, 131, 135, 137], "kinetic_energi": [131, 137, 157, 159], "kinnei": [112, 113, 115, 291, 292], "kirpichev": 0, "kite": 85, "kk": 105, "kleen": 265, "klein": [52, 61], "km": [105, 109, 129, 135, 144, 146, 149, 150, 154, 156, 159, 198], "kn": [105, 117, 118, 119], "knew": [69, 305], "knife": 223, "knot": 77, "know": [3, 4, 5, 12, 13, 14, 15, 16, 22, 23, 24, 29, 36, 37, 38, 43, 45, 49, 52, 61, 69, 70, 73, 81, 86, 94, 96, 105, 109, 111, 142, 157, 160, 186, 190, 194, 195, 197, 202, 210, 211, 213, 216, 223, 224, 226, 227, 237, 239, 243, 245, 246, 247, 261, 265, 266, 276, 292, 294, 295, 297, 298, 299, 300, 303, 305], "knowabl": 22, "knowledg": [15, 68, 69, 70, 222, 243, 300, 303], "known": [4, 11, 12, 14, 15, 22, 23, 24, 27, 36, 45, 49, 50, 51, 52, 55, 58, 60, 61, 69, 70, 73, 74, 77, 79, 82, 87, 94, 96, 97, 106, 109, 123, 125, 126, 128, 131, 137, 140, 156, 195, 202, 210, 216, 217, 218, 222, 223, 227, 230, 233, 235, 236, 237, 239, 242, 243, 244, 245, 247, 265, 266, 271, 278, 280, 292, 305], "known_const": 227, "known_fcns_src1": 227, "known_fcns_src2": 227, "known_funct": 227, "known_functions_c89": 227, "known_functions_c99": 227, "known_typ": 227, "knuth": [53, 61, 262], "koepf": [221, 229, 239], "koepf98": [221, 223], "kog": 265, "koshi": [74, 109], "kozen": [4, 221], "kozen89": [4, 220, 221], "kreher": 61, "kroneck": [74, 77, 191, 192, 212, 248, 253], "kronecker_delta": [77, 192], "kronecker_symbol": 74, "kroneckerdelta": [77, 101, 192, 227, 239], "kroneckerproduct": 227, "kroneckersimp": 239, "krypto": 70, "ksubset": 64, "kt": [70, 147], "kth": [105, 109], "ku": [13, 154, 227], "kulal": 0, "kumar": [0, 246], "kumaraswami": 247, "kumaraswamy_distribut": 247, "kummer": 222, "kurtosi": 247, "kutta": [15, 91], "kw": 258, "kw_arg": [53, 63, 192, 252, 253], "kwarg": [16, 44, 45, 46, 50, 60, 61, 68, 69, 70, 71, 75, 77, 79, 80, 82, 83, 84, 85, 86, 91, 94, 96, 100, 101, 102, 105, 107, 108, 109, 113, 123, 125, 132, 135, 137, 140, 146, 161, 170, 172, 176, 177, 181, 183, 185, 186, 188, 189, 190, 202, 206, 207, 213, 216, 218, 223, 227, 229, 233, 234, 235, 239, 243, 244, 245, 247, 248, 249, 253, 258, 259, 261, 265, 268, 276], "kwong": 221, "kx": 292, "ky": 27, "l": [4, 13, 16, 48, 49, 50, 51, 58, 60, 61, 68, 70, 74, 77, 80, 81, 82, 83, 84, 86, 87, 92, 94, 96, 98, 100, 101, 105, 109, 112, 113, 115, 117, 118, 125, 127, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 145, 146, 147, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 164, 190, 193, 194, 195, 197, 210, 211, 212, 214, 216, 218, 220, 221, 227, 229, 230, 236, 237, 240, 243, 245, 247, 251, 252, 253, 254, 258, 260, 265, 281, 291, 292, 305], "l0": 220, "l1": [70, 79, 81, 82, 134, 137, 145, 157, 218, 220, 223, 240, 247], "l1_norm": [218, 223], "l2": [70, 81, 82, 134, 137, 145, 178, 194, 218, 220, 247], "l2_norm_squar": 218, "l3": [82, 145, 220], "l3_convfunc": 48, "l4": [82, 145], "l_": [13, 96, 105, 212, 292], "l_0": [74, 126, 253, 254], "l_1": [70, 74, 126, 212, 237, 253, 265], "l_2": 212, "l_3": 212, "l_a": 291, "l_arm": 291, "l_b": 157, "l_c": 291, "l_d": 291, "l_frame": 134, "l_i": [70, 212, 237], "l_m": [113, 115, 265, 292], "l_m_opt": [113, 115, 291, 292], "l_m_opt_bicep": 291, "l_m_opt_tricep": 291, "l_m_tild": [113, 292], "l_m_tilde_muscl": 115, "l_m_tilde_num": 292, "l_mt": 292, "l_n": [77, 96, 223], "l_p": 157, "l_t": [70, 113, 292], "l_t_slack": [113, 115, 291, 292], "l_t_slack_bicep": 291, "l_t_slack_tricep": 291, "l_t_tild": [113, 292], "l_t_tilde_num": 292, "l_u": 237, "l_v": 237, "la": [60, 159, 197, 291], "labahn": 221, "label": [4, 7, 36, 49, 50, 63, 69, 79, 92, 96, 119, 121, 165, 172, 176, 181, 190, 192, 213, 227, 228, 230, 239, 252, 253, 292, 304], "label_displac": 49, "label_posit": 49, "labeledtre": 63, "labelfunc": 227, "lack": [38, 50, 71, 73, 137, 227, 295], "lag": [146, 151, 156], "lag_eq": [146, 156], "lagrang": [48, 69, 131, 133, 136, 140, 148, 152, 223, 240, 288], "lagranges_equ": 135, "lagrangesmethod": [130, 131, 135, 138, 140, 146, 151, 155, 156], "lagrangian": [48, 135, 137, 146, 151, 155, 156], "laguerr": [96, 223, 227], "laguerre_poli": [77, 223], "laguerre_polynomi": 77, "laguerre_rul": 96, "laguerrel": [77, 227], "laguerrel3": 77, "laguerrepolynomi": 77, "laguna": 70, "lai": 49, "laid": [49, 142, 189], "laigl": 109, "lam": [135, 136, 160], "lam1": 155, "lam_f": [35, 266], "lam_op": 146, "lamar": 243, "lambda": [12, 15, 16, 24, 27, 31, 35, 44, 45, 48, 50, 60, 61, 69, 70, 71, 74, 75, 96, 100, 101, 105, 108, 109, 111, 135, 142, 155, 156, 159, 160, 177, 213, 216, 220, 222, 223, 227, 228, 235, 236, 239, 243, 245, 246, 247, 248, 256, 265, 266, 271, 273, 276, 291, 294, 301], "lambda_": 94, "lambda_c": [94, 155], "lambda_i": [202, 271, 273], "lambda_not": 111, "lambda_x": [202, 271, 273], "lambda_z": [202, 271, 273], "lambdaprint": 266, "lambdarepr": [50, 227, 266], "lambdastr": 266, "lambdifi": [14, 15, 24, 35, 36, 50, 77, 144, 227, 245, 259, 264, 290, 291, 292, 296], "lambert": [38, 75, 96, 224], "lambert_w_funct": 75, "lambertw": [75, 224, 227, 245, 246, 306], "lambidfi": 13, "lamda": [15, 101, 227, 235, 247, 301], "lame": 278, "lamina": 281, "lanczo": 230, "land": 70, "landau": [4, 221, 295], "landscap": 61, "langl": [51, 60, 111, 171, 212], "languag": [2, 5, 14, 15, 16, 20, 24, 50, 75, 105, 111, 129, 142, 159, 227, 232, 247, 259, 260, 297, 299, 301, 303, 305], "laplac": [27, 96, 105, 122, 123, 125, 247], "laplace_correspond": [27, 96], "laplace_distribut": 247, "laplace_initial_cond": [27, 96], "laplace_transform": [27, 96, 125], "laplacedistribut": 247, "laplacetransform": 96, "larg": [2, 3, 4, 7, 11, 12, 16, 22, 29, 34, 60, 61, 69, 70, 79, 94, 96, 108, 109, 129, 136, 156, 159, 172, 197, 201, 212, 216, 217, 218, 220, 223, 226, 227, 228, 234, 237, 239, 245, 247, 252, 259, 266, 268, 274, 292, 294, 299, 305], "larger": [3, 5, 14, 15, 24, 34, 50, 60, 61, 68, 69, 70, 77, 94, 101, 105, 109, 146, 150, 216, 218, 224, 228, 234, 239, 245, 260, 262, 297, 305], "largest": [50, 61, 63, 69, 75, 77, 105, 108, 109, 172, 214, 218, 245, 265], "lark": 2, "larklatexpars": 111, "lasserr": 96, "last": [5, 11, 12, 13, 14, 16, 18, 19, 20, 22, 23, 24, 29, 31, 33, 34, 35, 36, 37, 38, 43, 44, 45, 49, 50, 51, 59, 60, 61, 65, 68, 69, 70, 73, 79, 96, 99, 100, 101, 102, 105, 107, 108, 109, 111, 125, 140, 164, 196, 197, 212, 213, 214, 215, 216, 217, 218, 220, 223, 226, 227, 234, 235, 240, 243, 245, 246, 247, 248, 249, 253, 256, 258, 259, 260, 261, 263, 265, 266, 268, 295, 297, 300, 301], "last_index": 101, "lastli": [16, 96, 118, 160, 243, 291], "lastnam": 9, "later": [3, 13, 14, 20, 50, 60, 94, 99, 105, 129, 136, 137, 140, 144, 146, 147, 154, 156, 159, 166, 201, 210, 217, 220, 226, 227, 228, 237, 239, 243, 262, 275, 294, 295, 297, 299, 300, 305], "latest": [2, 9, 12, 40, 49, 261, 263, 266], "latex": [0, 2, 4, 8, 12, 15, 24, 38, 40, 77, 97, 201, 202, 207, 211, 213, 218, 227, 291, 299, 300], "latex2sympi": 111, "latex_mod": [97, 207], "latex_print": [97, 207], "latex_repr": [198, 199], "latex_scalar": 271, "latex_set": 227, "latex_vect": 271, "latexmk": 8, "latexnam": 172, "latexparsingerror": 111, "latexprint": 24, "latin": 41, "latter": [13, 14, 19, 24, 50, 60, 69, 74, 77, 94, 109, 117, 214, 218, 222, 227, 237, 240, 253, 260, 265, 266, 297], "lattic": [72, 216, 240], "lattice_": 75, "latu": 79, "latus_rectum": 79, "lauer": 218, "laurent": [77, 218, 224, 243], "law": [15, 49, 152, 195, 211, 215, 247, 292], "layer": [13, 125, 220, 266], "layout": 49, "lazard": [96, 220, 223], "lazi": [69, 101, 223], "lazili": [101, 233, 265], "lazo": 212, "lb": [50, 91, 262], "lbound": 50, "lc": [218, 220, 223, 291], "lceil": [94, 111], "lcim": 48, "lcm": [69, 109, 218, 220, 223, 227], "lcm_list": 223, "ld": [49, 291], "ldescent": 240, "ldl": [100, 105], "ldldecomposit": [100, 105], "ldlsolv": [100, 105], "ldot": [24, 32, 51, 59, 60, 68, 69, 70, 74, 77, 94, 109, 118, 197, 212, 214, 215, 218, 220, 222, 227, 230, 234, 237, 240, 245, 248, 305], "ldu": 101, "ldudecomposit": 101, "le": [22, 51, 65, 69, 77, 94, 105, 109, 111, 151, 220, 227, 237, 245, 247, 291], "lead": [13, 14, 15, 22, 23, 24, 29, 38, 68, 69, 75, 79, 96, 99, 105, 109, 127, 136, 176, 202, 211, 215, 216, 218, 220, 222, 223, 224, 227, 234, 236, 239, 243, 246, 260, 263, 268, 292, 298, 305], "leader": 109, "leading_expon": 59, "leading_expv": 218, "leading_monom": 218, "leading_term": 218, "leadterm": 69, "leadup": 109, "leaf": [15, 217, 227, 236, 300], "lean": [144, 149, 151], "learn": [2, 5, 8, 30, 36, 38, 105, 157, 211, 236, 246, 294, 297, 298, 299, 303], "least": [2, 3, 5, 7, 11, 12, 13, 18, 22, 36, 46, 48, 50, 60, 69, 75, 81, 93, 94, 96, 105, 109, 110, 135, 172, 186, 194, 196, 214, 215, 217, 218, 220, 222, 223, 234, 236, 239, 243, 245, 246, 247, 260, 305], "least_rot": 265, "leav": [11, 14, 15, 22, 24, 35, 37, 50, 69, 96, 105, 109, 113, 136, 152, 176, 192, 216, 234, 262, 294, 300, 305], "lebesgu": 235, "leblond": 197, "lect1023big": 247, "lectur": [159, 221, 247], "lecture4_6up": 247, "led": 0, "leedham": 60, "left": [3, 5, 13, 20, 22, 24, 27, 30, 31, 34, 42, 48, 50, 51, 60, 61, 65, 69, 70, 71, 74, 75, 77, 85, 86, 92, 94, 96, 97, 99, 105, 108, 109, 112, 113, 119, 125, 131, 140, 141, 164, 171, 176, 180, 181, 184, 189, 201, 202, 208, 212, 213, 214, 216, 223, 224, 225, 226, 227, 229, 230, 234, 235, 236, 237, 239, 243, 244, 245, 246, 247, 258, 259, 260, 262, 265, 278, 291, 292, 295, 299, 301, 305], "left_eigenvect": 105, "left_hand_sid": 50, "left_open": 235, "left_support": 119, "leftmost": 192, "leftrightarrow": 65, "leftslash": 227, "leg": [85, 119], "legaci": [69, 96, 105, 247], "legacy_matrix": [13, 96], "legal": 194, "legend": [36, 159, 213, 230, 292], "legendr": [74, 96, 109, 223, 227, 240], "legendre_poli": [77, 223], "legendre_polynomi": 77, "legendre_rul": 96, "legendre_symbol": [13, 74, 109], "legendrep": [77, 227], "legendrep2": 77, "legendrepolynomi": 77, "legibl": 218, "legitim": 220, "legrang": 240, "lehmer": [61, 69], "lehmer_cod": 61, "lemaitr": 212, "lemma": [49, 60, 94, 215], "len": [48, 57, 58, 59, 60, 61, 65, 67, 69, 70, 74, 77, 84, 94, 99, 146, 161, 165, 176, 186, 216, 223, 239, 243, 252, 265, 291], "len1": 60, "len2": 60, "len3": 60, "len_i": [50, 227], "length": [4, 13, 42, 50, 53, 59, 60, 61, 63, 67, 69, 70, 72, 74, 75, 77, 78, 82, 84, 85, 86, 99, 105, 108, 109, 113, 115, 117, 118, 119, 121, 129, 130, 135, 138, 140, 141, 145, 146, 147, 157, 161, 165, 189, 194, 195, 196, 197, 202, 206, 211, 222, 223, 227, 233, 237, 239, 243, 245, 247, 258, 259, 265, 267, 268, 271, 273, 281, 291], "lengthen": [3, 115, 292], "lengthi": 60, "lenic": [88, 90], "lens": 161, "lens_formula": 165, "lens_makers_formula": 165, "lenstra": [109, 216], "leq": [60, 68, 70, 74, 77, 94, 105, 109, 212, 220, 222, 233, 234, 240, 247], "lerch": 77, "lerch_transcend": 77, "lerchphi": [77, 227], "less": [4, 5, 11, 14, 15, 20, 29, 32, 34, 42, 46, 50, 51, 52, 60, 61, 68, 69, 70, 73, 74, 75, 77, 83, 84, 85, 105, 109, 123, 125, 130, 140, 142, 144, 192, 216, 217, 218, 220, 222, 223, 236, 237, 239, 240, 243, 245, 246, 247, 258, 260], "lesser": [61, 121, 223], "lessthan": [69, 227], "lester": 70, "let": [11, 12, 20, 22, 23, 24, 27, 48, 50, 60, 65, 69, 70, 79, 87, 92, 94, 98, 101, 105, 106, 109, 111, 113, 130, 131, 141, 142, 159, 197, 202, 210, 214, 215, 216, 220, 222, 223, 224, 227, 234, 237, 239, 240, 243, 245, 246, 253, 256, 259, 263, 266, 276, 277, 281, 292, 294, 297, 299, 300, 305], "lett": [61, 105], "letter": [5, 15, 16, 41, 62, 69, 70, 109, 111, 192, 216, 227, 265, 295, 297], "lev": 218, "level": [3, 4, 5, 7, 12, 13, 14, 15, 16, 22, 23, 31, 33, 50, 60, 67, 69, 75, 77, 96, 99, 105, 109, 112, 115, 129, 146, 159, 187, 192, 197, 201, 204, 211, 213, 216, 217, 218, 225, 227, 236, 240, 246, 247, 251, 259, 260, 265, 300, 301, 303], "levelt": 245, "lever": 291, "lever_resist": 291, "leverag": [36, 50, 110, 227, 295], "levi": [71, 77, 247, 253], "levicivita": [77, 105], "levinson": [135, 158, 202, 271], "levydistribut": 247, "levyleblond77": 197, "lex": [69, 97, 207, 215, 217, 218, 220, 223, 224, 226, 227, 239], "lexic": [58, 172, 265], "lexicograph": [60, 61, 64, 65, 69, 220, 223, 265], "lexicographically_minimal_string_rot": 265, "lexograph": [97, 207], "lexord": [218, 223], "lfloor": [69, 75, 111, 218, 246, 247], "lfortran": [2, 111], "lfsr": 70, "lfsr_autocorrel": 70, "lfsr_connection_polynomi": 70, "lfsr_sequenc": 70, "lgamma": 227, "lh": [13, 18, 31, 36, 50, 59, 69, 112, 115, 225, 227, 243, 245, 246, 277], "li": [74, 77, 85, 96, 109, 137, 141, 192, 227, 281, 291], "liabl": [69, 99], "liao": 221, "liao95": [220, 221], "lib": 271, "liber": [111, 129, 299], "liberato": 212, "liberatodebrito82": 212, "libgtkmathview": 227, "librari": [0, 2, 3, 4, 12, 13, 14, 15, 22, 24, 35, 39, 40, 50, 69, 70, 74, 94, 96, 97, 105, 110, 129, 140, 142, 159, 196, 213, 217, 218, 247, 258, 259, 260, 265, 266, 294, 295, 297, 298, 299], "library_dir": 259, "librsvg": 8, "librsvg2": 8, "libtcc": 260, "licens": [0, 2, 26, 299], "lie": [27, 29, 61, 71, 83, 84, 85, 138, 141, 223, 247, 282, 289, 291, 292], "lie_algebra": 98, "lie_group": 243, "lie_heuristic_abaco1_product": 243, "lie_heuristic_abaco1_simpl": 243, "lie_heuristic_abaco2_similar": 243, "lie_heuristic_abaco2_unique_gener": 243, "lie_heuristic_abaco2_unique_unknown": 243, "lie_heuristic_bivari": 243, "lie_heuristic_chi": 243, "lie_heuristic_function_sum": 243, "lie_heuristic_linear": 243, "liealgebra": [2, 98], "liederiv": 71, "liegroup": 243, "lift": [50, 65, 75, 77, 94, 218, 220, 223, 292], "light": [127, 164, 196, 197, 207, 214], "lighten": 214, "lightli": 3, "lightweight": [50, 222, 299], "like": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 22, 23, 24, 26, 34, 36, 37, 38, 39, 40, 50, 51, 52, 54, 60, 61, 68, 69, 70, 73, 74, 75, 77, 79, 89, 92, 96, 97, 99, 101, 102, 103, 105, 109, 110, 111, 115, 121, 125, 129, 134, 138, 141, 142, 144, 153, 156, 159, 160, 174, 176, 186, 187, 190, 191, 192, 196, 197, 201, 202, 206, 208, 210, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 230, 234, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 256, 258, 259, 260, 261, 265, 266, 268, 275, 276, 278, 280, 291, 292, 294, 295, 297, 298, 299, 300, 301, 305], "likelihood": 109, "likewis": [4, 22, 49, 117, 145, 146], "likin": [158, 209], "likins1973": [157, 209], "lim": [69, 111, 234, 295], "lim_": [70, 75, 77, 94, 96, 234, 295, 299], "limit": [1, 3, 13, 14, 16, 27, 33, 34, 38, 40, 46, 48, 50, 68, 69, 71, 73, 74, 75, 77, 78, 81, 89, 91, 96, 97, 99, 105, 109, 111, 123, 157, 181, 187, 190, 207, 213, 218, 220, 223, 224, 227, 230, 231, 233, 235, 239, 240, 242, 243, 244, 245, 247, 252, 259, 262, 265, 266, 268, 270, 271, 281, 283, 289, 296, 297, 299, 301], "limit_denomin": 69, "limit_seq": [232, 234], "limitinf": 234, "limiting_distribut": 247, "limits_": [69, 111, 212, 229, 299], "limitseq": 232, "limsup_": 234, "linalg": [34, 35, 50, 291], "lincomb": 222, "line": [3, 4, 9, 11, 12, 13, 14, 15, 16, 20, 22, 40, 49, 50, 52, 60, 61, 65, 70, 79, 80, 81, 83, 84, 85, 86, 91, 94, 96, 97, 98, 105, 109, 115, 117, 119, 121, 123, 126, 130, 137, 138, 141, 142, 144, 150, 172, 202, 207, 208, 210, 212, 213, 227, 230, 237, 239, 243, 247, 248, 256, 258, 259, 260, 263, 266, 268, 278, 281, 289, 291, 292, 297], "line2d": [79, 82, 85], "line2dbaseseri": [13, 213], "line3d": [82, 83, 84], "line3dbaseseri": 213, "line_break": 227, "line_color": [5, 213, 230], "line_integr": 96, "linear": [18, 24, 30, 32, 34, 35, 38, 49, 50, 61, 68, 69, 70, 72, 73, 77, 82, 92, 94, 96, 98, 101, 103, 112, 115, 117, 122, 125, 130, 131, 133, 134, 135, 137, 138, 144, 146, 147, 152, 154, 158, 159, 164, 186, 189, 190, 201, 206, 213, 214, 216, 218, 220, 222, 223, 225, 233, 235, 237, 240, 243, 244, 246, 265, 286, 288, 291, 292, 306], "linear_coeffici": 243, "linear_coefficients_integr": 243, "linear_differential_equ": 243, "linear_eq_to_matrix": [34, 145, 243, 245, 246], "linear_momentum": [131, 137, 157, 159], "linear_ode_to_matrix": 243, "linear_pathwai": [130, 138], "linear_polar": 164, "linear_solv": [135, 136], "linear_stiff": 130, "linearcoeffici": 243, "lineardamp": [130, 147], "linearent": [4, 79, 82, 83, 84, 85], "linearentity2d": 82, "linearentity3d": [82, 83], "linearli": [46, 50, 77, 93, 105, 135, 216, 220, 243, 245, 253], "linearpathwai": [115, 130, 138, 147, 291, 292], "linearspr": [130, 147], "linecollect": [13, 213], "lineover1drangeseri": [123, 213], "linestyl": 13, "link": [3, 4, 5, 7, 11, 15, 16, 30, 34, 50, 70, 79, 85, 96, 126, 130, 134, 145, 153, 259, 262, 263, 303], "link1": 145, "link2": 145, "link3": 145, "link4": 145, "linkag": [143, 152, 288], "linkcod": 5, "linodesolv": 243, "linodesolve_typ": 243, "linprog": [31, 245], "linsolv": [135, 159, 225, 245, 246, 306], "linspac": [14, 36, 50, 92, 110, 142, 159, 291, 292], "linux": [8, 9, 11, 40], "linz": 271, "liouvil": 243, "liouville_integr": 243, "liouvillian": 243, "lip": 247, "list": [0, 2, 3, 4, 5, 9, 11, 12, 14, 17, 22, 32, 33, 34, 35, 36, 37, 38, 40, 42, 45, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 91, 92, 94, 96, 97, 98, 99, 101, 104, 105, 108, 109, 110, 111, 117, 125, 130, 131, 134, 135, 138, 140, 144, 146, 149, 153, 154, 155, 159, 160, 165, 176, 178, 181, 182, 186, 187, 189, 190, 192, 194, 202, 206, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 248, 251, 252, 253, 256, 258, 259, 260, 261, 262, 263, 265, 266, 268, 291, 292, 294, 298, 299, 301, 304, 305, 306], "list2numpi": 105, "list_can_dim": 194, "list_free_indic": 65, "list_of_poli": 92, "list_of_second_moments_of_area": 79, "list_of_trigonometric_ident": 236, "list_to_frac": 305, "list_visitor": 262, "listcoeff": 218, "listmonom": 218, "listofsolut": 243, "listterm": 218, "liter": [4, 12, 14, 16, 24, 50, 59, 69, 97, 99, 111, 192, 199, 239], "literal_dp": 50, "literal_sp": 50, "literatur": [4, 15, 94, 219, 289], "litter": 69, "littl": [12, 22, 24, 49, 61, 79, 105, 109, 110, 144, 197, 216, 221, 223, 227, 237, 239, 247, 262, 275], "liu": 221, "live": [7, 41, 51, 159, 222, 240], "livehtml": 8, "ll": [8, 49, 67, 105, 113, 115, 130, 138, 146, 210, 211, 256, 291, 292], "ll1": 81, "ll2": 81, "ll3": 81, "ll4": 81, "ll5": 81, "ll6": 81, "lll": 216, "lll_transform": 216, "llvm": 2, "llvm_callabl": 2, "llvmjitcod": 2, "llvmlite": 2, "lm": [146, 155, 156, 220, 223], "lmm": 240, "lmn": 50, "lmodern": 8, "ln": [69, 75, 96, 111, 227, 229, 243, 247, 305], "ln_notat": 227, "lnc": [96, 221, 245], "lo": 245, "load": [8, 13, 50, 69, 97, 117, 118, 119, 121, 130, 131, 133, 135, 138, 140, 147, 152, 160, 172, 207, 288, 291], "load_vector": 117, "loadbas": 140, "loads_posit": 119, "loan": 105, "lobatto": 96, "loc": 117, "local": [2, 11, 12, 26, 41, 43, 44, 45, 69, 71, 94, 111, 149, 151, 204, 214, 220, 245, 258, 291], "local_dict": 111, "local_var": 260, "localhost": 8, "localis": 214, "locat": [5, 11, 12, 13, 52, 61, 69, 83, 105, 109, 117, 118, 121, 134, 137, 138, 140, 141, 146, 153, 156, 157, 160, 206, 208, 222, 223, 227, 239, 247, 261, 269, 271, 275, 277, 280, 291], "locate_new": [271, 274, 275, 276, 277, 278], "locatenew": [13, 131, 137, 144, 145, 146, 149, 150, 151, 156, 157, 159, 160, 203, 206, 208, 210], "location_matrix": 247, "lock": 42, "log": [4, 5, 9, 11, 12, 16, 24, 40, 42, 48, 50, 60, 68, 69, 73, 74, 75, 77, 87, 91, 93, 94, 96, 105, 109, 111, 113, 213, 218, 227, 229, 234, 237, 239, 243, 246, 247, 254, 292, 295, 305, 306], "log1": 9, "log10": [50, 227], "log1p": [50, 227], "log1p_opt": 50, "log2": [50, 77, 227], "log2_opt": 50, "log2const_opt": 50, "log_b": 246, "log_warn": 227, "logarithm": [5, 16, 42, 48, 50, 69, 70, 75, 94, 96, 105, 109, 218, 220, 224, 227, 237, 239, 246, 247, 296], "logarithmic_distribut": 247, "logarithmic_integr": 77, "logarithmically_concave_funct": 48, "logarithmically_convex_funct": 48, "logarithmicdistribut": 247, "logarithmicintegr": 77, "logcombin": [239, 243, 246], "loggamma": [4, 5, 77, 227], "loggammafunct": 77, "logger": 111, "logic": [12, 13, 14, 15, 22, 24, 43, 44, 45, 46, 49, 69, 71, 94, 96, 109, 184, 186, 187, 191, 213, 227, 229, 235, 243, 247, 265, 297, 298, 299, 301], "logint": 227, "logintegr": 227, "logist": 247, "logistic_distribut": 247, "logisticdistribut": 247, "loglogist": 247, "lognorm": 247, "lognormaldistribut": 247, "logo": 25, "logx": [69, 234], "lomax": 247, "lomax_distribut": 247, "london": [221, 240], "long": [0, 4, 5, 11, 12, 14, 29, 38, 50, 61, 68, 69, 70, 72, 82, 94, 96, 97, 99, 105, 109, 111, 117, 118, 144, 157, 207, 223, 224, 227, 236, 237, 245, 247, 259, 266, 268, 274, 297, 300], "long_frac_ratio": 227, "longer": [3, 4, 11, 12, 16, 21, 69, 79, 109, 146, 156, 215, 216, 220, 227, 236, 239, 265, 268, 297, 305], "longest": [141, 265], "longrightarrow": 101, "look": [3, 4, 5, 7, 9, 11, 12, 13, 16, 22, 23, 24, 41, 49, 50, 60, 69, 74, 75, 77, 90, 105, 109, 135, 142, 144, 152, 176, 186, 187, 190, 206, 213, 217, 218, 222, 227, 229, 230, 234, 237, 239, 240, 243, 244, 249, 258, 262, 266, 268, 276, 295, 300, 303, 304], "looking_for": 50, "lookup": [96, 105, 109, 237], "lookup_view": 269, "loop": [14, 27, 29, 32, 36, 49, 50, 109, 125, 145, 202, 213, 216, 224, 227, 243, 262, 265, 266, 300], "looping_end": 49, "looping_start": 49, "loos": [50, 69], "lopen": [48, 69, 235, 242, 247], "lorentz": 253, "lorentzindex": 126, "lorenz": 36, "lose": [14, 16, 214, 216], "loss": [14, 15, 50, 94, 192, 259, 277], "lost": [14, 69], "lot": [7, 11, 13, 14, 60, 69, 87, 94, 96, 105, 142, 159, 213, 216, 223, 226, 230, 240, 246, 258, 305], "loui": 229, "lovasz": 216, "love": 7, "lov\u00e1sz": 216, "low": [16, 22, 23, 50, 69, 70, 77, 109, 135, 217, 220, 225, 227, 239, 259, 260, 265], "low_index_subgroup": 51, "lower": [4, 15, 22, 31, 46, 48, 50, 60, 61, 68, 69, 71, 77, 78, 80, 85, 86, 96, 100, 101, 105, 117, 123, 128, 134, 192, 206, 212, 214, 216, 218, 220, 223, 227, 236, 237, 239, 243, 252, 253, 262, 271, 291, 295, 303], "lower_bob": 134, "lower_bound": [78, 79, 82, 85], "lower_central_seri": 60, "lower_incomplete_gamma_funct": 77, "lower_limit": [123, 295], "lower_polygon": 85, "lower_seg": 85, "lower_triangular": [46, 105], "lower_triangular_solv": [100, 105], "lowercas": [15, 16, 42, 111, 243, 258, 295], "lowergamma": [4, 77, 247], "lowertriangularhandl": 46, "lowertriangularmatrix": 46, "lowertriangularpred": 46, "lowest": [20, 50, 60, 65, 109, 214, 216, 229, 246], "lpart": 262, "lpathwai": 292, "lpmax": 245, "lpmin": 245, "lr": 214, "lrh": 151, "ls1": 66, "ls2": 66, "lseri": 69, "lsoda": 129, "lst": 258, "lt": [69, 223, 227, 268], "ltd": 68, "lti": [27, 122, 123], "ltrim": 223, "lu": [34, 101, 105, 135, 136, 216, 221], "lu_": 105, "lu_solv": [34, 105, 216], "luca": [74, 109, 227, 233], "lucas_numb": 74, "lucas_pseudoprim": 109, "lucasl": 227, "lucasnumb": 74, "lucaspseudoprim": 109, "lucien": 51, "lucki": 236, "lucombin": 105, "ludecomposit": [100, 101, 105, 216, 301], "ludecomposition_simpl": [105, 301], "ludecompositionff": 105, "luke": [4, 77, 94, 237], "luke1969": [94, 237], "lukpank": 11, "luschni": [74, 77, 223], "lusolv": [34, 100, 105, 131, 135, 136, 145, 156, 160, 245, 301], "lvert": 94, "lvovich": 5, "ly": [85, 105, 218], "l\u00e9vy": 197, "m": [0, 8, 9, 11, 12, 13, 16, 20, 22, 24, 27, 40, 42, 46, 50, 51, 57, 58, 60, 61, 65, 68, 69, 70, 71, 72, 74, 77, 79, 81, 85, 86, 94, 96, 98, 100, 101, 102, 104, 105, 106, 108, 109, 111, 112, 113, 115, 117, 118, 121, 125, 127, 128, 131, 135, 136, 137, 140, 142, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 168, 175, 189, 190, 193, 195, 197, 208, 212, 214, 215, 216, 218, 220, 221, 222, 223, 224, 227, 228, 229, 230, 232, 233, 234, 235, 237, 239, 240, 243, 245, 246, 247, 248, 249, 252, 253, 259, 260, 262, 265, 267, 271, 274, 276, 280, 281, 291, 292, 295, 301, 304, 305, 306], "m0": [212, 253], "m1": [105, 109, 117, 118, 163, 171, 189, 191, 195, 240, 243, 248, 253], "m11": [20, 247], "m12": [20, 247], "m13": 20, "m172": 70, "m2": [105, 109, 117, 118, 137, 163, 171, 189, 191, 195, 222, 240, 243, 248, 253], "m20": 52, "m21": [20, 247], "m22": [20, 247], "m23": 20, "m3": [105, 171, 240, 248], "m31": 20, "m32": 20, "m33": [20, 109], "m4": 240, "m4nzdu": 212, "m53": 109, "m_": [46, 113, 115, 155, 212, 220, 249, 292], "m_0": [220, 240], "m_1": [74, 125, 171, 189, 212, 240], "m_2": [74, 140, 160, 171, 189, 212], "m_3": [140, 160, 171, 212], "m_a": 291, "m_c": 291, "m_d": [140, 155, 291], "m_frac": 216, "m_i": [74, 109, 212, 220], "m_ik": [74, 109], "m_k": 74, "m_lll": 216, "m_m": 140, "m_n": 220, "m_op": 156, "m_pa": 113, "m_primit": 216, "m_sqrt2": 227, "m_sqrt2l": 227, "m_tf": 125, "ma": [61, 68, 147, 291], "ma217": 247, "macaulai": 77, "macdonald": 221, "machin": [2, 4, 7, 8, 9, 228, 239, 243, 294], "machineri": [4, 69, 222, 266], "maclaurin": [68, 73], "maco": 9, "made": [3, 5, 11, 12, 13, 14, 15, 16, 22, 24, 37, 63, 65, 69, 70, 75, 78, 79, 82, 85, 86, 96, 99, 105, 109, 111, 130, 138, 142, 153, 156, 159, 211, 214, 216, 218, 220, 222, 223, 227, 228, 234, 235, 236, 239, 243, 245, 246, 247, 260, 265, 268, 280, 291, 292, 300], "mag": 159, "magazin": 105, "magic": [61, 239, 258, 297], "magnet": [127, 163, 208, 280], "magnif": 165, "magnitud": [27, 42, 50, 68, 69, 73, 77, 110, 117, 118, 119, 121, 123, 130, 137, 138, 146, 159, 190, 199, 202, 208, 211, 213, 271, 278, 280, 291, 292], "mai": [2, 3, 4, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 46, 48, 49, 50, 51, 52, 60, 61, 62, 68, 69, 70, 71, 73, 74, 75, 77, 79, 81, 82, 84, 85, 86, 94, 96, 97, 99, 100, 104, 105, 106, 108, 109, 111, 121, 132, 135, 136, 140, 142, 146, 152, 156, 178, 187, 192, 193, 194, 196, 199, 202, 206, 208, 210, 213, 214, 215, 216, 218, 220, 222, 226, 227, 228, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 256, 258, 259, 260, 261, 262, 263, 265, 266, 268, 278, 280, 292, 294, 295, 297, 300, 301, 305, 306], "mail": [3, 9, 11, 13, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 227, 298], "mailmap_check": 11, "mailoo": 11, "main": [2, 4, 5, 7, 9, 11, 13, 16, 35, 45, 46, 50, 69, 75, 94, 105, 108, 142, 150, 190, 207, 211, 213, 214, 216, 218, 227, 234, 243, 246, 252, 259, 305, 306], "mainli": [60, 77, 105, 110, 197, 207, 220, 237, 240, 243], "maintain": [7, 14, 15, 16, 69, 70, 109, 118, 227, 235, 236, 243, 246, 262], "mainten": [3, 45], "major": [2, 3, 5, 8, 13, 29, 38, 79, 129, 252, 299, 305], "majorli": 69, "make": [2, 3, 4, 5, 8, 9, 12, 13, 14, 15, 16, 18, 20, 22, 23, 24, 26, 29, 34, 35, 37, 41, 44, 45, 46, 48, 50, 51, 59, 60, 68, 69, 70, 71, 72, 73, 74, 75, 77, 81, 85, 96, 97, 99, 105, 108, 109, 110, 111, 115, 117, 118, 119, 121, 135, 140, 142, 144, 145, 149, 150, 154, 156, 157, 159, 172, 189, 194, 201, 207, 210, 213, 216, 217, 218, 220, 222, 223, 224, 226, 227, 230, 235, 236, 237, 239, 243, 244, 245, 246, 251, 253, 256, 258, 259, 260, 261, 263, 265, 266, 275, 280, 281, 292, 297, 298, 299, 300, 301, 305], "make_mod_elt": 222, "make_monic_over_integers_by_scaling_root": 223, "make_perm": 60, "make_routin": [50, 260], "makefil": 8, "man": [96, 221], "man93": [221, 223], "manag": [3, 7, 9, 12, 40, 44, 45, 111, 131, 172, 220, 239, 253, 256, 258, 263, 291, 292], "mandatori": [50, 227, 259], "mangl": 227, "mani": [2, 3, 4, 7, 12, 14, 15, 16, 18, 20, 22, 23, 24, 29, 30, 31, 33, 35, 36, 38, 40, 48, 49, 50, 51, 57, 60, 65, 69, 70, 71, 73, 74, 75, 77, 81, 94, 96, 99, 105, 109, 110, 111, 116, 135, 136, 142, 144, 152, 155, 156, 159, 176, 192, 200, 211, 214, 216, 217, 218, 220, 222, 223, 231, 234, 235, 237, 239, 240, 243, 244, 245, 246, 247, 251, 260, 265, 292, 294, 295, 297, 298, 299, 300, 304, 305, 306], "manifest": [22, 215], "manifesto": 74, "manifold": [13, 71], "manipul": [2, 15, 19, 20, 22, 29, 32, 34, 36, 49, 50, 51, 60, 69, 75, 77, 94, 109, 110, 133, 142, 152, 157, 190, 210, 216, 217, 218, 221, 226, 227, 229, 236, 239, 250, 265, 282, 288, 289, 294, 295, 296, 297, 298, 299, 301, 304, 305], "manner": [12, 53, 70, 77, 156, 190, 208, 240, 243, 248, 265, 280], "mantissa": 50, "manual": [2, 3, 5, 8, 12, 13, 14, 15, 24, 32, 50, 51, 60, 73, 79, 96, 97, 111, 125, 137, 140, 142, 145, 156, 160, 213, 220, 227, 243, 245, 246, 261, 292, 295, 305], "manualintegr": 96, "manuel": [96, 232], "manufactur": 110, "manuscript": [70, 96], "manwright94": [221, 223], "map": [11, 15, 22, 24, 48, 49, 50, 52, 59, 60, 61, 69, 70, 74, 81, 85, 92, 94, 96, 99, 105, 109, 112, 123, 135, 146, 170, 181, 182, 187, 202, 211, 213, 214, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 234, 239, 240, 243, 244, 245, 246, 247, 251, 252, 259, 262, 265, 266, 268, 271], "mapl": [16, 96, 216, 243, 299], "maple_cod": 227, "maplecodeprint": 227, "maplesoft": 243, "mapsto": [68, 94, 105, 222], "marbl": 247, "march": 69, "marcum": 77, "marcum_q": 77, "marcumq": 77, "margin": [109, 125, 213, 247], "marginal_distribut": 247, "marichev": [94, 237], "mark": [3, 4, 5, 123, 165, 177, 240, 256, 261, 263], "markdown": [3, 11, 15], "marker": [123, 213], "markers": 123, "marko": 68, "markov": 247, "markov_chain": 247, "markup": [3, 11, 227], "mascheroni": [69, 77], "mask": [49, 227], "mass": [13, 27, 86, 127, 128, 129, 131, 134, 135, 137, 140, 142, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 159, 160, 168, 193, 195, 196, 197, 208, 210, 258, 280, 288, 291, 292], "mass_cent": 145, "mass_matrix": [131, 135, 140, 144, 149, 150, 154, 155, 160, 291], "mass_matrix_ful": [131, 135, 140, 142, 147, 154, 155], "mass_matrix_kin": 135, "masscent": [13, 131, 134, 137, 140, 145, 147, 153, 157, 159, 291], "masscenter_vel": 131, "massei": 70, "master": [4, 5, 7, 11, 12, 40, 96, 258], "mat": [50, 101, 161, 186, 227], "mat_1": 50, "mat_2": 50, "mat_a": 125, "mat_b": 125, "mat_c": 125, "mat_delim": 227, "mat_str": 227, "mat_symbol_styl": 227, "matadd": [69, 101, 227], "match": [2, 3, 4, 11, 12, 13, 14, 16, 22, 24, 36, 60, 61, 68, 69, 77, 82, 94, 96, 105, 134, 140, 168, 193, 201, 202, 216, 223, 239, 240, 243, 244, 245, 247, 256, 258, 260, 265, 266, 277, 291, 295], "matchdict": 243, "matching_hint": 243, "materi": [0, 26, 117, 163, 303], "mateusz": 0, "math": [2, 4, 8, 12, 14, 24, 38, 42, 46, 49, 51, 60, 69, 74, 77, 79, 96, 105, 109, 110, 121, 142, 152, 208, 213, 216, 218, 221, 226, 227, 243, 244, 247, 259, 260, 266, 276, 277, 278, 279, 280, 294, 295, 299], "math24": 243, "math56a_s08_notes015": 247, "math56as08": 247, "math_macro": 227, "mathbb": [22, 24, 32, 46, 51, 52, 60, 68, 69, 70, 75, 77, 94, 105, 156, 212, 214, 215, 217, 218, 220, 222, 223, 226, 234, 235, 237, 240, 246, 247, 305], "mathbf": [42, 101, 135, 141, 152, 154, 155, 157, 197, 201, 202, 207, 208, 210, 211, 227, 237, 248, 275, 276, 278, 280, 281, 291, 292], "mathc": 247, "mathcal": [74, 75, 94, 125, 157, 189, 212, 223, 235], "mathcin": 50, "mathcircl": 74, "mathemat": [2, 3, 5, 12, 13, 14, 15, 19, 22, 24, 31, 33, 35, 36, 38, 39, 42, 44, 45, 48, 50, 51, 55, 59, 61, 68, 69, 70, 71, 74, 75, 76, 77, 82, 83, 94, 96, 99, 101, 105, 109, 110, 111, 125, 126, 129, 146, 158, 197, 208, 210, 211, 214, 215, 217, 218, 221, 226, 227, 235, 236, 240, 242, 243, 246, 247, 252, 259, 260, 266, 271, 275, 278, 280, 291, 292, 294, 295, 297, 298, 299, 300, 303, 305], "mathematica": [2, 16, 50, 61, 111, 299, 301], "mathematica_cod": [50, 227], "mathematical_express": 5, "mathematical_singular": 48, "mathematician": [240, 246], "mathfrak": 222, "mathieu": 227, "mathieu_funct": 77, "mathieuandspheroidalfunct": 77, "mathieubas": 77, "mathieuc": [77, 227], "mathieucprim": [77, 227], "mathieufunct": 77, "mathieusprim": [77, 227], "mathit": 111, "mathjax": [2, 5, 97, 207, 304], "mathml": 227, "mathml2": 227, "mathml_presentation_repr": 199, "mathml_tag": 227, "mathmlcontentprint": 227, "mathmlpresentationprint": 227, "mathmlprinterbas": 227, "mathrm": [2, 4, 40, 59, 68, 69, 70, 77, 94, 96, 218, 220, 227, 235, 237, 243, 246, 247, 295, 299], "mathtt": 227, "mathwav": 247, "mathwork": [105, 123, 247, 301], "mathworld": [4, 15, 46, 62, 63, 69, 70, 72, 74, 75, 77, 79, 85, 96, 105, 109, 221, 230, 235, 240, 247, 265], "matin_opt": 50, "matinv_opt": 50, "matlab": [50, 129, 159, 260, 301], "matlplotlib": 159, "matmul": [69, 101, 216], "matplotlib": [2, 4, 5, 8, 13, 14, 36, 40, 92, 97, 123, 159, 172, 207, 213, 291, 292, 304], "matplotlibbackend": [13, 213], "matpow": [101, 227], "matric": [2, 4, 15, 21, 22, 46, 50, 69, 70, 96, 104, 106, 108, 111, 125, 134, 135, 136, 142, 146, 156, 159, 161, 164, 165, 167, 175, 176, 186, 191, 202, 211, 212, 216, 222, 227, 228, 235, 237, 239, 240, 243, 245, 246, 248, 260, 261, 288, 296, 298, 299], "matrix": [14, 15, 19, 20, 22, 27, 30, 35, 37, 42, 50, 58, 61, 69, 70, 71, 77, 84, 94, 96, 98, 100, 102, 103, 107, 108, 110, 111, 112, 115, 125, 126, 128, 131, 134, 135, 136, 137, 140, 142, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 157, 159, 160, 161, 164, 165, 167, 175, 176, 181, 186, 187, 189, 191, 192, 194, 197, 201, 202, 211, 212, 214, 216, 220, 222, 225, 227, 228, 235, 237, 239, 240, 243, 245, 246, 248, 249, 251, 252, 253, 254, 259, 260, 265, 266, 268, 271, 273, 274, 276, 280, 286, 291, 292, 296, 299, 300, 305, 306], "matrix1": 216, "matrix2numpi": 105, "matrix_differential_equ": 243, "matrix_exp": 243, "matrix_exp_jordan_form": 243, "matrix_exponenti": 243, "matrix_fglm": 220, "matrix_form": 98, "matrix_gamma_distribut": 247, "matrix_multiply_elementwis": 105, "matrix_nod": 50, "matrix_normal_distribut": 247, "matrix_rep": 192, "matrix_tensor_product": 191, "matrix_to_dens": 186, "matrix_to_qubit": 186, "matrix_to_vector": 274, "matrixarithmet": 13, "matrixbas": [4, 13, 34, 100, 101, 104, 105, 135, 136, 216], "matrixcalculu": 13, "matrixcommon": 13, "matrixdeprec": 13, "matrixdetermin": 13, "matrixeigen": 13, "matrixel": [13, 50], "matrixerror": 105, "matrixexpr": [15, 24, 101, 102, 104], "matrixgamma": 247, "matrixi": 105, "matrixkind": [15, 19, 69, 104, 235], "matrixnorm": 247, "matrixoper": 13, "matrixpermut": 101, "matrixproperti": 13, "matrixreduct": 13, "matrixrequir": 13, "matrixset": [101, 235], "matrixshap": 13, "matrixsolv": [50, 227], "matrixspeci": 13, "matrixsubspac": 13, "matrixsymbol": [13, 19, 22, 34, 46, 47, 50, 69, 101, 104, 105, 227, 247, 249], "matt": 178, "matter": [12, 24, 48, 58, 61, 68, 69, 74, 94, 96, 201, 234, 265, 299, 300], "matthew": 0, "matur": [21, 22, 245, 246], "matvec": 259, "max": [13, 50, 60, 61, 69, 75, 77, 79, 105, 109, 111, 115, 117, 212, 213, 222, 223, 227, 234, 236, 237, 266, 292], "max_bending_mo": 117, "max_bmoment": 117, "max_coset": 51, "max_curv": 109, "max_deflect": 117, "max_degre": [96, 223], "max_denomin": 69, "max_div": 60, "max_expon": 50, "max_it": 239, "max_len": 239, "max_norm": [218, 223], "max_ord": 50, "max_shear_forc": 117, "max_stack_s": 51, "max_step": 109, "max_term": 239, "max_tri": [218, 222, 223], "max_wir": 172, "maxdepth": 227, "maxim": [12, 60, 70, 98, 115, 214, 218, 222, 234, 236, 292], "maxima": [2, 33, 111, 246], "maximal_fiber_veloc": [115, 292], "maximal_ord": [218, 222], "maximum": [13, 14, 16, 33, 34, 48, 50, 51, 60, 61, 69, 75, 96, 105, 109, 113, 115, 117, 144, 189, 197, 213, 218, 220, 223, 227, 234, 235, 239, 240, 243, 245, 246, 247, 262, 265, 292], "maxn": [69, 73, 105], "maxprec": 69, "maxsiz": 69, "maxstep": 223, "maxterm": 99, "maxtriesexcept": 222, "maxwel": 247, "maxwell_distribut": 247, "maxwelldistribut": 247, "mayavi": 13, "mayb": [8, 12, 23, 31], "mayor": 164, "mb": [137, 147, 159], "mbox": 49, "mc": [70, 145, 147, 291], "mccluskei": 99, "mccluskey_algorithm": 99, "mcgraw": [77, 96, 135, 158, 202, 209, 271], "mcii": 247, "mcode": 227, "mcodeprint": 227, "mcydwshkogamkzcelyfgayr": 70, "md": [3, 5, 12, 256, 263, 291], "md5": 268, "mdarg": 69, "mdft": 128, "me": [70, 142, 159, 202, 227, 249, 291, 292], "mead": 70, "mean": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 22, 23, 24, 29, 37, 46, 51, 61, 68, 69, 70, 71, 87, 94, 96, 97, 99, 102, 104, 105, 109, 117, 129, 130, 153, 192, 194, 197, 202, 207, 210, 213, 214, 215, 217, 220, 222, 226, 227, 237, 239, 240, 242, 243, 245, 246, 247, 248, 249, 251, 252, 258, 265, 276, 292, 294, 295, 297, 299, 300, 301, 305, 306], "meaning": [22, 43, 45, 49, 70], "meaningfulli": 214, "meaningless": 73, "meant": [4, 5, 12, 13, 16, 22, 24, 50, 69, 77, 82, 96, 109, 142, 159, 213, 218, 235, 239, 244, 249, 276, 300], "meanwhil": 222, "measur": [16, 42, 75, 77, 85, 100, 129, 157, 172, 181, 186, 194, 197, 199, 201, 202, 206, 208, 211, 223, 235, 236, 239, 247, 270, 271, 274, 275, 277, 278, 280, 291], "measure_al": 186, "measure_all_oneshot": 186, "measure_parti": 186, "measure_partial_oneshot": 186, "meat": 50, "mechan": [2, 24, 28, 69, 92, 96, 105, 115, 117, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 174, 178, 181, 187, 189, 190, 191, 194, 201, 202, 209, 212, 288, 291, 292], "mechanicalc": 85, "mechanics_print": [140, 144, 145, 149, 150, 151, 153, 154, 155], "media": [159, 165], "medial": 85, "median": [85, 247], "mediterranean": 214, "medium": [8, 24, 161, 162, 165, 166, 176, 220, 288], "medium1": 165, "medium2": 165, "meet": [22, 70, 234], "meetmeonmondai": 70, "meetmeonmondayat8am": 70, "meijaard": 158, "meijaard2007": [144, 158], "meijer": [77, 87, 95, 96, 283, 295, 305], "meijer_g": 77, "meijerg": [77, 88, 94, 96, 227, 247, 305], "meijerint": [88, 90, 94, 96], "meijerint_definit": 94, "meijerint_indefinit": 94, "meijerint_invers": 94, "mein": 265, "mellin": [77, 96], "mellin_transform": 96, "mellintransform": 96, "member": [0, 4, 13, 22, 29, 49, 58, 60, 70, 92, 115, 119, 121, 214, 235, 252], "member_1": 121, "member_2": 121, "member_3": 121, "member_4": 121, "member_5": 121, "member_length": 121, "membership": [33, 67, 222, 235], "memo": 267, "memoiz": [262, 264, 290], "memoize_properti": 261, "memori": [12, 15, 50, 69, 109, 223, 248, 259, 262], "men": 197, "menez": 109, "mensor": 42, "mental": 15, "mention": [2, 3, 4, 14, 24, 29, 36, 60, 94, 96, 111, 119, 125, 144, 160, 161, 208, 237, 240, 243, 247, 275, 276, 277, 278, 301], "menu": 8, "mere": [44, 45, 50, 52, 73, 187], "merg": [3, 7, 11, 12, 13, 50, 60, 61, 69, 200, 227, 235, 247, 258, 265, 266], "merge_solut": 240, "mermin": 177, "meromorph": [69, 77], "mersenn": 109, "mersenne_prime_expon": 109, "mersenneforum": 109, "mersenneprim": 109, "mesh": 213, "mesh_i": 213, "mesh_u": 213, "mesh_v": 213, "mesh_x": 213, "mesh_z": 213, "mess": [178, 243, 246, 305], "messag": [3, 7, 12, 13, 14, 70, 97, 256, 261, 263, 268], "messi": 237, "met": [69, 121, 240, 246, 261, 305], "meta": [5, 69, 243, 244], "metaclass": 69, "metacycl": 52, "metadata": [3, 11, 49, 261, 263], "metahint": 69, "metaprogram": 69, "meter": [117, 118, 119, 163, 166, 195, 196, 197, 198, 199], "meth": 14, "method": [2, 3, 4, 5, 8, 11, 12, 14, 15, 16, 21, 22, 29, 31, 32, 33, 35, 36, 37, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 60, 61, 62, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 83, 85, 88, 91, 93, 94, 96, 98, 100, 101, 105, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 125, 126, 129, 130, 131, 133, 134, 136, 137, 138, 140, 141, 142, 148, 152, 153, 157, 158, 159, 166, 169, 171, 173, 181, 182, 187, 189, 192, 194, 196, 199, 200, 201, 202, 204, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 228, 229, 230, 232, 233, 234, 235, 239, 240, 243, 245, 247, 248, 250, 252, 253, 254, 258, 260, 262, 265, 266, 271, 275, 278, 281, 282, 286, 288, 291, 292, 294, 295, 296, 297, 300, 305], "method_nam": 14, "method_of_undetermined_coeffici": 243, "method_ring": 265, "methodologi": [246, 298], "metric": [14, 50, 61, 65, 71, 126, 239, 243, 246, 253], "metric_nam": 253, "metric_symmetri": [13, 253], "metric_to_christoffel_1st": 71, "metric_to_christoffel_2nd": 71, "metric_to_ricci_compon": 71, "metric_to_riemann_compon": 71, "meurer": 0, "mfork": 144, "mframe": 144, "mgamma": 128, "mi": [109, 227], "mib": 9, "micali": 70, "michael": [68, 221, 226], "microsecond": 110, "microsoft": 8, "mid": [24, 51, 70, 73, 111, 118, 235, 240], "middl": [24, 77, 85, 94, 105, 118, 172, 213, 237, 305], "midpoint": [82, 84, 85, 96, 213, 277], "midwai": 70, "might": [3, 4, 9, 11, 12, 13, 14, 15, 16, 18, 22, 23, 24, 31, 35, 48, 50, 69, 73, 75, 82, 91, 94, 101, 105, 109, 111, 117, 129, 142, 143, 159, 172, 202, 210, 213, 216, 217, 218, 223, 224, 227, 228, 235, 236, 237, 239, 240, 245, 246, 247, 259, 260, 263, 265, 268, 294, 297, 299, 300, 302, 305], "miglani": 11, "mignott": [218, 220], "mignotte_sep_bound_squar": 218, "migrat": 3, "miktex": [2, 8], "mile": 199, "mileston": 260, "militari": 70, "miller": 109, "milton": [4, 77], "mimic": [96, 97, 116, 207, 266], "mimo": [27, 122, 125], "mimofeedback": [27, 122, 125], "mimolineartimeinvari": 125, "mimoparallel": [122, 125], "mimoseri": [122, 125], "min": [13, 61, 65, 69, 74, 75, 105, 111, 212, 213, 222, 227, 233, 243, 265], "min_degre": 223, "min_expon": 50, "min_qubit": [172, 176], "min_wir": 172, "min_x": 240, "min_z": 240, "mind": [4, 11, 12, 14, 16, 19, 22, 33, 69, 105, 157, 213, 234, 235, 280, 300], "minim": [4, 22, 24, 48, 60, 61, 65, 68, 69, 70, 94, 96, 99, 105, 109, 131, 146, 161, 216, 217, 218, 220, 223, 226, 236, 239, 240, 245, 265], "minima": [33, 246], "minimal_block": 60, "minimal_polynomi": 222, "minimal_uncollected_subword": 59, "minimum": [3, 13, 33, 48, 50, 60, 61, 63, 65, 69, 70, 73, 75, 105, 129, 135, 144, 176, 201, 213, 215, 220, 245, 246, 247, 261, 295], "minisat": 2, "minisat22": 2, "minlex": 265, "minor": [69, 79, 105, 216, 227, 258], "minor_submatrix": 105, "minpoli": [69, 217, 218, 222], "minpoly_of_el": 69, "minterm": 99, "minu": [50, 68, 69, 208, 216, 220, 227, 278], "minut": [12, 16, 34, 129, 144, 201], "minv": 216, "minv_reduc": 216, "mirror": [4, 77, 96, 165], "mirror_formula": 165, "misappli": 13, "misc": [75, 105, 268], "miscellan": [264, 290], "mise": 247, "mismatch": 105, "miss": [59, 60, 86, 216, 227, 245, 260, 305], "missingunityerror": 222, "mission": [5, 49, 102], "mississippi": [74, 265], "misspel": 13, "mistak": [5, 11, 12, 14, 16, 32, 60, 111, 266], "mistaken": 12, "mistyp": 12, "misunderstand": 22, "mit": 72, "mix": [22, 41, 68, 75, 105, 111, 201, 217, 218, 223, 227, 246, 249, 251, 253, 266], "mixin": [69, 265], "mixtur": [48, 50, 86, 214, 260], "mj": 0, "mk": [194, 197], "mlatex": 129, "mm": [46, 49, 109, 135, 144, 149, 150, 190, 216], "mm_full": 144, "mn": [190, 227, 247], "mnemon": [16, 236, 265], "mnt": 8, "mo": [109, 159, 227], "moa": 55, "mobiu": [13, 72, 74, 109], "mobius_transform": 72, "mobiusrang": 109, "mock": 172, "mod": [12, 13, 70, 74, 75, 99, 106, 109, 188, 214, 216, 217, 218, 220, 222, 223, 227, 229, 237, 240], "mod_invers": [69, 223], "mod_to_list": 218, "modaugmentedassign": 50, "mode": [1, 8, 29, 69, 97, 111, 164, 187, 207, 223, 227, 258, 291], "model": [3, 14, 15, 73, 74, 99, 109, 112, 113, 115, 116, 125, 130, 136, 140, 144, 146, 147, 148, 164, 223, 236, 247, 293], "moder": [7, 96], "modern": [24, 50, 214, 221, 227], "modest": 51, "modgcd_bivari": 220, "modgcd_multivari": 220, "modgcd_univari": 220, "modif": [60, 75, 105, 111, 246, 247, 262], "modifi": [5, 12, 14, 15, 16, 49, 50, 60, 69, 75, 77, 109, 111, 155, 164, 213, 216, 220, 222, 223, 224, 227, 239, 245, 246, 247, 258, 261, 262, 265, 266, 294, 299, 301], "modn": 109, "modop": 227, "modopmodewrong": 227, "modopnestedwrong": 227, "modopsettingswrong": 227, "modul": [2, 3, 4, 5, 7, 11, 12, 14, 15, 16, 19, 22, 27, 32, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 59, 61, 69, 70, 72, 74, 75, 77, 81, 85, 89, 92, 95, 96, 97, 99, 101, 102, 103, 105, 110, 111, 112, 115, 116, 117, 119, 120, 121, 123, 126, 129, 142, 143, 148, 152, 154, 155, 157, 159, 161, 164, 166, 167, 179, 182, 195, 196, 197, 198, 208, 211, 213, 218, 219, 221, 224, 225, 227, 231, 234, 237, 241, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 260, 261, 262, 263, 264, 265, 266, 269, 274, 276, 278, 279, 280, 281, 282, 288, 289, 290, 292, 294, 297, 299, 305, 306], "modular": [12, 70, 109, 188, 216, 221, 246], "modular_multiplicative_invers": 69, "modulargcd": 220, "modularinteg": 218, "module_dictionari": 266, "module_quoti": 214, "module_rel": 258, "moduleel": 222, "moduleendomorph": 222, "modulehomomorph": [214, 222], "moduli": [70, 109, 216, 220], "modulo": [13, 69, 70, 74, 106, 109, 188, 214, 216, 217, 218, 220, 222, 223, 224, 226, 227, 230, 239], "modulu": [69, 70, 72, 77, 79, 85, 105, 109, 117, 118, 214, 218, 220, 222, 223, 226, 246], "mol": 212, "mold": 211, "mole": 197, "moll": 77, "momemtum": 189, "moment": [79, 85, 117, 118, 144, 152, 155, 157, 213, 223, 240, 247], "moment_load_vector": 117, "momenta": 171, "momentum": [127, 131, 137, 142, 159, 170, 171, 189, 193, 212, 253], "monad": 262, "monagan": [221, 239], "monagan00": [220, 221], "monagan93": [220, 221], "mondai": 70, "monic": [68, 77, 214, 215, 218, 220, 222, 223, 226], "monitor": 8, "monoalphabet": 70, "monogen": 214, "monogenicfiniteextens": [214, 218], "monoid": 49, "monom": [218, 223], "monomi": [11, 69, 96, 99, 109, 215, 217, 218, 220, 226, 227, 305], "monomial_basi": 218, "monomial_count": 223, "monomial_kei": 223, "monomialord": [218, 223], "monomorph": 222, "monospac": 227, "monoterm": 253, "monoton": [48, 50, 86], "monotonicity_help": 48, "monotorem": 253, "monserrat": 11, "mont": 60, "montgomeri": 220, "month": 0, "monthli": [55, 70, 105], "montreal": 221, "moor": [0, 34, 101, 105], "moot": 69, "moprhism": 49, "mora": [220, 221, 223, 245], "mordel": 240, "more": [2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 29, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 45, 46, 48, 49, 50, 51, 52, 55, 59, 60, 61, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 91, 94, 96, 99, 101, 102, 105, 106, 108, 109, 110, 111, 113, 117, 123, 125, 129, 134, 135, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 155, 156, 157, 159, 161, 164, 176, 180, 181, 186, 189, 190, 191, 192, 197, 201, 202, 206, 207, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 236, 237, 239, 240, 243, 244, 245, 246, 247, 258, 260, 261, 262, 265, 266, 268, 271, 275, 279, 286, 288, 291, 292, 294, 295, 297, 298, 300, 301, 303, 304, 305, 306], "moreno": 221, "moreov": [60, 70, 94, 208, 214, 215, 220, 228, 276], "morphism": [49, 214], "morri": 236, "mors": 70, "morse_cod": 70, "mortem": 258, "mose": 243, "most": [2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 16, 19, 20, 22, 23, 24, 29, 31, 33, 34, 35, 36, 37, 38, 40, 43, 44, 45, 48, 49, 50, 51, 60, 61, 68, 69, 70, 73, 75, 79, 81, 96, 99, 100, 101, 102, 105, 107, 108, 109, 110, 111, 125, 129, 134, 135, 142, 150, 153, 156, 157, 160, 194, 196, 201, 202, 206, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 234, 235, 237, 240, 243, 244, 245, 246, 247, 256, 259, 260, 261, 262, 263, 265, 266, 268, 274, 276, 292, 294, 297, 299, 300, 301, 303, 304, 305], "mostli": [14, 69, 75, 96, 105, 159, 187, 210, 214, 216, 226, 227, 237, 245, 304], "mota": 243, "motion": [13, 60, 116, 129, 130, 131, 134, 135, 136, 138, 140, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 159, 160, 206, 207, 210, 211, 247, 292], "motiongenesi": [142, 159], "motionvari": [142, 159], "motiv": [13, 17, 24, 39, 223], "mous": 213, "move": [11, 12, 14, 24, 60, 61, 69, 70, 83, 85, 117, 130, 134, 138, 140, 144, 145, 146, 152, 180, 206, 210, 211, 239, 248, 257, 278, 291, 292], "movement": 71, "moyal": 247, "moyaldistribut": 247, "mp": [42, 189, 245, 261], "mpc": [217, 218], "mpelement": 218, "mpf": [69, 217, 218], "mpi": 235, "mpmath": [2, 8, 12, 15, 24, 34, 35, 50, 74, 77, 105, 110, 159, 217, 218, 227, 235, 245, 261, 266, 295], "mpmathprint": 227, "mpprint": [129, 154], "mpq": [109, 216, 217], "mprint": [129, 149, 150, 151, 154], "mpz": [217, 218], "mr": 109, "mrow": 227, "mrref": 216, "mrv": [69, 234], "mrv_leadterm": 234, "mrv_max1": 234, "mrv_max3": 234, "msg": [70, 96], "msigma": 128, "msub": [129, 132, 156], "msym": 65, "msymbol": 245, "msys2": 8, "mt": [94, 292], "mu": [16, 77, 94, 109, 126, 128, 163, 227, 247, 253], "mu1": 247, "mu2": 247, "mu_1": 247, "mu_2": 247, "much": [3, 4, 11, 12, 13, 20, 22, 23, 24, 29, 35, 49, 50, 54, 65, 69, 73, 77, 91, 94, 96, 156, 157, 200, 210, 211, 212, 214, 216, 217, 220, 223, 234, 237, 239, 243, 244, 245, 246, 260, 262, 297, 299, 305], "mueller": 164, "mueller_calculu": 164, "mueller_matrix": 164, "mul": [4, 13, 15, 16, 19, 24, 42, 94, 96, 105, 109, 172, 176, 186, 187, 216, 217, 218, 222, 223, 227, 228, 229, 236, 239, 243, 244, 245, 246, 251, 300], "mul_elementwis": 216, "mul_ground": [218, 223], "mul_inv": 61, "mul_symbol": 227, "mul_symbol_mathml_numb": 227, "mul_xin": 224, "mulaugmentedassign": 50, "muller": 0, "mulsimp": 105, "mult": 222, "mult_tab": 222, "multi": [41, 69, 70, 143, 152, 159, 172, 176, 186, 213, 227, 246, 288], "multibodi": [115, 116, 136, 137, 140, 142, 152, 158, 159, 160, 210, 292], "multicharact": 268, "multidimension": [35, 221, 258], "multifactor": 220, "multifactori": 74, "multifram": 211, "multigamma": 77, "multilin": [3, 227], "multilinear": 71, "multimodular": 216, "multinomi": [69, 105, 109, 247], "multinomial_coeffici": 109, "multinomial_coefficients_iter": 109, "multinomial_distribut": 247, "multinomialdistribut": 247, "multipl": [2, 3, 4, 11, 12, 13, 14, 15, 16, 18, 22, 24, 27, 31, 33, 37, 38, 42, 44, 45, 46, 48, 49, 50, 51, 58, 60, 61, 65, 68, 69, 70, 74, 75, 77, 79, 84, 87, 89, 94, 96, 98, 99, 101, 105, 106, 109, 111, 119, 121, 122, 125, 129, 138, 144, 152, 159, 160, 176, 177, 178, 182, 189, 191, 194, 197, 198, 199, 202, 206, 210, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 227, 232, 233, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 248, 251, 253, 256, 260, 261, 262, 263, 265, 266, 268, 271, 276, 291, 292, 294, 295, 297, 298, 300, 301, 306], "multipledispatch": [12, 13, 43], "multiplex": 99, "multipli": [13, 16, 34, 42, 46, 50, 60, 69, 80, 84, 91, 98, 105, 109, 130, 135, 136, 146, 155, 156, 169, 178, 192, 197, 198, 201, 214, 215, 216, 218, 220, 222, 223, 227, 229, 236, 237, 240, 243, 248, 265, 275, 297, 300], "multiplicity_in_factori": 109, "multiply_elementwis": [105, 216], "multiply_id": 214, "multiply_transitive_group": 60, "multipow": 70, "multiprecis": [50, 217], "multiprim": 70, "multiset": [74, 94, 262, 265], "multiset_combin": [74, 265], "multiset_derang": 265, "multiset_partit": [58, 74, 94, 262, 265], "multiset_partitions_taocp": 262, "multiset_permut": [74, 265], "multisetpartitiontravers": 262, "multiterm": 253, "multivalu": [69, 75], "multivari": [48, 69, 77, 214, 215, 217, 218, 219, 221, 223, 224, 234, 239, 245, 246, 247, 305], "multivariate_gamma_funct": 77, "multivariate_laplace_distribut": 247, "multivariate_normal_distribut": 247, "multivariatebeta": 247, "multivariateewen": 247, "multivariatelaplac": 247, "multivariatenorm": 247, "multivariatepolynomialerror": [220, 223], "multivariatet": 247, "mun": 227, "mundi": 221, "mupad_ref": 301, "murrai": [60, 216], "muscl": [112, 113, 115, 292], "muscle_activ": 292, "muscle_load": 292, "muscle_pathwai": 292, "musclotendon": 112, "muscular": 116, "musculoskelet": 291, "musculotendon": [112, 113, 114, 116, 288, 291], "musculotendon_dynam": [115, 292], "musculotendonbas": 115, "musculotendondegroote2016": [115, 291, 292], "musculotendonformul": 115, "museum": 70, "must": [2, 3, 4, 11, 12, 13, 15, 16, 22, 23, 36, 42, 43, 44, 45, 50, 60, 61, 63, 65, 67, 68, 69, 70, 71, 74, 75, 77, 79, 82, 85, 88, 91, 92, 94, 96, 99, 100, 101, 105, 108, 109, 111, 115, 117, 118, 119, 121, 123, 125, 126, 130, 134, 135, 136, 138, 141, 142, 144, 145, 152, 154, 155, 156, 157, 159, 172, 187, 189, 192, 201, 202, 211, 212, 213, 214, 215, 216, 218, 220, 222, 223, 227, 228, 235, 236, 237, 239, 240, 243, 245, 246, 247, 251, 252, 258, 259, 260, 261, 262, 263, 265, 266, 292, 297, 299, 300, 304, 305], "mutabl": [15, 16, 51, 69, 100, 101, 102, 117, 218, 227, 228, 239, 248, 301], "mutabledensematrix": [13, 100, 216, 268, 292], "mutabledensendimarrai": 248, "mutablerepmatrix": 13, "mutablesparsematrix": 107, "mutablesparsendimarrai": 248, "mutat": [13, 125, 216, 218, 247], "mute": [50, 259], "mutual": [75, 94, 211], "mwf": 144, "mwr": 144, "mx": [123, 172, 234], "my": [8, 227, 294], "my_dummi": 192, "my_equ": 69, "my_fcn": [50, 227], "my_inequ": 69, "my_iszero": 301, "my_mat_fcn": [50, 227], "my_measur": 239, "my_real_root": 29, "my_root": 29, "my_routin": 50, "my_smt_variable_for_pi": 227, "my_sym": 32, "myclass": 69, "mycoeff": 48, "myfcn": 260, "myfcn_result": 260, "mygamma": 227, "mylatexprint": 227, "mylist": 69, "mylist1": 69, "mylist2": 69, "myop": 265, "myprogram": 50, "myrvold": 61, "mysin": [69, 266, 294], "mysingleton": 69, "myst": 5, "mysub": 50, "mz": 172, "m\u2081": 118, "m\u2082": 118, "n": [0, 4, 5, 9, 12, 15, 16, 20, 22, 24, 29, 32, 33, 41, 46, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 63, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 79, 82, 83, 84, 85, 86, 91, 92, 94, 96, 98, 99, 101, 105, 106, 109, 111, 115, 117, 118, 121, 123, 125, 127, 128, 130, 131, 135, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 159, 160, 161, 163, 165, 166, 168, 172, 177, 178, 181, 186, 188, 189, 190, 192, 193, 195, 197, 199, 201, 202, 204, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 243, 245, 246, 247, 250, 252, 253, 256, 259, 265, 267, 268, 271, 273, 274, 275, 276, 280, 286, 291, 292, 295, 301, 304, 305, 306], "n1": [22, 50, 60, 69, 70, 142, 159, 161, 165, 201, 213, 240, 247, 271], "n11": 247, "n12": 247, "n2": [22, 50, 60, 69, 70, 159, 161, 165, 213, 240, 247], "n21": 247, "n22": 247, "n3": [69, 142, 213], "n_": [220, 240], "n_0": [91, 220, 245, 246], "n_1": [220, 245, 247], "n_2": [220, 247], "n_a": 142, "n_adj": 61, "n_alpha_b": 202, "n_b": 142, "n_c": 247, "n_digit": 96, "n_ep": 60, "n_frame": 131, "n_i": [65, 220, 245], "n_k": 220, "n_len": 165, "n_level": 192, "n_m": 245, "n_max": 192, "n_order": 109, "n_particl": 192, "n_point_check": 50, "n_surr": 165, "n_x": 204, "nabla": [208, 271, 277, 278], "naiv": [14, 19, 60, 66, 69, 94, 105, 109, 197, 216, 237, 245, 246, 253], "nakagami": 247, "nakagami_distribut": 247, "nako": 216, "name": [2, 3, 4, 5, 8, 12, 13, 15, 16, 22, 24, 26, 36, 37, 41, 44, 45, 49, 50, 51, 52, 56, 59, 62, 65, 68, 69, 70, 71, 74, 75, 76, 77, 79, 82, 94, 96, 97, 98, 101, 105, 109, 111, 112, 115, 116, 117, 121, 130, 131, 134, 137, 140, 142, 144, 159, 163, 172, 187, 194, 197, 198, 199, 200, 201, 202, 204, 206, 208, 211, 213, 214, 215, 217, 218, 220, 222, 224, 227, 233, 237, 239, 240, 243, 244, 246, 247, 252, 253, 256, 258, 259, 260, 261, 266, 268, 269, 271, 275, 278, 283, 291, 292, 294, 297, 300, 301, 305], "name_dict": 111, "name_expr": [50, 260], "name_mangl": 227, "name_of_bodi": 131, "named_group": [54, 57, 59, 60, 66, 67], "namedmorph": 49, "nameerror": [14, 16, 97, 261, 297], "nameless": 253, "namespac": [2, 4, 13, 14, 41, 50, 51, 69, 218, 240, 243, 244, 258, 260, 261, 266], "nan": [46, 47, 50, 69, 75, 77, 132, 135, 136, 239, 247, 295], "nand": [99, 227], "nanjeky": 11, "nanjekyejoannah": 11, "nano": 110, "nanosecond": 110, "napier": 69, "narg": [69, 220], "narr": [4, 298], "nation": 224, "nativ": [9, 14, 15, 69, 125, 218, 223, 258], "native_coeff": 69, "natur": [3, 12, 14, 16, 22, 27, 34, 42, 46, 50, 51, 52, 60, 69, 70, 74, 75, 102, 109, 142, 194, 196, 197, 214, 217, 218, 220, 222, 224, 227, 235, 236, 240, 246, 247, 265, 281, 291, 300, 305], "naturals0": [69, 227, 235, 246, 247], "navi": 70, "navig": [8, 13], "nb": 69, "nb2": 227, "nb_of_point": 213, "nb_of_points_i": 213, "nb_of_points_u": 213, "nb_of_points_v": 213, "nb_of_points_x": 213, "nbit": 50, "nc": 74, "nca": 222, "nck": 305, "ncol": 216, "ncolumn": 213, "ndarrai": [105, 213, 247, 253, 259, 291], "ndf": 164, "ndimarrai": 14, "ndimension": 259, "ne": [15, 18, 22, 69, 70, 74, 75, 82, 94, 105, 109, 111, 215, 217, 220, 237, 243, 247], "near_int": 109, "nearbi": 11, "nearer": 94, "nearest": [48, 222], "nearest_common_ancestor": 222, "nearli": [16, 109, 236], "necess": 220, "necessari": [2, 3, 4, 6, 8, 11, 12, 13, 14, 16, 22, 24, 39, 48, 49, 60, 61, 69, 79, 94, 96, 99, 105, 109, 111, 135, 144, 152, 213, 215, 217, 222, 223, 227, 230, 236, 239, 243, 244, 245, 246, 247, 248, 253, 258, 260, 265, 266, 271, 291, 298, 303], "necessarili": [3, 4, 22, 46, 69, 70, 71, 94, 96, 99, 135, 214, 215, 216, 222, 223, 225, 239, 240, 243, 245, 246, 292], "necessit": 150, "necesssari": 281, "necklac": [5, 265], "ned": 13, "nedbatcheld": 12, "need": [2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 44, 45, 48, 49, 50, 54, 60, 61, 65, 67, 68, 69, 70, 71, 74, 75, 77, 80, 84, 85, 92, 93, 94, 96, 97, 99, 105, 109, 110, 111, 115, 117, 118, 121, 125, 129, 130, 135, 137, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 157, 160, 161, 172, 176, 184, 190, 195, 201, 202, 207, 210, 211, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 234, 235, 237, 239, 240, 242, 243, 245, 246, 247, 251, 252, 253, 254, 256, 259, 260, 261, 262, 263, 265, 268, 271, 275, 277, 278, 281, 291, 292, 294, 295, 297, 300, 301, 303, 305], "needev": 96, "neg": [4, 13, 15, 16, 22, 23, 27, 33, 46, 47, 50, 51, 64, 68, 69, 74, 75, 77, 79, 81, 82, 85, 94, 96, 98, 99, 105, 108, 109, 117, 118, 121, 122, 123, 125, 130, 134, 138, 192, 202, 212, 215, 216, 218, 220, 222, 223, 224, 227, 233, 235, 236, 237, 239, 240, 243, 245, 246, 247, 266, 292], "neg_feedback": 125, "negat": [23, 24, 46, 69, 75, 99, 125, 202, 216, 218, 220, 223], "negative_binomial_distribut": 247, "negative_multinomial_distribut": 247, "negative_numb": [22, 69], "negativebinomi": 247, "negativebinomialdistribut": 247, "negativehandl": 46, "negativeinfin": [69, 227], "negativemultinomi": 247, "negativeon": [69, 75, 300], "negativepred": 46, "neglect": 50, "neglig": 29, "neighbor": 265, "neighborhood": 235, "neighbourhood": 94, "neither": [22, 23, 46, 69, 166, 187, 213, 216, 223, 234, 235, 236, 243, 253, 266, 271, 280, 305], "nephew": 70, "neq": [15, 24, 69, 75, 77, 94, 96, 105, 109, 197, 211, 212, 220, 223, 243, 245, 305], "nervou": [112, 292], "nessgrh": 94, "nest": [14, 32, 36, 69, 71, 75, 77, 96, 105, 125, 215, 216, 217, 220, 227, 237, 239, 242, 246, 247, 248, 249, 251, 254, 265, 266, 300], "nested_contract": 251, "net": [11, 49, 85, 221, 243, 247, 265], "netwon": 50, "neurolog": 116, "neutral": 5, "never": [9, 10, 11, 12, 14, 15, 22, 24, 36, 69, 75, 96, 111, 194, 223, 224, 227, 235, 245, 247, 256, 275, 297, 298], "nevertheless": 49, "new": [2, 3, 5, 6, 7, 8, 9, 12, 14, 15, 22, 24, 32, 39, 44, 45, 49, 50, 51, 60, 61, 68, 69, 70, 71, 77, 82, 85, 94, 96, 97, 105, 109, 111, 113, 115, 117, 119, 121, 125, 130, 131, 134, 142, 145, 149, 151, 158, 159, 161, 182, 188, 189, 192, 194, 197, 198, 200, 201, 202, 206, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 227, 234, 237, 239, 240, 243, 245, 246, 247, 248, 249, 258, 259, 263, 266, 271, 273, 275, 291, 292, 293, 294, 297, 300, 301, 303], "new_eq": 246, "new_fil": 11, "new_gen": 67, "new_indic": 192, "new_label": [119, 121], "new_matrix": 247, "new_method": [135, 146], "new_msg": 70, "new_nam": 49, "new_support": 119, "new_system": 271, "newa": 236, "newarg": 14, "newchar": 268, "newconst": 243, "newer": [3, 12, 15, 111, 210, 245], "newli": [12, 69, 94, 237], "newlin": [3, 12, 105, 268], "newmatrix": 13, "newnam": 202, "newroot": 98, "newton": [50, 77, 152, 195, 199, 220, 224, 292], "newtonian": [140, 142, 159], "newtonion": 131, "newtons_method": 50, "newtons_method_funct": 50, "newtyp": 69, "newvar": 68, "nexp": 50, "next": [7, 9, 11, 16, 20, 22, 24, 26, 41, 50, 51, 53, 58, 60, 61, 63, 64, 69, 70, 75, 94, 96, 99, 105, 109, 111, 129, 131, 134, 135, 140, 145, 146, 147, 149, 151, 152, 153, 160, 210, 211, 214, 216, 218, 222, 223, 227, 235, 237, 240, 243, 262, 263, 265, 298, 299, 300], "next_binari": 64, "next_grai": 64, "next_lex": [58, 61], "next_lexicograph": 64, "next_nonlex": 61, "next_trotterjohnson": [61, 265], "nextprim": 109, "nf": 220, "nfac": 109, "nfloat": [69, 239], "ngate": 176, "nh": 154, "ni": 77, "nice": [1, 4, 9, 40, 69, 81, 105, 109, 142, 156, 159, 213, 227, 237, 268, 300], "nicefrac": 111, "nicer": [40, 69, 150, 216], "nicest": 14, "nicheck": 142, "nielsen_transform": 60, "niemey": 60, "nigel": 240, "nijenhui": 53, "nilpot": [55, 60, 105], "nilpotent_group": 60, "nilrad": 222, "nine": [85, 227], "nine_point_circl": 85, "ninth": 113, "nist": [4, 75, 77, 197], "nitaj": 240, "niven": 220, "nl": [127, 193], "nlm": 127, "nm": [117, 118, 190, 248, 291], "nmant": 50, "nmax": 109, "nmod": 13, "nmod_mat_charpoli": 216, "nnf": 99, "nnz": 216, "no_attrs_in_subclass": 261, "no_glob": [97, 207], "no_symmetri": 253, "nobr": 36, "nocache_fail": 256, "nocond": [27, 96], "nodal": [168, 193, 214], "node": [13, 15, 48, 63, 69, 96, 111, 121, 132, 168, 193, 202, 212, 217, 227, 234, 246, 251, 262, 266, 300, 304], "node12": 53, "node81": 109, "node_1": 121, "node_2": 121, "node_3": 121, "node_4": 121, "node_label": 121, "node_posit": 121, "nois": 29, "nomin": 12, "non": [2, 3, 12, 14, 15, 16, 22, 24, 29, 35, 36, 38, 41, 46, 48, 51, 59, 62, 68, 69, 70, 74, 75, 76, 77, 78, 79, 82, 83, 84, 96, 98, 99, 100, 101, 105, 106, 108, 109, 112, 115, 129, 130, 135, 137, 144, 145, 146, 150, 154, 155, 159, 176, 181, 191, 192, 194, 208, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 230, 234, 235, 237, 239, 240, 242, 243, 245, 246, 247, 248, 251, 252, 253, 258, 260, 265, 268, 278, 292, 300, 305, 306], "non_trivial_metr": 71, "nonbas": 69, "noncentr": 247, "noncentral_beta_distribut": 247, "noncentral_chi_distribut": 247, "noncentralbetadistribut": 247, "noncommut": [22, 69, 92, 300], "noncommutative_part": 69, "noncomput": 15, "nonconserv": 135, "noncontributing_forc": 145, "nonconvex": 96, "nondimension": 291, "none": [4, 5, 12, 13, 14, 15, 22, 23, 24, 42, 43, 44, 45, 46, 48, 49, 50, 52, 58, 59, 60, 61, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 90, 91, 92, 94, 96, 97, 99, 101, 105, 106, 109, 110, 111, 112, 115, 117, 121, 125, 130, 131, 132, 134, 135, 136, 137, 140, 142, 161, 163, 165, 166, 172, 177, 182, 187, 189, 192, 194, 198, 199, 200, 202, 204, 206, 207, 211, 212, 213, 214, 216, 218, 220, 222, 223, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 239, 240, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 256, 258, 259, 260, 261, 265, 266, 268, 270, 271, 274, 301, 305, 306], "noneg": 292, "nonelementari": 96, "nonelementaryintegr": 96, "nonempti": [60, 265], "nonetheless": [3, 70, 194, 239, 243], "nonetoken": 50, "nonetyp": [23, 50], "nonhol_coneq": [135, 146, 155], "nonholonom": [135, 140, 144], "nonholonomic_constraint": 140, "nonhomogeneous_equation_with_constant_coeffici": 243, "noninteg": [22, 46, 69, 217, 227], "nonintegr": 24, "noninvert": 247, "noninvertiblematrixerror": [34, 101, 301], "nonlex": 61, "nonlinear": [18, 30, 36, 38, 68, 130, 159, 223, 243, 245, 246, 292], "nonlinear_stiff": 130, "nonlinearerror": 246, "nonlinsolv": [159, 245, 246, 306], "nonminim": [143, 152, 156, 288], "nonneg": [12, 13, 14, 22, 24, 46, 69, 70, 71, 74, 77, 101, 159, 215, 217, 223, 240, 245, 247, 291, 292, 305], "nonnegativehandl": 46, "nonnegativepred": 46, "nonparallel": 134, "nonparametr": 213, "nonpivot": 216, "nonposit": [22, 46, 69, 74, 77, 159, 245], "nonpositivehandl": 46, "nonpositivepred": 46, "nonreal": [24, 35, 245], "nonrep": 253, "nonresidu": [74, 109], "nonsens": [12, 68, 77], "nonsquarematrixerror": [105, 243], "nontrivi": [24, 60, 69, 109], "nonvanish": 69, "nonzero": [22, 24, 46, 47, 68, 69, 84, 105, 115, 127, 215, 216, 217, 218, 227, 230, 240, 246], "nonzero_col": 216, "nonzerohandl": 46, "nonzeropred": 46, "noqa": [12, 69, 97, 218, 261], "nor": [46, 48, 69, 99, 141, 166, 213, 216, 223, 227, 234, 236, 243, 253, 271], "norepli": 11, "norm": [42, 105, 190, 202, 218, 220, 222, 223, 240], "normal": [5, 12, 13, 14, 16, 22, 23, 24, 38, 42, 46, 50, 60, 68, 69, 73, 75, 79, 82, 83, 84, 96, 97, 99, 102, 103, 105, 109, 111, 112, 113, 115, 127, 129, 134, 141, 142, 144, 150, 159, 165, 176, 186, 189, 190, 191, 192, 193, 197, 200, 202, 211, 214, 216, 217, 218, 220, 222, 223, 227, 228, 230, 235, 236, 240, 243, 247, 252, 258, 263, 265, 266, 271, 286, 291, 292], "normal_closur": 60, "normal_distribut": 247, "normal_lin": 79, "normal_matrix": 46, "normal_vector": [83, 165], "normaldistribut": [13, 247], "normaldistributionfunct": 247, "normalform": [106, 216], "normalgamma": 247, "normalhandl": 46, "normalis": [69, 229], "normalize_last": 105, "normalize_theta_set": 235, "normalize_whitespac": 258, "normalpred": 46, "normalpspac": 247, "norman": 96, "normilz": 77, "north": 15, "not_empty_in": [48, 246], "not_in_arg": 50, "not_point": 172, "not_rep": 60, "not_supported_funct": 227, "notabl": [14, 45, 50, 72, 77, 94, 110, 217], "notalgebra": 220, "notarrow": 227, "notat": [16, 20, 29, 33, 36, 38, 55, 57, 61, 62, 68, 69, 70, 74, 77, 94, 101, 105, 111, 125, 136, 190, 201, 202, 207, 211, 214, 227, 234, 239, 246, 252, 253, 265, 278, 295], "note": [2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 22, 23, 26, 27, 30, 31, 32, 34, 35, 36, 37, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 65, 67, 68, 70, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 94, 96, 97, 99, 101, 105, 109, 111, 112, 115, 125, 126, 130, 131, 132, 134, 135, 136, 138, 140, 141, 142, 144, 146, 147, 149, 157, 159, 165, 168, 176, 186, 187, 189, 191, 192, 193, 195, 201, 202, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 228, 229, 230, 233, 235, 237, 239, 240, 242, 243, 244, 245, 246, 247, 252, 253, 256, 258, 259, 260, 261, 262, 263, 265, 266, 268, 276, 278, 280, 291, 292, 294, 295, 296, 298, 299, 300, 301, 305], "notebook": [2, 15, 24, 40, 97, 207, 266, 303, 304], "notequiv": 227, "noth": [12, 13, 29, 49, 60, 69, 96, 135, 176, 192, 214, 218, 226, 227, 239, 243, 245, 256, 258, 266, 268, 297], "notic": [12, 13, 16, 24, 60, 61, 67, 69, 105, 157, 180, 217, 237, 249, 253, 254, 265, 266, 297, 299, 300, 305], "notifi": [4, 111], "notimpl": [79, 222], "notimplementederror": [4, 31, 33, 36, 37, 38, 48, 68, 79, 82, 86, 96, 105, 123, 216, 222, 223, 226, 235, 242, 243, 244, 245, 246], "notimpli": 227, "notin": [59, 94, 235], "notinvert": [214, 220, 223], "notion": [13, 14, 22, 49, 197, 200, 214, 246, 275, 280], "notiter": 265, "notrevers": [220, 223], "novemb": 265, "now": [1, 2, 5, 8, 9, 11, 12, 13, 14, 16, 20, 22, 23, 24, 29, 40, 49, 50, 61, 69, 70, 74, 77, 80, 85, 86, 91, 93, 94, 98, 105, 109, 125, 130, 131, 134, 138, 140, 142, 145, 147, 150, 152, 159, 160, 195, 197, 202, 207, 210, 211, 213, 214, 215, 216, 217, 220, 223, 224, 228, 235, 236, 237, 239, 240, 243, 245, 246, 247, 248, 253, 258, 259, 266, 276, 277, 291, 292, 297, 299, 300, 305, 306], "np": [14, 24, 36, 74, 92, 109, 142, 213, 259, 266, 291, 292], "npartit": [13, 109], "nqubit": [172, 176, 177, 186], "nr": 24, "nright": 246, "nroot": [223, 245], "nrow": [213, 216], "nsa": 70, "nseri": 69, "nsimplifi": [14, 69, 73, 239], "nsolv": [18, 29, 35, 37, 38, 159, 245], "nt": [74, 265], "nth": [20, 69, 74, 77, 98, 109, 218, 223, 224, 233, 239, 243, 247], "nth_algebra": 243, "nth_algebraic_integr": 243, "nth_linear": 243, "nth_linear_constant_coeff_homogen": 243, "nth_linear_constant_coeff_homogeneous_integr": 243, "nth_linear_constant_coeff_undetermined_coeffici": 243, "nth_linear_constant_coeff_variation_of_paramet": 243, "nth_linear_constant_coeff_variation_of_parameters_integr": 243, "nth_linear_euler_eq_homogen": 243, "nth_linear_euler_eq_homogeneous_integr": 243, "nth_linear_euler_eq_nonhomogeneous_undetermined_coeffici": 243, "nth_linear_euler_eq_nonhomogeneous_variation_of_paramet": 243, "nth_linear_euler_eq_nonhomogeneous_variation_of_parameters_integr": 243, "nth_linear_homogeneous_constant_coeff_integr": 243, "nth_order_reduc": 243, "nth_power_roots_poli": 223, "nthalgebra": 243, "ntheori": [46, 60, 69, 70, 74, 220, 223, 240, 265], "nthlinearconstantcoeffhomogen": 243, "nthlinearconstantcoeffundeterminedcoeffici": 243, "nthlinearconstantcoeffvariationofparamet": 243, "nthlineareulereqhomogen": 243, "nthlineareulereqnonhomogeneousundeterminedcoeffici": 243, "nthlineareulereqnonhomogeneousvariationofparamet": 243, "nthorderreduc": 243, "nthroot": 239, "nthroot_mod": 109, "ntop": 105, "ntt": 72, "nu": [5, 16, 74, 77, 96, 109, 193, 215, 227, 239, 247, 253, 299], "nu_1": 215, "nu_2": 215, "nu_i": 215, "nu_n": 215, "nuanc": 14, "null": [16, 69, 105], "nulliti": 216, "nullspac": [105, 216], "nullspace_from_rref": 216, "num": [50, 60, 69, 109, 125, 218, 239, 243, 262, 268, 291, 292], "num_column": [97, 207, 227, 243], "num_digit": [69, 109], "num_input": [27, 125], "num_list": 125, "num_output": [27, 125], "num_qq": 217, "num_zz": 217, "numa": 243, "number": [2, 3, 4, 5, 11, 12, 13, 15, 18, 19, 22, 24, 27, 29, 32, 33, 34, 37, 38, 42, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 74, 75, 77, 79, 82, 83, 84, 85, 86, 88, 96, 97, 98, 99, 101, 104, 105, 106, 108, 110, 111, 115, 116, 118, 121, 123, 125, 126, 127, 129, 130, 135, 136, 140, 142, 146, 156, 157, 159, 165, 168, 171, 172, 175, 176, 177, 178, 180, 181, 186, 187, 188, 189, 190, 192, 193, 194, 197, 200, 201, 202, 206, 207, 208, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 223, 224, 227, 229, 233, 234, 235, 236, 237, 239, 240, 243, 245, 246, 247, 248, 252, 253, 258, 260, 262, 265, 266, 268, 271, 274, 275, 277, 278, 280, 283, 289, 292, 294, 295, 297, 299, 300, 301, 305], "number_cl": 69, "number_field": 222, "number_theori": 74, "numbered_symbol": [228, 239, 243, 265], "numberfield": [218, 222, 223], "numberkind": [15, 19, 69, 104, 235], "numbersymbol": [69, 227], "numbertheoretictransform": 72, "numbertheori": 240, "numberworld": 109, "numer": [2, 4, 12, 13, 15, 16, 18, 20, 22, 30, 31, 32, 33, 34, 37, 42, 46, 48, 50, 68, 69, 74, 77, 81, 85, 92, 105, 109, 111, 112, 113, 115, 116, 121, 122, 123, 125, 131, 135, 136, 142, 144, 152, 156, 157, 160, 164, 171, 174, 189, 201, 211, 213, 216, 217, 218, 220, 221, 222, 223, 226, 227, 236, 237, 239, 243, 245, 246, 252, 258, 259, 265, 266, 283, 291, 292, 294, 296, 297, 301, 305], "numerical_funct": 294, "numerorum": 262, "numexpr": [2, 266], "numi": 243, "numpad": 213, "numpi": [2, 4, 12, 13, 14, 15, 24, 29, 34, 35, 36, 40, 50, 69, 92, 97, 110, 123, 142, 159, 176, 186, 213, 216, 227, 247, 252, 259, 260, 266, 291, 292, 294, 297], "numpydoc": [4, 5], "numpyprint": 50, "numqubit": 177, "numsampl": 247, "numth": 109, "numz": 125, "nuovo": [197, 212], "nutshel": 14, "nvpa": 210, "nvpb": 210, "nwb": 210, "nx": [146, 148, 210, 265], "ny": [146, 148, 202, 210, 218], "nz": [148, 210], "o": [0, 4, 8, 11, 12, 15, 16, 20, 22, 41, 49, 50, 55, 60, 61, 67, 69, 70, 75, 77, 79, 80, 82, 83, 85, 91, 94, 109, 115, 118, 130, 131, 135, 137, 138, 140, 142, 154, 155, 156, 157, 159, 160, 182, 192, 203, 206, 208, 210, 212, 220, 221, 223, 224, 227, 229, 234, 237, 243, 247, 252, 258, 265, 268, 274, 277, 291, 292, 295], "o2": [11, 234], "o____________________________________________________": 118, "o_from": 220, "o_to": 220, "oa": 277, "oabc": 277, "ob": 247, "obei": [4, 77, 212, 227, 237], "obextj": 281, "obj": [4, 14, 22, 69, 218, 223, 227, 261], "object": [2, 3, 4, 5, 7, 11, 12, 15, 16, 21, 22, 23, 24, 27, 36, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 59, 60, 61, 62, 63, 64, 68, 69, 71, 74, 75, 77, 79, 80, 81, 82, 84, 85, 86, 94, 96, 99, 101, 102, 104, 105, 110, 111, 115, 116, 117, 118, 121, 123, 125, 126, 129, 131, 135, 136, 137, 138, 140, 141, 142, 146, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 165, 166, 167, 175, 176, 178, 186, 187, 191, 192, 194, 195, 196, 198, 199, 202, 206, 207, 210, 211, 213, 214, 215, 216, 217, 218, 220, 222, 223, 227, 229, 230, 233, 234, 235, 236, 239, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 258, 259, 260, 261, 262, 265, 266, 269, 274, 275, 276, 281, 282, 286, 292, 294, 295, 297, 299, 300, 301, 304, 305], "oblig": 213, "obscur": [13, 22], "observ": [65, 69, 91, 94, 181, 211, 214, 237, 240, 243, 247, 280, 305], "obsolet": 13, "obstacl": [94, 138], "obstacle_set_pathwai": 138, "obstaclesetpathwai": [138, 292], "obtain": [5, 15, 16, 18, 20, 27, 32, 33, 38, 44, 45, 49, 51, 53, 60, 61, 62, 65, 69, 70, 72, 73, 74, 75, 77, 79, 80, 82, 83, 85, 91, 94, 96, 98, 105, 108, 109, 122, 125, 135, 152, 155, 165, 187, 192, 197, 201, 214, 215, 218, 220, 222, 223, 226, 228, 235, 236, 237, 239, 240, 243, 244, 245, 246, 265, 267, 268, 275, 276], "obtaining_all_solutions_of_a_linear_system": 105, "obtus": 82, "obviou": [22, 23, 24, 34, 52, 60, 68, 214, 217, 226, 240, 299], "obvious": [5, 12, 51, 60, 195, 210, 217, 237], "oc": [227, 277], "occasion": [11, 12, 69], "occup": 192, "occupi": [109, 192, 253], "occur": [4, 13, 14, 15, 16, 60, 61, 69, 73, 77, 86, 94, 105, 111, 129, 134, 156, 201, 202, 210, 222, 230, 239, 244, 245, 248, 249, 258, 265, 292, 300], "occurr": [50, 51, 69, 109, 142, 202, 239, 247], "oct": 109, "octahedr": 62, "octahedron": 96, "octav": [50, 159, 260], "octave_cod": [50, 227], "octavecodegen": 260, "octavecodeprint": 227, "octnam": 260, "octob": 126, "od": [4, 12, 15, 24, 92, 135, 140, 152, 159, 241, 244, 283, 306], "odd": [19, 22, 32, 43, 45, 46, 47, 57, 61, 69, 70, 74, 75, 77, 99, 108, 109, 126, 212, 222, 223, 227, 245], "oddbal": 69, "oddhandl": 46, "oddpred": 46, "ode0106": 243, "ode0123": 243, "ode_": 243, "ode_1st_homogeneous_coeff_best_integr": 243, "ode_1st_power_seri": 243, "ode_2nd_power_series_ordinari": 243, "ode_2nd_power_series_regular": 243, "ode_hintnam": 243, "ode_ord": [243, 244, 245], "ode_problem": 243, "ode_sol_simpl": 243, "odeadvisor": 243, "odel": 105, "odenonlinearerror": 243, "odeordererror": 243, "odesimp": 243, "oei": [55, 74, 77, 109, 223], "oeyag": 70, "of_typ": [217, 218], "ofcours": 275, "off": [14, 69, 79, 94, 105, 108, 110, 144, 153, 176, 214, 223, 227, 243, 258, 271, 299], "off_circl": 83, "offer": [5, 14, 49, 50, 60, 69, 110, 129, 159, 201, 211, 217, 222, 262, 279, 292], "offici": [16, 26, 40, 69, 129, 159, 201, 211, 246, 266, 303], "offset": [49, 50, 69, 74, 77, 130, 252], "offshor": 119, "ofix": 210, "often": [3, 4, 11, 12, 14, 15, 22, 23, 24, 29, 35, 49, 50, 51, 59, 69, 77, 79, 81, 94, 96, 105, 109, 110, 125, 135, 136, 152, 156, 157, 210, 211, 214, 215, 216, 217, 220, 223, 228, 234, 235, 240, 243, 247, 265, 266, 294, 299, 300, 301, 305], "oh": 295, "oil": 7, "ok": [11, 12, 13, 50, 61, 227, 243], "okai": [14, 70], "old": [3, 12, 13, 15, 16, 69, 70, 71, 97, 156, 161, 197, 207, 213, 214, 218, 227, 228, 239, 243, 246, 248, 294], "old_assumpt": 181, "old_frac_field": [217, 218], "old_fractionfield": 217, "old_poly_r": [91, 92, 214, 217, 218], "old_polynomialr": 217, "oldchar": 268, "older": [3, 5, 12, 15, 92, 142, 217, 227, 245], "oldid": 61, "olga": 222, "ollwd": 70, "omega": [16, 50, 51, 60, 74, 94, 105, 109, 125, 131, 137, 140, 157, 160, 166, 168, 193, 202, 206, 207, 210, 212, 227, 234, 247], "omega_": 94, "omicron": [16, 227], "omit": [4, 13, 22, 24, 50, 61, 68, 69, 70, 74, 94, 96, 99, 105, 194, 216, 227, 228, 235, 237, 245, 251, 260, 265, 295], "omposit": 229, "on_circl": 83, "on_morph": 84, "onc": [3, 8, 9, 11, 12, 14, 15, 16, 22, 23, 24, 50, 52, 53, 60, 65, 69, 70, 74, 77, 85, 94, 96, 110, 118, 132, 134, 152, 156, 197, 202, 204, 211, 213, 215, 217, 223, 227, 228, 236, 237, 239, 243, 246, 253, 265, 275, 291, 294, 295, 305, 306], "ond": 0, "one": [2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 18, 20, 22, 23, 24, 26, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 45, 46, 48, 49, 50, 52, 53, 55, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 77, 79, 80, 81, 82, 83, 85, 86, 91, 92, 93, 94, 96, 97, 98, 99, 101, 103, 105, 108, 109, 110, 111, 112, 115, 117, 118, 119, 121, 122, 123, 125, 126, 129, 130, 131, 134, 135, 137, 138, 140, 141, 142, 143, 146, 156, 157, 159, 161, 164, 165, 166, 172, 177, 186, 190, 192, 194, 195, 196, 197, 200, 201, 202, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 234, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 248, 251, 253, 254, 258, 259, 260, 262, 265, 266, 268, 271, 276, 278, 280, 291, 292, 293, 294, 295, 297, 299, 300, 301, 303, 304, 305], "one_half": 69, "one_qubit_box": 172, "oneform": 71, "onelin": 9, "onematrix": 227, "onequbitg": 176, "ones": [2, 3, 13, 14, 24, 40, 50, 60, 65, 69, 94, 96, 99, 101, 105, 108, 109, 115, 142, 165, 186, 192, 196, 216, 220, 230, 240, 243, 248, 254, 260, 268, 271, 276, 301, 304], "oneshot": 186, "onli": [3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 29, 32, 33, 34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 82, 83, 85, 86, 87, 92, 94, 96, 97, 98, 99, 104, 105, 106, 109, 110, 111, 112, 115, 121, 123, 125, 131, 132, 134, 135, 137, 138, 141, 142, 144, 145, 146, 148, 149, 151, 153, 154, 156, 157, 160, 165, 167, 186, 187, 191, 192, 194, 197, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 243, 244, 245, 247, 248, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 263, 265, 266, 267, 271, 274, 276, 278, 280, 281, 291, 292, 294, 295, 297, 298, 300, 301, 305, 306], "onlin": [2, 4, 135, 240, 265], "onlinelibrari": 247, "only_alt": 60, "only_doubl": 94, "only_integ": 213, "only_sym": 60, "onset": 165, "onto": [70, 82, 83, 84, 94, 98, 105, 108, 110, 222], "oo": [4, 14, 15, 18, 22, 23, 27, 31, 46, 48, 68, 69, 73, 74, 75, 77, 82, 94, 96, 99, 105, 125, 127, 178, 190, 193, 223, 232, 233, 234, 235, 239, 242, 243, 245, 246, 247, 252, 265, 268, 295, 299], "oohai": 227, "ooo": 265, "oooo": [118, 265], "oop": 297, "op": [14, 50, 69, 105, 181, 192, 206, 210, 236, 265, 266], "op_point": [135, 136, 146, 156], "opaqu": [94, 227], "opathwai": 292, "open": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 33, 34, 35, 37, 40, 48, 69, 71, 75, 96, 99, 125, 142, 145, 159, 227, 235, 242, 246, 247, 299, 301], "openview": 247, "oper": [2, 4, 9, 14, 15, 22, 23, 24, 34, 35, 36, 38, 42, 46, 48, 50, 60, 61, 62, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 87, 89, 92, 94, 99, 101, 109, 111, 113, 125, 126, 129, 135, 136, 146, 150, 156, 157, 159, 164, 168, 169, 173, 175, 176, 177, 178, 183, 184, 187, 189, 190, 191, 192, 202, 204, 209, 214, 215, 216, 217, 218, 220, 222, 223, 224, 227, 230, 232, 235, 236, 239, 242, 243, 245, 246, 249, 250, 251, 252, 258, 259, 262, 265, 266, 271, 282, 286, 288, 289, 292, 296, 297, 298, 300, 305], "operand": [13, 16, 61, 69, 203, 217, 218, 222, 274], "operar": 69, "operationnotsupport": 220, "operator_": 181, "operator_to_st": 187, "operatornam": [24, 42, 74, 75, 77, 94, 96, 212, 215, 223, 227, 230, 235, 237, 245], "operators_to_st": 182, "operatorset": [170, 182], "opinion": [17, 39], "oplu": [99, 176], "oppenheim": 262, "opportun": [3, 4, 239], "opportunist": 50, "oppos": [50, 130, 266, 291, 295], "opposit": [27, 29, 65, 85, 99, 105, 130, 131, 138, 141, 145, 215, 218, 235, 239, 246, 254, 265, 271, 273, 291, 292, 305], "opqrstuvwxi": 70, "opt": [115, 214, 216, 220, 239, 258, 292, 301], "opt2": 50, "opt_cs": [4, 239], "opt_sub": 239, "optic": [28, 163, 164, 165, 166, 288], "optical_medium": 163, "optim": [4, 15, 35, 50, 53, 60, 73, 99, 109, 112, 113, 115, 129, 159, 172, 176, 216, 223, 227, 228, 236, 239, 247, 259, 291, 292], "optimal_fiber_length": [115, 292], "optimal_pennation_angl": [115, 292], "optimis": [22, 243], "optims_c99": 50, "option": [3, 4, 5, 8, 11, 12, 14, 16, 24, 26, 29, 31, 43, 45, 48, 50, 60, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 82, 83, 85, 86, 88, 96, 97, 101, 105, 106, 109, 110, 111, 117, 123, 125, 129, 130, 131, 132, 134, 135, 136, 137, 140, 157, 159, 165, 176, 181, 182, 184, 187, 189, 194, 196, 201, 202, 207, 213, 214, 215, 216, 217, 218, 222, 223, 224, 226, 227, 228, 229, 230, 232, 234, 235, 236, 239, 240, 243, 244, 245, 246, 247, 249, 252, 253, 258, 259, 260, 263, 265, 266, 271, 298, 304, 305], "optionerror": 220, "optionflag": 258, "oq": 210, "oracl": 177, "oracleg": 177, "orang": 123, "orb": 60, "orbit": [60, 67, 192, 193, 195], "orbit_rep": 60, "orbit_transvers": 60, "ord": [65, 70, 105], "order": [2, 3, 4, 5, 11, 12, 14, 15, 16, 18, 20, 22, 23, 27, 29, 31, 36, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 82, 85, 86, 88, 91, 94, 96, 97, 98, 99, 105, 106, 109, 110, 111, 112, 115, 117, 118, 119, 125, 126, 129, 130, 134, 135, 140, 142, 143, 144, 153, 154, 155, 156, 157, 165, 169, 173, 176, 186, 187, 188, 189, 190, 191, 192, 196, 197, 201, 202, 204, 206, 207, 210, 211, 213, 214, 215, 216, 217, 218, 220, 222, 224, 226, 227, 228, 229, 230, 233, 235, 239, 240, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 258, 259, 260, 262, 265, 266, 268, 271, 273, 275, 276, 281, 291, 295, 297, 298, 300, 304, 305, 306], "order_equation_with_variable_coeffici": 243, "order_symbol": 69, "ordered_flag": 265, "ordered_partit": 265, "ordering_of_class": [69, 80], "ordin": [213, 243, 268], "ordinari": [2, 22, 23, 30, 48, 50, 60, 69, 73, 74, 75, 77, 87, 91, 92, 96, 106, 112, 115, 125, 152, 214, 216, 217, 226, 233, 243, 248, 262, 292, 299, 305], "ordinarili": 222, "org": [0, 2, 4, 5, 11, 12, 16, 22, 24, 42, 44, 45, 46, 48, 49, 50, 52, 53, 55, 57, 58, 60, 61, 68, 69, 70, 71, 72, 74, 75, 77, 79, 81, 85, 86, 87, 96, 97, 98, 99, 101, 105, 109, 123, 125, 127, 128, 161, 163, 164, 165, 167, 168, 169, 173, 174, 175, 178, 180, 181, 190, 192, 202, 204, 207, 209, 216, 218, 221, 223, 227, 230, 234, 235, 236, 239, 240, 243, 246, 247, 259, 260, 261, 263, 265, 271, 273, 277, 279, 281, 301, 304], "organ": [7, 11, 152, 292], "orient": [13, 42, 81, 85, 105, 134, 138, 142, 144, 146, 149, 153, 157, 159, 202, 206, 208, 210, 211, 220, 265, 271, 272, 279, 280, 286, 291], "orient_axi": [13, 131, 134, 201, 202, 204, 291, 292], "orient_body_fix": 202, "orient_dcm": 202, "orient_new": [271, 273], "orient_new_": 276, "orient_new_axi": [271, 274, 276], "orient_new_bodi": [271, 276], "orient_new_quaternion": [271, 276], "orient_new_spac": [271, 276], "orient_quaternion": 202, "orient_space_fix": 202, "orientnew": [138, 144, 146, 149, 150, 151, 156, 160, 202, 204, 206, 208, 210, 211], "orig": 220, "orig_expr": 187, "orig_ext": 218, "orig_frac": 305, "origin": [9, 11, 12, 15, 16, 20, 22, 32, 40, 42, 60, 61, 62, 65, 68, 69, 70, 73, 74, 75, 77, 78, 80, 82, 84, 94, 96, 105, 109, 112, 113, 115, 123, 125, 126, 134, 141, 146, 156, 159, 184, 187, 197, 203, 208, 213, 214, 216, 218, 222, 223, 226, 227, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 253, 258, 265, 266, 271, 274, 275, 276, 277, 278, 280, 281, 291, 292, 305], "origin_angl": 291, "origin_dist": 291, "origin_segment_length": 291, "origsit": 247, "orlando": 221, "ormv": 70, "orszag": 243, "orthocent": 85, "orthogon": [42, 46, 84, 98, 105, 190, 202, 211, 271, 273], "orthogonal_direct": 84, "orthogonal_matrix": 46, "orthogonalbra": 190, "orthogonalhandl": 46, "orthogonalket": 190, "orthogonalpolynomi": 5, "orthogonalpred": 46, "orthogonalst": 190, "orthonorm": [105, 159, 187, 211, 275], "orthopoli": [77, 223], "osc": [69, 73], "oscar": [12, 212], "oscil": [69, 288], "oscillatori": [69, 73, 232], "osi": 70, "osineq": 16, "ostrogradski": 96, "other": [3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 23, 25, 29, 31, 32, 33, 34, 36, 37, 38, 42, 46, 48, 49, 50, 51, 52, 55, 60, 61, 62, 65, 66, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 94, 96, 99, 101, 105, 109, 110, 111, 116, 117, 118, 119, 125, 129, 130, 131, 133, 134, 135, 138, 140, 141, 142, 143, 146, 147, 152, 153, 156, 157, 159, 161, 164, 165, 166, 176, 187, 189, 190, 191, 192, 195, 196, 197, 198, 199, 201, 202, 204, 206, 210, 211, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 227, 228, 229, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 253, 254, 256, 259, 260, 261, 262, 265, 266, 271, 274, 275, 278, 280, 282, 288, 289, 292, 294, 295, 297, 299, 300, 301, 305], "otherfram": [202, 271], "otherpoint": 206, "otherwis": [2, 3, 12, 14, 18, 22, 23, 24, 48, 49, 50, 60, 61, 65, 68, 69, 70, 73, 75, 77, 78, 79, 82, 83, 84, 85, 94, 96, 98, 99, 100, 105, 108, 109, 111, 123, 125, 127, 131, 140, 141, 142, 177, 182, 188, 206, 209, 210, 213, 214, 216, 218, 220, 222, 223, 225, 227, 229, 230, 232, 233, 235, 239, 240, 243, 244, 245, 246, 247, 248, 256, 258, 260, 265, 266, 294, 295, 304], "otim": [201, 248, 249], "our": [5, 11, 13, 14, 20, 24, 40, 50, 69, 77, 94, 105, 109, 115, 135, 140, 145, 147, 197, 201, 210, 211, 213, 214, 216, 218, 222, 223, 224, 227, 234, 237, 240, 243, 246, 258, 291, 292, 294, 297, 298, 300, 305], "out": [5, 11, 12, 13, 16, 22, 23, 24, 32, 49, 50, 60, 61, 69, 70, 71, 74, 77, 85, 94, 96, 101, 105, 109, 111, 117, 125, 126, 142, 144, 146, 149, 157, 159, 169, 173, 184, 187, 189, 191, 192, 214, 215, 216, 217, 218, 222, 223, 224, 225, 227, 228, 234, 237, 239, 243, 248, 249, 258, 260, 265, 266, 292, 297, 299, 300, 304, 305], "out1": 105, "out2": 105, "out_8598435338387848786": [50, 260], "outcom": [99, 195, 247], "outdat": 12, "outer": [36, 96, 111, 131, 137, 157, 159, 175, 180, 181, 201, 202, 204, 206, 211, 229, 235, 251, 271, 274, 275], "outer_product": 181, "outermost": [227, 235, 239, 251], "outerproduct": [175, 181], "outfram": 206, "outlier": 247, "outlin": [0, 2, 3, 11, 14, 22, 24, 67, 96, 214, 243], "outof": 211, "outperform": 50, "output": [2, 4, 5, 11, 12, 13, 14, 16, 17, 20, 22, 24, 27, 33, 36, 38, 49, 50, 69, 70, 77, 93, 96, 97, 99, 101, 105, 109, 110, 111, 122, 125, 135, 140, 142, 150, 156, 159, 160, 164, 165, 176, 188, 192, 201, 202, 206, 207, 208, 211, 217, 220, 223, 227, 228, 237, 239, 240, 242, 243, 245, 247, 252, 258, 259, 260, 262, 265, 266, 271, 292, 297, 299, 300, 301, 304, 305, 306], "output_eqn": 140, "outputargu": [50, 260], "outputbuff": 227, "outputcheck": 258, "outputtexfil": 227, "outright": 246, "outsid": [4, 33, 46, 60, 69, 77, 80, 85, 105, 109, 129, 197, 211, 223, 239, 295, 300], "outweigh": 214, "over": [3, 5, 6, 7, 10, 11, 12, 13, 14, 16, 19, 24, 29, 32, 39, 42, 48, 49, 50, 51, 60, 61, 64, 68, 69, 70, 71, 72, 73, 74, 83, 85, 92, 94, 98, 99, 101, 105, 106, 109, 117, 118, 121, 127, 134, 140, 142, 159, 160, 171, 187, 190, 192, 196, 197, 208, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 230, 232, 234, 239, 240, 242, 243, 245, 246, 247, 248, 249, 251, 252, 261, 265, 266, 271, 274, 278, 281, 291, 292, 299, 303, 305], "over_power_basi": 222, "overal": [69, 199, 213, 245], "overcompens": 70, "overconstrain": 37, "overdetermin": [35, 216, 245, 246], "overflow": [50, 262], "overhang": [117, 118], "overhead": [70, 110, 224], "overlap": [81, 86, 108, 214, 235, 268], "overleaf": 5, "overli": [35, 138], "overlin": [5, 22, 77, 111], "overload": [214, 217, 218, 275, 291, 300], "overrid": [14, 15, 16, 50, 69, 78, 79, 85, 111, 190, 216, 227, 252, 259, 260, 265, 266, 292], "overridden": [200, 214, 229, 305], "overview": [11, 215, 246, 279, 280], "overwrit": [145, 159, 201], "overwritten": 142, "own": [2, 4, 9, 11, 12, 14, 16, 24, 44, 53, 60, 61, 69, 85, 111, 113, 118, 134, 142, 159, 222, 227, 234, 239, 243, 262, 265, 266, 292, 299], "ownership": 216, "oxford": 105, "oyvind": 11, "p": [0, 8, 12, 13, 14, 15, 16, 20, 22, 23, 24, 27, 29, 30, 32, 42, 44, 45, 46, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 74, 75, 77, 79, 82, 83, 84, 85, 86, 91, 92, 94, 96, 101, 105, 109, 111, 112, 115, 117, 118, 119, 121, 125, 126, 130, 131, 134, 135, 136, 137, 138, 140, 142, 145, 146, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 171, 190, 192, 197, 203, 206, 208, 210, 212, 213, 215, 216, 217, 220, 221, 223, 224, 227, 229, 230, 234, 235, 237, 239, 240, 243, 245, 246, 247, 248, 252, 253, 265, 271, 274, 275, 276, 277, 278, 280, 291, 292, 301, 305], "p0": [65, 79, 222, 243], "p1": [51, 60, 61, 65, 68, 79, 81, 82, 83, 84, 85, 117, 125, 131, 134, 137, 141, 146, 159, 161, 206, 210, 213, 217, 218, 220, 224, 236, 247, 248, 291, 292], "p10": 60, "p11": 81, "p12": 81, "p13": 81, "p1_frame": 134, "p1_pt": 137, "p2": [23, 60, 61, 68, 79, 81, 82, 83, 84, 85, 117, 125, 131, 134, 137, 141, 159, 206, 210, 213, 217, 218, 220, 224, 236, 247, 291, 292], "p20": 60, "p21": 81, "p22": 81, "p23": 81, "p2_pt": 137, "p3": [68, 79, 81, 82, 84, 85, 125, 137, 210, 213, 217, 236, 247, 291], "p3_pt": 137, "p4": [79, 82, 84, 85, 137, 213, 291], "p4_pt": 137, "p5": [82, 84, 85, 213], "p6": [82, 85, 213], "p64": 218, "p7": [82, 85, 213], "p8": 213, "p9": 213, "p90": 69, "p_": [60, 65, 69, 96, 197, 240, 243, 248], "p_0": [60, 65, 87, 237, 240], "p_1": [60, 65, 70, 74, 87, 109, 210, 237, 240, 291], "p_2": [60, 70, 74, 87, 109, 210, 237, 291], "p_3": [70, 210, 291], "p_4": 291, "p_a": 216, "p_a_b": 216, "p_dom": 217, "p_domain": 218, "p_expr": [217, 218], "p_frame": 134, "p_i": [60, 65, 74, 109], "p_invers": 243, "p_j": [60, 65], "p_k": [60, 74, 109], "p_m": 77, "p_masscent": 134, "p_mat": 27, "p_n": [70, 74, 77, 96, 223], "p_new": 247, "p_o_p": 142, "p_o_q": 159, "p_p": 60, "p_p_q": 159, "p_p_r": 142, "p_pt": 142, "p_q": 237, "p_r": 87, "p_so_o": 142, "p_val": [32, 291, 292], "p_x": 253, "p_y": 253, "p_z": 253, "pa": [105, 113, 130, 135, 137, 138, 154, 157, 160, 210, 292], "packag": [2, 7, 8, 9, 11, 12, 28, 30, 34, 35, 40, 97, 110, 111, 122, 152, 159, 207, 227, 258, 277, 278, 291, 292, 299], "pad": [16, 50, 70, 71, 72, 84, 109], "padded_kei": 70, "pafnuti": 5, "page": [0, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 22, 23, 29, 30, 32, 33, 37, 39, 50, 51, 52, 68, 74, 94, 109, 110, 134, 135, 159, 197, 211, 213, 216, 217, 218, 221, 227, 237, 240, 263, 280, 305], "page52": 197, "page78": 197, "page_228": 77, "page_888": 96, "pai": 48, "pain": 3, "pair": [4, 14, 16, 20, 29, 32, 49, 50, 60, 61, 69, 70, 75, 81, 86, 93, 105, 109, 113, 130, 138, 141, 142, 146, 157, 182, 184, 186, 187, 192, 212, 214, 216, 217, 218, 220, 222, 223, 228, 233, 234, 236, 237, 239, 240, 243, 246, 247, 260, 265, 275, 292, 294, 301], "pairwis": [5, 46, 49, 69, 74, 86, 105, 109, 240, 245], "pakianathan": 55, "palancz08": 221, "palimpsest": 70, "palindrom": 109, "pal\u00e1ncz": 221, "panagioti": 223, "pankowski": 11, "papadopoulo": 158, "paper": [0, 4, 26, 105, 109, 144, 211, 222, 223, 236, 237, 240, 243, 292], "paperforkcgx": 144, "paperforkcgz": 144, "paperforkl": 144, "paperframecgx": 144, "paperframecgz": 144, "paperradfront": 144, "paperradrear": 144, "paperwb": 144, "paprocki": 0, "parabol": 117, "parabola": 271, "paradigm": 14, "paragraph": [3, 4, 5, 24, 49], "parallel": [42, 79, 82, 83, 85, 96, 122, 125, 128, 138, 141, 210, 211, 216, 220, 277, 281, 291, 292], "parallel_axi": [131, 137], "parallel_lin": 82, "parallel_plan": 83, "parallel_poly_from_expr": 223, "parallelogram": 211, "param": [50, 71, 105, 213, 240], "param_circl": 281, "paramet": [3, 5, 12, 13, 14, 15, 16, 29, 35, 37, 42, 43, 45, 48, 50, 51, 52, 55, 60, 61, 65, 67, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 92, 94, 96, 97, 99, 101, 104, 105, 106, 108, 109, 111, 113, 115, 117, 119, 121, 123, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 144, 159, 161, 163, 164, 165, 167, 168, 169, 171, 172, 173, 175, 176, 177, 180, 181, 182, 184, 186, 187, 189, 190, 191, 192, 193, 194, 196, 202, 203, 204, 206, 207, 208, 211, 212, 213, 215, 216, 218, 220, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 239, 240, 242, 243, 244, 245, 247, 248, 249, 252, 253, 256, 258, 259, 260, 262, 263, 265, 266, 271, 273, 274, 275, 276, 281, 291, 292, 295, 300], "parameter": [32, 71, 78, 79, 82, 85, 240, 292], "parameter_valu": [80, 83], "parametr": [50, 77, 78, 82, 105, 115, 213, 240, 246, 271, 274, 281], "parametric2dlineseri": 213, "parametric3dlineinteractiveseri": 213, "parametric3dlineseri": 213, "parametricintegr": 271, "parametricregion": [271, 274, 281], "parametricsurfaceseri": 213, "parametris": [69, 235], "parametrize_ternary_quadrat": 240, "paraxi": [161, 165], "pare1970": 49, "pareigi": 49, "paren": 227, "parent": [13, 60, 69, 92, 130, 134, 140, 153, 202, 206, 217, 218, 222, 258, 262, 271, 275, 276, 291], "parent_axi": [13, 134, 291], "parent_force_direction_vector": 291, "parent_fram": [13, 153], "parent_interfram": [13, 134, 147, 153], "parent_joint_po": [13, 134], "parent_point": [13, 134, 145, 147, 153], "parent_tangency_point": 291, "parent_vector": 134, "parenthes": [4, 12, 16, 69, 111, 129, 180, 181, 211, 227, 251, 268], "parenthesi": [227, 251], "parenthesize_sup": 227, "pareto": 247, "pareto_distribut": 247, "paretodistribut": 247, "parg": 77, "pariti": [13, 22, 61, 69, 223], "parity_": [22, 69], "park": 70, "pars": [12, 13, 14, 61, 69, 101, 142, 153, 224, 226, 282, 290], "parsabl": 15, "parse_autolev": 142, "parse_c": 2, "parse_expr": [2, 13, 14, 22, 38, 69, 111], "parse_latex": [38, 111], "parse_latex_lark": 111, "parse_mathematica": [2, 13, 111], "parse_maxima": [2, 111], "parser": [2, 101, 152, 159, 258, 288], "part": [2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 22, 23, 24, 29, 42, 47, 60, 61, 68, 69, 70, 74, 75, 77, 85, 92, 94, 96, 99, 101, 105, 109, 112, 115, 125, 129, 131, 134, 135, 140, 142, 144, 150, 152, 153, 157, 159, 176, 188, 192, 201, 211, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 228, 235, 237, 239, 240, 243, 245, 258, 260, 262, 265, 295, 300, 305], "part1": 134, "part2": 134, "part_sol": 243, "partcompon": 262, "partfrac": [223, 229], "parti": [140, 263], "partial": [8, 15, 48, 60, 67, 68, 69, 71, 73, 74, 75, 109, 111, 159, 186, 202, 206, 208, 216, 218, 221, 224, 227, 229, 236, 239, 243, 244, 248, 254, 271, 278, 295, 305], "partial_list": 223, "partial_veloc": [159, 202, 206], "partialderiv": 254, "particip": 7, "particl": [13, 131, 134, 135, 137, 140, 142, 146, 147, 152, 154, 156, 159, 160, 168, 171, 178, 179, 190, 192, 195, 197, 210, 253, 288, 292], "particle_p": 142, "particle_r": 142, "particular": [3, 4, 11, 12, 13, 15, 16, 22, 23, 30, 32, 46, 51, 60, 69, 70, 73, 77, 80, 94, 96, 99, 101, 105, 109, 117, 121, 152, 176, 187, 215, 216, 217, 218, 220, 222, 223, 233, 235, 237, 239, 240, 243, 245, 246, 258, 260, 262, 301, 303, 305], "particularli": [12, 14, 22, 73, 96, 217, 218, 237, 305, 306], "partit": [5, 56, 60, 74, 109, 146, 156, 158, 240, 247, 262, 283], "partition_": [58, 74], "partitionfunctionp": 109, "partitions_": [13, 109], "pascal": [74, 109], "pass": [2, 3, 4, 11, 12, 14, 15, 16, 18, 19, 22, 23, 24, 31, 32, 35, 36, 38, 41, 42, 45, 48, 49, 50, 60, 61, 69, 70, 71, 73, 75, 76, 77, 79, 82, 83, 85, 96, 97, 99, 101, 105, 106, 109, 111, 113, 115, 117, 123, 125, 130, 131, 135, 138, 140, 141, 142, 146, 157, 159, 160, 164, 181, 182, 186, 187, 189, 190, 207, 213, 214, 216, 217, 218, 220, 222, 223, 225, 227, 228, 234, 235, 239, 240, 243, 244, 245, 246, 247, 248, 251, 252, 253, 256, 258, 259, 260, 261, 263, 265, 266, 268, 270, 271, 292, 294, 295, 300, 304, 305, 306], "passiv": [113, 115, 189, 291], "past": [11, 12, 16, 75, 109, 226, 227, 304], "pastabl": 268, "pat_matrix": 128, "patashnik": 61, "patch": [13, 71, 227], "path": [4, 8, 12, 13, 60, 85, 91, 111, 125, 138, 141, 150, 208, 210, 213, 236, 239, 243, 246, 258, 259, 262, 263, 265, 268, 269, 278, 291, 292], "pathsep": 268, "pathwai": [115, 130, 133, 141, 152, 288, 291], "pathwaybas": [115, 130, 138, 291, 292], "patrizia": 245, "pattern": [11, 12, 13, 15, 16, 22, 24, 69, 94, 96, 99, 105, 111, 186, 217, 237, 239, 243, 245, 295, 300], "paul": [74, 262], "paulbourk": 85, "pauli": [128, 288], "pauli_matric": [128, 167], "paulialgebra": 167, "paulimatric": 167, "pb": [130, 138, 164, 210], "pc": [134, 138, 224], "pc_group": 59, "pc_present": 59, "pc_resent": 59, "pc_sequenc": [59, 60], "pc_seri": [59, 60], "pcg": 59, "pcgroup": 59, "pd": 138, "pdb": 258, "pde": [241, 243, 283], "pde_1st_linear_constant_coeff": 244, "pde_1st_linear_constant_coeff_homogen": 244, "pde_1st_linear_variable_coeff": 244, "pde_hint": 244, "pde_hintnam": 244, "pde_separ": 244, "pde_separate_add": 244, "pde_separate_mul": 244, "pdf": [2, 5, 7, 27, 36, 39, 48, 49, 60, 70, 72, 74, 91, 96, 105, 109, 117, 118, 121, 123, 125, 213, 216, 218, 221, 226, 227, 230, 236, 239, 240, 243, 247, 265, 271, 291, 292], "pdiv": [218, 223], "pdp": 301, "pdsolv": 244, "pe": 68, "peak": [115, 161, 292], "peak_isometric_forc": [115, 292], "pearc": 239, "pearson": 247, "peculiar": [94, 211], "pedregosa": 0, "peek": [262, 305], "peerj": [0, 7], "pell": 240, "penalti": 129, "pendent": 159, "pendulum": [13, 36, 134, 140, 143, 145, 147, 152, 156, 160, 210, 288], "pendulum_izz": 13, "pendulum_joint": 134, "pendulum_mass": 13, "pennat": [115, 292], "penros": [34, 101, 105], "penrose_pseudoinvers": 105, "pent": 80, "pentagonal_number_theorem": 74, "peopl": [3, 4, 7, 9, 11, 72, 77, 96, 105, 197, 247], "pep": [5, 50, 69, 99], "per": [3, 70, 105, 110, 121, 135, 138, 166, 196, 202, 208, 213, 218, 223, 224, 271, 275, 277, 280, 292], "percent": [105, 246], "percentag": [105, 109], "perfect": [4, 24, 36, 60, 69, 109, 240, 246, 299, 300], "perfect_numb": 109, "perfect_pow": [69, 109], "perfectli": [14, 61, 68, 69, 70, 220, 223, 226], "perfectnumb": 109, "perform": [2, 11, 12, 13, 14, 15, 16, 19, 20, 22, 24, 47, 49, 50, 51, 60, 61, 64, 68, 69, 70, 72, 73, 75, 82, 86, 93, 96, 102, 105, 109, 110, 132, 135, 144, 146, 152, 156, 157, 159, 176, 177, 186, 189, 192, 208, 211, 215, 216, 217, 220, 222, 223, 228, 229, 230, 234, 239, 240, 243, 245, 246, 247, 248, 259, 265, 271, 273, 275, 278, 294, 295, 299, 300, 305], "perhap": [11, 13, 18, 50, 69, 99, 109, 177, 216, 217, 245, 260, 292, 294], "periapsi": 79, "perimet": 85, "period": [3, 4, 11, 13, 33, 48, 69, 70, 75, 94, 109, 125, 156, 166, 188, 195, 222, 227, 230, 233, 242, 246, 247, 265], "period_find": 188, "periodic_argu": 75, "periodic_continued_fract": 109, "perl": 109, "perm": [57, 59, 60, 61, 62, 67, 74, 101, 105, 248], "perm1": 249, "perm2": 249, "perm2tensor": 253, "perm_cycl": [13, 61, 227], "perm_group": [54, 59, 60, 61, 66, 67], "perm_mat": [135, 136, 156], "perman": [11, 105], "permanent_": 105, "permeabl": 163, "permiss": [109, 212], "permit": [22, 61, 71, 75, 99, 109, 213, 245], "permitt": 163, "permut": [5, 51, 52, 54, 56, 57, 59, 62, 65, 66, 67, 70, 74, 77, 101, 105, 136, 192, 212, 216, 218, 223, 240, 248, 249, 253, 265, 283, 305], "permutation_oper": 192, "permutationgroup": [52, 54, 57, 59, 60, 61, 66, 67, 222], "permutationinvolut": 265, "permutationmatrix": [101, 105], "permutationoper": 192, "permute_backward": 105, "permute_col": 105, "permute_forward": 105, "permute_row": 105, "permute_sign": [240, 265], "permutebkwd": 105, "permutedim": [101, 248, 249], "permutefwd": 105, "permutlist": 192, "perpendicualar": 83, "perpendicular": [79, 82, 83, 85, 98, 134, 141, 150, 165, 211], "perpendicular_bisector": 82, "perpendicular_lin": [82, 83], "perpendicular_plan": 83, "perpendicular_seg": 82, "perri": 216, "persist": 262, "person": [5, 15], "perspect": [99, 109, 125, 197, 213, 260, 276, 280], "pertain": [203, 209], "pertin": [160, 214, 222], "perus": 11, "peter": [68, 74, 77, 109, 158, 209, 216, 223, 265], "peterson": 136, "petkovsek": [68, 245], "pexquo": [218, 223], "pfd": 223, "pfda": 223, "pfister": 221, "pfix": 210, "pfq": 243, "pgl": 52, "pgl2f5": 52, "pgl_2": 52, "pgroup": [60, 62], "phantom": 220, "phase": [11, 27, 69, 96, 123, 161, 164, 166, 176, 177, 246], "phase_retard": 164, "phase_unit": 123, "phase_unwrap": 123, "phaseg": 176, "phdthesisthieu": 243, "phenomenom": 292, "phenomenon": [48, 197, 220, 230, 300], "phi": [16, 60, 69, 70, 74, 77, 94, 98, 105, 109, 127, 159, 166, 175, 177, 212, 214, 222, 227, 243, 271, 281], "phi1": 166, "phi2": 166, "phi_0": 77, "phi_a": 164, "phi_b": 164, "phia": 164, "phib": 164, "phidd": 227, "phil": 212, "philosoph": 15, "philosophi": [196, 243, 246, 288], "php": [61, 109, 240, 247], "phrase": [5, 11, 15, 70], "phy": [171, 197, 212], "physic": [2, 4, 20, 25, 27, 50, 62, 74, 105, 109, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 206, 207, 212, 221, 247, 262, 265, 278, 291, 292, 299, 305], "physicalconst": 196, "pi": [4, 12, 13, 14, 15, 16, 19, 22, 24, 30, 31, 33, 36, 38, 41, 42, 43, 45, 46, 47, 48, 50, 61, 68, 69, 71, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 88, 94, 96, 105, 109, 127, 134, 141, 144, 145, 159, 161, 163, 164, 165, 166, 168, 176, 187, 189, 190, 193, 195, 201, 202, 212, 213, 215, 217, 218, 223, 227, 230, 234, 235, 236, 237, 239, 242, 243, 245, 246, 247, 265, 271, 274, 281, 291, 294, 299, 305], "pi_": 24, "pi_hex_digit": 109, "piab": 183, "piabbra": 183, "piabhamiltonian": 183, "piabket": 183, "pic": 49, "pick": [22, 70, 74, 156, 186, 188, 305], "pickl": 2, "pictori": 117, "pictur": [59, 227], "piec": [69, 73, 237, 260], "piecewis": [14, 23, 24, 50, 68, 74, 77, 96, 99, 117, 190, 227, 229, 230, 245, 246, 247, 266, 295], "piecewise_exclus": 75, "piecewise_fold": 75, "piecewise_integr": 75, "pietjepuk314": 227, "pii": [221, 236], "pin": [13, 42, 117, 118, 121, 130, 134, 140, 291], "pin_joint": 130, "pinjoint": [13, 130, 134, 140, 145, 147, 153], "pinv": [101, 105], "pinv_solv": [100, 105], "pip": [2, 8, 9, 12, 40, 111], "pipe": 258, "pitch": 144, "pitfal": [14, 17, 24, 211, 217, 297, 302, 305], "pivot": [105, 216, 301], "piziak": 105, "pkdata": 13, "pkg": [97, 207], "pl": 11, "place": [5, 7, 9, 11, 12, 13, 14, 15, 16, 22, 24, 33, 39, 49, 61, 62, 69, 70, 75, 85, 100, 105, 108, 109, 111, 112, 125, 159, 160, 216, 221, 222, 227, 228, 234, 236, 239, 243, 262, 265, 293, 294, 301, 305], "placehold": [69, 266], "plai": [22, 68, 144, 154, 240, 297, 299, 300], "plain": [3, 4, 11, 12, 22, 69, 77, 97, 207, 216, 223, 227], "plaintext": [70, 227], "plan": [14, 48, 129, 218, 304], "planar": [79, 85, 118, 134, 165], "planar_coordin": 134, "planar_spe": 134, "planar_vector": 134, "planarjoint": 134, "planck": [199, 247], "planck_const": 174, "plane": [4, 27, 42, 69, 77, 79, 81, 82, 84, 85, 96, 105, 123, 125, 134, 144, 164, 165, 210, 211, 235, 246, 281, 289, 291, 305], "plane_vector": 134, "planet": 152, "planetmath": 243, "plank": 174, "plant": [27, 125], "plant_mat": 125, "plate": 164, "platform": [4, 69, 119, 192, 211, 243, 259], "platon": 62, "plausibl": 214, "pleas": [0, 3, 4, 5, 7, 12, 13, 14, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 46, 48, 69, 77, 81, 94, 109, 129, 135, 142, 152, 156, 157, 164, 165, 186, 201, 211, 212, 213, 214, 220, 221, 235, 239, 240, 245, 246, 266, 271, 276, 302, 306], "plenti": 13, "plot": [4, 24, 27, 36, 40, 78, 79, 81, 82, 85, 92, 97, 105, 117, 118, 121, 124, 159, 176, 179, 185, 230, 282, 288, 289, 291, 292, 299, 304], "plot3d": [105, 213], "plot3d_parametric_lin": 213, "plot3d_parametric_surfac": 213, "plot_bending_mo": [117, 118], "plot_deflect": [117, 118], "plot_direct": 5, "plot_gat": 176, "plot_ild_mo": 117, "plot_ild_react": 117, "plot_ild_shear": 117, "plot_implicit": 213, "plot_interv": [78, 79, 82, 85], "plot_loading_result": [117, 118], "plot_parametr": 213, "plot_shear_forc": [117, 118], "plot_shear_stress": 117, "plot_slop": [117, 118], "plot_traj": 291, "plot_typ": 213, "plotgrid": 117, "plotli": 13, "plt": [36, 92, 159, 291, 292], "plu": [50, 68, 105, 111, 159, 172, 223, 227, 237, 265, 266], "plug": [142, 197], "plural": [4, 5], "pm": [22, 29, 30, 32, 42, 68, 94, 96, 109, 215, 226, 234, 240, 243], "pmatrix": [111, 197], "pmf": 247, "pmint": 96, "pmod": [60, 69, 70, 74, 109, 237, 240], "pn": [60, 146, 156], "pn0": 267, "png": [26, 27, 36, 49, 97, 105, 117, 118, 121, 123, 207, 213, 227, 230, 291, 292], "pnot": 210, "po": [60, 94, 99, 105, 137, 138, 141, 157, 159, 218, 245], "pochhamm": [74, 227, 239], "pochhammer_symbol": 74, "pohlig": 109, "pohst": 222, "poin": 71, "poincar\u00e9": 164, "point": [2, 3, 4, 5, 12, 14, 15, 16, 20, 22, 33, 35, 36, 40, 42, 48, 50, 51, 60, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 91, 92, 93, 94, 96, 105, 109, 111, 113, 115, 117, 118, 119, 121, 123, 125, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 172, 194, 197, 203, 206, 208, 211, 213, 214, 216, 217, 218, 220, 222, 223, 227, 229, 233, 234, 235, 243, 245, 246, 247, 259, 262, 265, 266, 268, 271, 274, 276, 277, 278, 280, 281, 289, 291, 292, 294, 295, 297, 300], "point1": [33, 203, 274], "point2": [33, 203, 274], "point2d": [78, 79, 80, 81, 82, 84, 85, 86], "point3d": [82, 83, 84, 165], "point_1": 141, "point_2": 141, "point_cflexur": 117, "point_load": 119, "point_o": [137, 142], "point_on_surfac": 141, "point_p": 71, "point_r": 71, "point_to_coord": 71, "pointer": [50, 260, 261], "pointer_const": 50, "pointless": 305, "pointload": [117, 118], "pointwis": [60, 67], "pointwise_stabil": 60, "poisson": 247, "poisson_distribut": 247, "poisson_point_process": 247, "poissondistribut": 247, "poissonprocess": 247, "pol": 71, "polar": [71, 75, 77, 79, 85, 117, 127, 162, 213, 235, 239, 246, 288], "polar_lift": [75, 77, 239], "polar_mo": 117, "polar_moment_of_inertia": [79, 85], "polar_second_moment_of_area": [79, 85], "polarcomplexregion": 235, "polaris": 165, "polarizing_beam_splitt": 164, "pole": [4, 13, 15, 27, 77, 94, 125, 134, 165, 234, 237, 243], "pole_color": 123, "pole_markers": 123, "pole_zero_numerical_data": 123, "pole_zero_plot": [27, 123], "poleerror": 69, "poli": [2, 15, 29, 52, 68, 69, 70, 74, 75, 77, 78, 85, 91, 96, 101, 105, 109, 159, 214, 215, 219, 220, 222, 223, 224, 226, 229, 242, 243, 245, 246, 258, 289], "polici": [6, 13, 261, 263], "polificationfail": 220, "polish": 239, "pollard": [109, 243], "pollard_pm1": 109, "pollard_rho": 109, "pollut": 12, "polnomi": 223, "poly1": 85, "poly2": 85, "poly_from_expr": [222, 223], "poly_lc": 220, "poly_r": [217, 218], "poly_tc": 220, "poly_unifi": 218, "polyalphabet": 70, "polybiu": 70, "polyclass": [217, 218, 223], "polyconfig": [220, 223], "polycycl": [56, 60, 283], "polycyclic_group": [59, 60], "polycyclicgroup": 60, "polycyl": 59, "polyel": [217, 218, 220, 224, 225, 227], "polyerror": [29, 220, 223], "polyfunc": [78, 218, 223], "polygamma": [4, 74, 77, 227], "polygamma2": 77, "polygamma_funct": 77, "polygammafunct": 77, "polygon": [4, 79, 80, 81, 86, 213, 281, 289], "polygonmesh": 85, "polygraph": 70, "polyhedr": 62, "polyhedra": 62, "polyhedralgroup": 62, "polyhedron": [56, 60, 96, 265, 283], "polylog": [77, 227], "polylogarithm": 77, "polymatrix": 13, "polymoni": 181, "polynomi": [4, 5, 14, 15, 20, 22, 30, 32, 38, 46, 60, 68, 69, 70, 73, 74, 87, 88, 90, 92, 96, 99, 101, 105, 109, 118, 125, 159, 201, 214, 216, 221, 225, 229, 234, 236, 237, 239, 240, 242, 243, 246, 258, 282, 289, 296, 301, 306], "polynomial_congru": [109, 220], "polynomialerror": [220, 223], "polynomialr": [214, 218, 225], "polyopt": [220, 224], "polyr": [218, 220, 225], "polyroot": 223, "polysi": 245, "polytool": [69, 216, 223, 246], "polytope_integr": 96, "polyu": 125, "pomer": [109, 262], "pone": 42, "poor": [96, 110], "poorer": 48, "pop": [11, 96, 240], "popen": 227, "popul": [113, 115, 247], "popular": [0, 2, 70, 110, 159, 299], "port": [8, 111, 144, 164], "portabl": [258, 259], "portion": [73, 85, 105, 130, 291, 292], "portug": [65, 253], "pos_from": [13, 130, 134, 137, 138, 140, 141, 142, 144, 145, 146, 153, 159, 206, 210, 291, 292], "pos_vec": 137, "posform": 99, "posifi": [22, 239], "posit": [3, 11, 12, 13, 14, 15, 16, 22, 23, 24, 27, 29, 33, 43, 44, 45, 46, 47, 49, 50, 51, 53, 55, 58, 60, 61, 62, 64, 65, 68, 69, 70, 71, 73, 74, 75, 77, 79, 81, 82, 85, 94, 96, 98, 99, 100, 105, 106, 108, 109, 113, 117, 118, 119, 121, 125, 127, 130, 131, 134, 137, 138, 141, 142, 144, 146, 149, 151, 153, 156, 157, 159, 161, 164, 166, 170, 187, 190, 192, 203, 204, 206, 208, 210, 211, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 232, 233, 235, 236, 237, 239, 240, 243, 245, 246, 247, 248, 253, 265, 266, 271, 274, 275, 276, 278, 280, 281, 291, 292, 301, 305, 306], "position2": [203, 274], "position_i": 170, "position_wrt": [271, 275, 276, 277], "position_x": 170, "position_z": 170, "positionbra3d": 170, "positionket3d": 170, "positionstate3d": 170, "positive_definit": 46, "positive_real_numb": 22, "positive_root": 98, "positivedefinitehandl": 46, "positivedefinitematrix": 105, "positivedefinitepred": 46, "positivehandl": 46, "positivepred": 46, "poss": [59, 144, 211], "possess": [131, 157, 253], "possibl": [4, 8, 11, 12, 13, 14, 15, 18, 22, 23, 24, 27, 29, 32, 37, 40, 48, 50, 51, 52, 53, 58, 60, 61, 63, 64, 65, 69, 70, 74, 75, 77, 79, 81, 83, 84, 86, 91, 93, 94, 96, 98, 99, 101, 105, 109, 111, 113, 115, 126, 127, 129, 130, 135, 138, 141, 144, 155, 186, 188, 192, 194, 196, 197, 201, 206, 208, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 228, 229, 233, 234, 235, 236, 239, 240, 243, 244, 245, 246, 247, 248, 253, 258, 260, 261, 262, 263, 265, 266, 275, 276, 278, 292, 296, 297, 300, 305], "possiblezeroq": 301, "possibli": [14, 22, 50, 61, 67, 69, 94, 96, 109, 195, 216, 218, 220, 234, 235, 245, 260, 265, 295, 301], "post": [7, 13, 22, 29, 31, 32, 33, 34, 35, 36, 37, 38, 50, 63, 69, 227, 228, 239, 258, 300], "postdecr": 50, "postfix": [227, 265], "postincr": 50, "postiv": 77, "postord": 69, "postorder_travers": [13, 69, 300], "postpon": 74, "postprocess": [50, 213, 223, 228, 239], "postprocessor": [228, 239], "postscript": 227, "postul": 109, "potenti": [13, 14, 22, 81, 101, 105, 109, 112, 131, 135, 137, 140, 151, 152, 203, 209, 216, 217, 218, 222, 227, 234, 237, 239, 243, 261, 262, 274, 280, 288], "potential_energi": [13, 131, 135, 137, 140, 151, 157], "pound": 196, "povm": 186, "pow": [4, 13, 15, 16, 42, 47, 50, 69, 70, 75, 94, 105, 109, 191, 216, 217, 218, 223, 227, 229, 236, 239, 245, 246, 300, 304], "pow_cos_sin": 42, "pow_xin": 224, "powdenest": [75, 239], "power": [13, 16, 31, 36, 42, 47, 50, 59, 60, 61, 70, 72, 73, 74, 91, 92, 94, 96, 98, 101, 105, 109, 110, 111, 125, 142, 159, 164, 175, 178, 191, 194, 196, 197, 198, 202, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 231, 234, 236, 239, 240, 243, 245, 246, 247, 251, 260, 265, 283, 294, 295, 296, 297, 298, 300, 301, 304], "power_bas": [69, 105], "power_basis_ancestor": 222, "power_exp": [69, 105], "power_func": 247, "power_represent": 240, "power_set": 235, "powerbasi": 222, "powerbasisel": 222, "powerfunct": 247, "powerrul": 96, "powerset": 235, "powf": 227, "powi": [50, 227], "powl": [50, 227], "powsimp": [16, 69, 75, 236, 239], "pp": [4, 60, 61, 67, 68, 69, 70, 74, 75, 96, 105, 109, 112, 113, 115, 136, 146, 156, 212, 215, 216, 220, 221, 243, 244, 247, 291, 292], "pp1": 81, "pp2": 81, "pp3": 81, "pprint": [12, 14, 15, 16, 24, 27, 33, 48, 49, 71, 77, 96, 105, 109, 125, 164, 212, 227, 228, 235, 239, 243, 244, 246, 247, 265, 292, 304], "pprint_nod": 227, "pq": [247, 277], "pqa": 240, "pquo": [218, 223], "pr": [3, 11, 12, 13, 68, 134, 218, 220, 221, 223, 246], "prabha": 61, "practic": [9, 16, 17, 20, 22, 29, 32, 35, 38, 58, 60, 69, 70, 79, 153, 156, 159, 213, 214, 215, 217, 222, 224, 251, 292, 297, 298], "pre": [15, 42, 49, 50, 69, 212, 213, 228, 236, 239, 245, 246, 258, 276, 280, 300], "preambl": [97, 207, 227], "prebuilt": 247, "prec": [24, 35, 69, 79, 85, 109, 123, 212, 218, 223, 224, 239, 245], "preced": [4, 5, 16, 51, 61, 69, 70, 73, 74, 172, 239, 266], "precedence_float": 227, "precedence_fracel": 227, "precedence_funct": 227, "precedence_integ": 227, "precedence_mul": 227, "precedence_polyel": 227, "precedence_r": 227, "precedence_unevaluatedexpr": 227, "precedence_valu": 227, "precis": [2, 3, 4, 14, 15, 16, 22, 23, 24, 29, 33, 50, 60, 69, 72, 73, 74, 77, 85, 96, 105, 109, 123, 157, 212, 214, 217, 218, 222, 223, 224, 227, 234, 239, 240, 245, 246, 259, 260, 268, 294, 295, 305], "precision_target": 50, "precisionexhaust": [69, 73], "precomput": [22, 74, 109, 266], "predecr": 50, "predefin": [24, 71, 159, 217, 227, 228, 239, 246, 253, 271, 276], "predetermin": [69, 258], "predic": [13, 15, 43, 44, 48, 69, 111, 223, 239, 265, 283], "predicate_": [44, 45], "predict": [22, 192, 239, 265], "prefer": [2, 4, 8, 9, 11, 12, 13, 14, 15, 22, 24, 26, 29, 34, 35, 36, 50, 52, 61, 68, 69, 77, 109, 111, 113, 134, 142, 192, 196, 197, 202, 213, 216, 218, 220, 222, 227, 235, 239, 243, 245, 252, 258, 260, 263, 266, 299, 301], "preferred_index": [77, 192], "prefix": [3, 11, 50, 69, 105, 109, 196, 199, 200, 217, 220, 224, 227, 240, 243, 259, 260, 265, 288], "prefix_express": 227, "prefix_i1_i2_": 105, "preimag": 214, "preincrement": 50, "preliminari": 298, "prem": [218, 223], "premad": 50, "premis": 49, "premises_kei": 49, "premultipli": 223, "preorder_travers": [13, 69, 300], "prep": [109, 243, 244], "prepar": [7, 22, 135, 225], "prepend": [8, 49, 60, 105, 125, 199, 227, 253], "prepopul": 292, "preprint": [109, 221], "preprocess": [22, 96, 225], "preprocessor": [50, 228, 239, 260], "preprocessor_stat": 260, "prerequisit": 8, "presenc": [9, 69, 75, 99, 121, 140, 146, 156, 243, 251], "present": [0, 2, 5, 13, 15, 16, 20, 26, 48, 49, 53, 56, 60, 61, 63, 67, 69, 72, 96, 105, 109, 112, 115, 117, 121, 123, 125, 135, 140, 144, 192, 194, 202, 204, 207, 208, 213, 214, 220, 221, 222, 226, 227, 240, 246, 260, 266, 274, 275, 276, 280, 283, 292, 306], "preserv": [38, 49, 50, 60, 69, 105, 190, 216, 218, 223, 228, 229, 239], "presimplifi": 146, "press": [16, 49, 51, 53, 61, 70, 96, 105, 212, 221, 240, 245, 291], "presum": [22, 94, 217, 237, 260], "pretti": [4, 9, 11, 12, 15, 24, 49, 50, 77, 96, 97, 105, 109, 118, 125, 144, 207, 237, 239, 246, 280, 296, 299, 301, 305], "prettifi": 227, "pretty_ascii_repr": 199, "pretty_atom": 227, "pretty_indic": 192, "pretty_print": [61, 97, 131, 137, 140, 144, 145, 149, 150, 151, 153, 154, 155, 157, 160, 202, 204, 206, 207, 210, 211, 227], "pretty_scalar": 271, "pretty_symbol": 227, "pretty_symbologi": 227, "pretty_try_use_unicod": 227, "pretty_unicode_repr": 199, "pretty_use_unicod": 227, "pretty_vect": 271, "prettyform": 227, "prev": [63, 69, 267], "prev_binari": 64, "prev_grai": 64, "prev_lex": 58, "prev_lexicograph": 64, "prevent": [3, 7, 12, 14, 16, 33, 38, 50, 69, 75, 106, 109, 129, 140, 216, 218, 223, 227, 239, 247, 256, 263, 296], "preview": [2, 11, 49, 261], "preview_diagram": 49, "previou": [3, 4, 12, 13, 14, 24, 53, 58, 59, 60, 61, 64, 69, 74, 75, 96, 99, 105, 108, 111, 131, 156, 194, 210, 211, 220, 233, 240, 244, 248, 265, 298, 300, 305], "previous": [2, 3, 11, 13, 68, 115, 130, 134, 150, 153, 208, 226, 239, 247, 278], "previous_term": [69, 75], "prevprim": [74, 109], "pri": 70, "primal": [109, 214], "primari": [2, 3, 4, 5, 12, 14, 22, 24, 69, 81, 99, 112, 115, 130, 211, 214, 216, 260, 266, 292], "primarili": [2, 14, 15, 22, 50, 69, 75, 109, 117, 191, 223, 225, 259, 262, 268, 275], "prime": [13, 22, 36, 43, 44, 45, 46, 60, 67, 68, 69, 70, 72, 74, 77, 109, 163, 214, 215, 216, 217, 218, 220, 223, 237, 239, 240, 247, 262], "prime_as_sum_of_two_squar": 240, "prime_bound": 109, "prime_decomp": 222, "prime_numb": [22, 69, 109], "prime_number_theorem": 109, "prime_ord": 109, "prime_valu": 222, "primefactor": [74, 109], "primehandl": 46, "primeid": [218, 222], "primenu": [13, 74, 109], "primeomega": [13, 74, 109], "primepi": [13, 15, 24, 74, 109], "primepred": [13, 46], "primerang": [74, 109], "primes_abov": [218, 222], "primetest": [13, 69, 74, 109], "primit": [15, 60, 69, 70, 77, 109, 186, 190, 214, 215, 216, 217, 218, 220, 222, 223, 226, 227, 240, 295], "primitive_el": [69, 217, 218, 222], "primitive_root": [109, 222], "primori": 109, "primtiiv": 222, "princeton": [212, 247], "princip": [49, 70, 75, 77, 94, 96, 105, 106, 127, 144, 165, 214, 215, 216, 217, 218, 220, 222, 223, 224], "principal_branch": [75, 94], "principal_valu": [75, 96], "principl": [2, 70, 105, 109, 163, 212, 214, 215, 220, 236, 245], "print": [1, 3, 4, 5, 7, 11, 12, 14, 15, 16, 20, 22, 23, 27, 29, 32, 33, 35, 40, 43, 44, 45, 46, 48, 49, 51, 52, 53, 58, 60, 61, 68, 69, 70, 73, 74, 75, 77, 96, 98, 99, 101, 105, 106, 109, 110, 111, 117, 118, 125, 133, 135, 140, 142, 144, 152, 158, 164, 172, 185, 186, 190, 192, 202, 205, 209, 211, 213, 216, 217, 218, 220, 222, 223, 233, 234, 236, 237, 239, 243, 245, 252, 254, 258, 260, 265, 266, 268, 271, 275, 282, 288, 290, 295, 296, 297, 298, 299, 300, 301, 305], "print_builtin": [97, 207], "print_ccod": 227, "print_cycl": 61, "print_debug_output": 111, "print_dim_bas": 194, "print_fcod": 227, "print_funct": 20, "print_gtk": 227, "print_latex": 227, "print_maple_cod": 227, "print_mathml": [227, 304], "print_my_latex": 227, "print_nod": 227, "print_nonzero": [105, 265], "print_python": 227, "print_rcod": 227, "print_report": 52, "print_tre": 227, "printabl": [13, 70], "printer": [11, 12, 13, 14, 15, 24, 61, 69, 77, 97, 105, 110, 207, 249, 252, 259, 260, 266, 292, 296, 300], "printer_exampl": 227, "printer_set": 50, "printmethod": [24, 227], "prior": [3, 12, 13, 40, 206, 223, 239, 301], "prioriti": [34, 50, 92, 129, 142, 211, 266], "prism": 52, "prismat": 134, "prismaticjoint": [13, 131, 134, 140, 147, 153], "privat": [3, 4, 69, 70, 142, 213, 260], "prk": 70, "prng": 105, "prob": [190, 247], "probabilist": [77, 223, 247], "probabilit": 13, "probability_book": 247, "probability_distribut": 247, "probabilitycours": 247, "probabl": [7, 11, 14, 52, 60, 69, 74, 77, 81, 109, 142, 186, 190, 237, 243, 246, 247, 259, 297, 303], "problem": [5, 9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 53, 63, 65, 69, 70, 81, 94, 96, 105, 109, 112, 113, 115, 117, 119, 120, 121, 126, 129, 135, 142, 146, 150, 152, 154, 201, 210, 211, 214, 215, 220, 237, 239, 240, 243, 245, 246, 262, 265, 288, 291, 292, 295, 297, 301], "problemat": [13, 14, 24, 217], "proc": [69, 218, 245], "proce": [83, 156, 220, 222, 237, 245], "procedur": [8, 32, 34, 51, 52, 54, 60, 66, 67, 68, 96, 105, 135, 157, 220, 222, 239, 240, 245, 246, 271, 301], "proceed": [49, 51, 94, 96, 158, 221, 237], "process": [4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 22, 47, 50, 60, 61, 67, 69, 70, 75, 77, 85, 94, 96, 105, 109, 112, 125, 135, 136, 142, 144, 150, 153, 154, 156, 159, 213, 214, 220, 227, 228, 235, 239, 243, 245, 249, 258, 262, 305], "process_seri": 213, "prod": [69, 111, 217, 224, 236], "prod_": [68, 74, 77, 94, 109, 197, 237], "produc": [2, 4, 5, 12, 14, 15, 23, 24, 32, 34, 35, 36, 38, 49, 60, 69, 70, 82, 96, 99, 105, 112, 113, 115, 130, 138, 202, 216, 217, 222, 223, 227, 234, 243, 244, 245, 247, 256, 258, 262, 263, 265, 266, 291, 292, 304], "product": [12, 13, 22, 42, 52, 54, 57, 60, 61, 65, 67, 68, 69, 70, 71, 73, 74, 77, 79, 82, 84, 85, 92, 94, 96, 98, 99, 101, 105, 109, 110, 111, 115, 125, 126, 127, 129, 134, 144, 157, 159, 167, 171, 172, 175, 177, 178, 179, 181, 184, 186, 187, 189, 190, 192, 196, 197, 198, 201, 202, 204, 209, 210, 211, 212, 214, 215, 216, 218, 220, 222, 223, 224, 227, 228, 229, 232, 235, 236, 239, 240, 243, 244, 245, 246, 247, 249, 251, 252, 253, 259, 262, 265, 271, 275, 288], "product_and_invers": 61, "product_matrix_left": 42, "product_matrix_right": 42, "product_replacement_algorithm": 60, "productdomain": 247, "productpspac": 247, "productset": [235, 246], "prof": 105, "profession": 9, "profil": [117, 125], "prog": [50, 171], "program": [2, 5, 16, 22, 50, 53, 61, 159, 197, 212, 260, 262, 297, 299, 303, 305], "programm": [109, 227], "programmat": [0, 14, 15, 18, 19, 37, 38, 246, 276], "programminggeek": 265, "progress": [11, 43, 45, 109, 260], "prohibit": [49, 61, 62, 202], "project": [5, 9, 10, 11, 13, 26, 50, 52, 82, 83, 84, 98, 105, 158, 259, 260, 271], "project__test__h": [50, 260], "projection_lin": 83, "projective_linear_group": 52, "promin": 224, "prompt": [4, 8, 12, 15], "prone": [24, 32, 50, 69], "pronoun": 5, "pronounc": 305, "proof": [12, 60, 63, 94, 96, 246], "proofwiki": 240, "prooject": 96, "prop": [60, 222], "prop_even": 60, "propag": [73, 82, 163, 166, 291, 292], "proper": [16, 60, 69, 96, 109, 129, 142, 201, 217, 218, 222, 227, 235, 243, 248, 259, 260, 278, 301], "proper_divisor": 109, "proper_divisor_count": 109, "properli": [3, 11, 12, 15, 24, 49, 69, 75, 81, 94, 105, 136, 142, 154, 169, 173, 176, 190, 215, 217, 227, 243, 246, 256, 260, 266, 301, 306], "properti": [3, 12, 14, 15, 19, 24, 29, 34, 36, 42, 44, 45, 48, 49, 50, 51, 52, 53, 57, 58, 60, 61, 62, 63, 64, 68, 69, 70, 71, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 92, 94, 96, 101, 105, 109, 112, 113, 115, 117, 118, 119, 121, 122, 125, 130, 131, 134, 135, 137, 138, 140, 141, 157, 159, 161, 163, 166, 167, 170, 171, 176, 177, 178, 180, 181, 188, 190, 192, 194, 196, 197, 199, 200, 201, 202, 203, 204, 208, 211, 212, 213, 215, 216, 217, 218, 220, 222, 223, 226, 229, 230, 233, 234, 235, 237, 240, 243, 246, 247, 252, 253, 258, 260, 261, 271, 274, 275, 276, 278, 280, 291, 292, 301], "propfunc": 261, "proport": [60, 70, 130, 234, 266], "propos": [9, 109], "proposit": [43, 45, 99], "proprietari": 159, "proquest": 247, "protect": [70, 227], "proth": 109, "proth_prim": 109, "proth_test": 109, "prototyp": [50, 110, 260], "prove": [34, 69, 94, 96, 105, 214, 234, 243, 277], "proven": [96, 109, 277, 297], "provid": [0, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 17, 18, 20, 21, 22, 23, 24, 27, 30, 31, 35, 39, 42, 48, 49, 50, 51, 52, 58, 59, 60, 61, 67, 68, 69, 71, 73, 77, 78, 80, 85, 88, 91, 92, 96, 97, 99, 101, 105, 106, 108, 109, 110, 111, 112, 115, 116, 118, 121, 123, 129, 131, 134, 135, 137, 140, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 159, 160, 165, 166, 186, 194, 195, 196, 200, 202, 203, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 230, 232, 235, 236, 237, 239, 243, 244, 245, 246, 247, 248, 252, 253, 258, 259, 260, 262, 263, 265, 266, 268, 271, 274, 275, 276, 278, 279, 281, 291, 292, 295, 299, 300, 301, 305], "providean": 240, "prudent": 12, "prudnikov": [94, 237], "prudnikov1990": [94, 237], "prufer": [56, 283], "prufer_rank": 63, "prufer_repr": 63, "prune": 60, "pset": 235, "pseudo": [61, 105, 109, 218, 220, 223], "pseudocod": 60, "pseudoinvers": [34, 105], "pseudoprim": 109, "pseudorandom": [109, 265], "pseudotensor": 77, "psg": 62, "psi": [16, 74, 77, 94, 164, 175, 176, 182, 190, 222, 227, 253], "psi_": [127, 168], "psi_n": [50, 168], "psi_nl": 50, "psi_nlm": 127, "psl2f5": 52, "psl_2": 52, "psm": 109, "pspace": 247, "pspace1": 247, "pspace2": 247, "pstack": 262, "psu": [221, 236], "psum": 223, "psw_primality_test": 109, "pt": [70, 78, 79, 80, 82, 83, 84, 85, 233], "pt1": 83, "pth": 42, "pub": [70, 271], "public": [0, 4, 11, 12, 50, 69, 70, 91, 112, 113, 115, 217, 218, 220, 221, 225, 240, 243, 247, 261, 271], "public_kei": 70, "publicli": 70, "publish": [4, 94, 112, 113, 115, 237, 292], "pug": 70, "puiseux": 224, "puk": 70, "pull": [2, 3, 4, 5, 8, 9, 12, 13, 14, 24, 40, 50, 69, 74, 77, 130, 191, 228, 239, 243, 246, 291, 292, 301, 305], "puppi": 70, "purdu": 271, "pure": [0, 2, 13, 14, 15, 33, 35, 42, 70, 75, 96, 99, 101, 115, 125, 156, 197, 216, 217, 218, 220, 223, 227, 247, 265], "purepoli": [105, 216, 223], "purpos": [4, 5, 9, 12, 13, 14, 15, 21, 22, 24, 36, 49, 50, 60, 66, 69, 70, 96, 105, 109, 131, 142, 157, 159, 197, 211, 213, 217, 220, 224, 226, 227, 234, 243, 246, 252, 262, 264, 266, 275, 276, 292, 295, 305], "purposefulli": 144, "push": [9, 11, 12, 94, 130, 138, 291, 292], "pushforward": 71, "put": [3, 4, 11, 13, 14, 15, 16, 20, 24, 31, 50, 65, 66, 69, 70, 71, 75, 99, 105, 164, 169, 173, 188, 189, 223, 227, 228, 236, 237, 239, 243, 248, 254, 259, 291, 301, 305], "puyoqrstvwx": 70, "pval": 245, "pw": 227, "px": [137, 182, 187, 253], "px_1": 187, "px_2": 187, "pxbra": [170, 182], "pxket": [170, 182, 187], "pxop": [170, 182, 187], "py": [2, 3, 4, 11, 12, 22, 26, 49, 69, 80, 94, 96, 105, 111, 170, 172, 213, 216, 218, 224, 227, 234, 237, 243, 244, 253, 256, 258, 263, 266], "py3k": 16, "py_mod": 50, "py_str": 50, "pycod": [50, 227], "pycodestyl": 12, "pycosat": 2, "pycqa": 12, "pydi": [142, 159, 202], "pyf": 260, "pyflak": 12, "pyglet": [2, 227], "pyglet_plot": 213, "pygletplot": [2, 213], "pylab": 97, "pymc": [2, 247], "pynam": 260, "pyodid": 256, "pypi": 40, "pyplot": [36, 92, 159, 291, 292], "pysat": 2, "pytest": [2, 3, 11, 12, 13, 255, 261, 263, 266, 290], "pytestreport": 258, "pythag": 32, "pythag_eq": 32, "pythag_v": 32, "pythagora": 141, "pythagorean": [32, 240], "pythogorean": 32, "python": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 15, 19, 22, 23, 24, 28, 29, 30, 33, 34, 36, 38, 39, 40, 43, 44, 45, 48, 61, 69, 70, 73, 75, 81, 97, 99, 101, 105, 109, 110, 111, 117, 129, 142, 159, 202, 213, 214, 215, 216, 217, 218, 224, 226, 227, 235, 239, 243, 246, 248, 258, 259, 260, 261, 262, 265, 266, 271, 297, 298, 299, 300, 301, 303, 304, 305], "python3": [2, 8, 50, 111, 227], "python_trick": 265, "python_vers": 261, "pythonfinitefield": [217, 218], "pythonhashse": [12, 258], "pythoninteg": 218, "pythonmpq": [217, 218], "pythonr": [218, 225], "pythonrationalfield": 218, "pythontyp": 227, "pythonwarn": 13, "pz": [72, 123, 253], "q": [13, 14, 15, 16, 19, 22, 30, 32, 41, 42, 43, 44, 45, 46, 47, 50, 61, 65, 68, 69, 70, 77, 86, 91, 92, 94, 96, 98, 105, 111, 115, 117, 119, 125, 126, 130, 131, 134, 135, 136, 138, 140, 141, 142, 144, 146, 151, 153, 154, 155, 156, 159, 160, 161, 172, 186, 192, 195, 202, 203, 204, 206, 207, 208, 210, 213, 214, 215, 217, 218, 220, 222, 223, 224, 226, 227, 229, 237, 240, 243, 245, 247, 252, 253, 268, 271, 274, 275, 277, 280, 291, 292, 301, 305], "q0": [134, 202, 243, 271, 273], "q0_": 134, "q0_c1": 134, "q0_c2": 134, "q0_pc": 134, "q1": [42, 105, 117, 129, 134, 142, 144, 145, 146, 147, 149, 150, 151, 154, 155, 156, 160, 201, 202, 204, 206, 207, 210, 211, 217, 271, 273, 291], "q1_": 134, "q1_c1": 134, "q1_c2": 134, "q1_pc": 134, "q1d": [129, 142, 144, 146, 149, 150, 151, 154, 155, 156, 157, 201, 207, 211], "q1dd": 207, "q2": [42, 117, 129, 134, 142, 144, 145, 146, 147, 149, 150, 151, 154, 155, 160, 201, 202, 204, 206, 207, 210, 211, 217, 271, 273, 291], "q2_": 134, "q2_pc": 134, "q2d": [129, 142, 144, 146, 149, 150, 151, 154, 155, 206, 207], "q2dd": 207, "q3": [42, 129, 144, 145, 147, 149, 150, 151, 154, 202, 204, 206, 210, 211, 271, 273, 291], "q3d": [129, 149, 150, 151, 154], "q4": [144, 154, 204, 291], "q4d": [144, 154], "q5": [144, 204], "q5d": 144, "q6": 204, "q_": [13, 69, 134, 207, 240, 243, 291], "q_0": [134, 172, 240, 292], "q_1": [134, 145, 146, 147, 156, 172, 210, 223, 240, 291], "q_2": [134, 145, 146, 147, 156, 210, 291], "q_3": [145, 147, 210, 291], "q_4": 291, "q_annihil": 192, "q_aug": 105, "q_creator": 192, "q_d": 136, "q_dep": [135, 140, 145, 154, 156], "q_depend": [135, 144, 146, 154, 159, 291], "q_domain": 218, "q_expr": 218, "q_i": [96, 136, 156], "q_ind": [135, 136, 140, 142, 144, 145, 146, 149, 150, 154, 156, 159], "q_j": 13, "q_j1": 134, "q_j2": 134, "q_m": 77, "q_n": 223, "q_op": [136, 146], "q_orient": [271, 273], "q_p1": 134, "q_p2": 134, "q_pc": 134, "q_pin": [13, 140], "q_slider": 140, "q_val": [32, 291], "q_x": [85, 210], "q_y": [85, 210], "qa": 159, "qad": 159, "qappli": [176, 177, 179, 181, 186, 288], "qb": [159, 215], "qbd": 159, "qd": [131, 135, 140, 144, 154, 206, 291], "qd_dep": [135, 156], "qd_ind": [135, 156], "qd_op": 136, "qdot": [135, 144, 206], "qdoubledot": 135, "qexpr": 187, "qft": [179, 188, 288], "qg": 220, "qho": 50, "qho_1d": [50, 168], "qiq": 70, "qmonserrat": 11, "qn": 69, "qo": 159, "qp": 210, "qq": [11, 87, 88, 90, 91, 92, 96, 214, 215, 216, 217, 220, 222, 223, 224], "qq_col": 222, "qq_i": [216, 217], "qq_matrix": 222, "qq_python": 218, "qquad": [75, 197, 220], "qr": 105, "qr_solv": 105, "qrdecomposit": [100, 105], "qrgk": 70, "qrgkkthrzqebpr": 70, "qrsolv": [100, 105], "qstate": 177, "qt": 2, "qtconsol": [40, 304], "qtf": 185, "quad": [27, 68, 69, 71, 73, 77, 96, 105], "quadrant": [75, 218, 246], "quadrat": [29, 32, 69, 70, 74, 96, 109, 214, 218, 222, 223, 240, 245, 247], "quadratic_congru": 109, "quadratic_distribut": 247, "quadratic_residu": 109, "quadraticu": 247, "quadratur": [69, 73, 96, 243], "quadrupl": [49, 223], "qualifi": [4, 13], "qualiti": [110, 227], "qualnam": [52, 115], "quantifi": 280, "quantil": 247, "quantit": [50, 194], "quantiti": [13, 14, 16, 61, 69, 74, 77, 81, 86, 118, 129, 130, 135, 150, 157, 171, 194, 196, 200, 201, 208, 210, 211, 222, 239, 247, 275, 280, 288, 291, 292], "quantity_simplifi": 196, "quantiz": [178, 288], "quantum": [13, 28, 127, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 212, 288], "quarter": [134, 141, 164], "quarter_wave_retard": 164, "quartic": [29, 79, 223, 245], "quasi": 192, "quaternion": [202, 206, 211, 271, 273], "quaternionorient": [271, 273, 276], "qubit": [172, 176, 177, 178, 179, 185, 288], "qubit_to_matrix": 186, "qubit_valu": 186, "qubitbra": 186, "quebec": 221, "queri": [14, 15, 22, 23, 24, 43, 46, 47, 48, 50, 69, 81, 223, 239, 247], "query_gt": 247, "question": [3, 4, 5, 7, 11, 12, 20, 22, 60, 68, 71, 79, 86, 94, 96, 99, 109, 129, 194, 197, 201, 214, 217, 222, 237, 246, 265, 268], "quick": [4, 5, 11, 14, 24, 69, 105, 109, 239, 245, 266], "quicker": [60, 109], "quickli": [12, 14, 20, 24, 60, 61, 69, 70, 73, 74, 109, 216, 220, 223, 236, 246, 262], "quickstart": 9, "quiet": 97, "quin": 99, "quintic": [29, 223, 245], "quirk": 23, "quit": [15, 20, 24, 77, 105, 109, 144, 210, 213, 224, 226, 237, 245, 265, 280, 297, 300], "quo": [217, 218, 220, 223], "quo_ground": [218, 223], "quot": [4, 11, 16, 50, 99, 227, 268], "quotat": 5, "quotedstr": 50, "quotient": [68, 69, 72, 75, 109, 214, 215, 217, 220, 223, 237, 239, 243], "quotient_codomain": 214, "quotient_domain": 214, "quotient_hom": 214, "quotient_modul": 214, "quotient_r": [214, 218], "quotientmodul": 214, "quotientmoduleel": 214, "quotientr": [214, 218], "qv": 218, "qwerti": 252, "qwp": 164, "r": [0, 4, 5, 8, 9, 12, 13, 16, 20, 22, 24, 29, 42, 49, 50, 51, 53, 60, 61, 69, 70, 71, 73, 74, 75, 82, 83, 85, 87, 91, 92, 94, 96, 105, 109, 111, 112, 115, 118, 121, 125, 127, 131, 134, 135, 136, 137, 138, 140, 141, 142, 144, 146, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 164, 188, 189, 192, 193, 195, 202, 203, 206, 208, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 234, 235, 237, 239, 240, 243, 245, 246, 247, 253, 258, 260, 262, 271, 274, 276, 277, 278, 281, 291, 292, 305], "r0": [29, 69, 223], "r1": [29, 42, 69, 79, 82, 98, 105, 117, 118, 165, 202, 208, 223, 271], "r10": 46, "r100": 68, "r1000": 247, "r1001": 247, "r1002": 247, "r1003": 247, "r1004": 247, "r1005": 247, "r1006": 247, "r1007": 247, "r1008": 247, "r1009": 247, "r101": 68, "r1010": 247, "r1011": 247, "r1012": 247, "r1013": 247, "r1014": 247, "r1015": 247, "r1016": 247, "r1017": 247, "r1018": 247, "r1019": 247, "r102": 68, "r1020": 247, "r1021": 247, "r1022": 247, "r1023": 247, "r1024": 247, "r1025": 247, "r1026": 247, "r1027": 247, "r1028": 247, "r1029": 247, "r103": 68, "r1030": 247, "r1031": 247, "r1032": 247, "r1033": 247, "r1034": 247, "r1035": 247, "r1036": 247, "r1037": 247, "r1038": 247, "r1039": 247, "r104": 68, "r1040": 247, "r1041": 247, "r1042": 247, "r1043": 247, "r1044": 247, "r1045": 247, "r1046": 247, "r1047": 247, "r1048": 247, "r1049": 247, "r105": 68, "r1050": 247, "r1051": 247, "r1052": 259, "r1053": 265, "r1054": 265, "r1055": 265, "r1056": 265, "r1057": 265, "r1058": 265, "r1059": 265, "r106": 68, "r1060": 265, "r1061": 265, "r1062": 265, "r1063": 265, "r1064": 265, "r1065": 265, "r1066": 265, "r1067": 265, "r1068": 265, "r1069": 265, "r107": 68, "r1070": 265, "r1071": 265, "r1072": 265, "r1073": 268, "r1074": 271, "r1075": 271, "r108": 68, "r109": 68, "r11": 46, "r110": 69, "r111": 69, "r112": 69, "r113": 69, "r114": 69, "r115": 69, "r116": 69, "r117": 69, "r118": 69, "r119": 69, "r12": 46, "r120": 69, "r121": 69, "r122": 69, "r123": 69, "r124": 69, "r125": 69, "r126": 69, "r127": 69, "r128": 69, "r129": 69, "r13": 46, "r130": 69, "r131": 69, "r132": 69, "r133": 69, "r134": 69, "r135": 69, "r136": 69, "r137": 69, "r138": 69, "r139": 69, "r14": 46, "r140": 69, "r141": 69, "r142": 69, "r143": 69, "r144": 69, "r145": 69, "r146": 69, "r147": 69, "r148": 69, "r149": 69, "r15": 46, "r150": 69, "r151": 70, "r152": 70, "r153": 70, "r154": 70, "r155": 70, "r156": 70, "r157": 70, "r158": 70, "r159": 70, "r16": 46, "r160": 70, "r161": 70, "r162": 70, "r163": 70, "r164": 70, "r165": 70, "r166": 70, "r167": 70, "r168": 70, "r169": 70, "r17": 46, "r170": 70, "r171": 70, "r174": 70, "r175": 71, "r176": 71, "r177": 71, "r178": 72, "r179": 72, "r18": 46, "r180": 72, "r181": 72, "r182": 72, "r183": 72, "r184": 72, "r185": 72, "r186": 72, "r187": 72, "r188": 72, "r189": 72, "r19": 46, "r190": 72, "r191": 72, "r192": 72, "r193": 72, "r194": 72, "r195": 72, "r196": 72, "r197": 72, "r198": 72, "r199": 72, "r1_x": 208, "r1_y": 208, "r2": [29, 42, 69, 71, 82, 98, 105, 117, 118, 165, 202, 223, 227, 239, 271], "r20": 46, "r200": 72, "r201": 72, "r202": 72, "r203": 72, "r204": 72, "r205": 72, "r206": 72, "r207": 74, "r208": 74, "r209": 74, "r21": 46, "r210": 74, "r211": 74, "r212": 74, "r213": 74, "r214": 74, "r215": 74, "r216": 74, "r217": 74, "r218": 74, "r219": 74, "r22": 46, "r220": 74, "r221": 74, "r222": 74, "r223": 74, "r224": 74, "r225": 74, "r226": 74, "r227": 74, "r228": 74, "r229": 74, "r23": 46, "r230": 74, "r231": 74, "r233": 74, "r234": 74, "r235": 74, "r236": 74, "r237": 74, "r238": 74, "r239": 74, "r24": 46, "r240": 74, "r241": 74, "r242": 74, "r243": 74, "r244": 74, "r245": 74, "r246": 74, "r247": 74, "r248": 74, "r249": 74, "r25": 46, "r250": 74, "r251": 74, "r252": 74, "r253": 74, "r254": 74, "r255": 74, "r256": 74, "r257": 74, "r258": 74, "r259": 74, "r26": 46, "r260": 74, "r261": 74, "r262": 74, "r263": 74, "r264": 74, "r265": 74, "r266": 74, "r267": 74, "r268": 74, "r269": 74, "r27": 46, "r270": 74, "r271": 74, "r272": 74, "r273": 74, "r274": 74, "r275": 74, "r276": 75, "r277": 75, "r278": 75, "r279": 75, "r28": 46, "r280": 75, "r281": 75, "r282": 75, "r283": 75, "r284": 75, "r285": 75, "r286": 75, "r287": 75, "r288": 75, "r289": 75, "r29": 46, "r290": 75, "r291": 75, "r292": 75, "r293": 75, "r294": 75, "r295": 75, "r296": 75, "r297": 75, "r298": 75, "r299": 75, "r2_p": 71, "r2_r": 71, "r3": [29, 42, 98, 117, 118, 239], "r30": 46, "r300": 75, "r301": 75, "r302": 75, "r303": 75, "r304": 75, "r305": 75, "r306": 75, "r307": 75, "r308": 75, "r309": 75, "r31": 48, "r310": 75, "r311": 75, "r312": 75, "r313": 75, "r314": 75, "r315": 75, "r316": 75, "r317": 75, "r318": 75, "r319": 75, "r32": 48, "r320": 75, "r321": 75, "r322": 75, "r323": 75, "r324": 75, "r325": 75, "r326": 75, "r327": 75, "r328": 75, "r329": 75, "r33": 48, "r330": 75, "r331": 75, "r332": 75, "r333": 75, "r334": 75, "r335": 75, "r336": 75, "r337": 75, "r338": 75, "r339": 75, "r34": 48, "r340": 75, "r341": 75, "r342": 77, "r343": 77, "r344": 77, "r345": 77, "r346": 77, "r347": 77, "r348": 77, "r349": 77, "r35": 48, "r350": 77, "r351": 77, "r352": 77, "r353": 77, "r354": 77, "r355": 77, "r356": 77, "r357": 77, "r358": 77, "r359": 77, "r36": 48, "r360": 77, "r361": 77, "r362": 77, "r363": 77, "r364": 77, "r365": 77, "r366": 77, "r367": 77, "r368": 77, "r369": 77, "r37": 48, "r370": 77, "r371": 77, "r372": 77, "r373": 77, "r374": 77, "r375": 77, "r376": 77, "r377": 77, "r378": 77, "r379": 77, "r38": 48, "r380": 77, "r381": 77, "r382": 77, "r383": 77, "r384": 77, "r385": 77, "r386": 77, "r387": 77, "r388": 77, "r389": 77, "r39": 50, "r390": 77, "r391": 77, "r392": 77, "r393": 77, "r394": 77, "r395": 77, "r396": 77, "r397": 77, "r398": 77, "r399": 77, "r4": [29, 98, 117], "r40": 50, "r400": 77, "r401": 77, "r402": 77, "r403": 77, "r404": 77, "r405": 77, "r406": 77, "r407": 77, "r408": 77, "r409": 77, "r41": 52, "r410": 77, "r411": 77, "r412": 77, "r413": 77, "r414": 77, "r415": 77, "r416": 77, "r417": 77, "r418": 77, "r419": 77, "r420": 77, "r421": 77, "r422": 77, "r423": 77, "r424": 77, "r425": 77, "r426": 77, "r427": 77, "r428": 77, "r429": 77, "r43": 52, "r430": 77, "r431": 77, "r432": 77, "r433": 77, "r434": 77, "r435": 77, "r436": 77, "r437": 77, "r438": 77, "r439": 77, "r44": [52, 53], "r440": 77, "r441": 77, "r442": 77, "r443": 77, "r444": 77, "r445": 77, "r446": 77, "r447": 77, "r448": 77, "r449": 77, "r45": 53, "r450": 77, "r451": 77, "r452": 77, "r453": 77, "r454": 77, "r455": 77, "r456": 77, "r457": 77, "r458": 77, "r459": 77, "r46": 53, "r460": 77, "r461": 77, "r462": 77, "r463": 77, "r464": 77, "r465": 77, "r466": 77, "r467": 77, "r468": 77, "r469": 77, "r47": 53, "r470": 77, "r471": 77, "r472": 77, "r473": 77, "r474": 77, "r475": 77, "r476": 77, "r477": 77, "r478": 77, "r479": 77, "r48": 55, "r480": 77, "r481": 77, "r482": 77, "r483": 77, "r484": 77, "r485": 77, "r486": 77, "r487": 77, "r488": 77, "r489": 77, "r49": 55, "r490": 77, "r491": 77, "r492": 77, "r493": 77, "r494": 77, "r495": 77, "r496": 77, "r497": 77, "r498": 77, "r499": 77, "r5": [44, 239], "r50": 55, "r500": 77, "r501": 77, "r502": 77, "r503": 77, "r504": 77, "r505": 77, "r506": 77, "r507": 77, "r508": 77, "r509": 77, "r51": 55, "r510": 77, "r511": 77, "r512": 77, "r513": 77, "r514": 77, "r515": 77, "r516": 77, "r517": 77, "r518": 77, "r519": 77, "r52": 55, "r520": 77, "r521": 77, "r522": 77, "r523": 77, "r524": 77, "r525": 77, "r526": 77, "r527": 77, "r528": 77, "r529": 77, "r53": 55, "r530": 77, "r531": 77, "r532": 77, "r533": 77, "r534": 77, "r535": 77, "r536": 77, "r537": 77, "r538": 77, "r539": 77, "r54": 55, "r540": 77, "r541": 77, "r542": 77, "r543": 77, "r544": 77, "r545": 79, "r546": 79, "r547": 79, "r548": 79, "r549": 79, "r55": 55, "r550": 79, "r551": 79, "r552": 79, "r553": 85, "r554": 85, "r555": 85, "r556": 85, "r557": 85, "r558": 85, "r559": 85, "r560": 85, "r561": 85, "r562": 85, "r563": 86, "r564": 86, "r565": 91, "r566": 91, "r567": 96, "r568": 96, "r569": 96, "r57": 57, "r570": 96, "r571": 96, "r572": 96, "r573": 96, "r574": 96, "r575": 96, "r576": 96, "r577": 96, "r578": 96, "r579": 96, "r58": 57, "r580": 96, "r581": 96, "r582": 96, "r583": 96, "r584": 96, "r585": 96, "r586": 96, "r587": 96, "r588": 96, "r589": 96, "r59": 57, "r590": 96, "r591": 96, "r592": 96, "r593": 96, "r594": 96, "r595": 96, "r596": 97, "r597": 97, "r598": 98, "r599": 98, "r6": 44, "r60": 57, "r600": 99, "r601": 99, "r602": 99, "r603": 99, "r604": 99, "r605": 99, "r606": 99, "r607": 99, "r608": 101, "r609": 105, "r61": 58, "r610": 105, "r611": 105, "r612": 105, "r613": 105, "r614": 105, "r615": 105, "r616": 105, "r617": 105, "r618": 105, "r619": 105, "r62": 60, "r620": 105, "r621": 105, "r622": 105, "r623": 105, "r624": 105, "r625": 105, "r626": 105, "r627": 105, "r628": 105, "r629": 105, "r63": 60, "r630": 105, "r631": 105, "r632": 105, "r633": 105, "r634": 105, "r635": 105, "r636": 105, "r637": 105, "r638": 105, "r639": 105, "r64": 60, "r640": 105, "r641": 105, "r642": 105, "r643": 105, "r644": 105, "r645": 105, "r646": 105, "r647": 106, "r648": 109, "r649": 109, "r65": 60, "r650": 109, "r651": 109, "r652": 109, "r653": 109, "r654": 109, "r655": 109, "r656": 109, "r657": 109, "r658": 109, "r659": 109, "r66": 60, "r660": 109, "r661": 109, "r662": 109, "r663": 109, "r664": 109, "r665": 109, "r666": 109, "r667": 109, "r668": 109, "r669": 109, "r67": 60, "r670": 109, "r671": 109, "r672": 109, "r673": 109, "r674": 109, "r675": 109, "r676": 109, "r677": 109, "r678": 109, "r679": 109, "r68": 60, "r680": 109, "r681": 109, "r682": 109, "r683": 109, "r684": 109, "r685": 109, "r686": 109, "r687": 109, "r688": 109, "r689": 109, "r69": 60, "r690": 109, "r691": 109, "r692": 109, "r693": 109, "r694": 109, "r695": 109, "r696": 109, "r697": 109, "r698": 109, "r699": 109, "r7": 45, "r70": 60, "r700": 109, "r701": 109, "r702": 109, "r703": 109, "r704": 109, "r705": 109, "r706": 109, "r707": 109, "r708": 109, "r709": 109, "r71": 60, "r710": 109, "r711": 109, "r712": 109, "r713": 109, "r714": 109, "r715": 109, "r716": 109, "r717": 109, "r718": 109, "r719": 109, "r720": 112, "r721": 113, "r722": 113, "r723": 113, "r724": 113, "r725": 113, "r726": 113, "r727": 113, "r728": 115, "r729": 117, "r73": 60, "r730": 123, "r731": 123, "r732": 123, "r733": 123, "r734": 125, "r735": 125, "r736": 125, "r737": 128, "r738": 128, "r739": 136, "r740": 161, "r741": 161, "r742": 161, "r743": 163, "r744": 164, "r745": 164, "r746": 164, "r747": 165, "r748": 167, "r749": 169, "r75": 60, "r750": 171, "r751": 171, "r752": 171, "r753": 171, "r754": 173, "r755": 174, "r756": 175, "r757": 175, "r758": 178, "r759": 178, "r76": 60, "r760": 178, "r761": 178, "r762": 178, "r763": 180, "r764": 181, "r765": 181, "r766": 181, "r767": 189, "r768": 189, "r769": 190, "r77": 60, "r770": 190, "r771": 192, "r772": 216, "r773": 216, "r774": 216, "r775": 216, "r776": 216, "r777": 216, "r778": 216, "r779": 216, "r780": 216, "r781": 216, "r782": 216, "r783": 218, "r784": 220, "r785": 220, "r786": 220, "r787": 220, "r788": 220, "r789": 220, "r79": [60, 61], "r790": 220, "r791": 220, "r792": 220, "r793": 220, "r794": 220, "r795": 220, "r796": 220, "r797": 220, "r798": 220, "r799": 220, "r8": 45, "r80": 61, "r800": 220, "r801": 220, "r802": 222, "r803": 222, "r804": 222, "r805": 222, "r806": 222, "r807": 222, "r808": 223, "r809": 223, "r81": 61, "r810": 223, "r811": 223, "r812": 223, "r813": 223, "r814": 223, "r815": 223, "r816": 223, "r817": 223, "r818": 223, "r819": 223, "r82": 61, "r820": 223, "r821": 223, "r822": 223, "r823": 224, "r824": 229, "r825": 229, "r826": 229, "r827": 229, "r828": 229, "r829": 229, "r83": 61, "r830": 230, "r831": 230, "r832": 230, "r833": 232, "r834": 232, "r835": 234, "r836": 234, "r837": 235, "r838": 235, "r839": 235, "r84": 61, "r840": 235, "r841": 235, "r842": 235, "r843": 235, "r844": 235, "r845": 235, "r846": 235, "r847": 235, "r848": 235, "r849": 235, "r85": 61, "r850": 235, "r851": 235, "r852": 236, "r853": 236, "r854": 236, "r855": 239, "r856": 239, "r857": 239, "r858": 240, "r859": 240, "r86": 61, "r860": 240, "r861": 240, "r862": 240, "r863": 240, "r864": 240, "r865": 240, "r866": 240, "r867": 240, "r868": 240, "r869": 240, "r87": 61, "r870": 240, "r871": 240, "r872": 240, "r873": 240, "r874": 240, "r875": 240, "r876": 240, "r877": 240, "r878": 240, "r879": 240, "r88": 61, "r880": 240, "r881": 240, "r882": 240, "r883": 240, "r884": 243, "r885": 243, "r886": 243, "r887": 243, "r888": 243, "r889": 243, "r89": 61, "r890": 245, "r891": 245, "r892": 245, "r893": 245, "r894": 245, "r895": 245, "r896": 247, "r897": 247, "r898": 247, "r899": 247, "r9": 46, "r90": 61, "r900": 247, "r901": 247, "r902": 247, "r903": 247, "r904": 247, "r905": 247, "r906": 247, "r907": 247, "r908": 247, "r909": 247, "r91": 61, "r910": 247, "r911": 247, "r912": 247, "r913": 247, "r914": 247, "r915": 247, "r916": 247, "r917": 247, "r918": 247, "r919": 247, "r92": 62, "r920": 247, "r921": 247, "r922": 247, "r923": 247, "r924": 247, "r925": 247, "r926": 247, "r927": 247, "r928": 247, "r929": 247, "r93": 63, "r930": 247, "r931": 247, "r932": 247, "r933": 247, "r934": 247, "r935": 247, "r936": 247, "r937": 247, "r938": 247, "r939": 247, "r94": 63, "r940": 247, "r941": 247, "r942": 247, "r943": 247, "r944": 247, "r945": 247, "r946": 247, "r947": 247, "r948": 247, "r949": 247, "r95": 67, "r950": 247, "r951": 247, "r952": 247, "r953": 247, "r954": 247, "r955": 247, "r956": 247, "r957": 247, "r958": 247, "r959": 247, "r96": 67, "r960": 247, "r961": 247, "r962": 247, "r963": 247, "r964": 247, "r965": 247, "r966": 247, "r967": 247, "r968": 247, "r969": 247, "r97": 67, "r970": 247, "r971": 247, "r972": 247, "r973": 247, "r974": 247, "r975": 247, "r976": 247, "r977": 247, "r978": 247, "r979": 247, "r98": 68, "r980": 247, "r981": 247, "r982": 247, "r983": 247, "r984": 247, "r985": 247, "r986": 247, "r987": 247, "r988": 247, "r989": 247, "r99": 68, "r990": 247, "r991": 247, "r992": 247, "r993": 247, "r994": 247, "r995": 247, "r996": 247, "r997": 247, "r998": 247, "r999": 247, "r_": [69, 127, 193, 224], "r_0": 117, "r_1": [51, 214, 224], "r_10": 117, "r_2": 51, "r_30": 117, "r_7": 117, "r_8": 117, "r_aug": 105, "r_b": 36, "r_f": [36, 223], "r_g": 223, "r_i": [51, 224], "r_j": 237, "r_k": [51, 185], "r_n": 214, "r_nl": [50, 127, 193], "r_node_1_i": 121, "r_node_1_x": 121, "r_node_2_i": 121, "r_pt": 142, "r_val": 292, "r_x": [203, 208], "r_y": [203, 208], "r_z": [203, 208], "ra": 229, "rabin": 109, "racah": 212, "rad": [13, 70, 123, 142, 222, 291], "rad2deg": 291, "rad_ration": 239, "rademach": [109, 247], "rademacher_distribut": 247, "radial": [127, 146, 193], "radian": [42, 75, 78, 79, 80, 82, 83, 84, 105, 123, 142, 165, 166, 202], "radiat": 247, "radic": [12, 16, 29, 69, 70, 105, 214, 222, 223, 239, 245, 246], "radii": 79, "radioeng": 72, "radiu": [77, 79, 83, 85, 138, 141, 149, 151, 161, 165, 213, 246, 247, 281, 291], "radius_of_converg": 77, "radix": 72, "radsimp": [69, 239], "rag": 105, "rai": [4, 79, 81, 82, 83, 85, 86, 161, 165], "rail": [70, 140], "rail_fence_ciph": 70, "rail_fram": 140, "rail_mass": 140, "rail_masscent": 140, "railfenc": 70, "raini": 247, "rais": [3, 11, 12, 13, 14, 16, 18, 22, 23, 24, 43, 45, 48, 50, 55, 58, 61, 69, 70, 71, 73, 75, 78, 79, 82, 84, 85, 86, 94, 96, 101, 105, 106, 108, 109, 111, 123, 125, 141, 166, 178, 208, 211, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 227, 229, 235, 239, 240, 242, 243, 244, 245, 246, 247, 251, 253, 256, 258, 260, 263, 265, 268, 278, 301], "raise_on_deprec": 258, "raise_on_error": 258, "raised_cosine_distribut": 247, "raisedcosin": 247, "rake": 144, "ram": 11, "ramanujan": [73, 74, 109], "ramif": 222, "ramp": [117, 118], "ramp_funct": 123, "ramp_response_numerical_data": 123, "ramp_response_plot": 123, "ran": 12, "randal": 221, "randint": [69, 105, 220], "randmatrix": 105, "random": [2, 4, 13, 52, 53, 58, 60, 61, 67, 70, 79, 82, 83, 103, 105, 109, 176, 188, 213, 218, 220, 222, 223, 227, 257, 258, 261, 265, 297, 301, 305], "random_bitstr": 53, "random_circuit": 176, "random_complex_numb": [13, 69], "random_derang": 265, "random_integer_partit": 58, "random_point": [79, 82, 83], "random_poli": 223, "random_pr": 60, "random_stab": 60, "random_symbol": 247, "randomdomain": 247, "randomindexedsymbol": 247, "randomis": [22, 255, 290], "randomli": [12, 60, 69, 70, 109, 186], "randommatrixsymbol": 247, "randomst": 247, "randomsymbol": 247, "randomvari": 247, "randprim": [55, 109], "randrang": 69, "randtest": 257, "rang": [4, 13, 14, 15, 20, 24, 29, 32, 33, 48, 50, 58, 59, 60, 61, 63, 65, 69, 70, 74, 75, 77, 83, 105, 109, 113, 118, 121, 123, 127, 145, 161, 192, 213, 216, 217, 218, 219, 220, 222, 223, 224, 229, 230, 233, 235, 236, 239, 243, 245, 246, 247, 248, 252, 258, 265, 292, 294, 295, 305], "range1": 213, "range2": 213, "range_i": 213, "range_u": 213, "range_v": 213, "range_x": 213, "rangl": [51, 60, 111, 171, 189, 212], "rank": [46, 50, 51, 53, 58, 60, 61, 63, 64, 65, 84, 98, 105, 106, 202, 204, 214, 216, 218, 220, 222, 248, 252, 253, 301], "rank_binari": 64, "rank_decomposit": 105, "rank_factor": 105, "rank_grai": 64, "rank_lexicograph": 64, "rank_nonlex": 61, "rank_trotterjohnson": 61, "rankcheck": 105, "rankdir": [227, 304], "rao": [112, 113, 115, 291, 292], "raphson": 50, "rapidli": [34, 69, 73, 94, 234], "rare": [4, 12, 14, 24, 69, 243, 247, 256, 297], "rasch": 212, "rasch03": 212, "rat": 109, "rat_clear_denom": 223, "rate": [16, 112, 113, 130, 144, 210, 247, 278, 295], "rather": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 20, 22, 23, 24, 29, 33, 36, 37, 38, 41, 46, 50, 51, 52, 60, 61, 62, 69, 73, 75, 80, 85, 87, 94, 99, 101, 105, 109, 111, 115, 116, 140, 149, 159, 172, 186, 190, 192, 196, 201, 210, 214, 216, 217, 220, 223, 225, 230, 237, 240, 242, 243, 246, 247, 249, 262, 265, 266, 280, 292, 297, 299, 300], "rathnayak": 0, "ratint": 96, "ratint_logpart": 96, "ratint_ratpart": 96, "ratio": [27, 46, 59, 60, 68, 69, 73, 74, 77, 79, 82, 83, 84, 85, 100, 109, 113, 125, 165, 197, 216, 227, 236, 239, 245], "ration": [12, 15, 22, 24, 29, 43, 45, 46, 48, 50, 68, 69, 73, 74, 75, 77, 79, 82, 84, 86, 90, 94, 96, 97, 101, 105, 109, 111, 125, 161, 194, 212, 215, 216, 220, 221, 222, 224, 227, 232, 235, 236, 237, 239, 240, 242, 245, 246, 247, 265, 271, 296, 297, 300, 304], "rational": 12, "rational_algorithm": 229, "rational_convers": 239, "rational_funct": 69, "rational_independ": 229, "rational_laurent_seri": 243, "rational_numb": [22, 46], "rational_parametr": 271, "rationalfield": [217, 218], "rationalhandl": 46, "rationalpred": 46, "rationalriccati": 243, "rationaltool": [96, 223], "ratsimp": [11, 69, 239], "ratsimpmodprim": 239, "raw": [4, 5, 50, 69, 70, 75, 110, 111, 186, 191, 216, 217, 218, 223, 235, 239, 304], "rawlin": 268, "ray2d": [82, 85], "ray3d": [82, 83, 165], "ray_transfer_matrix_analysi": 161, "rayleigh": [161, 247], "rayleigh2waist": 161, "rayleigh_distribut": 247, "rayleighdistribut": 247, "raytransfermatrix": 161, "rb": [36, 137, 157], "rb_frame": 157, "rb_masscent": 157, "rcall": [69, 71], "rceil": [94, 111], "rcirc": 80, "rcode": 227, "rcollect": 239, "rd": [105, 142, 227], "re": [3, 11, 13, 16, 24, 47, 48, 50, 60, 61, 69, 70, 73, 75, 77, 94, 96, 105, 202, 204, 208, 214, 220, 227, 228, 229, 235, 236, 237, 243, 245, 258, 274, 276, 295, 297, 300], "reach": [22, 109, 125, 222, 223, 243], "reachabl": [237, 247], "reaction": [117, 118, 119, 121, 130], "reaction_bodi": 131, "reaction_fram": 130, "reaction_load": [117, 118, 119, 121], "reaction_point": 131, "read": [3, 4, 5, 9, 11, 12, 13, 14, 24, 38, 61, 75, 94, 109, 118, 159, 210, 211, 213, 216, 217, 218, 224, 227, 240, 253, 254, 262, 266, 298, 304, 305], "readabl": [4, 12, 14, 41, 49, 97, 129, 223, 226, 227, 234, 236], "reader": [4, 5, 11, 12, 24, 49, 51, 157, 214, 227, 262, 292, 298, 303], "readi": [3, 11, 22, 140, 145, 217, 227, 243], "readili": [82, 105], "readlin": 258, "readm": 2, "readthedoc": [5, 97, 266], "reagent": 222, "real": [12, 13, 14, 15, 16, 19, 20, 22, 23, 24, 29, 32, 33, 42, 44, 46, 47, 48, 50, 61, 69, 70, 71, 73, 74, 75, 76, 77, 81, 85, 86, 91, 94, 96, 99, 101, 105, 111, 115, 121, 125, 127, 137, 142, 159, 161, 164, 165, 172, 190, 204, 212, 215, 218, 222, 223, 224, 227, 228, 230, 234, 235, 237, 239, 242, 243, 245, 246, 247, 252, 256, 260, 291, 292, 299, 305, 306], "real_el": 46, "real_field": 42, "real_gaunt": 212, "real_num": 86, "real_numb": [22, 46], "real_root": [75, 223, 245], "realel": [217, 218], "realelementshandl": 46, "realelementspred": 46, "realfield": [217, 218], "realgaunt": 212, "realhandl": 46, "realist": 109, "realiz": [16, 52, 54, 60, 71, 74, 99, 109, 146, 214, 215, 220, 247], "realli": [3, 11, 12, 13, 14, 15, 20, 22, 23, 24, 69, 81, 109, 144, 194, 216, 217, 226, 228, 234, 236, 237, 239, 243, 259, 268, 297, 299], "realnormedalgebra": 42, "realnumb": 69, "realpred": 46, "reals_onli": 105, "rear": 144, "rearrang": [33, 126, 135, 154, 155, 176, 243, 292], "reason": [3, 5, 11, 12, 13, 14, 15, 18, 22, 23, 24, 35, 36, 42, 50, 61, 67, 69, 73, 77, 94, 97, 102, 105, 135, 136, 142, 144, 149, 152, 156, 163, 197, 207, 211, 216, 217, 220, 221, 224, 227, 235, 237, 239, 243, 246, 256, 262, 263, 265, 266, 291, 292, 294, 295, 299, 300, 301], "reassembl": 223, "reassign": 142, "rebas": [9, 11], "rebuild": [14, 15, 24, 69, 223, 300], "rebuilt": [15, 300], "recal": [24, 69, 105, 220, 222, 237, 297, 299, 300, 306], "recalcul": [135, 223], "recast": [94, 239, 245, 246], "reccur": 247, "receiv": [16, 38, 52, 69, 70, 109, 131, 187, 222, 252], "recent": [3, 12, 13, 14, 16, 19, 22, 23, 24, 29, 31, 33, 34, 35, 36, 37, 38, 43, 44, 45, 50, 51, 61, 69, 70, 73, 77, 79, 96, 99, 100, 101, 102, 105, 107, 108, 111, 125, 212, 214, 216, 217, 218, 220, 223, 226, 234, 235, 243, 245, 246, 256, 259, 261, 263, 265, 266, 268, 297, 301], "recherch": 224, "recip": [227, 265], "reciph": 70, "reciproc": [105, 247, 305], "reciprocal_distribut": 247, "reciprocaltrigonometricfunct": 24, "recogn": [13, 14, 16, 29, 34, 36, 69, 70, 74, 84, 109, 117, 126, 215, 218, 226, 235, 236, 245, 252, 297], "recognis": [94, 217, 237, 239], "recommend": [4, 8, 9, 11, 13, 14, 15, 16, 17, 22, 24, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 49, 50, 69, 70, 73, 105, 112, 113, 115, 129, 154, 159, 186, 202, 210, 215, 216, 217, 218, 224, 240, 243, 246, 252, 256, 263, 275, 276, 291, 292, 303, 306], "recomput": [65, 223], "reconnect": 50, "reconstruct": [14, 27, 70, 105, 216, 220, 240, 300], "reconstuct": 220, "record": [11, 52, 63, 69, 222, 227, 258], "recov": [70, 96, 111, 197, 220, 222, 223, 240, 243], "recreat": [14, 69, 134], "rectangl": [79, 80, 82, 84, 85, 213, 223], "rectangular": [105, 213, 235, 246, 275], "rectum": 79, "recur": 69, "recurr": [68, 74, 91, 105, 222, 233, 239, 243, 247, 267], "recurrence_memo": 267, "recurs": [15, 16, 19, 22, 24, 48, 69, 74, 94, 96, 99, 105, 109, 113, 144, 213, 220, 223, 224, 227, 228, 232, 234, 239, 245, 246, 251, 256, 258, 262, 263, 265, 296, 305], "recursionerror": 14, "recursiveseq": 233, "red": [12, 213], "red_groebn": 220, "redefin": [12, 14, 24, 61, 69, 140, 154, 156, 215, 266], "redistribut": [0, 223], "reduc": [5, 16, 23, 27, 30, 37, 43, 45, 47, 51, 65, 69, 70, 72, 74, 75, 77, 84, 85, 94, 96, 105, 109, 112, 125, 126, 156, 174, 192, 214, 216, 217, 218, 220, 221, 222, 223, 224, 228, 233, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 249, 265, 266, 301], "reduce_abs_inequ": 242, "reduce_alg_num": 222, "reduce_anp": 222, "reduce_el": [214, 222], "reduce_inequ": [18, 31, 242, 245], "reduce_rational_inequ": 242, "reduce_toti": 13, "reduced_expr": [228, 239], "reduced_mod_p": 222, "reduced_row_echelon_form": 216, "reduced_toti": [70, 74, 109], "reduct": [51, 105, 136, 216, 220, 222, 240], "reduction_formula": 236, "redund": [3, 12, 22, 60, 67, 99, 105, 112, 113, 115, 216, 243, 260, 291, 292], "reev": 61, "reevalu": 297, "reexpress": [202, 276], "ref": [3, 60, 75, 105, 123, 159, 232, 247, 261, 301], "ref_fram": 140, "refactor": [13, 243, 251, 262], "refer": [2, 3, 5, 11, 12, 13, 14, 15, 16, 20, 23, 24, 25, 29, 31, 32, 33, 34, 35, 37, 38, 40, 44, 45, 46, 48, 50, 53, 55, 57, 58, 60, 61, 62, 63, 67, 70, 72, 74, 75, 77, 79, 84, 85, 86, 91, 97, 98, 99, 104, 106, 110, 112, 113, 115, 116, 117, 123, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 140, 142, 144, 152, 154, 157, 159, 160, 161, 163, 165, 169, 171, 173, 174, 175, 178, 180, 181, 189, 190, 192, 201, 202, 203, 204, 206, 208, 210, 216, 217, 219, 227, 229, 230, 232, 235, 239, 242, 243, 244, 245, 247, 253, 262, 265, 266, 268, 271, 275, 276, 280, 288, 289, 297, 301, 302, 305, 306], "referenc": [5, 11, 53, 58, 109, 140, 144, 189, 222], "reference_fram": [132, 137, 202], "reference_quant": 199, "referencefram": [4, 13, 115, 130, 131, 132, 134, 135, 137, 138, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 154, 155, 156, 157, 159, 160, 202, 203, 204, 206, 207, 208, 209, 210, 288, 291, 292], "refin": [43, 45, 69, 105, 214, 218, 222, 223, 239, 260, 283], "refine_ab": 47, "refine_arg": 47, "refine_atan2": 47, "refine_im": 47, "refine_matrixel": 47, "refine_pow": 47, "refine_r": 47, "refine_root": [218, 222, 223], "refine_sign": 47, "refinementfail": 220, "reflect": [31, 38, 53, 57, 61, 69, 79, 80, 85, 98, 121, 161, 164, 165, 202], "reflected_port": 164, "reflected_pow": 164, "reflective_filt": 164, "reflex": 82, "reform": 82, "reformat": 188, "refract": [161, 163, 165, 166], "refraction_angl": 165, "refractive_index": 163, "refus": [22, 305], "reg_point": 271, "regard": [24, 51, 70, 77, 97, 160, 192, 214, 215, 229, 245, 246], "regardless": [3, 4, 24, 61, 69, 96, 109, 216, 220, 235, 239, 265, 275, 280, 305], "regex": 13, "regg": 212, "regge58": 212, "regge59": 212, "region": [48, 77, 86, 96, 117, 213, 235, 243, 246, 247, 271, 274, 281], "regist": [13, 43, 44, 45, 70, 188], "register_handl": [13, 43], "register_mani": [13, 44, 45], "registr": 13, "registri": 69, "regress": 11, "regul": 222, "regular": [3, 11, 12, 13, 14, 16, 22, 23, 51, 57, 69, 70, 73, 77, 85, 91, 92, 96, 109, 142, 186, 217, 224, 243, 253, 258, 304, 305], "regular_point": 271, "regularpolygon": [4, 80, 81, 85, 213], "reidel": 229, "reidemeister_present": 51, "reimport": 16, "reindex": 223, "reintroduc": 65, "reinvent": 13, "reject": [22, 23, 109, 240, 268], "rel": [4, 5, 32, 49, 50, 59, 60, 61, 62, 66, 67, 68, 69, 70, 73, 74, 80, 94, 105, 109, 111, 130, 131, 134, 135, 137, 138, 141, 147, 156, 157, 164, 191, 202, 206, 210, 211, 214, 216, 217, 220, 222, 235, 237, 242, 245, 247, 258, 265, 275, 276, 280, 292, 299], "rel_op": [31, 69], "rela": 214, "relat": [2, 3, 4, 5, 11, 12, 14, 15, 23, 43, 45, 46, 48, 51, 53, 59, 60, 67, 71, 74, 75, 85, 91, 94, 96, 105, 109, 111, 112, 113, 115, 116, 119, 121, 128, 135, 138, 146, 149, 152, 153, 159, 161, 166, 174, 176, 196, 202, 206, 210, 212, 213, 214, 216, 220, 222, 223, 224, 226, 227, 231, 233, 234, 237, 239, 240, 242, 243, 245, 246, 247, 265, 292, 305], "relation_dict": 71, "relation_with_other_funct": 77, "relations_sort": 31, "relationship": [16, 18, 22, 50, 69, 74, 76, 96, 109, 115, 140, 153, 176, 201, 202, 208, 211, 217, 245, 292], "relative_ord": [59, 60], "relativist": 127, "relator_bas": 51, "relax": [105, 111], "relb": 214, "releas": [5, 8, 11, 13, 69, 96, 105, 111, 156, 213, 252, 263, 292, 300], "relev": [3, 4, 5, 11, 12, 13, 14, 22, 50, 67, 82, 97, 98, 131, 135, 137, 140, 144, 197, 207, 211, 217, 237, 243, 244, 253, 258, 279], "reli": [2, 12, 13, 50, 105, 110, 122, 220, 226, 227, 234, 239, 246, 261, 266, 301], "reliabl": [48, 69, 243, 263, 295], "reload": 8, "reloc": 109, "rels_h": 60, "rels_k": 60, "reltol": 50, "rem": [217, 218, 220, 223], "rem_z": 223, "remain": [3, 12, 13, 15, 24, 44, 45, 50, 60, 61, 63, 65, 69, 70, 75, 94, 105, 109, 111, 126, 142, 191, 208, 210, 211, 222, 223, 224, 233, 236, 237, 243, 244, 245, 247, 249, 253, 262, 265, 266, 275, 280, 291, 294, 297, 299, 300, 301], "remaind": [16, 68, 69, 70, 109, 215, 217, 218, 221, 223, 243], "remainder_modulus_pair": 109, "remainin": 220, "remark": [220, 226, 237, 243], "remedi": 94, "rememb": [3, 4, 11, 12, 14, 16, 24, 36, 99, 105, 126, 129, 159, 210, 211, 227, 239, 245, 248, 266, 292, 300, 305], "remot": [9, 69], "remov": [3, 11, 12, 13, 14, 22, 31, 42, 43, 44, 60, 63, 67, 69, 73, 75, 77, 84, 85, 94, 99, 105, 109, 112, 117, 119, 121, 131, 134, 135, 149, 151, 156, 176, 192, 218, 220, 223, 225, 226, 227, 239, 240, 243, 245, 246, 248, 249, 259, 260, 261, 263, 265, 266, 294, 305], "remove_handl": [13, 43], "remove_load": [117, 119, 121, 131], "remove_memb": 121, "remove_nod": 121, "remove_redundant_sol": 243, "remove_support": 121, "removeo": [69, 159, 227, 295], "ren": 50, "renam": [3, 50, 96], "render": [2, 4, 5, 8, 11, 12, 50, 69, 97, 207, 213, 227, 266, 304], "render_as_modul": 50, "render_as_source_fil": 50, "renewcommand": 227, "renumb": 243, "reorder": [11, 61, 68, 75, 192, 223, 243, 247, 265], "reorder_limit": 68, "rep": [22, 60, 65, 69, 176, 214, 216, 217, 218, 222, 223, 236, 239, 268], "rep1": [221, 236], "rep_expect": 187, "rep_innerproduct": 187, "repeat": [8, 9, 15, 16, 60, 63, 68, 69, 75, 77, 96, 98, 105, 109, 111, 176, 178, 192, 213, 214, 215, 220, 222, 223, 227, 233, 243, 247, 251, 252, 259, 261, 265, 305], "repeated_decim": 111, "repeatedli": [34, 109, 126, 259], "repetit": [253, 265], "rephras": 295, "repid": 221, "repl": [15, 253], "repl_dict": 69, "replac": [3, 4, 9, 12, 13, 14, 15, 16, 22, 48, 50, 60, 68, 69, 70, 73, 74, 75, 77, 79, 83, 96, 99, 105, 109, 110, 111, 129, 131, 132, 134, 159, 181, 187, 202, 213, 214, 220, 223, 224, 228, 234, 236, 237, 239, 243, 245, 246, 253, 254, 265, 266, 268, 292, 294, 303], "replace_in_add": 50, "replace_non": 187, "replace_with_arrai": [13, 253, 254], "replacement_dict": 253, "replaceoptim": 50, "replic": 144, "repmatrix": 13, "repo": [9, 11, 12, 142], "report": [12, 41, 48, 60, 69, 82, 105, 109, 224, 235, 246, 258, 301, 306], "report_": 258, "report_cdiff": 258, "report_ndiff": 258, "report_only_first_failur": 258, "report_udiff": 258, "reportedli": 70, "repositori": [2, 5, 9, 40], "repr": [13, 14, 50, 96, 186, 217, 222, 227, 258, 304], "repres": [2, 12, 13, 14, 15, 16, 19, 22, 23, 24, 27, 32, 34, 36, 42, 44, 46, 49, 50, 51, 52, 53, 58, 59, 60, 61, 62, 64, 65, 68, 69, 70, 71, 74, 75, 77, 79, 80, 82, 84, 85, 86, 91, 92, 96, 98, 99, 101, 104, 105, 109, 111, 112, 113, 115, 117, 118, 122, 123, 125, 130, 131, 134, 135, 137, 138, 140, 141, 142, 144, 145, 146, 147, 150, 152, 154, 155, 156, 157, 159, 161, 163, 164, 166, 178, 179, 181, 185, 186, 189, 190, 192, 194, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 218, 220, 223, 225, 227, 229, 230, 233, 234, 235, 237, 239, 240, 243, 245, 246, 247, 248, 249, 251, 252, 253, 260, 262, 265, 266, 271, 274, 278, 280, 288, 291, 292, 295, 297, 299, 300, 305, 306], "represantit": 214, "represent": [13, 14, 15, 24, 29, 33, 42, 49, 50, 51, 52, 60, 63, 69, 70, 75, 77, 81, 89, 91, 93, 94, 96, 98, 99, 100, 101, 105, 108, 109, 122, 123, 128, 129, 131, 140, 152, 156, 161, 176, 181, 186, 187, 189, 190, 192, 194, 201, 207, 208, 210, 213, 214, 216, 218, 220, 222, 223, 224, 225, 226, 227, 229, 237, 239, 240, 243, 246, 247, 252, 253, 266, 268, 271, 274, 281, 289, 295, 297, 300], "reprifi": 227, "reproduc": [2, 12, 14, 29, 223, 258, 305], "reproduct": 12, "reprprint": 227, "request": [2, 3, 4, 5, 8, 9, 12, 13, 22, 29, 40, 48, 69, 73, 85, 94, 109, 142, 192, 213, 220, 223, 251, 259], "requir": [0, 2, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 24, 26, 34, 38, 40, 50, 60, 69, 70, 72, 73, 77, 79, 80, 82, 83, 86, 88, 99, 105, 108, 109, 110, 111, 112, 113, 115, 117, 123, 129, 130, 131, 134, 135, 137, 138, 140, 142, 144, 146, 153, 157, 166, 189, 201, 202, 204, 212, 213, 214, 216, 217, 218, 220, 222, 224, 227, 230, 236, 237, 240, 243, 245, 246, 247, 251, 258, 259, 260, 261, 263, 265, 266, 274, 275, 276, 291, 292, 301, 303], "requisit": 157, "rersiv": 218, "rerun": [8, 11, 12, 223, 258], "res_": 237, "research": [11, 20, 61, 125, 216, 224, 239], "researchg": [221, 247], "reseed": 265, "resembl": [15, 71, 77, 96, 252], "reserv": [15, 22, 142, 253, 260, 301], "reset": [11, 60, 62, 213, 220, 223, 258, 261, 263], "reshap": [50, 105, 142, 159, 248, 254, 265], "resid": 5, "residu": [12, 65, 70, 74, 109, 218, 220, 237], "residue_ntheori": [13, 74, 109, 220, 240], "residue_theorem": 234, "residuos": 70, "resist": [79, 85, 117, 118, 119, 236, 291], "resiz": [60, 61, 101, 105], "resolut": [44, 45, 240], "resolv": [22, 23, 29, 31, 32, 33, 34, 35, 36, 37, 69, 96, 236, 239, 245], "resourc": [4, 5, 8, 13, 24, 105, 221, 243, 259], "resp": [215, 218, 243], "respect": [4, 9, 12, 13, 15, 16, 24, 27, 36, 43, 45, 46, 48, 49, 50, 51, 59, 60, 61, 64, 65, 67, 68, 69, 71, 74, 75, 77, 79, 81, 85, 86, 91, 92, 94, 96, 99, 101, 105, 109, 111, 112, 113, 115, 117, 118, 121, 125, 131, 132, 134, 137, 140, 141, 146, 153, 155, 157, 159, 166, 181, 194, 195, 201, 202, 206, 208, 211, 212, 213, 214, 216, 217, 218, 220, 222, 223, 224, 227, 229, 230, 233, 235, 239, 240, 243, 244, 245, 246, 247, 248, 252, 253, 258, 260, 271, 273, 274, 275, 276, 277, 278, 279, 280, 291, 292, 295, 305], "respond": [11, 69], "respons": [27, 68, 69, 125, 142, 213, 260], "rest": [3, 13, 14, 94, 97, 99, 102, 118, 127, 142, 146, 152, 197, 214, 217, 247, 265, 291, 292, 297, 298, 305], "restor": [16, 217, 239], "restrict": [12, 15, 22, 24, 31, 50, 58, 69, 70, 77, 105, 117, 118, 192, 196, 214, 217, 222, 224, 242], "restrict_codomain": 214, "restrict_domain": 214, "restructur": 5, "restructuredtext": [4, 5], "result": [2, 4, 8, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 38, 42, 43, 44, 45, 46, 48, 49, 50, 59, 60, 61, 65, 68, 69, 70, 71, 73, 75, 77, 81, 86, 87, 91, 93, 94, 96, 98, 99, 101, 105, 108, 109, 110, 111, 112, 117, 125, 126, 129, 130, 131, 132, 135, 136, 141, 142, 146, 152, 156, 159, 175, 177, 184, 186, 187, 189, 191, 192, 194, 195, 196, 197, 201, 202, 211, 213, 214, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 229, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 251, 252, 254, 258, 259, 260, 262, 263, 265, 266, 268, 271, 274, 276, 291, 292, 297, 299, 300, 301, 305], "result_5397460570204848505": [50, 260], "result_dom": 217, "result_sympi": 217, "result_var": [50, 260], "result_vari": 260, "result\u2085\u2081\u2084\u2082\u2083\u2084\u2081\u2086\u2088\u2081\u2083\u2089\u2087\u2087\u2081\u2089\u2084\u2082\u2088": 50, "ret": 105, "retain": [61, 69, 75, 77, 96, 109, 111, 223, 228, 236, 239], "retard": 164, "rethink": 172, "retract": 223, "retri": [13, 96, 109], "retriev": [13, 19, 52, 67, 105, 140, 223, 239, 253], "retriv": 105, "return": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 20, 22, 23, 24, 29, 32, 33, 35, 37, 38, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 91, 92, 94, 96, 98, 99, 100, 101, 105, 106, 108, 109, 111, 112, 113, 115, 116, 117, 119, 121, 123, 125, 126, 127, 128, 130, 131, 132, 135, 136, 137, 138, 140, 141, 142, 144, 146, 150, 154, 156, 157, 159, 161, 163, 164, 165, 166, 168, 169, 173, 176, 177, 178, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 206, 208, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 239, 240, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 271, 274, 276, 278, 291, 292, 294, 295, 300, 301, 304, 305, 306], "return_expr": 111, "return_mpmath": 223, "return_typ": 50, "returnvalu": 260, "reurn": 75, "reus": [12, 16, 24, 50, 192, 299], "rev": 69, "rev1": 147, "rev2": 147, "reveal": [29, 32, 34, 50, 109, 216, 246, 300], "revers": [5, 27, 53, 58, 61, 68, 69, 70, 75, 96, 97, 99, 105, 109, 125, 191, 202, 207, 214, 216, 220, 223, 224, 227, 228, 235, 239, 243, 265, 305], "reverse_ord": 68, "reversedgradedlexord": 223, "reversedsign": 69, "revert": [13, 218, 223], "review": [4, 5, 11, 12, 158], "revis": [11, 245], "revisit": [12, 150, 210], "revolut": 134, "revolv": 121, "rewrit": [12, 68, 69, 71, 74, 75, 77, 94, 96, 99, 117, 125, 189, 218, 223, 234, 235, 236, 239, 243, 244, 245, 246, 247, 283, 299, 301], "rewrite_complex": 96, "rewriterul": 96, "rewritten": [24, 69, 74, 75, 77, 96, 142, 189, 196, 234, 239, 243, 245, 305], "rf": [36, 68, 74, 223], "rfloor": [69, 75, 111, 218, 246, 247], "rfunction_format": 227, "rfunction_str": 227, "rg": 58, "rgs_enum": 58, "rgs_gener": 58, "rgs_rank": 58, "rgs_unrank": 58, "rh": [13, 18, 31, 34, 36, 50, 59, 61, 69, 100, 105, 112, 115, 131, 135, 140, 142, 149, 150, 151, 216, 225, 227, 229, 243, 245, 246, 277, 291, 292], "rho": [16, 71, 94, 105, 109, 145, 186, 227, 247, 253, 281], "rhs_x": 142, "ri": [69, 227], "riccati_equ": 243, "riccati_inverse_norm": 243, "riccati_norm": 243, "riccati_reduc": 243, "riccati_special_minus2": 243, "riccatispeci": 243, "ricci": 71, "rice": 247, "rich": [159, 239], "richard": [0, 109], "richardon": 217, "richardson": [73, 234, 246], "richer": 212, "riemann": [15, 71, 74, 75, 94, 214, 239, 253], "riemann_cycl": 253, "riemann_cyclic_replac": 253, "riemann_sum": 96, "riemann_summation_method": 96, "riemann_xi": 227, "riemannxi": 227, "rieselprim": 109, "right": [3, 4, 5, 8, 11, 12, 13, 16, 20, 24, 27, 30, 31, 34, 36, 42, 48, 50, 51, 60, 61, 65, 69, 70, 72, 74, 75, 77, 85, 86, 94, 96, 99, 105, 108, 109, 111, 112, 113, 117, 118, 119, 121, 125, 135, 140, 141, 142, 156, 159, 160, 164, 171, 176, 178, 180, 181, 186, 189, 192, 201, 202, 208, 211, 212, 213, 214, 216, 222, 223, 224, 225, 227, 229, 230, 234, 235, 237, 243, 244, 246, 247, 258, 260, 262, 265, 278, 291, 292, 295, 299, 301, 305], "right_hand_sid": 140, "right_open": 235, "right_support": 119, "rightarrow": [49, 61, 65, 70, 74, 75, 77, 91, 92, 94, 96, 99, 105, 109, 213, 222, 234, 246, 249, 265, 295], "righthand": 115, "rightmost": [24, 192], "rigibodi": 159, "rigid": [13, 115, 118, 121, 131, 135, 137, 142, 144, 147, 152, 159, 202, 210, 288, 291], "rigid_bodi": 13, "rigid_tendon": 115, "rigid_tendon_muscl": 115, "rigidbodi": [13, 130, 131, 134, 135, 137, 140, 144, 145, 147, 149, 150, 151, 153, 157, 159, 291], "rigidli": 201, "rigor": [3, 77, 211, 260], "rim": 235, "ring": [15, 29, 72, 92, 105, 106, 210, 215, 216, 220, 222, 223, 224, 225, 226, 227, 265], "ring_seri": 224, "ringel": 216, "rioboo": 96, "risc": [91, 243, 271], "risc_1355": 271, "risc_2244": 91, "risc_5387": 243, "risch": [13, 96, 295], "risch_integr": 96, "rise": [68, 74, 77, 212, 239, 243, 247, 275], "riseup": 11, "risingfactori": [68, 74, 77, 227, 229], "risk": 38, "riski": 227, "rivista": 197, "rk": 185, "rk4": 91, "rkgate": 185, "rl1": 236, "rl2": 236, "rm": [8, 50], "rm4": 70, "rmul": [61, 216], "rmul_with_af": 61, "rmultipli": 105, "rn": [69, 71], "rng": 69, "roach": [94, 237], "roach1996": 237, "roach1997": 237, "robert": [0, 109, 216, 247], "robertson": 240, "robot": 152, "robust": [12, 36, 66, 69, 73, 219, 239, 243], "robustli": 29, "roch": 243, "rocklin": 0, "rod": 210, "roken": 268, "role": [22, 75, 225], "roll": [143, 144, 152, 210, 247, 288], "roller": [117, 118, 121], "room": [7, 214], "root": [12, 16, 22, 24, 30, 33, 38, 42, 48, 50, 68, 69, 70, 75, 77, 91, 92, 93, 94, 96, 98, 100, 105, 109, 111, 159, 197, 212, 214, 215, 218, 222, 224, 226, 227, 237, 239, 243, 245, 246, 247, 258, 262, 265, 299, 301, 304, 306], "root1": 98, "root2": 98, "root_index": 218, "root_not": 227, "root_of_un": 75, "root_scalar": 35, "root_spac": 98, "root_system": 98, "rootof": [29, 75, 223], "rootoftool": [75, 105, 223], "rootsum": [96, 223, 229], "rootsystem": 98, "rop": [69, 210], "ropen": [48, 75, 235, 247], "rose": 60, "rosen": 109, "rot": [4, 85, 189], "rot13": 70, "rot90": 105, "rot_axis1": 105, "rot_axis2": 105, "rot_axis3": 105, "rot_ccw_axis1": 105, "rot_ccw_axis2": 105, "rot_ccw_axis3": 105, "rot_given": 105, "rot_ord": [134, 202, 206, 273], "rot_typ": [134, 202, 206, 208], "rotat": [13, 42, 57, 60, 62, 69, 78, 79, 80, 82, 84, 85, 117, 118, 134, 138, 140, 141, 144, 147, 149, 151, 153, 157, 160, 176, 189, 201, 202, 206, 208, 210, 211, 212, 213, 265, 271, 273, 276, 278, 280, 291], "rotate_left": 265, "rotate_point": 42, "rotate_right": 265, "rotated_fram": 134, "rotating_reference_fram": 204, "rotation_axi": 134, "rotation_coordin": 134, "rotation_matrix": [271, 273, 276], "rotation_ord": [202, 271, 273], "rotation_spe": 134, "rou": 0, "rough": 197, "roughli": [22, 69, 70, 110, 143, 243, 266], "round": [15, 24, 35, 48, 50, 69, 73, 74, 75, 105, 165, 216, 218, 222, 223, 234, 236, 247], "round_trip": 70, "round_two": 222, "roundfunct": 75, "roundoff": 294, "roundrobin": 265, "routin": [14, 36, 50, 58, 68, 69, 70, 71, 94, 99, 105, 109, 135, 164, 192, 216, 220, 223, 226, 227, 228, 239, 240, 243, 244, 245, 246, 259, 265, 278], "rou\u010dka": 0, "row": [34, 46, 49, 50, 51, 58, 61, 69, 74, 100, 101, 105, 106, 108, 109, 115, 125, 140, 142, 144, 159, 160, 187, 201, 202, 211, 216, 222, 227, 237, 246, 247, 252, 266, 271, 273], "row1": 105, "row2": 105, "row_del": [105, 301], "row_echelon_form": 216, "row_insert": [105, 301], "row_join": [105, 144], "row_matrix": 159, "row_swap": 105, "rowend": 105, "rowmatrix": 159, "rowsep": 105, "rowslic": 216, "rowslist": [105, 216], "rowspac": [105, 216], "rowstart": 105, "royal": 158, "rp": [0, 85, 164], "rpent": 80, "rpm": 8, "rq0": 29, "rq1": 29, "rq2": 29, "rq3": 29, "rr": [49, 69, 87, 216, 217, 223, 224], "rr100": 217, "rref": [105, 216], "rref_den": 216, "rref_matrix": [105, 216], "rref_pivot": [105, 216], "rref_rh": 105, "rrw": 72, "rs_": 224, "rs_asin": 224, "rs_atan": 224, "rs_atanh": 224, "rs_co": 224, "rs_compose_add": 224, "rs_cos_sin": 224, "rs_cosh": 224, "rs_cot": 224, "rs_diff": 224, "rs_exp": 224, "rs_fun": 224, "rs_hadamard_exp": 224, "rs_integr": 224, "rs_is_puiseux": 224, "rs_lambertw": 224, "rs_log": 224, "rs_mul": 224, "rs_newton": 224, "rs_nth_root": 224, "rs_pow": 224, "rs_puiseux": 224, "rs_puiseux2": 224, "rs_series_from_list": 224, "rs_series_invers": 224, "rs_series_revers": 224, "rs_sin": 224, "rs_sinh": 224, "rs_squar": 224, "rs_sub": 224, "rs_swap": 247, "rs_tan": 224, "rs_tanh": 224, "rs_trunc": 224, "rsa": 70, "rsa_": 70, "rsa_private_kei": 70, "rsa_public_kei": 70, "rset": 235, "rsname": 260, "rsolv": 245, "rsolve_hyp": [105, 245], "rsolve_hypergeometr": 229, "rsolve_poli": 245, "rsolve_ratio": 245, "rst": [3, 4, 5, 11, 15, 51, 243, 258], "rsvg": 8, "rtime": 52, "rtol": 50, "ru": 243, "rubik": 60, "rubric": [68, 69], "rudimentari": [2, 24, 220], "ruffini": [29, 38, 105], "ruina": 158, "rule": [3, 5, 11, 12, 13, 14, 20, 22, 24, 50, 60, 61, 68, 69, 77, 92, 94, 96, 99, 105, 117, 135, 141, 142, 173, 176, 197, 202, 208, 211, 212, 216, 218, 224, 226, 227, 228, 233, 237, 239, 243, 253, 265, 266, 278, 297, 300], "run": [3, 4, 5, 8, 14, 15, 16, 20, 22, 24, 26, 51, 60, 61, 63, 69, 70, 94, 105, 110, 111, 135, 140, 144, 145, 159, 192, 207, 213, 214, 227, 237, 239, 243, 244, 245, 255, 256, 259, 261, 262, 265, 266, 290, 297, 304], "run_all_test": 258, "run_in_subprocess_with_hash_random": 258, "rung": [15, 48, 91], "runner": [2, 12, 258], "runtest": [12, 13, 258], "runtim": [2, 15, 50, 69, 136, 266], "runtime_error": 50, "runtimeerror": [16, 48, 50, 235, 246, 265], "runtimeerror_": 50, "runtimewarn": 266, "rusin": 240, "ruskei": [61, 265], "russel": 220, "russian": 5, "rust": 260, "rust_cod": [50, 227], "rustcodegen": 260, "rustcodeprint": 227, "rv": [69, 236, 247, 265], "rvert": 94, "rx": 148, "ry": [148, 159], "ryser": 105, "rz": 148, "r\u2081": 118, "r\u2082": 118, "r\u2083": 118, "s0": [68, 92, 94, 164], "s0020": 61, "s0025": [48, 240], "s0747717183710539": 221, "s0895717706001609": 236, "s1": [22, 52, 60, 68, 82, 85, 92, 125, 203, 214, 223, 230, 240, 265, 274], "s11044": 136, "s1transitivesubgroup": [52, 222], "s2": [22, 52, 60, 61, 68, 82, 85, 125, 203, 214, 223, 230, 234, 240, 265, 274], "s208": 53, "s2transitivesubgroup": [52, 222], "s3": [52, 60, 68, 125, 230, 240], "s3_in_s6": 52, "s3transitivesubgroup": 52, "s4": [52, 61, 125], "s4m": 52, "s4p": 52, "s4transitivesubgroup": [52, 222, 223], "s4xc2": 52, "s5": [52, 60], "s5transitivesubgroup": 52, "s6": 52, "s6transitivesubgroup": [52, 218], "s_": [59, 65, 142, 220], "s_0": 65, "s_1": [51, 265], "s_2": 51, "s_3": 60, "s_4": 52, "s_5": 52, "s_6": 52, "s_aug": 105, "s_field": 71, "s_hexagon_theorem": 81, "s_i": [51, 65, 96, 98], "s_in": 161, "s_is_j": 98, "s_j": [59, 98, 220], "s_k": 51, "s_n": [52, 68, 223, 265], "s_out": 161, "s_postul": 109, "s_solution_of_systems_of_geodetic_polynomial_equ": 221, "s_transvers": 65, "s_x": [79, 85], "s_y": [79, 85], "sa": [85, 223], "saboo": 0, "saddl": 213, "safe": [69, 109, 217, 223, 245, 251, 295], "safeguard": 232, "safeti": [51, 61, 102], "sage": [32, 69, 109, 212, 299], "sai": [3, 5, 11, 14, 15, 20, 22, 51, 59, 68, 69, 70, 98, 109, 129, 135, 142, 152, 159, 197, 210, 211, 214, 215, 216, 220, 222, 226, 227, 234, 237, 240, 243, 245, 246, 247, 266, 294, 299, 305], "said": [0, 3, 15, 42, 46, 50, 55, 109, 197, 208, 210, 211, 215, 243, 246, 247, 271, 278], "sake": [24, 74, 240], "sakki": 265, "salvi": [221, 224], "sam": 247, "same": [3, 4, 5, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 26, 29, 31, 33, 36, 42, 44, 45, 46, 48, 49, 50, 52, 58, 59, 60, 61, 65, 68, 69, 70, 71, 74, 76, 77, 79, 82, 83, 84, 85, 86, 91, 92, 94, 96, 98, 99, 101, 105, 109, 111, 112, 115, 117, 118, 121, 125, 126, 129, 130, 131, 134, 139, 142, 146, 149, 150, 153, 156, 176, 178, 186, 189, 190, 192, 194, 195, 196, 197, 199, 200, 201, 202, 204, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 234, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 248, 252, 253, 254, 256, 258, 260, 261, 262, 263, 265, 266, 268, 271, 273, 275, 276, 280, 291, 292, 295, 297, 300, 301, 304, 305], "same_root": 223, "samp": 247, "samp_list": 247, "sampl": [2, 20, 60, 72, 123, 125, 176, 213, 227, 247, 295, 299], "sample_it": [13, 247], "sample_p": 125, "sampling_": 247, "sampling_dens": 247, "sampling_p": 247, "samuel": 109, "samuelson": [105, 216], "sanit": 268, "sartaj": 0, "sat": [2, 44], "satisfi": [2, 5, 12, 13, 14, 22, 32, 33, 37, 45, 46, 48, 51, 57, 60, 65, 69, 70, 74, 77, 79, 92, 94, 98, 99, 105, 109, 136, 156, 176, 181, 214, 215, 218, 220, 222, 223, 227, 233, 234, 235, 240, 243, 244, 245, 246, 247, 253, 300, 305], "satur": 214, "saunder": 105, "savag": 265, "save": [2, 9, 12, 13, 14, 15, 48, 69, 105, 109, 213, 226, 245, 262], "saw": [108, 217, 305], "sawtooth": 230, "saxena": 221, "sb": 0, "sc": [60, 96], "sca": 220, "scalar": [13, 14, 35, 42, 69, 71, 84, 98, 101, 105, 110, 111, 125, 130, 137, 142, 191, 201, 202, 203, 204, 209, 211, 214, 216, 220, 227, 243, 248, 260, 266, 271, 273, 274, 275, 276, 277, 279, 281, 286, 288], "scalar_field": [203, 208, 271, 274, 278], "scalar_map": 271, "scalar_part": 42, "scalar_potenti": [203, 208, 274, 278], "scalar_potential_differ": [203, 208, 274, 278], "scale": [78, 79, 80, 84, 85, 86, 97, 117, 172, 193, 195, 196, 197, 199, 200, 207, 211, 213, 223, 230, 247, 278, 280], "scale_factor": 199, "scale_matrix": 247, "scale_matrix_1": 247, "scale_matrix_2": 247, "scalex": 230, "scan": [69, 216], "scarc": 220, "scc": 216, "scenario": [14, 109, 247], "scene": [142, 239, 297], "schedul": 3, "schemat": [192, 197, 291, 292], "scheme": [3, 8, 22, 61, 68, 73, 212, 213, 220, 223, 252], "schiehlen": 158, "schirm": 158, "schmidt": 105, "school": [70, 236], "schorn": 240, "schost": 224, "schreier": [60, 65, 67], "schreier_sim": [60, 66, 67], "schreier_sims_increment": [60, 67], "schreier_sims_random": [60, 67], "schreier_vector": 60, "schur": 101, "schur_compl": 101, "schwab": 158, "sci": 212, "scienc": [0, 61, 94, 105, 158, 159, 214, 221, 236, 237, 295], "sciencedirect": [221, 236], "scienceworld": 36, "scientif": [0, 15, 40, 69, 159], "scientificamerican": 24, "scientist": 243, "scipi": [2, 7, 14, 15, 29, 31, 34, 77, 129, 159, 186, 227, 247, 266, 291, 292, 294, 303], "scm": 9, "scopatz": 0, "scope": [4, 11, 50, 152, 156, 256, 305], "scott": 60, "scottish": 247, "scratch": [69, 197], "screen": [3, 15, 97, 207, 211, 258, 304], "screenshot": 213, "script": [2, 4, 11, 15, 26, 41, 77, 207, 259], "scroll": [11, 38], "sculptur": 70, "sdm": [216, 220], "sdm_": 220, "sdm_add": 220, "sdm_berk": 216, "sdm_deg": 220, "sdm_ecart": 220, "sdm_from_dict": 220, "sdm_from_vector": 220, "sdm_groebner": 220, "sdm_irref": 216, "sdm_lc": 220, "sdm_lm": 220, "sdm_lt": 220, "sdm_monomial_deg": 220, "sdm_monomial_divid": 220, "sdm_monomial_mul": 220, "sdm_mul_term": 220, "sdm_nf_mora": 220, "sdm_nullspace_from_rref": 216, "sdm_particular_from_rref": 216, "sdm_rref_den": 216, "sdm_spoli": 220, "sdm_to_dict": 220, "sdm_to_vector": 220, "sdm_zero": 220, "se": 292, "seamless": 292, "seamlessli": [175, 292], "sean": 0, "search": [3, 4, 30, 48, 52, 60, 61, 65, 67, 69, 75, 105, 109, 142, 214, 222, 223, 227, 236, 237, 239, 244, 247, 259], "search_funct": 177, "sec": [75, 96, 123, 222, 227, 236, 305], "secant": [75, 223], "sech": [75, 227], "second": [3, 5, 9, 11, 12, 14, 15, 16, 20, 22, 23, 24, 29, 31, 33, 34, 36, 38, 41, 42, 45, 48, 50, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 79, 82, 83, 85, 96, 105, 109, 110, 113, 117, 118, 123, 125, 126, 129, 131, 134, 135, 137, 138, 141, 142, 146, 149, 151, 152, 153, 155, 157, 163, 165, 166, 169, 173, 178, 181, 186, 187, 189, 190, 195, 196, 197, 199, 201, 202, 203, 210, 211, 213, 216, 217, 218, 220, 221, 222, 223, 227, 229, 237, 239, 240, 243, 245, 246, 247, 248, 249, 265, 266, 271, 274, 275, 276, 288, 291, 292, 294, 299, 300, 301], "second_mo": 117, "second_moment_of_area": [79, 85], "second_reference_fram": 202, "second_system": 271, "secondari": 130, "secondarili": [50, 223], "secondhypergeometr": 243, "secondli": [3, 14, 24, 237], "secondlinearairi": 243, "secondlinearbessel": 243, "secondqu": 192, "secret": [24, 70], "secretli": 70, "section": [3, 5, 8, 10, 11, 12, 14, 15, 16, 22, 24, 25, 42, 49, 51, 60, 61, 68, 69, 70, 72, 76, 77, 79, 85, 94, 99, 105, 111, 117, 118, 134, 141, 142, 157, 195, 197, 208, 211, 214, 217, 220, 222, 227, 230, 234, 237, 243, 253, 262, 263, 265, 275, 276, 277, 278, 282, 292, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306], "section_modulu": [79, 85], "secur": [9, 13], "see": [0, 2, 3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 43, 44, 45, 46, 48, 49, 50, 52, 55, 57, 60, 61, 62, 65, 68, 70, 71, 74, 75, 76, 77, 81, 85, 86, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 105, 106, 109, 110, 111, 115, 123, 129, 131, 134, 135, 136, 140, 148, 150, 154, 156, 161, 164, 167, 168, 177, 181, 182, 186, 187, 188, 189, 191, 192, 195, 197, 202, 207, 210, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 229, 230, 233, 234, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 252, 253, 256, 258, 259, 260, 261, 262, 263, 266, 271, 273, 281, 291, 292, 294, 295, 297, 299, 300, 301, 303, 304, 305, 306], "seed": [12, 58, 60, 69, 70, 79, 82, 83, 105, 109, 220, 247, 258, 265], "seehuhn": 11, "seek": [3, 245], "seem": [12, 14, 18, 22, 24, 93, 94, 142, 197, 214, 216, 239, 243, 305], "seemingli": [68, 246], "seen": [4, 11, 20, 22, 42, 61, 94, 96, 111, 121, 134, 137, 140, 153, 197, 210, 214, 217, 220, 223, 243, 246, 263, 265, 275, 297, 300, 304], "segment": [4, 13, 60, 79, 81, 82, 83, 84, 85, 86, 138, 210, 213, 243, 258, 291, 292], "segment2d": [81, 82, 85, 86], "segment3d": [82, 83], "seldom": 109, "select": [0, 8, 17, 18, 34, 39, 50, 53, 60, 61, 68, 69, 70, 78, 83, 97, 99, 105, 109, 111, 113, 115, 132, 135, 197, 207, 217, 218, 220, 221, 223, 227, 236, 239, 245, 292], "selector": [68, 105, 239, 265], "self": [4, 11, 12, 14, 22, 24, 34, 42, 44, 45, 49, 50, 60, 61, 66, 68, 69, 71, 75, 78, 79, 80, 82, 83, 84, 85, 96, 105, 109, 131, 144, 187, 192, 202, 204, 206, 213, 214, 216, 218, 220, 222, 223, 227, 229, 234, 235, 253, 271, 291, 292], "selfridg": 109, "sell": 299, "semant": [3, 15, 22, 101, 245], "semanticscholar": 109, "semi": [79, 82, 109], "semicircl": 247, "semicolon": 227, "semidefinit": [105, 247], "semidirect": 52, "semilatus_rectum": 79, "semilatusrectum": 79, "semilog": 123, "semisimpl": 98, "semispher": [271, 281], "send": [60, 69, 70, 75, 109, 214, 243, 245, 292], "sender": 70, "sens": [13, 14, 15, 20, 22, 24, 42, 46, 48, 49, 69, 71, 74, 77, 94, 99, 130, 135, 138, 141, 144, 197, 202, 211, 214, 220, 222, 236, 237, 239, 246, 247, 259, 260, 265, 280, 305], "sensibl": [94, 96, 113, 292], "sensit": [69, 111, 125, 159, 213, 220, 239, 258], "sent": [69, 96, 239, 245], "sentenc": [5, 11, 99], "sep": [70, 227, 244, 258], "separ": [3, 4, 11, 12, 13, 15, 16, 20, 23, 24, 26, 31, 37, 49, 57, 69, 70, 75, 77, 94, 96, 105, 126, 130, 134, 138, 140, 156, 157, 160, 165, 189, 192, 202, 213, 215, 216, 218, 220, 223, 224, 227, 236, 239, 240, 243, 244, 246, 251, 256, 258, 262, 266, 268, 271, 297], "separable_integr": [36, 243], "separable_reduc": 243, "separable_reduced_integr": 243, "separablereduc": 243, "separate_integr": 96, "separatevar": [69, 239, 243], "septemb": [61, 262], "seq": [42, 60, 69, 72, 105, 218, 220, 223, 233, 245, 265], "seqadd": 233, "seqbas": 233, "seqformula": 233, "seqmul": 233, "seqper": 233, "sequenc": [5, 16, 42, 48, 50, 53, 56, 59, 60, 61, 65, 67, 68, 69, 70, 72, 74, 77, 79, 82, 83, 84, 85, 86, 93, 99, 101, 105, 108, 109, 112, 115, 125, 159, 165, 191, 192, 216, 218, 221, 227, 229, 231, 234, 236, 237, 239, 240, 243, 244, 246, 253, 256, 259, 260, 265, 267, 268, 283, 291], "sequence_partit": 265, "sequence_partitions_empti": 265, "sequence_term": 68, "sequenti": [49, 53, 70, 75, 271, 273], "serendipit": 236, "seress": 60, "sergei": 0, "sergiu": 0, "seri": [4, 11, 12, 13, 20, 27, 36, 48, 49, 50, 51, 59, 60, 68, 69, 71, 73, 74, 75, 77, 92, 93, 94, 98, 109, 122, 123, 125, 138, 142, 149, 151, 159, 206, 210, 219, 220, 227, 232, 233, 237, 243, 246, 283, 289, 292, 296], "series_approx2": 50, "series_approx3": 50, "series_approx8": 50, "seriesapprox": 50, "seriessolut": 243, "serious": 3, "serv": [5, 12, 13, 15, 20, 24, 44, 45, 50, 52, 66, 69, 76, 92, 222, 243, 244, 268, 298], "servic": 50, "session": [11, 12, 15, 41, 50, 69, 81, 96, 207, 211, 217, 263, 297, 304], "set": [1, 2, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 18, 20, 21, 22, 23, 29, 31, 32, 38, 41, 42, 44, 48, 49, 50, 51, 52, 57, 58, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 82, 84, 86, 87, 88, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 111, 115, 117, 118, 123, 125, 129, 130, 131, 134, 135, 136, 138, 140, 141, 142, 144, 146, 151, 153, 154, 155, 156, 159, 160, 176, 182, 187, 192, 194, 197, 199, 200, 201, 202, 204, 206, 207, 208, 210, 213, 214, 215, 216, 217, 218, 220, 222, 223, 226, 227, 228, 229, 234, 236, 237, 239, 240, 242, 243, 244, 245, 247, 251, 252, 253, 256, 258, 259, 260, 261, 265, 266, 271, 274, 276, 282, 285, 291, 292, 294, 296, 305], "set_": 13, "set_acc": [159, 206, 210], "set_ang_acc": [159, 202], "set_ang_vel": [131, 137, 142, 144, 149, 150, 156, 157, 159, 160, 202, 204, 206, 210, 291], "set_comm": 253, "set_condit": 13, "set_domain": [218, 223], "set_global_relative_scale_factor": 199, "set_global_set": 227, "set_metr": [13, 253], "set_modulu": 223, "set_norm": 42, "set_po": [115, 130, 137, 138, 141, 142, 206, 210, 291, 292], "set_quantity_dimens": 195, "set_quantity_scale_factor": 195, "set_vel": [13, 115, 130, 131, 135, 137, 141, 142, 144, 145, 146, 147, 149, 150, 151, 154, 155, 156, 157, 159, 160, 206, 210, 291, 292], "set_xlabel": [291, 292], "set_ylabel": [291, 292], "setdelai": 111, "seterr": 69, "setitem": 216, "setkind": [69, 104], "setminu": [77, 94], "setsymbol": 22, "setter": [13, 142, 159], "settl": 291, "setup": [6, 10, 11, 12, 13, 50, 69, 146, 147, 161, 202, 220, 223, 225, 226, 237, 258, 259, 261, 270, 304], "seven": 227, "seventh": 113, "sever": [2, 3, 4, 11, 12, 13, 14, 15, 19, 22, 24, 29, 33, 40, 50, 54, 60, 61, 68, 69, 73, 74, 76, 77, 81, 94, 96, 109, 119, 132, 135, 136, 153, 197, 199, 213, 215, 216, 217, 220, 222, 226, 227, 228, 234, 235, 243, 247, 258, 260, 269, 282, 297, 301, 304], "sexi": [44, 45], "sexy_prim": [44, 45], "sexyprim": [44, 45], "sexyprimepred": [44, 45], "sff": 105, "sffge": 105, "sfield": [218, 277], "sfix": 210, "sfu": [77, 96], "sg": [60, 247, 253], "sgen": 65, "sh": 8, "sha": 268, "sha1": 260, "shade": 117, "shadow": [36, 62], "shakthimaan": 7, "shall": [20, 60, 94, 142, 159, 234, 237, 300], "shallow": [218, 234], "shank": 234, "shankar": 55, "shape": [4, 13, 50, 85, 101, 105, 107, 108, 112, 115, 123, 125, 131, 140, 142, 202, 213, 214, 216, 227, 230, 237, 247, 248, 249, 251, 252, 253, 266, 291, 292, 304], "shapeerror": [34, 101, 105], "share": [3, 7, 22, 24, 70, 109, 218, 222, 227, 247, 260], "sharex": [291, 292], "she": [5, 246], "shea": [221, 223], "shear": [117, 118], "shear_forc": [117, 118], "shear_modulu": 117, "shear_stress": 117, "sheet": [77, 236], "shell": [8, 11, 16, 97, 159, 226], "shi": [77, 94, 227, 237], "shier": 247, "shierd": 247, "shift": [54, 60, 61, 63, 70, 77, 80, 84, 86, 99, 213, 218, 220, 223, 230, 237, 245, 247], "shifted_ellips": 79, "shifted_gompertz_distribut": 247, "shiftedgompertz": 247, "shiftx": 230, "ship": [15, 110], "shivam": 0, "sho": 193, "shor": [179, 288], "short": [3, 5, 11, 12, 16, 41, 51, 59, 61, 65, 69, 70, 71, 72, 75, 102, 109, 129, 141, 178, 197, 201, 211, 214, 221, 248, 258, 268, 300, 304], "short_lif": 16, "shortcut": [9, 49, 69, 100, 211, 227, 235, 239, 305], "shorten": [4, 115, 130], "shorter": [13, 38, 69, 79, 129, 154, 201, 214, 218, 227, 260, 268, 292], "shortest": [79, 82, 85, 138, 141, 210, 233, 239, 240, 243, 265], "shorthand": [14, 15, 16, 22, 24, 69, 99, 186, 222, 235, 256], "shortlog": 11, "should": [2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 19, 22, 23, 24, 26, 29, 36, 38, 41, 43, 45, 48, 49, 50, 51, 60, 61, 62, 63, 65, 68, 69, 70, 72, 73, 75, 77, 79, 80, 81, 82, 83, 84, 86, 91, 92, 93, 94, 96, 97, 98, 99, 101, 105, 109, 111, 113, 115, 117, 123, 125, 129, 130, 135, 136, 140, 141, 142, 144, 146, 154, 156, 157, 159, 160, 161, 172, 175, 176, 180, 182, 184, 186, 187, 190, 192, 194, 195, 197, 198, 202, 207, 210, 211, 213, 214, 215, 216, 217, 218, 220, 222, 223, 226, 227, 229, 230, 233, 234, 235, 236, 237, 239, 240, 242, 243, 245, 246, 247, 251, 252, 256, 258, 259, 260, 261, 262, 263, 265, 266, 268, 271, 275, 292, 294, 295, 297, 298, 301], "shoulder": 291, "shouldn": [69, 224], "shoup": [220, 221], "shoup91": 221, "shoup95": 221, "show": [2, 3, 4, 5, 8, 11, 12, 13, 16, 19, 20, 21, 22, 23, 24, 36, 50, 61, 68, 69, 73, 75, 92, 94, 96, 105, 109, 117, 118, 121, 123, 129, 130, 138, 142, 148, 153, 157, 159, 187, 191, 195, 197, 202, 210, 211, 213, 214, 217, 218, 220, 222, 223, 227, 228, 230, 234, 235, 236, 237, 239, 240, 243, 245, 247, 248, 256, 259, 260, 263, 265, 266, 291, 292, 297, 299, 301, 304], "show_ax": 123, "shown": [3, 4, 12, 13, 15, 22, 23, 24, 58, 61, 68, 69, 73, 75, 77, 94, 111, 117, 118, 123, 125, 129, 135, 137, 145, 146, 147, 153, 154, 155, 201, 202, 210, 211, 213, 216, 217, 218, 223, 227, 243, 247, 263, 265, 275, 276, 291, 292, 298], "showpost": 109, "shp": 50, "shrink": [80, 94], "shuffl": [61, 105, 305], "shut": [69, 223], "shutil": 13, "si": [24, 77, 93, 94, 165, 194, 195, 196, 197, 198, 199, 227], "siam": [212, 265], "sibx0afl3q": 246, "side": [12, 14, 16, 20, 22, 31, 33, 36, 50, 60, 61, 69, 81, 85, 96, 105, 109, 115, 117, 125, 135, 140, 141, 156, 160, 180, 181, 197, 201, 202, 212, 214, 220, 222, 225, 227, 244, 246, 247, 251, 258, 260, 281, 292, 295], "siev": [60, 109], "sieve_interv": 109, "sift": [60, 67, 265], "sigma": [16, 61, 92, 94, 105, 227, 230, 247], "sigma3": 167, "sigma_": 247, "sigma_approxim": 230, "sigma_i": [128, 247], "sigma_k": [74, 109], "sigma_not": 68, "sigma_x": 247, "sign": [3, 4, 5, 9, 12, 14, 15, 27, 29, 33, 38, 42, 47, 50, 65, 69, 70, 74, 75, 79, 85, 94, 96, 105, 109, 115, 117, 118, 121, 125, 130, 138, 144, 165, 177, 202, 208, 210, 212, 216, 220, 227, 232, 234, 239, 240, 245, 265, 278, 281, 292, 298], "signal": [27, 77, 99, 109, 112, 123, 125, 159, 220, 292, 300], "signallib": 50, "signatur": [4, 7, 24, 44, 45, 61, 69, 105, 116, 260, 261, 265, 266], "signed_permut": [240, 265], "signedinttyp": 50, "signifi": [60, 69, 117, 223, 247], "signific": [3, 14, 16, 22, 50, 69, 70, 73, 96, 105, 129, 186, 201, 217, 246, 266, 300], "significantli": [13, 34, 50, 73, 129, 154, 218, 229, 259, 262, 292], "signsimp": [69, 150, 239], "signum": 227, "sigsam": 96, "silenc": [3, 256, 263], "silent": [14, 23, 73, 109, 259], "silver": 127, "sim": [60, 65, 67, 94], "similar": [3, 9, 11, 12, 13, 14, 16, 20, 22, 24, 29, 61, 68, 69, 70, 73, 74, 75, 77, 80, 85, 86, 90, 99, 105, 110, 125, 130, 142, 144, 146, 156, 157, 190, 201, 208, 210, 211, 215, 217, 218, 220, 224, 234, 236, 237, 239, 243, 245, 248, 253, 256, 259, 262, 263, 271, 273, 275, 276, 280, 292, 294, 299, 300, 301, 303, 305], "similari": 11, "similarli": [11, 12, 13, 22, 29, 36, 65, 69, 70, 77, 81, 105, 117, 118, 125, 135, 138, 157, 196, 201, 213, 214, 217, 222, 224, 234, 235, 237, 243, 258, 266, 276, 277, 292, 301], "similiar": 138, "simmon": 243, "simon": 247, "simp": [94, 202], "simpfunc": 105, "simpl": [4, 11, 12, 13, 14, 15, 16, 20, 22, 24, 35, 40, 49, 50, 60, 68, 69, 73, 77, 81, 85, 87, 94, 96, 98, 105, 109, 110, 111, 112, 113, 115, 117, 118, 125, 126, 129, 130, 131, 134, 135, 137, 140, 141, 144, 145, 146, 147, 149, 151, 152, 156, 160, 166, 180, 181, 189, 190, 191, 202, 210, 211, 216, 217, 218, 219, 223, 224, 227, 229, 234, 236, 237, 239, 240, 243, 246, 253, 259, 260, 265, 270, 271, 273, 274, 278, 291, 294, 297, 300, 301, 305], "simple_pend": 147, "simple_pend_fram": 147, "simple_root": 98, "simpled": 229, "simpledomain": 218, "simplefilt": 263, "simpler": [12, 15, 23, 24, 29, 42, 69, 73, 77, 93, 94, 149, 211, 216, 220, 236, 237, 239, 243, 245, 246, 305], "simplest": [14, 24, 36, 49, 99, 105, 109, 110, 130, 138, 212, 213, 224, 228, 236, 239, 243, 292, 295, 305], "simplex": 245, "simplfiy_thi": 3, "simpli": [2, 3, 5, 8, 12, 14, 22, 23, 31, 32, 46, 51, 52, 68, 69, 71, 75, 79, 101, 105, 109, 111, 112, 117, 121, 126, 131, 142, 144, 156, 182, 187, 197, 208, 211, 217, 223, 224, 235, 236, 237, 242, 243, 246, 263, 265, 266, 278, 291], "simplic": [24, 237, 243, 291, 292], "simplif": [2, 14, 15, 16, 22, 27, 43, 45, 47, 48, 50, 69, 71, 74, 75, 94, 105, 111, 132, 142, 156, 159, 176, 192, 202, 223, 228, 238, 239, 243, 245, 246, 282, 283, 294, 296, 298, 299], "simplifc": 150, "simplifi": [3, 4, 11, 12, 13, 15, 16, 20, 22, 23, 24, 27, 34, 35, 36, 43, 45, 47, 48, 68, 69, 71, 73, 74, 75, 77, 81, 86, 91, 94, 96, 99, 100, 101, 105, 113, 117, 125, 126, 132, 134, 135, 136, 138, 140, 141, 145, 146, 149, 150, 151, 156, 164, 171, 176, 191, 192, 196, 199, 202, 208, 214, 216, 222, 224, 226, 228, 233, 235, 236, 237, 240, 243, 244, 245, 246, 247, 249, 261, 263, 266, 275, 277, 283, 292, 294, 295, 296, 297, 299, 300, 301], "simplified_pair": 99, "simplify_auxiliary_eq": 150, "simplify_cg": 176, "simplify_gpgp": 126, "simplify_index_permut": 192, "simplify_log": 99, "simplify_thi": [3, 4, 261], "simprot": [142, 159], "simul": [69, 142, 159, 226, 292], "simultan": [16, 69, 75, 82, 105, 109, 116, 213, 236], "sin": [4, 5, 12, 13, 14, 15, 16, 22, 24, 27, 30, 33, 35, 36, 38, 40, 42, 48, 50, 68, 69, 71, 73, 74, 75, 77, 78, 79, 83, 87, 88, 91, 92, 93, 94, 96, 97, 105, 110, 111, 127, 131, 132, 134, 138, 140, 141, 142, 144, 145, 147, 149, 150, 151, 156, 159, 164, 166, 190, 202, 204, 206, 208, 210, 211, 212, 213, 215, 217, 223, 224, 226, 227, 228, 229, 230, 234, 235, 236, 237, 239, 242, 243, 245, 246, 248, 254, 260, 266, 271, 273, 274, 275, 276, 281, 291, 292, 294, 295, 297, 299, 300, 305, 306], "sin_co": 266, "sin_cos_numpi": 266, "sin_cos_sympi": 266, "sin_sol": 235, "sinc": [12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 27, 43, 48, 50, 51, 60, 61, 62, 65, 66, 67, 69, 70, 72, 74, 75, 77, 78, 79, 81, 85, 87, 93, 94, 96, 98, 99, 105, 109, 128, 131, 134, 157, 159, 168, 192, 193, 197, 208, 211, 213, 214, 215, 217, 218, 220, 222, 223, 227, 230, 235, 236, 237, 239, 240, 243, 245, 246, 247, 253, 257, 261, 262, 263, 265, 266, 275, 277, 278, 280, 294, 299, 301, 304, 305, 306], "sinc_funct": 75, "sine": [4, 14, 24, 69, 75, 77, 94, 96, 166, 224, 230, 236, 294], "sine_transform": 96, "sinetransform": 96, "sing": 105, "singh": 0, "singl": [3, 5, 8, 11, 13, 14, 15, 20, 22, 24, 30, 36, 41, 42, 49, 50, 53, 60, 69, 70, 74, 75, 77, 82, 83, 85, 86, 87, 94, 96, 99, 105, 108, 111, 113, 115, 125, 126, 130, 132, 134, 135, 146, 153, 172, 176, 178, 186, 189, 192, 199, 202, 206, 213, 214, 216, 217, 218, 220, 222, 223, 227, 228, 229, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 252, 258, 260, 262, 265, 266, 268, 292, 295, 297, 300, 301, 306], "singlecontinuouspspac": 247, "singledomain": 247, "singlefinitepspac": 247, "singlepspac": 247, "singleton": [15, 61, 99, 246, 300], "singletonregistri": [22, 69], "singli": 109, "singular": [46, 50, 61, 69, 73, 75, 76, 77, 91, 92, 94, 96, 105, 117, 120, 156, 202, 214, 221, 234, 243, 246, 271, 288, 295], "singular_point": 271, "singular_valu": 105, "singular_value_decomposit": 105, "singularhandl": 46, "singularit": [96, 156], "singularity_funct": 77, "singularityfunct": [77, 96, 117], "singularityintegr": 96, "singularmatrix": 46, "singularpred": 46, "sinh": [24, 48, 69, 73, 75, 77, 88, 94, 111, 113, 224, 227, 228, 237, 292, 305], "sinhint": 227, "sinhintegr": 227, "sinint": 227, "sinintegr": 227, "sink": [208, 278], "sinrul": 96, "siq": 109, "siret": 221, "siso": [123, 125], "sisolineartimeinvari": [123, 125], "sit": [125, 211], "site": [5, 109, 261], "situat": [12, 14, 22, 38, 69, 73, 94, 211, 243, 245, 247, 263, 295, 297], "six": [18, 118, 227, 240, 246, 247], "sixteenth": 70, "sixth": 113, "size": [13, 20, 34, 50, 51, 53, 58, 60, 61, 62, 63, 64, 65, 69, 70, 72, 74, 97, 101, 105, 108, 109, 123, 144, 154, 155, 156, 165, 187, 188, 207, 213, 216, 220, 227, 239, 240, 243, 247, 265, 295], "sizeof": 50, "sk": 70, "skelet": [116, 292], "skeleton": 292, "skellam": 247, "skellam_distribut": 247, "skew": [22, 92, 105, 109, 247], "skiena": 61, "skip": [2, 3, 4, 8, 16, 49, 53, 69, 105, 109, 202, 222, 226, 227, 229, 243, 245, 256, 258, 295, 303, 304], "skip_nan": 75, "skip_under_pyodid": 256, "skipp": 12, "skyciv": 85, "slack": [113, 115, 292], "slash": [227, 258], "slate": 258, "slater": [77, 237], "slice": [69, 99, 105, 111, 216, 218, 223, 233, 235, 239, 248, 265, 267], "slide": 134, "slider": [13, 140, 147], "slightli": [12, 14, 35, 41, 42, 50, 65, 109, 111, 144, 213, 214, 216, 218, 220, 223, 227, 237, 239], "slip": [12, 144, 148, 150, 210], "slope": [79, 80, 82, 85, 96, 117, 118, 123, 134], "slot": [65, 176, 248, 252, 253, 300], "slow": [14, 22, 24, 29, 34, 65, 69, 73, 96, 110, 129, 164, 201, 211, 217, 218, 227, 228, 229, 230, 239, 243, 245, 246, 258, 259, 305], "slowdown": [13, 73], "slower": [12, 13, 24, 29, 34, 65, 105, 135, 216, 217, 222, 223, 266, 294], "slowest": [34, 96, 110], "slowli": [73, 234], "slp": 67, "slp_dict": 60, "sm": [109, 142, 159, 214, 291, 292], "small": [20, 32, 50, 51, 52, 60, 61, 69, 73, 74, 96, 99, 105, 109, 125, 146, 150, 159, 189, 212, 213, 216, 218, 220, 221, 222, 239, 240, 245, 265, 292, 294, 297, 299], "smallelementof": 227, "smaller": [15, 50, 60, 61, 69, 70, 74, 77, 85, 96, 101, 109, 154, 215, 216, 217, 220, 223, 230, 236, 237, 240, 245, 265, 294, 305], "smallest": [48, 63, 74, 75, 82, 84, 91, 99, 105, 109, 189, 202, 218, 240, 263, 265], "smallest_angle_between": 82, "smallmatrix": [111, 227, 299], "smart": [132, 156, 234, 240, 243], "smarter": [14, 185, 236], "smith": [0, 13, 106, 216], "smith_normal_form": [13, 106, 216], "smooth": [69, 73, 109, 112, 229, 292], "smoothing_r": 112, "smoothli": 138, "smoothness_p": 109, "smt_builtin_func": 227, "smtlib": 227, "smtlib_cod": 227, "smtlibprint": 227, "sn": [60, 61, 68, 91], "sneak": 12, "snippet": [16, 50], "snr": 50, "so": [0, 2, 3, 4, 5, 9, 11, 12, 13, 14, 15, 16, 19, 20, 22, 23, 24, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 57, 58, 60, 61, 63, 65, 67, 69, 70, 73, 74, 75, 77, 79, 81, 82, 83, 85, 91, 92, 93, 94, 96, 97, 98, 99, 101, 105, 106, 109, 111, 112, 115, 117, 118, 125, 129, 130, 134, 135, 138, 140, 142, 144, 146, 152, 153, 154, 156, 157, 159, 160, 165, 176, 178, 186, 188, 189, 190, 192, 194, 196, 197, 201, 202, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 251, 252, 256, 258, 259, 262, 263, 265, 266, 268, 277, 281, 291, 292, 294, 295, 297, 299, 300, 301, 304, 305, 306], "societi": [158, 240], "socket": 134, "sode0401": 243, "sode0402": 243, "sode0404": 243, "sode0405": 243, "sode0406": 243, "softwar": [2, 5, 96, 221, 299], "soil": 214, "sol": [18, 35, 105, 240, 243, 244, 245, 291, 292], "sol0": 18, "sol1": 243, "sol2": 243, "sol_f": 246, "sol_typ": 135, "sol_uniqu": 105, "sol_vector": 243, "sol_vector_evalu": 243, "sola": 243, "solar": 195, "solar_mass": 195, "solb": 243, "soldner": 77, "soldnersconst": 77, "sole": [13, 14, 29], "solenoid": [203, 274], "solid": [62, 83, 134, 141, 213, 281], "solidspher": 281, "sollist": 243, "soln": 105, "solomon": 70, "solut": [8, 11, 13, 14, 15, 16, 18, 20, 23, 24, 27, 30, 31, 50, 65, 69, 70, 75, 77, 79, 87, 91, 92, 93, 96, 105, 109, 112, 115, 117, 122, 129, 135, 136, 142, 146, 152, 156, 161, 197, 201, 214, 216, 220, 221, 222, 223, 224, 225, 226, 235, 240, 242, 243, 244, 245, 306], "solution2": 34, "solution_dict": [32, 36], "solution_first": 32, "solution_list": [32, 33], "solution_one_soln_set_dict": 36, "solution_outside_2_3": 33, "solution_p4q3": 32, "solution_set": 33, "solution_set_arg": 33, "solutions_list": 36, "solutions_one_soln_set": 36, "solutions_set": 33, "solv": [3, 4, 11, 13, 14, 15, 16, 17, 20, 22, 24, 25, 27, 28, 50, 53, 65, 68, 69, 77, 82, 94, 96, 100, 105, 109, 112, 113, 115, 117, 119, 120, 121, 131, 135, 136, 140, 142, 145, 146, 149, 151, 152, 154, 156, 159, 195, 216, 220, 224, 225, 226, 227, 229, 239, 240, 242, 243, 244, 247, 288, 291, 292, 295, 296, 299, 301, 304], "solvabl": [38, 60, 121, 131, 240, 243, 246, 306], "solve_aux_eq": 243, "solve_congru": [109, 220], "solve_d": 229, "solve_den": 216, "solve_den_charpoli": 216, "solve_den_rref": 216, "solve_expo": 246, "solve_for_func": [243, 244], "solve_for_ild_mo": 117, "solve_for_ild_react": 117, "solve_for_ild_shear": 117, "solve_for_reaction_load": [117, 118], "solve_for_tors": 117, "solve_ivp": [36, 291, 292], "solve_least_squar": 105, "solve_lin_si": [11, 13, 225], "solve_linear": 245, "solve_linear_system": 245, "solve_linear_system_lu": 245, "solve_log": 246, "solve_multipli": [135, 146], "solve_poly_inequ": 242, "solve_poly_system": [215, 223, 245, 246], "solve_rational_inequ": 242, "solve_riccati": 243, "solve_slope_deflect": 117, "solve_triangul": 245, "solve_undetermined_coeff": 245, "solve_univariate_inequ": [31, 242, 246], "solvefun": 244, "solver": [2, 4, 11, 12, 15, 32, 35, 44, 77, 105, 109, 135, 140, 152, 159, 160, 201, 216, 219, 227, 239, 240, 244, 258, 282, 283, 289, 296, 298], "solveset": [3, 24, 35, 38, 135, 159, 225, 241, 242, 245, 283, 306], "solveset_complex": 246, "solveset_r": 246, "solvifi": [242, 246], "some": [2, 3, 4, 7, 8, 9, 11, 12, 14, 15, 16, 20, 22, 23, 24, 27, 29, 32, 33, 34, 35, 37, 38, 40, 41, 42, 46, 49, 50, 51, 52, 57, 60, 61, 67, 68, 69, 70, 73, 74, 75, 77, 79, 80, 81, 85, 94, 96, 98, 99, 101, 105, 109, 110, 111, 123, 126, 129, 131, 134, 137, 140, 142, 143, 144, 145, 146, 147, 153, 154, 156, 160, 172, 177, 181, 189, 192, 196, 197, 198, 201, 203, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 227, 229, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 247, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 271, 273, 274, 276, 278, 282, 291, 292, 294, 295, 297, 299, 300, 301, 303, 304, 305], "some_filenam": 142, "some_funct": 261, "somehow": [11, 12, 15, 24], "someon": [3, 11, 12, 14, 243, 262, 298], "someth": [3, 4, 5, 9, 11, 13, 14, 15, 16, 22, 23, 24, 38, 48, 50, 69, 70, 73, 79, 94, 99, 105, 109, 129, 142, 143, 159, 185, 198, 201, 213, 217, 218, 226, 234, 235, 239, 243, 246, 258, 260, 266, 294, 297, 299, 300, 303], "sometim": [3, 4, 5, 11, 12, 13, 14, 15, 16, 22, 24, 29, 36, 49, 50, 69, 74, 77, 93, 94, 125, 152, 156, 184, 192, 211, 214, 217, 222, 227, 229, 234, 236, 240, 243, 245, 256, 265, 292, 294, 301], "somewhat": [77, 96, 142, 218], "somewher": [3, 4, 5, 12, 14, 15, 50], "soon": [68, 69, 142, 197, 224], "sop": [96, 99], "sopform": 99, "sophist": [24, 110, 245], "sort": [12, 15, 31, 44, 45, 49, 50, 58, 61, 65, 74, 94, 96, 99, 105, 108, 109, 111, 126, 129, 135, 176, 192, 197, 201, 213, 220, 223, 224, 234, 239, 240, 243, 244, 245, 249, 251, 253, 258, 260, 265, 275, 297, 299, 300], "sort_kei": [58, 69, 243], "sorted_compon": 253, "sosmath": 236, "sought": [60, 109, 177, 187, 216, 239, 245, 246], "sound": [227, 305], "sourc": [0, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 24, 34, 35, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 117, 119, 121, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 198, 199, 200, 202, 203, 204, 206, 207, 208, 212, 213, 214, 216, 217, 218, 220, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 278, 290, 299], "source_cod": 111, "source_format": [50, 227], "sourceforg": [5, 49], "sp": 210, "space": [4, 12, 16, 24, 48, 49, 50, 69, 70, 71, 78, 79, 80, 82, 84, 85, 98, 105, 111, 117, 127, 134, 135, 136, 137, 161, 163, 166, 176, 179, 181, 187, 189, 202, 206, 208, 211, 212, 213, 214, 222, 246, 247, 258, 262, 271, 273, 275, 276, 277, 278, 280, 281, 288, 297, 300], "space_orient": [271, 273], "spacecraft": 158, "spaceorient": [271, 273, 276], "spack": 40, "spam": [7, 268], "spamham": 268, "spammer": 227, "span": [4, 13, 98, 105, 117, 118, 134, 138, 222, 227, 263, 301], "sparingli": 12, "spars": [5, 15, 101, 103, 105, 186, 216, 222, 223, 224, 247, 248, 286, 300], "sparsematrix": [105, 108, 228, 239], "sparsetool": [105, 108], "sparsiti": 216, "spatial": [130, 137, 166, 202, 227], "speak": [105, 222, 278], "spec": [222, 223], "speci": [36, 68, 69], "special": [2, 4, 11, 15, 17, 22, 24, 34, 38, 41, 42, 52, 61, 69, 70, 72, 73, 74, 76, 84, 87, 94, 96, 105, 159, 176, 181, 208, 214, 217, 220, 221, 222, 227, 236, 237, 239, 240, 242, 243, 244, 245, 247, 258, 259, 260, 263, 265, 266, 275, 278, 280, 283, 295, 296, 300], "specialpoli": 223, "specif": [4, 5, 7, 8, 11, 12, 13, 14, 15, 22, 24, 25, 32, 39, 60, 61, 69, 70, 71, 77, 81, 96, 98, 105, 113, 115, 131, 134, 135, 140, 142, 152, 159, 161, 197, 211, 213, 214, 218, 220, 222, 223, 226, 227, 228, 233, 239, 240, 243, 244, 245, 247, 253, 258, 259, 260, 265, 291, 292, 301, 305], "specifi": [4, 5, 13, 14, 18, 22, 24, 29, 34, 35, 37, 38, 49, 50, 51, 64, 68, 69, 70, 71, 72, 75, 77, 78, 82, 85, 94, 96, 98, 99, 101, 104, 105, 109, 111, 112, 113, 115, 117, 118, 119, 121, 125, 130, 131, 134, 135, 140, 141, 142, 144, 145, 146, 147, 149, 152, 154, 155, 156, 157, 159, 160, 176, 181, 186, 187, 189, 190, 195, 201, 202, 204, 206, 208, 210, 211, 214, 215, 216, 217, 218, 220, 222, 223, 224, 227, 229, 230, 233, 234, 235, 237, 239, 243, 244, 245, 246, 247, 248, 252, 253, 254, 258, 259, 260, 265, 266, 271, 273, 274, 277, 280, 291, 292, 295, 301], "spectral": 105, "spectrum": 24, "speed": [2, 4, 11, 13, 45, 50, 60, 69, 70, 73, 105, 109, 110, 127, 131, 134, 135, 136, 140, 142, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 159, 160, 163, 166, 196, 201, 202, 206, 211, 212, 224, 227, 228, 234, 239, 243, 259, 262, 265, 291, 292, 300, 301], "speed_con": 154, "speed_idx": [140, 160], "speed_of_light": [196, 199], "speedup": [69, 105, 110, 220, 224, 266], "spell": [4, 13, 15, 243], "spend": 11, "spent": 266, "sph_jn": 77, "sphere": [15, 141, 164, 271, 281], "spheric": [75, 127, 134, 141, 171, 212, 213, 223, 271, 275, 276, 299], "spherical_bessel_fn": [77, 223], "spherical_harmon": 77, "sphericalbess": 227, "sphericalbesselj": 227, "sphericalharmon": 77, "sphericalharmonici": 77, "sphericaljoint": 134, "sphinx": [3, 5, 8, 11, 75, 243, 258, 263], "sphinx_math_dollar": 5, "sphinxext": 5, "spin": [85, 127, 144, 178, 179, 187, 288], "spin_up": 127, "spinor": 126, "spinstat": 189, "split": [10, 24, 50, 69, 70, 73, 94, 96, 111, 220, 222, 225, 226, 227, 245, 247, 253, 258, 265, 269, 300, 305], "split_1": 69, "split_list": 258, "split_super_sub": 227, "split_symbol": 111, "split_symbols_custom": 111, "splitter": 164, "spoli": 220, "sporad": 12, "spot": [105, 160], "spread": [161, 216, 227, 247, 262], "spring": [27, 109, 130, 131, 135, 140, 142, 147, 291, 292], "spring_const": 292, "spring_damp": 292, "spring_damper2": 292, "spring_damper3": 292, "spring_damper_path": 147, "spring_forc": [130, 131], "springdamp": 292, "springer": [70, 96, 109, 220, 221, 243], "spuriou": [29, 220, 245], "sq": [16, 240], "sq2": 69, "sqf": [215, 218, 223, 240], "sqf_list": [215, 218, 223], "sqf_list_includ": [218, 223], "sqf_norm": [218, 223], "sqf_normal": 240, "sqf_part": [218, 223], "sqr": [218, 223], "sqrt": [4, 12, 13, 14, 15, 18, 22, 24, 27, 29, 30, 31, 32, 33, 37, 38, 42, 46, 47, 48, 50, 69, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 92, 93, 94, 96, 97, 100, 105, 109, 111, 113, 115, 117, 121, 125, 127, 130, 138, 141, 144, 161, 163, 165, 166, 171, 176, 186, 187, 189, 190, 192, 193, 195, 196, 201, 202, 208, 211, 212, 215, 217, 218, 220, 222, 223, 226, 227, 228, 233, 236, 237, 239, 240, 242, 243, 245, 246, 247, 265, 266, 268, 271, 280, 281, 292, 294, 295, 299, 304, 305, 306], "sqrt2": [214, 217], "sqrt3": 217, "sqrt_mod": [109, 240], "sqrt_mod_it": 109, "sqrtdenest": [11, 12, 239], "sqt": 236, "squar": [12, 16, 22, 29, 32, 33, 38, 42, 46, 50, 60, 69, 70, 74, 75, 85, 86, 94, 96, 100, 105, 108, 109, 111, 112, 115, 117, 125, 127, 154, 155, 178, 194, 202, 212, 216, 218, 220, 222, 223, 224, 227, 235, 239, 240, 243, 246, 247, 299], "square_factor": [109, 240], "square_in_unit_circl": 85, "square_iter": 235, "square_matrix": 46, "square_root": 75, "squareddistribut": 247, "squarefre": [109, 222], "squarefree_cor": 109, "squarehandl": 46, "squarepred": 46, "squeez": [227, 291], "sr": 277, "src": [3, 4, 5, 7, 11, 12, 111, 243, 258, 263], "src2": 111, "src3": 111, "src_code": 111, "sre": 220, "srepr": [217, 300], "sring": [218, 224, 225], "ss": [69, 218], "sss": 85, "sstr": [68, 207, 227], "sstrrepr": [97, 207, 227], "st": [9, 12, 70, 96, 192], "stab": 60, "stabil": [15, 60, 65, 67, 73, 125, 156, 251], "stabl": [3, 4, 5, 24, 27, 50, 69, 97, 105, 111, 113, 121, 125, 247, 259, 294], "stack": [51, 86, 105, 140, 159, 216, 222, 227, 256, 262, 301], "stackexchang": [5, 60, 79], "stacklevel": [3, 12, 256, 261, 263], "stackoverflow": [7, 11, 109, 265, 268], "stade": 94, "stage": [11, 22, 49, 68, 109, 234, 305], "stai": [24, 222], "stall": 222, "stand": [11, 15, 68, 69, 135, 159, 215, 216, 217, 218, 224], "standalon": [5, 159], "standard": [2, 5, 12, 13, 14, 15, 16, 22, 24, 29, 33, 34, 36, 38, 50, 69, 73, 75, 77, 92, 94, 96, 97, 98, 99, 102, 105, 109, 110, 111, 112, 128, 169, 173, 202, 208, 212, 214, 217, 218, 220, 227, 230, 235, 239, 240, 243, 246, 247, 249, 260, 266, 275, 280, 294, 297, 305], "standard_cartan": 98, "standard_transform": 111, "standardis": [60, 217], "stanford": 53, "star": [227, 245, 265], "starrett": 243, "start": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 24, 35, 39, 40, 49, 50, 52, 53, 58, 59, 60, 61, 65, 68, 69, 70, 71, 77, 99, 101, 105, 108, 109, 110, 113, 115, 117, 118, 121, 142, 144, 154, 155, 187, 188, 191, 195, 210, 211, 213, 217, 220, 222, 223, 227, 230, 233, 235, 236, 237, 240, 243, 245, 246, 247, 248, 251, 258, 259, 265, 267, 268, 277, 291, 292, 293, 294, 297, 299], "start_point": [71, 145], "start_view": 227, "starter": 40, "startnumb": 243, "starts_with_un": 222, "startswith": 291, "stat": [2, 9, 282, 289], "stat317": 247, "state": [11, 12, 15, 20, 22, 36, 60, 67, 69, 77, 109, 112, 113, 115, 117, 125, 127, 131, 135, 136, 140, 144, 146, 160, 164, 168, 169, 171, 172, 173, 175, 176, 177, 181, 184, 186, 187, 188, 189, 191, 192, 216, 223, 227, 236, 237, 239, 247, 262, 288, 291, 292, 301], "state_map": 182, "state_spac": 247, "state_to_oper": 182, "state_var": [112, 115], "statebas": [182, 187, 190], "statement": [0, 4, 13, 22, 23, 24, 40, 49, 50, 69, 77, 94, 99, 101, 142, 171, 227, 247, 256, 260, 265], "static": [22, 42, 50, 60, 61, 63, 69, 75, 82, 83, 84, 85, 101, 118, 144, 152, 213, 227, 233, 235, 247, 259], "staticmethod": [13, 258], "stationari": [48, 247, 291], "stationary_distribut": 247, "stationary_point": 48, "statist": [53, 70, 77, 247, 258, 299], "statu": [9, 11, 97], "statweb": 53, "std": [24, 50, 227, 247], "stderr": 50, "stdfactkb": 22, "stdin": [16, 261, 263], "stdlib": [13, 258], "stdout": [50, 52, 258], "steep": 245, "steer": [144, 158], "stefanu": 96, "stegun": [4, 77], "stein": [109, 243], "steinborn": 212, "steinhau": 265, "stem": 252, "step": [3, 8, 9, 24, 25, 27, 39, 48, 50, 60, 64, 65, 68, 69, 70, 77, 93, 94, 96, 105, 109, 110, 135, 140, 149, 152, 154, 159, 160, 194, 206, 211, 212, 213, 216, 217, 218, 220, 222, 223, 227, 228, 229, 232, 235, 236, 237, 239, 240, 243, 245, 247, 252, 259, 265, 266, 292, 295], "step_response_numerical_data": 123, "step_response_plot": [27, 123], "stick": 41, "stieltj": [77, 227], "stieltjes_const": 77, "stieltjesgamma": 227, "stiff": [130, 159, 291, 292], "stiffer": 292, "still": [2, 3, 4, 5, 12, 13, 14, 15, 16, 22, 24, 40, 41, 42, 49, 61, 68, 69, 70, 77, 81, 96, 105, 111, 112, 115, 142, 192, 211, 213, 214, 215, 216, 220, 222, 227, 234, 236, 237, 239, 243, 245, 246, 252, 258, 265, 278, 301], "stiller": 221, "stiller96": 221, "stimul": 292, "stinson": 61, "stirl": [5, 61, 74, 265], "stirling_numbers_of_the_first_kind": 74, "stirling_numbers_of_the_second_kind": 74, "stochast": 13, "stoke": 164, "stokes_paramet": 164, "stokes_vector": 164, "stop": [3, 8, 11, 14, 50, 51, 61, 69, 105, 109, 213, 233, 235, 243, 247], "stopiter": 240, "stopper": 300, "storag": [50, 69, 105, 186, 212, 220], "store": [9, 11, 13, 16, 22, 26, 49, 50, 59, 60, 69, 91, 93, 101, 105, 109, 111, 131, 135, 137, 140, 142, 157, 186, 192, 206, 210, 211, 213, 214, 216, 217, 222, 223, 224, 234, 237, 248, 251, 252, 260, 261, 262, 265, 276, 278, 291, 300], "stori": [12, 197], "stormi": 243, "stqq": 70, "str": [12, 13, 14, 15, 24, 44, 49, 50, 51, 61, 69, 70, 71, 73, 78, 79, 82, 85, 86, 97, 99, 101, 105, 109, 111, 113, 115, 123, 131, 134, 135, 136, 137, 140, 159, 176, 186, 192, 202, 204, 206, 213, 216, 218, 222, 227, 239, 243, 247, 263, 265, 266, 268, 271], "str_expr": 294, "str_printer": [97, 207], "strai": 142, "straight": [85, 91, 123, 130, 138, 141, 146, 210, 243], "straightforward": [5, 12, 14, 24, 60, 70, 105, 237, 292], "strain": 113, "strang": 217, "strategi": [12, 51, 69, 96, 220, 221, 234, 237, 239, 244], "strawberryperl": 8, "stream": [50, 70, 228, 239, 265], "strecker": 49, "strength": 217, "stress": 117, "stretch": [130, 262, 292], "strict": [13, 14, 15, 29, 60, 61, 69, 73, 74, 105, 111, 140, 220, 223, 227, 245, 246, 265, 268, 305], "stricter": 111, "strictgreaterthan": [23, 69, 227], "strictlessthan": [69, 227, 268], "strictli": [15, 16, 19, 21, 22, 46, 48, 69, 77, 105, 109, 125, 218, 220, 239, 245, 266], "stride": [50, 252], "string": [2, 3, 4, 5, 7, 11, 12, 15, 16, 24, 42, 43, 49, 50, 53, 58, 69, 70, 71, 72, 73, 76, 82, 92, 97, 98, 99, 101, 105, 109, 111, 115, 117, 119, 121, 123, 129, 131, 134, 135, 136, 137, 163, 172, 176, 186, 190, 194, 200, 201, 202, 206, 207, 208, 213, 216, 218, 222, 227, 228, 234, 239, 243, 247, 248, 251, 252, 253, 258, 259, 260, 265, 266, 268, 269, 271, 273, 275, 296, 297, 300, 304], "string_input": 14, "string_of_lett": 192, "stringifi": [97, 207], "stringify_expr": 111, "stringpict": 227, "strip": [5, 12, 70, 96, 109, 220, 263, 268], "strip_whitepac": 12, "strip_zero": 218, "strive": 49, "strline": 268, "strong": [60, 65, 66, 67, 109, 110], "strong_gen": [60, 66, 67], "strong_gens_distr": [60, 67], "strong_present": 60, "strong_pseudoprim": 109, "stronger": 301, "strongli": [105, 115, 216, 265], "strongly_connected_compon": [105, 216, 265], "strongly_connected_components_decomposit": 105, "strprinter": [105, 207], "struct": [50, 212], "structr": [130, 138], "structur": [5, 13, 14, 15, 16, 19, 22, 24, 47, 49, 50, 57, 60, 61, 67, 69, 94, 96, 99, 105, 117, 118, 119, 121, 140, 190, 192, 213, 214, 216, 217, 220, 222, 223, 224, 239, 243, 245, 246, 247, 251, 252, 260, 262, 265, 266, 292, 297, 305], "structure_theorem_for_finitely_generated_abelian_group": 57, "structureerror": 222, "struggl": [73, 226], "strzebonski": 223, "stub": 69, "student": [96, 236, 240, 247], "student_t": 247, "studentst": 247, "studentt": 247, "studi": [51, 59, 68, 71, 105, 211, 214, 220, 223, 240, 247], "stuff": [111, 213, 258, 260, 268], "sturm": [218, 223], "sturmian": 223, "sty": 227, "style": [6, 7, 8, 11, 49, 69, 97, 186, 207, 213, 227, 246, 304], "stylis": 227, "stylist": 12, "stzz": 70, "su": 253, "sub": [4, 12, 13, 14, 15, 16, 18, 22, 23, 24, 27, 29, 32, 33, 35, 36, 50, 68, 69, 75, 77, 78, 79, 80, 81, 82, 83, 85, 96, 99, 101, 105, 109, 111, 117, 118, 125, 129, 132, 142, 144, 145, 146, 149, 150, 156, 159, 189, 190, 195, 202, 212, 214, 216, 217, 218, 223, 227, 234, 235, 239, 240, 243, 244, 245, 247, 258, 259, 261, 292, 294, 295, 297], "sub1": [132, 227], "sub2": [132, 227], "sub_dict": [129, 132, 144], "sub_ground": [218, 223], "subalgebra": 98, "subaugmentedassign": 50, "subcategori": [242, 282], "subclass": [13, 14, 15, 22, 24, 44, 45, 50, 69, 76, 80, 82, 96, 99, 111, 112, 115, 130, 138, 140, 141, 161, 167, 176, 180, 181, 182, 187, 189, 190, 196, 213, 214, 216, 217, 218, 222, 223, 227, 247, 258, 259, 260, 263, 266, 271, 275, 291, 292, 300], "subcompon": 227, "subdetermin": 220, "subdiagon": 105, "subdiagram": 49, "subdiagram_from_object": 49, "subdirectori": [8, 12, 26], "subdomain": 220, "subexponenti": 109, "subexpress": [14, 15, 24, 50, 69, 75, 105, 129, 132, 222, 223, 227, 234, 239, 246, 260, 266, 294], "subfactori": [74, 227, 265], "subgraph": 265, "subgroup": [52, 60, 61, 65, 67, 98, 109], "subgroup_search": 60, "subinterv": 96, "subject": [46, 69, 79, 85, 118, 129, 160, 222], "sublist": [48, 65, 70, 96, 189, 295], "submatric": [101, 105, 216, 247], "submatrix": [105, 216, 220, 247], "submiss": 7, "submit": [4, 11], "submodul": [0, 2, 3, 4, 11, 12, 14, 15, 50, 129, 214, 218, 220, 222], "submodule_from_gen": 222, "submodule_from_matrix": 222, "subnorm": [50, 60], "subobject": 227, "suboptim": [237, 292], "subpackag": [2, 282], "subpart": 27, "subplot": [117, 213, 291, 292], "subprocess": [69, 227, 258, 259], "subquadrat": 221, "subquoti": 214, "subquotientmodul": 214, "subresult": [69, 218, 221, 223], "subresultants_qq_zz": 223, "subroutin": [50, 60, 188, 220], "subroutinecal": 50, "subs_dict": 121, "subs_point": 81, "subscheck": 243, "subscript": [32, 34, 61, 69, 111, 218, 227, 237, 240, 265], "subsect": [60, 278], "subsequ": [4, 11, 12, 16, 36, 69, 75, 202, 218, 220, 223, 262, 265, 275, 278], "subset": [5, 11, 12, 20, 22, 24, 29, 48, 49, 53, 56, 60, 61, 67, 74, 75, 81, 92, 94, 96, 98, 109, 136, 214, 216, 220, 222, 227, 235, 265, 283], "subset_from_bitlist": 64, "subset_indic": 64, "subspac": 222, "subsset": 234, "substack": 244, "substanti": [5, 110], "substep": 96, "substitut": [8, 14, 15, 16, 20, 23, 29, 32, 36, 38, 50, 69, 70, 75, 77, 94, 96, 105, 110, 111, 125, 135, 136, 142, 144, 146, 156, 181, 190, 192, 195, 202, 204, 206, 224, 225, 228, 229, 234, 237, 239, 240, 243, 244, 245, 246, 266, 274, 292, 296, 297], "substitute_dummi": 192, "substitute_indic": 13, "substitution_ciph": 70, "substr": 268, "subsum": 77, "subsystem": [8, 227], "subtl": [24, 236], "subtleti": 94, "subtract": [16, 33, 42, 50, 61, 69, 73, 84, 109, 125, 134, 145, 194, 215, 216, 217, 218, 220, 222, 223, 300, 305], "subtre": [69, 227, 262], "subvector": 77, "subwiki": [57, 60], "subword_index": 59, "succ": [234, 247], "succe": [69, 94, 99, 109, 182, 222, 245], "success": [5, 8, 49, 60, 69, 77, 94, 96, 109, 134, 144, 202, 214, 220, 222, 235, 236, 243, 246, 247, 265, 271, 273], "successfulli": 222, "succinct": 69, "succinctli": 69, "sudo": [8, 9], "suetoniu": 70, "suffer": [4, 223], "suffic": [4, 215, 245], "suffici": [3, 4, 11, 22, 49, 50, 60, 61, 65, 69, 105, 197, 218, 230, 234, 240, 243, 247, 262, 292, 305], "suffix": [115, 223, 260], "suffix_express": 227, "sugar": [220, 221, 252], "suggest": [5, 7, 11, 13, 34, 51, 60, 96, 105, 109, 142, 225, 292, 301], "suit": [2, 3, 5, 11, 12, 22, 24, 33, 34, 49, 213, 223, 256, 258], "suitabl": [11, 96, 101, 105, 111, 212, 215, 216, 217, 220, 222, 227, 237, 240, 243, 246, 248, 292, 298], "suku": 96, "sukumar": 96, "sullivan": 265, "sum": [20, 22, 32, 50, 58, 61, 68, 69, 72, 74, 77, 82, 84, 92, 94, 96, 98, 99, 101, 105, 109, 111, 121, 137, 154, 171, 175, 178, 186, 189, 191, 192, 212, 214, 215, 217, 218, 222, 223, 224, 227, 229, 230, 232, 234, 236, 237, 239, 240, 243, 245, 246, 247, 248, 249, 251, 253, 262, 265, 291, 292, 305], "sum_": [50, 68, 69, 70, 74, 77, 94, 96, 101, 105, 109, 212, 223, 224, 229, 230, 237, 243, 247], "sum_0": 237, "sum_approx1": 50, "sum_approx2": 50, "sum_approx3": 50, "sum_domain": 217, "sum_i": [77, 234], "sum_k": 248, "sum_m": 248, "sum_of_four_squar": 240, "sum_of_pow": 240, "sum_of_squar": 240, "sum_of_three_squar": 240, "sumapprox": 50, "sumith": 0, "summand": [58, 222], "summar": [3, 11, 258, 305], "summari": [11, 145, 258, 282], "summat": [50, 68, 69, 73, 74, 77, 192, 221, 223, 227, 230, 239, 247, 248, 251, 252, 253, 259], "sunni": 247, "sup": [218, 223, 227, 235], "super": [50, 77, 218, 227, 271, 273, 291], "super_set": 64, "superclass": [13, 14, 15, 22, 68, 96, 101, 130, 218], "superdiagon": 105, "superfici": 69, "superflu": 94, "supergroup": 60, "superior": [3, 227], "superposit": [166, 177, 188, 214], "superposition_basi": 177, "superscript": [111, 125, 227], "superscriptminu": 227, "superscriptplu": 227, "supersed": [5, 142, 159], "superset": [22, 48, 58, 64, 72, 159, 217, 235, 245], "superset_s": 64, "supplant": 3, "supplement_a_subspac": 222, "supplementari": 0, "suppli": [16, 35, 36, 48, 49, 50, 60, 61, 69, 71, 79, 83, 105, 109, 130, 131, 134, 135, 136, 137, 144, 146, 149, 154, 155, 157, 165, 192, 206, 211, 213, 222, 224, 229, 236, 243, 259, 265, 266, 271, 273, 276, 291, 292], "support": [2, 3, 4, 5, 11, 13, 14, 15, 16, 24, 35, 40, 42, 43, 44, 45, 48, 49, 50, 61, 69, 73, 76, 77, 79, 93, 96, 101, 105, 109, 110, 111, 115, 117, 118, 119, 121, 122, 125, 129, 134, 142, 159, 187, 202, 210, 213, 215, 216, 217, 218, 220, 222, 223, 224, 227, 232, 233, 234, 235, 239, 243, 244, 245, 246, 247, 248, 252, 256, 258, 259, 260, 266, 276, 278, 292, 295, 297, 300, 304], "support_1": 119, "support_2": 119, "suppos": [12, 13, 14, 23, 24, 61, 68, 69, 70, 94, 111, 201, 214, 216, 220, 222, 223, 227, 234, 237, 243, 245, 256, 265, 276, 281, 297, 299, 305], "suppress": [69, 111, 256, 263], "supremum": [75, 235], "surd": 239, "sure": [3, 4, 5, 8, 9, 11, 12, 24, 50, 60, 69, 81, 140, 142, 172, 197, 213, 223, 224, 234, 243, 245, 246, 259, 265, 297, 300, 305], "surfac": [3, 75, 77, 83, 94, 118, 134, 138, 141, 161, 165, 192, 213, 239, 271, 292], "surface_color": 213, "surfacebaseseri": 213, "surfaceover2drangeseri": 213, "surject": 214, "surpris": [15, 22, 246], "surround": [5, 12, 69, 86, 165, 235, 268], "survei": 5, "surviv": 41, "susan": 53, "suspect": [69, 109], "suspens": 119, "sussman": 71, "sv": 9, "svg": [8, 26, 97, 146, 148, 207, 210, 211, 276], "sw": 82, "swap": [14, 60, 61, 62, 105, 172, 176, 185, 216, 247, 265], "swap_point": 172, "swapgat": 176, "swig": 259, "swing": 74, "swinnerton": 223, "swinnerton_dyer_poli": 223, "swiss": 223, "switch": [11, 13, 42, 60, 67, 96, 109, 125, 220, 223, 249], "sx": 65, "sy": [11, 40, 50, 71, 142, 159, 227, 258, 277, 297], "sylow": 60, "sylow_subgroup": 60, "sylvest": [109, 220], "sym": [32, 48, 59, 60, 65, 69, 74, 202, 227, 230, 235, 239, 240, 245, 247, 253, 265, 291, 305], "sym2": 253, "sym_expr": 111, "sym_i": 65, "symarrai": 105, "symb": [105, 227], "symb85": 239, "symb_2txt": 227, "symb_nam": 227, "symbol": [0, 2, 4, 5, 7, 11, 12, 15, 18, 20, 25, 27, 28, 29, 30, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 59, 61, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 91, 92, 93, 94, 96, 97, 99, 101, 105, 109, 110, 111, 112, 113, 115, 117, 118, 119, 121, 122, 123, 125, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 157, 159, 161, 164, 165, 166, 167, 169, 171, 172, 174, 176, 178, 180, 181, 184, 187, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 213, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 237, 239, 240, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 259, 265, 266, 271, 273, 274, 276, 277, 278, 281, 288, 291, 292, 294, 295, 298, 300, 301, 304, 305, 306], "symbol_nam": [69, 227], "symbol_t": 227, "symbolc": 22, "symbolic_complex": 29, "symbolic_expand": 29, "symbolicnumericalcomput": 221, "symbolicsystem": 140, "symbolnam": 243, "symbologi": 227, "symbols_seq": 240, "symbols_to_declar": 227, "symfunc": [259, 266], "symmetr": [13, 34, 46, 47, 51, 52, 57, 60, 61, 65, 85, 100, 101, 105, 109, 157, 212, 218, 220, 223, 226, 235, 237, 253, 265], "symmetri": [4, 13, 52, 57, 62, 65, 77, 105, 171, 212, 243, 251, 253, 294, 305], "symmetric_differ": 235, "symmetric_group": 57, "symmetric_matrix": 46, "symmetric_poli": [218, 223], "symmetric_residu": 109, "symmetricdiffer": [227, 235, 246], "symmetricgroup": [57, 59, 60, 66, 67], "symmetrichandl": 46, "symmetricpred": 46, "symp": [69, 218], "sympfiabl": 291, "sympi": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 15, 17, 18, 22, 23, 24, 25, 27, 28, 29, 30, 32, 34, 35, 36, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 276, 277, 279, 280, 281, 282, 286, 288, 289, 291, 292, 293, 295, 297, 298, 300, 301, 302, 303, 304, 305, 306], "sympif": [13, 41, 69], "sympifi": [12, 14, 15, 16, 22, 23, 50, 73, 79, 99, 113, 157, 165, 190, 192, 202, 203, 217, 218, 292, 294, 300], "sympify": [79, 85, 117, 119, 121, 131, 137, 163, 166, 204], "sympifyerror": 69, "symplifi": [237, 239], "symposium": [51, 94, 220, 221, 237], "sympy_benchmark": 2, "sympy_cod": 142, "sympy_debug": [1, 96, 268], "sympy_deprecation_warn": [3, 256, 261, 263], "sympy_eqs_to_r": 225, "sympy_express": [50, 259], "sympy_gamma": 96, "sympy_ground_typ": [216, 217, 218], "sympy_htmldoc": 8, "sympy_integ": 227, "sympy_nam": 294, "sympy_obj": 14, "sympy_pars": [69, 111], "sympy_use_cach": 69, "sympydeprecationwarn": [3, 12, 13, 256, 258, 261, 263], "sympydoctestfind": 258, "sympydoctestrunn": 258, "sympyexpress": 111, "sympyfi": [203, 204, 206, 274, 291], "sympyifi": 16, "sympyoutputcheck": 258, "sympytestfil": 258, "sympytestresult": 258, "symsac": 221, "symsystem": 140, "symsystem1": 160, "symsystem2": 160, "symsystem3": 160, "sync": 9, "synonym": [79, 222], "syntact": 252, "syntax": [3, 4, 5, 11, 13, 14, 15, 16, 24, 36, 43, 45, 61, 69, 96, 111, 142, 159, 189, 213, 217, 226, 227, 239, 245, 249, 268, 295, 297, 299, 304, 306], "syntaxerror": [14, 16, 111], "synthesi": 70, "sys1": [27, 125], "sys2": [27, 125], "sys3": 27, "sys4": 27, "sys5": 27, "sys6": 27, "sysod": 243, "syst": 136, "system": [0, 1, 2, 5, 7, 8, 9, 13, 14, 15, 16, 18, 19, 20, 23, 24, 27, 28, 29, 30, 34, 36, 43, 45, 60, 69, 70, 71, 75, 94, 97, 98, 99, 105, 110, 111, 112, 115, 116, 117, 121, 122, 124, 125, 129, 130, 131, 133, 135, 136, 137, 138, 142, 143, 144, 145, 146, 149, 151, 152, 154, 155, 156, 157, 159, 170, 171, 186, 189, 190, 192, 195, 199, 202, 206, 207, 208, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 235, 236, 242, 246, 247, 258, 259, 271, 273, 274, 277, 279, 281, 286, 288, 292, 297, 299, 301, 305, 306], "system2": 274, "system_default_view": 227, "system_info": 243, "systemat": 226, "syzygy_modul": 214, "sz": 187, "szop": 187, "szupket": 187, "t": [0, 3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 23, 24, 27, 29, 36, 42, 45, 46, 48, 50, 51, 53, 60, 61, 62, 63, 65, 69, 70, 71, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 93, 94, 96, 98, 99, 100, 101, 105, 109, 110, 111, 112, 113, 115, 121, 125, 126, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 146, 147, 154, 155, 156, 157, 159, 160, 164, 166, 172, 176, 188, 190, 192, 194, 195, 197, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 230, 234, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 248, 249, 253, 256, 258, 261, 265, 266, 271, 274, 276, 280, 291, 292, 294, 295, 299, 300, 301, 304, 305, 306], "t0": [65, 291, 292], "t1": [65, 85, 86, 109, 131, 137, 240, 247], "t2": [80, 85, 86, 109, 131, 137, 240, 247, 253], "t3": [86, 240], "t4": 240, "t5": 240, "t_": [65, 74, 115, 292], "t_0": [74, 240], "t_1": [60, 74, 240], "t_2": [60, 74, 240], "t_b": 157, "t_c": 65, "t_eval": [36, 291, 292], "t_m": 220, "t_n": [5, 74, 77, 96, 220, 223, 276], "t_p": 157, "t_r": [60, 157, 253], "t_t": 157, "ta": [126, 236], "tab": [8, 13, 16, 65, 159], "tab1": 65, "tabl": [4, 22, 51, 60, 69, 74, 77, 90, 96, 105, 109, 134, 159, 212, 222, 249], "table_of_": 109, "tableau": 13, "tableaux": 253, "tableform": [13, 245, 268], "tackl": [152, 260], "tactic": 247, "tag": [12, 227, 245], "tail": [53, 68, 69, 218, 247], "tail_degre": 218, "tailor": 22, "tait": [134, 202, 271, 273], "take": [2, 3, 5, 9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 31, 32, 33, 34, 36, 45, 48, 50, 51, 54, 59, 60, 64, 68, 69, 70, 71, 75, 77, 81, 82, 92, 96, 98, 99, 105, 109, 110, 111, 113, 115, 117, 119, 121, 125, 129, 134, 135, 137, 140, 141, 142, 144, 156, 159, 161, 175, 178, 181, 182, 186, 188, 189, 190, 191, 192, 194, 197, 200, 201, 202, 203, 204, 207, 210, 211, 213, 214, 215, 216, 217, 218, 220, 223, 224, 227, 230, 233, 234, 235, 236, 237, 239, 240, 243, 245, 246, 247, 249, 252, 258, 259, 261, 262, 265, 266, 271, 273, 274, 291, 292, 294, 295, 297, 299, 300, 301, 305], "taken": [3, 12, 14, 15, 50, 51, 52, 57, 60, 67, 68, 69, 74, 75, 77, 86, 105, 109, 112, 113, 125, 127, 129, 131, 156, 159, 189, 195, 202, 206, 212, 213, 217, 222, 223, 227, 230, 234, 236, 237, 246, 247, 252, 260, 265, 271], "takenouchi": 109, "talk": [5, 11, 12, 17, 39, 70, 214, 222, 275], "tamu": 221, "tan": [12, 48, 69, 74, 75, 96, 111, 132, 149, 150, 151, 156, 224, 226, 227, 234, 236, 243, 246, 305], "tandem": 259, "tangent": [75, 79, 81, 85, 96, 112, 224, 243, 292], "tangent_lin": 79, "tanh": [12, 69, 73, 75, 96, 111, 112, 115, 224, 227, 239, 291, 292, 305], "taocp": 265, "tap": 8, "tapestri": 214, "target": [3, 4, 14, 15, 48, 49, 50, 52, 69, 109, 130, 132, 172, 176, 177, 196, 236, 239, 242, 245, 246, 256, 259, 260, 263, 305], "target1": 176, "target2": 176, "target_fram": 130, "target_unit": 199, "tarjan": [247, 265], "task": [25, 30, 39, 75, 152, 153, 159, 217, 222, 295, 302], "tau": [16, 50, 94, 96, 105, 222, 227, 243], "tau0": [105, 246, 247], "tau1": 105, "tau_": 292, "tau_a": [112, 292], "tau_a_muscl": 115, "tau_d": [112, 292], "tau_d_muscl": 115, "taught": [24, 96], "taus_zero": 105, "tausski": 222, "tautologi": 227, "taxicab": 84, "taxicab_dist": 84, "taxonomi": 60, "taylor": [20, 69, 75, 142, 156, 159, 218, 220, 223, 224, 234, 243], "taylor_term": [69, 75], "tb": [126, 236, 258], "tbanilorngnezl": 70, "tbinom": 111, "tc": [126, 218, 223, 236], "tcc": 260, "tchebychev": 5, "td": [69, 227, 304], "te": 165, "teach": [5, 61, 70, 74, 247], "teacher": 24, "teaching_aid": 247, "team": [0, 3, 11], "tear": 300, "technic": [5, 13, 14, 17, 24, 39, 49, 69, 111, 159, 178, 214, 243, 260, 265, 278, 297, 300], "techniqu": [29, 33, 34, 36, 51, 64, 94, 96, 223, 227, 229, 239, 243, 246, 295, 301], "technolog": 236, "techreport": 70, "tediou": [20, 96], "teeter": 214, "telephon": 77, "tell": [4, 5, 11, 22, 23, 29, 33, 36, 50, 61, 70, 73, 77, 105, 111, 140, 197, 217, 222, 226, 234, 237, 243, 259, 297], "temp": [50, 144], "tempa": 144, "tempb": 144, "tempc": 144, "tempdir": [50, 259], "temper": 208, "temperatur": [194, 208, 280], "tempfork": 144, "tempfram": 144, "templat": [11, 13, 265], "tempor": 166, "temporari": [11, 69, 259], "temporarili": 69, "tempt": [12, 14, 22, 24, 69, 109], "temptat": [3, 236, 305], "ten": [50, 110], "tend": [11, 24, 41, 50, 69, 74, 130, 138, 220, 222, 232, 234, 237, 292, 298, 305], "tendenc": 109, "tendon": [113, 115, 291], "tendon_force_explicit": 115, "tendon_force_implicit": 115, "tendon_force_length": 113, "tendon_force_length_invers": 113, "tendon_slack_length": [115, 292], "tendonforcelengthdegroote2016": [113, 115, 292], "tendonforcelengthinversedegroote2016": [113, 292], "tenenbaum": 243, "tens": 5, "tensadd": [227, 253], "tensexpr": [13, 126, 253], "tensil": [119, 121], "tension": [102, 119, 292], "tensmul": [227, 253], "tensor": [50, 56, 71, 105, 126, 137, 157, 171, 177, 178, 179, 189, 192, 201, 202, 227, 248, 249, 251, 252, 259, 266, 275, 276, 282, 283, 286, 288], "tensor_can": [65, 253], "tensor_funct": 77, "tensor_gen": 65, "tensor_head": [13, 126, 253], "tensor_inde_typ": 253, "tensor_index_typ": 253, "tensor_indic": [13, 126, 253], "tensor_product": 178, "tensor_product_simp": 191, "tensorcontract": [248, 249], "tensordiagon": [248, 249], "tensorflow": [2, 266], "tensorflow_cod": 2, "tensorhead": [253, 254], "tensori": [253, 254], "tensorindex": [13, 253], "tensorindextyp": [253, 254], "tensormanag": 253, "tensorpowerhilbertspac": 178, "tensorproduct": [71, 189, 191, 227, 248, 249], "tensorproducthilbertspac": 178, "tensorsymmetri": 253, "tensortyp": 253, "tensorvari": 227, "tenth": 113, "teo": 245, "term": [5, 12, 15, 16, 20, 22, 24, 29, 32, 34, 36, 38, 50, 60, 69, 70, 71, 73, 74, 75, 77, 88, 92, 93, 94, 96, 99, 105, 109, 112, 118, 123, 125, 130, 132, 135, 144, 146, 149, 152, 154, 156, 171, 176, 188, 189, 192, 194, 196, 197, 201, 202, 204, 208, 210, 212, 214, 215, 216, 217, 218, 220, 222, 223, 224, 227, 229, 230, 232, 233, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 251, 252, 265, 271, 274, 278, 283, 291, 292, 295, 297, 299, 300, 305], "term_to_integ": 99, "termin": [7, 8, 9, 11, 60, 69, 75, 97, 109, 141, 207, 227, 234, 258, 304], "terminal_str": 227, "terminal_width": 227, "terminologi": [15, 30, 253], "termnam": 15, "terms_gcd": [69, 218, 223], "termwis": 223, "ternari": [32, 50, 69, 227, 240], "terrab": 243, "terrel": 0, "terri": 265, "terribl": 60, "test": [3, 4, 5, 6, 9, 10, 14, 15, 16, 21, 23, 24, 31, 32, 45, 46, 48, 49, 50, 56, 60, 61, 68, 69, 70, 74, 76, 79, 84, 94, 101, 105, 109, 140, 172, 181, 185, 186, 187, 195, 211, 217, 218, 220, 222, 224, 235, 237, 240, 243, 244, 245, 246, 256, 259, 260, 261, 262, 263, 265, 266, 268, 282, 283, 290, 292, 297, 299, 300], "test2": 187, "test_": [4, 11, 12, 258], "test_arg": 258, "test_as_leading_term": 12, "test_bas": [11, 258], "test_comb_factori": 12, "test_cos_seri": [11, 12], "test_custom_latex": 111, "test_deprecated_expr_free_symbol": 12, "test_derivative_numer": [13, 69], "test_draw": 49, "test_equ": 258, "test_expr": [12, 69], "test_factor": 222, "test_factorial_rewrit": 12, "test_failing_integr": 12, "test_formula": 237, "test_func": 12, "test_hyperexpand": 237, "test_hypothesi": 12, "test_issue_21177": 12, "test_kwarg": 258, "test_modular": 12, "test_od": 243, "test_optional_depend": 12, "test_pd": 244, "test_pickl": 2, "test_pretti": 12, "test_residu": 12, "test_rewrite1": 234, "test_sin_1_unevalu": 12, "test_sqrtdenest": [11, 12], "test_stacklevel": [12, 256], "test_symbol": 12, "test_tan": 12, "test_trigonometr": [11, 12], "test_upretty_sub_sup": 12, "testbook": 27, "tester": 258, "testmod": 258, "testrunn": 258, "testutil": [60, 66, 67], "tetrahedr": 62, "tetrahedron": [60, 62], "tex": 227, "texliv": [2, 8, 227], "text": [2, 3, 4, 5, 11, 12, 13, 15, 24, 26, 40, 50, 60, 70, 74, 75, 77, 87, 94, 97, 105, 109, 111, 113, 157, 197, 207, 212, 213, 214, 227, 234, 240, 243, 246, 247, 258], "textbackend": 213, "textbook": 27, "textfil": 247, "textplot": 213, "textrm": [112, 210, 211, 235, 292], "texttt": [74, 235], "textual": 227, "textwrap": [192, 268], "tf": [27, 125, 266, 291, 292], "tf1": [27, 123, 125], "tf10": 125, "tf11": 125, "tf12": 125, "tf2": [27, 125], "tf3": 125, "tf4": 125, "tf5": 125, "tf6": 125, "tf7": 125, "tf8": 125, "tf9": 125, "tf_1": 125, "tf_10": 125, "tf_2": 125, "tf_3": 125, "tf_4": 125, "tf_5": 125, "tf_6": 125, "tf_7": 125, "tf_8": 125, "tf_9": 125, "tfinal": 142, "tfm": 125, "tfm1": 125, "tfm2": 125, "tfm3": 125, "tfm_1": 125, "tfm_10": 125, "tfm_11": 125, "tfm_12": 125, "tfm_2": 125, "tfm_3": 125, "tfm_4": 125, "tfm_5": 125, "tfm_6": 125, "tfm_7": 125, "tfm_8": 125, "tfm_9": 125, "tfm_a": 125, "tfm_b": 125, "tfm_c": 125, "tfm_feedback": 27, "tfrac": [77, 111, 243, 247], "tgamma": 227, "tgate": 176, "th": [24, 42, 51, 60, 61, 67, 70, 71, 73, 74, 75, 77, 98, 99, 105, 109, 135, 216, 218, 220, 222, 223, 229, 232, 237, 240, 243, 245, 247, 248, 253], "than": [2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 29, 31, 33, 34, 35, 36, 37, 38, 41, 42, 46, 50, 51, 52, 54, 60, 61, 62, 68, 69, 70, 73, 74, 75, 77, 78, 83, 84, 85, 87, 91, 94, 96, 98, 99, 101, 105, 106, 108, 109, 110, 111, 115, 121, 123, 125, 129, 130, 135, 140, 142, 146, 149, 166, 172, 186, 189, 190, 192, 201, 211, 212, 215, 216, 217, 218, 220, 223, 224, 225, 227, 230, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 254, 259, 260, 262, 265, 266, 268, 292, 294, 295, 297, 298, 299, 300, 301, 303, 305], "the_68_standard_colors_known_to_dvip": 97, "theano": [2, 13, 159, 304], "theano_cod": 13, "theanoprint": 13, "thei": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 22, 23, 24, 29, 34, 36, 37, 38, 40, 46, 49, 50, 51, 57, 59, 60, 61, 67, 68, 69, 70, 71, 74, 75, 77, 79, 82, 83, 84, 85, 86, 91, 94, 96, 97, 99, 101, 102, 105, 108, 109, 111, 112, 113, 117, 129, 130, 131, 135, 137, 140, 141, 142, 144, 150, 152, 154, 155, 156, 159, 160, 166, 171, 176, 181, 184, 189, 194, 195, 197, 198, 202, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 227, 228, 233, 234, 236, 237, 239, 240, 243, 244, 245, 246, 247, 248, 249, 253, 256, 258, 260, 262, 265, 266, 268, 271, 278, 280, 291, 292, 295, 297, 298, 299, 300, 301, 305], "them": [2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 19, 20, 22, 23, 24, 29, 32, 33, 34, 36, 38, 41, 44, 46, 49, 50, 58, 60, 61, 68, 69, 70, 71, 73, 74, 77, 80, 85, 87, 89, 91, 92, 94, 98, 99, 101, 105, 108, 109, 110, 112, 115, 117, 129, 135, 137, 140, 142, 144, 145, 146, 152, 154, 156, 159, 165, 169, 185, 186, 192, 194, 197, 200, 201, 202, 208, 210, 211, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 228, 234, 235, 236, 237, 239, 240, 243, 245, 246, 248, 249, 258, 260, 262, 265, 274, 291, 292, 294, 295, 297, 299, 300, 305], "theme": 299, "themselv": [2, 5, 12, 13, 14, 24, 46, 49, 61, 65, 67, 69, 96, 109, 152, 153, 217, 218, 222, 233, 247, 253, 262, 265, 268, 305], "theor": 171, "theorem": [27, 29, 38, 57, 70, 74, 77, 79, 85, 96, 105, 109, 128, 129, 141, 144, 192, 201, 210, 214, 217, 220, 234, 237, 240, 246], "theoret": [22, 49, 51, 60, 70, 74, 221, 222, 237, 297], "theori": [19, 24, 51, 52, 58, 59, 60, 61, 67, 69, 70, 74, 77, 98, 106, 135, 142, 156, 158, 171, 189, 192, 202, 206, 216, 220, 221, 222, 226, 240, 262, 271, 289, 299], "theorist": 221, "therebi": 49, "therefor": [2, 3, 4, 12, 14, 24, 29, 33, 51, 60, 65, 69, 73, 77, 82, 85, 98, 109, 112, 115, 125, 134, 208, 211, 212, 213, 217, 220, 223, 227, 243, 246, 247, 248, 253, 271, 273, 275, 276, 278, 280, 292], "thereof": [50, 69, 214, 220, 222], "thesi": [60, 69, 234, 271], "thesis_drl": 216, "theta": [14, 16, 42, 69, 71, 75, 77, 94, 97, 105, 111, 127, 140, 160, 164, 202, 211, 212, 218, 222, 227, 230, 235, 246, 247, 271, 273, 276, 278, 281, 292], "theta1": [36, 146], "theta2": 36, "theta_1": 36, "theta_2": 36, "theta_dot": 140, "theta_oper": 14, "theta_pin": 13, "thetaset": 235, "thi": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 163, 164, 165, 166, 167, 169, 171, 172, 173, 175, 176, 178, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306], "thick": 165, "thieu": 243, "thilina": 0, "thilinaatsympi": 240, "thin": [44, 105, 148, 161, 291], "thing": [2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 22, 23, 24, 29, 31, 39, 46, 50, 59, 60, 61, 69, 71, 81, 97, 98, 99, 105, 110, 111, 129, 142, 156, 159, 176, 192, 197, 210, 211, 216, 224, 226, 234, 235, 236, 239, 243, 246, 251, 261, 263, 265, 291, 294, 295, 297, 299, 300, 301, 304, 305], "thingi": 50, "think": [4, 11, 12, 13, 15, 22, 23, 24, 33, 40, 48, 60, 144, 197, 262, 266, 297, 305], "thinlen": 161, "third": [2, 3, 18, 29, 42, 50, 60, 61, 69, 77, 79, 83, 105, 113, 125, 134, 140, 189, 195, 196, 210, 215, 223, 237, 243, 246, 247, 249, 263, 265, 295, 300], "thirteen": 292, "thoma": [74, 109, 158], "thorough": [150, 156, 240], "those": [2, 4, 11, 12, 13, 14, 15, 16, 18, 22, 23, 29, 33, 37, 38, 41, 46, 49, 50, 51, 52, 60, 61, 67, 68, 69, 70, 73, 82, 83, 94, 96, 99, 105, 108, 109, 116, 121, 129, 134, 135, 140, 144, 145, 150, 153, 165, 189, 201, 204, 207, 210, 211, 213, 216, 217, 218, 220, 222, 223, 225, 226, 227, 233, 235, 239, 243, 244, 245, 246, 247, 253, 256, 258, 262, 265, 271, 274, 297, 299, 305], "though": [4, 11, 14, 15, 16, 22, 23, 24, 29, 35, 36, 37, 38, 41, 51, 69, 70, 71, 74, 81, 85, 94, 96, 105, 109, 129, 135, 144, 154, 156, 187, 196, 201, 202, 210, 211, 215, 217, 218, 223, 224, 236, 237, 239, 243, 244, 245, 246, 258, 278, 295, 300, 305], "thought": [4, 12, 14, 15, 69, 234, 243, 297, 300], "thousand": [73, 109, 294], "thread": 261, "threaded_factori": 261, "three": [3, 14, 15, 16, 18, 20, 22, 24, 36, 37, 42, 46, 50, 60, 61, 62, 65, 69, 70, 74, 77, 79, 83, 84, 85, 94, 98, 99, 109, 112, 117, 118, 134, 138, 140, 145, 148, 149, 150, 165, 187, 189, 194, 202, 206, 210, 211, 212, 213, 214, 215, 218, 220, 223, 227, 237, 239, 240, 245, 246, 247, 258, 271, 273, 278, 281, 291, 292, 297, 300, 305], "threshold": [50, 109], "through": [0, 3, 4, 7, 8, 13, 14, 15, 16, 22, 24, 29, 33, 34, 36, 38, 40, 48, 50, 60, 61, 63, 68, 69, 70, 73, 74, 77, 79, 80, 81, 82, 83, 85, 94, 98, 99, 105, 109, 112, 117, 118, 119, 123, 130, 131, 135, 138, 141, 142, 144, 152, 157, 163, 164, 202, 214, 220, 222, 227, 233, 237, 239, 243, 245, 246, 247, 248, 259, 265, 271, 273, 278, 281, 291, 292, 295, 296, 297, 298, 303], "throughout": [14, 15, 94, 99, 216, 220, 230, 246, 280, 292, 297], "throw": [50, 105, 111, 142, 216, 222, 240, 246], "throwawai": 41, "thrown": [50, 138, 227], "thu": [2, 3, 11, 13, 15, 16, 20, 31, 33, 34, 36, 46, 54, 60, 61, 69, 70, 71, 75, 77, 92, 94, 96, 102, 105, 108, 109, 126, 135, 136, 140, 146, 152, 156, 197, 202, 215, 220, 222, 224, 228, 234, 237, 239, 260, 265, 266, 276, 277, 292, 297, 300, 305, 306], "thue": 240, "thumb": [5, 14, 99, 265], "ti": [58, 61, 69, 109], "ticket": 40, "tid": 253, "tidi": 105, "tie": [69, 265], "tight": 50, "tight_layout": 291, "tikz": 49, "tild": [69, 75, 113, 115, 248, 292], "till": [69, 117, 118, 142, 243], "tilt": 164, "tim": [109, 265], "time": [2, 3, 5, 7, 8, 11, 12, 13, 14, 15, 16, 20, 22, 23, 27, 29, 36, 38, 41, 45, 46, 50, 52, 60, 61, 65, 69, 70, 74, 77, 92, 94, 99, 105, 106, 108, 109, 110, 111, 112, 115, 121, 122, 123, 125, 129, 130, 135, 136, 138, 140, 142, 144, 145, 146, 149, 150, 152, 154, 155, 156, 157, 159, 160, 166, 176, 181, 189, 190, 194, 195, 196, 197, 198, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 220, 221, 222, 223, 224, 226, 227, 234, 235, 236, 237, 239, 243, 245, 247, 256, 258, 259, 264, 265, 266, 278, 280, 290, 291, 292, 295, 299, 300, 301], "time_bal": 258, "time_deriv": [202, 204, 208], "time_derivatives_in_the_two_fram": 204, "time_markov_chain": 247, "time_period": 166, "timedepbra": 190, "timedepket": 190, "timedepst": 190, "timeit": [50, 224], "timeout": 258, "timestamp": 13, "timeutil": 270, "timevalue1": 206, "timevalue2": 206, "tina": 159, "tini": [50, 69, 218], "tinyurl": 74, "tion_constraint": 159, "tip": [4, 7, 8, 12, 69, 156, 243, 244, 305], "tissu": 292, "titl": [0, 4, 5, 36, 213], "titu": 240, "tlmzebyvzgzinb": 70, "tm": [46, 165], "tmp": 50, "tmpfile": 13, "tmz": 46, "tn": 69, "to_alg_num": [218, 222], "to_algebraic_integ": 69, "to_ancestor": 222, "to_anf": 99, "to_anp": 222, "to_axis_angl": 42, "to_best": 218, "to_cnf": 99, "to_col": 222, "to_ddm": 216, "to_dens": 216, "to_dfm": 216, "to_dfm_or_ddm": 216, "to_dict": 218, "to_dm": 216, "to_dnf": 99, "to_dod": 216, "to_dok": 216, "to_domain": 220, "to_eul": 42, "to_exact": [218, 223], "to_expr": [27, 91, 92, 93, 125], "to_field": [216, 218, 223], "to_fil": [50, 260], "to_flat_nz": 216, "to_hyp": 91, "to_int": 218, "to_int_repr": 99, "to_linear": [135, 156], "to_list": [13, 69, 216, 218], "to_list_flat": 216, "to_load": [130, 138, 291, 292], "to_matrix": [42, 131, 134, 137, 157, 201, 202, 211, 216, 222, 271, 274, 276, 291], "to_meijerg": 91, "to_nnf": 99, "to_number_field": [69, 222], "to_par": 222, "to_primitive_el": 69, "to_pruf": 63, "to_r": [218, 223], "to_rat": 218, "to_root": 69, "to_rotation_matrix": 42, "to_sdm": 216, "to_sequ": 91, "to_si": 71, "to_spars": 216, "to_sympi": [216, 217, 218], "to_sympy_dict": 218, "to_sympy_list": 218, "to_tre": 63, "to_tupl": 218, "todai": [24, 214], "todo": [12, 105, 170, 172, 176, 177, 181, 182, 184, 185, 186, 187, 188, 220, 227, 234, 252], "todod": [105, 216], "todok": [13, 105], "togeth": [13, 15, 20, 50, 60, 69, 73, 98, 105, 109, 113, 117, 130, 152, 178, 189, 197, 211, 214, 218, 220, 222, 223, 226, 227, 239, 243, 245, 247, 258, 259, 265, 291, 299, 305], "toggl": [109, 213], "token": [50, 94, 97, 111], "tol": [50, 69, 218], "told": [8, 11], "toler": [35, 50, 69, 73, 218, 239, 245], "tolist": [105, 248], "tomatrix": 248, "tomfooleri": 258, "tone": 4, "too": [4, 7, 11, 12, 16, 24, 26, 38, 60, 61, 69, 75, 77, 79, 82, 84, 94, 99, 108, 109, 110, 113, 135, 154, 161, 234, 235, 239, 240, 243, 245, 246, 247, 258, 259, 274, 275, 292], "took": [11, 224, 236], "tool": [5, 8, 9, 11, 12, 15, 24, 60, 97, 103, 105, 110, 125, 140, 159, 211, 214, 219, 220, 227, 259, 265, 270, 279, 286, 292], "toolset": 214, "top": [3, 4, 5, 12, 13, 14, 15, 31, 50, 68, 69, 70, 85, 86, 96, 99, 105, 117, 118, 134, 140, 187, 194, 217, 227, 237, 243, 260, 261, 266, 281, 300], "top_fac": 281, "toper": 254, "topic": [7, 17, 25, 39, 50, 152, 157, 209, 210, 211, 212, 214, 216, 217, 222, 246, 288, 297, 302], "topmost": 262, "topolog": [50, 69, 71, 216, 265], "topologi": [94, 235], "topological_sort": [50, 265], "toronto": 109, "torqu": [117, 130, 131, 135, 137, 140, 147, 154, 155, 157, 159, 291, 292], "torque1": 131, "torque_a": 159, "torqueactu": [130, 147], "torsion": [117, 291], "torsional_mo": 117, "toss": 247, "total": [11, 38, 51, 58, 60, 69, 74, 85, 98, 99, 101, 105, 144, 146, 154, 161, 165, 171, 176, 189, 198, 212, 218, 220, 223, 236, 239, 243, 251, 253, 281], "total_degre": [218, 223, 240], "totient": [13, 70, 74, 109], "totientfunct": [74, 109], "totientrang": 109, "totter": 214, "touch": [85, 144, 236, 292], "tough": 243, "tournier": 221, "toward": [18, 50, 69, 77, 130, 214, 234, 246, 291], "tp": [71, 164, 191, 218, 249], "tp1": 71, "tpu": [2, 110], "tr": [13, 51, 60, 227, 236], "tr0": 236, "tr1": 236, "tr10": 236, "tr10i": 236, "tr11": 236, "tr111": 236, "tr12": 236, "tr12i": 236, "tr13": 236, "tr14": 236, "tr15": 236, "tr16": 236, "tr2": 236, "tr22": 236, "tr2i": 236, "tr3": 236, "tr4": 236, "tr5": 236, "tr6": 236, "tr7": 236, "tr8": 236, "tr9": 236, "trace": [65, 101, 105, 126, 159, 220, 227, 247, 248, 249, 251, 265, 301], "traceback": [12, 13, 14, 16, 19, 22, 23, 24, 29, 31, 33, 34, 35, 36, 37, 38, 43, 44, 45, 50, 51, 61, 69, 70, 73, 79, 96, 99, 100, 101, 102, 105, 107, 108, 111, 125, 212, 214, 216, 217, 218, 220, 223, 226, 234, 235, 243, 245, 246, 256, 258, 259, 261, 263, 265, 266, 268, 297, 301], "track": [7, 9, 11, 13, 16, 60, 69, 73, 77, 140, 153, 176, 201, 211, 216, 234, 253, 295], "tracker": [7, 11, 12, 48, 235, 246, 301], "tractabl": [34, 246], "tradeoff": 301, "tradition": [70, 77], "trafo": 68, "trager": 96, "trail": [4, 12, 61, 69, 109, 218, 220, 223, 263, 268], "trailpap": 144, "train": 211, "traint": 159, "trait": 218, "traj": 291, "trajectori": [152, 291], "tran": 70, "trans_prob": 247, "transact": [96, 221], "transcedent": 46, "transcend": 77, "transcendent": [11, 22, 33, 37, 38, 46, 69, 77, 96, 217, 222, 223, 227, 245, 246, 301, 306], "transcendental_numb": [22, 69], "transcendentalpred": 46, "transfer": [8, 27, 122, 123, 125, 161, 246], "transfer_funct": 125, "transferfunct": [27, 122, 123, 125], "transferfunctionmatrix": [27, 122, 125], "transform": [13, 14, 15, 38, 42, 47, 50, 65, 68, 69, 70, 71, 73, 74, 77, 84, 101, 105, 123, 125, 134, 144, 153, 164, 185, 187, 189, 194, 212, 215, 216, 218, 220, 222, 223, 229, 234, 235, 236, 239, 240, 242, 243, 244, 245, 246, 247, 249, 252, 260, 266, 271, 278, 299], "transform_vari": 96, "transformation_from_par": 271, "transformation_to_dn": 240, "transformation_to_norm": 240, "transformation_to_par": 271, "transformtosympyexpr": 111, "transient": 247, "transit": [52, 60, 159, 220, 247], "transition_prob": 247, "transitionmatrixof": 247, "transitivity_degre": 60, "translat": [2, 13, 50, 60, 69, 78, 80, 84, 86, 110, 111, 125, 128, 131, 134, 135, 140, 149, 151, 153, 157, 210, 213, 227, 243, 245, 259, 260, 266, 268, 276], "translation_coordin": 134, "translation_spe": 134, "transliter": 5, "transmiss": [119, 164, 165], "transmissive_filt": 164, "transmit": [164, 165, 292], "transmitt": 164, "transmitted_port": 164, "transmitted_pow": 164, "transpar": [94, 97, 207], "transport": 71, "transpos": [46, 49, 101, 105, 125, 159, 175, 202, 211, 216, 222, 240, 248, 253, 254, 301], "transposit": [57, 60, 61, 70, 101, 105, 249], "transposition_": 61, "transvers": [60, 65, 67, 119, 165, 166], "transversals_onli": 67, "transverse_magnif": 165, "trapezoid": [96, 105, 247], "trapezoidal_distribut": 247, "traub": [220, 221], "travel": [163, 166, 208, 278, 280], "travers": [14, 29, 85, 109, 111, 132, 223, 236, 252, 262, 300], "travi": 243, "treat": [13, 14, 15, 22, 23, 24, 32, 36, 37, 42, 59, 60, 67, 69, 74, 77, 84, 85, 105, 111, 115, 142, 165, 202, 208, 215, 217, 218, 220, 222, 223, 224, 226, 227, 234, 235, 237, 239, 240, 243, 245, 251, 259, 262, 278, 292, 297, 301], "treatment": [20, 94, 223], "tree": [1, 7, 13, 15, 19, 60, 63, 69, 111, 132, 142, 184, 187, 202, 223, 234, 236, 239, 246, 249, 251, 262, 265, 268, 296], "tree_cs": 239, "tree_repr": 63, "tri": [13, 14, 15, 16, 22, 31, 33, 36, 49, 69, 77, 85, 94, 96, 144, 156, 187, 214, 215, 222, 227, 229, 239, 243, 244, 246, 258, 291, 292, 297, 305], "trial": [69, 109, 220, 232, 236, 243, 247], "triangl": [4, 24, 49, 74, 80, 81, 85, 86, 96, 105, 109, 141, 212, 213, 274, 281], "triangular": [34, 46, 52, 100, 105, 216, 222, 245, 247, 281], "triangular_distribut": 247, "triangular_matrix": 46, "triangulardistribut": 247, "triangularhandl": 46, "triangularpred": 46, "tribonacci": [69, 74], "tribonacci_numb": [69, 74], "tribonacciconst": 69, "tribonaccinumb": 74, "triceps_activ": 291, "triceps_pathwai": 291, "trick": [12, 13, 15, 16, 65, 237, 253], "tricki": [8, 69, 94], "trig": [24, 69, 96, 223, 227, 236, 239, 305], "trig5": 236, "trigamma": [4, 77, 227], "trigamma_funct": 77, "trigammafunct": 77, "trigexpand": 94, "trigger": [3, 12, 24, 61, 111, 192, 256], "trigintegr": 96, "trigonometr": [4, 14, 24, 31, 38, 69, 96, 111, 224, 230, 238, 239, 242, 243, 246, 266, 283, 296, 306], "trigonometri": [96, 292], "trigonometric_and_hyperbolic_solut": 223, "trigonometric_funct": 75, "trigonometric_integr": 77, "trigonometricfunct": 24, "trigonometryangl": 75, "trigsimp": [12, 14, 16, 42, 69, 105, 134, 142, 150, 202, 236, 239, 275], "trigsimp_groebn": 239, "trim": [61, 156], "tripl": [4, 11, 32, 86, 105, 111, 211, 212, 214, 218, 222, 268], "trivari": 96, "trivial": [3, 14, 51, 60, 65, 68, 69, 70, 75, 84, 99, 101, 105, 109, 154, 192, 214, 215, 220, 223, 237, 240, 243, 246, 251], "trmorri": 236, "trobmvenbgbalv": 70, "trotter": 61, "troubl": [24, 77], "troubleshoot": [4, 9, 156], "trpower": 236, "true": [1, 2, 4, 12, 13, 14, 15, 16, 18, 19, 22, 23, 24, 27, 29, 31, 32, 33, 34, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 94, 96, 97, 99, 100, 101, 104, 105, 106, 109, 111, 113, 115, 117, 118, 123, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 138, 140, 141, 142, 146, 147, 159, 163, 164, 173, 176, 177, 184, 186, 187, 190, 191, 192, 195, 201, 202, 203, 204, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 256, 258, 259, 260, 261, 263, 265, 266, 268, 271, 274, 275, 276, 277, 278, 281, 291, 292, 294, 295, 297, 299, 300, 301, 304, 305, 306], "truli": [69, 77, 197], "trunc": [218, 223, 226], "truncat": [20, 61, 69, 105, 109, 118, 197, 213, 224, 226, 229, 230], "truss": 288, "truth": [12, 14, 23, 43, 44, 45, 46, 47, 69, 105, 239], "truth_maintenance_system": 45, "truth_tabl": 99, "truthi": 12, "truthvalu": 99, "try": [4, 5, 11, 12, 13, 14, 15, 16, 22, 23, 24, 29, 31, 32, 35, 36, 38, 61, 68, 69, 73, 77, 79, 84, 94, 96, 99, 101, 105, 108, 109, 111, 140, 182, 184, 191, 192, 213, 217, 218, 222, 227, 232, 234, 235, 236, 237, 239, 240, 243, 245, 265, 266, 268, 294, 297, 300, 305], "try_block_diag": 105, "trysolv": 243, "tschirnhausen": 222, "tsolv": 246, "tube": 134, "tube_fram": 134, "tune": [9, 73, 97, 207, 227, 291, 292], "tupl": [14, 15, 24, 32, 35, 36, 37, 42, 44, 45, 48, 49, 50, 51, 60, 61, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 91, 94, 96, 105, 108, 109, 111, 117, 118, 119, 121, 123, 130, 131, 134, 135, 137, 138, 140, 154, 155, 157, 159, 161, 176, 177, 178, 181, 186, 189, 190, 191, 192, 202, 206, 211, 213, 214, 216, 217, 218, 220, 224, 225, 227, 228, 229, 233, 235, 239, 240, 243, 244, 245, 246, 247, 248, 252, 253, 258, 259, 260, 261, 265, 266, 268, 271, 275, 295, 300, 301, 304], "tuple_count": 69, "tuplekind": [69, 104, 235], "turn": [5, 13, 15, 22, 38, 50, 69, 75, 77, 84, 94, 102, 134, 150, 154, 208, 214, 222, 223, 224, 227, 234, 235, 237, 239, 240, 243, 258, 265, 280, 292, 297, 299], "turner": 216, "tushar": 221, "tutori": [5, 7, 8, 9, 11, 12, 14, 15, 16, 20, 21, 40, 85, 142, 159, 215, 226, 227, 243, 266, 291, 292, 297, 300, 302, 303, 304, 305, 306], "twave": 166, "tweak": [35, 111, 227, 245], "tweflth": 113, "twelv": 292, "twice": [3, 16, 50, 69, 71, 83, 109, 202, 204, 210, 223, 227, 262, 263, 271, 273, 295], "twin": 109, "twist": 94, "two": [2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 18, 20, 22, 23, 24, 29, 31, 33, 36, 37, 42, 48, 49, 50, 51, 54, 55, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 91, 92, 94, 96, 98, 99, 101, 105, 109, 110, 111, 113, 115, 117, 118, 119, 121, 122, 125, 126, 129, 130, 131, 134, 135, 138, 141, 145, 150, 152, 153, 154, 156, 157, 164, 165, 166, 171, 172, 176, 178, 181, 182, 187, 188, 189, 190, 191, 192, 194, 196, 197, 201, 202, 203, 204, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 228, 229, 234, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 248, 249, 252, 262, 265, 266, 271, 274, 276, 277, 278, 280, 291, 292, 294, 295, 298, 300, 301, 305], "two_qubit_box": 172, "twofold": 237, "twoform": 71, "twoform_to_matrix": 71, "twoqubitg": 176, "tx": [94, 303], "txt": [8, 9, 227], "ty": 159, "typ": 253, "type": [4, 7, 9, 11, 13, 14, 15, 16, 17, 19, 22, 23, 24, 27, 30, 32, 33, 38, 44, 45, 48, 52, 60, 61, 65, 68, 69, 70, 71, 72, 73, 75, 79, 80, 81, 82, 83, 84, 87, 94, 96, 97, 98, 99, 100, 101, 105, 109, 110, 111, 112, 115, 116, 117, 118, 121, 123, 125, 129, 130, 134, 135, 138, 141, 142, 153, 159, 164, 178, 186, 187, 188, 190, 196, 202, 206, 207, 211, 213, 214, 216, 217, 218, 221, 222, 223, 224, 225, 227, 228, 229, 235, 236, 237, 239, 240, 242, 243, 245, 251, 252, 253, 256, 258, 259, 260, 265, 266, 268, 275, 278, 281, 292, 295, 297, 299, 300, 301, 304, 305, 306], "type1": 243, "type2": 243, "type3": 243, "type4": 243, "type5": 243, "type6": 243, "type_": 98, "type_a": 98, "type_alias": [50, 227], "type_b": 98, "type_c": 98, "type_d": 98, "type_f": 98, "type_g": 98, "type_map": 227, "type_of_equ": 243, "typea": 98, "typeb": 98, "typec": 98, "typeerror": [12, 13, 14, 16, 23, 24, 33, 36, 43, 44, 45, 61, 69, 79, 84, 99, 100, 102, 107, 125, 166, 217, 218, 234, 235, 259, 266], "typef": 98, "typefunct": [4, 77], "typeg": 98, "typeinfo": 69, "typeset": [68, 227], "typevar": 216, "typic": [2, 3, 12, 13, 14, 15, 24, 65, 75, 94, 109, 116, 125, 131, 137, 143, 157, 211, 213, 215, 220, 223, 224, 237, 259, 260, 276, 292], "typo": [11, 14, 237], "typograph": 111, "tz": 125, "u": [0, 8, 9, 16, 20, 22, 23, 24, 27, 33, 42, 48, 49, 50, 60, 65, 68, 69, 70, 72, 83, 86, 91, 94, 96, 101, 105, 109, 115, 130, 131, 134, 135, 136, 140, 142, 144, 146, 149, 152, 153, 154, 156, 159, 160, 164, 165, 176, 181, 187, 197, 201, 202, 206, 208, 210, 212, 213, 214, 215, 216, 220, 222, 223, 226, 227, 234, 237, 239, 240, 243, 244, 245, 246, 247, 252, 266, 278, 291, 292, 297, 299, 300, 301], "u03b8": 97, "u0_": 134, "u0_c1": 134, "u0_c2": 134, "u0_pc": 134, "u0child": 134, "u1": [60, 109, 134, 142, 144, 145, 146, 147, 149, 150, 154, 156, 159, 202, 204, 206, 207, 210, 243, 291], "u1_": 134, "u1_c1": 134, "u1_pc": 134, "u1d": [142, 144, 146, 149, 150, 154], "u2": [60, 108, 109, 134, 142, 144, 145, 146, 147, 149, 150, 154, 159, 202, 206, 210, 243, 291], "u2_": 134, "u2_pc": 134, "u2d": [142, 144, 146, 149, 150, 154], "u3": [142, 144, 145, 147, 149, 150, 154, 159, 202, 206, 210, 291], "u3d": [144, 149, 150], "u4": [144, 150, 154, 159, 291], "u4d": 144, "u5": [144, 150], "u5d": 144, "u6": [144, 150], "u6d": 144, "u_": [13, 105, 134, 291], "u_0": 220, "u_1": [145, 146, 147, 210, 222, 240, 243, 291], "u_1v_1": 240, "u_2": [145, 146, 147, 210, 222, 240, 243, 291], "u_3": [145, 147, 210, 291], "u_4": 291, "u_arm": 291, "u_aug": 105, "u_aux": [140, 145], "u_auxilia": 159, "u_auxiliari": [135, 150, 154, 159], "u_d": [136, 159], "u_dep": [140, 145, 154], "u_depend": [135, 144, 146, 154, 159, 291], "u_fram": 134, "u_func": 96, "u_i": [136, 156, 210, 220], "u_ind": [135, 136, 140, 142, 144, 145, 146, 149, 150, 154, 156, 159], "u_j": [13, 222], "u_j1": 134, "u_n": [77, 96, 220, 222, 223], "u_op": [136, 146], "u_p1": 134, "u_p2": 134, "u_pc": 134, "u_pin": 140, "u_slid": 140, "u_val": 291, "u_var": 96, "u_x": 210, "ua": 215, "uaux1": 145, "uaux2": 145, "ub": 262, "ubuntu": 227, "ubv": 105, "ucdavi": 96, "uchicago": 247, "uci": 109, "uconn": [60, 247], "ucr": 11, "ud": [135, 154, 291], "ud_op": [136, 146], "udel": 105, "udivisor": [74, 109], "udivisor_count": [74, 109], "udivisor_sigma": [13, 74, 109], "udl": 101, "udldecomposit": 101, "udot": [135, 144], "ueber": 222, "ueqdueodoctcwq": 70, "uexpr": 300, "uf": 220, "ufunc": [14, 50, 110, 259, 266], "ufuncifi": [2, 50, 259], "ufuncifycodewrapp": 259, "ugat": 176, "ugli": 227, "ui": [11, 96, 109, 244], "uiki": 70, "uint16": 50, "uint32": 50, "uint64": 50, "uint8": 50, "ukrain": 221, "ultim": [11, 24, 75, 197], "umontr": [74, 109], "un": [236, 237], "unabl": [50, 82, 86, 111, 115, 245, 271, 294, 295], "unaffect": [69, 246], "unambigu": [18, 227, 243, 268], "unansw": [129, 201], "unappropri": 71, "unavoid": 197, "unbound": [69, 245, 252, 292], "unbound_theta": 213, "unboundedlperror": 245, "unbranch": [77, 94], "unbreak": 70, "uncertainti": [73, 197], "unchang": [3, 13, 15, 24, 60, 61, 69, 96, 105, 125, 196, 216, 223, 227, 233, 236, 239, 246, 294], "unclear": [11, 13, 22, 129], "uncommon": [12, 50], "uncondition": [3, 12], "unconstrain": 245, "uncontract": 254, "uncount": 246, "uncoupl": [171, 189], "undecid": [22, 24, 33, 105, 217, 246, 301], "undecor": 69, "undefin": [12, 14, 15, 24, 33, 36, 44, 45, 48, 69, 75, 76, 77, 96, 101, 111, 131, 141, 211, 222, 233, 234, 237, 266, 295, 306], "undefinedfunct": [69, 204, 227, 259, 266], "undefinedkind": [69, 104, 235], "undefinedpred": [44, 45], "under": [2, 3, 4, 8, 11, 12, 15, 16, 22, 23, 44, 45, 47, 48, 50, 51, 59, 60, 65, 67, 77, 87, 94, 96, 98, 99, 105, 109, 111, 113, 117, 118, 161, 187, 212, 214, 215, 222, 223, 227, 234, 235, 237, 240, 243, 245, 246, 247, 253, 256, 291, 292, 299, 305], "underbrac": [197, 210], "underdetermin": [105, 216, 245, 246], "underevalu": 301, "undergo": [7, 115, 165], "undergon": [211, 246], "underli": [12, 15, 50, 61, 67, 69, 98, 105, 123, 142, 187, 200, 216, 223, 245, 246, 247], "underlin": [4, 5], "underscor": [3, 4, 12, 13, 69, 105, 243, 253, 261], "understand": [4, 11, 12, 16, 22, 23, 24, 38, 69, 70, 94, 142, 152, 154, 155, 159, 197, 210, 213, 216, 217, 222, 227, 237, 240, 259, 266, 296, 297, 304, 305], "understood": [61, 109, 197, 214, 218, 223], "undertak": 305, "undertermin": 223, "undertest": 301, "undescript": 11, "undesir": [69, 129, 142, 156, 215, 218, 237], "undetermin": [18, 69, 105, 223, 229, 243, 245], "undetermined_coeffici": 243, "undirect": [98, 265], "undo": [14, 237, 305], "undon": 305, "unequ": [14, 15, 18, 69, 117, 227], "unevalu": [12, 13, 14, 15, 22, 23, 24, 27, 44, 45, 48, 61, 68, 69, 75, 77, 86, 96, 109, 125, 169, 173, 180, 181, 192, 223, 226, 234, 235, 239, 243, 245, 246, 247, 248, 295, 299, 300, 306], "unevaluat": 243, "unevaluatedexpr": [15, 69, 227, 300], "unexpand": [69, 217, 226, 236, 259], "unexpect": [12, 14, 69, 258], "unexpectedeof": 111, "unexplain": 49, "unfactor": 216, "unfair": 247, "unflatten": 265, "unfortun": [71, 73, 110, 226, 240], "unhash": 265, "unhind": 243, "uni": [49, 96, 265], "unicod": [11, 12, 77, 97, 105, 207, 227, 258, 299], "unifi": [69, 160, 216, 218, 220, 222, 223, 235], "unificationfail": [220, 222], "uniform": [80, 140, 213, 245, 247], "uniform_distribution_": 247, "uniform_sum_distribut": 247, "uniformdistribut": 247, "uniformli": [13, 20, 60, 85, 86, 109, 117, 119, 123, 213, 261], "uniformsum": 247, "uniformsumdistribut": 247, "unify_anp": 218, "unify_composit": 218, "unify_dmp": 218, "unimod": 247, "unimport": 5, "unintegr": 36, "uninterest": 220, "union": [32, 41, 46, 48, 50, 58, 60, 67, 99, 214, 222, 227, 233, 234, 235, 242, 246, 265], "union_": 235, "union_find": 60, "uniq": 265, "uniqu": [3, 13, 15, 48, 49, 51, 60, 63, 65, 69, 70, 71, 74, 77, 84, 87, 92, 96, 98, 99, 105, 109, 134, 135, 181, 190, 202, 211, 214, 215, 216, 217, 220, 222, 223, 228, 232, 239, 240, 243, 245, 246, 247, 251, 260, 265, 268, 275, 280, 292, 297, 300], "uniquenss": 70, "unit": [16, 24, 27, 28, 42, 46, 49, 69, 70, 74, 82, 83, 84, 96, 105, 109, 113, 117, 119, 123, 125, 127, 128, 130, 134, 138, 140, 141, 142, 157, 159, 168, 193, 194, 195, 199, 201, 202, 208, 211, 213, 215, 216, 218, 220, 222, 223, 225, 227, 235, 237, 240, 246, 248, 271, 273, 275, 280, 281, 288, 291], "unit_cub": 96, "unit_disk": 235, "unit_system": 199, "unit_triangular": 46, "unitari": [46, 74, 96, 109, 176, 181, 212], "unitary_divisor": 109, "unitary_matrix": 46, "unitarydivisor": 109, "unitarydivisorfunct": [74, 109], "unitaryhandl": 46, "unitaryoper": 181, "unitarypred": 46, "uniti": [24, 75, 77, 94, 187, 222, 292], "unitless": [196, 292], "unitsystem": [196, 200], "unittriangularhandl": 46, "unittriangularpred": 46, "unitvec": 159, "univari": [18, 29, 38, 48, 68, 69, 75, 92, 96, 214, 215, 217, 218, 221, 222, 223, 224, 229, 240, 242, 245, 247], "univariatepolynomialerror": 220, "univers": [3, 15, 50, 212, 218, 221, 227, 235, 240, 245, 246], "universal_set": 235, "universalset": [99, 235], "universitat": 271, "unix": [1, 258, 259], "unknow": 22, "unknown": [13, 14, 15, 19, 22, 23, 24, 27, 34, 36, 37, 42, 55, 69, 70, 118, 177, 216, 225, 242, 243, 244, 245, 246, 265, 306], "unknwon": 27, "unless": [2, 4, 11, 12, 14, 15, 22, 24, 26, 43, 45, 48, 50, 60, 68, 69, 70, 74, 77, 84, 85, 94, 105, 108, 140, 165, 210, 211, 215, 216, 217, 222, 223, 227, 232, 235, 236, 243, 245, 258, 262, 265, 266, 268, 271, 280, 295, 301, 305], "unlik": [2, 4, 12, 14, 15, 16, 22, 23, 29, 36, 47, 69, 70, 74, 96, 105, 109, 111, 142, 210, 216, 220, 227, 240, 243, 246, 262, 263, 297, 299, 300, 301, 304], "unload": 115, "unm": 226, "unmodifi": [216, 239], "unmov": 61, "unnam": 260, "unnecessari": [3, 4, 5, 12, 14, 46, 50, 223, 226, 247, 258, 298], "unnecessarili": 305, "unnecessary_permut": 96, "unneed": 15, "unnorm": [75, 77, 216], "unnot": 14, "unord": [13, 16, 69, 109, 218, 246, 265, 266], "unpack": [13, 69, 105, 265, 266], "unpolar": 164, "unpredict": 262, "unprejud": 69, "unpython": 14, "unrad": [239, 245], "unrank": [53, 58, 60, 61, 63], "unrank_binari": 64, "unrank_grai": 64, "unrank_lex": 61, "unrank_nonlex": 61, "unrank_trotterjohnson": 61, "unread": [223, 263], "unrecogn": [13, 105], "unrecognis": 11, "unrel": [12, 13, 34, 69, 76, 215, 297], "unreli": 217, "unresolv": 22, "unrestrict": [5, 58, 265], "unrol": 252, "unrot": 85, "unsanit": [69, 266, 294], "unsat": 99, "unsatisfi": 99, "unset": [227, 239], "unsign": [50, 74, 239], "unsignedinttyp": 50, "unsimplifi": [16, 236], "unsolv": [223, 246], "unsolvablefactorerror": [29, 223, 245], "unsort": [69, 129, 201], "unspecifi": [48, 69, 84, 295], "unsplitt": 111, "unstabl": [27, 121], "unstrain": 113, "unsuccess": [60, 67], "unsuit": [13, 212], "unsupport": [13, 16, 19, 125, 217, 218, 222, 227], "unsur": [3, 4, 12], "unsurmount": 260, "until": [3, 12, 14, 20, 22, 29, 31, 32, 33, 34, 35, 36, 37, 41, 61, 63, 69, 70, 79, 96, 105, 109, 156, 211, 220, 223, 236, 243, 297], "untouch": 69, "untyp": 50, "unus": 13, "unusu": [4, 14, 22, 144, 258], "unwant": [69, 245, 265], "unwelcom": 5, "unwieldi": [12, 18], "unwrap": 141, "up": [2, 3, 7, 8, 9, 11, 12, 13, 14, 15, 20, 22, 23, 24, 36, 40, 45, 48, 50, 52, 60, 61, 63, 69, 70, 71, 73, 74, 75, 77, 78, 85, 86, 90, 94, 96, 97, 99, 105, 109, 110, 117, 127, 129, 130, 137, 138, 140, 144, 149, 151, 156, 157, 159, 160, 172, 187, 189, 206, 212, 213, 214, 216, 217, 218, 222, 224, 227, 228, 229, 234, 236, 237, 239, 240, 243, 244, 245, 246, 259, 260, 261, 262, 263, 266, 291, 292, 296, 297, 300, 301, 303], "upcom": 3, "updat": [3, 11, 13, 16, 36, 40, 69, 140, 146, 172, 182, 185, 186, 188, 212, 216, 220, 223, 227, 240, 253, 263], "upgrad": [3, 41], "upload": [5, 109], "upon": [7, 12, 15, 22, 50, 69, 109, 130, 137, 140, 144, 154, 155, 156, 159, 165, 186, 192, 208, 210, 211, 235, 243, 252, 259, 278, 305], "upper": [4, 46, 68, 70, 73, 77, 78, 85, 86, 100, 101, 105, 108, 109, 117, 123, 134, 185, 192, 212, 216, 218, 220, 222, 223, 227, 237, 245, 252, 271, 291], "upper_bob": 134, "upper_bound": [78, 79, 82, 85], "upper_half_plan": 235, "upper_half_unit_disk": 235, "upper_hessenberg_decomposit": 105, "upper_incomplete_gamma_funct": 77, "upper_limit": [123, 295], "upper_polygon": 85, "upper_seg": 85, "upper_triangular": [46, 105], "upper_triangular_solv": [100, 105], "uppercas": [42, 70, 237], "uppergamma": [4, 74, 77, 227, 247], "uppertriangularhandl": 46, "uppertriangularmatrix": 46, "uppertriangularpred": 46, "upretti": 12, "upright": 144, "upsid": 11, "upsilon": [16, 227], "upstream": 11, "upto": [229, 234, 243], "upward": [117, 216, 222], "ur": 240, "url": [0, 70, 263], "urul": 96, "us": [0, 1, 3, 4, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 111, 112, 113, 115, 116, 117, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 159, 160, 161, 164, 165, 167, 169, 171, 172, 173, 176, 178, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 201, 202, 203, 204, 206, 207, 208, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 274, 275, 277, 278, 280, 281, 283, 288, 289, 291, 292, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "usa": [68, 221], "usabl": [3, 14, 36, 217, 218, 227, 246, 299], "usag": [4, 5, 12, 15, 16, 22, 23, 24, 41, 44, 71, 75, 96, 109, 189, 208, 213, 214, 216, 220, 227, 235, 237, 240, 243, 244, 248, 262, 266, 278, 279, 286, 300], "use_add": 261, "use_cach": 223, "use_ecm": 109, "use_imp": 266, "use_latex": [97, 207, 213, 304], "use_lra_theori": 99, "use_model": 99, "use_pm1": [69, 109], "use_renam": 50, "use_rho": [69, 109], "use_symengin": 2, "use_tri": [69, 109], "use_unicod": [12, 14, 24, 34, 48, 49, 50, 73, 77, 96, 97, 105, 118, 125, 164, 207, 212, 214, 215, 226, 227, 228, 246, 247, 295, 299, 301, 304, 305, 306], "use_unicode_sqrt_char": 227, "usecas": 13, "usefulli": 218, "useless": [12, 194, 218, 220], "usepackag": 227, "user": [0, 2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 19, 21, 22, 24, 49, 50, 51, 60, 61, 68, 69, 70, 71, 77, 81, 94, 98, 101, 105, 111, 112, 116, 117, 118, 121, 123, 125, 129, 130, 138, 141, 142, 152, 155, 157, 160, 180, 181, 190, 196, 197, 202, 206, 210, 214, 217, 220, 222, 224, 225, 226, 227, 228, 236, 239, 245, 246, 247, 256, 259, 260, 262, 263, 266, 271, 275, 276, 281, 288, 294, 297, 298, 300, 301, 302], "user_def_func": 227, "user_funct": [50, 227], "user_guid": 266, "usernam": [9, 11], "userwarn": [12, 202, 256, 263, 301], "usm": 216, "ussr": 221, "usual": [2, 12, 13, 14, 15, 16, 20, 22, 29, 49, 51, 60, 68, 69, 70, 87, 94, 96, 105, 152, 178, 190, 196, 197, 208, 210, 211, 214, 215, 216, 217, 218, 220, 223, 226, 227, 228, 234, 237, 243, 246, 247, 248, 252, 253, 260, 262, 266, 271, 280, 292, 294, 297, 300, 304, 305], "utf": 227, "util": [2, 3, 4, 5, 7, 11, 31, 33, 48, 56, 58, 60, 61, 74, 75, 80, 81, 82, 85, 99, 109, 110, 116, 130, 131, 135, 138, 162, 196, 199, 216, 220, 224, 227, 239, 240, 256, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 283, 288, 289], "utilis": 49, "utm": 109, "uv": [149, 150, 192], "uvar": 96, "uwa": 74, "uwaterloo": 70, "ux": 244, "uxi": 244, "uxt": 244, "v": [0, 8, 9, 18, 27, 29, 33, 38, 42, 50, 59, 65, 68, 69, 70, 71, 72, 73, 77, 83, 94, 96, 98, 105, 109, 112, 113, 115, 118, 130, 131, 132, 134, 137, 141, 144, 156, 157, 159, 160, 164, 165, 177, 192, 197, 201, 202, 204, 206, 208, 210, 211, 213, 220, 221, 222, 223, 227, 237, 239, 240, 243, 245, 247, 258, 265, 271, 274, 275, 276, 277, 278, 280, 291, 292], "v1": [71, 82, 105, 137, 159, 201, 202, 203, 206, 247, 266, 271, 274, 275, 276, 277], "v10": 50, "v18": 50, "v1pt": 159, "v1pt_theori": [159, 206, 210], "v1x": 201, "v1y": 201, "v1z": 201, "v2": [9, 71, 82, 105, 137, 201, 202, 203, 206, 266, 271, 274, 275, 276, 277], "v2pt": [142, 159], "v2pt_theori": [142, 144, 149, 150, 151, 156, 157, 159, 160, 206, 210, 291], "v2x": 201, "v2y": 201, "v2z": 201, "v3": [105, 202, 206, 277], "v4b3": 70, "v5_2": 69, "v6": 50, "v8": 247, "v_": 292, "v_0": 245, "v_1": [71, 222, 240, 245], "v_2": [71, 222, 240], "v_a": 271, "v_arrai": 59, "v_aug": 105, "v_b": 271, "v_field": 71, "v_i": [109, 222, 245], "v_m": [113, 245, 292], "v_m_max": [113, 115, 292], "v_m_tild": [113, 292], "v_m_tilde_num": 292, "v_mt": 292, "v_n": 222, "v_o_n": [142, 159], "v_p_n": 142, "v_r_n": 142, "va": 223, "vacuou": 105, "vajnovszki": 265, "val": [50, 69, 81, 213, 218, 222, 266], "val_dict": 144, "val_inf": 243, "valenc": 254, "valid": [2, 4, 5, 11, 13, 14, 22, 23, 24, 32, 36, 43, 45, 47, 48, 49, 50, 62, 68, 69, 74, 75, 85, 105, 109, 111, 131, 132, 135, 136, 140, 142, 144, 145, 161, 165, 184, 189, 196, 199, 201, 202, 207, 211, 217, 220, 223, 226, 227, 235, 239, 240, 243, 245, 246, 247, 266, 291, 301, 305], "validate_system": [140, 145], "validrelationoper": 69, "valu": [2, 3, 4, 5, 12, 13, 14, 15, 16, 20, 22, 24, 27, 29, 32, 33, 34, 35, 36, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 60, 61, 65, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 91, 92, 94, 96, 97, 99, 100, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 121, 123, 125, 127, 130, 131, 134, 135, 136, 137, 140, 141, 142, 144, 145, 156, 159, 161, 165, 168, 171, 176, 178, 181, 184, 186, 187, 188, 189, 192, 193, 195, 197, 202, 203, 206, 208, 210, 211, 212, 213, 215, 216, 217, 218, 220, 222, 223, 224, 225, 227, 228, 233, 234, 235, 236, 239, 240, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 258, 260, 261, 265, 266, 267, 268, 274, 276, 278, 281, 291, 292, 295, 297, 300], "valuat": 243, "value1": 213, "value2": 213, "value_const": 50, "valueerror": [12, 14, 19, 22, 35, 36, 43, 45, 48, 50, 51, 55, 61, 69, 70, 78, 79, 82, 84, 85, 96, 101, 105, 108, 109, 117, 123, 125, 141, 166, 206, 208, 212, 214, 216, 220, 222, 235, 240, 243, 245, 246, 265, 268, 278], "van": [105, 109, 221], "vanilla": 22, "vanish": [105, 192, 220, 223, 226, 243, 271], "vanston": 109, "var": [14, 16, 27, 32, 48, 50, 68, 69, 73, 74, 92, 96, 99, 105, 125, 202, 213, 222, 226, 227, 239, 240, 266, 306], "var_in_dcm": 202, "var_nam": 69, "var_start_end": 213, "var_start_end_i": 213, "var_start_end_u": 213, "var_start_end_v": 213, "var_start_end_x": 213, "var_sub1__sup_sub2": 227, "var_t": 240, "varbosonicbasi": 192, "varepsilon": 243, "vari": [20, 48, 50, 69, 83, 85, 112, 115, 117, 123, 129, 130, 135, 138, 157, 190, 211, 234, 245, 265, 278, 292], "variabl": [1, 2, 4, 5, 11, 12, 13, 14, 15, 18, 20, 23, 24, 27, 29, 30, 32, 33, 35, 37, 41, 42, 43, 45, 46, 48, 50, 51, 64, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 86, 88, 94, 96, 97, 99, 105, 111, 112, 115, 117, 118, 121, 123, 125, 130, 136, 140, 142, 149, 151, 159, 160, 166, 181, 186, 190, 192, 195, 201, 202, 204, 208, 215, 216, 217, 218, 220, 222, 223, 224, 227, 228, 233, 234, 239, 240, 242, 243, 244, 245, 246, 254, 258, 260, 261, 262, 266, 271, 274, 275, 277, 278, 280, 292, 295, 297, 299, 301, 306], "variable_map": 202, "variable_nam": [271, 278], "varianc": 247, "variancematrix": 247, "variant": [220, 243, 246], "variat": [61, 69, 220, 234, 243, 291], "variation_of_paramet": 243, "variationofparamet": 243, "varieti": [26, 38, 50, 51, 61, 69, 110, 118, 157, 214, 221, 223, 247, 265], "varii": 59, "varion": 24, "variou": [2, 4, 5, 14, 15, 20, 24, 29, 32, 48, 50, 52, 53, 60, 68, 69, 74, 89, 94, 96, 99, 105, 115, 137, 157, 171, 175, 176, 187, 189, 214, 215, 218, 219, 220, 222, 228, 234, 237, 240, 243, 244, 246, 260, 291, 292, 305], "varlist": 105, "varnoth": 235, "varphi": [73, 77, 222, 227, 243], "varshalovich": [171, 189], "vast": [2, 38, 96, 219], "vastli": 211, "vat": 0, "vc": 69, "vdiff": 69, "vdot": [101, 105, 197], "ve": [24, 144], "vec": [36, 105, 134, 159, 202, 212, 220, 277, 278, 280], "vec1": 204, "vec2": 204, "vech": 105, "vect": [203, 271, 274], "vectfield": [203, 208, 274, 278], "vector": [4, 13, 20, 28, 42, 46, 50, 53, 60, 61, 69, 71, 77, 82, 83, 84, 91, 92, 98, 105, 110, 115, 117, 119, 121, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 164, 165, 178, 187, 189, 194, 197, 202, 204, 206, 207, 214, 216, 222, 227, 237, 240, 243, 245, 247, 252, 253, 258, 259, 273, 277, 282, 286, 288, 291, 292, 301], "vector_coplanar": 42, "vector_field": [71, 278], "vector_integr": [274, 281], "vector_nam": 271, "vector_onli": 42, "vector_part": 42, "vectoradd": 275, "vectorfield": 281, "vectori": [206, 208, 275, 280], "vectorinto": 211, "vectormul": 275, "vectors_in_basi": 71, "vectorzero": 275, "vee": [94, 99, 105], "vega": 60, "vehicl": 2, "vel": [130, 134, 142, 144, 145, 146, 150, 153, 159, 206, 210, 278, 292], "vel_p": 156, "vel_vec": 206, "veloc": [2, 105, 113, 115, 129, 130, 131, 134, 135, 137, 138, 140, 144, 145, 146, 149, 150, 151, 153, 156, 157, 159, 166, 194, 196, 197, 201, 202, 206, 208, 211, 278, 280, 291], "velocity_con": 159, "velocity_constraint": [135, 140, 144, 145, 146, 154, 159, 291], "venu": 195, "venus_a": 195, "venv": [8, 9], "verbatim": [5, 227], "verbos": [12, 50, 69, 105, 109, 227, 258, 259, 304], "veri": [1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 18, 19, 22, 24, 29, 50, 65, 69, 70, 73, 74, 79, 81, 87, 91, 94, 96, 99, 105, 109, 113, 125, 129, 138, 142, 146, 159, 164, 197, 210, 211, 214, 216, 217, 220, 222, 223, 224, 226, 227, 228, 234, 235, 236, 237, 239, 240, 243, 245, 246, 247, 258, 259, 260, 266, 292, 294, 297, 300, 305], "verif": [48, 216, 245], "verifi": [12, 22, 29, 34, 36, 40, 48, 60, 66, 70, 71, 142, 214, 220, 226, 243, 245, 246, 248, 249, 305], "verify_numer": [13, 69], "verion": 69, "verlag": [96, 221], "vers": 24, "versa": [70, 96, 109, 117, 182, 202, 214, 218, 275, 276, 297], "versatil": 94, "version": [2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 22, 23, 24, 26, 38, 39, 40, 43, 49, 50, 60, 61, 67, 69, 70, 74, 75, 77, 96, 99, 100, 102, 105, 107, 109, 128, 131, 134, 142, 176, 190, 194, 202, 212, 213, 214, 216, 217, 218, 220, 222, 223, 227, 230, 239, 245, 247, 257, 258, 260, 261, 262, 263, 265, 266, 269, 271, 277, 292, 297, 300, 301], "versor": 42, "vert": [108, 208, 211, 280], "vertex": [53, 63, 80, 85, 96, 216], "vertic": [13, 49, 53, 62, 63, 79, 80, 82, 84, 85, 86, 96, 98, 105, 117, 118, 119, 121, 140, 147, 164, 172, 212, 213, 216, 222, 227, 235, 265, 281], "vertical_direct": 49, "veryuniqu": 49, "vf": 227, "vfield": [218, 277], "vfree_group": 51, "vg": 220, "vi": 69, "via": [2, 8, 9, 14, 15, 20, 24, 34, 38, 40, 43, 44, 45, 60, 61, 69, 74, 77, 94, 96, 99, 105, 109, 110, 111, 117, 138, 202, 212, 214, 218, 220, 222, 223, 226, 227, 246, 256, 259, 260, 271, 280, 292, 300], "viabl": [8, 70, 295], "vice": [70, 96, 109, 117, 182, 202, 214, 218, 275, 276, 297], "vicki": 77, "video": [7, 303], "viet": 223, "view": [2, 4, 7, 11, 12, 15, 38, 50, 51, 52, 69, 105, 117, 194, 197, 211, 213, 220, 227, 243, 246, 260, 262, 265], "viewcod": 4, "viewcont": 271, "viewdoc": 236, "vieweg": 221, "viewer": [2, 5, 49, 227, 261], "vig": 0, "vigener": 70, "vigenere_ciph": 70, "vigkla": 223, "viktor": 244, "vim": 11, "vincent": [223, 265], "violat": [16, 142, 212, 224, 239], "virtu": [157, 159], "virtual": [3, 8, 14, 40, 69, 85, 211, 298], "visibl": [11, 94, 213], "visit": [40, 53, 60, 69, 74, 302], "visit_token": 111, "visitor": 262, "visual": [3, 13, 69, 109, 118, 125, 226, 239, 291, 292], "visualis": 27, "vital": 237, "vlahovski": 236, "vlatex": [139, 201, 202, 207, 211], "vline": 227, "vlist": 105, "vo": 243, "vobj": 227, "void": 260, "vol": [53, 61, 70, 74, 77, 94, 105, 109, 126, 136, 222, 223, 237, 262, 265], "volatil": 50, "volum": [0, 4, 50, 68, 77, 94, 96, 212, 221, 237, 243, 262, 271], "volume_result": 50, "voluntari": 292, "voluntarili": [112, 292], "von": [221, 247], "von_mises_distribut": 247, "vonmis": 247, "vonmisesdistribut": 247, "voss": 11, "vpprint": [139, 201, 207, 211], "vprint": [139, 201, 206, 207, 211], "vr": 240, "vradiu": 79, "vring": 218, "vsin": 69, "vslobodi": 105, "vsort": 69, "vsort0": 69, "vssut": 27, "vstack": [105, 216], "vt": 70, "w": [13, 16, 27, 38, 42, 50, 53, 59, 61, 68, 69, 70, 71, 72, 75, 77, 94, 96, 99, 105, 106, 131, 134, 137, 140, 150, 158, 161, 166, 177, 181, 190, 201, 206, 208, 209, 212, 213, 215, 216, 220, 221, 222, 223, 224, 228, 234, 235, 237, 239, 240, 243, 244, 246, 247, 258, 266, 268, 278, 306], "w1": [166, 210, 239], "w2": [68, 166, 210], "w2e": 68, "w3": [166, 210, 227], "w3j": 171, "w_": [105, 222], "w_0": [161, 240], "w_1": [210, 222], "w_2": [210, 222], "w_3": 210, "w_a_n": 142, "w_b_n": [142, 159], "w_frame": 134, "w_i": [96, 161, 223, 243], "w_j": 222, "w_k": 75, "w_o": 161, "w_r": 222, "w_r_n_qd": [149, 150], "w_x": 210, "w_y": 210, "w_z": 210, "wa": [2, 3, 9, 11, 12, 13, 14, 16, 18, 22, 24, 36, 52, 58, 60, 61, 63, 69, 70, 71, 77, 82, 105, 109, 111, 129, 131, 137, 142, 144, 146, 156, 157, 187, 197, 210, 211, 212, 214, 216, 220, 222, 223, 224, 226, 227, 236, 237, 239, 243, 245, 247, 256, 258, 261, 263, 265, 266, 295, 297, 299, 300, 303], "wagstaff": 109, "wai": [2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 29, 31, 33, 36, 41, 49, 51, 52, 53, 58, 60, 61, 62, 65, 69, 71, 74, 77, 85, 89, 93, 94, 96, 98, 101, 105, 108, 109, 111, 113, 116, 117, 121, 129, 130, 135, 137, 140, 142, 146, 148, 149, 152, 156, 172, 186, 189, 190, 195, 197, 200, 201, 202, 204, 206, 208, 210, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 234, 237, 239, 240, 243, 244, 246, 248, 249, 252, 253, 256, 260, 262, 265, 266, 271, 275, 276, 277, 278, 280, 294, 295, 297, 298, 299, 300, 305, 306], "waist": 161, "waist2rayleigh": 161, "waist_approximation_limit": 161, "waist_in": 161, "waist_out": 161, "wait": [12, 211], "wald": 247, "walk": [15, 50, 53, 69, 184, 187, 237], "walker": 243, "wall": [11, 13, 131, 134, 140, 147], "walli": 68, "walter": 158, "wang": [220, 221, 265], "wang78": [220, 221], "wang81": 221, "want": [2, 3, 4, 8, 9, 11, 12, 13, 14, 15, 16, 19, 20, 22, 23, 24, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 46, 48, 50, 51, 52, 53, 61, 69, 70, 76, 81, 83, 85, 88, 94, 96, 101, 105, 106, 109, 110, 112, 115, 123, 125, 128, 136, 142, 159, 175, 185, 186, 189, 192, 195, 197, 204, 206, 210, 211, 213, 215, 216, 217, 220, 222, 223, 224, 226, 227, 228, 234, 235, 237, 239, 240, 243, 244, 245, 246, 247, 248, 253, 256, 258, 260, 262, 265, 266, 276, 278, 281, 292, 294, 295, 297, 299, 300, 301, 302, 304, 305], "war": 70, "warn": [3, 4, 16, 24, 69, 70, 84, 99, 111, 131, 202, 211, 213, 215, 227, 243, 245, 256, 258, 260, 264, 265, 290, 301], "warningcl": [256, 263], "warns_deprecated_sympi": [3, 12, 256, 261, 263], "warrant": 12, "washington": 109, "wasn": [12, 13], "wast": [69, 106, 216], "watch": 61, "watson": [51, 239], "wave": [127, 162, 163, 164, 230, 288], "wavefunct": [168, 181, 190, 193, 288], "wavelen": 161, "wavelength": [161, 166], "wavenumb": 166, "we": [0, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 16, 20, 22, 23, 24, 26, 29, 30, 31, 32, 34, 36, 37, 38, 43, 44, 45, 48, 49, 50, 51, 52, 53, 55, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 82, 87, 92, 93, 94, 96, 97, 98, 99, 105, 106, 108, 109, 111, 113, 115, 125, 128, 129, 130, 131, 132, 134, 135, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 164, 167, 175, 178, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 197, 201, 202, 204, 206, 208, 210, 211, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 234, 235, 237, 239, 240, 242, 243, 244, 245, 247, 249, 251, 253, 258, 259, 260, 262, 263, 265, 266, 271, 275, 276, 277, 278, 280, 281, 291, 292, 294, 295, 297, 299, 300, 301, 304, 305, 306], "weak": [60, 69, 104, 105, 135, 217, 220], "weakli": [105, 265], "web": [5, 7, 8, 11, 53, 61, 70, 74, 77, 81, 86, 96, 109, 159, 209, 216, 221, 239, 240, 247, 265, 301], "webpag": [2, 5], "websit": [5, 7, 303], "wedg": [71, 94], "wedgeproduct": 71, "weibul": 247, "weibull_distribut": 247, "weibulldistribut": 247, "weight": [20, 69, 77, 84, 86, 96, 98, 105, 176, 239, 295], "weisstein": 221, "weisstein09": [220, 221], "welcom": [217, 243, 298], "weld": 134, "weldjoint": 134, "welecka": 192, "well": [3, 4, 5, 7, 11, 13, 14, 15, 16, 18, 20, 22, 24, 40, 46, 48, 49, 50, 51, 52, 53, 55, 61, 68, 69, 74, 75, 77, 96, 102, 105, 121, 126, 129, 134, 140, 142, 144, 146, 147, 156, 157, 182, 191, 194, 195, 201, 210, 212, 213, 214, 216, 217, 218, 220, 222, 227, 234, 235, 236, 237, 239, 243, 245, 246, 258, 259, 275, 276, 280, 292, 297, 299, 300, 305], "welleslei": 68, "wen": 130, "wendi": 61, "went": 210, "were": [3, 5, 11, 12, 13, 14, 15, 16, 18, 22, 24, 49, 52, 61, 63, 69, 70, 75, 86, 94, 105, 109, 110, 111, 113, 129, 140, 156, 201, 208, 211, 214, 216, 218, 220, 221, 222, 223, 226, 227, 228, 236, 239, 245, 265, 266, 268, 297, 299, 300, 304, 305], "werner": 158, "weslei": [53, 61, 109, 221], "wester": [219, 289], "wester1999": 226, "weyl": [92, 98], "weyl_group": 98, "weylelt": 98, "weylgroup": 98, "wf": [127, 144], "wf_cont": 144, "wf_i": 144, "wf_mc": 144, "wfrad": 144, "wgate": 177, "what": [4, 5, 7, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 29, 30, 39, 48, 50, 61, 63, 68, 69, 70, 71, 75, 76, 79, 80, 84, 94, 96, 98, 105, 109, 111, 131, 134, 135, 138, 140, 142, 146, 153, 159, 191, 192, 195, 197, 202, 210, 211, 213, 218, 220, 223, 226, 227, 228, 234, 236, 237, 239, 240, 243, 245, 252, 256, 258, 260, 261, 266, 275, 276, 281, 295, 297, 298, 300, 304, 305], "whatev": [13, 14, 16, 24, 60, 69, 70, 239, 243, 244, 246, 266], "wheel": [13, 144], "when": [0, 2, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 27, 29, 33, 35, 36, 37, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 60, 61, 62, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 93, 96, 97, 99, 100, 105, 109, 110, 111, 112, 113, 115, 121, 123, 125, 126, 129, 130, 134, 137, 138, 140, 141, 142, 144, 145, 150, 152, 153, 154, 155, 156, 157, 160, 165, 166, 171, 176, 177, 181, 184, 186, 194, 195, 196, 201, 207, 210, 211, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 228, 229, 233, 234, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 249, 251, 252, 256, 258, 259, 260, 261, 263, 265, 266, 268, 270, 275, 291, 292, 295, 297, 299, 300, 305, 306], "whenc": 237, "whenev": [2, 3, 12, 13, 14, 15, 16, 24, 67, 94, 96, 105, 199, 213, 214, 215, 216, 218, 229, 234, 237, 247, 295, 297, 300], "where": [3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 27, 29, 32, 33, 34, 36, 38, 41, 42, 46, 48, 49, 50, 51, 58, 59, 60, 61, 63, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 79, 82, 84, 85, 86, 87, 91, 92, 93, 94, 96, 98, 99, 100, 101, 105, 109, 111, 112, 115, 117, 119, 121, 122, 125, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 144, 155, 156, 157, 159, 160, 166, 176, 181, 187, 189, 191, 192, 193, 194, 195, 201, 202, 206, 208, 210, 211, 212, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 243, 244, 245, 247, 248, 251, 253, 258, 259, 260, 261, 265, 266, 268, 271, 278, 280, 292, 295, 297, 299, 301, 305, 306], "wherea": [14, 15, 20, 22, 29, 34, 46, 50, 70, 79, 85, 94, 99, 125, 197, 214, 217, 223, 227, 245, 246, 265, 305], "wherebi": 70, "wherev": [40, 142, 239, 246, 275], "whet": 299, "whether": [3, 7, 8, 12, 13, 14, 15, 22, 23, 24, 29, 34, 36, 37, 38, 48, 49, 50, 55, 60, 68, 69, 70, 76, 77, 81, 84, 96, 97, 99, 105, 109, 113, 115, 121, 129, 135, 136, 140, 142, 175, 180, 199, 204, 211, 213, 216, 217, 218, 222, 223, 227, 230, 234, 235, 239, 240, 243, 245, 246, 247, 248, 258, 260, 265, 266, 271, 274, 297, 301], "which": [1, 2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 26, 27, 29, 30, 32, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 88, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 104, 105, 108, 109, 111, 112, 113, 115, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 147, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 163, 165, 166, 178, 181, 187, 188, 189, 190, 192, 196, 197, 198, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 251, 253, 258, 259, 260, 261, 262, 263, 265, 266, 268, 271, 273, 276, 280, 281, 291, 292, 294, 295, 297, 298, 299, 300, 301, 302, 304, 305, 306], "while": [3, 4, 7, 11, 12, 13, 14, 15, 16, 22, 24, 26, 30, 31, 36, 38, 49, 50, 51, 60, 61, 62, 65, 68, 69, 70, 71, 73, 74, 75, 79, 83, 85, 93, 99, 105, 109, 110, 111, 113, 117, 119, 121, 130, 131, 134, 135, 136, 138, 140, 142, 146, 156, 176, 196, 197, 202, 208, 214, 216, 222, 225, 227, 243, 245, 246, 258, 260, 262, 265, 280, 294, 300, 301], "white": [97, 117, 207, 247], "whitespac": [5, 12, 69, 263], "whittak": 96, "whittl": 305, "whl": 50, "who": [2, 3, 4, 9, 11, 12, 20, 24, 70, 71, 159, 211, 220, 227, 298], "whole": [4, 12, 13, 22, 69, 71, 77, 96, 118, 127, 213, 214, 216, 222, 223, 227, 230, 235, 237, 243, 246, 265], "whole_submodul": 222, "whose": [5, 13, 15, 22, 24, 29, 49, 51, 53, 58, 61, 68, 69, 70, 75, 79, 83, 85, 86, 92, 96, 99, 105, 109, 130, 137, 154, 164, 187, 197, 203, 204, 208, 211, 215, 216, 218, 222, 223, 234, 235, 239, 243, 244, 245, 247, 253, 258, 262, 265, 266, 271, 274, 276, 278], "wht": 72, "why": [3, 12, 13, 14, 16, 22, 50, 69, 211, 218, 224, 234, 237, 266, 298, 300, 301], "wick": 192, "wide": [9, 22, 97, 105, 119, 159, 207, 216, 217, 223, 227, 247], "widen": 224, "wider": [26, 227], "widget": 227, "width": [13, 49, 50, 97, 207, 213, 223, 227, 258], "wiener": 247, "wiener_process": 247, "wienerprocess": [13, 247], "wigner": [171, 189, 247, 288], "wigner3j": [171, 212], "wigner6j": [171, 212], "wigner9j": [171, 212], "wigner_3j": 212, "wigner_6j": 212, "wigner_9j": 212, "wigner_d": 212, "wigner_d_smal": 212, "wigner_semicircle_distribut": 247, "wignerd": 189, "wignersemicircl": 247, "wignerssemicirclelaw": 247, "wiki": [3, 4, 5, 11, 16, 22, 24, 42, 44, 45, 46, 48, 49, 50, 52, 57, 58, 60, 61, 68, 69, 70, 71, 72, 74, 75, 77, 79, 81, 85, 86, 87, 96, 97, 98, 99, 101, 105, 109, 123, 125, 128, 161, 163, 164, 165, 167, 168, 169, 173, 174, 175, 178, 180, 181, 190, 192, 196, 202, 204, 209, 213, 216, 223, 230, 234, 235, 236, 240, 243, 246, 247, 260, 265, 271, 273, 277, 279, 281, 301], "wikibook": [5, 96, 97], "wikidel": 277, "wikidyad": [201, 209], "wikidyadicproduct": [201, 209], "wikipappu": 81, "wikipedia": [4, 15, 22, 24, 42, 44, 45, 46, 48, 49, 50, 52, 57, 58, 60, 61, 68, 69, 70, 71, 72, 74, 75, 77, 79, 81, 85, 86, 87, 96, 98, 99, 101, 105, 109, 123, 125, 128, 161, 163, 164, 165, 167, 168, 169, 173, 174, 175, 178, 180, 181, 190, 192, 195, 202, 204, 209, 216, 223, 230, 234, 235, 236, 243, 246, 247, 260, 265, 271, 273, 277, 279, 281, 299, 301, 303], "wild": [16, 69, 239, 265], "wildcard": [69, 239], "wildfunct": 69, "wilei": 247, "wilf": [53, 68, 245], "wilkinson": [29, 105], "william": 216, "win": 41, "window": [1, 9, 11, 268], "wip": 11, "wire": 172, "wire_idx": 172, "wirefram": 213, "wisdom": 71, "wise": [50, 51, 75, 105, 216, 220, 227, 233, 259], "wish": [2, 4, 11, 14, 16, 24, 36, 40, 50, 69, 70, 73, 94, 109, 187, 201, 211, 262, 266, 295, 299, 301, 306], "wishart": 247, "wishart_distribut": 247, "wit": 109, "with_default": [112, 113, 115, 291, 292], "with_pivot": 105, "within": [2, 5, 12, 13, 15, 22, 35, 48, 49, 50, 52, 69, 75, 82, 85, 99, 101, 105, 109, 110, 112, 113, 115, 117, 149, 157, 187, 202, 210, 211, 215, 217, 218, 223, 225, 235, 243, 245, 246, 247, 258, 259, 268, 292], "without": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 22, 24, 26, 27, 40, 44, 46, 47, 50, 68, 69, 70, 71, 73, 77, 94, 96, 97, 101, 104, 105, 125, 126, 130, 134, 138, 142, 148, 150, 155, 156, 192, 196, 197, 201, 202, 203, 210, 213, 216, 217, 220, 223, 227, 229, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 249, 252, 253, 256, 258, 259, 260, 263, 265, 266, 268, 274, 277, 292, 301, 305], "withstand": [117, 118], "wittkopf": 221, "wkshum": 240, "wlog": 237, "wm": 247, "wminu": 105, "wn_m": 105, "wo": 142, "wojciech": 158, "wolfram": [4, 46, 62, 63, 69, 70, 72, 74, 75, 77, 79, 85, 96, 105, 109, 111, 221, 227, 229, 230, 232, 235, 240, 247, 265, 301], "wolphramalpha": 243, "won": [3, 11, 12, 14, 16, 24, 50, 113, 239, 246, 300], "wonder": 301, "wor6d": 70, "word": [3, 5, 9, 12, 15, 24, 46, 65, 68, 69, 70, 75, 77, 99, 125, 135, 142, 157, 214, 217, 222, 239, 240, 243, 245, 260, 271, 276, 297], "word_sep": 70, "wordpress": [94, 240], "work": [0, 2, 3, 4, 8, 9, 11, 12, 13, 14, 15, 16, 19, 20, 22, 23, 24, 29, 35, 40, 43, 45, 48, 49, 50, 52, 60, 61, 62, 69, 70, 73, 77, 94, 96, 98, 99, 101, 105, 106, 109, 111, 129, 131, 141, 142, 144, 153, 157, 159, 172, 176, 181, 185, 186, 187, 188, 191, 194, 204, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 227, 234, 235, 236, 237, 239, 240, 243, 245, 246, 247, 253, 258, 259, 260, 262, 265, 266, 267, 268, 275, 276, 292, 297, 298, 299, 300, 301, 304, 305], "workaround": [8, 266], "workflow": [6, 7, 8, 9, 10, 12, 14, 35, 36, 159, 217, 260, 266], "workhors": 234, "world": [9, 70, 121, 146, 156, 265], "worri": [14, 16, 69, 300], "wors": [14, 24, 99, 239], "worst": [109, 223, 243], "worth": [3, 22, 24, 135, 202, 276, 278], "worthwhil": 73, "wou": 61, "would": [1, 3, 4, 5, 9, 11, 12, 13, 14, 15, 16, 18, 20, 22, 23, 24, 26, 30, 33, 35, 40, 49, 50, 51, 58, 60, 61, 68, 69, 70, 74, 75, 81, 85, 94, 96, 105, 109, 111, 116, 117, 125, 126, 127, 129, 132, 134, 142, 146, 156, 159, 187, 189, 192, 197, 201, 202, 208, 210, 213, 216, 217, 218, 220, 223, 224, 226, 227, 228, 230, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 249, 251, 252, 258, 260, 262, 265, 266, 268, 276, 277, 278, 280, 292, 294, 295, 297, 299, 300, 301, 304, 305, 306], "wouldn": 24, "woven": 214, "wp1": 71, "wpathwai": 292, "wplu": 105, "wr": 144, "wr_cont": 144, "wr_i": 144, "wr_mc": 144, "wrap": [2, 3, 4, 11, 12, 13, 43, 44, 45, 46, 50, 58, 69, 75, 97, 110, 111, 133, 138, 152, 207, 211, 213, 216, 217, 220, 227, 230, 246, 252, 259, 263, 266, 268, 288, 291, 300], "wrap_lin": [73, 96, 97, 105, 118, 207, 214, 215, 226, 227, 243], "wrapper": [2, 13, 15, 24, 44, 46, 50, 61, 69, 77, 105, 156, 204, 207, 213, 216, 217, 220, 227, 234, 243, 246, 247, 259, 263, 265], "wrapping_geometri": 141, "wrapping_pathwai": 138, "wrappingcylind": [138, 141, 292], "wrappinggeometrybas": [138, 141], "wrappingpathwai": [138, 292], "wrappingspher": 141, "wrench": 77, "wright": 221, "write": [3, 6, 7, 9, 10, 13, 14, 15, 20, 22, 23, 25, 29, 41, 50, 58, 69, 70, 76, 77, 94, 96, 101, 159, 172, 210, 211, 215, 216, 218, 220, 222, 227, 236, 237, 240, 243, 246, 252, 258, 259, 260, 266, 292, 298, 299, 300, 305], "writer": 258, "written": [0, 2, 4, 5, 11, 12, 13, 14, 15, 22, 24, 46, 50, 57, 60, 61, 65, 69, 74, 77, 81, 87, 92, 94, 98, 99, 108, 109, 146, 152, 159, 192, 208, 209, 210, 211, 214, 215, 223, 227, 230, 234, 237, 240, 243, 260, 278, 280, 298, 299, 300, 305], "wrong": [3, 5, 11, 12, 13, 14, 60, 69, 70, 77, 79, 105, 202, 217, 243, 261, 297, 301], "wronskian": [105, 243], "wrote": [299, 300], "wrrad": 144, "wrt": [48, 50, 69, 71, 77, 86, 105, 142, 159, 202, 203, 220, 223, 271, 273, 274, 278], "wsl": 8, "wsym": 234, "wu_1": 240, "wurlitz": 2, "wv": 177, "wv_1": 240, "ww2040": 247, "www": [4, 5, 27, 42, 48, 60, 61, 70, 72, 74, 96, 97, 105, 109, 123, 125, 207, 216, 221, 226, 227, 236, 239, 240, 243, 247, 265, 301, 304], "www3": [91, 243, 271], "x": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 58, 60, 61, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 104, 105, 108, 109, 110, 111, 112, 115, 117, 118, 119, 121, 123, 125, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 164, 166, 167, 168, 169, 170, 172, 173, 176, 181, 182, 187, 189, 190, 191, 192, 193, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 258, 259, 260, 261, 263, 265, 266, 268, 271, 274, 275, 276, 277, 278, 280, 281, 291, 292, 294, 295, 297, 299, 300, 301, 304, 305, 306], "x0": [14, 20, 36, 48, 50, 59, 69, 77, 88, 90, 92, 93, 109, 164, 217, 228, 229, 234, 239, 243, 245, 247, 265, 291, 295], "x01": 69, "x02": 69, "x1": [14, 22, 24, 35, 36, 59, 69, 74, 159, 164, 217, 218, 228, 229, 239, 243, 245, 247, 265], "x11": 69, "x12": [14, 69], "x2": [14, 22, 35, 59, 69, 74, 159, 164, 217, 229, 243, 245, 247], "x3": [14, 59, 69, 74, 217, 243, 245, 247], "x4": [14, 69, 74, 217, 245], "x5": [14, 69, 74, 217], "x50": 69, "x51": 69, "x6": [14, 69, 217], "x64": 258, "x7": [14, 69, 217], "x8": [14, 69, 217], "x86": 50, "x9": [14, 69, 217], "x_": [14, 20, 32, 36, 50, 59, 69, 70, 74, 111, 218, 220, 223, 229, 240, 243, 248], "x_0": [20, 59, 60, 70, 91, 92, 93, 220, 229, 240, 243, 247, 295], "x_1": [14, 24, 51, 59, 60, 70, 74, 91, 105, 187, 215, 218, 220, 223, 229, 240, 246], "x_1x_0": 59, "x_2": [14, 51, 59, 74, 91, 187, 215, 220, 223, 229, 240, 246], "x_2x_0": 59, "x_2x_1": 59, "x_3": [14, 51, 59, 91, 187], "x_3x_0": 59, "x_3x_1": 59, "x_3x_2": 59, "x_4": 14, "x_5": 14, "x_6": 14, "x_7": 14, "x_8": 14, "x_9": 14, "x_arrai": 213, "x_dom": 217, "x_domain": 218, "x_i": [20, 24, 59, 77, 96, 105, 215, 218, 220, 223, 224, 227, 246], "x_j": [218, 220, 223], "x_k": [24, 70, 220], "x_ket": 187, "x_list": [48, 295], "x_m": 247, "x_n": [20, 24, 51, 59, 70, 91, 105, 215, 218, 220, 223, 240, 246], "x_op": 187, "x_reduc": 31, "x_u": 220, "x_val": 292, "x_valu": 35, "x_var": 213, "x_y": 14, "x_y_reduc": 31, "xa": [69, 215, 220], "xax": 60, "xb": [69, 268], "xb7": 227, "xbra": [170, 182, 187], "xc": [69, 191, 268], "xd": [159, 211], "xd2": 159, "xd_x": 14, "xdagger": 191, "xden": 216, "xdg": 227, "xdirect": 82, "xdot": 144, "xdvi": 227, "xe": 211, "xelatex": 8, "xetex": 8, "xf": 217, "xf_1": 220, "xfail": [12, 243, 256, 258], "xfield": 218, "xfree_group": 51, "xgate": 176, "xi": [16, 24, 71, 94, 227, 243, 244, 245], "xiuqin": 236, "xj": 214, "xk": [217, 218, 229], "xket": [170, 182, 187], "xl": 69, "xla": [2, 110], "xlabel": [36, 213, 291], "xlim": [69, 213], "xlist": 48, "xm": 247, "xmax": [79, 80, 82, 84, 85, 213], "xmin": [79, 80, 82, 84, 85, 213], "xml": [146, 148, 210, 211, 239, 276], "xn": [20, 24, 218], "xneg": 23, "xnor": 99, "xnum": 216, "xobj": 227, "xop": [170, 182, 187], "xor": [69, 72, 99, 111, 227, 297], "xp": 12, "xpass": [12, 256, 258], "xpath": 239, "xpo": 23, "xr": [217, 225], "xreplac": [14, 15, 69, 105, 145, 202, 292], "xring": 218, "xscale": 213, "xsol": 216, "xsol_uncancel": 216, "xstr": 227, "xsym": 227, "xt": 77, "xthread": 261, "xval": 245, "xvi": [51, 59], "xx": [50, 105, 137, 202, 211, 265], "xxx": [69, 96, 105, 265, 267], "xxxx": 265, "xxxxxx": 265, "xy": [13, 24, 48, 49, 83, 105, 111, 137, 202, 211, 213, 214, 220, 227, 239, 246, 281, 300, 305], "xymatrix": 49, "xypic": 49, "xypic_draw_diagram": 49, "xypicdiagramdraw": 49, "xyx": [202, 271, 273], "xyz": [3, 42, 81, 111, 117, 121, 202, 211, 271, 273, 276], "xz": [202, 211, 213], "xzx": 202, "xzy": 202, "x\u2080": 228, "y": [3, 4, 11, 12, 13, 14, 15, 16, 18, 19, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 60, 61, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 92, 94, 96, 97, 98, 99, 100, 101, 105, 109, 110, 111, 117, 118, 119, 121, 123, 125, 131, 132, 134, 137, 138, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 153, 157, 159, 160, 169, 170, 173, 176, 181, 187, 189, 190, 192, 193, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 259, 260, 263, 265, 266, 268, 271, 274, 275, 276, 277, 278, 280, 281, 291, 292, 294, 295, 297, 299, 300, 304, 305, 306], "y0": [36, 69, 88, 90, 92, 243], "y1": [13, 36, 69, 159], "y1d": 159, "y2": [36, 69, 159, 217], "y2d": 159, "y3": [69, 217], "y4": 69, "y_": [36, 50, 77, 94, 127, 212], "y_0": [36, 240, 243], "y_1": [36, 51, 240, 247], "y_2": [36, 51, 240, 247], "y_3": 247, "y_arrai": 213, "y_i": [218, 220, 222, 223, 243], "y_list": [48, 295], "y_n": [77, 240], "y_reduc": 31, "y_var": 213, "yang": 221, "yann": 109, "yaw": 144, "ybar": 243, "ydirect": 82, "ydot": 36, "ye": [12, 70, 99, 109, 243], "year": [0, 3, 4, 13, 196, 292], "yet": [3, 9, 11, 14, 16, 22, 24, 43, 45, 48, 49, 55, 73, 96, 111, 156, 172, 214, 217, 218, 222, 224, 226, 235, 243, 246, 295], "yf": 217, "yf_1": 220, "ygate": 176, "yi": 22, "yibi": 247, "yield": [29, 31, 32, 33, 34, 36, 37, 48, 50, 60, 69, 70, 74, 77, 93, 94, 109, 117, 125, 132, 186, 212, 215, 220, 222, 223, 228, 229, 234, 235, 236, 239, 240, 245, 262, 265, 301], "yih": 265, "yiu": 221, "yk": [217, 218], "ylabel": [36, 213, 291], "ylim": 213, "ymax": [79, 80, 82, 84, 85, 213], "ymin": [79, 80, 82, 84, 85, 213], "yml": 12, "yn": [77, 227, 233], "ynm": [77, 212], "ynm_c": 77, "yop": 170, "yorgei": 262, "york": [77, 94, 158, 237, 245], "you": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 23, 24, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 48, 50, 51, 52, 60, 61, 68, 69, 70, 71, 73, 75, 76, 77, 81, 83, 85, 87, 88, 93, 94, 96, 97, 99, 101, 102, 105, 106, 109, 110, 111, 112, 113, 115, 125, 127, 128, 129, 134, 135, 136, 137, 140, 142, 143, 153, 154, 156, 157, 159, 181, 186, 187, 190, 192, 196, 201, 202, 204, 208, 210, 211, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 227, 228, 230, 234, 235, 239, 240, 243, 244, 245, 246, 247, 248, 251, 252, 253, 256, 258, 259, 260, 261, 263, 265, 266, 275, 276, 277, 278, 291, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306], "you_should_include_your_tests_in_coverag": 12, "young": [13, 117, 253], "your": [0, 2, 3, 4, 5, 8, 12, 13, 14, 16, 24, 26, 29, 30, 31, 32, 34, 36, 37, 38, 40, 44, 69, 70, 96, 97, 105, 110, 111, 112, 113, 125, 129, 134, 154, 156, 211, 213, 227, 234, 239, 243, 246, 247, 265, 266, 292, 295, 299, 301, 302, 304, 305], "your_email": 9, "your_hint": 243, "youremail": 9, "yourobject": 14, "yourself": [2, 7, 11, 12, 14, 24, 26, 38, 50, 144, 261, 295], "yp": 36, "ypp": 36, "yr": [217, 225], "yscale": 213, "yu": [94, 212, 237], "yule": 247, "yulesimon": 247, "yum": 9, "yuvalf": 109, "yx": [60, 202, 211], "yxy": [202, 211], "yxz": 202, "yy": [137, 202, 211, 243], "yz": [137, 202, 211, 213], "yzx": [202, 211], "yzy": 202, "z": [4, 13, 14, 15, 16, 18, 22, 24, 32, 35, 36, 37, 42, 46, 47, 50, 51, 60, 61, 68, 69, 70, 71, 72, 74, 75, 77, 81, 82, 83, 84, 85, 94, 96, 99, 101, 105, 111, 117, 118, 119, 125, 127, 130, 131, 132, 134, 137, 138, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 153, 156, 157, 159, 160, 161, 170, 172, 176, 186, 187, 189, 193, 197, 201, 202, 203, 204, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 226, 227, 228, 234, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 248, 251, 252, 253, 259, 260, 266, 271, 274, 275, 276, 277, 278, 280, 281, 291, 292, 294, 295, 297, 299, 300, 304, 305, 306], "z0": [69, 234], "z1": [14, 217, 218, 245], "z1_sympi": 217, "z2": [14, 218], "z3": 218, "z4": 218, "z_": [70, 239], "z_0": [94, 239], "z_1": 94, "z_arrai": 213, "z_eq": 18, "z_k": 222, "z_n": [77, 221], "z_p": 220, "z_r": 161, "z_r_in": 161, "z_r_out": 161, "z_sympi": 217, "z_zz": 217, "za": 239, "zaletnyik": 221, "zassenhau": [220, 222], "zc": 217, "zcc09_ijc": 125, "zd_z": 14, "zdirect": 82, "ze": 77, "zeilberg": [68, 245], "zen": 14, "zeng": 236, "zerlegung": 222, "zero": [3, 15, 16, 18, 22, 23, 24, 27, 34, 35, 42, 46, 47, 50, 59, 60, 61, 65, 68, 69, 72, 73, 74, 75, 77, 79, 83, 84, 85, 94, 96, 98, 99, 101, 103, 105, 108, 109, 111, 117, 125, 130, 134, 135, 136, 137, 140, 141, 142, 144, 147, 150, 153, 154, 155, 159, 164, 186, 190, 192, 194, 206, 208, 210, 211, 212, 214, 215, 216, 217, 218, 222, 223, 225, 227, 230, 234, 235, 237, 239, 240, 243, 244, 245, 246, 247, 248, 263, 265, 266, 275, 277, 278, 291, 292, 300, 306], "zero_color": 123, "zero_markers": 123, "zero_matrix": 22, "zero_monom": 218, "zero_to_the_power_of_zero": 69, "zerodivisionerror": [125, 218, 256, 266], "zerohandl": 46, "zeromatrix": [46, 101, 227], "zeropred": 46, "zeroth": [69, 112, 115, 222], "zeroth_order_activ": 292, "zerothorderactiv": [112, 292], "zeta": [4, 15, 16, 68, 69, 73, 74, 218, 222, 227, 234, 247], "zeta5": 218, "zeta7": 218, "zeta_": 218, "zeta_distribut": 247, "zeta_funct": 77, "zeta_pow": 222, "zfade4": 213, "zg": 60, "zgate": 176, "zhegalkin": 99, "zhegalkin_polynomi": 99, "zhenb": 236, "zhong": 236, "zhou": 105, "zigzag": 74, "ziki": 109, "zimmer": 222, "zip": [32, 48, 59, 70, 99, 109, 145, 223, 233, 240, 243, 245, 262, 265, 291], "zk": 222, "zlabel": 213, "znm": 77, "zo42": 61, "zoo": [15, 18, 22, 46, 69, 74, 75, 77, 96, 234, 236, 239], "zoom": 213, "zop": 170, "zotero": 0, "zout": 220, "zp": 81, "zsc347": 11, "zsol": 18, "zt": [77, 94], "zuckerman": 220, "zur": 221, "zx": [137, 202, 211], "zxy": 202, "zxz": [134, 202, 211, 271, 273], "zy": [202, 211], "zyla": 171, "zyx": 202, "zyz": [42, 202], "zz": [13, 69, 74, 91, 92, 96, 101, 105, 106, 109, 137, 202, 211, 214, 215, 216, 217, 220, 222, 223, 224, 225, 242], "zz_i": [216, 217], "zz_python": 218, "zzx": 211, "\u00b2": 227, "\u00b3": 227, "\u00b9": 227, "\u00bc": 227, "\u00bd": 227, "\u00be": 227, "\u00f8yvind": 11, "\u010dert\u00edk": 0, "\u0142ukasz": 11, "\u0161": 0, "\u03b1": [5, 69, 212, 226], "\u03b1\u1d62": 69, "\u03b2": [50, 212], "\u03b2\u2081\u2082": 12, "\u03b3": [212, 295, 305], "\u03b3\u2081": 50, "\u03b3\u2082": 50, "\u03b4": 164, "\u03b8": [97, 134, 164, 211, 246, 276], "\u03bb": [15, 301], "\u03bd": 299, "\u03c0": [24, 73, 164, 227, 246, 295, 299, 305, 306], "\u03c7": 164, "\u03c8": 164, "\u03c9": 134, "\u1d62": 227, "\u1d63": 227, "\u1d64": 227, "\u1d65": 227, "\u1d66": 227, "\u1d67": 227, "\u1d68": 227, "\u1d69": 227, "\u1d6a": 227, "\u2070": 227, "\u2071": 227, "\u2074": 227, "\u2075": 227, "\u2076": 227, "\u2077": 227, "\u2078": 227, "\u2079": 227, "\u207f": 227, "\u2080": [34, 227], "\u2081": 227, "\u2082": 227, "\u2083": [34, 227], "\u2084": 227, "\u2085": 227, "\u2086": 227, "\u2087": 227, "\u2088": 227, "\u2089": 227, "\u2090": 227, "\u2091": 227, "\u2092": 227, "\u2093": 227, "\u2095": 227, "\u2096": 227, "\u2097": 227, "\u2098": 227, "\u2099": 227, "\u209a": 227, "\u209b": 227, "\u209c": 227, "\u2102": [227, 306], "\u2115": 227, "\u2115\u2080": 227, "\u211a": [214, 227], "\u211d": [227, 306], "\u2124": [226, 227, 246, 306], "\u212f": [11, 50, 164, 212, 227, 295, 299, 301, 305, 306], "\u2146": 227, "\u2148": [164, 212, 226, 227, 246, 306], "\u2153": 227, "\u2154": 227, "\u2155": 227, "\u2156": 227, "\u2157": 227, "\u2158": 227, "\u2159": 227, "\u215a": 227, "\u215b": 227, "\u215c": 227, "\u215d": 227, "\u215e": 227, "\u5f6d\u4e8e\u658c": 11, "\ud835\udc45": 281, "\ud835\udd40": 227, "\ud835\udd4c": 227, "\ud835\udfd8": 227, "\ud835\udfd9": 227}, "titles": ["Citing SymPy", "Debugging", "Dependencies", "Deprecation Policy", "Docstrings Style Guide", "Documentation Style Guide", "Contributing", "Introduction to Contributing", "Building the Documentation", "Setup Development Environment", "Guide for New Contributors", "Development Workflow Process", "Writing Tests", "List of active deprecations", "Best Practices", "Glossary", "Gotchas and Pitfalls", "Explanations", "Solve Output by Type", "Classification of SymPy objects", "Finite Difference Approximations to Derivatives", "SymPy Special Topics", "Assumptions", "Symbolic and fuzzy booleans", "Writing Custom Functions", "How-to Guides", "SymPy Logo", "Control Package Examples", "Physics", "Find the Roots of a Polynomial Algebraically or Numerically", "Solve Equations", "Reduce One or a System of Inequalities for a Single Variable Algebraically", "Solve a Diophantine Equation Algebraically", "Solve an Equation Algebraically", "Solve a Matrix Equation Algebraically", "Solve One or a System of Equations Numerically", "Solve an Ordinary Differential Equation (ODE) Algebraically", "Solve a System of Equations Algebraically", "Solving Guidance", "Welcome to SymPy\u2019s documentation!", "Installation", "abc", "Algebras", "Ask", "Assume", "Assumptions", "Predicates", "Refine", "Calculus", "Category Theory", "Code Generation", "Finitely Presented Groups", "Galois Groups", "Gray Code", "Group constructors", "Number of groups", "Combinatorics", "Named Groups", "Partitions", "Polycyclic Groups", "Permutation Groups", "Permutations", "Polyhedron", "Prufer Sequences", "Subsets", "Tensor Canonicalization", "Test Utilities", "Utilities", "Concrete", "Core", "Cryptography", "Differential Geometry", "Discrete", "Numerical Evaluation", "Combinatorial", "Elementary", "Functions", "Special", "Curves", "Ellipses", "Entities", "Geometry", "Lines", "Plane", "Points", "Polygons", "Utils", "About Holonomic Functions", "Converting other representations to holonomic", "Holonomic", "Internal API", "Operations on holonomic functions", "Representation of holonomic functions in SymPy", "Uses and Current limitations", "Computing Integrals using Meijer G-Functions", "Integrals", "Integrals", "Interactive", "Lie Algebra", "Logic", "Dense Matrices", "Matrix Expressions", "Immutable Matrices", "Matrices", "Matrix Kind", "Matrices (linear algebra)", "Matrix Normal Forms", "Sparse Matrices", "Sparse Tools", "Number Theory", "Numeric Computation", "Parsing", "Activation (Docstrings)", "Curve (Docstrings)", "Biomechanics API Reference", "Musculotendon (Docstrings)", "Biomechanics", "Beam (Docstrings)", "Solving Beam Bending Problems using Singularity Functions", "Cable (Docstrings)", "Continuum Mechanics", "Truss (Docstrings)", "Control", "Control System Plots", "Control Module", "Control API", "High energy physics", "Hydrogen Wavefunctions", "Matrices", "Potential Issues/Advanced Topics/Future Features in Physics/Mechanics", "Actuator (Docstrings)", "Deprecated Classes (Docstrings)", "Expression Manipulation (Docstrings)", "Mechanics API Reference", "Joints Framework (Docstrings)", "Kane\u2019s Method &amp; Lagrange\u2019s Method (Docstrings)", "Linearization (Docstrings)", "Bodies, Inertias, Loads &amp; Other Functions (Docstrings)", "Pathway (Docstrings)", "Printing (Docstrings)", "System (Docstrings)", "Wrapping Geometry (Docstrings)", "Autolev Parser", "Examples for Physics/Mechanics", "A bicycle", "A four bar linkage", "Nonminimal Coordinates Pendulum", "Multi Degree of Freedom Holonomic System", "A rolling disc", "A rolling disc, with Kane\u2019s method", "A rolling disc, with Kane\u2019s method and constraint forces", "A rolling disc using Lagrange\u2019s Method", "Classical Mechanics", "Joints Framework in Physics/Mechanics", "Kane\u2019s Method in Physics/Mechanics", "Lagrange\u2019s Method in Physics/Mechanics", "Linearization in Physics/Mechanics", "Masses, Inertias, Particles and Rigid Bodies in Physics/Mechanics", "References for Physics/Mechanics", "SymPy Mechanics for Autolev Users", "Symbolic Systems in Physics/Mechanics", "Gaussian Optics", "Optics Module", "Medium", "Polarization", "Utilities", "Waves", "Pauli Algebra", "Quantum Harmonic Oscillator in 1-D", "Anticommutator", "Cartesian Operators and States", "Clebsch-Gordan Coefficients", "Circuit Plot", "Commutator", "Constants", "Dagger", "Gates", "Grover\u2019s Algorithm", "Hilbert Space", "Quantum Mechanics", "Inner Product", "Operator", "Operator/State Helper Functions", "Particle in a Box", "Qapply", "QFT", "Qubit", "Represent", "Shor\u2019s Algorithm", "Spin", "State", "Tensor Product", "Second Quantization", "Quantum Harmonic Oscillator in 3-D", "Dimensions and dimension systems", "More examples", "Unit systems", "Philosophy behind unit systems", "Unit prefixes", "Physical quantities", "Units and unit systems", "Potential Issues/Advanced Topics/Future Features in Physics/Vector Module", "Essential Classes", "Docstrings for basic field functions", "Essential Functions (Docstrings)", "Physics Vector API", "Kinematics (Docstrings)", "Printing (Docstrings)", "Scalar and Vector Field Functionality", "The Physics Vector Module", "Vector: Kinematics", "Vector &amp; ReferenceFrame", "Wigner Symbols", "Plotting", "AGCA - Algebraic Geometry and Commutative Algebra Module", "Basic functionality of the module", "Introducing the domainmatrix of the poly module", "Introducing the Domains of the poly module", "Reference docs for the Poly Domains", "Polynomial Manipulation", "Internals of the Polynomial Manipulation Module", "Literature", "Number Fields", "Polynomials Manipulation Module Reference", "Series Manipulation using Polynomials", "Poly solvers", "Examples from Wester\u2019s Article", "Printing", "Term Rewriting", "Formal Power Series", "Fourier Series", "Series", "Limits of Sequences", "Sequences", "Series Expansions", "Sets", "Hongguang Fu\u2019s Trigonometric Simplification", "Hypergeometric Expansion", "Simplify", "Simplify", "Diophantine", "Solvers", "Inequality Solvers", "ODE", "PDE", "Solvers", "Solveset", "Stats", "N-dim array", "N-dim array expressions", "Tensor", "Methods", "Indexed Objects", "Tensor", "Tensor Operators", "Testing", "pytest", "Randomised Testing", "Run Tests", "Autowrap Module", "Codegen", "Decorator", "Enumerative", "Exceptions and Warnings", "Utilities", "Iterables", "Lambdify", "Memoization", "Miscellaneous", "Source Code Inspection", "Timing Utilities", "Essential Classes in sympy.vector (docstrings)", "Vector API", "Orienter classes (docstrings)", "Essential Functions in sympy.vector (docstrings)", "Basic Implementation details", "More about Coordinate Systems", "General examples of usage", "Scalar and Vector Field Functionality", "Vector", "Introduction", "Applications of Vector Integrals", "API Reference", "Basics", "Code Generation", "Logic", "Matrices", "Number Theory", "Physics", "Topics", "Utilities", "Biomechanical Model Example", "Introduction to Biomechanical Modeling", "Tutorials", "Basic Operations", "Calculus", "SymPy Features", "Gotchas", "Introductory Tutorial", "Introduction", "Advanced Expression Manipulation", "Matrices", "What\u2019s Next", "Preliminaries", "Printing", "Simplification", "Solvers"], "titleterms": {"": [39, 135, 146, 149, 150, 151, 154, 155, 156, 177, 188, 226, 236, 245, 246, 276, 281, 302], "1": [4, 13, 27, 36, 94, 118, 142, 156, 168], "10": [8, 13, 118], "11": [13, 118], "12": 13, "13": 13, "2": [4, 27, 36, 94, 118, 142, 156], "2d": 96, "3": [4, 27, 96, 118, 142, 193], "4": [4, 13, 27, 118], "5": [4, 13, 27, 118], "6": [4, 13, 118], "7": [13, 118], "8": [13, 118], "9": [13, 118], "A": [20, 144, 145, 148, 149, 150, 151, 156, 292, 299, 306], "AND": 276, "As": 222, "Be": [14, 29, 31, 32, 33, 34, 35, 36], "For": 96, "If": 36, "Into": [33, 35, 37], "Its": 36, "No": [29, 32, 33, 34, 36], "Not": [3, 29, 31, 32, 33, 35, 36, 37, 38], "Of": 18, "One": [31, 35, 36], "That": [31, 32, 33, 35, 37, 38], "The": [3, 13, 22, 24, 51, 59, 94, 156, 197, 209, 222, 234, 237, 277, 278, 299], "There": 36, "With": [29, 32, 33, 34, 35, 36, 37, 38], "__call__": 13, "__eq__": 14, "_eval_": 24, "_mat": 13, "_smat": 13, "a_and_b": 156, "abc": 41, "about": [87, 246, 276, 306], "abov": 22, "absorbing_probabilit": 13, "abstract": [50, 116, 120, 124, 126, 152, 162, 179, 209, 218], "acceler": [129, 201, 210, 234], "accept": 13, "access": 301, "account": 9, "accuraci": 73, "action": 12, "activ": [13, 112, 291, 292], "actuat": [130, 291, 292], "ad": 3, "add": [11, 13, 24, 69], "addit": [24, 91], "address": 11, "adic": 222, "advanc": [14, 129, 201, 226, 300, 301], "aesara": [110, 227], "agca": 214, "airi": 77, "algebra": [29, 31, 32, 33, 34, 36, 37, 42, 98, 105, 167, 211, 214, 217, 222, 226, 245, 306], "algorithm": [50, 51, 177, 188, 220, 223, 229, 234, 237], "all": [29, 31, 32, 33, 35, 36, 37], "all_root": 29, "also": [4, 69, 265], "altern": [29, 31, 32, 33, 34, 35, 36, 37, 211], "an": [11, 13, 14, 33, 35, 36, 81, 142, 197, 237, 246, 300], "anaconda": 40, "analysi": 195, "analyt": [31, 179], "angular": [157, 210], "ani": [38, 246], "annot": 13, "anticommut": 169, "antlr": 111, "apart": 305, "api": [3, 39, 90, 94, 96, 114, 125, 133, 205, 246, 259, 260, 272, 282], "appel": 223, "appli": [22, 94, 237], "applic": 281, "approxim": [20, 29, 50], "ar": [4, 31, 36, 211, 217, 246], "arbitrari": 36, "area": 281, "arg": [13, 14, 300], "argand": 94, "argument": [13, 16, 246], "arithmet": 222, "around": 237, "arrai": [13, 248, 249], "art": 213, "articl": 226, "as_real_imag": 24, "ascii": [213, 304], "ask": 43, "askhandl": 13, "assign": 16, "assum": 44, "assumpt": [13, 14, 19, 22, 24, 45, 69], "ast": [50, 142], "attach": 13, "attribut": [13, 14, 51, 59], "author": [11, 212], "auto": 8, "autolev": [142, 159], "automat": [14, 24, 226], "autowrap": [2, 50, 259], "avail": 81, "avoid": [3, 14], "b": [13, 77], "back": 226, "backend": [2, 111, 213], "background": 156, "backward": 3, "bar": 145, "base": [49, 71, 105, 214, 215, 226, 233, 246], "basi": [211, 220, 222], "basic": [12, 14, 69, 73, 105, 203, 215, 217, 223, 235, 275, 282, 283, 294, 301], "beam": [117, 118, 120], "been": 13, "behind": 197, "benchmark": 2, "bend": 118, "bessel": 77, "best": [4, 5, 14, 24], "beta": 77, "between": [16, 22, 199, 217], "bewar": 36, "beyond": 81, "bibliographi": [51, 59], "bicep": 291, "bicycl": 144, "binari": 13, "biomechan": [114, 116, 291, 292, 293], "block": 101, "bode": 123, "bodi": [13, 137, 157, 281], "bool": 23, "boolean": [18, 23, 99], "boundari": 36, "box": 183, "branch": [11, 94], "bug": [29, 31, 32, 33, 34, 35, 36, 37, 38, 96], "build": [2, 8], "c": [50, 227], "cabl": [119, 120], "cach": 69, "calcul": 281, "calculu": [46, 48, 211, 295], "call": [13, 31, 38], "can": [29, 31, 32, 33, 35, 36, 37, 38], "cancel": 305, "cannot": [31, 33, 36, 37], "canonic": 65, "capabl": 111, "capit": 5, "care": 14, "carmichael": 13, "cartesian": 170, "case": [24, 246], "categori": 49, "caveat": [41, 111], "cc": 218, "cfunction": 50, "chang": [3, 11, 13], "chebyshev": 77, "check": [12, 13, 203], "checklist": [3, 11], "choic": 129, "choos": 217, "circuit": 172, "cite": 0, "class": [4, 13, 19, 49, 50, 68, 71, 102, 105, 107, 109, 111, 131, 156, 202, 213, 222, 227, 240, 248, 271, 273], "classic": [152, 220], "classif": 19, "clebsch": 171, "close": [29, 33, 36, 37, 38], "cnode": 50, "co": 11, "code": [2, 3, 5, 7, 9, 11, 12, 13, 14, 50, 53, 129, 211, 227, 269, 282, 284], "codebas": 7, "codegen": [50, 260], "codeprint": 227, "coeffici": [171, 220], "collect": [14, 59, 228, 305], "collector": 59, "color": 213, "column": 301, "columnspac": 301, "combin": [22, 91], "combinator": [13, 56], "combinatori": 74, "combsimp": 305, "commit": 11, "common": [46, 129, 201, 226, 227, 228], "commut": [173, 214], "compar": 14, "comparison": 13, "compat": [13, 249], "complet": [24, 29, 142], "complex": [29, 35, 75, 217], "composit": 91, "compound": [233, 235, 247], "compress": 51, "comput": [59, 94, 110, 179, 226, 299], "concept": 215, "conclus": 291, "concret": 68, "condit": [13, 36, 94, 235], "conditionset": 13, "conduct": 7, "configur": [9, 220], "confluenc": 237, "conserv": [208, 278], "consid": [29, 31, 32, 33, 34, 35, 36, 37], "consist": [12, 38], "constant": [36, 174, 197], "constraint": 150, "construct": [51, 59, 249], "constructor": [54, 223, 301], "contain": 69, "content": [45, 56, 76, 89, 95, 219, 231, 241, 250], "continu": [247, 305], "continuum": 120, "contract": 248, "contribut": [6, 7, 11, 39, 224], "contributor": 10, "control": [27, 122, 123, 124, 125, 213], "conv_": 13, "converg": 94, "convers": 199, "convert": [88, 91, 217, 294], "convolut": 72, "coordin": [13, 129, 146, 156, 213, 275, 276, 278, 280], "coordsys3d": 276, "copi": 36, "copyright": 212, "core": [13, 69, 101], "coset": 51, "cosett": 51, "cover": 72, "coverag": 12, "coxet": 51, "creat": [9, 11, 13, 16, 24, 35, 105], "credit": 212, "crootof": 29, "cross": 4, "cryptographi": 70, "curl": [208, 278], "current": 93, "curv": [78, 113, 292], "curvilinear": 278, "custom": [14, 24, 213, 227, 292], "cutil": 50, "cxxnode": 50, "cyclotom": 226, "d": [168, 193], "dagger": 175, "damp": 292, "data": 13, "de": [245, 246], "deal": 246, "debian": 8, "debug": [1, 12], "decompos": 31, "decomposit": [222, 223, 226], "decor": 261, "decrement": 237, "defin": [14, 24, 36, 291], "definit": [22, 24, 87], "degre": 147, "del": [277, 278], "delet": [11, 301], "delta": 77, "denest": 14, "denomin": 38, "dens": [100, 217, 218, 220], "densematrix": 13, "depend": [2, 8, 12, 156, 217, 276], "deprec": [3, 12, 13, 131], "depth": [59, 81], "deriv": [20, 36, 211, 248, 278, 295], "descript": [11, 291], "detail": [259, 260, 275], "detect": 228, "determin": 301, "deutil": 245, "develop": [2, 7, 9, 11, 69], "diagon": [248, 301], "diagram": 49, "dictionari": [16, 18, 29, 37], "differ": [20, 22, 48, 159, 217, 276, 295], "differenti": [24, 36, 71, 91, 129, 245, 246, 291, 306], "differentiate_finit": 13, "diffgeom": 13, "dim": [248, 249], "dimens": [81, 194, 197], "dimension": 195, "diophantin": [32, 240, 245, 246], "dirac": 77, "direct": [20, 278], "directli": [156, 276], "disc": [148, 149, 150, 151], "discontinu": 77, "discret": [72, 247], "discretemarkovchain": 13, "dispers": 223, "distribut": [13, 220, 247], "diverg": [208, 278, 281], "divid": 24, "divis": 215, "dixonresult": 13, "dmp": [13, 217], "do": [38, 246], "doc": [8, 218], "docker": 8, "docstr": [4, 112, 113, 115, 117, 119, 121, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 203, 204, 206, 207, 271, 273, 274], "doctest": 12, "document": [2, 3, 4, 5, 7, 8, 11, 39], "doe": [3, 16, 246], "doit": 24, "domain": [33, 215, 217, 218, 223, 226, 246], "domainmatrix": 216, "don": 14, "dot": 304, "dotprint": 227, "doubl": 16, "draw": 49, "dummi": 12, "dummy_fmt": 13, "dup": 217, "dyadic": [157, 201, 275, 276], "dynam": [142, 292], "dynamicsymbol": 201, "easi": 24, "ecm": 109, "eigenvalu": 301, "eigenvector": 301, "elast": 292, "element": [34, 156, 217, 222], "elementari": [75, 214, 233, 235], "ellips": 79, "ellipt": 77, "email": [9, 11], "emploi": 246, "empti": 18, "encod": 223, "end": 237, "energi": [126, 157], "ensur": [35, 38, 246], "entiti": [80, 81, 213], "entri": [3, 105], "enum": 262, "enumer": [51, 74], "environ": [7, 9], "eq": [13, 33], "equal": [16, 32, 33, 297], "equat": [29, 30, 32, 33, 34, 35, 36, 37, 38, 154, 155, 156, 195, 201, 215, 240, 245, 246, 291, 306], "equival": [99, 159], "error": [73, 77], "essenti": [202, 204, 271, 274], "euclidean": 215, "eval": 24, "evalf": [24, 69, 110, 294], "evalu": [13, 14, 16, 24, 29, 73, 91, 159, 291, 300], "ex": 218, "exact": [14, 29, 38], "exampl": [4, 11, 24, 27, 29, 31, 32, 35, 37, 41, 69, 81, 93, 96, 109, 118, 126, 143, 156, 160, 164, 195, 196, 197, 211, 226, 227, 234, 237, 247, 248, 249, 252, 277, 291, 299, 305], "except": [12, 105, 111, 220, 263], "exercis": 303, "exist": [12, 94], "expand": [24, 226, 228, 305], "expand_func": 305, "expand_log": 305, "expand_power_bas": 305, "expand_power_exp": 305, "expand_trig": 305, "expans": [91, 234, 237, 295], "expect": 12, "experiment": 111, "explan": [4, 17, 39], "explicit": 249, "explicitli": [33, 36], "expon": [59, 226], "exponenti": [75, 77, 305], "expr": [13, 69], "expr_free_symbol": 13, "express": [12, 13, 14, 16, 29, 32, 33, 35, 50, 81, 88, 91, 99, 101, 111, 132, 217, 226, 249, 276, 294, 300], "exprtool": 69, "extend": 237, "extens": [214, 226], "extern": 12, "extra": [14, 223], "extract": [31, 32, 34, 36], "facil": 51, "factor": [29, 215, 220, 226, 305], "factori": 215, "fail": 12, "failur": 12, "fallback": 13, "fals": 13, "familiar": 7, "fast": 72, "featur": [111, 129, 201, 296], "fedora": 8, "fiber": 292, "field": [203, 208, 217, 220, 222, 226, 278, 280], "file": 11, "fill": 13, "final": 297, "find": [29, 35, 222, 223], "find_execut": 13, "finit": [20, 48, 51, 214, 217, 220, 222, 226, 237, 247, 295], "first": [3, 13, 292], "fix": [11, 142], "flag": 13, "float": [14, 16, 73], "flux": 281, "fma": 24, "fnode": 50, "forc": [145, 150, 291, 292], "fork": 9, "form": [29, 33, 36, 37, 38, 99, 106, 156, 249], "formal": [223, 229], "format": [4, 5, 13, 38], "formula": [94, 237], "fortran": [50, 227], "found": 35, "four": 145, "fourier": [72, 230], "fraction": [223, 226, 305], "frame": [13, 211], "framework": [134, 153], "free": [51, 215], "freedom": 147, "fresnel": 77, "from": [13, 14, 16, 32, 33, 34, 38, 226, 249], "from_": 13, "fu": 236, "fulli": 24, "fun_ev": 13, "func": [19, 300], "function": [4, 12, 13, 14, 16, 24, 29, 31, 33, 35, 36, 38, 50, 59, 68, 69, 75, 76, 77, 87, 88, 91, 92, 94, 99, 105, 109, 111, 118, 129, 137, 157, 179, 182, 203, 204, 208, 213, 215, 217, 218, 223, 226, 227, 237, 240, 243, 244, 248, 274, 278, 304, 305], "further": [156, 297], "fuse": 24, "futil": 50, "futur": [81, 129, 142, 201], "fuzzi": 23, "g": [88, 91, 94, 237], "galoi": [52, 222], "gamma": [77, 126], "gammasimp": 305, "gate": 176, "gaussian": [161, 217, 218, 226], "gcd": [215, 220, 226], "gegenbau": 77, "gener": [2, 4, 5, 50, 59, 61, 217, 222, 246, 277, 282, 284], "geometr": 213, "geometri": [71, 81, 141, 214, 292], "get": [2, 7, 9, 16, 29], "get_epsilon": 13, "get_kronecker_delta": 13, "get_seg": 13, "get_upper_degre": 13, "gf": 218, "git": [9, 40], "github": [9, 12], "given": [35, 37], "glossari": 15, "good": 11, "gordan": 171, "gotcha": [16, 22, 142, 297], "gradient": [208, 278], "grai": 53, "groebner": [215, 220], "group": [51, 52, 54, 55, 57, 59, 60, 197, 222], "grover": 177, "gruntz": 234, "gr\u00f6bner": 226, "gtk": 227, "guid": [4, 5, 10, 12, 25, 39, 116, 152, 209, 279], "guidanc": [29, 31, 32, 33, 34, 35, 36, 37, 38], "guidelin": [4, 5], "ha": 156, "hadamard": 72, "hadamardproduct": 13, "handl": [73, 246], "handler": [13, 14, 22], "hard": 2, "hardcod": 14, "harmon": [77, 168, 193], "have": [13, 33, 37, 226], "head": 5, "help": 16, "helper": [182, 227], "hermit": 77, "heurist": 243, "hexagon": 81, "high": 126, "hilbert": 178, "hint": [36, 243, 244], "holonom": [87, 88, 89, 91, 92, 147], "homomorph": [214, 222], "hongguang": 236, "how": [3, 25, 39, 94, 211, 246], "hydrogen": 127, "hyperbol": 75, "hyperexpand": 305, "hypergeometr": [68, 77, 88, 91, 229, 237], "hypothesi": 12, "i": [3, 12, 16, 35, 36, 94, 110, 156, 216, 227, 246, 299], "ideal": 214, "identifi": 7, "immut": [16, 102], "immutablematrix": 102, "immutablesparsematrix": 107, "implement": [22, 94, 208, 227, 237, 259, 260, 275, 278], "implic": 22, "implicitli": [29, 36], "import": 4, "improv": [45, 142], "impuls": 123, "includ": [31, 36, 38], "incompat": 3, "increas": 35, "increment": 237, "indefinit": 13, "independ": 36, "index": [10, 51, 59, 249, 252], "indic": 237, "inequ": [31, 242, 245, 246], "inertia": [137, 157, 291], "infer": 99, "infinit": [14, 33, 246], "inform": [243, 244], "initi": 36, "inner": 180, "input": [14, 22, 246], "insert": 301, "inspect": 269, "instal": [8, 9, 39, 40, 111, 303], "integ": [13, 75, 217], "integr": [13, 36, 73, 77, 91, 93, 94, 95, 96, 129, 215, 222, 281, 295], "interact": [2, 97, 213], "interest": [31, 299], "interfac": [129, 201, 213, 247], "intermedi": 13, "intern": [90, 94, 96, 217, 220, 222, 240], "interpret": 22, "interrog": 33, "intersect": [72, 81], "interv": [35, 213], "intfunc": 69, "introduc": [216, 217], "introduct": [7, 16, 20, 42, 49, 50, 51, 59, 71, 81, 99, 116, 142, 159, 197, 208, 210, 213, 214, 215, 222, 226, 280, 292, 299], "introductori": [293, 298], "intuit": 234, "invari": [14, 300], "invers": [16, 24, 75, 94], "is_": 22, "is_emptyset": 13, "issu": [11, 129, 142, 156, 201, 301], "iter": [13, 235, 265], "jacobi": 77, "javascript": 227, "join": 7, "joint": [13, 134, 153, 247], "jointsmethod": 13, "julia": 227, "junk": 11, "k": 218, "kane": [135, 146, 149, 150, 154, 156], "kei": [9, 24, 159, 300], "keyword": 16, "kind": [19, 69, 104], "kinemat": [206, 210, 291], "kinematic_equ": 206, "kinet": 157, "known": 246, "kwarg": 156, "lagrang": [135, 146, 151, 155, 156], "lagrangian": 157, "laguerr": 77, "lambda": 13, "lambdaprint": 227, "lambdifi": [2, 13, 110, 266, 294], "laplac": 94, "laplace_transform": 13, "lark": 111, "last": 3, "latex": [5, 111, 304], "latexprint": 227, "lcm": 215, "lead": 59, "legendr": 77, "length": 292, "level": 220, "lib": 227, "lie": [98, 243], "like": 13, "limit": [22, 31, 32, 93, 142, 232, 234, 295], "line": 82, "linear": [37, 91, 105, 129, 136, 156, 157, 197, 226, 245], "link": 159, "linkag": 145, "list": [7, 13, 16, 18, 29, 31], "literatur": [197, 221, 226], "live": 8, "load": [137, 157, 292], "local": 8, "locat": 276, "logarithm": [77, 305], "logcombin": 305, "logic": [2, 23, 99, 282, 285], "logo": 26, "long": 3, "longer": 13, "lookup": 94, "loos": 237, "low": 51, "lti": 125, "mac": 8, "mail": 7, "mailmap": 11, "main": 222, "make": [11, 33, 38], "managedproperti": 13, "manipul": [14, 99, 105, 132, 219, 220, 223, 224, 246, 300], "mapl": 227, "mark": 12, "markdown": 5, "marker": 13, "mass": [157, 281], "matadd": 13, "math": [5, 50], "mathemat": [4, 16, 29, 159], "mathematica": [13, 227], "mathieu": 77, "mathml": 304, "mathmlprint": 227, "mathrm": [111, 304], "matlab": 227, "matmul": 13, "matric": [13, 20, 34, 100, 101, 102, 103, 105, 107, 126, 128, 249, 282, 286, 301], "matrix": [13, 34, 46, 101, 104, 105, 106, 156, 247, 301], "max_degre": 13, "mdft": 13, "mechan": [13, 22, 116, 120, 129, 133, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 179, 247], "mechanics_print": 139, "median": 81, "medium": 163, "meijer": [88, 91, 94, 237], "mellin": 94, "memoiz": 267, "messag": 11, "metaclass": 13, "method": [13, 20, 24, 34, 40, 135, 146, 149, 150, 151, 154, 155, 156, 227, 244, 246, 251, 276, 301], "metric": 13, "might": 38, "minim": [59, 222], "misc": [13, 45], "miscellan": [24, 75, 81, 268], "mistak": 227, "mix": 13, "mixin": 13, "mlatex": 139, "mod": 69, "mode": 213, "model": [291, 292], "modifi": 11, "modul": [13, 124, 162, 201, 209, 214, 215, 216, 217, 220, 222, 223, 240, 243, 244, 246, 259], "modular": [13, 220], "modularinteg": 13, "momenta": 157, "momentum": 157, "monomi": 223, "more": [195, 196, 234, 276, 299], "motion": 291, "move": [13, 237], "mpmath": 40, "mpprint": 139, "mpq": 218, "mprint": 139, "much": 14, "mul": 69, "multi": 147, "multidimension": 69, "multipl": [29, 36, 91, 211, 222], "multipli": 24, "multivari": [220, 226], "multivariate_result": 13, "muscl": 291, "musculotendon": [115, 292], "must": 34, "mutabl": 13, "m\u00f6biu": 72, "n": [13, 248, 249], "name": [9, 11, 14, 57], "nan": 156, "narr": 5, "necessarili": 33, "need": 197, "new": [10, 11, 13, 276], "new_method": 156, "next": 302, "nocond": 13, "node": 50, "non": 13, "noncontribut": 145, "nonlinear": 37, "nonminim": 146, "normal": [106, 226], "notat": 237, "note": [3, 24, 69, 81, 156, 234, 236, 297, 306], "nroot": 29, "ntheori": [13, 109], "nullspac": 301, "number": [14, 16, 46, 55, 69, 72, 73, 94, 109, 217, 222, 226, 282, 287], "numer": [14, 24, 29, 35, 36, 38, 73, 91, 96, 110, 129, 159, 295], "numpi": 105, "numsampl": 13, "object": [13, 14, 19, 252], "octav": 227, "od": [36, 243, 245, 246], "old": [22, 217], "onli": [2, 31, 36, 246], "onlin": 142, "oo": 156, "oper": [13, 16, 91, 105, 170, 179, 181, 182, 203, 208, 211, 237, 248, 254, 275, 277, 278, 294, 301], "optic": [161, 162], "optim": 245, "option": [2, 9, 33, 36, 37, 38, 220], "order": [13, 32, 46, 223, 234, 237, 292], "ordinari": [36, 245, 246], "orient": [273, 276], "orient_new": 276, "orthogon": [77, 223, 278], "oscil": [168, 193], "other": [22, 24, 40, 88, 137, 208, 276], "our": 7, "output": [18, 129, 246], "over": [96, 226, 235], "overview": [51, 59, 94], "overwrit": 14, "p": [218, 222], "packag": 27, "pair": 36, "paper": 7, "pappu": 81, "paramet": [4, 32, 237, 246], "pars": [2, 38, 111], "parser": [13, 111, 142], "partial": [223, 226, 245, 246], "particl": [157, 183], "partit": [58, 265], "pass": 13, "passiv": 292, "past": 36, "pathwai": [138, 292], "pauli": 167, "pde": [244, 245, 246], "pdf": 8, "pendulum": 146, "per": 31, "perform": 45, "perhap": 29, "perimet": 281, "period": 31, "permut": [13, 60, 61], "perus": 7, "philosophi": 197, "physic": [13, 28, 126, 129, 143, 153, 154, 155, 156, 157, 158, 159, 160, 199, 201, 205, 208, 209, 210, 211, 282, 288], "pick": 11, "piecewis": 75, "pitfal": 16, "pkgdata": 13, "place": 3, "plan": 246, "plane": [83, 94], "plot": [2, 13, 123, 172, 213], "plotgrid": 213, "point": [13, 24, 73, 84, 129, 201, 210, 275], "polar": [94, 164], "pole": 123, "poli": [13, 216, 217, 218, 225], "polici": [3, 12], "polycycl": 59, "polycyclicgroup": 59, "polygon": [85, 96], "polyhedra": 96, "polyhedron": 62, "polynomi": [13, 29, 77, 91, 215, 217, 218, 219, 220, 222, 223, 224, 226, 245, 305], "polynomialr": 217, "polyr": 217, "polytop": 96, "possibl": [3, 33, 301], "potenti": [129, 156, 157, 201, 208, 278], "powdenest": 305, "power": [69, 229, 235, 299, 305], "powsimp": 305, "practic": [4, 5, 14, 24], "preced": 227, "precis": 35, "predefin": 50, "predic": [22, 45, 46], "prefer": [5, 38], "prefix": 198, "preliminari": 303, "present": [51, 59], "pretti": [13, 227, 304], "pretty_symbologi": 13, "prettyform": 13, "prettyprint": 227, "prevent": 300, "preview": 227, "prime": 222, "print": [2, 13, 24, 50, 97, 129, 139, 201, 207, 227, 304], "print_cycl": 13, "printer": [2, 50, 227, 304], "privat": 13, "problem": [118, 222, 277], "process": [11, 247], "product": [72, 180, 191, 248, 277], "productset": 13, "program": 245, "programmat": [32, 33], "properti": [13, 22, 214], "prufer": 63, "public": 3, "pull": [7, 11], "punctuat": 5, "purpos": 3, "put": 33, "pyglet": 213, "pytest": 256, "python": [14, 16, 50], "pythoncodeprint": 227, "pythonprint": 227, "pyutil": 50, "q": 109, "qappli": 184, "qft": 185, "qq": 218, "qq_i": 218, "quadrilater": 277, "qualiti": [11, 12], "quantiti": [195, 197, 199, 276], "quantiz": 192, "quantum": [168, 179, 193], "quaternion": 42, "qubit": 186, "queri": 45, "question": 40, "quick": [294, 295, 297, 300, 301], "quotient": 218, "ramp": 123, "random": [12, 69, 247], "randomindexedsymbol": 13, "randomis": 257, "randtest": 13, "ration": [14, 16, 217, 218, 223, 226, 229, 243, 305], "rawmatrix": 13, "rcodeprint": 227, "read": [7, 297], "real": [35, 217], "real_root": 29, "rebuild": 8, "recommend": [2, 5], "rectangl": 13, "recurr": 245, "recurs": [14, 233, 300], "reduc": [31, 226], "reduct": [31, 237], "redund": 13, "refer": [4, 22, 27, 39, 42, 49, 52, 68, 69, 71, 81, 87, 94, 96, 101, 102, 105, 107, 109, 111, 114, 133, 158, 164, 167, 197, 209, 211, 212, 213, 214, 218, 220, 222, 223, 224, 234, 236, 237, 240, 246, 259, 260, 279, 282, 291, 292], "referenc": 4, "referencefram": [201, 211], "refin": 47, "regress": 12, "reidemeist": 51, "relat": [13, 16, 18, 22, 31, 69, 77, 99, 208, 211, 278], "releas": 3, "reloc": 13, "remaind": 220, "remind": 24, "renam": 13, "rep": 13, "report": [29, 31, 32, 33, 34, 35, 36, 37, 38], "repres": [29, 33, 38, 94, 187, 217, 222], "represent": [88, 92, 197, 211, 217], "request": [7, 11], "requir": [3, 8], "residu": 234, "respons": [123, 227], "restrict": 33, "result": [29, 31, 32, 33, 34, 35, 36, 37, 226], "return": [31, 36, 246], "reveal": 145, "review": 7, "rewrit": [13, 24, 50, 228, 305], "riccati": 243, "riemann": 77, "rigid": [157, 292], "ring": [214, 217, 218], "roll": [148, 149, 150, 151], "root": [29, 35, 223], "rotat": 105, "rough": 159, "routin": 260, "row": 301, "rr": 218, "rref": 301, "rs_seri": 224, "rule": [236, 277], "run": [2, 11, 12, 40, 258], "runtim": 111, "rust": 227, "sage": 2, "same": 34, "sampl": [4, 13], "satisfi": 31, "scalar": [208, 278, 280], "schreier": 51, "scipi": [35, 36], "search": 246, "second": 192, "section": 4, "see": [4, 69, 265, 277], "select": 36, "sentenc": 4, "separ": 14, "sequenc": [63, 91, 220, 223, 232, 233], "seri": [91, 213, 224, 229, 230, 231, 234, 295], "server": 8, "session": 97, "set": [9, 13, 19, 33, 36, 37, 46, 81, 211, 235, 246, 304], "set_potential_energi": 13, "setkind": 235, "setup": [7, 9], "sever": 34, "shape": 301, "shor": 188, "should": [3, 110], "sign": [16, 297], "silenc": 13, "simpl": [226, 292], "simplif": [24, 73, 99, 236, 305], "simplifi": [14, 38, 50, 220, 238, 239, 305], "simul": 291, "singl": [4, 16, 18, 31], "singleton": [69, 233, 235], "singular": [48, 118], "skip": 12, "slow": [12, 156], "smt": 227, "so": 110, "softwar": 7, "solenoid": [208, 278], "solut": [29, 32, 33, 34, 35, 36, 37, 38, 179, 246, 277], "solv": [18, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 118, 201, 215, 222, 245, 246, 306], "solver": [13, 36, 225, 241, 242, 243, 245, 246, 306], "solveset": [33, 246], "some": [13, 36, 159, 246], "someth": [7, 12], "sort": [14, 69], "sourc": [2, 269], "space": [178, 197, 237], "spars": [107, 108, 217, 218, 220], "sparsematrix": [13, 107], "special": [12, 16, 21, 50, 77, 223, 235, 305], "specif": [36, 50], "specifi": [32, 36, 213], "speed": [29, 33, 34, 37, 38, 129, 156], "spell": 5, "spheric": 77, "sphinx": 4, "spin": 189, "spline": 77, "sqrt": 16, "squar": [34, 215], "srepr": [227, 304], "ssh": 9, "standard": 51, "stat": [13, 247], "state": [170, 179, 182, 190], "static": 13, "statist": 2, "step": [123, 246], "stochast": 247, "stochasticprocess": 13, "stoke": 281, "store": 14, "str": 304, "string": [13, 14, 22, 38, 294], "stringpict": 13, "strprinter": 227, "structur": [154, 155, 197, 240], "style": [4, 5, 12], "sub": 110, "subexpress": 228, "subfield": 222, "subgroup": 51, "submodul": [13, 81], "subresult": 220, "subset": [64, 72], "substitut": [33, 35, 129, 201, 294], "subword": 59, "sum": 73, "summari": 4, "support": 226, "surfac": 281, "switch": 142, "symbol": [13, 14, 16, 22, 23, 24, 31, 32, 34, 69, 88, 156, 160, 212, 217, 223, 226, 246, 297, 299], "symbolicsystem": 160, "symengin": 2, "sympi": [0, 7, 9, 13, 14, 16, 19, 20, 21, 26, 31, 33, 37, 39, 40, 50, 92, 111, 159, 208, 217, 271, 274, 275, 278, 294, 296, 299], "sympifi": [13, 69], "syntax": 50, "system": [22, 31, 35, 37, 123, 140, 147, 153, 160, 194, 196, 197, 200, 243, 245, 275, 276, 278, 280, 291], "syzygi": 214, "t": 14, "tabl": [94, 99, 237], "technic": 3, "tendon": 292, "tensor": [13, 65, 77, 191, 250, 253, 254], "tensorhead": 13, "tensorindextyp": 13, "tensorsymmetri": 13, "tensortyp": 13, "term": [68, 226, 228, 234], "test": [2, 11, 12, 13, 66, 99, 226, 255, 257, 258, 301], "theanocod": 13, "theorem": [81, 94, 281], "theoret": 72, "theori": [46, 49, 109, 282, 287], "thi": [94, 246], "third": 277, "three": [23, 81], "through": 300, "time": 270, "tip": [24, 294, 295, 297, 300, 301], "titl": 11, "to_int": 13, "todd": 51, "todo": 96, "tone": 5, "too": 14, "tool": [50, 108], "topic": [21, 129, 201, 282, 289], "trace": 13, "tradeoff": 29, "transform": [72, 94, 96, 111, 276], "transolv": 246, "travers": [13, 69], "tree": [50, 217, 227, 300], "tricep": 291, "trig": 16, "trigonometr": [75, 77, 236, 305], "trigsimp": 305, "true": 156, "truss": [120, 121], "truth": [81, 99], "try": 3, "tupl": [13, 16, 18, 31, 223], "tutori": [39, 240, 293, 298], "two": 297, "type": [5, 12, 18, 31, 50, 77, 203, 246, 247], "ubuntu": 8, "ufuncifi": 110, "unchang": 12, "uncollect": 59, "understand": 300, "undocu": 220, "unevalu": 36, "unicod": [13, 304], "unifi": 217, "unit": [196, 197, 198, 200], "univari": [220, 226], "up": [33, 34, 37, 38, 304], "updat": 12, "us": [2, 5, 7, 13, 20, 29, 31, 32, 33, 34, 35, 36, 37, 38, 50, 72, 93, 94, 110, 118, 151, 156, 157, 211, 213, 224, 246, 276], "usag": [14, 81, 142, 160, 217, 277], "user": [159, 240, 243, 244], "usual": 34, "util": [13, 50, 66, 67, 86, 105, 165, 222, 245, 264, 270, 282, 290], "v": [14, 16, 23, 217], "valid": 94, "valu": [18, 23, 38], "valuat": 222, "variabl": [16, 31, 36, 38, 213, 247, 276, 291], "variat": 265, "variou": [13, 226], "vector": [34, 59, 152, 201, 203, 205, 208, 209, 210, 211, 220, 271, 272, 274, 275, 276, 278, 279, 280, 281], "veloc": [210, 292], "verifi": [32, 281], "versin": 24, "version": 13, "view": 8, "virtual": 9, "visual": [81, 159], "volum": 281, "walk": 300, "walsh": 72, "warn": [12, 13, 263], "wave": 166, "wavefunct": 127, "we": 246, "weight": 48, "welcom": 39, "wester": 226, "what": [3, 156, 216, 217, 246, 299, 302], "when": [3, 38, 94], "where": 246, "which": [31, 33, 37, 110, 227], "why": [246, 299], "wigner": 212, "window": [8, 213], "within": 16, "without": [29, 36], "word": [51, 59], "work": [7, 32, 34, 36, 81, 226], "workflow": 11, "wrap": [141, 292], "write": [4, 5, 11, 12, 24], "wrong": 246, "x": 218, "xstr": 13, "you": 38, "your": [7, 9, 11, 33], "zero": [32, 33, 38, 123, 220, 226, 301], "zeroth": 292, "zeta": 77, "zoo": 156, "zz": 218, "zz_i": 218}})