Search.setIndex({"alltitles": {"1. Completing Dynamics Online": [[126, "completing-dynamics-online"]], "1. Single-Sentence Summary": [[6, "single-sentence-summary"]], "1. Symbolic linearization with A_and_B=True is slow": [[140, "symbolic-linearization-with-a-and-b-true-is-slow"]], "1. Using the Linearizer class directly:": [[140, "using-the-linearizer-class-directly"], [140, "id2"]], "2. Explanation Section": [[6, "explanation-section"]], "2. Fixing Issues": [[126, "fixing-issues"]], "2. The linearized form has nan, zoo, or oo as matrix elements": [[140, "the-linearized-form-has-nan-zoo-or-oo-as-matrix-elements"]], "2. Using the linearize class method:": [[140, "using-the-linearize-class-method"], [140, "id3"]], "3. Examples Section": [[6, "examples-section"]], "3. Switching to an AST": [[126, "switching-to-an-ast"]], "4. Parameters Section": [[6, "parameters-section"]], "5. See Also Section": [[6, "see-also-section"]], "6. References Section": [[6, "references-section"]], "A Direct Method Using SymPy Matrices": [[16, "a-direct-method-using-sympy-matrices"]], "A More Interesting Example": [[282, "a-more-interesting-example"]], "A Note about Equations": [[289, "a-note-about-equations"]], "A Note on Dependent Coordinates and Speeds": [[140, null]], "A bicycle": [[128, "a-bicycle"]], "A four bar linkage": [[129, "a-four-bar-linkage"]], "A rolling disc": [[132, "a-rolling-disc"]], "A rolling disc using Lagrange\u2019s Method": [[135, "a-rolling-disc-using-lagrange-s-method"]], "A rolling disc, with Kane\u2019s method": [[133, "a-rolling-disc-with-kane-s-method"]], "A rolling disc, with Kane\u2019s method and constraint forces": [[134, "a-rolling-disc-with-kane-s-method-and-constraint-forces"]], "AGCA - Algebraic Geometry and Commutative Algebra Module": [[198, "agca-algebraic-geometry-and-commutative-algebra-module"]], "API Reference": [[32, "api-reference"], [243, "module-sympy.utilities.autowrap"], [244, "module-sympy.utilities.codegen"], [267, "api-reference"]], "API reference": [[89, "api-reference"], [89, "id39"]], "ASCII Pretty Printer": [[287, "ascii-pretty-printer"]], "AST Type Tree": [[43, "ast-type-tree"]], "About Holonomic Functions": [[80, "about-holonomic-functions"]], "Abstract": [[107, null], [111, null], [113, null], [136, null], [146, null], [163, null], [193, null]], "Abstract Domains": [[202, "abstract-domains"]], "Acceleration of Points": [[116, "acceleration-of-points"], [185, "acceleration-of-points"]], "Accessing Rows and Columns": [[284, "accessing-rows-and-columns"]], "Accuracy and error handling": [[66, "accuracy-and-error-handling"]], "Adding the deprecation to the code": [[4, "adding-the-deprecation-to-the-code"]], "Addition and Multiplication": [[84, "addition-and-multiplication"]], "Additional Tips": [[20, "additional-tips"]], "Advanced Expression Manipulation": [[283, "advanced-expression-manipulation"]], "Advanced Functionality": [[116, "advanced-functionality"]], "Advanced Interfaces": [[116, "advanced-interfaces"], [185, "advanced-interfaces"]], "Advanced Methods": [[284, "advanced-methods"]], "Advanced factoring over finite fields": [[210, "advanced-factoring-over-finite-fields"]], "Aesara": [[103, "aesara"]], "Aesara Code printing": [[211, "module-sympy.printing.aesaracode"]], "Airy Functions": [[70, "airy-functions"]], "Algebraic Solution With Root Multiplicities": [[22, "algebraic-solution-with-root-multiplicities"]], "Algebraic Solution Without Root Multiplicities": [[22, "algebraic-solution-without-root-multiplicities"]], "Algebraic equations": [[229, "algebraic-equations"]], "Algebraic number fields": [[201, "algebraic-number-fields"], [206, "algebraic-number-fields"]], "Algebraically dependent generators": [[201, "algebraically-dependent-generators"]], "Algebras": [[35, "algebras"]], "Algorithms (sympy.codegen.algorithms)": [[43, "module-sympy.codegen.algorithms"]], "Alternative Representation": [[195, "alternative-representation"]], "Alternatives to Consider": [[22, "alternatives-to-consider"], [24, "alternatives-to-consider"], [25, "alternatives-to-consider"], [27, "alternatives-to-consider"], [28, "alternatives-to-consider"], [29, "alternatives-to-consider"], [30, "alternatives-to-consider"]], "Alternatives to consider": [[26, "alternatives-to-consider"]], "An example": [[181, "an-example"], [221, "an-example"]], "An in-depth example: Pappus\u2019 Hexagon Theorem": [[74, "an-in-depth-example-pappus-hexagon-theorem"]], "Anaconda": [[33, "anaconda"]], "Analytic Solutions": [[163, "analytic-solutions"]], "Angular Acceleration": [[194, "angular-acceleration"]], "Angular Momentum": [[141, "angular-momentum"]], "Angular Velocity": [[194, "angular-velocity"]], "Anticommutator": [[153, "module-sympy.physics.quantum.anticommutator"]], "Appell sequences": [[207, "appell-sequences"]], "Applications of Vector Integrals": [[266, "applications-of-vector-integrals"]], "Applying assumptions to string inputs": [[18, "applying-assumptions-to-string-inputs"]], "Applying the Integral Theorems": [[87, "applying-the-integral-theorems"]], "Applying the Operators": [[221, "applying-the-operators"]], "Approximate Numeric Solution With Root Multiplicities": [[22, "approximate-numeric-solution-with-root-multiplicities"]], "Arithmetic with module elements": [[206, "arithmetic-with-module-elements"]], "As elements of finitely-generated modules": [[206, "as-elements-of-finitely-generated-modules"]], "As number field elements": [[206, "as-number-field-elements"]], "Ask": [[36, "module-sympy.assumptions.ask"]], "Assume": [[37, "module-sympy.assumptions.assume"]], "Assumptions": [[18, "assumptions"], [20, "assumptions"], [38, "module-sympy.assumptions"]], "Assumptions predicates for the (old) assumptions": [[18, "id28"]], "Attributes of Collector": [[52, "attributes-of-collector"]], "Attributes of CosetTable": [[44, "attributes-of-cosettable"]], "Attributes of PolycyclicGroup": [[52, "attributes-of-polycyclicgroup"]], "Authors": [[196, "authors"]], "Auto-Rebuild with the Live Server": [[1, "auto-rebuild-with-the-live-server"]], "Autolev Parser": [[126, "autolev-parser"]], "Autowrap": [[3, "autowrap"], [43, "autowrap"]], "Autowrap Module": [[243, "autowrap-module"]], "Available Entities": [[74, "available-entities"]], "B-Splines": [[70, "b-splines"]], "Backends": [[197, "backends"]], "Background": [[140, "background"]], "Base Class Reference": [[42, "module-sympy.categories"], [64, "base-class-reference"]], "Base Rings": [[198, "base-rings"]], "Basic Implementation details": [[260, "basic-implementation-details"]], "Basic Manipulation": [[98, "basic-manipulation"]], "Basic Methods": [[284, "basic-methods"]], "Basic Operations": [[277, "basic-operations"], [284, "basic-operations"]], "Basic Sets": [[219, "module-sympy.sets.sets"]], "Basic concepts": [[199, "basic-concepts"]], "Basic functionality": [[199, "basic-functionality"]], "Basic functionality of the module": [[199, "basic-functionality-of-the-module"]], "Basic polynomial manipulation functions": [[207, "basic-polynomial-manipulation-functions"]], "Basic usage of domains": [[201, "basic-usage-of-domains"]], "Basics": [[66, "basics"], [267, "basics"], [268, "basics"]], "Beam": [[106, "beam"], [107, "beam"]], "Beam (Docstrings)": [[105, "module-sympy.physics.continuum_mechanics.beam"]], "Bessel Type Functions": [[70, "module-sympy.functions.special.bessel"]], "Best Practices for Writing Docstrings": [[6, "best-practices-for-writing-docstrings"]], "Best Practices for Writing Documentation": [[7, "best-practices-for-writing-documentation"]], "Best Practices for eval()": [[20, "best-practices-for-eval"]], "Beware Copying and Pasting Results": [[29, "beware-copying-and-pasting-results"]], "Bibliography": [[44, "bibliography"], [52, "bibliography"]], "Block Matrices": [[95, "block-matrices"]], "Bode Plot": [[110, "bode-plot"]], "Body (Docstrings)": [[117, "module-sympy.physics.mechanics.body"]], "Boolean functions": [[92, "boolean-functions"]], "Boolean or Relational": [[14, "boolean-or-relational"]], "Build the Docs": [[1, "build-the-docs"]], "Build the Documentation": [[1, "build-the-documentation"]], "Building the Documentation": [[3, "building-the-documentation"]], "C code printers": [[211, "module-sympy.printing.c"]], "C specific AST nodes (sympy.codegen.cnodes)": [[43, "module-sympy.codegen.cnodes"]], "C utilities (sympy.codegen.cutils)": [[43, "module-sympy.codegen.cutils"]], "C++ code printers": [[211, "module-sympy.printing.cxx"]], "C++ specific AST nodes (sympy.codegen.cxxnodes)": [[43, "module-sympy.codegen.cxxnodes"]], "CC": [[202, "cc"]], "Calculation of Flux": [[266, "calculation-of-flux"]], "Calculation of Perimeter, Surface Area, and Volume": [[266, "calculation-of-perimeter-surface-area-and-volume"]], "Calculation of mass of a body": [[266, "calculation-of-mass-of-a-body"]], "Calculus": [[39, "calculus"], [41, "module-sympy.calculus"], [278, "calculus"]], "Calling sympy.stats.StochasticProcess.distribution with RandomIndexedSymbol": [[10, "calling-sympy-stats-stochasticprocess-distribution-with-randomindexedsymbol"]], "Capitalization": [[7, "capitalization"]], "Cartesian Operators and States": [[154, "module-sympy.physics.quantum.cartesian"]], "Category Theory": [[42, "category-theory"]], "Caveats": [[34, "caveats"]], "Change in joint attachment point argument": [[10, "change-in-joint-attachment-point-argument"]], "Chebyshev Polynomials": [[70, "chebyshev-polynomials"]], "Checking the type of vector field": [[187, "checking-the-type-of-vector-field"]], "Checklist": [[4, "checklist"]], "Choice of Coordinates and Speeds": [[116, "choice-of-coordinates-and-speeds"]], "Choosing a domain": [[201, "choosing-a-domain"]], "Choosing a domain for a Poly": [[201, "choosing-a-domain-for-a-poly"]], "Choosing generators": [[201, "choosing-generators"]], "Circuit Plot": [[156, "module-sympy.physics.quantum.circuitplot"]], "Citing SymPy": [[0, "citing-sympy"]], "Class Reference": [[206, "class-reference"]], "Classes": [[232, "classes"]], "Classes and functions for rewriting expressions (sympy.codegen.rewriting)": [[43, "module-sympy.codegen.rewriting"]], "Classes for abstract syntax trees (sympy.codegen.ast)": [[43, "module-sympy.codegen.ast"]], "Classical Mechanics": [[136, "classical-mechanics"]], "Classical remainder sequence": [[204, "classical-remainder-sequence"]], "Classification of SymPy objects": [[15, "classification-of-sympy-objects"]], "Clebsch-Gordan Coefficients": [[155, "module-sympy.physics.quantum.cg"]], "Code": [[7, "code"]], "Code Generation": [[3, "code-generation"], [43, "code-generation"], [267, "code-generation"], [269, "code-generation"]], "Code Output": [[116, "code-output"]], "Code Printers": [[3, "code-printers"]], "Code printers (sympy.printing)": [[43, "code-printers-sympy-printing"]], "CodePrinter": [[211, "module-sympy.printing.codeprinter"]], "Codegen": [[244, "codegen"]], "Codegen (sympy.utilities.codegen)": [[43, "codegen-sympy-utilities-codegen"]], "Columnspace": [[284, "columnspace"]], "Combinatorial": [[67, "combinatorial"]], "Combinatorics": [[49, "combinatorics"]], "Combining predicates with or": [[18, "combining-predicates-with-or"]], "Common": [[39, "common"]], "Common Issues": [[116, "common-issues"], [185, "common-issues"]], "Common Matrices": [[93, "module-sympy.matrices.common"]], "Common Subexpression Detection and Collection": [[212, "common-subexpression-detection-and-collection"]], "Common mistakes": [[211, "common-mistakes"]], "Commutator": [[157, "module-sympy.physics.quantum.commutator"]], "Compatibility with matrices": [[233, "compatibility-with-matrices"]], "Complete Examples": [[20, "complete-examples"]], "Complex Functions": [[68, "complex-functions"]], "Complex Roots": [[22, "complex-roots"]], "Composition with polynomials": [[84, "composition-with-polynomials"]], "Compound Distribution": [[231, "compound-distribution"]], "Compound Sequences": [[217, "compound-sequences"]], "Compound Sets": [[219, "compound-sets"]], "Compression and Standardization": [[44, "compression-and-standardization"]], "Computation of Collected Word": [[52, "computation-of-collected-word"]], "Computation of Exponent Vector": [[52, "computation-of-exponent-vector"]], "Computation of Leading Exponent": [[52, "computation-of-leading-exponent"]], "Computation of Minimal Uncollected Subword": [[52, "computation-of-minimal-uncollected-subword"]], "Computation of Polycyclic Presentation": [[52, "computation-of-polycyclic-presentation"]], "Computation of Subword Index": [[52, "computation-of-subword-index"]], "Computing Integrals using Meijer G-Functions": [[87, "computing-integrals-using-meijer-g-functions"]], "Computing reduced Gr\u00f6bner bases": [[210, "computing-reduced-grobner-bases"]], "Computing with automatic field extensions": [[210, "computing-with-automatic-field-extensions"]], "Concrete": [[61, "concrete"]], "Concrete Class Reference": [[61, "concrete-class-reference"]], "Concrete Functions Reference": [[61, "concrete-functions-reference"]], "Condition Sets": [[219, "module-sympy.sets.conditionset"]], "Conditions of Convergence for Integral (1)": [[87, "conditions-of-convergence-for-integral-1"]], "Conditions of Convergence for Integral (2)": [[87, "conditions-of-convergence-for-integral-2"]], "Configuration": [[204, "module-sympy.polys.polyconfig"]], "Conservative and Solenoidal fields": [[192, "conservative-and-solenoidal-fields"], [263, "conservative-and-solenoidal-fields"]], "Constants": [[158, "module-sympy.physics.quantum.constants"], [181, "constants"]], "Constructing a presentation for a subgroup": [[44, "constructing-a-presentation-for-a-subgroup"]], "Constructing array expressions from index-explicit forms": [[233, "constructing-array-expressions-from-index-explicit-forms"]], "Construction of a Free Group": [[44, "construction-of-a-free-group"]], "Construction of words": [[44, "construction-of-words"]], "Contents": [[38, "contents"], [49, "contents"], [69, "contents"], [82, "contents"], [88, "contents"], [203, "contents"], [215, "contents"], [225, "contents"], [234, "contents"]], "Continuous Types": [[231, "continuous-types"]], "Continuum Mechanics": [[107, "continuum-mechanics"]], "Contribute": [[208, "contribute"]], "Contributing": [[8, "contributing"], [32, "contributing"]], "Control": [[109, "control"]], "Control API": [[112, "control-api"]], "Control Module": [[111, "module-sympy.physics.control"]], "Control System Plots": [[110, "control-system-plots"]], "Conversion between quantities": [[183, "module-sympy.physics.units.util"]], "Convert to a linear combination of Meijer G-functions": [[84, "convert-to-a-linear-combination-of-meijer-g-functions"]], "Convert to a linear combination of hypergeometric functions": [[84, "convert-to-a-linear-combination-of-hypergeometric-functions"]], "Convert to expressions": [[84, "convert-to-expressions"]], "Convert to holonomic sequence": [[84, "convert-to-holonomic-sequence"]], "Converting Meijer G-functions": [[81, "converting-meijer-g-functions"]], "Converting Strings to SymPy Expressions": [[277, "converting-strings-to-sympy-expressions"]], "Converting elements between different domains": [[201, "converting-elements-between-different-domains"]], "Converting hypergeometric functions": [[81, "converting-hypergeometric-functions"]], "Converting other representations to holonomic": [[81, "converting-other-representations-to-holonomic"]], "Converting symbolic expressions": [[81, "converting-symbolic-expressions"]], "Convolution": [[65, "convolution"]], "Convolution using Fast Fourier Transform": [[65, "convolution-using-fast-fourier-transform"]], "Convolution using Fast Walsh Hadamard Transform": [[65, "convolution-using-fast-walsh-hadamard-transform"]], "Convolution using Number Theoretic Transform": [[65, "convolution-using-number-theoretic-transform"]], "Convolutions": [[65, "module-sympy.discrete.convolutions"]], "Coordinate Modes": [[197, "coordinate-modes"]], "Coordinate Systems": [[265, "coordinate-systems"]], "Coordinate Systems and Vectors": [[260, "coordinate-systems-and-vectors"]], "Coordinate Variables": [[261, "coordinate-variables"]], "Core": [[62, "core"]], "Core operators no longer accept non-Expr args": [[10, "core-operators-no-longer-accept-non-expr-args"]], "Coset Enumeration: The Todd-Coxeter Algorithm": [[44, "coset-enumeration-the-todd-coxeter-algorithm"]], "CosetTable": [[44, "cosettable"]], "Covering Product": [[65, "covering-product"]], "Create a Function That Can Be Solved With SciPy": [[28, "create-a-function-that-can-be-solved-with-scipy"]], "Creating Matrices": [[98, "creating-matrices"]], "Creating a Custom Function": [[20, "creating-a-custom-function"]], "Creating an indefinite Integral with an Eq argument": [[10, "creating-an-indefinite-integral-with-an-eq-argument"]], "Credits and Copyright": [[196, "credits-and-copyright"]], "Cross-Referencing": [[6, "cross-referencing"]], "Cryptography": [[63, "cryptography"]], "Curl": [[192, "curl"], [263, "curl"]], "Curves": [[71, "module-sympy.geometry.curve"]], "DMP representation": [[201, "dmp-representation"]], "DUP representation": [[201, "dup-representation"]], "Dagger": [[159, "module-sympy.physics.quantum.dagger"]], "Debian/Ubuntu": [[1, "debian-ubuntu"]], "Debugging": [[2, "debugging"]], "Decorator": [[245, "module-sympy.utilities.decorator"]], "Defining Automatic Evaluation with eval()": [[20, "defining-automatic-evaluation-with-eval"]], "Defining Derivatives": [[29, "defining-derivatives"]], "Definition": [[20, "definition"], [20, "id2"], [20, "id4"], [80, "definition"]], "Deleting and Inserting Rows and Columns": [[284, "deleting-and-inserting-rows-and-columns"]], "Dense Matrices": [[94, "dense-matrices"]], "Dense polynomials": [[202, "dense-polynomials"]], "Dependencies": [[3, "dependencies"]], "Deprecation Policy": [[4, "deprecation-policy"]], "Depth of Polycyclic generator": [[52, "depth-of-polycyclic-generator"]], "Derivatives": [[278, "derivatives"]], "Derivatives by array": [[232, "derivatives-by-array"]], "Derivatives of Vectors": [[195, "derivatives-of-vectors"]], "Derivatives with Multiple Frames": [[195, "derivatives-with-multiple-frames"]], "Determinant": [[284, "determinant"]], "Deutils (Utilities for solving ODE\u2019s and PDE\u2019s)": [[229, "deutils-utilities-for-solving-ode-s-and-pde-s"]], "Developers Notes": [[62, "developers-notes"]], "Development Dependencies": [[3, "development-dependencies"]], "Development Environment Setup": [[5, "development-environment-setup"]], "Diagonal operator": [[232, "diagonal-operator"]], "Diagram Drawing": [[42, "module-sympy.categories.diagram_drawing"]], "Dictionaries": [[12, "dictionaries"]], "Dictionary (roots)": [[22, "dictionary-roots"]], "Differential Geometry": [[64, "module-sympy.diffgeom"]], "Differentiating": [[116, "differentiating"]], "Differentiation": [[20, "differentiation"]], "Dimensional analysis": [[179, "dimensional-analysis"]], "Dimensions": [[181, "dimensions"]], "Dimensions and dimension systems": [[178, "module-sympy.physics.units.dimensions"]], "Diophantine": [[224, "diophantine"]], "Diophantine Equation Can be Expressed as Expression That Equals Zero": [[25, "diophantine-equation-can-be-expressed-as-expression-that-equals-zero"]], "Diophantine Equations (DEs)": [[229, "diophantine-equations-des"], [230, "diophantine-equations-des"]], "Diophantine equations": [[224, "diophantine-equations"]], "Dirac Delta and Related Discontinuous Functions": [[70, "dirac-delta-and-related-discontinuous-functions"]], "Directional Derivative": [[263, "directional-derivative"]], "Discrete": [[65, "discrete"]], "Discrete Types": [[231, "discrete-types"]], "Dispersion of Polynomials": [[207, "dispersion-of-polynomials"]], "Divergence": [[192, "divergence"], [263, "divergence"]], "Divisibility": [[199, "divisibility"]], "Divisibility of polynomials": [[199, "divisibility-of-polynomials"]], "Division": [[199, "division"]], "Do Not Simplify Solutions": [[31, "do-not-simplify-solutions"]], "Docker": [[1, "docker"], [1, "id3"], [1, "id4"]], "Docstring Style Guide": [[7, "docstring-style-guide"]], "Docstrings for Classes that are Mathematical Functions": [[6, "docstrings-for-classes-that-are-mathematical-functions"]], "Docstrings for basic field functions": [[187, "docstrings-for-basic-field-functions"]], "Documentation using Markdown": [[7, "documentation-using-markdown"]], "Documenting a deprecation": [[4, "documenting-a-deprecation"]], "Domain constructors": [[207, "domain-constructors"]], "Domain elements vs sympy expressions": [[201, "domain-elements-vs-sympy-expressions"]], "Domains": [[202, "domains"]], "Dot": [[287, "dot"]], "Double Equals Signs": [[12, "double-equals-signs"]], "Dyadic": [[141, "dyadic"]], "Dyadics": [[260, "dyadics"]], "ECM function": [[102, "ecm-function"]], "EX": [[202, "ex"]], "Easy Cases: Fully Symbolic or Fully Evaluated": [[20, "easy-cases-fully-symbolic-or-fully-evaluated"]], "Eigenvalues, Eigenvectors, and Diagonalization": [[284, "eigenvalues-eigenvectors-and-diagonalization"]], "Elementary": [[68, "elementary"]], "Elementary Sequences": [[217, "elementary-sequences"]], "Elementary Sets": [[219, "elementary-sets"]], "Ellipses": [[72, "module-sympy.geometry.ellipse"]], "Elliptic integrals": [[70, "module-sympy.functions.special.elliptic_integrals"]], "Empty List": [[14, "empty-list"]], "Ensure Consistent Formatting From solve()": [[31, "ensure-consistent-formatting-from-solve"]], "Ensure the Root Found is in a Given Interval": [[28, "ensure-the-root-found-is-in-a-given-interval"]], "Entities": [[73, "module-sympy.geometry.entity"]], "Enumeration": [[67, "enumeration"]], "Enumerative": [[246, "module-sympy.utilities.enumerative"]], "Equals Signs (=)": [[12, "equals-signs"]], "Equals signs": [[280, "equals-signs"]], "Equation with quantities": [[179, "equation-with-quantities"]], "Equations Which Have a Closed-Form Solution, and SymPy Cannot Solve": [[26, "equations-which-have-a-closed-form-solution-and-sympy-cannot-solve"], [30, "equations-which-have-a-closed-form-solution-and-sympy-cannot-solve"]], "Equations With No Closed-Form Solution": [[22, "equations-with-no-closed-form-solution"], [26, "equations-with-no-closed-form-solution"], [29, "equations-with-no-closed-form-solution"]], "Equations With No Solution": [[25, "equations-with-no-solution"], [27, "equations-with-no-solution"], [29, "equations-with-no-solution"]], "Equations With no Closed-Form Solution": [[31, "equations-with-no-closed-form-solution"]], "Equations With no Solution": [[28, "equations-with-no-solution"]], "Error Functions and Fresnel Integrals": [[70, "module-sympy.functions.special.error_functions"]], "Essential Classes": [[186, "essential-classes"]], "Essential Classes in sympy.vector (docstrings)": [[256, "essential-classes-in-sympy-vector-docstrings"]], "Essential Functions (Docstrings)": [[188, "essential-functions-docstrings"]], "Essential Functions in sympy.vector (docstrings)": [[259, "essential-functions-in-sympy-vector-docstrings"]], "Euclidean domains": [[199, "euclidean-domains"]], "Evaluating Expressions with Floats and Rationals": [[12, "evaluating-expressions-with-floats-and-rationals"]], "Exact Numeric Solution With Root Multiplicities": [[22, "exact-numeric-solution-with-root-multiplicities"]], "Example 1": [[106, "example-1"]], "Example 10": [[106, "example-10"]], "Example 11": [[106, "example-11"]], "Example 2": [[106, "example-2"]], "Example 3": [[106, "example-3"]], "Example 4": [[106, "example-4"]], "Example 5": [[106, "example-5"]], "Example 6": [[106, "example-6"]], "Example 7": [[106, "example-7"]], "Example 8": [[106, "example-8"]], "Example 9": [[106, "example-9"]], "Example Usage": [[74, "example-usage"]], "Example of Custom Printer": [[211, "example-of-custom-printer"]], "Example of Custom Printing Method": [[211, "example-of-custom-printing-method"]], "Example of Finding the Roots of a Polynomial Algebraically": [[22, "example-of-finding-the-roots-of-a-polynomial-algebraically"]], "Example of Numerically Solving an Equation": [[28, "example-of-numerically-solving-an-equation"]], "Example of Solving a Diophantine Equation": [[25, "example-of-solving-a-diophantine-equation"]], "Example: Continued Fractions": [[288, "example-continued-fractions"]], "Examples": [[20, "examples"], [20, "id3"], [20, "id5"], [24, "examples"], [34, "examples"], [62, "examples"], [62, "id48"], [86, "examples"], [89, "examples"], [89, "id38"], [102, "examples"], [102, "id61"], [106, "examples"], [113, "examples"], [148, "examples"], [180, "examples"], [195, "examples"], [195, "id1"], [210, "examples"], [218, "examples"], [218, "id3"], [231, "examples"], [232, "examples"], [233, "examples"], [236, "examples"]], "Examples for Physics/Mechanics": [[127, "examples-for-physics-mechanics"]], "Examples from Wester\u2019s Article": [[210, "examples-from-wester-s-article"]], "Examples of Solving a System of Equations Algebraically": [[30, "examples-of-solving-a-system-of-equations-algebraically"]], "Exceptions": [[204, "exceptions"]], "Exceptions and Warnings": [[247, "module-sympy.utilities.exceptions"]], "Exercises": [[286, "exercises"]], "Expanding": [[212, "expanding"]], "Expanding expressions and factoring back": [[210, "expanding-expressions-and-factoring-back"]], "Experimental \\mathrm{\\LaTeX} Parsing": [[104, "experimental-mathrm-latex-parsing"]], "Explanations": [[13, "explanations"], [32, "explanations"]], "Explicitly Represent Infinite Sets of Possible Solutions": [[26, "explicitly-represent-infinite-sets-of-possible-solutions"]], "Exponential": [[68, "exponential"]], "Exponential, Logarithmic and Trigonometric Integrals": [[70, "exponential-logarithmic-and-trigonometric-integrals"]], "Exponentials and logarithms": [[288, "exponentials-and-logarithms"]], "Expression (factor)": [[22, "expression-factor"]], "Expression Manipulation (Docstrings)": [[118, "expression-manipulation-docstrings"]], "Expression domain": [[201, "expression-domain"]], "Expression of quantities in different coordinate systems": [[261, "expression-of-quantities-in-different-coordinate-systems"]], "Extending The Hypergeometric Tables": [[221, "extending-the-hypergeometric-tables"]], "Extra polynomial manipulation functions": [[207, "extra-polynomial-manipulation-functions"]], "Extract Elements From the Solution": [[27, "extract-elements-from-the-solution"]], "Extract Expressions From the Result": [[25, "extract-expressions-from-the-result"]], "Extract a List of Decomposed Relations": [[24, "extract-a-list-of-decomposed-relations"]], "Extract a Tuple of Relations": [[24, "extract-a-tuple-of-relations"]], "Extract the Result for Multiple Function-Solution Pairs": [[29, "extract-the-result-for-multiple-function-solution-pairs"]], "Extract the Result for One Solution and Function": [[29, "extract-the-result-for-one-solution-and-function"]], "Factor the Equation": [[22, "factor-the-equation"]], "Factorial domains": [[199, "factorial-domains"]], "Factoring in terms of cyclotomic polynomials": [[210, "factoring-in-terms-of-cyclotomic-polynomials"]], "Factoring polynomials into linear factors": [[210, "factoring-polynomials-into-linear-factors"]], "Factorization": [[199, "factorization"]], "Fast Fourier Transform": [[65, "fast-fourier-transform"]], "Fast Walsh Hadamard Transform": [[65, "fast-walsh-hadamard-transform"]], "Fedora": [[1, "fedora"]], "Field operation functions": [[187, "field-operation-functions"]], "Field operator in orthogonal curvilinear coordinate system": [[263, "field-operator-in-orthogonal-curvilinear-coordinate-system"]], "Field operators and other related functions": [[192, "field-operators-and-other-related-functions"]], "Field operators and related functions": [[263, "field-operators-and-related-functions"]], "Fields": [[192, "fields"], [265, "fields"]], "Find Complex Roots of a Real Function": [[28, "find-complex-roots-of-a-real-function"]], "Find the Roots of a Polynomial": [[22, "find-the-roots-of-a-polynomial"]], "Find the Roots of a Polynomial Algebraically or Numerically": [[22, "find-the-roots-of-a-polynomial-algebraically-or-numerically"]], "Finding Minimal Polynomials": [[206, "finding-minimal-polynomials"]], "Finite Difference Approximations to Derivatives": [[16, "finite-difference-approximations-to-derivatives"]], "Finite Extensions": [[198, "finite-extensions"]], "Finite Types": [[231, "finite-types"]], "Finite difference weights": [[41, "finite-difference-weights"]], "Finite differences": [[278, "finite-differences"]], "Finite fields": [[201, "finite-fields"]], "Finitely Presented Groups": [[44, "finitely-presented-groups"]], "Finitely-generated modules": [[206, "module-sympy.polys.numberfields.modules"]], "Floating-point numbers": [[66, "floating-point-numbers"]], "For 2D Polygons": [[89, "for-2d-polygons"]], "For 3-Polytopes/Polyhedra": [[89, "for-3-polytopes-polyhedra"]], "Formal Power Series": [[213, "formal-power-series"]], "Formal manipulation of roots of polynomials": [[207, "formal-manipulation-of-roots-of-polynomials"]], "Formatting": [[6, "formatting"]], "Formatting Preferences": [[7, "formatting-preferences"]], "Forming logical expressions": [[92, "forming-logical-expressions"]], "Fortran Printing": [[211, "fortran-printing"]], "Fortran specific AST nodes (sympy.codegen.fnodes)": [[43, "module-sympy.codegen.fnodes"]], "Fortran utilities (sympy.codegen.futils)": [[43, "module-sympy.codegen.futils"]], "Fourier Series": [[214, "fourier-series"]], "Free Groups and Words": [[44, "free-groups-and-words"]], "Functions": [[12, "functions"], [69, "functions"], [232, "functions"]], "Functions to Find the Roots of a Polynomial": [[22, "functions-to-find-the-roots-of-a-polynomial"]], "Further Examples": [[140, "further-examples"]], "Further Reading": [[280, "further-reading"]], "Fused Multiply-Add (FMA)": [[20, "fused-multiply-add-fma"]], "Future Features": [[116, "future-features"]], "Future Improvements": [[126, "future-improvements"]], "Future Work": [[74, "future-work"]], "GCD and LCM": [[199, "gcd-and-lcm"]], "GF(p)": [[202, "gf-p"]], "Galois Groups": [[45, "module-sympy.combinatorics.galois"], [206, "galois-groups"]], "Gamma matrices": [[113, "module-sympy.physics.hep.gamma_matrices"]], "Gamma, Beta and Related Functions": [[70, "module-sympy.functions.special.gamma_functions"]], "Gates": [[160, "module-sympy.physics.quantum.gate"]], "Gaussian Optics": [[145, "module-sympy.physics.optics.gaussopt"]], "Gaussian domains": [[202, "gaussian-domains"]], "Gaussian integers and Gaussian rationals": [[201, "gaussian-integers-and-gaussian-rationals"]], "Gegenbauer Polynomials": [[70, "gegenbauer-polynomials"]], "General Guidelines": [[6, "general-guidelines"], [7, "general-guidelines"]], "General examples of usage": [[262, "general-examples-of-usage"]], "Generators": [[54, "module-sympy.combinatorics.generators"]], "Geometry": [[74, "geometry"]], "Geometry Visualization": [[74, "geometry-visualization"]], "Get All Roots, Perhaps Implicitly": [[22, "get-all-roots-perhaps-implicitly"]], "Get the SymPy Code": [[5, "get-the-sympy-code"]], "Getting help from within SymPy": [[12, "getting-help-from-within-sympy"]], "Getting the Source Code": [[3, "getting-the-source-code"]], "Git": [[33, "git"]], "Git Setup": [[5, "git-setup"]], "Glossary": [[11, "glossary"]], "Gotcha: symbols with different assumptions": [[18, "gotcha-symbols-with-different-assumptions"]], "Gotchas": [[126, "gotchas"], [280, "gotchas"]], "Gotchas and Pitfalls": [[12, "gotchas-and-pitfalls"]], "Gradient": [[192, "gradient"], [263, "gradient"]], "Gray Code": [[46, "module-sympy.combinatorics.graycode"]], "Groebner bases": [[199, "groebner-bases"]], "Groebner basis algorithms": [[204, "groebner-basis-algorithms"]], "Group constructors": [[47, "module-sympy.combinatorics.group_constructs"]], "Group structure": [[181, "group-structure"]], "Grover\u2019s Algorithm": [[161, "module-sympy.physics.quantum.grover"]], "Gtk": [[211, "module-sympy.printing.gtk"]], "Guidance": [[22, "guidance"], [24, "guidance"], [25, "guidance"], [26, "guidance"], [27, "guidance"], [28, "guidance"], [29, "guidance"], [30, "guidance"]], "Guide to Mechanics": [[136, "guide-to-mechanics"]], "Guide to Vector": [[193, "guide-to-vector"], [264, "guide-to-vector"]], "Hard Dependencies": [[3, "hard-dependencies"]], "Headings": [[7, "headings"]], "Hermite Polynomials": [[70, "hermite-polynomials"]], "High energy physics": [[113, "high-energy-physics"]], "Hilbert Space": [[162, "module-sympy.physics.quantum.hilbert"]], "Hint Functions": [[227, "hint-functions"]], "Hint Methods": [[228, "hint-methods"]], "Holonomic": [[82, "module-sympy.holonomic"]], "Hongguang Fu\u2019s Trigonometric Simplification": [[220, "hongguang-fu-s-trigonometric-simplification"]], "How Vectors are Coded": [[195, "how-vectors-are-coded"]], "How are symbolic parameters handled in solveset?": [[230, "how-are-symbolic-parameters-handled-in-solveset"]], "How do we deal with cases where only some of the solutions are known?": [[230, "how-do-we-deal-with-cases-where-only-some-of-the-solutions-are-known"]], "How do we manipulate and return an infinite solution?": [[230, "how-do-we-manipulate-and-return-an-infinite-solution"]], "How does solveset ensure that it is not returning any wrong solution?": [[230, "how-does-solveset-ensure-that-it-is-not-returning-any-wrong-solution"]], "How long should deprecations last?": [[4, "how-long-should-deprecations-last"]], "How to compute the integral": [[87, "how-to-compute-the-integral"]], "How to deprecate code": [[4, "how-to-deprecate-code"]], "How-to Guides": [[21, "how-to-guides"], [32, "how-to-guides"]], "Hydrogen Wavefunctions": [[114, "module-sympy.physics.hydrogen"]], "Hyperbolic": [[68, "hyperbolic"]], "Hyperbolic Functions": [[68, "hyperbolic-functions"]], "Hyperbolic Inverses": [[68, "hyperbolic-inverses"]], "Hypergeometric Algorithm": [[213, "hypergeometric-algorithm"]], "Hypergeometric Expansion": [[221, "hypergeometric-expansion"]], "Hypergeometric Function Expansion Algorithm": [[221, "hypergeometric-function-expansion-algorithm"]], "Hypergeometric Functions": [[70, "hypergeometric-functions"]], "Hypergeometric terms": [[61, "hypergeometric-terms"]], "If There are Multiple Solution Sets": [[29, "if-there-are-multiple-solution-sets"]], "If There is One Solution Set": [[29, "if-there-is-one-solution-set"]], "Immutability of Expressions": [[12, "immutability-of-expressions"]], "Immutable Matrices": [[96, "immutable-matrices"]], "ImmutableMatrix Class Reference": [[96, "module-sympy.matrices.immutable"]], "ImmutableSparseMatrix Class Reference": [[100, "immutablesparsematrix-class-reference"]], "Implementation - Helper Classes/Functions": [[211, "module-sympy.printing.conventions"]], "Implementation Details": [[244, "implementation-details"]], "Implementation details": [[243, "implementation-details"]], "Implementation in sympy.vector": [[263, "implementation-in-sympy-vector"]], "Implementation of fields in sympy.physics.vector": [[192, "implementation-of-fields-in-sympy-physics-vector"]], "Implemented G-Function Formulae": [[87, "implemented-g-function-formulae"]], "Implemented Hypergeometric Formulae": [[221, "implemented-hypergeometric-formulae"]], "Implementing assumptions handlers": [[18, "implementing-assumptions-handlers"]], "Implications": [[18, "implications"]], "Importing Docstrings into the Sphinx Documentation": [[6, "importing-docstrings-into-the-sphinx-documentation"]], "Impulse-Response Plot": [[110, "impulse-response-plot"]], "Include Solutions Making Any Denominator Zero": [[31, "include-solutions-making-any-denominator-zero"]], "Include the Variable to Be Reduced for in the Function Call": [[24, "include-the-variable-to-be-reduced-for-in-the-function-call"]], "Include the Variable to be Solved for in the Function Call": [[31, "include-the-variable-to-be-solved-for-in-the-function-call"]], "Increase Precision of the Solution": [[28, "increase-precision-of-the-solution"]], "Incrementing and decrementing indices": [[221, "incrementing-and-decrementing-indices"]], "Indexed Objects": [[236, "module-sympy.tensor.indexed"]], "Inequalities": [[229, "inequalities"], [230, "inequalities"]], "Inequalities Which Can Be Reduced Analytically, and SymPy Cannot Reduce": [[24, "inequalities-which-can-be-reduced-analytically-and-sympy-cannot-reduce"]], "Inequality Solvers": [[226, "inequality-solvers"]], "Inertia": [[141, "inertia"]], "Inertia (Dyadics)": [[185, "inertia-dyadics"]], "Inference": [[92, "module-sympy.logic.inference"]], "Information on the ode module": [[227, "module-sympy.solvers.ode.ode"]], "Information on the pde module": [[228, "module-sympy.solvers.pde"]], "Inner Product": [[164, "module-sympy.physics.quantum.innerproduct"]], "Input API of solveset": [[230, "input-api-of-solveset"]], "Installation": [[32, "installation"], [33, "installation"], [286, "installation"]], "Integer Functions": [[68, "integer-functions"]], "Integral Basis": [[206, "integral-basis"]], "Integral Transforms": [[89, "module-sympy.integrals.transforms"]], "Integral domains": [[199, "integral-domains"]], "Integrals": [[88, "integrals"], [89, "module-sympy.integrals"], [278, "integrals"]], "Integration": [[86, "integration"]], "Integration and Differentiation": [[84, "integration-and-differentiation"]], "Integration over Polytopes": [[89, "module-sympy.integrals.intpoly"]], "Interactive": [[90, "module-sympy.interactive"]], "Interactive Use": [[3, "interactive-use"]], "Interface": [[231, "interface"]], "Internal API": [[83, "internal-api"]], "Internal API Reference": [[87, "module-sympy.integrals.meijerint"]], "Internal Classes": [[224, "internal-classes"]], "Internal Functions": [[224, "internal-functions"]], "Internals": [[89, "internals"], [206, "internals"]], "Internals of a Poly": [[201, "internals-of-a-poly"]], "Internals of the Polynomial Manipulation Module": [[204, "internals-of-the-polynomial-manipulation-module"]], "Interpretation of the predicates": [[18, "interpretation-of-the-predicates"]], "Intersecting Product": [[65, "intersecting-product"]], "Intersection of medians": [[74, "intersection-of-medians"]], "Introducing the Domains of the poly module": [[201, "introducing-the-domains-of-the-poly-module"]], "Introducing the domainmatrix of the poly module": [[200, "introducing-the-domainmatrix-of-the-poly-module"]], "Introduction": [[12, "introduction"], [16, "introduction"], [35, "introduction"], [42, "introduction"], [43, "introduction"], [44, "introduction"], [52, "introduction"], [64, "introduction"], [74, "introduction"], [92, "introduction"], [126, "introduction"], [143, "introduction"], [181, "introduction"], [192, "introduction"], [197, "introduction"], [198, "introduction"], [199, "introduction"], [206, "introduction"], [210, "introduction"], [265, "introduction"], [282, "introduction"]], "Introduction to Kinematics": [[194, "introduction-to-kinematics"]], "Introductory Tutorial": [[276, "introductory-tutorial"], [281, "introductory-tutorial"]], "Inverse Trig Functions": [[12, "inverse-trig-functions"]], "Iterables": [[249, "module-sympy.utilities.iterables"]], "Iteration over sets": [[219, "iteration-over-sets"]], "Jacobi Polynomials": [[70, "jacobi-polynomials"]], "Javascript Code printing": [[211, "module-sympy.printing.jscode"]], "Joint (Docstrings)": [[120, "module-sympy.physics.mechanics.joint"]], "Joint Types": [[231, "joint-types"]], "Joints Framework (Docstrings)": [[120, "joints-framework-docstrings"]], "Joints Framework in Physics/Mechanics": [[137, "joints-framework-in-physics-mechanics"]], "Joints in Physics/Mechanics": [[137, "joints-in-physics-mechanics"]], "JointsMethod in Physics/Mechanics": [[137, "jointsmethod-in-physics-mechanics"]], "Julia code printing": [[211, "module-sympy.printing.julia"]], "K(x)": [[202, "id11"]], "K[x]": [[202, "k-x"]], "Kane\u2019s Method": [[130, "kane-s-method"]], "Kane\u2019s Method & Lagrange\u2019s Method (Docstrings)": [[121, "module-sympy.physics.mechanics.kane"]], "Kane\u2019s Method in Physics/Mechanics": [[138, "kane-s-method-in-physics-mechanics"], [138, "id2"]], "Key Invariant": [[283, null]], "Key Point": [[20, null]], "Keyword Arguments": [[12, "keyword-arguments"]], "Kinematics (Docstrings)": [[190, "module-sympy.physics.vector.point"]], "Kinematics in physics.vector": [[194, "kinematics-in-physics-vector"]], "Kinetic Energy": [[141, "kinetic-energy"]], "LaTeX Recommendations": [[7, "latex-recommendations"]], "Lagrange\u2019s Method": [[130, "lagrange-s-method"]], "Lagrange\u2019s Method in Physics/Mechanics": [[139, "lagrange-s-method-in-physics-mechanics"], [139, "id1"]], "Lagrangian": [[141, "lagrangian"]], "Laguerre Polynomials": [[70, "laguerre-polynomials"]], "LambdaPrinter": [[211, "module-sympy.printing.lambdarepr"]], "Lambdify": [[103, "lambdify"], [250, "module-sympy.utilities.lambdify"]], "LatexPrinter": [[211, "module-sympy.printing.latex"]], "Legendre Polynomials": [[70, "legendre-polynomials"]], "Level Zero": [[204, "level-zero"]], "Lie Algebra": [[91, "module-sympy.liealgebras"]], "Lie heuristics": [[227, "lie-heuristics"]], "Limitations": [[18, "limitations"], [25, "limitations"], [86, "limitations"]], "Limitations and Issues": [[126, "limitations-and-issues"]], "Limitations of Inequality Reduction Using SymPy": [[24, "limitations-of-inequality-reduction-using-sympy"]], "Limitations on Types of Inequalities That SymPy Can Solve": [[24, "limitations-on-types-of-inequalities-that-sympy-can-solve"]], "Limits": [[218, "limits"], [278, "limits"]], "Limits of Sequences": [[216, "limits-of-sequences"]], "Linear Momentum": [[141, "linear-momentum"]], "Linear algebra": [[98, "linear-algebra"]], "Linear space representation": [[181, "linear-space-representation"]], "Linearization": [[116, "linearization"]], "Linearization (Docstrings)": [[122, "module-sympy.physics.mechanics.linearize"]], "Linearization in Physics/Mechanics": [[140, "linearization-in-physics-mechanics"]], "Linearizing Kane\u2019s Equations": [[140, "linearizing-kane-s-equations"]], "Linearizing Lagrange\u2019s Equations": [[140, "linearizing-lagrange-s-equations"]], "Lines": [[75, "module-sympy.geometry.line"]], "Links": [[143, "links"]], "List (all_roots, real_roots, nroots)": [[22, "list-all-roots-real-roots-nroots"]], "List Of Values": [[14, "list-of-values"]], "List of Dictionaries": [[14, "list-of-dictionaries"]], "List of Tuples": [[14, "list-of-tuples"]], "List of active deprecations": [[10, "list-of-active-deprecations"]], "List of dictionaries (solve)": [[22, "list-of-dictionaries-solve"]], "Lists": [[12, "lists"]], "Literature": [[181, "literature"], [205, "literature"], [210, "literature"]], "Local Installation": [[1, "local-installation"], [1, "id5"]], "Locating new systems": [[261, "locating-new-systems"]], "Logic": [[3, "logic"], [92, "module-sympy.logic"], [267, "logic"], [270, "logic"]], "Loose Ends": [[221, "loose-ends"]], "Low Index Subgroups": [[44, "low-index-subgroups"]], "MPQ": [[202, "mpq"]], "Mac": [[1, "mac"]], "Make Your Equation Into an Expression That Equals Zero": [[26, "make-your-equation-into-an-expression-that-equals-zero"]], "Making a Contribution": [[9, "making-a-contribution"]], "Manipulating expressions": [[92, "manipulating-expressions"]], "Manipulation of dense, multivariate polynomials": [[204, "manipulation-of-dense-multivariate-polynomials"]], "Manipulation of dense, univariate polynomials with finite field coefficients": [[204, "manipulation-of-dense-univariate-polynomials-with-finite-field-coefficients"]], "Manipulation of rational functions": [[207, "manipulation-of-rational-functions"]], "Manipulation of sparse, distributed polynomials and vectors": [[204, "manipulation-of-sparse-distributed-polynomials-and-vectors"]], "Maple code printing": [[211, "module-sympy.printing.maple"]], "Mass": [[141, "mass"]], "Masses, Inertias & Particles, RigidBodys (Docstrings)": [[123, "module-sympy.physics.mechanics.particle"]], "Masses, Inertias, Particles and Rigid Bodies in Physics/Mechanics": [[141, "masses-inertias-particles-and-rigid-bodies-in-physics-mechanics"]], "Math": [[7, "math"]], "MathML": [[287, "mathml"]], "MathMLPrinter": [[211, "module-sympy.printing.mathml"]], "Mathematica code printing": [[211, "module-sympy.printing.mathematica"]], "Mathematical Equivalents": [[143, "mathematical-equivalents"]], "Mathematical Exactness, Completeness of List of Roots, and Speed": [[22, "mathematical-exactness-completeness-of-list-of-roots-and-speed"]], "Mathematical Operators": [[12, "mathematical-operators"]], "Mathieu Functions": [[70, "module-sympy.functions.special.mathieu_functions"]], "Matrices": [[97, "module-sympy.matrices"], [115, "module-sympy.physics.matrices"], [267, "matrices"], [271, "matrices"], [284, "matrices"]], "Matrices (linear algebra)": [[98, "module-sympy.matrices.matrices"]], "Matrix": [[39, "matrix"]], "Matrix Base Classes": [[98, "matrix-base-classes"]], "Matrix Constructors": [[284, "matrix-constructors"]], "Matrix Distributions": [[231, "matrix-distributions"]], "Matrix Exceptions": [[98, "matrix-exceptions"]], "Matrix Expressions": [[95, "module-sympy.matrices.expressions"]], "Matrix Expressions Core Reference": [[95, "matrix-expressions-core-reference"]], "Matrix Functions": [[98, "matrix-functions"]], "Matrix Normal Forms": [[99, "matrix-normal-forms"]], "Matrix Usually Must Be Square": [[27, "matrix-usually-must-be-square"]], "Mechanics": [[136, "mechanics"], [231, "module-sympy.stats.rv"]], "Mechanics API Reference": [[119, "mechanics-api-reference"]], "Mechanism of the assumptions system": [[18, "mechanism-of-the-assumptions-system"]], "Medium": [[147, "module-sympy.physics.optics.medium"]], "Meijer G-Functions of Finite Confluence": [[221, "meijer-g-functions-of-finite-confluence"]], "Memoization": [[251, "module-sympy.utilities.memoization"]], "Methods": [[235, "module-sympy.tensor.index_methods"]], "Methods for Solving Matrix Equations": [[27, "methods-for-solving-matrix-equations"]], "Misc": [[38, "misc"]], "Miscellaneous": [[68, "miscellaneous"], [252, "module-sympy.utilities.misc"]], "Miscellaneous Notes": [[74, "miscellaneous-notes"]], "Miscellaneous _eval_* methods": [[20, "miscellaneous-eval-methods"]], "Mixing Poly and non-polynomial expressions in binary operations": [[10, "mixing-poly-and-non-polynomial-expressions-in-binary-operations"]], "Modular GCD": [[204, "modular-gcd"]], "Module Homomorphisms": [[206, "module-homomorphisms"]], "Module Homomorphisms and Syzygies": [[198, "module-homomorphisms-and-syzygies"]], "Module structure": [[224, "module-structure"]], "Modules sympy.tensor.array.expressions.conv_* renamed to sympy.tensor.array.expressions.from_*": [[10, "modules-sympy-tensor-array-expressions-conv-renamed-to-sympy-tensor-array-expressions-from"]], "Modules, Ideals and their Elementary Properties": [[198, "modules-ideals-and-their-elementary-properties"]], "Monomials encoded as tuples": [[207, "monomials-encoded-as-tuples"]], "More": [[180, "more"]], "More Intuitive Series Expansion": [[218, "more-intuitive-series-expansion"]], "More about Coordinate Systems": [[261, "more-about-coordinate-systems"]], "More examples": [[179, "more-examples"]], "Moving Around in the Parameter Space": [[221, "moving-around-in-the-parameter-space"]], "Multi Degree of Freedom Holonomic System": [[131, "multi-degree-of-freedom-holonomic-system"]], "Multiplication": [[206, "multiplication"]], "Multivariate GCD and factorization": [[210, "multivariate-gcd-and-factorization"]], "Multivariate factoring over algebraic numbers": [[210, "multivariate-factoring-over-algebraic-numbers"]], "Mutable attributes in sympy.diffgeom": [[10, "mutable-attributes-in-sympy-diffgeom"]], "M\u00f6bius Transform": [[65, "mobius-transform"]], "N-dim array": [[232, "module-sympy.tensor.array"]], "N-dim array expressions": [[233, "module-sympy.tensor.array.expressions"]], "Named Groups": [[50, "module-sympy.combinatorics.named_groups"]], "Narrative Documentation Guidelines": [[7, "narrative-documentation-guidelines"]], "New Joint coordinate format": [[10, "new-joint-coordinate-format"]], "New Joint intermediate frames": [[10, "new-joint-intermediate-frames"]], "New Mathematica code parser": [[10, "new-mathematica-code-parser"]], "Nilpotent, Abelian and Cyclic Numbers": [[48, "module-sympy.combinatorics.group_numbers"]], "Non-Expr objects in a Matrix": [[10, "non-expr-objects-in-a-matrix"]], "Non-tuple iterable for the first argument to Lambda": [[10, "non-tuple-iterable-for-the-first-argument-to-lambda"]], "Nonminimal Coordinates Pendulum": [[130, "nonminimal-coordinates-pendulum"]], "Normalizing simple rational functions": [[210, "normalizing-simple-rational-functions"]], "Not All Equations Can Be Solved": [[22, "not-all-equations-can-be-solved"], [25, "not-all-equations-can-be-solved"], [26, "not-all-equations-can-be-solved"], [29, "not-all-equations-can-be-solved"]], "Not All Results Are Returned for Periodic Functions": [[24, "not-all-results-are-returned-for-periodic-functions"]], "Not All Systems of Equations Can be Solved": [[30, "not-all-systems-of-equations-can-be-solved"]], "Not All Systems of Inequalities Can Be Reduced": [[24, "not-all-systems-of-inequalities-can-be-reduced"]], "Not Public API": [[4, null]], "Not all Equations Can be Solved": [[28, "not-all-equations-can-be-solved"]], "Notation": [[221, "notation"]], "Note": [[20, null]], "Notes": [[62, "notes"], [218, "notes"], [220, "notes"]], "Ntheory Class Reference": [[102, "ntheory-class-reference"]], "Ntheory Functions Reference": [[102, "ntheory-functions-reference"]], "Nullspace": [[284, "nullspace"]], "Number Fields": [[206, "number-fields"]], "Number Theoretic Transform": [[65, "number-theoretic-transform"]], "Number Theory": [[39, "number-theory"], [102, "module-sympy.ntheory.generate"], [267, "number-theory"], [272, "number-theory"]], "Numeric Computation": [[103, "numeric-computation"]], "Numeric Integrals": [[89, "numeric-integrals"]], "Numeric Solutions": [[31, "numeric-solutions"]], "Numerical Evaluation": [[66, "numerical-evaluation"]], "Numerical Evaluation and Visualization": [[143, "numerical-evaluation-and-visualization"]], "Numerical Evaluation with evalf()": [[20, "numerical-evaluation-with-evalf"]], "Numerical evaluation": [[84, "numerical-evaluation"]], "Numerical simplification": [[66, "numerical-simplification"]], "Numerically Evaluate CRootOf Roots": [[22, "numerically-evaluate-crootof-roots"]], "Numerically Integrating Code": [[116, "numerically-integrating-code"]], "Numerically Solve an ODE in SciPy": [[29, "numerically-solve-an-ode-in-scipy"]], "Numpy Utility Functions": [[98, "numpy-utility-functions"]], "ODE": [[227, "ode"]], "Octave (and Matlab) Code printing": [[211, "module-sympy.printing.octave"]], "Old (dense) polynomial rings": [[201, "old-dense-polynomial-rings"]], "Operations on entries": [[98, "operations-on-entries"]], "Operations on holonomic functions": [[84, "operations-on-holonomic-functions"]], "Operator": [[165, "module-sympy.physics.quantum.operator"]], "Operator/State Helper Functions": [[166, "module-sympy.physics.quantum.operatorset"]], "Optics Module": [[146, "optics-module"]], "Option 1: Define a Function Without Including Its Independent Variable": [[29, "option-1-define-a-function-without-including-its-independent-variable"]], "Option 2: Define a Function of an Independent Variable": [[29, "option-2-define-a-function-of-an-independent-variable"]], "Optional Dependencies": [[3, "optional-dependencies"]], "Optional SymEngine Backend": [[3, "optional-symengine-backend"]], "Options": [[204, "module-sympy.polys.polyoptions"]], "Options That Can Speed up solve()": [[26, "options-that-can-speed-up-solve"], [30, "options-that-can-speed-up-solve"], [31, "options-that-can-speed-up-solve"]], "Options to Define an ODE": [[29, "options-to-define-an-ode"]], "Order": [[39, "order"]], "Order Terms": [[218, "order-terms"]], "Orderings of monomials": [[207, "orderings-of-monomials"]], "Ordinary Differential Equation Solving Hints": [[29, "ordinary-differential-equation-solving-hints"]], "Ordinary Differential equations (ODEs)": [[229, "ordinary-differential-equations-odes"], [230, "ordinary-differential-equations-odes"]], "Orienter classes (docstrings)": [[258, "orienter-classes-docstrings"]], "Orienting AND Locating new systems": [[261, "orienting-and-locating-new-systems"]], "Orienting new systems": [[261, "orienting-new-systems"]], "Orthogonal Polynomials": [[70, "module-sympy.functions.special.polynomials"]], "Orthogonal polynomials": [[207, "orthogonal-polynomials"]], "Other Methods": [[20, "other-methods"], [33, "other-methods"]], "Other expression-dependent methods": [[261, "other-expression-dependent-methods"]], "Other is_* properties": [[18, "other-is-properties"]], "Overview": [[87, "overview"]], "Overview of Facilities": [[44, "overview-of-facilities"]], "Overview of functionalities": [[52, "overview-of-functionalities"]], "PDE": [[228, "pde"]], "PDF Documentation": [[1, "pdf-documentation"]], "PKGDATA": [[253, "module-sympy.utilities.pkgdata"]], "Parse a String Representing the Equation": [[31, "parse-a-string-representing-the-equation"]], "Parsing": [[3, "parsing"], [104, "module-sympy.parsing"]], "Parsing Functions Reference": [[104, "parsing-functions-reference"]], "Parsing Transformations Reference": [[104, "parsing-transformations-reference"]], "Partial Differential Equations (PDEs)": [[229, "partial-differential-equations-pdes"], [230, "partial-differential-equations-pdes"]], "Partial fraction decomposition": [[207, "partial-fraction-decomposition"], [210, "partial-fraction-decomposition"]], "Particle": [[141, "particle"]], "Particle in a Box": [[167, "module-sympy.physics.quantum.piab"]], "Partitions": [[51, "module-sympy.combinatorics.partitions"]], "Passing the arguments to lambdify as a set": [[10, "passing-the-arguments-to-lambdify-as-a-set"]], "Pauli Algebra": [[151, "module-sympy.physics.paulialgebra"]], "Performance improvements": [[38, "performance-improvements"]], "Permutation Groups": [[53, "module-sympy.combinatorics.perm_groups"]], "Permutations": [[54, "module-sympy.combinatorics.permutations"]], "Philosophy behind unit systems": [[181, "philosophy-behind-unit-systems"]], "Physical Equivalents": [[143, "physical-equivalents"]], "Physical quantities": [[183, "module-sympy.physics.units.quantities"]], "Physics": [[267, "physics"], [273, "module-sympy.physics"]], "Physics Vector API": [[189, "physics-vector-api"]], "Piecewise": [[68, "piecewise"]], "Plane": [[76, "module-sympy.geometry.plane"]], "Plot Class": [[197, "plot-class"]], "Plot Window Controls": [[197, "plot-window-controls"]], "PlotGrid Class": [[197, "plotgrid-class"]], "Plotting": [[3, "plotting"], [197, "module-sympy.plotting.plot"]], "Plotting Function Reference": [[197, "plotting-function-reference"]], "Plotting Geometric Entities": [[197, "plotting-geometric-entities"]], "Plotting with ASCII art": [[197, "plotting-with-ascii-art"]], "Point Velocity & Acceleration": [[194, "point-velocity-acceleration"]], "Points": [[77, "module-sympy.geometry.point"], [260, "points"]], "Polar Numbers and Branched Functions": [[87, "polar-numbers-and-branched-functions"]], "Polarization": [[148, "module-sympy.physics.optics.polarization"]], "Pole-Zero Plot": [[110, "pole-zero-plot"]], "Poly solvers": [[209, "poly-solvers"]], "PolyRing vs PolynomialRing": [[201, "polyring-vs-polynomialring"]], "Polycyclic Groups": [[52, "polycyclic-groups"]], "Polygons": [[78, "module-sympy.geometry.polygon"]], "Polyhedron": [[55, "module-sympy.combinatorics.polyhedron"]], "Polynomial Manipulation": [[203, "polynomial-manipulation"]], "Polynomial factorization algorithms": [[204, "polynomial-factorization-algorithms"]], "Polynomial ring domains": [[201, "polynomial-ring-domains"]], "Polynomial/Rational Function Simplification": [[288, "polynomial-rational-function-simplification"]], "Polynomials": [[199, "polynomials"]], "Polynomials Manipulation Module Reference": [[207, "module-sympy.polys"]], "Possible Issues": [[284, "possible-issues"]], "Potential Energy": [[141, "potential-energy"]], "Potential Issues": [[140, "potential-issues"]], "Potential Issues/Advanced Topics/Future Features in Physics/Mechanics": [[116, "potential-issues-advanced-topics-future-features-in-physics-mechanics"]], "Potential Issues/Advanced Topics/Future Features in Physics/Vector Module": [[185, "potential-issues-advanced-topics-future-features-in-physics-vector-module"]], "Power sets": [[219, "module-sympy.sets.powerset"]], "Powers": [[288, "powers"]], "Precedence": [[211, "module-sympy.printing.precedence"]], "Predefined types": [[43, "predefined-types"]], "Predicate": [[38, "predicate"]], "Predicates": [[18, "predicates"], [39, "module-sympy.assumptions.predicates"]], "Preliminaries": [[286, "preliminaries"]], "Pretty-Printing Implementation Helpers": [[211, "module-sympy.printing.pretty.pretty_symbology"]], "PrettyPrinter Class": [[211, "prettyprinter-class"]], "Prevent expression evaluation": [[283, "prevent-expression-evaluation"]], "Preview": [[211, "preview"]], "Prime Decomposition": [[206, "prime-decomposition"]], "Printer Class": [[211, "module-sympy.printing.printer"]], "Printers": [[287, "printers"]], "Printing": [[3, "printing"], [20, "printing"], [90, "module-sympy.interactive.printing"], [116, "printing"], [185, "printing"], [211, "printing"], [287, "printing"]], "Printing (Docstrings)": [[124, "printing-docstrings"], [191, "printing-docstrings"]], "Printing Functions": [[287, "printing-functions"]], "ProductSet(iterable)": [[10, "productset-iterable"]], "Products and contractions": [[232, "products-and-contractions"]], "Programmatically Extract Parameter Symbols": [[25, "programmatically-extract-parameter-symbols"]], "Prufer Sequences": [[56, "module-sympy.combinatorics.prufer"]], "Public API": [[4, null]], "Put Your Equation Into Eq Form": [[26, "put-your-equation-into-eq-form"]], "Pyglet Plotting": [[197, "module-sympy.plotting.pygletplot"]], "Python numbers vs. SymPy Numbers": [[12, "python-numbers-vs-sympy-numbers"]], "Python utilities (sympy.codegen.pyutils)": [[43, "module-sympy.codegen.pyutils"]], "PythonCodePrinter": [[211, "module-sympy.printing.pycode"]], "PythonPrinter": [[211, "module-sympy.printing.python"]], "QFT": [[169, "module-sympy.physics.quantum.qft"]], "QQ": [[202, "qq"]], "QQ<a>": [[202, "qq-a"]], "QQ_I": [[202, "qq-i"]], "QS function": [[102, "qs-function"]], "Qapply": [[168, "module-sympy.physics.quantum.qapply"]], "Quadrilateral problem": [[262, "quadrilateral-problem"]], "Quantities": [[181, "quantities"]], "Quantum Computation": [[163, "quantum-computation"]], "Quantum Functions": [[163, "quantum-functions"]], "Quantum Harmonic Oscillator in 1-D": [[152, "module-sympy.physics.qho_1d"]], "Quantum Harmonic Oscillator in 3-D": [[177, "module-sympy.physics.sho"]], "Quantum Mechanics": [[163, "quantum-mechanics"]], "Quaternion Reference": [[35, "module-sympy.algebras"]], "Qubit": [[170, "module-sympy.physics.quantum.qubit"]], "Querying": [[38, "querying"]], "Questions": [[33, "questions"]], "Quick Tip": [[277, null], [278, null], [280, null], [283, null], [284, null]], "Quotient ring": [[202, "quotient-ring"]], "RCodePrinter": [[211, "module-sympy.printing.rcode"]], "RR": [[202, "rr"]], "RREF": [[284, "rref"]], "Ramp-Response Plot": [[110, "ramp-response-plot"]], "Random": [[62, "module-sympy.core.random"]], "Random Variable Types": [[231, "random-variable-types"]], "Randomised Testing": [[241, "module-sympy.testing.randtest"]], "Rational Algorithm": [[213, "rational-algorithm"]], "Rational Riccati Solver": [[227, "rational-riccati-solver"]], "Rational function fields": [[201, "rational-function-fields"]], "Real and complex fields": [[201, "real-and-complex-fields"]], "Recommended Optional Dependencies": [[3, "recommended-optional-dependencies"]], "Recurrence Equations": [[229, "module-sympy.solvers.recurr"]], "Recursing through an Expression Tree": [[283, "recursing-through-an-expression-tree"]], "Recursive Sequences": [[217, "recursive-sequences"]], "Reduce One or a System of Inequalities for a Single Variable Algebraically": [[24, "reduce-one-or-a-system-of-inequalities-for-a-single-variable-algebraically"]], "Reduce a System of Inequalities Algebraically": [[24, "reduce-a-system-of-inequalities-algebraically"]], "Reducing One Inequality for a Single Variable Algebraically": [[24, "reducing-one-inequality-for-a-single-variable-algebraically"]], "Reducing a System of Inequalities for a Single Variable Algebraically": [[24, "reducing-a-system-of-inequalities-for-a-single-variable-algebraically"]], "Reduction of Order": [[221, "reduction-of-order"]], "Redundant static methods in carmichael": [[10, "redundant-static-methods-in-carmichael"]], "Reference": [[98, "reference"], [198, "reference"], [204, "reference"], [208, "reference"], [218, "reference"], [218, "id2"], [218, "id4"], [218, "id7"], [218, "id8"]], "Reference docs for the Poly Domains": [[202, "reference-docs-for-the-poly-domains"]], "ReferenceFrame": [[185, "referenceframe"]], "References": [[45, "references"], [62, "references"], [74, "references"], [80, "references"], [89, "references"], [148, "references"], [151, "references"], [196, "references"], [220, "references"], [221, "references"], [224, "references"], [230, "references"]], "References for Physics/Mechanics": [[142, "references-for-physics-mechanics"]], "References for Physics/Vector": [[193, "references-for-physics-vector"]], "References for Vector": [[264, "references-for-vector"]], "References for the above definitions": [[18, "references-for-the-above-definitions"]], "Refine": [[40, "module-sympy.assumptions.refine"]], "Reidemeister Schreier algorithm": [[44, "reidemeister-schreier-algorithm"]], "Relating Sets of Basis Vectors": [[195, "relating-sets-of-basis-vectors"]], "Relations between different symbols": [[18, "relations-between-different-symbols"]], "Release notes entry": [[4, "release-notes-entry"]], "Reminder": [[20, null]], "Report a Bug": [[22, "report-a-bug"], [24, "report-a-bug"], [25, "report-a-bug"], [26, "report-a-bug"], [27, "report-a-bug"], [28, "report-a-bug"], [29, "report-a-bug"], [30, "report-a-bug"], [31, "report-a-bug"]], "Represent": [[171, "module-sympy.physics.quantum.represent"]], "Representation of holonomic functions in SymPy": [[85, "representation-of-holonomic-functions-in-sympy"]], "Representing Branched Functions on the Argand Plane": [[87, "representing-branched-functions-on-the-argand-plane"]], "Representing Roots": [[22, "representing-roots"]], "Representing algebraic numbers": [[206, "representing-algebraic-numbers"]], "Representing expressions symbolically": [[201, "representing-expressions-symbolically"]], "Required dependencies": [[1, "required-dependencies"]], "Residues": [[218, "residues"]], "Restrict the Domain of Solutions": [[26, "restrict-the-domain-of-solutions"]], "Return Unevaluated Integrals": [[29, "return-unevaluated-integrals"]], "Rewriting and Simplification": [[20, "rewriting-and-simplification"]], "Riemann Zeta and Related Functions": [[70, "module-sympy.functions.special.zeta_functions"]], "Rigid Body": [[141, "rigid-body"]], "Rotation matrices": [[98, "rotation-matrices"]], "Rough Autolev-SymPy Equivalents": [[143, "rough-autolev-sympy-equivalents"]], "Routine": [[244, "routine"]], "Rules": [[220, "rules"]], "Run SymPy": [[33, "run-sympy"]], "Run Tests": [[242, "module-sympy.testing.runtests"]], "Run the Tests": [[5, "run-the-tests"]], "Running the Benchmarks": [[3, "running-the-benchmarks"]], "Running the Tests": [[3, "running-the-tests"]], "Runtime Installation": [[104, "runtime-installation"]], "Rust code printing": [[211, "module-sympy.printing.rust"]], "SMT-Lib printing": [[211, "module-sympy.printing.smtlib"]], "Sage": [[3, "sage"]], "Sample Docstring": [[6, "sample-docstring"]], "Scalar and Vector Field Functionality": [[192, "scalar-and-vector-field-functionality"], [263, "scalar-and-vector-field-functionality"]], "Scalar and vector fields": [[263, "scalar-and-vector-fields"]], "Scalar potential functions": [[192, "scalar-potential-functions"], [263, "scalar-potential-functions"]], "Search based solver and step-by-step solution": [[230, "search-based-solver-and-step-by-step-solution"]], "Second Quantization": [[176, "module-sympy.physics.secondquant"]], "Sections": [[6, "sections"]], "See": [[262, "see"]], "See Also": [[62, "see-also"], [249, "see-also"]], "Select a Specific Solver": [[29, "select-a-specific-solver"]], "Sequences": [[217, "sequences"]], "Sequences Base": [[217, "sequences-base"]], "Series": [[215, "series"]], "Series Acceleration": [[218, "series-acceleration"]], "Series Classes": [[197, "series-classes"]], "Series Expansion": [[278, "series-expansion"]], "Series Expansions": [[218, "series-expansions"]], "Series Manipulation using Polynomials": [[208, "series-manipulation-using-polynomials"]], "Series expansion": [[84, "series-expansion"]], "Session": [[90, "module-sympy.interactive.session"]], "SetKind": [[219, "setkind"]], "Sets": [[39, "sets"], [219, "sets"]], "Setting up Pretty Printing": [[287, "setting-up-pretty-printing"]], "Shape": [[284, "shape"]], "Shor\u2019s Algorithm": [[172, "module-sympy.physics.quantum.shor"]], "Silencing SymPy Deprecation Warnings": [[10, "silencing-sympy-deprecation-warnings"]], "Simple univariate polynomial factorization": [[210, "simple-univariate-polynomial-factorization"]], "Simplification": [[288, "simplification"]], "Simplification and equivalence-testing": [[92, "simplification-and-equivalence-testing"]], "Simplified remainder sequences": [[204, "simplified-remainder-sequences"]], "Simplify": [[222, "simplify"], [223, "simplify"]], "Single Dictionary": [[14, "single-dictionary"]], "Single Equals Sign": [[12, "single-equals-sign"]], "Singleton Sequences": [[217, "singleton-sequences"]], "Singleton Sets": [[219, "singleton-sets"]], "Singularities": [[41, "singularities"]], "So Which Should I Use?": [[103, "so-which-should-i-use"]], "Solution": [[262, "solution"], [262, "id2"]], "Solve Equations": [[23, "solve-equations"]], "Solve Into a Solution Given as a Dictionary": [[30, "solve-into-a-solution-given-as-a-dictionary"]], "Solve One or a System of Equations Numerically": [[28, "solve-one-or-a-system-of-equations-numerically"]], "Solve Output by Type": [[14, "solve-output-by-type"]], "Solve Results in a Set": [[30, "solve-results-in-a-set"]], "Solve a Diophantine Equation Algebraically": [[25, "solve-a-diophantine-equation-algebraically"]], "Solve a Matrix Equation": [[27, "solve-a-matrix-equation"]], "Solve a Matrix Equation Algebraically": [[27, "solve-a-matrix-equation-algebraically"]], "Solve a System of Equations Algebraically": [[30, "solve-a-system-of-equations-algebraically"]], "Solve a System of Equations Numerically": [[28, "solve-a-system-of-equations-numerically"]], "Solve a System of Linear Equations Algebraically": [[30, "solve-a-system-of-linear-equations-algebraically"]], "Solve a System of Nonlinear Equations Algebraically": [[30, "solve-a-system-of-nonlinear-equations-algebraically"]], "Solve an Equation Algebraically": [[26, "solve-an-equation-algebraically"], [26, "id1"]], "Solve an Ordinary Differential Equation (ODE)": [[29, "solve-an-ordinary-differential-equation-ode"]], "Solve an Ordinary Differential Equation (ODE) Algebraically": [[29, "solve-an-ordinary-differential-equation-ode-algebraically"]], "Solve and Use Results in a Dictionary": [[30, "solve-and-use-results-in-a-dictionary"]], "Solvers": [[225, "solvers"], [229, "module-sympy.solvers"], [289, "solvers"]], "Solveset": [[230, "solveset"]], "Solveset Module Reference": [[230, "solveset-module-reference"]], "Solving Beam Bending Problems using Singularity Functions": [[106, "solving-beam-bending-problems-using-singularity-functions"]], "Solving Differential Equations": [[289, "solving-differential-equations"]], "Solving Equations": [[199, "solving-equations"]], "Solving Equations Algebraically": [[289, "solving-equations-algebraically"]], "Solving Functions": [[26, "solving-functions"]], "Solving Guidance": [[31, "solving-guidance"]], "Solving Several Matrix Equations With the Same Matrix": [[27, "solving-several-matrix-equations-with-the-same-matrix"]], "Solving the Main Problems": [[206, "solving-the-main-problems"]], "Some Key Differences": [[143, "some-key-differences"]], "Some ODEs Cannot Be Solved Explicitly, Only Implicitly": [[29, "some-odes-cannot-be-solved-explicitly-only-implicitly"]], "Some traversal functions have been moved": [[10, "some-traversal-functions-have-been-moved"]], "Sorting": [[62, "sorting"]], "Source Code Inspection": [[254, "module-sympy.utilities.source"]], "Sparse Matrices": [[100, "module-sympy.matrices.sparse"]], "Sparse Tools": [[101, "module-sympy.matrices.sparsetools"]], "Sparse polynomial representation": [[201, "sparse-polynomial-representation"]], "Sparse polynomials": [[202, "sparse-polynomials"]], "Sparse rational functions": [[202, "sparse-rational-functions"]], "SparseMatrix Class Reference": [[100, "sparsematrix-class-reference"]], "Special": [[70, "special"]], "Special C math functions (sympy.codegen.cfunctions)": [[43, "module-sympy.codegen.cfunctions"]], "Special Functions": [[288, "special-functions"]], "Special Sets": [[219, "module-sympy.sets.fancysets"]], "Special Symbols": [[12, "special-symbols"]], "Special polynomials": [[207, "special-polynomials"]], "Specify Initial Conditions or Boundary Conditions": [[29, "specify-initial-conditions-or-boundary-conditions"], [29, "id1"]], "Specify the Order of Symbols in the Result": [[25, "specify-the-order-of-symbols-in-the-result"]], "Specifying Intervals for Variables": [[197, "specifying-intervals-for-variables"]], "Speed up Solving Matrix Equations": [[27, "speed-up-solving-matrix-equations"]], "Spelling and Punctuation": [[7, "spelling-and-punctuation"]], "Spherical Harmonics": [[70, "spherical-harmonics"]], "Spin": [[173, "module-sympy.physics.quantum.spin"]], "Sqrt is not a Function": [[12, "sqrt-is-not-a-function"]], "Square-free factorization": [[199, "square-free-factorization"]], "State": [[174, "module-sympy.physics.quantum.state"]], "States and Operators": [[163, "states-and-operators"]], "Statistics": [[3, "statistics"]], "Stats": [[231, "module-sympy.stats"]], "Step-Response Plot": [[110, "step-response-plot"]], "Stochastic Processes": [[231, "stochastic-processes"]], "StrPrinter": [[211, "module-sympy.printing.str"]], "Structure of Equations": [[138, "structure-of-equations"], [139, "structure-of-equations"]], "Style Preferences": [[7, "style-preferences"]], "Subgroups of Finite Index": [[44, "subgroups-of-finite-index"]], "Submodules": [[74, "submodules"]], "Subresultant sequence": [[204, "subresultant-sequence"]], "Subs/evalf": [[103, "subs-evalf"]], "Subset Convolution": [[65, "subset-convolution"]], "Subsets": [[57, "module-sympy.combinatorics.subsets"]], "Substitute Solutions From solve() Into an Expression": [[26, "substitute-solutions-from-solve-into-an-expression"]], "Substitute the Result Into an Expression": [[28, "substitute-the-result-into-an-expression"]], "Substitution": [[116, "substitution"], [185, "substitution"], [277, "substitution"]], "Sums and integrals": [[66, "sums-and-integrals"]], "Support for symbols in exponents": [[210, "support-for-symbols-in-exponents"]], "SymPy Can Reduce for Only One Symbol of Interest Per Inequality": [[24, "sympy-can-reduce-for-only-one-symbol-of-interest-per-inequality"]], "SymPy Docstrings Style Guide": [[6, "sympy-docstrings-style-guide"]], "SymPy Expression Reference": [[104, "module-sympy.parsing.sym_expr"]], "SymPy Features": [[279, "sympy-features"]], "SymPy Logos": [[1, "sympy-logos"]], "SymPy Mechanics for Autolev Users": [[143, "sympy-mechanics-for-autolev-users"]], "SymPy Special Topics": [[17, "sympy-special-topics"]], "SymPy operations on Vectors": [[260, "sympy-operations-on-vectors"]], "Symbolic Boolean vs three valued bool": [[19, "symbolic-boolean-vs-three-valued-bool"]], "Symbolic Expressions": [[12, "symbolic-expressions"]], "Symbolic Systems in Physics/Mechanics": [[144, "symbolic-systems-in-physics-mechanics"]], "Symbolic and fuzzy booleans": [[19, "symbolic-and-fuzzy-booleans"]], "Symbolic root-finding algorithms": [[207, "symbolic-root-finding-algorithms"]], "SymbolicSystem (Docstrings)": [[125, "module-sympy.physics.mechanics.system"]], "SymbolicSystem Example Usage": [[144, "symbolicsystem-example-usage"]], "Symbols": [[12, "symbols"], [280, "symbols"]], "System of ODEs": [[227, "system-of-odes"]], "Systems of Equations With no Closed-Form Solution": [[30, "systems-of-equations-with-no-closed-form-solution"]], "Systems of Equations With no Solution": [[30, "systems-of-equations-with-no-solution"]], "Systems of Inequalities That Cannot Be Reduced Analytically": [[24, "systems-of-inequalities-that-cannot-be-reduced-analytically"]], "Systems of Inequalities Which Cannot Be Satisfied": [[24, "systems-of-inequalities-which-cannot-be-satisfied"]], "Systems of Polynomial Equations": [[229, "systems-of-polynomial-equations"]], "TODO and Bugs": [[89, "todo-and-bugs"]], "Table Lookups and Inverse Mellin Transforms": [[87, "table-lookups-and-inverse-mellin-transforms"]], "Tensor": [[234, "module-sympy.tensor"], [237, "module-sympy.tensor.tensor"]], "Tensor Canonicalization": [[58, "module-sympy.combinatorics.tensor_can"]], "Tensor Functions": [[70, "tensor-functions"]], "Tensor Operators": [[238, "module-sympy.tensor.toperators"]], "Tensor Product": [[175, "module-sympy.physics.quantum.tensorproduct"]], "Tensor.fun_eval and Tensor.__call__": [[10, "tensor-fun-eval-and-tensor-call"]], "TensorIndexType.data and related methods": [[10, "tensorindextype-data-and-related-methods"]], "TensorType": [[10, "tensortype"]], "Term Rewriting": [[212, "term-rewriting"]], "Test Utilities": [[59, "module-sympy.combinatorics.testutil"]], "Testing": [[239, "testing"]], "Testing if polynomials have common zeros": [[210, "testing-if-polynomials-have-common-zeros"]], "Testing-Only Dependencies": [[3, "testing-only-dependencies"]], "The (old) assumptions system": [[18, "the-old-assumptions-system"]], "The Construction of Collector": [[52, "the-construction-of-collector"]], "The Construction of Finitely Presented Groups": [[44, "the-construction-of-finitely-presented-groups"]], "The Construction of Polycyclic Groups": [[52, "the-construction-of-polycyclic-groups"]], "The Del operator": [[263, "the-del-operator"]], "The Fully Evaluated Case": [[20, "the-fully-evaluated-case"]], "The Fully Symbolic Case": [[20, "the-fully-symbolic-case"]], "The G-Function Integration Theorems": [[87, "the-g-function-integration-theorems"]], "The Gruntz Algorithm": [[218, "the-gruntz-algorithm"]], "The Inverse Laplace Transform of a G-function": [[87, "the-inverse-laplace-transform-of-a-g-function"]], "The ManagedProperties metaclass": [[10, "the-managedproperties-metaclass"]], "The Physics Vector Module": [[193, "the-physics-vector-module"]], "The Power of Symbolic Computation": [[282, "the-power-of-symbolic-computation"]], "The Problem": [[262, "the-problem"], [262, "id1"]], "The Subfield Problem": [[206, "the-subfield-problem"]], "The check argument to HadamardProduct, MatAdd and MatMul": [[10, "the-check-argument-to-hadamardproduct-matadd-and-matmul"]], "The dummy_fmt argument to TensorIndexType": [[10, "the-dummy-fmt-argument-to-tensorindextype"]], "The evaluate flag to differentiate_finite": [[10, "the-evaluate-flag-to-differentiate-finite"]], "The get_kronecker_delta() and get_epsilon() methods of TensorIndexType": [[10, "the-get-kronecker-delta-and-get-epsilon-methods-of-tensorindextype"]], "The get_segments attribute of plotting objects": [[10, "the-get-segments-attribute-of-plotting-objects"]], "The is_EmptySet attribute of sets": [[10, "the-is-emptyset-attribute-of-sets"]], "The max_degree and get_upper_degree properties of sympy.polys.multivariate_resultants.DixonResultant": [[10, "the-max-degree-and-get-upper-degree-properties-of-sympy-polys-multivariate-resultants-dixonresultant"]], "The mdft function in sympy.physics.matrices": [[10, "the-mdft-function-in-sympy-physics-matrices"]], "The metric argument to TensorIndexType": [[10, "the-metric-argument-to-tensorindextype"]], "The need for a reference": [[181, "the-need-for-a-reference"]], "The print_cyclic flag of sympy.combinatorics.Permutation": [[10, "the-print-cyclic-flag-of-sympy-combinatorics-permutation"]], "The private SparseMatrix._smat and DenseMatrix._mat attributes": [[10, "the-private-sparsematrix-smat-and-densematrix-mat-attributes"]], "The purpose of deprecation": [[4, "the-purpose-of-deprecation"]], "The set_potential_energy method in sympy.physics.mechanics": [[10, "the-set-potential-energy-method-in-sympy-physics-mechanics"]], "The string fallback in sympify()": [[10, "the-string-fallback-in-sympify"]], "The sympy.core.compatibility submodule": [[10, "the-sympy-core-compatibility-submodule"]], "The tensorhead() function": [[10, "the-tensorhead-function"]], "The tensorsymmetry() function": [[10, "the-tensorsymmetry-function"]], "The unicode argument and attribute to sympy.printing.pretty.stringpict.prettyForm and the sympy.printing.pretty.pretty_symbology.xstr function": [[10, "the-unicode-argument-and-attribute-to-sympy-printing-pretty-stringpict-prettyform-and-the-sympy-printing-pretty-pretty-symbology-xstr-function"]], "Third product rule for Del operator": [[262, "third-product-rule-for-del-operator"]], "Three Dimensions and Beyond": [[74, "three-dimensions-and-beyond"]], "Three-valued logic with fuzzy bools": [[19, "three-valued-logic-with-fuzzy-bools"]], "Three-valued logic with symbolic Booleans": [[19, "three-valued-logic-with-symbolic-booleans"]], "Timing Utilities": [[255, "module-sympy.utilities.timeutils"]], "Tone Preferences": [[7, "tone-preferences"]], "Tools for simplifying expressions using approximations (sympy.codegen.approximations)": [[43, "module-sympy.codegen.approximations"]], "Topics": [[267, "topics"], [274, "topics"]], "Tradeoffs": [[22, "tradeoffs"]], "Transforming new system": [[261, "transforming-new-system"]], "Transforms": [[65, "module-sympy.discrete.transforms"]], "Traversal": [[62, "module-sympy.core.traversal"]], "Tree Printing": [[211, "module-sympy.printing.tree"]], "Tree representation": [[201, "tree-representation"]], "Trigonometric": [[68, "trigonometric"]], "Trigonometric Functions": [[68, "trigonometric-functions"]], "Trigonometric Inverses": [[68, "trigonometric-inverses"]], "Trigonometric Simplification": [[288, "trigonometric-simplification"]], "Truss": [[107, "truss"]], "Truss (Docstrings)": [[108, "module-sympy.physics.continuum_mechanics.truss"]], "Truth Setting Expressions": [[74, "truth-setting-expressions"]], "Truth tables and related functions": [[92, "truth-tables-and-related-functions"]], "Try to avoid backwards incompatible changes in the first place": [[4, "try-to-avoid-backwards-incompatible-changes-in-the-first-place"]], "Tuples": [[12, "tuples"]], "Tutorial": [[224, "tutorial"]], "Tutorials": [[32, "tutorials"], [276, "tutorials"]], "Two Final Notes: ^ and /": [[280, "two-final-notes-and"]], "Types of Documentation": [[7, "types-of-documentation"]], "Understanding Expression Trees": [[283, "understanding-expression-trees"]], "Undocumented": [[204, "undocumented"]], "Unicode Pretty Printer": [[287, "unicode-pretty-printer"]], "Unifying domains": [[201, "unifying-domains"]], "Unit prefixes": [[182, "module-sympy.physics.units.prefixes"]], "Unit systems": [[180, "unit-systems"]], "Units": [[181, "units"]], "Units and unit systems": [[184, "module-sympy.physics.units.unitsystem"]], "Univariate GCD, resultant and factorization": [[210, "univariate-gcd-resultant-and-factorization"]], "Univariate factoring over Gaussian numbers": [[210, "univariate-factoring-over-gaussian-numbers"]], "Univariate factoring over various domains": [[210, "univariate-factoring-over-various-domains"]], "Usage": [[126, "usage"]], "Use Exact Values": [[31, "use-exact-values"]], "Use a Solution Given as a Dictionary": [[30, "use-a-solution-given-as-a-dictionary"]], "Use the Result": [[24, "use-the-result"]], "Use the Solution Result": [[22, "use-the-solution-result"], [25, "use-the-solution-result"], [26, "use-the-solution-result"], [27, "use-the-solution-result"], [28, "use-the-solution-result"], [29, "use-the-solution-result"]], "Use the Solution as a Vector": [[27, "use-the-solution-as-a-vector"]], "User Functions": [[224, "user-functions"], [227, "user-functions"], [228, "user-functions"]], "Uses and Current limitations": [[86, "uses-and-current-limitations"]], "Using Custom Color Functions": [[197, "using-custom-color-functions"]], "Using Orienter(s) and the orient_new method": [[261, "using-orienter-s-and-the-orient-new-method"]], "Using Vectors and Reference Frames": [[195, "using-vectors-and-reference-frames"]], "Using a method of CoordSys3D directly": [[261, "using-a-method-of-coordsys3d-directly"]], "Using a set for the condition in ConditionSet": [[10, "using-a-set-for-the-condition-in-conditionset"]], "Using energy functions in Mechanics": [[141, "using-energy-functions-in-mechanics"]], "Using integrate with Poly": [[10, "using-integrate-with-poly"]], "Using momenta functions in Mechanics": [[141, "using-momenta-functions-in-mechanics"]], "Using the Interactive Interface": [[197, "using-the-interactive-interface"]], "Using the nodes": [[43, "using-the-nodes"]], "Utilities": [[60, "module-sympy.combinatorics.util"], [149, "module-sympy.physics.optics.utils"], [206, "utilities"], [248, "module-sympy.utilities"], [267, "utilities"], [275, "utilities"]], "Utils": [[79, "module-sympy.geometry.util"]], "Variables": [[12, "variables"]], "Variables Assignment does not Create a Relation Between Expressions": [[12, "variables-assignment-does-not-create-a-relation-between-expressions"]], "Various sympy.utilities submodules have moved": [[10, "various-sympy-utilities-submodules-have-moved"]], "Vector": [[136, "vector"], [195, "vector"], [264, "vector"]], "Vector & ReferenceFrame": [[195, "vector-referenceframe"]], "Vector API": [[257, "vector-api"]], "Vector Algebra": [[195, "vector-algebra"]], "Vector Algebra, in physics.vector": [[195, "vector-algebra-in-physics-vector"]], "Vector Calculus": [[195, "vector-calculus"]], "Vector Calculus, in physics.vector": [[195, "vector-calculus-in-physics-vector"]], "Vector Operations": [[195, "vector-operations"]], "Vector: Kinematics": [[194, "vector-kinematics"]], "Vectors and Dyadics": [[261, "vectors-and-dyadics"]], "Vectors and Scalars": [[192, "vectors-and-scalars"], [265, "vectors-and-scalars"]], "Verify a Solution": [[25, "verify-a-solution"]], "Verifying Divergence Theorem": [[266, "verifying-divergence-theorem"]], "Verifying Stoke\u2019s Theorem": [[266, "verifying-stoke-s-theorem"]], "Versine": [[20, "versine"]], "Version 1.10": [[10, "version-1-10"]], "Version 1.11": [[10, "version-1-11"]], "Version 1.12": [[10, "version-1-12"]], "Version 1.4": [[10, "version-1-4"]], "Version 1.5": [[10, "version-1-5"]], "Version 1.6": [[10, "version-1-6"]], "Version 1.7": [[10, "version-1-7"]], "Version 1.7.1": [[10, "version-1-7-1"]], "Version 1.8": [[10, "version-1-8"]], "Version 1.9": [[10, "version-1-9"]], "View the Docs": [[1, "view-the-docs"]], "Virtual Environment Setup": [[5, "virtual-environment-setup"]], "Walking the Tree": [[283, "walking-the-tree"]], "Waves": [[150, "module-sympy.physics.optics.waves"]], "Welcome to SymPy\u2019s documentation!": [[32, "welcome-to-sympy-s-documentation"]], "What are the domains?": [[201, "what-are-the-domains"]], "What are the general methods employed by solveset to solve an equation?": [[230, "what-are-the-general-methods-employed-by-solveset-to-solve-an-equation"]], "What is Symbolic Computation?": [[282, "what-is-symbolic-computation"]], "What is a deprecation?": [[4, "what-is-a-deprecation"]], "What is domainmatrix?": [[200, "what-is-domainmatrix"]], "What is the plan for solve and solveset?": [[230, "what-is-the-plan-for-solve-and-solveset"]], "What is this domain argument about?": [[230, "what-is-this-domain-argument-about"]], "What\u2019s Next": [[285, "whats-next"]], "What\u2019s with the new_method kwarg?": [[140, null]], "What\u2019s wrong with solve():": [[230, "what-s-wrong-with-solve"]], "When You Might Prefer a Numeric Solution": [[31, "when-you-might-prefer-a-numeric-solution"]], "When does a change require deprecation?": [[4, "when-does-a-change-require-deprecation"]], "When it is not technically possible to deprecate": [[4, "when-it-is-not-technically-possible-to-deprecate"]], "When the integral exists": [[87, "when-the-integral-exists"]], "When this computation is valid": [[87, "when-this-computation-is-valid"]], "Which Method is Responsible for Printing?": [[211, "which-method-is-responsible-for-printing"]], "Why Solveset?": [[230, "why-solveset"]], "Why SymPy?": [[282, "why-sympy"]], "Why do we use Sets as an output type?": [[230, "why-do-we-use-sets-as-an-output-type"]], "Wigner Symbols": [[196, "module-sympy.physics.wigner"]], "Windows 10": [[1, "windows-10"]], "Work With Arbitrary Constants": [[29, "work-with-arbitrary-constants"]], "Work With Parameters": [[25, "work-with-parameters"]], "Work With Symbolic Matrices": [[27, "work-with-symbolic-matrices"]], "Working with expressions as polynomials": [[210, "working-with-expressions-as-polynomials"]], "Writing Custom Functions": [[20, "writing-custom-functions"]], "ZZ": [[202, "zz"]], "ZZ_I": [[202, "zz-i"]], "Zero Testing": [[284, "zero-testing"]], "\\mathrm{\\LaTeX}": [[287, "mathrm-latex"]], "\\mathrm{\\LaTeX} Parsing Caveats": [[104, "mathrm-latex-parsing-caveats"]], "\\mathrm{\\LaTeX} Parsing Exceptions Reference": [[104, "mathrm-latex-parsing-exceptions-reference"]], "\\mathrm{\\LaTeX} Parsing Functions Reference": [[104, "mathrm-latex-parsing-functions-reference"]], "abc": [[34, "module-sympy.abc"]], "add": [[62, "module-sympy.core.add"]], "apart": [[288, "apart"]], "args": [[283, "args"]], "as_real_imag()": [[20, "as-real-imag"]], "assumptions": [[62, "module-sympy.core.assumptions"]], "basic": [[62, "module-sympy.core.basic"]], "cache": [[62, "module-sympy.core.cache"]], "cancel": [[288, "cancel"]], "class": [[15, "class"]], "collect": [[288, "collect"]], "combsimp": [[288, "combsimp"]], "containers": [[62, "module-sympy.core.containers"]], "divides": [[20, "divides"]], "doit()": [[20, "doit"]], "dotprint": [[211, "dotprint"]], "dynamicsymbols": [[185, "dynamicsymbols"]], "evalf": [[62, "module-sympy.core.evalf"], [277, "evalf"]], "expand": [[288, "expand"]], "expand()": [[20, "expand"]], "expand_func": [[288, "expand-func"]], "expand_log": [[288, "expand-log"]], "expand_power_exp / expand_power_base": [[288, "expand-power-exp-expand-power-base"]], "expand_trig": [[288, "expand-trig"]], "expr": [[62, "module-sympy.core.expr"]], "expr_free_symbols": [[10, "expr-free-symbols"]], "exprtools": [[62, "module-sympy.core.exprtools"]], "factor": [[288, "factor"]], "func": [[15, "func"], [283, "func"]], "function": [[62, "module-sympy.core.function"]], "gammasimp": [[288, "gammasimp"]], "help()": [[12, "help"]], "hyperexpand": [[288, "hyperexpand"]], "inverse()": [[20, "inverse"]], "kind": [[15, "kind"], [62, "module-sympy.core.kind"]], "kinematic_equations": [[190, "module-sympy.physics.vector.functions"]], "lambdify": [[3, "lambdify"], [277, "lambdify"]], "laplace_transform of a Matrix with noconds=False": [[10, "laplace-transform-of-a-matrix-with-noconds-false"]], "logcombine": [[288, "logcombine"]], "lti": [[112, "module-sympy.physics.control.lti"]], "mechanics_printing": [[124, "mechanics-printing"]], "mlatex": [[124, "mlatex"]], "mod": [[62, "module-sympy.core.mod"]], "mpmath": [[33, "mpmath"]], "mpprint": [[124, "mpprint"]], "mprint": [[124, "mprint"]], "mul": [[62, "module-sympy.core.mul"]], "multidimensional": [[62, "module-sympy.core.multidimensional"]], "nroots": [[22, "nroots"]], "numbers": [[62, "module-sympy.core.numbers"]], "p-adic Valuation": [[206, "p-adic-valuation"]], "partitions": [[249, "partitions"]], "powdenest": [[288, "powdenest"]], "power": [[62, "module-sympy.core.power"]], "powsimp": [[288, "powsimp"]], "pytest": [[240, "module-sympy.testing.pytest"]], "real_roots": [[22, "real-roots"]], "relational": [[62, "module-sympy.core.relational"]], "rewrite": [[288, "rewrite"]], "rewrite()": [[20, "rewrite"]], "roots": [[22, "roots"]], "rs_series": [[208, "rs-series"]], "sets and assumptions": [[15, "sets-and-assumptions"]], "simplify": [[288, "simplify"]], "singleton": [[62, "module-sympy.core.singleton"]], "solveset() Solution Sets Cannot Necessarily Be Interrogated Programmatically": [[26, "solveset-solution-sets-cannot-necessarily-be-interrogated-programmatically"]], "srepr": [[211, "module-sympy.printing.repr"], [287, "srepr"]], "str": [[287, "str"]], "symbol": [[62, "module-sympy.core.symbol"]], "sympify": [[62, "module-sympy.core.sympify"]], "sympy.assumptions.handlers.AskHandler and related methods": [[10, "sympy-assumptions-handlers-askhandler-and-related-methods"]], "sympy.core.trace": [[10, "sympy-core-trace"]], "sympy.polys.solvers.RawMatrix": [[10, "sympy-polys-solvers-rawmatrix"]], "sympy.printing.theanocode": [[10, "sympy-printing-theanocode"]], "sympy.stats.DiscreteMarkovChain.absorbing_probabilites()": [[10, "sympy-stats-discretemarkovchain-absorbing-probabilites"]], "sympy.stats.sample(numsamples=n)": [[10, "sympy-stats-sample-numsamples-n"]], "sympy.testing.randtest": [[10, "sympy-testing-randtest"]], "sympy.utilities.misc.find_executable()": [[10, "sympy-utilities-misc-find-executable"]], "transolve": [[230, "transolve"]], "trigsimp": [[288, "trigsimp"]], "uFuncify": [[103, "ufuncify"]], "variations": [[249, "variations"]]}, "docnames": ["citing", "contributing/build-docs", "contributing/debug", "contributing/dependencies", "contributing/deprecations", "contributing/dev-setup", "contributing/docstring", "contributing/documentation-style-guide", "contributing/index", "contributing/make-a-contribution", "explanation/active-deprecations", "explanation/glossary", "explanation/gotchas", "explanation/index", "explanation/solve_output", "explanation/special_topics/classification", "explanation/special_topics/finite_diff_derivatives", "explanation/special_topics/index", "guides/assumptions", "guides/booleans", "guides/custom-functions", "guides/index", "guides/solving/find-roots-polynomial", "guides/solving/index", "guides/solving/reduce-inequalities-algebraically", "guides/solving/solve-diophantine-equation", "guides/solving/solve-equation-algebraically", "guides/solving/solve-matrix-equation", "guides/solving/solve-numerically", "guides/solving/solve-ode", "guides/solving/solve-system-of-equations-algebraically", "guides/solving/solving-guidance", "index", "install", "modules/abc", "modules/algebras", "modules/assumptions/ask", "modules/assumptions/assume", "modules/assumptions/index", "modules/assumptions/predicates", "modules/assumptions/refine", "modules/calculus/index", "modules/categories", "modules/codegen", "modules/combinatorics/fp_groups", "modules/combinatorics/galois", "modules/combinatorics/graycode", "modules/combinatorics/group_constructs", "modules/combinatorics/group_numbers", "modules/combinatorics/index", "modules/combinatorics/named_groups", "modules/combinatorics/partitions", "modules/combinatorics/pc_groups", "modules/combinatorics/perm_groups", "modules/combinatorics/permutations", "modules/combinatorics/polyhedron", "modules/combinatorics/prufer", "modules/combinatorics/subsets", "modules/combinatorics/tensor_can", "modules/combinatorics/testutil", "modules/combinatorics/util", "modules/concrete", "modules/core", "modules/crypto", "modules/diffgeom", "modules/discrete", "modules/evalf", "modules/functions/combinatorial", "modules/functions/elementary", "modules/functions/index", "modules/functions/special", "modules/geometry/curves", "modules/geometry/ellipses", "modules/geometry/entities", "modules/geometry/index", "modules/geometry/lines", "modules/geometry/plane", "modules/geometry/points", "modules/geometry/polygons", "modules/geometry/utils", "modules/holonomic/about", "modules/holonomic/convert", "modules/holonomic/index", "modules/holonomic/internal", "modules/holonomic/operations", "modules/holonomic/represent", "modules/holonomic/uses", "modules/integrals/g-functions", "modules/integrals/index", "modules/integrals/integrals", "modules/interactive", "modules/liealgebras/index", "modules/logic", "modules/matrices/common", "modules/matrices/dense", "modules/matrices/expressions", "modules/matrices/immutablematrices", "modules/matrices/index", "modules/matrices/matrices", "modules/matrices/normalforms", "modules/matrices/sparse", "modules/matrices/sparsetools", "modules/ntheory", "modules/numeric-computation", "modules/parsing", "modules/physics/continuum_mechanics/beam", "modules/physics/continuum_mechanics/beam_problems", "modules/physics/continuum_mechanics/index", "modules/physics/continuum_mechanics/truss", "modules/physics/control/control", "modules/physics/control/control_plots", "modules/physics/control/index", "modules/physics/control/lti", "modules/physics/hep/index", "modules/physics/hydrogen", "modules/physics/matrices", "modules/physics/mechanics/advanced", "modules/physics/mechanics/api/body", "modules/physics/mechanics/api/expr_manip", "modules/physics/mechanics/api/index", "modules/physics/mechanics/api/joint", "modules/physics/mechanics/api/kane_lagrange", "modules/physics/mechanics/api/linearize", "modules/physics/mechanics/api/part_bod", "modules/physics/mechanics/api/printing", "modules/physics/mechanics/api/system", "modules/physics/mechanics/autolev_parser", "modules/physics/mechanics/examples", "modules/physics/mechanics/examples/bicycle_example", "modules/physics/mechanics/examples/four_bar_linkage_example", "modules/physics/mechanics/examples/lin_pend_nonmin_example", "modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system", "modules/physics/mechanics/examples/rollingdisc_example", "modules/physics/mechanics/examples/rollingdisc_example_kane", "modules/physics/mechanics/examples/rollingdisc_example_kane_constraints", "modules/physics/mechanics/examples/rollingdisc_example_lagrange", "modules/physics/mechanics/index", "modules/physics/mechanics/joints", "modules/physics/mechanics/kane", "modules/physics/mechanics/lagrange", "modules/physics/mechanics/linearize", "modules/physics/mechanics/masses", "modules/physics/mechanics/reference", "modules/physics/mechanics/sympy_mechanics_for_autolev_users", "modules/physics/mechanics/symsystem", "modules/physics/optics/gaussopt", "modules/physics/optics/index", "modules/physics/optics/medium", "modules/physics/optics/polarization", "modules/physics/optics/utils", "modules/physics/optics/waves", "modules/physics/paulialgebra", "modules/physics/qho_1d", "modules/physics/quantum/anticommutator", "modules/physics/quantum/cartesian", "modules/physics/quantum/cg", "modules/physics/quantum/circuitplot", "modules/physics/quantum/commutator", "modules/physics/quantum/constants", "modules/physics/quantum/dagger", "modules/physics/quantum/gate", "modules/physics/quantum/grover", "modules/physics/quantum/hilbert", "modules/physics/quantum/index", "modules/physics/quantum/innerproduct", "modules/physics/quantum/operator", "modules/physics/quantum/operatorset", "modules/physics/quantum/piab", "modules/physics/quantum/qapply", "modules/physics/quantum/qft", "modules/physics/quantum/qubit", "modules/physics/quantum/represent", "modules/physics/quantum/shor", "modules/physics/quantum/spin", "modules/physics/quantum/state", "modules/physics/quantum/tensorproduct", "modules/physics/secondquant", "modules/physics/sho", "modules/physics/units/dimensions", "modules/physics/units/examples", "modules/physics/units/index", "modules/physics/units/philosophy", "modules/physics/units/prefixes", "modules/physics/units/quantities", "modules/physics/units/unitsystem", "modules/physics/vector/advanced", "modules/physics/vector/api/classes", "modules/physics/vector/api/fieldfunctions", "modules/physics/vector/api/functions", "modules/physics/vector/api/index", "modules/physics/vector/api/kinematics", "modules/physics/vector/api/printing", "modules/physics/vector/fields", "modules/physics/vector/index", "modules/physics/vector/kinematics", "modules/physics/vector/vectors", "modules/physics/wigner", "modules/plotting", "modules/polys/agca", "modules/polys/basics", "modules/polys/domainmatrix", "modules/polys/domainsintro", "modules/polys/domainsref", "modules/polys/index", "modules/polys/internals", "modules/polys/literature", "modules/polys/numberfields", "modules/polys/reference", "modules/polys/ringseries", "modules/polys/solvers", "modules/polys/wester", "modules/printing", "modules/rewriting", "modules/series/formal", "modules/series/fourier", "modules/series/index", "modules/series/limitseq", "modules/series/sequences", "modules/series/series", "modules/sets", "modules/simplify/fu", "modules/simplify/hyperexpand", "modules/simplify/index", "modules/simplify/simplify", "modules/solvers/diophantine", "modules/solvers/index", "modules/solvers/inequalities", "modules/solvers/ode", "modules/solvers/pde", "modules/solvers/solvers", "modules/solvers/solveset", "modules/stats", "modules/tensor/array", "modules/tensor/array_expressions", "modules/tensor/index", "modules/tensor/index_methods", "modules/tensor/indexed", "modules/tensor/tensor", "modules/tensor/toperators", "modules/testing/index", "modules/testing/pytest", "modules/testing/randtest", "modules/testing/runtests", "modules/utilities/autowrap", "modules/utilities/codegen", "modules/utilities/decorator", "modules/utilities/enumerative", "modules/utilities/exceptions", "modules/utilities/index", "modules/utilities/iterables", "modules/utilities/lambdify", "modules/utilities/memoization", "modules/utilities/misc", "modules/utilities/pkgdata", "modules/utilities/source", "modules/utilities/timeutils", "modules/vector/api/classes", "modules/vector/api/index", "modules/vector/api/orienterclasses", "modules/vector/api/vectorfunctions", "modules/vector/basics", "modules/vector/coordsys", "modules/vector/examples", "modules/vector/fields", "modules/vector/index", "modules/vector/intro", "modules/vector/vector_integration", "reference/index", "reference/public/basics/index", "reference/public/codegeneration/index", "reference/public/logic/index", "reference/public/matrices/index", "reference/public/numbertheory/index", "reference/public/physics/index", "reference/public/topics/index", "reference/public/utilities/index", "tutorials/index", "tutorials/intro-tutorial/basic_operations", "tutorials/intro-tutorial/calculus", "tutorials/intro-tutorial/features", "tutorials/intro-tutorial/gotchas", "tutorials/intro-tutorial/index", "tutorials/intro-tutorial/intro", "tutorials/intro-tutorial/manipulation", "tutorials/intro-tutorial/matrices", "tutorials/intro-tutorial/next", "tutorials/intro-tutorial/preliminaries", "tutorials/intro-tutorial/printing", "tutorials/intro-tutorial/simplification", "tutorials/intro-tutorial/solvers"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["citing.md", "contributing/build-docs.rst", "contributing/debug.rst", "contributing/dependencies.md", "contributing/deprecations.md", "contributing/dev-setup.rst", "contributing/docstring.rst", "contributing/documentation-style-guide.rst", "contributing/index.rst", "contributing/make-a-contribution.rst", "explanation/active-deprecations.md", "explanation/glossary.md", "explanation/gotchas.rst", "explanation/index.rst", "explanation/solve_output.rst", "explanation/special_topics/classification.rst", "explanation/special_topics/finite_diff_derivatives.rst", "explanation/special_topics/index.rst", "guides/assumptions.rst", "guides/booleans.rst", "guides/custom-functions.md", "guides/index.rst", "guides/solving/find-roots-polynomial.md", "guides/solving/index.md", "guides/solving/reduce-inequalities-algebraically.md", "guides/solving/solve-diophantine-equation.md", "guides/solving/solve-equation-algebraically.md", "guides/solving/solve-matrix-equation.md", "guides/solving/solve-numerically.md", "guides/solving/solve-ode.md", "guides/solving/solve-system-of-equations-algebraically.md", "guides/solving/solving-guidance.md", "index.rst", "install.md", "modules/abc.rst", "modules/algebras.rst", "modules/assumptions/ask.rst", "modules/assumptions/assume.rst", "modules/assumptions/index.rst", "modules/assumptions/predicates.rst", "modules/assumptions/refine.rst", "modules/calculus/index.rst", "modules/categories.rst", "modules/codegen.rst", "modules/combinatorics/fp_groups.rst", "modules/combinatorics/galois.rst", "modules/combinatorics/graycode.rst", "modules/combinatorics/group_constructs.rst", "modules/combinatorics/group_numbers.rst", "modules/combinatorics/index.rst", "modules/combinatorics/named_groups.rst", "modules/combinatorics/partitions.rst", "modules/combinatorics/pc_groups.rst", "modules/combinatorics/perm_groups.rst", "modules/combinatorics/permutations.rst", "modules/combinatorics/polyhedron.rst", "modules/combinatorics/prufer.rst", "modules/combinatorics/subsets.rst", "modules/combinatorics/tensor_can.rst", "modules/combinatorics/testutil.rst", "modules/combinatorics/util.rst", "modules/concrete.rst", "modules/core.rst", "modules/crypto.rst", "modules/diffgeom.rst", "modules/discrete.rst", "modules/evalf.rst", "modules/functions/combinatorial.rst", "modules/functions/elementary.rst", "modules/functions/index.rst", "modules/functions/special.rst", "modules/geometry/curves.rst", "modules/geometry/ellipses.rst", "modules/geometry/entities.rst", "modules/geometry/index.rst", "modules/geometry/lines.rst", "modules/geometry/plane.rst", "modules/geometry/points.rst", "modules/geometry/polygons.rst", "modules/geometry/utils.rst", "modules/holonomic/about.rst", "modules/holonomic/convert.rst", "modules/holonomic/index.rst", "modules/holonomic/internal.rst", "modules/holonomic/operations.rst", "modules/holonomic/represent.rst", "modules/holonomic/uses.rst", "modules/integrals/g-functions.rst", "modules/integrals/index.rst", "modules/integrals/integrals.rst", "modules/interactive.rst", "modules/liealgebras/index.rst", "modules/logic.rst", "modules/matrices/common.rst", "modules/matrices/dense.rst", "modules/matrices/expressions.rst", "modules/matrices/immutablematrices.rst", "modules/matrices/index.rst", "modules/matrices/matrices.rst", "modules/matrices/normalforms.rst", "modules/matrices/sparse.rst", "modules/matrices/sparsetools.rst", "modules/ntheory.rst", "modules/numeric-computation.rst", "modules/parsing.rst", "modules/physics/continuum_mechanics/beam.rst", "modules/physics/continuum_mechanics/beam_problems.rst", "modules/physics/continuum_mechanics/index.rst", "modules/physics/continuum_mechanics/truss.rst", "modules/physics/control/control.rst", "modules/physics/control/control_plots.rst", "modules/physics/control/index.rst", "modules/physics/control/lti.rst", "modules/physics/hep/index.rst", "modules/physics/hydrogen.rst", "modules/physics/matrices.rst", "modules/physics/mechanics/advanced.rst", "modules/physics/mechanics/api/body.rst", "modules/physics/mechanics/api/expr_manip.rst", "modules/physics/mechanics/api/index.rst", "modules/physics/mechanics/api/joint.rst", "modules/physics/mechanics/api/kane_lagrange.rst", "modules/physics/mechanics/api/linearize.rst", "modules/physics/mechanics/api/part_bod.rst", "modules/physics/mechanics/api/printing.rst", "modules/physics/mechanics/api/system.rst", "modules/physics/mechanics/autolev_parser.rst", "modules/physics/mechanics/examples.rst", "modules/physics/mechanics/examples/bicycle_example.rst", "modules/physics/mechanics/examples/four_bar_linkage_example.rst", "modules/physics/mechanics/examples/lin_pend_nonmin_example.rst", "modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system.rst", "modules/physics/mechanics/examples/rollingdisc_example.rst", "modules/physics/mechanics/examples/rollingdisc_example_kane.rst", "modules/physics/mechanics/examples/rollingdisc_example_kane_constraints.rst", "modules/physics/mechanics/examples/rollingdisc_example_lagrange.rst", "modules/physics/mechanics/index.rst", "modules/physics/mechanics/joints.rst", "modules/physics/mechanics/kane.rst", "modules/physics/mechanics/lagrange.rst", "modules/physics/mechanics/linearize.rst", "modules/physics/mechanics/masses.rst", "modules/physics/mechanics/reference.rst", "modules/physics/mechanics/sympy_mechanics_for_autolev_users.rst", "modules/physics/mechanics/symsystem.rst", "modules/physics/optics/gaussopt.rst", "modules/physics/optics/index.rst", "modules/physics/optics/medium.rst", "modules/physics/optics/polarization.rst", "modules/physics/optics/utils.rst", "modules/physics/optics/waves.rst", "modules/physics/paulialgebra.rst", "modules/physics/qho_1d.rst", "modules/physics/quantum/anticommutator.rst", "modules/physics/quantum/cartesian.rst", "modules/physics/quantum/cg.rst", "modules/physics/quantum/circuitplot.rst", "modules/physics/quantum/commutator.rst", "modules/physics/quantum/constants.rst", "modules/physics/quantum/dagger.rst", "modules/physics/quantum/gate.rst", "modules/physics/quantum/grover.rst", "modules/physics/quantum/hilbert.rst", "modules/physics/quantum/index.rst", "modules/physics/quantum/innerproduct.rst", "modules/physics/quantum/operator.rst", "modules/physics/quantum/operatorset.rst", "modules/physics/quantum/piab.rst", "modules/physics/quantum/qapply.rst", "modules/physics/quantum/qft.rst", "modules/physics/quantum/qubit.rst", "modules/physics/quantum/represent.rst", "modules/physics/quantum/shor.rst", "modules/physics/quantum/spin.rst", "modules/physics/quantum/state.rst", "modules/physics/quantum/tensorproduct.rst", "modules/physics/secondquant.rst", "modules/physics/sho.rst", "modules/physics/units/dimensions.rst", "modules/physics/units/examples.rst", "modules/physics/units/index.rst", "modules/physics/units/philosophy.rst", "modules/physics/units/prefixes.rst", "modules/physics/units/quantities.rst", "modules/physics/units/unitsystem.rst", "modules/physics/vector/advanced.rst", "modules/physics/vector/api/classes.rst", "modules/physics/vector/api/fieldfunctions.rst", "modules/physics/vector/api/functions.rst", "modules/physics/vector/api/index.rst", "modules/physics/vector/api/kinematics.rst", "modules/physics/vector/api/printing.rst", "modules/physics/vector/fields.rst", "modules/physics/vector/index.rst", "modules/physics/vector/kinematics.rst", "modules/physics/vector/vectors.rst", "modules/physics/wigner.rst", "modules/plotting.rst", "modules/polys/agca.rst", "modules/polys/basics.rst", "modules/polys/domainmatrix.rst", "modules/polys/domainsintro.rst", "modules/polys/domainsref.rst", "modules/polys/index.rst", "modules/polys/internals.rst", "modules/polys/literature.rst", "modules/polys/numberfields.rst", "modules/polys/reference.rst", "modules/polys/ringseries.rst", "modules/polys/solvers.rst", "modules/polys/wester.rst", "modules/printing.rst", "modules/rewriting.rst", "modules/series/formal.rst", "modules/series/fourier.rst", "modules/series/index.rst", "modules/series/limitseq.rst", "modules/series/sequences.rst", "modules/series/series.rst", "modules/sets.rst", "modules/simplify/fu.rst", "modules/simplify/hyperexpand.rst", "modules/simplify/index.rst", "modules/simplify/simplify.rst", "modules/solvers/diophantine.rst", "modules/solvers/index.rst", "modules/solvers/inequalities.rst", "modules/solvers/ode.rst", "modules/solvers/pde.rst", "modules/solvers/solvers.rst", "modules/solvers/solveset.rst", "modules/stats.rst", "modules/tensor/array.rst", "modules/tensor/array_expressions.rst", "modules/tensor/index.rst", "modules/tensor/index_methods.rst", "modules/tensor/indexed.rst", "modules/tensor/tensor.rst", "modules/tensor/toperators.rst", "modules/testing/index.rst", "modules/testing/pytest.rst", "modules/testing/randtest.rst", "modules/testing/runtests.rst", "modules/utilities/autowrap.rst", "modules/utilities/codegen.rst", "modules/utilities/decorator.rst", "modules/utilities/enumerative.rst", "modules/utilities/exceptions.rst", "modules/utilities/index.rst", "modules/utilities/iterables.rst", "modules/utilities/lambdify.rst", "modules/utilities/memoization.rst", "modules/utilities/misc.rst", "modules/utilities/pkgdata.rst", "modules/utilities/source.rst", "modules/utilities/timeutils.rst", "modules/vector/api/classes.rst", "modules/vector/api/index.rst", "modules/vector/api/orienterclasses.rst", "modules/vector/api/vectorfunctions.rst", "modules/vector/basics.rst", "modules/vector/coordsys.rst", "modules/vector/examples.rst", "modules/vector/fields.rst", "modules/vector/index.rst", "modules/vector/intro.rst", "modules/vector/vector_integration.rst", "reference/index.rst", "reference/public/basics/index.rst", "reference/public/codegeneration/index.rst", "reference/public/logic/index.rst", "reference/public/matrices/index.rst", "reference/public/numbertheory/index.rst", "reference/public/physics/index.rst", "reference/public/topics/index.rst", "reference/public/utilities/index.rst", "tutorials/index.rst", "tutorials/intro-tutorial/basic_operations.rst", "tutorials/intro-tutorial/calculus.rst", "tutorials/intro-tutorial/features.rst", "tutorials/intro-tutorial/gotchas.rst", "tutorials/intro-tutorial/index.rst", "tutorials/intro-tutorial/intro.rst", "tutorials/intro-tutorial/manipulation.rst", "tutorials/intro-tutorial/matrices.rst", "tutorials/intro-tutorial/next.rst", "tutorials/intro-tutorial/preliminaries.rst", "tutorials/intro-tutorial/printing.rst", "tutorials/intro-tutorial/simplification.rst", "tutorials/intro-tutorial/solvers.rst"], "indexentries": {"__abs__() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.__abs__", false]], "__add__() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.__add__", false]], "__add__() (sympy.polys.numberfields.modules.moduleelement method)": [[206, "sympy.polys.numberfields.modules.ModuleElement.__add__", false]], "__add__() (sympy.polys.numberfields.primes.primeideal method)": [[206, "sympy.polys.numberfields.primes.PrimeIdeal.__add__", false]], "__cacheit() (in module sympy.core.cache)": [[62, "sympy.core.cache.__cacheit", false]], "__call__() (sympy.polys.numberfields.modules.module method)": [[206, "sympy.polys.numberfields.modules.Module.__call__", false]], "__contains__() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.__contains__", false]], "__getitem__() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.__getitem__", false]], "__init__() (sympy.polys.numberfields.modules.endomorphismring method)": [[206, "sympy.polys.numberfields.modules.EndomorphismRing.__init__", false]], "__init__() (sympy.polys.numberfields.modules.innerendomorphism method)": [[206, "sympy.polys.numberfields.modules.InnerEndomorphism.__init__", false]], "__init__() (sympy.polys.numberfields.modules.moduleelement method)": [[206, "sympy.polys.numberfields.modules.ModuleElement.__init__", false]], "__init__() (sympy.polys.numberfields.modules.moduleendomorphism method)": [[206, "sympy.polys.numberfields.modules.ModuleEndomorphism.__init__", false]], "__init__() (sympy.polys.numberfields.modules.modulehomomorphism method)": [[206, "sympy.polys.numberfields.modules.ModuleHomomorphism.__init__", false]], "__init__() (sympy.polys.numberfields.modules.powerbasis method)": [[206, "sympy.polys.numberfields.modules.PowerBasis.__init__", false]], "__init__() (sympy.polys.numberfields.modules.submodule method)": [[206, "sympy.polys.numberfields.modules.Submodule.__init__", false]], "__init__() (sympy.polys.numberfields.primes.primeideal method)": [[206, "sympy.polys.numberfields.primes.PrimeIdeal.__init__", false]], "__init__() (sympy.polys.numberfields.utilities.algintpowers method)": [[206, "sympy.polys.numberfields.utilities.AlgIntPowers.__init__", false]], "__init__() (sympy.vector.coordsysrect.coordsys3d method)": [[256, "sympy.vector.coordsysrect.CoordSys3D.__init__", false]], "__init__() (sympy.vector.orienters.axisorienter method)": [[258, "sympy.vector.orienters.AxisOrienter.__init__", false]], "__init__() (sympy.vector.orienters.bodyorienter method)": [[258, "sympy.vector.orienters.BodyOrienter.__init__", false]], "__init__() (sympy.vector.orienters.quaternionorienter method)": [[258, "sympy.vector.orienters.QuaternionOrienter.__init__", false]], "__init__() (sympy.vector.orienters.spaceorienter method)": [[258, "sympy.vector.orienters.SpaceOrienter.__init__", false]], "__len__() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.__len__", false]], "__mod__() (sympy.polys.numberfields.modules.moduleelement method)": [[206, "sympy.polys.numberfields.modules.ModuleElement.__mod__", false]], "__mul__() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.__mul__", false]], "__mul__() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.__mul__", false]], "__mul__() (sympy.polys.numberfields.modules.moduleelement method)": [[206, "sympy.polys.numberfields.modules.ModuleElement.__mul__", false]], "__mul__() (sympy.polys.numberfields.primes.primeideal method)": [[206, "sympy.polys.numberfields.primes.PrimeIdeal.__mul__", false]], "__new__() (sympy.combinatorics.perm_groups.permutationgroup static method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.__new__", false]], "__new__() (sympy.core.numbers.algebraicnumber static method)": [[62, "sympy.core.numbers.AlgebraicNumber.__new__", false]], "__pow__() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.__pow__", false]], "__weakref__ (sympy.combinatorics.perm_groups.permutationgroup attribute)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.__weakref__", false]], "__weakref__ (sympy.matrices.common.matrixcommon attribute)": [[93, "sympy.matrices.common.MatrixCommon.__weakref__", false]], "_af_parity() (in module sympy.combinatorics.permutations)": [[54, "sympy.combinatorics.permutations._af_parity", false]], "_all_roots() (sympy.polys.rootoftools.complexrootof class method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._all_roots", false]], "_base_ordering() (in module sympy.combinatorics.util)": [[60, "sympy.combinatorics.util._base_ordering", false]], "_check_antecedents() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._check_antecedents", false]], "_check_antecedents_1() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._check_antecedents_1", false]], "_check_antecedents_inversion() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._check_antecedents_inversion", false]], "_check_cycles_alt_sym() (in module sympy.combinatorics.util)": [[60, "sympy.combinatorics.util._check_cycles_alt_sym", false]], "_cmp_perm_lists() (in module sympy.combinatorics.testutil)": [[59, "sympy.combinatorics.testutil._cmp_perm_lists", false]], "_coeffexpvalueerror": [[87, "sympy.integrals.meijerint._CoeffExpValueError", false]], "_complexes_index() (sympy.polys.rootoftools.complexrootof class method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._complexes_index", false]], "_complexes_sorted() (sympy.polys.rootoftools.complexrootof class method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._complexes_sorted", false]], "_condsimp() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._condsimp", false]], "_convert_poly_rat_alg() (in module sympy.holonomic.holonomic)": [[83, "sympy.holonomic.holonomic._convert_poly_rat_alg", false]], "_coset_representative() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup._coset_representative", false]], "_count_roots() (sympy.polys.rootoftools.complexrootof class method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._count_roots", false]], "_create_lookup_table() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._create_lookup_table", false]], "_create_table() (in module sympy.holonomic.holonomic)": [[83, "sympy.holonomic.holonomic._create_table", false]], "_csrtodok() (in module sympy.matrices.sparsetools)": [[101, "sympy.matrices.sparsetools._csrtodok", false]], "_default_settings (sympy.printing.smtlib.smtlibprinter attribute)": [[211, "sympy.printing.smtlib.SMTLibPrinter._default_settings", false]], "_diff_wrt (sympy.core.function.derivative property)": [[62, "sympy.core.function.Derivative._diff_wrt", false]], "_distinct_primes_lemma() (sympy.combinatorics.perm_groups.permutationgroup class method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup._distinct_primes_lemma", false]], "_distribute_gens_by_base() (in module sympy.combinatorics.util)": [[60, "sympy.combinatorics.util._distribute_gens_by_base", false]], "_doktocsr() (in module sympy.matrices.sparsetools)": [[101, "sympy.matrices.sparsetools._doktocsr", false]], "_dummy() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._dummy", false]], "_dummy_() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._dummy_", false]], "_elements (sympy.combinatorics.perm_groups.permutationgroup property)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup._elements", false]], "_ensure_complexes_init() (sympy.polys.rootoftools.complexrootof method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._ensure_complexes_init", false]], "_ensure_reals_init() (sympy.polys.rootoftools.complexrootof method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._ensure_reals_init", false]], "_eval_*": [[11, "term-_eval_", true]], "_eval_cond() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._eval_cond", false]], "_eval_evalf() (sympy.polys.rootoftools.complexrootof method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._eval_evalf", false]], "_eval_integral() (sympy.functions.elementary.piecewise.piecewise method)": [[68, "sympy.functions.elementary.piecewise.Piecewise._eval_integral", false]], "_eval_is_alt_sym_monte_carlo() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup._eval_is_alt_sym_monte_carlo", false]], "_eval_is_alt_sym_naive() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup._eval_is_alt_sym_naive", false]], "_eval_is_imaginary() (sympy.polys.rootoftools.complexrootof method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._eval_is_imaginary", false]], "_eval_is_real() (sympy.polys.rootoftools.complexrootof method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._eval_is_real", false]], "_exponents() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._exponents", false]], "_find_splitting_points() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._find_splitting_points", false]], "_flip_g() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._flip_g", false]], "_fourier_transform() (in module sympy.integrals.transforms)": [[89, "sympy.integrals.transforms._fourier_transform", false]], "_functions() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._functions", false]], "_get_coeff_exp() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._get_coeff_exp", false]], "_get_complexes() (sympy.polys.rootoftools.complexrootof class method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._get_complexes", false]], "_get_complexes_sqf() (sympy.polys.rootoftools.complexrootof class method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._get_complexes_sqf", false]], "_get_interval() (sympy.polys.rootoftools.complexrootof method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._get_interval", false]], "_get_reals() (sympy.polys.rootoftools.complexrootof class method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._get_reals", false]], "_get_reals_sqf() (sympy.polys.rootoftools.complexrootof class method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._get_reals_sqf", false]], "_get_roots() (sympy.polys.rootoftools.complexrootof class method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._get_roots", false]], "_guess_expansion() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._guess_expansion", false]], "_handle_integral() (in module sympy.solvers.ode.ode)": [[227, "sympy.solvers.ode.ode._handle_Integral", false]], "_handle_precomputed_bsgs() (in module sympy.combinatorics.util)": [[60, "sympy.combinatorics.util._handle_precomputed_bsgs", false]], "_indexed_root() (sympy.polys.rootoftools.complexrootof class method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._indexed_root", false]], "_inflate_fox_h() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._inflate_fox_h", false]], "_inflate_g() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._inflate_g", false]], "_int0oo() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._int0oo", false]], "_int0oo_1() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._int0oo_1", false]], "_int_inversion() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._int_inversion", false]], "_is_analytic() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._is_analytic", false]], "_is_exponential() (in module sympy.solvers.solveset)": [[230, "sympy.solvers.solveset._is_exponential", false]], "_is_logarithmic() (in module sympy.solvers.solveset)": [[230, "sympy.solvers.solveset._is_logarithmic", false]], "_linear_2eq_order1_type6() (in module sympy.solvers.ode.ode)": [[227, "sympy.solvers.ode.ode._linear_2eq_order1_type6", false]], "_linear_2eq_order1_type7() (in module sympy.solvers.ode.ode)": [[227, "sympy.solvers.ode.ode._linear_2eq_order1_type7", false]], "_meijerint_definite_2() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._meijerint_definite_2", false]], "_meijerint_definite_3() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._meijerint_definite_3", false]], "_meijerint_definite_4() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._meijerint_definite_4", false]], "_meijerint_indefinite_1() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._meijerint_indefinite_1", false]], "_modgcd_multivariate_p() (in module sympy.polys.modulargcd)": [[204, "sympy.polys.modulargcd._modgcd_multivariate_p", false]], "_mul_args() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._mul_args", false]], "_mul_as_two_parts() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._mul_as_two_parts", false]], "_my_principal_branch() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._my_principal_branch", false]], "_mytype() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._mytype", false]], "_naive_list_centralizer() (in module sympy.combinatorics.testutil)": [[59, "sympy.combinatorics.testutil._naive_list_centralizer", false]], "_new() (sympy.polys.rootoftools.complexrootof class method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._new", false]], "_nonlinear_2eq_order1_type1() (in module sympy.solvers.ode.ode)": [[227, "sympy.solvers.ode.ode._nonlinear_2eq_order1_type1", false]], "_nonlinear_2eq_order1_type2() (in module sympy.solvers.ode.ode)": [[227, "sympy.solvers.ode.ode._nonlinear_2eq_order1_type2", false]], "_nonlinear_2eq_order1_type3() (in module sympy.solvers.ode.ode)": [[227, "sympy.solvers.ode.ode._nonlinear_2eq_order1_type3", false]], "_nonlinear_2eq_order1_type4() (in module sympy.solvers.ode.ode)": [[227, "sympy.solvers.ode.ode._nonlinear_2eq_order1_type4", false]], "_nonlinear_2eq_order1_type5() (in module sympy.solvers.ode.ode)": [[227, "sympy.solvers.ode.ode._nonlinear_2eq_order1_type5", false]], "_nonlinear_3eq_order1_type1() (in module sympy.solvers.ode.ode)": [[227, "sympy.solvers.ode.ode._nonlinear_3eq_order1_type1", false]], "_nonlinear_3eq_order1_type2() (in module sympy.solvers.ode.ode)": [[227, "sympy.solvers.ode.ode._nonlinear_3eq_order1_type2", false]], "_nonlinear_3eq_order1_type3() (in module sympy.solvers.ode.ode)": [[227, "sympy.solvers.ode.ode._nonlinear_3eq_order1_type3", false]], "_nonlinear_3eq_order1_type4() (in module sympy.solvers.ode.ode)": [[227, "sympy.solvers.ode.ode._nonlinear_3eq_order1_type4", false]], "_nonlinear_3eq_order1_type5() (in module sympy.solvers.ode.ode)": [[227, "sympy.solvers.ode.ode._nonlinear_3eq_order1_type5", false]], "_orbits_transversals_from_bsgs() (in module sympy.combinatorics.util)": [[60, "sympy.combinatorics.util._orbits_transversals_from_bsgs", false]], "_p_elements_group() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup._p_elements_group", false]], "_postprocess_root() (sympy.polys.rootoftools.complexrootof class method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._postprocess_root", false]], "_preprocess_roots() (sympy.polys.rootoftools.complexrootof class method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._preprocess_roots", false]], "_print() (sympy.printing.printer.printer method)": [[211, "sympy.printing.printer.Printer._print", false]], "_randint() (in module sympy.core.random)": [[62, "sympy.core.random._randint", false]], "_random_pr_init() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup._random_pr_init", false]], "_randrange() (in module sympy.core.random)": [[62, "sympy.core.random._randrange", false]], "_real_roots() (sympy.polys.rootoftools.complexrootof class method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._real_roots", false]], "_reals_index() (sympy.polys.rootoftools.complexrootof class method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._reals_index", false]], "_reals_sorted() (sympy.polys.rootoftools.complexrootof class method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._reals_sorted", false]], "_refine_complexes() (sympy.polys.rootoftools.complexrootof class method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._refine_complexes", false]], "_remove_gens() (in module sympy.combinatorics.util)": [[60, "sympy.combinatorics.util._remove_gens", false]], "_reset() (sympy.polys.rootoftools.complexrootof method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._reset", false]], "_rewrite1() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._rewrite1", false]], "_rewrite2() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._rewrite2", false]], "_rewrite_inversion() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._rewrite_inversion", false]], "_rewrite_saxena() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._rewrite_saxena", false]], "_rewrite_saxena_1() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._rewrite_saxena_1", false]], "_rewrite_single() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._rewrite_single", false]], "_roots_trivial() (sympy.polys.rootoftools.complexrootof class method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._roots_trivial", false]], "_set_interval() (sympy.polys.rootoftools.complexrootof method)": [[207, "sympy.polys.rootoftools.ComplexRootOf._set_interval", false]], "_solve_exponential() (in module sympy.solvers.solveset)": [[230, "sympy.solvers.solveset._solve_exponential", false]], "_solve_lin_sys() (in module sympy.polys.solvers)": [[209, "sympy.polys.solvers._solve_lin_sys", false]], "_solve_lin_sys_component() (in module sympy.polys.solvers)": [[209, "sympy.polys.solvers._solve_lin_sys_component", false]], "_solve_logarithm() (in module sympy.solvers.solveset)": [[230, "sympy.solvers.solveset._solve_logarithm", false]], "_sort_variable_count() (sympy.core.function.derivative class method)": [[62, "sympy.core.function.Derivative._sort_variable_count", false]], "_split_mul() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint._split_mul", false]], "_strip() (in module sympy.combinatorics.util)": [[60, "sympy.combinatorics.util._strip", false]], "_strong_gens_from_distr() (in module sympy.combinatorics.util)": [[60, "sympy.combinatorics.util._strong_gens_from_distr", false]], "_sylow_alt_sym() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup._sylow_alt_sym", false]], "_tan1() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series._tan1", false]], "_tensormanager (class in sympy.tensor.tensor)": [[237, "sympy.tensor.tensor._TensorManager", false]], "_transolve() (in module sympy.solvers.solveset)": [[230, "sympy.solvers.solveset._transolve", false]], "_union_find_merge() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup._union_find_merge", false]], "_union_find_rep() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup._union_find_rep", false]], "_verify() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup._verify", false]], "_verify_bsgs() (in module sympy.combinatorics.testutil)": [[59, "sympy.combinatorics.testutil._verify_bsgs", false]], "_verify_centralizer() (in module sympy.combinatorics.testutil)": [[59, "sympy.combinatorics.testutil._verify_centralizer", false]], "_verify_normal_closure() (in module sympy.combinatorics.testutil)": [[59, "sympy.combinatorics.testutil._verify_normal_closure", false]], "a (sympy.physics.optics.gaussopt.raytransfermatrix property)": [[145, "sympy.physics.optics.gaussopt.RayTransferMatrix.A", false]], "a (sympy.physics.quantum.shor.cmod property)": [[172, "sympy.physics.quantum.shor.CMod.a", false]], "a1pt_theory() (sympy.physics.vector.point.point method)": [[190, "sympy.physics.vector.point.Point.a1pt_theory", false]], "a2idx() (in module sympy.matrices.matrices)": [[98, "sympy.matrices.matrices.a2idx", false]], "a2pt_theory() (sympy.physics.vector.point.point method)": [[190, "sympy.physics.vector.point.Point.a2pt_theory", false]], "a4_in_s6() (in module sympy.combinatorics.galois)": [[45, "sympy.combinatorics.galois.A4_in_S6", false]], "a4xc2() (in module sympy.combinatorics.galois)": [[45, "sympy.combinatorics.galois.A4xC2", false]], "a_interval (sympy.sets.fancysets.complexregion property)": [[219, "sympy.sets.fancysets.ComplexRegion.a_interval", false]], "abbrev (sympy.physics.units.quantities.quantity property)": [[183, "sympy.physics.units.quantities.Quantity.abbrev", false]], "abelian_invariants() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.abelian_invariants", false]], "abeliangroup() (in module sympy.combinatorics.named_groups)": [[50, "sympy.combinatorics.named_groups.AbelianGroup", false]], "above() (sympy.printing.pretty.stringpict.stringpict method)": [[211, "sympy.printing.pretty.stringpict.stringPict.above", false]], "abs (class in sympy.functions.elementary.complexes)": [[68, "sympy.functions.elementary.complexes.Abs", false]], "abs() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.abs", false]], "abs() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.abs", false]], "abs() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.abs", false]], "absorbing_probabilities() (sympy.stats.discretemarkovchain method)": [[231, "sympy.stats.DiscreteMarkovChain.absorbing_probabilities", false]], "abundance() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.abundance", false]], "acc() (sympy.physics.vector.point.point method)": [[190, "sympy.physics.vector.point.Point.acc", false]], "accepted_latex_functions (in module sympy.printing.latex)": [[211, "sympy.printing.latex.accepted_latex_functions", false]], "acos (class in sympy.functions.elementary.trigonometric)": [[68, "sympy.functions.elementary.trigonometric.acos", false]], "acosh (class in sympy.functions.elementary.hyperbolic)": [[68, "sympy.functions.elementary.hyperbolic.acosh", false]], "acot (class in sympy.functions.elementary.trigonometric)": [[68, "sympy.functions.elementary.trigonometric.acot", false]], "acoth (class in sympy.functions.elementary.hyperbolic)": [[68, "sympy.functions.elementary.hyperbolic.acoth", false]], "acsc (class in sympy.functions.elementary.trigonometric)": [[68, "sympy.functions.elementary.trigonometric.acsc", false]], "acsch (class in sympy.functions.elementary.hyperbolic)": [[68, "sympy.functions.elementary.hyperbolic.acsch", false]], "add (class in sympy.core.add)": [[62, "sympy.core.add.Add", false]], "add() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.add", false]], "add() (sympy.assumptions.assume.assumptionscontext method)": [[37, "sympy.assumptions.assume.AssumptionsContext.add", false]], "add() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.add", false]], "add() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.add", false]], "add() (sympy.polys.matrices.ddm.ddm method)": [[200, "sympy.polys.matrices.ddm.DDM.add", false]], "add() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.add", false]], "add() (sympy.polys.matrices.sdm.sdm method)": [[200, "sympy.polys.matrices.sdm.SDM.add", false]], "add() (sympy.polys.numberfields.modules.submodule method)": [[206, "sympy.polys.numberfields.modules.Submodule.add", false]], "add() (sympy.polys.polyclasses.dmf method)": [[202, "sympy.polys.polyclasses.DMF.add", false]], "add() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.add", false]], "add() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.add", false]], "add() (sympy.polys.rings.polyring method)": [[202, "sympy.polys.rings.PolyRing.add", false]], "add_as_roots() (sympy.liealgebras.root_system.rootsystem method)": [[91, "sympy.liealgebras.root_system.RootSystem.add_as_roots", false]], "add_gens() (sympy.polys.rings.polyring method)": [[202, "sympy.polys.rings.PolyRing.add_gens", false]], "add_ground() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.add_ground", false]], "add_ground() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.add_ground", false]], "add_member() (sympy.physics.continuum_mechanics.truss.truss method)": [[108, "sympy.physics.continuum_mechanics.truss.Truss.add_member", false]], "add_node() (sympy.physics.continuum_mechanics.truss.truss method)": [[108, "sympy.physics.continuum_mechanics.truss.Truss.add_node", false]], "add_simple_roots() (sympy.liealgebras.root_system.rootsystem method)": [[91, "sympy.liealgebras.root_system.RootSystem.add_simple_roots", false]], "adjoint() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.adjoint", false]], "adjugate() (sympy.matrices.matrices.matrixdeterminant method)": [[98, "sympy.matrices.matrices.MatrixDeterminant.adjugate", false]], "aesara_code() (in module sympy.printing.aesaracode)": [[211, "sympy.printing.aesaracode.aesara_code", false]], "aesara_function() (in module sympy.printing.aesaracode)": [[211, "sympy.printing.aesaracode.aesara_function", false]], "aesaraprinter (class in sympy.printing.aesaracode)": [[211, "sympy.printing.aesaracode.AesaraPrinter", false]], "affine_rank() (sympy.geometry.point.point static method)": [[77, "sympy.geometry.point.Point.affine_rank", false]], "airyai (class in sympy.functions.special.bessel)": [[70, "sympy.functions.special.bessel.airyai", false]], "airyaiprime (class in sympy.functions.special.bessel)": [[70, "sympy.functions.special.bessel.airyaiprime", false]], "airybase (class in sympy.functions.special.bessel)": [[70, "sympy.functions.special.bessel.AiryBase", false]], "airybi (class in sympy.functions.special.bessel)": [[70, "sympy.functions.special.bessel.airybi", false]], "airybiprime (class in sympy.functions.special.bessel)": [[70, "sympy.functions.special.bessel.airybiprime", false]], "alg_con (sympy.physics.mechanics.system.symbolicsystem property)": [[125, "sympy.physics.mechanics.system.SymbolicSystem.alg_con", false]], "alg_field_from_poly() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.alg_field_from_poly", false]], "algebraic": [[62, "term-algebraic", true]], "algebraic_field() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.algebraic_field", false]], "algebraic_field() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.algebraic_field", false]], "algebraic_field() (sympy.polys.domains.integerring method)": [[202, "sympy.polys.domains.IntegerRing.algebraic_field", false]], "algebraic_field() (sympy.polys.domains.rationalfield method)": [[202, "sympy.polys.domains.RationalField.algebraic_field", false]], "algebraicfield (class in sympy.polys.domains)": [[202, "sympy.polys.domains.AlgebraicField", false]], "algebraichandler (sympy.assumptions.predicates.sets.algebraicpredicate attribute)": [[39, "sympy.assumptions.predicates.sets.AlgebraicPredicate.AlgebraicHandler", false]], "algebraicnumber (class in sympy.core.numbers)": [[62, "sympy.core.numbers.AlgebraicNumber", false]], "algebraicpredicate (class in sympy.assumptions.predicates.sets)": [[39, "sympy.assumptions.predicates.sets.AlgebraicPredicate", false]], "algintpowers (class in sympy.polys.numberfields.utilities)": [[206, "sympy.polys.numberfields.utilities.AlgIntPowers", false]], "alignof() (in module sympy.codegen.cnodes)": [[43, "sympy.codegen.cnodes.alignof", false]], "all_coeffs() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.all_coeffs", false]], "all_coeffs() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.all_coeffs", false]], "all_monoms() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.all_monoms", false]], "all_monoms() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.all_monoms", false]], "all_roots() (sympy.liealgebras.root_system.rootsystem method)": [[91, "sympy.liealgebras.root_system.RootSystem.all_roots", false]], "all_roots() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.all_roots", false]], "all_roots() (sympy.polys.rootoftools.complexrootof class method)": [[207, "sympy.polys.rootoftools.ComplexRootOf.all_roots", false]], "all_terms() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.all_terms", false]], "all_terms() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.all_terms", false]], "allhints (in module sympy.solvers.ode)": [[227, "sympy.solvers.ode.allhints", false]], "allocated() (in module sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.allocated", false]], "almosteq() (sympy.polys.domains.complexfield method)": [[202, "sympy.polys.domains.ComplexField.almosteq", false]], "almosteq() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.almosteq", false]], "almosteq() (sympy.polys.domains.realfield method)": [[202, "sympy.polys.domains.RealField.almosteq", false]], "almosteq() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.almosteq", false]], "almostlinear (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.AlmostLinear", false]], "alternating() (sympy.combinatorics.generators method)": [[54, "sympy.combinatorics.generators.alternating", false]], "alternatinggroup() (in module sympy.combinatorics.named_groups)": [[50, "sympy.combinatorics.named_groups.AlternatingGroup", false]], "altitudes (sympy.geometry.polygon.triangle property)": [[78, "sympy.geometry.polygon.Triangle.altitudes", false]], "ambient_dimension (sympy.geometry.curve.curve property)": [[71, "sympy.geometry.curve.Curve.ambient_dimension", false]], "ambient_dimension (sympy.geometry.entity.geometryentity property)": [[73, "sympy.geometry.entity.GeometryEntity.ambient_dimension", false]], "ambient_dimension (sympy.geometry.line.linearentity property)": [[75, "sympy.geometry.line.LinearEntity.ambient_dimension", false]], "ambient_dimension (sympy.geometry.point.point property)": [[77, "sympy.geometry.point.Point.ambient_dimension", false]], "amplitude (sympy.physics.optics.waves.twave property)": [[150, "sympy.physics.optics.waves.TWave.amplitude", false]], "an (sympy.functions.special.hyper.meijerg property)": [[70, "sympy.functions.special.hyper.meijerg.an", false]], "analytic_func() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.analytic_func", false]], "ancestors() (sympy.polys.numberfields.modules.module method)": [[206, "sympy.polys.numberfields.modules.Module.ancestors", false]], "and (class in sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.And", false]], "andre (class in sympy.functions.combinatorial.numbers)": [[67, "sympy.functions.combinatorial.numbers.andre", false]], "andre_poly() (in module sympy.polys.appellseqs)": [[207, "sympy.polys.appellseqs.andre_poly", false]], "anf_coeffs() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.anf_coeffs", false]], "anfform() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.ANFform", false]], "ang_acc_in() (sympy.physics.vector.frame.referenceframe method)": [[186, "sympy.physics.vector.frame.ReferenceFrame.ang_acc_in", false]], "ang_vel_in() (sympy.physics.mechanics.body.body method)": [[117, "sympy.physics.mechanics.body.Body.ang_vel_in", false]], "ang_vel_in() (sympy.physics.vector.frame.referenceframe method)": [[186, "sympy.physics.vector.frame.ReferenceFrame.ang_vel_in", false]], "angle (sympy.physics.optics.gaussopt.geometricray property)": [[145, "sympy.physics.optics.gaussopt.GeometricRay.angle", false]], "angle() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.angle", false]], "angle_between() (sympy.geometry.line.linearentity method)": [[75, "sympy.geometry.line.LinearEntity.angle_between", false]], "angle_between() (sympy.geometry.plane.plane method)": [[76, "sympy.geometry.plane.Plane.angle_between", false]], "angle_between() (sympy.physics.vector.vector.vector method)": [[186, "sympy.physics.vector.vector.Vector.angle_between", false]], "angles (sympy.geometry.polygon.polygon property)": [[78, "sympy.geometry.polygon.Polygon.angles", false]], "angles (sympy.geometry.polygon.regularpolygon property)": [[78, "sympy.geometry.polygon.RegularPolygon.angles", false]], "angular_deflection() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.angular_deflection", false]], "angular_momentum() (in module sympy.physics.mechanics.functions)": [[123, "sympy.physics.mechanics.functions.angular_momentum", false]], "angular_momentum() (sympy.physics.mechanics.particle.particle method)": [[123, "sympy.physics.mechanics.particle.Particle.angular_momentum", false]], "angular_momentum() (sympy.physics.mechanics.rigidbody.rigidbody method)": [[123, "sympy.physics.mechanics.rigidbody.RigidBody.angular_momentum", false]], "angular_velocity (sympy.physics.optics.waves.twave property)": [[150, "sympy.physics.optics.waves.TWave.angular_velocity", false]], "annihilateboson (class in sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.AnnihilateBoson", false]], "annihilatefermion (class in sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.AnnihilateFermion", false]], "annotated() (in module sympy.printing.pretty.pretty_symbology)": [[211, "sympy.printing.pretty.pretty_symbology.annotated", false]], "anp (class in sympy.polys.polyclasses)": [[202, "sympy.polys.polyclasses.ANP", false]], "anticommutator (class in sympy.physics.quantum.anticommutator)": [[153, "sympy.physics.quantum.anticommutator.AntiCommutator", false]], "antiderivative": [[11, "term-Antiderivative", true]], "antidivisor_count() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.antidivisor_count", false]], "antidivisors() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.antidivisors", false]], "antihermitian": [[62, "term-antihermitian", true]], "antihermitianpredicate (class in sympy.assumptions.predicates.sets)": [[39, "sympy.assumptions.predicates.sets.AntihermitianPredicate", false]], "antisymmetrictensor (class in sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.AntiSymmetricTensor", false]], "aother (sympy.functions.special.hyper.meijerg property)": [[70, "sympy.functions.special.hyper.meijerg.aother", false]], "ap (sympy.functions.special.hyper.hyper property)": [[70, "sympy.functions.special.hyper.hyper.ap", false]], "ap (sympy.functions.special.hyper.meijerg property)": [[70, "sympy.functions.special.hyper.meijerg.ap", false]], "apart() (in module sympy.polys.partfrac)": [[207, "sympy.polys.partfrac.apart", false]], "apart() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.apart", false]], "apart_list() (in module sympy.polys.partfrac)": [[207, "sympy.polys.partfrac.apart_list", false]], "apoapsis (sympy.geometry.ellipse.ellipse property)": [[72, "sympy.geometry.ellipse.Ellipse.apoapsis", false]], "apothem (sympy.geometry.polygon.regularpolygon property)": [[78, "sympy.geometry.polygon.RegularPolygon.apothem", false]], "appellf1 (class in sympy.functions.special.hyper)": [[70, "sympy.functions.special.hyper.appellf1", false]], "append() (sympy.plotting.plot.plot method)": [[197, "sympy.plotting.plot.Plot.append", false]], "applied_loads (sympy.physics.continuum_mechanics.beam.beam property)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.applied_loads", false]], "appliedpredicate (class in sympy.assumptions.assume)": [[37, "sympy.assumptions.assume.AppliedPredicate", false]], "apply() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.apply", false]], "apply() (sympy.printing.pretty.stringpict.prettyform static method)": [[211, "sympy.printing.pretty.stringpict.prettyForm.apply", false]], "apply() (sympy.simplify.epathtools.epath method)": [[223, "sympy.simplify.epathtools.EPath.apply", false]], "apply_finite_diff() (in module sympy.calculus.finite_diff)": [[41, "sympy.calculus.finite_diff.apply_finite_diff", false]], "apply_force() (sympy.physics.mechanics.body.body method)": [[117, "sympy.physics.mechanics.body.Body.apply_force", false]], "apply_grover() (in module sympy.physics.quantum.grover)": [[161, "sympy.physics.quantum.grover.apply_grover", false]], "apply_load() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.apply_load", false]], "apply_load() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.apply_load", false]], "apply_load() (sympy.physics.continuum_mechanics.truss.truss method)": [[108, "sympy.physics.continuum_mechanics.truss.Truss.apply_load", false]], "apply_moment_load() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.apply_moment_load", false]], "apply_operator() (sympy.physics.secondquant.annihilateboson method)": [[176, "sympy.physics.secondquant.AnnihilateBoson.apply_operator", false]], "apply_operator() (sympy.physics.secondquant.annihilatefermion method)": [[176, "sympy.physics.secondquant.AnnihilateFermion.apply_operator", false]], "apply_operator() (sympy.physics.secondquant.createboson method)": [[176, "sympy.physics.secondquant.CreateBoson.apply_operator", false]], "apply_operator() (sympy.physics.secondquant.createfermion method)": [[176, "sympy.physics.secondquant.CreateFermion.apply_operator", false]], "apply_operators() (in module sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.apply_operators", false]], "apply_support() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.apply_support", false]], "apply_support() (sympy.physics.continuum_mechanics.truss.truss method)": [[108, "sympy.physics.continuum_mechanics.truss.Truss.apply_support", false]], "apply_torque() (sympy.physics.mechanics.body.body method)": [[117, "sympy.physics.mechanics.body.Body.apply_torque", false]], "applyfunc() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.applyfunc", false]], "applyfunc() (sympy.physics.vector.dyadic.dyadic method)": [[186, "sympy.physics.vector.dyadic.Dyadic.applyfunc", false]], "applyfunc() (sympy.physics.vector.vector.vector method)": [[186, "sympy.physics.vector.vector.Vector.applyfunc", false]], "approximation() (sympy.core.numbers.numbersymbol method)": [[62, "sympy.core.numbers.NumberSymbol.approximation", false]], "arbitrary_point() (sympy.geometry.curve.curve method)": [[71, "sympy.geometry.curve.Curve.arbitrary_point", false]], "arbitrary_point() (sympy.geometry.ellipse.ellipse method)": [[72, "sympy.geometry.ellipse.Ellipse.arbitrary_point", false]], "arbitrary_point() (sympy.geometry.line.linearentity method)": [[75, "sympy.geometry.line.LinearEntity.arbitrary_point", false]], "arbitrary_point() (sympy.geometry.plane.plane method)": [[76, "sympy.geometry.plane.Plane.arbitrary_point", false]], "arbitrary_point() (sympy.geometry.polygon.polygon method)": [[78, "sympy.geometry.polygon.Polygon.arbitrary_point", false]], "arc_coplanar() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.arc_coplanar", false]], "arcsin() (in module sympy.stats)": [[231, "sympy.stats.Arcsin", false]], "are_collinear() (sympy.geometry.point.point3d static method)": [[77, "sympy.geometry.point.Point3D.are_collinear", false]], "are_concurrent() (sympy.geometry.line.linearentity static method)": [[75, "sympy.geometry.line.LinearEntity.are_concurrent", false]], "are_concurrent() (sympy.geometry.plane.plane static method)": [[76, "sympy.geometry.plane.Plane.are_concurrent", false]], "are_coplanar() (sympy.geometry.point.point class method)": [[77, "sympy.geometry.point.Point.are_coplanar", false]], "are_similar() (in module sympy.geometry.util)": [[79, "sympy.geometry.util.are_similar", false]], "area (sympy.geometry.ellipse.ellipse property)": [[72, "sympy.geometry.ellipse.Ellipse.area", false]], "area (sympy.geometry.polygon.polygon property)": [[78, "sympy.geometry.polygon.Polygon.area", false]], "area (sympy.geometry.polygon.regularpolygon property)": [[78, "sympy.geometry.polygon.RegularPolygon.area", false]], "area (sympy.physics.continuum_mechanics.beam.beam property)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.area", false]], "area (sympy.physics.continuum_mechanics.beam.beam3d property)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.area", false]], "arg (class in sympy.functions.elementary.complexes)": [[68, "sympy.functions.elementary.complexes.arg", false]], "arg (sympy.assumptions.assume.appliedpredicate property)": [[37, "sympy.assumptions.assume.AppliedPredicate.arg", false]], "args": [[11, "term-args", true]], "args (sympy.core.basic.basic property)": [[62, "sympy.core.basic.Basic.args", false]], "args (sympy.geometry.polygon.regularpolygon property)": [[78, "sympy.geometry.polygon.RegularPolygon.args", false]], "args_cnc() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.args_cnc", false]], "argument (class in sympy.utilities.codegen)": [[244, "sympy.utilities.codegen.Argument", false]], "argument (sympy.functions.special.bessel.besselbase property)": [[70, "sympy.functions.special.bessel.BesselBase.argument", false]], "argument (sympy.functions.special.hyper.hyper property)": [[70, "sympy.functions.special.hyper.hyper.argument", false]], "argument (sympy.functions.special.hyper.meijerg property)": [[70, "sympy.functions.special.hyper.meijerg.argument", false]], "arguments (sympy.assumptions.assume.appliedpredicate property)": [[37, "sympy.assumptions.assume.AppliedPredicate.arguments", false]], "array() (in module sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.array", false]], "array_form (sympy.combinatorics.permutations.permutation property)": [[54, "sympy.combinatorics.permutations.Permutation.array_form", false]], "array_form (sympy.combinatorics.polyhedron.polyhedron property)": [[55, "sympy.combinatorics.polyhedron.Polyhedron.array_form", false]], "arrayconstructor (class in sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.ArrayConstructor", false]], "arraycontraction (class in sympy.tensor.array.expressions)": [[233, "sympy.tensor.array.expressions.ArrayContraction", false]], "arraydiagonal (class in sympy.tensor.array.expressions)": [[233, "sympy.tensor.array.expressions.ArrayDiagonal", false]], "arraytensorproduct (class in sympy.tensor.array.expressions)": [[233, "sympy.tensor.array.expressions.ArrayTensorProduct", false]], "arrowstringdescription (class in sympy.categories.diagram_drawing)": [[42, "sympy.categories.diagram_drawing.ArrowStringDescription", false]], "as_algebraicfield() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianRationalField.as_AlgebraicField", false]], "as_base_exp() (sympy.core.function.function method)": [[62, "sympy.core.function.Function.as_base_exp", false]], "as_base_exp() (sympy.core.power.pow method)": [[62, "sympy.core.power.Pow.as_base_exp", false]], "as_base_exp() (sympy.functions.elementary.exponential.log method)": [[68, "sympy.functions.elementary.exponential.log.as_base_exp", false]], "as_coeff_add() (sympy.core.add.add method)": [[62, "sympy.core.add.Add.as_coeff_Add", false], [62, "sympy.core.add.Add.as_coeff_add", false]], "as_coeff_add() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.as_coeff_Add", false], [62, "sympy.core.expr.Expr.as_coeff_add", false]], "as_coeff_add() (sympy.core.numbers.number method)": [[62, "sympy.core.numbers.Number.as_coeff_Add", false]], "as_coeff_add() (sympy.core.numbers.rational method)": [[62, "sympy.core.numbers.Rational.as_coeff_Add", false]], "as_coeff_exponent() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.as_coeff_exponent", false]], "as_coeff_mul() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.as_coeff_Mul", false], [62, "sympy.core.expr.Expr.as_coeff_mul", false]], "as_coeff_mul() (sympy.core.mul.mul method)": [[62, "sympy.core.mul.Mul.as_coeff_Mul", false]], "as_coeff_mul() (sympy.core.numbers.number method)": [[62, "sympy.core.numbers.Number.as_coeff_Mul", false]], "as_coeff_mul() (sympy.core.numbers.rational method)": [[62, "sympy.core.numbers.Rational.as_coeff_Mul", false]], "as_coeff_mul() (sympy.matrices.expressions.matrixexpr method)": [[95, "sympy.matrices.expressions.MatrixExpr.as_coeff_Mul", false]], "as_coefficient() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.as_coefficient", false]], "as_coefficients_dict() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.as_coefficients_dict", false]], "as_content_primitive() (sympy.core.add.add method)": [[62, "sympy.core.add.Add.as_content_primitive", false]], "as_content_primitive() (sympy.core.basic.basic method)": [[62, "sympy.core.basic.Basic.as_content_primitive", false]], "as_content_primitive() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.as_content_primitive", false]], "as_content_primitive() (sympy.core.mul.mul method)": [[62, "sympy.core.mul.Mul.as_content_primitive", false]], "as_content_primitive() (sympy.core.numbers.rational method)": [[62, "sympy.core.numbers.Rational.as_content_primitive", false]], "as_content_primitive() (sympy.core.power.pow method)": [[62, "sympy.core.power.Pow.as_content_primitive", false]], "as_declaration() (sympy.codegen.ast.variable method)": [[43, "sympy.codegen.ast.Variable.as_Declaration", false]], "as_dict() (sympy.combinatorics.partitions.integerpartition method)": [[51, "sympy.combinatorics.partitions.IntegerPartition.as_dict", false]], "as_dict() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.as_dict", false]], "as_dummy() (sympy.core.basic.basic method)": [[62, "sympy.core.basic.Basic.as_dummy", false]], "as_explicit() (sympy.matrices.expressions.matrixexpr method)": [[95, "sympy.matrices.expressions.MatrixExpr.as_explicit", false]], "as_expr() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.as_expr", false]], "as_expr() (sympy.core.numbers.algebraicnumber method)": [[62, "sympy.core.numbers.AlgebraicNumber.as_expr", false]], "as_expr() (sympy.polys.monomials.monomial method)": [[207, "sympy.polys.monomials.Monomial.as_expr", false]], "as_expr() (sympy.polys.numberfields.modules.powerbasiselement method)": [[206, "sympy.polys.numberfields.modules.PowerBasisElement.as_expr", false]], "as_expr() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.as_expr", false]], "as_expr_set_pairs() (sympy.functions.elementary.piecewise.piecewise method)": [[68, "sympy.functions.elementary.piecewise.Piecewise.as_expr_set_pairs", false]], "as_ferrers() (sympy.combinatorics.partitions.integerpartition method)": [[51, "sympy.combinatorics.partitions.IntegerPartition.as_ferrers", false]], "as_finite_difference() (sympy.core.function.derivative method)": [[62, "sympy.core.function.Derivative.as_finite_difference", false]], "as_immutable() (sympy.matrices.dense.densematrix method)": [[94, "sympy.matrices.dense.DenseMatrix.as_immutable", false]], "as_independent() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.as_independent", false]], "as_int() (in module sympy.utilities.misc)": [[252, "sympy.utilities.misc.as_int", false]], "as_leading_term() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.as_leading_term", false]], "as_list() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.as_list", false]], "as_mutable() (sympy.matrices.dense.densematrix method)": [[94, "sympy.matrices.dense.DenseMatrix.as_mutable", false]], "as_mutable() (sympy.matrices.expressions.matrixexpr method)": [[95, "sympy.matrices.expressions.MatrixExpr.as_mutable", false]], "as_numer_denom() (sympy.core.add.add method)": [[62, "sympy.core.add.Add.as_numer_denom", false]], "as_numer_denom() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.as_numer_denom", false]], "as_ordered_factors() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.as_ordered_factors", false]], "as_ordered_factors() (sympy.core.mul.mul method)": [[62, "sympy.core.mul.Mul.as_ordered_factors", false]], "as_ordered_terms() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.as_ordered_terms", false]], "as_poly() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.as_poly", false]], "as_poly() (sympy.core.numbers.algebraicnumber method)": [[62, "sympy.core.numbers.AlgebraicNumber.as_poly", false]], "as_poly() (sympy.core.relational.equality method)": [[62, "sympy.core.relational.Equality.as_poly", false]], "as_poly() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.as_poly", false]], "as_powers_dict() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.as_powers_dict", false]], "as_real_imag() (sympy.core.add.add method)": [[62, "sympy.core.add.Add.as_real_imag", false]], "as_real_imag() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.as_real_imag", false]], "as_real_imag() (sympy.functions.elementary.complexes.im method)": [[68, "sympy.functions.elementary.complexes.im.as_real_imag", false]], "as_real_imag() (sympy.functions.elementary.complexes.re method)": [[68, "sympy.functions.elementary.complexes.re.as_real_imag", false]], "as_real_imag() (sympy.functions.elementary.exponential.exp method)": [[68, "sympy.functions.elementary.exponential.exp.as_real_imag", false]], "as_real_imag() (sympy.functions.elementary.exponential.log method)": [[68, "sympy.functions.elementary.exponential.log.as_real_imag", false]], "as_real_imag() (sympy.functions.elementary.hyperbolic.sinh method)": [[68, "sympy.functions.elementary.hyperbolic.sinh.as_real_imag", false]], "as_real_imag() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.as_real_imag", false]], "as_relational() (sympy.sets.fancysets.range method)": [[219, "sympy.sets.fancysets.Range.as_relational", false]], "as_relational() (sympy.sets.sets.complement method)": [[219, "sympy.sets.sets.Complement.as_relational", false]], "as_relational() (sympy.sets.sets.finiteset method)": [[219, "sympy.sets.sets.FiniteSet.as_relational", false]], "as_relational() (sympy.sets.sets.intersection method)": [[219, "sympy.sets.sets.Intersection.as_relational", false]], "as_relational() (sympy.sets.sets.interval method)": [[219, "sympy.sets.sets.Interval.as_relational", false]], "as_relational() (sympy.sets.sets.symmetricdifference method)": [[219, "sympy.sets.sets.SymmetricDifference.as_relational", false]], "as_relational() (sympy.sets.sets.union method)": [[219, "sympy.sets.sets.Union.as_relational", false]], "as_set() (sympy.logic.boolalg.boolean method)": [[92, "sympy.logic.boolalg.Boolean.as_set", false]], "as_set() (sympy.logic.boolalg.booleanfalse method)": [[92, "sympy.logic.boolalg.BooleanFalse.as_set", false]], "as_set() (sympy.logic.boolalg.booleantrue method)": [[92, "sympy.logic.boolalg.BooleanTrue.as_set", false]], "as_submodule() (sympy.polys.numberfields.primes.primeideal method)": [[206, "sympy.polys.numberfields.primes.PrimeIdeal.as_submodule", false]], "as_sum() (sympy.integrals.integrals.integral method)": [[89, "sympy.integrals.integrals.Integral.as_sum", false]], "as_terms() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.as_terms", false]], "as_two_terms() (sympy.core.add.add method)": [[62, "sympy.core.add.Add.as_two_terms", false]], "as_two_terms() (sympy.core.mul.mul method)": [[62, "sympy.core.mul.Mul.as_two_terms", false]], "ascents() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.ascents", false]], "asec (class in sympy.functions.elementary.trigonometric)": [[68, "sympy.functions.elementary.trigonometric.asec", false]], "asech (class in sympy.functions.elementary.hyperbolic)": [[68, "sympy.functions.elementary.hyperbolic.asech", false]], "aseries() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.aseries", false]], "asin (class in sympy.functions.elementary.trigonometric)": [[68, "sympy.functions.elementary.trigonometric.asin", false]], "asinh (class in sympy.functions.elementary.hyperbolic)": [[68, "sympy.functions.elementary.hyperbolic.asinh", false]], "ask() (in module sympy.assumptions.ask)": [[36, "sympy.assumptions.ask.ask", false]], "assemble_partfrac_list() (in module sympy.polys.partfrac)": [[207, "sympy.polys.partfrac.assemble_partfrac_list", false]], "assignment (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.Assignment", false]], "assignmentbase (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.AssignmentBase", false]], "assignmenterror": [[211, "sympy.printing.codeprinter.AssignmentError", false]], "assoc_laguerre (class in sympy.functions.special.polynomials)": [[70, "sympy.functions.special.polynomials.assoc_laguerre", false]], "assoc_legendre (class in sympy.functions.special.polynomials)": [[70, "sympy.functions.special.polynomials.assoc_legendre", false]], "assoc_recurrence_memo() (in module sympy.utilities.memoization)": [[251, "sympy.utilities.memoization.assoc_recurrence_memo", false]], "assuming() (in module sympy.assumptions.assume)": [[37, "sympy.assumptions.assume.assuming", false]], "assumptionkeys (class in sympy.assumptions.ask)": [[36, "sympy.assumptions.ask.AssumptionKeys", false]], "assumptions": [[11, "term-Assumptions", true]], "assumptions0 (sympy.core.basic.basic property)": [[62, "sympy.core.basic.Basic.assumptions0", false]], "assumptionscontext (class in sympy.assumptions.assume)": [[37, "sympy.assumptions.assume.AssumptionsContext", false]], "atan (class in sympy.functions.elementary.trigonometric)": [[68, "sympy.functions.elementary.trigonometric.atan", false]], "atan2 (class in sympy.functions.elementary.trigonometric)": [[68, "sympy.functions.elementary.trigonometric.atan2", false]], "atanh (class in sympy.functions.elementary.hyperbolic)": [[68, "sympy.functions.elementary.hyperbolic.atanh", false]], "atom": [[11, "term-Atom", true]], "atom (class in sympy.core.basic)": [[62, "sympy.core.basic.Atom", false]], "atomicexpr (class in sympy.core.expr)": [[62, "sympy.core.expr.AtomicExpr", false]], "atoms() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.atoms", false]], "atoms() (sympy.core.basic.basic method)": [[62, "sympy.core.basic.Basic.atoms", false]], "atoms() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.atoms", false]], "atoms_table (in module sympy.printing.pretty.pretty_symbology)": [[211, "sympy.printing.pretty.pretty_symbology.atoms_table", false]], "attempted (sympy.testing.runtests.sympytestresults attribute)": [[242, "sympy.testing.runtests.SymPyTestResults.attempted", false]], "attr_params() (sympy.codegen.ast.node method)": [[43, "sympy.codegen.ast.Node.attr_params", false]], "attribute (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.Attribute", false]], "aug_assign() (in module sympy.codegen.ast)": [[43, "sympy.codegen.ast.aug_assign", false]], "augmentedassignment (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.AugmentedAssignment", false]], "auto_number() (in module sympy.parsing.sympy_parser)": [[104, "sympy.parsing.sympy_parser.auto_number", false]], "auto_symbol() (in module sympy.parsing.sympy_parser)": [[104, "sympy.parsing.sympy_parser.auto_symbol", false]], "automatic simplification": [[11, "term-Automatic-Simplification", true]], "autowrap() (in module sympy.utilities.autowrap)": [[243, "sympy.utilities.autowrap.autowrap", false]], "auxiliary_circle() (sympy.geometry.ellipse.ellipse method)": [[72, "sympy.geometry.ellipse.Ellipse.auxiliary_circle", false]], "auxiliary_eqs (sympy.physics.mechanics.kane.kanesmethod property)": [[121, "sympy.physics.mechanics.kane.KanesMethod.auxiliary_eqs", false]], "axial_force() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.axial_force", false]], "axial_stress() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.axial_stress", false]], "axis() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.axis", false]], "axisorienter (class in sympy.vector.orienters)": [[258, "sympy.vector.orienters.AxisOrienter", false]], "az() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.AZ", false]], "b (in module sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.B", false]], "b (sympy.physics.optics.gaussopt.raytransfermatrix property)": [[145, "sympy.physics.optics.gaussopt.RayTransferMatrix.B", false]], "b_interval (sympy.sets.fancysets.complexregion property)": [[219, "sympy.sets.fancysets.ComplexRegion.b_interval", false]], "backward_diff() (in module sympy.physics.control.lti)": [[112, "sympy.physics.control.lti.backward_diff", false]], "banded() (in module sympy.matrices.sparsetools)": [[101, "sympy.matrices.sparsetools.banded", false]], "base (sympy.combinatorics.perm_groups.permutationgroup property)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.base", false]], "base (sympy.functions.elementary.exponential.exp property)": [[68, "sympy.functions.elementary.exponential.exp.base", false]], "base (sympy.tensor.indexed.indexed property)": [[236, "sympy.tensor.indexed.Indexed.base", false]], "base_oneform() (sympy.diffgeom.coordsystem method)": [[64, "sympy.diffgeom.CoordSystem.base_oneform", false]], "base_oneforms() (sympy.diffgeom.coordsystem method)": [[64, "sympy.diffgeom.CoordSystem.base_oneforms", false]], "base_scalar() (sympy.diffgeom.coordsystem method)": [[64, "sympy.diffgeom.CoordSystem.base_scalar", false]], "base_scalars() (sympy.diffgeom.coordsystem method)": [[64, "sympy.diffgeom.CoordSystem.base_scalars", false]], "base_solution_linear() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.base_solution_linear", false]], "base_vector() (sympy.diffgeom.coordsystem method)": [[64, "sympy.diffgeom.CoordSystem.base_vector", false]], "base_vectors() (sympy.diffgeom.coordsystem method)": [[64, "sympy.diffgeom.CoordSystem.base_vectors", false]], "basebackend (class in sympy.plotting.plot)": [[197, "sympy.plotting.plot.BaseBackend", false]], "basecovarderivativeop (class in sympy.diffgeom)": [[64, "sympy.diffgeom.BaseCovarDerivativeOp", false]], "basepolynomialerror (class in sympy.polys.polyerrors)": [[204, "sympy.polys.polyerrors.BasePolynomialError", false]], "basescalarfield (class in sympy.diffgeom)": [[64, "sympy.diffgeom.BaseScalarField", false]], "baseseries (class in sympy.plotting.plot)": [[197, "sympy.plotting.plot.BaseSeries", false]], "baseswap() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.baseswap", false]], "basevectorfield (class in sympy.diffgeom)": [[64, "sympy.diffgeom.BaseVectorField", false]], "basic": [[11, "term-Basic", true]], "basic (class in sympy.core.basic)": [[62, "sympy.core.basic.Basic", false]], "basic_orbits (sympy.combinatorics.perm_groups.permutationgroup property)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.basic_orbits", false]], "basic_root() (sympy.liealgebras.type_a.typea method)": [[91, "sympy.liealgebras.type_a.TypeA.basic_root", false]], "basic_root() (sympy.liealgebras.type_b.typeb method)": [[91, "sympy.liealgebras.type_b.TypeB.basic_root", false]], "basic_root() (sympy.liealgebras.type_c.typec method)": [[91, "sympy.liealgebras.type_c.TypeC.basic_root", false]], "basic_root() (sympy.liealgebras.type_d.typed method)": [[91, "sympy.liealgebras.type_d.TypeD.basic_root", false]], "basic_root() (sympy.liealgebras.type_e.typee method)": [[91, "sympy.liealgebras.type_e.TypeE.basic_root", false]], "basic_root() (sympy.liealgebras.type_f.typef method)": [[91, "sympy.liealgebras.type_f.TypeF.basic_root", false]], "basic_stabilizers (sympy.combinatorics.perm_groups.permutationgroup property)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.basic_stabilizers", false]], "basic_transversals (sympy.combinatorics.perm_groups.permutationgroup property)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.basic_transversals", false]], "basis() (sympy.liealgebras.type_a.typea method)": [[91, "sympy.liealgebras.type_a.TypeA.basis", false]], "basis() (sympy.liealgebras.type_b.typeb method)": [[91, "sympy.liealgebras.type_b.TypeB.basis", false]], "basis() (sympy.liealgebras.type_c.typec method)": [[91, "sympy.liealgebras.type_c.TypeC.basis", false]], "basis() (sympy.liealgebras.type_d.typed method)": [[91, "sympy.liealgebras.type_d.TypeD.basis", false]], "basis() (sympy.liealgebras.type_e.typee method)": [[91, "sympy.liealgebras.type_e.TypeE.basis", false]], "basis() (sympy.liealgebras.type_f.typef method)": [[91, "sympy.liealgebras.type_f.TypeF.basis", false]], "basis() (sympy.liealgebras.type_g.typeg method)": [[91, "sympy.liealgebras.type_g.TypeG.basis", false]], "basis() (sympy.polys.agca.modules.freemodule method)": [[198, "sympy.polys.agca.modules.FreeModule.basis", false]], "basis_element_pullbacks() (sympy.polys.numberfields.modules.submodule method)": [[206, "sympy.polys.numberfields.modules.Submodule.basis_element_pullbacks", false]], "basis_elements() (sympy.polys.numberfields.modules.module method)": [[206, "sympy.polys.numberfields.modules.Module.basis_elements", false]], "bbra (in module sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.BBra", false]], "bd (in module sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.Bd", false]], "beam (class in sympy.physics.continuum_mechanics.beam)": [[105, "sympy.physics.continuum_mechanics.beam.Beam", false]], "beam3d (class in sympy.physics.continuum_mechanics.beam)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D", false]], "beamparameter (class in sympy.physics.optics.gaussopt)": [[145, "sympy.physics.optics.gaussopt.BeamParameter", false]], "bell (class in sympy.functions.combinatorial.numbers)": [[67, "sympy.functions.combinatorial.numbers.bell", false]], "below() (sympy.printing.pretty.stringpict.stringpict method)": [[211, "sympy.printing.pretty.stringpict.stringPict.below", false]], "bending_moment() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.bending_moment", false]], "bending_moment() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.bending_moment", false]], "benini() (in module sympy.stats)": [[231, "sympy.stats.Benini", false]], "bernoulli (class in sympy.functions.combinatorial.numbers)": [[67, "sympy.functions.combinatorial.numbers.bernoulli", false]], "bernoulli (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.Bernoulli", false]], "bernoulli() (in module sympy.stats)": [[231, "sympy.stats.Bernoulli", false]], "bernoulli_c_poly() (in module sympy.polys.appellseqs)": [[207, "sympy.polys.appellseqs.bernoulli_c_poly", false]], "bernoulli_poly() (in module sympy.polys.appellseqs)": [[207, "sympy.polys.appellseqs.bernoulli_poly", false]], "bernoulliprocess (class in sympy.stats)": [[231, "sympy.stats.BernoulliProcess", false]], "besselbase (class in sympy.functions.special.bessel)": [[70, "sympy.functions.special.bessel.BesselBase", false]], "besseli (class in sympy.functions.special.bessel)": [[70, "sympy.functions.special.bessel.besseli", false]], "besselj (class in sympy.functions.special.bessel)": [[70, "sympy.functions.special.bessel.besselj", false]], "besselk (class in sympy.functions.special.bessel)": [[70, "sympy.functions.special.bessel.besselk", false]], "besselsimp() (in module sympy.simplify.simplify)": [[223, "sympy.simplify.simplify.besselsimp", false]], "bessely (class in sympy.functions.special.bessel)": [[70, "sympy.functions.special.bessel.bessely", false]], "beta (class in sympy.functions.special.beta_functions)": [[70, "sympy.functions.special.beta_functions.beta", false]], "beta() (in module sympy.stats)": [[231, "sympy.stats.Beta", false]], "betabinomial() (in module sympy.stats)": [[231, "sympy.stats.BetaBinomial", false]], "betanoncentral() (in module sympy.stats)": [[231, "sympy.stats.BetaNoncentral", false]], "betaprime() (in module sympy.stats)": [[231, "sympy.stats.BetaPrime", false]], "bidiagonal_decomposition() (sympy.matrices.matrices.matrixeigen method)": [[98, "sympy.matrices.matrices.MatrixEigen.bidiagonal_decomposition", false]], "bidiagonalize() (sympy.matrices.matrices.matrixeigen method)": [[98, "sympy.matrices.matrices.MatrixEigen.bidiagonalize", false]], "bifid5_square() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.bifid5_square", false]], "bifid6_square() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.bifid6_square", false]], "bilinear() (in module sympy.physics.control.lti)": [[112, "sympy.physics.control.lti.bilinear", false]], "bin_to_gray() (sympy.combinatorics.graycode method)": [[46, "sympy.combinatorics.graycode.bin_to_gray", false]], "binary_function() (in module sympy.utilities.autowrap)": [[243, "sympy.utilities.autowrap.binary_function", false]], "binary_partitions() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.binary_partitions", false]], "binaryquadratic (class in sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.BinaryQuadratic", false]], "bind_c() (in module sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.bind_C", false]], "binomial (class in sympy.functions.combinatorial.factorials)": [[67, "sympy.functions.combinatorial.factorials.binomial", false]], "binomial() (in module sympy.stats)": [[231, "sympy.stats.Binomial", false]], "binomial_coefficients() (in module sympy.ntheory.multinomial)": [[102, "sympy.ntheory.multinomial.binomial_coefficients", false]], "binomial_coefficients_list() (in module sympy.ntheory.multinomial)": [[102, "sympy.ntheory.multinomial.binomial_coefficients_list", false]], "bisectors() (sympy.geometry.line.linearentity method)": [[75, "sympy.geometry.line.LinearEntity.bisectors", false]], "bisectors() (sympy.geometry.polygon.polygon method)": [[78, "sympy.geometry.polygon.Polygon.bisectors", false]], "bisectors() (sympy.geometry.polygon.triangle method)": [[78, "sympy.geometry.polygon.Triangle.bisectors", false]], "bitlist_from_subset() (sympy.combinatorics.subsets.subset class method)": [[57, "sympy.combinatorics.subsets.Subset.bitlist_from_subset", false]], "bket (in module sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.BKet", false]], "block_collapse() (in module sympy.matrices.expressions.blockmatrix)": [[95, "sympy.matrices.expressions.blockmatrix.block_collapse", false]], "blockdiagmatrix (class in sympy.matrices.expressions.blockmatrix)": [[95, "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix", false]], "blockmatrix (class in sympy.matrices.expressions.blockmatrix)": [[95, "sympy.matrices.expressions.blockmatrix.BlockMatrix", false]], "bm (sympy.functions.special.hyper.meijerg property)": [[70, "sympy.functions.special.hyper.meijerg.bm", false]], "bode_magnitude_numerical_data() (sympy.physics.control.control_plots method)": [[110, "sympy.physics.control.control_plots.bode_magnitude_numerical_data", false]], "bode_magnitude_plot() (sympy.physics.control.control_plots method)": [[110, "sympy.physics.control.control_plots.bode_magnitude_plot", false]], "bode_phase_numerical_data() (sympy.physics.control.control_plots method)": [[110, "sympy.physics.control.control_plots.bode_phase_numerical_data", false]], "bode_phase_plot() (sympy.physics.control.control_plots method)": [[110, "sympy.physics.control.control_plots.bode_phase_plot", false]], "bode_plot() (sympy.physics.control.control_plots method)": [[110, "sympy.physics.control.control_plots.bode_plot", false]], "bodies (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[120, "sympy.physics.mechanics.jointsmethod.JointsMethod.bodies", false]], "bodies (sympy.physics.mechanics.system.symbolicsystem property)": [[125, "sympy.physics.mechanics.system.SymbolicSystem.bodies", false]], "body (class in sympy.physics.mechanics.body)": [[117, "sympy.physics.mechanics.body.Body", false]], "bodyorienter (class in sympy.vector.orienters)": [[258, "sympy.vector.orienters.BodyOrienter", false]], "bool_map() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.bool_map", false]], "bool_maxterm() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.bool_maxterm", false]], "bool_minterm() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.bool_minterm", false]], "bool_monomial() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.bool_monomial", false]], "boolean": [[11, "term-Boolean", true]], "boolean (class in sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.Boolean", false]], "booleanfalse (class in sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.BooleanFalse", false]], "booleankind (in module sympy.core.kind)": [[62, "sympy.core.kind.BooleanKind", false]], "booleantrue (class in sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.BooleanTrue", false]], "bosonicbasis (class in sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.BosonicBasis", false]], "bother (sympy.functions.special.hyper.meijerg property)": [[70, "sympy.functions.special.hyper.meijerg.bother", false]], "bottom_up() (in module sympy.core.traversal)": [[62, "sympy.core.traversal.bottom_up", false]], "bound symbols": [[11, "term-Bound-symbols", true]], "bound_symbols (sympy.concrete.expr_with_limits.exprwithlimits property)": [[89, "sympy.concrete.expr_with_limits.ExprWithLimits.bound_symbols", false]], "bound_symbols (sympy.core.function.lambda property)": [[62, "sympy.core.function.Lambda.bound_symbols", false]], "bound_symbols (sympy.core.function.subs property)": [[62, "sympy.core.function.Subs.bound_symbols", false]], "boundary (sympy.sets.sets.set property)": [[219, "sympy.sets.sets.Set.boundary", false]], "boundary_conditions (sympy.physics.continuum_mechanics.beam.beam property)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.boundary_conditions", false]], "boundary_conditions (sympy.physics.continuum_mechanics.beam.beam3d property)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.boundary_conditions", false]], "boundedpareto() (in module sympy.stats)": [[231, "sympy.stats.BoundedPareto", false]], "bounds (sympy.geometry.ellipse.ellipse property)": [[72, "sympy.geometry.ellipse.Ellipse.bounds", false]], "bounds (sympy.geometry.entity.geometryentity property)": [[73, "sympy.geometry.entity.GeometryEntity.bounds", false]], "bounds (sympy.geometry.line.linearentity2d property)": [[75, "sympy.geometry.line.LinearEntity2D.bounds", false]], "bounds (sympy.geometry.point.point2d property)": [[77, "sympy.geometry.point.Point2D.bounds", false]], "bounds (sympy.geometry.polygon.polygon property)": [[78, "sympy.geometry.polygon.Polygon.bounds", false]], "bq (sympy.functions.special.hyper.hyper property)": [[70, "sympy.functions.special.hyper.hyper.bq", false]], "bq (sympy.functions.special.hyper.meijerg property)": [[70, "sympy.functions.special.hyper.meijerg.bq", false]], "bra (class in sympy.physics.quantum.state)": [[174, "sympy.physics.quantum.state.Bra", false]], "bra (sympy.physics.quantum.operator.outerproduct property)": [[165, "sympy.physics.quantum.operator.OuterProduct.bra", false]], "bra (sympy.physics.secondquant.innerproduct property)": [[176, "sympy.physics.secondquant.InnerProduct.bra", false]], "brabase (class in sympy.physics.quantum.state)": [[174, "sympy.physics.quantum.state.BraBase", false]], "bracelets() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.bracelets", false]], "breaktoken (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.BreakToken", false]], "brewster_angle() (in module sympy.physics.optics.utils)": [[149, "sympy.physics.optics.utils.brewster_angle", false]], "bsgs_direct_product() (in module sympy.combinatorics.tensor_can)": [[58, "sympy.combinatorics.tensor_can.bsgs_direct_product", false]], "bspline_basis() (in module sympy.functions.special.bsplines)": [[70, "sympy.functions.special.bsplines.bspline_basis", false]], "bspline_basis_set() (in module sympy.functions.special.bsplines)": [[70, "sympy.functions.special.bsplines.bspline_basis_set", false]], "build_expression_tree() (in module sympy.series.gruntz)": [[218, "sympy.series.gruntz.build_expression_tree", false]], "build_options() (in module sympy.polys.polyoptions)": [[204, "sympy.polys.polyoptions.build_options", false]], "c (sympy.matrices.common.matrixcommon property)": [[93, "sympy.matrices.common.MatrixCommon.C", false]], "c (sympy.physics.optics.gaussopt.raytransfermatrix property)": [[145, "sympy.physics.optics.gaussopt.RayTransferMatrix.C", false]], "c89codeprinter (class in sympy.printing.c)": [[211, "sympy.printing.c.C89CodePrinter", false]], "c99codeprinter (class in sympy.printing.c)": [[211, "sympy.printing.c.C99CodePrinter", false]], "calculate_series() (in module sympy.series.gruntz)": [[218, "sympy.series.gruntz.calculate_series", false]], "can_transf_matrix (sympy.physics.units.dimensions.dimensionsystem property)": [[178, "sympy.physics.units.dimensions.DimensionSystem.can_transf_matrix", false]], "canberra_distance() (sympy.geometry.point.point method)": [[77, "sympy.geometry.point.Point.canberra_distance", false]], "cancel() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.cancel", false]], "cancel() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.cancel", false]], "cancel() (sympy.polys.polyclasses.dmf method)": [[202, "sympy.polys.polyclasses.DMF.cancel", false]], "cancel() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.cancel", false]], "cancel() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.cancel", false]], "cancel() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.cancel", false]], "canon_bp() (in module sympy.tensor.tensor)": [[237, "sympy.tensor.tensor.canon_bp", false]], "canon_bp() (sympy.tensor.tensor.tensadd method)": [[237, "sympy.tensor.tensor.TensAdd.canon_bp", false]], "canon_bp() (sympy.tensor.tensor.tensmul method)": [[237, "sympy.tensor.tensor.TensMul.canon_bp", false]], "canonical (sympy.core.relational.relational property)": [[62, "sympy.core.relational.Relational.canonical", false]], "canonical form": [[11, "term-Canonical-Form", true]], "canonical_form() (sympy.stats.discretemarkovchain method)": [[231, "sympy.stats.DiscreteMarkovChain.canonical_form", false]], "canonical_odes() (in module sympy.solvers.ode.systems)": [[227, "sympy.solvers.ode.systems.canonical_odes", false]], "canonical_variables (sympy.core.basic.basic property)": [[62, "sympy.core.basic.Basic.canonical_variables", false]], "canonicalize": [[11, "term-Canonicalize", true]], "canonicalize() (in module sympy.combinatorics.tensor_can)": [[58, "sympy.combinatorics.tensor_can.canonicalize", false]], "capture() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.capture", false]], "cardinality (sympy.combinatorics.permutations.permutation property)": [[54, "sympy.combinatorics.permutations.Permutation.cardinality", false]], "cardinality (sympy.combinatorics.subsets.subset property)": [[57, "sympy.combinatorics.subsets.Subset.cardinality", false]], "cartan_matrix() (sympy.liealgebras.root_system.rootsystem method)": [[91, "sympy.liealgebras.root_system.RootSystem.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_a.typea method)": [[91, "sympy.liealgebras.type_a.TypeA.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_b.typeb method)": [[91, "sympy.liealgebras.type_b.TypeB.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_c.typec method)": [[91, "sympy.liealgebras.type_c.TypeC.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_d.typed method)": [[91, "sympy.liealgebras.type_d.TypeD.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_e.typee method)": [[91, "sympy.liealgebras.type_e.TypeE.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_f.typef method)": [[91, "sympy.liealgebras.type_f.TypeF.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_g.typeg method)": [[91, "sympy.liealgebras.type_g.TypeG.cartan_matrix", false]], "cartanmatrix() (in module sympy.liealgebras.cartan_matrix)": [[91, "sympy.liealgebras.cartan_matrix.CartanMatrix", false]], "cartantype_generator (class in sympy.liealgebras.cartan_type)": [[91, "sympy.liealgebras.cartan_type.CartanType_generator", false]], "cartesiancomplexregion (class in sympy.sets.fancysets)": [[219, "sympy.sets.fancysets.CartesianComplexRegion", false]], "casoratian() (in module sympy.matrices.dense)": [[98, "sympy.matrices.dense.casoratian", false]], "cast_check() (sympy.codegen.ast.type method)": [[43, "sympy.codegen.ast.Type.cast_check", false]], "cast_nocheck (sympy.codegen.ast.floatbasetype attribute)": [[43, "sympy.codegen.ast.FloatBaseType.cast_nocheck", false]], "cast_nocheck() (sympy.codegen.ast.floattype method)": [[43, "sympy.codegen.ast.FloatType.cast_nocheck", false]], "catalan (class in sympy.core.numbers)": [[62, "sympy.core.numbers.Catalan", false]], "catalan (class in sympy.functions.combinatorial.numbers)": [[67, "sympy.functions.combinatorial.numbers.catalan", false]], "category (class in sympy.categories)": [[42, "sympy.categories.Category", false]], "cauchy() (in module sympy.stats)": [[231, "sympy.stats.Cauchy", false]], "cauchy_lower_bound() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.cauchy_lower_bound", false]], "cauchy_upper_bound() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.cauchy_upper_bound", false]], "cbrt (class in sympy.codegen.cfunctions)": [[43, "sympy.codegen.cfunctions.Cbrt", false]], "cbrt() (in module sympy.functions.elementary.miscellaneous)": [[68, "sympy.functions.elementary.miscellaneous.cbrt", false]], "ccode() (in module sympy.printing.c)": [[211, "sympy.printing.c.ccode", false]], "ccodegen (class in sympy.utilities.codegen)": [[244, "sympy.utilities.codegen.CCodeGen", false]], "ceiling (class in sympy.functions.elementary.integers)": [[68, "sympy.functions.elementary.integers.ceiling", false]], "center (sympy.geometry.ellipse.ellipse property)": [[72, "sympy.geometry.ellipse.Ellipse.center", false]], "center (sympy.geometry.polygon.regularpolygon property)": [[78, "sympy.geometry.polygon.RegularPolygon.center", false]], "center() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.center", false]], "central_inertia (sympy.physics.mechanics.rigidbody.rigidbody property)": [[123, "sympy.physics.mechanics.rigidbody.RigidBody.central_inertia", false]], "centralizer() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.centralizer", false]], "centralmoment (class in sympy.stats)": [[231, "sympy.stats.CentralMoment", false]], "centroid (sympy.geometry.polygon.polygon property)": [[78, "sympy.geometry.polygon.Polygon.centroid", false]], "centroid (sympy.geometry.polygon.regularpolygon property)": [[78, "sympy.geometry.polygon.RegularPolygon.centroid", false]], "centroid() (in module sympy.geometry.util)": [[79, "sympy.geometry.util.centroid", false]], "cg (class in sympy.physics.quantum.cg)": [[155, "sympy.physics.quantum.cg.CG", false]], "cg_simp() (in module sympy.physics.quantum.cg)": [[155, "sympy.physics.quantum.cg.cg_simp", false]], "cgate (class in sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.CGate", false]], "cgates (class in sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.CGateS", false]], "change_index() (sympy.concrete.expr_with_intlimits.exprwithintlimits method)": [[61, "sympy.concrete.expr_with_intlimits.ExprWithIntLimits.change_index", false]], "change_member_label() (sympy.physics.continuum_mechanics.truss.truss method)": [[108, "sympy.physics.continuum_mechanics.truss.Truss.change_member_label", false]], "change_node_label() (sympy.physics.continuum_mechanics.truss.truss method)": [[108, "sympy.physics.continuum_mechanics.truss.Truss.change_node_label", false]], "characteristic() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.characteristic", false]], "characteristic() (sympy.polys.domains.finitefield method)": [[202, "sympy.polys.domains.FiniteField.characteristic", false]], "charpoly() (sympy.matrices.matrices.matrixdeterminant method)": [[98, "sympy.matrices.matrices.MatrixDeterminant.charpoly", false]], "charpoly() (sympy.polys.matrices.ddm.ddm method)": [[200, "sympy.polys.matrices.ddm.DDM.charpoly", false]], "charpoly() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.charpoly", false]], "charpoly() (sympy.polys.matrices.sdm.sdm method)": [[200, "sympy.polys.matrices.sdm.SDM.charpoly", false]], "chebyshevt (class in sympy.functions.special.polynomials)": [[70, "sympy.functions.special.polynomials.chebyshevt", false]], "chebyshevt_poly() (in module sympy.polys.orthopolys)": [[207, "sympy.polys.orthopolys.chebyshevt_poly", false]], "chebyshevt_root (class in sympy.functions.special.polynomials)": [[70, "sympy.functions.special.polynomials.chebyshevt_root", false]], "chebyshevu (class in sympy.functions.special.polynomials)": [[70, "sympy.functions.special.polynomials.chebyshevu", false]], "chebyshevu_poly() (in module sympy.polys.orthopolys)": [[207, "sympy.polys.orthopolys.chebyshevu_poly", false]], "chebyshevu_root (class in sympy.functions.special.polynomials)": [[70, "sympy.functions.special.polynomials.chebyshevu_root", false]], "check_and_join() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.check_and_join", false]], "check_output() (sympy.testing.runtests.sympyoutputchecker method)": [[242, "sympy.testing.runtests.SymPyOutputChecker.check_output", false]], "checkinfsol() (in module sympy.solvers.ode)": [[227, "sympy.solvers.ode.checkinfsol", false]], "checkodesol() (in module sympy.solvers.ode)": [[227, "sympy.solvers.ode.checkodesol", false]], "checkpdesol() (in module sympy.solvers.pde)": [[228, "sympy.solvers.pde.checkpdesol", false]], "checksol() (in module sympy.solvers.solvers)": [[229, "sympy.solvers.solvers.checksol", false]], "chi (class in sympy.functions.special.error_functions)": [[70, "sympy.functions.special.error_functions.Chi", false]], "chi() (in module sympy.stats)": [[231, "sympy.stats.Chi", false]], "child (sympy.physics.mechanics.joint.joint property)": [[120, "sympy.physics.mechanics.joint.Joint.child", false]], "child_axis (sympy.physics.mechanics.joint.joint property)": [[120, "sympy.physics.mechanics.joint.Joint.child_axis", false]], "child_point (sympy.physics.mechanics.joint.joint property)": [[120, "sympy.physics.mechanics.joint.Joint.child_point", false]], "chinoncentral() (in module sympy.stats)": [[231, "sympy.stats.ChiNoncentral", false]], "chisquared() (in module sympy.stats)": [[231, "sympy.stats.ChiSquared", false]], "cholesky() (sympy.matrices.dense.densematrix method)": [[94, "sympy.matrices.dense.DenseMatrix.cholesky", false]], "cholesky() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.cholesky", false]], "cholesky_solve() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.cholesky_solve", false]], "ci (class in sympy.functions.special.error_functions)": [[70, "sympy.functions.special.error_functions.Ci", false]], "circle (class in sympy.geometry.ellipse)": [[72, "sympy.geometry.ellipse.Circle", false]], "circuit_plot() (in module sympy.physics.quantum.circuitplot)": [[156, "sympy.physics.quantum.circuitplot.circuit_plot", false]], "circuitplot (class in sympy.physics.quantum.circuitplot)": [[156, "sympy.physics.quantum.circuitplot.CircuitPlot", false]], "circumcenter (sympy.geometry.polygon.regularpolygon property)": [[78, "sympy.geometry.polygon.RegularPolygon.circumcenter", false]], "circumcenter (sympy.geometry.polygon.triangle property)": [[78, "sympy.geometry.polygon.Triangle.circumcenter", false]], "circumcircle (sympy.geometry.polygon.regularpolygon property)": [[78, "sympy.geometry.polygon.RegularPolygon.circumcircle", false]], "circumcircle (sympy.geometry.polygon.triangle property)": [[78, "sympy.geometry.polygon.Triangle.circumcircle", false]], "circumference (sympy.geometry.ellipse.circle property)": [[72, "sympy.geometry.ellipse.Circle.circumference", false]], "circumference (sympy.geometry.ellipse.ellipse property)": [[72, "sympy.geometry.ellipse.Ellipse.circumference", false]], "circumradius (sympy.geometry.polygon.regularpolygon property)": [[78, "sympy.geometry.polygon.RegularPolygon.circumradius", false]], "circumradius (sympy.geometry.polygon.triangle property)": [[78, "sympy.geometry.polygon.Triangle.circumradius", false]], "class_key() (sympy.core.basic.basic class method)": [[62, "sympy.core.basic.Basic.class_key", false]], "classify_diop() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.classify_diop", false]], "classify_ode() (in module sympy.solvers.ode)": [[227, "sympy.solvers.ode.classify_ode", false]], "classify_pde() (in module sympy.solvers.pde)": [[228, "sympy.solvers.pde.classify_pde", false]], "clear() (sympy.tensor.tensor._tensormanager method)": [[237, "sympy.tensor.tensor._TensorManager.clear", false]], "clear_cache() (sympy.polys.rootoftools.complexrootof class method)": [[207, "sympy.polys.rootoftools.ComplexRootOf.clear_cache", false]], "clear_denoms() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.clear_denoms", false]], "clear_denoms() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.clear_denoms", false]], "clear_loads() (sympy.physics.mechanics.body.body method)": [[117, "sympy.physics.mechanics.body.Body.clear_loads", false]], "clebsch_gordan() (in module sympy.physics.wigner)": [[196, "sympy.physics.wigner.clebsch_gordan", false]], "clone() (sympy.polys.polyoptions.options method)": [[204, "sympy.polys.polyoptions.Options.clone", false]], "closing_angle() (sympy.geometry.line.ray2d method)": [[75, "sympy.geometry.line.Ray2D.closing_angle", false]], "closure (sympy.sets.sets.set property)": [[219, "sympy.sets.sets.Set.closure", false]], "cmod (class in sympy.physics.quantum.shor)": [[172, "sympy.physics.quantum.shor.CMod", false]], "cmoment() (in module sympy.stats)": [[231, "sympy.stats.cmoment", false]], "cmplx (class in sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.cmplx", false]], "cnot (in module sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.CNOT", false]], "cnotgate (class in sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.CNotGate", false]], "code generation": [[11, "term-Code-Generation", true]], "codeblock (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.CodeBlock", false]], "codegen (class in sympy.utilities.codegen)": [[244, "sympy.utilities.codegen.CodeGen", false]], "codegen() (in module sympy.utilities.codegen)": [[244, "sympy.utilities.codegen.codegen", false]], "codeprinter (class in sympy.printing.codeprinter)": [[211, "sympy.printing.codeprinter.CodePrinter", false]], "codewrapper (class in sympy.utilities.autowrap)": [[243, "sympy.utilities.autowrap.CodeWrapper", false]], "codomain (sympy.categories.compositemorphism property)": [[42, "sympy.categories.CompositeMorphism.codomain", false]], "codomain (sympy.categories.morphism property)": [[42, "sympy.categories.Morphism.codomain", false]], "coeff() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.coeff", false]], "coeff() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.coeff", false]], "coeff() (sympy.series.sequences.seqbase method)": [[217, "sympy.series.sequences.SeqBase.coeff", false]], "coeff_bell() (sympy.series.formal.formalpowerseries method)": [[213, "sympy.series.formal.FormalPowerSeries.coeff_bell", false]], "coeff_monomial() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.coeff_monomial", false]], "coeff_mul() (sympy.series.sequences.emptysequence method)": [[217, "sympy.series.sequences.EmptySequence.coeff_mul", false]], "coeff_mul() (sympy.series.sequences.seqbase method)": [[217, "sympy.series.sequences.SeqBase.coeff_mul", false]], "coeff_mul() (sympy.series.sequences.seqformula method)": [[217, "sympy.series.sequences.SeqFormula.coeff_mul", false]], "coeff_mul() (sympy.series.sequences.seqper method)": [[217, "sympy.series.sequences.SeqPer.coeff_mul", false]], "coeff_search() (in module sympy.polys.numberfields.utilities)": [[206, "sympy.polys.numberfields.utilities.coeff_search", false]], "coefficients (sympy.geometry.line.line2d property)": [[75, "sympy.geometry.line.Line2D.coefficients", false]], "coeffs() (sympy.core.numbers.algebraicnumber method)": [[62, "sympy.core.numbers.AlgebraicNumber.coeffs", false]], "coeffs() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.coeffs", false]], "coeffs() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.coeffs", false]], "coeffs() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.coeffs", false]], "coercionfailed (class in sympy.polys.polyerrors)": [[204, "sympy.polys.polyerrors.CoercionFailed", false]], "cofactor() (sympy.matrices.matrices.matrixdeterminant method)": [[98, "sympy.matrices.matrices.MatrixDeterminant.cofactor", false]], "cofactor_matrix() (sympy.matrices.matrices.matrixdeterminant method)": [[98, "sympy.matrices.matrices.MatrixDeterminant.cofactor_matrix", false]], "cofactors() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.cofactors", false]], "cofactors() (sympy.core.numbers.number method)": [[62, "sympy.core.numbers.Number.cofactors", false]], "cofactors() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.cofactors", false]], "cofactors() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.cofactors", false]], "cofactors() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.cofactors", false]], "coherent_state() (in module sympy.physics.qho_1d)": [[152, "sympy.physics.qho_1d.coherent_state", false]], "coin() (in module sympy.stats)": [[231, "sympy.stats.Coin", false]], "col() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.col", false]], "col_del() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.col_del", false]], "col_insert() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.col_insert", false]], "col_join() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.col_join", false]], "collect() (in module sympy.simplify.radsimp)": [[223, "sympy.simplify.radsimp.collect", false]], "collect() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.collect", false]], "collect_const() (in module sympy.simplify.radsimp)": [[223, "sympy.simplify.radsimp.collect_const", false]], "collect_sqrt() (in module sympy.simplify.radsimp)": [[223, "sympy.simplify.radsimp.collect_sqrt", false]], "column() (sympy.polys.numberfields.modules.moduleelement method)": [[206, "sympy.polys.numberfields.modules.ModuleElement.column", false]], "columnspace() (sympy.matrices.matrices.matrixsubspaces method)": [[98, "sympy.matrices.matrices.MatrixSubspaces.columnspace", false]], "columnspace() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.columnspace", false]], "comb_explicit_rhs (sympy.physics.mechanics.system.symbolicsystem property)": [[125, "sympy.physics.mechanics.system.SymbolicSystem.comb_explicit_rhs", false]], "comb_implicit_mat (sympy.physics.mechanics.system.symbolicsystem property)": [[125, "sympy.physics.mechanics.system.SymbolicSystem.comb_implicit_mat", false]], "comb_implicit_rhs (sympy.physics.mechanics.system.symbolicsystem property)": [[125, "sympy.physics.mechanics.system.SymbolicSystem.comb_implicit_rhs", false]], "combsimp() (in module sympy.simplify.combsimp)": [[223, "sympy.simplify.combsimp.combsimp", false]], "combsimp() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.combsimp", false]], "comm_i2symbol() (sympy.tensor.tensor._tensormanager method)": [[237, "sympy.tensor.tensor._TensorManager.comm_i2symbol", false]], "comm_symbols2i() (sympy.tensor.tensor._tensormanager method)": [[237, "sympy.tensor.tensor._TensorManager.comm_symbols2i", false]], "commaoperator (class in sympy.codegen.cnodes)": [[43, "sympy.codegen.cnodes.CommaOperator", false]], "comment (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.Comment", false]], "common_prefix() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.common_prefix", false]], "common_suffix() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.common_suffix", false]], "communication_classes() (sympy.stats.discretemarkovchain method)": [[231, "sympy.stats.DiscreteMarkovChain.communication_classes", false]], "commutative": [[62, "term-commutative", true]], "commutative_diagrams (sympy.categories.category property)": [[42, "sympy.categories.Category.commutative_diagrams", false]], "commutativepredicate (class in sympy.assumptions.predicates.common)": [[39, "sympy.assumptions.predicates.common.CommutativePredicate", false]], "commutator (class in sympy.diffgeom)": [[64, "sympy.diffgeom.Commutator", false]], "commutator (class in sympy.physics.quantum.commutator)": [[157, "sympy.physics.quantum.commutator.Commutator", false]], "commutator (class in sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.Commutator", false]], "commutator() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.commutator", false]], "commutator() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.commutator", false]], "commutes_with() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.commutes_with", false]], "commutes_with() (sympy.tensor.tensor.tensorhead method)": [[237, "sympy.tensor.tensor.TensorHead.commutes_with", false]], "companion() (sympy.matrices.common.matrixcommon class method)": [[93, "sympy.matrices.common.MatrixCommon.companion", false]], "companionmatrix (class in sympy.matrices.expressions)": [[95, "sympy.matrices.expressions.CompanionMatrix", false]], "compare() (in module sympy.series.gruntz)": [[218, "sympy.series.gruntz.compare", false]], "compare() (sympy.core.basic.basic method)": [[62, "sympy.core.basic.Basic.compare", false]], "complement (class in sympy.sets.sets)": [[219, "sympy.sets.sets.Complement", false]], "complement() (sympy.sets.sets.set method)": [[219, "sympy.sets.sets.Set.complement", false]], "complex": [[62, "term-complex", true]], "complexelement (class in sympy.polys.domains.mpelements)": [[202, "sympy.polys.domains.mpelements.ComplexElement", false]], "complexelementspredicate (class in sympy.assumptions.predicates.matrices)": [[39, "sympy.assumptions.predicates.matrices.ComplexElementsPredicate", false]], "complexes (class in sympy.sets.fancysets)": [[219, "sympy.sets.fancysets.Complexes", false]], "complexfield (class in sympy.polys.domains)": [[202, "sympy.polys.domains.ComplexField", false]], "complexinfinity (class in sympy.core.numbers)": [[62, "sympy.core.numbers.ComplexInfinity", false]], "complexpredicate (class in sympy.assumptions.predicates.sets)": [[39, "sympy.assumptions.predicates.sets.ComplexPredicate", false]], "complexregion (class in sympy.sets.fancysets)": [[219, "sympy.sets.fancysets.ComplexRegion", false]], "complexrootof (class in sympy.polys.rootoftools)": [[207, "sympy.polys.rootoftools.ComplexRootOf", false]], "complexspace (class in sympy.physics.quantum.hilbert)": [[162, "sympy.physics.quantum.hilbert.ComplexSpace", false]], "complextype (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.ComplexType", false]], "components (sympy.categories.compositemorphism property)": [[42, "sympy.categories.CompositeMorphism.components", false]], "components (sympy.vector.dyadic.dyadic property)": [[256, "sympy.vector.dyadic.Dyadic.components", false]], "components (sympy.vector.vector.vector property)": [[256, "sympy.vector.vector.Vector.components", false]], "components() (in module sympy.integrals.heurisch)": [[89, "sympy.integrals.heurisch.components", false]], "compose() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.compose", false]], "compose() (sympy.categories.morphism method)": [[42, "sympy.categories.Morphism.compose", false]], "compose() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.compose", false]], "compose() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.compose", false]], "compose() (sympy.polys.rings.polyring method)": [[202, "sympy.polys.rings.PolyRing.compose", false]], "compose() (sympy.series.formal.formalpowerseries method)": [[213, "sympy.series.formal.FormalPowerSeries.compose", false]], "composite": [[62, "term-composite", true]], "composite() (in module sympy.ntheory.generate)": [[102, "sympy.ntheory.generate.composite", false]], "compositedomain (class in sympy.polys.domains.compositedomain)": [[202, "sympy.polys.domains.compositedomain.CompositeDomain", false]], "compositemorphism (class in sympy.categories)": [[42, "sympy.categories.CompositeMorphism", false]], "compositepi() (in module sympy.ntheory.generate)": [[102, "sympy.ntheory.generate.compositepi", false]], "compositepredicate (class in sympy.assumptions.predicates.ntheory)": [[39, "sympy.assumptions.predicates.ntheory.CompositePredicate", false]], "composition() (sympy.holonomic.holonomic.holonomicfunction method)": [[84, "sympy.holonomic.holonomic.HolonomicFunction.composition", false]], "composition_series() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.composition_series", false]], "compounddistribution (class in sympy.stats.compound_rv)": [[231, "sympy.stats.compound_rv.CompoundDistribution", false]], "computationfailed (class in sympy.polys.polyerrors)": [[204, "sympy.polys.polyerrors.ComputationFailed", false]], "compute_explicit_form() (sympy.physics.mechanics.system.symbolicsystem method)": [[125, "sympy.physics.mechanics.system.SymbolicSystem.compute_explicit_form", false]], "compute_fps() (in module sympy.series.formal)": [[213, "sympy.series.formal.compute_fps", false]], "compute_leading_term() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.compute_leading_term", false]], "compute_m_ybar() (in module sympy.solvers.ode.riccati)": [[227, "sympy.solvers.ode.riccati.compute_m_ybar", false]], "conclusions (sympy.categories.diagram property)": [[42, "sympy.categories.Diagram.conclusions", false]], "cond (sympy.functions.elementary.piecewise.exprcondpair property)": [[68, "sympy.functions.elementary.piecewise.ExprCondPair.cond", false]], "condition_number() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.condition_number", false]], "conditionaldomain (class in sympy.stats.rv)": [[231, "sympy.stats.rv.ConditionalDomain", false]], "conditionset (class in sympy.sets.conditionset)": [[219, "sympy.sets.conditionset.ConditionSet", false]], "conjugacy_class() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.conjugacy_class", false]], "conjugacy_classes() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.conjugacy_classes", false]], "conjugate (class in sympy.functions.elementary.complexes)": [[68, "sympy.functions.elementary.complexes.conjugate", false]], "conjugate (sympy.combinatorics.partitions.integerpartition property)": [[51, "sympy.combinatorics.partitions.IntegerPartition.conjugate", false]], "conjugate() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.conjugate", false]], "conjugate() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.conjugate", false]], "conjugate_gauss_beams() (in module sympy.physics.optics.gaussopt)": [[145, "sympy.physics.optics.gaussopt.conjugate_gauss_beams", false]], "connected_components() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.connected_components", false]], "connected_components() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.connected_components", false]], "connected_components_decomposition() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.connected_components_decomposition", false]], "conserve_mpmath_dps() (in module sympy.utilities.decorator)": [[245, "sympy.utilities.decorator.conserve_mpmath_dps", false]], "const() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.const", false]], "constant_renumber() (in module sympy.solvers.ode.ode)": [[227, "sympy.solvers.ode.ode.constant_renumber", false]], "constant_symbols() (sympy.physics.mechanics.system.symbolicsystem method)": [[125, "sympy.physics.mechanics.system.SymbolicSystem.constant_symbols", false]], "constantsimp() (in module sympy.solvers.ode)": [[227, "sympy.solvers.ode.constantsimp", false]], "construct_c() (in module sympy.solvers.ode.riccati)": [[227, "sympy.solvers.ode.riccati.construct_c", false]], "construct_d() (in module sympy.solvers.ode.riccati)": [[227, "sympy.solvers.ode.riccati.construct_d", false]], "construct_domain() (in module sympy.polys.constructor)": [[207, "sympy.polys.constructor.construct_domain", false]], "contains (class in sympy.sets.conditionset)": [[219, "sympy.sets.conditionset.Contains", false]], "contains() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.contains", false]], "contains() (sympy.geometry.line.line method)": [[75, "sympy.geometry.line.Line.contains", false]], "contains() (sympy.geometry.line.linearentity method)": [[75, "sympy.geometry.line.LinearEntity.contains", false]], "contains() (sympy.geometry.line.ray method)": [[75, "sympy.geometry.line.Ray.contains", false]], "contains() (sympy.geometry.line.segment method)": [[75, "sympy.geometry.line.Segment.contains", false]], "contains() (sympy.polys.agca.ideals.ideal method)": [[198, "sympy.polys.agca.ideals.Ideal.contains", false]], "contains() (sympy.polys.agca.modules.module method)": [[198, "sympy.polys.agca.modules.Module.contains", false]], "contains() (sympy.polys.polytools.groebnerbasis method)": [[207, "sympy.polys.polytools.GroebnerBasis.contains", false]], "contains() (sympy.series.order.order method)": [[218, "sympy.series.order.Order.contains", false]], "contains() (sympy.sets.sets.set method)": [[219, "sympy.sets.sets.Set.contains", false]], "content() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.content", false]], "content() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.content", false]], "content() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.content", false]], "content() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.content", false]], "continued_fraction() (in module sympy.ntheory.continued_fraction)": [[102, "sympy.ntheory.continued_fraction.continued_fraction", false]], "continued_fraction_convergents() (in module sympy.ntheory.continued_fraction)": [[102, "sympy.ntheory.continued_fraction.continued_fraction_convergents", false]], "continued_fraction_iterator() (in module sympy.ntheory.continued_fraction)": [[102, "sympy.ntheory.continued_fraction.continued_fraction_iterator", false]], "continued_fraction_periodic() (in module sympy.ntheory.continued_fraction)": [[102, "sympy.ntheory.continued_fraction.continued_fraction_periodic", false]], "continued_fraction_reduce() (in module sympy.ntheory.continued_fraction)": [[102, "sympy.ntheory.continued_fraction.continued_fraction_reduce", false]], "continuetoken (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.ContinueToken", false]], "continuous_domain() (in module sympy.calculus.util)": [[41, "sympy.calculus.util.continuous_domain", false]], "continuousdomain (class in sympy.stats.crv)": [[231, "sympy.stats.crv.ContinuousDomain", false]], "continuousmarkovchain (class in sympy.stats)": [[231, "sympy.stats.ContinuousMarkovChain", false]], "continuouspspace (class in sympy.stats.crv)": [[231, "sympy.stats.crv.ContinuousPSpace", false]], "continuousrv() (in module sympy.stats)": [[231, "sympy.stats.ContinuousRV", false]], "contract_metric() (sympy.tensor.tensor.tensadd method)": [[237, "sympy.tensor.tensor.TensAdd.contract_metric", false]], "contract_metric() (sympy.tensor.tensor.tensmul method)": [[237, "sympy.tensor.tensor.TensMul.contract_metric", false]], "contraction() (in module sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.contraction", false]], "control_line() (sympy.physics.quantum.circuitplot.circuitplot method)": [[156, "sympy.physics.quantum.circuitplot.CircuitPlot.control_line", false]], "control_point() (sympy.physics.quantum.circuitplot.circuitplot method)": [[156, "sympy.physics.quantum.circuitplot.CircuitPlot.control_point", false]], "controls (sympy.physics.quantum.gate.cgate property)": [[160, "sympy.physics.quantum.gate.CGate.controls", false]], "controls (sympy.physics.quantum.gate.cnotgate property)": [[160, "sympy.physics.quantum.gate.CNotGate.controls", false]], "convergence_statement (sympy.functions.special.hyper.hyper property)": [[70, "sympy.functions.special.hyper.hyper.convergence_statement", false]], "convert() (sympy.polys.agca.modules.freemodule method)": [[198, "sympy.polys.agca.modules.FreeModule.convert", false]], "convert() (sympy.polys.agca.modules.module method)": [[198, "sympy.polys.agca.modules.Module.convert", false]], "convert() (sympy.polys.agca.modules.quotientmodule method)": [[198, "sympy.polys.agca.modules.QuotientModule.convert", false]], "convert() (sympy.polys.agca.modules.submodule method)": [[198, "sympy.polys.agca.modules.SubModule.convert", false]], "convert() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.convert", false]], "convert() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.convert", false]], "convert_from() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.convert_from", false]], "convert_to() (in module sympy.physics.units.util)": [[183, "sympy.physics.units.util.convert_to", false]], "convert_to() (sympy.physics.units.quantities.quantity method)": [[183, "sympy.physics.units.quantities.Quantity.convert_to", false]], "convert_to() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.convert_to", false]], "convert_to() (sympy.polys.matrices.sdm.sdm method)": [[200, "sympy.polys.matrices.sdm.SDM.convert_to", false]], "convert_to_c() (sympy.parsing.sym_expr.sympyexpression method)": [[104, "sympy.parsing.sym_expr.SymPyExpression.convert_to_c", false]], "convert_to_expr() (sympy.parsing.sym_expr.sympyexpression method)": [[104, "sympy.parsing.sym_expr.SymPyExpression.convert_to_expr", false]], "convert_to_fortran() (sympy.parsing.sym_expr.sympyexpression method)": [[104, "sympy.parsing.sym_expr.SymPyExpression.convert_to_fortran", false]], "convert_to_native_paths() (in module sympy.testing.runtests)": [[242, "sympy.testing.runtests.convert_to_native_paths", false]], "convert_to_python() (sympy.parsing.sym_expr.sympyexpression method)": [[104, "sympy.parsing.sym_expr.SymPyExpression.convert_to_python", false]], "convert_xor() (in module sympy.parsing.sympy_parser)": [[104, "sympy.parsing.sympy_parser.convert_xor", false]], "convex_hull() (in module sympy.geometry.util)": [[79, "sympy.geometry.util.convex_hull", false]], "convolution() (in module sympy.discrete.convolutions)": [[65, "sympy.discrete.convolutions.convolution", false]], "convolution_fft() (in module sympy.discrete.convolutions)": [[65, "sympy.discrete.convolutions.convolution_fft", false]], "convolution_fwht() (in module sympy.discrete.convolutions)": [[65, "sympy.discrete.convolutions.convolution_fwht", false]], "convolution_ntt() (in module sympy.discrete.convolutions)": [[65, "sympy.discrete.convolutions.convolution_ntt", false]], "convolution_subset() (in module sympy.discrete.convolutions)": [[65, "sympy.discrete.convolutions.convolution_subset", false]], "coord_function() (sympy.diffgeom.coordsystem method)": [[64, "sympy.diffgeom.CoordSystem.coord_function", false]], "coord_functions() (sympy.diffgeom.coordsystem method)": [[64, "sympy.diffgeom.CoordSystem.coord_functions", false]], "coord_tuple_transform_to() (sympy.diffgeom.coordsystem method)": [[64, "sympy.diffgeom.CoordSystem.coord_tuple_transform_to", false]], "coordinates (sympy.geometry.point.point2d property)": [[77, "sympy.geometry.point.Point2D.coordinates", false]], "coordinates (sympy.geometry.point.point3d property)": [[77, "sympy.geometry.point.Point3D.coordinates", false]], "coordinates (sympy.physics.mechanics.joint.joint property)": [[120, "sympy.physics.mechanics.joint.Joint.coordinates", false]], "coordinates (sympy.physics.mechanics.system.symbolicsystem property)": [[125, "sympy.physics.mechanics.system.SymbolicSystem.coordinates", false]], "coordinatesym (class in sympy.physics.vector.frame)": [[186, "sympy.physics.vector.frame.CoordinateSym", false]], "coordinatesymbol (class in sympy.diffgeom)": [[64, "sympy.diffgeom.CoordinateSymbol", false]], "coords() (sympy.diffgeom.point method)": [[64, "sympy.diffgeom.Point.coords", false]], "coordsys3d (class in sympy.vector.coordsysrect)": [[256, "sympy.vector.coordsysrect.CoordSys3D", false]], "coordsystem (class in sympy.diffgeom)": [[64, "sympy.diffgeom.CoordSystem", false]], "copy() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.copy", false]], "copy() (sympy.polys.matrices.sdm.sdm method)": [[200, "sympy.polys.matrices.sdm.SDM.copy", false]], "copy() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.copy", false]], "copy() (sympy.series.gruntz.subsset method)": [[218, "sympy.series.gruntz.SubsSet.copy", false]], "core": [[11, "term-Core", true]], "core() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.core", false]], "cornacchia() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.cornacchia", false]], "corners (sympy.combinatorics.polyhedron.polyhedron property)": [[55, "sympy.combinatorics.polyhedron.Polyhedron.corners", false]], "correlation() (in module sympy.stats)": [[231, "sympy.stats.correlation", false]], "cos (class in sympy.functions.elementary.trigonometric)": [[68, "sympy.functions.elementary.trigonometric.cos", false]], "coset_factor() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.coset_factor", false]], "coset_rank() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.coset_rank", false]], "coset_table() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.coset_table", false]], "coset_transversal() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.coset_transversal", false]], "coset_unrank() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.coset_unrank", false]], "cosh (class in sympy.functions.elementary.hyperbolic)": [[68, "sympy.functions.elementary.hyperbolic.cosh", false]], "cosine_transform() (in module sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.cosine_transform", false]], "cosinetransform (class in sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.CosineTransform", false]], "coskewness() (in module sympy.stats)": [[231, "sympy.stats.coskewness", false]], "cot (class in sympy.functions.elementary.trigonometric)": [[68, "sympy.functions.elementary.trigonometric.cot", false]], "coth (class in sympy.functions.elementary.hyperbolic)": [[68, "sympy.functions.elementary.hyperbolic.coth", false]], "could_extract_minus_sign() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.could_extract_minus_sign", false]], "count() (sympy.core.basic.basic method)": [[62, "sympy.core.basic.Basic.count", false]], "count_complex_roots() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.count_complex_roots", false]], "count_digits() (in module sympy.ntheory.digits)": [[102, "sympy.ntheory.digits.count_digits", false]], "count_ops() (in module sympy.core.function)": [[62, "sympy.core.function.count_ops", false]], "count_ops() (sympy.core.basic.basic method)": [[62, "sympy.core.basic.Basic.count_ops", false]], "count_partitions() (sympy.utilities.enumerative.multisetpartitiontraverser method)": [[246, "sympy.utilities.enumerative.MultisetPartitionTraverser.count_partitions", false]], "count_real_roots() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.count_real_roots", false]], "count_roots() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.count_roots", false]], "count_roots() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.count_roots", false]], "couple() (in module sympy.physics.quantum.spin)": [[173, "sympy.physics.quantum.spin.couple", false]], "covarderivativeop (class in sympy.diffgeom)": [[64, "sympy.diffgeom.CovarDerivativeOp", false]], "covariance (class in sympy.stats)": [[231, "sympy.stats.Covariance", false]], "covariance() (in module sympy.stats)": [[231, "sympy.stats.covariance", false]], "covering_product() (in module sympy.discrete.convolutions)": [[65, "sympy.discrete.convolutions.covering_product", false]], "coxeter_diagram() (sympy.liealgebras.weyl_group.weylgroup method)": [[91, "sympy.liealgebras.weyl_group.WeylGroup.coxeter_diagram", false]], "create_expand_pow_optimization() (in module sympy.codegen.rewriting)": [[43, "sympy.codegen.rewriting.create_expand_pow_optimization", false]], "create_new() (sympy.vector.coordsysrect.coordsys3d method)": [[256, "sympy.vector.coordsysrect.CoordSys3D.create_new", false]], "createboson (class in sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.CreateBoson", false]], "createcgate() (in module sympy.physics.quantum.circuitplot)": [[156, "sympy.physics.quantum.circuitplot.CreateCGate", false]], "createfermion (class in sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.CreateFermion", false]], "critical_angle() (in module sympy.physics.optics.utils)": [[149, "sympy.physics.optics.utils.critical_angle", false]], "cross() (in module sympy.physics.vector.functions)": [[188, "sympy.physics.vector.functions.cross", false]], "cross() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.cross", false]], "cross() (sympy.physics.vector.dyadic.dyadic method)": [[186, "sympy.physics.vector.dyadic.Dyadic.cross", false]], "cross() (sympy.physics.vector.vector.vector method)": [[186, "sympy.physics.vector.vector.Vector.cross", false]], "cross() (sympy.vector.deloperator.del method)": [[256, "sympy.vector.deloperator.Del.cross", false]], "cross() (sympy.vector.dyadic.dyadic method)": [[256, "sympy.vector.dyadic.Dyadic.cross", false]], "cross() (sympy.vector.vector.vector method)": [[256, "sympy.vector.vector.Vector.cross", false]], "cross_section (sympy.physics.continuum_mechanics.beam.beam property)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.cross_section", false]], "crosscovariancematrix (class in sympy.stats)": [[231, "sympy.stats.CrossCovarianceMatrix", false]], "crt() (in module sympy.ntheory.modular)": [[102, "sympy.ntheory.modular.crt", false]], "crt1() (in module sympy.ntheory.modular)": [[102, "sympy.ntheory.modular.crt1", false]], "crt2() (in module sympy.ntheory.modular)": [[102, "sympy.ntheory.modular.crt2", false]], "csc (class in sympy.functions.elementary.trigonometric)": [[68, "sympy.functions.elementary.trigonometric.csc", false]], "csch (class in sympy.functions.elementary.hyperbolic)": [[68, "sympy.functions.elementary.hyperbolic.csch", false]], "cse() (in module sympy.simplify.cse_main)": [[223, "sympy.simplify.cse_main.cse", false]], "cse() (sympy.codegen.ast.codeblock method)": [[43, "sympy.codegen.ast.CodeBlock.cse", false]], "cubicthue (class in sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.CubicThue", false]], "curl() (in module sympy.physics.vector.fieldfunctions)": [[187, "sympy.physics.vector.fieldfunctions.curl", false]], "curl() (in module sympy.vector)": [[259, "sympy.vector.curl", false]], "current (sympy.combinatorics.graycode.graycode property)": [[46, "sympy.combinatorics.graycode.GrayCode.current", false]], "curve (class in sympy.geometry.curve)": [[71, "sympy.geometry.curve.Curve", false]], "curvedmirror (class in sympy.physics.optics.gaussopt)": [[145, "sympy.physics.optics.gaussopt.CurvedMirror", false]], "curvedrefraction (class in sympy.physics.optics.gaussopt)": [[145, "sympy.physics.optics.gaussopt.CurvedRefraction", false]], "cut_section() (sympy.geometry.polygon.polygon method)": [[78, "sympy.geometry.polygon.Polygon.cut_section", false]], "cxx11codeprinter (class in sympy.printing.cxx)": [[211, "sympy.printing.cxx.CXX11CodePrinter", false]], "cxx98codeprinter (class in sympy.printing.cxx)": [[211, "sympy.printing.cxx.CXX98CodePrinter", false]], "cxxcode() (in module sympy.printing.codeprinter)": [[211, "sympy.printing.codeprinter.cxxcode", false]], "cycle (class in sympy.combinatorics.permutations)": [[54, "sympy.combinatorics.permutations.Cycle", false]], "cycle_length() (in module sympy.ntheory.generate)": [[102, "sympy.ntheory.generate.cycle_length", false]], "cycle_list() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.cycle_list", false]], "cycle_structure (sympy.combinatorics.permutations.permutation property)": [[54, "sympy.combinatorics.permutations.Permutation.cycle_structure", false]], "cycles (sympy.combinatorics.permutations.permutation property)": [[54, "sympy.combinatorics.permutations.Permutation.cycles", false]], "cyclic() (sympy.combinatorics.generators method)": [[54, "sympy.combinatorics.generators.cyclic", false]], "cyclic_form (sympy.combinatorics.permutations.permutation property)": [[54, "sympy.combinatorics.permutations.Permutation.cyclic_form", false]], "cyclic_form (sympy.combinatorics.polyhedron.polyhedron property)": [[55, "sympy.combinatorics.polyhedron.Polyhedron.cyclic_form", false]], "cyclicgroup() (in module sympy.combinatorics.named_groups)": [[50, "sympy.combinatorics.named_groups.CyclicGroup", false]], "cyclotomic_field() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.cyclotomic_field", false]], "cyclotomic_poly() (in module sympy.polys.specialpolys)": [[207, "sympy.polys.specialpolys.cyclotomic_poly", false]], "cylindricaljoint (class in sympy.physics.mechanics.joint)": [[120, "sympy.physics.mechanics.joint.CylindricalJoint", false]], "cythoncodewrapper (class in sympy.utilities.autowrap)": [[243, "sympy.utilities.autowrap.CythonCodeWrapper", false]], "d (sympy.matrices.matrices.matrixbase property)": [[98, "sympy.matrices.matrices.MatrixBase.D", false]], "d (sympy.physics.optics.gaussopt.raytransfermatrix property)": [[145, "sympy.physics.optics.gaussopt.RayTransferMatrix.D", false]], "d() (sympy.physics.quantum.spin.rotation class method)": [[173, "sympy.physics.quantum.spin.Rotation.D", false], [173, "sympy.physics.quantum.spin.Rotation.d", false]], "dagger (class in sympy.physics.quantum.dagger)": [[159, "sympy.physics.quantum.dagger.Dagger", false]], "dagger (class in sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.Dagger", false]], "dagum() (in module sympy.stats)": [[231, "sympy.stats.Dagum", false]], "datatype (class in sympy.utilities.codegen)": [[244, "sympy.utilities.codegen.DataType", false]], "dc_gain() (sympy.physics.control.lti.transferfunction method)": [[112, "sympy.physics.control.lti.TransferFunction.dc_gain", false]], "dcm() (sympy.physics.mechanics.body.body method)": [[117, "sympy.physics.mechanics.body.Body.dcm", false]], "dcm() (sympy.physics.vector.frame.referenceframe method)": [[186, "sympy.physics.vector.frame.ReferenceFrame.dcm", false]], "ddm (class in sympy.polys.matrices.ddm)": [[200, "sympy.polys.matrices.ddm.DDM", false]], "debug() (in module sympy.utilities.misc)": [[252, "sympy.utilities.misc.debug", false]], "debug_decorator() (in module sympy.utilities.misc)": [[252, "sympy.utilities.misc.debug_decorator", false]], "debugf() (in module sympy.utilities.misc)": [[252, "sympy.utilities.misc.debugf", false]], "decimal_dig (sympy.codegen.ast.floattype property)": [[43, "sympy.codegen.ast.FloatType.decimal_dig", false]], "decipher_affine() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.decipher_affine", false]], "decipher_atbash() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.decipher_atbash", false]], "decipher_bifid() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.decipher_bifid", false]], "decipher_bifid5() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.decipher_bifid5", false]], "decipher_bifid6() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.decipher_bifid6", false]], "decipher_elgamal() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.decipher_elgamal", false]], "decipher_gm() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.decipher_gm", false]], "decipher_hill() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.decipher_hill", false]], "decipher_kid_rsa() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.decipher_kid_rsa", false]], "decipher_railfence() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.decipher_railfence", false]], "decipher_rot13() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.decipher_rot13", false]], "decipher_rsa() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.decipher_rsa", false]], "decipher_shift() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.decipher_shift", false]], "decipher_vigenere() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.decipher_vigenere", false]], "declaration (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.Declaration", false]], "decode_morse() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.decode_morse", false]], "decompose() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.decompose", false]], "decompose() (sympy.physics.quantum.gate.cgate method)": [[160, "sympy.physics.quantum.gate.CGate.decompose", false]], "decompose() (sympy.physics.quantum.gate.swapgate method)": [[160, "sympy.physics.quantum.gate.SwapGate.decompose", false]], "decompose() (sympy.physics.quantum.qft.iqft method)": [[169, "sympy.physics.quantum.qft.IQFT.decompose", false]], "decompose() (sympy.physics.quantum.qft.qft method)": [[169, "sympy.physics.quantum.qft.QFT.decompose", false]], "decompose() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.decompose", false]], "decompose() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.decompose", false]], "decompose() (sympy.stats.discretemarkovchain method)": [[231, "sympy.stats.DiscreteMarkovChain.decompose", false]], "deduced() (sympy.codegen.ast.variable class method)": [[43, "sympy.codegen.ast.Variable.deduced", false]], "default_sort_key() (in module sympy.core.sorting)": [[62, "sympy.core.sorting.default_sort_key", false]], "deflate() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.deflate", false]], "deflate() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.deflate", false]], "deflection() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.deflection", false]], "deflection() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.deflection", false]], "degree (sympy.combinatorics.perm_groups.permutationgroup property)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.degree", false]], "degree() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.degree", false]], "degree() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.degree", false]], "degree() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.degree", false]], "degree() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.degree", false]], "degree_list() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.degree_list", false]], "degree_list() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.degree_list", false]], "degree_list() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.degree_list", false]], "degrees() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.degrees", false]], "del (class in sympy.vector.deloperator)": [[256, "sympy.vector.deloperator.Del", false]], "delete_doubles() (sympy.liealgebras.weyl_group.weylgroup method)": [[91, "sympy.liealgebras.weyl_group.WeylGroup.delete_doubles", false]], "delta (sympy.functions.special.hyper.meijerg property)": [[70, "sympy.functions.special.hyper.meijerg.delta", false]], "deltaintegrate() (in module sympy.integrals.deltafunctions)": [[89, "sympy.integrals.deltafunctions.deltaintegrate", false]], "den (sympy.physics.control.lti.transferfunction property)": [[112, "sympy.physics.control.lti.TransferFunction.den", false]], "denom() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.denom", false]], "denom() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.denom", false]], "denom() (sympy.polys.domains.expressiondomain method)": [[202, "sympy.polys.domains.ExpressionDomain.denom", false]], "denom() (sympy.polys.domains.fractionfield method)": [[202, "sympy.polys.domains.FractionField.denom", false]], "denom() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianRationalField.denom", false]], "denom() (sympy.polys.domains.gmpyrationalfield method)": [[202, "sympy.polys.domains.GMPYRationalField.denom", false]], "denom() (sympy.polys.domains.rationalfield method)": [[202, "sympy.polys.domains.RationalField.denom", false]], "denom() (sympy.polys.domains.ring.ring method)": [[202, "sympy.polys.domains.ring.Ring.denom", false]], "denom() (sympy.polys.polyclasses.dmf method)": [[202, "sympy.polys.polyclasses.DMF.denom", false]], "densematrix (class in sympy.matrices.dense)": [[94, "sympy.matrices.dense.DenseMatrix", false]], "density() (in module sympy.stats)": [[231, "sympy.stats.density", false]], "deprecated() (in module sympy.utilities.decorator)": [[245, "sympy.utilities.decorator.deprecated", false]], "depth() (sympy.polys.agca.ideals.ideal method)": [[198, "sympy.polys.agca.ideals.Ideal.depth", false]], "derivative (class in sympy.core.function)": [[62, "sympy.core.function.Derivative", false]], "derive_by_array() (in module sympy.tensor.array)": [[232, "sympy.tensor.array.derive_by_array", false]], "derived_series() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.derived_series", false]], "derived_subgroup() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.derived_subgroup", false]], "descent() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.descent", false]], "descents() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.descents", false]], "det() (sympy.matrices.matrices.matrixdeterminant method)": [[98, "sympy.matrices.matrices.MatrixDeterminant.det", false]], "det() (sympy.polys.matrices.ddm.ddm method)": [[200, "sympy.polys.matrices.ddm.DDM.det", false]], "det() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.det", false]], "det() (sympy.polys.matrices.sdm.sdm method)": [[200, "sympy.polys.matrices.sdm.SDM.det", false]], "deviation() (in module sympy.physics.optics.utils)": [[149, "sympy.physics.optics.utils.deviation", false]], "dh_private_key() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.dh_private_key", false]], "dh_public_key() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.dh_public_key", false]], "dh_shared_key() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.dh_shared_key", false]], "diag() (in module sympy.matrices.dense)": [[98, "sympy.matrices.dense.diag", false]], "diag() (sympy.matrices.common.matrixcommon class method)": [[93, "sympy.matrices.common.MatrixCommon.diag", false]], "diag() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.diag", false]], "diagonal() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.diagonal", false]], "diagonal_solve() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.diagonal_solve", false]], "diagonalize() (sympy.matrices.matrices.matrixeigen method)": [[98, "sympy.matrices.matrices.MatrixEigen.diagonalize", false]], "diagonalpredicate (class in sympy.assumptions.predicates.matrices)": [[39, "sympy.assumptions.predicates.matrices.DiagonalPredicate", false]], "diagram (class in sympy.categories)": [[42, "sympy.categories.Diagram", false]], "diagramgrid (class in sympy.categories.diagram_drawing)": [[42, "sympy.categories.diagram_drawing.DiagramGrid", false]], "dict (class in sympy.core.containers)": [[62, "sympy.core.containers.Dict", false]], "dict_merge() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.dict_merge", false]], "die() (in module sympy.stats)": [[231, "sympy.stats.Die", false]], "diepspace (class in sympy.stats.frv_types)": [[231, "sympy.stats.frv_types.DiePSpace", false]], "diff() (in module sympy.core.function)": [[62, "sympy.core.function.diff", false]], "diff() (sympy.holonomic.holonomic.holonomicfunction method)": [[84, "sympy.holonomic.holonomic.HolonomicFunction.diff", false]], "diff() (sympy.matrices.matrices.matrixcalculus method)": [[98, "sympy.matrices.matrices.MatrixCalculus.diff", false]], "diff() (sympy.physics.vector.vector.vector method)": [[186, "sympy.physics.vector.vector.Vector.diff", false]], "diff() (sympy.polys.fields.fracelement method)": [[202, "sympy.polys.fields.FracElement.diff", false]], "diff() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.diff", false]], "diff() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.diff", false]], "diff() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.diff", false]], "difference_delta() (in module sympy.series.limitseq)": [[216, "sympy.series.limitseq.difference_delta", false]], "differential (class in sympy.diffgeom)": [[64, "sympy.diffgeom.Differential", false]], "differentialoperator (class in sympy.holonomic.holonomic)": [[85, "sympy.holonomic.holonomic.DifferentialOperator", false]], "differentialoperator (class in sympy.physics.quantum.operator)": [[165, "sympy.physics.quantum.operator.DifferentialOperator", false]], "differentialoperatoralgebra (class in sympy.holonomic.holonomic)": [[85, "sympy.holonomic.holonomic.DifferentialOperatorAlgebra", false]], "differentialoperators() (in module sympy.holonomic.holonomic)": [[85, "sympy.holonomic.holonomic.DifferentialOperators", false]], "differentiate_finite() (in module sympy.calculus.finite_diff)": [[41, "sympy.calculus.finite_diff.differentiate_finite", false]], "dig (sympy.codegen.ast.floattype property)": [[43, "sympy.codegen.ast.FloatType.dig", false]], "digamma (class in sympy.functions.special.gamma_functions)": [[70, "sympy.functions.special.gamma_functions.digamma", false]], "digit_2txt (in module sympy.printing.pretty.pretty_symbology)": [[211, "sympy.printing.pretty.pretty_symbology.digit_2txt", false]], "digits() (in module sympy.ntheory.digits)": [[102, "sympy.ntheory.digits.digits", false]], "digits() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.digits", false]], "dihedral() (sympy.combinatorics.generators method)": [[54, "sympy.combinatorics.generators.dihedral", false]], "dihedralgroup() (in module sympy.combinatorics.named_groups)": [[50, "sympy.combinatorics.named_groups.DihedralGroup", false]], "dim (sympy.physics.units.dimensions.dimensionsystem property)": [[178, "sympy.physics.units.dimensions.DimensionSystem.dim", false]], "dim (sympy.physics.units.unitsystem.unitsystem property)": [[184, "sympy.physics.units.unitsystem.UnitSystem.dim", false]], "dim_can_vector() (sympy.physics.units.dimensions.dimensionsystem method)": [[178, "sympy.physics.units.dimensions.DimensionSystem.dim_can_vector", false]], "dim_handling() (in module sympy.printing.aesaracode)": [[211, "sympy.printing.aesaracode.dim_handling", false]], "dim_vector() (sympy.physics.units.dimensions.dimensionsystem method)": [[178, "sympy.physics.units.dimensions.DimensionSystem.dim_vector", false]], "dimension (class in sympy.physics.units.dimensions)": [[178, "sympy.physics.units.dimensions.Dimension", false]], "dimension (sympy.physics.quantum.hilbert.hilbertspace property)": [[162, "sympy.physics.quantum.hilbert.HilbertSpace.dimension", false]], "dimension() (in module sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.dimension", false]], "dimension() (sympy.liealgebras.type_a.typea method)": [[91, "sympy.liealgebras.type_a.TypeA.dimension", false]], "dimension() (sympy.liealgebras.type_b.typeb method)": [[91, "sympy.liealgebras.type_b.TypeB.dimension", false]], "dimension() (sympy.liealgebras.type_c.typec method)": [[91, "sympy.liealgebras.type_c.TypeC.dimension", false]], "dimension() (sympy.liealgebras.type_d.typed method)": [[91, "sympy.liealgebras.type_d.TypeD.dimension", false]], "dimension() (sympy.liealgebras.type_e.typee method)": [[91, "sympy.liealgebras.type_e.TypeE.dimension", false]], "dimension() (sympy.liealgebras.type_f.typef method)": [[91, "sympy.liealgebras.type_f.TypeF.dimension", false]], "dimension() (sympy.liealgebras.type_g.typeg method)": [[91, "sympy.liealgebras.type_g.TypeG.dimension", false]], "dimensionsystem (class in sympy.physics.units.dimensions)": [[178, "sympy.physics.units.dimensions.DimensionSystem", false]], "diop_bf_dn() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.diop_bf_DN", false]], "diop_dn() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.diop_DN", false]], "diop_general_pythagorean() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.diop_general_pythagorean", false]], "diop_general_sum_of_even_powers() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.diop_general_sum_of_even_powers", false]], "diop_general_sum_of_squares() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.diop_general_sum_of_squares", false]], "diop_linear() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.diop_linear", false]], "diop_quadratic() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.diop_quadratic", false]], "diop_solve() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.diop_solve", false]], "diop_ternary_quadratic() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.diop_ternary_quadratic", false]], "diop_ternary_quadratic_normal() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.diop_ternary_quadratic_normal", false]], "diophantine() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.diophantine", false]], "diophantineequationtype (class in sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.DiophantineEquationType", false]], "diophantinesolutionset (class in sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.DiophantineSolutionSet", false]], "diracdelta (class in sympy.functions.special.delta_functions)": [[70, "sympy.functions.special.delta_functions.DiracDelta", false]], "direct_product() (sympy.tensor.tensor.tensorsymmetry class method)": [[237, "sympy.tensor.tensor.TensorSymmetry.direct_product", false]], "direction (sympy.geometry.line.linearentity property)": [[75, "sympy.geometry.line.LinearEntity.direction", false]], "direction_cosine (sympy.geometry.line.linearentity3d property)": [[75, "sympy.geometry.line.LinearEntity3D.direction_cosine", false]], "direction_cosine() (sympy.geometry.point.point3d method)": [[77, "sympy.geometry.point.Point3D.direction_cosine", false]], "direction_ratio (sympy.geometry.line.linearentity3d property)": [[75, "sympy.geometry.line.LinearEntity3D.direction_ratio", false]], "direction_ratio() (sympy.geometry.point.point3d method)": [[77, "sympy.geometry.point.Point3D.direction_ratio", false]], "director_circle() (sympy.geometry.ellipse.ellipse method)": [[72, "sympy.geometry.ellipse.Ellipse.director_circle", false]], "directproduct() (in module sympy.combinatorics.group_constructs)": [[47, "sympy.combinatorics.group_constructs.DirectProduct", false]], "directsumhilbertspace (class in sympy.physics.quantum.hilbert)": [[162, "sympy.physics.quantum.hilbert.DirectSumHilbertSpace", false]], "dirichlet_eta (class in sympy.functions.special.zeta_functions)": [[70, "sympy.functions.special.zeta_functions.dirichlet_eta", false]], "discard_before() (sympy.polys.numberfields.modules.submodule method)": [[206, "sympy.polys.numberfields.modules.Submodule.discard_before", false]], "discrete_log() (in module sympy.ntheory.residue_ntheory)": [[102, "sympy.ntheory.residue_ntheory.discrete_log", false]], "discretemarkovchain (class in sympy.stats)": [[231, "sympy.stats.DiscreteMarkovChain", false]], "discreteuniform() (in module sympy.stats)": [[231, "sympy.stats.DiscreteUniform", false]], "discriminant() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.discriminant", false]], "discriminant() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.discriminant", false]], "discriminant() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.discriminant", false]], "discriminant() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.discriminant", false]], "disjointunion (class in sympy.sets.sets)": [[219, "sympy.sets.sets.DisjointUnion", false]], "dispersion() (in module sympy.polys.dispersion)": [[207, "sympy.polys.dispersion.dispersion", false]], "dispersion() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.dispersion", false]], "dispersionset() (in module sympy.polys.dispersion)": [[207, "sympy.polys.dispersion.dispersionset", false]], "dispersionset() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.dispersionset", false]], "distance() (sympy.geometry.line.line method)": [[75, "sympy.geometry.line.Line.distance", false]], "distance() (sympy.geometry.line.ray method)": [[75, "sympy.geometry.line.Ray.distance", false]], "distance() (sympy.geometry.line.segment method)": [[75, "sympy.geometry.line.Segment.distance", false]], "distance() (sympy.geometry.plane.plane method)": [[76, "sympy.geometry.plane.Plane.distance", false]], "distance() (sympy.geometry.point.point method)": [[77, "sympy.geometry.point.Point.distance", false]], "distance() (sympy.geometry.polygon.polygon method)": [[78, "sympy.geometry.polygon.Polygon.distance", false]], "distribute_and_over_or() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.distribute_and_over_or", false]], "distribute_or_over_and() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.distribute_or_over_and", false]], "distribute_xor_over_and() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.distribute_xor_over_and", false]], "div() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.div", false]], "div() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.div", false]], "div() (sympy.polys.domains.field.field method)": [[202, "sympy.polys.domains.field.Field.div", false]], "div() (sympy.polys.domains.gmpyrationalfield method)": [[202, "sympy.polys.domains.GMPYRationalField.div", false]], "div() (sympy.polys.domains.rationalfield method)": [[202, "sympy.polys.domains.RationalField.div", false]], "div() (sympy.polys.domains.ring.ring method)": [[202, "sympy.polys.domains.ring.Ring.div", false]], "div() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.div", false]], "div() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.div", false]], "div() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.div", false]], "divergence (sympy.physics.optics.gaussopt.beamparameter property)": [[145, "sympy.physics.optics.gaussopt.BeamParameter.divergence", false]], "divergence() (in module sympy.physics.vector.fieldfunctions)": [[187, "sympy.physics.vector.fieldfunctions.divergence", false]], "divergence() (in module sympy.vector)": [[259, "sympy.vector.divergence", false]], "divisible() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.divisible", false]], "divisor_count() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.divisor_count", false]], "divisor_sigma (class in sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.divisor_sigma", false]], "divisors() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.divisors", false]], "dmf (class in sympy.polys.polyclasses)": [[202, "sympy.polys.polyclasses.DMF", false]], "dmp (class in sympy.polys.polyclasses)": [[202, "sympy.polys.polyclasses.DMP", false]], "dmp_abs() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_abs", false]], "dmp_add() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_add", false]], "dmp_add_ground() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_add_ground", false]], "dmp_add_mul() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_add_mul", false]], "dmp_add_term() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_add_term", false]], "dmp_apply_pairs() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_apply_pairs", false]], "dmp_cancel() (in module sympy.polys.euclidtools)": [[204, "sympy.polys.euclidtools.dmp_cancel", false]], "dmp_clear_denoms() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dmp_clear_denoms", false]], "dmp_compose() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dmp_compose", false]], "dmp_content() (in module sympy.polys.euclidtools)": [[204, "sympy.polys.euclidtools.dmp_content", false]], "dmp_convert() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_convert", false]], "dmp_copy() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_copy", false]], "dmp_deflate() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_deflate", false]], "dmp_degree() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_degree", false]], "dmp_degree_in() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_degree_in", false]], "dmp_degree_list() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_degree_list", false]], "dmp_diff() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dmp_diff", false]], "dmp_diff_eval_in() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dmp_diff_eval_in", false]], "dmp_diff_in() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dmp_diff_in", false]], "dmp_discriminant() (in module sympy.polys.euclidtools)": [[204, "sympy.polys.euclidtools.dmp_discriminant", false]], "dmp_div() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_div", false]], "dmp_eject() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_eject", false]], "dmp_euclidean_prs() (in module sympy.polys.euclidtools)": [[204, "sympy.polys.euclidtools.dmp_euclidean_prs", false]], "dmp_eval() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dmp_eval", false]], "dmp_eval_in() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dmp_eval_in", false]], "dmp_eval_tail() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dmp_eval_tail", false]], "dmp_exclude() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_exclude", false]], "dmp_expand() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_expand", false]], "dmp_exquo() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_exquo", false]], "dmp_exquo_ground() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_exquo_ground", false]], "dmp_ext_factor() (in module sympy.polys.factortools)": [[204, "sympy.polys.factortools.dmp_ext_factor", false]], "dmp_factor_list() (in module sympy.polys.factortools)": [[204, "sympy.polys.factortools.dmp_factor_list", false]], "dmp_factor_list_include() (in module sympy.polys.factortools)": [[204, "sympy.polys.factortools.dmp_factor_list_include", false]], "dmp_ff_div() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_ff_div", false]], "dmp_ff_prs_gcd() (in module sympy.polys.euclidtools)": [[204, "sympy.polys.euclidtools.dmp_ff_prs_gcd", false]], "dmp_from_dict() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_from_dict", false]], "dmp_from_sympy() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_from_sympy", false]], "dmp_gcd() (in module sympy.polys.euclidtools)": [[204, "sympy.polys.euclidtools.dmp_gcd", false]], "dmp_gcdex() (in module sympy.polys.euclidtools)": [[204, "sympy.polys.euclidtools.dmp_gcdex", false]], "dmp_ground() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_ground", false]], "dmp_ground_content() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dmp_ground_content", false]], "dmp_ground_extract() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dmp_ground_extract", false]], "dmp_ground_lc() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_ground_LC", false]], "dmp_ground_monic() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dmp_ground_monic", false]], "dmp_ground_nth() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_ground_nth", false]], "dmp_ground_p() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_ground_p", false]], "dmp_ground_primitive() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dmp_ground_primitive", false]], "dmp_ground_tc() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_ground_TC", false]], "dmp_ground_trunc() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dmp_ground_trunc", false]], "dmp_grounds() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_grounds", false]], "dmp_half_gcdex() (in module sympy.polys.euclidtools)": [[204, "sympy.polys.euclidtools.dmp_half_gcdex", false]], "dmp_include() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_include", false]], "dmp_inflate() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_inflate", false]], "dmp_inject() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_inject", false]], "dmp_inner_gcd() (in module sympy.polys.euclidtools)": [[204, "sympy.polys.euclidtools.dmp_inner_gcd", false]], "dmp_inner_subresultants() (in module sympy.polys.euclidtools)": [[204, "sympy.polys.euclidtools.dmp_inner_subresultants", false]], "dmp_integrate() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dmp_integrate", false]], "dmp_integrate_in() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dmp_integrate_in", false]], "dmp_invert() (in module sympy.polys.euclidtools)": [[204, "sympy.polys.euclidtools.dmp_invert", false]], "dmp_irreducible_p() (in module sympy.polys.factortools)": [[204, "sympy.polys.factortools.dmp_irreducible_p", false]], "dmp_l1_norm() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_l1_norm", false]], "dmp_lc() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_LC", false]], "dmp_lcm() (in module sympy.polys.euclidtools)": [[204, "sympy.polys.euclidtools.dmp_lcm", false]], "dmp_lift() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dmp_lift", false]], "dmp_list_terms() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_list_terms", false]], "dmp_max_norm() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_max_norm", false]], "dmp_mul() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_mul", false]], "dmp_mul_ground() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_mul_ground", false]], "dmp_mul_term() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_mul_term", false]], "dmp_multi_deflate() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_multi_deflate", false]], "dmp_neg() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_neg", false]], "dmp_negative_p() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_negative_p", false]], "dmp_nest() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_nest", false]], "dmp_normal() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_normal", false]], "dmp_nth() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_nth", false]], "dmp_one() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_one", false]], "dmp_one_p() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_one_p", false]], "dmp_pdiv() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_pdiv", false]], "dmp_permute() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_permute", false]], "dmp_pexquo() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_pexquo", false]], "dmp_positive_p() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_positive_p", false]], "dmp_pow() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_pow", false]], "dmp_pquo() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_pquo", false]], "dmp_prem() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_prem", false]], "dmp_primitive() (in module sympy.polys.euclidtools)": [[204, "sympy.polys.euclidtools.dmp_primitive", false]], "dmp_primitive_prs() (in module sympy.polys.euclidtools)": [[204, "sympy.polys.euclidtools.dmp_primitive_prs", false]], "dmp_prs_resultant() (in module sympy.polys.euclidtools)": [[204, "sympy.polys.euclidtools.dmp_prs_resultant", false]], "dmp_qq_collins_resultant() (in module sympy.polys.euclidtools)": [[204, "sympy.polys.euclidtools.dmp_qq_collins_resultant", false]], "dmp_qq_heu_gcd() (in module sympy.polys.euclidtools)": [[204, "sympy.polys.euclidtools.dmp_qq_heu_gcd", false]], "dmp_quo() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_quo", false]], "dmp_quo_ground() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_quo_ground", false]], "dmp_raise() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_raise", false]], "dmp_rem() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_rem", false]], "dmp_resultant() (in module sympy.polys.euclidtools)": [[204, "sympy.polys.euclidtools.dmp_resultant", false]], "dmp_revert() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dmp_revert", false]], "dmp_rr_div() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_rr_div", false]], "dmp_rr_prs_gcd() (in module sympy.polys.euclidtools)": [[204, "sympy.polys.euclidtools.dmp_rr_prs_gcd", false]], "dmp_slice() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_slice", false]], "dmp_sqr() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_sqr", false]], "dmp_strip() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_strip", false]], "dmp_sub() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_sub", false]], "dmp_sub_ground() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_sub_ground", false]], "dmp_sub_mul() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_sub_mul", false]], "dmp_sub_term() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dmp_sub_term", false]], "dmp_subresultants() (in module sympy.polys.euclidtools)": [[204, "sympy.polys.euclidtools.dmp_subresultants", false]], "dmp_swap() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_swap", false]], "dmp_tc() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_TC", false]], "dmp_terms_gcd() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_terms_gcd", false]], "dmp_to_dict() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_to_dict", false]], "dmp_to_tuple() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_to_tuple", false]], "dmp_trial_division() (in module sympy.polys.factortools)": [[204, "sympy.polys.factortools.dmp_trial_division", false]], "dmp_true_lt() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_true_LT", false]], "dmp_trunc() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dmp_trunc", false]], "dmp_validate() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_validate", false]], "dmp_zero() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_zero", false]], "dmp_zero_p() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_zero_p", false]], "dmp_zeros() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dmp_zeros", false]], "dmp_zz_collins_resultant() (in module sympy.polys.euclidtools)": [[204, "sympy.polys.euclidtools.dmp_zz_collins_resultant", false]], "dmp_zz_diophantine() (in module sympy.polys.factortools)": [[204, "sympy.polys.factortools.dmp_zz_diophantine", false]], "dmp_zz_factor() (in module sympy.polys.factortools)": [[204, "sympy.polys.factortools.dmp_zz_factor", false]], "dmp_zz_heu_gcd() (in module sympy.polys.euclidtools)": [[204, "sympy.polys.euclidtools.dmp_zz_heu_gcd", false]], "dmp_zz_mignotte_bound() (in module sympy.polys.factortools)": [[204, "sympy.polys.factortools.dmp_zz_mignotte_bound", false]], "dmp_zz_modular_resultant() (in module sympy.polys.euclidtools)": [[204, "sympy.polys.euclidtools.dmp_zz_modular_resultant", false]], "dmp_zz_wang() (in module sympy.polys.factortools)": [[204, "sympy.polys.factortools.dmp_zz_wang", false]], "dmp_zz_wang_hensel_lifting() (in module sympy.polys.factortools)": [[204, "sympy.polys.factortools.dmp_zz_wang_hensel_lifting", false]], "dmp_zz_wang_lead_coeffs() (in module sympy.polys.factortools)": [[204, "sympy.polys.factortools.dmp_zz_wang_lead_coeffs", false]], "dmp_zz_wang_non_divisors() (in module sympy.polys.factortools)": [[204, "sympy.polys.factortools.dmp_zz_wang_non_divisors", false]], "dmp_zz_wang_test_points() (in module sympy.polys.factortools)": [[204, "sympy.polys.factortools.dmp_zz_wang_test_points", false]], "do (class in sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.Do", false]], "do_subs() (sympy.series.gruntz.subsset method)": [[218, "sympy.series.gruntz.SubsSet.do_subs", false]], "doctest() (in module sympy.testing.runtests)": [[242, "sympy.testing.runtests.doctest", false]], "doctest_depends_on() (in module sympy.utilities.decorator)": [[245, "sympy.utilities.decorator.doctest_depends_on", false]], "doit() (sympy.core.basic.basic method)": [[62, "sympy.core.basic.Basic.doit", false]], "doit() (sympy.functions.elementary.piecewise.piecewise method)": [[68, "sympy.functions.elementary.piecewise.Piecewise.doit", false]], "doit() (sympy.integrals.integrals.integral method)": [[89, "sympy.integrals.integrals.Integral.doit", false]], "doit() (sympy.integrals.transforms.integraltransform method)": [[89, "sympy.integrals.transforms.IntegralTransform.doit", false]], "doit() (sympy.integrals.transforms.inverselaplacetransform method)": [[89, "sympy.integrals.transforms.InverseLaplaceTransform.doit", false]], "doit() (sympy.integrals.transforms.laplacetransform method)": [[89, "sympy.integrals.transforms.LaplaceTransform.doit", false]], "doit() (sympy.physics.control.lti.feedback method)": [[112, "sympy.physics.control.lti.Feedback.doit", false]], "doit() (sympy.physics.control.lti.mimofeedback method)": [[112, "sympy.physics.control.lti.MIMOFeedback.doit", false]], "doit() (sympy.physics.control.lti.mimoparallel method)": [[112, "sympy.physics.control.lti.MIMOParallel.doit", false]], "doit() (sympy.physics.control.lti.mimoseries method)": [[112, "sympy.physics.control.lti.MIMOSeries.doit", false]], "doit() (sympy.physics.control.lti.parallel method)": [[112, "sympy.physics.control.lti.Parallel.doit", false]], "doit() (sympy.physics.control.lti.series method)": [[112, "sympy.physics.control.lti.Series.doit", false]], "doit() (sympy.physics.quantum.anticommutator.anticommutator method)": [[153, "sympy.physics.quantum.anticommutator.AntiCommutator.doit", false]], "doit() (sympy.physics.quantum.commutator.commutator method)": [[157, "sympy.physics.quantum.commutator.Commutator.doit", false]], "doit() (sympy.physics.secondquant.commutator method)": [[176, "sympy.physics.secondquant.Commutator.doit", false]], "doit() (sympy.physics.secondquant.no method)": [[176, "sympy.physics.secondquant.NO.doit", false]], "doit() (sympy.physics.vector.dyadic.dyadic method)": [[186, "sympy.physics.vector.dyadic.Dyadic.doit", false]], "doit() (sympy.physics.vector.vector.vector method)": [[186, "sympy.physics.vector.vector.Vector.doit", false]], "doit() (sympy.series.limits.limit method)": [[218, "sympy.series.limits.Limit.doit", false]], "doit_numerically() (sympy.core.function.derivative method)": [[62, "sympy.core.function.Derivative.doit_numerically", false]], "domain (class in sympy.polys.domains.domain)": [[202, "sympy.polys.domains.domain.Domain", false]], "domain (sympy.categories.compositemorphism property)": [[42, "sympy.categories.CompositeMorphism.domain", false]], "domain (sympy.categories.morphism property)": [[42, "sympy.categories.Morphism.domain", false]], "domain (sympy.polys.polytools.poly property)": [[207, "sympy.polys.polytools.Poly.domain", false]], "domain_check() (in module sympy.solvers.solveset)": [[230, "sympy.solvers.solveset.domain_check", false]], "domainelement (class in sympy.polys.domains.domainelement)": [[202, "sympy.polys.domains.domainelement.DomainElement", false]], "domainerror (class in sympy.polys.polyerrors)": [[204, "sympy.polys.polyerrors.DomainError", false]], "domainmatrix (class in sympy.polys.matrices.domainmatrix)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix", false]], "dominant() (in module sympy.series.limitseq)": [[216, "sympy.series.limitseq.dominant", false]], "doprint() (sympy.printing.aesaracode.aesaraprinter method)": [[211, "sympy.printing.aesaracode.AesaraPrinter.doprint", false]], "doprint() (sympy.printing.codeprinter.codeprinter method)": [[211, "sympy.printing.codeprinter.CodePrinter.doprint", false]], "doprint() (sympy.printing.mathml.mathmlprinterbase method)": [[211, "sympy.printing.mathml.MathMLPrinterBase.doprint", false]], "doprint() (sympy.printing.printer.printer method)": [[211, "sympy.printing.printer.Printer.doprint", false]], "dot() (in module sympy.physics.vector.functions)": [[188, "sympy.physics.vector.functions.dot", false]], "dot() (sympy.geometry.point.point method)": [[77, "sympy.geometry.point.Point.dot", false]], "dot() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.dot", false]], "dot() (sympy.physics.vector.dyadic.dyadic method)": [[186, "sympy.physics.vector.dyadic.Dyadic.dot", false]], "dot() (sympy.physics.vector.vector.vector method)": [[186, "sympy.physics.vector.vector.Vector.dot", false]], "dot() (sympy.vector.deloperator.del method)": [[256, "sympy.vector.deloperator.Del.dot", false]], "dot() (sympy.vector.dyadic.dyadic method)": [[256, "sympy.vector.dyadic.Dyadic.dot", false]], "dot() (sympy.vector.vector.vector method)": [[256, "sympy.vector.vector.Vector.dot", false]], "dot_rot_grad_ynm() (in module sympy.physics.wigner)": [[196, "sympy.physics.wigner.dot_rot_grad_Ynm", false]], "dotprint() (in module sympy.printing.dot)": [[211, "sympy.printing.dot.dotprint", false]], "double_coset_can_rep() (in module sympy.combinatorics.tensor_can)": [[58, "sympy.combinatorics.tensor_can.double_coset_can_rep", false]], "draw() (sympy.categories.diagram_drawing.xypicdiagramdrawer method)": [[42, "sympy.categories.diagram_drawing.XypicDiagramDrawer.draw", false]], "draw() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.draw", false]], "drop() (sympy.polys.domains.compositedomain.compositedomain method)": [[202, "sympy.polys.domains.compositedomain.CompositeDomain.drop", false]], "drop() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.drop", false]], "drop() (sympy.polys.rings.polyring method)": [[202, "sympy.polys.rings.PolyRing.drop", false]], "drop_to_ground() (sympy.polys.rings.polyring method)": [[202, "sympy.polys.rings.PolyRing.drop_to_ground", false]], "dsign (class in sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.dsign", false]], "dsolve() (in module sympy.solvers.ode)": [[227, "sympy.solvers.ode.dsolve", false]], "dsolve_system() (in module sympy.solvers.ode.systems)": [[227, "sympy.solvers.ode.systems.dsolve_system", false]], "dt() (sympy.physics.vector.dyadic.dyadic method)": [[186, "sympy.physics.vector.dyadic.Dyadic.dt", false]], "dt() (sympy.physics.vector.vector.vector method)": [[186, "sympy.physics.vector.vector.Vector.dt", false]], "dtype (sympy.polys.agca.extensions.monogenicfiniteextension attribute)": [[198, "sympy.polys.agca.extensions.MonogenicFiniteExtension.dtype", false]], "dtype (sympy.polys.agca.modules.freemodule attribute)": [[198, "sympy.polys.agca.modules.FreeModule.dtype", false]], "dtype (sympy.polys.agca.modules.quotientmodule attribute)": [[198, "sympy.polys.agca.modules.QuotientModule.dtype", false]], "dtype (sympy.polys.domains.algebraicfield attribute)": [[202, "sympy.polys.domains.AlgebraicField.dtype", false]], "dtype (sympy.polys.domains.domain.domain attribute)": [[202, "sympy.polys.domains.domain.Domain.dtype", false]], "dtype (sympy.polys.domains.expressiondomain attribute)": [[202, "sympy.polys.domains.ExpressionDomain.dtype", false]], "dtype (sympy.polys.domains.gaussiandomains.gaussianintegerring attribute)": [[202, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.dtype", false]], "dtype (sympy.polys.domains.gaussiandomains.gaussianrationalfield attribute)": [[202, "sympy.polys.domains.gaussiandomains.GaussianRationalField.dtype", false]], "dual (sympy.physics.quantum.state.statebase property)": [[174, "sympy.physics.quantum.state.StateBase.dual", false]], "dual() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.dual", false]], "dual_class() (sympy.physics.quantum.state.statebase class method)": [[174, "sympy.physics.quantum.state.StateBase.dual_class", false]], "dummy": [[11, "term-Dummy", true]], "dummy (class in sympy.core.symbol)": [[62, "sympy.core.symbol.Dummy", false]], "dummy_eq() (sympy.core.basic.basic method)": [[62, "sympy.core.basic.Basic.dummy_eq", false]], "dummywrapper (class in sympy.utilities.autowrap)": [[243, "sympy.utilities.autowrap.DummyWrapper", false]], "dump_c() (sympy.utilities.autowrap.ufuncifycodewrapper method)": [[243, "sympy.utilities.autowrap.UfuncifyCodeWrapper.dump_c", false]], "dump_c() (sympy.utilities.codegen.ccodegen method)": [[244, "sympy.utilities.codegen.CCodeGen.dump_c", false]], "dump_code() (sympy.utilities.codegen.codegen method)": [[244, "sympy.utilities.codegen.CodeGen.dump_code", false]], "dump_f95() (sympy.utilities.codegen.fcodegen method)": [[244, "sympy.utilities.codegen.FCodeGen.dump_f95", false]], "dump_h() (sympy.utilities.codegen.ccodegen method)": [[244, "sympy.utilities.codegen.CCodeGen.dump_h", false]], "dump_h() (sympy.utilities.codegen.fcodegen method)": [[244, "sympy.utilities.codegen.FCodeGen.dump_h", false]], "dump_jl() (sympy.utilities.codegen.juliacodegen method)": [[244, "sympy.utilities.codegen.JuliaCodeGen.dump_jl", false]], "dump_m() (sympy.utilities.codegen.octavecodegen method)": [[244, "sympy.utilities.codegen.OctaveCodeGen.dump_m", false]], "dump_pyx() (sympy.utilities.autowrap.cythoncodewrapper method)": [[243, "sympy.utilities.autowrap.CythonCodeWrapper.dump_pyx", false]], "dump_rs() (sympy.utilities.codegen.rustcodegen method)": [[244, "sympy.utilities.codegen.RustCodeGen.dump_rs", false]], "dup_content() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dup_content", false]], "dup_cyclotomic_p() (in module sympy.polys.factortools)": [[204, "sympy.polys.factortools.dup_cyclotomic_p", false]], "dup_decompose() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dup_decompose", false]], "dup_extract() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dup_extract", false]], "dup_gf_factor() (in module sympy.polys.factortools)": [[204, "sympy.polys.factortools.dup_gf_factor", false]], "dup_lshift() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dup_lshift", false]], "dup_mirror() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dup_mirror", false]], "dup_monic() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dup_monic", false]], "dup_primitive() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dup_primitive", false]], "dup_random() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dup_random", false]], "dup_real_imag() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dup_real_imag", false]], "dup_reverse() (in module sympy.polys.densebasic)": [[204, "sympy.polys.densebasic.dup_reverse", false]], "dup_rshift() (in module sympy.polys.densearith)": [[204, "sympy.polys.densearith.dup_rshift", false]], "dup_scale() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dup_scale", false]], "dup_shift() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dup_shift", false]], "dup_sign_variations() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dup_sign_variations", false]], "dup_transform() (in module sympy.polys.densetools)": [[204, "sympy.polys.densetools.dup_transform", false]], "dup_zz_cyclotomic_factor() (in module sympy.polys.factortools)": [[204, "sympy.polys.factortools.dup_zz_cyclotomic_factor", false]], "dup_zz_cyclotomic_poly() (in module sympy.polys.factortools)": [[204, "sympy.polys.factortools.dup_zz_cyclotomic_poly", false]], "dup_zz_factor() (in module sympy.polys.factortools)": [[204, "sympy.polys.factortools.dup_zz_factor", false]], "dup_zz_factor_sqf() (in module sympy.polys.factortools)": [[204, "sympy.polys.factortools.dup_zz_factor_sqf", false]], "dup_zz_hensel_lift() (in module sympy.polys.factortools)": [[204, "sympy.polys.factortools.dup_zz_hensel_lift", false]], "dup_zz_hensel_step() (in module sympy.polys.factortools)": [[204, "sympy.polys.factortools.dup_zz_hensel_step", false]], "dup_zz_irreducible_p() (in module sympy.polys.factortools)": [[204, "sympy.polys.factortools.dup_zz_irreducible_p", false]], "dup_zz_zassenhaus() (in module sympy.polys.factortools)": [[204, "sympy.polys.factortools.dup_zz_zassenhaus", false]], "dyadic (class in sympy.physics.vector.dyadic)": [[186, "sympy.physics.vector.dyadic.Dyadic", false]], "dyadic (class in sympy.vector.dyadic)": [[256, "sympy.vector.dyadic.Dyadic", false]], "dyn_implicit_mat (sympy.physics.mechanics.system.symbolicsystem property)": [[125, "sympy.physics.mechanics.system.SymbolicSystem.dyn_implicit_mat", false]], "dyn_implicit_rhs (sympy.physics.mechanics.system.symbolicsystem property)": [[125, "sympy.physics.mechanics.system.SymbolicSystem.dyn_implicit_rhs", false]], "dynamic_symbols() (sympy.physics.mechanics.system.symbolicsystem method)": [[125, "sympy.physics.mechanics.system.SymbolicSystem.dynamic_symbols", false]], "dynamicsymbols() (in module sympy.physics.vector)": [[188, "sympy.physics.vector.dynamicsymbols", false]], "dynkin_diagram() (sympy.liealgebras.root_system.rootsystem method)": [[91, "sympy.liealgebras.root_system.RootSystem.dynkin_diagram", false]], "dynkindiagram() (in module sympy.liealgebras.dynkin_diagram)": [[91, "sympy.liealgebras.dynkin_diagram.DynkinDiagram", false]], "e() (in module sympy.stats)": [[231, "sympy.stats.E", false]], "e1() (in module sympy.functions.special.error_functions)": [[70, "sympy.functions.special.error_functions.E1", false]], "e_n() (in module sympy.physics.qho_1d)": [[152, "sympy.physics.qho_1d.E_n", false]], "e_nl() (in module sympy.physics.hydrogen)": [[114, "sympy.physics.hydrogen.E_nl", false]], "e_nl() (in module sympy.physics.sho)": [[177, "sympy.physics.sho.E_nl", false]], "e_nl_dirac() (in module sympy.physics.hydrogen)": [[114, "sympy.physics.hydrogen.E_nl_dirac", false]], "ec() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.EC", false]], "eccentricity (sympy.geometry.ellipse.ellipse property)": [[72, "sympy.geometry.ellipse.Ellipse.eccentricity", false]], "echelon_form() (sympy.matrices.matrices.matrixreductions method)": [[98, "sympy.matrices.matrices.MatrixReductions.echelon_form", false]], "ecm() (in module sympy.ntheory.ecm)": [[102, "sympy.ntheory.ecm.ecm", false]], "edges (sympy.combinatorics.polyhedron.polyhedron property)": [[55, "sympy.combinatorics.polyhedron.Polyhedron.edges", false]], "edges() (sympy.combinatorics.prufer.prufer static method)": [[56, "sympy.combinatorics.prufer.Prufer.edges", false]], "egyptian_fraction() (in module sympy.ntheory.egyptian_fraction)": [[102, "sympy.ntheory.egyptian_fraction.egyptian_fraction", false]], "ei (class in sympy.functions.special.error_functions)": [[70, "sympy.functions.special.error_functions.Ei", false]], "eigenvals() (sympy.matrices.matrices.matrixeigen method)": [[98, "sympy.matrices.matrices.MatrixEigen.eigenvals", false]], "eigenvects() (sympy.matrices.matrices.matrixeigen method)": [[98, "sympy.matrices.matrices.MatrixEigen.eigenvects", false]], "eijk() (in module sympy.functions.special.tensor_functions)": [[70, "sympy.functions.special.tensor_functions.Eijk", false]], "eject() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.eject", false]], "eject() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.eject", false]], "elastic_modulus (sympy.physics.continuum_mechanics.beam.beam property)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.elastic_modulus", false]], "elem_poles() (sympy.physics.control.lti.transferfunctionmatrix method)": [[112, "sympy.physics.control.lti.TransferFunctionMatrix.elem_poles", false]], "elem_zeros() (sympy.physics.control.lti.transferfunctionmatrix method)": [[112, "sympy.physics.control.lti.TransferFunctionMatrix.elem_zeros", false]], "element (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.Element", false]], "element_from_alg_num() (sympy.polys.numberfields.modules.powerbasis method)": [[206, "sympy.polys.numberfields.modules.PowerBasis.element_from_alg_num", false]], "element_from_anp() (sympy.polys.numberfields.modules.powerbasis method)": [[206, "sympy.polys.numberfields.modules.PowerBasis.element_from_ANP", false]], "element_from_poly() (sympy.polys.numberfields.modules.powerbasis method)": [[206, "sympy.polys.numberfields.modules.PowerBasis.element_from_poly", false]], "element_from_rational() (sympy.polys.numberfields.modules.module method)": [[206, "sympy.polys.numberfields.modules.Module.element_from_rational", false]], "element_order() (sympy.liealgebras.weyl_group.weylgroup method)": [[91, "sympy.liealgebras.weyl_group.WeylGroup.element_order", false]], "elementary_col_op() (sympy.matrices.matrices.matrixreductions method)": [[98, "sympy.matrices.matrices.MatrixReductions.elementary_col_op", false]], "elementary_row_op() (sympy.matrices.matrices.matrixreductions method)": [[98, "sympy.matrices.matrices.MatrixReductions.elementary_row_op", false]], "elements (sympy.combinatorics.perm_groups.permutationgroup property)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.elements", false]], "elgamal_private_key() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.elgamal_private_key", false]], "elgamal_public_key() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.elgamal_public_key", false]], "eliminate_implications() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.eliminate_implications", false]], "ellipse (class in sympy.geometry.ellipse)": [[72, "sympy.geometry.ellipse.Ellipse", false]], "elliptic_e (class in sympy.functions.special.elliptic_integrals)": [[70, "sympy.functions.special.elliptic_integrals.elliptic_e", false]], "elliptic_f (class in sympy.functions.special.elliptic_integrals)": [[70, "sympy.functions.special.elliptic_integrals.elliptic_f", false]], "elliptic_k (class in sympy.functions.special.elliptic_integrals)": [[70, "sympy.functions.special.elliptic_integrals.elliptic_k", false]], "elliptic_pi (class in sympy.functions.special.elliptic_integrals)": [[70, "sympy.functions.special.elliptic_integrals.elliptic_pi", false]], "em() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.EM", false]], "emptyprinter() (sympy.printing.repr.reprprinter method)": [[211, "sympy.printing.repr.ReprPrinter.emptyPrinter", false]], "emptysequence (class in sympy.series.sequences)": [[217, "sympy.series.sequences.EmptySequence", false]], "emptyset (class in sympy.sets.sets)": [[219, "sympy.sets.sets.EmptySet", false]], "enable_automatic_int_sympification() (in module sympy.interactive.session)": [[90, "sympy.interactive.session.enable_automatic_int_sympification", false]], "enable_automatic_symbols() (in module sympy.interactive.session)": [[90, "sympy.interactive.session.enable_automatic_symbols", false]], "encipher_affine() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.encipher_affine", false]], "encipher_atbash() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.encipher_atbash", false]], "encipher_bifid() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.encipher_bifid", false]], "encipher_bifid5() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.encipher_bifid5", false]], "encipher_bifid6() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.encipher_bifid6", false]], "encipher_elgamal() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.encipher_elgamal", false]], "encipher_gm() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.encipher_gm", false]], "encipher_hill() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.encipher_hill", false]], "encipher_kid_rsa() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.encipher_kid_rsa", false]], "encipher_railfence() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.encipher_railfence", false]], "encipher_rot13() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.encipher_rot13", false]], "encipher_rsa() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.encipher_rsa", false]], "encipher_shift() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.encipher_shift", false]], "encipher_substitution() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.encipher_substitution", false]], "encipher_vigenere() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.encipher_vigenere", false]], "encloses() (sympy.geometry.entity.geometryentity method)": [[73, "sympy.geometry.entity.GeometryEntity.encloses", false]], "encloses_point() (sympy.geometry.ellipse.ellipse method)": [[72, "sympy.geometry.ellipse.Ellipse.encloses_point", false]], "encloses_point() (sympy.geometry.polygon.polygon method)": [[78, "sympy.geometry.polygon.Polygon.encloses_point", false]], "encloses_point() (sympy.geometry.polygon.regularpolygon method)": [[78, "sympy.geometry.polygon.RegularPolygon.encloses_point", false]], "encode_morse() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.encode_morse", false]], "end (sympy.sets.sets.interval property)": [[219, "sympy.sets.sets.Interval.end", false]], "endomorphism_ring() (sympy.polys.numberfields.modules.module method)": [[206, "sympy.polys.numberfields.modules.Module.endomorphism_ring", false]], "endomorphismring (class in sympy.polys.numberfields.modules)": [[206, "sympy.polys.numberfields.modules.EndomorphismRing", false]], "entropy() (in module sympy.stats)": [[231, "sympy.stats.entropy", false]], "enum_all() (sympy.utilities.enumerative.multisetpartitiontraverser method)": [[246, "sympy.utilities.enumerative.MultisetPartitionTraverser.enum_all", false]], "enum_large() (sympy.utilities.enumerative.multisetpartitiontraverser method)": [[246, "sympy.utilities.enumerative.MultisetPartitionTraverser.enum_large", false]], "enum_range() (sympy.utilities.enumerative.multisetpartitiontraverser method)": [[246, "sympy.utilities.enumerative.MultisetPartitionTraverser.enum_range", false]], "enum_small() (sympy.utilities.enumerative.multisetpartitiontraverser method)": [[246, "sympy.utilities.enumerative.MultisetPartitionTraverser.enum_small", false]], "enumerate_states() (in module sympy.physics.quantum.represent)": [[171, "sympy.physics.quantum.represent.enumerate_states", false]], "epath (class in sympy.simplify.epathtools)": [[223, "sympy.simplify.epathtools.EPath", false]], "epath() (in module sympy.simplify.epathtools)": [[223, "sympy.simplify.epathtools.epath", false]], "eps (sympy.codegen.ast.floattype property)": [[43, "sympy.codegen.ast.FloatType.eps", false]], "eq (in module sympy.core.relational)": [[62, "sympy.core.relational.Eq", false]], "eq() (sympy.polys.agca.modules.quotientmoduleelement method)": [[198, "sympy.polys.agca.modules.QuotientModuleElement.eq", false]], "eqs_to_matrix() (in module sympy.polys.solvers)": [[209, "sympy.polys.solvers.eqs_to_matrix", false]], "equal_valued() (in module sympy.core.numbers)": [[62, "sympy.core.numbers.equal_valued", false]], "equality (class in sympy.core.relational)": [[62, "sympy.core.relational.Equality", false]], "equals() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.equals", false]], "equals() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.equals", false]], "equals() (sympy.core.relational.relational method)": [[62, "sympy.core.relational.Relational.equals", false]], "equals() (sympy.geometry.line.line method)": [[75, "sympy.geometry.line.Line.equals", false]], "equals() (sympy.geometry.line.ray method)": [[75, "sympy.geometry.line.Ray.equals", false]], "equals() (sympy.geometry.line.segment method)": [[75, "sympy.geometry.line.Segment.equals", false]], "equals() (sympy.geometry.plane.plane method)": [[76, "sympy.geometry.plane.Plane.equals", false]], "equals() (sympy.geometry.point.point method)": [[77, "sympy.geometry.point.Point.equals", false]], "equals() (sympy.logic.boolalg.boolean method)": [[92, "sympy.logic.boolalg.Boolean.equals", false]], "equals() (sympy.matrices.expressions.matrixexpr method)": [[95, "sympy.matrices.expressions.MatrixExpr.equals", false]], "equation": [[11, "term-Equation", true]], "equation() (sympy.geometry.ellipse.circle method)": [[72, "sympy.geometry.ellipse.Circle.equation", false]], "equation() (sympy.geometry.ellipse.ellipse method)": [[72, "sympy.geometry.ellipse.Ellipse.equation", false]], "equation() (sympy.geometry.line.line2d method)": [[75, "sympy.geometry.line.Line2D.equation", false]], "equation() (sympy.geometry.line.line3d method)": [[75, "sympy.geometry.line.Line3D.equation", false]], "equation() (sympy.geometry.plane.plane method)": [[76, "sympy.geometry.plane.Plane.equation", false]], "equiv() (sympy.polys.numberfields.modules.moduleelement method)": [[206, "sympy.polys.numberfields.modules.ModuleElement.equiv", false]], "equivalent (class in sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.Equivalent", false]], "equivalent() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.equivalent", false]], "erf (class in sympy.functions.special.error_functions)": [[70, "sympy.functions.special.error_functions.erf", false]], "erf2 (class in sympy.functions.special.error_functions)": [[70, "sympy.functions.special.error_functions.erf2", false]], "erf2inv (class in sympy.functions.special.error_functions)": [[70, "sympy.functions.special.error_functions.erf2inv", false]], "erfc (class in sympy.functions.special.error_functions)": [[70, "sympy.functions.special.error_functions.erfc", false]], "erfcinv (class in sympy.functions.special.error_functions)": [[70, "sympy.functions.special.error_functions.erfcinv", false]], "erfi (class in sympy.functions.special.error_functions)": [[70, "sympy.functions.special.error_functions.erfi", false]], "erfinv (class in sympy.functions.special.error_functions)": [[70, "sympy.functions.special.error_functions.erfinv", false]], "erlang() (in module sympy.stats)": [[231, "sympy.stats.Erlang", false]], "et() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.ET", false]], "eta (sympy.functions.special.hyper.hyper property)": [[70, "sympy.functions.special.hyper.hyper.eta", false]], "euler (class in sympy.functions.combinatorial.numbers)": [[67, "sympy.functions.combinatorial.numbers.euler", false]], "euler_equations() (in module sympy.calculus.euler)": [[41, "sympy.calculus.euler.euler_equations", false]], "euler_maclaurin() (sympy.concrete.summations.sum method)": [[61, "sympy.concrete.summations.Sum.euler_maclaurin", false]], "euler_poly() (in module sympy.polys.appellseqs)": [[207, "sympy.polys.appellseqs.euler_poly", false]], "eulergamma (class in sympy.core.numbers)": [[62, "sympy.core.numbers.EulerGamma", false]], "eulerline (sympy.geometry.polygon.triangle property)": [[78, "sympy.geometry.polygon.Triangle.eulerline", false]], "eval() (sympy.assumptions.assume.predicate method)": [[37, "sympy.assumptions.assume.Predicate.eval", false]], "eval() (sympy.functions.elementary.piecewise.piecewise class method)": [[68, "sympy.functions.elementary.piecewise.Piecewise.eval", false]], "eval() (sympy.functions.special.delta_functions.diracdelta class method)": [[70, "sympy.functions.special.delta_functions.DiracDelta.eval", false]], "eval() (sympy.functions.special.delta_functions.heaviside class method)": [[70, "sympy.functions.special.delta_functions.Heaviside.eval", false]], "eval() (sympy.functions.special.singularity_functions.singularityfunction class method)": [[70, "sympy.functions.special.singularity_functions.SingularityFunction.eval", false]], "eval() (sympy.functions.special.tensor_functions.kroneckerdelta class method)": [[70, "sympy.functions.special.tensor_functions.KroneckerDelta.eval", false]], "eval() (sympy.physics.quantum.hilbert.directsumhilbertspace class method)": [[162, "sympy.physics.quantum.hilbert.DirectSumHilbertSpace.eval", false]], "eval() (sympy.physics.quantum.hilbert.tensorproducthilbertspace class method)": [[162, "sympy.physics.quantum.hilbert.TensorProductHilbertSpace.eval", false]], "eval() (sympy.physics.secondquant.commutator class method)": [[176, "sympy.physics.secondquant.Commutator.eval", false]], "eval() (sympy.physics.secondquant.dagger class method)": [[176, "sympy.physics.secondquant.Dagger.eval", false]], "eval() (sympy.physics.secondquant.kroneckerdelta class method)": [[176, "sympy.physics.secondquant.KroneckerDelta.eval", false]], "eval() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.eval", false]], "eval() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.eval", false]], "eval_approx() (sympy.polys.rootoftools.complexrootof method)": [[207, "sympy.polys.rootoftools.ComplexRootOf.eval_approx", false]], "eval_controls() (sympy.physics.quantum.gate.cgate method)": [[160, "sympy.physics.quantum.gate.CGate.eval_controls", false]], "eval_expr() (in module sympy.parsing.sympy_parser)": [[104, "sympy.parsing.sympy_parser.eval_expr", false]], "eval_levicivita() (in module sympy.functions.special.tensor_functions)": [[70, "sympy.functions.special.tensor_functions.eval_levicivita", false]], "eval_rational() (sympy.polys.rootoftools.complexrootof method)": [[207, "sympy.polys.rootoftools.ComplexRootOf.eval_rational", false]], "eval_zeta_function() (sympy.concrete.summations.sum method)": [[61, "sympy.concrete.summations.Sum.eval_zeta_function", false]], "evalf": [[11, "term-evalf", true]], "evalf() (sympy.core.evalf.evalfmixin method)": [[62, "sympy.core.evalf.EvalfMixin.evalf", false]], "evalf() (sympy.holonomic.holonomic.holonomicfunction method)": [[84, "sympy.holonomic.holonomic.HolonomicFunction.evalf", false]], "evalf() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.evalf", false]], "evalf() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.evalf", false]], "evalfmixin (class in sympy.core.evalf)": [[62, "sympy.core.evalf.EvalfMixin", false]], "evaluate": [[11, "term-Evaluate", true]], "evaluate_deltas() (in module sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.evaluate_deltas", false]], "evaluate_pauli_product() (in module sympy.physics.paulialgebra)": [[151, "sympy.physics.paulialgebra.evaluate_pauli_product", false]], "evaluationfailed (class in sympy.polys.polyerrors)": [[204, "sympy.polys.polyerrors.EvaluationFailed", false]], "even": [[62, "term-even", true]], "evenpredicate (class in sympy.assumptions.predicates.ntheory)": [[39, "sympy.assumptions.predicates.ntheory.EvenPredicate", false]], "evolute() (sympy.geometry.ellipse.ellipse method)": [[72, "sympy.geometry.ellipse.Ellipse.evolute", false]], "exactquotientfailed (class in sympy.polys.polyerrors)": [[204, "sympy.polys.polyerrors.ExactQuotientFailed", false]], "excenters (sympy.geometry.polygon.triangle property)": [[78, "sympy.geometry.polygon.Triangle.excenters", false]], "exclude() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.exclude", false]], "exclude() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.exclude", false]], "exclusive (class in sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.Exclusive", false]], "exgaussian() (in module sympy.stats)": [[231, "sympy.stats.ExGaussian", false]], "exp (class in sympy.functions.elementary.exponential)": [[68, "sympy.functions.elementary.exponential.exp", false]], "exp() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.exp", false]], "exp() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.exp", false]], "exp1 (class in sympy.core.numbers)": [[62, "sympy.core.numbers.Exp1", false]], "exp2 (class in sympy.codegen.cfunctions)": [[43, "sympy.codegen.cfunctions.exp2", false]], "exp_polar (class in sympy.functions.elementary.exponential)": [[68, "sympy.functions.elementary.exponential.exp_polar", false]], "exp_re() (in module sympy.series.formal)": [[213, "sympy.series.formal.exp_re", false]], "expand() (in module sympy.core.function)": [[62, "sympy.core.function.expand", false]], "expand() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.expand", false]], "expand() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.expand", false]], "expand() (sympy.physics.control.lti.transferfunction method)": [[112, "sympy.physics.control.lti.TransferFunction.expand", false]], "expand() (sympy.physics.control.lti.transferfunctionmatrix method)": [[112, "sympy.physics.control.lti.TransferFunctionMatrix.expand", false]], "expand_complex() (in module sympy.core.function)": [[62, "sympy.core.function.expand_complex", false]], "expand_func() (in module sympy.core.function)": [[62, "sympy.core.function.expand_func", false]], "expand_log() (in module sympy.core.function)": [[62, "sympy.core.function.expand_log", false]], "expand_mul() (in module sympy.core.function)": [[62, "sympy.core.function.expand_mul", false]], "expand_multinomial() (in module sympy.core.function)": [[62, "sympy.core.function.expand_multinomial", false]], "expand_power_base() (in module sympy.core.function)": [[62, "sympy.core.function.expand_power_base", false]], "expand_power_exp() (in module sympy.core.function)": [[62, "sympy.core.function.expand_power_exp", false]], "expand_trig() (in module sympy.core.function)": [[62, "sympy.core.function.expand_trig", false]], "expectation (class in sympy.stats)": [[231, "sympy.stats.Expectation", false]], "expectation() (sympy.stats.bernoulliprocess method)": [[231, "sympy.stats.BernoulliProcess.expectation", false]], "expectationmatrix (class in sympy.stats)": [[231, "sympy.stats.ExpectationMatrix", false]], "expint (class in sympy.functions.special.error_functions)": [[70, "sympy.functions.special.error_functions.expint", false]], "expm1 (class in sympy.codegen.cfunctions)": [[43, "sympy.codegen.cfunctions.expm1", false]], "exponential() (in module sympy.stats)": [[231, "sympy.stats.Exponential", false]], "expr": [[11, "term-Expr", true]], "expr (class in sympy.core.expr)": [[62, "sympy.core.expr.Expr", false]], "expr (sympy.core.function.lambda property)": [[62, "sympy.core.function.Lambda.expr", false]], "expr (sympy.core.function.subs property)": [[62, "sympy.core.function.Subs.expr", false]], "expr (sympy.functions.elementary.piecewise.exprcondpair property)": [[68, "sympy.functions.elementary.piecewise.ExprCondPair.expr", false]], "expr (sympy.physics.quantum.operator.differentialoperator property)": [[165, "sympy.physics.quantum.operator.DifferentialOperator.expr", false]], "expr (sympy.physics.quantum.state.wavefunction property)": [[174, "sympy.physics.quantum.state.Wavefunction.expr", false]], "expr_free_symbols (sympy.core.expr.expr property)": [[62, "sympy.core.expr.Expr.expr_free_symbols", false]], "expr_to_holonomic() (in module sympy.holonomic.holonomic)": [[81, "sympy.holonomic.holonomic.expr_to_holonomic", false]], "exprcondpair (class in sympy.functions.elementary.piecewise)": [[68, "sympy.functions.elementary.piecewise.ExprCondPair", false]], "express() (in module sympy.physics.vector.functions)": [[188, "sympy.physics.vector.functions.express", false]], "express() (in module sympy.vector)": [[259, "sympy.vector.express", false]], "express() (sympy.physics.vector.dyadic.dyadic method)": [[186, "sympy.physics.vector.dyadic.Dyadic.express", false]], "express() (sympy.physics.vector.vector.vector method)": [[186, "sympy.physics.vector.vector.Vector.express", false]], "expression": [[11, "term-Expression", true]], "expression tree": [[11, "term-Expression-Tree", true]], "expressiondomain (class in sympy.polys.domains)": [[202, "sympy.polys.domains.ExpressionDomain", false]], "expressiondomain.expression (class in sympy.polys.domains)": [[202, "sympy.polys.domains.ExpressionDomain.Expression", false]], "expressiondomain.expression (class in sympy.polys.domains.expressiondomain)": [[202, "sympy.polys.domains.expressiondomain.ExpressionDomain.Expression", false]], "exprwithintlimits (class in sympy.concrete.expr_with_intlimits)": [[61, "sympy.concrete.expr_with_intlimits.ExprWithIntLimits", false]], "exprwithlimits (class in sympy.concrete.expr_with_limits)": [[89, "sympy.concrete.expr_with_limits.ExprWithLimits", false]], "exquo() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.exquo", false]], "exquo() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.exquo", false]], "exquo() (sympy.polys.domains.field.field method)": [[202, "sympy.polys.domains.field.Field.exquo", false]], "exquo() (sympy.polys.domains.gmpyrationalfield method)": [[202, "sympy.polys.domains.GMPYRationalField.exquo", false]], "exquo() (sympy.polys.domains.rationalfield method)": [[202, "sympy.polys.domains.RationalField.exquo", false]], "exquo() (sympy.polys.domains.ring.ring method)": [[202, "sympy.polys.domains.ring.Ring.exquo", false]], "exquo() (sympy.polys.polyclasses.dmf method)": [[202, "sympy.polys.polyclasses.DMF.exquo", false]], "exquo() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.exquo", false]], "exquo() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.exquo", false]], "exquo_ground() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.exquo_ground", false]], "exquo_ground() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.exquo_ground", false]], "exradii (sympy.geometry.polygon.triangle property)": [[78, "sympy.geometry.polygon.Triangle.exradii", false]], "ext (sympy.polys.domains.algebraicfield attribute)": [[202, "sympy.polys.domains.AlgebraicField.ext", false]], "extend() (sympy.ntheory.generate.sieve method)": [[102, "sympy.ntheory.generate.Sieve.extend", false]], "extend() (sympy.physics.units.unitsystem.unitsystem method)": [[184, "sympy.physics.units.unitsystem.UnitSystem.extend", false]], "extend() (sympy.plotting.plot.plot method)": [[197, "sympy.plotting.plot.Plot.extend", false]], "extend_to_no() (sympy.ntheory.generate.sieve method)": [[102, "sympy.ntheory.generate.Sieve.extend_to_no", false]], "extended_negative": [[62, "term-extended_negative", true]], "extended_nonnegative": [[62, "term-extended_nonnegative", true]], "extended_nonpositive": [[62, "term-extended_nonpositive", true]], "extended_nonzero": [[62, "term-extended_nonzero", true]], "extended_positive": [[62, "term-extended_positive", true]], "extended_real": [[62, "term-extended_real", true]], "extendedrealpredicate (class in sympy.assumptions.predicates.sets)": [[39, "sympy.assumptions.predicates.sets.ExtendedRealPredicate", false]], "extensionelement (class in sympy.polys.agca.extensions)": [[198, "sympy.polys.agca.extensions.ExtensionElement", false]], "extent (class in sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.Extent", false]], "exterior_angle (sympy.geometry.polygon.regularpolygon property)": [[78, "sympy.geometry.polygon.RegularPolygon.exterior_angle", false]], "extract() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.extract", false]], "extract_additively() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.extract_additively", false]], "extract_branch_factor() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.extract_branch_factor", false]], "extract_fundamental_discriminant() (in module sympy.polys.numberfields.utilities)": [[206, "sympy.polys.numberfields.utilities.extract_fundamental_discriminant", false]], "extract_leading_order() (sympy.core.add.add method)": [[62, "sympy.core.add.Add.extract_leading_order", false]], "extract_multiplicatively() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.extract_multiplicatively", false]], "extract_type_tens() (in module sympy.physics.hep.gamma_matrices)": [[113, "sympy.physics.hep.gamma_matrices.extract_type_tens", false]], "extraneousfactors (class in sympy.polys.polyerrors)": [[204, "sympy.polys.polyerrors.ExtraneousFactors", false]], "eye() (in module sympy.matrices.dense)": [[98, "sympy.matrices.dense.eye", false]], "eye() (sympy.matrices.common.matrixcommon class method)": [[93, "sympy.matrices.common.MatrixCommon.eye", false]], "eye() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.eye", false]], "eye() (sympy.polys.matrices.sdm.sdm class method)": [[200, "sympy.polys.matrices.sdm.SDM.eye", false]], "f (in module sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.F", false]], "f2pycodewrapper (class in sympy.utilities.autowrap)": [[243, "sympy.utilities.autowrap.F2PyCodeWrapper", false]], "faces (sympy.combinatorics.polyhedron.polyhedron property)": [[55, "sympy.combinatorics.polyhedron.Polyhedron.faces", false]], "factor() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.factor", false]], "factor() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.factor", false]], "factor_list() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.factor_list", false]], "factor_list() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.factor_list", false]], "factor_list() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.factor_list", false]], "factor_list_include() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.factor_list_include", false]], "factor_list_include() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.factor_list_include", false]], "factor_terms() (in module sympy.core.exprtools)": [[62, "sympy.core.exprtools.factor_terms", false]], "factorable (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.Factorable", false]], "factorial (class in sympy.functions.combinatorial.factorials)": [[67, "sympy.functions.combinatorial.factorials.factorial", false]], "factorial() (sympy.polys.domains.fractionfield method)": [[202, "sympy.polys.domains.FractionField.factorial", false]], "factorial() (sympy.polys.domains.gmpyintegerring method)": [[202, "sympy.polys.domains.GMPYIntegerRing.factorial", false]], "factorial() (sympy.polys.domains.gmpyrationalfield method)": [[202, "sympy.polys.domains.GMPYRationalField.factorial", false]], "factorial() (sympy.polys.domains.integerring method)": [[202, "sympy.polys.domains.IntegerRing.factorial", false]], "factorial() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.factorial", false]], "factorial2 (class in sympy.functions.combinatorial.factorials)": [[67, "sympy.functions.combinatorial.factorials.factorial2", false]], "factorial_moment() (in module sympy.stats)": [[231, "sympy.stats.factorial_moment", false]], "factorial_notation() (in module sympy.parsing.sympy_parser)": [[104, "sympy.parsing.sympy_parser.factorial_notation", false]], "factoring_visitor() (in module sympy.utilities.enumerative)": [[246, "sympy.utilities.enumerative.factoring_visitor", false]], "factorint() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.factorint", false]], "factorrat() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.factorrat", false]], "factors() (sympy.core.numbers.rational method)": [[62, "sympy.core.numbers.Rational.factors", false]], "failed (sympy.testing.runtests.sympytestresults attribute)": [[242, "sympy.testing.runtests.SymPyTestResults.failed", false]], "fallingfactorial (class in sympy.functions.combinatorial.factorials)": [[67, "sympy.functions.combinatorial.factorials.FallingFactorial", false]], "fbra (in module sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.FBra", false]], "fcode() (in module sympy.printing.fortran)": [[211, "sympy.printing.fortran.fcode", false]], "fcodegen (class in sympy.utilities.codegen)": [[244, "sympy.utilities.codegen.FCodeGen", false]], "fcodeprinter (class in sympy.printing.fortran)": [[211, "sympy.printing.fortran.FCodePrinter", false]], "fd (in module sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.Fd", false]], "fdiff() (sympy.codegen.cfunctions.cbrt method)": [[43, "sympy.codegen.cfunctions.Cbrt.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.exp2 method)": [[43, "sympy.codegen.cfunctions.exp2.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.expm1 method)": [[43, "sympy.codegen.cfunctions.expm1.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.fma method)": [[43, "sympy.codegen.cfunctions.fma.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.hypot method)": [[43, "sympy.codegen.cfunctions.hypot.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.log10 method)": [[43, "sympy.codegen.cfunctions.log10.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.log1p method)": [[43, "sympy.codegen.cfunctions.log1p.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.log2 method)": [[43, "sympy.codegen.cfunctions.log2.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.sqrt method)": [[43, "sympy.codegen.cfunctions.Sqrt.fdiff", false]], "fdiff() (sympy.core.function.function method)": [[62, "sympy.core.function.Function.fdiff", false]], "fdiff() (sympy.functions.elementary.complexes.abs method)": [[68, "sympy.functions.elementary.complexes.Abs.fdiff", false]], "fdiff() (sympy.functions.elementary.exponential.exp method)": [[68, "sympy.functions.elementary.exponential.exp.fdiff", false]], "fdiff() (sympy.functions.elementary.exponential.lambertw method)": [[68, "sympy.functions.elementary.exponential.LambertW.fdiff", false]], "fdiff() (sympy.functions.elementary.exponential.log method)": [[68, "sympy.functions.elementary.exponential.log.fdiff", false]], "fdiff() (sympy.functions.elementary.hyperbolic.csch method)": [[68, "sympy.functions.elementary.hyperbolic.csch.fdiff", false]], "fdiff() (sympy.functions.elementary.hyperbolic.sinh method)": [[68, "sympy.functions.elementary.hyperbolic.sinh.fdiff", false]], "fdiff() (sympy.functions.special.delta_functions.diracdelta method)": [[70, "sympy.functions.special.delta_functions.DiracDelta.fdiff", false]], "fdiff() (sympy.functions.special.delta_functions.heaviside method)": [[70, "sympy.functions.special.delta_functions.Heaviside.fdiff", false]], "fdiff() (sympy.functions.special.singularity_functions.singularityfunction method)": [[70, "sympy.functions.special.singularity_functions.SingularityFunction.fdiff", false]], "fdistribution() (in module sympy.stats)": [[231, "sympy.stats.FDistribution", false]], "feedback (class in sympy.physics.control.lti)": [[112, "sympy.physics.control.lti.Feedback", false]], "fft() (in module sympy.discrete.transforms)": [[65, "sympy.discrete.transforms.fft", false]], "fglm() (sympy.polys.polytools.groebnerbasis method)": [[207, "sympy.polys.polytools.GroebnerBasis.fglm", false]], "fibonacci (class in sympy.functions.combinatorial.numbers)": [[67, "sympy.functions.combinatorial.numbers.fibonacci", false]], "field (class in sympy.polys.domains.field)": [[202, "sympy.polys.domains.field.Field", false]], "field() (in module sympy.polys.fields)": [[202, "sympy.polys.fields.field", false]], "field_element() (sympy.core.numbers.algebraicnumber method)": [[62, "sympy.core.numbers.AlgebraicNumber.field_element", false]], "field_isomorphism() (in module sympy.polys.numberfields.subfield)": [[206, "sympy.polys.numberfields.subfield.field_isomorphism", false]], "filldedent() (in module sympy.utilities.misc)": [[252, "sympy.utilities.misc.filldedent", false]], "filter_symbols() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.filter_symbols", false]], "find() (sympy.core.basic.basic method)": [[62, "sympy.core.basic.Basic.find", false]], "find_dn() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.find_DN", false]], "find_dynamicsymbols() (in module sympy.physics.mechanics)": [[118, "sympy.physics.mechanics.find_dynamicsymbols", false]], "find_executable() (in module sympy.utilities.misc)": [[252, "sympy.utilities.misc.find_executable", false]], "find_linear_recurrence() (sympy.series.sequences.seqbase method)": [[217, "sympy.series.sequences.SeqBase.find_linear_recurrence", false]], "find_min_poly() (in module sympy.polys.numberfields.modules)": [[206, "sympy.polys.numberfields.modules.find_min_poly", false]], "find_transitive_subgroups_of_s6() (in module sympy.combinatorics.galois)": [[45, "sympy.combinatorics.galois.find_transitive_subgroups_of_S6", false]], "finite": [[62, "term-finite", true]], "finite_diff_weights() (in module sympy.calculus.finite_diff)": [[41, "sympy.calculus.finite_diff.finite_diff_weights", false]], "finitedomain (class in sympy.stats.frv)": [[231, "sympy.stats.frv.FiniteDomain", false]], "finitefield (class in sympy.polys.domains)": [[202, "sympy.polys.domains.FiniteField", false]], "finiteformalpowerseries (class in sympy.series.formal)": [[213, "sympy.series.formal.FiniteFormalPowerSeries", false]], "finitepredicate (class in sympy.assumptions.predicates.calculus)": [[39, "sympy.assumptions.predicates.calculus.FinitePredicate", false]], "finitepspace (class in sympy.stats.frv)": [[231, "sympy.stats.frv.FinitePSpace", false]], "finiterv() (in module sympy.stats)": [[231, "sympy.stats.FiniteRV", false]], "finiteset (class in sympy.sets.sets)": [[219, "sympy.sets.sets.FiniteSet", false]], "first_moment_of_area() (sympy.geometry.polygon.polygon method)": [[78, "sympy.geometry.polygon.Polygon.first_moment_of_area", false]], "firstexact (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.FirstExact", false]], "firstlinear (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.FirstLinear", false]], "fisherz() (in module sympy.stats)": [[231, "sympy.stats.FisherZ", false]], "fixed_row_vector() (sympy.stats.discretemarkovchain method)": [[231, "sympy.stats.DiscreteMarkovChain.fixed_row_vector", false]], "fixedbosonicbasis (class in sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.FixedBosonicBasis", false]], "fket (in module sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.FKet", false]], "flagerror (class in sympy.polys.polyerrors)": [[204, "sympy.polys.polyerrors.FlagError", false]], "flatmirror (class in sympy.physics.optics.gaussopt)": [[145, "sympy.physics.optics.gaussopt.FlatMirror", false]], "flatrefraction (class in sympy.physics.optics.gaussopt)": [[145, "sympy.physics.optics.gaussopt.FlatRefraction", false]], "flatten() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.flatten", false]], "flatten() (sympy.categories.compositemorphism method)": [[42, "sympy.categories.CompositeMorphism.flatten", false]], "flatten() (sympy.core.add.add class method)": [[62, "sympy.core.add.Add.flatten", false]], "flatten() (sympy.core.mul.mul class method)": [[62, "sympy.core.mul.Mul.flatten", false]], "float (class in sympy.core.numbers)": [[62, "sympy.core.numbers.Float", false]], "floatbasetype (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.FloatBaseType", false]], "floattype (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.FloatType", false]], "floor (class in sympy.functions.elementary.integers)": [[68, "sympy.functions.elementary.integers.floor", false]], "fma (class in sympy.codegen.cfunctions)": [[43, "sympy.codegen.cfunctions.fma", false]], "foci (sympy.geometry.ellipse.ellipse property)": [[72, "sympy.geometry.ellipse.Ellipse.foci", false]], "fockspace (class in sympy.physics.quantum.hilbert)": [[162, "sympy.physics.quantum.hilbert.FockSpace", false]], "fockstate (class in sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.FockState", false]], "fockstatebosonbra (class in sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.FockStateBosonBra", false]], "fockstatebosonket (class in sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.FockStateBosonKet", false]], "fockstatebra (class in sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.FockStateBra", false]], "fockstatefermionbra (class in sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.FockStateFermionBra", false]], "fockstatefermionket (class in sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.FockStateFermionKet", false]], "fockstateket (class in sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.FockStateKet", false]], "focus_distance (sympy.geometry.ellipse.ellipse property)": [[72, "sympy.geometry.ellipse.Ellipse.focus_distance", false]], "for (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.For", false]], "forcing (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[120, "sympy.physics.mechanics.jointsmethod.JointsMethod.forcing", false]], "forcing (sympy.physics.mechanics.kane.kanesmethod property)": [[121, "sympy.physics.mechanics.kane.KanesMethod.forcing", false]], "forcing (sympy.physics.mechanics.lagrange.lagrangesmethod property)": [[121, "sympy.physics.mechanics.lagrange.LagrangesMethod.forcing", false]], "forcing_full (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[120, "sympy.physics.mechanics.jointsmethod.JointsMethod.forcing_full", false]], "forcing_full (sympy.physics.mechanics.kane.kanesmethod property)": [[121, "sympy.physics.mechanics.kane.KanesMethod.forcing_full", false]], "forcing_full (sympy.physics.mechanics.lagrange.lagrangesmethod property)": [[121, "sympy.physics.mechanics.lagrange.LagrangesMethod.forcing_full", false]], "forcing_kin (sympy.physics.mechanics.kane.kanesmethod property)": [[121, "sympy.physics.mechanics.kane.KanesMethod.forcing_kin", false]], "form_eoms() (sympy.physics.mechanics.jointsmethod.jointsmethod method)": [[120, "sympy.physics.mechanics.jointsmethod.JointsMethod.form_eoms", false]], "form_lagranges_equations() (sympy.physics.mechanics.lagrange.lagrangesmethod method)": [[121, "sympy.physics.mechanics.lagrange.LagrangesMethod.form_lagranges_equations", false]], "formalpowerseries (class in sympy.series.formal)": [[213, "sympy.series.formal.FormalPowerSeries", false]], "formalpowerseriescompose (class in sympy.series.formal)": [[213, "sympy.series.formal.FormalPowerSeriesCompose", false]], "formalpowerseriesinverse (class in sympy.series.formal)": [[213, "sympy.series.formal.FormalPowerSeriesInverse", false]], "formalpowerseriesproduct (class in sympy.series.formal)": [[213, "sympy.series.formal.FormalPowerSeriesProduct", false]], "fortranreturn (class in sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.FortranReturn", false]], "four_group() (in module sympy.combinatorics.galois)": [[45, "sympy.combinatorics.galois.four_group", false]], "fourier_series() (in module sympy.series.fourier)": [[214, "sympy.series.fourier.fourier_series", false]], "fourier_series() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.fourier_series", false]], "fourier_transform() (in module sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.fourier_transform", false]], "fourierseries (class in sympy.series.fourier)": [[214, "sympy.series.fourier.FourierSeries", false]], "fouriertransform (class in sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.FourierTransform", false]], "fps() (in module sympy.series.formal)": [[213, "sympy.series.formal.fps", false]], "fps() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.fps", false]], "frac (class in sympy.functions.elementary.integers)": [[68, "sympy.functions.elementary.integers.frac", false]], "frac (in module sympy.printing.pretty.pretty_symbology)": [[211, "sympy.printing.pretty.pretty_symbology.frac", false]], "frac_field() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.frac_field", false]], "frac_unify() (sympy.polys.polyclasses.dmf method)": [[202, "sympy.polys.polyclasses.DMF.frac_unify", false]], "fracelement (class in sympy.polys.fields)": [[202, "sympy.polys.fields.FracElement", false]], "fracfield (class in sympy.polys.fields)": [[202, "sympy.polys.fields.FracField", false]], "fraction() (in module sympy.simplify.radsimp)": [[223, "sympy.simplify.radsimp.fraction", false]], "fractionfield (class in sympy.polys.domains)": [[202, "sympy.polys.domains.FractionField", false]], "frame (sympy.physics.mechanics.rigidbody.rigidbody property)": [[123, "sympy.physics.mechanics.rigidbody.RigidBody.frame", false]], "frechet() (in module sympy.stats)": [[231, "sympy.stats.Frechet", false]], "free symbols": [[11, "term-Free-symbols", true]], "free_dynamicsymbols() (sympy.physics.vector.vector.vector method)": [[186, "sympy.physics.vector.vector.Vector.free_dynamicsymbols", false]], "free_module() (sympy.polys.domains.ring.ring method)": [[202, "sympy.polys.domains.ring.Ring.free_module", false]], "free_symbols (sympy.concrete.expr_with_limits.exprwithlimits property)": [[89, "sympy.concrete.expr_with_limits.ExprWithLimits.free_symbols", false]], "free_symbols (sympy.core.basic.basic property)": [[62, "sympy.core.basic.Basic.free_symbols", false]], "free_symbols (sympy.geometry.curve.curve property)": [[71, "sympy.geometry.curve.Curve.free_symbols", false]], "free_symbols (sympy.integrals.integrals.integral property)": [[89, "sympy.integrals.integrals.Integral.free_symbols", false]], "free_symbols (sympy.matrices.common.matrixcommon property)": [[93, "sympy.matrices.common.MatrixCommon.free_symbols", false]], "free_symbols (sympy.physics.quantum.operator.differentialoperator property)": [[165, "sympy.physics.quantum.operator.DifferentialOperator.free_symbols", false]], "free_symbols (sympy.physics.units.quantities.quantity property)": [[183, "sympy.physics.units.quantities.Quantity.free_symbols", false]], "free_symbols (sympy.polys.polytools.poly property)": [[207, "sympy.polys.polytools.Poly.free_symbols", false]], "free_symbols (sympy.polys.polytools.purepoly property)": [[207, "sympy.polys.polytools.PurePoly.free_symbols", false]], "free_symbols (sympy.series.sequences.seqbase property)": [[217, "sympy.series.sequences.SeqBase.free_symbols", false]], "free_symbols() (sympy.physics.vector.vector.vector method)": [[186, "sympy.physics.vector.vector.Vector.free_symbols", false]], "free_symbols_in_domain (sympy.polys.polytools.poly property)": [[207, "sympy.polys.polytools.Poly.free_symbols_in_domain", false]], "freemodule (class in sympy.polys.agca.modules)": [[198, "sympy.polys.agca.modules.FreeModule", false]], "freemoduleelement (class in sympy.polys.agca.modules)": [[198, "sympy.polys.agca.modules.FreeModuleElement", false]], "freespace (class in sympy.physics.optics.gaussopt)": [[145, "sympy.physics.optics.gaussopt.FreeSpace", false]], "frequency (sympy.physics.optics.waves.twave property)": [[150, "sympy.physics.optics.waves.TWave.frequency", false]], "fresnel_coefficients() (in module sympy.physics.optics.utils)": [[149, "sympy.physics.optics.utils.fresnel_coefficients", false]], "fresnelc (class in sympy.functions.special.error_functions)": [[70, "sympy.functions.special.error_functions.fresnelc", false]], "fresnelintegral (class in sympy.functions.special.error_functions)": [[70, "sympy.functions.special.error_functions.FresnelIntegral", false]], "fresnels (class in sympy.functions.special.error_functions)": [[70, "sympy.functions.special.error_functions.fresnels", false]], "from_algebraicfield() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.fractionfield method)": [[202, "sympy.polys.domains.FractionField.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.integerring method)": [[202, "sympy.polys.domains.IntegerRing.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.rationalfield method)": [[202, "sympy.polys.domains.RationalField.from_AlgebraicField", false]], "from_axis_angle() (sympy.algebras.quaternion class method)": [[35, "sympy.algebras.Quaternion.from_axis_angle", false]], "from_complexfield() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.from_ComplexField", false]], "from_complexfield() (sympy.polys.domains.fractionfield method)": [[202, "sympy.polys.domains.FractionField.from_ComplexField", false]], "from_complexfield() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.from_ComplexField", false]], "from_ddm() (sympy.polys.matrices.sdm.sdm class method)": [[200, "sympy.polys.matrices.sdm.SDM.from_ddm", false]], "from_dict() (sympy.polys.polyclasses.dmp class method)": [[202, "sympy.polys.polyclasses.DMP.from_dict", false]], "from_dict() (sympy.polys.polytools.poly class method)": [[207, "sympy.polys.polytools.Poly.from_dict", false]], "from_dict_sympy() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_dict_sympy", false]], "from_euler() (sympy.algebras.quaternion class method)": [[35, "sympy.algebras.Quaternion.from_euler", false]], "from_expr() (sympy.codegen.ast.type class method)": [[43, "sympy.codegen.ast.Type.from_expr", false]], "from_expr() (sympy.polys.polytools.poly class method)": [[207, "sympy.polys.polytools.Poly.from_expr", false]], "from_expressiondomain() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.from_ExpressionDomain", false]], "from_expressiondomain() (sympy.polys.domains.expressiondomain method)": [[202, "sympy.polys.domains.ExpressionDomain.from_ExpressionDomain", false]], "from_expressionrawdomain() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.from_ExpressionRawDomain", false]], "from_ff() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.from_FF", false]], "from_ff() (sympy.polys.domains.finitefield method)": [[202, "sympy.polys.domains.FiniteField.from_FF", false]], "from_ff() (sympy.polys.domains.integerring method)": [[202, "sympy.polys.domains.IntegerRing.from_FF", false]], "from_ff_gmpy() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.from_FF_gmpy", false]], "from_ff_gmpy() (sympy.polys.domains.finitefield method)": [[202, "sympy.polys.domains.FiniteField.from_FF_gmpy", false]], "from_ff_gmpy() (sympy.polys.domains.gmpyintegerring method)": [[202, "sympy.polys.domains.GMPYIntegerRing.from_FF_gmpy", false]], "from_ff_gmpy() (sympy.polys.domains.integerring method)": [[202, "sympy.polys.domains.IntegerRing.from_FF_gmpy", false]], "from_ff_python() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.from_FF_python", false]], "from_ff_python() (sympy.polys.domains.finitefield method)": [[202, "sympy.polys.domains.FiniteField.from_FF_python", false]], "from_ff_python() (sympy.polys.domains.gmpyintegerring method)": [[202, "sympy.polys.domains.GMPYIntegerRing.from_FF_python", false]], "from_ff_python() (sympy.polys.domains.integerring method)": [[202, "sympy.polys.domains.IntegerRing.from_FF_python", false]], "from_fractionfield() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.from_FractionField", false]], "from_fractionfield() (sympy.polys.domains.expressiondomain method)": [[202, "sympy.polys.domains.ExpressionDomain.from_FractionField", false]], "from_fractionfield() (sympy.polys.domains.fractionfield method)": [[202, "sympy.polys.domains.FractionField.from_FractionField", false]], "from_fractionfield() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.from_FractionField", false]], "from_gaussianintegerring() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.from_GaussianIntegerRing", false]], "from_gaussianintegerring() (sympy.polys.domains.expressiondomain method)": [[202, "sympy.polys.domains.ExpressionDomain.from_GaussianIntegerRing", false]], "from_gaussianintegerring() (sympy.polys.domains.fractionfield method)": [[202, "sympy.polys.domains.FractionField.from_GaussianIntegerRing", false]], "from_gaussianintegerring() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.from_GaussianIntegerRing", false]], "from_gaussianintegerring() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianRationalField.from_GaussianIntegerRing", false]], "from_gaussianintegerring() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.from_GaussianIntegerRing", false]], "from_gaussianrationalfield() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.expressiondomain method)": [[202, "sympy.polys.domains.ExpressionDomain.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.fractionfield method)": [[202, "sympy.polys.domains.FractionField.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianRationalField.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.gmpyrationalfield method)": [[202, "sympy.polys.domains.GMPYRationalField.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.rationalfield method)": [[202, "sympy.polys.domains.RationalField.from_GaussianRationalField", false]], "from_globalpolynomialring() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.from_GlobalPolynomialRing", false]], "from_globalpolynomialring() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.from_GlobalPolynomialRing", false]], "from_hyper() (in module sympy.holonomic.holonomic)": [[81, "sympy.holonomic.holonomic.from_hyper", false]], "from_index_summation() (sympy.matrices.expressions.matrixexpr static method)": [[95, "sympy.matrices.expressions.MatrixExpr.from_index_summation", false]], "from_int_list() (sympy.polys.numberfields.modules.moduleelement class method)": [[206, "sympy.polys.numberfields.modules.ModuleElement.from_int_list", false]], "from_inversion_vector() (sympy.combinatorics.permutations.permutation class method)": [[54, "sympy.combinatorics.permutations.Permutation.from_inversion_vector", false]], "from_list() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_list", false]], "from_list() (sympy.polys.matrices.sdm.sdm class method)": [[200, "sympy.polys.matrices.sdm.SDM.from_list", false]], "from_list() (sympy.polys.polyclasses.dmp class method)": [[202, "sympy.polys.polyclasses.DMP.from_list", false]], "from_list() (sympy.polys.polytools.poly class method)": [[207, "sympy.polys.polytools.Poly.from_list", false]], "from_list_sympy() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_list_sympy", false]], "from_matrix() (sympy.algebras.quaternion class method)": [[35, "sympy.algebras.Quaternion.from_Matrix", false]], "from_matrix() (sympy.physics.control.lti.transferfunctionmatrix class method)": [[112, "sympy.physics.control.lti.TransferFunctionMatrix.from_Matrix", false]], "from_matrix() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_Matrix", false]], "from_meijerg() (in module sympy.holonomic.holonomic)": [[81, "sympy.holonomic.holonomic.from_meijerg", false]], "from_monogenicfiniteextension() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.from_MonogenicFiniteExtension", false]], "from_poly() (sympy.polys.polytools.poly class method)": [[207, "sympy.polys.polytools.Poly.from_poly", false]], "from_polynomialring() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.from_PolynomialRing", false]], "from_polynomialring() (sympy.polys.domains.expressiondomain method)": [[202, "sympy.polys.domains.ExpressionDomain.from_PolynomialRing", false]], "from_polynomialring() (sympy.polys.domains.fractionfield method)": [[202, "sympy.polys.domains.FractionField.from_PolynomialRing", false]], "from_polynomialring() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.from_PolynomialRing", false]], "from_qq() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.from_QQ", false]], "from_qq() (sympy.polys.domains.expressiondomain method)": [[202, "sympy.polys.domains.ExpressionDomain.from_QQ", false]], "from_qq() (sympy.polys.domains.finitefield method)": [[202, "sympy.polys.domains.FiniteField.from_QQ", false]], "from_qq() (sympy.polys.domains.fractionfield method)": [[202, "sympy.polys.domains.FractionField.from_QQ", false]], "from_qq() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_QQ", false]], "from_qq() (sympy.polys.domains.gmpyintegerring method)": [[202, "sympy.polys.domains.GMPYIntegerRing.from_QQ", false]], "from_qq() (sympy.polys.domains.integerring method)": [[202, "sympy.polys.domains.IntegerRing.from_QQ", false]], "from_qq() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.from_QQ", false]], "from_qq() (sympy.polys.domains.rationalfield method)": [[202, "sympy.polys.domains.RationalField.from_QQ", false]], "from_qq_gmpy() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.expressiondomain method)": [[202, "sympy.polys.domains.ExpressionDomain.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.finitefield method)": [[202, "sympy.polys.domains.FiniteField.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.fractionfield method)": [[202, "sympy.polys.domains.FractionField.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.gmpyintegerring method)": [[202, "sympy.polys.domains.GMPYIntegerRing.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.gmpyrationalfield method)": [[202, "sympy.polys.domains.GMPYRationalField.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.integerring method)": [[202, "sympy.polys.domains.IntegerRing.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.rationalfield method)": [[202, "sympy.polys.domains.RationalField.from_QQ_gmpy", false]], "from_qq_python() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.expressiondomain method)": [[202, "sympy.polys.domains.ExpressionDomain.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.finitefield method)": [[202, "sympy.polys.domains.FiniteField.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.fractionfield method)": [[202, "sympy.polys.domains.FractionField.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.gmpyintegerring method)": [[202, "sympy.polys.domains.GMPYIntegerRing.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.gmpyrationalfield method)": [[202, "sympy.polys.domains.GMPYRationalField.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.integerring method)": [[202, "sympy.polys.domains.IntegerRing.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.rationalfield method)": [[202, "sympy.polys.domains.RationalField.from_QQ_python", false]], "from_rational_expression() (sympy.physics.control.lti.transferfunction class method)": [[112, "sympy.physics.control.lti.TransferFunction.from_rational_expression", false]], "from_real() (sympy.sets.fancysets.complexregion class method)": [[219, "sympy.sets.fancysets.ComplexRegion.from_real", false]], "from_realfield() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.from_RealField", false]], "from_realfield() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.from_RealField", false]], "from_realfield() (sympy.polys.domains.expressiondomain method)": [[202, "sympy.polys.domains.ExpressionDomain.from_RealField", false]], "from_realfield() (sympy.polys.domains.finitefield method)": [[202, "sympy.polys.domains.FiniteField.from_RealField", false]], "from_realfield() (sympy.polys.domains.fractionfield method)": [[202, "sympy.polys.domains.FractionField.from_RealField", false]], "from_realfield() (sympy.polys.domains.gmpyintegerring method)": [[202, "sympy.polys.domains.GMPYIntegerRing.from_RealField", false]], "from_realfield() (sympy.polys.domains.gmpyrationalfield method)": [[202, "sympy.polys.domains.GMPYRationalField.from_RealField", false]], "from_realfield() (sympy.polys.domains.integerring method)": [[202, "sympy.polys.domains.IntegerRing.from_RealField", false]], "from_realfield() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.from_RealField", false]], "from_realfield() (sympy.polys.domains.rationalfield method)": [[202, "sympy.polys.domains.RationalField.from_RealField", false]], "from_rep() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_rep", false]], "from_rgs() (sympy.combinatorics.partitions.partition class method)": [[51, "sympy.combinatorics.partitions.Partition.from_rgs", false]], "from_rotation_matrix() (sympy.algebras.quaternion class method)": [[35, "sympy.algebras.Quaternion.from_rotation_matrix", false]], "from_sequence() (sympy.combinatorics.permutations.permutation class method)": [[54, "sympy.combinatorics.permutations.Permutation.from_sequence", false]], "from_sympy() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.from_sympy", false]], "from_sympy() (sympy.polys.domains.complexfield method)": [[202, "sympy.polys.domains.ComplexField.from_sympy", false]], "from_sympy() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.from_sympy", false]], "from_sympy() (sympy.polys.domains.expressiondomain method)": [[202, "sympy.polys.domains.ExpressionDomain.from_sympy", false]], "from_sympy() (sympy.polys.domains.finitefield method)": [[202, "sympy.polys.domains.FiniteField.from_sympy", false]], "from_sympy() (sympy.polys.domains.fractionfield method)": [[202, "sympy.polys.domains.FractionField.from_sympy", false]], "from_sympy() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_sympy", false]], "from_sympy() (sympy.polys.domains.gmpyintegerring method)": [[202, "sympy.polys.domains.GMPYIntegerRing.from_sympy", false]], "from_sympy() (sympy.polys.domains.gmpyrationalfield method)": [[202, "sympy.polys.domains.GMPYRationalField.from_sympy", false]], "from_sympy() (sympy.polys.domains.integerring method)": [[202, "sympy.polys.domains.IntegerRing.from_sympy", false]], "from_sympy() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.from_sympy", false]], "from_sympy() (sympy.polys.domains.rationalfield method)": [[202, "sympy.polys.domains.RationalField.from_sympy", false]], "from_sympy() (sympy.polys.domains.realfield method)": [[202, "sympy.polys.domains.RealField.from_sympy", false]], "from_sympy_list() (sympy.polys.polyclasses.dmp class method)": [[202, "sympy.polys.polyclasses.DMP.from_sympy_list", false]], "from_zz() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.from_ZZ", false]], "from_zz() (sympy.polys.domains.expressiondomain method)": [[202, "sympy.polys.domains.ExpressionDomain.from_ZZ", false]], "from_zz() (sympy.polys.domains.finitefield method)": [[202, "sympy.polys.domains.FiniteField.from_ZZ", false]], "from_zz() (sympy.polys.domains.fractionfield method)": [[202, "sympy.polys.domains.FractionField.from_ZZ", false]], "from_zz() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_ZZ", false]], "from_zz() (sympy.polys.domains.integerring method)": [[202, "sympy.polys.domains.IntegerRing.from_ZZ", false]], "from_zz() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.from_ZZ", false]], "from_zz() (sympy.polys.domains.rationalfield method)": [[202, "sympy.polys.domains.RationalField.from_ZZ", false]], "from_zz_gmpy() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.expressiondomain method)": [[202, "sympy.polys.domains.ExpressionDomain.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.finitefield method)": [[202, "sympy.polys.domains.FiniteField.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.fractionfield method)": [[202, "sympy.polys.domains.FractionField.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.gmpyintegerring method)": [[202, "sympy.polys.domains.GMPYIntegerRing.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.gmpyrationalfield method)": [[202, "sympy.polys.domains.GMPYRationalField.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.integerring method)": [[202, "sympy.polys.domains.IntegerRing.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.rationalfield method)": [[202, "sympy.polys.domains.RationalField.from_ZZ_gmpy", false]], "from_zz_python() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.expressiondomain method)": [[202, "sympy.polys.domains.ExpressionDomain.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.finitefield method)": [[202, "sympy.polys.domains.FiniteField.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.fractionfield method)": [[202, "sympy.polys.domains.FractionField.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.gmpyintegerring method)": [[202, "sympy.polys.domains.GMPYIntegerRing.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.gmpyrationalfield method)": [[202, "sympy.polys.domains.GMPYRationalField.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.integerring method)": [[202, "sympy.polys.domains.IntegerRing.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.rationalfield method)": [[202, "sympy.polys.domains.RationalField.from_ZZ_python", false]], "fromiter() (sympy.core.basic.basic class method)": [[62, "sympy.core.basic.Basic.fromiter", false]], "fu() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.fu", false]], "full_cyclic_form (sympy.combinatorics.permutations.permutation property)": [[54, "sympy.combinatorics.permutations.Permutation.full_cyclic_form", false]], "fullrankpredicate (class in sympy.assumptions.predicates.matrices)": [[39, "sympy.assumptions.predicates.matrices.FullRankPredicate", false]], "fully_symmetric() (sympy.tensor.tensor.tensorsymmetry class method)": [[237, "sympy.tensor.tensor.TensorSymmetry.fully_symmetric", false]], "func": [[11, "term-func", true]], "func (sympy.core.basic.basic property)": [[62, "sympy.core.basic.Basic.func", false]], "func (sympy.physics.vector.dyadic.dyadic property)": [[186, "sympy.physics.vector.dyadic.Dyadic.func", false]], "func (sympy.physics.vector.vector.vector property)": [[186, "sympy.physics.vector.vector.Vector.func", false]], "func_field_modgcd() (in module sympy.polys.modulargcd)": [[204, "sympy.polys.modulargcd.func_field_modgcd", false]], "func_name() (in module sympy.utilities.misc)": [[252, "sympy.utilities.misc.func_name", false]], "funcminusoneoptim (class in sympy.codegen.rewriting)": [[43, "sympy.codegen.rewriting.FuncMinusOneOptim", false]], "function": [[11, "term-Function", true]], "function (class in sympy.core.function)": [[62, "sympy.core.function.Function", false]], "function (class)": [[11, "term-Function-class", true]], "function (sympy.assumptions.assume.appliedpredicate property)": [[37, "sympy.assumptions.assume.AppliedPredicate.function", false]], "function (sympy.concrete.expr_with_limits.exprwithlimits property)": [[89, "sympy.concrete.expr_with_limits.ExprWithLimits.function", false]], "function (sympy.integrals.transforms.integraltransform property)": [[89, "sympy.integrals.transforms.IntegralTransform.function", false]], "function (sympy.physics.quantum.operator.differentialoperator property)": [[165, "sympy.physics.quantum.operator.DifferentialOperator.function", false]], "function (sympy.series.formal.formalpowerseriescompose property)": [[213, "sympy.series.formal.FormalPowerSeriesCompose.function", false]], "function (sympy.series.formal.formalpowerseriesinverse property)": [[213, "sympy.series.formal.FormalPowerSeriesInverse.function", false]], "function (sympy.series.formal.formalpowerseriesproduct property)": [[213, "sympy.series.formal.FormalPowerSeriesProduct.function", false]], "function_exponentiation() (in module sympy.parsing.sympy_parser)": [[104, "sympy.parsing.sympy_parser.function_exponentiation", false]], "function_range() (in module sympy.calculus.util)": [[41, "sympy.calculus.util.function_range", false]], "function_variable (sympy.integrals.transforms.integraltransform property)": [[89, "sympy.integrals.transforms.IntegralTransform.function_variable", false]], "functioncall (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.FunctionCall", false]], "functionclass (class in sympy.core.function)": [[62, "sympy.core.function.FunctionClass", false]], "functiondefinition (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.FunctionDefinition", false]], "functionmatrix (class in sympy.matrices.expressions)": [[95, "sympy.matrices.expressions.FunctionMatrix", false]], "functionprototype (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.FunctionPrototype", false]], "functions (sympy.geometry.curve.curve property)": [[71, "sympy.geometry.curve.Curve.functions", false]], "fundamental_matrix() (sympy.stats.discretemarkovchain method)": [[231, "sympy.stats.DiscreteMarkovChain.fundamental_matrix", false]], "fwht() (in module sympy.discrete.transforms)": [[65, "sympy.discrete.transforms.fwht", false]], "g() (in module sympy.printing.pretty.pretty_symbology)": [[211, "sympy.printing.pretty.pretty_symbology.G", false], [211, "sympy.printing.pretty.pretty_symbology.g", false]], "g18() (in module sympy.combinatorics.galois)": [[45, "sympy.combinatorics.galois.G18", false]], "g36m() (in module sympy.combinatorics.galois)": [[45, "sympy.combinatorics.galois.G36m", false]], "g36p() (in module sympy.combinatorics.galois)": [[45, "sympy.combinatorics.galois.G36p", false]], "g72() (in module sympy.combinatorics.galois)": [[45, "sympy.combinatorics.galois.G72", false]], "galois_group() (in module sympy.polys.numberfields.galoisgroups)": [[206, "sympy.polys.numberfields.galoisgroups.galois_group", false]], "galois_group() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.galois_group", false]], "galois_group() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.galois_group", false]], "gamma (class in sympy.functions.special.gamma_functions)": [[70, "sympy.functions.special.gamma_functions.gamma", false]], "gamma() (in module sympy.stats)": [[231, "sympy.stats.Gamma", false]], "gamma_trace() (in module sympy.physics.hep.gamma_matrices)": [[113, "sympy.physics.hep.gamma_matrices.gamma_trace", false]], "gammainverse() (in module sympy.stats)": [[231, "sympy.stats.GammaInverse", false]], "gammaprocess (class in sympy.stats)": [[231, "sympy.stats.GammaProcess", false]], "gammasimp() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.gammasimp", false]], "gate (class in sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.Gate", false]], "gate (sympy.physics.quantum.gate.cgate property)": [[160, "sympy.physics.quantum.gate.CGate.gate", false]], "gate (sympy.physics.quantum.gate.cnotgate property)": [[160, "sympy.physics.quantum.gate.CNotGate.gate", false]], "gate_simp() (in module sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.gate_simp", false]], "gate_sort() (in module sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.gate_sort", false]], "gateinputcount() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.gateinputcount", false]], "gaunt() (in module sympy.physics.wigner)": [[196, "sympy.physics.wigner.gaunt", false]], "gauss_chebyshev_t() (in module sympy.integrals.quadrature)": [[89, "sympy.integrals.quadrature.gauss_chebyshev_t", false]], "gauss_chebyshev_u() (in module sympy.integrals.quadrature)": [[89, "sympy.integrals.quadrature.gauss_chebyshev_u", false]], "gauss_gen_laguerre() (in module sympy.integrals.quadrature)": [[89, "sympy.integrals.quadrature.gauss_gen_laguerre", false]], "gauss_hermite() (in module sympy.integrals.quadrature)": [[89, "sympy.integrals.quadrature.gauss_hermite", false]], "gauss_jacobi() (in module sympy.integrals.quadrature)": [[89, "sympy.integrals.quadrature.gauss_jacobi", false]], "gauss_jordan_solve() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.gauss_jordan_solve", false]], "gauss_laguerre() (in module sympy.integrals.quadrature)": [[89, "sympy.integrals.quadrature.gauss_laguerre", false]], "gauss_legendre() (in module sympy.integrals.quadrature)": [[89, "sympy.integrals.quadrature.gauss_legendre", false]], "gauss_lobatto() (in module sympy.integrals.quadrature)": [[89, "sympy.integrals.quadrature.gauss_lobatto", false]], "gaussian_conj() (in module sympy.physics.optics.gaussopt)": [[145, "sympy.physics.optics.gaussopt.gaussian_conj", false]], "gaussian_reduce() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.gaussian_reduce", false]], "gaussiandomain (class in sympy.polys.domains.gaussiandomains)": [[202, "sympy.polys.domains.gaussiandomains.GaussianDomain", false]], "gaussianelement (class in sympy.polys.domains.gaussiandomains)": [[202, "sympy.polys.domains.gaussiandomains.GaussianElement", false]], "gaussianinteger (class in sympy.polys.domains.gaussiandomains)": [[202, "sympy.polys.domains.gaussiandomains.GaussianInteger", false]], "gaussianintegerring (class in sympy.polys.domains.gaussiandomains)": [[202, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing", false]], "gaussianrational (class in sympy.polys.domains.gaussiandomains)": [[202, "sympy.polys.domains.gaussiandomains.GaussianRational", false]], "gaussianrationalfield (class in sympy.polys.domains.gaussiandomains)": [[202, "sympy.polys.domains.gaussiandomains.GaussianRationalField", false]], "gcd() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.gcd", false]], "gcd() (sympy.core.numbers.number method)": [[62, "sympy.core.numbers.Number.gcd", false]], "gcd() (sympy.polys.domains.complexfield method)": [[202, "sympy.polys.domains.ComplexField.gcd", false]], "gcd() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.gcd", false]], "gcd() (sympy.polys.domains.field.field method)": [[202, "sympy.polys.domains.field.Field.gcd", false]], "gcd() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.gcd", false]], "gcd() (sympy.polys.domains.gmpyintegerring method)": [[202, "sympy.polys.domains.GMPYIntegerRing.gcd", false]], "gcd() (sympy.polys.domains.integerring method)": [[202, "sympy.polys.domains.IntegerRing.gcd", false]], "gcd() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.gcd", false]], "gcd() (sympy.polys.domains.realfield method)": [[202, "sympy.polys.domains.RealField.gcd", false]], "gcd() (sympy.polys.monomials.monomial method)": [[207, "sympy.polys.monomials.Monomial.gcd", false]], "gcd() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.gcd", false]], "gcd() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.gcd", false]], "gcd_list() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.gcd_list", false]], "gcd_terms() (in module sympy.core.exprtools)": [[62, "sympy.core.exprtools.gcd_terms", false]], "gcdex() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.gcdex", false]], "gcdex() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.gcdex", false]], "gcdex() (sympy.polys.domains.gmpyintegerring method)": [[202, "sympy.polys.domains.GMPYIntegerRing.gcdex", false]], "gcdex() (sympy.polys.domains.integerring method)": [[202, "sympy.polys.domains.IntegerRing.gcdex", false]], "gcdex() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.gcdex", false]], "gcdex() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.gcdex", false]], "gcdex() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.gcdex", false]], "ge (in module sympy.core.relational)": [[62, "sympy.core.relational.Ge", false]], "gegenbauer (class in sympy.functions.special.polynomials)": [[70, "sympy.functions.special.polynomials.gegenbauer", false]], "gegenbauer_poly() (in module sympy.polys.orthopolys)": [[207, "sympy.polys.orthopolys.gegenbauer_poly", false]], "gen (sympy.polys.polytools.poly property)": [[207, "sympy.polys.polytools.Poly.gen", false]], "gen (sympy.series.sequences.seqbase property)": [[217, "sympy.series.sequences.SeqBase.gen", false]], "generalizedmultivariateloggamma() (in module sympy.stats)": [[231, "sympy.stats.GeneralizedMultivariateLogGamma", false]], "generalizedmultivariateloggammaomega() (in module sympy.stats)": [[231, "sympy.stats.GeneralizedMultivariateLogGammaOmega", false]], "generalpythagorean (class in sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.GeneralPythagorean", false]], "generalsumofevenpowers (class in sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.GeneralSumOfEvenPowers", false]], "generalsumofsquares (class in sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.GeneralSumOfSquares", false]], "generate() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.generate", false]], "generate_bell() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.generate_bell", false]], "generate_derangements() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.generate_derangements", false]], "generate_dimino() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.generate_dimino", false]], "generate_gray() (sympy.combinatorics.graycode.graycode method)": [[46, "sympy.combinatorics.graycode.GrayCode.generate_gray", false]], "generate_involutions() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.generate_involutions", false]], "generate_oriented_forest() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.generate_oriented_forest", false]], "generate_schreier_sims() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.generate_schreier_sims", false]], "generator (sympy.polys.numberfields.modules.powerbasiselement property)": [[206, "sympy.polys.numberfields.modules.PowerBasisElement.generator", false]], "generator_product() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.generator_product", false]], "generators (sympy.combinatorics.perm_groups.permutationgroup property)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.generators", false]], "generators() (sympy.liealgebras.weyl_group.weylgroup method)": [[91, "sympy.liealgebras.weyl_group.WeylGroup.generators", false]], "generatorserror (class in sympy.polys.polyerrors)": [[204, "sympy.polys.polyerrors.GeneratorsError", false]], "generatorsneeded (class in sympy.polys.polyerrors)": [[204, "sympy.polys.polyerrors.GeneratorsNeeded", false]], "genocchi (class in sympy.functions.combinatorial.numbers)": [[67, "sympy.functions.combinatorial.numbers.genocchi", false]], "genocchi_poly() (in module sympy.polys.appellseqs)": [[207, "sympy.polys.appellseqs.genocchi_poly", false]], "geometric() (in module sympy.stats)": [[231, "sympy.stats.Geometric", false]], "geometric_conj_ab() (in module sympy.physics.optics.gaussopt)": [[145, "sympy.physics.optics.gaussopt.geometric_conj_ab", false]], "geometric_conj_af() (in module sympy.physics.optics.gaussopt)": [[145, "sympy.physics.optics.gaussopt.geometric_conj_af", false]], "geometric_conj_bf() (in module sympy.physics.optics.gaussopt)": [[145, "sympy.physics.optics.gaussopt.geometric_conj_bf", false]], "geometricray (class in sympy.physics.optics.gaussopt)": [[145, "sympy.physics.optics.gaussopt.GeometricRay", false]], "geometryentity (class in sympy.geometry.entity)": [[73, "sympy.geometry.entity.GeometryEntity", false]], "get() (sympy.core.containers.dict method)": [[62, "sympy.core.containers.Dict.get", false]], "get_adjacency_distance() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.get_adjacency_distance", false]], "get_adjacency_matrix() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.get_adjacency_matrix", false]], "get_basis() (in module sympy.physics.quantum.represent)": [[171, "sympy.physics.quantum.represent.get_basis", false]], "get_class() (in module sympy.utilities.source)": [[254, "sympy.utilities.source.get_class", false]], "get_comm() (sympy.tensor.tensor._tensormanager method)": [[237, "sympy.tensor.tensor._TensorManager.get_comm", false]], "get_contraction_structure() (in module sympy.tensor.index_methods)": [[235, "sympy.tensor.index_methods.get_contraction_structure", false]], "get_data() (sympy.plotting.plot.line2dbaseseries method)": [[197, "sympy.plotting.plot.Line2DBaseSeries.get_data", false]], "get_default_datatype() (in module sympy.utilities.codegen)": [[244, "sympy.utilities.codegen.get_default_datatype", false]], "get_diag_blocks() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.get_diag_blocks", false]], "get_diag_blocks() (sympy.matrices.expressions.blockmatrix.blockdiagmatrix method)": [[95, "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix.get_diag_blocks", false]], "get_domain() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.get_domain", false]], "get_exact() (sympy.polys.domains.complexfield method)": [[202, "sympy.polys.domains.ComplexField.get_exact", false]], "get_exact() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.get_exact", false]], "get_exact() (sympy.polys.domains.realfield method)": [[202, "sympy.polys.domains.RealField.get_exact", false]], "get_field() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.get_field", false]], "get_field() (sympy.polys.domains.expressiondomain method)": [[202, "sympy.polys.domains.ExpressionDomain.get_field", false]], "get_field() (sympy.polys.domains.field.field method)": [[202, "sympy.polys.domains.field.Field.get_field", false]], "get_field() (sympy.polys.domains.finitefield method)": [[202, "sympy.polys.domains.FiniteField.get_field", false]], "get_field() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.get_field", false]], "get_field() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianRationalField.get_field", false]], "get_field() (sympy.polys.domains.integerring method)": [[202, "sympy.polys.domains.IntegerRing.get_field", false]], "get_field() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.get_field", false]], "get_free_indices() (sympy.tensor.tensor.tensmul method)": [[237, "sympy.tensor.tensor.TensMul.get_free_indices", false]], "get_gen_sol_from_part_sol() (in module sympy.solvers.ode.riccati)": [[227, "sympy.solvers.ode.riccati.get_gen_sol_from_part_sol", false]], "get_indices() (in module sympy.tensor.index_methods)": [[235, "sympy.tensor.index_methods.get_indices", false]], "get_indices() (sympy.tensor.tensor.tensmul method)": [[237, "sympy.tensor.tensor.TensMul.get_indices", false]], "get_interface() (sympy.utilities.codegen.fcodegen method)": [[244, "sympy.utilities.codegen.FCodeGen.get_interface", false]], "get_matrix() (sympy.tensor.tensor.tensexpr method)": [[237, "sympy.tensor.tensor.TensExpr.get_matrix", false]], "get_mod_func() (in module sympy.utilities.source)": [[254, "sympy.utilities.source.get_mod_func", false]], "get_modulus() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.get_modulus", false]], "get_motion_params() (in module sympy.physics.vector.functions)": [[190, "sympy.physics.vector.functions.get_motion_params", false]], "get_num_denom() (in module sympy.polys.numberfields.utilities)": [[206, "sympy.polys.numberfields.utilities.get_num_denom", false]], "get_period() (sympy.functions.special.hyper.meijerg method)": [[70, "sympy.functions.special.hyper.meijerg.get_period", false]], "get_permuted() (sympy.physics.secondquant.permutationoperator method)": [[176, "sympy.physics.secondquant.PermutationOperator.get_permuted", false]], "get_points() (sympy.plotting.plot.lineover1drangeseries method)": [[197, "sympy.plotting.plot.LineOver1DRangeSeries.get_points", false]], "get_points() (sympy.plotting.plot.parametric2dlineseries method)": [[197, "sympy.plotting.plot.Parametric2DLineSeries.get_points", false]], "get_positional_distance() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.get_positional_distance", false]], "get_precedence_distance() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.get_precedence_distance", false]], "get_precedence_matrix() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.get_precedence_matrix", false]], "get_prototype() (sympy.utilities.codegen.ccodegen method)": [[244, "sympy.utilities.codegen.CCodeGen.get_prototype", false]], "get_prototype() (sympy.utilities.codegen.rustcodegen method)": [[244, "sympy.utilities.codegen.RustCodeGen.get_prototype", false]], "get_resource() (in module sympy.utilities.pkgdata)": [[253, "sympy.utilities.pkgdata.get_resource", false]], "get_ring() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.get_ring", false]], "get_ring() (sympy.polys.domains.complexfield method)": [[202, "sympy.polys.domains.ComplexField.get_ring", false]], "get_ring() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.get_ring", false]], "get_ring() (sympy.polys.domains.expressiondomain method)": [[202, "sympy.polys.domains.ExpressionDomain.get_ring", false]], "get_ring() (sympy.polys.domains.field.field method)": [[202, "sympy.polys.domains.field.Field.get_ring", false]], "get_ring() (sympy.polys.domains.fractionfield method)": [[202, "sympy.polys.domains.FractionField.get_ring", false]], "get_ring() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.get_ring", false]], "get_ring() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianRationalField.get_ring", false]], "get_ring() (sympy.polys.domains.gmpyrationalfield method)": [[202, "sympy.polys.domains.GMPYRationalField.get_ring", false]], "get_ring() (sympy.polys.domains.rationalfield method)": [[202, "sympy.polys.domains.RationalField.get_ring", false]], "get_ring() (sympy.polys.domains.realfield method)": [[202, "sympy.polys.domains.RealField.get_ring", false]], "get_ring() (sympy.polys.domains.ring.ring method)": [[202, "sympy.polys.domains.ring.Ring.get_ring", false]], "get_segments() (sympy.plotting.plot.matplotlibbackend static method)": [[197, "sympy.plotting.plot.MatplotlibBackend.get_segments", false]], "get_subno() (sympy.physics.secondquant.no method)": [[176, "sympy.physics.secondquant.NO.get_subNO", false]], "get_subset_from_bitstring() (sympy.combinatorics.graycode method)": [[46, "sympy.combinatorics.graycode.get_subset_from_bitstring", false]], "get_symmetric_group_sgs() (in module sympy.combinatorics.tensor_can)": [[58, "sympy.combinatorics.tensor_can.get_symmetric_group_sgs", false]], "get_sympy_dir() (in module sympy.testing.runtests)": [[242, "sympy.testing.runtests.get_sympy_dir", false]], "get_target_matrix() (sympy.physics.quantum.gate.gate method)": [[160, "sympy.physics.quantum.gate.Gate.get_target_matrix", false]], "get_target_matrix() (sympy.physics.quantum.gate.ugate method)": [[160, "sympy.physics.quantum.gate.UGate.get_target_matrix", false]], "get_units_non_prefixed() (sympy.physics.units.unitsystem.unitsystem method)": [[184, "sympy.physics.units.unitsystem.UnitSystem.get_units_non_prefixed", false]], "getn() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.getn", false]], "geto() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.getO", false]], "gf_add() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_add", false]], "gf_add_ground() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_add_ground", false]], "gf_add_mul() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_add_mul", false]], "gf_berlekamp() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_berlekamp", false]], "gf_cofactors() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_cofactors", false]], "gf_compose() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_compose", false]], "gf_compose_mod() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_compose_mod", false]], "gf_crt() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_crt", false]], "gf_crt1() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_crt1", false]], "gf_crt2() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_crt2", false]], "gf_csolve() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_csolve", false]], "gf_degree() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_degree", false]], "gf_diff() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_diff", false]], "gf_div() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_div", false]], "gf_eval() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_eval", false]], "gf_expand() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_expand", false]], "gf_exquo() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_exquo", false]], "gf_factor() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_factor", false]], "gf_factor_sqf() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_factor_sqf", false]], "gf_from_dict() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_from_dict", false]], "gf_from_int_poly() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_from_int_poly", false]], "gf_gcd() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_gcd", false]], "gf_gcdex() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_gcdex", false]], "gf_int() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_int", false]], "gf_irreducible() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_irreducible", false]], "gf_irreducible_p() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_irreducible_p", false]], "gf_lc() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_LC", false]], "gf_lcm() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_lcm", false]], "gf_lshift() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_lshift", false]], "gf_monic() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_monic", false]], "gf_mul() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_mul", false]], "gf_mul_ground() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_mul_ground", false]], "gf_multi_eval() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_multi_eval", false]], "gf_neg() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_neg", false]], "gf_normal() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_normal", false]], "gf_pow() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_pow", false]], "gf_pow_mod() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_pow_mod", false]], "gf_qbasis() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_Qbasis", false]], "gf_qmatrix() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_Qmatrix", false]], "gf_quo() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_quo", false]], "gf_quo_ground() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_quo_ground", false]], "gf_random() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_random", false]], "gf_rem() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_rem", false]], "gf_rshift() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_rshift", false]], "gf_shoup() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_shoup", false]], "gf_sqf_list() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_sqf_list", false]], "gf_sqf_p() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_sqf_p", false]], "gf_sqf_part() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_sqf_part", false]], "gf_sqr() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_sqr", false]], "gf_strip() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_strip", false]], "gf_sub() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_sub", false]], "gf_sub_ground() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_sub_ground", false]], "gf_sub_mul() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_sub_mul", false]], "gf_tc() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_TC", false]], "gf_to_dict() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_to_dict", false]], "gf_to_int_poly() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_to_int_poly", false]], "gf_trace_map() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_trace_map", false]], "gf_trunc() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_trunc", false]], "gf_value() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_value", false]], "gf_zassenhaus() (in module sympy.polys.galoistools)": [[204, "sympy.polys.galoistools.gf_zassenhaus", false]], "gff() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.gff", false]], "gff_list() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.gff_list", false]], "gff_list() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.gff_list", false]], "gff_list() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.gff_list", false]], "given() (in module sympy.stats)": [[231, "sympy.stats.given", false]], "gm_private_key() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.gm_private_key", false]], "gm_public_key() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.gm_public_key", false]], "gmpyfinitefield (class in sympy.polys.domains)": [[202, "sympy.polys.domains.GMPYFiniteField", false]], "gmpyintegerring (class in sympy.polys.domains)": [[202, "sympy.polys.domains.GMPYIntegerRing", false]], "gmpyrationalfield (class in sympy.polys.domains)": [[202, "sympy.polys.domains.GMPYRationalField", false]], "goldenratio (class in sympy.core.numbers)": [[62, "sympy.core.numbers.GoldenRatio", false]], "gompertz() (in module sympy.stats)": [[231, "sympy.stats.Gompertz", false]], "gosper_normal() (in module sympy.concrete.gosper)": [[61, "sympy.concrete.gosper.gosper_normal", false]], "gosper_sum() (in module sympy.concrete.gosper)": [[61, "sympy.concrete.gosper.gosper_sum", false]], "gosper_term() (in module sympy.concrete.gosper)": [[61, "sympy.concrete.gosper.gosper_term", false]], "goto (class in sympy.codegen.cnodes)": [[43, "sympy.codegen.cnodes.goto", false]], "goto (class in sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.GoTo", false]], "gouy (sympy.physics.optics.gaussopt.beamparameter property)": [[145, "sympy.physics.optics.gaussopt.BeamParameter.gouy", false]], "gradedlexorder (class in sympy.polys.orderings)": [[207, "sympy.polys.orderings.GradedLexOrder", false]], "gradient() (in module sympy.physics.vector.fieldfunctions)": [[187, "sympy.physics.vector.fieldfunctions.gradient", false]], "gradient() (in module sympy.vector)": [[259, "sympy.vector.gradient", false]], "gradient() (sympy.vector.deloperator.del method)": [[256, "sympy.vector.deloperator.Del.gradient", false]], "gramschmidt() (in module sympy.matrices.dense)": [[98, "sympy.matrices.dense.GramSchmidt", false]], "gray_to_bin() (sympy.combinatorics.graycode method)": [[46, "sympy.combinatorics.graycode.gray_to_bin", false]], "graycode (class in sympy.combinatorics.graycode)": [[46, "sympy.combinatorics.graycode.GrayCode", false]], "graycode_subsets() (sympy.combinatorics.graycode method)": [[46, "sympy.combinatorics.graycode.graycode_subsets", false]], "greaterthan (class in sympy.core.relational)": [[62, "sympy.core.relational.GreaterThan", false]], "greek_letters (in module sympy.printing.pretty.pretty_symbology)": [[211, "sympy.printing.pretty.pretty_symbology.greek_letters", false]], "groebner() (in module sympy.polys.groebnertools)": [[204, "sympy.polys.groebnertools.groebner", false]], "groebner() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.groebner", false]], "groebnerbasis (class in sympy.polys.polytools)": [[207, "sympy.polys.polytools.GroebnerBasis", false]], "ground_roots() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.ground_roots", false]], "ground_roots() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.ground_roots", false]], "group() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.group", false]], "group_name() (sympy.liealgebras.weyl_group.weylgroup method)": [[91, "sympy.liealgebras.weyl_group.WeylGroup.group_name", false]], "group_order() (sympy.liealgebras.weyl_group.weylgroup method)": [[91, "sympy.liealgebras.weyl_group.WeylGroup.group_order", false]], "grover_iteration() (in module sympy.physics.quantum.grover)": [[161, "sympy.physics.quantum.grover.grover_iteration", false]], "gruntz() (in module sympy.series.gruntz)": [[218, "sympy.series.gruntz.gruntz", false]], "gt (in module sympy.core.relational)": [[62, "sympy.core.relational.Gt", false]], "gumbel() (in module sympy.stats)": [[231, "sympy.stats.Gumbel", false]], "h (in module sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.H", false]], "h (sympy.matrices.common.matrixcommon property)": [[93, "sympy.matrices.common.MatrixCommon.H", false]], "hadamard_product() (in module sympy.matrices.expressions)": [[95, "sympy.matrices.expressions.hadamard_product", false]], "hadamardgate (class in sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.HadamardGate", false]], "hadamardpower (class in sympy.matrices.expressions)": [[95, "sympy.matrices.expressions.HadamardPower", false]], "hadamardproduct (class in sympy.matrices.expressions)": [[95, "sympy.matrices.expressions.HadamardProduct", false]], "half (class in sympy.core.numbers)": [[62, "sympy.core.numbers.Half", false]], "half_gcdex() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.half_gcdex", false]], "half_gcdex() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.half_gcdex", false]], "half_gcdex() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.half_gcdex", false]], "half_gcdex() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.half_gcdex", false]], "half_per() (sympy.polys.polyclasses.dmf method)": [[202, "sympy.polys.polyclasses.DMF.half_per", false]], "half_wave_retarder() (in module sympy.physics.optics.polarization)": [[148, "sympy.physics.optics.polarization.half_wave_retarder", false]], "handler (sympy.assumptions.assume.predicate attribute)": [[37, "sympy.assumptions.assume.Predicate.handler", false]], "handler (sympy.assumptions.predicates.calculus.finitepredicate attribute)": [[39, "sympy.assumptions.predicates.calculus.FinitePredicate.handler", false]], "handler (sympy.assumptions.predicates.calculus.infinitepredicate attribute)": [[39, "sympy.assumptions.predicates.calculus.InfinitePredicate.handler", false]], "handler (sympy.assumptions.predicates.common.commutativepredicate attribute)": [[39, "sympy.assumptions.predicates.common.CommutativePredicate.handler", false]], "handler (sympy.assumptions.predicates.common.istruepredicate attribute)": [[39, "sympy.assumptions.predicates.common.IsTruePredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.complexelementspredicate attribute)": [[39, "sympy.assumptions.predicates.matrices.ComplexElementsPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.diagonalpredicate attribute)": [[39, "sympy.assumptions.predicates.matrices.DiagonalPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.fullrankpredicate attribute)": [[39, "sympy.assumptions.predicates.matrices.FullRankPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.integerelementspredicate attribute)": [[39, "sympy.assumptions.predicates.matrices.IntegerElementsPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.invertiblepredicate attribute)": [[39, "sympy.assumptions.predicates.matrices.InvertiblePredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.lowertriangularpredicate attribute)": [[39, "sympy.assumptions.predicates.matrices.LowerTriangularPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.normalpredicate attribute)": [[39, "sympy.assumptions.predicates.matrices.NormalPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.orthogonalpredicate attribute)": [[39, "sympy.assumptions.predicates.matrices.OrthogonalPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.positivedefinitepredicate attribute)": [[39, "sympy.assumptions.predicates.matrices.PositiveDefinitePredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.realelementspredicate attribute)": [[39, "sympy.assumptions.predicates.matrices.RealElementsPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.singularpredicate attribute)": [[39, "sympy.assumptions.predicates.matrices.SingularPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.squarepredicate attribute)": [[39, "sympy.assumptions.predicates.matrices.SquarePredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.symmetricpredicate attribute)": [[39, "sympy.assumptions.predicates.matrices.SymmetricPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.triangularpredicate attribute)": [[39, "sympy.assumptions.predicates.matrices.TriangularPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.unitarypredicate attribute)": [[39, "sympy.assumptions.predicates.matrices.UnitaryPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.unittriangularpredicate attribute)": [[39, "sympy.assumptions.predicates.matrices.UnitTriangularPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.uppertriangularpredicate attribute)": [[39, "sympy.assumptions.predicates.matrices.UpperTriangularPredicate.handler", false]], "handler (sympy.assumptions.predicates.ntheory.compositepredicate attribute)": [[39, "sympy.assumptions.predicates.ntheory.CompositePredicate.handler", false]], "handler (sympy.assumptions.predicates.ntheory.evenpredicate attribute)": [[39, "sympy.assumptions.predicates.ntheory.EvenPredicate.handler", false]], "handler (sympy.assumptions.predicates.ntheory.oddpredicate attribute)": [[39, "sympy.assumptions.predicates.ntheory.OddPredicate.handler", false]], "handler (sympy.assumptions.predicates.ntheory.primepredicate attribute)": [[39, "sympy.assumptions.predicates.ntheory.PrimePredicate.handler", false]], "handler (sympy.assumptions.predicates.order.negativepredicate attribute)": [[39, "sympy.assumptions.predicates.order.NegativePredicate.handler", false]], "handler (sympy.assumptions.predicates.order.nonnegativepredicate attribute)": [[39, "sympy.assumptions.predicates.order.NonNegativePredicate.handler", false]], "handler (sympy.assumptions.predicates.order.nonpositivepredicate attribute)": [[39, "sympy.assumptions.predicates.order.NonPositivePredicate.handler", false]], "handler (sympy.assumptions.predicates.order.nonzeropredicate attribute)": [[39, "sympy.assumptions.predicates.order.NonZeroPredicate.handler", false]], "handler (sympy.assumptions.predicates.order.positivepredicate attribute)": [[39, "sympy.assumptions.predicates.order.PositivePredicate.handler", false]], "handler (sympy.assumptions.predicates.order.zeropredicate attribute)": [[39, "sympy.assumptions.predicates.order.ZeroPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.algebraicpredicate attribute)": [[39, "sympy.assumptions.predicates.sets.AlgebraicPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.antihermitianpredicate attribute)": [[39, "sympy.assumptions.predicates.sets.AntihermitianPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.complexpredicate attribute)": [[39, "sympy.assumptions.predicates.sets.ComplexPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.extendedrealpredicate attribute)": [[39, "sympy.assumptions.predicates.sets.ExtendedRealPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.hermitianpredicate attribute)": [[39, "sympy.assumptions.predicates.sets.HermitianPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.imaginarypredicate attribute)": [[39, "sympy.assumptions.predicates.sets.ImaginaryPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.integerpredicate attribute)": [[39, "sympy.assumptions.predicates.sets.IntegerPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.irrationalpredicate attribute)": [[39, "sympy.assumptions.predicates.sets.IrrationalPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.rationalpredicate attribute)": [[39, "sympy.assumptions.predicates.sets.RationalPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.realpredicate attribute)": [[39, "sympy.assumptions.predicates.sets.RealPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.transcendentalpredicate attribute)": [[39, "sympy.assumptions.predicates.sets.TranscendentalPredicate.handler", false]], "hankel1 (class in sympy.functions.special.bessel)": [[70, "sympy.functions.special.bessel.hankel1", false]], "hankel2 (class in sympy.functions.special.bessel)": [[70, "sympy.functions.special.bessel.hankel2", false]], "hankel_transform() (in module sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.hankel_transform", false]], "hankeltransform (class in sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.HankelTransform", false]], "harmonic (class in sympy.functions.combinatorial.numbers)": [[67, "sympy.functions.combinatorial.numbers.harmonic", false]], "has() (sympy.core.basic.basic method)": [[62, "sympy.core.basic.Basic.has", false]], "has() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.has", false]], "has_assoc_field (sympy.polys.domains.domain.domain attribute)": [[202, "sympy.polys.domains.domain.Domain.has_assoc_Field", false]], "has_assoc_ring (sympy.polys.domains.domain.domain attribute)": [[202, "sympy.polys.domains.domain.Domain.has_assoc_Ring", false]], "has_dups() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.has_dups", false]], "has_empty_sequence (sympy.concrete.expr_with_intlimits.exprwithintlimits property)": [[61, "sympy.concrete.expr_with_intlimits.ExprWithIntLimits.has_empty_sequence", false]], "has_finite_limits (sympy.concrete.expr_with_limits.exprwithlimits property)": [[89, "sympy.concrete.expr_with_limits.ExprWithLimits.has_finite_limits", false]], "has_free() (sympy.core.basic.basic method)": [[62, "sympy.core.basic.Basic.has_free", false]], "has_integer_powers() (sympy.physics.units.dimensions.dimension method)": [[178, "sympy.physics.units.dimensions.Dimension.has_integer_powers", false]], "has_only_gens() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.has_only_gens", false]], "has_q_annihilators (sympy.physics.secondquant.no property)": [[176, "sympy.physics.secondquant.NO.has_q_annihilators", false]], "has_q_creators (sympy.physics.secondquant.no property)": [[176, "sympy.physics.secondquant.NO.has_q_creators", false]], "has_reversed_limits (sympy.concrete.expr_with_limits.exprwithlimits property)": [[89, "sympy.concrete.expr_with_limits.ExprWithLimits.has_reversed_limits", false]], "has_variety() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.has_variety", false]], "has_xfree() (sympy.core.basic.basic method)": [[62, "sympy.core.basic.Basic.has_xfree", false]], "hbar (class in sympy.physics.quantum.constants)": [[158, "sympy.physics.quantum.constants.HBar", false]], "heaviside (class in sympy.functions.special.delta_functions)": [[70, "sympy.functions.special.delta_functions.Heaviside", false]], "height (sympy.categories.diagram_drawing.diagramgrid property)": [[42, "sympy.categories.diagram_drawing.DiagramGrid.height", false]], "height (sympy.physics.optics.gaussopt.geometricray property)": [[145, "sympy.physics.optics.gaussopt.GeometricRay.height", false]], "height() (sympy.polys.agca.ideals.ideal method)": [[198, "sympy.polys.agca.ideals.Ideal.height", false]], "height() (sympy.printing.pretty.stringpict.stringpict method)": [[211, "sympy.printing.pretty.stringpict.stringPict.height", false]], "hermite (class in sympy.functions.special.polynomials)": [[70, "sympy.functions.special.polynomials.hermite", false]], "hermite() (in module sympy.stats)": [[231, "sympy.stats.Hermite", false]], "hermite_normal_form() (in module sympy.matrices.normalforms)": [[99, "sympy.matrices.normalforms.hermite_normal_form", false]], "hermite_normal_form() (in module sympy.polys.matrices.normalforms)": [[200, "sympy.polys.matrices.normalforms.hermite_normal_form", false]], "hermite_poly() (in module sympy.polys.orthopolys)": [[207, "sympy.polys.orthopolys.hermite_poly", false]], "hermite_prob (class in sympy.functions.special.polynomials)": [[70, "sympy.functions.special.polynomials.hermite_prob", false]], "hermite_prob_poly() (in module sympy.polys.orthopolys)": [[207, "sympy.polys.orthopolys.hermite_prob_poly", false]], "hermitian": [[62, "term-hermitian", true]], "hermitianoperator (class in sympy.physics.quantum.operator)": [[165, "sympy.physics.quantum.operator.HermitianOperator", false]], "hermitianpredicate (class in sympy.assumptions.predicates.sets)": [[39, "sympy.assumptions.predicates.sets.HermitianPredicate", false]], "hessian() (in module sympy.matrices.dense)": [[98, "sympy.matrices.dense.hessian", false]], "heurisch() (in module sympy.integrals.heurisch)": [[89, "sympy.integrals.heurisch.heurisch", false]], "heuristicgcdfailed (class in sympy.polys.polyerrors)": [[204, "sympy.polys.polyerrors.HeuristicGCDFailed", false]], "highest_root() (sympy.liealgebras.type_a.typea method)": [[91, "sympy.liealgebras.type_a.TypeA.highest_root", false]], "hilbertspace (class in sympy.physics.quantum.hilbert)": [[162, "sympy.physics.quantum.hilbert.HilbertSpace", false]], "hobj() (in module sympy.printing.pretty.pretty_symbology)": [[211, "sympy.printing.pretty.pretty_symbology.hobj", false]], "holonomicfunction (class in sympy.holonomic.holonomic)": [[85, "sympy.holonomic.holonomic.HolonomicFunction", false]], "holzer() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.holzer", false]], "hom() (sympy.categories.diagram method)": [[42, "sympy.categories.Diagram.hom", false]], "homogeneous_order() (in module sympy.solvers.ode)": [[227, "sympy.solvers.ode.homogeneous_order", false]], "homogeneous_order() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.homogeneous_order", false]], "homogeneous_order() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.homogeneous_order", false]], "homogeneouscoeffbest (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.HomogeneousCoeffBest", false]], "homogeneouscoeffsubsdepdivindep (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.HomogeneousCoeffSubsDepDivIndep", false]], "homogeneouscoeffsubsindepdivdep (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.HomogeneousCoeffSubsIndepDivDep", false]], "homogeneousgeneralquadratic (class in sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.HomogeneousGeneralQuadratic", false]], "homogeneousternaryquadratic (class in sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.HomogeneousTernaryQuadratic", false]], "homogeneousternaryquadraticnormal (class in sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.HomogeneousTernaryQuadraticNormal", false]], "homogenize() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.homogenize", false]], "homogenize() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.homogenize", false]], "homomorphism() (in module sympy.polys.agca.homomorphisms)": [[198, "sympy.polys.agca.homomorphisms.homomorphism", false]], "homomorphismfailed (class in sympy.polys.polyerrors)": [[204, "sympy.polys.polyerrors.HomomorphismFailed", false]], "horner() (in module sympy.polys.polyfuncs)": [[207, "sympy.polys.polyfuncs.horner", false]], "hradius (sympy.geometry.ellipse.ellipse property)": [[72, "sympy.geometry.ellipse.Ellipse.hradius", false]], "hstack() (sympy.matrices.common.matrixcommon class method)": [[93, "sympy.matrices.common.MatrixCommon.hstack", false]], "hstack() (sympy.polys.matrices.ddm.ddm method)": [[200, "sympy.polys.matrices.ddm.DDM.hstack", false]], "hstack() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.hstack", false]], "hstack() (sympy.polys.matrices.sdm.sdm method)": [[200, "sympy.polys.matrices.sdm.SDM.hstack", false]], "hyper (class in sympy.functions.special.hyper)": [[70, "sympy.functions.special.hyper.hyper", false]], "hyper_algorithm() (in module sympy.series.formal)": [[213, "sympy.series.formal.hyper_algorithm", false]], "hyper_re() (in module sympy.series.formal)": [[213, "sympy.series.formal.hyper_re", false]], "hyperbolicfunction (class in sympy.functions.elementary.hyperbolic)": [[68, "sympy.functions.elementary.hyperbolic.HyperbolicFunction", false]], "hyperexpand() (in module sympy.simplify.hyperexpand)": [[223, "sympy.simplify.hyperexpand.hyperexpand", false]], "hyperfocal_distance() (in module sympy.physics.optics.utils)": [[149, "sympy.physics.optics.utils.hyperfocal_distance", false]], "hypergeometric() (in module sympy.stats)": [[231, "sympy.stats.Hypergeometric", false]], "hypersimilar() (in module sympy.simplify.simplify)": [[223, "sympy.simplify.simplify.hypersimilar", false]], "hypersimp() (in module sympy.simplify.simplify)": [[223, "sympy.simplify.simplify.hypersimp", false]], "hypot (class in sympy.codegen.cfunctions)": [[43, "sympy.codegen.cfunctions.hypot", false]], "ibin() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.ibin", false]], "ideal (class in sympy.polys.agca.ideals)": [[198, "sympy.polys.agca.ideals.Ideal", false]], "ideal() (sympy.polys.domains.ring.ring method)": [[202, "sympy.polys.domains.ring.Ring.ideal", false]], "identity (class in sympy.matrices.expressions)": [[95, "sympy.matrices.expressions.Identity", false]], "identity (sympy.combinatorics.perm_groups.permutationgroup property)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.identity", false]], "identity_hom() (sympy.polys.agca.modules.freemodule method)": [[198, "sympy.polys.agca.modules.FreeModule.identity_hom", false]], "identity_hom() (sympy.polys.agca.modules.module method)": [[198, "sympy.polys.agca.modules.Module.identity_hom", false]], "identity_hom() (sympy.polys.agca.modules.quotientmodule method)": [[198, "sympy.polys.agca.modules.QuotientModule.identity_hom", false]], "identity_hom() (sympy.polys.agca.modules.submodule method)": [[198, "sympy.polys.agca.modules.SubModule.identity_hom", false]], "identityfunction (class in sympy.functions.elementary.miscellaneous)": [[68, "sympy.functions.elementary.miscellaneous.IdentityFunction", false]], "identitygate (class in sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.IdentityGate", false]], "identitymorphism (class in sympy.categories)": [[42, "sympy.categories.IdentityMorphism", false]], "identityoperator (class in sympy.physics.quantum.operator)": [[165, "sympy.physics.quantum.operator.IdentityOperator", false]], "idiff() (in module sympy.geometry.util)": [[79, "sympy.geometry.util.idiff", false]], "idx (class in sympy.tensor.indexed)": [[236, "sympy.tensor.indexed.Idx", false]], "ifft() (in module sympy.discrete.transforms)": [[65, "sympy.discrete.transforms.ifft", false]], "ifwht() (in module sympy.discrete.transforms)": [[65, "sympy.discrete.transforms.ifwht", false]], "igcd() (in module sympy.core.numbers)": [[62, "sympy.core.numbers.igcd", false]], "ignore_warnings() (in module sympy.utilities.exceptions)": [[247, "sympy.utilities.exceptions.ignore_warnings", false]], "ilcm() (in module sympy.core.numbers)": [[62, "sympy.core.numbers.ilcm", false]], "ild_moment (sympy.physics.continuum_mechanics.beam.beam property)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.ild_moment", false]], "ild_reactions (sympy.physics.continuum_mechanics.beam.beam property)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.ild_reactions", false]], "ild_shear (sympy.physics.continuum_mechanics.beam.beam property)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.ild_shear", false]], "im (class in sympy.functions.elementary.complexes)": [[68, "sympy.functions.elementary.complexes.im", false]], "image() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[198, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.image", false]], "imageset (class in sympy.sets.fancysets)": [[219, "sympy.sets.fancysets.ImageSet", false]], "imageset() (in module sympy.sets.sets)": [[219, "sympy.sets.sets.imageset", false]], "imaginary": [[62, "term-imaginary", true]], "imaginarypredicate (class in sympy.assumptions.predicates.sets)": [[39, "sympy.assumptions.predicates.sets.ImaginaryPredicate", false]], "imaginaryunit (class in sympy.core.numbers)": [[62, "sympy.core.numbers.ImaginaryUnit", false]], "immutable": [[11, "term-Immutable", true]], "immutabledensematrix (class in sympy.matrices.immutable)": [[96, "sympy.matrices.immutable.ImmutableDenseMatrix", false]], "immutabledensendimarray (class in sympy.tensor.array)": [[232, "sympy.tensor.array.ImmutableDenseNDimArray", false]], "immutablematrix (in module sympy.matrices.immutable)": [[96, "sympy.matrices.immutable.ImmutableMatrix", false]], "immutablesparsematrix (class in sympy.matrices.immutable)": [[100, "sympy.matrices.immutable.ImmutableSparseMatrix", false]], "immutablesparsendimarray (class in sympy.tensor.array)": [[232, "sympy.tensor.array.ImmutableSparseNDimArray", false]], "implemented_function() (in module sympy.utilities.lambdify)": [[250, "sympy.utilities.lambdify.implemented_function", false]], "implicit_application() (in module sympy.parsing.sympy_parser)": [[104, "sympy.parsing.sympy_parser.implicit_application", false]], "implicit_multiplication() (in module sympy.parsing.sympy_parser)": [[104, "sympy.parsing.sympy_parser.implicit_multiplication", false]], "implicit_multiplication_application() (in module sympy.parsing.sympy_parser)": [[104, "sympy.parsing.sympy_parser.implicit_multiplication_application", false]], "implicitregion (class in sympy.vector.implicitregion)": [[256, "sympy.vector.implicitregion.ImplicitRegion", false]], "implicitseries (class in sympy.plotting.plot_implicit)": [[197, "sympy.plotting.plot_implicit.ImplicitSeries", false]], "implieddoloop (class in sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.ImpliedDoLoop", false]], "implies (class in sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.Implies", false]], "impulse_response_numerical_data() (sympy.physics.control.control_plots method)": [[110, "sympy.physics.control.control_plots.impulse_response_numerical_data", false]], "impulse_response_plot() (sympy.physics.control.control_plots method)": [[110, "sympy.physics.control.control_plots.impulse_response_plot", false]], "imul_num() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.imul_num", false]], "in_terms_of_generators() (sympy.polys.agca.modules.submodule method)": [[198, "sympy.polys.agca.modules.SubModule.in_terms_of_generators", false]], "incenter (sympy.geometry.polygon.triangle property)": [[78, "sympy.geometry.polygon.Triangle.incenter", false]], "incircle (sympy.geometry.polygon.regularpolygon property)": [[78, "sympy.geometry.polygon.RegularPolygon.incircle", false]], "incircle (sympy.geometry.polygon.triangle property)": [[78, "sympy.geometry.polygon.Triangle.incircle", false]], "inclusion_hom() (sympy.polys.agca.modules.submodule method)": [[198, "sympy.polys.agca.modules.SubModule.inclusion_hom", false]], "indent_code() (sympy.printing.c.c89codeprinter method)": [[211, "sympy.printing.c.C89CodePrinter.indent_code", false]], "indent_code() (sympy.printing.fortran.fcodeprinter method)": [[211, "sympy.printing.fortran.FCodePrinter.indent_code", false]], "indent_code() (sympy.printing.jscode.javascriptcodeprinter method)": [[211, "sympy.printing.jscode.JavascriptCodePrinter.indent_code", false]], "indent_code() (sympy.printing.julia.juliacodeprinter method)": [[211, "sympy.printing.julia.JuliaCodePrinter.indent_code", false]], "indent_code() (sympy.printing.octave.octavecodeprinter method)": [[211, "sympy.printing.octave.OctaveCodePrinter.indent_code", false]], "indent_code() (sympy.printing.rcode.rcodeprinter method)": [[211, "sympy.printing.rcode.RCodePrinter.indent_code", false]], "indent_code() (sympy.printing.rust.rustcodeprinter method)": [[211, "sympy.printing.rust.RustCodePrinter.indent_code", false]], "index() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.index", false]], "index() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.index", false]], "index() (sympy.concrete.expr_with_intlimits.exprwithintlimits method)": [[61, "sympy.concrete.expr_with_intlimits.ExprWithIntLimits.index", false]], "index() (sympy.core.containers.tuple method)": [[62, "sympy.core.containers.Tuple.index", false]], "index() (sympy.physics.secondquant.fixedbosonicbasis method)": [[176, "sympy.physics.secondquant.FixedBosonicBasis.index", false]], "index() (sympy.physics.secondquant.varbosonicbasis method)": [[176, "sympy.physics.secondquant.VarBosonicBasis.index", false]], "index() (sympy.polys.rings.polyring method)": [[202, "sympy.polys.rings.PolyRing.index", false]], "index_vector() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.index_vector", false]], "indexed (class in sympy.tensor.indexed)": [[236, "sympy.tensor.indexed.Indexed", false]], "indexedbase (class in sympy.tensor.indexed)": [[236, "sympy.tensor.indexed.IndexedBase", false]], "indices (sympy.tensor.indexed.indexed property)": [[236, "sympy.tensor.indexed.Indexed.indices", false]], "indices_contain_equal_information (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[70, "sympy.functions.special.tensor_functions.KroneckerDelta.indices_contain_equal_information", false]], "indices_contain_equal_information (sympy.physics.secondquant.kroneckerdelta property)": [[176, "sympy.physics.secondquant.KroneckerDelta.indices_contain_equal_information", false]], "inertia (sympy.physics.mechanics.body.body property)": [[117, "sympy.physics.mechanics.body.Body.inertia", false]], "inertia (sympy.physics.mechanics.rigidbody.rigidbody property)": [[123, "sympy.physics.mechanics.rigidbody.RigidBody.inertia", false]], "inertia() (in module sympy.physics.mechanics.functions)": [[123, "sympy.physics.mechanics.functions.inertia", false]], "inertia_of_point_mass() (in module sympy.physics.mechanics.functions)": [[123, "sympy.physics.mechanics.functions.inertia_of_point_mass", false]], "inf (sympy.sets.sets.set property)": [[219, "sympy.sets.sets.Set.inf", false]], "infinite": [[62, "term-infinite", true]], "infinite (sympy.series.formal.formalpowerseries property)": [[213, "sympy.series.formal.FormalPowerSeries.infinite", false]], "infinitepredicate (class in sympy.assumptions.predicates.calculus)": [[39, "sympy.assumptions.predicates.calculus.InfinitePredicate", false]], "infinitesimals() (in module sympy.solvers.ode)": [[227, "sympy.solvers.ode.infinitesimals", false]], "infinity (class in sympy.core.numbers)": [[62, "sympy.core.numbers.Infinity", false]], "inhomogeneousgeneralquadratic (class in sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.InhomogeneousGeneralQuadratic", false]], "inhomogeneousternaryquadratic (class in sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.InhomogeneousTernaryQuadratic", false]], "init_ipython_session() (in module sympy.interactive.session)": [[90, "sympy.interactive.session.init_ipython_session", false]], "init_printing() (in module sympy.interactive.printing)": [[90, "sympy.interactive.printing.init_printing", false]], "init_python_session() (in module sympy.interactive.session)": [[90, "sympy.interactive.session.init_python_session", false]], "init_session() (in module sympy.interactive.session)": [[90, "sympy.interactive.session.init_session", false]], "init_vprinting() (in module sympy.physics.vector.printing)": [[191, "sympy.physics.vector.printing.init_vprinting", false]], "initial (sympy.series.sequences.recursiveseq property)": [[217, "sympy.series.sequences.RecursiveSeq.initial", false]], "inject() (sympy.polys.domains.compositedomain.compositedomain method)": [[202, "sympy.polys.domains.compositedomain.CompositeDomain.inject", false]], "inject() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.inject", false]], "inject() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianDomain.inject", false]], "inject() (sympy.polys.domains.simpledomain.simpledomain method)": [[202, "sympy.polys.domains.simpledomain.SimpleDomain.inject", false]], "inject() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.inject", false]], "inject() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.inject", false]], "inner_endomorphism() (sympy.polys.numberfields.modules.endomorphismring method)": [[206, "sympy.polys.numberfields.modules.EndomorphismRing.inner_endomorphism", false]], "innerendomorphism (class in sympy.polys.numberfields.modules)": [[206, "sympy.polys.numberfields.modules.InnerEndomorphism", false]], "innerproduct (class in sympy.physics.quantum.innerproduct)": [[164, "sympy.physics.quantum.innerproduct.InnerProduct", false]], "innerproduct (class in sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.InnerProduct", false]], "inradius (sympy.geometry.polygon.regularpolygon property)": [[78, "sympy.geometry.polygon.RegularPolygon.inradius", false]], "inradius (sympy.geometry.polygon.triangle property)": [[78, "sympy.geometry.polygon.Triangle.inradius", false]], "int_to_integer() (in module sympy.interactive.session)": [[90, "sympy.interactive.session.int_to_Integer", false]], "intbasetype (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.IntBaseType", false]], "intcurve_diffequ() (in module sympy.diffgeom)": [[64, "sympy.diffgeom.intcurve_diffequ", false]], "intcurve_series() (in module sympy.diffgeom)": [[64, "sympy.diffgeom.intcurve_series", false]], "integer": [[62, "term-integer", true]], "integer (class in sympy.core.numbers)": [[62, "sympy.core.numbers.Integer", false]], "integer_log() (in module sympy.core.power)": [[62, "sympy.core.power.integer_log", false]], "integer_nthroot() (in module sympy.core.power)": [[62, "sympy.core.power.integer_nthroot", false]], "integer_to_term() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.integer_to_term", false]], "integerelementspredicate (class in sympy.assumptions.predicates.matrices)": [[39, "sympy.assumptions.predicates.matrices.IntegerElementsPredicate", false]], "integerpartition (class in sympy.combinatorics.partitions)": [[51, "sympy.combinatorics.partitions.IntegerPartition", false]], "integerpredicate (class in sympy.assumptions.predicates.sets)": [[39, "sympy.assumptions.predicates.sets.IntegerPredicate", false]], "integerring (class in sympy.polys.domains)": [[202, "sympy.polys.domains.IntegerRing", false]], "integers (class in sympy.sets.fancysets)": [[219, "sympy.sets.fancysets.Integers", false]], "integral (class in sympy.integrals.integrals)": [[89, "sympy.integrals.integrals.Integral", false]], "integral.is_commutative (in module sympy.integrals.integrals)": [[89, "sympy.integrals.integrals.Integral.is_commutative", false]], "integral_basis() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.integral_basis", false]], "integral_steps() (in module sympy.integrals.manualintegrate)": [[89, "sympy.integrals.manualintegrate.integral_steps", false]], "integraltransform (class in sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.IntegralTransform", false]], "integraltransformerror": [[89, "sympy.integrals.transforms.IntegralTransformError", false]], "integrand() (sympy.functions.special.hyper.meijerg method)": [[70, "sympy.functions.special.hyper.meijerg.integrand", false]], "integrate() (in module sympy.integrals.integrals)": [[89, "sympy.integrals.integrals.integrate", false]], "integrate() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.integrate", false]], "integrate() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.integrate", false]], "integrate() (sympy.core.relational.equality method)": [[62, "sympy.core.relational.Equality.integrate", false]], "integrate() (sympy.holonomic.holonomic.holonomicfunction method)": [[84, "sympy.holonomic.holonomic.HolonomicFunction.integrate", false]], "integrate() (sympy.matrices.matrices.matrixcalculus method)": [[98, "sympy.matrices.matrices.MatrixCalculus.integrate", false]], "integrate() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.integrate", false]], "integrate() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.integrate", false]], "integrate() (sympy.series.formal.formalpowerseries method)": [[213, "sympy.series.formal.FormalPowerSeries.integrate", false]], "integrate_result() (in module sympy.physics.quantum.represent)": [[171, "sympy.physics.quantum.represent.integrate_result", false]], "interactive": [[11, "term-Interactive", true]], "interior (sympy.sets.sets.set property)": [[219, "sympy.sets.sets.Set.interior", false]], "interior_angle (sympy.geometry.polygon.regularpolygon property)": [[78, "sympy.geometry.polygon.RegularPolygon.interior_angle", false]], "internal_forces (sympy.physics.continuum_mechanics.truss.truss property)": [[108, "sympy.physics.continuum_mechanics.truss.Truss.internal_forces", false]], "interpolate() (in module sympy.polys.polyfuncs)": [[207, "sympy.polys.polyfuncs.interpolate", false]], "interpolating_poly() (in module sympy.polys.specialpolys)": [[207, "sympy.polys.specialpolys.interpolating_poly", false]], "interpolating_spline() (in module sympy.functions.special.bsplines)": [[70, "sympy.functions.special.bsplines.interpolating_spline", false]], "intersect() (sympy.polys.agca.ideals.ideal method)": [[198, "sympy.polys.agca.ideals.Ideal.intersect", false]], "intersect() (sympy.polys.agca.modules.submodule method)": [[198, "sympy.polys.agca.modules.SubModule.intersect", false]], "intersect() (sympy.sets.sets.set method)": [[219, "sympy.sets.sets.Set.intersect", false]], "intersecting_product() (in module sympy.discrete.convolutions)": [[65, "sympy.discrete.convolutions.intersecting_product", false]], "intersection (class in sympy.sets.sets)": [[219, "sympy.sets.sets.Intersection", false]], "intersection() (in module sympy.geometry.util)": [[79, "sympy.geometry.util.intersection", false]], "intersection() (sympy.geometry.ellipse.circle method)": [[72, "sympy.geometry.ellipse.Circle.intersection", false]], "intersection() (sympy.geometry.ellipse.ellipse method)": [[72, "sympy.geometry.ellipse.Ellipse.intersection", false]], "intersection() (sympy.geometry.entity.geometryentity method)": [[73, "sympy.geometry.entity.GeometryEntity.intersection", false]], "intersection() (sympy.geometry.line.linearentity method)": [[75, "sympy.geometry.line.LinearEntity.intersection", false]], "intersection() (sympy.geometry.plane.plane method)": [[76, "sympy.geometry.plane.Plane.intersection", false]], "intersection() (sympy.geometry.point.point method)": [[77, "sympy.geometry.point.Point.intersection", false]], "intersection() (sympy.geometry.point.point3d method)": [[77, "sympy.geometry.point.Point3D.intersection", false]], "intersection() (sympy.geometry.polygon.polygon method)": [[78, "sympy.geometry.polygon.Polygon.intersection", false]], "intersection() (sympy.sets.sets.set method)": [[219, "sympy.sets.sets.Set.intersection", false]], "interval (class in sympy.sets.sets)": [[219, "sympy.sets.sets.Interval", false]], "interval (sympy.series.sequences.recursiveseq property)": [[217, "sympy.series.sequences.RecursiveSeq.interval", false]], "interval (sympy.series.sequences.seqbase property)": [[217, "sympy.series.sequences.SeqBase.interval", false]], "intervals() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.intervals", false]], "intervals() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.intervals", false]], "intervals() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.intervals", false]], "intqubit (class in sympy.physics.quantum.qubit)": [[170, "sympy.physics.quantum.qubit.IntQubit", false]], "intqubitbra (class in sympy.physics.quantum.qubit)": [[170, "sympy.physics.quantum.qubit.IntQubitBra", false]], "intt() (in module sympy.discrete.transforms)": [[65, "sympy.discrete.transforms.intt", false]], "inv() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.inv", false]], "inv() (sympy.polys.matrices.ddm.ddm method)": [[200, "sympy.polys.matrices.ddm.DDM.inv", false]], "inv() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.inv", false]], "inv() (sympy.polys.matrices.sdm.sdm method)": [[200, "sympy.polys.matrices.sdm.SDM.inv", false]], "inv_can_transf_matrix (sympy.physics.units.dimensions.dimensionsystem property)": [[178, "sympy.physics.units.dimensions.DimensionSystem.inv_can_transf_matrix", false]], "inv_mod() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.inv_mod", false]], "inverse (class in sympy.matrices.expressions)": [[95, "sympy.matrices.expressions.Inverse", false]], "inverse() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.inverse", false]], "inverse() (sympy.functions.elementary.exponential.log method)": [[68, "sympy.functions.elementary.exponential.log.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.acosh method)": [[68, "sympy.functions.elementary.hyperbolic.acosh.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.acoth method)": [[68, "sympy.functions.elementary.hyperbolic.acoth.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.acsch method)": [[68, "sympy.functions.elementary.hyperbolic.acsch.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.asech method)": [[68, "sympy.functions.elementary.hyperbolic.asech.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.asinh method)": [[68, "sympy.functions.elementary.hyperbolic.asinh.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.atanh method)": [[68, "sympy.functions.elementary.hyperbolic.atanh.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.coth method)": [[68, "sympy.functions.elementary.hyperbolic.coth.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.sinh method)": [[68, "sympy.functions.elementary.hyperbolic.sinh.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.tanh method)": [[68, "sympy.functions.elementary.hyperbolic.tanh.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.acos method)": [[68, "sympy.functions.elementary.trigonometric.acos.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.acot method)": [[68, "sympy.functions.elementary.trigonometric.acot.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.acsc method)": [[68, "sympy.functions.elementary.trigonometric.acsc.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.asec method)": [[68, "sympy.functions.elementary.trigonometric.asec.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.asin method)": [[68, "sympy.functions.elementary.trigonometric.asin.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.atan method)": [[68, "sympy.functions.elementary.trigonometric.atan.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.cot method)": [[68, "sympy.functions.elementary.trigonometric.cot.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.tan method)": [[68, "sympy.functions.elementary.trigonometric.tan.inverse", false]], "inverse() (sympy.functions.special.error_functions.erf method)": [[70, "sympy.functions.special.error_functions.erf.inverse", false]], "inverse() (sympy.functions.special.error_functions.erfc method)": [[70, "sympy.functions.special.error_functions.erfc.inverse", false]], "inverse() (sympy.functions.special.error_functions.erfcinv method)": [[70, "sympy.functions.special.error_functions.erfcinv.inverse", false]], "inverse() (sympy.functions.special.error_functions.erfinv method)": [[70, "sympy.functions.special.error_functions.erfinv.inverse", false]], "inverse() (sympy.polys.agca.extensions.extensionelement method)": [[198, "sympy.polys.agca.extensions.ExtensionElement.inverse", false]], "inverse() (sympy.series.formal.formalpowerseries method)": [[213, "sympy.series.formal.FormalPowerSeries.inverse", false]], "inverse_adj() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.inverse_ADJ", false]], "inverse_block() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.inverse_BLOCK", false]], "inverse_ch() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.inverse_CH", false]], "inverse_cosine_transform() (in module sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.inverse_cosine_transform", false]], "inverse_fourier_transform() (in module sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.inverse_fourier_transform", false]], "inverse_ge() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.inverse_GE", false]], "inverse_hankel_transform() (in module sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.inverse_hankel_transform", false]], "inverse_laplace_transform() (in module sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.inverse_laplace_transform", false]], "inverse_ldl() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.inverse_LDL", false]], "inverse_lu() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.inverse_LU", false]], "inverse_mellin_transform() (in module sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.inverse_mellin_transform", false]], "inverse_mobius_transform() (in module sympy.discrete.transforms)": [[65, "sympy.discrete.transforms.inverse_mobius_transform", false]], "inverse_qr() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.inverse_QR", false]], "inverse_sine_transform() (in module sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.inverse_sine_transform", false]], "inversecosinetransform (class in sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.InverseCosineTransform", false]], "inversefouriertransform (class in sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.InverseFourierTransform", false]], "inversehankeltransform (class in sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.InverseHankelTransform", false]], "inverselaplacetransform (class in sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.InverseLaplaceTransform", false]], "inversemellintransform (class in sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.InverseMellinTransform", false]], "inversesinetransform (class in sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.InverseSineTransform", false]], "inversion_vector() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.inversion_vector", false]], "inversions() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.inversions", false]], "invert() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.invert", false]], "invert() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.invert", false]], "invert() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.invert", false]], "invert() (sympy.polys.domains.ring.ring method)": [[202, "sympy.polys.domains.ring.Ring.invert", false]], "invert() (sympy.polys.polyclasses.dmf method)": [[202, "sympy.polys.polyclasses.DMF.invert", false]], "invert() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.invert", false]], "invert() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.invert", false]], "invert_complex() (in module sympy.solvers.solveset)": [[230, "sympy.solvers.solveset.invert_complex", false]], "invert_real() (in module sympy.solvers.solveset)": [[230, "sympy.solvers.solveset.invert_real", false]], "invertiblepredicate (class in sympy.assumptions.predicates.matrices)": [[39, "sympy.assumptions.predicates.matrices.InvertiblePredicate", false]], "iproduct() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.iproduct", false]], "iqft (class in sympy.physics.quantum.qft)": [[169, "sympy.physics.quantum.qft.IQFT", false]], "irrational": [[62, "term-irrational", true]], "irrationalpredicate (class in sympy.assumptions.predicates.sets)": [[39, "sympy.assumptions.predicates.sets.IrrationalPredicate", false]], "irregular() (sympy.matrices.matrices.matrixbase class method)": [[98, "sympy.matrices.matrices.MatrixBase.irregular", false]], "is_*": [[11, "term-is_", true]], "is_abelian (sympy.combinatorics.perm_groups.permutationgroup property)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.is_abelian", false]], "is_abelian_number() (in module sympy.combinatorics.group_numbers)": [[48, "sympy.combinatorics.group_numbers.is_abelian_number", false]], "is_above_fermi (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[70, "sympy.functions.special.tensor_functions.KroneckerDelta.is_above_fermi", false]], "is_above_fermi (sympy.physics.secondquant.kroneckerdelta property)": [[176, "sympy.physics.secondquant.KroneckerDelta.is_above_fermi", false]], "is_absolutely_convergent() (sympy.concrete.summations.sum method)": [[61, "sympy.concrete.summations.Sum.is_absolutely_convergent", false]], "is_abundant() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.is_abundant", false]], "is_algebraic_expr() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.is_algebraic_expr", false]], "is_aliased (sympy.core.numbers.algebraicnumber property)": [[62, "sympy.core.numbers.AlgebraicNumber.is_aliased", false]], "is_alt_sym() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.is_alt_sym", false]], "is_alternating (sympy.combinatorics.perm_groups.permutationgroup property)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.is_alternating", false]], "is_amicable() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.is_amicable", false]], "is_anf() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.is_anf", false]], "is_anti_symmetric() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.is_anti_symmetric", false]], "is_below_fermi (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[70, "sympy.functions.special.tensor_functions.KroneckerDelta.is_below_fermi", false]], "is_below_fermi (sympy.physics.secondquant.kroneckerdelta property)": [[176, "sympy.physics.secondquant.KroneckerDelta.is_below_fermi", false]], "is_biproper (sympy.physics.control.lti.parallel property)": [[112, "sympy.physics.control.lti.Parallel.is_biproper", false]], "is_biproper (sympy.physics.control.lti.series property)": [[112, "sympy.physics.control.lti.Series.is_biproper", false]], "is_biproper (sympy.physics.control.lti.transferfunction property)": [[112, "sympy.physics.control.lti.TransferFunction.is_biproper", false]], "is_closed (sympy.sets.sets.set property)": [[219, "sympy.sets.sets.Set.is_closed", false]], "is_cnf() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.is_cnf", false]], "is_collinear() (sympy.geometry.point.point method)": [[77, "sympy.geometry.point.Point.is_collinear", false]], "is_commutative (sympy.physics.quantum.state.wavefunction property)": [[174, "sympy.physics.quantum.state.Wavefunction.is_commutative", false]], "is_comparable (sympy.core.basic.basic property)": [[62, "sympy.core.basic.Basic.is_comparable", false]], "is_compat() (sympy.polys.numberfields.modules.moduleelement method)": [[206, "sympy.polys.numberfields.modules.ModuleElement.is_compat", false]], "is_compat_col() (sympy.polys.numberfields.modules.module method)": [[206, "sympy.polys.numberfields.modules.Module.is_compat_col", false]], "is_concyclic() (sympy.geometry.point.point method)": [[77, "sympy.geometry.point.Point.is_concyclic", false]], "is_conservative() (in module sympy.physics.vector.fieldfunctions)": [[187, "sympy.physics.vector.fieldfunctions.is_conservative", false]], "is_conservative() (in module sympy.vector)": [[259, "sympy.vector.is_conservative", false]], "is_consistent (sympy.physics.units.dimensions.dimensionsystem property)": [[178, "sympy.physics.units.dimensions.DimensionSystem.is_consistent", false]], "is_consistent (sympy.physics.units.unitsystem.unitsystem property)": [[184, "sympy.physics.units.unitsystem.UnitSystem.is_consistent", false]], "is_constant() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.is_constant", false]], "is_convergent() (sympy.concrete.products.product method)": [[61, "sympy.concrete.products.Product.is_convergent", false]], "is_convergent() (sympy.concrete.summations.sum method)": [[61, "sympy.concrete.summations.Sum.is_convergent", false]], "is_convex() (in module sympy.calculus.util)": [[41, "sympy.calculus.util.is_convex", false]], "is_convex() (sympy.geometry.polygon.polygon method)": [[78, "sympy.geometry.polygon.Polygon.is_convex", false]], "is_coplanar() (sympy.geometry.plane.plane method)": [[76, "sympy.geometry.plane.Plane.is_coplanar", false]], "is_cyclic (sympy.combinatorics.perm_groups.permutationgroup property)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.is_cyclic", false]], "is_cyclic_number() (in module sympy.combinatorics.group_numbers)": [[48, "sympy.combinatorics.group_numbers.is_cyclic_number", false]], "is_cyclotomic (sympy.polys.polyclasses.dmp property)": [[202, "sympy.polys.polyclasses.DMP.is_cyclotomic", false]], "is_cyclotomic (sympy.polys.polytools.poly property)": [[207, "sympy.polys.polytools.Poly.is_cyclotomic", false]], "is_decreasing() (in module sympy.calculus.singularities)": [[41, "sympy.calculus.singularities.is_decreasing", false]], "is_deficient() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.is_deficient", false]], "is_diagonal() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.is_diagonal", false]], "is_diagonalizable() (sympy.matrices.matrices.matrixeigen method)": [[98, "sympy.matrices.matrices.MatrixEigen.is_diagonalizable", false]], "is_dihedral (sympy.combinatorics.perm_groups.permutationgroup property)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.is_dihedral", false]], "is_dimensionless() (sympy.physics.units.dimensions.dimensionsystem method)": [[178, "sympy.physics.units.dimensions.DimensionSystem.is_dimensionless", false]], "is_disjoint() (sympy.sets.sets.set method)": [[219, "sympy.sets.sets.Set.is_disjoint", false]], "is_dnf() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.is_dnf", false]], "is_echelon (sympy.matrices.matrices.matrixreductions property)": [[98, "sympy.matrices.matrices.MatrixReductions.is_echelon", false]], "is_elementary() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.is_elementary", false]], "is_empty (sympy.combinatorics.permutations.permutation property)": [[54, "sympy.combinatorics.permutations.Permutation.is_Empty", false]], "is_equilateral() (sympy.geometry.polygon.triangle method)": [[78, "sympy.geometry.polygon.Triangle.is_equilateral", false]], "is_euler_pseudoprime() (in module sympy.ntheory.primetest)": [[102, "sympy.ntheory.primetest.is_euler_pseudoprime", false]], "is_even (sympy.combinatorics.permutations.permutation property)": [[54, "sympy.combinatorics.permutations.Permutation.is_even", false]], "is_extra_strong_lucas_prp() (in module sympy.ntheory.primetest)": [[102, "sympy.ntheory.primetest.is_extra_strong_lucas_prp", false]], "is_field (sympy.polys.domains.domain.domain attribute)": [[202, "sympy.polys.domains.domain.Domain.is_Field", false]], "is_full_module() (sympy.polys.agca.modules.submodule method)": [[198, "sympy.polys.agca.modules.SubModule.is_full_module", false]], "is_full_module() (sympy.polys.agca.modules.subquotientmodule method)": [[198, "sympy.polys.agca.modules.SubQuotientModule.is_full_module", false]], "is_gaussian_prime() (in module sympy.ntheory.primetest)": [[102, "sympy.ntheory.primetest.is_gaussian_prime", false]], "is_groebner() (in module sympy.polys.groebnertools)": [[204, "sympy.polys.groebnertools.is_groebner", false]], "is_ground (sympy.polys.polyclasses.anp property)": [[202, "sympy.polys.polyclasses.ANP.is_ground", false]], "is_ground (sympy.polys.polyclasses.dmp property)": [[202, "sympy.polys.polyclasses.DMP.is_ground", false]], "is_ground (sympy.polys.polytools.poly property)": [[207, "sympy.polys.polytools.Poly.is_ground", false]], "is_hermitian (sympy.matrices.common.matrixcommon property)": [[93, "sympy.matrices.common.MatrixCommon.is_hermitian", false]], "is_homogeneous (sympy.polys.polyclasses.dmp property)": [[202, "sympy.polys.polyclasses.DMP.is_homogeneous", false]], "is_homogeneous (sympy.polys.polytools.poly property)": [[207, "sympy.polys.polytools.Poly.is_homogeneous", false]], "is_identity (sympy.combinatorics.permutations.permutation property)": [[54, "sympy.combinatorics.permutations.Permutation.is_Identity", false]], "is_identity (sympy.core.function.lambda property)": [[62, "sympy.core.function.Lambda.is_identity", false]], "is_increasing() (in module sympy.calculus.singularities)": [[41, "sympy.calculus.singularities.is_increasing", false]], "is_indefinite (sympy.matrices.matrices.matrixeigen property)": [[98, "sympy.matrices.matrices.MatrixEigen.is_indefinite", false]], "is_inert (sympy.polys.numberfields.primes.primeideal property)": [[206, "sympy.polys.numberfields.primes.PrimeIdeal.is_inert", false]], "is_injective() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[198, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.is_injective", false]], "is_int() (in module sympy.polys.numberfields.utilities)": [[206, "sympy.polys.numberfields.utilities.is_int", false]], "is_irreducible (sympy.polys.polyclasses.dmp property)": [[202, "sympy.polys.polyclasses.DMP.is_irreducible", false]], "is_irreducible (sympy.polys.polytools.poly property)": [[207, "sympy.polys.polytools.Poly.is_irreducible", false]], "is_isomorphism() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[198, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.is_isomorphism", false]], "is_isosceles() (sympy.geometry.polygon.triangle method)": [[78, "sympy.geometry.polygon.Triangle.is_isosceles", false]], "is_iterable (sympy.sets.sets.productset property)": [[219, "sympy.sets.sets.ProductSet.is_iterable", false]], "is_left_unbounded (sympy.sets.sets.interval property)": [[219, "sympy.sets.sets.Interval.is_left_unbounded", false]], "is_linear (sympy.polys.polyclasses.dmp property)": [[202, "sympy.polys.polyclasses.DMP.is_linear", false]], "is_linear (sympy.polys.polytools.poly property)": [[207, "sympy.polys.polytools.Poly.is_linear", false]], "is_lower (sympy.matrices.common.matrixcommon property)": [[93, "sympy.matrices.common.MatrixCommon.is_lower", false]], "is_lower (sympy.polys.matrices.domainmatrix.domainmatrix property)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.is_lower", false]], "is_lower() (sympy.polys.matrices.ddm.ddm method)": [[200, "sympy.polys.matrices.ddm.DDM.is_lower", false]], "is_lower() (sympy.polys.matrices.sdm.sdm method)": [[200, "sympy.polys.matrices.sdm.SDM.is_lower", false]], "is_lower_hessenberg (sympy.matrices.common.matrixcommon property)": [[93, "sympy.matrices.common.MatrixCommon.is_lower_hessenberg", false]], "is_lucas_prp() (in module sympy.ntheory.primetest)": [[102, "sympy.ntheory.primetest.is_lucas_prp", false]], "is_maximal() (sympy.polys.agca.ideals.ideal method)": [[198, "sympy.polys.agca.ideals.Ideal.is_maximal", false]], "is_meromorphic() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.is_meromorphic", false]], "is_mersenne_prime() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.is_mersenne_prime", false]], "is_minimal() (in module sympy.polys.groebnertools)": [[204, "sympy.polys.groebnertools.is_minimal", false]], "is_monic (sympy.polys.polyclasses.dmp property)": [[202, "sympy.polys.polyclasses.DMP.is_monic", false]], "is_monic (sympy.polys.polytools.poly property)": [[207, "sympy.polys.polytools.Poly.is_monic", false]], "is_monomial (sympy.polys.polyclasses.dmp property)": [[202, "sympy.polys.polyclasses.DMP.is_monomial", false]], "is_monomial (sympy.polys.polytools.poly property)": [[207, "sympy.polys.polytools.Poly.is_monomial", false]], "is_monotonic() (in module sympy.calculus.singularities)": [[41, "sympy.calculus.singularities.is_monotonic", false]], "is_multivariate (sympy.polys.polytools.poly property)": [[207, "sympy.polys.polytools.Poly.is_multivariate", false]], "is_negative() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.is_negative", false]], "is_negative() (sympy.polys.domains.complexfield method)": [[202, "sympy.polys.domains.ComplexField.is_negative", false]], "is_negative() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.is_negative", false]], "is_negative() (sympy.polys.domains.expressiondomain method)": [[202, "sympy.polys.domains.ExpressionDomain.is_negative", false]], "is_negative() (sympy.polys.domains.fractionfield method)": [[202, "sympy.polys.domains.FractionField.is_negative", false]], "is_negative() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianDomain.is_negative", false]], "is_negative() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.is_negative", false]], "is_negative_definite (sympy.matrices.matrices.matrixeigen property)": [[98, "sympy.matrices.matrices.MatrixEigen.is_negative_definite", false]], "is_negative_semidefinite (sympy.matrices.matrices.matrixeigen property)": [[98, "sympy.matrices.matrices.MatrixEigen.is_negative_semidefinite", false]], "is_nilpotent (sympy.combinatorics.perm_groups.permutationgroup property)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.is_nilpotent", false]], "is_nilpotent() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.is_nilpotent", false]], "is_nilpotent_number() (in module sympy.combinatorics.group_numbers)": [[48, "sympy.combinatorics.group_numbers.is_nilpotent_number", false]], "is_nnf() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.is_nnf", false]], "is_nonnegative() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.complexfield method)": [[202, "sympy.polys.domains.ComplexField.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.expressiondomain method)": [[202, "sympy.polys.domains.ExpressionDomain.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.fractionfield method)": [[202, "sympy.polys.domains.FractionField.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianDomain.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.is_nonnegative", false]], "is_nonpositive() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.complexfield method)": [[202, "sympy.polys.domains.ComplexField.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.expressiondomain method)": [[202, "sympy.polys.domains.ExpressionDomain.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.fractionfield method)": [[202, "sympy.polys.domains.FractionField.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianDomain.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.is_nonpositive", false]], "is_nonzero (sympy.geometry.point.point property)": [[77, "sympy.geometry.point.Point.is_nonzero", false]], "is_normal() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.is_normal", false]], "is_normalized (sympy.physics.quantum.state.wavefunction property)": [[174, "sympy.physics.quantum.state.Wavefunction.is_normalized", false]], "is_nthpow_residue() (in module sympy.ntheory.residue_ntheory)": [[102, "sympy.ntheory.residue_ntheory.is_nthpow_residue", false]], "is_number (sympy.concrete.expr_with_limits.exprwithlimits property)": [[89, "sympy.concrete.expr_with_limits.ExprWithLimits.is_number", false]], "is_number (sympy.core.expr.expr property)": [[62, "sympy.core.expr.Expr.is_number", false]], "is_number (sympy.functions.special.hyper.meijerg property)": [[70, "sympy.functions.special.hyper.meijerg.is_number", false]], "is_odd (sympy.combinatorics.permutations.permutation property)": [[54, "sympy.combinatorics.permutations.Permutation.is_odd", false]], "is_one (sympy.polys.polyclasses.anp property)": [[202, "sympy.polys.polyclasses.ANP.is_one", false]], "is_one (sympy.polys.polyclasses.dmf property)": [[202, "sympy.polys.polyclasses.DMF.is_one", false]], "is_one (sympy.polys.polyclasses.dmp property)": [[202, "sympy.polys.polyclasses.DMP.is_one", false]], "is_one (sympy.polys.polytools.poly property)": [[207, "sympy.polys.polytools.Poly.is_one", false]], "is_one() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.is_one", false]], "is_only_above_fermi (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[70, "sympy.functions.special.tensor_functions.KroneckerDelta.is_only_above_fermi", false]], "is_only_above_fermi (sympy.physics.secondquant.kroneckerdelta property)": [[176, "sympy.physics.secondquant.KroneckerDelta.is_only_above_fermi", false]], "is_only_below_fermi (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[70, "sympy.functions.special.tensor_functions.KroneckerDelta.is_only_below_fermi", false]], "is_only_below_fermi (sympy.physics.secondquant.kroneckerdelta property)": [[176, "sympy.physics.secondquant.KroneckerDelta.is_only_below_fermi", false]], "is_only_q_annihilator (sympy.physics.secondquant.annihilatefermion property)": [[176, "sympy.physics.secondquant.AnnihilateFermion.is_only_q_annihilator", false]], "is_only_q_annihilator (sympy.physics.secondquant.createfermion property)": [[176, "sympy.physics.secondquant.CreateFermion.is_only_q_annihilator", false]], "is_only_q_creator (sympy.physics.secondquant.annihilatefermion property)": [[176, "sympy.physics.secondquant.AnnihilateFermion.is_only_q_creator", false]], "is_only_q_creator (sympy.physics.secondquant.createfermion property)": [[176, "sympy.physics.secondquant.CreateFermion.is_only_q_creator", false]], "is_open (sympy.sets.sets.set property)": [[219, "sympy.sets.sets.Set.is_open", false]], "is_palindromic() (in module sympy.ntheory.digits)": [[102, "sympy.ntheory.digits.is_palindromic", false]], "is_palindromic() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.is_palindromic", false]], "is_parallel() (sympy.geometry.line.linearentity method)": [[75, "sympy.geometry.line.LinearEntity.is_parallel", false]], "is_parallel() (sympy.geometry.plane.plane method)": [[76, "sympy.geometry.plane.Plane.is_parallel", false]], "is_perfect (sympy.combinatorics.perm_groups.permutationgroup property)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.is_perfect", false]], "is_perfect() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.is_perfect", false]], "is_perpendicular() (sympy.geometry.line.linearentity method)": [[75, "sympy.geometry.line.LinearEntity.is_perpendicular", false]], "is_perpendicular() (sympy.geometry.plane.plane method)": [[76, "sympy.geometry.plane.Plane.is_perpendicular", false]], "is_pid (sympy.polys.domains.domain.domain attribute)": [[202, "sympy.polys.domains.domain.Domain.is_PID", false]], "is_polycyclic (sympy.combinatorics.perm_groups.permutationgroup property)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.is_polycyclic", false]], "is_polynomial() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.is_polynomial", false]], "is_positive() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.is_positive", false]], "is_positive() (sympy.polys.domains.complexfield method)": [[202, "sympy.polys.domains.ComplexField.is_positive", false]], "is_positive() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.is_positive", false]], "is_positive() (sympy.polys.domains.expressiondomain method)": [[202, "sympy.polys.domains.ExpressionDomain.is_positive", false]], "is_positive() (sympy.polys.domains.fractionfield method)": [[202, "sympy.polys.domains.FractionField.is_positive", false]], "is_positive() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianDomain.is_positive", false]], "is_positive() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.is_positive", false]], "is_positive_definite (sympy.matrices.matrices.matrixeigen property)": [[98, "sympy.matrices.matrices.MatrixEigen.is_positive_definite", false]], "is_positive_semidefinite (sympy.matrices.matrices.matrixeigen property)": [[98, "sympy.matrices.matrices.MatrixEigen.is_positive_semidefinite", false]], "is_prefixed (sympy.physics.units.quantities.quantity property)": [[183, "sympy.physics.units.quantities.Quantity.is_prefixed", false]], "is_primary() (sympy.polys.agca.ideals.ideal method)": [[198, "sympy.polys.agca.ideals.Ideal.is_primary", false]], "is_prime() (sympy.polys.agca.ideals.ideal method)": [[198, "sympy.polys.agca.ideals.Ideal.is_prime", false]], "is_primitive (sympy.polys.polyclasses.dmp property)": [[202, "sympy.polys.polyclasses.DMP.is_primitive", false]], "is_primitive (sympy.polys.polytools.poly property)": [[207, "sympy.polys.polytools.Poly.is_primitive", false]], "is_primitive() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.is_primitive", false]], "is_primitive_element (sympy.core.numbers.algebraicnumber property)": [[62, "sympy.core.numbers.AlgebraicNumber.is_primitive_element", false]], "is_primitive_root() (in module sympy.ntheory.residue_ntheory)": [[102, "sympy.ntheory.residue_ntheory.is_primitive_root", false]], "is_principal() (sympy.polys.agca.ideals.ideal method)": [[198, "sympy.polys.agca.ideals.Ideal.is_principal", false]], "is_proper (sympy.physics.control.lti.parallel property)": [[112, "sympy.physics.control.lti.Parallel.is_proper", false]], "is_proper (sympy.physics.control.lti.series property)": [[112, "sympy.physics.control.lti.Series.is_proper", false]], "is_proper (sympy.physics.control.lti.transferfunction property)": [[112, "sympy.physics.control.lti.TransferFunction.is_proper", false]], "is_proper_subset() (sympy.sets.sets.set method)": [[219, "sympy.sets.sets.Set.is_proper_subset", false]], "is_proper_superset() (sympy.sets.sets.set method)": [[219, "sympy.sets.sets.Set.is_proper_superset", false]], "is_pure() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.is_pure", false]], "is_q_annihilator (sympy.physics.secondquant.annihilatefermion property)": [[176, "sympy.physics.secondquant.AnnihilateFermion.is_q_annihilator", false]], "is_q_annihilator (sympy.physics.secondquant.createfermion property)": [[176, "sympy.physics.secondquant.CreateFermion.is_q_annihilator", false]], "is_q_creator (sympy.physics.secondquant.annihilatefermion property)": [[176, "sympy.physics.secondquant.AnnihilateFermion.is_q_creator", false]], "is_q_creator (sympy.physics.secondquant.createfermion property)": [[176, "sympy.physics.secondquant.CreateFermion.is_q_creator", false]], "is_quad_residue() (in module sympy.ntheory.residue_ntheory)": [[102, "sympy.ntheory.residue_ntheory.is_quad_residue", false]], "is_quadratic (sympy.polys.polyclasses.dmp property)": [[202, "sympy.polys.polyclasses.DMP.is_quadratic", false]], "is_quadratic (sympy.polys.polytools.poly property)": [[207, "sympy.polys.polytools.Poly.is_quadratic", false]], "is_radical() (sympy.polys.agca.ideals.ideal method)": [[198, "sympy.polys.agca.ideals.Ideal.is_radical", false]], "is_rat() (in module sympy.polys.numberfields.utilities)": [[206, "sympy.polys.numberfields.utilities.is_rat", false]], "is_rational (sympy.polys.numberfields.modules.powerbasiselement property)": [[206, "sympy.polys.numberfields.modules.PowerBasisElement.is_rational", false]], "is_rational_function() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.is_rational_function", false]], "is_reduced() (in module sympy.polys.groebnertools)": [[204, "sympy.polys.groebnertools.is_reduced", false]], "is_right() (sympy.geometry.polygon.triangle method)": [[78, "sympy.geometry.polygon.Triangle.is_right", false]], "is_right_unbounded (sympy.sets.sets.interval property)": [[219, "sympy.sets.sets.Interval.is_right_unbounded", false]], "is_ring (sympy.polys.domains.domain.domain attribute)": [[202, "sympy.polys.domains.domain.Domain.is_Ring", false]], "is_scalar_multiple() (sympy.geometry.point.point method)": [[77, "sympy.geometry.point.Point.is_scalar_multiple", false]], "is_scalene() (sympy.geometry.polygon.triangle method)": [[78, "sympy.geometry.polygon.Triangle.is_scalene", false]], "is_sequence() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.is_sequence", false]], "is_similar() (sympy.geometry.entity.geometryentity method)": [[73, "sympy.geometry.entity.GeometryEntity.is_similar", false]], "is_similar() (sympy.geometry.line.linearentity method)": [[75, "sympy.geometry.line.LinearEntity.is_similar", false]], "is_similar() (sympy.geometry.polygon.triangle method)": [[78, "sympy.geometry.polygon.Triangle.is_similar", false]], "is_simple() (sympy.functions.special.delta_functions.diracdelta method)": [[70, "sympy.functions.special.delta_functions.DiracDelta.is_simple", false]], "is_singleton (sympy.combinatorics.permutations.permutation property)": [[54, "sympy.combinatorics.permutations.Permutation.is_Singleton", false]], "is_singular() (sympy.core.function.function class method)": [[62, "sympy.core.function.Function.is_singular", false]], "is_singular() (sympy.holonomic.holonomic.differentialoperator method)": [[85, "sympy.holonomic.holonomic.DifferentialOperator.is_singular", false]], "is_solenoidal() (in module sympy.physics.vector.fieldfunctions)": [[187, "sympy.physics.vector.fieldfunctions.is_solenoidal", false]], "is_solenoidal() (in module sympy.vector)": [[259, "sympy.vector.is_solenoidal", false]], "is_solvable (sympy.combinatorics.perm_groups.permutationgroup property)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.is_solvable", false]], "is_sqf (sympy.polys.polyclasses.dmp property)": [[202, "sympy.polys.polyclasses.DMP.is_sqf", false]], "is_sqf (sympy.polys.polytools.poly property)": [[207, "sympy.polys.polytools.Poly.is_sqf", false]], "is_square (sympy.matrices.common.matrixcommon property)": [[93, "sympy.matrices.common.MatrixCommon.is_square", false]], "is_square() (in module sympy.ntheory.primetest)": [[102, "sympy.ntheory.primetest.is_square", false]], "is_stable() (sympy.physics.control.lti.transferfunction method)": [[112, "sympy.physics.control.lti.TransferFunction.is_stable", false]], "is_strictly_decreasing() (in module sympy.calculus.singularities)": [[41, "sympy.calculus.singularities.is_strictly_decreasing", false]], "is_strictly_increasing() (in module sympy.calculus.singularities)": [[41, "sympy.calculus.singularities.is_strictly_increasing", false]], "is_strictly_proper (sympy.physics.control.lti.parallel property)": [[112, "sympy.physics.control.lti.Parallel.is_strictly_proper", false]], "is_strictly_proper (sympy.physics.control.lti.series property)": [[112, "sympy.physics.control.lti.Series.is_strictly_proper", false]], "is_strictly_proper (sympy.physics.control.lti.transferfunction property)": [[112, "sympy.physics.control.lti.TransferFunction.is_strictly_proper", false]], "is_strong_lucas_prp() (in module sympy.ntheory.primetest)": [[102, "sympy.ntheory.primetest.is_strong_lucas_prp", false]], "is_strongly_diagonally_dominant (sympy.matrices.common.matrixcommon property)": [[93, "sympy.matrices.common.MatrixCommon.is_strongly_diagonally_dominant", false]], "is_subdiagram() (sympy.categories.diagram method)": [[42, "sympy.categories.Diagram.is_subdiagram", false]], "is_subgroup() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.is_subgroup", false]], "is_submodule() (sympy.polys.agca.modules.freemodule method)": [[198, "sympy.polys.agca.modules.FreeModule.is_submodule", false]], "is_submodule() (sympy.polys.agca.modules.module method)": [[198, "sympy.polys.agca.modules.Module.is_submodule", false]], "is_submodule() (sympy.polys.agca.modules.quotientmodule method)": [[198, "sympy.polys.agca.modules.QuotientModule.is_submodule", false]], "is_submodule() (sympy.polys.agca.modules.submodule method)": [[198, "sympy.polys.agca.modules.SubModule.is_submodule", false]], "is_subset() (sympy.sets.sets.set method)": [[219, "sympy.sets.sets.Set.is_subset", false]], "is_superset() (sympy.sets.sets.set method)": [[219, "sympy.sets.sets.Set.is_superset", false]], "is_surjective() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[198, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.is_surjective", false]], "is_symbolic() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.is_symbolic", false]], "is_symmetric (sympy.combinatorics.perm_groups.permutationgroup property)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.is_symmetric", false]], "is_symmetric() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.is_symmetric", false]], "is_tangent() (sympy.geometry.ellipse.ellipse method)": [[72, "sympy.geometry.ellipse.Ellipse.is_tangent", false]], "is_transitive() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.is_transitive", false]], "is_trivial (sympy.combinatorics.perm_groups.permutationgroup property)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.is_trivial", false]], "is_unit() (sympy.polys.domains.field.field method)": [[202, "sympy.polys.domains.field.Field.is_unit", false]], "is_unit() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.is_unit", false]], "is_univariate (sympy.polys.polytools.poly property)": [[207, "sympy.polys.polytools.Poly.is_univariate", false]], "is_upper (sympy.matrices.common.matrixcommon property)": [[93, "sympy.matrices.common.MatrixCommon.is_upper", false]], "is_upper (sympy.polys.matrices.domainmatrix.domainmatrix property)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.is_upper", false]], "is_upper() (sympy.polys.matrices.ddm.ddm method)": [[200, "sympy.polys.matrices.ddm.DDM.is_upper", false]], "is_upper() (sympy.polys.matrices.sdm.sdm method)": [[200, "sympy.polys.matrices.sdm.SDM.is_upper", false]], "is_upper_hessenberg (sympy.matrices.common.matrixcommon property)": [[93, "sympy.matrices.common.MatrixCommon.is_upper_hessenberg", false]], "is_weakly_diagonally_dominant (sympy.matrices.common.matrixcommon property)": [[93, "sympy.matrices.common.MatrixCommon.is_weakly_diagonally_dominant", false]], "is_whole_ring() (sympy.polys.agca.ideals.ideal method)": [[198, "sympy.polys.agca.ideals.Ideal.is_whole_ring", false]], "is_zero (sympy.geometry.point.point property)": [[77, "sympy.geometry.point.Point.is_zero", false]], "is_zero (sympy.polys.polyclasses.anp property)": [[202, "sympy.polys.polyclasses.ANP.is_zero", false]], "is_zero (sympy.polys.polyclasses.dmf property)": [[202, "sympy.polys.polyclasses.DMF.is_zero", false]], "is_zero (sympy.polys.polyclasses.dmp property)": [[202, "sympy.polys.polyclasses.DMP.is_zero", false]], "is_zero (sympy.polys.polytools.poly property)": [[207, "sympy.polys.polytools.Poly.is_zero", false]], "is_zero() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[198, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.is_zero", false]], "is_zero() (sympy.polys.agca.ideals.ideal method)": [[198, "sympy.polys.agca.ideals.Ideal.is_zero", false]], "is_zero() (sympy.polys.agca.modules.freemodule method)": [[198, "sympy.polys.agca.modules.FreeModule.is_zero", false]], "is_zero() (sympy.polys.agca.modules.module method)": [[198, "sympy.polys.agca.modules.Module.is_zero", false]], "is_zero() (sympy.polys.agca.modules.quotientmodule method)": [[198, "sympy.polys.agca.modules.QuotientModule.is_zero", false]], "is_zero() (sympy.polys.agca.modules.submodule method)": [[198, "sympy.polys.agca.modules.SubModule.is_zero", false]], "is_zero() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.is_zero", false]], "is_zero_dimensional (sympy.polys.polytools.groebnerbasis property)": [[207, "sympy.polys.polytools.GroebnerBasis.is_zero_dimensional", false]], "is_zero_dimensional() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.is_zero_dimensional", false]], "is_zero_matrix (sympy.matrices.common.matrixcommon property)": [[93, "sympy.matrices.common.MatrixCommon.is_zero_matrix", false]], "is_zero_matrix() (sympy.polys.matrices.ddm.ddm method)": [[200, "sympy.polys.matrices.ddm.DDM.is_zero_matrix", false]], "is_zero_matrix() (sympy.polys.matrices.sdm.sdm method)": [[200, "sympy.polys.matrices.sdm.SDM.is_zero_matrix", false]], "is_zero_quaternion() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.is_zero_quaternion", false]], "isdisjoint() (sympy.sets.sets.set method)": [[219, "sympy.sets.sets.Set.isdisjoint", false]], "isign (class in sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.isign", false]], "isolate() (in module sympy.polys.numberfields.utilities)": [[206, "sympy.polys.numberfields.utilities.isolate", false]], "isomorphismfailed (class in sympy.polys.polyerrors)": [[204, "sympy.polys.polyerrors.IsomorphismFailed", false]], "isprime() (in module sympy.ntheory.primetest)": [[102, "sympy.ntheory.primetest.isprime", false]], "issubset() (sympy.sets.sets.set method)": [[219, "sympy.sets.sets.Set.issubset", false]], "issuperset() (sympy.sets.sets.set method)": [[219, "sympy.sets.sets.Set.issuperset", false]], "istruepredicate (class in sympy.assumptions.predicates.common)": [[39, "sympy.assumptions.predicates.common.IsTruePredicate", false]], "isympy": [[11, "term-isympy", true]], "ite (class in sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.ITE", false]], "items() (sympy.core.containers.dict method)": [[62, "sympy.core.containers.Dict.items", false]], "iter_q_annihilators() (sympy.physics.secondquant.no method)": [[176, "sympy.physics.secondquant.NO.iter_q_annihilators", false]], "iter_q_creators() (sympy.physics.secondquant.no method)": [[176, "sympy.physics.secondquant.NO.iter_q_creators", false]], "iterable() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.iterable", false]], "iterate_binary() (sympy.combinatorics.subsets.subset method)": [[57, "sympy.combinatorics.subsets.Subset.iterate_binary", false]], "iterate_graycode() (sympy.combinatorics.subsets.subset method)": [[57, "sympy.combinatorics.subsets.Subset.iterate_graycode", false]], "itercoeffs() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.itercoeffs", false]], "itermonomials() (in module sympy.polys.monomials)": [[207, "sympy.polys.monomials.itermonomials", false]], "itermonoms() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.itermonoms", false]], "iterterms() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.iterterms", false]], "j2op (class in sympy.physics.quantum.spin)": [[173, "sympy.physics.quantum.spin.J2Op", false]], "jacobi (class in sympy.functions.special.polynomials)": [[70, "sympy.functions.special.polynomials.jacobi", false]], "jacobi_normalized() (in module sympy.functions.special.polynomials)": [[70, "sympy.functions.special.polynomials.jacobi_normalized", false]], "jacobi_poly() (in module sympy.polys.orthopolys)": [[207, "sympy.polys.orthopolys.jacobi_poly", false]], "jacobi_symbol() (in module sympy.ntheory.residue_ntheory)": [[102, "sympy.ntheory.residue_ntheory.jacobi_symbol", false]], "jacobian() (sympy.diffgeom.coordsystem method)": [[64, "sympy.diffgeom.CoordSystem.jacobian", false]], "jacobian() (sympy.matrices.matrices.matrixcalculus method)": [[98, "sympy.matrices.matrices.MatrixCalculus.jacobian", false]], "jacobian_determinant() (sympy.diffgeom.coordsystem method)": [[64, "sympy.diffgeom.CoordSystem.jacobian_determinant", false]], "jacobian_matrix() (sympy.diffgeom.coordsystem method)": [[64, "sympy.diffgeom.CoordSystem.jacobian_matrix", false]], "javascriptcodeprinter (class in sympy.printing.jscode)": [[211, "sympy.printing.jscode.JavascriptCodePrinter", false]], "jn (class in sympy.functions.special.bessel)": [[70, "sympy.functions.special.bessel.jn", false]], "jn_zeros() (in module sympy.functions.special.bessel)": [[70, "sympy.functions.special.bessel.jn_zeros", false]], "join() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.join", false]], "joint (class in sympy.physics.mechanics.joint)": [[120, "sympy.physics.mechanics.joint.Joint", false]], "joint_axis (sympy.physics.mechanics.joint.cylindricaljoint property)": [[120, "sympy.physics.mechanics.joint.CylindricalJoint.joint_axis", false]], "joint_axis (sympy.physics.mechanics.joint.pinjoint property)": [[120, "sympy.physics.mechanics.joint.PinJoint.joint_axis", false]], "joint_axis (sympy.physics.mechanics.joint.prismaticjoint property)": [[120, "sympy.physics.mechanics.joint.PrismaticJoint.joint_axis", false]], "jointrv() (in module sympy.stats)": [[231, "sympy.stats.JointRV", false]], "jointsmethod (class in sympy.physics.mechanics.jointsmethod)": [[120, "sympy.physics.mechanics.jointsmethod.JointsMethod", false]], "jones_2_stokes() (in module sympy.physics.optics.polarization)": [[148, "sympy.physics.optics.polarization.jones_2_stokes", false]], "jones_vector() (in module sympy.physics.optics.polarization)": [[148, "sympy.physics.optics.polarization.jones_vector", false]], "jordan_block() (sympy.matrices.common.matrixcommon class method)": [[93, "sympy.matrices.common.MatrixCommon.jordan_block", false]], "jordan_cell() (in module sympy.matrices.dense)": [[98, "sympy.matrices.dense.jordan_cell", false]], "jordan_form() (sympy.matrices.matrices.matrixeigen method)": [[98, "sympy.matrices.matrices.MatrixEigen.jordan_form", false]], "josephus() (sympy.combinatorics.permutations.permutation class method)": [[54, "sympy.combinatorics.permutations.Permutation.josephus", false]], "jscode() (in module sympy.printing.jscode)": [[211, "sympy.printing.jscode.jscode", false]], "julia_code() (in module sympy.printing.julia)": [[211, "sympy.printing.julia.julia_code", false]], "juliacodegen (class in sympy.utilities.codegen)": [[244, "sympy.utilities.codegen.JuliaCodeGen", false]], "juliacodeprinter (class in sympy.printing.julia)": [[211, "sympy.printing.julia.JuliaCodePrinter", false]], "jxbra (class in sympy.physics.quantum.spin)": [[173, "sympy.physics.quantum.spin.JxBra", false]], "jxbracoupled (class in sympy.physics.quantum.spin)": [[173, "sympy.physics.quantum.spin.JxBraCoupled", false]], "jxket (class in sympy.physics.quantum.spin)": [[173, "sympy.physics.quantum.spin.JxKet", false]], "jxketcoupled (class in sympy.physics.quantum.spin)": [[173, "sympy.physics.quantum.spin.JxKetCoupled", false]], "jybra (class in sympy.physics.quantum.spin)": [[173, "sympy.physics.quantum.spin.JyBra", false]], "jybracoupled (class in sympy.physics.quantum.spin)": [[173, "sympy.physics.quantum.spin.JyBraCoupled", false]], "jyket (class in sympy.physics.quantum.spin)": [[173, "sympy.physics.quantum.spin.JyKet", false]], "jyketcoupled (class in sympy.physics.quantum.spin)": [[173, "sympy.physics.quantum.spin.JyKetCoupled", false]], "jzbra (class in sympy.physics.quantum.spin)": [[173, "sympy.physics.quantum.spin.JzBra", false]], "jzbracoupled (class in sympy.physics.quantum.spin)": [[173, "sympy.physics.quantum.spin.JzBraCoupled", false]], "jzket (class in sympy.physics.quantum.spin)": [[173, "sympy.physics.quantum.spin.JzKet", false]], "jzketcoupled (class in sympy.physics.quantum.spin)": [[173, "sympy.physics.quantum.spin.JzKetCoupled", false]], "jzop (class in sympy.physics.quantum.spin)": [[173, "sympy.physics.quantum.spin.JzOp", false]], "kahane_simplify() (in module sympy.physics.hep.gamma_matrices)": [[113, "sympy.physics.hep.gamma_matrices.kahane_simplify", false]], "kanes_equations() (sympy.physics.mechanics.kane.kanesmethod method)": [[121, "sympy.physics.mechanics.kane.KanesMethod.kanes_equations", false]], "kanesmethod (class in sympy.physics.mechanics.kane)": [[121, "sympy.physics.mechanics.kane.KanesMethod", false]], "kbins() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.kbins", false]], "kdes (sympy.physics.mechanics.joint.joint property)": [[120, "sympy.physics.mechanics.joint.Joint.kdes", false]], "kdes (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[120, "sympy.physics.mechanics.jointsmethod.JointsMethod.kdes", false]], "kernel() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[198, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.kernel", false]], "kernel() (sympy.polys.numberfields.modules.modulehomomorphism method)": [[206, "sympy.polys.numberfields.modules.ModuleHomomorphism.kernel", false]], "ket (class in sympy.physics.quantum.state)": [[174, "sympy.physics.quantum.state.Ket", false]], "ket (sympy.physics.quantum.operator.outerproduct property)": [[165, "sympy.physics.quantum.operator.OuterProduct.ket", false]], "ket (sympy.physics.secondquant.innerproduct property)": [[176, "sympy.physics.secondquant.InnerProduct.ket", false]], "ketbase (class in sympy.physics.quantum.state)": [[174, "sympy.physics.quantum.state.KetBase", false]], "key2bounds() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.key2bounds", false]], "key2ij() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.key2ij", false]], "keys() (sympy.core.containers.dict method)": [[62, "sympy.core.containers.Dict.keys", false]], "kid_rsa_private_key() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.kid_rsa_private_key", false]], "kid_rsa_public_key() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.kid_rsa_public_key", false]], "killable_index (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[70, "sympy.functions.special.tensor_functions.KroneckerDelta.killable_index", false]], "killable_index (sympy.physics.secondquant.kroneckerdelta property)": [[176, "sympy.physics.secondquant.KroneckerDelta.killable_index", false]], "kin_explicit_rhs (sympy.physics.mechanics.system.symbolicsystem property)": [[125, "sympy.physics.mechanics.system.SymbolicSystem.kin_explicit_rhs", false]], "kind": [[11, "term-Kind", true]], "kind (class in sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.kind", false]], "kind (class in sympy.core.kind)": [[62, "sympy.core.kind.Kind", false]], "kind (sympy.core.containers.tuple property)": [[62, "sympy.core.containers.Tuple.kind", false]], "kind (sympy.sets.sets.set property)": [[219, "sympy.sets.sets.Set.kind", false]], "kindiffdict() (sympy.physics.mechanics.kane.kanesmethod method)": [[121, "sympy.physics.mechanics.kane.KanesMethod.kindiffdict", false]], "kinematic_equations() (in module sympy.physics.vector.functions)": [[190, "sympy.physics.vector.functions.kinematic_equations", false]], "kinetic_energy() (in module sympy.physics.mechanics.functions)": [[123, "sympy.physics.mechanics.functions.kinetic_energy", false]], "kinetic_energy() (sympy.physics.mechanics.body.body method)": [[117, "sympy.physics.mechanics.body.Body.kinetic_energy", false]], "kinetic_energy() (sympy.physics.mechanics.particle.particle method)": [[123, "sympy.physics.mechanics.particle.Particle.kinetic_energy", false]], "kinetic_energy() (sympy.physics.mechanics.rigidbody.rigidbody method)": [[123, "sympy.physics.mechanics.rigidbody.RigidBody.kinetic_energy", false]], "known_fcns_src1 (in module sympy.printing.julia)": [[211, "sympy.printing.julia.known_fcns_src1", false]], "known_fcns_src1 (in module sympy.printing.octave)": [[211, "sympy.printing.octave.known_fcns_src1", false]], "known_fcns_src2 (in module sympy.printing.julia)": [[211, "sympy.printing.julia.known_fcns_src2", false]], "known_fcns_src2 (in module sympy.printing.octave)": [[211, "sympy.printing.octave.known_fcns_src2", false]], "known_functions (in module sympy.printing.jscode)": [[211, "sympy.printing.jscode.known_functions", false]], "known_functions (in module sympy.printing.mathematica)": [[211, "sympy.printing.mathematica.known_functions", false]], "known_functions (in module sympy.printing.rcode)": [[211, "sympy.printing.rcode.known_functions", false]], "known_functions (in module sympy.printing.rust)": [[211, "sympy.printing.rust.known_functions", false]], "known_functions_c89 (in module sympy.printing.c)": [[211, "sympy.printing.c.known_functions_C89", false]], "known_functions_c99 (in module sympy.printing.c)": [[211, "sympy.printing.c.known_functions_C99", false]], "kroneckerdelta (class in sympy.functions.special.tensor_functions)": [[70, "sympy.functions.special.tensor_functions.KroneckerDelta", false]], "kroneckerdelta (class in sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.KroneckerDelta", false]], "kroneckersimp() (in module sympy.simplify.simplify)": [[223, "sympy.simplify.simplify.kroneckersimp", false]], "ksubsets() (sympy.combinatorics.subsets method)": [[57, "sympy.combinatorics.subsets.ksubsets", false]], "kumaraswamy() (in module sympy.stats)": [[231, "sympy.stats.Kumaraswamy", false]], "kurtosis() (in module sympy.stats)": [[231, "sympy.stats.kurtosis", false]], "kwargs() (sympy.codegen.ast.token method)": [[43, "sympy.codegen.ast.Token.kwargs", false]], "l1_norm() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.l1_norm", false]], "l1_norm() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.l1_norm", false]], "l2 (class in sympy.physics.quantum.hilbert)": [[162, "sympy.physics.quantum.hilbert.L2", false]], "l2_norm_squared() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.l2_norm_squared", false]], "label (class in sympy.codegen.cnodes)": [[43, "sympy.codegen.cnodes.Label", false]], "label (sympy.physics.quantum.state.timedepstate property)": [[174, "sympy.physics.quantum.state.TimeDepState.label", false]], "label (sympy.tensor.indexed.idx property)": [[236, "sympy.tensor.indexed.Idx.label", false]], "label (sympy.tensor.indexed.indexedbase property)": [[236, "sympy.tensor.indexed.IndexedBase.label", false]], "labeller() (in module sympy.physics.quantum.circuitplot)": [[156, "sympy.physics.quantum.circuitplot.labeller", false]], "lagrangesmethod (class in sympy.physics.mechanics.lagrange)": [[121, "sympy.physics.mechanics.lagrange.LagrangesMethod", false]], "lagrangian() (in module sympy.physics.mechanics.functions)": [[123, "sympy.physics.mechanics.functions.Lagrangian", false]], "laguerre (class in sympy.functions.special.polynomials)": [[70, "sympy.functions.special.polynomials.laguerre", false]], "laguerre_poly() (in module sympy.polys.orthopolys)": [[207, "sympy.polys.orthopolys.laguerre_poly", false]], "lambda (class in sympy.core.function)": [[62, "sympy.core.function.Lambda", false]], "lambda_notation() (in module sympy.parsing.sympy_parser)": [[104, "sympy.parsing.sympy_parser.lambda_notation", false]], "lambdaprinter (class in sympy.printing.lambdarepr)": [[211, "sympy.printing.lambdarepr.LambdaPrinter", false]], "lambdarepr() (in module sympy.printing.lambdarepr)": [[211, "sympy.printing.lambdarepr.lambdarepr", false]], "lambdastr() (in module sympy.utilities.lambdify)": [[250, "sympy.utilities.lambdify.lambdastr", false]], "lambdify()": [[11, "term-lambdify", true]], "lambdify() (in module sympy.utilities.lambdify)": [[250, "sympy.utilities.lambdify.lambdify", false]], "lambertw (class in sympy.functions.elementary.exponential)": [[68, "sympy.functions.elementary.exponential.LambertW", false]], "lamda": [[11, "term-lamda", true]], "laplace() (in module sympy.stats)": [[231, "sympy.stats.Laplace", false]], "laplace_transform() (in module sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.laplace_transform", false]], "laplacetransform (class in sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.LaplaceTransform", false]], "latex() (in module sympy.printing.latex)": [[211, "sympy.printing.latex.latex", false]], "latexparsingerror (class in sympy.parsing.latex)": [[104, "sympy.parsing.latex.LaTeXParsingError", false]], "latexprinter (class in sympy.printing.latex)": [[211, "sympy.printing.latex.LatexPrinter", false]], "lbound() (in module sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.lbound", false]], "lc() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.LC", false]], "lc() (sympy.polys.polyclasses.anp method)": [[202, "sympy.polys.polyclasses.ANP.LC", false]], "lc() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.LC", false]], "lc() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.LC", false]], "lcim() (in module sympy.calculus.util)": [[41, "sympy.calculus.util.lcim", false]], "lcm() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.lcm", false]], "lcm() (sympy.core.numbers.number method)": [[62, "sympy.core.numbers.Number.lcm", false]], "lcm() (sympy.polys.domains.complexfield method)": [[202, "sympy.polys.domains.ComplexField.lcm", false]], "lcm() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.lcm", false]], "lcm() (sympy.polys.domains.field.field method)": [[202, "sympy.polys.domains.field.Field.lcm", false]], "lcm() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.lcm", false]], "lcm() (sympy.polys.domains.gmpyintegerring method)": [[202, "sympy.polys.domains.GMPYIntegerRing.lcm", false]], "lcm() (sympy.polys.domains.integerring method)": [[202, "sympy.polys.domains.IntegerRing.lcm", false]], "lcm() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.lcm", false]], "lcm() (sympy.polys.domains.realfield method)": [[202, "sympy.polys.domains.RealField.lcm", false]], "lcm() (sympy.polys.monomials.monomial method)": [[207, "sympy.polys.monomials.Monomial.lcm", false]], "lcm() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.lcm", false]], "lcm() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.lcm", false]], "lcm_list() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.lcm_list", false]], "ldescent() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.ldescent", false]], "ldldecomposition() (sympy.matrices.dense.densematrix method)": [[94, "sympy.matrices.dense.DenseMatrix.LDLdecomposition", false]], "ldldecomposition() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.LDLdecomposition", false]], "ldlsolve() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.LDLsolve", false]], "ldudecomposition() (sympy.matrices.expressions.blockmatrix.blockmatrix method)": [[95, "sympy.matrices.expressions.blockmatrix.BlockMatrix.LDUdecomposition", false]], "le (in module sympy.core.relational)": [[62, "sympy.core.relational.Le", false]], "leading_expv() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.leading_expv", false]], "leading_monom() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.leading_monom", false]], "leading_term() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.leading_term", false]], "leadterm() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.leadterm", false]], "least_rotation() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.least_rotation", false]], "left() (sympy.printing.pretty.stringpict.stringpict method)": [[211, "sympy.printing.pretty.stringpict.stringPict.left", false]], "left_eigenvects() (sympy.matrices.matrices.matrixeigen method)": [[98, "sympy.matrices.matrices.MatrixEigen.left_eigenvects", false]], "left_open (sympy.sets.sets.interval property)": [[219, "sympy.sets.sets.Interval.left_open", false]], "leftslash() (sympy.printing.pretty.stringpict.stringpict method)": [[211, "sympy.printing.pretty.stringpict.stringPict.leftslash", false]], "legendre (class in sympy.functions.special.polynomials)": [[70, "sympy.functions.special.polynomials.legendre", false]], "legendre_poly() (in module sympy.polys.orthopolys)": [[207, "sympy.polys.orthopolys.legendre_poly", false]], "legendre_symbol() (in module sympy.ntheory.residue_ntheory)": [[102, "sympy.ntheory.residue_ntheory.legendre_symbol", false]], "length (sympy.geometry.curve.curve property)": [[71, "sympy.geometry.curve.Curve.length", false]], "length (sympy.geometry.line.linearentity property)": [[75, "sympy.geometry.line.LinearEntity.length", false]], "length (sympy.geometry.line.segment property)": [[75, "sympy.geometry.line.Segment.length", false]], "length (sympy.geometry.point.point property)": [[77, "sympy.geometry.point.Point.length", false]], "length (sympy.geometry.polygon.regularpolygon property)": [[78, "sympy.geometry.polygon.RegularPolygon.length", false]], "length (sympy.physics.continuum_mechanics.beam.beam property)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.length", false]], "length (sympy.series.sequences.seqbase property)": [[217, "sympy.series.sequences.SeqBase.length", false]], "length() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.length", false]], "length() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.length", false]], "lens_formula() (in module sympy.physics.optics.utils)": [[149, "sympy.physics.optics.utils.lens_formula", false]], "lens_makers_formula() (in module sympy.physics.optics.utils)": [[149, "sympy.physics.optics.utils.lens_makers_formula", false]], "lerchphi (class in sympy.functions.special.zeta_functions)": [[70, "sympy.functions.special.zeta_functions.lerchphi", false]], "lessthan (class in sympy.core.relational)": [[62, "sympy.core.relational.LessThan", false]], "levicivita (class in sympy.functions.special.tensor_functions)": [[70, "sympy.functions.special.tensor_functions.LeviCivita", false]], "levy() (in module sympy.stats)": [[231, "sympy.stats.Levy", false]], "lexorder (class in sympy.polys.orderings)": [[207, "sympy.polys.orderings.LexOrder", false]], "lfsr_autocorrelation() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.lfsr_autocorrelation", false]], "lfsr_connection_polynomial() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.lfsr_connection_polynomial", false]], "lfsr_sequence() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.lfsr_sequence", false]], "lhs (sympy.core.relational.relational property)": [[62, "sympy.core.relational.Relational.lhs", false]], "li (class in sympy.functions.special.error_functions)": [[70, "sympy.functions.special.error_functions.Li", false], [70, "sympy.functions.special.error_functions.li", false]], "lie_algebra() (sympy.liealgebras.type_a.typea method)": [[91, "sympy.liealgebras.type_a.TypeA.lie_algebra", false]], "lie_algebra() (sympy.liealgebras.type_b.typeb method)": [[91, "sympy.liealgebras.type_b.TypeB.lie_algebra", false]], "lie_algebra() (sympy.liealgebras.type_c.typec method)": [[91, "sympy.liealgebras.type_c.TypeC.lie_algebra", false]], "lie_algebra() (sympy.liealgebras.type_d.typed method)": [[91, "sympy.liealgebras.type_d.TypeD.lie_algebra", false]], "lie_heuristic_abaco1_product() (in module sympy.solvers.ode.lie_group)": [[227, "sympy.solvers.ode.lie_group.lie_heuristic_abaco1_product", false]], "lie_heuristic_abaco1_simple() (in module sympy.solvers.ode.lie_group)": [[227, "sympy.solvers.ode.lie_group.lie_heuristic_abaco1_simple", false]], "lie_heuristic_abaco2_similar() (in module sympy.solvers.ode.lie_group)": [[227, "sympy.solvers.ode.lie_group.lie_heuristic_abaco2_similar", false]], "lie_heuristic_abaco2_unique_general() (in module sympy.solvers.ode.lie_group)": [[227, "sympy.solvers.ode.lie_group.lie_heuristic_abaco2_unique_general", false]], "lie_heuristic_abaco2_unique_unknown() (in module sympy.solvers.ode.lie_group)": [[227, "sympy.solvers.ode.lie_group.lie_heuristic_abaco2_unique_unknown", false]], "lie_heuristic_bivariate() (in module sympy.solvers.ode.lie_group)": [[227, "sympy.solvers.ode.lie_group.lie_heuristic_bivariate", false]], "lie_heuristic_chi() (in module sympy.solvers.ode.lie_group)": [[227, "sympy.solvers.ode.lie_group.lie_heuristic_chi", false]], "lie_heuristic_function_sum() (in module sympy.solvers.ode.lie_group)": [[227, "sympy.solvers.ode.lie_group.lie_heuristic_function_sum", false]], "lie_heuristic_linear() (in module sympy.solvers.ode.lie_group)": [[227, "sympy.solvers.ode.lie_group.lie_heuristic_linear", false]], "liederivative (class in sympy.diffgeom)": [[64, "sympy.diffgeom.LieDerivative", false]], "liegroup (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.LieGroup", false]], "lift() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.lift", false]], "lift() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.lift", false]], "limit (class in sympy.series.limits)": [[218, "sympy.series.limits.Limit", false]], "limit() (in module sympy.series.limits)": [[218, "sympy.series.limits.limit", false]], "limit() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.limit", false]], "limit() (sympy.matrices.matrices.matrixcalculus method)": [[98, "sympy.matrices.matrices.MatrixCalculus.limit", false]], "limit_denominator() (sympy.core.numbers.rational method)": [[62, "sympy.core.numbers.Rational.limit_denominator", false]], "limit_seq() (in module sympy.series.limitseq)": [[216, "sympy.series.limitseq.limit_seq", false]], "limitinf() (in module sympy.series.gruntz)": [[218, "sympy.series.gruntz.limitinf", false]], "limiting_distribution (sympy.stats.discretemarkovchain property)": [[231, "sympy.stats.DiscreteMarkovChain.limiting_distribution", false]], "limits (sympy.concrete.expr_with_limits.exprwithlimits property)": [[89, "sympy.concrete.expr_with_limits.ExprWithLimits.limits", false]], "limits (sympy.geometry.curve.curve property)": [[71, "sympy.geometry.curve.Curve.limits", false]], "limits (sympy.physics.quantum.state.wavefunction property)": [[174, "sympy.physics.quantum.state.Wavefunction.limits", false]], "line (class in sympy.geometry.line)": [[75, "sympy.geometry.line.Line", false]], "line2d (class in sympy.geometry.line)": [[75, "sympy.geometry.line.Line2D", false]], "line2dbaseseries (class in sympy.plotting.plot)": [[197, "sympy.plotting.plot.Line2DBaseSeries", false]], "line3d (class in sympy.geometry.line)": [[75, "sympy.geometry.line.Line3D", false]], "line3dbaseseries (class in sympy.plotting.plot)": [[197, "sympy.plotting.plot.Line3DBaseSeries", false]], "line_integrate() (in module sympy.integrals.integrals)": [[89, "sympy.integrals.integrals.line_integrate", false]], "linear (class in sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.Linear", false]], "linear_eq_to_matrix() (in module sympy.solvers.solveset)": [[230, "sympy.solvers.solveset.linear_eq_to_matrix", false]], "linear_momentum() (in module sympy.physics.mechanics.functions)": [[123, "sympy.physics.mechanics.functions.linear_momentum", false]], "linear_momentum() (sympy.physics.mechanics.particle.particle method)": [[123, "sympy.physics.mechanics.particle.Particle.linear_momentum", false]], "linear_momentum() (sympy.physics.mechanics.rigidbody.rigidbody method)": [[123, "sympy.physics.mechanics.rigidbody.RigidBody.linear_momentum", false]], "linear_ode_to_matrix() (in module sympy.solvers.ode.systems)": [[227, "sympy.solvers.ode.systems.linear_ode_to_matrix", false]], "linear_polarizer() (in module sympy.physics.optics.polarization)": [[148, "sympy.physics.optics.polarization.linear_polarizer", false]], "linearcoefficients (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.LinearCoefficients", false]], "linearentity (class in sympy.geometry.line)": [[75, "sympy.geometry.line.LinearEntity", false]], "linearentity2d (class in sympy.geometry.line)": [[75, "sympy.geometry.line.LinearEntity2D", false]], "linearentity3d (class in sympy.geometry.line)": [[75, "sympy.geometry.line.LinearEntity3D", false]], "linearize() (sympy.physics.mechanics.kane.kanesmethod method)": [[121, "sympy.physics.mechanics.kane.KanesMethod.linearize", false]], "linearize() (sympy.physics.mechanics.lagrange.lagrangesmethod method)": [[121, "sympy.physics.mechanics.lagrange.LagrangesMethod.linearize", false]], "linearize() (sympy.physics.mechanics.linearize.linearizer method)": [[122, "sympy.physics.mechanics.linearize.Linearizer.linearize", false]], "linearizer (class in sympy.physics.mechanics.linearize)": [[122, "sympy.physics.mechanics.linearize.Linearizer", false]], "lineover1drangeseries (class in sympy.plotting.plot)": [[197, "sympy.plotting.plot.LineOver1DRangeSeries", false]], "linodesolve() (in module sympy.solvers.ode.systems)": [[227, "sympy.solvers.ode.systems.linodesolve", false]], "linodesolve_type() (in module sympy.solvers.ode.systems)": [[227, "sympy.solvers.ode.systems.linodesolve_type", false]], "linsolve() (in module sympy.solvers.solveset)": [[230, "sympy.solvers.solveset.linsolve", false]], "liouville (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.Liouville", false]], "list() (sympy.combinatorics.permutations.cycle method)": [[54, "sympy.combinatorics.permutations.Cycle.list", false]], "list() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.list", false]], "list2numpy() (in module sympy.matrices.dense)": [[98, "sympy.matrices.dense.list2numpy", false]], "list_can_dims (sympy.physics.units.dimensions.dimensionsystem property)": [[178, "sympy.physics.units.dimensions.DimensionSystem.list_can_dims", false]], "list_visitor() (in module sympy.utilities.enumerative)": [[246, "sympy.utilities.enumerative.list_visitor", false]], "listcoeffs() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.listcoeffs", false]], "listmonoms() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.listmonoms", false]], "listterms() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.listterms", false]], "literal_dp (class in sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.literal_dp", false]], "literal_sp (class in sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.literal_sp", false]], "lll() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.lll", false]], "lll_transform() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.lll_transform", false]], "lm() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.LM", false]], "lm() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.LM", false]], "load (sympy.physics.continuum_mechanics.beam.beam property)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.load", false]], "load_vector (sympy.physics.continuum_mechanics.beam.beam3d property)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.load_vector", false]], "loads (sympy.physics.continuum_mechanics.truss.truss property)": [[108, "sympy.physics.continuum_mechanics.truss.Truss.loads", false]], "loads (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[120, "sympy.physics.mechanics.jointsmethod.JointsMethod.loads", false]], "loads (sympy.physics.mechanics.system.symbolicsystem property)": [[125, "sympy.physics.mechanics.system.SymbolicSystem.loads", false]], "locate_new() (sympy.vector.coordsysrect.coordsys3d method)": [[256, "sympy.vector.coordsysrect.CoordSys3D.locate_new", false]], "locatenew() (sympy.physics.vector.point.point method)": [[190, "sympy.physics.vector.point.Point.locatenew", false]], "log (class in sympy.functions.elementary.exponential)": [[68, "sympy.functions.elementary.exponential.log", false]], "log() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.log", false]], "log() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.log", false]], "log() (sympy.polys.domains.integerring method)": [[202, "sympy.polys.domains.IntegerRing.log", false]], "log10 (class in sympy.codegen.cfunctions)": [[43, "sympy.codegen.cfunctions.log10", false]], "log1p (class in sympy.codegen.cfunctions)": [[43, "sympy.codegen.cfunctions.log1p", false]], "log2 (class in sympy.codegen.cfunctions)": [[43, "sympy.codegen.cfunctions.log2", false]], "logarithmic() (in module sympy.stats)": [[231, "sympy.stats.Logarithmic", false]], "logcombine() (in module sympy.simplify.simplify)": [[223, "sympy.simplify.simplify.logcombine", false]], "loggamma (class in sympy.functions.special.gamma_functions)": [[70, "sympy.functions.special.gamma_functions.loggamma", false]], "logistic() (in module sympy.stats)": [[231, "sympy.stats.Logistic", false]], "loglogistic() (in module sympy.stats)": [[231, "sympy.stats.LogLogistic", false]], "lognormal() (in module sympy.stats)": [[231, "sympy.stats.LogNormal", false]], "lomax() (in module sympy.stats)": [[231, "sympy.stats.Lomax", false]], "lopen() (sympy.sets.sets.interval class method)": [[219, "sympy.sets.sets.Interval.Lopen", false]], "lower (sympy.physics.secondquant.antisymmetrictensor property)": [[176, "sympy.physics.secondquant.AntiSymmetricTensor.lower", false]], "lower (sympy.tensor.indexed.idx property)": [[236, "sympy.tensor.indexed.Idx.lower", false]], "lower_central_series() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.lower_central_series", false]], "lower_triangular() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.lower_triangular", false]], "lower_triangular_solve() (sympy.matrices.dense.densematrix method)": [[94, "sympy.matrices.dense.DenseMatrix.lower_triangular_solve", false]], "lower_triangular_solve() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.lower_triangular_solve", false]], "lowergamma (class in sympy.functions.special.gamma_functions)": [[70, "sympy.functions.special.gamma_functions.lowergamma", false]], "lowertriangularpredicate (class in sympy.assumptions.predicates.matrices)": [[39, "sympy.assumptions.predicates.matrices.LowerTriangularPredicate", false]], "lseries() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.lseries", false]], "lt (in module sympy.core.relational)": [[62, "sympy.core.relational.Lt", false]], "lt() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.LT", false]], "lt() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.LT", false]], "ltrim() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.ltrim", false]], "lu() (sympy.polys.matrices.ddm.ddm method)": [[200, "sympy.polys.matrices.ddm.DDM.lu", false]], "lu() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.lu", false]], "lu() (sympy.polys.matrices.sdm.sdm method)": [[200, "sympy.polys.matrices.sdm.SDM.lu", false]], "lu_solve() (sympy.polys.matrices.ddm.ddm method)": [[200, "sympy.polys.matrices.ddm.DDM.lu_solve", false]], "lu_solve() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.lu_solve", false]], "lu_solve() (sympy.polys.matrices.sdm.sdm method)": [[200, "sympy.polys.matrices.sdm.SDM.lu_solve", false]], "lucas (class in sympy.functions.combinatorial.numbers)": [[67, "sympy.functions.combinatorial.numbers.lucas", false]], "ludecomposition() (sympy.matrices.expressions.blockmatrix.blockmatrix method)": [[95, "sympy.matrices.expressions.blockmatrix.BlockMatrix.LUdecomposition", false]], "ludecomposition() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.LUdecomposition", false]], "ludecomposition_simple() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.LUdecomposition_Simple", false]], "ludecompositionff() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.LUdecompositionFF", false]], "lusolve() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.LUsolve", false]], "m20() (in module sympy.combinatorics.galois)": [[45, "sympy.combinatorics.galois.M20", false]], "magnitude() (sympy.physics.vector.vector.vector method)": [[186, "sympy.physics.vector.vector.Vector.magnitude", false]], "magnitude() (sympy.vector.vector.vector method)": [[256, "sympy.vector.vector.Vector.magnitude", false]], "major (sympy.geometry.ellipse.ellipse property)": [[72, "sympy.geometry.ellipse.Ellipse.major", false]], "make_mod_elt() (in module sympy.polys.numberfields.modules)": [[206, "sympy.polys.numberfields.modules.make_mod_elt", false]], "make_monic_over_integers_by_scaling_roots() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.make_monic_over_integers_by_scaling_roots", false]], "make_perm() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.make_perm", false]], "make_routine() (in module sympy.utilities.codegen)": [[244, "sympy.utilities.codegen.make_routine", false]], "manifold (class in sympy.diffgeom)": [[64, "sympy.diffgeom.Manifold", false]], "manualintegrate() (in module sympy.integrals.manualintegrate)": [[89, "sympy.integrals.manualintegrate.manualintegrate", false]], "map() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.map", false]], "maple_code() (in module sympy.printing.maple)": [[211, "sympy.printing.maple.maple_code", false]], "maplecodeprinter (class in sympy.printing.maple)": [[211, "sympy.printing.maple.MapleCodePrinter", false]], "marcumq (class in sympy.functions.special.bessel)": [[70, "sympy.functions.special.bessel.marcumq", false]], "marginal_distribution() (in module sympy.stats)": [[231, "sympy.stats.marginal_distribution", false]], "mass (sympy.physics.mechanics.particle.particle property)": [[123, "sympy.physics.mechanics.particle.Particle.mass", false]], "mass (sympy.physics.mechanics.rigidbody.rigidbody property)": [[123, "sympy.physics.mechanics.rigidbody.RigidBody.mass", false]], "mass_matrix (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[120, "sympy.physics.mechanics.jointsmethod.JointsMethod.mass_matrix", false]], "mass_matrix (sympy.physics.mechanics.kane.kanesmethod property)": [[121, "sympy.physics.mechanics.kane.KanesMethod.mass_matrix", false]], "mass_matrix (sympy.physics.mechanics.lagrange.lagrangesmethod property)": [[121, "sympy.physics.mechanics.lagrange.LagrangesMethod.mass_matrix", false]], "mass_matrix_full (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[120, "sympy.physics.mechanics.jointsmethod.JointsMethod.mass_matrix_full", false]], "mass_matrix_full (sympy.physics.mechanics.kane.kanesmethod property)": [[121, "sympy.physics.mechanics.kane.KanesMethod.mass_matrix_full", false]], "mass_matrix_full (sympy.physics.mechanics.lagrange.lagrangesmethod property)": [[121, "sympy.physics.mechanics.lagrange.LagrangesMethod.mass_matrix_full", false]], "mass_matrix_kin (sympy.physics.mechanics.kane.kanesmethod property)": [[121, "sympy.physics.mechanics.kane.KanesMethod.mass_matrix_kin", false]], "masscenter (sympy.physics.mechanics.rigidbody.rigidbody property)": [[123, "sympy.physics.mechanics.rigidbody.RigidBody.masscenter", false]], "masscenter_vel() (sympy.physics.mechanics.body.body method)": [[117, "sympy.physics.mechanics.body.Body.masscenter_vel", false]], "matadd (class in sympy.matrices.expressions)": [[95, "sympy.matrices.expressions.MatAdd", false]], "match() (sympy.core.basic.basic method)": [[62, "sympy.core.basic.Basic.match", false]], "match() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.match", false]], "matches() (sympy.core.basic.basic method)": [[62, "sympy.core.basic.Basic.matches", false]], "matches() (sympy.solvers.diophantine.diophantine.diophantineequationtype method)": [[224, "sympy.solvers.diophantine.diophantine.DiophantineEquationType.matches", false]], "mathematica_code() (in module sympy.printing.mathematica)": [[211, "sympy.printing.mathematica.mathematica_code", false]], "mathieubase (class in sympy.functions.special.mathieu_functions)": [[70, "sympy.functions.special.mathieu_functions.MathieuBase", false]], "mathieuc (class in sympy.functions.special.mathieu_functions)": [[70, "sympy.functions.special.mathieu_functions.mathieuc", false]], "mathieucprime (class in sympy.functions.special.mathieu_functions)": [[70, "sympy.functions.special.mathieu_functions.mathieucprime", false]], "mathieus (class in sympy.functions.special.mathieu_functions)": [[70, "sympy.functions.special.mathieu_functions.mathieus", false]], "mathieusprime (class in sympy.functions.special.mathieu_functions)": [[70, "sympy.functions.special.mathieu_functions.mathieusprime", false]], "mathml() (in module sympy.printing.mathml)": [[211, "sympy.printing.mathml.mathml", false]], "mathml_tag() (sympy.printing.mathml.mathmlcontentprinter method)": [[211, "sympy.printing.mathml.MathMLContentPrinter.mathml_tag", false]], "mathml_tag() (sympy.printing.mathml.mathmlpresentationprinter method)": [[211, "sympy.printing.mathml.MathMLPresentationPrinter.mathml_tag", false]], "mathmlcontentprinter (class in sympy.printing.mathml)": [[211, "sympy.printing.mathml.MathMLContentPrinter", false]], "mathmlpresentationprinter (class in sympy.printing.mathml)": [[211, "sympy.printing.mathml.MathMLPresentationPrinter", false]], "mathmlprinterbase (class in sympy.printing.mathml)": [[211, "sympy.printing.mathml.MathMLPrinterBase", false]], "matmul (class in sympy.matrices.expressions)": [[95, "sympy.matrices.expressions.MatMul", false]], "matmul() (sympy.polys.matrices.ddm.ddm method)": [[200, "sympy.polys.matrices.ddm.DDM.matmul", false]], "matmul() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.matmul", false]], "matmul() (sympy.polys.matrices.sdm.sdm method)": [[200, "sympy.polys.matrices.sdm.SDM.matmul", false]], "matplotlibbackend (class in sympy.plotting.plot)": [[197, "sympy.plotting.plot.MatplotlibBackend", false]], "matpow (class in sympy.matrices.expressions)": [[95, "sympy.matrices.expressions.MatPow", false]], "matrix": [[11, "term-Matrix", true]], "matrix (in module sympy.matrices.dense)": [[94, "sympy.matrices.dense.Matrix", false]], "matrix() (sympy.polys.numberfields.modules.modulehomomorphism method)": [[206, "sympy.polys.numberfields.modules.ModuleHomomorphism.matrix", false]], "matrix2numpy() (in module sympy.matrices.dense)": [[98, "sympy.matrices.dense.matrix2numpy", false]], "matrix_exp() (in module sympy.solvers.ode.systems)": [[227, "sympy.solvers.ode.systems.matrix_exp", false]], "matrix_exp_jordan_form() (in module sympy.solvers.ode.systems)": [[227, "sympy.solvers.ode.systems.matrix_exp_jordan_form", false]], "matrix_fglm() (in module sympy.polys.fglmtools)": [[204, "sympy.polys.fglmtools.matrix_fglm", false]], "matrix_form() (sympy.liealgebras.weyl_group.weylgroup method)": [[91, "sympy.liealgebras.weyl_group.WeylGroup.matrix_form", false]], "matrix_multiply_elementwise() (in module sympy.matrices.dense)": [[98, "sympy.matrices.dense.matrix_multiply_elementwise", false]], "matrix_rep() (in module sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.matrix_rep", false]], "matrix_to_density() (in module sympy.physics.quantum.qubit)": [[170, "sympy.physics.quantum.qubit.matrix_to_density", false]], "matrix_to_qubit() (in module sympy.physics.quantum.qubit)": [[170, "sympy.physics.quantum.qubit.matrix_to_qubit", false]], "matrix_to_vector() (in module sympy.vector)": [[259, "sympy.vector.matrix_to_vector", false]], "matrixbase (class in sympy.matrices.matrices)": [[98, "sympy.matrices.matrices.MatrixBase", false]], "matrixcalculus (class in sympy.matrices.matrices)": [[98, "sympy.matrices.matrices.MatrixCalculus", false]], "matrixcommon (class in sympy.matrices.common)": [[93, "sympy.matrices.common.MatrixCommon", false]], "matrixdeterminant (class in sympy.matrices.matrices)": [[98, "sympy.matrices.matrices.MatrixDeterminant", false]], "matrixeigen (class in sympy.matrices.matrices)": [[98, "sympy.matrices.matrices.MatrixEigen", false]], "matrixerror (class in sympy.matrices.matrices)": [[98, "sympy.matrices.matrices.MatrixError", false]], "matrixexpr (class in sympy.matrices.expressions)": [[95, "sympy.matrices.expressions.MatrixExpr", false]], "matrixgamma() (in module sympy.stats)": [[231, "sympy.stats.MatrixGamma", false]], "matrixkind (class in sympy.matrices.common)": [[93, "sympy.matrices.common.MatrixKind", false]], "matrixnormal() (in module sympy.stats)": [[231, "sympy.stats.MatrixNormal", false]], "matrixpermute (class in sympy.matrices.expressions)": [[95, "sympy.matrices.expressions.MatrixPermute", false]], "matrixreductions (class in sympy.matrices.matrices)": [[98, "sympy.matrices.matrices.MatrixReductions", false]], "matrixset (class in sympy.matrices.expressions)": [[95, "sympy.matrices.expressions.MatrixSet", false]], "matrixsolve (class in sympy.codegen.matrix_nodes)": [[43, "sympy.codegen.matrix_nodes.MatrixSolve", false]], "matrixsubspaces (class in sympy.matrices.matrices)": [[98, "sympy.matrices.matrices.MatrixSubspaces", false]], "matrixsymbol (class in sympy.matrices.expressions)": [[95, "sympy.matrices.expressions.MatrixSymbol", false]], "max (class in sympy.functions.elementary.miscellaneous)": [[68, "sympy.functions.elementary.miscellaneous.Max", false]], "max (sympy.codegen.ast.floattype property)": [[43, "sympy.codegen.ast.FloatType.max", false]], "max() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.max", false]], "max_bending_moment() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.max_bending_moment", false]], "max_bmoment() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.max_bmoment", false]], "max_bmoment() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.max_bmoment", false]], "max_deflection() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.max_deflection", false]], "max_deflection() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.max_deflection", false]], "max_div (sympy.combinatorics.perm_groups.permutationgroup property)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.max_div", false]], "max_exponent (sympy.codegen.ast.floattype property)": [[43, "sympy.codegen.ast.FloatType.max_exponent", false]], "max_norm() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.max_norm", false]], "max_norm() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.max_norm", false]], "max_shear_force() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.max_shear_force", false]], "max_shear_force() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.max_shear_force", false]], "maximal_order() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.maximal_order", false]], "maximum() (in module sympy.calculus.util)": [[41, "sympy.calculus.util.maximum", false]], "maxwell() (in module sympy.stats)": [[231, "sympy.stats.Maxwell", false]], "mcodeprinter (class in sympy.printing.mathematica)": [[211, "sympy.printing.mathematica.MCodePrinter", false]], "mdft() (in module sympy.physics.matrices)": [[115, "sympy.physics.matrices.mdft", false]], "measure (sympy.sets.sets.set property)": [[219, "sympy.sets.sets.Set.measure", false]], "measure_all() (in module sympy.physics.quantum.qubit)": [[170, "sympy.physics.quantum.qubit.measure_all", false]], "measure_all_oneshot() (in module sympy.physics.quantum.qubit)": [[170, "sympy.physics.quantum.qubit.measure_all_oneshot", false]], "measure_partial() (in module sympy.physics.quantum.qubit)": [[170, "sympy.physics.quantum.qubit.measure_partial", false]], "measure_partial_oneshot() (in module sympy.physics.quantum.qubit)": [[170, "sympy.physics.quantum.qubit.measure_partial_oneshot", false]], "medial (sympy.geometry.polygon.triangle property)": [[78, "sympy.geometry.polygon.Triangle.medial", false]], "median() (in module sympy.stats)": [[231, "sympy.stats.median", false]], "medians (sympy.geometry.polygon.triangle property)": [[78, "sympy.geometry.polygon.Triangle.medians", false]], "medium (class in sympy.physics.optics.medium)": [[147, "sympy.physics.optics.medium.Medium", false]], "meets() (sympy.series.gruntz.subsset method)": [[218, "sympy.series.gruntz.SubsSet.meets", false]], "meijerg (class in sympy.functions.special.hyper)": [[70, "sympy.functions.special.hyper.meijerg", false]], "meijerint_definite() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint.meijerint_definite", false]], "meijerint_indefinite() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint.meijerint_indefinite", false]], "meijerint_inversion() (in module sympy.integrals.meijerint)": [[87, "sympy.integrals.meijerint.meijerint_inversion", false]], "mellin_transform() (in module sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.mellin_transform", false]], "mellintransform (class in sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.MellinTransform", false]], "member_labels (sympy.physics.continuum_mechanics.truss.truss property)": [[108, "sympy.physics.continuum_mechanics.truss.Truss.member_labels", false]], "members (sympy.physics.continuum_mechanics.truss.truss property)": [[108, "sympy.physics.continuum_mechanics.truss.Truss.members", false]], "memoize_property() (in module sympy.utilities.decorator)": [[245, "sympy.utilities.decorator.memoize_property", false]], "mensor() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.mensor", false]], "merge (class in sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.merge", false]], "merge_solution() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.merge_solution", false]], "mersenne_prime_exponent() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.mersenne_prime_exponent", false]], "method (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[120, "sympy.physics.mechanics.jointsmethod.JointsMethod.method", false]], "metric_to_christoffel_1st() (in module sympy.diffgeom)": [[64, "sympy.diffgeom.metric_to_Christoffel_1st", false]], "metric_to_christoffel_2nd() (in module sympy.diffgeom)": [[64, "sympy.diffgeom.metric_to_Christoffel_2nd", false]], "metric_to_ricci_components() (in module sympy.diffgeom)": [[64, "sympy.diffgeom.metric_to_Ricci_components", false]], "metric_to_riemann_components() (in module sympy.diffgeom)": [[64, "sympy.diffgeom.metric_to_Riemann_components", false]], "mgamma() (in module sympy.physics.matrices)": [[115, "sympy.physics.matrices.mgamma", false]], "midpoint (sympy.geometry.line.segment property)": [[75, "sympy.geometry.line.Segment.midpoint", false]], "midpoint() (sympy.geometry.point.point method)": [[77, "sympy.geometry.point.Point.midpoint", false]], "mignotte_sep_bound_squared() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.mignotte_sep_bound_squared", false]], "mimofeedback (class in sympy.physics.control.lti)": [[112, "sympy.physics.control.lti.MIMOFeedback", false]], "mimoparallel (class in sympy.physics.control.lti)": [[112, "sympy.physics.control.lti.MIMOParallel", false]], "mimoseries (class in sympy.physics.control.lti)": [[112, "sympy.physics.control.lti.MIMOSeries", false]], "min (class in sympy.functions.elementary.miscellaneous)": [[68, "sympy.functions.elementary.miscellaneous.Min", false]], "min() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.min", false]], "min_exponent (sympy.codegen.ast.floattype property)": [[43, "sympy.codegen.ast.FloatType.min_exponent", false]], "min_qubits (sympy.physics.quantum.gate.cgate property)": [[160, "sympy.physics.quantum.gate.CGate.min_qubits", false]], "min_qubits (sympy.physics.quantum.gate.cnotgate property)": [[160, "sympy.physics.quantum.gate.CNotGate.min_qubits", false]], "min_qubits (sympy.physics.quantum.gate.gate property)": [[160, "sympy.physics.quantum.gate.Gate.min_qubits", false]], "minimal_block() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.minimal_block", false]], "minimal_blocks() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.minimal_blocks", false]], "minimal_polynomial() (in module sympy.polys.numberfields.minpoly)": [[206, "sympy.polys.numberfields.minpoly.minimal_polynomial", false]], "minimum() (in module sympy.calculus.util)": [[41, "sympy.calculus.util.minimum", false]], "minlex() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.minlex", false]], "minor (sympy.geometry.ellipse.ellipse property)": [[72, "sympy.geometry.ellipse.Ellipse.minor", false]], "minor() (sympy.matrices.matrices.matrixdeterminant method)": [[98, "sympy.matrices.matrices.MatrixDeterminant.minor", false]], "minor_submatrix() (sympy.matrices.matrices.matrixdeterminant method)": [[98, "sympy.matrices.matrices.MatrixDeterminant.minor_submatrix", false]], "minpoly() (in module sympy.polys.numberfields.minpoly)": [[206, "sympy.polys.numberfields.minpoly.minpoly", false]], "minpoly_of_element() (sympy.core.numbers.algebraicnumber method)": [[62, "sympy.core.numbers.AlgebraicNumber.minpoly_of_element", false]], "mirror_formula() (in module sympy.physics.optics.utils)": [[149, "sympy.physics.optics.utils.mirror_formula", false]], "mobius (class in sympy.ntheory)": [[102, "sympy.ntheory.mobius", false]], "mobius_transform() (in module sympy.discrete.transforms)": [[65, "sympy.discrete.transforms.mobius_transform", false]], "mobiusrange() (sympy.ntheory.generate.sieve method)": [[102, "sympy.ntheory.generate.Sieve.mobiusrange", false]], "mod (class in sympy.core.mod)": [[62, "sympy.core.mod.Mod", false]], "mod (sympy.polys.domains.algebraicfield attribute)": [[202, "sympy.polys.domains.AlgebraicField.mod", false]], "mod_inverse() (in module sympy.core.numbers)": [[62, "sympy.core.numbers.mod_inverse", false]], "modgcd_bivariate() (in module sympy.polys.modulargcd)": [[204, "sympy.polys.modulargcd.modgcd_bivariate", false]], "modgcd_multivariate() (in module sympy.polys.modulargcd)": [[204, "sympy.polys.modulargcd.modgcd_multivariate", false]], "modgcd_univariate() (in module sympy.polys.modulargcd)": [[204, "sympy.polys.modulargcd.modgcd_univariate", false]], "module": [[12, "module-sympy.simplify.simplify", false], [32, "module-sympy", false], [34, "module-sympy.abc", false], [35, "module-sympy.algebras", false], [36, "module-sympy.assumptions.ask", false], [37, "module-sympy.assumptions.assume", false], [38, "module-sympy.assumptions", false], [39, "module-sympy.assumptions.predicates", false], [40, "module-sympy.assumptions.refine", false], [41, "module-sympy.calculus", false], [41, "module-sympy.calculus.euler", false], [41, "module-sympy.calculus.finite_diff", false], [41, "module-sympy.calculus.singularities", false], [41, "module-sympy.calculus.util", false], [42, "module-sympy.categories", false], [42, "module-sympy.categories.diagram_drawing", false], [43, "module-sympy.codegen.algorithms", false], [43, "module-sympy.codegen.approximations", false], [43, "module-sympy.codegen.ast", false], [43, "module-sympy.codegen.cfunctions", false], [43, "module-sympy.codegen.cnodes", false], [43, "module-sympy.codegen.cutils", false], [43, "module-sympy.codegen.cxxnodes", false], [43, "module-sympy.codegen.fnodes", false], [43, "module-sympy.codegen.futils", false], [43, "module-sympy.codegen.matrix_nodes", false], [43, "module-sympy.codegen.pyutils", false], [43, "module-sympy.codegen.rewriting", false], [45, "module-sympy.combinatorics.galois", false], [46, "module-sympy.combinatorics.graycode", false], [47, "module-sympy.combinatorics.group_constructs", false], [48, "module-sympy.combinatorics.group_numbers", false], [50, "module-sympy.combinatorics.named_groups", false], [51, "module-sympy.combinatorics.partitions", false], [53, "module-sympy.combinatorics.perm_groups", false], [54, "module-sympy.combinatorics.generators", false], [54, "module-sympy.combinatorics.permutations", false], [55, "module-sympy.combinatorics.polyhedron", false], [56, "module-sympy.combinatorics.prufer", false], [57, "module-sympy.combinatorics.subsets", false], [58, "module-sympy.combinatorics.tensor_can", false], [59, "module-sympy.combinatorics.testutil", false], [60, "module-sympy.combinatorics.util", false], [62, "module-sympy.core.add", false], [62, "module-sympy.core.assumptions", false], [62, "module-sympy.core.basic", false], [62, "module-sympy.core.cache", false], [62, "module-sympy.core.containers", false], [62, "module-sympy.core.evalf", false], [62, "module-sympy.core.expr", false], [62, "module-sympy.core.exprtools", false], [62, "module-sympy.core.function", false], [62, "module-sympy.core.kind", false], [62, "module-sympy.core.mod", false], [62, "module-sympy.core.mul", false], [62, "module-sympy.core.multidimensional", false], [62, "module-sympy.core.numbers", false], [62, "module-sympy.core.power", false], [62, "module-sympy.core.random", false], [62, "module-sympy.core.relational", false], [62, "module-sympy.core.singleton", false], [62, "module-sympy.core.symbol", false], [62, "module-sympy.core.sympify", false], [62, "module-sympy.core.traversal", false], [63, "module-sympy.crypto.crypto", false], [64, "module-sympy.diffgeom", false], [65, "module-sympy.discrete", false], [65, "module-sympy.discrete.convolutions", false], [65, "module-sympy.discrete.transforms", false], [69, "module-sympy.functions", false], [70, "module-sympy.functions.special.bessel", false], [70, "module-sympy.functions.special.beta_functions", false], [70, "module-sympy.functions.special.elliptic_integrals", false], [70, "module-sympy.functions.special.error_functions", false], [70, "module-sympy.functions.special.gamma_functions", false], [70, "module-sympy.functions.special.mathieu_functions", false], [70, "module-sympy.functions.special.polynomials", false], [70, "module-sympy.functions.special.singularity_functions", false], [70, "module-sympy.functions.special.zeta_functions", false], [71, "module-sympy.geometry.curve", false], [72, "module-sympy.geometry.ellipse", false], [73, "module-sympy.geometry.entity", false], [75, "module-sympy.geometry.line", false], [76, "module-sympy.geometry.plane", false], [77, "module-sympy.geometry.point", false], [78, "module-sympy.geometry.polygon", false], [79, "module-sympy.geometry.util", false], [82, "module-sympy.holonomic", false], [87, "module-sympy.integrals.meijerint", false], [87, "module-sympy.integrals.meijerint_doc", false], [89, "module-sympy.integrals", false], [89, "module-sympy.integrals.intpoly", false], [89, "module-sympy.integrals.transforms", false], [90, "module-sympy.interactive", false], [90, "module-sympy.interactive.printing", false], [90, "module-sympy.interactive.session", false], [91, "module-sympy.liealgebras", false], [92, "module-sympy.logic", false], [92, "module-sympy.logic.inference", false], [93, "module-sympy.matrices.common", false], [95, "module-sympy.matrices.expressions", false], [95, "module-sympy.matrices.expressions.blockmatrix", false], [96, "module-sympy.matrices.immutable", false], [97, "module-sympy.matrices", false], [98, "module-sympy.matrices.matrices", false], [100, "module-sympy.matrices.sparse", false], [101, "module-sympy.matrices.sparsetools", false], [102, "module-sympy.ntheory.bbp_pi", false], [102, "module-sympy.ntheory.continued_fraction", false], [102, "module-sympy.ntheory.digits", false], [102, "module-sympy.ntheory.ecm", false], [102, "module-sympy.ntheory.egyptian_fraction", false], [102, "module-sympy.ntheory.factor_", false], [102, "module-sympy.ntheory.generate", false], [102, "module-sympy.ntheory.modular", false], [102, "module-sympy.ntheory.multinomial", false], [102, "module-sympy.ntheory.partitions_", false], [102, "module-sympy.ntheory.primetest", false], [102, "module-sympy.ntheory.qs", false], [102, "module-sympy.ntheory.residue_ntheory", false], [104, "module-sympy.parsing", false], [104, "module-sympy.parsing.sym_expr", false], [105, "module-sympy.physics.continuum_mechanics.beam", false], [108, "module-sympy.physics.continuum_mechanics.truss", false], [111, "module-sympy.physics.control", false], [112, "module-sympy.physics.control.lti", false], [113, "module-sympy.physics.hep.gamma_matrices", false], [114, "module-sympy.physics.hydrogen", false], [115, "module-sympy.physics.matrices", false], [117, "module-sympy.physics.mechanics.body", false], [120, "module-sympy.physics.mechanics.joint", false], [120, "module-sympy.physics.mechanics.jointsmethod", false], [121, "module-sympy.physics.mechanics.kane", false], [121, "module-sympy.physics.mechanics.lagrange", false], [122, "module-sympy.physics.mechanics.linearize", false], [123, "module-sympy.physics.mechanics.particle", false], [123, "module-sympy.physics.mechanics.rigidbody", false], [125, "module-sympy.physics.mechanics.system", false], [136, "module-sympy.physics.mechanics", false], [145, "module-sympy.physics.optics.gaussopt", false], [147, "module-sympy.physics.optics.medium", false], [148, "module-sympy.physics.optics.polarization", false], [149, "module-sympy.physics.optics.utils", false], [150, "module-sympy.physics.optics.waves", false], [151, "module-sympy.physics.paulialgebra", false], [152, "module-sympy.physics.qho_1d", false], [153, "module-sympy.physics.quantum.anticommutator", false], [154, "module-sympy.physics.quantum.cartesian", false], [155, "module-sympy.physics.quantum.cg", false], [156, "module-sympy.physics.quantum.circuitplot", false], [157, "module-sympy.physics.quantum.commutator", false], [158, "module-sympy.physics.quantum.constants", false], [159, "module-sympy.physics.quantum.dagger", false], [160, "module-sympy.physics.quantum.gate", false], [161, "module-sympy.physics.quantum.grover", false], [162, "module-sympy.physics.quantum.hilbert", false], [164, "module-sympy.physics.quantum.innerproduct", false], [165, "module-sympy.physics.quantum.operator", false], [166, "module-sympy.physics.quantum.operatorset", false], [167, "module-sympy.physics.quantum.piab", false], [168, "module-sympy.physics.quantum.qapply", false], [169, "module-sympy.physics.quantum.qft", false], [170, "module-sympy.physics.quantum.qubit", false], [171, "module-sympy.physics.quantum.represent", false], [172, "module-sympy.physics.quantum.shor", false], [173, "module-sympy.physics.quantum.spin", false], [174, "module-sympy.physics.quantum.state", false], [175, "module-sympy.physics.quantum.tensorproduct", false], [176, "module-sympy.physics.secondquant", false], [177, "module-sympy.physics.sho", false], [178, "module-sympy.physics.units.dimensions", false], [182, "module-sympy.physics.units.prefixes", false], [183, "module-sympy.physics.units.quantities", false], [183, "module-sympy.physics.units.util", false], [184, "module-sympy.physics.units.unitsystem", false], [190, "module-sympy.physics.vector.functions", false], [190, "module-sympy.physics.vector.point", false], [193, "module-sympy.physics.vector", false], [196, "module-sympy.physics.wigner", false], [197, "module-sympy.plotting.plot", false], [197, "module-sympy.plotting.pygletplot", false], [204, "module-sympy.polys.polyconfig", false], [204, "module-sympy.polys.polyoptions", false], [206, "module-sympy.polys.numberfields.modules", false], [206, "module-sympy.polys.numberfields.subfield", false], [207, "module-sympy.polys", false], [209, "module-sympy.polys.solvers", false], [211, "module-sympy.printing.aesaracode", false], [211, "module-sympy.printing.c", false], [211, "module-sympy.printing.codeprinter", false], [211, "module-sympy.printing.conventions", false], [211, "module-sympy.printing.cxx", false], [211, "module-sympy.printing.fortran", false], [211, "module-sympy.printing.gtk", false], [211, "module-sympy.printing.jscode", false], [211, "module-sympy.printing.julia", false], [211, "module-sympy.printing.lambdarepr", false], [211, "module-sympy.printing.latex", false], [211, "module-sympy.printing.maple", false], [211, "module-sympy.printing.mathematica", false], [211, "module-sympy.printing.mathml", false], [211, "module-sympy.printing.octave", false], [211, "module-sympy.printing.precedence", false], [211, "module-sympy.printing.pretty", false], [211, "module-sympy.printing.pretty.pretty", false], [211, "module-sympy.printing.pretty.pretty_symbology", false], [211, "module-sympy.printing.pretty.stringpict", false], [211, "module-sympy.printing.preview", false], [211, "module-sympy.printing.printer", false], [211, "module-sympy.printing.pycode", false], [211, "module-sympy.printing.python", false], [211, "module-sympy.printing.rcode", false], [211, "module-sympy.printing.repr", false], [211, "module-sympy.printing.rust", false], [211, "module-sympy.printing.smtlib", false], [211, "module-sympy.printing.str", false], [211, "module-sympy.printing.tree", false], [219, "module-sympy.sets.conditionset", false], [219, "module-sympy.sets.fancysets", false], [219, "module-sympy.sets.powerset", false], [219, "module-sympy.sets.sets", false], [221, "module-sympy.simplify.hyperexpand_doc", false], [223, "module-sympy.simplify.combsimp", false], [223, "module-sympy.simplify.cse_main", false], [223, "module-sympy.simplify.epathtools", false], [223, "module-sympy.simplify.hyperexpand", false], [223, "module-sympy.simplify.powsimp", false], [223, "module-sympy.simplify.radsimp", false], [223, "module-sympy.simplify.ratsimp", false], [223, "module-sympy.simplify.sqrtdenest", false], [223, "module-sympy.simplify.trigsimp", false], [226, "module-sympy.solvers.inequalities", false], [227, "module-sympy.solvers.ode", false], [227, "module-sympy.solvers.ode.ode", false], [228, "module-sympy.solvers.pde", false], [229, "module-sympy.solvers", false], [229, "module-sympy.solvers.recurr", false], [230, "module-sympy.solvers.solveset", false], [231, "module-sympy.stats", false], [231, "module-sympy.stats.crv", false], [231, "module-sympy.stats.crv_types", false], [231, "module-sympy.stats.frv", false], [231, "module-sympy.stats.frv_types", false], [231, "module-sympy.stats.rv", false], [232, "module-sympy.tensor.array", false], [233, "module-sympy.tensor.array.expressions", false], [234, "module-sympy.tensor", false], [235, "module-sympy.tensor.index_methods", false], [236, "module-sympy.tensor.indexed", false], [237, "module-sympy.tensor.tensor", false], [238, "module-sympy.tensor.toperators", false], [239, "module-sympy.testing", false], [240, "module-sympy.testing.pytest", false], [241, "module-sympy.testing.randtest", false], [242, "module-sympy.testing.runtests", false], [243, "module-sympy.utilities.autowrap", false], [244, "module-sympy.utilities.codegen", false], [245, "module-sympy.utilities.decorator", false], [246, "module-sympy.utilities.enumerative", false], [247, "module-sympy.utilities.exceptions", false], [248, "module-sympy.utilities", false], [249, "module-sympy.utilities.iterables", false], [250, "module-sympy.utilities.lambdify", false], [251, "module-sympy.utilities.memoization", false], [252, "module-sympy.utilities.misc", false], [253, "module-sympy.utilities.pkgdata", false], [254, "module-sympy.utilities.source", false], [255, "module-sympy.utilities.timeutils", false], [264, "module-sympy.vector", false], [273, "module-sympy.physics", false]], "module (class in sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.Module", false]], "module (class in sympy.polys.agca.modules)": [[198, "sympy.polys.agca.modules.Module", false]], "module (class in sympy.polys.numberfields.modules)": [[206, "sympy.polys.numberfields.modules.Module", false]], "module_quotient() (sympy.polys.agca.modules.submodule method)": [[198, "sympy.polys.agca.modules.SubModule.module_quotient", false]], "moduleelement (class in sympy.polys.numberfields.modules)": [[206, "sympy.polys.numberfields.modules.ModuleElement", false]], "moduleendomorphism (class in sympy.polys.numberfields.modules)": [[206, "sympy.polys.numberfields.modules.ModuleEndomorphism", false]], "modulehomomorphism (class in sympy.polys.agca.homomorphisms)": [[198, "sympy.polys.agca.homomorphisms.ModuleHomomorphism", false]], "modulehomomorphism (class in sympy.polys.numberfields.modules)": [[206, "sympy.polys.numberfields.modules.ModuleHomomorphism", false]], "moment (class in sympy.stats)": [[231, "sympy.stats.Moment", false]], "moment() (in module sympy.stats)": [[231, "sympy.stats.moment", false]], "moment_load_vector (sympy.physics.continuum_mechanics.beam.beam3d property)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.moment_load_vector", false]], "momentum (sympy.physics.quantum.cartesian.pxbra property)": [[154, "sympy.physics.quantum.cartesian.PxBra.momentum", false]], "momentum (sympy.physics.quantum.cartesian.pxket property)": [[154, "sympy.physics.quantum.cartesian.PxKet.momentum", false]], "monic() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.monic", false]], "monic() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.monic", false]], "monic() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.monic", false]], "monic() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.monic", false]], "monogenicfiniteextension (class in sympy.polys.agca.extensions)": [[198, "sympy.polys.agca.extensions.MonogenicFiniteExtension", false]], "monomial (class in sympy.polys.monomials)": [[207, "sympy.polys.monomials.Monomial", false]], "monomial_basis() (sympy.polys.rings.polyring method)": [[202, "sympy.polys.rings.PolyRing.monomial_basis", false]], "monomial_count() (in module sympy.polys.monomials)": [[207, "sympy.polys.monomials.monomial_count", false]], "monomialorder (class in sympy.polys.orderings)": [[207, "sympy.polys.orderings.MonomialOrder", false]], "monoms() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.monoms", false]], "monoms() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.monoms", false]], "monoms() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.monoms", false]], "monotonicity_helper() (in module sympy.calculus.singularities)": [[41, "sympy.calculus.singularities.monotonicity_helper", false]], "morphism (class in sympy.categories)": [[42, "sympy.categories.Morphism", false]], "morphisms (sympy.categories.diagram_drawing.diagramgrid property)": [[42, "sympy.categories.diagram_drawing.DiagramGrid.morphisms", false]], "moyal() (in module sympy.stats)": [[231, "sympy.stats.Moyal", false]], "mpmath": [[11, "term-mpmath", true]], "mpmathprinter (class in sympy.printing.pycode)": [[211, "sympy.printing.pycode.MpmathPrinter", false]], "mr() (in module sympy.ntheory.primetest)": [[102, "sympy.ntheory.primetest.mr", false]], "mrv() (in module sympy.series.gruntz)": [[218, "sympy.series.gruntz.mrv", false]], "mrv_leadterm() (in module sympy.series.gruntz)": [[218, "sympy.series.gruntz.mrv_leadterm", false]], "mrv_max1() (in module sympy.series.gruntz)": [[218, "sympy.series.gruntz.mrv_max1", false]], "mrv_max3() (in module sympy.series.gruntz)": [[218, "sympy.series.gruntz.mrv_max3", false]], "msigma() (in module sympy.physics.matrices)": [[115, "sympy.physics.matrices.msigma", false]], "msubs() (in module sympy.physics.mechanics)": [[118, "sympy.physics.mechanics.msubs", false]], "mueller_matrix() (in module sympy.physics.optics.polarization)": [[148, "sympy.physics.optics.polarization.mueller_matrix", false]], "mul (class in sympy.core.mul)": [[62, "sympy.core.mul.Mul", false]], "mul() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.mul", false]], "mul() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.mul", false]], "mul() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.mul", false]], "mul() (sympy.polys.matrices.sdm.sdm method)": [[200, "sympy.polys.matrices.sdm.SDM.mul", false]], "mul() (sympy.polys.numberfields.modules.submodule method)": [[206, "sympy.polys.numberfields.modules.Submodule.mul", false]], "mul() (sympy.polys.polyclasses.dmf method)": [[202, "sympy.polys.polyclasses.DMF.mul", false]], "mul() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.mul", false]], "mul() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.mul", false]], "mul() (sympy.polys.rings.polyring method)": [[202, "sympy.polys.rings.PolyRing.mul", false]], "mul_ground() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.mul_ground", false]], "mul_ground() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.mul_ground", false]], "mul_inv() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.mul_inv", false]], "mul_xin() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.mul_xin", false]], "mult_tab() (sympy.polys.numberfields.modules.module method)": [[206, "sympy.polys.numberfields.modules.Module.mult_tab", false]], "multifactorial (class in sympy.functions.combinatorial.factorials)": [[67, "sympy.functions.combinatorial.factorials.MultiFactorial", false]], "multigamma (class in sympy.functions.special.gamma_functions)": [[70, "sympy.functions.special.gamma_functions.multigamma", false]], "multinomial() (in module sympy.stats)": [[231, "sympy.stats.Multinomial", false]], "multinomial_coefficients() (in module sympy.ntheory.multinomial)": [[102, "sympy.ntheory.multinomial.multinomial_coefficients", false]], "multinomial_coefficients_iterator() (in module sympy.ntheory.multinomial)": [[102, "sympy.ntheory.multinomial.multinomial_coefficients_iterator", false]], "multiplicity() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.multiplicity", false]], "multiplicity() (sympy.vector.implicitregion.implicitregion method)": [[256, "sympy.vector.implicitregion.ImplicitRegion.multiplicity", false]], "multiply() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.multiply", false]], "multiply_elementwise() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.multiply_elementwise", false]], "multiply_ideal() (sympy.polys.agca.modules.freemodule method)": [[198, "sympy.polys.agca.modules.FreeModule.multiply_ideal", false]], "multiply_ideal() (sympy.polys.agca.modules.module method)": [[198, "sympy.polys.agca.modules.Module.multiply_ideal", false]], "multiply_ideal() (sympy.polys.agca.modules.submodule method)": [[198, "sympy.polys.agca.modules.SubModule.multiply_ideal", false]], "multiset() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.multiset", false]], "multiset_combinations() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.multiset_combinations", false]], "multiset_derangements() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.multiset_derangements", false]], "multiset_partitions() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.multiset_partitions", false]], "multiset_partitions_taocp() (in module sympy.utilities.enumerative)": [[246, "sympy.utilities.enumerative.multiset_partitions_taocp", false]], "multiset_permutations() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.multiset_permutations", false]], "multisetpartitiontraverser (class in sympy.utilities.enumerative)": [[246, "sympy.utilities.enumerative.MultisetPartitionTraverser", false]], "multivariatebeta() (in module sympy.stats)": [[231, "sympy.stats.MultivariateBeta", false]], "multivariateewens() (in module sympy.stats)": [[231, "sympy.stats.MultivariateEwens", false]], "multivariatelaplace() (in module sympy.stats)": [[231, "sympy.stats.MultivariateLaplace", false]], "multivariatenormal() (in module sympy.stats)": [[231, "sympy.stats.MultivariateNormal", false]], "multivariatepolynomialerror (class in sympy.polys.polyerrors)": [[204, "sympy.polys.polyerrors.MultivariatePolynomialError", false]], "multivariatet() (in module sympy.stats)": [[231, "sympy.stats.MultivariateT", false]], "mutabledensematrix (class in sympy.matrices.dense)": [[94, "sympy.matrices.dense.MutableDenseMatrix", false]], "mutabledensendimarray (class in sympy.tensor.array)": [[232, "sympy.tensor.array.MutableDenseNDimArray", false]], "mutablesparsematrix (class in sympy.matrices.sparse)": [[100, "sympy.matrices.sparse.MutableSparseMatrix", false]], "mutablesparsendimarray (class in sympy.tensor.array)": [[232, "sympy.tensor.array.MutableSparseNDimArray", false]], "mx (class in sympy.physics.quantum.circuitplot)": [[156, "sympy.physics.quantum.circuitplot.Mx", false]], "mz (class in sympy.physics.quantum.circuitplot)": [[156, "sympy.physics.quantum.circuitplot.Mz", false]], "n (sympy.combinatorics.graycode.graycode property)": [[46, "sympy.combinatorics.graycode.GrayCode.n", false]], "n (sympy.physics.optics.waves.twave property)": [[150, "sympy.physics.optics.waves.TWave.n", false]], "n (sympy.physics.quantum.shor.cmod property)": [[172, "sympy.physics.quantum.shor.CMod.N", false]], "n (sympy.polys.numberfields.modules.module property)": [[206, "sympy.polys.numberfields.modules.Module.n", false]], "n (sympy.polys.numberfields.modules.moduleelement property)": [[206, "sympy.polys.numberfields.modules.ModuleElement.n", false]], "n (sympy.series.sequences.recursiveseq property)": [[217, "sympy.series.sequences.RecursiveSeq.n", false]], "n() (in module sympy.core.evalf)": [[62, "sympy.core.evalf.N", false]], "n() (sympy.core.evalf.evalfmixin method)": [[62, "sympy.core.evalf.EvalfMixin.n", false]], "n() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.n", false]], "n() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.n", false]], "n_order() (in module sympy.ntheory.residue_ntheory)": [[102, "sympy.ntheory.residue_ntheory.n_order", false]], "nakagami() (in module sympy.stats)": [[231, "sympy.stats.Nakagami", false]], "name (sympy.categories.category property)": [[42, "sympy.categories.Category.name", false]], "name (sympy.categories.namedmorphism property)": [[42, "sympy.categories.NamedMorphism.name", false]], "name (sympy.physics.mechanics.joint.joint property)": [[120, "sympy.physics.mechanics.joint.Joint.name", false]], "namedmorphism (class in sympy.categories)": [[42, "sympy.categories.NamedMorphism", false]], "nan (class in sympy.core.numbers)": [[62, "sympy.core.numbers.NaN", false]], "nand (class in sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.Nand", false]], "nargs (sympy.core.function.functionclass property)": [[62, "sympy.core.function.FunctionClass.nargs", false]], "native_coeffs() (sympy.core.numbers.algebraicnumber method)": [[62, "sympy.core.numbers.AlgebraicNumber.native_coeffs", false]], "naturals (class in sympy.sets.fancysets)": [[219, "sympy.sets.fancysets.Naturals", false]], "naturals0 (class in sympy.sets.fancysets)": [[219, "sympy.sets.fancysets.Naturals0", false]], "nc() (in module sympy.functions.combinatorial.numbers)": [[67, "sympy.functions.combinatorial.numbers.nC", false]], "ne (in module sympy.core.relational)": [[62, "sympy.core.relational.Ne", false]], "nearest_common_ancestor() (sympy.polys.numberfields.modules.module method)": [[206, "sympy.polys.numberfields.modules.Module.nearest_common_ancestor", false]], "necklaces() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.necklaces", false]], "neg() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.neg", false]], "neg() (sympy.polys.matrices.ddm.ddm method)": [[200, "sympy.polys.matrices.ddm.DDM.neg", false]], "neg() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.neg", false]], "neg() (sympy.polys.matrices.sdm.sdm method)": [[200, "sympy.polys.matrices.sdm.SDM.neg", false]], "neg() (sympy.polys.polyclasses.dmf method)": [[202, "sympy.polys.polyclasses.DMF.neg", false]], "neg() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.neg", false]], "neg() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.neg", false]], "negated (sympy.core.relational.relational property)": [[62, "sympy.core.relational.Relational.negated", false]], "negative": [[62, "term-negative", true]], "negativebinomial() (in module sympy.stats)": [[231, "sympy.stats.NegativeBinomial", false]], "negativeinfinity (class in sympy.core.numbers)": [[62, "sympy.core.numbers.NegativeInfinity", false]], "negativemultinomial() (in module sympy.stats)": [[231, "sympy.stats.NegativeMultinomial", false]], "negativeone (class in sympy.core.numbers)": [[62, "sympy.core.numbers.NegativeOne", false]], "negativepredicate (class in sympy.assumptions.predicates.order)": [[39, "sympy.assumptions.predicates.order.NegativePredicate", false]], "new() (sympy.polys.domains.gaussiandomains.gaussianelement class method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianElement.new", false]], "new() (sympy.polys.matrices.sdm.sdm class method)": [[200, "sympy.polys.matrices.sdm.SDM.new", false]], "new() (sympy.polys.polytools.poly class method)": [[207, "sympy.polys.polytools.Poly.new", false]], "new() (sympy.polys.rootoftools.rootsum class method)": [[207, "sympy.polys.rootoftools.RootSum.new", false]], "newtons_method() (in module sympy.codegen.algorithms)": [[43, "sympy.codegen.algorithms.newtons_method", false]], "newtons_method_function() (in module sympy.codegen.algorithms)": [[43, "sympy.codegen.algorithms.newtons_method_function", false]], "next() (sympy.combinatorics.graycode.graycode method)": [[46, "sympy.combinatorics.graycode.GrayCode.next", false]], "next() (sympy.combinatorics.prufer.prufer method)": [[56, "sympy.combinatorics.prufer.Prufer.next", false]], "next() (sympy.printing.pretty.stringpict.stringpict static method)": [[211, "sympy.printing.pretty.stringpict.stringPict.next", false]], "next_binary() (sympy.combinatorics.subsets.subset method)": [[57, "sympy.combinatorics.subsets.Subset.next_binary", false]], "next_gray() (sympy.combinatorics.subsets.subset method)": [[57, "sympy.combinatorics.subsets.Subset.next_gray", false]], "next_lex() (sympy.combinatorics.partitions.integerpartition method)": [[51, "sympy.combinatorics.partitions.IntegerPartition.next_lex", false]], "next_lex() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.next_lex", false]], "next_lexicographic() (sympy.combinatorics.subsets.subset method)": [[57, "sympy.combinatorics.subsets.Subset.next_lexicographic", false]], "next_nonlex() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.next_nonlex", false]], "next_trotterjohnson() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.next_trotterjohnson", false]], "nextprime() (in module sympy.ntheory.generate)": [[102, "sympy.ntheory.generate.nextprime", false]], "nfloat() (in module sympy.core.function)": [[62, "sympy.core.function.nfloat", false]], "nine_point_circle (sympy.geometry.polygon.triangle property)": [[78, "sympy.geometry.polygon.Triangle.nine_point_circle", false]], "no (class in sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.NO", false]], "no_attrs_in_subclass (class in sympy.utilities.decorator)": [[245, "sympy.utilities.decorator.no_attrs_in_subclass", false]], "no_symmetry() (sympy.tensor.tensor.tensorsymmetry class method)": [[237, "sympy.tensor.tensor.TensorSymmetry.no_symmetry", false]], "nocache_fail() (in module sympy.testing.pytest)": [[240, "sympy.testing.pytest.nocache_fail", false]], "node (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.Node", false]], "node_labels (sympy.physics.continuum_mechanics.truss.truss property)": [[108, "sympy.physics.continuum_mechanics.truss.Truss.node_labels", false]], "node_positions (sympy.physics.continuum_mechanics.truss.truss property)": [[108, "sympy.physics.continuum_mechanics.truss.Truss.node_positions", false]], "nodes (sympy.combinatorics.prufer.prufer property)": [[56, "sympy.combinatorics.prufer.Prufer.nodes", false]], "nodes (sympy.physics.continuum_mechanics.truss.truss property)": [[108, "sympy.physics.continuum_mechanics.truss.Truss.nodes", false]], "nonelementaryintegral (class in sympy.integrals.risch)": [[89, "sympy.integrals.risch.NonElementaryIntegral", false]], "nonetoken (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.NoneToken", false]], "nonlinsolve() (in module sympy.solvers.solveset)": [[230, "sympy.solvers.solveset.nonlinsolve", false]], "nonnegative": [[62, "term-nonnegative", true]], "nonnegativepredicate (class in sympy.assumptions.predicates.order)": [[39, "sympy.assumptions.predicates.order.NonNegativePredicate", false]], "nonpositive": [[62, "term-nonpositive", true]], "nonpositivepredicate (class in sympy.assumptions.predicates.order)": [[39, "sympy.assumptions.predicates.order.NonPositivePredicate", false]], "nonsquarematrixerror (class in sympy.matrices.matrices)": [[98, "sympy.matrices.matrices.NonSquareMatrixError", false]], "nonzero": [[62, "term-nonzero", true]], "nonzeropredicate (class in sympy.assumptions.predicates.order)": [[39, "sympy.assumptions.predicates.order.NonZeroPredicate", false]], "nor (class in sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.Nor", false]], "norm (sympy.physics.quantum.state.wavefunction property)": [[174, "sympy.physics.quantum.state.Wavefunction.norm", false]], "norm() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.norm", false]], "norm() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.norm", false]], "norm() (sympy.polys.numberfields.modules.powerbasiselement method)": [[206, "sympy.polys.numberfields.modules.PowerBasisElement.norm", false]], "norm() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.norm", false]], "norm() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.norm", false]], "normal() (in module sympy.stats)": [[231, "sympy.stats.Normal", false]], "normal() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.normal", false]], "normal_closure() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.normal_closure", false]], "normal_lines() (sympy.geometry.ellipse.ellipse method)": [[72, "sympy.geometry.ellipse.Ellipse.normal_lines", false]], "normal_vector (sympy.geometry.plane.plane property)": [[76, "sympy.geometry.plane.Plane.normal_vector", false]], "normalgamma() (in module sympy.stats)": [[231, "sympy.stats.NormalGamma", false]], "normalize() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.normalize", false]], "normalize() (sympy.physics.quantum.state.wavefunction method)": [[174, "sympy.physics.quantum.state.Wavefunction.normalize", false]], "normalize() (sympy.physics.vector.vector.vector method)": [[186, "sympy.physics.vector.vector.Vector.normalize", false]], "normalize() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.normalize", false]], "normalize() (sympy.vector.vector.vector method)": [[256, "sympy.vector.vector.Vector.normalize", false]], "normalize_theta_set() (in module sympy.sets.fancysets)": [[219, "sympy.sets.fancysets.normalize_theta_set", false]], "normalized() (in module sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.normalized", false]], "normalized() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.normalized", false]], "normalpredicate (class in sympy.assumptions.predicates.matrices)": [[39, "sympy.assumptions.predicates.matrices.NormalPredicate", false]], "normalpspace (class in sympy.stats.crv_types)": [[231, "sympy.stats.crv_types.NormalPSpace", false]], "not (class in sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.Not", false]], "not_empty_in() (in module sympy.calculus.util)": [[41, "sympy.calculus.util.not_empty_in", false]], "not_point() (sympy.physics.quantum.circuitplot.circuitplot method)": [[156, "sympy.physics.quantum.circuitplot.CircuitPlot.not_point", false]], "notalgebraic (class in sympy.polys.polyerrors)": [[204, "sympy.polys.polyerrors.NotAlgebraic", false]], "notinvertible (class in sympy.polys.polyerrors)": [[204, "sympy.polys.polyerrors.NotInvertible", false]], "notiterable (class in sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.NotIterable", false]], "notreversible (class in sympy.polys.polyerrors)": [[204, "sympy.polys.polyerrors.NotReversible", false]], "np() (in module sympy.functions.combinatorial.numbers)": [[67, "sympy.functions.combinatorial.numbers.nP", false]], "npartitions() (in module sympy.ntheory.partitions_)": [[102, "sympy.ntheory.partitions_.npartitions", false]], "nqubits (sympy.physics.quantum.gate.cgate property)": [[160, "sympy.physics.quantum.gate.CGate.nqubits", false]], "nqubits (sympy.physics.quantum.gate.gate property)": [[160, "sympy.physics.quantum.gate.Gate.nqubits", false]], "nroots() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.nroots", false]], "nroots() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.nroots", false]], "nseries() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.nseries", false]], "nsimplify() (in module sympy.simplify.simplify)": [[223, "sympy.simplify.simplify.nsimplify", false]], "nsimplify() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.nsimplify", false]], "nsolve() (in module sympy.solvers.solvers)": [[229, "sympy.solvers.solvers.nsolve", false]], "nt() (in module sympy.functions.combinatorial.numbers)": [[67, "sympy.functions.combinatorial.numbers.nT", false]], "nth() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.nth", false]], "nth() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.nth", false]], "nth_power_roots_poly() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.nth_power_roots_poly", false]], "nth_power_roots_poly() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.nth_power_roots_poly", false]], "nthalgebraic (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.NthAlgebraic", false]], "nthlinearconstantcoeffhomogeneous (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.NthLinearConstantCoeffHomogeneous", false]], "nthlinearconstantcoeffundeterminedcoefficients (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.NthLinearConstantCoeffUndeterminedCoefficients", false]], "nthlinearconstantcoeffvariationofparameters (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.NthLinearConstantCoeffVariationOfParameters", false]], "nthlineareulereqhomogeneous (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.NthLinearEulerEqHomogeneous", false]], "nthlineareulereqnonhomogeneousundeterminedcoefficients (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.NthLinearEulerEqNonhomogeneousUndeterminedCoefficients", false]], "nthlineareulereqnonhomogeneousvariationofparameters (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.NthLinearEulerEqNonhomogeneousVariationOfParameters", false]], "nthorderreducible (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.NthOrderReducible", false]], "nthroot() (in module sympy.simplify.simplify)": [[223, "sympy.simplify.simplify.nthroot", false]], "nthroot_mod() (in module sympy.ntheory.residue_ntheory)": [[102, "sympy.ntheory.residue_ntheory.nthroot_mod", false]], "ntt() (in module sympy.discrete.transforms)": [[65, "sympy.discrete.transforms.ntt", false]], "nu (sympy.functions.special.hyper.meijerg property)": [[70, "sympy.functions.special.hyper.meijerg.nu", false]], "nullspace() (sympy.matrices.matrices.matrixsubspaces method)": [[98, "sympy.matrices.matrices.MatrixSubspaces.nullspace", false]], "nullspace() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.nullspace", false]], "nullspace() (sympy.polys.matrices.sdm.sdm method)": [[200, "sympy.polys.matrices.sdm.SDM.nullspace", false]], "num (sympy.physics.control.lti.transferfunction property)": [[112, "sympy.physics.control.lti.TransferFunction.num", false]], "num_inputs (sympy.physics.control.lti.mimoparallel property)": [[112, "sympy.physics.control.lti.MIMOParallel.num_inputs", false]], "num_inputs (sympy.physics.control.lti.mimoseries property)": [[112, "sympy.physics.control.lti.MIMOSeries.num_inputs", false]], "num_inputs (sympy.physics.control.lti.transferfunctionmatrix property)": [[112, "sympy.physics.control.lti.TransferFunctionMatrix.num_inputs", false]], "num_outputs (sympy.physics.control.lti.mimoparallel property)": [[112, "sympy.physics.control.lti.MIMOParallel.num_outputs", false]], "num_outputs (sympy.physics.control.lti.mimoseries property)": [[112, "sympy.physics.control.lti.MIMOSeries.num_outputs", false]], "num_outputs (sympy.physics.control.lti.transferfunctionmatrix property)": [[112, "sympy.physics.control.lti.TransferFunctionMatrix.num_outputs", false]], "number": [[11, "term-Number", true]], "number (class in sympy.core.numbers)": [[62, "sympy.core.numbers.Number", false]], "number_field (sympy.polys.numberfields.modules.module property)": [[206, "sympy.polys.numberfields.modules.Module.number_field", false]], "numbered_symbols() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.numbered_symbols", false]], "numberkind (in module sympy.core.kind)": [[62, "sympy.core.kind.NumberKind", false]], "numbersymbol (class in sympy.core.numbers)": [[62, "sympy.core.numbers.NumberSymbol", false]], "numer() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.numer", false]], "numer() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.numer", false]], "numer() (sympy.polys.domains.expressiondomain method)": [[202, "sympy.polys.domains.ExpressionDomain.numer", false]], "numer() (sympy.polys.domains.fractionfield method)": [[202, "sympy.polys.domains.FractionField.numer", false]], "numer() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianRationalField.numer", false]], "numer() (sympy.polys.domains.gmpyrationalfield method)": [[202, "sympy.polys.domains.GMPYRationalField.numer", false]], "numer() (sympy.polys.domains.rationalfield method)": [[202, "sympy.polys.domains.RationalField.numer", false]], "numer() (sympy.polys.domains.ring.ring method)": [[202, "sympy.polys.domains.ring.Ring.numer", false]], "numer() (sympy.polys.polyclasses.dmf method)": [[202, "sympy.polys.polyclasses.DMF.numer", false]], "numerator() (sympy.polys.numberfields.modules.powerbasiselement method)": [[206, "sympy.polys.numberfields.modules.PowerBasisElement.numerator", false]], "numeric": [[11, "term-Numeric", true]], "object (class in sympy.categories)": [[42, "sympy.categories.Object", false]], "objects (sympy.categories.category property)": [[42, "sympy.categories.Category.objects", false]], "objects (sympy.categories.diagram property)": [[42, "sympy.categories.Diagram.objects", false]], "octave_code() (in module sympy.printing.octave)": [[211, "sympy.printing.octave.octave_code", false]], "octavecodegen (class in sympy.utilities.codegen)": [[244, "sympy.utilities.codegen.OctaveCodeGen", false]], "octavecodeprinter (class in sympy.printing.octave)": [[211, "sympy.printing.octave.OctaveCodePrinter", false]], "odd": [[62, "term-odd", true]], "oddpredicate (class in sympy.assumptions.predicates.ntheory)": [[39, "sympy.assumptions.predicates.ntheory.OddPredicate", false]], "ode_1st_power_series() (in module sympy.solvers.ode.ode)": [[227, "sympy.solvers.ode.ode.ode_1st_power_series", false]], "ode_2nd_power_series_ordinary() (in module sympy.solvers.ode.ode)": [[227, "sympy.solvers.ode.ode.ode_2nd_power_series_ordinary", false]], "ode_2nd_power_series_regular() (in module sympy.solvers.ode.ode)": [[227, "sympy.solvers.ode.ode.ode_2nd_power_series_regular", false]], "ode_order() (in module sympy.solvers.deutils)": [[229, "sympy.solvers.deutils.ode_order", false]], "ode_sol_simplicity() (in module sympy.solvers.ode.ode)": [[227, "sympy.solvers.ode.ode.ode_sol_simplicity", false]], "odesimp() (in module sympy.solvers.ode.ode)": [[227, "sympy.solvers.ode.ode.odesimp", false]], "of_type() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.of_type", false]], "offset (sympy.tensor.indexed.indexedbase property)": [[236, "sympy.tensor.indexed.IndexedBase.offset", false]], "old_frac_field() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.old_frac_field", false]], "old_poly_ring() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.old_poly_ring", false]], "one (class in sympy.core.numbers)": [[62, "sympy.core.numbers.One", false]], "one (sympy.polys.domains.domain.domain attribute)": [[202, "sympy.polys.domains.domain.Domain.one", false]], "one (sympy.polys.polytools.poly property)": [[207, "sympy.polys.polytools.Poly.one", false]], "one() (sympy.polys.numberfields.modules.module method)": [[206, "sympy.polys.numberfields.modules.Module.one", false]], "one_qubit_box() (sympy.physics.quantum.circuitplot.circuitplot method)": [[156, "sympy.physics.quantum.circuitplot.CircuitPlot.one_qubit_box", false]], "onequbitgate (class in sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.OneQubitGate", false]], "ones() (in module sympy.matrices.dense)": [[98, "sympy.matrices.dense.ones", false]], "ones() (sympy.matrices.common.matrixcommon class method)": [[93, "sympy.matrices.common.MatrixCommon.ones", false]], "ones() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.ones", false]], "oo": [[11, "term-oo", true]], "open() (sympy.sets.sets.interval class method)": [[219, "sympy.sets.sets.Interval.open", false]], "operationnotsupported (class in sympy.polys.polyerrors)": [[204, "sympy.polys.polyerrors.OperationNotSupported", false]], "operator (class in sympy.physics.quantum.operator)": [[165, "sympy.physics.quantum.operator.Operator", false]], "operators (sympy.physics.quantum.state.statebase property)": [[174, "sympy.physics.quantum.state.StateBase.operators", false]], "operators_to_state() (in module sympy.physics.quantum.operatorset)": [[166, "sympy.physics.quantum.operatorset.operators_to_state", false]], "opt_cse() (in module sympy.simplify.cse_main)": [[223, "sympy.simplify.cse_main.opt_cse", false]], "optimization (class in sympy.codegen.rewriting)": [[43, "sympy.codegen.rewriting.Optimization", false]], "optimize() (in module sympy.codegen.rewriting)": [[43, "sympy.codegen.rewriting.optimize", false]], "optionerror (class in sympy.polys.polyerrors)": [[204, "sympy.polys.polyerrors.OptionError", false]], "options (class in sympy.polys.polyoptions)": [[204, "sympy.polys.polyoptions.Options", false]], "or (class in sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.Or", false]], "oraclegate (class in sympy.physics.quantum.grover)": [[161, "sympy.physics.quantum.grover.OracleGate", false]], "orbit() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.orbit", false]], "orbit_rep() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.orbit_rep", false]], "orbit_transversal() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.orbit_transversal", false]], "orbits() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.orbits", false]], "order (class in sympy.series.order)": [[218, "sympy.series.order.Order", false]], "order (sympy.functions.special.bessel.besselbase property)": [[70, "sympy.functions.special.bessel.BesselBase.order", false]], "order() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.order", false]], "order() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.order", false]], "ordered() (in module sympy.core.sorting)": [[62, "sympy.core.sorting.ordered", false]], "ordered_partitions() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.ordered_partitions", false]], "ordinal() (in module sympy.utilities.misc)": [[252, "sympy.utilities.misc.ordinal", false]], "orient() (sympy.physics.vector.frame.referenceframe method)": [[186, "sympy.physics.vector.frame.ReferenceFrame.orient", false]], "orient_axis() (sympy.physics.vector.frame.referenceframe method)": [[186, "sympy.physics.vector.frame.ReferenceFrame.orient_axis", false]], "orient_body_fixed() (sympy.physics.vector.frame.referenceframe method)": [[186, "sympy.physics.vector.frame.ReferenceFrame.orient_body_fixed", false]], "orient_explicit() (sympy.physics.vector.frame.referenceframe method)": [[186, "sympy.physics.vector.frame.ReferenceFrame.orient_explicit", false]], "orient_new() (sympy.vector.coordsysrect.coordsys3d method)": [[256, "sympy.vector.coordsysrect.CoordSys3D.orient_new", false]], "orient_new_axis() (sympy.vector.coordsysrect.coordsys3d method)": [[256, "sympy.vector.coordsysrect.CoordSys3D.orient_new_axis", false]], "orient_new_body() (sympy.vector.coordsysrect.coordsys3d method)": [[256, "sympy.vector.coordsysrect.CoordSys3D.orient_new_body", false]], "orient_new_quaternion() (sympy.vector.coordsysrect.coordsys3d method)": [[256, "sympy.vector.coordsysrect.CoordSys3D.orient_new_quaternion", false]], "orient_new_space() (sympy.vector.coordsysrect.coordsys3d method)": [[256, "sympy.vector.coordsysrect.CoordSys3D.orient_new_space", false]], "orient_quaternion() (sympy.physics.vector.frame.referenceframe method)": [[186, "sympy.physics.vector.frame.ReferenceFrame.orient_quaternion", false]], "orient_space_fixed() (sympy.physics.vector.frame.referenceframe method)": [[186, "sympy.physics.vector.frame.ReferenceFrame.orient_space_fixed", false]], "orienter (class in sympy.vector.orienters)": [[258, "sympy.vector.orienters.Orienter", false]], "orientnew() (sympy.physics.vector.frame.referenceframe method)": [[186, "sympy.physics.vector.frame.ReferenceFrame.orientnew", false]], "orig_ext (sympy.polys.domains.algebraicfield attribute)": [[202, "sympy.polys.domains.AlgebraicField.orig_ext", false]], "origin (sympy.geometry.point.point property)": [[77, "sympy.geometry.point.Point.origin", false]], "orthocenter (sympy.geometry.polygon.triangle property)": [[78, "sympy.geometry.polygon.Triangle.orthocenter", false]], "orthogonal() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.orthogonal", false]], "orthogonal_direction (sympy.geometry.point.point property)": [[77, "sympy.geometry.point.Point.orthogonal_direction", false]], "orthogonalbra (class in sympy.physics.quantum.state)": [[174, "sympy.physics.quantum.state.OrthogonalBra", false]], "orthogonalize() (sympy.matrices.matrices.matrixsubspaces class method)": [[98, "sympy.matrices.matrices.MatrixSubspaces.orthogonalize", false]], "orthogonalket (class in sympy.physics.quantum.state)": [[174, "sympy.physics.quantum.state.OrthogonalKet", false]], "orthogonalpredicate (class in sympy.assumptions.predicates.matrices)": [[39, "sympy.assumptions.predicates.matrices.OrthogonalPredicate", false]], "orthogonalstate (class in sympy.physics.quantum.state)": [[174, "sympy.physics.quantum.state.OrthogonalState", false]], "outer() (in module sympy.physics.vector.functions)": [[188, "sympy.physics.vector.functions.outer", false]], "outer() (sympy.physics.vector.vector.vector method)": [[186, "sympy.physics.vector.vector.Vector.outer", false]], "outer() (sympy.vector.vector.vector method)": [[256, "sympy.vector.vector.Vector.outer", false]], "outerproduct (class in sympy.physics.quantum.operator)": [[165, "sympy.physics.quantum.operator.OuterProduct", false]], "outputargument (class in sympy.utilities.codegen)": [[244, "sympy.utilities.codegen.OutputArgument", false]], "over_power_basis() (sympy.polys.numberfields.modules.moduleelement method)": [[206, "sympy.polys.numberfields.modules.ModuleElement.over_power_basis", false]], "p() (in module sympy.stats)": [[231, "sympy.stats.P", false]], "p1 (sympy.geometry.line.linearentity property)": [[75, "sympy.geometry.line.LinearEntity.p1", false]], "p1 (sympy.geometry.plane.plane property)": [[76, "sympy.geometry.plane.Plane.p1", false]], "p2 (sympy.geometry.line.linearentity property)": [[75, "sympy.geometry.line.LinearEntity.p2", false]], "padded_key() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.padded_key", false]], "parallel (class in sympy.physics.control.lti)": [[112, "sympy.physics.control.lti.Parallel", false]], "parallel() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.parallel", false]], "parallel_axis() (sympy.physics.mechanics.body.body method)": [[117, "sympy.physics.mechanics.body.Body.parallel_axis", false]], "parallel_axis() (sympy.physics.mechanics.particle.particle method)": [[123, "sympy.physics.mechanics.particle.Particle.parallel_axis", false]], "parallel_axis() (sympy.physics.mechanics.rigidbody.rigidbody method)": [[123, "sympy.physics.mechanics.rigidbody.RigidBody.parallel_axis", false]], "parallel_line() (sympy.geometry.line.linearentity method)": [[75, "sympy.geometry.line.LinearEntity.parallel_line", false]], "parallel_plane() (sympy.geometry.plane.plane method)": [[76, "sympy.geometry.plane.Plane.parallel_plane", false]], "parallel_poly_from_expr() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.parallel_poly_from_expr", false]], "parameter (sympy.geometry.curve.curve property)": [[71, "sympy.geometry.curve.Curve.parameter", false]], "parameter_value() (sympy.geometry.entity.geometryentity method)": [[73, "sympy.geometry.entity.GeometryEntity.parameter_value", false]], "parameter_value() (sympy.geometry.plane.plane method)": [[76, "sympy.geometry.plane.Plane.parameter_value", false]], "parametric2dlineseries (class in sympy.plotting.plot)": [[197, "sympy.plotting.plot.Parametric2DLineSeries", false]], "parametric3dlineseries (class in sympy.plotting.plot)": [[197, "sympy.plotting.plot.Parametric3DLineSeries", false]], "parametricintegral (class in sympy.vector.integrals)": [[256, "sympy.vector.integrals.ParametricIntegral", false]], "parametricregion (class in sympy.vector.parametricregion)": [[256, "sympy.vector.parametricregion.ParametricRegion", false]], "parametricsurfaceseries (class in sympy.plotting.plot)": [[197, "sympy.plotting.plot.ParametricSurfaceSeries", false]], "parametrize_ternary_quadratic() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.parametrize_ternary_quadratic", false]], "parens() (sympy.printing.pretty.stringpict.stringpict method)": [[211, "sympy.printing.pretty.stringpict.stringPict.parens", false]], "parent (sympy.physics.mechanics.joint.joint property)": [[120, "sympy.physics.mechanics.joint.Joint.parent", false]], "parent (sympy.polys.numberfields.modules.module property)": [[206, "sympy.polys.numberfields.modules.Module.parent", false]], "parent() (sympy.polys.domains.domainelement.domainelement method)": [[202, "sympy.polys.domains.domainelement.DomainElement.parent", false]], "parent() (sympy.polys.domains.gaussiandomains.gaussianelement method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianElement.parent", false]], "parent_axis (sympy.physics.mechanics.joint.joint property)": [[120, "sympy.physics.mechanics.joint.Joint.parent_axis", false]], "parent_point (sympy.physics.mechanics.joint.joint property)": [[120, "sympy.physics.mechanics.joint.Joint.parent_point", false]], "parenthesize_super() (sympy.printing.latex.latexprinter method)": [[211, "sympy.printing.latex.LatexPrinter.parenthesize_super", false]], "pareto() (in module sympy.stats)": [[231, "sympy.stats.Pareto", false]], "pargs (sympy.functions.special.delta_functions.heaviside property)": [[70, "sympy.functions.special.delta_functions.Heaviside.pargs", false]], "parity() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.parity", false]], "parse_expr() (in module sympy.parsing.sympy_parser)": [[104, "sympy.parsing.sympy_parser.parse_expr", false]], "parse_latex() (in module sympy.parsing.latex)": [[104, "sympy.parsing.latex.parse_latex", false]], "parse_mathematica() (in module sympy.parsing.mathematica)": [[104, "sympy.parsing.mathematica.parse_mathematica", false]], "parse_maxima() (in module sympy.parsing.maxima)": [[104, "sympy.parsing.maxima.parse_maxima", false]], "partial_velocity() (in module sympy.physics.vector.functions)": [[190, "sympy.physics.vector.functions.partial_velocity", false]], "partial_velocity() (sympy.physics.vector.frame.referenceframe method)": [[186, "sympy.physics.vector.frame.ReferenceFrame.partial_velocity", false]], "partial_velocity() (sympy.physics.vector.point.point method)": [[190, "sympy.physics.vector.point.Point.partial_velocity", false]], "partialderivative (class in sympy.tensor.toperators)": [[238, "sympy.tensor.toperators.PartialDerivative", false]], "particle (class in sympy.physics.mechanics.particle)": [[123, "sympy.physics.mechanics.particle.Particle", false]], "partition (class in sympy.combinatorics.partitions)": [[51, "sympy.combinatorics.partitions.Partition", false]], "partition (class in sympy.functions.combinatorial.numbers)": [[67, "sympy.functions.combinatorial.numbers.partition", false]], "partition (sympy.combinatorics.partitions.partition property)": [[51, "sympy.combinatorics.partitions.Partition.partition", false]], "partition() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.partition", false]], "partitions() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.partitions", false]], "pat_matrix() (in module sympy.physics.matrices)": [[115, "sympy.physics.matrices.pat_matrix", false]], "patch (class in sympy.diffgeom)": [[64, "sympy.diffgeom.Patch", false]], "pde_1st_linear_constant_coeff() (in module sympy.solvers.pde)": [[228, "sympy.solvers.pde.pde_1st_linear_constant_coeff", false]], "pde_1st_linear_constant_coeff_homogeneous() (in module sympy.solvers.pde)": [[228, "sympy.solvers.pde.pde_1st_linear_constant_coeff_homogeneous", false]], "pde_1st_linear_variable_coeff() (in module sympy.solvers.pde)": [[228, "sympy.solvers.pde.pde_1st_linear_variable_coeff", false]], "pde_separate() (in module sympy.solvers.pde)": [[228, "sympy.solvers.pde.pde_separate", false]], "pde_separate_add() (in module sympy.solvers.pde)": [[228, "sympy.solvers.pde.pde_separate_add", false]], "pde_separate_mul() (in module sympy.solvers.pde)": [[228, "sympy.solvers.pde.pde_separate_mul", false]], "pdiv() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.pdiv", false]], "pdiv() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.pdiv", false]], "pdiv() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.pdiv", false]], "pdsolve() (in module sympy.solvers.pde)": [[228, "sympy.solvers.pde.pdsolve", false]], "pep 335": [[62, "index-0", false], [62, "index-1", false], [62, "index-2", false], [62, "index-3", false]], "per() (sympy.matrices.matrices.matrixdeterminant method)": [[98, "sympy.matrices.matrices.MatrixDeterminant.per", false]], "per() (sympy.polys.polyclasses.dmf method)": [[202, "sympy.polys.polyclasses.DMF.per", false]], "per() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.per", false]], "per() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.per", false]], "perfect_power() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.perfect_power", false]], "periapsis (sympy.geometry.ellipse.ellipse property)": [[72, "sympy.geometry.ellipse.Ellipse.periapsis", false]], "perimeter (sympy.geometry.polygon.polygon property)": [[78, "sympy.geometry.polygon.Polygon.perimeter", false]], "period_find() (in module sympy.physics.quantum.shor)": [[172, "sympy.physics.quantum.shor.period_find", false]], "periodic_argument (class in sympy.functions.elementary.complexes)": [[68, "sympy.functions.elementary.complexes.periodic_argument", false]], "periodicity() (in module sympy.calculus.util)": [[41, "sympy.calculus.util.periodicity", false]], "perm2tensor() (sympy.tensor.tensor.tensmul method)": [[237, "sympy.tensor.tensor.TensMul.perm2tensor", false]], "permutation (class in sympy.combinatorics.permutations)": [[54, "sympy.combinatorics.permutations.Permutation", false]], "permutationgroup (class in sympy.combinatorics.perm_groups)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup", false]], "permutationmatrix (class in sympy.matrices.expressions)": [[95, "sympy.matrices.expressions.PermutationMatrix", false]], "permutationoperator (class in sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.PermutationOperator", false]], "permute() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.permute", false]], "permute() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.permute", false]], "permute_cols() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.permute_cols", false]], "permute_rows() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.permute_rows", false]], "permute_signs() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.permute_signs", false]], "permutedims (class in sympy.tensor.array.expressions)": [[233, "sympy.tensor.array.expressions.PermuteDims", false]], "permutedims() (in module sympy.tensor.array)": [[232, "sympy.tensor.array.permutedims", false]], "perpendicular_bisector() (sympy.geometry.line.segment method)": [[75, "sympy.geometry.line.Segment.perpendicular_bisector", false]], "perpendicular_line() (sympy.geometry.line.linearentity method)": [[75, "sympy.geometry.line.LinearEntity.perpendicular_line", false]], "perpendicular_line() (sympy.geometry.line.linearentity2d method)": [[75, "sympy.geometry.line.LinearEntity2D.perpendicular_line", false]], "perpendicular_line() (sympy.geometry.plane.plane method)": [[76, "sympy.geometry.plane.Plane.perpendicular_line", false]], "perpendicular_plane() (sympy.geometry.plane.plane method)": [[76, "sympy.geometry.plane.Plane.perpendicular_plane", false]], "perpendicular_segment() (sympy.geometry.line.linearentity method)": [[75, "sympy.geometry.line.LinearEntity.perpendicular_segment", false]], "pexquo() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.pexquo", false]], "pexquo() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.pexquo", false]], "pexquo() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.pexquo", false]], "pgl2f5() (in module sympy.combinatorics.galois)": [[45, "sympy.combinatorics.galois.PGL2F5", false]], "pgroup (sympy.combinatorics.polyhedron.polyhedron property)": [[55, "sympy.combinatorics.polyhedron.Polyhedron.pgroup", false]], "phase (in module sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.Phase", false]], "phase (sympy.physics.optics.waves.twave property)": [[150, "sympy.physics.optics.waves.TWave.phase", false]], "phase_retarder() (in module sympy.physics.optics.polarization)": [[148, "sympy.physics.optics.polarization.phase_retarder", false]], "phasegate (class in sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.PhaseGate", false]], "pi (class in sympy.core.numbers)": [[62, "sympy.core.numbers.Pi", false]], "pi_hex_digits() (in module sympy.ntheory.bbp_pi)": [[102, "sympy.ntheory.bbp_pi.pi_hex_digits", false]], "piabbra (class in sympy.physics.quantum.piab)": [[167, "sympy.physics.quantum.piab.PIABBra", false]], "piabhamiltonian (class in sympy.physics.quantum.piab)": [[167, "sympy.physics.quantum.piab.PIABHamiltonian", false]], "piabket (class in sympy.physics.quantum.piab)": [[167, "sympy.physics.quantum.piab.PIABKet", false]], "piecewise (class in sympy.functions.elementary.piecewise)": [[68, "sympy.functions.elementary.piecewise.Piecewise", false]], "piecewise_exclusive() (in module sympy.functions.elementary.piecewise)": [[68, "sympy.functions.elementary.piecewise.piecewise_exclusive", false]], "piecewise_fold() (in module sympy.functions.elementary.piecewise)": [[68, "sympy.functions.elementary.piecewise.piecewise_fold", false]], "piecewise_integrate() (sympy.functions.elementary.piecewise.piecewise method)": [[68, "sympy.functions.elementary.piecewise.Piecewise.piecewise_integrate", false]], "pinjoint (class in sympy.physics.mechanics.joint)": [[120, "sympy.physics.mechanics.joint.PinJoint", false]], "pinv() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.pinv", false]], "pinv_solve() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.pinv_solve", false]], "planar_coordinates (sympy.physics.mechanics.joint.planarjoint property)": [[120, "sympy.physics.mechanics.joint.PlanarJoint.planar_coordinates", false]], "planar_speeds (sympy.physics.mechanics.joint.planarjoint property)": [[120, "sympy.physics.mechanics.joint.PlanarJoint.planar_speeds", false]], "planar_vectors (sympy.physics.mechanics.joint.planarjoint property)": [[120, "sympy.physics.mechanics.joint.PlanarJoint.planar_vectors", false]], "planarjoint (class in sympy.physics.mechanics.joint)": [[120, "sympy.physics.mechanics.joint.PlanarJoint", false]], "plane (class in sympy.geometry.plane)": [[76, "sympy.geometry.plane.Plane", false]], "plot (class in sympy.plotting.plot)": [[197, "sympy.plotting.plot.Plot", false]], "plot() (in module sympy.plotting.plot)": [[197, "sympy.plotting.plot.plot", false]], "plot3d() (in module sympy.plotting.plot)": [[197, "sympy.plotting.plot.plot3d", false]], "plot3d_parametric_line() (in module sympy.plotting.plot)": [[197, "sympy.plotting.plot.plot3d_parametric_line", false]], "plot3d_parametric_surface() (in module sympy.plotting.plot)": [[197, "sympy.plotting.plot.plot3d_parametric_surface", false]], "plot_bending_moment() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.plot_bending_moment", false]], "plot_bending_moment() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.plot_bending_moment", false]], "plot_deflection() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.plot_deflection", false]], "plot_deflection() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.plot_deflection", false]], "plot_gate() (sympy.physics.quantum.gate.cgate method)": [[160, "sympy.physics.quantum.gate.CGate.plot_gate", false]], "plot_ild_moment() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.plot_ild_moment", false]], "plot_ild_reactions() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.plot_ild_reactions", false]], "plot_ild_shear() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.plot_ild_shear", false]], "plot_implicit() (in module sympy.plotting.plot_implicit)": [[197, "sympy.plotting.plot_implicit.plot_implicit", false]], "plot_interval() (sympy.geometry.curve.curve method)": [[71, "sympy.geometry.curve.Curve.plot_interval", false]], "plot_interval() (sympy.geometry.ellipse.ellipse method)": [[72, "sympy.geometry.ellipse.Ellipse.plot_interval", false]], "plot_interval() (sympy.geometry.line.line method)": [[75, "sympy.geometry.line.Line.plot_interval", false]], "plot_interval() (sympy.geometry.line.ray method)": [[75, "sympy.geometry.line.Ray.plot_interval", false]], "plot_interval() (sympy.geometry.line.segment method)": [[75, "sympy.geometry.line.Segment.plot_interval", false]], "plot_interval() (sympy.geometry.polygon.polygon method)": [[78, "sympy.geometry.polygon.Polygon.plot_interval", false]], "plot_loading_results() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.plot_loading_results", false]], "plot_loading_results() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.plot_loading_results", false]], "plot_parametric() (in module sympy.plotting.plot)": [[197, "sympy.plotting.plot.plot_parametric", false]], "plot_shear_force() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.plot_shear_force", false]], "plot_shear_force() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.plot_shear_force", false]], "plot_shear_stress() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.plot_shear_stress", false]], "plot_shear_stress() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.plot_shear_stress", false]], "plot_slope() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.plot_slope", false]], "plot_slope() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.plot_slope", false]], "plotgrid (class in sympy.plotting.plot)": [[197, "sympy.plotting.plot.PlotGrid", false]], "point (class in sympy.diffgeom)": [[64, "sympy.diffgeom.Point", false]], "point (class in sympy.geometry.point)": [[77, "sympy.geometry.point.Point", false]], "point (class in sympy.physics.vector.point)": [[190, "sympy.physics.vector.point.Point", false]], "point (sympy.core.function.subs property)": [[62, "sympy.core.function.Subs.point", false]], "point (sympy.physics.mechanics.particle.particle property)": [[123, "sympy.physics.mechanics.particle.Particle.point", false]], "point() (sympy.diffgeom.coordsystem method)": [[64, "sympy.diffgeom.CoordSystem.point", false]], "point2d (class in sympy.geometry.point)": [[77, "sympy.geometry.point.Point2D", false]], "point3d (class in sympy.geometry.point)": [[77, "sympy.geometry.point.Point3D", false]], "point_cflexure() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.point_cflexure", false]], "point_to_coords() (sympy.diffgeom.coordsystem method)": [[64, "sympy.diffgeom.CoordSystem.point_to_coords", false]], "pointer (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.Pointer", false]], "points (sympy.geometry.line.linearentity property)": [[75, "sympy.geometry.line.LinearEntity.points", false]], "pointwise_stabilizer() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.pointwise_stabilizer", false]], "poisson() (in module sympy.stats)": [[231, "sympy.stats.Poisson", false]], "poissonprocess (class in sympy.stats)": [[231, "sympy.stats.PoissonProcess", false]], "polar_lift (class in sympy.functions.elementary.complexes)": [[68, "sympy.functions.elementary.complexes.polar_lift", false]], "polar_moment() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.polar_moment", false]], "polar_second_moment_of_area() (sympy.geometry.ellipse.ellipse method)": [[72, "sympy.geometry.ellipse.Ellipse.polar_second_moment_of_area", false]], "polar_second_moment_of_area() (sympy.geometry.polygon.polygon method)": [[78, "sympy.geometry.polygon.Polygon.polar_second_moment_of_area", false]], "polarcomplexregion (class in sympy.sets.fancysets)": [[219, "sympy.sets.fancysets.PolarComplexRegion", false]], "polarizing_beam_splitter() (in module sympy.physics.optics.polarization)": [[148, "sympy.physics.optics.polarization.polarizing_beam_splitter", false]], "pole_zero_numerical_data() (sympy.physics.control.control_plots method)": [[110, "sympy.physics.control.control_plots.pole_zero_numerical_data", false]], "pole_zero_plot() (sympy.physics.control.control_plots method)": [[110, "sympy.physics.control.control_plots.pole_zero_plot", false]], "poleerror (class in sympy.core.function)": [[62, "sympy.core.function.PoleError", false]], "poles() (sympy.physics.control.lti.transferfunction method)": [[112, "sympy.physics.control.lti.TransferFunction.poles", false]], "polificationfailed (class in sympy.polys.polyerrors)": [[204, "sympy.polys.polyerrors.PolificationFailed", false]], "pollard_pm1() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.pollard_pm1", false]], "pollard_rho() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.pollard_rho", false]], "poly (class in sympy.polys.polytools)": [[207, "sympy.polys.polytools.Poly", false]], "poly() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.poly", false]], "poly() (sympy.polys.numberfields.modules.powerbasiselement method)": [[206, "sympy.polys.numberfields.modules.PowerBasisElement.poly", false]], "poly_from_expr() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.poly_from_expr", false]], "poly_ring() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.poly_ring", false]], "poly_unify() (sympy.polys.polyclasses.dmf method)": [[202, "sympy.polys.polyclasses.DMF.poly_unify", false]], "polycyclic_group() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.polycyclic_group", false]], "polyelement (class in sympy.polys.rings)": [[202, "sympy.polys.rings.PolyElement", false]], "polygamma (class in sympy.functions.special.gamma_functions)": [[70, "sympy.functions.special.gamma_functions.polygamma", false]], "polygon (class in sympy.geometry.polygon)": [[78, "sympy.geometry.polygon.Polygon", false]], "polyhedron (class in sympy.combinatorics.polyhedron)": [[55, "sympy.combinatorics.polyhedron.Polyhedron", false]], "polylog (class in sympy.functions.special.zeta_functions)": [[70, "sympy.functions.special.zeta_functions.polylog", false]], "polynomial() (sympy.series.formal.formalpowerseries method)": [[213, "sympy.series.formal.FormalPowerSeries.polynomial", false]], "polynomialerror (class in sympy.polys.polyerrors)": [[204, "sympy.polys.polyerrors.PolynomialError", false]], "polynomialring (class in sympy.polys.domains)": [[202, "sympy.polys.domains.PolynomialRing", false]], "polyring (class in sympy.polys.rings)": [[202, "sympy.polys.rings.PolyRing", false]], "polys": [[11, "term-Polys", true]], "polytope_integrate() (in module sympy.integrals.intpoly)": [[89, "sympy.integrals.intpoly.polytope_integrate", false]], "pos() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.pos", false]], "pos_from() (sympy.physics.vector.point.point method)": [[190, "sympy.physics.vector.point.Point.pos_from", false]], "posform() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.POSform", false]], "posify() (in module sympy.simplify.simplify)": [[223, "sympy.simplify.simplify.posify", false]], "position (sympy.physics.quantum.cartesian.xbra property)": [[154, "sympy.physics.quantum.cartesian.XBra.position", false]], "position (sympy.physics.quantum.cartesian.xket property)": [[154, "sympy.physics.quantum.cartesian.XKet.position", false]], "position_wrt() (sympy.vector.coordsysrect.coordsys3d method)": [[256, "sympy.vector.coordsysrect.CoordSys3D.position_wrt", false]], "position_x (sympy.physics.quantum.cartesian.positionstate3d property)": [[154, "sympy.physics.quantum.cartesian.PositionState3D.position_x", false]], "position_y (sympy.physics.quantum.cartesian.positionstate3d property)": [[154, "sympy.physics.quantum.cartesian.PositionState3D.position_y", false]], "position_z (sympy.physics.quantum.cartesian.positionstate3d property)": [[154, "sympy.physics.quantum.cartesian.PositionState3D.position_z", false]], "positionbra3d (class in sympy.physics.quantum.cartesian)": [[154, "sympy.physics.quantum.cartesian.PositionBra3D", false]], "positionket3d (class in sympy.physics.quantum.cartesian)": [[154, "sympy.physics.quantum.cartesian.PositionKet3D", false]], "positionstate3d (class in sympy.physics.quantum.cartesian)": [[154, "sympy.physics.quantum.cartesian.PositionState3D", false]], "positive": [[62, "term-positive", true]], "positive_roots() (sympy.liealgebras.type_a.typea method)": [[91, "sympy.liealgebras.type_a.TypeA.positive_roots", false]], "positive_roots() (sympy.liealgebras.type_b.typeb method)": [[91, "sympy.liealgebras.type_b.TypeB.positive_roots", false]], "positive_roots() (sympy.liealgebras.type_c.typec method)": [[91, "sympy.liealgebras.type_c.TypeC.positive_roots", false]], "positive_roots() (sympy.liealgebras.type_d.typed method)": [[91, "sympy.liealgebras.type_d.TypeD.positive_roots", false]], "positive_roots() (sympy.liealgebras.type_e.typee method)": [[91, "sympy.liealgebras.type_e.TypeE.positive_roots", false]], "positive_roots() (sympy.liealgebras.type_f.typef method)": [[91, "sympy.liealgebras.type_f.TypeF.positive_roots", false]], "positive_roots() (sympy.liealgebras.type_g.typeg method)": [[91, "sympy.liealgebras.type_g.TypeG.positive_roots", false]], "positivedefinitepredicate (class in sympy.assumptions.predicates.matrices)": [[39, "sympy.assumptions.predicates.matrices.PositiveDefinitePredicate", false]], "positivepredicate (class in sympy.assumptions.predicates.order)": [[39, "sympy.assumptions.predicates.order.PositivePredicate", false]], "postdecrement (class in sympy.codegen.cnodes)": [[43, "sympy.codegen.cnodes.PostDecrement", false]], "postfixes() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.postfixes", false]], "postincrement (class in sympy.codegen.cnodes)": [[43, "sympy.codegen.cnodes.PostIncrement", false]], "postorder_traversal() (in module sympy.core.traversal)": [[62, "sympy.core.traversal.postorder_traversal", false]], "potential_energy (sympy.physics.mechanics.particle.particle property)": [[123, "sympy.physics.mechanics.particle.Particle.potential_energy", false]], "potential_energy (sympy.physics.mechanics.rigidbody.rigidbody property)": [[123, "sympy.physics.mechanics.rigidbody.RigidBody.potential_energy", false]], "potential_energy() (in module sympy.physics.mechanics.functions)": [[123, "sympy.physics.mechanics.functions.potential_energy", false]], "pow (class in sympy.core.power)": [[62, "sympy.core.power.Pow", false]], "pow() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.pow", false]], "pow() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.pow", false]], "pow() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.pow", false]], "pow() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.pow", false]], "pow() (sympy.polys.polyclasses.anp method)": [[202, "sympy.polys.polyclasses.ANP.pow", false]], "pow() (sympy.polys.polyclasses.dmf method)": [[202, "sympy.polys.polyclasses.DMF.pow", false]], "pow() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.pow", false]], "pow() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.pow", false]], "pow_cos_sin() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.pow_cos_sin", false]], "pow_xin() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.pow_xin", false]], "powdenest() (in module sympy.simplify.powsimp)": [[223, "sympy.simplify.powsimp.powdenest", false]], "power_basis_ancestor() (sympy.polys.numberfields.modules.module method)": [[206, "sympy.polys.numberfields.modules.Module.power_basis_ancestor", false]], "power_representation() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.power_representation", false]], "powerbasis (class in sympy.polys.numberfields.modules)": [[206, "sympy.polys.numberfields.modules.PowerBasis", false]], "powerbasiselement (class in sympy.polys.numberfields.modules)": [[206, "sympy.polys.numberfields.modules.PowerBasisElement", false]], "powerfunction() (in module sympy.stats)": [[231, "sympy.stats.PowerFunction", false]], "powerset (class in sympy.sets.powerset)": [[219, "sympy.sets.powerset.PowerSet", false]], "powerset() (sympy.sets.sets.set method)": [[219, "sympy.sets.sets.Set.powerset", false]], "powsimp() (in module sympy.simplify.powsimp)": [[223, "sympy.simplify.powsimp.powsimp", false]], "powsimp() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.powsimp", false]], "pprint_nodes() (in module sympy.printing.tree)": [[211, "sympy.printing.tree.pprint_nodes", false]], "pqa() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.PQa", false]], "pquo() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.pquo", false]], "pquo() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.pquo", false]], "pquo() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.pquo", false]], "precedence (in module sympy.printing.precedence)": [[211, "sympy.printing.precedence.PRECEDENCE", false]], "precedence() (in module sympy.printing.precedence)": [[211, "sympy.printing.precedence.precedence", false]], "precedence_functions (in module sympy.printing.precedence)": [[211, "sympy.printing.precedence.PRECEDENCE_FUNCTIONS", false]], "precedence_values (in module sympy.printing.precedence)": [[211, "sympy.printing.precedence.PRECEDENCE_VALUES", false]], "precisionexhausted (class in sympy.core.evalf)": [[62, "sympy.core.evalf.PrecisionExhausted", false]], "predecrement (class in sympy.codegen.cnodes)": [[43, "sympy.codegen.cnodes.PreDecrement", false]], "predicate (class in sympy.assumptions.assume)": [[37, "sympy.assumptions.assume.Predicate", false]], "preferred_index (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[70, "sympy.functions.special.tensor_functions.KroneckerDelta.preferred_index", false]], "preferred_index (sympy.physics.secondquant.kroneckerdelta property)": [[176, "sympy.physics.secondquant.KroneckerDelta.preferred_index", false]], "prefix (class in sympy.physics.units.prefixes)": [[182, "sympy.physics.units.prefixes.Prefix", false]], "prefixes() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.prefixes", false]], "preincrement (class in sympy.codegen.cnodes)": [[43, "sympy.codegen.cnodes.PreIncrement", false]], "prem() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.prem", false]], "prem() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.prem", false]], "prem() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.prem", false]], "premises (sympy.categories.diagram property)": [[42, "sympy.categories.Diagram.premises", false]], "preorder_traversal() (in module sympy.core.traversal)": [[62, "sympy.core.traversal.preorder_traversal", false]], "presentation() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.presentation", false]], "pretty() (in module sympy.printing.pretty.pretty)": [[211, "sympy.printing.pretty.pretty.pretty", false]], "pretty_atom() (in module sympy.printing.pretty.pretty_symbology)": [[211, "sympy.printing.pretty.pretty_symbology.pretty_atom", false]], "pretty_print() (in module sympy.printing.pretty.pretty)": [[211, "sympy.printing.pretty.pretty.pretty_print", false]], "pretty_symbol() (in module sympy.printing.pretty.pretty_symbology)": [[211, "sympy.printing.pretty.pretty_symbology.pretty_symbol", false]], "pretty_try_use_unicode() (in module sympy.printing.pretty.pretty_symbology)": [[211, "sympy.printing.pretty.pretty_symbology.pretty_try_use_unicode", false]], "pretty_use_unicode() (in module sympy.printing.pretty.pretty_symbology)": [[211, "sympy.printing.pretty.pretty_symbology.pretty_use_unicode", false]], "prettyform (class in sympy.printing.pretty.stringpict)": [[211, "sympy.printing.pretty.stringpict.prettyForm", false]], "prettyprinter (class in sympy.printing.pretty.pretty)": [[211, "sympy.printing.pretty.pretty.PrettyPrinter", false]], "prev() (sympy.combinatorics.prufer.prufer method)": [[56, "sympy.combinatorics.prufer.Prufer.prev", false]], "prev_binary() (sympy.combinatorics.subsets.subset method)": [[57, "sympy.combinatorics.subsets.Subset.prev_binary", false]], "prev_gray() (sympy.combinatorics.subsets.subset method)": [[57, "sympy.combinatorics.subsets.Subset.prev_gray", false]], "prev_lex() (sympy.combinatorics.partitions.integerpartition method)": [[51, "sympy.combinatorics.partitions.IntegerPartition.prev_lex", false]], "prev_lexicographic() (sympy.combinatorics.subsets.subset method)": [[57, "sympy.combinatorics.subsets.Subset.prev_lexicographic", false]], "preview() (in module sympy.printing.preview)": [[211, "sympy.printing.preview.preview", false]], "preview_diagram() (in module sympy.categories.diagram_drawing)": [[42, "sympy.categories.diagram_drawing.preview_diagram", false]], "prevprime() (in module sympy.ntheory.generate)": [[102, "sympy.ntheory.generate.prevprime", false]], "prime": [[62, "term-prime", true]], "prime() (in module sympy.ntheory.generate)": [[102, "sympy.ntheory.generate.prime", false]], "prime_as_sum_of_two_squares() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.prime_as_sum_of_two_squares", false]], "prime_decomp() (in module sympy.polys.numberfields.primes)": [[206, "sympy.polys.numberfields.primes.prime_decomp", false]], "prime_valuation() (in module sympy.polys.numberfields.primes)": [[206, "sympy.polys.numberfields.primes.prime_valuation", false]], "primefactors() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.primefactors", false]], "primeideal (class in sympy.polys.numberfields.primes)": [[206, "sympy.polys.numberfields.primes.PrimeIdeal", false]], "primenu (class in sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.primenu", false]], "primeomega (class in sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.primeomega", false]], "primepi() (in module sympy.ntheory.generate)": [[102, "sympy.ntheory.generate.primepi", false]], "primepredicate (class in sympy.assumptions.predicates.ntheory)": [[39, "sympy.assumptions.predicates.ntheory.PrimePredicate", false]], "primerange() (in module sympy.ntheory.generate)": [[102, "sympy.ntheory.generate.primerange", false]], "primerange() (sympy.ntheory.generate.sieve method)": [[102, "sympy.ntheory.generate.Sieve.primerange", false]], "primes_above() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.primes_above", false]], "primitive() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.primitive", false]], "primitive() (sympy.core.add.add method)": [[62, "sympy.core.add.Add.primitive", false]], "primitive() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.primitive", false]], "primitive() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.primitive", false]], "primitive() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.primitive", false]], "primitive() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.primitive", false]], "primitive_element() (in module sympy.polys.numberfields.subfield)": [[206, "sympy.polys.numberfields.subfield.primitive_element", false]], "primitive_element() (sympy.core.numbers.algebraicnumber method)": [[62, "sympy.core.numbers.AlgebraicNumber.primitive_element", false]], "primitive_root() (in module sympy.ntheory.residue_ntheory)": [[102, "sympy.ntheory.residue_ntheory.primitive_root", false]], "primorial() (in module sympy.ntheory.generate)": [[102, "sympy.ntheory.generate.primorial", false]], "principal_branch (class in sympy.functions.elementary.complexes)": [[68, "sympy.functions.elementary.complexes.principal_branch", false]], "principal_value() (sympy.integrals.integrals.integral method)": [[89, "sympy.integrals.integrals.Integral.principal_value", false]], "print (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.Print", false]], "print_ccode() (in module sympy.printing.c)": [[211, "sympy.printing.c.print_ccode", false]], "print_dim_base() (sympy.physics.units.dimensions.dimensionsystem method)": [[178, "sympy.physics.units.dimensions.DimensionSystem.print_dim_base", false]], "print_fcode() (in module sympy.printing.fortran)": [[211, "sympy.printing.fortran.print_fcode", false]], "print_gtk() (in module sympy.printing.gtk)": [[211, "sympy.printing.gtk.print_gtk", false]], "print_latex() (in module sympy.printing.latex)": [[211, "sympy.printing.latex.print_latex", false]], "print_maple_code() (in module sympy.printing.maple)": [[211, "sympy.printing.maple.print_maple_code", false]], "print_mathml() (in module sympy.printing.mathml)": [[211, "sympy.printing.mathml.print_mathml", false]], "print_node() (in module sympy.printing.tree)": [[211, "sympy.printing.tree.print_node", false]], "print_nonzero() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.print_nonzero", false]], "print_rcode() (in module sympy.printing.rcode)": [[211, "sympy.printing.rcode.print_rcode", false]], "print_tree() (in module sympy.printing.tree)": [[211, "sympy.printing.tree.print_tree", false]], "printer (class in sympy.printing.printer)": [[211, "sympy.printing.printer.Printer", false]], "printing": [[11, "term-Printing", true]], "printmethod (sympy.printing.aesaracode.aesaraprinter attribute)": [[211, "sympy.printing.aesaracode.AesaraPrinter.printmethod", false]], "printmethod (sympy.printing.c.c89codeprinter attribute)": [[211, "sympy.printing.c.C89CodePrinter.printmethod", false]], "printmethod (sympy.printing.c.c99codeprinter attribute)": [[211, "sympy.printing.c.C99CodePrinter.printmethod", false]], "printmethod (sympy.printing.codeprinter.codeprinter attribute)": [[211, "sympy.printing.codeprinter.CodePrinter.printmethod", false]], "printmethod (sympy.printing.cxx.cxx11codeprinter attribute)": [[211, "sympy.printing.cxx.CXX11CodePrinter.printmethod", false]], "printmethod (sympy.printing.cxx.cxx98codeprinter attribute)": [[211, "sympy.printing.cxx.CXX98CodePrinter.printmethod", false]], "printmethod (sympy.printing.fortran.fcodeprinter attribute)": [[211, "sympy.printing.fortran.FCodePrinter.printmethod", false]], "printmethod (sympy.printing.jscode.javascriptcodeprinter attribute)": [[211, "sympy.printing.jscode.JavascriptCodePrinter.printmethod", false]], "printmethod (sympy.printing.julia.juliacodeprinter attribute)": [[211, "sympy.printing.julia.JuliaCodePrinter.printmethod", false]], "printmethod (sympy.printing.lambdarepr.lambdaprinter attribute)": [[211, "sympy.printing.lambdarepr.LambdaPrinter.printmethod", false]], "printmethod (sympy.printing.latex.latexprinter attribute)": [[211, "sympy.printing.latex.LatexPrinter.printmethod", false]], "printmethod (sympy.printing.maple.maplecodeprinter attribute)": [[211, "sympy.printing.maple.MapleCodePrinter.printmethod", false]], "printmethod (sympy.printing.mathematica.mcodeprinter attribute)": [[211, "sympy.printing.mathematica.MCodePrinter.printmethod", false]], "printmethod (sympy.printing.mathml.mathmlcontentprinter attribute)": [[211, "sympy.printing.mathml.MathMLContentPrinter.printmethod", false]], "printmethod (sympy.printing.mathml.mathmlpresentationprinter attribute)": [[211, "sympy.printing.mathml.MathMLPresentationPrinter.printmethod", false]], "printmethod (sympy.printing.octave.octavecodeprinter attribute)": [[211, "sympy.printing.octave.OctaveCodePrinter.printmethod", false]], "printmethod (sympy.printing.pretty.pretty.prettyprinter attribute)": [[211, "sympy.printing.pretty.pretty.PrettyPrinter.printmethod", false]], "printmethod (sympy.printing.printer.printer attribute)": [[211, "sympy.printing.printer.Printer.printmethod", false]], "printmethod (sympy.printing.rcode.rcodeprinter attribute)": [[211, "sympy.printing.rcode.RCodePrinter.printmethod", false]], "printmethod (sympy.printing.repr.reprprinter attribute)": [[211, "sympy.printing.repr.ReprPrinter.printmethod", false]], "printmethod (sympy.printing.rust.rustcodeprinter attribute)": [[211, "sympy.printing.rust.RustCodePrinter.printmethod", false]], "printmethod (sympy.printing.smtlib.smtlibprinter attribute)": [[211, "sympy.printing.smtlib.SMTLibPrinter.printmethod", false]], "printmethod (sympy.printing.str.strprinter attribute)": [[211, "sympy.printing.str.StrPrinter.printmethod", false]], "prismaticjoint (class in sympy.physics.mechanics.joint)": [[120, "sympy.physics.mechanics.joint.PrismaticJoint", false]], "prob() (sympy.physics.quantum.state.wavefunction method)": [[174, "sympy.physics.quantum.state.Wavefunction.prob", false]], "probability (class in sympy.stats)": [[231, "sympy.stats.Probability", false]], "probability() (sympy.stats.bernoulliprocess method)": [[231, "sympy.stats.BernoulliProcess.probability", false]], "process_series() (sympy.plotting.plot.matplotlibbackend method)": [[197, "sympy.plotting.plot.MatplotlibBackend.process_series", false]], "prod() (in module sympy.core.mul)": [[62, "sympy.core.mul.prod", false]], "product (class in sympy.concrete.products)": [[61, "sympy.concrete.products.Product", false]], "product() (in module sympy.concrete.products)": [[61, "sympy.concrete.products.product", false]], "product() (sympy.polys.agca.ideals.ideal method)": [[198, "sympy.polys.agca.ideals.Ideal.product", false]], "product() (sympy.series.formal.formalpowerseries method)": [[213, "sympy.series.formal.FormalPowerSeries.product", false]], "product_matrix_left (sympy.algebras.quaternion property)": [[35, "sympy.algebras.Quaternion.product_matrix_left", false]], "product_matrix_right (sympy.algebras.quaternion property)": [[35, "sympy.algebras.Quaternion.product_matrix_right", false]], "productdomain (class in sympy.stats.rv)": [[231, "sympy.stats.rv.ProductDomain", false]], "productpspace (class in sympy.stats.rv)": [[231, "sympy.stats.rv.ProductPSpace", false]], "productset (class in sympy.sets.sets)": [[219, "sympy.sets.sets.ProductSet", false]], "program (class in sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.Program", false]], "project() (sympy.geometry.point.point static method)": [[77, "sympy.geometry.point.Point.project", false]], "project() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.project", false]], "projection() (sympy.geometry.line.linearentity method)": [[75, "sympy.geometry.line.LinearEntity.projection", false]], "projection() (sympy.geometry.plane.plane method)": [[76, "sympy.geometry.plane.Plane.projection", false]], "projection() (sympy.vector.vector.vector method)": [[256, "sympy.vector.vector.Vector.projection", false]], "projection_line() (sympy.geometry.plane.plane method)": [[76, "sympy.geometry.plane.Plane.projection_line", false]], "proper_divisor_count() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.proper_divisor_count", false]], "proper_divisors() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.proper_divisors", false]], "prufer (class in sympy.combinatorics.prufer)": [[56, "sympy.combinatorics.prufer.Prufer", false]], "prufer_rank() (sympy.combinatorics.prufer.prufer method)": [[56, "sympy.combinatorics.prufer.Prufer.prufer_rank", false]], "prufer_repr (sympy.combinatorics.prufer.prufer property)": [[56, "sympy.combinatorics.prufer.Prufer.prufer_repr", false]], "psets (sympy.sets.fancysets.complexregion property)": [[219, "sympy.sets.fancysets.ComplexRegion.psets", false]], "psi_n() (in module sympy.physics.qho_1d)": [[152, "sympy.physics.qho_1d.psi_n", false]], "psi_nlm() (in module sympy.physics.hydrogen)": [[114, "sympy.physics.hydrogen.Psi_nlm", false]], "psl2f5() (in module sympy.combinatorics.galois)": [[45, "sympy.combinatorics.galois.PSL2F5", false]], "pspace (class in sympy.stats.rv)": [[231, "sympy.stats.rv.PSpace", false]], "pspace() (in module sympy.stats.rv)": [[231, "sympy.stats.rv.pspace", false]], "public() (in module sympy.utilities.decorator)": [[245, "sympy.utilities.decorator.public", false]], "purepoly (class in sympy.polys.polytools)": [[207, "sympy.polys.polytools.PurePoly", false]], "pxbra (class in sympy.physics.quantum.cartesian)": [[154, "sympy.physics.quantum.cartesian.PxBra", false]], "pxket (class in sympy.physics.quantum.cartesian)": [[154, "sympy.physics.quantum.cartesian.PxKet", false]], "pxop (class in sympy.physics.quantum.cartesian)": [[154, "sympy.physics.quantum.cartesian.PxOp", false]], "pycode() (in module sympy.printing.pycode)": [[211, "sympy.printing.pycode.pycode", false]], "pytestreporter (class in sympy.testing.runtests)": [[242, "sympy.testing.runtests.PyTestReporter", false]], "python enhancement proposals": [[62, "index-0", false], [62, "index-1", false], [62, "index-2", false], [62, "index-3", false]], "pythonfinitefield (class in sympy.polys.domains)": [[202, "sympy.polys.domains.PythonFiniteField", false]], "pythonintegerring (class in sympy.polys.domains)": [[202, "sympy.polys.domains.PythonIntegerRing", false]], "pythonmpq (class in sympy.external.pythonmpq)": [[202, "sympy.external.pythonmpq.PythonMPQ", false]], "pythonrationalfield (class in sympy.polys.domains)": [[202, "sympy.polys.domains.PythonRationalField", false]], "q (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[120, "sympy.physics.mechanics.jointsmethod.JointsMethod.q", false]], "q (sympy.physics.optics.gaussopt.beamparameter property)": [[145, "sympy.physics.optics.gaussopt.BeamParameter.q", false]], "qapply() (in module sympy.physics.quantum.qapply)": [[168, "sympy.physics.quantum.qapply.qapply", false]], "qft (class in sympy.physics.quantum.qft)": [[169, "sympy.physics.quantum.qft.QFT", false]], "qq_col (sympy.polys.numberfields.modules.moduleelement property)": [[206, "sympy.polys.numberfields.modules.ModuleElement.QQ_col", false]], "qq_matrix (sympy.polys.numberfields.modules.submodule property)": [[206, "sympy.polys.numberfields.modules.Submodule.QQ_matrix", false]], "qrdecomposition() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.QRdecomposition", false]], "qrsolve() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.QRsolve", false]], "qs() (in module sympy.ntheory.qs)": [[102, "sympy.ntheory.qs.qs", false]], "quadrant() (sympy.polys.domains.gaussiandomains.gaussianelement method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianElement.quadrant", false]], "quadratic_residues() (in module sympy.ntheory.residue_ntheory)": [[102, "sympy.ntheory.residue_ntheory.quadratic_residues", false]], "quadraticu() (in module sympy.stats)": [[231, "sympy.stats.QuadraticU", false]], "quantile() (in module sympy.stats)": [[231, "sympy.stats.quantile", false]], "quantity (class in sympy.physics.units.quantities)": [[183, "sympy.physics.units.quantities.Quantity", false]], "quarter_wave_retarder() (in module sympy.physics.optics.polarization)": [[148, "sympy.physics.optics.polarization.quarter_wave_retarder", false]], "quaternion (class in sympy.algebras)": [[35, "sympy.algebras.Quaternion", false]], "quaternionorienter (class in sympy.vector.orienters)": [[258, "sympy.vector.orienters.QuaternionOrienter", false]], "qubit (class in sympy.physics.quantum.qubit)": [[170, "sympy.physics.quantum.qubit.Qubit", false]], "qubit_to_matrix() (in module sympy.physics.quantum.qubit)": [[170, "sympy.physics.quantum.qubit.qubit_to_matrix", false]], "qubitbra (class in sympy.physics.quantum.qubit)": [[170, "sympy.physics.quantum.qubit.QubitBra", false]], "quo() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.quo", false]], "quo() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.quo", false]], "quo() (sympy.polys.domains.field.field method)": [[202, "sympy.polys.domains.field.Field.quo", false]], "quo() (sympy.polys.domains.gmpyrationalfield method)": [[202, "sympy.polys.domains.GMPYRationalField.quo", false]], "quo() (sympy.polys.domains.rationalfield method)": [[202, "sympy.polys.domains.RationalField.quo", false]], "quo() (sympy.polys.domains.ring.ring method)": [[202, "sympy.polys.domains.ring.Ring.quo", false]], "quo() (sympy.polys.polyclasses.dmf method)": [[202, "sympy.polys.polyclasses.DMF.quo", false]], "quo() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.quo", false]], "quo() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.quo", false]], "quo_ground() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.quo_ground", false]], "quo_ground() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.quo_ground", false]], "quotedstring (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.QuotedString", false]], "quotient() (sympy.polys.agca.ideals.ideal method)": [[198, "sympy.polys.agca.ideals.Ideal.quotient", false]], "quotient_codomain() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[198, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.quotient_codomain", false]], "quotient_domain() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[198, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.quotient_domain", false]], "quotient_hom() (sympy.polys.agca.modules.quotientmodule method)": [[198, "sympy.polys.agca.modules.QuotientModule.quotient_hom", false]], "quotient_hom() (sympy.polys.agca.modules.subquotientmodule method)": [[198, "sympy.polys.agca.modules.SubQuotientModule.quotient_hom", false]], "quotient_module() (sympy.polys.agca.modules.freemodule method)": [[198, "sympy.polys.agca.modules.FreeModule.quotient_module", false]], "quotient_module() (sympy.polys.agca.modules.module method)": [[198, "sympy.polys.agca.modules.Module.quotient_module", false]], "quotient_module() (sympy.polys.agca.modules.submodule method)": [[198, "sympy.polys.agca.modules.SubModule.quotient_module", false]], "quotient_ring() (sympy.polys.domains.ring.ring method)": [[202, "sympy.polys.domains.ring.Ring.quotient_ring", false]], "quotientmodule (class in sympy.polys.agca.modules)": [[198, "sympy.polys.agca.modules.QuotientModule", false]], "quotientmoduleelement (class in sympy.polys.agca.modules)": [[198, "sympy.polys.agca.modules.QuotientModuleElement", false]], "quotientring (class in sympy.polys.domains.quotientring)": [[202, "sympy.polys.domains.quotientring.QuotientRing", false]], "r_nl() (in module sympy.physics.hydrogen)": [[114, "sympy.physics.hydrogen.R_nl", false]], "r_nl() (in module sympy.physics.sho)": [[177, "sympy.physics.sho.R_nl", false]], "racah() (in module sympy.physics.wigner)": [[196, "sympy.physics.wigner.racah", false]], "rad_rationalize() (in module sympy.simplify.radsimp)": [[223, "sympy.simplify.radsimp.rad_rationalize", false]], "rademacher() (in module sympy.stats)": [[231, "sympy.stats.Rademacher", false]], "radical() (sympy.polys.agca.ideals.ideal method)": [[198, "sympy.polys.agca.ideals.Ideal.radical", false]], "radius (sympy.geometry.ellipse.circle property)": [[72, "sympy.geometry.ellipse.Circle.radius", false]], "radius (sympy.geometry.polygon.regularpolygon property)": [[78, "sympy.geometry.polygon.RegularPolygon.radius", false]], "radius (sympy.physics.optics.gaussopt.beamparameter property)": [[145, "sympy.physics.optics.gaussopt.BeamParameter.radius", false]], "radius_of_convergence (sympy.functions.special.hyper.hyper property)": [[70, "sympy.functions.special.hyper.hyper.radius_of_convergence", false]], "radsimp() (in module sympy.simplify.radsimp)": [[223, "sympy.simplify.radsimp.radsimp", false]], "radsimp() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.radsimp", false]], "raise_on_deprecated() (in module sympy.testing.runtests)": [[242, "sympy.testing.runtests.raise_on_deprecated", false]], "raisedcosine() (in module sympy.stats)": [[231, "sympy.stats.RaisedCosine", false]], "raises() (in module sympy.testing.pytest)": [[240, "sympy.testing.pytest.raises", false]], "ramp_response_numerical_data() (sympy.physics.control.control_plots method)": [[110, "sympy.physics.control.control_plots.ramp_response_numerical_data", false]], "ramp_response_plot() (sympy.physics.control.control_plots method)": [[110, "sympy.physics.control.control_plots.ramp_response_plot", false]], "randmatrix() (in module sympy.matrices.dense)": [[98, "sympy.matrices.dense.randMatrix", false]], "random() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.random", false]], "random() (sympy.combinatorics.permutations.permutation class method)": [[54, "sympy.combinatorics.permutations.Permutation.random", false]], "random_bitstring() (sympy.combinatorics.graycode method)": [[46, "sympy.combinatorics.graycode.random_bitstring", false]], "random_circuit() (in module sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.random_circuit", false]], "random_complex_number() (in module sympy.core.random)": [[62, "sympy.core.random.random_complex_number", false]], "random_derangement() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.random_derangement", false]], "random_integer_partition() (in module sympy.combinatorics.partitions)": [[51, "sympy.combinatorics.partitions.random_integer_partition", false]], "random_point() (sympy.geometry.ellipse.ellipse method)": [[72, "sympy.geometry.ellipse.Ellipse.random_point", false]], "random_point() (sympy.geometry.line.linearentity method)": [[75, "sympy.geometry.line.LinearEntity.random_point", false]], "random_point() (sympy.geometry.plane.plane method)": [[76, "sympy.geometry.plane.Plane.random_point", false]], "random_poly() (in module sympy.polys.specialpolys)": [[207, "sympy.polys.specialpolys.random_poly", false]], "random_pr() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.random_pr", false]], "random_stab() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.random_stab", false]], "random_symbols() (in module sympy.stats.rv)": [[231, "sympy.stats.rv.random_symbols", false]], "randomdomain (class in sympy.stats.rv)": [[231, "sympy.stats.rv.RandomDomain", false]], "randomsymbol (class in sympy.stats.rv)": [[231, "sympy.stats.rv.RandomSymbol", false]], "randprime() (in module sympy.ntheory.generate)": [[102, "sympy.ntheory.generate.randprime", false]], "range (class in sympy.sets.fancysets)": [[219, "sympy.sets.fancysets.Range", false]], "ranges (sympy.tensor.indexed.indexed property)": [[236, "sympy.tensor.indexed.Indexed.ranges", false]], "rank (sympy.combinatorics.graycode.graycode property)": [[46, "sympy.combinatorics.graycode.GrayCode.rank", false]], "rank (sympy.combinatorics.partitions.partition property)": [[51, "sympy.combinatorics.partitions.Partition.rank", false]], "rank (sympy.combinatorics.prufer.prufer property)": [[56, "sympy.combinatorics.prufer.Prufer.rank", false]], "rank (sympy.tensor.indexed.indexed property)": [[236, "sympy.tensor.indexed.Indexed.rank", false]], "rank() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.rank", false]], "rank() (sympy.liealgebras.cartan_type.standard_cartan method)": [[91, "sympy.liealgebras.cartan_type.Standard_Cartan.rank", false]], "rank() (sympy.matrices.matrices.matrixreductions method)": [[98, "sympy.matrices.matrices.MatrixReductions.rank", false]], "rank_binary (sympy.combinatorics.subsets.subset property)": [[57, "sympy.combinatorics.subsets.Subset.rank_binary", false]], "rank_decomposition() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.rank_decomposition", false]], "rank_gray (sympy.combinatorics.subsets.subset property)": [[57, "sympy.combinatorics.subsets.Subset.rank_gray", false]], "rank_lexicographic (sympy.combinatorics.subsets.subset property)": [[57, "sympy.combinatorics.subsets.Subset.rank_lexicographic", false]], "rank_nonlex() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.rank_nonlex", false]], "rank_trotterjohnson() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.rank_trotterjohnson", false]], "rat_clear_denoms() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.rat_clear_denoms", false]], "ratint() (in module sympy.integrals.rationaltools)": [[89, "sympy.integrals.rationaltools.ratint", false]], "ratint_logpart() (in module sympy.integrals.rationaltools)": [[89, "sympy.integrals.rationaltools.ratint_logpart", false]], "ratint_ratpart() (in module sympy.integrals.rationaltools)": [[89, "sympy.integrals.rationaltools.ratint_ratpart", false]], "rational": [[62, "term-rational", true]], "rational (class in sympy.core.numbers)": [[62, "sympy.core.numbers.Rational", false]], "rational_algorithm() (in module sympy.series.formal)": [[213, "sympy.series.formal.rational_algorithm", false]], "rational_independent() (in module sympy.series.formal)": [[213, "sympy.series.formal.rational_independent", false]], "rational_laurent_series() (in module sympy.solvers.ode.riccati)": [[227, "sympy.solvers.ode.riccati.rational_laurent_series", false]], "rational_parametrization() (sympy.vector.implicitregion.implicitregion method)": [[256, "sympy.vector.implicitregion.ImplicitRegion.rational_parametrization", false]], "rationalfield (class in sympy.polys.domains)": [[202, "sympy.polys.domains.RationalField", false]], "rationalize() (in module sympy.parsing.sympy_parser)": [[104, "sympy.parsing.sympy_parser.rationalize", false]], "rationalpredicate (class in sympy.assumptions.predicates.sets)": [[39, "sympy.assumptions.predicates.sets.RationalPredicate", false]], "rationalriccati (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.RationalRiccati", false]], "rationals (class in sympy.sets.fancysets)": [[219, "sympy.sets.fancysets.Rationals", false]], "ratsimp() (in module sympy.simplify.ratsimp)": [[223, "sympy.simplify.ratsimp.ratsimp", false]], "ratsimp() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.ratsimp", false]], "ratsimpmodprime() (in module sympy.simplify.ratsimp)": [[223, "sympy.simplify.ratsimp.ratsimpmodprime", false]], "rawlines() (in module sympy.utilities.misc)": [[252, "sympy.utilities.misc.rawlines", false]], "ray (class in sympy.geometry.line)": [[75, "sympy.geometry.line.Ray", false]], "ray2d (class in sympy.geometry.line)": [[75, "sympy.geometry.line.Ray2D", false]], "ray3d (class in sympy.geometry.line)": [[75, "sympy.geometry.line.Ray3D", false]], "rayleigh() (in module sympy.stats)": [[231, "sympy.stats.Rayleigh", false]], "rayleigh2waist() (in module sympy.physics.optics.gaussopt)": [[145, "sympy.physics.optics.gaussopt.rayleigh2waist", false]], "raytransfermatrix (class in sympy.physics.optics.gaussopt)": [[145, "sympy.physics.optics.gaussopt.RayTransferMatrix", false]], "rcall() (sympy.core.basic.basic method)": [[62, "sympy.core.basic.Basic.rcall", false]], "rcode() (in module sympy.printing.rcode)": [[211, "sympy.printing.rcode.rcode", false]], "rcodeprinter (class in sympy.printing.rcode)": [[211, "sympy.printing.rcode.RCodePrinter", false]], "rcollect() (in module sympy.simplify.radsimp)": [[223, "sympy.simplify.radsimp.rcollect", false]], "re (class in sympy.functions.elementary.complexes)": [[68, "sympy.functions.elementary.complexes.re", false]], "reaction_loads (sympy.physics.continuum_mechanics.beam.beam property)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.reaction_loads", false]], "reaction_loads (sympy.physics.continuum_mechanics.truss.truss property)": [[108, "sympy.physics.continuum_mechanics.truss.Truss.reaction_loads", false]], "real": [[62, "term-real", true]], "real_gaunt() (in module sympy.physics.wigner)": [[196, "sympy.physics.wigner.real_gaunt", false]], "real_root() (in module sympy.functions.elementary.miscellaneous)": [[68, "sympy.functions.elementary.miscellaneous.real_root", false]], "real_roots() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.real_roots", false]], "real_roots() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.real_roots", false]], "real_roots() (sympy.polys.rootoftools.complexrootof class method)": [[207, "sympy.polys.rootoftools.ComplexRootOf.real_roots", false]], "realelement (class in sympy.polys.domains.mpelements)": [[202, "sympy.polys.domains.mpelements.RealElement", false]], "realelementspredicate (class in sympy.assumptions.predicates.matrices)": [[39, "sympy.assumptions.predicates.matrices.RealElementsPredicate", false]], "realfield (class in sympy.polys.domains)": [[202, "sympy.polys.domains.RealField", false]], "realnumber (in module sympy.core.numbers)": [[62, "sympy.core.numbers.RealNumber", false]], "realpredicate (class in sympy.assumptions.predicates.sets)": [[39, "sympy.assumptions.predicates.sets.RealPredicate", false]], "reals (class in sympy.sets.fancysets)": [[219, "sympy.sets.fancysets.Reals", false]], "reciprocal() (in module sympy.stats)": [[231, "sympy.stats.Reciprocal", false]], "reconstruct() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.reconstruct", false]], "recurrence (sympy.series.sequences.recursiveseq property)": [[217, "sympy.series.sequences.RecursiveSeq.recurrence", false]], "recurrence_memo() (in module sympy.utilities.memoization)": [[251, "sympy.utilities.memoization.recurrence_memo", false]], "recursiveseq (class in sympy.series.sequences)": [[217, "sympy.series.sequences.RecursiveSeq", false]], "red_groebner() (in module sympy.polys.groebnertools)": [[204, "sympy.polys.groebnertools.red_groebner", false]], "reduce() (sympy.polys.polytools.groebnerbasis method)": [[207, "sympy.polys.polytools.GroebnerBasis.reduce", false]], "reduce() (sympy.series.sequences.seqadd static method)": [[217, "sympy.series.sequences.SeqAdd.reduce", false]], "reduce() (sympy.series.sequences.seqmul static method)": [[217, "sympy.series.sequences.SeqMul.reduce", false]], "reduce() (sympy.sets.sets.complement static method)": [[219, "sympy.sets.sets.Complement.reduce", false]], "reduce_abs_inequalities() (in module sympy.solvers.inequalities)": [[226, "sympy.solvers.inequalities.reduce_abs_inequalities", false]], "reduce_abs_inequality() (in module sympy.solvers.inequalities)": [[226, "sympy.solvers.inequalities.reduce_abs_inequality", false]], "reduce_alg_num() (sympy.polys.numberfields.primes.primeideal method)": [[206, "sympy.polys.numberfields.primes.PrimeIdeal.reduce_alg_num", false]], "reduce_anp() (sympy.polys.numberfields.primes.primeideal method)": [[206, "sympy.polys.numberfields.primes.PrimeIdeal.reduce_ANP", false]], "reduce_element() (sympy.polys.agca.ideals.ideal method)": [[198, "sympy.polys.agca.ideals.Ideal.reduce_element", false]], "reduce_element() (sympy.polys.agca.modules.submodule method)": [[198, "sympy.polys.agca.modules.SubModule.reduce_element", false]], "reduce_element() (sympy.polys.numberfields.modules.submodule method)": [[206, "sympy.polys.numberfields.modules.Submodule.reduce_element", false]], "reduce_element() (sympy.polys.numberfields.primes.primeideal method)": [[206, "sympy.polys.numberfields.primes.PrimeIdeal.reduce_element", false]], "reduce_inequalities() (in module sympy.solvers.inequalities)": [[226, "sympy.solvers.inequalities.reduce_inequalities", false]], "reduce_rational_inequalities() (in module sympy.solvers.inequalities)": [[226, "sympy.solvers.inequalities.reduce_rational_inequalities", false]], "reduced() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.reduced", false]], "reduced() (sympy.polys.numberfields.modules.moduleelement method)": [[206, "sympy.polys.numberfields.modules.ModuleElement.reduced", false]], "reduced() (sympy.polys.numberfields.modules.submodule method)": [[206, "sympy.polys.numberfields.modules.Submodule.reduced", false]], "reduced_mod_p() (sympy.polys.numberfields.modules.moduleelement method)": [[206, "sympy.polys.numberfields.modules.ModuleElement.reduced_mod_p", false]], "reduced_totient (class in sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.reduced_totient", false]], "referenceframe (class in sympy.physics.vector.frame)": [[186, "sympy.physics.vector.frame.ReferenceFrame", false]], "refine() (in module sympy.assumptions.refine)": [[40, "sympy.assumptions.refine.refine", false]], "refine() (sympy.core.basic.basic method)": [[62, "sympy.core.basic.Basic.refine", false]], "refine() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.refine", false]], "refine_abs() (in module sympy.assumptions.refine)": [[40, "sympy.assumptions.refine.refine_abs", false]], "refine_arg() (in module sympy.assumptions.refine)": [[40, "sympy.assumptions.refine.refine_arg", false]], "refine_atan2() (in module sympy.assumptions.refine)": [[40, "sympy.assumptions.refine.refine_atan2", false]], "refine_im() (in module sympy.assumptions.refine)": [[40, "sympy.assumptions.refine.refine_im", false]], "refine_matrixelement() (in module sympy.assumptions.refine)": [[40, "sympy.assumptions.refine.refine_matrixelement", false]], "refine_pow() (in module sympy.assumptions.refine)": [[40, "sympy.assumptions.refine.refine_Pow", false]], "refine_re() (in module sympy.assumptions.refine)": [[40, "sympy.assumptions.refine.refine_re", false]], "refine_root() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.refine_root", false]], "refine_root() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.refine_root", false]], "refine_root() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.refine_root", false]], "refine_sign() (in module sympy.assumptions.refine)": [[40, "sympy.assumptions.refine.refine_sign", false]], "refinementfailed (class in sympy.polys.polyerrors)": [[204, "sympy.polys.polyerrors.RefinementFailed", false]], "reflect() (sympy.geometry.ellipse.circle method)": [[72, "sympy.geometry.ellipse.Circle.reflect", false]], "reflect() (sympy.geometry.ellipse.ellipse method)": [[72, "sympy.geometry.ellipse.Ellipse.reflect", false]], "reflect() (sympy.geometry.entity.geometryentity method)": [[73, "sympy.geometry.entity.GeometryEntity.reflect", false]], "reflect() (sympy.geometry.polygon.regularpolygon method)": [[78, "sympy.geometry.polygon.RegularPolygon.reflect", false]], "reflective_filter() (in module sympy.physics.optics.polarization)": [[148, "sympy.physics.optics.polarization.reflective_filter", false]], "refraction_angle() (in module sympy.physics.optics.utils)": [[149, "sympy.physics.optics.utils.refraction_angle", false]], "refractive_index (sympy.physics.optics.medium.medium property)": [[147, "sympy.physics.optics.medium.Medium.refractive_index", false]], "register() (sympy.assumptions.assume.predicate class method)": [[37, "sympy.assumptions.assume.Predicate.register", false]], "register_handler() (in module sympy.assumptions.ask)": [[36, "sympy.assumptions.ask.register_handler", false]], "register_many() (sympy.assumptions.assume.predicate class method)": [[37, "sympy.assumptions.assume.Predicate.register_many", false]], "regular_point() (sympy.vector.implicitregion.implicitregion method)": [[256, "sympy.vector.implicitregion.ImplicitRegion.regular_point", false]], "regularpolygon (class in sympy.geometry.polygon)": [[78, "sympy.geometry.polygon.RegularPolygon", false]], "rel (in module sympy.core.relational)": [[62, "sympy.core.relational.Rel", false]], "relational": [[11, "term-Relational", true]], "relational (class in sympy.core.relational)": [[62, "sympy.core.relational.Relational", false]], "rem() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.rem", false]], "rem() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.rem", false]], "rem() (sympy.polys.domains.field.field method)": [[202, "sympy.polys.domains.field.Field.rem", false]], "rem() (sympy.polys.domains.gmpyrationalfield method)": [[202, "sympy.polys.domains.GMPYRationalField.rem", false]], "rem() (sympy.polys.domains.rationalfield method)": [[202, "sympy.polys.domains.RationalField.rem", false]], "rem() (sympy.polys.domains.ring.ring method)": [[202, "sympy.polys.domains.ring.Ring.rem", false]], "rem() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.rem", false]], "rem() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.rem", false]], "remove_handler() (in module sympy.assumptions.ask)": [[36, "sympy.assumptions.ask.remove_handler", false]], "remove_load() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.remove_load", false]], "remove_load() (sympy.physics.continuum_mechanics.truss.truss method)": [[108, "sympy.physics.continuum_mechanics.truss.Truss.remove_load", false]], "remove_load() (sympy.physics.mechanics.body.body method)": [[117, "sympy.physics.mechanics.body.Body.remove_load", false]], "remove_member() (sympy.physics.continuum_mechanics.truss.truss method)": [[108, "sympy.physics.continuum_mechanics.truss.Truss.remove_member", false]], "remove_node() (sympy.physics.continuum_mechanics.truss.truss method)": [[108, "sympy.physics.continuum_mechanics.truss.Truss.remove_node", false]], "remove_redundant_sols() (in module sympy.solvers.ode.riccati)": [[227, "sympy.solvers.ode.riccati.remove_redundant_sols", false]], "remove_support() (sympy.physics.continuum_mechanics.truss.truss method)": [[108, "sympy.physics.continuum_mechanics.truss.Truss.remove_support", false]], "removeo() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.removeO", false]], "render() (sympy.printing.pretty.stringpict.stringpict method)": [[211, "sympy.printing.pretty.stringpict.stringPict.render", false]], "render_as_module() (in module sympy.codegen.futils)": [[43, "sympy.codegen.futils.render_as_module", false]], "render_as_module() (in module sympy.codegen.pyutils)": [[43, "sympy.codegen.pyutils.render_as_module", false]], "render_as_source_file() (in module sympy.codegen.cutils)": [[43, "sympy.codegen.cutils.render_as_source_file", false]], "reorder() (sympy.concrete.expr_with_intlimits.exprwithintlimits method)": [[61, "sympy.concrete.expr_with_intlimits.ExprWithIntLimits.reorder", false]], "reorder() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.reorder", false]], "reorder_limit() (sympy.concrete.expr_with_intlimits.exprwithintlimits method)": [[61, "sympy.concrete.expr_with_intlimits.ExprWithIntLimits.reorder_limit", false]], "rep_expectation() (in module sympy.physics.quantum.represent)": [[171, "sympy.physics.quantum.represent.rep_expectation", false]], "rep_innerproduct() (in module sympy.physics.quantum.represent)": [[171, "sympy.physics.quantum.represent.rep_innerproduct", false]], "repeated_decimals() (in module sympy.parsing.sympy_parser)": [[104, "sympy.parsing.sympy_parser.repeated_decimals", false]], "replace() (in module sympy.utilities.misc)": [[252, "sympy.utilities.misc.replace", false]], "replace() (sympy.core.basic.basic method)": [[62, "sympy.core.basic.Basic.replace", false]], "replace() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.replace", false]], "replace() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.replace", false]], "replace_in_add() (sympy.codegen.rewriting.funcminusoneoptim method)": [[43, "sympy.codegen.rewriting.FuncMinusOneOptim.replace_in_Add", false]], "replace_with_arrays() (sympy.tensor.tensor.tensexpr method)": [[237, "sympy.tensor.tensor.TensExpr.replace_with_arrays", false]], "replaceoptim (class in sympy.codegen.rewriting)": [[43, "sympy.codegen.rewriting.ReplaceOptim", false]], "reporter (class in sympy.testing.runtests)": [[242, "sympy.testing.runtests.Reporter", false]], "repr() (sympy.polys.numberfields.primes.primeideal method)": [[206, "sympy.polys.numberfields.primes.PrimeIdeal.repr", false]], "represent() (in module sympy.physics.quantum.represent)": [[171, "sympy.physics.quantum.represent.represent", false]], "represent() (sympy.polys.numberfields.modules.endomorphismring method)": [[206, "sympy.polys.numberfields.modules.EndomorphismRing.represent", false]], "represent() (sympy.polys.numberfields.modules.module method)": [[206, "sympy.polys.numberfields.modules.Module.represent", false]], "represent() (sympy.polys.numberfields.modules.powerbasis method)": [[206, "sympy.polys.numberfields.modules.PowerBasis.represent", false]], "represent() (sympy.polys.numberfields.modules.submodule method)": [[206, "sympy.polys.numberfields.modules.Submodule.represent", false]], "reprify() (sympy.printing.repr.reprprinter method)": [[211, "sympy.printing.repr.ReprPrinter.reprify", false]], "reprprinter (class in sympy.printing.repr)": [[211, "sympy.printing.repr.ReprPrinter", false]], "reset() (sympy.combinatorics.polyhedron.polyhedron method)": [[55, "sympy.combinatorics.polyhedron.Polyhedron.reset", false]], "reshape() (in module sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.reshape", false]], "reshape() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.reshape", false]], "reshape() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.reshape", false]], "residue() (in module sympy.series.residues)": [[218, "sympy.series.residues.residue", false]], "resize() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.resize", false]], "restrict_codomain() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[198, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.restrict_codomain", false]], "restrict_domain() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[198, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.restrict_domain", false]], "result (class in sympy.utilities.codegen)": [[244, "sympy.utilities.codegen.Result", false]], "result_variables (sympy.utilities.codegen.routine property)": [[244, "sympy.utilities.codegen.Routine.result_variables", false]], "resultant() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.resultant", false]], "resultant() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.resultant", false]], "resultant() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.resultant", false]], "retract() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.retract", false]], "return (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.Return", false]], "return_expr() (sympy.parsing.sym_expr.sympyexpression method)": [[104, "sympy.parsing.sym_expr.SymPyExpression.return_expr", false]], "reverse_order() (sympy.concrete.products.product method)": [[61, "sympy.concrete.products.Product.reverse_order", false]], "reverse_order() (sympy.concrete.summations.sum method)": [[61, "sympy.concrete.summations.Sum.reverse_order", false]], "reversed (sympy.core.relational.relational property)": [[62, "sympy.core.relational.Relational.reversed", false]], "reversed (sympy.sets.fancysets.range property)": [[219, "sympy.sets.fancysets.Range.reversed", false]], "reversedgradedlexorder (class in sympy.polys.orderings)": [[207, "sympy.polys.orderings.ReversedGradedLexOrder", false]], "reversedsign (sympy.core.relational.relational property)": [[62, "sympy.core.relational.Relational.reversedsign", false]], "revert() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.revert", false]], "revert() (sympy.polys.domains.field.field method)": [[202, "sympy.polys.domains.field.Field.revert", false]], "revert() (sympy.polys.domains.ring.ring method)": [[202, "sympy.polys.domains.ring.Ring.revert", false]], "revert() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.revert", false]], "revert() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.revert", false]], "rewrite() (in module sympy.series.gruntz)": [[218, "sympy.series.gruntz.rewrite", false]], "rewrite() (sympy.core.basic.basic method)": [[62, "sympy.core.basic.Basic.rewrite", false]], "rgs (sympy.combinatorics.partitions.partition property)": [[51, "sympy.combinatorics.partitions.Partition.RGS", false]], "rgs_enum() (in module sympy.combinatorics.partitions)": [[51, "sympy.combinatorics.partitions.RGS_enum", false]], "rgs_generalized() (in module sympy.combinatorics.partitions)": [[51, "sympy.combinatorics.partitions.RGS_generalized", false]], "rgs_rank() (in module sympy.combinatorics.partitions)": [[51, "sympy.combinatorics.partitions.RGS_rank", false]], "rgs_unrank() (in module sympy.combinatorics.partitions)": [[51, "sympy.combinatorics.partitions.RGS_unrank", false]], "rhs (sympy.core.relational.relational property)": [[62, "sympy.core.relational.Relational.rhs", false]], "rhs() (sympy.physics.mechanics.jointsmethod.jointsmethod method)": [[120, "sympy.physics.mechanics.jointsmethod.JointsMethod.rhs", false]], "rhs() (sympy.physics.mechanics.kane.kanesmethod method)": [[121, "sympy.physics.mechanics.kane.KanesMethod.rhs", false]], "rhs() (sympy.physics.mechanics.lagrange.lagrangesmethod method)": [[121, "sympy.physics.mechanics.lagrange.LagrangesMethod.rhs", false]], "riccati_inverse_normal() (in module sympy.solvers.ode.riccati)": [[227, "sympy.solvers.ode.riccati.riccati_inverse_normal", false]], "riccati_normal() (in module sympy.solvers.ode.riccati)": [[227, "sympy.solvers.ode.riccati.riccati_normal", false]], "riccati_reduced() (in module sympy.solvers.ode.riccati)": [[227, "sympy.solvers.ode.riccati.riccati_reduced", false]], "riccatispecial (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.RiccatiSpecial", false]], "richardson() (in module sympy.series.acceleration)": [[218, "sympy.series.acceleration.richardson", false]], "riemann() (sympy.tensor.tensor.tensorsymmetry class method)": [[237, "sympy.tensor.tensor.TensorSymmetry.riemann", false]], "riemann_cyclic() (in module sympy.tensor.tensor)": [[237, "sympy.tensor.tensor.riemann_cyclic", false]], "riemann_cyclic_replace() (in module sympy.tensor.tensor)": [[237, "sympy.tensor.tensor.riemann_cyclic_replace", false]], "right() (sympy.printing.pretty.stringpict.stringpict method)": [[211, "sympy.printing.pretty.stringpict.stringPict.right", false]], "right_open (sympy.sets.sets.interval property)": [[219, "sympy.sets.sets.Interval.right_open", false]], "rigidbody (class in sympy.physics.mechanics.rigidbody)": [[123, "sympy.physics.mechanics.rigidbody.RigidBody", false]], "ring (class in sympy.polys.domains.ring)": [[202, "sympy.polys.domains.ring.Ring", false]], "ring() (in module sympy.polys.rings)": [[202, "sympy.polys.rings.ring", false]], "risch_integrate() (in module sympy.integrals.risch)": [[89, "sympy.integrals.risch.risch_integrate", false]], "risingfactorial (class in sympy.functions.combinatorial.factorials)": [[67, "sympy.functions.combinatorial.factorials.RisingFactorial", false]], "rk (in module sympy.physics.quantum.qft)": [[169, "sympy.physics.quantum.qft.Rk", false]], "rkgate (class in sympy.physics.quantum.qft)": [[169, "sympy.physics.quantum.qft.RkGate", false]], "rmul() (sympy.combinatorics.permutations.permutation static method)": [[54, "sympy.combinatorics.permutations.Permutation.rmul", false]], "rmul_with_af() (sympy.combinatorics.permutations.permutation class method)": [[54, "sympy.combinatorics.permutations.Permutation.rmul_with_af", false]], "rmultiply() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.rmultiply", false]], "root (in module sympy.printing.pretty.pretty_symbology)": [[211, "sympy.printing.pretty.pretty_symbology.root", false]], "root() (in module sympy.functions.elementary.miscellaneous)": [[68, "sympy.functions.elementary.miscellaneous.root", false]], "root() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.root", false]], "root() (sympy.printing.pretty.stringpict.stringpict method)": [[211, "sympy.printing.pretty.stringpict.stringPict.root", false]], "root_space() (sympy.liealgebras.root_system.rootsystem method)": [[91, "sympy.liealgebras.root_system.RootSystem.root_space", false]], "rootof (class in sympy.polys.rootoftools)": [[207, "sympy.polys.rootoftools.RootOf", false]], "rootof() (in module sympy.polys.rootoftools)": [[207, "sympy.polys.rootoftools.rootof", false]], "roots() (in module sympy.polys.polyroots)": [[207, "sympy.polys.polyroots.roots", false]], "roots() (sympy.liealgebras.type_a.typea method)": [[91, "sympy.liealgebras.type_a.TypeA.roots", false]], "roots() (sympy.liealgebras.type_b.typeb method)": [[91, "sympy.liealgebras.type_b.TypeB.roots", false]], "roots() (sympy.liealgebras.type_c.typec method)": [[91, "sympy.liealgebras.type_c.TypeC.roots", false]], "roots() (sympy.liealgebras.type_d.typed method)": [[91, "sympy.liealgebras.type_d.TypeD.roots", false]], "roots() (sympy.liealgebras.type_e.typee method)": [[91, "sympy.liealgebras.type_e.TypeE.roots", false]], "roots() (sympy.liealgebras.type_f.typef method)": [[91, "sympy.liealgebras.type_f.TypeF.roots", false]], "roots() (sympy.liealgebras.type_g.typeg method)": [[91, "sympy.liealgebras.type_g.TypeG.roots", false]], "rootsum (class in sympy.polys.rootoftools)": [[207, "sympy.polys.rootoftools.RootSum", false]], "rootsystem (class in sympy.liealgebras.root_system)": [[91, "sympy.liealgebras.root_system.RootSystem", false]], "ropen() (sympy.sets.sets.interval class method)": [[219, "sympy.sets.sets.Interval.Ropen", false]], "rot90() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.rot90", false]], "rot_axis1() (in module sympy.matrices.dense)": [[98, "sympy.matrices.dense.rot_axis1", false]], "rot_axis2() (in module sympy.matrices.dense)": [[98, "sympy.matrices.dense.rot_axis2", false]], "rot_axis3() (in module sympy.matrices.dense)": [[98, "sympy.matrices.dense.rot_axis3", false]], "rot_ccw_axis1() (in module sympy.matrices.dense)": [[98, "sympy.matrices.dense.rot_ccw_axis1", false]], "rot_ccw_axis2() (in module sympy.matrices.dense)": [[98, "sympy.matrices.dense.rot_ccw_axis2", false]], "rot_ccw_axis3() (in module sympy.matrices.dense)": [[98, "sympy.matrices.dense.rot_ccw_axis3", false]], "rot_givens() (in module sympy.matrices.dense)": [[98, "sympy.matrices.dense.rot_givens", false]], "rotate() (sympy.combinatorics.polyhedron.polyhedron method)": [[55, "sympy.combinatorics.polyhedron.Polyhedron.rotate", false]], "rotate() (sympy.geometry.curve.curve method)": [[71, "sympy.geometry.curve.Curve.rotate", false]], "rotate() (sympy.geometry.ellipse.ellipse method)": [[72, "sympy.geometry.ellipse.Ellipse.rotate", false]], "rotate() (sympy.geometry.entity.geometryentity method)": [[73, "sympy.geometry.entity.GeometryEntity.rotate", false]], "rotate() (sympy.geometry.point.point2d method)": [[77, "sympy.geometry.point.Point2D.rotate", false]], "rotate() (sympy.geometry.polygon.regularpolygon method)": [[78, "sympy.geometry.polygon.RegularPolygon.rotate", false]], "rotate_left() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.rotate_left", false]], "rotate_point() (sympy.algebras.quaternion static method)": [[35, "sympy.algebras.Quaternion.rotate_point", false]], "rotate_right() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.rotate_right", false]], "rotation (class in sympy.physics.quantum.spin)": [[173, "sympy.physics.quantum.spin.Rotation", false]], "rotation (sympy.geometry.polygon.regularpolygon property)": [[78, "sympy.geometry.polygon.RegularPolygon.rotation", false]], "rotation_axis (sympy.physics.mechanics.joint.planarjoint property)": [[120, "sympy.physics.mechanics.joint.PlanarJoint.rotation_axis", false]], "rotation_coordinate (sympy.physics.mechanics.joint.cylindricaljoint property)": [[120, "sympy.physics.mechanics.joint.CylindricalJoint.rotation_coordinate", false]], "rotation_coordinate (sympy.physics.mechanics.joint.planarjoint property)": [[120, "sympy.physics.mechanics.joint.PlanarJoint.rotation_coordinate", false]], "rotation_matrix() (sympy.vector.coordsysrect.coordsys3d method)": [[256, "sympy.vector.coordsysrect.CoordSys3D.rotation_matrix", false]], "rotation_matrix() (sympy.vector.orienters.axisorienter method)": [[258, "sympy.vector.orienters.AxisOrienter.rotation_matrix", false]], "rotation_matrix() (sympy.vector.orienters.orienter method)": [[258, "sympy.vector.orienters.Orienter.rotation_matrix", false]], "rotation_speed (sympy.physics.mechanics.joint.cylindricaljoint property)": [[120, "sympy.physics.mechanics.joint.CylindricalJoint.rotation_speed", false]], "rotation_speed (sympy.physics.mechanics.joint.planarjoint property)": [[120, "sympy.physics.mechanics.joint.PlanarJoint.rotation_speed", false]], "rotations() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.rotations", false]], "round() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.round", false]], "round_two() (in module sympy.polys.numberfields.basis)": [[206, "sympy.polys.numberfields.basis.round_two", false]], "roundfunction (class in sympy.functions.elementary.integers)": [[68, "sympy.functions.elementary.integers.RoundFunction", false]], "roundrobin() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.roundrobin", false]], "routine (class in sympy.utilities.codegen)": [[244, "sympy.utilities.codegen.Routine", false]], "routine() (sympy.utilities.codegen.codegen method)": [[244, "sympy.utilities.codegen.CodeGen.routine", false]], "routine() (sympy.utilities.codegen.juliacodegen method)": [[244, "sympy.utilities.codegen.JuliaCodeGen.routine", false]], "routine() (sympy.utilities.codegen.octavecodegen method)": [[244, "sympy.utilities.codegen.OctaveCodeGen.routine", false]], "routine() (sympy.utilities.codegen.rustcodegen method)": [[244, "sympy.utilities.codegen.RustCodeGen.routine", false]], "row() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.row", false]], "row_del() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.row_del", false]], "row_insert() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.row_insert", false]], "row_join() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.row_join", false]], "rowspace() (sympy.matrices.matrices.matrixsubspaces method)": [[98, "sympy.matrices.matrices.MatrixSubspaces.rowspace", false]], "rowspace() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.rowspace", false]], "rref() (sympy.matrices.matrices.matrixreductions method)": [[98, "sympy.matrices.matrices.MatrixReductions.rref", false]], "rref() (sympy.polys.matrices.ddm.ddm method)": [[200, "sympy.polys.matrices.ddm.DDM.rref", false]], "rref() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.rref", false]], "rref() (sympy.polys.matrices.sdm.sdm method)": [[200, "sympy.polys.matrices.sdm.SDM.rref", false]], "rs_asin() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_asin", false]], "rs_atan() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_atan", false]], "rs_atanh() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_atanh", false]], "rs_compose_add() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_compose_add", false]], "rs_cos() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_cos", false]], "rs_cos_sin() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_cos_sin", false]], "rs_cosh() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_cosh", false]], "rs_cot() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_cot", false]], "rs_diff() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_diff", false]], "rs_exp() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_exp", false]], "rs_fun() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_fun", false]], "rs_hadamard_exp() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_hadamard_exp", false]], "rs_integrate() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_integrate", false]], "rs_is_puiseux() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_is_puiseux", false]], "rs_lambertw() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_LambertW", false]], "rs_log() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_log", false]], "rs_mul() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_mul", false]], "rs_newton() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_newton", false]], "rs_nth_root() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_nth_root", false]], "rs_pow() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_pow", false]], "rs_puiseux() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_puiseux", false]], "rs_puiseux2() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_puiseux2", false]], "rs_series_from_list() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_series_from_list", false]], "rs_series_inversion() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_series_inversion", false]], "rs_series_reversion() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_series_reversion", false]], "rs_sin() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_sin", false]], "rs_sinh() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_sinh", false]], "rs_square() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_square", false]], "rs_subs() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_subs", false]], "rs_swap() (in module sympy.stats.rv)": [[231, "sympy.stats.rv.rs_swap", false]], "rs_tan() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_tan", false]], "rs_tanh() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_tanh", false]], "rs_trunc() (in module sympy.polys.ring_series)": [[208, "sympy.polys.ring_series.rs_trunc", false]], "rsa_private_key() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.rsa_private_key", false]], "rsa_public_key() (in module sympy.crypto.crypto)": [[63, "sympy.crypto.crypto.rsa_public_key", false]], "rsolve() (in module sympy.solvers.recurr)": [[229, "sympy.solvers.recurr.rsolve", false]], "rsolve_hyper() (in module sympy.solvers.recurr)": [[229, "sympy.solvers.recurr.rsolve_hyper", false]], "rsolve_hypergeometric() (in module sympy.series.formal)": [[213, "sympy.series.formal.rsolve_hypergeometric", false]], "rsolve_poly() (in module sympy.solvers.recurr)": [[229, "sympy.solvers.recurr.rsolve_poly", false]], "rsolve_ratio() (in module sympy.solvers.recurr)": [[229, "sympy.solvers.recurr.rsolve_ratio", false]], "run() (sympy.testing.runtests.sympydoctestrunner method)": [[242, "sympy.testing.runtests.SymPyDocTestRunner.run", false]], "run_all_tests() (in module sympy.testing.runtests)": [[242, "sympy.testing.runtests.run_all_tests", false]], "run_in_subprocess_with_hash_randomization() (in module sympy.testing.runtests)": [[242, "sympy.testing.runtests.run_in_subprocess_with_hash_randomization", false]], "runs() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.runs", false]], "runs() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.runs", false]], "rust_code() (in module sympy.printing.rust)": [[211, "sympy.printing.rust.rust_code", false]], "rustcodegen (class in sympy.utilities.codegen)": [[244, "sympy.utilities.codegen.RustCodeGen", false]], "rustcodeprinter (class in sympy.printing.rust)": [[211, "sympy.printing.rust.RustCodePrinter", false]], "s": [[11, "term-S", true]], "s (in module sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.S", false]], "s1transitivesubgroups (class in sympy.combinatorics.galois)": [[45, "sympy.combinatorics.galois.S1TransitiveSubgroups", false]], "s2transitivesubgroups (class in sympy.combinatorics.galois)": [[45, "sympy.combinatorics.galois.S2TransitiveSubgroups", false]], "s3_in_s6() (in module sympy.combinatorics.galois)": [[45, "sympy.combinatorics.galois.S3_in_S6", false]], "s3transitivesubgroups (class in sympy.combinatorics.galois)": [[45, "sympy.combinatorics.galois.S3TransitiveSubgroups", false]], "s4m() (in module sympy.combinatorics.galois)": [[45, "sympy.combinatorics.galois.S4m", false]], "s4p() (in module sympy.combinatorics.galois)": [[45, "sympy.combinatorics.galois.S4p", false]], "s4transitivesubgroups (class in sympy.combinatorics.galois)": [[45, "sympy.combinatorics.galois.S4TransitiveSubgroups", false]], "s4xc2() (in module sympy.combinatorics.galois)": [[45, "sympy.combinatorics.galois.S4xC2", false]], "s5transitivesubgroups (class in sympy.combinatorics.galois)": [[45, "sympy.combinatorics.galois.S5TransitiveSubgroups", false]], "s6transitivesubgroups (class in sympy.combinatorics.galois)": [[45, "sympy.combinatorics.galois.S6TransitiveSubgroups", false]], "same_root() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.same_root", false]], "sample() (in module sympy.stats)": [[231, "sympy.stats.sample", false]], "sample() (sympy.stats.discretemarkovchain method)": [[231, "sympy.stats.DiscreteMarkovChain.sample", false]], "sample_iter() (in module sympy.stats)": [[231, "sympy.stats.sample_iter", false]], "sampling_density() (in module sympy.stats.rv)": [[231, "sympy.stats.rv.sampling_density", false]], "sampling_e() (in module sympy.stats.rv)": [[231, "sympy.stats.rv.sampling_E", false]], "sampling_p() (in module sympy.stats.rv)": [[231, "sympy.stats.rv.sampling_P", false]], "satisfiable() (in module sympy.logic.inference)": [[92, "sympy.logic.inference.satisfiable", false]], "saturate() (sympy.polys.agca.ideals.ideal method)": [[198, "sympy.polys.agca.ideals.Ideal.saturate", false]], "scalar_map() (sympy.vector.coordsysrect.coordsys3d method)": [[256, "sympy.vector.coordsysrect.CoordSys3D.scalar_map", false]], "scalar_part() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.scalar_part", false]], "scalar_potential() (in module sympy.physics.vector.fieldfunctions)": [[187, "sympy.physics.vector.fieldfunctions.scalar_potential", false]], "scalar_potential() (in module sympy.vector)": [[259, "sympy.vector.scalar_potential", false]], "scalar_potential_difference() (in module sympy.physics.vector.fieldfunctions)": [[187, "sympy.physics.vector.fieldfunctions.scalar_potential_difference", false]], "scalar_potential_difference() (in module sympy.vector)": [[259, "sympy.vector.scalar_potential_difference", false]], "scale() (sympy.geometry.curve.curve method)": [[71, "sympy.geometry.curve.Curve.scale", false]], "scale() (sympy.geometry.ellipse.circle method)": [[72, "sympy.geometry.ellipse.Circle.scale", false]], "scale() (sympy.geometry.ellipse.ellipse method)": [[72, "sympy.geometry.ellipse.Ellipse.scale", false]], "scale() (sympy.geometry.entity.geometryentity method)": [[73, "sympy.geometry.entity.GeometryEntity.scale", false]], "scale() (sympy.geometry.point.point2d method)": [[77, "sympy.geometry.point.Point2D.scale", false]], "scale() (sympy.geometry.point.point3d method)": [[77, "sympy.geometry.point.Point3D.scale", false]], "scale() (sympy.geometry.polygon.regularpolygon method)": [[78, "sympy.geometry.polygon.RegularPolygon.scale", false]], "scale() (sympy.series.fourier.fourierseries method)": [[214, "sympy.series.fourier.FourierSeries.scale", false]], "scale_factor (sympy.physics.units.quantities.quantity property)": [[183, "sympy.physics.units.quantities.Quantity.scale_factor", false]], "scalex() (sympy.series.fourier.fourierseries method)": [[214, "sympy.series.fourier.FourierSeries.scalex", false]], "scc() (sympy.polys.matrices.ddm.ddm method)": [[200, "sympy.polys.matrices.ddm.DDM.scc", false]], "scc() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.scc", false]], "scc() (sympy.polys.matrices.sdm.sdm method)": [[200, "sympy.polys.matrices.sdm.SDM.scc", false]], "schreier_sims() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.schreier_sims", false]], "schreier_sims_incremental() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.schreier_sims_incremental", false]], "schreier_sims_random() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.schreier_sims_random", false]], "schreier_vector() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.schreier_vector", false]], "schur() (sympy.matrices.expressions.blockmatrix.blockmatrix method)": [[95, "sympy.matrices.expressions.blockmatrix.BlockMatrix.schur", false]], "scope (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.Scope", false]], "sdm (class in sympy.polys.matrices.sdm)": [[200, "sympy.polys.matrices.sdm.SDM", false]], "sdm_add() (in module sympy.polys.distributedmodules)": [[204, "sympy.polys.distributedmodules.sdm_add", false]], "sdm_deg() (in module sympy.polys.distributedmodules)": [[204, "sympy.polys.distributedmodules.sdm_deg", false]], "sdm_ecart() (in module sympy.polys.distributedmodules)": [[204, "sympy.polys.distributedmodules.sdm_ecart", false]], "sdm_from_dict() (in module sympy.polys.distributedmodules)": [[204, "sympy.polys.distributedmodules.sdm_from_dict", false]], "sdm_from_vector() (in module sympy.polys.distributedmodules)": [[204, "sympy.polys.distributedmodules.sdm_from_vector", false]], "sdm_groebner() (in module sympy.polys.distributedmodules)": [[204, "sympy.polys.distributedmodules.sdm_groebner", false]], "sdm_lc() (in module sympy.polys.distributedmodules)": [[204, "sympy.polys.distributedmodules.sdm_LC", false]], "sdm_lm() (in module sympy.polys.distributedmodules)": [[204, "sympy.polys.distributedmodules.sdm_LM", false]], "sdm_lt() (in module sympy.polys.distributedmodules)": [[204, "sympy.polys.distributedmodules.sdm_LT", false]], "sdm_monomial_deg() (in module sympy.polys.distributedmodules)": [[204, "sympy.polys.distributedmodules.sdm_monomial_deg", false]], "sdm_monomial_divides() (in module sympy.polys.distributedmodules)": [[204, "sympy.polys.distributedmodules.sdm_monomial_divides", false]], "sdm_monomial_mul() (in module sympy.polys.distributedmodules)": [[204, "sympy.polys.distributedmodules.sdm_monomial_mul", false]], "sdm_mul_term() (in module sympy.polys.distributedmodules)": [[204, "sympy.polys.distributedmodules.sdm_mul_term", false]], "sdm_nf_mora() (in module sympy.polys.distributedmodules)": [[204, "sympy.polys.distributedmodules.sdm_nf_mora", false]], "sdm_spoly() (in module sympy.polys.distributedmodules)": [[204, "sympy.polys.distributedmodules.sdm_spoly", false]], "sdm_to_dict() (in module sympy.polys.distributedmodules)": [[204, "sympy.polys.distributedmodules.sdm_to_dict", false]], "sdm_to_vector() (in module sympy.polys.distributedmodules)": [[204, "sympy.polys.distributedmodules.sdm_to_vector", false]], "sdm_zero() (in module sympy.polys.distributedmodules)": [[204, "sympy.polys.distributedmodules.sdm_zero", false]], "search() (sympy.ntheory.generate.sieve method)": [[102, "sympy.ntheory.generate.Sieve.search", false]], "search_function (sympy.physics.quantum.grover.oraclegate property)": [[161, "sympy.physics.quantum.grover.OracleGate.search_function", false]], "sec (class in sympy.functions.elementary.trigonometric)": [[68, "sympy.functions.elementary.trigonometric.sec", false]], "sech (class in sympy.functions.elementary.hyperbolic)": [[68, "sympy.functions.elementary.hyperbolic.sech", false]], "second_moment (sympy.physics.continuum_mechanics.beam.beam property)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.second_moment", false]], "second_moment (sympy.physics.continuum_mechanics.beam.beam3d property)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.second_moment", false]], "second_moment_of_area() (sympy.geometry.ellipse.ellipse method)": [[72, "sympy.geometry.ellipse.Ellipse.second_moment_of_area", false]], "second_moment_of_area() (sympy.geometry.polygon.polygon method)": [[78, "sympy.geometry.polygon.Polygon.second_moment_of_area", false]], "secondhypergeometric (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.SecondHypergeometric", false]], "secondlinearairy (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.SecondLinearAiry", false]], "secondlinearbessel (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.SecondLinearBessel", false]], "section_modulus() (sympy.geometry.ellipse.ellipse method)": [[72, "sympy.geometry.ellipse.Ellipse.section_modulus", false]], "section_modulus() (sympy.geometry.polygon.polygon method)": [[78, "sympy.geometry.polygon.Polygon.section_modulus", false]], "segment (class in sympy.geometry.line)": [[75, "sympy.geometry.line.Segment", false]], "segment2d (class in sympy.geometry.line)": [[75, "sympy.geometry.line.Segment2D", false]], "segment3d (class in sympy.geometry.line)": [[75, "sympy.geometry.line.Segment3D", false]], "select() (sympy.simplify.epathtools.epath method)": [[223, "sympy.simplify.epathtools.EPath.select", false]], "selections (sympy.combinatorics.graycode.graycode property)": [[46, "sympy.combinatorics.graycode.GrayCode.selections", false]], "semilatus_rectum (sympy.geometry.ellipse.ellipse property)": [[72, "sympy.geometry.ellipse.Ellipse.semilatus_rectum", false]], "sensitivity (sympy.physics.control.lti.feedback property)": [[112, "sympy.physics.control.lti.Feedback.sensitivity", false]], "sensitivity (sympy.physics.control.lti.mimofeedback property)": [[112, "sympy.physics.control.lti.MIMOFeedback.sensitivity", false]], "separable (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.Separable", false]], "separablereduced (class in sympy.solvers.ode.single)": [[227, "sympy.solvers.ode.single.SeparableReduced", false]], "separate() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.separate", false]], "separate() (sympy.physics.vector.vector.vector method)": [[186, "sympy.physics.vector.vector.Vector.separate", false]], "separate() (sympy.vector.vector.vector method)": [[256, "sympy.vector.vector.Vector.separate", false]], "separatevars() (in module sympy.simplify.simplify)": [[223, "sympy.simplify.simplify.separatevars", false]], "seqadd (class in sympy.series.sequences)": [[217, "sympy.series.sequences.SeqAdd", false]], "seqbase (class in sympy.series.sequences)": [[217, "sympy.series.sequences.SeqBase", false]], "seqformula (class in sympy.series.sequences)": [[217, "sympy.series.sequences.SeqFormula", false]], "seqmul (class in sympy.series.sequences)": [[217, "sympy.series.sequences.SeqMul", false]], "seqper (class in sympy.series.sequences)": [[217, "sympy.series.sequences.SeqPer", false]], "sequence() (in module sympy.series.sequences)": [[217, "sympy.series.sequences.sequence", false]], "sequence_partitions() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.sequence_partitions", false]], "sequence_partitions_empty() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.sequence_partitions_empty", false]], "series (class in sympy.physics.control.lti)": [[112, "sympy.physics.control.lti.Series", false]], "series() (in module sympy.series.series)": [[218, "sympy.series.series.series", false]], "series() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.series", false]], "series() (sympy.holonomic.holonomic.holonomicfunction method)": [[84, "sympy.holonomic.holonomic.HolonomicFunction.series", false]], "series() (sympy.liealgebras.cartan_type.standard_cartan method)": [[91, "sympy.liealgebras.cartan_type.Standard_Cartan.series", false]], "seriesapprox (class in sympy.codegen.approximations)": [[43, "sympy.codegen.approximations.SeriesApprox", false]], "set (class in sympy.sets.sets)": [[219, "sympy.sets.sets.Set", false]], "set_acc() (sympy.physics.vector.point.point method)": [[190, "sympy.physics.vector.point.Point.set_acc", false]], "set_ang_acc() (sympy.physics.vector.frame.referenceframe method)": [[186, "sympy.physics.vector.frame.ReferenceFrame.set_ang_acc", false]], "set_ang_vel() (sympy.physics.vector.frame.referenceframe method)": [[186, "sympy.physics.vector.frame.ReferenceFrame.set_ang_vel", false]], "set_comm() (sympy.tensor.tensor._tensormanager method)": [[237, "sympy.tensor.tensor._TensorManager.set_comm", false]], "set_comms() (sympy.tensor.tensor._tensormanager method)": [[237, "sympy.tensor.tensor._TensorManager.set_comms", false]], "set_domain() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.set_domain", false]], "set_global_relative_scale_factor() (sympy.physics.units.quantities.quantity method)": [[183, "sympy.physics.units.quantities.Quantity.set_global_relative_scale_factor", false]], "set_global_settings() (sympy.printing.printer.printer class method)": [[211, "sympy.printing.printer.Printer.set_global_settings", false]], "set_modulus() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.set_modulus", false]], "set_norm() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.set_norm", false]], "set_pos() (sympy.physics.vector.point.point method)": [[190, "sympy.physics.vector.point.Point.set_pos", false]], "set_vel() (sympy.physics.vector.point.point method)": [[190, "sympy.physics.vector.point.Point.set_vel", false]], "seterr() (in module sympy.core.numbers)": [[62, "sympy.core.numbers.seterr", false]], "setkind (class in sympy.sets.conditionset)": [[219, "sympy.sets.conditionset.SetKind", false]], "sets (sympy.sets.fancysets.complexregion property)": [[219, "sympy.sets.fancysets.ComplexRegion.sets", false]], "setup() (in module sympy.polys.polyconfig)": [[204, "sympy.polys.polyconfig.setup", false]], "sfield() (in module sympy.polys.fields)": [[202, "sympy.polys.fields.sfield", false]], "shanks() (in module sympy.series.acceleration)": [[218, "sympy.series.acceleration.shanks", false]], "shape (sympy.matrices.common.matrixcommon property)": [[93, "sympy.matrices.common.MatrixCommon.shape", false]], "shape (sympy.physics.control.lti.mimoparallel property)": [[112, "sympy.physics.control.lti.MIMOParallel.shape", false]], "shape (sympy.physics.control.lti.mimoseries property)": [[112, "sympy.physics.control.lti.MIMOSeries.shape", false]], "shape (sympy.physics.control.lti.transferfunctionmatrix property)": [[112, "sympy.physics.control.lti.TransferFunctionMatrix.shape", false]], "shape (sympy.tensor.indexed.indexed property)": [[236, "sympy.tensor.indexed.Indexed.shape", false]], "shape (sympy.tensor.indexed.indexedbase property)": [[236, "sympy.tensor.indexed.IndexedBase.shape", false]], "shape() (in module sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.shape", false]], "shapeerror (class in sympy.matrices.matrices)": [[98, "sympy.matrices.matrices.ShapeError", false]], "shear_force() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.shear_force", false]], "shear_force() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.shear_force", false]], "shear_modulus (sympy.physics.continuum_mechanics.beam.beam3d property)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.shear_modulus", false]], "shear_stress() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.shear_stress", false]], "shear_stress() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.shear_stress", false]], "shi (class in sympy.functions.special.error_functions)": [[70, "sympy.functions.special.error_functions.Shi", false]], "shift() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.shift", false]], "shift() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.shift", false]], "shift() (sympy.series.fourier.fourierseries method)": [[214, "sympy.series.fourier.FourierSeries.shift", false]], "shiftedgompertz() (in module sympy.stats)": [[231, "sympy.stats.ShiftedGompertz", false]], "shiftx() (sympy.series.fourier.fourierseries method)": [[214, "sympy.series.fourier.FourierSeries.shiftx", false]], "shor() (in module sympy.physics.quantum.shor)": [[172, "sympy.physics.quantum.shor.shor", false]], "si (class in sympy.functions.special.error_functions)": [[70, "sympy.functions.special.error_functions.Si", false]], "sides (sympy.geometry.polygon.polygon property)": [[78, "sympy.geometry.polygon.Polygon.sides", false]], "sieve (class in sympy.ntheory.generate)": [[102, "sympy.ntheory.generate.Sieve", false]], "sift() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.sift", false]], "sigma_approximation() (sympy.series.fourier.fourierseries method)": [[214, "sympy.series.fourier.FourierSeries.sigma_approximation", false]], "sign (class in sympy.functions.elementary.complexes)": [[68, "sympy.functions.elementary.complexes.sign", false]], "sign (sympy.physics.control.lti.feedback property)": [[112, "sympy.physics.control.lti.Feedback.sign", false]], "sign (sympy.physics.control.lti.mimofeedback property)": [[112, "sympy.physics.control.lti.MIMOFeedback.sign", false]], "sign() (in module sympy.series.gruntz)": [[218, "sympy.series.gruntz.sign", false]], "signature (sympy.core.function.lambda property)": [[62, "sympy.core.function.Lambda.signature", false]], "signature() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.signature", false]], "signed_permutations() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.signed_permutations", false]], "signedinttype (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.SignedIntType", false]], "simple_root() (sympy.liealgebras.type_a.typea method)": [[91, "sympy.liealgebras.type_a.TypeA.simple_root", false]], "simple_root() (sympy.liealgebras.type_b.typeb method)": [[91, "sympy.liealgebras.type_b.TypeB.simple_root", false]], "simple_root() (sympy.liealgebras.type_c.typec method)": [[91, "sympy.liealgebras.type_c.TypeC.simple_root", false]], "simple_root() (sympy.liealgebras.type_d.typed method)": [[91, "sympy.liealgebras.type_d.TypeD.simple_root", false]], "simple_root() (sympy.liealgebras.type_e.typee method)": [[91, "sympy.liealgebras.type_e.TypeE.simple_root", false]], "simple_root() (sympy.liealgebras.type_f.typef method)": [[91, "sympy.liealgebras.type_f.TypeF.simple_root", false]], "simple_root() (sympy.liealgebras.type_g.typeg method)": [[91, "sympy.liealgebras.type_g.TypeG.simple_root", false]], "simple_roots() (sympy.liealgebras.root_system.rootsystem method)": [[91, "sympy.liealgebras.root_system.RootSystem.simple_roots", false]], "simplede() (in module sympy.series.formal)": [[213, "sympy.series.formal.simpleDE", false]], "simpledomain (class in sympy.polys.domains.simpledomain)": [[202, "sympy.polys.domains.simpledomain.SimpleDomain", false]], "simplification": [[11, "term-Simplification", true]], "simplify() (in module sympy.simplify.simplify)": [[223, "sympy.simplify.simplify.simplify", false]], "simplify() (sympy.core.basic.basic method)": [[62, "sympy.core.basic.Basic.simplify", false]], "simplify() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.simplify", false]], "simplify() (sympy.matrices.dense.mutabledensematrix method)": [[94, "sympy.matrices.dense.MutableDenseMatrix.simplify", false]], "simplify() (sympy.physics.vector.dyadic.dyadic method)": [[186, "sympy.physics.vector.dyadic.Dyadic.simplify", false]], "simplify() (sympy.physics.vector.vector.vector method)": [[186, "sympy.physics.vector.vector.Vector.simplify", false]], "simplify_gpgp() (in module sympy.physics.hep.gamma_matrices)": [[113, "sympy.physics.hep.gamma_matrices.simplify_gpgp", false]], "simplify_index_permutations() (in module sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.simplify_index_permutations", false]], "simplify_logic() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.simplify_logic", false]], "sin (class in sympy.functions.elementary.trigonometric)": [[68, "sympy.functions.elementary.trigonometric.sin", false]], "sinc (class in sympy.functions.elementary.trigonometric)": [[68, "sympy.functions.elementary.trigonometric.sinc", false]], "sine_transform() (in module sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.sine_transform", false]], "sinetransform (class in sympy.integrals.transforms)": [[89, "sympy.integrals.transforms.SineTransform", false]], "singledomain (class in sympy.stats.rv)": [[231, "sympy.stats.rv.SingleDomain", false]], "singlepspace (class in sympy.stats.rv)": [[231, "sympy.stats.rv.SinglePSpace", false]], "singleton (class in sympy.core.singleton)": [[62, "sympy.core.singleton.Singleton", false]], "singletonregistry (class in sympy.core.singleton)": [[62, "sympy.core.singleton.SingletonRegistry", false]], "singular_points() (sympy.vector.implicitregion.implicitregion method)": [[256, "sympy.vector.implicitregion.ImplicitRegion.singular_points", false]], "singular_value_decomposition() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.singular_value_decomposition", false]], "singular_values() (sympy.matrices.matrices.matrixeigen method)": [[98, "sympy.matrices.matrices.MatrixEigen.singular_values", false]], "singularities() (in module sympy.calculus.singularities)": [[41, "sympy.calculus.singularities.singularities", false]], "singularityfunction (class in sympy.functions.special.singularity_functions)": [[70, "sympy.functions.special.singularity_functions.SingularityFunction", false]], "singularityintegrate() (in module sympy.integrals.singularityfunctions)": [[89, "sympy.integrals.singularityfunctions.singularityintegrate", false]], "singularpredicate (class in sympy.assumptions.predicates.matrices)": [[39, "sympy.assumptions.predicates.matrices.SingularPredicate", false]], "sinh (class in sympy.functions.elementary.hyperbolic)": [[68, "sympy.functions.elementary.hyperbolic.sinh", false]], "size (sympy.combinatorics.permutations.permutation property)": [[54, "sympy.combinatorics.permutations.Permutation.size", false]], "size (sympy.combinatorics.polyhedron.polyhedron property)": [[55, "sympy.combinatorics.polyhedron.Polyhedron.size", false]], "size (sympy.combinatorics.prufer.prufer property)": [[56, "sympy.combinatorics.prufer.Prufer.size", false]], "size (sympy.combinatorics.subsets.subset property)": [[57, "sympy.combinatorics.subsets.Subset.size", false]], "size() (in module sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.size", false]], "sizeof() (in module sympy.codegen.cnodes)": [[43, "sympy.codegen.cnodes.sizeof", false]], "skellam() (in module sympy.stats)": [[231, "sympy.stats.Skellam", false]], "skewness() (in module sympy.stats)": [[231, "sympy.stats.skewness", false]], "skip() (in module sympy.testing.pytest)": [[240, "sympy.testing.pytest.SKIP", false]], "skip() (sympy.combinatorics.graycode.graycode method)": [[46, "sympy.combinatorics.graycode.GrayCode.skip", false]], "skip_under_pyodide() (in module sympy.testing.pytest)": [[240, "sympy.testing.pytest.skip_under_pyodide", false]], "slice() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.slice", false]], "slice() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.slice", false]], "slope (sympy.geometry.line.linearentity2d property)": [[75, "sympy.geometry.line.LinearEntity2D.slope", false]], "slope() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.slope", false]], "slope() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.slope", false]], "smallest_angle_between() (sympy.geometry.line.linearentity method)": [[75, "sympy.geometry.line.LinearEntity.smallest_angle_between", false]], "smith_normal_form() (in module sympy.matrices.normalforms)": [[99, "sympy.matrices.normalforms.smith_normal_form", false]], "smith_normal_form() (in module sympy.polys.matrices.normalforms)": [[200, "sympy.polys.matrices.normalforms.smith_normal_form", false]], "smoothness() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.smoothness", false]], "smoothness_p() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.smoothness_p", false]], "smtlib_code() (in module sympy.printing.smtlib)": [[211, "sympy.printing.smtlib.smtlib_code", false]], "smtlibprinter (class in sympy.printing.smtlib)": [[211, "sympy.printing.smtlib.SMTLibPrinter", false]], "solve": [[11, "term-Solve", true]], "solve() (in module sympy.solvers.solvers)": [[229, "sympy.solvers.solvers.solve", false]], "solve() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.solve", false]], "solve() (sympy.physics.continuum_mechanics.truss.truss method)": [[108, "sympy.physics.continuum_mechanics.truss.Truss.solve", false]], "solve_aux_eq() (in module sympy.solvers.ode.riccati)": [[227, "sympy.solvers.ode.riccati.solve_aux_eq", false]], "solve_congruence() (in module sympy.ntheory.modular)": [[102, "sympy.ntheory.modular.solve_congruence", false]], "solve_de() (in module sympy.series.formal)": [[213, "sympy.series.formal.solve_de", false]], "solve_for_ild_moment() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.solve_for_ild_moment", false]], "solve_for_ild_reactions() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.solve_for_ild_reactions", false]], "solve_for_ild_shear() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.solve_for_ild_shear", false]], "solve_for_reaction_loads() (sympy.physics.continuum_mechanics.beam.beam method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.solve_for_reaction_loads", false]], "solve_for_reaction_loads() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.solve_for_reaction_loads", false]], "solve_for_torsion() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.solve_for_torsion", false]], "solve_least_squares() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.solve_least_squares", false]], "solve_lin_sys() (in module sympy.polys.solvers)": [[209, "sympy.polys.solvers.solve_lin_sys", false]], "solve_linear() (in module sympy.solvers.solvers)": [[229, "sympy.solvers.solvers.solve_linear", false]], "solve_linear_system() (in module sympy.solvers.solvers)": [[229, "sympy.solvers.solvers.solve_linear_system", false]], "solve_linear_system_lu() (in module sympy.solvers.solvers)": [[229, "sympy.solvers.solvers.solve_linear_system_LU", false]], "solve_multipliers() (sympy.physics.mechanics.lagrange.lagrangesmethod method)": [[121, "sympy.physics.mechanics.lagrange.LagrangesMethod.solve_multipliers", false]], "solve_poly_inequalities() (in module sympy.solvers.inequalities)": [[226, "sympy.solvers.inequalities.solve_poly_inequalities", false]], "solve_poly_inequality() (in module sympy.solvers.inequalities)": [[226, "sympy.solvers.inequalities.solve_poly_inequality", false]], "solve_poly_system() (in module sympy.solvers.polysys)": [[229, "sympy.solvers.polysys.solve_poly_system", false]], "solve_rational_inequalities() (in module sympy.solvers.inequalities)": [[226, "sympy.solvers.inequalities.solve_rational_inequalities", false]], "solve_riccati() (in module sympy.solvers.ode.riccati)": [[227, "sympy.solvers.ode.riccati.solve_riccati", false]], "solve_triangulated() (in module sympy.solvers.polysys)": [[229, "sympy.solvers.polysys.solve_triangulated", false]], "solve_undetermined_coeffs() (in module sympy.solvers.solvers)": [[229, "sympy.solvers.solvers.solve_undetermined_coeffs", false]], "solve_univariate_inequality() (in module sympy.solvers.inequalities)": [[226, "sympy.solvers.inequalities.solve_univariate_inequality", false]], "solvers": [[11, "term-Solvers", true]], "solveset() (in module sympy.solvers.solveset)": [[230, "sympy.solvers.solveset.solveset", false]], "solveset_complex() (in module sympy.solvers.solveset)": [[230, "sympy.solvers.solveset.solveset_complex", false]], "solveset_real() (in module sympy.solvers.solveset)": [[230, "sympy.solvers.solveset.solveset_real", false]], "solvify() (in module sympy.solvers.solveset)": [[230, "sympy.solvers.solveset.solvify", false]], "sopform() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.SOPform", false]], "sort_key() (sympy.combinatorics.partitions.partition method)": [[51, "sympy.combinatorics.partitions.Partition.sort_key", false]], "sort_key() (sympy.core.basic.basic method)": [[62, "sympy.core.basic.Basic.sort_key", false]], "sorted_components() (sympy.tensor.tensor.tensmul method)": [[237, "sympy.tensor.tensor.TensMul.sorted_components", false]], "source (sympy.geometry.line.ray property)": [[75, "sympy.geometry.line.Ray.source", false]], "spaceorienter (class in sympy.vector.orienters)": [[258, "sympy.vector.orienters.SpaceOrienter", false]], "spaces (sympy.physics.quantum.hilbert.directsumhilbertspace property)": [[162, "sympy.physics.quantum.hilbert.DirectSumHilbertSpace.spaces", false]], "spaces (sympy.physics.quantum.hilbert.tensorproducthilbertspace property)": [[162, "sympy.physics.quantum.hilbert.TensorProductHilbertSpace.spaces", false]], "sparsematrix (in module sympy.matrices.sparse)": [[100, "sympy.matrices.sparse.SparseMatrix", false]], "speed (sympy.physics.optics.medium.medium property)": [[147, "sympy.physics.optics.medium.Medium.speed", false]], "speed (sympy.physics.optics.waves.twave property)": [[150, "sympy.physics.optics.waves.TWave.speed", false]], "speeds (sympy.physics.mechanics.joint.joint property)": [[120, "sympy.physics.mechanics.joint.Joint.speeds", false]], "speeds (sympy.physics.mechanics.system.symbolicsystem property)": [[125, "sympy.physics.mechanics.system.SymbolicSystem.speeds", false]], "spherical_bessel_fn() (in module sympy.polys.orthopolys)": [[207, "sympy.polys.orthopolys.spherical_bessel_fn", false]], "sphericaljoint (class in sympy.physics.mechanics.joint)": [[120, "sympy.physics.mechanics.joint.SphericalJoint", false]], "spin() (sympy.geometry.polygon.regularpolygon method)": [[78, "sympy.geometry.polygon.RegularPolygon.spin", false]], "split() (sympy.tensor.tensor.tensmul method)": [[237, "sympy.tensor.tensor.TensMul.split", false]], "split_list() (in module sympy.testing.runtests)": [[242, "sympy.testing.runtests.split_list", false]], "split_super_sub() (in module sympy.printing.conventions)": [[211, "sympy.printing.conventions.split_super_sub", false]], "split_symbols() (in module sympy.parsing.sympy_parser)": [[104, "sympy.parsing.sympy_parser.split_symbols", false]], "split_symbols_custom() (in module sympy.parsing.sympy_parser)": [[104, "sympy.parsing.sympy_parser.split_symbols_custom", false]], "spoly() (in module sympy.polys.groebnertools)": [[204, "sympy.polys.groebnertools.spoly", false]], "sqf() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.sqf", false]], "sqf_list() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.sqf_list", false]], "sqf_list() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.sqf_list", false]], "sqf_list() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.sqf_list", false]], "sqf_list_include() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.sqf_list_include", false]], "sqf_list_include() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.sqf_list_include", false]], "sqf_norm() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.sqf_norm", false]], "sqf_norm() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.sqf_norm", false]], "sqf_norm() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.sqf_norm", false]], "sqf_normal() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.sqf_normal", false]], "sqf_part() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.sqf_part", false]], "sqf_part() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.sqf_part", false]], "sqf_part() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.sqf_part", false]], "sqr() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.sqr", false]], "sqr() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.sqr", false]], "sqrt (class in sympy.codegen.cfunctions)": [[43, "sympy.codegen.cfunctions.Sqrt", false]], "sqrt() (in module sympy.functions.elementary.miscellaneous)": [[68, "sympy.functions.elementary.miscellaneous.sqrt", false]], "sqrt() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.sqrt", false]], "sqrt() (sympy.polys.domains.gmpyintegerring method)": [[202, "sympy.polys.domains.GMPYIntegerRing.sqrt", false]], "sqrt() (sympy.polys.domains.integerring method)": [[202, "sympy.polys.domains.IntegerRing.sqrt", false]], "sqrt_mod() (in module sympy.ntheory.residue_ntheory)": [[102, "sympy.ntheory.residue_ntheory.sqrt_mod", false]], "sqrt_mod_iter() (in module sympy.ntheory.residue_ntheory)": [[102, "sympy.ntheory.residue_ntheory.sqrt_mod_iter", false]], "sqrtdenest() (in module sympy.simplify.sqrtdenest)": [[223, "sympy.simplify.sqrtdenest.sqrtdenest", false]], "square() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.square", false]], "square_factor() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.square_factor", false]], "squarepredicate (class in sympy.assumptions.predicates.matrices)": [[39, "sympy.assumptions.predicates.matrices.SquarePredicate", false]], "srepr() (in module sympy.printing.repr)": [[211, "sympy.printing.repr.srepr", false]], "sring() (in module sympy.polys.rings)": [[202, "sympy.polys.rings.sring", false]], "sstr() (in module sympy.printing.str)": [[211, "sympy.printing.str.sstr", false]], "sstrrepr() (in module sympy.printing.str)": [[211, "sympy.printing.str.sstrrepr", false]], "stabilizer() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.stabilizer", false]], "stack() (sympy.printing.pretty.stringpict.stringpict static method)": [[211, "sympy.printing.pretty.stringpict.stringPict.stack", false]], "standard_cartan (class in sympy.liealgebras.cartan_type)": [[91, "sympy.liealgebras.cartan_type.Standard_Cartan", false]], "standard_transformations (in module sympy.parsing.sympy_parser)": [[104, "sympy.parsing.sympy_parser.standard_transformations", false]], "start (sympy.series.sequences.recursiveseq property)": [[217, "sympy.series.sequences.RecursiveSeq.start", false]], "start (sympy.series.sequences.seqbase property)": [[217, "sympy.series.sequences.SeqBase.start", false]], "start (sympy.sets.sets.interval property)": [[219, "sympy.sets.sets.Interval.start", false]], "starts_with_unity() (sympy.polys.numberfields.modules.module method)": [[206, "sympy.polys.numberfields.modules.Module.starts_with_unity", false]], "state (class in sympy.physics.quantum.state)": [[174, "sympy.physics.quantum.state.State", false]], "state() (sympy.physics.secondquant.fixedbosonicbasis method)": [[176, "sympy.physics.secondquant.FixedBosonicBasis.state", false]], "state() (sympy.physics.secondquant.varbosonicbasis method)": [[176, "sympy.physics.secondquant.VarBosonicBasis.state", false]], "state_to_operators() (in module sympy.physics.quantum.operatorset)": [[166, "sympy.physics.quantum.operatorset.state_to_operators", false]], "statebase (class in sympy.physics.quantum.state)": [[174, "sympy.physics.quantum.state.StateBase", false]], "states (sympy.physics.mechanics.system.symbolicsystem property)": [[125, "sympy.physics.mechanics.system.SymbolicSystem.states", false]], "stationary_distribution() (sympy.stats.discretemarkovchain method)": [[231, "sympy.stats.DiscreteMarkovChain.stationary_distribution", false]], "stationary_points() (in module sympy.calculus.util)": [[41, "sympy.calculus.util.stationary_points", false]], "std() (in module sympy.stats)": [[231, "sympy.stats.std", false]], "step_response_numerical_data() (sympy.physics.control.control_plots method)": [[110, "sympy.physics.control.control_plots.step_response_numerical_data", false]], "step_response_plot() (sympy.physics.control.control_plots method)": [[110, "sympy.physics.control.control_plots.step_response_plot", false]], "stieltjes (class in sympy.functions.special.zeta_functions)": [[70, "sympy.functions.special.zeta_functions.stieltjes", false]], "stirling() (in module sympy.functions.combinatorial.numbers)": [[67, "sympy.functions.combinatorial.numbers.stirling", false]], "stokes_vector() (in module sympy.physics.optics.polarization)": [[148, "sympy.physics.optics.polarization.stokes_vector", false]], "stop (sympy.series.sequences.recursiveseq property)": [[217, "sympy.series.sequences.RecursiveSeq.stop", false]], "stop (sympy.series.sequences.seqbase property)": [[217, "sympy.series.sequences.SeqBase.stop", false]], "stream (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.Stream", false]], "strict (sympy.core.relational.relational property)": [[62, "sympy.core.relational.Relational.strict", false]], "strictgreaterthan (class in sympy.core.relational)": [[62, "sympy.core.relational.StrictGreaterThan", false]], "strictlessthan (class in sympy.core.relational)": [[62, "sympy.core.relational.StrictLessThan", false]], "strides (sympy.tensor.indexed.indexedbase property)": [[236, "sympy.tensor.indexed.IndexedBase.strides", false]], "string (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.String", false]], "stringify_expr() (in module sympy.parsing.sympy_parser)": [[104, "sympy.parsing.sympy_parser.stringify_expr", false]], "stringpict (class in sympy.printing.pretty.stringpict)": [[211, "sympy.printing.pretty.stringpict.stringPict", false]], "strip_zero() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.strip_zero", false]], "strlines() (in module sympy.utilities.misc)": [[252, "sympy.utilities.misc.strlines", false]], "strong_gens (sympy.combinatorics.perm_groups.permutationgroup property)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.strong_gens", false]], "strong_presentation() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.strong_presentation", false]], "strongly_connected_components() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.strongly_connected_components", false]], "strongly_connected_components() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.strongly_connected_components", false]], "strongly_connected_components_decomposition() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.strongly_connected_components_decomposition", false]], "strprinter (class in sympy.printing.str)": [[211, "sympy.printing.str.StrPrinter", false]], "struct (class in sympy.codegen.cnodes)": [[43, "sympy.codegen.cnodes.struct", false]], "structural equality": [[11, "term-Structural-Equality", true]], "studentt() (in module sympy.stats)": [[231, "sympy.stats.StudentT", false]], "sturm() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.sturm", false]], "sturm() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.sturm", false]], "sturm() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.sturm", false]], "sub (in module sympy.printing.pretty.pretty_symbology)": [[211, "sympy.printing.pretty.pretty_symbology.sub", false]], "sub() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.sub", false]], "sub() (sympy.polys.matrices.ddm.ddm method)": [[200, "sympy.polys.matrices.ddm.DDM.sub", false]], "sub() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.sub", false]], "sub() (sympy.polys.matrices.sdm.sdm method)": [[200, "sympy.polys.matrices.sdm.SDM.sub", false]], "sub() (sympy.polys.polyclasses.dmf method)": [[202, "sympy.polys.polyclasses.DMF.sub", false]], "sub() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.sub", false]], "sub() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.sub", false]], "sub_ground() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.sub_ground", false]], "sub_ground() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.sub_ground", false]], "subdiagram_from_objects() (sympy.categories.diagram method)": [[42, "sympy.categories.Diagram.subdiagram_from_objects", false]], "subexpression": [[11, "term-Subexpression", true]], "subfactorial (class in sympy.functions.combinatorial.factorials)": [[67, "sympy.functions.combinatorial.factorials.subfactorial", false]], "subgroup() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.subgroup", false]], "subgroup_search() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.subgroup_search", false]], "submodule (class in sympy.polys.agca.modules)": [[198, "sympy.polys.agca.modules.SubModule", false]], "submodule (class in sympy.polys.numberfields.modules)": [[206, "sympy.polys.numberfields.modules.Submodule", false]], "submodule() (sympy.polys.agca.modules.module method)": [[198, "sympy.polys.agca.modules.Module.submodule", false]], "submodule() (sympy.polys.agca.modules.quotientmodule method)": [[198, "sympy.polys.agca.modules.QuotientModule.submodule", false]], "submodule() (sympy.polys.agca.modules.submodule method)": [[198, "sympy.polys.agca.modules.SubModule.submodule", false]], "submodule_from_gens() (sympy.polys.numberfields.modules.module method)": [[206, "sympy.polys.numberfields.modules.Module.submodule_from_gens", false]], "submodule_from_matrix() (sympy.polys.numberfields.modules.module method)": [[206, "sympy.polys.numberfields.modules.Module.submodule_from_matrix", false]], "subquotientmodule (class in sympy.polys.agca.modules)": [[198, "sympy.polys.agca.modules.SubQuotientModule", false]], "subresultants() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.subresultants", false]], "subresultants() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.subresultants", false]], "subresultants() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.subresultants", false]], "subroutine (class in sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.Subroutine", false]], "subroutinecall (class in sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.SubroutineCall", false]], "subs (class in sympy.core.function)": [[62, "sympy.core.function.Subs", false]], "subs() (sympy.core.basic.basic method)": [[62, "sympy.core.basic.Basic.subs", false]], "subs() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.subs", false]], "subs() (sympy.physics.vector.dyadic.dyadic method)": [[186, "sympy.physics.vector.dyadic.Dyadic.subs", false]], "subs() (sympy.physics.vector.vector.vector method)": [[186, "sympy.physics.vector.vector.Vector.subs", false]], "subset (class in sympy.combinatorics.subsets)": [[57, "sympy.combinatorics.subsets.Subset", false]], "subset (sympy.combinatorics.subsets.subset property)": [[57, "sympy.combinatorics.subsets.Subset.subset", false]], "subset() (sympy.polys.agca.ideals.ideal method)": [[198, "sympy.polys.agca.ideals.Ideal.subset", false]], "subset() (sympy.polys.agca.modules.module method)": [[198, "sympy.polys.agca.modules.Module.subset", false]], "subset_from_bitlist() (sympy.combinatorics.subsets.subset class method)": [[57, "sympy.combinatorics.subsets.Subset.subset_from_bitlist", false]], "subset_indices() (sympy.combinatorics.subsets.subset class method)": [[57, "sympy.combinatorics.subsets.Subset.subset_indices", false]], "subsets() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.subsets", false]], "subsset (class in sympy.series.gruntz)": [[218, "sympy.series.gruntz.SubsSet", false]], "substitute_dummies() (in module sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.substitute_dummies", false]], "substitution": [[11, "term-Substitution", true]], "sum (class in sympy.concrete.summations)": [[61, "sympy.concrete.summations.Sum", false]], "sum_of_four_squares() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.sum_of_four_squares", false]], "sum_of_powers() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.sum_of_powers", false]], "sum_of_squares() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.sum_of_squares", false]], "sum_of_three_squares() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.sum_of_three_squares", false]], "sumapprox (class in sympy.codegen.approximations)": [[43, "sympy.codegen.approximations.SumApprox", false]], "summation() (in module sympy.concrete.summations)": [[61, "sympy.concrete.summations.summation", false]], "sup (in module sympy.printing.pretty.pretty_symbology)": [[211, "sympy.printing.pretty.pretty_symbology.sup", false]], "sup (sympy.sets.sets.set property)": [[219, "sympy.sets.sets.Set.sup", false]], "superposition_basis() (in module sympy.physics.quantum.grover)": [[161, "sympy.physics.quantum.grover.superposition_basis", false]], "superset (sympy.combinatorics.subsets.subset property)": [[57, "sympy.combinatorics.subsets.Subset.superset", false]], "superset_size (sympy.combinatorics.subsets.subset property)": [[57, "sympy.combinatorics.subsets.Subset.superset_size", false]], "supplement_a_subspace() (in module sympy.polys.numberfields.utilities)": [[206, "sympy.polys.numberfields.utilities.supplement_a_subspace", false]], "support() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.support", false]], "supports (sympy.physics.continuum_mechanics.truss.truss property)": [[108, "sympy.physics.continuum_mechanics.truss.Truss.supports", false]], "surfacebaseseries (class in sympy.plotting.plot)": [[197, "sympy.plotting.plot.SurfaceBaseSeries", false]], "surfaceover2drangeseries (class in sympy.plotting.plot)": [[197, "sympy.plotting.plot.SurfaceOver2DRangeSeries", false]], "swap (in module sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.SWAP", false]], "swap_point() (sympy.physics.quantum.circuitplot.circuitplot method)": [[156, "sympy.physics.quantum.circuitplot.CircuitPlot.swap_point", false]], "swapgate (class in sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.SwapGate", false]], "swinnerton_dyer_poly() (in module sympy.polys.specialpolys)": [[207, "sympy.polys.specialpolys.swinnerton_dyer_poly", false]], "sylow_subgroup() (sympy.combinatorics.perm_groups.permutationgroup method)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.sylow_subgroup", false]], "symarray() (in module sympy.matrices.dense)": [[98, "sympy.matrices.dense.symarray", false]], "symb_2txt (in module sympy.printing.pretty.pretty_symbology)": [[211, "sympy.printing.pretty.pretty_symbology.symb_2txt", false]], "symbol": [[11, "term-Symbol", true]], "symbol (class in sympy.core.symbol)": [[62, "sympy.core.symbol.Symbol", false]], "symbol (sympy.physics.secondquant.antisymmetrictensor property)": [[176, "sympy.physics.secondquant.AntiSymmetricTensor.symbol", false]], "symbolic": [[11, "term-Symbolic", true]], "symbolicsystem (class in sympy.physics.mechanics.system)": [[125, "sympy.physics.mechanics.system.SymbolicSystem", false]], "symbols() (in module sympy.core.symbol)": [[62, "sympy.core.symbol.symbols", false]], "symmetric() (sympy.combinatorics.generators method)": [[54, "sympy.combinatorics.generators.symmetric", false]], "symmetric_difference() (sympy.sets.sets.set method)": [[219, "sympy.sets.sets.Set.symmetric_difference", false]], "symmetric_poly() (in module sympy.polys.specialpolys)": [[207, "sympy.polys.specialpolys.symmetric_poly", false]], "symmetric_poly() (sympy.polys.rings.polyring method)": [[202, "sympy.polys.rings.PolyRing.symmetric_poly", false]], "symmetric_residue() (in module sympy.ntheory.modular)": [[102, "sympy.ntheory.modular.symmetric_residue", false]], "symmetricdifference (class in sympy.sets.sets)": [[219, "sympy.sets.sets.SymmetricDifference", false]], "symmetricgroup() (in module sympy.combinatorics.named_groups)": [[50, "sympy.combinatorics.named_groups.SymmetricGroup", false]], "symmetricpredicate (class in sympy.assumptions.predicates.matrices)": [[39, "sympy.assumptions.predicates.matrices.SymmetricPredicate", false]], "symmetrize() (in module sympy.polys.polyfuncs)": [[207, "sympy.polys.polyfuncs.symmetrize", false]], "symmetrize() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.symmetrize", false]], "sympify()": [[11, "term-sympify", true]], "sympify() (in module sympy.core.sympify)": [[62, "sympy.core.sympify.sympify", false]], "sympy": [[32, "module-sympy", false]], "sympy.abc": [[34, "module-sympy.abc", false]], "sympy.algebras": [[35, "module-sympy.algebras", false]], "sympy.assumptions": [[38, "module-sympy.assumptions", false]], "sympy.assumptions.ask": [[36, "module-sympy.assumptions.ask", false]], "sympy.assumptions.assume": [[37, "module-sympy.assumptions.assume", false]], "sympy.assumptions.predicates": [[39, "module-sympy.assumptions.predicates", false]], "sympy.assumptions.refine": [[40, "module-sympy.assumptions.refine", false]], "sympy.calculus": [[41, "module-sympy.calculus", false]], "sympy.calculus.euler": [[41, "module-sympy.calculus.euler", false]], "sympy.calculus.finite_diff": [[41, "module-sympy.calculus.finite_diff", false]], "sympy.calculus.singularities": [[41, "module-sympy.calculus.singularities", false]], "sympy.calculus.util": [[41, "module-sympy.calculus.util", false]], "sympy.categories": [[42, "module-sympy.categories", false]], "sympy.categories.diagram_drawing": [[42, "module-sympy.categories.diagram_drawing", false]], "sympy.codegen.algorithms": [[43, "module-sympy.codegen.algorithms", false]], "sympy.codegen.approximations": [[43, "module-sympy.codegen.approximations", false]], "sympy.codegen.ast": [[43, "module-sympy.codegen.ast", false]], "sympy.codegen.cfunctions": [[43, "module-sympy.codegen.cfunctions", false]], "sympy.codegen.cnodes": [[43, "module-sympy.codegen.cnodes", false]], "sympy.codegen.cutils": [[43, "module-sympy.codegen.cutils", false]], "sympy.codegen.cxxnodes": [[43, "module-sympy.codegen.cxxnodes", false]], "sympy.codegen.fnodes": [[43, "module-sympy.codegen.fnodes", false]], "sympy.codegen.futils": [[43, "module-sympy.codegen.futils", false]], "sympy.codegen.matrix_nodes": [[43, "module-sympy.codegen.matrix_nodes", false]], "sympy.codegen.pyutils": [[43, "module-sympy.codegen.pyutils", false]], "sympy.codegen.rewriting": [[43, "module-sympy.codegen.rewriting", false]], "sympy.combinatorics.galois": [[45, "module-sympy.combinatorics.galois", false]], "sympy.combinatorics.generators": [[54, "module-sympy.combinatorics.generators", false]], "sympy.combinatorics.graycode": [[46, "module-sympy.combinatorics.graycode", false]], "sympy.combinatorics.group_constructs": [[47, "module-sympy.combinatorics.group_constructs", false]], "sympy.combinatorics.group_numbers": [[48, "module-sympy.combinatorics.group_numbers", false]], "sympy.combinatorics.named_groups": [[50, "module-sympy.combinatorics.named_groups", false]], "sympy.combinatorics.partitions": [[51, "module-sympy.combinatorics.partitions", false]], "sympy.combinatorics.perm_groups": [[53, "module-sympy.combinatorics.perm_groups", false]], "sympy.combinatorics.permutations": [[54, "module-sympy.combinatorics.permutations", false]], "sympy.combinatorics.polyhedron": [[55, "module-sympy.combinatorics.polyhedron", false]], "sympy.combinatorics.prufer": [[56, "module-sympy.combinatorics.prufer", false]], "sympy.combinatorics.subsets": [[57, "module-sympy.combinatorics.subsets", false]], "sympy.combinatorics.tensor_can": [[58, "module-sympy.combinatorics.tensor_can", false]], "sympy.combinatorics.testutil": [[59, "module-sympy.combinatorics.testutil", false]], "sympy.combinatorics.util": [[60, "module-sympy.combinatorics.util", false]], "sympy.core.add": [[62, "module-sympy.core.add", false]], "sympy.core.assumptions": [[62, "module-sympy.core.assumptions", false]], "sympy.core.basic": [[62, "module-sympy.core.basic", false]], "sympy.core.cache": [[62, "module-sympy.core.cache", false]], "sympy.core.containers": [[62, "module-sympy.core.containers", false]], "sympy.core.evalf": [[62, "module-sympy.core.evalf", false]], "sympy.core.expr": [[62, "module-sympy.core.expr", false]], "sympy.core.exprtools": [[62, "module-sympy.core.exprtools", false]], "sympy.core.function": [[62, "module-sympy.core.function", false]], "sympy.core.kind": [[62, "module-sympy.core.kind", false]], "sympy.core.mod": [[62, "module-sympy.core.mod", false]], "sympy.core.mul": [[62, "module-sympy.core.mul", false]], "sympy.core.multidimensional": [[62, "module-sympy.core.multidimensional", false]], "sympy.core.numbers": [[62, "module-sympy.core.numbers", false]], "sympy.core.power": [[62, "module-sympy.core.power", false]], "sympy.core.random": [[62, "module-sympy.core.random", false]], "sympy.core.relational": [[62, "module-sympy.core.relational", false]], "sympy.core.singleton": [[62, "module-sympy.core.singleton", false]], "sympy.core.symbol": [[62, "module-sympy.core.symbol", false]], "sympy.core.sympify": [[62, "module-sympy.core.sympify", false]], "sympy.core.traversal": [[62, "module-sympy.core.traversal", false]], "sympy.crypto.crypto": [[63, "module-sympy.crypto.crypto", false]], "sympy.diffgeom": [[64, "module-sympy.diffgeom", false]], "sympy.discrete": [[65, "module-sympy.discrete", false]], "sympy.discrete.convolutions": [[65, "module-sympy.discrete.convolutions", false]], "sympy.discrete.transforms": [[65, "module-sympy.discrete.transforms", false]], "sympy.functions": [[69, "module-sympy.functions", false]], "sympy.functions.special.bessel": [[70, "module-sympy.functions.special.bessel", false]], "sympy.functions.special.beta_functions": [[70, "module-sympy.functions.special.beta_functions", false]], "sympy.functions.special.elliptic_integrals": [[70, "module-sympy.functions.special.elliptic_integrals", false]], "sympy.functions.special.error_functions": [[70, "module-sympy.functions.special.error_functions", false]], "sympy.functions.special.gamma_functions": [[70, "module-sympy.functions.special.gamma_functions", false]], "sympy.functions.special.mathieu_functions": [[70, "module-sympy.functions.special.mathieu_functions", false]], "sympy.functions.special.polynomials": [[70, "module-sympy.functions.special.polynomials", false]], "sympy.functions.special.singularity_functions": [[70, "module-sympy.functions.special.singularity_functions", false]], "sympy.functions.special.zeta_functions": [[70, "module-sympy.functions.special.zeta_functions", false]], "sympy.geometry.curve": [[71, "module-sympy.geometry.curve", false]], "sympy.geometry.ellipse": [[72, "module-sympy.geometry.ellipse", false]], "sympy.geometry.entity": [[73, "module-sympy.geometry.entity", false]], "sympy.geometry.line": [[75, "module-sympy.geometry.line", false]], "sympy.geometry.plane": [[76, "module-sympy.geometry.plane", false]], "sympy.geometry.point": [[77, "module-sympy.geometry.point", false]], "sympy.geometry.polygon": [[78, "module-sympy.geometry.polygon", false]], "sympy.geometry.util": [[79, "module-sympy.geometry.util", false]], "sympy.holonomic": [[82, "module-sympy.holonomic", false]], "sympy.integrals": [[89, "module-sympy.integrals", false]], "sympy.integrals.intpoly": [[89, "module-sympy.integrals.intpoly", false]], "sympy.integrals.meijerint": [[87, "module-sympy.integrals.meijerint", false]], "sympy.integrals.meijerint_doc": [[87, "module-sympy.integrals.meijerint_doc", false]], "sympy.integrals.transforms": [[89, "module-sympy.integrals.transforms", false]], "sympy.interactive": [[90, "module-sympy.interactive", false]], "sympy.interactive.printing": [[90, "module-sympy.interactive.printing", false]], "sympy.interactive.session": [[90, "module-sympy.interactive.session", false]], "sympy.liealgebras": [[91, "module-sympy.liealgebras", false]], "sympy.logic": [[92, "module-sympy.logic", false]], "sympy.logic.inference": [[92, "module-sympy.logic.inference", false]], "sympy.matrices": [[97, "module-sympy.matrices", false]], "sympy.matrices.common": [[93, "module-sympy.matrices.common", false]], "sympy.matrices.expressions": [[95, "module-sympy.matrices.expressions", false]], "sympy.matrices.expressions.blockmatrix": [[95, "module-sympy.matrices.expressions.blockmatrix", false]], "sympy.matrices.immutable": [[96, "module-sympy.matrices.immutable", false]], "sympy.matrices.matrices": [[98, "module-sympy.matrices.matrices", false]], "sympy.matrices.sparse": [[100, "module-sympy.matrices.sparse", false]], "sympy.matrices.sparsetools": [[101, "module-sympy.matrices.sparsetools", false]], "sympy.ntheory.bbp_pi": [[102, "module-sympy.ntheory.bbp_pi", false]], "sympy.ntheory.continued_fraction": [[102, "module-sympy.ntheory.continued_fraction", false]], "sympy.ntheory.digits": [[102, "module-sympy.ntheory.digits", false]], "sympy.ntheory.ecm": [[102, "module-sympy.ntheory.ecm", false]], "sympy.ntheory.egyptian_fraction": [[102, "module-sympy.ntheory.egyptian_fraction", false]], "sympy.ntheory.factor_": [[102, "module-sympy.ntheory.factor_", false]], "sympy.ntheory.generate": [[102, "module-sympy.ntheory.generate", false]], "sympy.ntheory.modular": [[102, "module-sympy.ntheory.modular", false]], "sympy.ntheory.multinomial": [[102, "module-sympy.ntheory.multinomial", false]], "sympy.ntheory.partitions_": [[102, "module-sympy.ntheory.partitions_", false]], "sympy.ntheory.primetest": [[102, "module-sympy.ntheory.primetest", false]], "sympy.ntheory.qs": [[102, "module-sympy.ntheory.qs", false]], "sympy.ntheory.residue_ntheory": [[102, "module-sympy.ntheory.residue_ntheory", false]], "sympy.parsing": [[104, "module-sympy.parsing", false]], "sympy.parsing.sym_expr": [[104, "module-sympy.parsing.sym_expr", false]], "sympy.physics": [[273, "module-sympy.physics", false]], "sympy.physics.continuum_mechanics.beam": [[105, "module-sympy.physics.continuum_mechanics.beam", false]], "sympy.physics.continuum_mechanics.truss": [[108, "module-sympy.physics.continuum_mechanics.truss", false]], "sympy.physics.control": [[111, "module-sympy.physics.control", false]], "sympy.physics.control.lti": [[112, "module-sympy.physics.control.lti", false]], "sympy.physics.hep.gamma_matrices": [[113, "module-sympy.physics.hep.gamma_matrices", false]], "sympy.physics.hydrogen": [[114, "module-sympy.physics.hydrogen", false]], "sympy.physics.matrices": [[115, "module-sympy.physics.matrices", false]], "sympy.physics.mechanics": [[136, "module-sympy.physics.mechanics", false]], "sympy.physics.mechanics.body": [[117, "module-sympy.physics.mechanics.body", false]], "sympy.physics.mechanics.joint": [[120, "module-sympy.physics.mechanics.joint", false]], "sympy.physics.mechanics.jointsmethod": [[120, "module-sympy.physics.mechanics.jointsmethod", false]], "sympy.physics.mechanics.kane": [[121, "module-sympy.physics.mechanics.kane", false]], "sympy.physics.mechanics.lagrange": [[121, "module-sympy.physics.mechanics.lagrange", false]], "sympy.physics.mechanics.linearize": [[122, "module-sympy.physics.mechanics.linearize", false]], "sympy.physics.mechanics.particle": [[123, "module-sympy.physics.mechanics.particle", false]], "sympy.physics.mechanics.rigidbody": [[123, "module-sympy.physics.mechanics.rigidbody", false]], "sympy.physics.mechanics.system": [[125, "module-sympy.physics.mechanics.system", false]], "sympy.physics.optics.gaussopt": [[145, "module-sympy.physics.optics.gaussopt", false]], "sympy.physics.optics.medium": [[147, "module-sympy.physics.optics.medium", false]], "sympy.physics.optics.polarization": [[148, "module-sympy.physics.optics.polarization", false]], "sympy.physics.optics.utils": [[149, "module-sympy.physics.optics.utils", false]], "sympy.physics.optics.waves": [[150, "module-sympy.physics.optics.waves", false]], "sympy.physics.paulialgebra": [[151, "module-sympy.physics.paulialgebra", false]], "sympy.physics.qho_1d": [[152, "module-sympy.physics.qho_1d", false]], "sympy.physics.quantum.anticommutator": [[153, "module-sympy.physics.quantum.anticommutator", false]], "sympy.physics.quantum.cartesian": [[154, "module-sympy.physics.quantum.cartesian", false]], "sympy.physics.quantum.cg": [[155, "module-sympy.physics.quantum.cg", false]], "sympy.physics.quantum.circuitplot": [[156, "module-sympy.physics.quantum.circuitplot", false]], "sympy.physics.quantum.commutator": [[157, "module-sympy.physics.quantum.commutator", false]], "sympy.physics.quantum.constants": [[158, "module-sympy.physics.quantum.constants", false]], "sympy.physics.quantum.dagger": [[159, "module-sympy.physics.quantum.dagger", false]], "sympy.physics.quantum.gate": [[160, "module-sympy.physics.quantum.gate", false]], "sympy.physics.quantum.grover": [[161, "module-sympy.physics.quantum.grover", false]], "sympy.physics.quantum.hilbert": [[162, "module-sympy.physics.quantum.hilbert", false]], "sympy.physics.quantum.innerproduct": [[164, "module-sympy.physics.quantum.innerproduct", false]], "sympy.physics.quantum.operator": [[165, "module-sympy.physics.quantum.operator", false]], "sympy.physics.quantum.operatorset": [[166, "module-sympy.physics.quantum.operatorset", false]], "sympy.physics.quantum.piab": [[167, "module-sympy.physics.quantum.piab", false]], "sympy.physics.quantum.qapply": [[168, "module-sympy.physics.quantum.qapply", false]], "sympy.physics.quantum.qft": [[169, "module-sympy.physics.quantum.qft", false]], "sympy.physics.quantum.qubit": [[170, "module-sympy.physics.quantum.qubit", false]], "sympy.physics.quantum.represent": [[171, "module-sympy.physics.quantum.represent", false]], "sympy.physics.quantum.shor": [[172, "module-sympy.physics.quantum.shor", false]], "sympy.physics.quantum.spin": [[173, "module-sympy.physics.quantum.spin", false]], "sympy.physics.quantum.state": [[174, "module-sympy.physics.quantum.state", false]], "sympy.physics.quantum.tensorproduct": [[175, "module-sympy.physics.quantum.tensorproduct", false]], "sympy.physics.secondquant": [[176, "module-sympy.physics.secondquant", false]], "sympy.physics.sho": [[177, "module-sympy.physics.sho", false]], "sympy.physics.units.dimensions": [[178, "module-sympy.physics.units.dimensions", false]], "sympy.physics.units.prefixes": [[182, "module-sympy.physics.units.prefixes", false]], "sympy.physics.units.quantities": [[183, "module-sympy.physics.units.quantities", false]], "sympy.physics.units.unitsystem": [[184, "module-sympy.physics.units.unitsystem", false]], "sympy.physics.units.util": [[183, "module-sympy.physics.units.util", false]], "sympy.physics.vector": [[193, "module-sympy.physics.vector", false]], "sympy.physics.vector.functions": [[190, "module-sympy.physics.vector.functions", false]], "sympy.physics.vector.point": [[190, "module-sympy.physics.vector.point", false]], "sympy.physics.wigner": [[196, "module-sympy.physics.wigner", false]], "sympy.plotting.plot": [[197, "module-sympy.plotting.plot", false]], "sympy.plotting.pygletplot": [[197, "module-sympy.plotting.pygletplot", false]], "sympy.polys": [[207, "module-sympy.polys", false]], "sympy.polys.numberfields.modules": [[206, "module-sympy.polys.numberfields.modules", false]], "sympy.polys.numberfields.subfield": [[206, "module-sympy.polys.numberfields.subfield", false]], "sympy.polys.polyconfig": [[204, "module-sympy.polys.polyconfig", false]], "sympy.polys.polyoptions": [[204, "module-sympy.polys.polyoptions", false]], "sympy.polys.solvers": [[209, "module-sympy.polys.solvers", false]], "sympy.printing.aesaracode": [[211, "module-sympy.printing.aesaracode", false]], "sympy.printing.c": [[211, "module-sympy.printing.c", false]], "sympy.printing.codeprinter": [[211, "module-sympy.printing.codeprinter", false]], "sympy.printing.conventions": [[211, "module-sympy.printing.conventions", false]], "sympy.printing.cxx": [[211, "module-sympy.printing.cxx", false]], "sympy.printing.fortran": [[211, "module-sympy.printing.fortran", false]], "sympy.printing.gtk": [[211, "module-sympy.printing.gtk", false]], "sympy.printing.jscode": [[211, "module-sympy.printing.jscode", false]], "sympy.printing.julia": [[211, "module-sympy.printing.julia", false]], "sympy.printing.lambdarepr": [[211, "module-sympy.printing.lambdarepr", false]], "sympy.printing.latex": [[211, "module-sympy.printing.latex", false]], "sympy.printing.maple": [[211, "module-sympy.printing.maple", false]], "sympy.printing.mathematica": [[211, "module-sympy.printing.mathematica", false]], "sympy.printing.mathml": [[211, "module-sympy.printing.mathml", false]], "sympy.printing.octave": [[211, "module-sympy.printing.octave", false]], "sympy.printing.precedence": [[211, "module-sympy.printing.precedence", false]], "sympy.printing.pretty": [[211, "module-sympy.printing.pretty", false]], "sympy.printing.pretty.pretty": [[211, "module-sympy.printing.pretty.pretty", false]], "sympy.printing.pretty.pretty_symbology": [[211, "module-sympy.printing.pretty.pretty_symbology", false]], "sympy.printing.pretty.stringpict": [[211, "module-sympy.printing.pretty.stringpict", false]], "sympy.printing.preview": [[211, "module-sympy.printing.preview", false]], "sympy.printing.printer": [[211, "module-sympy.printing.printer", false]], "sympy.printing.pycode": [[211, "module-sympy.printing.pycode", false]], "sympy.printing.python": [[211, "module-sympy.printing.python", false]], "sympy.printing.rcode": [[211, "module-sympy.printing.rcode", false]], "sympy.printing.repr": [[211, "module-sympy.printing.repr", false]], "sympy.printing.rust": [[211, "module-sympy.printing.rust", false]], "sympy.printing.smtlib": [[211, "module-sympy.printing.smtlib", false]], "sympy.printing.str": [[211, "module-sympy.printing.str", false]], "sympy.printing.tree": [[211, "module-sympy.printing.tree", false]], "sympy.sets.conditionset": [[219, "module-sympy.sets.conditionset", false]], "sympy.sets.fancysets": [[219, "module-sympy.sets.fancysets", false]], "sympy.sets.powerset": [[219, "module-sympy.sets.powerset", false]], "sympy.sets.sets": [[219, "module-sympy.sets.sets", false]], "sympy.simplify.combsimp": [[223, "module-sympy.simplify.combsimp", false]], "sympy.simplify.cse_main": [[223, "module-sympy.simplify.cse_main", false]], "sympy.simplify.epathtools": [[223, "module-sympy.simplify.epathtools", false]], "sympy.simplify.hyperexpand": [[223, "module-sympy.simplify.hyperexpand", false]], "sympy.simplify.hyperexpand_doc": [[221, "module-sympy.simplify.hyperexpand_doc", false]], "sympy.simplify.powsimp": [[223, "module-sympy.simplify.powsimp", false]], "sympy.simplify.radsimp": [[223, "module-sympy.simplify.radsimp", false]], "sympy.simplify.ratsimp": [[223, "module-sympy.simplify.ratsimp", false]], "sympy.simplify.simplify": [[12, "module-sympy.simplify.simplify", false]], "sympy.simplify.sqrtdenest": [[223, "module-sympy.simplify.sqrtdenest", false]], "sympy.simplify.trigsimp": [[223, "module-sympy.simplify.trigsimp", false]], "sympy.solvers": [[229, "module-sympy.solvers", false]], "sympy.solvers.inequalities": [[226, "module-sympy.solvers.inequalities", false]], "sympy.solvers.ode": [[227, "module-sympy.solvers.ode", false]], "sympy.solvers.ode.ode": [[227, "module-sympy.solvers.ode.ode", false]], "sympy.solvers.pde": [[228, "module-sympy.solvers.pde", false]], "sympy.solvers.recurr": [[229, "module-sympy.solvers.recurr", false]], "sympy.solvers.solveset": [[230, "module-sympy.solvers.solveset", false]], "sympy.stats": [[231, "module-sympy.stats", false]], "sympy.stats.crv": [[231, "module-sympy.stats.crv", false]], "sympy.stats.crv_types": [[231, "module-sympy.stats.crv_types", false]], "sympy.stats.die() (in module sympy.stats.crv_types)": [[231, "sympy.stats.crv_types.sympy.stats.Die", false]], "sympy.stats.frv": [[231, "module-sympy.stats.frv", false]], "sympy.stats.frv_types": [[231, "module-sympy.stats.frv_types", false]], "sympy.stats.normal() (in module sympy.stats.crv_types)": [[231, "sympy.stats.crv_types.sympy.stats.Normal", false]], "sympy.stats.rv": [[231, "module-sympy.stats.rv", false]], "sympy.tensor": [[234, "module-sympy.tensor", false]], "sympy.tensor.array": [[232, "module-sympy.tensor.array", false]], "sympy.tensor.array.expressions": [[233, "module-sympy.tensor.array.expressions", false]], "sympy.tensor.index_methods": [[235, "module-sympy.tensor.index_methods", false]], "sympy.tensor.indexed": [[236, "module-sympy.tensor.indexed", false]], "sympy.tensor.tensor": [[237, "module-sympy.tensor.tensor", false]], "sympy.tensor.toperators": [[238, "module-sympy.tensor.toperators", false]], "sympy.testing": [[239, "module-sympy.testing", false]], "sympy.testing.pytest": [[240, "module-sympy.testing.pytest", false]], "sympy.testing.randtest": [[241, "module-sympy.testing.randtest", false]], "sympy.testing.runtests": [[242, "module-sympy.testing.runtests", false]], "sympy.utilities": [[248, "module-sympy.utilities", false]], "sympy.utilities.autowrap": [[243, "module-sympy.utilities.autowrap", false]], "sympy.utilities.codegen": [[244, "module-sympy.utilities.codegen", false]], "sympy.utilities.decorator": [[245, "module-sympy.utilities.decorator", false]], "sympy.utilities.enumerative": [[246, "module-sympy.utilities.enumerative", false]], "sympy.utilities.exceptions": [[247, "module-sympy.utilities.exceptions", false]], "sympy.utilities.iterables": [[249, "module-sympy.utilities.iterables", false]], "sympy.utilities.lambdify": [[250, "module-sympy.utilities.lambdify", false]], "sympy.utilities.memoization": [[251, "module-sympy.utilities.memoization", false]], "sympy.utilities.misc": [[252, "module-sympy.utilities.misc", false]], "sympy.utilities.pkgdata": [[253, "module-sympy.utilities.pkgdata", false]], "sympy.utilities.source": [[254, "module-sympy.utilities.source", false]], "sympy.utilities.timeutils": [[255, "module-sympy.utilities.timeutils", false]], "sympy.vector": [[264, "module-sympy.vector", false]], "sympy_deprecation_warning() (in module sympy.utilities.exceptions)": [[247, "sympy.utilities.exceptions.sympy_deprecation_warning", false]], "sympy_eqs_to_ring() (in module sympy.polys.solvers)": [[209, "sympy.polys.solvers.sympy_eqs_to_ring", false]], "sympydeprecationwarning": [[247, "sympy.utilities.exceptions.SymPyDeprecationWarning", false]], "sympydoctestfinder (class in sympy.testing.runtests)": [[242, "sympy.testing.runtests.SymPyDocTestFinder", false]], "sympydoctestrunner (class in sympy.testing.runtests)": [[242, "sympy.testing.runtests.SymPyDocTestRunner", false]], "sympyexpression (class in sympy.parsing.sym_expr)": [[104, "sympy.parsing.sym_expr.SymPyExpression", false]], "sympyoutputchecker (class in sympy.testing.runtests)": [[242, "sympy.testing.runtests.SymPyOutputChecker", false]], "sympytestfile() (in module sympy.testing.runtests)": [[242, "sympy.testing.runtests.sympytestfile", false]], "sympytestresults (class in sympy.testing.runtests)": [[242, "sympy.testing.runtests.SymPyTestResults", false]], "sys1 (sympy.physics.control.lti.feedback property)": [[112, "sympy.physics.control.lti.Feedback.sys1", false]], "sys1 (sympy.physics.control.lti.mimofeedback property)": [[112, "sympy.physics.control.lti.MIMOFeedback.sys1", false]], "sys2 (sympy.physics.control.lti.feedback property)": [[112, "sympy.physics.control.lti.Feedback.sys2", false]], "sys2 (sympy.physics.control.lti.mimofeedback property)": [[112, "sympy.physics.control.lti.MIMOFeedback.sys2", false]], "syzygy_module() (sympy.polys.agca.modules.submodule method)": [[198, "sympy.polys.agca.modules.SubModule.syzygy_module", false]], "t (in module sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.T", false]], "t (sympy.matrices.common.matrixcommon property)": [[93, "sympy.matrices.common.MatrixCommon.T", false]], "t (sympy.matrices.expressions.matrixexpr property)": [[95, "sympy.matrices.expressions.MatrixExpr.T", false]], "t (sympy.physics.quantum.shor.cmod property)": [[172, "sympy.physics.quantum.shor.CMod.t", false]], "t (sympy.polys.numberfields.modules.powerbasiselement property)": [[206, "sympy.polys.numberfields.modules.PowerBasisElement.T", false]], "table() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.table", false]], "tail_degree() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.tail_degree", false]], "tail_degrees() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.tail_degrees", false]], "take() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.take", false]], "tan (class in sympy.functions.elementary.trigonometric)": [[68, "sympy.functions.elementary.trigonometric.tan", false]], "tangent_lines() (sympy.geometry.ellipse.ellipse method)": [[72, "sympy.geometry.ellipse.Ellipse.tangent_lines", false]], "tanh (class in sympy.functions.elementary.hyperbolic)": [[68, "sympy.functions.elementary.hyperbolic.tanh", false]], "targets (sympy.physics.quantum.gate.cgate property)": [[160, "sympy.physics.quantum.gate.CGate.targets", false]], "targets (sympy.physics.quantum.gate.cnotgate property)": [[160, "sympy.physics.quantum.gate.CNotGate.targets", false]], "targets (sympy.physics.quantum.gate.gate property)": [[160, "sympy.physics.quantum.gate.Gate.targets", false]], "targets (sympy.physics.quantum.gate.ugate property)": [[160, "sympy.physics.quantum.gate.UGate.targets", false]], "targets (sympy.physics.quantum.grover.oraclegate property)": [[161, "sympy.physics.quantum.grover.OracleGate.targets", false]], "taxicab_distance() (sympy.geometry.point.point method)": [[77, "sympy.geometry.point.Point.taxicab_distance", false]], "taylor_term() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.taylor_term", false]], "taylor_term() (sympy.functions.elementary.exponential.exp static method)": [[68, "sympy.functions.elementary.exponential.exp.taylor_term", false]], "taylor_term() (sympy.functions.elementary.exponential.log static method)": [[68, "sympy.functions.elementary.exponential.log.taylor_term", false]], "taylor_term() (sympy.functions.elementary.hyperbolic.csch static method)": [[68, "sympy.functions.elementary.hyperbolic.csch.taylor_term", false]], "taylor_term() (sympy.functions.elementary.hyperbolic.sinh static method)": [[68, "sympy.functions.elementary.hyperbolic.sinh.taylor_term", false]], "tc() (sympy.polys.polyclasses.anp method)": [[202, "sympy.polys.polyclasses.ANP.TC", false]], "tc() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.TC", false]], "tc() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.TC", false]], "tensadd (class in sympy.tensor.tensor)": [[237, "sympy.tensor.tensor.TensAdd", false]], "tensexpr (class in sympy.tensor.tensor)": [[237, "sympy.tensor.tensor.TensExpr", false]], "tensmul (class in sympy.tensor.tensor)": [[237, "sympy.tensor.tensor.TensMul", false]], "tensor_heads() (in module sympy.tensor.tensor)": [[237, "sympy.tensor.tensor.tensor_heads", false]], "tensor_product_simp() (in module sympy.physics.quantum.tensorproduct)": [[175, "sympy.physics.quantum.tensorproduct.tensor_product_simp", false]], "tensorcontraction() (in module sympy.tensor.array)": [[232, "sympy.tensor.array.tensorcontraction", false]], "tensordiagonal() (in module sympy.tensor.array)": [[232, "sympy.tensor.array.tensordiagonal", false]], "tensorhead (class in sympy.tensor.tensor)": [[237, "sympy.tensor.tensor.TensorHead", false]], "tensorindex (class in sympy.tensor.tensor)": [[237, "sympy.tensor.tensor.TensorIndex", false]], "tensorindextype (class in sympy.tensor.tensor)": [[237, "sympy.tensor.tensor.TensorIndexType", false]], "tensorpowerhilbertspace (class in sympy.physics.quantum.hilbert)": [[162, "sympy.physics.quantum.hilbert.TensorPowerHilbertSpace", false]], "tensorproduct (class in sympy.diffgeom)": [[64, "sympy.diffgeom.TensorProduct", false]], "tensorproduct (class in sympy.physics.quantum.tensorproduct)": [[175, "sympy.physics.quantum.tensorproduct.TensorProduct", false]], "tensorproduct() (in module sympy.tensor.array)": [[232, "sympy.tensor.array.tensorproduct", false]], "tensorproducthilbertspace (class in sympy.physics.quantum.hilbert)": [[162, "sympy.physics.quantum.hilbert.TensorProductHilbertSpace", false]], "tensorsymmetry (class in sympy.tensor.tensor)": [[237, "sympy.tensor.tensor.TensorSymmetry", false]], "tensorsymmetry() (in module sympy.tensor.tensor)": [[237, "sympy.tensor.tensor.tensorsymmetry", false]], "tensortype (class in sympy.tensor.tensor)": [[237, "sympy.tensor.tensor.TensorType", false]], "term_to_integer() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.term_to_integer", false]], "terminal_width() (sympy.printing.pretty.stringpict.stringpict method)": [[211, "sympy.printing.pretty.stringpict.stringPict.terminal_width", false]], "terms() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.terms", false]], "terms() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.terms", false]], "terms() (sympy.polys.rings.polyelement method)": [[202, "sympy.polys.rings.PolyElement.terms", false]], "terms_gcd() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.terms_gcd", false]], "terms_gcd() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.terms_gcd", false]], "terms_gcd() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.terms_gcd", false]], "termwise() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.termwise", false]], "test() (in module sympy.testing.runtests)": [[242, "sympy.testing.runtests.test", false]], "test_derivative_numerically() (in module sympy.core.random)": [[62, "sympy.core.random.test_derivative_numerically", false]], "test_factor() (sympy.polys.numberfields.primes.primeideal method)": [[206, "sympy.polys.numberfields.primes.PrimeIdeal.test_factor", false]], "textbackend (class in sympy.plotting.plot)": [[197, "sympy.plotting.plot.TextBackend", false]], "textplot() (in module sympy.plotting.textplot)": [[197, "sympy.plotting.textplot.textplot", false]], "tgate (class in sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.TGate", false]], "thinlens (class in sympy.physics.optics.gaussopt)": [[145, "sympy.physics.optics.gaussopt.ThinLens", false]], "threaded() (in module sympy.utilities.decorator)": [[245, "sympy.utilities.decorator.threaded", false]], "threaded_factory() (in module sympy.utilities.decorator)": [[245, "sympy.utilities.decorator.threaded_factory", false]], "three-valued logic": [[11, "term-Three-valued-logic", true]], "time (sympy.physics.quantum.state.timedepstate property)": [[174, "sympy.physics.quantum.state.TimeDepState.time", false]], "time_derivative() (in module sympy.physics.vector.functions)": [[188, "sympy.physics.vector.functions.time_derivative", false]], "time_period (sympy.physics.optics.waves.twave property)": [[150, "sympy.physics.optics.waves.TWave.time_period", false]], "timed() (in module sympy.utilities.timeutils)": [[255, "sympy.utilities.timeutils.timed", false]], "timedepbra (class in sympy.physics.quantum.state)": [[174, "sympy.physics.quantum.state.TimeDepBra", false]], "timedepket (class in sympy.physics.quantum.state)": [[174, "sympy.physics.quantum.state.TimeDepKet", false]], "timedepstate (class in sympy.physics.quantum.state)": [[174, "sympy.physics.quantum.state.TimeDepState", false]], "tiny (sympy.codegen.ast.floattype property)": [[43, "sympy.codegen.ast.FloatType.tiny", false]], "to_alg_num() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.to_alg_num", false]], "to_alg_num() (sympy.polys.numberfields.modules.powerbasiselement method)": [[206, "sympy.polys.numberfields.modules.PowerBasisElement.to_alg_num", false]], "to_algebraic_integer() (sympy.core.numbers.algebraicnumber method)": [[62, "sympy.core.numbers.AlgebraicNumber.to_algebraic_integer", false]], "to_ancestor() (sympy.polys.numberfields.modules.moduleelement method)": [[206, "sympy.polys.numberfields.modules.ModuleElement.to_ancestor", false]], "to_anf() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.to_anf", false]], "to_anp() (sympy.polys.numberfields.modules.powerbasiselement method)": [[206, "sympy.polys.numberfields.modules.PowerBasisElement.to_ANP", false]], "to_axis_angle() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.to_axis_angle", false]], "to_cnf() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.to_cnf", false]], "to_ddm() (sympy.polys.matrices.sdm.sdm method)": [[200, "sympy.polys.matrices.sdm.SDM.to_ddm", false]], "to_dense() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_dense", false]], "to_dict() (sympy.polys.polyclasses.anp method)": [[202, "sympy.polys.polyclasses.ANP.to_dict", false]], "to_dict() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.to_dict", false]], "to_dnf() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.to_dnf", false]], "to_euler() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.to_euler", false]], "to_exact() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.to_exact", false]], "to_exact() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.to_exact", false]], "to_expr() (sympy.holonomic.holonomic.holonomicfunction method)": [[84, "sympy.holonomic.holonomic.HolonomicFunction.to_expr", false]], "to_expr() (sympy.physics.control.lti.parallel method)": [[112, "sympy.physics.control.lti.Parallel.to_expr", false]], "to_expr() (sympy.physics.control.lti.series method)": [[112, "sympy.physics.control.lti.Series.to_expr", false]], "to_expr() (sympy.physics.control.lti.transferfunction method)": [[112, "sympy.physics.control.lti.TransferFunction.to_expr", false]], "to_field() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_field", false]], "to_field() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.to_field", false]], "to_field() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.to_field", false]], "to_hyper() (sympy.holonomic.holonomic.holonomicfunction method)": [[84, "sympy.holonomic.holonomic.HolonomicFunction.to_hyper", false]], "to_int_repr() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.to_int_repr", false]], "to_linearizer() (sympy.physics.mechanics.kane.kanesmethod method)": [[121, "sympy.physics.mechanics.kane.KanesMethod.to_linearizer", false]], "to_linearizer() (sympy.physics.mechanics.lagrange.lagrangesmethod method)": [[121, "sympy.physics.mechanics.lagrange.LagrangesMethod.to_linearizer", false]], "to_list() (sympy.polys.matrices.sdm.sdm method)": [[200, "sympy.polys.matrices.sdm.SDM.to_list", false]], "to_list() (sympy.polys.polyclasses.anp method)": [[202, "sympy.polys.polyclasses.ANP.to_list", false]], "to_list() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.to_list", false]], "to_matrix() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.to_Matrix", false]], "to_matrix() (sympy.physics.vector.dyadic.dyadic method)": [[186, "sympy.physics.vector.dyadic.Dyadic.to_matrix", false]], "to_matrix() (sympy.physics.vector.vector.vector method)": [[186, "sympy.physics.vector.vector.Vector.to_matrix", false]], "to_matrix() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_Matrix", false]], "to_matrix() (sympy.vector.dyadic.dyadic method)": [[256, "sympy.vector.dyadic.Dyadic.to_matrix", false]], "to_matrix() (sympy.vector.vector.vector method)": [[256, "sympy.vector.vector.Vector.to_matrix", false]], "to_meijerg() (sympy.holonomic.holonomic.holonomicfunction method)": [[84, "sympy.holonomic.holonomic.HolonomicFunction.to_meijerg", false]], "to_nnf() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.to_nnf", false]], "to_number_field() (in module sympy.polys.numberfields.subfield)": [[206, "sympy.polys.numberfields.subfield.to_number_field", false]], "to_parent() (sympy.polys.numberfields.modules.moduleelement method)": [[206, "sympy.polys.numberfields.modules.ModuleElement.to_parent", false]], "to_primitive_element() (sympy.core.numbers.algebraicnumber method)": [[62, "sympy.core.numbers.AlgebraicNumber.to_primitive_element", false]], "to_prufer() (sympy.combinatorics.prufer.prufer static method)": [[56, "sympy.combinatorics.prufer.Prufer.to_prufer", false]], "to_rational() (sympy.polys.domains.realfield method)": [[202, "sympy.polys.domains.RealField.to_rational", false]], "to_ring() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.to_ring", false]], "to_ring() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.to_ring", false]], "to_root() (sympy.core.numbers.algebraicnumber method)": [[62, "sympy.core.numbers.AlgebraicNumber.to_root", false]], "to_rotation_matrix() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.to_rotation_matrix", false]], "to_sequence() (sympy.holonomic.holonomic.holonomicfunction method)": [[84, "sympy.holonomic.holonomic.HolonomicFunction.to_sequence", false]], "to_sparse() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_sparse", false]], "to_sympy() (sympy.polys.domains.algebraicfield method)": [[202, "sympy.polys.domains.AlgebraicField.to_sympy", false]], "to_sympy() (sympy.polys.domains.complexfield method)": [[202, "sympy.polys.domains.ComplexField.to_sympy", false]], "to_sympy() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.to_sympy", false]], "to_sympy() (sympy.polys.domains.expressiondomain method)": [[202, "sympy.polys.domains.ExpressionDomain.to_sympy", false]], "to_sympy() (sympy.polys.domains.finitefield method)": [[202, "sympy.polys.domains.FiniteField.to_sympy", false]], "to_sympy() (sympy.polys.domains.fractionfield method)": [[202, "sympy.polys.domains.FractionField.to_sympy", false]], "to_sympy() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[202, "sympy.polys.domains.gaussiandomains.GaussianDomain.to_sympy", false]], "to_sympy() (sympy.polys.domains.gmpyintegerring method)": [[202, "sympy.polys.domains.GMPYIntegerRing.to_sympy", false]], "to_sympy() (sympy.polys.domains.gmpyrationalfield method)": [[202, "sympy.polys.domains.GMPYRationalField.to_sympy", false]], "to_sympy() (sympy.polys.domains.integerring method)": [[202, "sympy.polys.domains.IntegerRing.to_sympy", false]], "to_sympy() (sympy.polys.domains.polynomialring method)": [[202, "sympy.polys.domains.PolynomialRing.to_sympy", false]], "to_sympy() (sympy.polys.domains.rationalfield method)": [[202, "sympy.polys.domains.RationalField.to_sympy", false]], "to_sympy() (sympy.polys.domains.realfield method)": [[202, "sympy.polys.domains.RealField.to_sympy", false]], "to_sympy_dict() (sympy.polys.polyclasses.anp method)": [[202, "sympy.polys.polyclasses.ANP.to_sympy_dict", false]], "to_sympy_dict() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.to_sympy_dict", false]], "to_sympy_list() (sympy.polys.polyclasses.anp method)": [[202, "sympy.polys.polyclasses.ANP.to_sympy_list", false]], "to_sympy_list() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.to_sympy_list", false]], "to_tree() (sympy.combinatorics.prufer.prufer static method)": [[56, "sympy.combinatorics.prufer.Prufer.to_tree", false]], "to_tuple() (sympy.polys.polyclasses.anp method)": [[202, "sympy.polys.polyclasses.ANP.to_tuple", false]], "to_tuple() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.to_tuple", false]], "todod() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.todod", false]], "todok() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.todok", false]], "together() (in module sympy.polys.rationaltools)": [[207, "sympy.polys.rationaltools.together", false]], "together() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.together", false]], "token (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.Token", false]], "tolist() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.tolist", false]], "topological_sort() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.topological_sort", false]], "topological_sort() (sympy.codegen.ast.codeblock class method)": [[43, "sympy.codegen.ast.CodeBlock.topological_sort", false]], "torsional_moment() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[105, "sympy.physics.continuum_mechanics.beam.Beam3D.torsional_moment", false]], "total_degree() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.total_degree", false]], "total_degree() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.total_degree", false]], "totient (class in sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.totient", false]], "totientrange() (sympy.ntheory.generate.sieve method)": [[102, "sympy.ntheory.generate.Sieve.totientrange", false]], "tp (sympy.polys.domains.domain.domain property)": [[202, "sympy.polys.domains.domain.Domain.tp", false]], "tr0() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.TR0", false]], "tr1() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.TR1", false]], "tr10() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.TR10", false]], "tr10i() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.TR10i", false]], "tr11() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.TR11", false]], "tr111() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.TR111", false]], "tr12() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.TR12", false]], "tr12i() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.TR12i", false]], "tr13() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.TR13", false]], "tr14() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.TR14", false]], "tr15() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.TR15", false]], "tr16() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.TR16", false]], "tr2() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.TR2", false]], "tr22() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.TR22", false]], "tr2i() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.TR2i", false]], "tr3() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.TR3", false]], "tr4() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.TR4", false]], "tr5() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.TR5", false]], "tr6() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.TR6", false]], "tr7() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.TR7", false]], "tr8() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.TR8", false]], "tr9() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.TR9", false]], "trace (class in sympy.matrices.expressions)": [[95, "sympy.matrices.expressions.Trace", false]], "trace() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.trace", false]], "trailing() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.trailing", false]], "transcendental": [[62, "term-transcendental", true]], "transcendentalpredicate (class in sympy.assumptions.predicates.sets)": [[39, "sympy.assumptions.predicates.sets.TranscendentalPredicate", false]], "transferfunction (class in sympy.physics.control.lti)": [[112, "sympy.physics.control.lti.TransferFunction", false]], "transferfunctionmatrix (class in sympy.physics.control.lti)": [[112, "sympy.physics.control.lti.TransferFunctionMatrix", false]], "transform() (sympy.diffgeom.coordsystem method)": [[64, "sympy.diffgeom.CoordSystem.transform", false]], "transform() (sympy.geometry.point.point2d method)": [[77, "sympy.geometry.point.Point2D.transform", false]], "transform() (sympy.geometry.point.point3d method)": [[77, "sympy.geometry.point.Point3D.transform", false]], "transform() (sympy.integrals.integrals.integral method)": [[89, "sympy.integrals.integrals.Integral.transform", false]], "transform() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.transform", false]], "transform() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.transform", false]], "transform_variable (sympy.integrals.transforms.integraltransform property)": [[89, "sympy.integrals.transforms.IntegralTransform.transform_variable", false]], "transformation() (sympy.diffgeom.coordsystem method)": [[64, "sympy.diffgeom.CoordSystem.transformation", false]], "transformation_to_dn() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.transformation_to_DN", false]], "transformation_to_normal() (in module sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.transformation_to_normal", false]], "transition_probabilities (sympy.stats.discretemarkovchain property)": [[231, "sympy.stats.DiscreteMarkovChain.transition_probabilities", false]], "transitivity_degree (sympy.combinatorics.perm_groups.permutationgroup property)": [[53, "sympy.combinatorics.perm_groups.PermutationGroup.transitivity_degree", false]], "translate() (in module sympy.utilities.misc)": [[252, "sympy.utilities.misc.translate", false]], "translate() (sympy.geometry.curve.curve method)": [[71, "sympy.geometry.curve.Curve.translate", false]], "translate() (sympy.geometry.entity.geometryentity method)": [[73, "sympy.geometry.entity.GeometryEntity.translate", false]], "translate() (sympy.geometry.point.point2d method)": [[77, "sympy.geometry.point.Point2D.translate", false]], "translate() (sympy.geometry.point.point3d method)": [[77, "sympy.geometry.point.Point3D.translate", false]], "translation_coordinate (sympy.physics.mechanics.joint.cylindricaljoint property)": [[120, "sympy.physics.mechanics.joint.CylindricalJoint.translation_coordinate", false]], "translation_speed (sympy.physics.mechanics.joint.cylindricaljoint property)": [[120, "sympy.physics.mechanics.joint.CylindricalJoint.translation_speed", false]], "transmissive_filter() (in module sympy.physics.optics.polarization)": [[148, "sympy.physics.optics.polarization.transmissive_filter", false]], "transpose (class in sympy.matrices.expressions)": [[95, "sympy.matrices.expressions.Transpose", false]], "transpose() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.transpose", false]], "transpose() (sympy.matrices.expressions.blockmatrix.blockmatrix method)": [[95, "sympy.matrices.expressions.blockmatrix.BlockMatrix.transpose", false]], "transpose() (sympy.physics.control.lti.transferfunctionmatrix method)": [[112, "sympy.physics.control.lti.TransferFunctionMatrix.transpose", false]], "transpose() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.transpose", false]], "transpose() (sympy.polys.matrices.sdm.sdm method)": [[200, "sympy.polys.matrices.sdm.SDM.transpose", false]], "transpositions() (sympy.combinatorics.permutations.permutation method)": [[54, "sympy.combinatorics.permutations.Permutation.transpositions", false]], "transverse_magnification() (in module sympy.physics.optics.utils)": [[149, "sympy.physics.optics.utils.transverse_magnification", false]], "trapezoidal() (in module sympy.stats)": [[231, "sympy.stats.Trapezoidal", false]], "tree() (in module sympy.printing.tree)": [[211, "sympy.printing.tree.tree", false]], "tree_cse() (in module sympy.simplify.cse_main)": [[223, "sympy.simplify.cse_main.tree_cse", false]], "tree_repr (sympy.combinatorics.prufer.prufer property)": [[56, "sympy.combinatorics.prufer.Prufer.tree_repr", false]], "triangle (class in sympy.geometry.polygon)": [[78, "sympy.geometry.polygon.Triangle", false]], "triangular() (in module sympy.stats)": [[231, "sympy.stats.Triangular", false]], "triangularpredicate (class in sympy.assumptions.predicates.matrices)": [[39, "sympy.assumptions.predicates.matrices.TriangularPredicate", false]], "tribonacci (class in sympy.functions.combinatorial.numbers)": [[67, "sympy.functions.combinatorial.numbers.tribonacci", false]], "tribonacciconstant (class in sympy.core.numbers)": [[62, "sympy.core.numbers.TribonacciConstant", false]], "trigamma (class in sympy.functions.special.gamma_functions)": [[70, "sympy.functions.special.gamma_functions.trigamma", false]], "trigintegrate() (in module sympy.integrals.trigonometry)": [[89, "sympy.integrals.trigonometry.trigintegrate", false]], "trigsimp() (in module sympy.simplify.trigsimp)": [[223, "sympy.simplify.trigsimp.trigsimp", false]], "trigsimp() (sympy.core.expr.expr method)": [[62, "sympy.core.expr.Expr.trigsimp", false]], "trmorrie() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.TRmorrie", false]], "trpower() (in module sympy.simplify.fu)": [[220, "sympy.simplify.fu.TRpower", false]], "trunc() (in module sympy.polys.polytools)": [[207, "sympy.polys.polytools.trunc", false]], "trunc() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.trunc", false]], "trunc() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.trunc", false]], "truncate() (sympy.series.formal.formalpowerseries method)": [[213, "sympy.series.formal.FormalPowerSeries.truncate", false]], "truncate() (sympy.series.fourier.fourierseries method)": [[214, "sympy.series.fourier.FourierSeries.truncate", false]], "truss (class in sympy.physics.continuum_mechanics.truss)": [[108, "sympy.physics.continuum_mechanics.truss.Truss", false]], "truth_table() (in module sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.truth_table", false]], "tuple (class in sympy.core.containers)": [[62, "sympy.core.containers.Tuple", false]], "tuple_count() (sympy.core.containers.tuple method)": [[62, "sympy.core.containers.Tuple.tuple_count", false]], "tuplekind (class in sympy.core.containers)": [[62, "sympy.core.containers.TupleKind", false]], "twave (class in sympy.physics.optics.waves)": [[150, "sympy.physics.optics.waves.TWave", false]], "two_qubit_box() (sympy.physics.quantum.circuitplot.circuitplot method)": [[156, "sympy.physics.quantum.circuitplot.CircuitPlot.two_qubit_box", false]], "twoform_to_matrix() (in module sympy.diffgeom)": [[64, "sympy.diffgeom.twoform_to_matrix", false]], "twoqubitgate (class in sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.TwoQubitGate", false]], "type (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.Type", false]], "typea (class in sympy.liealgebras.type_a)": [[91, "sympy.liealgebras.type_a.TypeA", false]], "typeb (class in sympy.liealgebras.type_b)": [[91, "sympy.liealgebras.type_b.TypeB", false]], "typec (class in sympy.liealgebras.type_c)": [[91, "sympy.liealgebras.type_c.TypeC", false]], "typed (class in sympy.liealgebras.type_d)": [[91, "sympy.liealgebras.type_d.TypeD", false]], "typee (class in sympy.liealgebras.type_e)": [[91, "sympy.liealgebras.type_e.TypeE", false]], "typef (class in sympy.liealgebras.type_f)": [[91, "sympy.liealgebras.type_f.TypeF", false]], "typeg (class in sympy.liealgebras.type_g)": [[91, "sympy.liealgebras.type_g.TypeG", false]], "u (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[120, "sympy.physics.mechanics.jointsmethod.JointsMethod.u", false]], "u() (in module sympy.printing.pretty.pretty_symbology)": [[211, "sympy.printing.pretty.pretty_symbology.U", false]], "udivisor_count() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.udivisor_count", false]], "udivisor_sigma (class in sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.udivisor_sigma", false]], "udivisors() (in module sympy.ntheory.factor_)": [[102, "sympy.ntheory.factor_.udivisors", false]], "udldecomposition() (sympy.matrices.expressions.blockmatrix.blockmatrix method)": [[95, "sympy.matrices.expressions.blockmatrix.BlockMatrix.UDLdecomposition", false]], "ufuncify() (in module sympy.utilities.autowrap)": [[243, "sympy.utilities.autowrap.ufuncify", false]], "ufuncifycodewrapper (class in sympy.utilities.autowrap)": [[243, "sympy.utilities.autowrap.UfuncifyCodeWrapper", false]], "ugate (class in sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.UGate", false]], "uncouple() (in module sympy.physics.quantum.spin)": [[173, "sympy.physics.quantum.spin.uncouple", false]], "undefined function": [[11, "term-Undefined-Function", true]], "undefinedkind (in module sympy.core.kind)": [[62, "sympy.core.kind.UndefinedKind", false]], "undefinedpredicate (class in sympy.assumptions.assume)": [[37, "sympy.assumptions.assume.UndefinedPredicate", false]], "unequality (class in sympy.core.relational)": [[62, "sympy.core.relational.Unequality", false]], "unevaluated": [[11, "term-Unevaluated", true]], "unevaluatedexpr (class in sympy.core.expr)": [[62, "sympy.core.expr.UnevaluatedExpr", false]], "unflatten() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.unflatten", false]], "unificationfailed (class in sympy.polys.polyerrors)": [[204, "sympy.polys.polyerrors.UnificationFailed", false]], "uniform() (in module sympy.stats)": [[231, "sympy.stats.Uniform", false]], "uniformsum() (in module sympy.stats)": [[231, "sympy.stats.UniformSum", false]], "unify() (sympy.polys.domains.domain.domain method)": [[202, "sympy.polys.domains.domain.Domain.unify", false]], "unify() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.unify", false]], "unify() (sympy.polys.numberfields.modules.moduleelement method)": [[206, "sympy.polys.numberfields.modules.ModuleElement.unify", false]], "unify() (sympy.polys.polyclasses.anp method)": [[202, "sympy.polys.polyclasses.ANP.unify", false]], "unify() (sympy.polys.polyclasses.dmp method)": [[202, "sympy.polys.polyclasses.DMP.unify", false]], "unify() (sympy.polys.polytools.poly method)": [[207, "sympy.polys.polytools.Poly.unify", false]], "union (class in sympy.codegen.cnodes)": [[43, "sympy.codegen.cnodes.union", false]], "union (class in sympy.sets.sets)": [[219, "sympy.sets.sets.Union", false]], "union() (sympy.polys.agca.ideals.ideal method)": [[198, "sympy.polys.agca.ideals.Ideal.union", false]], "union() (sympy.polys.agca.modules.submodule method)": [[198, "sympy.polys.agca.modules.SubModule.union", false]], "union() (sympy.series.gruntz.subsset method)": [[218, "sympy.series.gruntz.SubsSet.union", false]], "union() (sympy.sets.sets.set method)": [[219, "sympy.sets.sets.Set.union", false]], "uniq() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.uniq", false]], "unit (sympy.geometry.point.point property)": [[77, "sympy.geometry.point.Point.unit", false]], "unit (sympy.polys.polytools.poly property)": [[207, "sympy.polys.polytools.Poly.unit", false]], "unitaryoperator (class in sympy.physics.quantum.operator)": [[165, "sympy.physics.quantum.operator.UnitaryOperator", false]], "unitarypredicate (class in sympy.assumptions.predicates.matrices)": [[39, "sympy.assumptions.predicates.matrices.UnitaryPredicate", false]], "unitsystem (class in sympy.physics.units.unitsystem)": [[184, "sympy.physics.units.unitsystem.UnitSystem", false]], "unittriangularpredicate (class in sympy.assumptions.predicates.matrices)": [[39, "sympy.assumptions.predicates.matrices.UnitTriangularPredicate", false]], "univariate (class in sympy.solvers.diophantine.diophantine)": [[224, "sympy.solvers.diophantine.diophantine.Univariate", false]], "univariatepolynomialerror (class in sympy.polys.polyerrors)": [[204, "sympy.polys.polyerrors.UnivariatePolynomialError", false]], "universalset (class in sympy.sets.sets)": [[219, "sympy.sets.sets.UniversalSet", false]], "unrad() (in module sympy.solvers.solvers)": [[229, "sympy.solvers.solvers.unrad", false]], "unrank() (sympy.combinatorics.graycode.graycode class method)": [[46, "sympy.combinatorics.graycode.GrayCode.unrank", false]], "unrank() (sympy.combinatorics.prufer.prufer class method)": [[56, "sympy.combinatorics.prufer.Prufer.unrank", false]], "unrank_binary() (sympy.combinatorics.subsets.subset class method)": [[57, "sympy.combinatorics.subsets.Subset.unrank_binary", false]], "unrank_gray() (sympy.combinatorics.subsets.subset class method)": [[57, "sympy.combinatorics.subsets.Subset.unrank_gray", false]], "unrank_lex() (sympy.combinatorics.permutations.permutation class method)": [[54, "sympy.combinatorics.permutations.Permutation.unrank_lex", false]], "unrank_nonlex() (sympy.combinatorics.permutations.permutation class method)": [[54, "sympy.combinatorics.permutations.Permutation.unrank_nonlex", false]], "unrank_trotterjohnson() (sympy.combinatorics.permutations.permutation class method)": [[54, "sympy.combinatorics.permutations.Permutation.unrank_trotterjohnson", false]], "unsignedinttype (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.UnsignedIntType", false]], "update() (sympy.physics.quantum.circuitplot.circuitplot method)": [[156, "sympy.physics.quantum.circuitplot.CircuitPlot.update", false]], "upper (sympy.physics.secondquant.antisymmetrictensor property)": [[176, "sympy.physics.secondquant.AntiSymmetricTensor.upper", false]], "upper (sympy.tensor.indexed.idx property)": [[236, "sympy.tensor.indexed.Idx.upper", false]], "upper_hessenberg_decomposition() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.upper_hessenberg_decomposition", false]], "upper_triangular() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.upper_triangular", false]], "upper_triangular_solve() (sympy.matrices.dense.densematrix method)": [[94, "sympy.matrices.dense.DenseMatrix.upper_triangular_solve", false]], "upper_triangular_solve() (sympy.matrices.matrices.matrixbase method)": [[98, "sympy.matrices.matrices.MatrixBase.upper_triangular_solve", false]], "uppergamma (class in sympy.functions.special.gamma_functions)": [[70, "sympy.functions.special.gamma_functions.uppergamma", false]], "uppertriangularpredicate (class in sympy.assumptions.predicates.matrices)": [[39, "sympy.assumptions.predicates.matrices.UpperTriangularPredicate", false]], "use (class in sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.use", false]], "use() (in module sympy.core.traversal)": [[62, "sympy.core.traversal.use", false]], "use_rename (class in sympy.codegen.fnodes)": [[43, "sympy.codegen.fnodes.use_rename", false]], "using (class in sympy.codegen.cxxnodes)": [[43, "sympy.codegen.cxxnodes.using", false]], "v1pt_theory() (sympy.physics.vector.point.point method)": [[190, "sympy.physics.vector.point.Point.v1pt_theory", false]], "v2pt_theory() (sympy.physics.vector.point.point method)": [[190, "sympy.physics.vector.point.Point.v2pt_theory", false]], "valuation() (sympy.polys.numberfields.primes.primeideal method)": [[206, "sympy.polys.numberfields.primes.PrimeIdeal.valuation", false]], "values() (sympy.core.containers.dict method)": [[62, "sympy.core.containers.Dict.values", false]], "values() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.values", false]], "var (sympy.physics.control.lti.feedback property)": [[112, "sympy.physics.control.lti.Feedback.var", false]], "var (sympy.physics.control.lti.mimofeedback property)": [[112, "sympy.physics.control.lti.MIMOFeedback.var", false]], "var (sympy.physics.control.lti.mimoparallel property)": [[112, "sympy.physics.control.lti.MIMOParallel.var", false]], "var (sympy.physics.control.lti.mimoseries property)": [[112, "sympy.physics.control.lti.MIMOSeries.var", false]], "var (sympy.physics.control.lti.parallel property)": [[112, "sympy.physics.control.lti.Parallel.var", false]], "var (sympy.physics.control.lti.series property)": [[112, "sympy.physics.control.lti.Series.var", false]], "var (sympy.physics.control.lti.transferfunction property)": [[112, "sympy.physics.control.lti.TransferFunction.var", false]], "var (sympy.physics.control.lti.transferfunctionmatrix property)": [[112, "sympy.physics.control.lti.TransferFunctionMatrix.var", false]], "var() (in module sympy.core.symbol)": [[62, "sympy.core.symbol.var", false]], "varbosonicbasis (class in sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.VarBosonicBasis", false]], "variable (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.Variable", false]], "variable (sympy.physics.continuum_mechanics.beam.beam property)": [[105, "sympy.physics.continuum_mechanics.beam.Beam.variable", false]], "variable_map() (sympy.physics.vector.frame.referenceframe method)": [[186, "sympy.physics.vector.frame.ReferenceFrame.variable_map", false]], "variables (sympy.concrete.expr_with_limits.exprwithlimits property)": [[89, "sympy.concrete.expr_with_limits.ExprWithLimits.variables", false]], "variables (sympy.core.function.lambda property)": [[62, "sympy.core.function.Lambda.variables", false]], "variables (sympy.core.function.subs property)": [[62, "sympy.core.function.Subs.variables", false]], "variables (sympy.physics.quantum.operator.differentialoperator property)": [[165, "sympy.physics.quantum.operator.DifferentialOperator.variables", false]], "variables (sympy.physics.quantum.state.wavefunction property)": [[174, "sympy.physics.quantum.state.Wavefunction.variables", false]], "variables (sympy.series.sequences.seqbase property)": [[217, "sympy.series.sequences.SeqBase.variables", false]], "variables (sympy.utilities.codegen.routine property)": [[244, "sympy.utilities.codegen.Routine.variables", false]], "variance (class in sympy.stats)": [[231, "sympy.stats.Variance", false]], "variance() (in module sympy.stats)": [[231, "sympy.stats.variance", false]], "variancematrix (class in sympy.stats)": [[231, "sympy.stats.VarianceMatrix", false]], "variations() (in module sympy.utilities.iterables)": [[249, "sympy.utilities.iterables.variations", false]], "vec() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.vec", false]], "vech() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.vech", false]], "vector (class in sympy.physics.vector.vector)": [[186, "sympy.physics.vector.vector.Vector", false]], "vector (class in sympy.vector.vector)": [[256, "sympy.vector.vector.Vector", false]], "vector_coplanar() (sympy.algebras.quaternion class method)": [[35, "sympy.algebras.Quaternion.vector_coplanar", false]], "vector_integrate() (in module sympy.vector.integrals)": [[259, "sympy.vector.integrals.vector_integrate", false]], "vector_part() (sympy.algebras.quaternion method)": [[35, "sympy.algebras.Quaternion.vector_part", false]], "vectorize (class in sympy.core.multidimensional)": [[62, "sympy.core.multidimensional.vectorize", false]], "vectors_in_basis() (in module sympy.diffgeom)": [[64, "sympy.diffgeom.vectors_in_basis", false]], "vel() (sympy.physics.vector.point.point method)": [[190, "sympy.physics.vector.point.Point.vel", false]], "verify_numerically() (in module sympy.core.random)": [[62, "sympy.core.random.verify_numerically", false]], "vertices (sympy.combinatorics.polyhedron.polyhedron property)": [[55, "sympy.combinatorics.polyhedron.Polyhedron.vertices", false]], "vertices (sympy.geometry.polygon.polygon property)": [[78, "sympy.geometry.polygon.Polygon.vertices", false]], "vertices (sympy.geometry.polygon.regularpolygon property)": [[78, "sympy.geometry.polygon.RegularPolygon.vertices", false]], "vertices (sympy.geometry.polygon.triangle property)": [[78, "sympy.geometry.polygon.Triangle.vertices", false]], "vf() (in module sympy.printing.pretty.pretty_symbology)": [[211, "sympy.printing.pretty.pretty_symbology.VF", false]], "vfield() (in module sympy.polys.fields)": [[202, "sympy.polys.fields.vfield", false]], "viete() (in module sympy.polys.polyfuncs)": [[207, "sympy.polys.polyfuncs.viete", false]], "vlatex() (in module sympy.physics.vector.printing)": [[191, "sympy.physics.vector.printing.vlatex", false]], "vobj() (in module sympy.printing.pretty.pretty_symbology)": [[211, "sympy.printing.pretty.pretty_symbology.vobj", false]], "vonmises() (in module sympy.stats)": [[231, "sympy.stats.VonMises", false]], "vpprint() (in module sympy.physics.vector.printing)": [[191, "sympy.physics.vector.printing.vpprint", false]], "vprint() (in module sympy.physics.vector.printing)": [[191, "sympy.physics.vector.printing.vprint", false]], "vradius (sympy.geometry.ellipse.circle property)": [[72, "sympy.geometry.ellipse.Circle.vradius", false]], "vradius (sympy.geometry.ellipse.ellipse property)": [[72, "sympy.geometry.ellipse.Ellipse.vradius", false]], "vring() (in module sympy.polys.rings)": [[202, "sympy.polys.rings.vring", false]], "vstack() (sympy.matrices.common.matrixcommon class method)": [[93, "sympy.matrices.common.MatrixCommon.vstack", false]], "vstack() (sympy.polys.matrices.ddm.ddm method)": [[200, "sympy.polys.matrices.ddm.DDM.vstack", false]], "vstack() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.vstack", false]], "vstack() (sympy.polys.matrices.sdm.sdm method)": [[200, "sympy.polys.matrices.sdm.SDM.vstack", false]], "w (sympy.physics.optics.gaussopt.beamparameter property)": [[145, "sympy.physics.optics.gaussopt.BeamParameter.w", false]], "w_0 (sympy.physics.optics.gaussopt.beamparameter property)": [[145, "sympy.physics.optics.gaussopt.BeamParameter.w_0", false]], "waist2rayleigh() (in module sympy.physics.optics.gaussopt)": [[145, "sympy.physics.optics.gaussopt.waist2rayleigh", false]], "waist_approximation_limit (sympy.physics.optics.gaussopt.beamparameter property)": [[145, "sympy.physics.optics.gaussopt.BeamParameter.waist_approximation_limit", false]], "wald() (in module sympy.stats)": [[231, "sympy.stats.Wald", false]], "walk() (in module sympy.core.traversal)": [[62, "sympy.core.traversal.walk", false]], "warns() (in module sympy.testing.pytest)": [[240, "sympy.testing.pytest.warns", false]], "warns_deprecated_sympy() (in module sympy.testing.pytest)": [[240, "sympy.testing.pytest.warns_deprecated_sympy", false]], "wavefunction (class in sympy.physics.quantum.state)": [[174, "sympy.physics.quantum.state.Wavefunction", false]], "wavelength (sympy.physics.optics.waves.twave property)": [[150, "sympy.physics.optics.waves.TWave.wavelength", false]], "wavenumber (sympy.physics.optics.waves.twave property)": [[150, "sympy.physics.optics.waves.TWave.wavenumber", false]], "weak (sympy.core.relational.relational property)": [[62, "sympy.core.relational.Relational.weak", false]], "wedgeproduct (class in sympy.diffgeom)": [[64, "sympy.diffgeom.WedgeProduct", false]], "weibull() (in module sympy.stats)": [[231, "sympy.stats.Weibull", false]], "weldjoint (class in sympy.physics.mechanics.joint)": [[120, "sympy.physics.mechanics.joint.WeldJoint", false]], "weylgroup (class in sympy.liealgebras.weyl_group)": [[91, "sympy.liealgebras.weyl_group.WeylGroup", false]], "wgate (class in sympy.physics.quantum.grover)": [[161, "sympy.physics.quantum.grover.WGate", false]], "where() (in module sympy.stats)": [[231, "sympy.stats.where", false]], "while (class in sympy.codegen.ast)": [[43, "sympy.codegen.ast.While", false]], "whole_submodule() (sympy.polys.numberfields.modules.module method)": [[206, "sympy.polys.numberfields.modules.Module.whole_submodule", false]], "wicks() (in module sympy.physics.secondquant)": [[176, "sympy.physics.secondquant.wicks", false]], "width (sympy.categories.diagram_drawing.diagramgrid property)": [[42, "sympy.categories.diagram_drawing.DiagramGrid.width", false]], "width() (sympy.printing.pretty.stringpict.stringpict method)": [[211, "sympy.printing.pretty.stringpict.stringPict.width", false]], "wienerprocess (class in sympy.stats)": [[231, "sympy.stats.WienerProcess", false]], "wigner3j (class in sympy.physics.quantum.cg)": [[155, "sympy.physics.quantum.cg.Wigner3j", false]], "wigner6j (class in sympy.physics.quantum.cg)": [[155, "sympy.physics.quantum.cg.Wigner6j", false]], "wigner9j (class in sympy.physics.quantum.cg)": [[155, "sympy.physics.quantum.cg.Wigner9j", false]], "wigner_3j() (in module sympy.physics.wigner)": [[196, "sympy.physics.wigner.wigner_3j", false]], "wigner_6j() (in module sympy.physics.wigner)": [[196, "sympy.physics.wigner.wigner_6j", false]], "wigner_9j() (in module sympy.physics.wigner)": [[196, "sympy.physics.wigner.wigner_9j", false]], "wigner_d() (in module sympy.physics.wigner)": [[196, "sympy.physics.wigner.wigner_d", false]], "wigner_d_small() (in module sympy.physics.wigner)": [[196, "sympy.physics.wigner.wigner_d_small", false]], "wignerd (class in sympy.physics.quantum.spin)": [[173, "sympy.physics.quantum.spin.WignerD", false]], "wignersemicircle() (in module sympy.stats)": [[231, "sympy.stats.WignerSemicircle", false]], "wild (class in sympy.core.symbol)": [[62, "sympy.core.symbol.Wild", false]], "wildfunction (class in sympy.core.function)": [[62, "sympy.core.function.WildFunction", false]], "wilkinson() (sympy.matrices.common.matrixcommon class method)": [[93, "sympy.matrices.common.MatrixCommon.wilkinson", false]], "wishart() (in module sympy.stats)": [[231, "sympy.stats.Wishart", false]], "write() (sympy.testing.runtests.pytestreporter method)": [[242, "sympy.testing.runtests.PyTestReporter.write", false]], "write() (sympy.utilities.codegen.codegen method)": [[244, "sympy.utilities.codegen.CodeGen.write", false]], "wronskian() (in module sympy.matrices.dense)": [[98, "sympy.matrices.dense.wronskian", false]], "x (in module sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.X", false]], "x (sympy.geometry.point.point2d property)": [[77, "sympy.geometry.point.Point2D.x", false]], "x (sympy.geometry.point.point3d property)": [[77, "sympy.geometry.point.Point3D.x", false]], "x (sympy.physics.mechanics.body.body property)": [[117, "sympy.physics.mechanics.body.Body.x", false]], "x (sympy.physics.vector.frame.referenceframe property)": [[186, "sympy.physics.vector.frame.ReferenceFrame.x", false]], "xbra (class in sympy.physics.quantum.cartesian)": [[154, "sympy.physics.quantum.cartesian.XBra", false]], "xdirection (sympy.geometry.line.ray2d property)": [[75, "sympy.geometry.line.Ray2D.xdirection", false]], "xdirection (sympy.geometry.line.ray3d property)": [[75, "sympy.geometry.line.Ray3D.xdirection", false]], "xfield() (in module sympy.polys.fields)": [[202, "sympy.polys.fields.xfield", false]], "xgate (class in sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.XGate", false]], "xket (class in sympy.physics.quantum.cartesian)": [[154, "sympy.physics.quantum.cartesian.XKet", false]], "xnor (class in sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.Xnor", false]], "xobj() (in module sympy.printing.pretty.pretty_symbology)": [[211, "sympy.printing.pretty.pretty_symbology.xobj", false]], "xop (class in sympy.physics.quantum.cartesian)": [[154, "sympy.physics.quantum.cartesian.XOp", false]], "xor (class in sympy.logic.boolalg)": [[92, "sympy.logic.boolalg.Xor", false]], "xreplace() (sympy.core.basic.basic method)": [[62, "sympy.core.basic.Basic.xreplace", false]], "xreplace() (sympy.matrices.common.matrixcommon method)": [[93, "sympy.matrices.common.MatrixCommon.xreplace", false]], "xreplace() (sympy.physics.vector.dyadic.dyadic method)": [[186, "sympy.physics.vector.dyadic.Dyadic.xreplace", false]], "xreplace() (sympy.physics.vector.vector.vector method)": [[186, "sympy.physics.vector.vector.Vector.xreplace", false]], "xring() (in module sympy.polys.rings)": [[202, "sympy.polys.rings.xring", false]], "xstr() (in module sympy.printing.pretty.pretty_symbology)": [[211, "sympy.printing.pretty.pretty_symbology.xstr", false]], "xsym() (in module sympy.printing.pretty.pretty_symbology)": [[211, "sympy.printing.pretty.pretty_symbology.xsym", false]], "xthreaded() (in module sympy.utilities.decorator)": [[245, "sympy.utilities.decorator.xthreaded", false]], "xypic_draw_diagram() (in module sympy.categories.diagram_drawing)": [[42, "sympy.categories.diagram_drawing.xypic_draw_diagram", false]], "xypicdiagramdrawer (class in sympy.categories.diagram_drawing)": [[42, "sympy.categories.diagram_drawing.XypicDiagramDrawer", false]], "y (in module sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.Y", false]], "y (sympy.geometry.point.point2d property)": [[77, "sympy.geometry.point.Point2D.y", false]], "y (sympy.geometry.point.point3d property)": [[77, "sympy.geometry.point.Point3D.y", false]], "y (sympy.physics.mechanics.body.body property)": [[117, "sympy.physics.mechanics.body.Body.y", false]], "y (sympy.physics.vector.frame.referenceframe property)": [[186, "sympy.physics.vector.frame.ReferenceFrame.y", false]], "y (sympy.series.sequences.recursiveseq property)": [[217, "sympy.series.sequences.RecursiveSeq.y", false]], "ydirection (sympy.geometry.line.ray2d property)": [[75, "sympy.geometry.line.Ray2D.ydirection", false]], "ydirection (sympy.geometry.line.ray3d property)": [[75, "sympy.geometry.line.Ray3D.ydirection", false]], "ygate (class in sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.YGate", false]], "yn (class in sympy.functions.special.bessel)": [[70, "sympy.functions.special.bessel.yn", false]], "yn (sympy.series.sequences.recursiveseq property)": [[217, "sympy.series.sequences.RecursiveSeq.yn", false]], "ynm (class in sympy.functions.special.spherical_harmonics)": [[70, "sympy.functions.special.spherical_harmonics.Ynm", false]], "ynm_c() (in module sympy.functions.special.spherical_harmonics)": [[70, "sympy.functions.special.spherical_harmonics.Ynm_c", false]], "yop (class in sympy.physics.quantum.cartesian)": [[154, "sympy.physics.quantum.cartesian.YOp", false]], "yulesimon() (in module sympy.stats)": [[231, "sympy.stats.YuleSimon", false]], "z (in module sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.Z", false]], "z (sympy.geometry.point.point3d property)": [[77, "sympy.geometry.point.Point3D.z", false]], "z (sympy.physics.mechanics.body.body property)": [[117, "sympy.physics.mechanics.body.Body.z", false]], "z (sympy.physics.vector.frame.referenceframe property)": [[186, "sympy.physics.vector.frame.ReferenceFrame.z", false]], "zdirection (sympy.geometry.line.ray3d property)": [[75, "sympy.geometry.line.Ray3D.zdirection", false]], "zero": [[62, "term-zero", true]], "zero (class in sympy.core.numbers)": [[62, "sympy.core.numbers.Zero", false]], "zero (sympy.polys.domains.domain.domain attribute)": [[202, "sympy.polys.domains.domain.Domain.zero", false]], "zero (sympy.polys.polytools.poly property)": [[207, "sympy.polys.polytools.Poly.zero", false]], "zero() (sympy.polys.numberfields.modules.module method)": [[206, "sympy.polys.numberfields.modules.Module.zero", false]], "zeromatrix (class in sympy.matrices.expressions)": [[95, "sympy.matrices.expressions.ZeroMatrix", false]], "zeropredicate (class in sympy.assumptions.predicates.order)": [[39, "sympy.assumptions.predicates.order.ZeroPredicate", false]], "zeros() (in module sympy.matrices.dense)": [[98, "sympy.matrices.dense.zeros", false]], "zeros() (sympy.matrices.common.matrixcommon class method)": [[93, "sympy.matrices.common.MatrixCommon.zeros", false]], "zeros() (sympy.physics.control.lti.transferfunction method)": [[112, "sympy.physics.control.lti.TransferFunction.zeros", false]], "zeros() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[200, "sympy.polys.matrices.domainmatrix.DomainMatrix.zeros", false]], "zeros() (sympy.polys.matrices.sdm.sdm class method)": [[200, "sympy.polys.matrices.sdm.SDM.zeros", false]], "zeta (class in sympy.functions.special.zeta_functions)": [[70, "sympy.functions.special.zeta_functions.zeta", false]], "zeta() (in module sympy.stats)": [[231, "sympy.stats.Zeta", false]], "zgate (class in sympy.physics.quantum.gate)": [[160, "sympy.physics.quantum.gate.ZGate", false]], "znm (class in sympy.functions.special.spherical_harmonics)": [[70, "sympy.functions.special.spherical_harmonics.Znm", false]], "zoo": [[11, "term-zoo", true]], "zop (class in sympy.physics.quantum.cartesian)": [[154, "sympy.physics.quantum.cartesian.ZOp", false]]}, "objects": {"": [[32, 0, 0, "-", "sympy"]], "sympy": [[34, 0, 0, "-", "abc"], [35, 0, 0, "-", "algebras"], [38, 0, 0, "-", "assumptions"], [41, 0, 0, "-", "calculus"], [42, 0, 0, "-", "categories"], [64, 0, 0, "-", "diffgeom"], [65, 0, 0, "-", "discrete"], [69, 0, 0, "-", "functions"], [82, 0, 0, "-", "holonomic"], [89, 0, 0, "-", "integrals"], [90, 0, 0, "-", "interactive"], [91, 0, 0, "-", "liealgebras"], [92, 0, 0, "-", "logic"], [97, 0, 0, "-", "matrices"], [104, 0, 0, "-", "parsing"], [273, 0, 0, "-", "physics"], [207, 0, 0, "-", "polys"], [229, 0, 0, "-", "solvers"], [231, 0, 0, "-", "stats"], [234, 0, 0, "-", "tensor"], [239, 0, 0, "-", "testing"], [248, 0, 0, "-", "utilities"], [264, 0, 0, "-", "vector"]], "sympy.algebras": [[35, 1, 1, "", "Quaternion"]], "sympy.algebras.Quaternion": [[35, 2, 1, "", "add"], [35, 2, 1, "", "angle"], [35, 2, 1, "", "arc_coplanar"], [35, 2, 1, "", "axis"], [35, 2, 1, "", "exp"], [35, 2, 1, "", "from_Matrix"], [35, 2, 1, "", "from_axis_angle"], [35, 2, 1, "", "from_euler"], [35, 2, 1, "", "from_rotation_matrix"], [35, 2, 1, "", "index_vector"], [35, 2, 1, "", "integrate"], [35, 2, 1, "", "inverse"], [35, 2, 1, "", "is_pure"], [35, 2, 1, "", "is_zero_quaternion"], [35, 2, 1, "", "mensor"], [35, 2, 1, "", "mul"], [35, 2, 1, "", "norm"], [35, 2, 1, "", "normalize"], [35, 2, 1, "", "orthogonal"], [35, 2, 1, "", "parallel"], [35, 2, 1, "", "pow"], [35, 2, 1, "", "pow_cos_sin"], [35, 3, 1, "", "product_matrix_left"], [35, 3, 1, "", "product_matrix_right"], [35, 2, 1, "", "rotate_point"], [35, 2, 1, "", "scalar_part"], [35, 2, 1, "", "set_norm"], [35, 2, 1, "", "to_Matrix"], [35, 2, 1, "", "to_axis_angle"], [35, 2, 1, "", "to_euler"], [35, 2, 1, "", "to_rotation_matrix"], [35, 2, 1, "", "vector_coplanar"], [35, 2, 1, "", "vector_part"]], "sympy.assumptions": [[36, 0, 0, "-", "ask"], [37, 0, 0, "-", "assume"], [39, 0, 0, "-", "predicates"], [40, 0, 0, "-", "refine"]], "sympy.assumptions.ask": [[36, 1, 1, "", "AssumptionKeys"], [36, 4, 1, "", "ask"], [36, 4, 1, "", "register_handler"], [36, 4, 1, "", "remove_handler"]], "sympy.assumptions.assume": [[37, 1, 1, "", "AppliedPredicate"], [37, 1, 1, "", "AssumptionsContext"], [37, 1, 1, "", "Predicate"], [37, 1, 1, "", "UndefinedPredicate"], [37, 4, 1, "", "assuming"]], "sympy.assumptions.assume.AppliedPredicate": [[37, 3, 1, "", "arg"], [37, 3, 1, "", "arguments"], [37, 3, 1, "", "function"]], "sympy.assumptions.assume.AssumptionsContext": [[37, 2, 1, "", "add"]], "sympy.assumptions.assume.Predicate": [[37, 2, 1, "", "eval"], [37, 5, 1, "", "handler"], [37, 2, 1, "", "register"], [37, 2, 1, "", "register_many"]], "sympy.assumptions.predicates.calculus": [[39, 1, 1, "", "FinitePredicate"], [39, 1, 1, "", "InfinitePredicate"]], "sympy.assumptions.predicates.calculus.FinitePredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.calculus.InfinitePredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common": [[39, 1, 1, "", "CommutativePredicate"], [39, 1, 1, "", "IsTruePredicate"]], "sympy.assumptions.predicates.common.CommutativePredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common.IsTruePredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices": [[39, 1, 1, "", "ComplexElementsPredicate"], [39, 1, 1, "", "DiagonalPredicate"], [39, 1, 1, "", "FullRankPredicate"], [39, 1, 1, "", "IntegerElementsPredicate"], [39, 1, 1, "", "InvertiblePredicate"], [39, 1, 1, "", "LowerTriangularPredicate"], [39, 1, 1, "", "NormalPredicate"], [39, 1, 1, "", "OrthogonalPredicate"], [39, 1, 1, "", "PositiveDefinitePredicate"], [39, 1, 1, "", "RealElementsPredicate"], [39, 1, 1, "", "SingularPredicate"], [39, 1, 1, "", "SquarePredicate"], [39, 1, 1, "", "SymmetricPredicate"], [39, 1, 1, "", "TriangularPredicate"], [39, 1, 1, "", "UnitTriangularPredicate"], [39, 1, 1, "", "UnitaryPredicate"], [39, 1, 1, "", "UpperTriangularPredicate"]], "sympy.assumptions.predicates.matrices.ComplexElementsPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.DiagonalPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.FullRankPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.IntegerElementsPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.InvertiblePredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.LowerTriangularPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.NormalPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.OrthogonalPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.PositiveDefinitePredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.RealElementsPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SingularPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SquarePredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SymmetricPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.TriangularPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitTriangularPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitaryPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UpperTriangularPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory": [[39, 1, 1, "", "CompositePredicate"], [39, 1, 1, "", "EvenPredicate"], [39, 1, 1, "", "OddPredicate"], [39, 1, 1, "", "PrimePredicate"]], "sympy.assumptions.predicates.ntheory.CompositePredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.EvenPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.OddPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.PrimePredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order": [[39, 1, 1, "", "NegativePredicate"], [39, 1, 1, "", "NonNegativePredicate"], [39, 1, 1, "", "NonPositivePredicate"], [39, 1, 1, "", "NonZeroPredicate"], [39, 1, 1, "", "PositivePredicate"], [39, 1, 1, "", "ZeroPredicate"]], "sympy.assumptions.predicates.order.NegativePredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonNegativePredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonPositivePredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonZeroPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.PositivePredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.ZeroPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets": [[39, 1, 1, "", "AlgebraicPredicate"], [39, 1, 1, "", "AntihermitianPredicate"], [39, 1, 1, "", "ComplexPredicate"], [39, 1, 1, "", "ExtendedRealPredicate"], [39, 1, 1, "", "HermitianPredicate"], [39, 1, 1, "", "ImaginaryPredicate"], [39, 1, 1, "", "IntegerPredicate"], [39, 1, 1, "", "IrrationalPredicate"], [39, 1, 1, "", "RationalPredicate"], [39, 1, 1, "", "RealPredicate"], [39, 1, 1, "", "TranscendentalPredicate"]], "sympy.assumptions.predicates.sets.AlgebraicPredicate": [[39, 5, 1, "", "AlgebraicHandler"], [39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.AntihermitianPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ComplexPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ExtendedRealPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.HermitianPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ImaginaryPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IntegerPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IrrationalPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RationalPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RealPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.TranscendentalPredicate": [[39, 5, 1, "", "handler"]], "sympy.assumptions.refine": [[40, 4, 1, "", "refine"], [40, 4, 1, "", "refine_Pow"], [40, 4, 1, "", "refine_abs"], [40, 4, 1, "", "refine_arg"], [40, 4, 1, "", "refine_atan2"], [40, 4, 1, "", "refine_im"], [40, 4, 1, "", "refine_matrixelement"], [40, 4, 1, "", "refine_re"], [40, 4, 1, "", "refine_sign"]], "sympy.calculus": [[41, 0, 0, "-", "euler"], [41, 0, 0, "-", "finite_diff"], [41, 0, 0, "-", "singularities"], [41, 0, 0, "-", "util"]], "sympy.calculus.euler": [[41, 4, 1, "", "euler_equations"]], "sympy.calculus.finite_diff": [[41, 4, 1, "", "apply_finite_diff"], [41, 4, 1, "", "differentiate_finite"], [41, 4, 1, "", "finite_diff_weights"]], "sympy.calculus.singularities": [[41, 4, 1, "", "is_decreasing"], [41, 4, 1, "", "is_increasing"], [41, 4, 1, "", "is_monotonic"], [41, 4, 1, "", "is_strictly_decreasing"], [41, 4, 1, "", "is_strictly_increasing"], [41, 4, 1, "", "monotonicity_helper"], [41, 4, 1, "", "singularities"]], "sympy.calculus.util": [[41, 4, 1, "", "continuous_domain"], [41, 4, 1, "", "function_range"], [41, 4, 1, "", "is_convex"], [41, 4, 1, "", "lcim"], [41, 4, 1, "", "maximum"], [41, 4, 1, "", "minimum"], [41, 4, 1, "", "not_empty_in"], [41, 4, 1, "", "periodicity"], [41, 4, 1, "", "stationary_points"]], "sympy.categories": [[42, 1, 1, "", "Category"], [42, 1, 1, "", "CompositeMorphism"], [42, 1, 1, "", "Diagram"], [42, 1, 1, "", "IdentityMorphism"], [42, 1, 1, "", "Morphism"], [42, 1, 1, "", "NamedMorphism"], [42, 1, 1, "", "Object"], [42, 0, 0, "-", "diagram_drawing"]], "sympy.categories.Category": [[42, 3, 1, "", "commutative_diagrams"], [42, 3, 1, "", "name"], [42, 3, 1, "", "objects"]], "sympy.categories.CompositeMorphism": [[42, 3, 1, "", "codomain"], [42, 3, 1, "", "components"], [42, 3, 1, "", "domain"], [42, 2, 1, "", "flatten"]], "sympy.categories.Diagram": [[42, 3, 1, "", "conclusions"], [42, 2, 1, "", "hom"], [42, 2, 1, "", "is_subdiagram"], [42, 3, 1, "", "objects"], [42, 3, 1, "", "premises"], [42, 2, 1, "", "subdiagram_from_objects"]], "sympy.categories.Morphism": [[42, 3, 1, "", "codomain"], [42, 2, 1, "", "compose"], [42, 3, 1, "", "domain"]], "sympy.categories.NamedMorphism": [[42, 3, 1, "", "name"]], "sympy.categories.diagram_drawing": [[42, 1, 1, "", "ArrowStringDescription"], [42, 1, 1, "", "DiagramGrid"], [42, 1, 1, "", "XypicDiagramDrawer"], [42, 4, 1, "", "preview_diagram"], [42, 4, 1, "", "xypic_draw_diagram"]], "sympy.categories.diagram_drawing.DiagramGrid": [[42, 3, 1, "", "height"], [42, 3, 1, "", "morphisms"], [42, 3, 1, "", "width"]], "sympy.categories.diagram_drawing.XypicDiagramDrawer": [[42, 2, 1, "", "draw"]], "sympy.codegen": [[43, 0, 0, "-", "algorithms"], [43, 0, 0, "-", "approximations"], [43, 0, 0, "-", "ast"], [43, 0, 0, "-", "cfunctions"], [43, 0, 0, "-", "cnodes"], [43, 0, 0, "-", "cutils"], [43, 0, 0, "-", "cxxnodes"], [43, 0, 0, "-", "fnodes"], [43, 0, 0, "-", "futils"], [43, 0, 0, "-", "matrix_nodes"], [43, 0, 0, "-", "pyutils"], [43, 0, 0, "-", "rewriting"]], "sympy.codegen.algorithms": [[43, 4, 1, "", "newtons_method"], [43, 4, 1, "", "newtons_method_function"]], "sympy.codegen.approximations": [[43, 1, 1, "", "SeriesApprox"], [43, 1, 1, "", "SumApprox"]], "sympy.codegen.ast": [[43, 1, 1, "", "Assignment"], [43, 1, 1, "", "AssignmentBase"], [43, 1, 1, "", "Attribute"], [43, 1, 1, "", "AugmentedAssignment"], [43, 1, 1, "", "BreakToken"], [43, 1, 1, "", "CodeBlock"], [43, 1, 1, "", "Comment"], [43, 1, 1, "", "ComplexType"], [43, 1, 1, "", "ContinueToken"], [43, 1, 1, "", "Declaration"], [43, 1, 1, "", "Element"], [43, 1, 1, "", "FloatBaseType"], [43, 1, 1, "", "FloatType"], [43, 1, 1, "", "For"], [43, 1, 1, "", "FunctionCall"], [43, 1, 1, "", "FunctionDefinition"], [43, 1, 1, "", "FunctionPrototype"], [43, 1, 1, "", "IntBaseType"], [43, 1, 1, "", "Node"], [43, 1, 1, "", "NoneToken"], [43, 1, 1, "", "Pointer"], [43, 1, 1, "", "Print"], [43, 1, 1, "", "QuotedString"], [43, 1, 1, "", "Return"], [43, 1, 1, "", "Scope"], [43, 1, 1, "", "SignedIntType"], [43, 1, 1, "", "Stream"], [43, 1, 1, "", "String"], [43, 1, 1, "", "Token"], [43, 1, 1, "", "Type"], [43, 1, 1, "", "UnsignedIntType"], [43, 1, 1, "", "Variable"], [43, 1, 1, "", "While"], [43, 4, 1, "", "aug_assign"]], "sympy.codegen.ast.CodeBlock": [[43, 2, 1, "", "cse"], [43, 2, 1, "", "topological_sort"]], "sympy.codegen.ast.FloatBaseType": [[43, 5, 1, "", "cast_nocheck"]], "sympy.codegen.ast.FloatType": [[43, 2, 1, "", "cast_nocheck"], [43, 3, 1, "", "decimal_dig"], [43, 3, 1, "", "dig"], [43, 3, 1, "", "eps"], [43, 3, 1, "", "max"], [43, 3, 1, "", "max_exponent"], [43, 3, 1, "", "min_exponent"], [43, 3, 1, "", "tiny"]], "sympy.codegen.ast.Node": [[43, 2, 1, "", "attr_params"]], "sympy.codegen.ast.Token": [[43, 2, 1, "", "kwargs"]], "sympy.codegen.ast.Type": [[43, 2, 1, "", "cast_check"], [43, 2, 1, "", "from_expr"]], "sympy.codegen.ast.Variable": [[43, 2, 1, "", "as_Declaration"], [43, 2, 1, "", "deduced"]], "sympy.codegen.cfunctions": [[43, 1, 1, "", "Cbrt"], [43, 1, 1, "", "Sqrt"], [43, 1, 1, "", "exp2"], [43, 1, 1, "", "expm1"], [43, 1, 1, "", "fma"], [43, 1, 1, "", "hypot"], [43, 1, 1, "", "log10"], [43, 1, 1, "", "log1p"], [43, 1, 1, "", "log2"]], "sympy.codegen.cfunctions.Cbrt": [[43, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.Sqrt": [[43, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.exp2": [[43, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.expm1": [[43, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.fma": [[43, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.hypot": [[43, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log10": [[43, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log1p": [[43, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log2": [[43, 2, 1, "", "fdiff"]], "sympy.codegen.cnodes": [[43, 1, 1, "", "CommaOperator"], [43, 1, 1, "", "Label"], [43, 1, 1, "", "PostDecrement"], [43, 1, 1, "", "PostIncrement"], [43, 1, 1, "", "PreDecrement"], [43, 1, 1, "", "PreIncrement"], [43, 4, 1, "", "alignof"], [43, 1, 1, "", "goto"], [43, 4, 1, "", "sizeof"], [43, 1, 1, "", "struct"], [43, 1, 1, "", "union"]], "sympy.codegen.cutils": [[43, 4, 1, "", "render_as_source_file"]], "sympy.codegen.cxxnodes": [[43, 1, 1, "", "using"]], "sympy.codegen.fnodes": [[43, 1, 1, "", "ArrayConstructor"], [43, 1, 1, "", "Do"], [43, 1, 1, "", "Extent"], [43, 1, 1, "", "FortranReturn"], [43, 1, 1, "", "GoTo"], [43, 1, 1, "", "ImpliedDoLoop"], [43, 1, 1, "", "Module"], [43, 1, 1, "", "Program"], [43, 1, 1, "", "Subroutine"], [43, 1, 1, "", "SubroutineCall"], [43, 4, 1, "", "allocated"], [43, 4, 1, "", "array"], [43, 4, 1, "", "bind_C"], [43, 1, 1, "", "cmplx"], [43, 4, 1, "", "dimension"], [43, 1, 1, "", "dsign"], [43, 1, 1, "", "isign"], [43, 1, 1, "", "kind"], [43, 4, 1, "", "lbound"], [43, 1, 1, "", "literal_dp"], [43, 1, 1, "", "literal_sp"], [43, 1, 1, "", "merge"], [43, 4, 1, "", "reshape"], [43, 4, 1, "", "shape"], [43, 4, 1, "", "size"], [43, 1, 1, "", "use"], [43, 1, 1, "", "use_rename"]], "sympy.codegen.futils": [[43, 4, 1, "", "render_as_module"]], "sympy.codegen.matrix_nodes": [[43, 1, 1, "", "MatrixSolve"]], "sympy.codegen.pyutils": [[43, 4, 1, "", "render_as_module"]], "sympy.codegen.rewriting": [[43, 1, 1, "", "FuncMinusOneOptim"], [43, 1, 1, "", "Optimization"], [43, 1, 1, "", "ReplaceOptim"], [43, 4, 1, "", "create_expand_pow_optimization"], [43, 4, 1, "", "optimize"]], "sympy.codegen.rewriting.FuncMinusOneOptim": [[43, 2, 1, "", "replace_in_Add"]], "sympy.combinatorics": [[45, 0, 0, "-", "galois"], [54, 0, 0, "-", "generators"], [46, 0, 0, "-", "graycode"], [47, 0, 0, "-", "group_constructs"], [48, 0, 0, "-", "group_numbers"], [50, 0, 0, "-", "named_groups"], [51, 0, 0, "-", "partitions"], [53, 0, 0, "-", "perm_groups"], [54, 0, 0, "-", "permutations"], [55, 0, 0, "-", "polyhedron"], [56, 0, 0, "-", "prufer"], [57, 0, 0, "-", "subsets"], [58, 0, 0, "-", "tensor_can"], [59, 0, 0, "-", "testutil"], [60, 0, 0, "-", "util"]], "sympy.combinatorics.galois": [[45, 4, 1, "", "A4_in_S6"], [45, 4, 1, "", "A4xC2"], [45, 4, 1, "", "G18"], [45, 4, 1, "", "G36m"], [45, 4, 1, "", "G36p"], [45, 4, 1, "", "G72"], [45, 4, 1, "", "M20"], [45, 4, 1, "", "PGL2F5"], [45, 4, 1, "", "PSL2F5"], [45, 1, 1, "", "S1TransitiveSubgroups"], [45, 1, 1, "", "S2TransitiveSubgroups"], [45, 1, 1, "", "S3TransitiveSubgroups"], [45, 4, 1, "", "S3_in_S6"], [45, 1, 1, "", "S4TransitiveSubgroups"], [45, 4, 1, "", "S4m"], [45, 4, 1, "", "S4p"], [45, 4, 1, "", "S4xC2"], [45, 1, 1, "", "S5TransitiveSubgroups"], [45, 1, 1, "", "S6TransitiveSubgroups"], [45, 4, 1, "", "find_transitive_subgroups_of_S6"], [45, 4, 1, "", "four_group"]], "sympy.combinatorics.generators": [[54, 2, 1, "", "alternating"], [54, 2, 1, "", "cyclic"], [54, 2, 1, "", "dihedral"], [54, 2, 1, "", "symmetric"]], "sympy.combinatorics.graycode": [[46, 1, 1, "", "GrayCode"], [46, 2, 1, "", "bin_to_gray"], [46, 2, 1, "", "get_subset_from_bitstring"], [46, 2, 1, "", "gray_to_bin"], [46, 2, 1, "", "graycode_subsets"], [46, 2, 1, "", "random_bitstring"]], "sympy.combinatorics.graycode.GrayCode": [[46, 3, 1, "", "current"], [46, 2, 1, "", "generate_gray"], [46, 3, 1, "", "n"], [46, 2, 1, "", "next"], [46, 3, 1, "", "rank"], [46, 3, 1, "", "selections"], [46, 2, 1, "", "skip"], [46, 2, 1, "", "unrank"]], "sympy.combinatorics.group_constructs": [[47, 4, 1, "", "DirectProduct"]], "sympy.combinatorics.group_numbers": [[48, 4, 1, "", "is_abelian_number"], [48, 4, 1, "", "is_cyclic_number"], [48, 4, 1, "", "is_nilpotent_number"]], "sympy.combinatorics.named_groups": [[50, 4, 1, "", "AbelianGroup"], [50, 4, 1, "", "AlternatingGroup"], [50, 4, 1, "", "CyclicGroup"], [50, 4, 1, "", "DihedralGroup"], [50, 4, 1, "", "SymmetricGroup"]], "sympy.combinatorics.partitions": [[51, 1, 1, "", "IntegerPartition"], [51, 1, 1, "", "Partition"], [51, 4, 1, "", "RGS_enum"], [51, 4, 1, "", "RGS_generalized"], [51, 4, 1, "", "RGS_rank"], [51, 4, 1, "", "RGS_unrank"], [51, 4, 1, "", "random_integer_partition"]], "sympy.combinatorics.partitions.IntegerPartition": [[51, 2, 1, "", "as_dict"], [51, 2, 1, "", "as_ferrers"], [51, 3, 1, "", "conjugate"], [51, 2, 1, "", "next_lex"], [51, 2, 1, "", "prev_lex"]], "sympy.combinatorics.partitions.Partition": [[51, 3, 1, "", "RGS"], [51, 2, 1, "", "from_rgs"], [51, 3, 1, "", "partition"], [51, 3, 1, "", "rank"], [51, 2, 1, "", "sort_key"]], "sympy.combinatorics.perm_groups": [[53, 1, 1, "", "PermutationGroup"]], "sympy.combinatorics.perm_groups.PermutationGroup": [[53, 2, 1, "", "__contains__"], [53, 2, 1, "", "__mul__"], [53, 2, 1, "", "__new__"], [53, 5, 1, "", "__weakref__"], [53, 2, 1, "", "_coset_representative"], [53, 2, 1, "", "_distinct_primes_lemma"], [53, 3, 1, "", "_elements"], [53, 2, 1, "", "_eval_is_alt_sym_monte_carlo"], [53, 2, 1, "", "_eval_is_alt_sym_naive"], [53, 2, 1, "", "_p_elements_group"], [53, 2, 1, "", "_random_pr_init"], [53, 2, 1, "", "_sylow_alt_sym"], [53, 2, 1, "", "_union_find_merge"], [53, 2, 1, "", "_union_find_rep"], [53, 2, 1, "", "_verify"], [53, 2, 1, "", "abelian_invariants"], [53, 3, 1, "", "base"], [53, 2, 1, "", "baseswap"], [53, 3, 1, "", "basic_orbits"], [53, 3, 1, "", "basic_stabilizers"], [53, 3, 1, "", "basic_transversals"], [53, 2, 1, "", "center"], [53, 2, 1, "", "centralizer"], [53, 2, 1, "", "commutator"], [53, 2, 1, "", "composition_series"], [53, 2, 1, "", "conjugacy_class"], [53, 2, 1, "", "conjugacy_classes"], [53, 2, 1, "", "contains"], [53, 2, 1, "", "coset_factor"], [53, 2, 1, "", "coset_rank"], [53, 2, 1, "", "coset_table"], [53, 2, 1, "", "coset_transversal"], [53, 2, 1, "", "coset_unrank"], [53, 3, 1, "", "degree"], [53, 2, 1, "", "derived_series"], [53, 2, 1, "", "derived_subgroup"], [53, 3, 1, "", "elements"], [53, 2, 1, "", "equals"], [53, 2, 1, "", "generate"], [53, 2, 1, "", "generate_dimino"], [53, 2, 1, "", "generate_schreier_sims"], [53, 2, 1, "", "generator_product"], [53, 3, 1, "", "generators"], [53, 3, 1, "", "identity"], [53, 2, 1, "", "index"], [53, 3, 1, "", "is_abelian"], [53, 2, 1, "", "is_alt_sym"], [53, 3, 1, "", "is_alternating"], [53, 3, 1, "", "is_cyclic"], [53, 3, 1, "", "is_dihedral"], [53, 2, 1, "", "is_elementary"], [53, 3, 1, "", "is_nilpotent"], [53, 2, 1, "", "is_normal"], [53, 3, 1, "", "is_perfect"], [53, 3, 1, "", "is_polycyclic"], [53, 2, 1, "", "is_primitive"], [53, 3, 1, "", "is_solvable"], [53, 2, 1, "", "is_subgroup"], [53, 3, 1, "", "is_symmetric"], [53, 2, 1, "", "is_transitive"], [53, 3, 1, "", "is_trivial"], [53, 2, 1, "", "lower_central_series"], [53, 2, 1, "", "make_perm"], [53, 3, 1, "", "max_div"], [53, 2, 1, "", "minimal_block"], [53, 2, 1, "", "minimal_blocks"], [53, 2, 1, "", "normal_closure"], [53, 2, 1, "", "orbit"], [53, 2, 1, "", "orbit_rep"], [53, 2, 1, "", "orbit_transversal"], [53, 2, 1, "", "orbits"], [53, 2, 1, "", "order"], [53, 2, 1, "", "pointwise_stabilizer"], [53, 2, 1, "", "polycyclic_group"], [53, 2, 1, "", "presentation"], [53, 2, 1, "", "random"], [53, 2, 1, "", "random_pr"], [53, 2, 1, "", "random_stab"], [53, 2, 1, "", "schreier_sims"], [53, 2, 1, "", "schreier_sims_incremental"], [53, 2, 1, "", "schreier_sims_random"], [53, 2, 1, "", "schreier_vector"], [53, 2, 1, "", "stabilizer"], [53, 3, 1, "", "strong_gens"], [53, 2, 1, "", "strong_presentation"], [53, 2, 1, "", "subgroup"], [53, 2, 1, "", "subgroup_search"], [53, 2, 1, "", "sylow_subgroup"], [53, 3, 1, "", "transitivity_degree"]], "sympy.combinatorics.permutations": [[54, 1, 1, "", "Cycle"], [54, 1, 1, "", "Permutation"], [54, 4, 1, "", "_af_parity"]], "sympy.combinatorics.permutations.Cycle": [[54, 2, 1, "", "list"]], "sympy.combinatorics.permutations.Permutation": [[54, 2, 1, "", "apply"], [54, 3, 1, "", "array_form"], [54, 2, 1, "", "ascents"], [54, 2, 1, "", "atoms"], [54, 3, 1, "", "cardinality"], [54, 2, 1, "", "commutator"], [54, 2, 1, "", "commutes_with"], [54, 3, 1, "", "cycle_structure"], [54, 3, 1, "", "cycles"], [54, 3, 1, "", "cyclic_form"], [54, 2, 1, "", "descents"], [54, 2, 1, "", "from_inversion_vector"], [54, 2, 1, "", "from_sequence"], [54, 3, 1, "", "full_cyclic_form"], [54, 2, 1, "", "get_adjacency_distance"], [54, 2, 1, "", "get_adjacency_matrix"], [54, 2, 1, "", "get_positional_distance"], [54, 2, 1, "", "get_precedence_distance"], [54, 2, 1, "", "get_precedence_matrix"], [54, 2, 1, "", "index"], [54, 2, 1, "", "inversion_vector"], [54, 2, 1, "", "inversions"], [54, 3, 1, "", "is_Empty"], [54, 3, 1, "", "is_Identity"], [54, 3, 1, "", "is_Singleton"], [54, 3, 1, "", "is_even"], [54, 3, 1, "", "is_odd"], [54, 2, 1, "", "josephus"], [54, 2, 1, "", "length"], [54, 2, 1, "", "list"], [54, 2, 1, "", "max"], [54, 2, 1, "", "min"], [54, 2, 1, "", "mul_inv"], [54, 2, 1, "", "next_lex"], [54, 2, 1, "", "next_nonlex"], [54, 2, 1, "", "next_trotterjohnson"], [54, 2, 1, "", "order"], [54, 2, 1, "", "parity"], [54, 2, 1, "", "random"], [54, 2, 1, "", "rank"], [54, 2, 1, "", "rank_nonlex"], [54, 2, 1, "", "rank_trotterjohnson"], [54, 2, 1, "", "resize"], [54, 2, 1, "", "rmul"], [54, 2, 1, "", "rmul_with_af"], [54, 2, 1, "", "runs"], [54, 2, 1, "", "signature"], [54, 3, 1, "", "size"], [54, 2, 1, "", "support"], [54, 2, 1, "", "transpositions"], [54, 2, 1, "", "unrank_lex"], [54, 2, 1, "", "unrank_nonlex"], [54, 2, 1, "", "unrank_trotterjohnson"]], "sympy.combinatorics.polyhedron": [[55, 1, 1, "", "Polyhedron"]], "sympy.combinatorics.polyhedron.Polyhedron": [[55, 3, 1, "", "array_form"], [55, 3, 1, "", "corners"], [55, 3, 1, "", "cyclic_form"], [55, 3, 1, "", "edges"], [55, 3, 1, "", "faces"], [55, 3, 1, "", "pgroup"], [55, 2, 1, "", "reset"], [55, 2, 1, "", "rotate"], [55, 3, 1, "", "size"], [55, 3, 1, "", "vertices"]], "sympy.combinatorics.prufer": [[56, 1, 1, "", "Prufer"]], "sympy.combinatorics.prufer.Prufer": [[56, 2, 1, "", "edges"], [56, 2, 1, "", "next"], [56, 3, 1, "", "nodes"], [56, 2, 1, "", "prev"], [56, 2, 1, "", "prufer_rank"], [56, 3, 1, "", "prufer_repr"], [56, 3, 1, "", "rank"], [56, 3, 1, "", "size"], [56, 2, 1, "", "to_prufer"], [56, 2, 1, "", "to_tree"], [56, 3, 1, "", "tree_repr"], [56, 2, 1, "", "unrank"]], "sympy.combinatorics.subsets": [[57, 1, 1, "", "Subset"], [57, 2, 1, "", "ksubsets"]], "sympy.combinatorics.subsets.Subset": [[57, 2, 1, "", "bitlist_from_subset"], [57, 3, 1, "", "cardinality"], [57, 2, 1, "", "iterate_binary"], [57, 2, 1, "", "iterate_graycode"], [57, 2, 1, "", "next_binary"], [57, 2, 1, "", "next_gray"], [57, 2, 1, "", "next_lexicographic"], [57, 2, 1, "", "prev_binary"], [57, 2, 1, "", "prev_gray"], [57, 2, 1, "", "prev_lexicographic"], [57, 3, 1, "", "rank_binary"], [57, 3, 1, "", "rank_gray"], [57, 3, 1, "", "rank_lexicographic"], [57, 3, 1, "", "size"], [57, 3, 1, "", "subset"], [57, 2, 1, "", "subset_from_bitlist"], [57, 2, 1, "", "subset_indices"], [57, 3, 1, "", "superset"], [57, 3, 1, "", "superset_size"], [57, 2, 1, "", "unrank_binary"], [57, 2, 1, "", "unrank_gray"]], "sympy.combinatorics.tensor_can": [[58, 4, 1, "", "bsgs_direct_product"], [58, 4, 1, "", "canonicalize"], [58, 4, 1, "", "double_coset_can_rep"], [58, 4, 1, "", "get_symmetric_group_sgs"]], "sympy.combinatorics.testutil": [[59, 4, 1, "", "_cmp_perm_lists"], [59, 4, 1, "", "_naive_list_centralizer"], [59, 4, 1, "", "_verify_bsgs"], [59, 4, 1, "", "_verify_centralizer"], [59, 4, 1, "", "_verify_normal_closure"]], "sympy.combinatorics.util": [[60, 4, 1, "", "_base_ordering"], [60, 4, 1, "", "_check_cycles_alt_sym"], [60, 4, 1, "", "_distribute_gens_by_base"], [60, 4, 1, "", "_handle_precomputed_bsgs"], [60, 4, 1, "", "_orbits_transversals_from_bsgs"], [60, 4, 1, "", "_remove_gens"], [60, 4, 1, "", "_strip"], [60, 4, 1, "", "_strong_gens_from_distr"]], "sympy.concrete.expr_with_intlimits": [[61, 1, 1, "", "ExprWithIntLimits"]], "sympy.concrete.expr_with_intlimits.ExprWithIntLimits": [[61, 2, 1, "", "change_index"], [61, 3, 1, "", "has_empty_sequence"], [61, 2, 1, "", "index"], [61, 2, 1, "", "reorder"], [61, 2, 1, "", "reorder_limit"]], "sympy.concrete.expr_with_limits": [[89, 1, 1, "", "ExprWithLimits"]], "sympy.concrete.expr_with_limits.ExprWithLimits": [[89, 3, 1, "", "bound_symbols"], [89, 3, 1, "", "free_symbols"], [89, 3, 1, "", "function"], [89, 3, 1, "", "has_finite_limits"], [89, 3, 1, "", "has_reversed_limits"], [89, 3, 1, "", "is_number"], [89, 3, 1, "", "limits"], [89, 3, 1, "", "variables"]], "sympy.concrete.gosper": [[61, 4, 1, "", "gosper_normal"], [61, 4, 1, "", "gosper_sum"], [61, 4, 1, "", "gosper_term"]], "sympy.concrete.products": [[61, 1, 1, "", "Product"], [61, 4, 1, "", "product"]], "sympy.concrete.products.Product": [[61, 2, 1, "", "is_convergent"], [61, 2, 1, "", "reverse_order"]], "sympy.concrete.summations": [[61, 1, 1, "", "Sum"], [61, 4, 1, "", "summation"]], "sympy.concrete.summations.Sum": [[61, 2, 1, "", "euler_maclaurin"], [61, 2, 1, "", "eval_zeta_function"], [61, 2, 1, "", "is_absolutely_convergent"], [61, 2, 1, "", "is_convergent"], [61, 2, 1, "", "reverse_order"]], "sympy.core": [[62, 0, 0, "-", "add"], [62, 0, 0, "-", "assumptions"], [62, 0, 0, "-", "basic"], [62, 0, 0, "-", "cache"], [62, 0, 0, "-", "containers"], [62, 0, 0, "-", "evalf"], [62, 0, 0, "-", "expr"], [62, 0, 0, "-", "exprtools"], [62, 0, 0, "-", "function"], [62, 0, 0, "-", "kind"], [62, 0, 0, "-", "mod"], [62, 0, 0, "-", "mul"], [62, 0, 0, "-", "multidimensional"], [62, 0, 0, "-", "numbers"], [62, 0, 0, "-", "power"], [62, 0, 0, "-", "random"], [62, 0, 0, "-", "relational"], [62, 0, 0, "-", "singleton"], [62, 0, 0, "-", "symbol"], [62, 0, 0, "-", "sympify"], [62, 0, 0, "-", "traversal"]], "sympy.core.add": [[62, 1, 1, "", "Add"]], "sympy.core.add.Add": [[62, 2, 1, "", "as_coeff_Add"], [62, 2, 1, "", "as_coeff_add"], [62, 2, 1, "", "as_content_primitive"], [62, 2, 1, "", "as_numer_denom"], [62, 2, 1, "", "as_real_imag"], [62, 2, 1, "", "as_two_terms"], [62, 2, 1, "", "extract_leading_order"], [62, 2, 1, "", "flatten"], [62, 2, 1, "", "primitive"]], "sympy.core.basic": [[62, 1, 1, "", "Atom"], [62, 1, 1, "", "Basic"]], "sympy.core.basic.Basic": [[62, 3, 1, "", "args"], [62, 2, 1, "", "as_content_primitive"], [62, 2, 1, "", "as_dummy"], [62, 3, 1, "", "assumptions0"], [62, 2, 1, "", "atoms"], [62, 3, 1, "", "canonical_variables"], [62, 2, 1, "", "class_key"], [62, 2, 1, "", "compare"], [62, 2, 1, "", "count"], [62, 2, 1, "", "count_ops"], [62, 2, 1, "", "doit"], [62, 2, 1, "", "dummy_eq"], [62, 2, 1, "", "find"], [62, 3, 1, "", "free_symbols"], [62, 2, 1, "", "fromiter"], [62, 3, 1, "", "func"], [62, 2, 1, "", "has"], [62, 2, 1, "", "has_free"], [62, 2, 1, "", "has_xfree"], [62, 3, 1, "", "is_comparable"], [62, 2, 1, "", "match"], [62, 2, 1, "", "matches"], [62, 2, 1, "", "rcall"], [62, 2, 1, "", "refine"], [62, 2, 1, "", "replace"], [62, 2, 1, "", "rewrite"], [62, 2, 1, "", "simplify"], [62, 2, 1, "", "sort_key"], [62, 2, 1, "", "subs"], [62, 2, 1, "", "xreplace"]], "sympy.core.cache": [[62, 4, 1, "", "__cacheit"]], "sympy.core.containers": [[62, 1, 1, "", "Dict"], [62, 1, 1, "", "Tuple"], [62, 1, 1, "", "TupleKind"]], "sympy.core.containers.Dict": [[62, 2, 1, "", "get"], [62, 2, 1, "", "items"], [62, 2, 1, "", "keys"], [62, 2, 1, "", "values"]], "sympy.core.containers.Tuple": [[62, 2, 1, "", "index"], [62, 3, 1, "", "kind"], [62, 2, 1, "", "tuple_count"]], "sympy.core.evalf": [[62, 1, 1, "", "EvalfMixin"], [62, 4, 1, "", "N"], [62, 1, 1, "", "PrecisionExhausted"]], "sympy.core.evalf.EvalfMixin": [[62, 2, 1, "", "evalf"], [62, 2, 1, "", "n"]], "sympy.core.expr": [[62, 1, 1, "", "AtomicExpr"], [62, 1, 1, "", "Expr"], [62, 1, 1, "", "UnevaluatedExpr"]], "sympy.core.expr.Expr": [[62, 2, 1, "", "apart"], [62, 2, 1, "", "args_cnc"], [62, 2, 1, "", "as_coeff_Add"], [62, 2, 1, "", "as_coeff_Mul"], [62, 2, 1, "", "as_coeff_add"], [62, 2, 1, "", "as_coeff_exponent"], [62, 2, 1, "", "as_coeff_mul"], [62, 2, 1, "", "as_coefficient"], [62, 2, 1, "", "as_coefficients_dict"], [62, 2, 1, "", "as_content_primitive"], [62, 2, 1, "", "as_expr"], [62, 2, 1, "", "as_independent"], [62, 2, 1, "", "as_leading_term"], [62, 2, 1, "", "as_numer_denom"], [62, 2, 1, "", "as_ordered_factors"], [62, 2, 1, "", "as_ordered_terms"], [62, 2, 1, "", "as_poly"], [62, 2, 1, "", "as_powers_dict"], [62, 2, 1, "", "as_real_imag"], [62, 2, 1, "", "as_terms"], [62, 2, 1, "", "aseries"], [62, 2, 1, "", "cancel"], [62, 2, 1, "", "coeff"], [62, 2, 1, "", "collect"], [62, 2, 1, "", "combsimp"], [62, 2, 1, "", "compute_leading_term"], [62, 2, 1, "", "conjugate"], [62, 2, 1, "", "could_extract_minus_sign"], [62, 2, 1, "", "equals"], [62, 2, 1, "", "expand"], [62, 3, 1, "", "expr_free_symbols"], [62, 2, 1, "", "extract_additively"], [62, 2, 1, "", "extract_branch_factor"], [62, 2, 1, "", "extract_multiplicatively"], [62, 2, 1, "", "factor"], [62, 2, 1, "", "fourier_series"], [62, 2, 1, "", "fps"], [62, 2, 1, "", "gammasimp"], [62, 2, 1, "", "getO"], [62, 2, 1, "", "getn"], [62, 2, 1, "", "integrate"], [62, 2, 1, "", "invert"], [62, 2, 1, "", "is_algebraic_expr"], [62, 2, 1, "", "is_constant"], [62, 2, 1, "", "is_meromorphic"], [62, 3, 1, "", "is_number"], [62, 2, 1, "", "is_polynomial"], [62, 2, 1, "", "is_rational_function"], [62, 2, 1, "", "leadterm"], [62, 2, 1, "", "limit"], [62, 2, 1, "", "lseries"], [62, 2, 1, "", "normal"], [62, 2, 1, "", "nseries"], [62, 2, 1, "", "nsimplify"], [62, 2, 1, "", "powsimp"], [62, 2, 1, "", "primitive"], [62, 2, 1, "", "radsimp"], [62, 2, 1, "", "ratsimp"], [62, 2, 1, "", "removeO"], [62, 2, 1, "", "round"], [62, 2, 1, "", "separate"], [62, 2, 1, "", "series"], [62, 2, 1, "", "taylor_term"], [62, 2, 1, "", "together"], [62, 2, 1, "", "trigsimp"]], "sympy.core.exprtools": [[62, 4, 1, "", "factor_terms"], [62, 4, 1, "", "gcd_terms"]], "sympy.core.function": [[62, 1, 1, "", "Derivative"], [62, 1, 1, "", "Function"], [62, 1, 1, "", "FunctionClass"], [62, 1, 1, "", "Lambda"], [62, 1, 1, "", "PoleError"], [62, 1, 1, "", "Subs"], [62, 1, 1, "", "WildFunction"], [62, 4, 1, "", "count_ops"], [62, 4, 1, "", "diff"], [62, 4, 1, "", "expand"], [62, 4, 1, "", "expand_complex"], [62, 4, 1, "", "expand_func"], [62, 4, 1, "", "expand_log"], [62, 4, 1, "", "expand_mul"], [62, 4, 1, "", "expand_multinomial"], [62, 4, 1, "", "expand_power_base"], [62, 4, 1, "", "expand_power_exp"], [62, 4, 1, "", "expand_trig"], [62, 4, 1, "", "nfloat"]], "sympy.core.function.Derivative": [[62, 3, 1, "", "_diff_wrt"], [62, 2, 1, "", "_sort_variable_count"], [62, 2, 1, "", "as_finite_difference"], [62, 2, 1, "", "doit_numerically"]], "sympy.core.function.Function": [[62, 2, 1, "", "as_base_exp"], [62, 2, 1, "", "fdiff"], [62, 2, 1, "", "is_singular"]], "sympy.core.function.FunctionClass": [[62, 3, 1, "", "nargs"]], "sympy.core.function.Lambda": [[62, 3, 1, "", "bound_symbols"], [62, 3, 1, "", "expr"], [62, 3, 1, "", "is_identity"], [62, 3, 1, "", "signature"], [62, 3, 1, "", "variables"]], "sympy.core.function.Subs": [[62, 3, 1, "", "bound_symbols"], [62, 3, 1, "", "expr"], [62, 3, 1, "", "point"], [62, 3, 1, "", "variables"]], "sympy.core.kind": [[62, 5, 1, "", "BooleanKind"], [62, 1, 1, "", "Kind"], [62, 5, 1, "", "NumberKind"], [62, 5, 1, "", "UndefinedKind"]], "sympy.core.mod": [[62, 1, 1, "", "Mod"]], "sympy.core.mul": [[62, 1, 1, "", "Mul"], [62, 4, 1, "", "prod"]], "sympy.core.mul.Mul": [[62, 2, 1, "", "as_coeff_Mul"], [62, 2, 1, "", "as_content_primitive"], [62, 2, 1, "", "as_ordered_factors"], [62, 2, 1, "", "as_two_terms"], [62, 2, 1, "", "flatten"]], "sympy.core.multidimensional": [[62, 1, 1, "", "vectorize"]], "sympy.core.numbers": [[62, 1, 1, "", "AlgebraicNumber"], [62, 1, 1, "", "Catalan"], [62, 1, 1, "", "ComplexInfinity"], [62, 1, 1, "", "EulerGamma"], [62, 1, 1, "", "Exp1"], [62, 1, 1, "", "Float"], [62, 1, 1, "", "GoldenRatio"], [62, 1, 1, "", "Half"], [62, 1, 1, "", "ImaginaryUnit"], [62, 1, 1, "", "Infinity"], [62, 1, 1, "", "Integer"], [62, 1, 1, "", "NaN"], [62, 1, 1, "", "NegativeInfinity"], [62, 1, 1, "", "NegativeOne"], [62, 1, 1, "", "Number"], [62, 1, 1, "", "NumberSymbol"], [62, 1, 1, "", "One"], [62, 1, 1, "", "Pi"], [62, 1, 1, "", "Rational"], [62, 5, 1, "", "RealNumber"], [62, 1, 1, "", "TribonacciConstant"], [62, 1, 1, "", "Zero"], [62, 4, 1, "", "equal_valued"], [62, 4, 1, "", "igcd"], [62, 4, 1, "", "ilcm"], [62, 4, 1, "", "mod_inverse"], [62, 4, 1, "", "seterr"]], "sympy.core.numbers.AlgebraicNumber": [[62, 2, 1, "", "__new__"], [62, 2, 1, "", "as_expr"], [62, 2, 1, "", "as_poly"], [62, 2, 1, "", "coeffs"], [62, 2, 1, "", "field_element"], [62, 3, 1, "", "is_aliased"], [62, 3, 1, "", "is_primitive_element"], [62, 2, 1, "", "minpoly_of_element"], [62, 2, 1, "", "native_coeffs"], [62, 2, 1, "", "primitive_element"], [62, 2, 1, "", "to_algebraic_integer"], [62, 2, 1, "", "to_primitive_element"], [62, 2, 1, "", "to_root"]], "sympy.core.numbers.Number": [[62, 2, 1, "", "as_coeff_Add"], [62, 2, 1, "", "as_coeff_Mul"], [62, 2, 1, "", "cofactors"], [62, 2, 1, "", "gcd"], [62, 2, 1, "", "lcm"]], "sympy.core.numbers.NumberSymbol": [[62, 2, 1, "", "approximation"]], "sympy.core.numbers.Rational": [[62, 2, 1, "", "as_coeff_Add"], [62, 2, 1, "", "as_coeff_Mul"], [62, 2, 1, "", "as_content_primitive"], [62, 2, 1, "", "factors"], [62, 2, 1, "", "limit_denominator"]], "sympy.core.power": [[62, 1, 1, "", "Pow"], [62, 4, 1, "", "integer_log"], [62, 4, 1, "", "integer_nthroot"]], "sympy.core.power.Pow": [[62, 2, 1, "", "as_base_exp"], [62, 2, 1, "", "as_content_primitive"]], "sympy.core.random": [[62, 4, 1, "", "_randint"], [62, 4, 1, "", "_randrange"], [62, 4, 1, "", "random_complex_number"], [62, 4, 1, "", "test_derivative_numerically"], [62, 4, 1, "", "verify_numerically"]], "sympy.core.relational": [[62, 5, 1, "", "Eq"], [62, 1, 1, "", "Equality"], [62, 5, 1, "", "Ge"], [62, 1, 1, "", "GreaterThan"], [62, 5, 1, "", "Gt"], [62, 5, 1, "", "Le"], [62, 1, 1, "", "LessThan"], [62, 5, 1, "", "Lt"], [62, 5, 1, "", "Ne"], [62, 5, 1, "", "Rel"], [62, 1, 1, "", "Relational"], [62, 1, 1, "", "StrictGreaterThan"], [62, 1, 1, "", "StrictLessThan"], [62, 1, 1, "", "Unequality"]], "sympy.core.relational.Equality": [[62, 2, 1, "", "as_poly"], [62, 2, 1, "", "integrate"]], "sympy.core.relational.Relational": [[62, 3, 1, "", "canonical"], [62, 2, 1, "", "equals"], [62, 3, 1, "", "lhs"], [62, 3, 1, "", "negated"], [62, 3, 1, "", "reversed"], [62, 3, 1, "", "reversedsign"], [62, 3, 1, "", "rhs"], [62, 3, 1, "", "strict"], [62, 3, 1, "", "weak"]], "sympy.core.singleton": [[62, 1, 1, "", "Singleton"], [62, 1, 1, "", "SingletonRegistry"]], "sympy.core.sorting": [[62, 4, 1, "", "default_sort_key"], [62, 4, 1, "", "ordered"]], "sympy.core.symbol": [[62, 1, 1, "", "Dummy"], [62, 1, 1, "", "Symbol"], [62, 1, 1, "", "Wild"], [62, 4, 1, "", "symbols"], [62, 4, 1, "", "var"]], "sympy.core.sympify": [[62, 4, 1, "", "sympify"]], "sympy.core.traversal": [[62, 4, 1, "", "bottom_up"], [62, 4, 1, "", "postorder_traversal"], [62, 4, 1, "", "preorder_traversal"], [62, 4, 1, "", "use"], [62, 4, 1, "", "walk"]], "sympy.crypto": [[63, 0, 0, "-", "crypto"]], "sympy.crypto.crypto": [[63, 4, 1, "", "AZ"], [63, 4, 1, "", "bifid5_square"], [63, 4, 1, "", "bifid6_square"], [63, 4, 1, "", "check_and_join"], [63, 4, 1, "", "cycle_list"], [63, 4, 1, "", "decipher_affine"], [63, 4, 1, "", "decipher_atbash"], [63, 4, 1, "", "decipher_bifid"], [63, 4, 1, "", "decipher_bifid5"], [63, 4, 1, "", "decipher_bifid6"], [63, 4, 1, "", "decipher_elgamal"], [63, 4, 1, "", "decipher_gm"], [63, 4, 1, "", "decipher_hill"], [63, 4, 1, "", "decipher_kid_rsa"], [63, 4, 1, "", "decipher_railfence"], [63, 4, 1, "", "decipher_rot13"], [63, 4, 1, "", "decipher_rsa"], [63, 4, 1, "", "decipher_shift"], [63, 4, 1, "", "decipher_vigenere"], [63, 4, 1, "", "decode_morse"], [63, 4, 1, "", "dh_private_key"], [63, 4, 1, "", "dh_public_key"], [63, 4, 1, "", "dh_shared_key"], [63, 4, 1, "", "elgamal_private_key"], [63, 4, 1, "", "elgamal_public_key"], [63, 4, 1, "", "encipher_affine"], [63, 4, 1, "", "encipher_atbash"], [63, 4, 1, "", "encipher_bifid"], [63, 4, 1, "", "encipher_bifid5"], [63, 4, 1, "", "encipher_bifid6"], [63, 4, 1, "", "encipher_elgamal"], [63, 4, 1, "", "encipher_gm"], [63, 4, 1, "", "encipher_hill"], [63, 4, 1, "", "encipher_kid_rsa"], [63, 4, 1, "", "encipher_railfence"], [63, 4, 1, "", "encipher_rot13"], [63, 4, 1, "", "encipher_rsa"], [63, 4, 1, "", "encipher_shift"], [63, 4, 1, "", "encipher_substitution"], [63, 4, 1, "", "encipher_vigenere"], [63, 4, 1, "", "encode_morse"], [63, 4, 1, "", "gm_private_key"], [63, 4, 1, "", "gm_public_key"], [63, 4, 1, "", "kid_rsa_private_key"], [63, 4, 1, "", "kid_rsa_public_key"], [63, 4, 1, "", "lfsr_autocorrelation"], [63, 4, 1, "", "lfsr_connection_polynomial"], [63, 4, 1, "", "lfsr_sequence"], [63, 4, 1, "", "padded_key"], [63, 4, 1, "", "rsa_private_key"], [63, 4, 1, "", "rsa_public_key"]], "sympy.diffgeom": [[64, 1, 1, "", "BaseCovarDerivativeOp"], [64, 1, 1, "", "BaseScalarField"], [64, 1, 1, "", "BaseVectorField"], [64, 1, 1, "", "Commutator"], [64, 1, 1, "", "CoordSystem"], [64, 1, 1, "", "CoordinateSymbol"], [64, 1, 1, "", "CovarDerivativeOp"], [64, 1, 1, "", "Differential"], [64, 1, 1, "", "LieDerivative"], [64, 1, 1, "", "Manifold"], [64, 1, 1, "", "Patch"], [64, 1, 1, "", "Point"], [64, 1, 1, "", "TensorProduct"], [64, 1, 1, "", "WedgeProduct"], [64, 4, 1, "", "intcurve_diffequ"], [64, 4, 1, "", "intcurve_series"], [64, 4, 1, "", "metric_to_Christoffel_1st"], [64, 4, 1, "", "metric_to_Christoffel_2nd"], [64, 4, 1, "", "metric_to_Ricci_components"], [64, 4, 1, "", "metric_to_Riemann_components"], [64, 4, 1, "", "twoform_to_matrix"], [64, 4, 1, "", "vectors_in_basis"]], "sympy.diffgeom.CoordSystem": [[64, 2, 1, "", "base_oneform"], [64, 2, 1, "", "base_oneforms"], [64, 2, 1, "", "base_scalar"], [64, 2, 1, "", "base_scalars"], [64, 2, 1, "", "base_vector"], [64, 2, 1, "", "base_vectors"], [64, 2, 1, "", "coord_function"], [64, 2, 1, "", "coord_functions"], [64, 2, 1, "", "coord_tuple_transform_to"], [64, 2, 1, "", "jacobian"], [64, 2, 1, "", "jacobian_determinant"], [64, 2, 1, "", "jacobian_matrix"], [64, 2, 1, "", "point"], [64, 2, 1, "", "point_to_coords"], [64, 2, 1, "", "transform"], [64, 2, 1, "", "transformation"]], "sympy.diffgeom.Point": [[64, 2, 1, "", "coords"]], "sympy.discrete": [[65, 0, 0, "-", "convolutions"], [65, 0, 0, "-", "transforms"]], "sympy.discrete.convolutions": [[65, 4, 1, "", "convolution"], [65, 4, 1, "", "convolution_fft"], [65, 4, 1, "", "convolution_fwht"], [65, 4, 1, "", "convolution_ntt"], [65, 4, 1, "", "convolution_subset"], [65, 4, 1, "", "covering_product"], [65, 4, 1, "", "intersecting_product"]], "sympy.discrete.transforms": [[65, 4, 1, "", "fft"], [65, 4, 1, "", "fwht"], [65, 4, 1, "", "ifft"], [65, 4, 1, "", "ifwht"], [65, 4, 1, "", "intt"], [65, 4, 1, "", "inverse_mobius_transform"], [65, 4, 1, "", "mobius_transform"], [65, 4, 1, "", "ntt"]], "sympy.external.pythonmpq": [[202, 1, 1, "", "PythonMPQ"]], "sympy.functions.combinatorial.factorials": [[67, 1, 1, "", "FallingFactorial"], [67, 1, 1, "", "MultiFactorial"], [67, 1, 1, "", "RisingFactorial"], [67, 1, 1, "", "binomial"], [67, 1, 1, "", "factorial"], [67, 1, 1, "", "factorial2"], [67, 1, 1, "", "subfactorial"]], "sympy.functions.combinatorial.numbers": [[67, 1, 1, "", "andre"], [67, 1, 1, "", "bell"], [67, 1, 1, "", "bernoulli"], [67, 1, 1, "", "catalan"], [67, 1, 1, "", "euler"], [67, 1, 1, "", "fibonacci"], [67, 1, 1, "", "genocchi"], [67, 1, 1, "", "harmonic"], [67, 1, 1, "", "lucas"], [67, 4, 1, "", "nC"], [67, 4, 1, "", "nP"], [67, 4, 1, "", "nT"], [67, 1, 1, "", "partition"], [67, 4, 1, "", "stirling"], [67, 1, 1, "", "tribonacci"]], "sympy.functions.elementary.complexes": [[68, 1, 1, "", "Abs"], [68, 1, 1, "", "arg"], [68, 1, 1, "", "conjugate"], [68, 1, 1, "", "im"], [68, 1, 1, "", "periodic_argument"], [68, 1, 1, "", "polar_lift"], [68, 1, 1, "", "principal_branch"], [68, 1, 1, "", "re"], [68, 1, 1, "", "sign"]], "sympy.functions.elementary.complexes.Abs": [[68, 2, 1, "", "fdiff"]], "sympy.functions.elementary.complexes.im": [[68, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.complexes.re": [[68, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.exponential": [[68, 1, 1, "", "LambertW"], [68, 1, 1, "", "exp"], [68, 1, 1, "", "exp_polar"], [68, 1, 1, "", "log"]], "sympy.functions.elementary.exponential.LambertW": [[68, 2, 1, "", "fdiff"]], "sympy.functions.elementary.exponential.exp": [[68, 2, 1, "", "as_real_imag"], [68, 3, 1, "", "base"], [68, 2, 1, "", "fdiff"], [68, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.exponential.log": [[68, 2, 1, "", "as_base_exp"], [68, 2, 1, "", "as_real_imag"], [68, 2, 1, "", "fdiff"], [68, 2, 1, "", "inverse"], [68, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic": [[68, 1, 1, "", "HyperbolicFunction"], [68, 1, 1, "", "acosh"], [68, 1, 1, "", "acoth"], [68, 1, 1, "", "acsch"], [68, 1, 1, "", "asech"], [68, 1, 1, "", "asinh"], [68, 1, 1, "", "atanh"], [68, 1, 1, "", "cosh"], [68, 1, 1, "", "coth"], [68, 1, 1, "", "csch"], [68, 1, 1, "", "sech"], [68, 1, 1, "", "sinh"], [68, 1, 1, "", "tanh"]], "sympy.functions.elementary.hyperbolic.acosh": [[68, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acoth": [[68, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acsch": [[68, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asech": [[68, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asinh": [[68, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.atanh": [[68, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.coth": [[68, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.csch": [[68, 2, 1, "", "fdiff"], [68, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.sinh": [[68, 2, 1, "", "as_real_imag"], [68, 2, 1, "", "fdiff"], [68, 2, 1, "", "inverse"], [68, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.tanh": [[68, 2, 1, "", "inverse"]], "sympy.functions.elementary.integers": [[68, 1, 1, "", "RoundFunction"], [68, 1, 1, "", "ceiling"], [68, 1, 1, "", "floor"], [68, 1, 1, "", "frac"]], "sympy.functions.elementary.miscellaneous": [[68, 1, 1, "", "IdentityFunction"], [68, 1, 1, "", "Max"], [68, 1, 1, "", "Min"], [68, 4, 1, "", "cbrt"], [68, 4, 1, "", "real_root"], [68, 4, 1, "", "root"], [68, 4, 1, "", "sqrt"]], "sympy.functions.elementary.piecewise": [[68, 1, 1, "", "ExprCondPair"], [68, 1, 1, "", "Piecewise"], [68, 4, 1, "", "piecewise_exclusive"], [68, 4, 1, "", "piecewise_fold"]], "sympy.functions.elementary.piecewise.ExprCondPair": [[68, 3, 1, "", "cond"], [68, 3, 1, "", "expr"]], "sympy.functions.elementary.piecewise.Piecewise": [[68, 2, 1, "", "_eval_integral"], [68, 2, 1, "", "as_expr_set_pairs"], [68, 2, 1, "", "doit"], [68, 2, 1, "", "eval"], [68, 2, 1, "", "piecewise_integrate"]], "sympy.functions.elementary.trigonometric": [[68, 1, 1, "", "acos"], [68, 1, 1, "", "acot"], [68, 1, 1, "", "acsc"], [68, 1, 1, "", "asec"], [68, 1, 1, "", "asin"], [68, 1, 1, "", "atan"], [68, 1, 1, "", "atan2"], [68, 1, 1, "", "cos"], [68, 1, 1, "", "cot"], [68, 1, 1, "", "csc"], [68, 1, 1, "", "sec"], [68, 1, 1, "", "sin"], [68, 1, 1, "", "sinc"], [68, 1, 1, "", "tan"]], "sympy.functions.elementary.trigonometric.acos": [[68, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acot": [[68, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acsc": [[68, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asec": [[68, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asin": [[68, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.atan": [[68, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.cot": [[68, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.tan": [[68, 2, 1, "", "inverse"]], "sympy.functions.special": [[70, 0, 0, "-", "bessel"], [70, 0, 0, "-", "beta_functions"], [70, 0, 0, "-", "elliptic_integrals"], [70, 0, 0, "-", "error_functions"], [70, 0, 0, "-", "gamma_functions"], [70, 0, 0, "-", "mathieu_functions"], [70, 0, 0, "-", "polynomials"], [70, 0, 0, "-", "singularity_functions"], [70, 0, 0, "-", "zeta_functions"]], "sympy.functions.special.bessel": [[70, 1, 1, "", "AiryBase"], [70, 1, 1, "", "BesselBase"], [70, 1, 1, "", "airyai"], [70, 1, 1, "", "airyaiprime"], [70, 1, 1, "", "airybi"], [70, 1, 1, "", "airybiprime"], [70, 1, 1, "", "besseli"], [70, 1, 1, "", "besselj"], [70, 1, 1, "", "besselk"], [70, 1, 1, "", "bessely"], [70, 1, 1, "", "hankel1"], [70, 1, 1, "", "hankel2"], [70, 1, 1, "", "jn"], [70, 4, 1, "", "jn_zeros"], [70, 1, 1, "", "marcumq"], [70, 1, 1, "", "yn"]], "sympy.functions.special.bessel.BesselBase": [[70, 3, 1, "", "argument"], [70, 3, 1, "", "order"]], "sympy.functions.special.beta_functions": [[70, 1, 1, "", "beta"]], "sympy.functions.special.bsplines": [[70, 4, 1, "", "bspline_basis"], [70, 4, 1, "", "bspline_basis_set"], [70, 4, 1, "", "interpolating_spline"]], "sympy.functions.special.delta_functions": [[70, 1, 1, "", "DiracDelta"], [70, 1, 1, "", "Heaviside"]], "sympy.functions.special.delta_functions.DiracDelta": [[70, 2, 1, "", "eval"], [70, 2, 1, "", "fdiff"], [70, 2, 1, "", "is_simple"]], "sympy.functions.special.delta_functions.Heaviside": [[70, 2, 1, "", "eval"], [70, 2, 1, "", "fdiff"], [70, 3, 1, "", "pargs"]], "sympy.functions.special.elliptic_integrals": [[70, 1, 1, "", "elliptic_e"], [70, 1, 1, "", "elliptic_f"], [70, 1, 1, "", "elliptic_k"], [70, 1, 1, "", "elliptic_pi"]], "sympy.functions.special.error_functions": [[70, 1, 1, "", "Chi"], [70, 1, 1, "", "Ci"], [70, 4, 1, "", "E1"], [70, 1, 1, "", "Ei"], [70, 1, 1, "", "FresnelIntegral"], [70, 1, 1, "", "Li"], [70, 1, 1, "", "Shi"], [70, 1, 1, "", "Si"], [70, 1, 1, "", "erf"], [70, 1, 1, "", "erf2"], [70, 1, 1, "", "erf2inv"], [70, 1, 1, "", "erfc"], [70, 1, 1, "", "erfcinv"], [70, 1, 1, "", "erfi"], [70, 1, 1, "", "erfinv"], [70, 1, 1, "", "expint"], [70, 1, 1, "", "fresnelc"], [70, 1, 1, "", "fresnels"], [70, 1, 1, "", "li"]], "sympy.functions.special.error_functions.erf": [[70, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfc": [[70, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfcinv": [[70, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfinv": [[70, 2, 1, "", "inverse"]], "sympy.functions.special.gamma_functions": [[70, 1, 1, "", "digamma"], [70, 1, 1, "", "gamma"], [70, 1, 1, "", "loggamma"], [70, 1, 1, "", "lowergamma"], [70, 1, 1, "", "multigamma"], [70, 1, 1, "", "polygamma"], [70, 1, 1, "", "trigamma"], [70, 1, 1, "", "uppergamma"]], "sympy.functions.special.hyper": [[70, 1, 1, "", "appellf1"], [70, 1, 1, "", "hyper"], [70, 1, 1, "", "meijerg"]], "sympy.functions.special.hyper.hyper": [[70, 3, 1, "", "ap"], [70, 3, 1, "", "argument"], [70, 3, 1, "", "bq"], [70, 3, 1, "", "convergence_statement"], [70, 3, 1, "", "eta"], [70, 3, 1, "", "radius_of_convergence"]], "sympy.functions.special.hyper.meijerg": [[70, 3, 1, "", "an"], [70, 3, 1, "", "aother"], [70, 3, 1, "", "ap"], [70, 3, 1, "", "argument"], [70, 3, 1, "", "bm"], [70, 3, 1, "", "bother"], [70, 3, 1, "", "bq"], [70, 3, 1, "", "delta"], [70, 2, 1, "", "get_period"], [70, 2, 1, "", "integrand"], [70, 3, 1, "", "is_number"], [70, 3, 1, "", "nu"]], "sympy.functions.special.mathieu_functions": [[70, 1, 1, "", "MathieuBase"], [70, 1, 1, "", "mathieuc"], [70, 1, 1, "", "mathieucprime"], [70, 1, 1, "", "mathieus"], [70, 1, 1, "", "mathieusprime"]], "sympy.functions.special.polynomials": [[70, 1, 1, "", "assoc_laguerre"], [70, 1, 1, "", "assoc_legendre"], [70, 1, 1, "", "chebyshevt"], [70, 1, 1, "", "chebyshevt_root"], [70, 1, 1, "", "chebyshevu"], [70, 1, 1, "", "chebyshevu_root"], [70, 1, 1, "", "gegenbauer"], [70, 1, 1, "", "hermite"], [70, 1, 1, "", "hermite_prob"], [70, 1, 1, "", "jacobi"], [70, 4, 1, "", "jacobi_normalized"], [70, 1, 1, "", "laguerre"], [70, 1, 1, "", "legendre"]], "sympy.functions.special.singularity_functions": [[70, 1, 1, "", "SingularityFunction"]], "sympy.functions.special.singularity_functions.SingularityFunction": [[70, 2, 1, "", "eval"], [70, 2, 1, "", "fdiff"]], "sympy.functions.special.spherical_harmonics": [[70, 1, 1, "", "Ynm"], [70, 4, 1, "", "Ynm_c"], [70, 1, 1, "", "Znm"]], "sympy.functions.special.tensor_functions": [[70, 4, 1, "", "Eijk"], [70, 1, 1, "", "KroneckerDelta"], [70, 1, 1, "", "LeviCivita"], [70, 4, 1, "", "eval_levicivita"]], "sympy.functions.special.tensor_functions.KroneckerDelta": [[70, 2, 1, "", "eval"], [70, 3, 1, "", "indices_contain_equal_information"], [70, 3, 1, "", "is_above_fermi"], [70, 3, 1, "", "is_below_fermi"], [70, 3, 1, "", "is_only_above_fermi"], [70, 3, 1, "", "is_only_below_fermi"], [70, 3, 1, "", "killable_index"], [70, 3, 1, "", "preferred_index"]], "sympy.functions.special.zeta_functions": [[70, 1, 1, "", "dirichlet_eta"], [70, 1, 1, "", "lerchphi"], [70, 1, 1, "", "polylog"], [70, 1, 1, "", "stieltjes"], [70, 1, 1, "", "zeta"]], "sympy.geometry": [[71, 0, 0, "-", "curve"], [72, 0, 0, "-", "ellipse"], [73, 0, 0, "-", "entity"], [75, 0, 0, "-", "line"], [76, 0, 0, "-", "plane"], [77, 0, 0, "-", "point"], [78, 0, 0, "-", "polygon"], [79, 0, 0, "-", "util"]], "sympy.geometry.curve": [[71, 1, 1, "", "Curve"]], "sympy.geometry.curve.Curve": [[71, 3, 1, "", "ambient_dimension"], [71, 2, 1, "", "arbitrary_point"], [71, 3, 1, "", "free_symbols"], [71, 3, 1, "", "functions"], [71, 3, 1, "", "length"], [71, 3, 1, "", "limits"], [71, 3, 1, "", "parameter"], [71, 2, 1, "", "plot_interval"], [71, 2, 1, "", "rotate"], [71, 2, 1, "", "scale"], [71, 2, 1, "", "translate"]], "sympy.geometry.ellipse": [[72, 1, 1, "", "Circle"], [72, 1, 1, "", "Ellipse"]], "sympy.geometry.ellipse.Circle": [[72, 3, 1, "", "circumference"], [72, 2, 1, "", "equation"], [72, 2, 1, "", "intersection"], [72, 3, 1, "", "radius"], [72, 2, 1, "", "reflect"], [72, 2, 1, "", "scale"], [72, 3, 1, "", "vradius"]], "sympy.geometry.ellipse.Ellipse": [[72, 3, 1, "", "apoapsis"], [72, 2, 1, "", "arbitrary_point"], [72, 3, 1, "", "area"], [72, 2, 1, "", "auxiliary_circle"], [72, 3, 1, "", "bounds"], [72, 3, 1, "", "center"], [72, 3, 1, "", "circumference"], [72, 2, 1, "", "director_circle"], [72, 3, 1, "", "eccentricity"], [72, 2, 1, "", "encloses_point"], [72, 2, 1, "", "equation"], [72, 2, 1, "", "evolute"], [72, 3, 1, "", "foci"], [72, 3, 1, "", "focus_distance"], [72, 3, 1, "", "hradius"], [72, 2, 1, "", "intersection"], [72, 2, 1, "", "is_tangent"], [72, 3, 1, "", "major"], [72, 3, 1, "", "minor"], [72, 2, 1, "", "normal_lines"], [72, 3, 1, "", "periapsis"], [72, 2, 1, "", "plot_interval"], [72, 2, 1, "", "polar_second_moment_of_area"], [72, 2, 1, "", "random_point"], [72, 2, 1, "", "reflect"], [72, 2, 1, "", "rotate"], [72, 2, 1, "", "scale"], [72, 2, 1, "", "second_moment_of_area"], [72, 2, 1, "", "section_modulus"], [72, 3, 1, "", "semilatus_rectum"], [72, 2, 1, "", "tangent_lines"], [72, 3, 1, "", "vradius"]], "sympy.geometry.entity": [[73, 1, 1, "", "GeometryEntity"]], "sympy.geometry.entity.GeometryEntity": [[73, 3, 1, "", "ambient_dimension"], [73, 3, 1, "", "bounds"], [73, 2, 1, "", "encloses"], [73, 2, 1, "", "intersection"], [73, 2, 1, "", "is_similar"], [73, 2, 1, "", "parameter_value"], [73, 2, 1, "", "reflect"], [73, 2, 1, "", "rotate"], [73, 2, 1, "", "scale"], [73, 2, 1, "", "translate"]], "sympy.geometry.line": [[75, 1, 1, "", "Line"], [75, 1, 1, "", "Line2D"], [75, 1, 1, "", "Line3D"], [75, 1, 1, "", "LinearEntity"], [75, 1, 1, "", "LinearEntity2D"], [75, 1, 1, "", "LinearEntity3D"], [75, 1, 1, "", "Ray"], [75, 1, 1, "", "Ray2D"], [75, 1, 1, "", "Ray3D"], [75, 1, 1, "", "Segment"], [75, 1, 1, "", "Segment2D"], [75, 1, 1, "", "Segment3D"]], "sympy.geometry.line.Line": [[75, 2, 1, "", "contains"], [75, 2, 1, "", "distance"], [75, 2, 1, "", "equals"], [75, 2, 1, "", "plot_interval"]], "sympy.geometry.line.Line2D": [[75, 3, 1, "", "coefficients"], [75, 2, 1, "", "equation"]], "sympy.geometry.line.Line3D": [[75, 2, 1, "", "equation"]], "sympy.geometry.line.LinearEntity": [[75, 3, 1, "", "ambient_dimension"], [75, 2, 1, "", "angle_between"], [75, 2, 1, "", "arbitrary_point"], [75, 2, 1, "", "are_concurrent"], [75, 2, 1, "", "bisectors"], [75, 2, 1, "", "contains"], [75, 3, 1, "", "direction"], [75, 2, 1, "", "intersection"], [75, 2, 1, "", "is_parallel"], [75, 2, 1, "", "is_perpendicular"], [75, 2, 1, "", "is_similar"], [75, 3, 1, "", "length"], [75, 3, 1, "", "p1"], [75, 3, 1, "", "p2"], [75, 2, 1, "", "parallel_line"], [75, 2, 1, "", "perpendicular_line"], [75, 2, 1, "", "perpendicular_segment"], [75, 3, 1, "", "points"], [75, 2, 1, "", "projection"], [75, 2, 1, "", "random_point"], [75, 2, 1, "", "smallest_angle_between"]], "sympy.geometry.line.LinearEntity2D": [[75, 3, 1, "", "bounds"], [75, 2, 1, "", "perpendicular_line"], [75, 3, 1, "", "slope"]], "sympy.geometry.line.LinearEntity3D": [[75, 3, 1, "", "direction_cosine"], [75, 3, 1, "", "direction_ratio"]], "sympy.geometry.line.Ray": [[75, 2, 1, "", "contains"], [75, 2, 1, "", "distance"], [75, 2, 1, "", "equals"], [75, 2, 1, "", "plot_interval"], [75, 3, 1, "", "source"]], "sympy.geometry.line.Ray2D": [[75, 2, 1, "", "closing_angle"], [75, 3, 1, "", "xdirection"], [75, 3, 1, "", "ydirection"]], "sympy.geometry.line.Ray3D": [[75, 3, 1, "", "xdirection"], [75, 3, 1, "", "ydirection"], [75, 3, 1, "", "zdirection"]], "sympy.geometry.line.Segment": [[75, 2, 1, "", "contains"], [75, 2, 1, "", "distance"], [75, 2, 1, "", "equals"], [75, 3, 1, "", "length"], [75, 3, 1, "", "midpoint"], [75, 2, 1, "", "perpendicular_bisector"], [75, 2, 1, "", "plot_interval"]], "sympy.geometry.plane": [[76, 1, 1, "", "Plane"]], "sympy.geometry.plane.Plane": [[76, 2, 1, "", "angle_between"], [76, 2, 1, "", "arbitrary_point"], [76, 2, 1, "", "are_concurrent"], [76, 2, 1, "", "distance"], [76, 2, 1, "", "equals"], [76, 2, 1, "", "equation"], [76, 2, 1, "", "intersection"], [76, 2, 1, "", "is_coplanar"], [76, 2, 1, "", "is_parallel"], [76, 2, 1, "", "is_perpendicular"], [76, 3, 1, "", "normal_vector"], [76, 3, 1, "", "p1"], [76, 2, 1, "", "parallel_plane"], [76, 2, 1, "", "parameter_value"], [76, 2, 1, "", "perpendicular_line"], [76, 2, 1, "", "perpendicular_plane"], [76, 2, 1, "", "projection"], [76, 2, 1, "", "projection_line"], [76, 2, 1, "", "random_point"]], "sympy.geometry.point": [[77, 1, 1, "", "Point"], [77, 1, 1, "", "Point2D"], [77, 1, 1, "", "Point3D"]], "sympy.geometry.point.Point": [[77, 2, 1, "", "affine_rank"], [77, 3, 1, "", "ambient_dimension"], [77, 2, 1, "", "are_coplanar"], [77, 2, 1, "", "canberra_distance"], [77, 2, 1, "", "distance"], [77, 2, 1, "", "dot"], [77, 2, 1, "", "equals"], [77, 2, 1, "", "intersection"], [77, 2, 1, "", "is_collinear"], [77, 2, 1, "", "is_concyclic"], [77, 3, 1, "", "is_nonzero"], [77, 2, 1, "", "is_scalar_multiple"], [77, 3, 1, "", "is_zero"], [77, 3, 1, "", "length"], [77, 2, 1, "", "midpoint"], [77, 3, 1, "", "origin"], [77, 3, 1, "", "orthogonal_direction"], [77, 2, 1, "", "project"], [77, 2, 1, "", "taxicab_distance"], [77, 3, 1, "", "unit"]], "sympy.geometry.point.Point2D": [[77, 3, 1, "", "bounds"], [77, 3, 1, "", "coordinates"], [77, 2, 1, "", "rotate"], [77, 2, 1, "", "scale"], [77, 2, 1, "", "transform"], [77, 2, 1, "", "translate"], [77, 3, 1, "", "x"], [77, 3, 1, "", "y"]], "sympy.geometry.point.Point3D": [[77, 2, 1, "", "are_collinear"], [77, 3, 1, "", "coordinates"], [77, 2, 1, "", "direction_cosine"], [77, 2, 1, "", "direction_ratio"], [77, 2, 1, "", "intersection"], [77, 2, 1, "", "scale"], [77, 2, 1, "", "transform"], [77, 2, 1, "", "translate"], [77, 3, 1, "", "x"], [77, 3, 1, "", "y"], [77, 3, 1, "", "z"]], "sympy.geometry.polygon": [[78, 1, 1, "", "Polygon"], [78, 1, 1, "", "RegularPolygon"], [78, 1, 1, "", "Triangle"]], "sympy.geometry.polygon.Polygon": [[78, 3, 1, "", "angles"], [78, 2, 1, "", "arbitrary_point"], [78, 3, 1, "", "area"], [78, 2, 1, "", "bisectors"], [78, 3, 1, "", "bounds"], [78, 3, 1, "", "centroid"], [78, 2, 1, "", "cut_section"], [78, 2, 1, "", "distance"], [78, 2, 1, "", "encloses_point"], [78, 2, 1, "", "first_moment_of_area"], [78, 2, 1, "", "intersection"], [78, 2, 1, "", "is_convex"], [78, 3, 1, "", "perimeter"], [78, 2, 1, "", "plot_interval"], [78, 2, 1, "", "polar_second_moment_of_area"], [78, 2, 1, "", "second_moment_of_area"], [78, 2, 1, "", "section_modulus"], [78, 3, 1, "", "sides"], [78, 3, 1, "", "vertices"]], "sympy.geometry.polygon.RegularPolygon": [[78, 3, 1, "", "angles"], [78, 3, 1, "", "apothem"], [78, 3, 1, "", "area"], [78, 3, 1, "", "args"], [78, 3, 1, "", "center"], [78, 3, 1, "", "centroid"], [78, 3, 1, "", "circumcenter"], [78, 3, 1, "", "circumcircle"], [78, 3, 1, "", "circumradius"], [78, 2, 1, "", "encloses_point"], [78, 3, 1, "", "exterior_angle"], [78, 3, 1, "", "incircle"], [78, 3, 1, "", "inradius"], [78, 3, 1, "", "interior_angle"], [78, 3, 1, "", "length"], [78, 3, 1, "", "radius"], [78, 2, 1, "", "reflect"], [78, 2, 1, "", "rotate"], [78, 3, 1, "", "rotation"], [78, 2, 1, "", "scale"], [78, 2, 1, "", "spin"], [78, 3, 1, "", "vertices"]], "sympy.geometry.polygon.Triangle": [[78, 3, 1, "", "altitudes"], [78, 2, 1, "", "bisectors"], [78, 3, 1, "", "circumcenter"], [78, 3, 1, "", "circumcircle"], [78, 3, 1, "", "circumradius"], [78, 3, 1, "", "eulerline"], [78, 3, 1, "", "excenters"], [78, 3, 1, "", "exradii"], [78, 3, 1, "", "incenter"], [78, 3, 1, "", "incircle"], [78, 3, 1, "", "inradius"], [78, 2, 1, "", "is_equilateral"], [78, 2, 1, "", "is_isosceles"], [78, 2, 1, "", "is_right"], [78, 2, 1, "", "is_scalene"], [78, 2, 1, "", "is_similar"], [78, 3, 1, "", "medial"], [78, 3, 1, "", "medians"], [78, 3, 1, "", "nine_point_circle"], [78, 3, 1, "", "orthocenter"], [78, 3, 1, "", "vertices"]], "sympy.geometry.util": [[79, 4, 1, "", "are_similar"], [79, 4, 1, "", "centroid"], [79, 4, 1, "", "convex_hull"], [79, 4, 1, "", "idiff"], [79, 4, 1, "", "intersection"]], "sympy.holonomic.holonomic": [[85, 1, 1, "", "DifferentialOperator"], [85, 1, 1, "", "DifferentialOperatorAlgebra"], [85, 4, 1, "", "DifferentialOperators"], [85, 1, 1, "", "HolonomicFunction"], [83, 4, 1, "", "_convert_poly_rat_alg"], [83, 4, 1, "", "_create_table"], [81, 4, 1, "", "expr_to_holonomic"], [81, 4, 1, "", "from_hyper"], [81, 4, 1, "", "from_meijerg"]], "sympy.holonomic.holonomic.DifferentialOperator": [[85, 2, 1, "", "is_singular"]], "sympy.holonomic.holonomic.HolonomicFunction": [[84, 2, 1, "", "composition"], [84, 2, 1, "", "diff"], [84, 2, 1, "", "evalf"], [84, 2, 1, "", "integrate"], [84, 2, 1, "", "series"], [84, 2, 1, "", "to_expr"], [84, 2, 1, "", "to_hyper"], [84, 2, 1, "", "to_meijerg"], [84, 2, 1, "", "to_sequence"]], "sympy.integrals": [[89, 0, 0, "-", "intpoly"], [87, 0, 0, "-", "meijerint"], [87, 0, 0, "-", "meijerint_doc"], [89, 0, 0, "-", "transforms"]], "sympy.integrals.deltafunctions": [[89, 4, 1, "", "deltaintegrate"]], "sympy.integrals.heurisch": [[89, 4, 1, "", "components"], [89, 4, 1, "", "heurisch"]], "sympy.integrals.integrals": [[89, 1, 1, "", "Integral"], [89, 4, 1, "", "integrate"], [89, 4, 1, "", "line_integrate"]], "sympy.integrals.integrals.Integral": [[89, 2, 1, "", "as_sum"], [89, 2, 1, "", "doit"], [89, 3, 1, "", "free_symbols"], [89, 6, 1, "", "is_commutative"], [89, 2, 1, "", "principal_value"], [89, 2, 1, "", "transform"]], "sympy.integrals.intpoly": [[89, 4, 1, "", "polytope_integrate"]], "sympy.integrals.manualintegrate": [[89, 4, 1, "", "integral_steps"], [89, 4, 1, "", "manualintegrate"]], "sympy.integrals.meijerint": [[87, 7, 1, "", "_CoeffExpValueError"], [87, 4, 1, "", "_check_antecedents"], [87, 4, 1, "", "_check_antecedents_1"], [87, 4, 1, "", "_check_antecedents_inversion"], [87, 4, 1, "", "_condsimp"], [87, 4, 1, "", "_create_lookup_table"], [87, 4, 1, "", "_dummy"], [87, 4, 1, "", "_dummy_"], [87, 4, 1, "", "_eval_cond"], [87, 4, 1, "", "_exponents"], [87, 4, 1, "", "_find_splitting_points"], [87, 4, 1, "", "_flip_g"], [87, 4, 1, "", "_functions"], [87, 4, 1, "", "_get_coeff_exp"], [87, 4, 1, "", "_guess_expansion"], [87, 4, 1, "", "_inflate_fox_h"], [87, 4, 1, "", "_inflate_g"], [87, 4, 1, "", "_int0oo"], [87, 4, 1, "", "_int0oo_1"], [87, 4, 1, "", "_int_inversion"], [87, 4, 1, "", "_is_analytic"], [87, 4, 1, "", "_meijerint_definite_2"], [87, 4, 1, "", "_meijerint_definite_3"], [87, 4, 1, "", "_meijerint_definite_4"], [87, 4, 1, "", "_meijerint_indefinite_1"], [87, 4, 1, "", "_mul_args"], [87, 4, 1, "", "_mul_as_two_parts"], [87, 4, 1, "", "_my_principal_branch"], [87, 4, 1, "", "_mytype"], [87, 4, 1, "", "_rewrite1"], [87, 4, 1, "", "_rewrite2"], [87, 4, 1, "", "_rewrite_inversion"], [87, 4, 1, "", "_rewrite_saxena"], [87, 4, 1, "", "_rewrite_saxena_1"], [87, 4, 1, "", "_rewrite_single"], [87, 4, 1, "", "_split_mul"], [87, 4, 1, "", "meijerint_definite"], [87, 4, 1, "", "meijerint_indefinite"], [87, 4, 1, "", "meijerint_inversion"]], "sympy.integrals.quadrature": [[89, 4, 1, "", "gauss_chebyshev_t"], [89, 4, 1, "", "gauss_chebyshev_u"], [89, 4, 1, "", "gauss_gen_laguerre"], [89, 4, 1, "", "gauss_hermite"], [89, 4, 1, "", "gauss_jacobi"], [89, 4, 1, "", "gauss_laguerre"], [89, 4, 1, "", "gauss_legendre"], [89, 4, 1, "", "gauss_lobatto"]], "sympy.integrals.rationaltools": [[89, 4, 1, "", "ratint"], [89, 4, 1, "", "ratint_logpart"], [89, 4, 1, "", "ratint_ratpart"]], "sympy.integrals.risch": [[89, 1, 1, "", "NonElementaryIntegral"], [89, 4, 1, "", "risch_integrate"]], "sympy.integrals.singularityfunctions": [[89, 4, 1, "", "singularityintegrate"]], "sympy.integrals.transforms": [[89, 1, 1, "", "CosineTransform"], [89, 1, 1, "", "FourierTransform"], [89, 1, 1, "", "HankelTransform"], [89, 1, 1, "", "IntegralTransform"], [89, 7, 1, "", "IntegralTransformError"], [89, 1, 1, "", "InverseCosineTransform"], [89, 1, 1, "", "InverseFourierTransform"], [89, 1, 1, "", "InverseHankelTransform"], [89, 1, 1, "", "InverseLaplaceTransform"], [89, 1, 1, "", "InverseMellinTransform"], [89, 1, 1, "", "InverseSineTransform"], [89, 1, 1, "", "LaplaceTransform"], [89, 1, 1, "", "MellinTransform"], [89, 1, 1, "", "SineTransform"], [89, 4, 1, "", "_fourier_transform"], [89, 4, 1, "", "cosine_transform"], [89, 4, 1, "", "fourier_transform"], [89, 4, 1, "", "hankel_transform"], [89, 4, 1, "", "inverse_cosine_transform"], [89, 4, 1, "", "inverse_fourier_transform"], [89, 4, 1, "", "inverse_hankel_transform"], [89, 4, 1, "", "inverse_laplace_transform"], [89, 4, 1, "", "inverse_mellin_transform"], [89, 4, 1, "", "inverse_sine_transform"], [89, 4, 1, "", "laplace_transform"], [89, 4, 1, "", "mellin_transform"], [89, 4, 1, "", "sine_transform"]], "sympy.integrals.transforms.IntegralTransform": [[89, 2, 1, "", "doit"], [89, 3, 1, "", "function"], [89, 3, 1, "", "function_variable"], [89, 3, 1, "", "transform_variable"]], "sympy.integrals.transforms.InverseLaplaceTransform": [[89, 2, 1, "", "doit"]], "sympy.integrals.transforms.LaplaceTransform": [[89, 2, 1, "", "doit"]], "sympy.integrals.trigonometry": [[89, 4, 1, "", "trigintegrate"]], "sympy.interactive": [[90, 0, 0, "-", "printing"], [90, 0, 0, "-", "session"]], "sympy.interactive.printing": [[90, 4, 1, "", "init_printing"]], "sympy.interactive.session": [[90, 4, 1, "", "enable_automatic_int_sympification"], [90, 4, 1, "", "enable_automatic_symbols"], [90, 4, 1, "", "init_ipython_session"], [90, 4, 1, "", "init_python_session"], [90, 4, 1, "", "init_session"], [90, 4, 1, "", "int_to_Integer"]], "sympy.liealgebras.cartan_matrix": [[91, 4, 1, "", "CartanMatrix"]], "sympy.liealgebras.cartan_type": [[91, 1, 1, "", "CartanType_generator"], [91, 1, 1, "", "Standard_Cartan"]], "sympy.liealgebras.cartan_type.Standard_Cartan": [[91, 2, 1, "", "rank"], [91, 2, 1, "", "series"]], "sympy.liealgebras.dynkin_diagram": [[91, 4, 1, "", "DynkinDiagram"]], "sympy.liealgebras.root_system": [[91, 1, 1, "", "RootSystem"]], "sympy.liealgebras.root_system.RootSystem": [[91, 2, 1, "", "add_as_roots"], [91, 2, 1, "", "add_simple_roots"], [91, 2, 1, "", "all_roots"], [91, 2, 1, "", "cartan_matrix"], [91, 2, 1, "", "dynkin_diagram"], [91, 2, 1, "", "root_space"], [91, 2, 1, "", "simple_roots"]], "sympy.liealgebras.type_a": [[91, 1, 1, "", "TypeA"]], "sympy.liealgebras.type_a.TypeA": [[91, 2, 1, "", "basic_root"], [91, 2, 1, "", "basis"], [91, 2, 1, "", "cartan_matrix"], [91, 2, 1, "", "dimension"], [91, 2, 1, "", "highest_root"], [91, 2, 1, "", "lie_algebra"], [91, 2, 1, "", "positive_roots"], [91, 2, 1, "", "roots"], [91, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_b": [[91, 1, 1, "", "TypeB"]], "sympy.liealgebras.type_b.TypeB": [[91, 2, 1, "", "basic_root"], [91, 2, 1, "", "basis"], [91, 2, 1, "", "cartan_matrix"], [91, 2, 1, "", "dimension"], [91, 2, 1, "", "lie_algebra"], [91, 2, 1, "", "positive_roots"], [91, 2, 1, "", "roots"], [91, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_c": [[91, 1, 1, "", "TypeC"]], "sympy.liealgebras.type_c.TypeC": [[91, 2, 1, "", "basic_root"], [91, 2, 1, "", "basis"], [91, 2, 1, "", "cartan_matrix"], [91, 2, 1, "", "dimension"], [91, 2, 1, "", "lie_algebra"], [91, 2, 1, "", "positive_roots"], [91, 2, 1, "", "roots"], [91, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_d": [[91, 1, 1, "", "TypeD"]], "sympy.liealgebras.type_d.TypeD": [[91, 2, 1, "", "basic_root"], [91, 2, 1, "", "basis"], [91, 2, 1, "", "cartan_matrix"], [91, 2, 1, "", "dimension"], [91, 2, 1, "", "lie_algebra"], [91, 2, 1, "", "positive_roots"], [91, 2, 1, "", "roots"], [91, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_e": [[91, 1, 1, "", "TypeE"]], "sympy.liealgebras.type_e.TypeE": [[91, 2, 1, "", "basic_root"], [91, 2, 1, "", "basis"], [91, 2, 1, "", "cartan_matrix"], [91, 2, 1, "", "dimension"], [91, 2, 1, "", "positive_roots"], [91, 2, 1, "", "roots"], [91, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_f": [[91, 1, 1, "", "TypeF"]], "sympy.liealgebras.type_f.TypeF": [[91, 2, 1, "", "basic_root"], [91, 2, 1, "", "basis"], [91, 2, 1, "", "cartan_matrix"], [91, 2, 1, "", "dimension"], [91, 2, 1, "", "positive_roots"], [91, 2, 1, "", "roots"], [91, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_g": [[91, 1, 1, "", "TypeG"]], "sympy.liealgebras.type_g.TypeG": [[91, 2, 1, "", "basis"], [91, 2, 1, "", "cartan_matrix"], [91, 2, 1, "", "dimension"], [91, 2, 1, "", "positive_roots"], [91, 2, 1, "", "roots"], [91, 2, 1, "", "simple_root"]], "sympy.liealgebras.weyl_group": [[91, 1, 1, "", "WeylGroup"]], "sympy.liealgebras.weyl_group.WeylGroup": [[91, 2, 1, "", "coxeter_diagram"], [91, 2, 1, "", "delete_doubles"], [91, 2, 1, "", "element_order"], [91, 2, 1, "", "generators"], [91, 2, 1, "", "group_name"], [91, 2, 1, "", "group_order"], [91, 2, 1, "", "matrix_form"]], "sympy.logic": [[92, 0, 0, "-", "inference"]], "sympy.logic.boolalg": [[92, 4, 1, "", "ANFform"], [92, 1, 1, "", "And"], [92, 1, 1, "", "Boolean"], [92, 1, 1, "", "BooleanFalse"], [92, 1, 1, "", "BooleanTrue"], [92, 1, 1, "", "Equivalent"], [92, 1, 1, "", "Exclusive"], [92, 1, 1, "", "ITE"], [92, 1, 1, "", "Implies"], [92, 1, 1, "", "Nand"], [92, 1, 1, "", "Nor"], [92, 1, 1, "", "Not"], [92, 1, 1, "", "Or"], [92, 4, 1, "", "POSform"], [92, 4, 1, "", "SOPform"], [92, 1, 1, "", "Xnor"], [92, 1, 1, "", "Xor"], [92, 4, 1, "", "anf_coeffs"], [92, 4, 1, "", "bool_map"], [92, 4, 1, "", "bool_maxterm"], [92, 4, 1, "", "bool_minterm"], [92, 4, 1, "", "bool_monomial"], [92, 4, 1, "", "distribute_and_over_or"], [92, 4, 1, "", "distribute_or_over_and"], [92, 4, 1, "", "distribute_xor_over_and"], [92, 4, 1, "", "eliminate_implications"], [92, 4, 1, "", "gateinputcount"], [92, 4, 1, "", "integer_to_term"], [92, 4, 1, "", "is_anf"], [92, 4, 1, "", "is_cnf"], [92, 4, 1, "", "is_dnf"], [92, 4, 1, "", "is_nnf"], [92, 4, 1, "", "simplify_logic"], [92, 4, 1, "", "term_to_integer"], [92, 4, 1, "", "to_anf"], [92, 4, 1, "", "to_cnf"], [92, 4, 1, "", "to_dnf"], [92, 4, 1, "", "to_int_repr"], [92, 4, 1, "", "to_nnf"], [92, 4, 1, "", "truth_table"]], "sympy.logic.boolalg.Boolean": [[92, 2, 1, "", "as_set"], [92, 2, 1, "", "equals"]], "sympy.logic.boolalg.BooleanFalse": [[92, 2, 1, "", "as_set"]], "sympy.logic.boolalg.BooleanTrue": [[92, 2, 1, "", "as_set"]], "sympy.logic.inference": [[92, 4, 1, "", "satisfiable"]], "sympy.matrices": [[93, 0, 0, "-", "common"], [95, 0, 0, "-", "expressions"], [96, 0, 0, "-", "immutable"], [98, 0, 0, "-", "matrices"], [100, 0, 0, "-", "sparse"], [101, 0, 0, "-", "sparsetools"]], "sympy.matrices.common": [[93, 1, 1, "", "MatrixCommon"], [93, 1, 1, "", "MatrixKind"]], "sympy.matrices.common.MatrixCommon": [[93, 3, 1, "", "C"], [93, 3, 1, "", "H"], [93, 3, 1, "", "T"], [93, 2, 1, "", "__abs__"], [93, 2, 1, "", "__add__"], [93, 2, 1, "", "__getitem__"], [93, 2, 1, "", "__len__"], [93, 2, 1, "", "__mul__"], [93, 2, 1, "", "__pow__"], [93, 5, 1, "", "__weakref__"], [93, 2, 1, "", "adjoint"], [93, 2, 1, "", "applyfunc"], [93, 2, 1, "", "as_real_imag"], [93, 2, 1, "", "atoms"], [93, 2, 1, "", "col"], [93, 2, 1, "", "col_del"], [93, 2, 1, "", "col_insert"], [93, 2, 1, "", "col_join"], [93, 2, 1, "", "companion"], [93, 2, 1, "", "conjugate"], [93, 2, 1, "", "diag"], [93, 2, 1, "", "diagonal"], [93, 2, 1, "", "evalf"], [93, 2, 1, "", "expand"], [93, 2, 1, "", "extract"], [93, 2, 1, "", "eye"], [93, 3, 1, "", "free_symbols"], [93, 2, 1, "", "get_diag_blocks"], [93, 2, 1, "", "has"], [93, 2, 1, "", "hstack"], [93, 2, 1, "", "is_anti_symmetric"], [93, 2, 1, "", "is_diagonal"], [93, 3, 1, "", "is_hermitian"], [93, 3, 1, "", "is_lower"], [93, 3, 1, "", "is_lower_hessenberg"], [93, 3, 1, "", "is_square"], [93, 3, 1, "", "is_strongly_diagonally_dominant"], [93, 2, 1, "", "is_symbolic"], [93, 2, 1, "", "is_symmetric"], [93, 3, 1, "", "is_upper"], [93, 3, 1, "", "is_upper_hessenberg"], [93, 3, 1, "", "is_weakly_diagonally_dominant"], [93, 3, 1, "", "is_zero_matrix"], [93, 2, 1, "", "jordan_block"], [93, 2, 1, "", "lower_triangular"], [93, 2, 1, "", "multiply"], [93, 2, 1, "", "multiply_elementwise"], [93, 2, 1, "", "n"], [93, 2, 1, "", "ones"], [93, 2, 1, "", "permute"], [93, 2, 1, "", "permute_cols"], [93, 2, 1, "", "permute_rows"], [93, 2, 1, "", "pow"], [93, 2, 1, "", "refine"], [93, 2, 1, "", "replace"], [93, 2, 1, "", "reshape"], [93, 2, 1, "", "rmultiply"], [93, 2, 1, "", "rot90"], [93, 2, 1, "", "row"], [93, 2, 1, "", "row_del"], [93, 2, 1, "", "row_insert"], [93, 2, 1, "", "row_join"], [93, 3, 1, "", "shape"], [93, 2, 1, "", "simplify"], [93, 2, 1, "", "subs"], [93, 2, 1, "", "todod"], [93, 2, 1, "", "todok"], [93, 2, 1, "", "tolist"], [93, 2, 1, "", "trace"], [93, 2, 1, "", "transpose"], [93, 2, 1, "", "upper_triangular"], [93, 2, 1, "", "values"], [93, 2, 1, "", "vec"], [93, 2, 1, "", "vech"], [93, 2, 1, "", "vstack"], [93, 2, 1, "", "wilkinson"], [93, 2, 1, "", "xreplace"], [93, 2, 1, "", "zeros"]], "sympy.matrices.dense": [[94, 1, 1, "", "DenseMatrix"], [98, 4, 1, "", "GramSchmidt"], [94, 5, 1, "", "Matrix"], [94, 1, 1, "", "MutableDenseMatrix"], [98, 4, 1, "", "casoratian"], [98, 4, 1, "", "diag"], [98, 4, 1, "", "eye"], [98, 4, 1, "", "hessian"], [98, 4, 1, "", "jordan_cell"], [98, 4, 1, "", "list2numpy"], [98, 4, 1, "", "matrix2numpy"], [98, 4, 1, "", "matrix_multiply_elementwise"], [98, 4, 1, "", "ones"], [98, 4, 1, "", "randMatrix"], [98, 4, 1, "", "rot_axis1"], [98, 4, 1, "", "rot_axis2"], [98, 4, 1, "", "rot_axis3"], [98, 4, 1, "", "rot_ccw_axis1"], [98, 4, 1, "", "rot_ccw_axis2"], [98, 4, 1, "", "rot_ccw_axis3"], [98, 4, 1, "", "rot_givens"], [98, 4, 1, "", "symarray"], [98, 4, 1, "", "wronskian"], [98, 4, 1, "", "zeros"]], "sympy.matrices.dense.DenseMatrix": [[94, 2, 1, "", "LDLdecomposition"], [94, 2, 1, "", "as_immutable"], [94, 2, 1, "", "as_mutable"], [94, 2, 1, "", "cholesky"], [94, 2, 1, "", "lower_triangular_solve"], [94, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.dense.MutableDenseMatrix": [[94, 2, 1, "", "simplify"]], "sympy.matrices.expressions": [[95, 1, 1, "", "CompanionMatrix"], [95, 1, 1, "", "FunctionMatrix"], [95, 1, 1, "", "HadamardPower"], [95, 1, 1, "", "HadamardProduct"], [95, 1, 1, "", "Identity"], [95, 1, 1, "", "Inverse"], [95, 1, 1, "", "MatAdd"], [95, 1, 1, "", "MatMul"], [95, 1, 1, "", "MatPow"], [95, 1, 1, "", "MatrixExpr"], [95, 1, 1, "", "MatrixPermute"], [95, 1, 1, "", "MatrixSet"], [95, 1, 1, "", "MatrixSymbol"], [95, 1, 1, "", "PermutationMatrix"], [95, 1, 1, "", "Trace"], [95, 1, 1, "", "Transpose"], [95, 1, 1, "", "ZeroMatrix"], [95, 0, 0, "-", "blockmatrix"], [95, 4, 1, "", "hadamard_product"]], "sympy.matrices.expressions.MatrixExpr": [[95, 3, 1, "", "T"], [95, 2, 1, "", "as_coeff_Mul"], [95, 2, 1, "", "as_explicit"], [95, 2, 1, "", "as_mutable"], [95, 2, 1, "", "equals"], [95, 2, 1, "", "from_index_summation"]], "sympy.matrices.expressions.blockmatrix": [[95, 1, 1, "", "BlockDiagMatrix"], [95, 1, 1, "", "BlockMatrix"], [95, 4, 1, "", "block_collapse"]], "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix": [[95, 2, 1, "", "get_diag_blocks"]], "sympy.matrices.expressions.blockmatrix.BlockMatrix": [[95, 2, 1, "", "LDUdecomposition"], [95, 2, 1, "", "LUdecomposition"], [95, 2, 1, "", "UDLdecomposition"], [95, 2, 1, "", "schur"], [95, 2, 1, "", "transpose"]], "sympy.matrices.immutable": [[96, 1, 1, "", "ImmutableDenseMatrix"], [96, 5, 1, "", "ImmutableMatrix"], [100, 1, 1, "", "ImmutableSparseMatrix"]], "sympy.matrices.matrices": [[98, 1, 1, "", "MatrixBase"], [98, 1, 1, "", "MatrixCalculus"], [98, 1, 1, "", "MatrixDeterminant"], [98, 1, 1, "", "MatrixEigen"], [98, 1, 1, "", "MatrixError"], [98, 1, 1, "", "MatrixReductions"], [98, 1, 1, "", "MatrixSubspaces"], [98, 1, 1, "", "NonSquareMatrixError"], [98, 1, 1, "", "ShapeError"], [98, 4, 1, "", "a2idx"]], "sympy.matrices.matrices.MatrixBase": [[98, 3, 1, "", "D"], [98, 2, 1, "", "LDLdecomposition"], [98, 2, 1, "", "LDLsolve"], [98, 2, 1, "", "LUdecomposition"], [98, 2, 1, "", "LUdecompositionFF"], [98, 2, 1, "", "LUdecomposition_Simple"], [98, 2, 1, "", "LUsolve"], [98, 2, 1, "", "QRdecomposition"], [98, 2, 1, "", "QRsolve"], [98, 2, 1, "", "add"], [98, 2, 1, "", "analytic_func"], [98, 2, 1, "", "cholesky"], [98, 2, 1, "", "cholesky_solve"], [98, 2, 1, "", "condition_number"], [98, 2, 1, "", "connected_components"], [98, 2, 1, "", "connected_components_decomposition"], [98, 2, 1, "", "copy"], [98, 2, 1, "", "cross"], [98, 2, 1, "", "diagonal_solve"], [98, 2, 1, "", "dot"], [98, 2, 1, "", "dual"], [98, 2, 1, "", "exp"], [98, 2, 1, "", "gauss_jordan_solve"], [98, 2, 1, "", "inv"], [98, 2, 1, "", "inv_mod"], [98, 2, 1, "", "inverse_ADJ"], [98, 2, 1, "", "inverse_BLOCK"], [98, 2, 1, "", "inverse_CH"], [98, 2, 1, "", "inverse_GE"], [98, 2, 1, "", "inverse_LDL"], [98, 2, 1, "", "inverse_LU"], [98, 2, 1, "", "inverse_QR"], [98, 2, 1, "", "irregular"], [98, 2, 1, "", "is_nilpotent"], [98, 2, 1, "", "key2bounds"], [98, 2, 1, "", "key2ij"], [98, 2, 1, "", "log"], [98, 2, 1, "", "lower_triangular_solve"], [98, 2, 1, "", "norm"], [98, 2, 1, "", "normalized"], [98, 2, 1, "", "pinv"], [98, 2, 1, "", "pinv_solve"], [98, 2, 1, "", "print_nonzero"], [98, 2, 1, "", "project"], [98, 2, 1, "", "rank_decomposition"], [98, 2, 1, "", "singular_value_decomposition"], [98, 2, 1, "", "solve"], [98, 2, 1, "", "solve_least_squares"], [98, 2, 1, "", "strongly_connected_components"], [98, 2, 1, "", "strongly_connected_components_decomposition"], [98, 2, 1, "", "table"], [98, 2, 1, "", "upper_hessenberg_decomposition"], [98, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.matrices.MatrixCalculus": [[98, 2, 1, "", "diff"], [98, 2, 1, "", "integrate"], [98, 2, 1, "", "jacobian"], [98, 2, 1, "", "limit"]], "sympy.matrices.matrices.MatrixDeterminant": [[98, 2, 1, "", "adjugate"], [98, 2, 1, "", "charpoly"], [98, 2, 1, "", "cofactor"], [98, 2, 1, "", "cofactor_matrix"], [98, 2, 1, "", "det"], [98, 2, 1, "", "minor"], [98, 2, 1, "", "minor_submatrix"], [98, 2, 1, "", "per"]], "sympy.matrices.matrices.MatrixEigen": [[98, 2, 1, "", "bidiagonal_decomposition"], [98, 2, 1, "", "bidiagonalize"], [98, 2, 1, "", "diagonalize"], [98, 2, 1, "", "eigenvals"], [98, 2, 1, "", "eigenvects"], [98, 2, 1, "", "is_diagonalizable"], [98, 3, 1, "", "is_indefinite"], [98, 3, 1, "", "is_negative_definite"], [98, 3, 1, "", "is_negative_semidefinite"], [98, 3, 1, "", "is_positive_definite"], [98, 3, 1, "", "is_positive_semidefinite"], [98, 2, 1, "", "jordan_form"], [98, 2, 1, "", "left_eigenvects"], [98, 2, 1, "", "singular_values"]], "sympy.matrices.matrices.MatrixReductions": [[98, 2, 1, "", "echelon_form"], [98, 2, 1, "", "elementary_col_op"], [98, 2, 1, "", "elementary_row_op"], [98, 3, 1, "", "is_echelon"], [98, 2, 1, "", "rank"], [98, 2, 1, "", "rref"]], "sympy.matrices.matrices.MatrixSubspaces": [[98, 2, 1, "", "columnspace"], [98, 2, 1, "", "nullspace"], [98, 2, 1, "", "orthogonalize"], [98, 2, 1, "", "rowspace"]], "sympy.matrices.normalforms": [[99, 4, 1, "", "hermite_normal_form"], [99, 4, 1, "", "smith_normal_form"]], "sympy.matrices.sparse": [[100, 1, 1, "", "MutableSparseMatrix"], [100, 5, 1, "", "SparseMatrix"]], "sympy.matrices.sparsetools": [[101, 2, 1, "", "_csrtodok"], [101, 2, 1, "", "_doktocsr"], [101, 2, 1, "", "banded"]], "sympy.ntheory": [[102, 0, 0, "-", "bbp_pi"], [102, 0, 0, "-", "continued_fraction"], [102, 0, 0, "-", "digits"], [102, 0, 0, "-", "ecm"], [102, 0, 0, "-", "egyptian_fraction"], [102, 0, 0, "-", "factor_"], [102, 0, 0, "-", "generate"], [102, 1, 1, "", "mobius"], [102, 0, 0, "-", "modular"], [102, 0, 0, "-", "multinomial"], [102, 0, 0, "-", "partitions_"], [102, 0, 0, "-", "primetest"], [102, 0, 0, "-", "qs"], [102, 0, 0, "-", "residue_ntheory"]], "sympy.ntheory.bbp_pi": [[102, 4, 1, "", "pi_hex_digits"]], "sympy.ntheory.continued_fraction": [[102, 4, 1, "", "continued_fraction"], [102, 4, 1, "", "continued_fraction_convergents"], [102, 4, 1, "", "continued_fraction_iterator"], [102, 4, 1, "", "continued_fraction_periodic"], [102, 4, 1, "", "continued_fraction_reduce"]], "sympy.ntheory.digits": [[102, 4, 1, "", "count_digits"], [102, 4, 1, "", "digits"], [102, 4, 1, "", "is_palindromic"]], "sympy.ntheory.ecm": [[102, 4, 1, "", "ecm"]], "sympy.ntheory.egyptian_fraction": [[102, 4, 1, "", "egyptian_fraction"]], "sympy.ntheory.factor_": [[102, 4, 1, "", "abundance"], [102, 4, 1, "", "antidivisor_count"], [102, 4, 1, "", "antidivisors"], [102, 4, 1, "", "core"], [102, 4, 1, "", "digits"], [102, 4, 1, "", "divisor_count"], [102, 1, 1, "", "divisor_sigma"], [102, 4, 1, "", "divisors"], [102, 4, 1, "", "factorint"], [102, 4, 1, "", "factorrat"], [102, 4, 1, "", "is_abundant"], [102, 4, 1, "", "is_amicable"], [102, 4, 1, "", "is_deficient"], [102, 4, 1, "", "is_mersenne_prime"], [102, 4, 1, "", "is_perfect"], [102, 4, 1, "", "mersenne_prime_exponent"], [102, 4, 1, "", "multiplicity"], [102, 4, 1, "", "perfect_power"], [102, 4, 1, "", "pollard_pm1"], [102, 4, 1, "", "pollard_rho"], [102, 4, 1, "", "primefactors"], [102, 1, 1, "", "primenu"], [102, 1, 1, "", "primeomega"], [102, 4, 1, "", "proper_divisor_count"], [102, 4, 1, "", "proper_divisors"], [102, 1, 1, "", "reduced_totient"], [102, 4, 1, "", "smoothness"], [102, 4, 1, "", "smoothness_p"], [102, 1, 1, "", "totient"], [102, 4, 1, "", "trailing"], [102, 4, 1, "", "udivisor_count"], [102, 1, 1, "", "udivisor_sigma"], [102, 4, 1, "", "udivisors"]], "sympy.ntheory.generate": [[102, 1, 1, "", "Sieve"], [102, 4, 1, "", "composite"], [102, 4, 1, "", "compositepi"], [102, 4, 1, "", "cycle_length"], [102, 4, 1, "", "nextprime"], [102, 4, 1, "", "prevprime"], [102, 4, 1, "", "prime"], [102, 4, 1, "", "primepi"], [102, 4, 1, "", "primerange"], [102, 4, 1, "", "primorial"], [102, 4, 1, "", "randprime"]], "sympy.ntheory.generate.Sieve": [[102, 2, 1, "", "extend"], [102, 2, 1, "", "extend_to_no"], [102, 2, 1, "", "mobiusrange"], [102, 2, 1, "", "primerange"], [102, 2, 1, "", "search"], [102, 2, 1, "", "totientrange"]], "sympy.ntheory.modular": [[102, 4, 1, "", "crt"], [102, 4, 1, "", "crt1"], [102, 4, 1, "", "crt2"], [102, 4, 1, "", "solve_congruence"], [102, 4, 1, "", "symmetric_residue"]], "sympy.ntheory.multinomial": [[102, 4, 1, "", "binomial_coefficients"], [102, 4, 1, "", "binomial_coefficients_list"], [102, 4, 1, "", "multinomial_coefficients"], [102, 4, 1, "", "multinomial_coefficients_iterator"]], "sympy.ntheory.partitions_": [[102, 4, 1, "", "npartitions"]], "sympy.ntheory.primetest": [[102, 4, 1, "", "is_euler_pseudoprime"], [102, 4, 1, "", "is_extra_strong_lucas_prp"], [102, 4, 1, "", "is_gaussian_prime"], [102, 4, 1, "", "is_lucas_prp"], [102, 4, 1, "", "is_square"], [102, 4, 1, "", "is_strong_lucas_prp"], [102, 4, 1, "", "isprime"], [102, 4, 1, "", "mr"]], "sympy.ntheory.qs": [[102, 4, 1, "", "qs"]], "sympy.ntheory.residue_ntheory": [[102, 4, 1, "", "discrete_log"], [102, 4, 1, "", "is_nthpow_residue"], [102, 4, 1, "", "is_primitive_root"], [102, 4, 1, "", "is_quad_residue"], [102, 4, 1, "", "jacobi_symbol"], [102, 4, 1, "", "legendre_symbol"], [102, 4, 1, "", "n_order"], [102, 4, 1, "", "nthroot_mod"], [102, 4, 1, "", "primitive_root"], [102, 4, 1, "", "quadratic_residues"], [102, 4, 1, "", "sqrt_mod"], [102, 4, 1, "", "sqrt_mod_iter"]], "sympy.parsing": [[104, 0, 0, "-", "sym_expr"]], "sympy.parsing.latex": [[104, 1, 1, "", "LaTeXParsingError"], [104, 4, 1, "", "parse_latex"]], "sympy.parsing.mathematica": [[104, 4, 1, "", "parse_mathematica"]], "sympy.parsing.maxima": [[104, 4, 1, "", "parse_maxima"]], "sympy.parsing.sym_expr": [[104, 1, 1, "", "SymPyExpression"]], "sympy.parsing.sym_expr.SymPyExpression": [[104, 2, 1, "", "convert_to_c"], [104, 2, 1, "", "convert_to_expr"], [104, 2, 1, "", "convert_to_fortran"], [104, 2, 1, "", "convert_to_python"], [104, 2, 1, "", "return_expr"]], "sympy.parsing.sympy_parser": [[104, 4, 1, "", "auto_number"], [104, 4, 1, "", "auto_symbol"], [104, 4, 1, "", "convert_xor"], [104, 4, 1, "", "eval_expr"], [104, 4, 1, "", "factorial_notation"], [104, 4, 1, "", "function_exponentiation"], [104, 4, 1, "", "implicit_application"], [104, 4, 1, "", "implicit_multiplication"], [104, 4, 1, "", "implicit_multiplication_application"], [104, 4, 1, "", "lambda_notation"], [104, 4, 1, "", "parse_expr"], [104, 4, 1, "", "rationalize"], [104, 4, 1, "", "repeated_decimals"], [104, 4, 1, "", "split_symbols"], [104, 4, 1, "", "split_symbols_custom"], [104, 6, 1, "", "standard_transformations"], [104, 4, 1, "", "stringify_expr"]], "sympy.physics": [[111, 0, 0, "-", "control"], [114, 0, 0, "-", "hydrogen"], [115, 0, 0, "-", "matrices"], [136, 0, 0, "-", "mechanics"], [151, 0, 0, "-", "paulialgebra"], [152, 0, 0, "-", "qho_1d"], [176, 0, 0, "-", "secondquant"], [177, 0, 0, "-", "sho"], [193, 0, 0, "-", "vector"], [196, 0, 0, "-", "wigner"]], "sympy.physics.continuum_mechanics": [[105, 0, 0, "-", "beam"], [108, 0, 0, "-", "truss"]], "sympy.physics.continuum_mechanics.beam": [[105, 1, 1, "", "Beam"], [105, 1, 1, "", "Beam3D"]], "sympy.physics.continuum_mechanics.beam.Beam": [[105, 3, 1, "", "applied_loads"], [105, 2, 1, "", "apply_load"], [105, 2, 1, "", "apply_support"], [105, 3, 1, "", "area"], [105, 2, 1, "", "bending_moment"], [105, 3, 1, "", "boundary_conditions"], [105, 3, 1, "", "cross_section"], [105, 2, 1, "", "deflection"], [105, 2, 1, "", "draw"], [105, 3, 1, "", "elastic_modulus"], [105, 3, 1, "", "ild_moment"], [105, 3, 1, "", "ild_reactions"], [105, 3, 1, "", "ild_shear"], [105, 2, 1, "", "join"], [105, 3, 1, "", "length"], [105, 3, 1, "", "load"], [105, 2, 1, "", "max_bmoment"], [105, 2, 1, "", "max_deflection"], [105, 2, 1, "", "max_shear_force"], [105, 2, 1, "", "plot_bending_moment"], [105, 2, 1, "", "plot_deflection"], [105, 2, 1, "", "plot_ild_moment"], [105, 2, 1, "", "plot_ild_reactions"], [105, 2, 1, "", "plot_ild_shear"], [105, 2, 1, "", "plot_loading_results"], [105, 2, 1, "", "plot_shear_force"], [105, 2, 1, "", "plot_shear_stress"], [105, 2, 1, "", "plot_slope"], [105, 2, 1, "", "point_cflexure"], [105, 3, 1, "", "reaction_loads"], [105, 2, 1, "", "remove_load"], [105, 3, 1, "", "second_moment"], [105, 2, 1, "", "shear_force"], [105, 2, 1, "", "shear_stress"], [105, 2, 1, "", "slope"], [105, 2, 1, "", "solve_for_ild_moment"], [105, 2, 1, "", "solve_for_ild_reactions"], [105, 2, 1, "", "solve_for_ild_shear"], [105, 2, 1, "", "solve_for_reaction_loads"], [105, 3, 1, "", "variable"]], "sympy.physics.continuum_mechanics.beam.Beam3D": [[105, 2, 1, "", "angular_deflection"], [105, 2, 1, "", "apply_load"], [105, 2, 1, "", "apply_moment_load"], [105, 3, 1, "", "area"], [105, 2, 1, "", "axial_force"], [105, 2, 1, "", "axial_stress"], [105, 2, 1, "", "bending_moment"], [105, 3, 1, "", "boundary_conditions"], [105, 2, 1, "", "deflection"], [105, 3, 1, "", "load_vector"], [105, 2, 1, "", "max_bending_moment"], [105, 2, 1, "", "max_bmoment"], [105, 2, 1, "", "max_deflection"], [105, 2, 1, "", "max_shear_force"], [105, 3, 1, "", "moment_load_vector"], [105, 2, 1, "", "plot_bending_moment"], [105, 2, 1, "", "plot_deflection"], [105, 2, 1, "", "plot_loading_results"], [105, 2, 1, "", "plot_shear_force"], [105, 2, 1, "", "plot_shear_stress"], [105, 2, 1, "", "plot_slope"], [105, 2, 1, "", "polar_moment"], [105, 3, 1, "", "second_moment"], [105, 2, 1, "", "shear_force"], [105, 3, 1, "", "shear_modulus"], [105, 2, 1, "", "shear_stress"], [105, 2, 1, "", "slope"], [105, 2, 1, "", "solve_for_reaction_loads"], [105, 2, 1, "", "solve_for_torsion"], [105, 2, 1, "", "torsional_moment"]], "sympy.physics.continuum_mechanics.truss": [[108, 1, 1, "", "Truss"]], "sympy.physics.continuum_mechanics.truss.Truss": [[108, 2, 1, "", "add_member"], [108, 2, 1, "", "add_node"], [108, 2, 1, "", "apply_load"], [108, 2, 1, "", "apply_support"], [108, 2, 1, "", "change_member_label"], [108, 2, 1, "", "change_node_label"], [108, 3, 1, "", "internal_forces"], [108, 3, 1, "", "loads"], [108, 3, 1, "", "member_labels"], [108, 3, 1, "", "members"], [108, 3, 1, "", "node_labels"], [108, 3, 1, "", "node_positions"], [108, 3, 1, "", "nodes"], [108, 3, 1, "", "reaction_loads"], [108, 2, 1, "", "remove_load"], [108, 2, 1, "", "remove_member"], [108, 2, 1, "", "remove_node"], [108, 2, 1, "", "remove_support"], [108, 2, 1, "", "solve"], [108, 3, 1, "", "supports"]], "sympy.physics.control": [[112, 0, 0, "-", "lti"]], "sympy.physics.control.control_plots": [[110, 2, 1, "", "bode_magnitude_numerical_data"], [110, 2, 1, "", "bode_magnitude_plot"], [110, 2, 1, "", "bode_phase_numerical_data"], [110, 2, 1, "", "bode_phase_plot"], [110, 2, 1, "", "bode_plot"], [110, 2, 1, "", "impulse_response_numerical_data"], [110, 2, 1, "", "impulse_response_plot"], [110, 2, 1, "", "pole_zero_numerical_data"], [110, 2, 1, "", "pole_zero_plot"], [110, 2, 1, "", "ramp_response_numerical_data"], [110, 2, 1, "", "ramp_response_plot"], [110, 2, 1, "", "step_response_numerical_data"], [110, 2, 1, "", "step_response_plot"]], "sympy.physics.control.lti": [[112, 1, 1, "", "Feedback"], [112, 1, 1, "", "MIMOFeedback"], [112, 1, 1, "", "MIMOParallel"], [112, 1, 1, "", "MIMOSeries"], [112, 1, 1, "", "Parallel"], [112, 1, 1, "", "Series"], [112, 1, 1, "", "TransferFunction"], [112, 1, 1, "", "TransferFunctionMatrix"], [112, 4, 1, "", "backward_diff"], [112, 4, 1, "", "bilinear"]], "sympy.physics.control.lti.Feedback": [[112, 2, 1, "", "doit"], [112, 3, 1, "", "sensitivity"], [112, 3, 1, "", "sign"], [112, 3, 1, "", "sys1"], [112, 3, 1, "", "sys2"], [112, 3, 1, "", "var"]], "sympy.physics.control.lti.MIMOFeedback": [[112, 2, 1, "", "doit"], [112, 3, 1, "", "sensitivity"], [112, 3, 1, "", "sign"], [112, 3, 1, "", "sys1"], [112, 3, 1, "", "sys2"], [112, 3, 1, "", "var"]], "sympy.physics.control.lti.MIMOParallel": [[112, 2, 1, "", "doit"], [112, 3, 1, "", "num_inputs"], [112, 3, 1, "", "num_outputs"], [112, 3, 1, "", "shape"], [112, 3, 1, "", "var"]], "sympy.physics.control.lti.MIMOSeries": [[112, 2, 1, "", "doit"], [112, 3, 1, "", "num_inputs"], [112, 3, 1, "", "num_outputs"], [112, 3, 1, "", "shape"], [112, 3, 1, "", "var"]], "sympy.physics.control.lti.Parallel": [[112, 2, 1, "", "doit"], [112, 3, 1, "", "is_biproper"], [112, 3, 1, "", "is_proper"], [112, 3, 1, "", "is_strictly_proper"], [112, 2, 1, "", "to_expr"], [112, 3, 1, "", "var"]], "sympy.physics.control.lti.Series": [[112, 2, 1, "", "doit"], [112, 3, 1, "", "is_biproper"], [112, 3, 1, "", "is_proper"], [112, 3, 1, "", "is_strictly_proper"], [112, 2, 1, "", "to_expr"], [112, 3, 1, "", "var"]], "sympy.physics.control.lti.TransferFunction": [[112, 2, 1, "", "dc_gain"], [112, 3, 1, "", "den"], [112, 2, 1, "", "expand"], [112, 2, 1, "", "from_rational_expression"], [112, 3, 1, "", "is_biproper"], [112, 3, 1, "", "is_proper"], [112, 2, 1, "", "is_stable"], [112, 3, 1, "", "is_strictly_proper"], [112, 3, 1, "", "num"], [112, 2, 1, "", "poles"], [112, 2, 1, "", "to_expr"], [112, 3, 1, "", "var"], [112, 2, 1, "", "zeros"]], "sympy.physics.control.lti.TransferFunctionMatrix": [[112, 2, 1, "", "elem_poles"], [112, 2, 1, "", "elem_zeros"], [112, 2, 1, "", "expand"], [112, 2, 1, "", "from_Matrix"], [112, 3, 1, "", "num_inputs"], [112, 3, 1, "", "num_outputs"], [112, 3, 1, "", "shape"], [112, 2, 1, "", "transpose"], [112, 3, 1, "", "var"]], "sympy.physics.hep": [[113, 0, 0, "-", "gamma_matrices"]], "sympy.physics.hep.gamma_matrices": [[113, 4, 1, "", "extract_type_tens"], [113, 4, 1, "", "gamma_trace"], [113, 4, 1, "", "kahane_simplify"], [113, 4, 1, "", "simplify_gpgp"]], "sympy.physics.hydrogen": [[114, 4, 1, "", "E_nl"], [114, 4, 1, "", "E_nl_dirac"], [114, 4, 1, "", "Psi_nlm"], [114, 4, 1, "", "R_nl"]], "sympy.physics.matrices": [[115, 4, 1, "", "mdft"], [115, 4, 1, "", "mgamma"], [115, 4, 1, "", "msigma"], [115, 4, 1, "", "pat_matrix"]], "sympy.physics.mechanics": [[117, 0, 0, "-", "body"], [118, 4, 1, "", "find_dynamicsymbols"], [120, 0, 0, "-", "joint"], [120, 0, 0, "-", "jointsmethod"], [121, 0, 0, "-", "kane"], [121, 0, 0, "-", "lagrange"], [122, 0, 0, "-", "linearize"], [118, 4, 1, "", "msubs"], [123, 0, 0, "-", "particle"], [123, 0, 0, "-", "rigidbody"], [125, 0, 0, "-", "system"]], "sympy.physics.mechanics.body": [[117, 1, 1, "", "Body"]], "sympy.physics.mechanics.body.Body": [[117, 2, 1, "", "ang_vel_in"], [117, 2, 1, "", "apply_force"], [117, 2, 1, "", "apply_torque"], [117, 2, 1, "", "clear_loads"], [117, 2, 1, "", "dcm"], [117, 3, 1, "", "inertia"], [117, 2, 1, "", "kinetic_energy"], [117, 2, 1, "", "masscenter_vel"], [117, 2, 1, "", "parallel_axis"], [117, 2, 1, "", "remove_load"], [117, 3, 1, "", "x"], [117, 3, 1, "", "y"], [117, 3, 1, "", "z"]], "sympy.physics.mechanics.functions": [[123, 4, 1, "", "Lagrangian"], [123, 4, 1, "", "angular_momentum"], [123, 4, 1, "", "inertia"], [123, 4, 1, "", "inertia_of_point_mass"], [123, 4, 1, "", "kinetic_energy"], [123, 4, 1, "", "linear_momentum"], [123, 4, 1, "", "potential_energy"]], "sympy.physics.mechanics.joint": [[120, 1, 1, "", "CylindricalJoint"], [120, 1, 1, "", "Joint"], [120, 1, 1, "", "PinJoint"], [120, 1, 1, "", "PlanarJoint"], [120, 1, 1, "", "PrismaticJoint"], [120, 1, 1, "", "SphericalJoint"], [120, 1, 1, "", "WeldJoint"]], "sympy.physics.mechanics.joint.CylindricalJoint": [[120, 3, 1, "", "joint_axis"], [120, 3, 1, "", "rotation_coordinate"], [120, 3, 1, "", "rotation_speed"], [120, 3, 1, "", "translation_coordinate"], [120, 3, 1, "", "translation_speed"]], "sympy.physics.mechanics.joint.Joint": [[120, 3, 1, "", "child"], [120, 3, 1, "", "child_axis"], [120, 3, 1, "", "child_point"], [120, 3, 1, "", "coordinates"], [120, 3, 1, "", "kdes"], [120, 3, 1, "", "name"], [120, 3, 1, "", "parent"], [120, 3, 1, "", "parent_axis"], [120, 3, 1, "", "parent_point"], [120, 3, 1, "", "speeds"]], "sympy.physics.mechanics.joint.PinJoint": [[120, 3, 1, "", "joint_axis"]], "sympy.physics.mechanics.joint.PlanarJoint": [[120, 3, 1, "", "planar_coordinates"], [120, 3, 1, "", "planar_speeds"], [120, 3, 1, "", "planar_vectors"], [120, 3, 1, "", "rotation_axis"], [120, 3, 1, "", "rotation_coordinate"], [120, 3, 1, "", "rotation_speed"]], "sympy.physics.mechanics.joint.PrismaticJoint": [[120, 3, 1, "", "joint_axis"]], "sympy.physics.mechanics.jointsmethod": [[120, 1, 1, "", "JointsMethod"]], "sympy.physics.mechanics.jointsmethod.JointsMethod": [[120, 3, 1, "", "bodies"], [120, 3, 1, "", "forcing"], [120, 3, 1, "", "forcing_full"], [120, 2, 1, "", "form_eoms"], [120, 3, 1, "", "kdes"], [120, 3, 1, "", "loads"], [120, 3, 1, "", "mass_matrix"], [120, 3, 1, "", "mass_matrix_full"], [120, 3, 1, "", "method"], [120, 3, 1, "", "q"], [120, 2, 1, "", "rhs"], [120, 3, 1, "", "u"]], "sympy.physics.mechanics.kane": [[121, 1, 1, "", "KanesMethod"]], "sympy.physics.mechanics.kane.KanesMethod": [[121, 3, 1, "", "auxiliary_eqs"], [121, 3, 1, "", "forcing"], [121, 3, 1, "", "forcing_full"], [121, 3, 1, "", "forcing_kin"], [121, 2, 1, "", "kanes_equations"], [121, 2, 1, "", "kindiffdict"], [121, 2, 1, "", "linearize"], [121, 3, 1, "", "mass_matrix"], [121, 3, 1, "", "mass_matrix_full"], [121, 3, 1, "", "mass_matrix_kin"], [121, 2, 1, "", "rhs"], [121, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.lagrange": [[121, 1, 1, "", "LagrangesMethod"]], "sympy.physics.mechanics.lagrange.LagrangesMethod": [[121, 3, 1, "", "forcing"], [121, 3, 1, "", "forcing_full"], [121, 2, 1, "", "form_lagranges_equations"], [121, 2, 1, "", "linearize"], [121, 3, 1, "", "mass_matrix"], [121, 3, 1, "", "mass_matrix_full"], [121, 2, 1, "", "rhs"], [121, 2, 1, "", "solve_multipliers"], [121, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.linearize": [[122, 1, 1, "", "Linearizer"]], "sympy.physics.mechanics.linearize.Linearizer": [[122, 2, 1, "", "linearize"]], "sympy.physics.mechanics.particle": [[123, 1, 1, "", "Particle"]], "sympy.physics.mechanics.particle.Particle": [[123, 2, 1, "", "angular_momentum"], [123, 2, 1, "", "kinetic_energy"], [123, 2, 1, "", "linear_momentum"], [123, 3, 1, "", "mass"], [123, 2, 1, "", "parallel_axis"], [123, 3, 1, "", "point"], [123, 3, 1, "", "potential_energy"]], "sympy.physics.mechanics.rigidbody": [[123, 1, 1, "", "RigidBody"]], "sympy.physics.mechanics.rigidbody.RigidBody": [[123, 2, 1, "", "angular_momentum"], [123, 3, 1, "", "central_inertia"], [123, 3, 1, "", "frame"], [123, 3, 1, "", "inertia"], [123, 2, 1, "", "kinetic_energy"], [123, 2, 1, "", "linear_momentum"], [123, 3, 1, "", "mass"], [123, 3, 1, "", "masscenter"], [123, 2, 1, "", "parallel_axis"], [123, 3, 1, "", "potential_energy"]], "sympy.physics.mechanics.system": [[125, 1, 1, "", "SymbolicSystem"]], "sympy.physics.mechanics.system.SymbolicSystem": [[125, 3, 1, "", "alg_con"], [125, 3, 1, "", "bodies"], [125, 3, 1, "", "comb_explicit_rhs"], [125, 3, 1, "", "comb_implicit_mat"], [125, 3, 1, "", "comb_implicit_rhs"], [125, 2, 1, "", "compute_explicit_form"], [125, 2, 1, "", "constant_symbols"], [125, 3, 1, "", "coordinates"], [125, 3, 1, "", "dyn_implicit_mat"], [125, 3, 1, "", "dyn_implicit_rhs"], [125, 2, 1, "", "dynamic_symbols"], [125, 3, 1, "", "kin_explicit_rhs"], [125, 3, 1, "", "loads"], [125, 3, 1, "", "speeds"], [125, 3, 1, "", "states"]], "sympy.physics.optics": [[145, 0, 0, "-", "gaussopt"], [147, 0, 0, "-", "medium"], [148, 0, 0, "-", "polarization"], [149, 0, 0, "-", "utils"], [150, 0, 0, "-", "waves"]], "sympy.physics.optics.gaussopt": [[145, 1, 1, "", "BeamParameter"], [145, 1, 1, "", "CurvedMirror"], [145, 1, 1, "", "CurvedRefraction"], [145, 1, 1, "", "FlatMirror"], [145, 1, 1, "", "FlatRefraction"], [145, 1, 1, "", "FreeSpace"], [145, 1, 1, "", "GeometricRay"], [145, 1, 1, "", "RayTransferMatrix"], [145, 1, 1, "", "ThinLens"], [145, 4, 1, "", "conjugate_gauss_beams"], [145, 4, 1, "", "gaussian_conj"], [145, 4, 1, "", "geometric_conj_ab"], [145, 4, 1, "", "geometric_conj_af"], [145, 4, 1, "", "geometric_conj_bf"], [145, 4, 1, "", "rayleigh2waist"], [145, 4, 1, "", "waist2rayleigh"]], "sympy.physics.optics.gaussopt.BeamParameter": [[145, 3, 1, "", "divergence"], [145, 3, 1, "", "gouy"], [145, 3, 1, "", "q"], [145, 3, 1, "", "radius"], [145, 3, 1, "", "w"], [145, 3, 1, "", "w_0"], [145, 3, 1, "", "waist_approximation_limit"]], "sympy.physics.optics.gaussopt.GeometricRay": [[145, 3, 1, "", "angle"], [145, 3, 1, "", "height"]], "sympy.physics.optics.gaussopt.RayTransferMatrix": [[145, 3, 1, "", "A"], [145, 3, 1, "", "B"], [145, 3, 1, "", "C"], [145, 3, 1, "", "D"]], "sympy.physics.optics.medium": [[147, 1, 1, "", "Medium"]], "sympy.physics.optics.medium.Medium": [[147, 3, 1, "", "refractive_index"], [147, 3, 1, "", "speed"]], "sympy.physics.optics.polarization": [[148, 4, 1, "", "half_wave_retarder"], [148, 4, 1, "", "jones_2_stokes"], [148, 4, 1, "", "jones_vector"], [148, 4, 1, "", "linear_polarizer"], [148, 4, 1, "", "mueller_matrix"], [148, 4, 1, "", "phase_retarder"], [148, 4, 1, "", "polarizing_beam_splitter"], [148, 4, 1, "", "quarter_wave_retarder"], [148, 4, 1, "", "reflective_filter"], [148, 4, 1, "", "stokes_vector"], [148, 4, 1, "", "transmissive_filter"]], "sympy.physics.optics.utils": [[149, 4, 1, "", "brewster_angle"], [149, 4, 1, "", "critical_angle"], [149, 4, 1, "", "deviation"], [149, 4, 1, "", "fresnel_coefficients"], [149, 4, 1, "", "hyperfocal_distance"], [149, 4, 1, "", "lens_formula"], [149, 4, 1, "", "lens_makers_formula"], [149, 4, 1, "", "mirror_formula"], [149, 4, 1, "", "refraction_angle"], [149, 4, 1, "", "transverse_magnification"]], "sympy.physics.optics.waves": [[150, 1, 1, "", "TWave"]], "sympy.physics.optics.waves.TWave": [[150, 3, 1, "", "amplitude"], [150, 3, 1, "", "angular_velocity"], [150, 3, 1, "", "frequency"], [150, 3, 1, "", "n"], [150, 3, 1, "", "phase"], [150, 3, 1, "", "speed"], [150, 3, 1, "", "time_period"], [150, 3, 1, "", "wavelength"], [150, 3, 1, "", "wavenumber"]], "sympy.physics.paulialgebra": [[151, 4, 1, "", "evaluate_pauli_product"]], "sympy.physics.qho_1d": [[152, 4, 1, "", "E_n"], [152, 4, 1, "", "coherent_state"], [152, 4, 1, "", "psi_n"]], "sympy.physics.quantum": [[153, 0, 0, "-", "anticommutator"], [154, 0, 0, "-", "cartesian"], [155, 0, 0, "-", "cg"], [156, 0, 0, "-", "circuitplot"], [157, 0, 0, "-", "commutator"], [158, 0, 0, "-", "constants"], [159, 0, 0, "-", "dagger"], [160, 0, 0, "-", "gate"], [161, 0, 0, "-", "grover"], [162, 0, 0, "-", "hilbert"], [164, 0, 0, "-", "innerproduct"], [165, 0, 0, "-", "operator"], [166, 0, 0, "-", "operatorset"], [167, 0, 0, "-", "piab"], [168, 0, 0, "-", "qapply"], [169, 0, 0, "-", "qft"], [170, 0, 0, "-", "qubit"], [171, 0, 0, "-", "represent"], [172, 0, 0, "-", "shor"], [173, 0, 0, "-", "spin"], [174, 0, 0, "-", "state"], [175, 0, 0, "-", "tensorproduct"]], "sympy.physics.quantum.anticommutator": [[153, 1, 1, "", "AntiCommutator"]], "sympy.physics.quantum.anticommutator.AntiCommutator": [[153, 2, 1, "", "doit"]], "sympy.physics.quantum.cartesian": [[154, 1, 1, "", "PositionBra3D"], [154, 1, 1, "", "PositionKet3D"], [154, 1, 1, "", "PositionState3D"], [154, 1, 1, "", "PxBra"], [154, 1, 1, "", "PxKet"], [154, 1, 1, "", "PxOp"], [154, 1, 1, "", "XBra"], [154, 1, 1, "", "XKet"], [154, 1, 1, "", "XOp"], [154, 1, 1, "", "YOp"], [154, 1, 1, "", "ZOp"]], "sympy.physics.quantum.cartesian.PositionState3D": [[154, 3, 1, "", "position_x"], [154, 3, 1, "", "position_y"], [154, 3, 1, "", "position_z"]], "sympy.physics.quantum.cartesian.PxBra": [[154, 3, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.PxKet": [[154, 3, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.XBra": [[154, 3, 1, "", "position"]], "sympy.physics.quantum.cartesian.XKet": [[154, 3, 1, "", "position"]], "sympy.physics.quantum.cg": [[155, 1, 1, "", "CG"], [155, 1, 1, "", "Wigner3j"], [155, 1, 1, "", "Wigner6j"], [155, 1, 1, "", "Wigner9j"], [155, 4, 1, "", "cg_simp"]], "sympy.physics.quantum.circuitplot": [[156, 1, 1, "", "CircuitPlot"], [156, 4, 1, "", "CreateCGate"], [156, 1, 1, "", "Mx"], [156, 1, 1, "", "Mz"], [156, 4, 1, "", "circuit_plot"], [156, 4, 1, "", "labeller"]], "sympy.physics.quantum.circuitplot.CircuitPlot": [[156, 2, 1, "", "control_line"], [156, 2, 1, "", "control_point"], [156, 2, 1, "", "not_point"], [156, 2, 1, "", "one_qubit_box"], [156, 2, 1, "", "swap_point"], [156, 2, 1, "", "two_qubit_box"], [156, 2, 1, "", "update"]], "sympy.physics.quantum.commutator": [[157, 1, 1, "", "Commutator"]], "sympy.physics.quantum.commutator.Commutator": [[157, 2, 1, "", "doit"]], "sympy.physics.quantum.constants": [[158, 1, 1, "", "HBar"]], "sympy.physics.quantum.dagger": [[159, 1, 1, "", "Dagger"]], "sympy.physics.quantum.gate": [[160, 1, 1, "", "CGate"], [160, 1, 1, "", "CGateS"], [160, 5, 1, "", "CNOT"], [160, 1, 1, "", "CNotGate"], [160, 1, 1, "", "Gate"], [160, 5, 1, "", "H"], [160, 1, 1, "", "HadamardGate"], [160, 1, 1, "", "IdentityGate"], [160, 1, 1, "", "OneQubitGate"], [160, 5, 1, "", "Phase"], [160, 1, 1, "", "PhaseGate"], [160, 5, 1, "", "S"], [160, 5, 1, "", "SWAP"], [160, 1, 1, "", "SwapGate"], [160, 5, 1, "", "T"], [160, 1, 1, "", "TGate"], [160, 1, 1, "", "TwoQubitGate"], [160, 1, 1, "", "UGate"], [160, 5, 1, "", "X"], [160, 1, 1, "", "XGate"], [160, 5, 1, "", "Y"], [160, 1, 1, "", "YGate"], [160, 5, 1, "", "Z"], [160, 1, 1, "", "ZGate"], [160, 4, 1, "", "gate_simp"], [160, 4, 1, "", "gate_sort"], [160, 4, 1, "", "normalized"], [160, 4, 1, "", "random_circuit"]], "sympy.physics.quantum.gate.CGate": [[160, 3, 1, "", "controls"], [160, 2, 1, "", "decompose"], [160, 2, 1, "", "eval_controls"], [160, 3, 1, "", "gate"], [160, 3, 1, "", "min_qubits"], [160, 3, 1, "", "nqubits"], [160, 2, 1, "", "plot_gate"], [160, 3, 1, "", "targets"]], "sympy.physics.quantum.gate.CNotGate": [[160, 3, 1, "", "controls"], [160, 3, 1, "", "gate"], [160, 3, 1, "", "min_qubits"], [160, 3, 1, "", "targets"]], "sympy.physics.quantum.gate.Gate": [[160, 2, 1, "", "get_target_matrix"], [160, 3, 1, "", "min_qubits"], [160, 3, 1, "", "nqubits"], [160, 3, 1, "", "targets"]], "sympy.physics.quantum.gate.SwapGate": [[160, 2, 1, "", "decompose"]], "sympy.physics.quantum.gate.UGate": [[160, 2, 1, "", "get_target_matrix"], [160, 3, 1, "", "targets"]], "sympy.physics.quantum.grover": [[161, 1, 1, "", "OracleGate"], [161, 1, 1, "", "WGate"], [161, 4, 1, "", "apply_grover"], [161, 4, 1, "", "grover_iteration"], [161, 4, 1, "", "superposition_basis"]], "sympy.physics.quantum.grover.OracleGate": [[161, 3, 1, "", "search_function"], [161, 3, 1, "", "targets"]], "sympy.physics.quantum.hilbert": [[162, 1, 1, "", "ComplexSpace"], [162, 1, 1, "", "DirectSumHilbertSpace"], [162, 1, 1, "", "FockSpace"], [162, 1, 1, "", "HilbertSpace"], [162, 1, 1, "", "L2"], [162, 1, 1, "", "TensorPowerHilbertSpace"], [162, 1, 1, "", "TensorProductHilbertSpace"]], "sympy.physics.quantum.hilbert.DirectSumHilbertSpace": [[162, 2, 1, "", "eval"], [162, 3, 1, "", "spaces"]], "sympy.physics.quantum.hilbert.HilbertSpace": [[162, 3, 1, "", "dimension"]], "sympy.physics.quantum.hilbert.TensorProductHilbertSpace": [[162, 2, 1, "", "eval"], [162, 3, 1, "", "spaces"]], "sympy.physics.quantum.innerproduct": [[164, 1, 1, "", "InnerProduct"]], "sympy.physics.quantum.operator": [[165, 1, 1, "", "DifferentialOperator"], [165, 1, 1, "", "HermitianOperator"], [165, 1, 1, "", "IdentityOperator"], [165, 1, 1, "", "Operator"], [165, 1, 1, "", "OuterProduct"], [165, 1, 1, "", "UnitaryOperator"]], "sympy.physics.quantum.operator.DifferentialOperator": [[165, 3, 1, "", "expr"], [165, 3, 1, "", "free_symbols"], [165, 3, 1, "", "function"], [165, 3, 1, "", "variables"]], "sympy.physics.quantum.operator.OuterProduct": [[165, 3, 1, "", "bra"], [165, 3, 1, "", "ket"]], "sympy.physics.quantum.operatorset": [[166, 4, 1, "", "operators_to_state"], [166, 4, 1, "", "state_to_operators"]], "sympy.physics.quantum.piab": [[167, 1, 1, "", "PIABBra"], [167, 1, 1, "", "PIABHamiltonian"], [167, 1, 1, "", "PIABKet"]], "sympy.physics.quantum.qapply": [[168, 4, 1, "", "qapply"]], "sympy.physics.quantum.qft": [[169, 1, 1, "", "IQFT"], [169, 1, 1, "", "QFT"], [169, 5, 1, "", "Rk"], [169, 1, 1, "", "RkGate"]], "sympy.physics.quantum.qft.IQFT": [[169, 2, 1, "", "decompose"]], "sympy.physics.quantum.qft.QFT": [[169, 2, 1, "", "decompose"]], "sympy.physics.quantum.qubit": [[170, 1, 1, "", "IntQubit"], [170, 1, 1, "", "IntQubitBra"], [170, 1, 1, "", "Qubit"], [170, 1, 1, "", "QubitBra"], [170, 4, 1, "", "matrix_to_density"], [170, 4, 1, "", "matrix_to_qubit"], [170, 4, 1, "", "measure_all"], [170, 4, 1, "", "measure_all_oneshot"], [170, 4, 1, "", "measure_partial"], [170, 4, 1, "", "measure_partial_oneshot"], [170, 4, 1, "", "qubit_to_matrix"]], "sympy.physics.quantum.represent": [[171, 4, 1, "", "enumerate_states"], [171, 4, 1, "", "get_basis"], [171, 4, 1, "", "integrate_result"], [171, 4, 1, "", "rep_expectation"], [171, 4, 1, "", "rep_innerproduct"], [171, 4, 1, "", "represent"]], "sympy.physics.quantum.shor": [[172, 1, 1, "", "CMod"], [172, 4, 1, "", "period_find"], [172, 4, 1, "", "shor"]], "sympy.physics.quantum.shor.CMod": [[172, 3, 1, "", "N"], [172, 3, 1, "", "a"], [172, 3, 1, "", "t"]], "sympy.physics.quantum.spin": [[173, 1, 1, "", "J2Op"], [173, 1, 1, "", "JxBra"], [173, 1, 1, "", "JxBraCoupled"], [173, 1, 1, "", "JxKet"], [173, 1, 1, "", "JxKetCoupled"], [173, 1, 1, "", "JyBra"], [173, 1, 1, "", "JyBraCoupled"], [173, 1, 1, "", "JyKet"], [173, 1, 1, "", "JyKetCoupled"], [173, 1, 1, "", "JzBra"], [173, 1, 1, "", "JzBraCoupled"], [173, 1, 1, "", "JzKet"], [173, 1, 1, "", "JzKetCoupled"], [173, 1, 1, "", "JzOp"], [173, 1, 1, "", "Rotation"], [173, 1, 1, "", "WignerD"], [173, 4, 1, "", "couple"], [173, 4, 1, "", "uncouple"]], "sympy.physics.quantum.spin.Rotation": [[173, 2, 1, "", "D"], [173, 2, 1, "", "d"]], "sympy.physics.quantum.state": [[174, 1, 1, "", "Bra"], [174, 1, 1, "", "BraBase"], [174, 1, 1, "", "Ket"], [174, 1, 1, "", "KetBase"], [174, 1, 1, "", "OrthogonalBra"], [174, 1, 1, "", "OrthogonalKet"], [174, 1, 1, "", "OrthogonalState"], [174, 1, 1, "", "State"], [174, 1, 1, "", "StateBase"], [174, 1, 1, "", "TimeDepBra"], [174, 1, 1, "", "TimeDepKet"], [174, 1, 1, "", "TimeDepState"], [174, 1, 1, "", "Wavefunction"]], "sympy.physics.quantum.state.StateBase": [[174, 3, 1, "", "dual"], [174, 2, 1, "", "dual_class"], [174, 3, 1, "", "operators"]], "sympy.physics.quantum.state.TimeDepState": [[174, 3, 1, "", "label"], [174, 3, 1, "", "time"]], "sympy.physics.quantum.state.Wavefunction": [[174, 3, 1, "", "expr"], [174, 3, 1, "", "is_commutative"], [174, 3, 1, "", "is_normalized"], [174, 3, 1, "", "limits"], [174, 3, 1, "", "norm"], [174, 2, 1, "", "normalize"], [174, 2, 1, "", "prob"], [174, 3, 1, "", "variables"]], "sympy.physics.quantum.tensorproduct": [[175, 1, 1, "", "TensorProduct"], [175, 4, 1, "", "tensor_product_simp"]], "sympy.physics.secondquant": [[176, 1, 1, "", "AnnihilateBoson"], [176, 1, 1, "", "AnnihilateFermion"], [176, 1, 1, "", "AntiSymmetricTensor"], [176, 5, 1, "", "B"], [176, 5, 1, "", "BBra"], [176, 5, 1, "", "BKet"], [176, 5, 1, "", "Bd"], [176, 1, 1, "", "BosonicBasis"], [176, 1, 1, "", "Commutator"], [176, 1, 1, "", "CreateBoson"], [176, 1, 1, "", "CreateFermion"], [176, 1, 1, "", "Dagger"], [176, 5, 1, "", "F"], [176, 5, 1, "", "FBra"], [176, 5, 1, "", "FKet"], [176, 5, 1, "", "Fd"], [176, 1, 1, "", "FixedBosonicBasis"], [176, 1, 1, "", "FockState"], [176, 1, 1, "", "FockStateBosonBra"], [176, 1, 1, "", "FockStateBosonKet"], [176, 1, 1, "", "FockStateBra"], [176, 1, 1, "", "FockStateFermionBra"], [176, 1, 1, "", "FockStateFermionKet"], [176, 1, 1, "", "FockStateKet"], [176, 1, 1, "", "InnerProduct"], [176, 1, 1, "", "KroneckerDelta"], [176, 1, 1, "", "NO"], [176, 1, 1, "", "PermutationOperator"], [176, 1, 1, "", "VarBosonicBasis"], [176, 4, 1, "", "apply_operators"], [176, 4, 1, "", "contraction"], [176, 4, 1, "", "evaluate_deltas"], [176, 4, 1, "", "matrix_rep"], [176, 4, 1, "", "simplify_index_permutations"], [176, 4, 1, "", "substitute_dummies"], [176, 4, 1, "", "wicks"]], "sympy.physics.secondquant.AnnihilateBoson": [[176, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.AnnihilateFermion": [[176, 2, 1, "", "apply_operator"], [176, 3, 1, "", "is_only_q_annihilator"], [176, 3, 1, "", "is_only_q_creator"], [176, 3, 1, "", "is_q_annihilator"], [176, 3, 1, "", "is_q_creator"]], "sympy.physics.secondquant.AntiSymmetricTensor": [[176, 3, 1, "", "lower"], [176, 3, 1, "", "symbol"], [176, 3, 1, "", "upper"]], "sympy.physics.secondquant.Commutator": [[176, 2, 1, "", "doit"], [176, 2, 1, "", "eval"]], "sympy.physics.secondquant.CreateBoson": [[176, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.CreateFermion": [[176, 2, 1, "", "apply_operator"], [176, 3, 1, "", "is_only_q_annihilator"], [176, 3, 1, "", "is_only_q_creator"], [176, 3, 1, "", "is_q_annihilator"], [176, 3, 1, "", "is_q_creator"]], "sympy.physics.secondquant.Dagger": [[176, 2, 1, "", "eval"]], "sympy.physics.secondquant.FixedBosonicBasis": [[176, 2, 1, "", "index"], [176, 2, 1, "", "state"]], "sympy.physics.secondquant.InnerProduct": [[176, 3, 1, "", "bra"], [176, 3, 1, "", "ket"]], "sympy.physics.secondquant.KroneckerDelta": [[176, 2, 1, "", "eval"], [176, 3, 1, "", "indices_contain_equal_information"], [176, 3, 1, "", "is_above_fermi"], [176, 3, 1, "", "is_below_fermi"], [176, 3, 1, "", "is_only_above_fermi"], [176, 3, 1, "", "is_only_below_fermi"], [176, 3, 1, "", "killable_index"], [176, 3, 1, "", "preferred_index"]], "sympy.physics.secondquant.NO": [[176, 2, 1, "", "doit"], [176, 2, 1, "", "get_subNO"], [176, 3, 1, "", "has_q_annihilators"], [176, 3, 1, "", "has_q_creators"], [176, 2, 1, "", "iter_q_annihilators"], [176, 2, 1, "", "iter_q_creators"]], "sympy.physics.secondquant.PermutationOperator": [[176, 2, 1, "", "get_permuted"]], "sympy.physics.secondquant.VarBosonicBasis": [[176, 2, 1, "", "index"], [176, 2, 1, "", "state"]], "sympy.physics.sho": [[177, 4, 1, "", "E_nl"], [177, 4, 1, "", "R_nl"]], "sympy.physics.units": [[178, 0, 0, "-", "dimensions"], [182, 0, 0, "-", "prefixes"], [183, 0, 0, "-", "quantities"], [184, 0, 0, "-", "unitsystem"], [183, 0, 0, "-", "util"]], "sympy.physics.units.dimensions": [[178, 1, 1, "", "Dimension"], [178, 1, 1, "", "DimensionSystem"]], "sympy.physics.units.dimensions.Dimension": [[178, 2, 1, "", "has_integer_powers"]], "sympy.physics.units.dimensions.DimensionSystem": [[178, 3, 1, "", "can_transf_matrix"], [178, 3, 1, "", "dim"], [178, 2, 1, "", "dim_can_vector"], [178, 2, 1, "", "dim_vector"], [178, 3, 1, "", "inv_can_transf_matrix"], [178, 3, 1, "", "is_consistent"], [178, 2, 1, "", "is_dimensionless"], [178, 3, 1, "", "list_can_dims"], [178, 2, 1, "", "print_dim_base"]], "sympy.physics.units.prefixes": [[182, 1, 1, "", "Prefix"]], "sympy.physics.units.quantities": [[183, 1, 1, "", "Quantity"]], "sympy.physics.units.quantities.Quantity": [[183, 3, 1, "", "abbrev"], [183, 2, 1, "", "convert_to"], [183, 3, 1, "", "free_symbols"], [183, 3, 1, "", "is_prefixed"], [183, 3, 1, "", "scale_factor"], [183, 2, 1, "", "set_global_relative_scale_factor"]], "sympy.physics.units.unitsystem": [[184, 1, 1, "", "UnitSystem"]], "sympy.physics.units.unitsystem.UnitSystem": [[184, 3, 1, "", "dim"], [184, 2, 1, "", "extend"], [184, 2, 1, "", "get_units_non_prefixed"], [184, 3, 1, "", "is_consistent"]], "sympy.physics.units.util": [[183, 4, 1, "", "convert_to"]], "sympy.physics.vector": [[188, 4, 1, "", "dynamicsymbols"], [190, 0, 0, "-", "functions"], [190, 0, 0, "-", "point"]], "sympy.physics.vector.dyadic": [[186, 1, 1, "", "Dyadic"]], "sympy.physics.vector.dyadic.Dyadic": [[186, 2, 1, "", "applyfunc"], [186, 2, 1, "", "cross"], [186, 2, 1, "", "doit"], [186, 2, 1, "", "dot"], [186, 2, 1, "", "dt"], [186, 2, 1, "", "express"], [186, 3, 1, "", "func"], [186, 2, 1, "", "simplify"], [186, 2, 1, "", "subs"], [186, 2, 1, "", "to_matrix"], [186, 2, 1, "", "xreplace"]], "sympy.physics.vector.fieldfunctions": [[187, 4, 1, "", "curl"], [187, 4, 1, "", "divergence"], [187, 4, 1, "", "gradient"], [187, 4, 1, "", "is_conservative"], [187, 4, 1, "", "is_solenoidal"], [187, 4, 1, "", "scalar_potential"], [187, 4, 1, "", "scalar_potential_difference"]], "sympy.physics.vector.frame": [[186, 1, 1, "", "CoordinateSym"], [186, 1, 1, "", "ReferenceFrame"]], "sympy.physics.vector.frame.ReferenceFrame": [[186, 2, 1, "", "ang_acc_in"], [186, 2, 1, "", "ang_vel_in"], [186, 2, 1, "", "dcm"], [186, 2, 1, "", "orient"], [186, 2, 1, "", "orient_axis"], [186, 2, 1, "", "orient_body_fixed"], [186, 2, 1, "", "orient_explicit"], [186, 2, 1, "", "orient_quaternion"], [186, 2, 1, "", "orient_space_fixed"], [186, 2, 1, "", "orientnew"], [186, 2, 1, "", "partial_velocity"], [186, 2, 1, "", "set_ang_acc"], [186, 2, 1, "", "set_ang_vel"], [186, 2, 1, "", "variable_map"], [186, 3, 1, "", "x"], [186, 3, 1, "", "y"], [186, 3, 1, "", "z"]], "sympy.physics.vector.functions": [[188, 4, 1, "", "cross"], [188, 4, 1, "", "dot"], [188, 4, 1, "", "express"], [190, 4, 1, "", "get_motion_params"], [190, 4, 1, "", "kinematic_equations"], [188, 4, 1, "", "outer"], [190, 4, 1, "", "partial_velocity"], [188, 4, 1, "", "time_derivative"]], "sympy.physics.vector.point": [[190, 1, 1, "", "Point"]], "sympy.physics.vector.point.Point": [[190, 2, 1, "", "a1pt_theory"], [190, 2, 1, "", "a2pt_theory"], [190, 2, 1, "", "acc"], [190, 2, 1, "", "locatenew"], [190, 2, 1, "", "partial_velocity"], [190, 2, 1, "", "pos_from"], [190, 2, 1, "", "set_acc"], [190, 2, 1, "", "set_pos"], [190, 2, 1, "", "set_vel"], [190, 2, 1, "", "v1pt_theory"], [190, 2, 1, "", "v2pt_theory"], [190, 2, 1, "", "vel"]], "sympy.physics.vector.printing": [[191, 4, 1, "", "init_vprinting"], [191, 4, 1, "", "vlatex"], [191, 4, 1, "", "vpprint"], [191, 4, 1, "", "vprint"]], "sympy.physics.vector.vector": [[186, 1, 1, "", "Vector"]], "sympy.physics.vector.vector.Vector": [[186, 2, 1, "", "angle_between"], [186, 2, 1, "", "applyfunc"], [186, 2, 1, "", "cross"], [186, 2, 1, "", "diff"], [186, 2, 1, "", "doit"], [186, 2, 1, "", "dot"], [186, 2, 1, "", "dt"], [186, 2, 1, "", "express"], [186, 2, 1, "", "free_dynamicsymbols"], [186, 2, 1, "", "free_symbols"], [186, 3, 1, "", "func"], [186, 2, 1, "", "magnitude"], [186, 2, 1, "", "normalize"], [186, 2, 1, "", "outer"], [186, 2, 1, "", "separate"], [186, 2, 1, "", "simplify"], [186, 2, 1, "", "subs"], [186, 2, 1, "", "to_matrix"], [186, 2, 1, "", "xreplace"]], "sympy.physics.wigner": [[196, 4, 1, "", "clebsch_gordan"], [196, 4, 1, "", "dot_rot_grad_Ynm"], [196, 4, 1, "", "gaunt"], [196, 4, 1, "", "racah"], [196, 4, 1, "", "real_gaunt"], [196, 4, 1, "", "wigner_3j"], [196, 4, 1, "", "wigner_6j"], [196, 4, 1, "", "wigner_9j"], [196, 4, 1, "", "wigner_d"], [196, 4, 1, "", "wigner_d_small"]], "sympy.plotting": [[197, 0, 0, "-", "plot"], [197, 0, 0, "-", "pygletplot"]], "sympy.plotting.plot": [[197, 1, 1, "", "BaseBackend"], [197, 1, 1, "", "BaseSeries"], [197, 1, 1, "", "Line2DBaseSeries"], [197, 1, 1, "", "Line3DBaseSeries"], [197, 1, 1, "", "LineOver1DRangeSeries"], [197, 1, 1, "", "MatplotlibBackend"], [197, 1, 1, "", "Parametric2DLineSeries"], [197, 1, 1, "", "Parametric3DLineSeries"], [197, 1, 1, "", "ParametricSurfaceSeries"], [197, 1, 1, "", "Plot"], [197, 1, 1, "", "PlotGrid"], [197, 1, 1, "", "SurfaceBaseSeries"], [197, 1, 1, "", "SurfaceOver2DRangeSeries"], [197, 1, 1, "", "TextBackend"], [197, 4, 1, "", "plot"], [197, 4, 1, "", "plot3d"], [197, 4, 1, "", "plot3d_parametric_line"], [197, 4, 1, "", "plot3d_parametric_surface"], [197, 4, 1, "", "plot_parametric"]], "sympy.plotting.plot.Line2DBaseSeries": [[197, 2, 1, "", "get_data"]], "sympy.plotting.plot.LineOver1DRangeSeries": [[197, 2, 1, "", "get_points"]], "sympy.plotting.plot.MatplotlibBackend": [[197, 2, 1, "", "get_segments"], [197, 2, 1, "", "process_series"]], "sympy.plotting.plot.Parametric2DLineSeries": [[197, 2, 1, "", "get_points"]], "sympy.plotting.plot.Plot": [[197, 2, 1, "", "append"], [197, 2, 1, "", "extend"]], "sympy.plotting.plot_implicit": [[197, 1, 1, "", "ImplicitSeries"], [197, 4, 1, "", "plot_implicit"]], "sympy.plotting.textplot": [[197, 4, 1, "", "textplot"]], "sympy.polys": [[204, 0, 0, "-", "polyconfig"], [204, 0, 0, "-", "polyoptions"], [209, 0, 0, "-", "solvers"]], "sympy.polys.agca.extensions": [[198, 1, 1, "", "ExtensionElement"], [198, 1, 1, "", "MonogenicFiniteExtension"]], "sympy.polys.agca.extensions.ExtensionElement": [[198, 2, 1, "", "inverse"]], "sympy.polys.agca.extensions.MonogenicFiniteExtension": [[198, 5, 1, "", "dtype"]], "sympy.polys.agca.homomorphisms": [[198, 1, 1, "", "ModuleHomomorphism"], [198, 4, 1, "", "homomorphism"]], "sympy.polys.agca.homomorphisms.ModuleHomomorphism": [[198, 2, 1, "", "image"], [198, 2, 1, "", "is_injective"], [198, 2, 1, "", "is_isomorphism"], [198, 2, 1, "", "is_surjective"], [198, 2, 1, "", "is_zero"], [198, 2, 1, "", "kernel"], [198, 2, 1, "", "quotient_codomain"], [198, 2, 1, "", "quotient_domain"], [198, 2, 1, "", "restrict_codomain"], [198, 2, 1, "", "restrict_domain"]], "sympy.polys.agca.ideals": [[198, 1, 1, "", "Ideal"]], "sympy.polys.agca.ideals.Ideal": [[198, 2, 1, "", "contains"], [198, 2, 1, "", "depth"], [198, 2, 1, "", "height"], [198, 2, 1, "", "intersect"], [198, 2, 1, "", "is_maximal"], [198, 2, 1, "", "is_primary"], [198, 2, 1, "", "is_prime"], [198, 2, 1, "", "is_principal"], [198, 2, 1, "", "is_radical"], [198, 2, 1, "", "is_whole_ring"], [198, 2, 1, "", "is_zero"], [198, 2, 1, "", "product"], [198, 2, 1, "", "quotient"], [198, 2, 1, "", "radical"], [198, 2, 1, "", "reduce_element"], [198, 2, 1, "", "saturate"], [198, 2, 1, "", "subset"], [198, 2, 1, "", "union"]], "sympy.polys.agca.modules": [[198, 1, 1, "", "FreeModule"], [198, 1, 1, "", "FreeModuleElement"], [198, 1, 1, "", "Module"], [198, 1, 1, "", "QuotientModule"], [198, 1, 1, "", "QuotientModuleElement"], [198, 1, 1, "", "SubModule"], [198, 1, 1, "", "SubQuotientModule"]], "sympy.polys.agca.modules.FreeModule": [[198, 2, 1, "", "basis"], [198, 2, 1, "", "convert"], [198, 5, 1, "", "dtype"], [198, 2, 1, "", "identity_hom"], [198, 2, 1, "", "is_submodule"], [198, 2, 1, "", "is_zero"], [198, 2, 1, "", "multiply_ideal"], [198, 2, 1, "", "quotient_module"]], "sympy.polys.agca.modules.Module": [[198, 2, 1, "", "contains"], [198, 2, 1, "", "convert"], [198, 2, 1, "", "identity_hom"], [198, 2, 1, "", "is_submodule"], [198, 2, 1, "", "is_zero"], [198, 2, 1, "", "multiply_ideal"], [198, 2, 1, "", "quotient_module"], [198, 2, 1, "", "submodule"], [198, 2, 1, "", "subset"]], "sympy.polys.agca.modules.QuotientModule": [[198, 2, 1, "", "convert"], [198, 5, 1, "", "dtype"], [198, 2, 1, "", "identity_hom"], [198, 2, 1, "", "is_submodule"], [198, 2, 1, "", "is_zero"], [198, 2, 1, "", "quotient_hom"], [198, 2, 1, "", "submodule"]], "sympy.polys.agca.modules.QuotientModuleElement": [[198, 2, 1, "", "eq"]], "sympy.polys.agca.modules.SubModule": [[198, 2, 1, "", "convert"], [198, 2, 1, "", "identity_hom"], [198, 2, 1, "", "in_terms_of_generators"], [198, 2, 1, "", "inclusion_hom"], [198, 2, 1, "", "intersect"], [198, 2, 1, "", "is_full_module"], [198, 2, 1, "", "is_submodule"], [198, 2, 1, "", "is_zero"], [198, 2, 1, "", "module_quotient"], [198, 2, 1, "", "multiply_ideal"], [198, 2, 1, "", "quotient_module"], [198, 2, 1, "", "reduce_element"], [198, 2, 1, "", "submodule"], [198, 2, 1, "", "syzygy_module"], [198, 2, 1, "", "union"]], "sympy.polys.agca.modules.SubQuotientModule": [[198, 2, 1, "", "is_full_module"], [198, 2, 1, "", "quotient_hom"]], "sympy.polys.appellseqs": [[207, 4, 1, "", "andre_poly"], [207, 4, 1, "", "bernoulli_c_poly"], [207, 4, 1, "", "bernoulli_poly"], [207, 4, 1, "", "euler_poly"], [207, 4, 1, "", "genocchi_poly"]], "sympy.polys.constructor": [[207, 4, 1, "", "construct_domain"]], "sympy.polys.densearith": [[204, 4, 1, "", "dmp_abs"], [204, 4, 1, "", "dmp_add"], [204, 4, 1, "", "dmp_add_ground"], [204, 4, 1, "", "dmp_add_mul"], [204, 4, 1, "", "dmp_add_term"], [204, 4, 1, "", "dmp_div"], [204, 4, 1, "", "dmp_expand"], [204, 4, 1, "", "dmp_exquo"], [204, 4, 1, "", "dmp_exquo_ground"], [204, 4, 1, "", "dmp_ff_div"], [204, 4, 1, "", "dmp_l1_norm"], [204, 4, 1, "", "dmp_max_norm"], [204, 4, 1, "", "dmp_mul"], [204, 4, 1, "", "dmp_mul_ground"], [204, 4, 1, "", "dmp_mul_term"], [204, 4, 1, "", "dmp_neg"], [204, 4, 1, "", "dmp_pdiv"], [204, 4, 1, "", "dmp_pexquo"], [204, 4, 1, "", "dmp_pow"], [204, 4, 1, "", "dmp_pquo"], [204, 4, 1, "", "dmp_prem"], [204, 4, 1, "", "dmp_quo"], [204, 4, 1, "", "dmp_quo_ground"], [204, 4, 1, "", "dmp_rem"], [204, 4, 1, "", "dmp_rr_div"], [204, 4, 1, "", "dmp_sqr"], [204, 4, 1, "", "dmp_sub"], [204, 4, 1, "", "dmp_sub_ground"], [204, 4, 1, "", "dmp_sub_mul"], [204, 4, 1, "", "dmp_sub_term"], [204, 4, 1, "", "dup_lshift"], [204, 4, 1, "", "dup_rshift"]], "sympy.polys.densebasic": [[204, 4, 1, "", "dmp_LC"], [204, 4, 1, "", "dmp_TC"], [204, 4, 1, "", "dmp_apply_pairs"], [204, 4, 1, "", "dmp_convert"], [204, 4, 1, "", "dmp_copy"], [204, 4, 1, "", "dmp_deflate"], [204, 4, 1, "", "dmp_degree"], [204, 4, 1, "", "dmp_degree_in"], [204, 4, 1, "", "dmp_degree_list"], [204, 4, 1, "", "dmp_eject"], [204, 4, 1, "", "dmp_exclude"], [204, 4, 1, "", "dmp_from_dict"], [204, 4, 1, "", "dmp_from_sympy"], [204, 4, 1, "", "dmp_ground"], [204, 4, 1, "", "dmp_ground_LC"], [204, 4, 1, "", "dmp_ground_TC"], [204, 4, 1, "", "dmp_ground_nth"], [204, 4, 1, "", "dmp_ground_p"], [204, 4, 1, "", "dmp_grounds"], [204, 4, 1, "", "dmp_include"], [204, 4, 1, "", "dmp_inflate"], [204, 4, 1, "", "dmp_inject"], [204, 4, 1, "", "dmp_list_terms"], [204, 4, 1, "", "dmp_multi_deflate"], [204, 4, 1, "", "dmp_negative_p"], [204, 4, 1, "", "dmp_nest"], [204, 4, 1, "", "dmp_normal"], [204, 4, 1, "", "dmp_nth"], [204, 4, 1, "", "dmp_one"], [204, 4, 1, "", "dmp_one_p"], [204, 4, 1, "", "dmp_permute"], [204, 4, 1, "", "dmp_positive_p"], [204, 4, 1, "", "dmp_raise"], [204, 4, 1, "", "dmp_slice"], [204, 4, 1, "", "dmp_strip"], [204, 4, 1, "", "dmp_swap"], [204, 4, 1, "", "dmp_terms_gcd"], [204, 4, 1, "", "dmp_to_dict"], [204, 4, 1, "", "dmp_to_tuple"], [204, 4, 1, "", "dmp_true_LT"], [204, 4, 1, "", "dmp_validate"], [204, 4, 1, "", "dmp_zero"], [204, 4, 1, "", "dmp_zero_p"], [204, 4, 1, "", "dmp_zeros"], [204, 4, 1, "", "dup_random"], [204, 4, 1, "", "dup_reverse"]], "sympy.polys.densetools": [[204, 4, 1, "", "dmp_clear_denoms"], [204, 4, 1, "", "dmp_compose"], [204, 4, 1, "", "dmp_diff"], [204, 4, 1, "", "dmp_diff_eval_in"], [204, 4, 1, "", "dmp_diff_in"], [204, 4, 1, "", "dmp_eval"], [204, 4, 1, "", "dmp_eval_in"], [204, 4, 1, "", "dmp_eval_tail"], [204, 4, 1, "", "dmp_ground_content"], [204, 4, 1, "", "dmp_ground_extract"], [204, 4, 1, "", "dmp_ground_monic"], [204, 4, 1, "", "dmp_ground_primitive"], [204, 4, 1, "", "dmp_ground_trunc"], [204, 4, 1, "", "dmp_integrate"], [204, 4, 1, "", "dmp_integrate_in"], [204, 4, 1, "", "dmp_lift"], [204, 4, 1, "", "dmp_revert"], [204, 4, 1, "", "dmp_trunc"], [204, 4, 1, "", "dup_content"], [204, 4, 1, "", "dup_decompose"], [204, 4, 1, "", "dup_extract"], [204, 4, 1, "", "dup_mirror"], [204, 4, 1, "", "dup_monic"], [204, 4, 1, "", "dup_primitive"], [204, 4, 1, "", "dup_real_imag"], [204, 4, 1, "", "dup_scale"], [204, 4, 1, "", "dup_shift"], [204, 4, 1, "", "dup_sign_variations"], [204, 4, 1, "", "dup_transform"]], "sympy.polys.dispersion": [[207, 4, 1, "", "dispersion"], [207, 4, 1, "", "dispersionset"]], "sympy.polys.distributedmodules": [[204, 4, 1, "", "sdm_LC"], [204, 4, 1, "", "sdm_LM"], [204, 4, 1, "", "sdm_LT"], [204, 4, 1, "", "sdm_add"], [204, 4, 1, "", "sdm_deg"], [204, 4, 1, "", "sdm_ecart"], [204, 4, 1, "", "sdm_from_dict"], [204, 4, 1, "", "sdm_from_vector"], [204, 4, 1, "", "sdm_groebner"], [204, 4, 1, "", "sdm_monomial_deg"], [204, 4, 1, "", "sdm_monomial_divides"], [204, 4, 1, "", "sdm_monomial_mul"], [204, 4, 1, "", "sdm_mul_term"], [204, 4, 1, "", "sdm_nf_mora"], [204, 4, 1, "", "sdm_spoly"], [204, 4, 1, "", "sdm_to_dict"], [204, 4, 1, "", "sdm_to_vector"], [204, 4, 1, "", "sdm_zero"]], "sympy.polys.domains": [[202, 1, 1, "", "AlgebraicField"], [202, 1, 1, "", "ComplexField"], [202, 1, 1, "", "ExpressionDomain"], [202, 1, 1, "", "FiniteField"], [202, 1, 1, "", "FractionField"], [202, 1, 1, "", "GMPYFiniteField"], [202, 1, 1, "", "GMPYIntegerRing"], [202, 1, 1, "", "GMPYRationalField"], [202, 1, 1, "", "IntegerRing"], [202, 1, 1, "", "PolynomialRing"], [202, 1, 1, "", "PythonFiniteField"], [202, 1, 1, "", "PythonIntegerRing"], [202, 1, 1, "", "PythonRationalField"], [202, 1, 1, "", "RationalField"], [202, 1, 1, "", "RealField"]], "sympy.polys.domains.AlgebraicField": [[202, 2, 1, "", "algebraic_field"], [202, 2, 1, "", "denom"], [202, 2, 1, "", "discriminant"], [202, 5, 1, "", "dtype"], [202, 5, 1, "", "ext"], [202, 2, 1, "", "from_AlgebraicField"], [202, 2, 1, "", "from_GaussianIntegerRing"], [202, 2, 1, "", "from_GaussianRationalField"], [202, 2, 1, "", "from_QQ"], [202, 2, 1, "", "from_QQ_gmpy"], [202, 2, 1, "", "from_QQ_python"], [202, 2, 1, "", "from_RealField"], [202, 2, 1, "", "from_ZZ"], [202, 2, 1, "", "from_ZZ_gmpy"], [202, 2, 1, "", "from_ZZ_python"], [202, 2, 1, "", "from_sympy"], [202, 2, 1, "", "galois_group"], [202, 2, 1, "", "get_ring"], [202, 2, 1, "", "integral_basis"], [202, 2, 1, "", "is_negative"], [202, 2, 1, "", "is_nonnegative"], [202, 2, 1, "", "is_nonpositive"], [202, 2, 1, "", "is_positive"], [202, 2, 1, "", "maximal_order"], [202, 5, 1, "", "mod"], [202, 2, 1, "", "numer"], [202, 5, 1, "", "orig_ext"], [202, 2, 1, "", "primes_above"], [202, 2, 1, "", "to_alg_num"], [202, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ComplexField": [[202, 2, 1, "", "almosteq"], [202, 2, 1, "", "from_sympy"], [202, 2, 1, "", "gcd"], [202, 2, 1, "", "get_exact"], [202, 2, 1, "", "get_ring"], [202, 2, 1, "", "is_negative"], [202, 2, 1, "", "is_nonnegative"], [202, 2, 1, "", "is_nonpositive"], [202, 2, 1, "", "is_positive"], [202, 2, 1, "", "lcm"], [202, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ExpressionDomain": [[202, 1, 1, "", "Expression"], [202, 2, 1, "", "denom"], [202, 5, 1, "", "dtype"], [202, 2, 1, "", "from_ExpressionDomain"], [202, 2, 1, "", "from_FractionField"], [202, 2, 1, "", "from_GaussianIntegerRing"], [202, 2, 1, "", "from_GaussianRationalField"], [202, 2, 1, "", "from_PolynomialRing"], [202, 2, 1, "", "from_QQ"], [202, 2, 1, "", "from_QQ_gmpy"], [202, 2, 1, "", "from_QQ_python"], [202, 2, 1, "", "from_RealField"], [202, 2, 1, "", "from_ZZ"], [202, 2, 1, "", "from_ZZ_gmpy"], [202, 2, 1, "", "from_ZZ_python"], [202, 2, 1, "", "from_sympy"], [202, 2, 1, "", "get_field"], [202, 2, 1, "", "get_ring"], [202, 2, 1, "", "is_negative"], [202, 2, 1, "", "is_nonnegative"], [202, 2, 1, "", "is_nonpositive"], [202, 2, 1, "", "is_positive"], [202, 2, 1, "", "numer"], [202, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FiniteField": [[202, 2, 1, "", "characteristic"], [202, 2, 1, "", "from_FF"], [202, 2, 1, "", "from_FF_gmpy"], [202, 2, 1, "", "from_FF_python"], [202, 2, 1, "", "from_QQ"], [202, 2, 1, "", "from_QQ_gmpy"], [202, 2, 1, "", "from_QQ_python"], [202, 2, 1, "", "from_RealField"], [202, 2, 1, "", "from_ZZ"], [202, 2, 1, "", "from_ZZ_gmpy"], [202, 2, 1, "", "from_ZZ_python"], [202, 2, 1, "", "from_sympy"], [202, 2, 1, "", "get_field"], [202, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FractionField": [[202, 2, 1, "", "denom"], [202, 2, 1, "", "factorial"], [202, 2, 1, "", "from_AlgebraicField"], [202, 2, 1, "", "from_ComplexField"], [202, 2, 1, "", "from_FractionField"], [202, 2, 1, "", "from_GaussianIntegerRing"], [202, 2, 1, "", "from_GaussianRationalField"], [202, 2, 1, "", "from_PolynomialRing"], [202, 2, 1, "", "from_QQ"], [202, 2, 1, "", "from_QQ_gmpy"], [202, 2, 1, "", "from_QQ_python"], [202, 2, 1, "", "from_RealField"], [202, 2, 1, "", "from_ZZ"], [202, 2, 1, "", "from_ZZ_gmpy"], [202, 2, 1, "", "from_ZZ_python"], [202, 2, 1, "", "from_sympy"], [202, 2, 1, "", "get_ring"], [202, 2, 1, "", "is_negative"], [202, 2, 1, "", "is_nonnegative"], [202, 2, 1, "", "is_nonpositive"], [202, 2, 1, "", "is_positive"], [202, 2, 1, "", "numer"], [202, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYIntegerRing": [[202, 2, 1, "", "factorial"], [202, 2, 1, "", "from_FF_gmpy"], [202, 2, 1, "", "from_FF_python"], [202, 2, 1, "", "from_QQ"], [202, 2, 1, "", "from_QQ_gmpy"], [202, 2, 1, "", "from_QQ_python"], [202, 2, 1, "", "from_RealField"], [202, 2, 1, "", "from_ZZ_gmpy"], [202, 2, 1, "", "from_ZZ_python"], [202, 2, 1, "", "from_sympy"], [202, 2, 1, "", "gcd"], [202, 2, 1, "", "gcdex"], [202, 2, 1, "", "lcm"], [202, 2, 1, "", "sqrt"], [202, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYRationalField": [[202, 2, 1, "", "denom"], [202, 2, 1, "", "div"], [202, 2, 1, "", "exquo"], [202, 2, 1, "", "factorial"], [202, 2, 1, "", "from_GaussianRationalField"], [202, 2, 1, "", "from_QQ_gmpy"], [202, 2, 1, "", "from_QQ_python"], [202, 2, 1, "", "from_RealField"], [202, 2, 1, "", "from_ZZ_gmpy"], [202, 2, 1, "", "from_ZZ_python"], [202, 2, 1, "", "from_sympy"], [202, 2, 1, "", "get_ring"], [202, 2, 1, "", "numer"], [202, 2, 1, "", "quo"], [202, 2, 1, "", "rem"], [202, 2, 1, "", "to_sympy"]], "sympy.polys.domains.IntegerRing": [[202, 2, 1, "", "algebraic_field"], [202, 2, 1, "", "factorial"], [202, 2, 1, "", "from_AlgebraicField"], [202, 2, 1, "", "from_FF"], [202, 2, 1, "", "from_FF_gmpy"], [202, 2, 1, "", "from_FF_python"], [202, 2, 1, "", "from_QQ"], [202, 2, 1, "", "from_QQ_gmpy"], [202, 2, 1, "", "from_QQ_python"], [202, 2, 1, "", "from_RealField"], [202, 2, 1, "", "from_ZZ"], [202, 2, 1, "", "from_ZZ_gmpy"], [202, 2, 1, "", "from_ZZ_python"], [202, 2, 1, "", "from_sympy"], [202, 2, 1, "", "gcd"], [202, 2, 1, "", "gcdex"], [202, 2, 1, "", "get_field"], [202, 2, 1, "", "lcm"], [202, 2, 1, "", "log"], [202, 2, 1, "", "sqrt"], [202, 2, 1, "", "to_sympy"]], "sympy.polys.domains.PolynomialRing": [[202, 2, 1, "", "factorial"], [202, 2, 1, "", "from_AlgebraicField"], [202, 2, 1, "", "from_ComplexField"], [202, 2, 1, "", "from_FractionField"], [202, 2, 1, "", "from_GaussianIntegerRing"], [202, 2, 1, "", "from_GaussianRationalField"], [202, 2, 1, "", "from_GlobalPolynomialRing"], [202, 2, 1, "", "from_PolynomialRing"], [202, 2, 1, "", "from_QQ"], [202, 2, 1, "", "from_QQ_gmpy"], [202, 2, 1, "", "from_QQ_python"], [202, 2, 1, "", "from_RealField"], [202, 2, 1, "", "from_ZZ"], [202, 2, 1, "", "from_ZZ_gmpy"], [202, 2, 1, "", "from_ZZ_python"], [202, 2, 1, "", "from_sympy"], [202, 2, 1, "", "gcd"], [202, 2, 1, "", "gcdex"], [202, 2, 1, "", "get_field"], [202, 2, 1, "", "is_negative"], [202, 2, 1, "", "is_nonnegative"], [202, 2, 1, "", "is_nonpositive"], [202, 2, 1, "", "is_positive"], [202, 2, 1, "", "is_unit"], [202, 2, 1, "", "lcm"], [202, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RationalField": [[202, 2, 1, "", "algebraic_field"], [202, 2, 1, "", "denom"], [202, 2, 1, "", "div"], [202, 2, 1, "", "exquo"], [202, 2, 1, "", "from_AlgebraicField"], [202, 2, 1, "", "from_GaussianRationalField"], [202, 2, 1, "", "from_QQ"], [202, 2, 1, "", "from_QQ_gmpy"], [202, 2, 1, "", "from_QQ_python"], [202, 2, 1, "", "from_RealField"], [202, 2, 1, "", "from_ZZ"], [202, 2, 1, "", "from_ZZ_gmpy"], [202, 2, 1, "", "from_ZZ_python"], [202, 2, 1, "", "from_sympy"], [202, 2, 1, "", "get_ring"], [202, 2, 1, "", "numer"], [202, 2, 1, "", "quo"], [202, 2, 1, "", "rem"], [202, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RealField": [[202, 2, 1, "", "almosteq"], [202, 2, 1, "", "from_sympy"], [202, 2, 1, "", "gcd"], [202, 2, 1, "", "get_exact"], [202, 2, 1, "", "get_ring"], [202, 2, 1, "", "lcm"], [202, 2, 1, "", "to_rational"], [202, 2, 1, "", "to_sympy"]], "sympy.polys.domains.compositedomain": [[202, 1, 1, "", "CompositeDomain"]], "sympy.polys.domains.compositedomain.CompositeDomain": [[202, 2, 1, "", "drop"], [202, 2, 1, "", "inject"]], "sympy.polys.domains.domain": [[202, 1, 1, "", "Domain"]], "sympy.polys.domains.domain.Domain": [[202, 2, 1, "", "abs"], [202, 2, 1, "", "add"], [202, 2, 1, "", "alg_field_from_poly"], [202, 2, 1, "", "algebraic_field"], [202, 2, 1, "", "almosteq"], [202, 2, 1, "", "characteristic"], [202, 2, 1, "", "cofactors"], [202, 2, 1, "", "convert"], [202, 2, 1, "", "convert_from"], [202, 2, 1, "", "cyclotomic_field"], [202, 2, 1, "", "denom"], [202, 2, 1, "", "div"], [202, 2, 1, "", "drop"], [202, 5, 1, "", "dtype"], [202, 2, 1, "", "evalf"], [202, 2, 1, "", "exquo"], [202, 2, 1, "", "frac_field"], [202, 2, 1, "", "from_AlgebraicField"], [202, 2, 1, "", "from_ComplexField"], [202, 2, 1, "", "from_ExpressionDomain"], [202, 2, 1, "", "from_ExpressionRawDomain"], [202, 2, 1, "", "from_FF"], [202, 2, 1, "", "from_FF_gmpy"], [202, 2, 1, "", "from_FF_python"], [202, 2, 1, "", "from_FractionField"], [202, 2, 1, "", "from_GlobalPolynomialRing"], [202, 2, 1, "", "from_MonogenicFiniteExtension"], [202, 2, 1, "", "from_PolynomialRing"], [202, 2, 1, "", "from_QQ_gmpy"], [202, 2, 1, "", "from_QQ_python"], [202, 2, 1, "", "from_RealField"], [202, 2, 1, "", "from_ZZ_gmpy"], [202, 2, 1, "", "from_ZZ_python"], [202, 2, 1, "", "from_sympy"], [202, 2, 1, "", "gcd"], [202, 2, 1, "", "gcdex"], [202, 2, 1, "", "get_exact"], [202, 2, 1, "", "get_field"], [202, 2, 1, "", "get_ring"], [202, 2, 1, "", "half_gcdex"], [202, 5, 1, "", "has_assoc_Field"], [202, 5, 1, "", "has_assoc_Ring"], [202, 2, 1, "", "inject"], [202, 2, 1, "", "invert"], [202, 5, 1, "", "is_Field"], [202, 5, 1, "", "is_PID"], [202, 5, 1, "", "is_Ring"], [202, 2, 1, "", "is_negative"], [202, 2, 1, "", "is_nonnegative"], [202, 2, 1, "", "is_nonpositive"], [202, 2, 1, "", "is_one"], [202, 2, 1, "", "is_positive"], [202, 2, 1, "", "is_zero"], [202, 2, 1, "", "lcm"], [202, 2, 1, "", "log"], [202, 2, 1, "", "map"], [202, 2, 1, "", "mul"], [202, 2, 1, "", "n"], [202, 2, 1, "", "neg"], [202, 2, 1, "", "numer"], [202, 2, 1, "", "of_type"], [202, 2, 1, "", "old_frac_field"], [202, 2, 1, "", "old_poly_ring"], [202, 5, 1, "", "one"], [202, 2, 1, "", "poly_ring"], [202, 2, 1, "", "pos"], [202, 2, 1, "", "pow"], [202, 2, 1, "", "quo"], [202, 2, 1, "", "rem"], [202, 2, 1, "", "revert"], [202, 2, 1, "", "sqrt"], [202, 2, 1, "", "sub"], [202, 2, 1, "", "to_sympy"], [202, 3, 1, "", "tp"], [202, 2, 1, "", "unify"], [202, 5, 1, "", "zero"]], "sympy.polys.domains.domainelement": [[202, 1, 1, "", "DomainElement"]], "sympy.polys.domains.domainelement.DomainElement": [[202, 2, 1, "", "parent"]], "sympy.polys.domains.expressiondomain.ExpressionDomain": [[202, 1, 1, "", "Expression"]], "sympy.polys.domains.field": [[202, 1, 1, "", "Field"]], "sympy.polys.domains.field.Field": [[202, 2, 1, "", "div"], [202, 2, 1, "", "exquo"], [202, 2, 1, "", "gcd"], [202, 2, 1, "", "get_field"], [202, 2, 1, "", "get_ring"], [202, 2, 1, "", "is_unit"], [202, 2, 1, "", "lcm"], [202, 2, 1, "", "quo"], [202, 2, 1, "", "rem"], [202, 2, 1, "", "revert"]], "sympy.polys.domains.gaussiandomains": [[202, 1, 1, "", "GaussianDomain"], [202, 1, 1, "", "GaussianElement"], [202, 1, 1, "", "GaussianInteger"], [202, 1, 1, "", "GaussianIntegerRing"], [202, 1, 1, "", "GaussianRational"], [202, 1, 1, "", "GaussianRationalField"]], "sympy.polys.domains.gaussiandomains.GaussianDomain": [[202, 2, 1, "", "from_AlgebraicField"], [202, 2, 1, "", "from_QQ"], [202, 2, 1, "", "from_QQ_gmpy"], [202, 2, 1, "", "from_QQ_python"], [202, 2, 1, "", "from_ZZ"], [202, 2, 1, "", "from_ZZ_gmpy"], [202, 2, 1, "", "from_ZZ_python"], [202, 2, 1, "", "from_sympy"], [202, 2, 1, "", "inject"], [202, 2, 1, "", "is_negative"], [202, 2, 1, "", "is_nonnegative"], [202, 2, 1, "", "is_nonpositive"], [202, 2, 1, "", "is_positive"], [202, 2, 1, "", "to_sympy"]], "sympy.polys.domains.gaussiandomains.GaussianElement": [[202, 2, 1, "", "new"], [202, 2, 1, "", "parent"], [202, 2, 1, "", "quadrant"]], "sympy.polys.domains.gaussiandomains.GaussianIntegerRing": [[202, 5, 1, "", "dtype"], [202, 2, 1, "", "from_GaussianIntegerRing"], [202, 2, 1, "", "from_GaussianRationalField"], [202, 2, 1, "", "gcd"], [202, 2, 1, "", "get_field"], [202, 2, 1, "", "get_ring"], [202, 2, 1, "", "lcm"], [202, 2, 1, "", "normalize"]], "sympy.polys.domains.gaussiandomains.GaussianRationalField": [[202, 2, 1, "", "as_AlgebraicField"], [202, 2, 1, "", "denom"], [202, 5, 1, "", "dtype"], [202, 2, 1, "", "from_GaussianIntegerRing"], [202, 2, 1, "", "from_GaussianRationalField"], [202, 2, 1, "", "get_field"], [202, 2, 1, "", "get_ring"], [202, 2, 1, "", "numer"]], "sympy.polys.domains.mpelements": [[202, 1, 1, "", "ComplexElement"], [202, 1, 1, "", "RealElement"]], "sympy.polys.domains.quotientring": [[202, 1, 1, "", "QuotientRing"]], "sympy.polys.domains.ring": [[202, 1, 1, "", "Ring"]], "sympy.polys.domains.ring.Ring": [[202, 2, 1, "", "denom"], [202, 2, 1, "", "div"], [202, 2, 1, "", "exquo"], [202, 2, 1, "", "free_module"], [202, 2, 1, "", "get_ring"], [202, 2, 1, "", "ideal"], [202, 2, 1, "", "invert"], [202, 2, 1, "", "numer"], [202, 2, 1, "", "quo"], [202, 2, 1, "", "quotient_ring"], [202, 2, 1, "", "rem"], [202, 2, 1, "", "revert"]], "sympy.polys.domains.simpledomain": [[202, 1, 1, "", "SimpleDomain"]], "sympy.polys.domains.simpledomain.SimpleDomain": [[202, 2, 1, "", "inject"]], "sympy.polys.euclidtools": [[204, 4, 1, "", "dmp_cancel"], [204, 4, 1, "", "dmp_content"], [204, 4, 1, "", "dmp_discriminant"], [204, 4, 1, "", "dmp_euclidean_prs"], [204, 4, 1, "", "dmp_ff_prs_gcd"], [204, 4, 1, "", "dmp_gcd"], [204, 4, 1, "", "dmp_gcdex"], [204, 4, 1, "", "dmp_half_gcdex"], [204, 4, 1, "", "dmp_inner_gcd"], [204, 4, 1, "", "dmp_inner_subresultants"], [204, 4, 1, "", "dmp_invert"], [204, 4, 1, "", "dmp_lcm"], [204, 4, 1, "", "dmp_primitive"], [204, 4, 1, "", "dmp_primitive_prs"], [204, 4, 1, "", "dmp_prs_resultant"], [204, 4, 1, "", "dmp_qq_collins_resultant"], [204, 4, 1, "", "dmp_qq_heu_gcd"], [204, 4, 1, "", "dmp_resultant"], [204, 4, 1, "", "dmp_rr_prs_gcd"], [204, 4, 1, "", "dmp_subresultants"], [204, 4, 1, "", "dmp_zz_collins_resultant"], [204, 4, 1, "", "dmp_zz_heu_gcd"], [204, 4, 1, "", "dmp_zz_modular_resultant"]], "sympy.polys.factortools": [[204, 4, 1, "", "dmp_ext_factor"], [204, 4, 1, "", "dmp_factor_list"], [204, 4, 1, "", "dmp_factor_list_include"], [204, 4, 1, "", "dmp_irreducible_p"], [204, 4, 1, "", "dmp_trial_division"], [204, 4, 1, "", "dmp_zz_diophantine"], [204, 4, 1, "", "dmp_zz_factor"], [204, 4, 1, "", "dmp_zz_mignotte_bound"], [204, 4, 1, "", "dmp_zz_wang"], [204, 4, 1, "", "dmp_zz_wang_hensel_lifting"], [204, 4, 1, "", "dmp_zz_wang_lead_coeffs"], [204, 4, 1, "", "dmp_zz_wang_non_divisors"], [204, 4, 1, "", "dmp_zz_wang_test_points"], [204, 4, 1, "", "dup_cyclotomic_p"], [204, 4, 1, "", "dup_gf_factor"], [204, 4, 1, "", "dup_zz_cyclotomic_factor"], [204, 4, 1, "", "dup_zz_cyclotomic_poly"], [204, 4, 1, "", "dup_zz_factor"], [204, 4, 1, "", "dup_zz_factor_sqf"], [204, 4, 1, "", "dup_zz_hensel_lift"], [204, 4, 1, "", "dup_zz_hensel_step"], [204, 4, 1, "", "dup_zz_irreducible_p"], [204, 4, 1, "", "dup_zz_zassenhaus"]], "sympy.polys.fglmtools": [[204, 4, 1, "", "matrix_fglm"]], "sympy.polys.fields": [[202, 1, 1, "", "FracElement"], [202, 1, 1, "", "FracField"], [202, 4, 1, "", "field"], [202, 4, 1, "", "sfield"], [202, 4, 1, "", "vfield"], [202, 4, 1, "", "xfield"]], "sympy.polys.fields.FracElement": [[202, 2, 1, "", "diff"]], "sympy.polys.galoistools": [[204, 4, 1, "", "gf_LC"], [204, 4, 1, "", "gf_Qbasis"], [204, 4, 1, "", "gf_Qmatrix"], [204, 4, 1, "", "gf_TC"], [204, 4, 1, "", "gf_add"], [204, 4, 1, "", "gf_add_ground"], [204, 4, 1, "", "gf_add_mul"], [204, 4, 1, "", "gf_berlekamp"], [204, 4, 1, "", "gf_cofactors"], [204, 4, 1, "", "gf_compose"], [204, 4, 1, "", "gf_compose_mod"], [204, 4, 1, "", "gf_crt"], [204, 4, 1, "", "gf_crt1"], [204, 4, 1, "", "gf_crt2"], [204, 4, 1, "", "gf_csolve"], [204, 4, 1, "", "gf_degree"], [204, 4, 1, "", "gf_diff"], [204, 4, 1, "", "gf_div"], [204, 4, 1, "", "gf_eval"], [204, 4, 1, "", "gf_expand"], [204, 4, 1, "", "gf_exquo"], [204, 4, 1, "", "gf_factor"], [204, 4, 1, "", "gf_factor_sqf"], [204, 4, 1, "", "gf_from_dict"], [204, 4, 1, "", "gf_from_int_poly"], [204, 4, 1, "", "gf_gcd"], [204, 4, 1, "", "gf_gcdex"], [204, 4, 1, "", "gf_int"], [204, 4, 1, "", "gf_irreducible"], [204, 4, 1, "", "gf_irreducible_p"], [204, 4, 1, "", "gf_lcm"], [204, 4, 1, "", "gf_lshift"], [204, 4, 1, "", "gf_monic"], [204, 4, 1, "", "gf_mul"], [204, 4, 1, "", "gf_mul_ground"], [204, 4, 1, "", "gf_multi_eval"], [204, 4, 1, "", "gf_neg"], [204, 4, 1, "", "gf_normal"], [204, 4, 1, "", "gf_pow"], [204, 4, 1, "", "gf_pow_mod"], [204, 4, 1, "", "gf_quo"], [204, 4, 1, "", "gf_quo_ground"], [204, 4, 1, "", "gf_random"], [204, 4, 1, "", "gf_rem"], [204, 4, 1, "", "gf_rshift"], [204, 4, 1, "", "gf_shoup"], [204, 4, 1, "", "gf_sqf_list"], [204, 4, 1, "", "gf_sqf_p"], [204, 4, 1, "", "gf_sqf_part"], [204, 4, 1, "", "gf_sqr"], [204, 4, 1, "", "gf_strip"], [204, 4, 1, "", "gf_sub"], [204, 4, 1, "", "gf_sub_ground"], [204, 4, 1, "", "gf_sub_mul"], [204, 4, 1, "", "gf_to_dict"], [204, 4, 1, "", "gf_to_int_poly"], [204, 4, 1, "", "gf_trace_map"], [204, 4, 1, "", "gf_trunc"], [204, 4, 1, "", "gf_value"], [204, 4, 1, "", "gf_zassenhaus"]], "sympy.polys.groebnertools": [[204, 4, 1, "", "groebner"], [204, 4, 1, "", "is_groebner"], [204, 4, 1, "", "is_minimal"], [204, 4, 1, "", "is_reduced"], [204, 4, 1, "", "red_groebner"], [204, 4, 1, "", "spoly"]], "sympy.polys.matrices.ddm": [[200, 1, 1, "", "DDM"]], "sympy.polys.matrices.ddm.DDM": [[200, 2, 1, "", "add"], [200, 2, 1, "", "charpoly"], [200, 2, 1, "", "det"], [200, 2, 1, "", "hstack"], [200, 2, 1, "", "inv"], [200, 2, 1, "", "is_lower"], [200, 2, 1, "", "is_upper"], [200, 2, 1, "", "is_zero_matrix"], [200, 2, 1, "", "lu"], [200, 2, 1, "", "lu_solve"], [200, 2, 1, "", "matmul"], [200, 2, 1, "", "neg"], [200, 2, 1, "", "rref"], [200, 2, 1, "", "scc"], [200, 2, 1, "", "sub"], [200, 2, 1, "", "vstack"]], "sympy.polys.matrices.domainmatrix": [[200, 1, 1, "", "DomainMatrix"]], "sympy.polys.matrices.domainmatrix.DomainMatrix": [[200, 2, 1, "", "add"], [200, 2, 1, "", "charpoly"], [200, 2, 1, "", "columnspace"], [200, 2, 1, "", "convert_to"], [200, 2, 1, "", "det"], [200, 2, 1, "", "diag"], [200, 2, 1, "", "eye"], [200, 2, 1, "", "from_Matrix"], [200, 2, 1, "", "from_dict_sympy"], [200, 2, 1, "", "from_list"], [200, 2, 1, "", "from_list_sympy"], [200, 2, 1, "", "from_rep"], [200, 2, 1, "", "hstack"], [200, 2, 1, "", "inv"], [200, 3, 1, "", "is_lower"], [200, 3, 1, "", "is_upper"], [200, 2, 1, "", "lll"], [200, 2, 1, "", "lll_transform"], [200, 2, 1, "", "lu"], [200, 2, 1, "", "lu_solve"], [200, 2, 1, "", "matmul"], [200, 2, 1, "", "mul"], [200, 2, 1, "", "neg"], [200, 2, 1, "", "nullspace"], [200, 2, 1, "", "ones"], [200, 2, 1, "", "pow"], [200, 2, 1, "", "rowspace"], [200, 2, 1, "", "rref"], [200, 2, 1, "", "scc"], [200, 2, 1, "", "sub"], [200, 2, 1, "", "to_Matrix"], [200, 2, 1, "", "to_dense"], [200, 2, 1, "", "to_field"], [200, 2, 1, "", "to_sparse"], [200, 2, 1, "", "transpose"], [200, 2, 1, "", "unify"], [200, 2, 1, "", "vstack"], [200, 2, 1, "", "zeros"]], "sympy.polys.matrices.normalforms": [[200, 4, 1, "", "hermite_normal_form"], [200, 4, 1, "", "smith_normal_form"]], "sympy.polys.matrices.sdm": [[200, 1, 1, "", "SDM"]], "sympy.polys.matrices.sdm.SDM": [[200, 2, 1, "", "add"], [200, 2, 1, "", "charpoly"], [200, 2, 1, "", "convert_to"], [200, 2, 1, "", "copy"], [200, 2, 1, "", "det"], [200, 2, 1, "", "eye"], [200, 2, 1, "", "from_ddm"], [200, 2, 1, "", "from_list"], [200, 2, 1, "", "hstack"], [200, 2, 1, "", "inv"], [200, 2, 1, "", "is_lower"], [200, 2, 1, "", "is_upper"], [200, 2, 1, "", "is_zero_matrix"], [200, 2, 1, "", "lu"], [200, 2, 1, "", "lu_solve"], [200, 2, 1, "", "matmul"], [200, 2, 1, "", "mul"], [200, 2, 1, "", "neg"], [200, 2, 1, "", "new"], [200, 2, 1, "", "nullspace"], [200, 2, 1, "", "rref"], [200, 2, 1, "", "scc"], [200, 2, 1, "", "sub"], [200, 2, 1, "", "to_ddm"], [200, 2, 1, "", "to_list"], [200, 2, 1, "", "transpose"], [200, 2, 1, "", "vstack"], [200, 2, 1, "", "zeros"]], "sympy.polys.modulargcd": [[204, 4, 1, "", "_modgcd_multivariate_p"], [204, 4, 1, "", "func_field_modgcd"], [204, 4, 1, "", "modgcd_bivariate"], [204, 4, 1, "", "modgcd_multivariate"], [204, 4, 1, "", "modgcd_univariate"]], "sympy.polys.monomials": [[207, 1, 1, "", "Monomial"], [207, 4, 1, "", "itermonomials"], [207, 4, 1, "", "monomial_count"]], "sympy.polys.monomials.Monomial": [[207, 2, 1, "", "as_expr"], [207, 2, 1, "", "gcd"], [207, 2, 1, "", "lcm"]], "sympy.polys.numberfields": [[206, 0, 0, "-", "modules"], [206, 0, 0, "-", "subfield"]], "sympy.polys.numberfields.basis": [[206, 4, 1, "", "round_two"]], "sympy.polys.numberfields.galoisgroups": [[206, 4, 1, "", "galois_group"]], "sympy.polys.numberfields.minpoly": [[206, 4, 1, "", "minimal_polynomial"], [206, 4, 1, "", "minpoly"]], "sympy.polys.numberfields.modules": [[206, 1, 1, "", "EndomorphismRing"], [206, 1, 1, "", "InnerEndomorphism"], [206, 1, 1, "", "Module"], [206, 1, 1, "", "ModuleElement"], [206, 1, 1, "", "ModuleEndomorphism"], [206, 1, 1, "", "ModuleHomomorphism"], [206, 1, 1, "", "PowerBasis"], [206, 1, 1, "", "PowerBasisElement"], [206, 1, 1, "", "Submodule"], [206, 4, 1, "", "find_min_poly"], [206, 4, 1, "", "make_mod_elt"]], "sympy.polys.numberfields.modules.EndomorphismRing": [[206, 2, 1, "", "__init__"], [206, 2, 1, "", "inner_endomorphism"], [206, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.InnerEndomorphism": [[206, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.Module": [[206, 2, 1, "", "__call__"], [206, 2, 1, "", "ancestors"], [206, 2, 1, "", "basis_elements"], [206, 2, 1, "", "element_from_rational"], [206, 2, 1, "", "endomorphism_ring"], [206, 2, 1, "", "is_compat_col"], [206, 2, 1, "", "mult_tab"], [206, 3, 1, "", "n"], [206, 2, 1, "", "nearest_common_ancestor"], [206, 3, 1, "", "number_field"], [206, 2, 1, "", "one"], [206, 3, 1, "", "parent"], [206, 2, 1, "", "power_basis_ancestor"], [206, 2, 1, "", "represent"], [206, 2, 1, "", "starts_with_unity"], [206, 2, 1, "", "submodule_from_gens"], [206, 2, 1, "", "submodule_from_matrix"], [206, 2, 1, "", "whole_submodule"], [206, 2, 1, "", "zero"]], "sympy.polys.numberfields.modules.ModuleElement": [[206, 3, 1, "", "QQ_col"], [206, 2, 1, "", "__add__"], [206, 2, 1, "", "__init__"], [206, 2, 1, "", "__mod__"], [206, 2, 1, "", "__mul__"], [206, 2, 1, "", "column"], [206, 2, 1, "", "equiv"], [206, 2, 1, "", "from_int_list"], [206, 2, 1, "", "is_compat"], [206, 3, 1, "", "n"], [206, 2, 1, "", "over_power_basis"], [206, 2, 1, "", "reduced"], [206, 2, 1, "", "reduced_mod_p"], [206, 2, 1, "", "to_ancestor"], [206, 2, 1, "", "to_parent"], [206, 2, 1, "", "unify"]], "sympy.polys.numberfields.modules.ModuleEndomorphism": [[206, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.ModuleHomomorphism": [[206, 2, 1, "", "__init__"], [206, 2, 1, "", "kernel"], [206, 2, 1, "", "matrix"]], "sympy.polys.numberfields.modules.PowerBasis": [[206, 2, 1, "", "__init__"], [206, 2, 1, "", "element_from_ANP"], [206, 2, 1, "", "element_from_alg_num"], [206, 2, 1, "", "element_from_poly"], [206, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.PowerBasisElement": [[206, 3, 1, "", "T"], [206, 2, 1, "", "as_expr"], [206, 3, 1, "", "generator"], [206, 3, 1, "", "is_rational"], [206, 2, 1, "", "norm"], [206, 2, 1, "", "numerator"], [206, 2, 1, "", "poly"], [206, 2, 1, "", "to_ANP"], [206, 2, 1, "", "to_alg_num"]], "sympy.polys.numberfields.modules.Submodule": [[206, 3, 1, "", "QQ_matrix"], [206, 2, 1, "", "__init__"], [206, 2, 1, "", "add"], [206, 2, 1, "", "basis_element_pullbacks"], [206, 2, 1, "", "discard_before"], [206, 2, 1, "", "mul"], [206, 2, 1, "", "reduce_element"], [206, 2, 1, "", "reduced"], [206, 2, 1, "", "represent"]], "sympy.polys.numberfields.primes": [[206, 1, 1, "", "PrimeIdeal"], [206, 4, 1, "", "prime_decomp"], [206, 4, 1, "", "prime_valuation"]], "sympy.polys.numberfields.primes.PrimeIdeal": [[206, 2, 1, "", "__add__"], [206, 2, 1, "", "__init__"], [206, 2, 1, "", "__mul__"], [206, 2, 1, "", "as_submodule"], [206, 3, 1, "", "is_inert"], [206, 2, 1, "", "reduce_ANP"], [206, 2, 1, "", "reduce_alg_num"], [206, 2, 1, "", "reduce_element"], [206, 2, 1, "", "repr"], [206, 2, 1, "", "test_factor"], [206, 2, 1, "", "valuation"]], "sympy.polys.numberfields.subfield": [[206, 4, 1, "", "field_isomorphism"], [206, 4, 1, "", "primitive_element"], [206, 4, 1, "", "to_number_field"]], "sympy.polys.numberfields.utilities": [[206, 1, 1, "", "AlgIntPowers"], [206, 4, 1, "", "coeff_search"], [206, 4, 1, "", "extract_fundamental_discriminant"], [206, 4, 1, "", "get_num_denom"], [206, 4, 1, "", "is_int"], [206, 4, 1, "", "is_rat"], [206, 4, 1, "", "isolate"], [206, 4, 1, "", "supplement_a_subspace"]], "sympy.polys.numberfields.utilities.AlgIntPowers": [[206, 2, 1, "", "__init__"]], "sympy.polys.orderings": [[207, 1, 1, "", "GradedLexOrder"], [207, 1, 1, "", "LexOrder"], [207, 1, 1, "", "MonomialOrder"], [207, 1, 1, "", "ReversedGradedLexOrder"]], "sympy.polys.orthopolys": [[207, 4, 1, "", "chebyshevt_poly"], [207, 4, 1, "", "chebyshevu_poly"], [207, 4, 1, "", "gegenbauer_poly"], [207, 4, 1, "", "hermite_poly"], [207, 4, 1, "", "hermite_prob_poly"], [207, 4, 1, "", "jacobi_poly"], [207, 4, 1, "", "laguerre_poly"], [207, 4, 1, "", "legendre_poly"], [207, 4, 1, "", "spherical_bessel_fn"]], "sympy.polys.partfrac": [[207, 4, 1, "", "apart"], [207, 4, 1, "", "apart_list"], [207, 4, 1, "", "assemble_partfrac_list"]], "sympy.polys.polyclasses": [[202, 1, 1, "", "ANP"], [202, 1, 1, "", "DMF"], [202, 1, 1, "", "DMP"]], "sympy.polys.polyclasses.ANP": [[202, 2, 1, "", "LC"], [202, 2, 1, "", "TC"], [202, 3, 1, "", "is_ground"], [202, 3, 1, "", "is_one"], [202, 3, 1, "", "is_zero"], [202, 2, 1, "", "pow"], [202, 2, 1, "", "to_dict"], [202, 2, 1, "", "to_list"], [202, 2, 1, "", "to_sympy_dict"], [202, 2, 1, "", "to_sympy_list"], [202, 2, 1, "", "to_tuple"], [202, 2, 1, "", "unify"]], "sympy.polys.polyclasses.DMF": [[202, 2, 1, "", "add"], [202, 2, 1, "", "cancel"], [202, 2, 1, "", "denom"], [202, 2, 1, "", "exquo"], [202, 2, 1, "", "frac_unify"], [202, 2, 1, "", "half_per"], [202, 2, 1, "", "invert"], [202, 3, 1, "", "is_one"], [202, 3, 1, "", "is_zero"], [202, 2, 1, "", "mul"], [202, 2, 1, "", "neg"], [202, 2, 1, "", "numer"], [202, 2, 1, "", "per"], [202, 2, 1, "", "poly_unify"], [202, 2, 1, "", "pow"], [202, 2, 1, "", "quo"], [202, 2, 1, "", "sub"]], "sympy.polys.polyclasses.DMP": [[202, 2, 1, "", "LC"], [202, 2, 1, "", "TC"], [202, 2, 1, "", "abs"], [202, 2, 1, "", "add"], [202, 2, 1, "", "add_ground"], [202, 2, 1, "", "all_coeffs"], [202, 2, 1, "", "all_monoms"], [202, 2, 1, "", "all_terms"], [202, 2, 1, "", "cancel"], [202, 2, 1, "", "cauchy_lower_bound"], [202, 2, 1, "", "cauchy_upper_bound"], [202, 2, 1, "", "clear_denoms"], [202, 2, 1, "", "coeffs"], [202, 2, 1, "", "cofactors"], [202, 2, 1, "", "compose"], [202, 2, 1, "", "content"], [202, 2, 1, "", "convert"], [202, 2, 1, "", "count_complex_roots"], [202, 2, 1, "", "count_real_roots"], [202, 2, 1, "", "decompose"], [202, 2, 1, "", "deflate"], [202, 2, 1, "", "degree"], [202, 2, 1, "", "degree_list"], [202, 2, 1, "", "diff"], [202, 2, 1, "", "discriminant"], [202, 2, 1, "", "div"], [202, 2, 1, "", "eject"], [202, 2, 1, "", "eval"], [202, 2, 1, "", "exclude"], [202, 2, 1, "", "exquo"], [202, 2, 1, "", "exquo_ground"], [202, 2, 1, "", "factor_list"], [202, 2, 1, "", "factor_list_include"], [202, 2, 1, "", "from_dict"], [202, 2, 1, "", "from_list"], [202, 2, 1, "", "from_sympy_list"], [202, 2, 1, "", "gcd"], [202, 2, 1, "", "gcdex"], [202, 2, 1, "", "gff_list"], [202, 2, 1, "", "half_gcdex"], [202, 2, 1, "", "homogeneous_order"], [202, 2, 1, "", "homogenize"], [202, 2, 1, "", "inject"], [202, 2, 1, "", "integrate"], [202, 2, 1, "", "intervals"], [202, 2, 1, "", "invert"], [202, 3, 1, "", "is_cyclotomic"], [202, 3, 1, "", "is_ground"], [202, 3, 1, "", "is_homogeneous"], [202, 3, 1, "", "is_irreducible"], [202, 3, 1, "", "is_linear"], [202, 3, 1, "", "is_monic"], [202, 3, 1, "", "is_monomial"], [202, 3, 1, "", "is_one"], [202, 3, 1, "", "is_primitive"], [202, 3, 1, "", "is_quadratic"], [202, 3, 1, "", "is_sqf"], [202, 3, 1, "", "is_zero"], [202, 2, 1, "", "l1_norm"], [202, 2, 1, "", "l2_norm_squared"], [202, 2, 1, "", "lcm"], [202, 2, 1, "", "lift"], [202, 2, 1, "", "max_norm"], [202, 2, 1, "", "mignotte_sep_bound_squared"], [202, 2, 1, "", "monic"], [202, 2, 1, "", "monoms"], [202, 2, 1, "", "mul"], [202, 2, 1, "", "mul_ground"], [202, 2, 1, "", "neg"], [202, 2, 1, "", "norm"], [202, 2, 1, "", "nth"], [202, 2, 1, "", "pdiv"], [202, 2, 1, "", "per"], [202, 2, 1, "", "permute"], [202, 2, 1, "", "pexquo"], [202, 2, 1, "", "pow"], [202, 2, 1, "", "pquo"], [202, 2, 1, "", "prem"], [202, 2, 1, "", "primitive"], [202, 2, 1, "", "quo"], [202, 2, 1, "", "quo_ground"], [202, 2, 1, "", "refine_root"], [202, 2, 1, "", "rem"], [202, 2, 1, "", "resultant"], [202, 2, 1, "", "revert"], [202, 2, 1, "", "shift"], [202, 2, 1, "", "slice"], [202, 2, 1, "", "sqf_list"], [202, 2, 1, "", "sqf_list_include"], [202, 2, 1, "", "sqf_norm"], [202, 2, 1, "", "sqf_part"], [202, 2, 1, "", "sqr"], [202, 2, 1, "", "sturm"], [202, 2, 1, "", "sub"], [202, 2, 1, "", "sub_ground"], [202, 2, 1, "", "subresultants"], [202, 2, 1, "", "terms"], [202, 2, 1, "", "terms_gcd"], [202, 2, 1, "", "to_dict"], [202, 2, 1, "", "to_exact"], [202, 2, 1, "", "to_field"], [202, 2, 1, "", "to_list"], [202, 2, 1, "", "to_ring"], [202, 2, 1, "", "to_sympy_dict"], [202, 2, 1, "", "to_sympy_list"], [202, 2, 1, "", "to_tuple"], [202, 2, 1, "", "total_degree"], [202, 2, 1, "", "transform"], [202, 2, 1, "", "trunc"], [202, 2, 1, "", "unify"]], "sympy.polys.polyconfig": [[204, 4, 1, "", "setup"]], "sympy.polys.polyerrors": [[204, 1, 1, "", "BasePolynomialError"], [204, 1, 1, "", "CoercionFailed"], [204, 1, 1, "", "ComputationFailed"], [204, 1, 1, "", "DomainError"], [204, 1, 1, "", "EvaluationFailed"], [204, 1, 1, "", "ExactQuotientFailed"], [204, 1, 1, "", "ExtraneousFactors"], [204, 1, 1, "", "FlagError"], [204, 1, 1, "", "GeneratorsError"], [204, 1, 1, "", "GeneratorsNeeded"], [204, 1, 1, "", "HeuristicGCDFailed"], [204, 1, 1, "", "HomomorphismFailed"], [204, 1, 1, "", "IsomorphismFailed"], [204, 1, 1, "", "MultivariatePolynomialError"], [204, 1, 1, "", "NotAlgebraic"], [204, 1, 1, "", "NotInvertible"], [204, 1, 1, "", "NotReversible"], [204, 1, 1, "", "OperationNotSupported"], [204, 1, 1, "", "OptionError"], [204, 1, 1, "", "PolificationFailed"], [204, 1, 1, "", "PolynomialError"], [204, 1, 1, "", "RefinementFailed"], [204, 1, 1, "", "UnificationFailed"], [204, 1, 1, "", "UnivariatePolynomialError"]], "sympy.polys.polyfuncs": [[207, 4, 1, "", "horner"], [207, 4, 1, "", "interpolate"], [207, 4, 1, "", "symmetrize"], [207, 4, 1, "", "viete"]], "sympy.polys.polyoptions": [[204, 1, 1, "", "Options"], [204, 4, 1, "", "build_options"]], "sympy.polys.polyoptions.Options": [[204, 2, 1, "", "clone"]], "sympy.polys.polyroots": [[207, 4, 1, "", "roots"]], "sympy.polys.polytools": [[207, 1, 1, "", "GroebnerBasis"], [207, 4, 1, "", "LC"], [207, 4, 1, "", "LM"], [207, 4, 1, "", "LT"], [207, 1, 1, "", "Poly"], [207, 1, 1, "", "PurePoly"], [207, 4, 1, "", "cancel"], [207, 4, 1, "", "cofactors"], [207, 4, 1, "", "compose"], [207, 4, 1, "", "content"], [207, 4, 1, "", "count_roots"], [207, 4, 1, "", "decompose"], [207, 4, 1, "", "degree"], [207, 4, 1, "", "degree_list"], [207, 4, 1, "", "discriminant"], [207, 4, 1, "", "div"], [207, 4, 1, "", "exquo"], [207, 4, 1, "", "factor"], [207, 4, 1, "", "factor_list"], [207, 4, 1, "", "gcd"], [207, 4, 1, "", "gcd_list"], [207, 4, 1, "", "gcdex"], [207, 4, 1, "", "gff"], [207, 4, 1, "", "gff_list"], [207, 4, 1, "", "groebner"], [207, 4, 1, "", "ground_roots"], [207, 4, 1, "", "half_gcdex"], [207, 4, 1, "", "intervals"], [207, 4, 1, "", "invert"], [207, 4, 1, "", "is_zero_dimensional"], [207, 4, 1, "", "lcm"], [207, 4, 1, "", "lcm_list"], [207, 4, 1, "", "monic"], [207, 4, 1, "", "nroots"], [207, 4, 1, "", "nth_power_roots_poly"], [207, 4, 1, "", "parallel_poly_from_expr"], [207, 4, 1, "", "pdiv"], [207, 4, 1, "", "pexquo"], [207, 4, 1, "", "poly"], [207, 4, 1, "", "poly_from_expr"], [207, 4, 1, "", "pquo"], [207, 4, 1, "", "prem"], [207, 4, 1, "", "primitive"], [207, 4, 1, "", "quo"], [207, 4, 1, "", "real_roots"], [207, 4, 1, "", "reduced"], [207, 4, 1, "", "refine_root"], [207, 4, 1, "", "rem"], [207, 4, 1, "", "resultant"], [207, 4, 1, "", "sqf"], [207, 4, 1, "", "sqf_list"], [207, 4, 1, "", "sqf_norm"], [207, 4, 1, "", "sqf_part"], [207, 4, 1, "", "sturm"], [207, 4, 1, "", "subresultants"], [207, 4, 1, "", "terms_gcd"], [207, 4, 1, "", "trunc"]], "sympy.polys.polytools.GroebnerBasis": [[207, 2, 1, "", "contains"], [207, 2, 1, "", "fglm"], [207, 3, 1, "", "is_zero_dimensional"], [207, 2, 1, "", "reduce"]], "sympy.polys.polytools.Poly": [[207, 2, 1, "", "EC"], [207, 2, 1, "", "EM"], [207, 2, 1, "", "ET"], [207, 2, 1, "", "LC"], [207, 2, 1, "", "LM"], [207, 2, 1, "", "LT"], [207, 2, 1, "", "TC"], [207, 2, 1, "", "abs"], [207, 2, 1, "", "add"], [207, 2, 1, "", "add_ground"], [207, 2, 1, "", "all_coeffs"], [207, 2, 1, "", "all_monoms"], [207, 2, 1, "", "all_roots"], [207, 2, 1, "", "all_terms"], [207, 2, 1, "", "as_dict"], [207, 2, 1, "", "as_expr"], [207, 2, 1, "", "as_list"], [207, 2, 1, "", "as_poly"], [207, 2, 1, "", "cancel"], [207, 2, 1, "", "clear_denoms"], [207, 2, 1, "", "coeff_monomial"], [207, 2, 1, "", "coeffs"], [207, 2, 1, "", "cofactors"], [207, 2, 1, "", "compose"], [207, 2, 1, "", "content"], [207, 2, 1, "", "count_roots"], [207, 2, 1, "", "decompose"], [207, 2, 1, "", "deflate"], [207, 2, 1, "", "degree"], [207, 2, 1, "", "degree_list"], [207, 2, 1, "", "diff"], [207, 2, 1, "", "discriminant"], [207, 2, 1, "", "dispersion"], [207, 2, 1, "", "dispersionset"], [207, 2, 1, "", "div"], [207, 3, 1, "", "domain"], [207, 2, 1, "", "eject"], [207, 2, 1, "", "eval"], [207, 2, 1, "", "exclude"], [207, 2, 1, "", "exquo"], [207, 2, 1, "", "exquo_ground"], [207, 2, 1, "", "factor_list"], [207, 2, 1, "", "factor_list_include"], [207, 3, 1, "", "free_symbols"], [207, 3, 1, "", "free_symbols_in_domain"], [207, 2, 1, "", "from_dict"], [207, 2, 1, "", "from_expr"], [207, 2, 1, "", "from_list"], [207, 2, 1, "", "from_poly"], [207, 2, 1, "", "galois_group"], [207, 2, 1, "", "gcd"], [207, 2, 1, "", "gcdex"], [207, 3, 1, "", "gen"], [207, 2, 1, "", "get_domain"], [207, 2, 1, "", "get_modulus"], [207, 2, 1, "", "gff_list"], [207, 2, 1, "", "ground_roots"], [207, 2, 1, "", "half_gcdex"], [207, 2, 1, "", "has_only_gens"], [207, 2, 1, "", "homogeneous_order"], [207, 2, 1, "", "homogenize"], [207, 2, 1, "", "inject"], [207, 2, 1, "", "integrate"], [207, 2, 1, "", "intervals"], [207, 2, 1, "", "invert"], [207, 3, 1, "", "is_cyclotomic"], [207, 3, 1, "", "is_ground"], [207, 3, 1, "", "is_homogeneous"], [207, 3, 1, "", "is_irreducible"], [207, 3, 1, "", "is_linear"], [207, 3, 1, "", "is_monic"], [207, 3, 1, "", "is_monomial"], [207, 3, 1, "", "is_multivariate"], [207, 3, 1, "", "is_one"], [207, 3, 1, "", "is_primitive"], [207, 3, 1, "", "is_quadratic"], [207, 3, 1, "", "is_sqf"], [207, 3, 1, "", "is_univariate"], [207, 3, 1, "", "is_zero"], [207, 2, 1, "", "l1_norm"], [207, 2, 1, "", "lcm"], [207, 2, 1, "", "length"], [207, 2, 1, "", "lift"], [207, 2, 1, "", "ltrim"], [207, 2, 1, "", "make_monic_over_integers_by_scaling_roots"], [207, 2, 1, "", "match"], [207, 2, 1, "", "max_norm"], [207, 2, 1, "", "monic"], [207, 2, 1, "", "monoms"], [207, 2, 1, "", "mul"], [207, 2, 1, "", "mul_ground"], [207, 2, 1, "", "neg"], [207, 2, 1, "", "new"], [207, 2, 1, "", "norm"], [207, 2, 1, "", "nroots"], [207, 2, 1, "", "nth"], [207, 2, 1, "", "nth_power_roots_poly"], [207, 3, 1, "", "one"], [207, 2, 1, "", "pdiv"], [207, 2, 1, "", "per"], [207, 2, 1, "", "pexquo"], [207, 2, 1, "", "pow"], [207, 2, 1, "", "pquo"], [207, 2, 1, "", "prem"], [207, 2, 1, "", "primitive"], [207, 2, 1, "", "quo"], [207, 2, 1, "", "quo_ground"], [207, 2, 1, "", "rat_clear_denoms"], [207, 2, 1, "", "real_roots"], [207, 2, 1, "", "refine_root"], [207, 2, 1, "", "rem"], [207, 2, 1, "", "reorder"], [207, 2, 1, "", "replace"], [207, 2, 1, "", "resultant"], [207, 2, 1, "", "retract"], [207, 2, 1, "", "revert"], [207, 2, 1, "", "root"], [207, 2, 1, "", "same_root"], [207, 2, 1, "", "set_domain"], [207, 2, 1, "", "set_modulus"], [207, 2, 1, "", "shift"], [207, 2, 1, "", "slice"], [207, 2, 1, "", "sqf_list"], [207, 2, 1, "", "sqf_list_include"], [207, 2, 1, "", "sqf_norm"], [207, 2, 1, "", "sqf_part"], [207, 2, 1, "", "sqr"], [207, 2, 1, "", "sturm"], [207, 2, 1, "", "sub"], [207, 2, 1, "", "sub_ground"], [207, 2, 1, "", "subresultants"], [207, 2, 1, "", "terms"], [207, 2, 1, "", "terms_gcd"], [207, 2, 1, "", "termwise"], [207, 2, 1, "", "to_exact"], [207, 2, 1, "", "to_field"], [207, 2, 1, "", "to_ring"], [207, 2, 1, "", "total_degree"], [207, 2, 1, "", "transform"], [207, 2, 1, "", "trunc"], [207, 2, 1, "", "unify"], [207, 3, 1, "", "unit"], [207, 3, 1, "", "zero"]], "sympy.polys.polytools.PurePoly": [[207, 3, 1, "", "free_symbols"]], "sympy.polys.rationaltools": [[207, 4, 1, "", "together"]], "sympy.polys.ring_series": [[208, 4, 1, "", "_tan1"], [208, 4, 1, "", "mul_xin"], [208, 4, 1, "", "pow_xin"], [208, 4, 1, "", "rs_LambertW"], [208, 4, 1, "", "rs_asin"], [208, 4, 1, "", "rs_atan"], [208, 4, 1, "", "rs_atanh"], [208, 4, 1, "", "rs_compose_add"], [208, 4, 1, "", "rs_cos"], [208, 4, 1, "", "rs_cos_sin"], [208, 4, 1, "", "rs_cosh"], [208, 4, 1, "", "rs_cot"], [208, 4, 1, "", "rs_diff"], [208, 4, 1, "", "rs_exp"], [208, 4, 1, "", "rs_fun"], [208, 4, 1, "", "rs_hadamard_exp"], [208, 4, 1, "", "rs_integrate"], [208, 4, 1, "", "rs_is_puiseux"], [208, 4, 1, "", "rs_log"], [208, 4, 1, "", "rs_mul"], [208, 4, 1, "", "rs_newton"], [208, 4, 1, "", "rs_nth_root"], [208, 4, 1, "", "rs_pow"], [208, 4, 1, "", "rs_puiseux"], [208, 4, 1, "", "rs_puiseux2"], [208, 4, 1, "", "rs_series_from_list"], [208, 4, 1, "", "rs_series_inversion"], [208, 4, 1, "", "rs_series_reversion"], [208, 4, 1, "", "rs_sin"], [208, 4, 1, "", "rs_sinh"], [208, 4, 1, "", "rs_square"], [208, 4, 1, "", "rs_subs"], [208, 4, 1, "", "rs_tan"], [208, 4, 1, "", "rs_tanh"], [208, 4, 1, "", "rs_trunc"]], "sympy.polys.rings": [[202, 1, 1, "", "PolyElement"], [202, 1, 1, "", "PolyRing"], [202, 4, 1, "", "ring"], [202, 4, 1, "", "sring"], [202, 4, 1, "", "vring"], [202, 4, 1, "", "xring"]], "sympy.polys.rings.PolyElement": [[202, 2, 1, "", "almosteq"], [202, 2, 1, "", "cancel"], [202, 2, 1, "", "coeff"], [202, 2, 1, "", "coeffs"], [202, 2, 1, "", "const"], [202, 2, 1, "", "content"], [202, 2, 1, "", "copy"], [202, 2, 1, "", "degree"], [202, 2, 1, "", "degrees"], [202, 2, 1, "", "diff"], [202, 2, 1, "", "div"], [202, 2, 1, "", "imul_num"], [202, 2, 1, "", "itercoeffs"], [202, 2, 1, "", "itermonoms"], [202, 2, 1, "", "iterterms"], [202, 2, 1, "", "leading_expv"], [202, 2, 1, "", "leading_monom"], [202, 2, 1, "", "leading_term"], [202, 2, 1, "", "listcoeffs"], [202, 2, 1, "", "listmonoms"], [202, 2, 1, "", "listterms"], [202, 2, 1, "", "monic"], [202, 2, 1, "", "monoms"], [202, 2, 1, "", "primitive"], [202, 2, 1, "", "square"], [202, 2, 1, "", "strip_zero"], [202, 2, 1, "", "symmetrize"], [202, 2, 1, "", "tail_degree"], [202, 2, 1, "", "tail_degrees"], [202, 2, 1, "", "terms"]], "sympy.polys.rings.PolyRing": [[202, 2, 1, "", "add"], [202, 2, 1, "", "add_gens"], [202, 2, 1, "", "compose"], [202, 2, 1, "", "drop"], [202, 2, 1, "", "drop_to_ground"], [202, 2, 1, "", "index"], [202, 2, 1, "", "monomial_basis"], [202, 2, 1, "", "mul"], [202, 2, 1, "", "symmetric_poly"]], "sympy.polys.rootoftools": [[207, 1, 1, "", "ComplexRootOf"], [207, 1, 1, "", "RootOf"], [207, 1, 1, "", "RootSum"], [207, 4, 1, "", "rootof"]], "sympy.polys.rootoftools.ComplexRootOf": [[207, 2, 1, "", "_all_roots"], [207, 2, 1, "", "_complexes_index"], [207, 2, 1, "", "_complexes_sorted"], [207, 2, 1, "", "_count_roots"], [207, 2, 1, "", "_ensure_complexes_init"], [207, 2, 1, "", "_ensure_reals_init"], [207, 2, 1, "", "_eval_evalf"], [207, 2, 1, "", "_eval_is_imaginary"], [207, 2, 1, "", "_eval_is_real"], [207, 2, 1, "", "_get_complexes"], [207, 2, 1, "", "_get_complexes_sqf"], [207, 2, 1, "", "_get_interval"], [207, 2, 1, "", "_get_reals"], [207, 2, 1, "", "_get_reals_sqf"], [207, 2, 1, "", "_get_roots"], [207, 2, 1, "", "_indexed_root"], [207, 2, 1, "", "_new"], [207, 2, 1, "", "_postprocess_root"], [207, 2, 1, "", "_preprocess_roots"], [207, 2, 1, "", "_real_roots"], [207, 2, 1, "", "_reals_index"], [207, 2, 1, "", "_reals_sorted"], [207, 2, 1, "", "_refine_complexes"], [207, 2, 1, "", "_reset"], [207, 2, 1, "", "_roots_trivial"], [207, 2, 1, "", "_set_interval"], [207, 2, 1, "", "all_roots"], [207, 2, 1, "", "clear_cache"], [207, 2, 1, "", "eval_approx"], [207, 2, 1, "", "eval_rational"], [207, 2, 1, "", "real_roots"]], "sympy.polys.rootoftools.RootSum": [[207, 2, 1, "", "new"]], "sympy.polys.solvers": [[209, 4, 1, "", "_solve_lin_sys"], [209, 4, 1, "", "_solve_lin_sys_component"], [209, 4, 1, "", "eqs_to_matrix"], [209, 4, 1, "", "solve_lin_sys"], [209, 4, 1, "", "sympy_eqs_to_ring"]], "sympy.polys.specialpolys": [[207, 4, 1, "", "cyclotomic_poly"], [207, 4, 1, "", "interpolating_poly"], [207, 4, 1, "", "random_poly"], [207, 4, 1, "", "swinnerton_dyer_poly"], [207, 4, 1, "", "symmetric_poly"]], "sympy.printing": [[211, 0, 0, "-", "aesaracode"], [211, 0, 0, "-", "c"], [211, 0, 0, "-", "codeprinter"], [211, 0, 0, "-", "conventions"], [211, 0, 0, "-", "cxx"], [211, 0, 0, "-", "fortran"], [211, 0, 0, "-", "gtk"], [211, 0, 0, "-", "jscode"], [211, 0, 0, "-", "julia"], [211, 0, 0, "-", "lambdarepr"], [211, 0, 0, "-", "latex"], [211, 0, 0, "-", "maple"], [211, 0, 0, "-", "mathematica"], [211, 0, 0, "-", "mathml"], [211, 0, 0, "-", "octave"], [211, 0, 0, "-", "precedence"], [211, 0, 0, "-", "pretty"], [211, 0, 0, "-", "preview"], [211, 0, 0, "-", "printer"], [211, 0, 0, "-", "pycode"], [211, 0, 0, "-", "python"], [211, 0, 0, "-", "rcode"], [211, 0, 0, "-", "repr"], [211, 0, 0, "-", "rust"], [211, 0, 0, "-", "smtlib"], [211, 0, 0, "-", "str"], [211, 0, 0, "-", "tree"]], "sympy.printing.aesaracode": [[211, 1, 1, "", "AesaraPrinter"], [211, 4, 1, "", "aesara_code"], [211, 4, 1, "", "aesara_function"], [211, 4, 1, "", "dim_handling"]], "sympy.printing.aesaracode.AesaraPrinter": [[211, 2, 1, "", "doprint"], [211, 5, 1, "", "printmethod"]], "sympy.printing.c": [[211, 1, 1, "", "C89CodePrinter"], [211, 1, 1, "", "C99CodePrinter"], [211, 4, 1, "", "ccode"], [211, 6, 1, "", "known_functions_C89"], [211, 6, 1, "", "known_functions_C99"], [211, 4, 1, "", "print_ccode"]], "sympy.printing.c.C89CodePrinter": [[211, 2, 1, "", "indent_code"], [211, 5, 1, "", "printmethod"]], "sympy.printing.c.C99CodePrinter": [[211, 5, 1, "", "printmethod"]], "sympy.printing.codeprinter": [[211, 7, 1, "", "AssignmentError"], [211, 1, 1, "", "CodePrinter"], [211, 4, 1, "", "cxxcode"]], "sympy.printing.codeprinter.CodePrinter": [[211, 2, 1, "", "doprint"], [211, 5, 1, "", "printmethod"]], "sympy.printing.conventions": [[211, 4, 1, "", "split_super_sub"]], "sympy.printing.cxx": [[211, 1, 1, "", "CXX11CodePrinter"], [211, 1, 1, "", "CXX98CodePrinter"]], "sympy.printing.cxx.CXX11CodePrinter": [[211, 5, 1, "", "printmethod"]], "sympy.printing.cxx.CXX98CodePrinter": [[211, 5, 1, "", "printmethod"]], "sympy.printing.dot": [[211, 4, 1, "", "dotprint"]], "sympy.printing.fortran": [[211, 1, 1, "", "FCodePrinter"], [211, 4, 1, "", "fcode"], [211, 4, 1, "", "print_fcode"]], "sympy.printing.fortran.FCodePrinter": [[211, 2, 1, "", "indent_code"], [211, 5, 1, "", "printmethod"]], "sympy.printing.gtk": [[211, 4, 1, "", "print_gtk"]], "sympy.printing.jscode": [[211, 1, 1, "", "JavascriptCodePrinter"], [211, 4, 1, "", "jscode"], [211, 6, 1, "", "known_functions"]], "sympy.printing.jscode.JavascriptCodePrinter": [[211, 2, 1, "", "indent_code"], [211, 5, 1, "", "printmethod"]], "sympy.printing.julia": [[211, 1, 1, "", "JuliaCodePrinter"], [211, 4, 1, "", "julia_code"], [211, 6, 1, "", "known_fcns_src1"], [211, 6, 1, "", "known_fcns_src2"]], "sympy.printing.julia.JuliaCodePrinter": [[211, 2, 1, "", "indent_code"], [211, 5, 1, "", "printmethod"]], "sympy.printing.lambdarepr": [[211, 1, 1, "", "LambdaPrinter"], [211, 4, 1, "", "lambdarepr"]], "sympy.printing.lambdarepr.LambdaPrinter": [[211, 5, 1, "", "printmethod"]], "sympy.printing.latex": [[211, 1, 1, "", "LatexPrinter"], [211, 6, 1, "", "accepted_latex_functions"], [211, 4, 1, "", "latex"], [211, 4, 1, "", "print_latex"]], "sympy.printing.latex.LatexPrinter": [[211, 2, 1, "", "parenthesize_super"], [211, 5, 1, "", "printmethod"]], "sympy.printing.maple": [[211, 1, 1, "", "MapleCodePrinter"], [211, 4, 1, "", "maple_code"], [211, 4, 1, "", "print_maple_code"]], "sympy.printing.maple.MapleCodePrinter": [[211, 5, 1, "", "printmethod"]], "sympy.printing.mathematica": [[211, 1, 1, "", "MCodePrinter"], [211, 6, 1, "", "known_functions"], [211, 4, 1, "", "mathematica_code"]], "sympy.printing.mathematica.MCodePrinter": [[211, 5, 1, "", "printmethod"]], "sympy.printing.mathml": [[211, 1, 1, "", "MathMLContentPrinter"], [211, 1, 1, "", "MathMLPresentationPrinter"], [211, 1, 1, "", "MathMLPrinterBase"], [211, 4, 1, "", "mathml"], [211, 4, 1, "", "print_mathml"]], "sympy.printing.mathml.MathMLContentPrinter": [[211, 2, 1, "", "mathml_tag"], [211, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPresentationPrinter": [[211, 2, 1, "", "mathml_tag"], [211, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPrinterBase": [[211, 2, 1, "", "doprint"]], "sympy.printing.octave": [[211, 1, 1, "", "OctaveCodePrinter"], [211, 6, 1, "", "known_fcns_src1"], [211, 6, 1, "", "known_fcns_src2"], [211, 4, 1, "", "octave_code"]], "sympy.printing.octave.OctaveCodePrinter": [[211, 2, 1, "", "indent_code"], [211, 5, 1, "", "printmethod"]], "sympy.printing.precedence": [[211, 6, 1, "", "PRECEDENCE"], [211, 6, 1, "", "PRECEDENCE_FUNCTIONS"], [211, 6, 1, "", "PRECEDENCE_VALUES"], [211, 4, 1, "", "precedence"]], "sympy.printing.pretty": [[211, 0, 0, "-", "pretty"], [211, 0, 0, "-", "pretty_symbology"], [211, 0, 0, "-", "stringpict"]], "sympy.printing.pretty.pretty": [[211, 1, 1, "", "PrettyPrinter"], [211, 4, 1, "", "pretty"], [211, 4, 1, "", "pretty_print"]], "sympy.printing.pretty.pretty.PrettyPrinter": [[211, 5, 1, "", "printmethod"]], "sympy.printing.pretty.pretty_symbology": [[211, 4, 1, "", "G"], [211, 4, 1, "", "U"], [211, 4, 1, "", "VF"], [211, 4, 1, "", "annotated"], [211, 6, 1, "", "atoms_table"], [211, 6, 1, "", "digit_2txt"], [211, 6, 1, "", "frac"], [211, 4, 1, "", "g"], [211, 6, 1, "", "greek_letters"], [211, 4, 1, "", "hobj"], [211, 4, 1, "", "pretty_atom"], [211, 4, 1, "", "pretty_symbol"], [211, 4, 1, "", "pretty_try_use_unicode"], [211, 4, 1, "", "pretty_use_unicode"], [211, 6, 1, "", "root"], [211, 6, 1, "", "sub"], [211, 6, 1, "", "sup"], [211, 6, 1, "", "symb_2txt"], [211, 4, 1, "", "vobj"], [211, 4, 1, "", "xobj"], [211, 4, 1, "", "xstr"], [211, 4, 1, "", "xsym"]], "sympy.printing.pretty.stringpict": [[211, 1, 1, "", "prettyForm"], [211, 1, 1, "", "stringPict"]], "sympy.printing.pretty.stringpict.prettyForm": [[211, 2, 1, "", "apply"]], "sympy.printing.pretty.stringpict.stringPict": [[211, 2, 1, "", "above"], [211, 2, 1, "", "below"], [211, 2, 1, "", "height"], [211, 2, 1, "", "left"], [211, 2, 1, "", "leftslash"], [211, 2, 1, "", "next"], [211, 2, 1, "", "parens"], [211, 2, 1, "", "render"], [211, 2, 1, "", "right"], [211, 2, 1, "", "root"], [211, 2, 1, "", "stack"], [211, 2, 1, "", "terminal_width"], [211, 2, 1, "", "width"]], "sympy.printing.preview": [[211, 4, 1, "", "preview"]], "sympy.printing.printer": [[211, 1, 1, "", "Printer"]], "sympy.printing.printer.Printer": [[211, 2, 1, "", "_print"], [211, 2, 1, "", "doprint"], [211, 5, 1, "", "printmethod"], [211, 2, 1, "", "set_global_settings"]], "sympy.printing.pycode": [[211, 1, 1, "", "MpmathPrinter"], [211, 4, 1, "", "pycode"]], "sympy.printing.rcode": [[211, 1, 1, "", "RCodePrinter"], [211, 6, 1, "", "known_functions"], [211, 4, 1, "", "print_rcode"], [211, 4, 1, "", "rcode"]], "sympy.printing.rcode.RCodePrinter": [[211, 2, 1, "", "indent_code"], [211, 5, 1, "", "printmethod"]], "sympy.printing.repr": [[211, 1, 1, "", "ReprPrinter"], [211, 4, 1, "", "srepr"]], "sympy.printing.repr.ReprPrinter": [[211, 2, 1, "", "emptyPrinter"], [211, 5, 1, "", "printmethod"], [211, 2, 1, "", "reprify"]], "sympy.printing.rust": [[211, 1, 1, "", "RustCodePrinter"], [211, 6, 1, "", "known_functions"], [211, 4, 1, "", "rust_code"]], "sympy.printing.rust.RustCodePrinter": [[211, 2, 1, "", "indent_code"], [211, 5, 1, "", "printmethod"]], "sympy.printing.smtlib": [[211, 1, 1, "", "SMTLibPrinter"], [211, 4, 1, "", "smtlib_code"]], "sympy.printing.smtlib.SMTLibPrinter": [[211, 5, 1, "", "_default_settings"], [211, 5, 1, "", "printmethod"]], "sympy.printing.str": [[211, 1, 1, "", "StrPrinter"], [211, 4, 1, "", "sstr"], [211, 4, 1, "", "sstrrepr"]], "sympy.printing.str.StrPrinter": [[211, 5, 1, "", "printmethod"]], "sympy.printing.tree": [[211, 4, 1, "", "pprint_nodes"], [211, 4, 1, "", "print_node"], [211, 4, 1, "", "print_tree"], [211, 4, 1, "", "tree"]], "sympy.series.acceleration": [[218, 4, 1, "", "richardson"], [218, 4, 1, "", "shanks"]], "sympy.series.formal": [[213, 1, 1, "", "FiniteFormalPowerSeries"], [213, 1, 1, "", "FormalPowerSeries"], [213, 1, 1, "", "FormalPowerSeriesCompose"], [213, 1, 1, "", "FormalPowerSeriesInverse"], [213, 1, 1, "", "FormalPowerSeriesProduct"], [213, 4, 1, "", "compute_fps"], [213, 4, 1, "", "exp_re"], [213, 4, 1, "", "fps"], [213, 4, 1, "", "hyper_algorithm"], [213, 4, 1, "", "hyper_re"], [213, 4, 1, "", "rational_algorithm"], [213, 4, 1, "", "rational_independent"], [213, 4, 1, "", "rsolve_hypergeometric"], [213, 4, 1, "", "simpleDE"], [213, 4, 1, "", "solve_de"]], "sympy.series.formal.FormalPowerSeries": [[213, 2, 1, "", "coeff_bell"], [213, 2, 1, "", "compose"], [213, 3, 1, "", "infinite"], [213, 2, 1, "", "integrate"], [213, 2, 1, "", "inverse"], [213, 2, 1, "", "polynomial"], [213, 2, 1, "", "product"], [213, 2, 1, "", "truncate"]], "sympy.series.formal.FormalPowerSeriesCompose": [[213, 3, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesInverse": [[213, 3, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesProduct": [[213, 3, 1, "", "function"]], "sympy.series.fourier": [[214, 1, 1, "", "FourierSeries"], [214, 4, 1, "", "fourier_series"]], "sympy.series.fourier.FourierSeries": [[214, 2, 1, "", "scale"], [214, 2, 1, "", "scalex"], [214, 2, 1, "", "shift"], [214, 2, 1, "", "shiftx"], [214, 2, 1, "", "sigma_approximation"], [214, 2, 1, "", "truncate"]], "sympy.series.gruntz": [[218, 1, 1, "", "SubsSet"], [218, 4, 1, "", "build_expression_tree"], [218, 4, 1, "", "calculate_series"], [218, 4, 1, "", "compare"], [218, 4, 1, "", "gruntz"], [218, 4, 1, "", "limitinf"], [218, 4, 1, "", "mrv"], [218, 4, 1, "", "mrv_leadterm"], [218, 4, 1, "", "mrv_max1"], [218, 4, 1, "", "mrv_max3"], [218, 4, 1, "", "rewrite"], [218, 4, 1, "", "sign"]], "sympy.series.gruntz.SubsSet": [[218, 2, 1, "", "copy"], [218, 2, 1, "", "do_subs"], [218, 2, 1, "", "meets"], [218, 2, 1, "", "union"]], "sympy.series.limits": [[218, 1, 1, "", "Limit"], [218, 4, 1, "", "limit"]], "sympy.series.limits.Limit": [[218, 2, 1, "", "doit"]], "sympy.series.limitseq": [[216, 4, 1, "", "difference_delta"], [216, 4, 1, "", "dominant"], [216, 4, 1, "", "limit_seq"]], "sympy.series.order": [[218, 1, 1, "", "Order"]], "sympy.series.order.Order": [[218, 2, 1, "", "contains"]], "sympy.series.residues": [[218, 4, 1, "", "residue"]], "sympy.series.sequences": [[217, 1, 1, "", "EmptySequence"], [217, 1, 1, "", "RecursiveSeq"], [217, 1, 1, "", "SeqAdd"], [217, 1, 1, "", "SeqBase"], [217, 1, 1, "", "SeqFormula"], [217, 1, 1, "", "SeqMul"], [217, 1, 1, "", "SeqPer"], [217, 4, 1, "", "sequence"]], "sympy.series.sequences.EmptySequence": [[217, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.RecursiveSeq": [[217, 3, 1, "", "initial"], [217, 3, 1, "", "interval"], [217, 3, 1, "", "n"], [217, 3, 1, "", "recurrence"], [217, 3, 1, "", "start"], [217, 3, 1, "", "stop"], [217, 3, 1, "", "y"], [217, 3, 1, "", "yn"]], "sympy.series.sequences.SeqAdd": [[217, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqBase": [[217, 2, 1, "", "coeff"], [217, 2, 1, "", "coeff_mul"], [217, 2, 1, "", "find_linear_recurrence"], [217, 3, 1, "", "free_symbols"], [217, 3, 1, "", "gen"], [217, 3, 1, "", "interval"], [217, 3, 1, "", "length"], [217, 3, 1, "", "start"], [217, 3, 1, "", "stop"], [217, 3, 1, "", "variables"]], "sympy.series.sequences.SeqFormula": [[217, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.SeqMul": [[217, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqPer": [[217, 2, 1, "", "coeff_mul"]], "sympy.series.series": [[218, 4, 1, "", "series"]], "sympy.sets": [[219, 0, 0, "-", "conditionset"], [219, 0, 0, "-", "fancysets"], [219, 0, 0, "-", "powerset"], [219, 0, 0, "-", "sets"]], "sympy.sets.conditionset": [[219, 1, 1, "", "ConditionSet"], [219, 1, 1, "", "Contains"], [219, 1, 1, "", "SetKind"]], "sympy.sets.fancysets": [[219, 1, 1, "", "CartesianComplexRegion"], [219, 1, 1, "", "ComplexRegion"], [219, 1, 1, "", "Complexes"], [219, 1, 1, "", "ImageSet"], [219, 1, 1, "", "Integers"], [219, 1, 1, "", "Naturals"], [219, 1, 1, "", "Naturals0"], [219, 1, 1, "", "PolarComplexRegion"], [219, 1, 1, "", "Range"], [219, 1, 1, "", "Rationals"], [219, 1, 1, "", "Reals"], [219, 4, 1, "", "normalize_theta_set"]], "sympy.sets.fancysets.ComplexRegion": [[219, 3, 1, "", "a_interval"], [219, 3, 1, "", "b_interval"], [219, 2, 1, "", "from_real"], [219, 3, 1, "", "psets"], [219, 3, 1, "", "sets"]], "sympy.sets.fancysets.Range": [[219, 2, 1, "", "as_relational"], [219, 3, 1, "", "reversed"]], "sympy.sets.powerset": [[219, 1, 1, "", "PowerSet"]], "sympy.sets.sets": [[219, 1, 1, "", "Complement"], [219, 1, 1, "", "DisjointUnion"], [219, 1, 1, "", "EmptySet"], [219, 1, 1, "", "FiniteSet"], [219, 1, 1, "", "Intersection"], [219, 1, 1, "", "Interval"], [219, 1, 1, "", "ProductSet"], [219, 1, 1, "", "Set"], [219, 1, 1, "", "SymmetricDifference"], [219, 1, 1, "", "Union"], [219, 1, 1, "", "UniversalSet"], [219, 4, 1, "", "imageset"]], "sympy.sets.sets.Complement": [[219, 2, 1, "", "as_relational"], [219, 2, 1, "", "reduce"]], "sympy.sets.sets.FiniteSet": [[219, 2, 1, "", "as_relational"]], "sympy.sets.sets.Intersection": [[219, 2, 1, "", "as_relational"]], "sympy.sets.sets.Interval": [[219, 2, 1, "", "Lopen"], [219, 2, 1, "", "Ropen"], [219, 2, 1, "", "as_relational"], [219, 3, 1, "", "end"], [219, 3, 1, "", "is_left_unbounded"], [219, 3, 1, "", "is_right_unbounded"], [219, 3, 1, "", "left_open"], [219, 2, 1, "", "open"], [219, 3, 1, "", "right_open"], [219, 3, 1, "", "start"]], "sympy.sets.sets.ProductSet": [[219, 3, 1, "", "is_iterable"]], "sympy.sets.sets.Set": [[219, 3, 1, "", "boundary"], [219, 3, 1, "", "closure"], [219, 2, 1, "", "complement"], [219, 2, 1, "", "contains"], [219, 3, 1, "", "inf"], [219, 3, 1, "", "interior"], [219, 2, 1, "", "intersect"], [219, 2, 1, "", "intersection"], [219, 3, 1, "", "is_closed"], [219, 2, 1, "", "is_disjoint"], [219, 3, 1, "", "is_open"], [219, 2, 1, "", "is_proper_subset"], [219, 2, 1, "", "is_proper_superset"], [219, 2, 1, "", "is_subset"], [219, 2, 1, "", "is_superset"], [219, 2, 1, "", "isdisjoint"], [219, 2, 1, "", "issubset"], [219, 2, 1, "", "issuperset"], [219, 3, 1, "", "kind"], [219, 3, 1, "", "measure"], [219, 2, 1, "", "powerset"], [219, 3, 1, "", "sup"], [219, 2, 1, "", "symmetric_difference"], [219, 2, 1, "", "union"]], "sympy.sets.sets.SymmetricDifference": [[219, 2, 1, "", "as_relational"]], "sympy.sets.sets.Union": [[219, 2, 1, "", "as_relational"]], "sympy.simplify": [[223, 0, 0, "-", "combsimp"], [223, 0, 0, "-", "cse_main"], [223, 0, 0, "-", "epathtools"], [223, 0, 0, "-", "hyperexpand"], [221, 0, 0, "-", "hyperexpand_doc"], [223, 0, 0, "-", "powsimp"], [223, 0, 0, "-", "radsimp"], [223, 0, 0, "-", "ratsimp"], [12, 0, 0, "-", "simplify"], [223, 0, 0, "-", "sqrtdenest"], [223, 0, 0, "-", "trigsimp"]], "sympy.simplify.combsimp": [[223, 4, 1, "", "combsimp"]], "sympy.simplify.cse_main": [[223, 4, 1, "", "cse"], [223, 4, 1, "", "opt_cse"], [223, 4, 1, "", "tree_cse"]], "sympy.simplify.epathtools": [[223, 1, 1, "", "EPath"], [223, 4, 1, "", "epath"]], "sympy.simplify.epathtools.EPath": [[223, 2, 1, "", "apply"], [223, 2, 1, "", "select"]], "sympy.simplify.fu": [[220, 4, 1, "", "TR0"], [220, 4, 1, "", "TR1"], [220, 4, 1, "", "TR10"], [220, 4, 1, "", "TR10i"], [220, 4, 1, "", "TR11"], [220, 4, 1, "", "TR111"], [220, 4, 1, "", "TR12"], [220, 4, 1, "", "TR12i"], [220, 4, 1, "", "TR13"], [220, 4, 1, "", "TR14"], [220, 4, 1, "", "TR15"], [220, 4, 1, "", "TR16"], [220, 4, 1, "", "TR2"], [220, 4, 1, "", "TR22"], [220, 4, 1, "", "TR2i"], [220, 4, 1, "", "TR3"], [220, 4, 1, "", "TR4"], [220, 4, 1, "", "TR5"], [220, 4, 1, "", "TR6"], [220, 4, 1, "", "TR7"], [220, 4, 1, "", "TR8"], [220, 4, 1, "", "TR9"], [220, 4, 1, "", "TRmorrie"], [220, 4, 1, "", "TRpower"], [220, 4, 1, "", "fu"]], "sympy.simplify.hyperexpand": [[223, 4, 1, "", "hyperexpand"]], "sympy.simplify.powsimp": [[223, 4, 1, "", "powdenest"], [223, 4, 1, "", "powsimp"]], "sympy.simplify.radsimp": [[223, 4, 1, "", "collect"], [223, 4, 1, "", "collect_const"], [223, 4, 1, "", "collect_sqrt"], [223, 4, 1, "", "fraction"], [223, 4, 1, "", "rad_rationalize"], [223, 4, 1, "", "radsimp"], [223, 4, 1, "", "rcollect"]], "sympy.simplify.ratsimp": [[223, 4, 1, "", "ratsimp"], [223, 4, 1, "", "ratsimpmodprime"]], "sympy.simplify.simplify": [[223, 4, 1, "", "besselsimp"], [223, 4, 1, "", "hypersimilar"], [223, 4, 1, "", "hypersimp"], [223, 4, 1, "", "kroneckersimp"], [223, 4, 1, "", "logcombine"], [223, 4, 1, "", "nsimplify"], [223, 4, 1, "", "nthroot"], [223, 4, 1, "", "posify"], [223, 4, 1, "", "separatevars"], [223, 4, 1, "", "simplify"]], "sympy.simplify.sqrtdenest": [[223, 4, 1, "", "sqrtdenest"]], "sympy.simplify.trigsimp": [[223, 4, 1, "", "trigsimp"]], "sympy.solvers": [[226, 0, 0, "-", "inequalities"], [227, 0, 0, "-", "ode"], [228, 0, 0, "-", "pde"], [229, 0, 0, "-", "recurr"], [230, 0, 0, "-", "solveset"]], "sympy.solvers.deutils": [[229, 4, 1, "", "ode_order"]], "sympy.solvers.diophantine.diophantine": [[224, 1, 1, "", "BinaryQuadratic"], [224, 1, 1, "", "CubicThue"], [224, 1, 1, "", "DiophantineEquationType"], [224, 1, 1, "", "DiophantineSolutionSet"], [224, 1, 1, "", "GeneralPythagorean"], [224, 1, 1, "", "GeneralSumOfEvenPowers"], [224, 1, 1, "", "GeneralSumOfSquares"], [224, 1, 1, "", "HomogeneousGeneralQuadratic"], [224, 1, 1, "", "HomogeneousTernaryQuadratic"], [224, 1, 1, "", "HomogeneousTernaryQuadraticNormal"], [224, 1, 1, "", "InhomogeneousGeneralQuadratic"], [224, 1, 1, "", "InhomogeneousTernaryQuadratic"], [224, 1, 1, "", "Linear"], [224, 4, 1, "", "PQa"], [224, 1, 1, "", "Univariate"], [224, 4, 1, "", "base_solution_linear"], [224, 4, 1, "", "classify_diop"], [224, 4, 1, "", "cornacchia"], [224, 4, 1, "", "descent"], [224, 4, 1, "", "diop_DN"], [224, 4, 1, "", "diop_bf_DN"], [224, 4, 1, "", "diop_general_pythagorean"], [224, 4, 1, "", "diop_general_sum_of_even_powers"], [224, 4, 1, "", "diop_general_sum_of_squares"], [224, 4, 1, "", "diop_linear"], [224, 4, 1, "", "diop_quadratic"], [224, 4, 1, "", "diop_solve"], [224, 4, 1, "", "diop_ternary_quadratic"], [224, 4, 1, "", "diop_ternary_quadratic_normal"], [224, 4, 1, "", "diophantine"], [224, 4, 1, "", "divisible"], [224, 4, 1, "", "equivalent"], [224, 4, 1, "", "find_DN"], [224, 4, 1, "", "gaussian_reduce"], [224, 4, 1, "", "holzer"], [224, 4, 1, "", "ldescent"], [224, 4, 1, "", "merge_solution"], [224, 4, 1, "", "parametrize_ternary_quadratic"], [224, 4, 1, "", "partition"], [224, 4, 1, "", "power_representation"], [224, 4, 1, "", "prime_as_sum_of_two_squares"], [224, 4, 1, "", "reconstruct"], [224, 4, 1, "", "sqf_normal"], [224, 4, 1, "", "square_factor"], [224, 4, 1, "", "sum_of_four_squares"], [224, 4, 1, "", "sum_of_powers"], [224, 4, 1, "", "sum_of_squares"], [224, 4, 1, "", "sum_of_three_squares"], [224, 4, 1, "", "transformation_to_DN"], [224, 4, 1, "", "transformation_to_normal"]], "sympy.solvers.diophantine.diophantine.DiophantineEquationType": [[224, 2, 1, "", "matches"]], "sympy.solvers.inequalities": [[226, 4, 1, "", "reduce_abs_inequalities"], [226, 4, 1, "", "reduce_abs_inequality"], [226, 4, 1, "", "reduce_inequalities"], [226, 4, 1, "", "reduce_rational_inequalities"], [226, 4, 1, "", "solve_poly_inequalities"], [226, 4, 1, "", "solve_poly_inequality"], [226, 4, 1, "", "solve_rational_inequalities"], [226, 4, 1, "", "solve_univariate_inequality"]], "sympy.solvers.ode": [[227, 6, 1, "", "allhints"], [227, 4, 1, "", "checkinfsol"], [227, 4, 1, "", "checkodesol"], [227, 4, 1, "", "classify_ode"], [227, 4, 1, "", "constantsimp"], [227, 4, 1, "", "dsolve"], [227, 4, 1, "", "homogeneous_order"], [227, 4, 1, "", "infinitesimals"], [227, 0, 0, "-", "ode"]], "sympy.solvers.ode.lie_group": [[227, 4, 1, "", "lie_heuristic_abaco1_product"], [227, 4, 1, "", "lie_heuristic_abaco1_simple"], [227, 4, 1, "", "lie_heuristic_abaco2_similar"], [227, 4, 1, "", "lie_heuristic_abaco2_unique_general"], [227, 4, 1, "", "lie_heuristic_abaco2_unique_unknown"], [227, 4, 1, "", "lie_heuristic_bivariate"], [227, 4, 1, "", "lie_heuristic_chi"], [227, 4, 1, "", "lie_heuristic_function_sum"], [227, 4, 1, "", "lie_heuristic_linear"]], "sympy.solvers.ode.ode": [[227, 4, 1, "", "_handle_Integral"], [227, 4, 1, "", "_linear_2eq_order1_type6"], [227, 4, 1, "", "_linear_2eq_order1_type7"], [227, 4, 1, "", "_nonlinear_2eq_order1_type1"], [227, 4, 1, "", "_nonlinear_2eq_order1_type2"], [227, 4, 1, "", "_nonlinear_2eq_order1_type3"], [227, 4, 1, "", "_nonlinear_2eq_order1_type4"], [227, 4, 1, "", "_nonlinear_2eq_order1_type5"], [227, 4, 1, "", "_nonlinear_3eq_order1_type1"], [227, 4, 1, "", "_nonlinear_3eq_order1_type2"], [227, 4, 1, "", "_nonlinear_3eq_order1_type3"], [227, 4, 1, "", "_nonlinear_3eq_order1_type4"], [227, 4, 1, "", "_nonlinear_3eq_order1_type5"], [227, 4, 1, "", "constant_renumber"], [227, 4, 1, "", "ode_1st_power_series"], [227, 4, 1, "", "ode_2nd_power_series_ordinary"], [227, 4, 1, "", "ode_2nd_power_series_regular"], [227, 4, 1, "", "ode_sol_simplicity"], [227, 4, 1, "", "odesimp"]], "sympy.solvers.ode.riccati": [[227, 4, 1, "", "compute_m_ybar"], [227, 4, 1, "", "construct_c"], [227, 4, 1, "", "construct_d"], [227, 4, 1, "", "get_gen_sol_from_part_sol"], [227, 4, 1, "", "rational_laurent_series"], [227, 4, 1, "", "remove_redundant_sols"], [227, 4, 1, "", "riccati_inverse_normal"], [227, 4, 1, "", "riccati_normal"], [227, 4, 1, "", "riccati_reduced"], [227, 4, 1, "", "solve_aux_eq"], [227, 4, 1, "", "solve_riccati"]], "sympy.solvers.ode.single": [[227, 1, 1, "", "AlmostLinear"], [227, 1, 1, "", "Bernoulli"], [227, 1, 1, "", "Factorable"], [227, 1, 1, "", "FirstExact"], [227, 1, 1, "", "FirstLinear"], [227, 1, 1, "", "HomogeneousCoeffBest"], [227, 1, 1, "", "HomogeneousCoeffSubsDepDivIndep"], [227, 1, 1, "", "HomogeneousCoeffSubsIndepDivDep"], [227, 1, 1, "", "LieGroup"], [227, 1, 1, "", "LinearCoefficients"], [227, 1, 1, "", "Liouville"], [227, 1, 1, "", "NthAlgebraic"], [227, 1, 1, "", "NthLinearConstantCoeffHomogeneous"], [227, 1, 1, "", "NthLinearConstantCoeffUndeterminedCoefficients"], [227, 1, 1, "", "NthLinearConstantCoeffVariationOfParameters"], [227, 1, 1, "", "NthLinearEulerEqHomogeneous"], [227, 1, 1, "", "NthLinearEulerEqNonhomogeneousUndeterminedCoefficients"], [227, 1, 1, "", "NthLinearEulerEqNonhomogeneousVariationOfParameters"], [227, 1, 1, "", "NthOrderReducible"], [227, 1, 1, "", "RationalRiccati"], [227, 1, 1, "", "RiccatiSpecial"], [227, 1, 1, "", "SecondHypergeometric"], [227, 1, 1, "", "SecondLinearAiry"], [227, 1, 1, "", "SecondLinearBessel"], [227, 1, 1, "", "Separable"], [227, 1, 1, "", "SeparableReduced"]], "sympy.solvers.ode.systems": [[227, 4, 1, "", "canonical_odes"], [227, 4, 1, "", "dsolve_system"], [227, 4, 1, "", "linear_ode_to_matrix"], [227, 4, 1, "", "linodesolve"], [227, 4, 1, "", "linodesolve_type"], [227, 4, 1, "", "matrix_exp"], [227, 4, 1, "", "matrix_exp_jordan_form"]], "sympy.solvers.pde": [[228, 4, 1, "", "checkpdesol"], [228, 4, 1, "", "classify_pde"], [228, 4, 1, "", "pde_1st_linear_constant_coeff"], [228, 4, 1, "", "pde_1st_linear_constant_coeff_homogeneous"], [228, 4, 1, "", "pde_1st_linear_variable_coeff"], [228, 4, 1, "", "pde_separate"], [228, 4, 1, "", "pde_separate_add"], [228, 4, 1, "", "pde_separate_mul"], [228, 4, 1, "", "pdsolve"]], "sympy.solvers.polysys": [[229, 4, 1, "", "solve_poly_system"], [229, 4, 1, "", "solve_triangulated"]], "sympy.solvers.recurr": [[229, 4, 1, "", "rsolve"], [229, 4, 1, "", "rsolve_hyper"], [229, 4, 1, "", "rsolve_poly"], [229, 4, 1, "", "rsolve_ratio"]], "sympy.solvers.solvers": [[229, 4, 1, "", "checksol"], [229, 4, 1, "", "nsolve"], [229, 4, 1, "", "solve"], [229, 4, 1, "", "solve_linear"], [229, 4, 1, "", "solve_linear_system"], [229, 4, 1, "", "solve_linear_system_LU"], [229, 4, 1, "", "solve_undetermined_coeffs"], [229, 4, 1, "", "unrad"]], "sympy.solvers.solveset": [[230, 4, 1, "", "_is_exponential"], [230, 4, 1, "", "_is_logarithmic"], [230, 4, 1, "", "_solve_exponential"], [230, 4, 1, "", "_solve_logarithm"], [230, 4, 1, "", "_transolve"], [230, 4, 1, "", "domain_check"], [230, 4, 1, "", "invert_complex"], [230, 4, 1, "", "invert_real"], [230, 4, 1, "", "linear_eq_to_matrix"], [230, 4, 1, "", "linsolve"], [230, 4, 1, "", "nonlinsolve"], [230, 4, 1, "", "solveset"], [230, 4, 1, "", "solveset_complex"], [230, 4, 1, "", "solveset_real"], [230, 4, 1, "", "solvify"]], "sympy.stats": [[231, 4, 1, "", "Arcsin"], [231, 4, 1, "", "Benini"], [231, 4, 1, "", "Bernoulli"], [231, 1, 1, "", "BernoulliProcess"], [231, 4, 1, "", "Beta"], [231, 4, 1, "", "BetaBinomial"], [231, 4, 1, "", "BetaNoncentral"], [231, 4, 1, "", "BetaPrime"], [231, 4, 1, "", "Binomial"], [231, 4, 1, "", "BoundedPareto"], [231, 4, 1, "", "Cauchy"], [231, 1, 1, "", "CentralMoment"], [231, 4, 1, "", "Chi"], [231, 4, 1, "", "ChiNoncentral"], [231, 4, 1, "", "ChiSquared"], [231, 4, 1, "", "Coin"], [231, 1, 1, "", "ContinuousMarkovChain"], [231, 4, 1, "", "ContinuousRV"], [231, 1, 1, "", "Covariance"], [231, 1, 1, "", "CrossCovarianceMatrix"], [231, 4, 1, "", "Dagum"], [231, 4, 1, "", "Die"], [231, 1, 1, "", "DiscreteMarkovChain"], [231, 4, 1, "", "DiscreteUniform"], [231, 4, 1, "", "E"], [231, 4, 1, "", "Erlang"], [231, 4, 1, "", "ExGaussian"], [231, 1, 1, "", "Expectation"], [231, 1, 1, "", "ExpectationMatrix"], [231, 4, 1, "", "Exponential"], [231, 4, 1, "", "FDistribution"], [231, 4, 1, "", "FiniteRV"], [231, 4, 1, "", "FisherZ"], [231, 4, 1, "", "Frechet"], [231, 4, 1, "", "Gamma"], [231, 4, 1, "", "GammaInverse"], [231, 1, 1, "", "GammaProcess"], [231, 4, 1, "", "GeneralizedMultivariateLogGamma"], [231, 4, 1, "", "GeneralizedMultivariateLogGammaOmega"], [231, 4, 1, "", "Geometric"], [231, 4, 1, "", "Gompertz"], [231, 4, 1, "", "Gumbel"], [231, 4, 1, "", "Hermite"], [231, 4, 1, "", "Hypergeometric"], [231, 4, 1, "", "JointRV"], [231, 4, 1, "", "Kumaraswamy"], [231, 4, 1, "", "Laplace"], [231, 4, 1, "", "Levy"], [231, 4, 1, "", "LogLogistic"], [231, 4, 1, "", "LogNormal"], [231, 4, 1, "", "Logarithmic"], [231, 4, 1, "", "Logistic"], [231, 4, 1, "", "Lomax"], [231, 4, 1, "", "MatrixGamma"], [231, 4, 1, "", "MatrixNormal"], [231, 4, 1, "", "Maxwell"], [231, 1, 1, "", "Moment"], [231, 4, 1, "", "Moyal"], [231, 4, 1, "", "Multinomial"], [231, 4, 1, "", "MultivariateBeta"], [231, 4, 1, "", "MultivariateEwens"], [231, 4, 1, "", "MultivariateLaplace"], [231, 4, 1, "", "MultivariateNormal"], [231, 4, 1, "", "MultivariateT"], [231, 4, 1, "", "Nakagami"], [231, 4, 1, "", "NegativeBinomial"], [231, 4, 1, "", "NegativeMultinomial"], [231, 4, 1, "", "Normal"], [231, 4, 1, "", "NormalGamma"], [231, 4, 1, "", "P"], [231, 4, 1, "", "Pareto"], [231, 4, 1, "", "Poisson"], [231, 1, 1, "", "PoissonProcess"], [231, 4, 1, "", "PowerFunction"], [231, 1, 1, "", "Probability"], [231, 4, 1, "", "QuadraticU"], [231, 4, 1, "", "Rademacher"], [231, 4, 1, "", "RaisedCosine"], [231, 4, 1, "", "Rayleigh"], [231, 4, 1, "", "Reciprocal"], [231, 4, 1, "", "ShiftedGompertz"], [231, 4, 1, "", "Skellam"], [231, 4, 1, "", "StudentT"], [231, 4, 1, "", "Trapezoidal"], [231, 4, 1, "", "Triangular"], [231, 4, 1, "", "Uniform"], [231, 4, 1, "", "UniformSum"], [231, 1, 1, "", "Variance"], [231, 1, 1, "", "VarianceMatrix"], [231, 4, 1, "", "VonMises"], [231, 4, 1, "", "Wald"], [231, 4, 1, "", "Weibull"], [231, 1, 1, "", "WienerProcess"], [231, 4, 1, "", "WignerSemicircle"], [231, 4, 1, "", "Wishart"], [231, 4, 1, "", "YuleSimon"], [231, 4, 1, "", "Zeta"], [231, 4, 1, "", "cmoment"], [231, 4, 1, "", "correlation"], [231, 4, 1, "", "coskewness"], [231, 4, 1, "", "covariance"], [231, 0, 0, "-", "crv"], [231, 0, 0, "-", "crv_types"], [231, 4, 1, "", "density"], [231, 4, 1, "", "entropy"], [231, 4, 1, "", "factorial_moment"], [231, 0, 0, "-", "frv"], [231, 0, 0, "-", "frv_types"], [231, 4, 1, "", "given"], [231, 4, 1, "", "kurtosis"], [231, 4, 1, "", "marginal_distribution"], [231, 4, 1, "", "median"], [231, 4, 1, "", "moment"], [231, 4, 1, "", "quantile"], [231, 0, 0, "-", "rv"], [231, 4, 1, "", "sample"], [231, 4, 1, "", "sample_iter"], [231, 4, 1, "", "skewness"], [231, 4, 1, "", "std"], [231, 4, 1, "", "variance"], [231, 4, 1, "", "where"]], "sympy.stats.BernoulliProcess": [[231, 2, 1, "", "expectation"], [231, 2, 1, "", "probability"]], "sympy.stats.DiscreteMarkovChain": [[231, 2, 1, "", "absorbing_probabilities"], [231, 2, 1, "", "canonical_form"], [231, 2, 1, "", "communication_classes"], [231, 2, 1, "", "decompose"], [231, 2, 1, "", "fixed_row_vector"], [231, 2, 1, "", "fundamental_matrix"], [231, 3, 1, "", "limiting_distribution"], [231, 2, 1, "", "sample"], [231, 2, 1, "", "stationary_distribution"], [231, 3, 1, "", "transition_probabilities"]], "sympy.stats.compound_rv": [[231, 1, 1, "", "CompoundDistribution"]], "sympy.stats.crv": [[231, 1, 1, "", "ContinuousDomain"], [231, 1, 1, "", "ContinuousPSpace"]], "sympy.stats.crv_types": [[231, 1, 1, "", "NormalPSpace"]], "sympy.stats.crv_types.sympy.stats": [[231, 4, 1, "", "Die"], [231, 4, 1, "", "Normal"]], "sympy.stats.frv": [[231, 1, 1, "", "FiniteDomain"], [231, 1, 1, "", "FinitePSpace"]], "sympy.stats.frv_types": [[231, 1, 1, "", "DiePSpace"]], "sympy.stats.rv": [[231, 1, 1, "", "ConditionalDomain"], [231, 1, 1, "", "PSpace"], [231, 1, 1, "", "ProductDomain"], [231, 1, 1, "", "ProductPSpace"], [231, 1, 1, "", "RandomDomain"], [231, 1, 1, "", "RandomSymbol"], [231, 1, 1, "", "SingleDomain"], [231, 1, 1, "", "SinglePSpace"], [231, 4, 1, "", "pspace"], [231, 4, 1, "", "random_symbols"], [231, 4, 1, "", "rs_swap"], [231, 4, 1, "", "sampling_E"], [231, 4, 1, "", "sampling_P"], [231, 4, 1, "", "sampling_density"]], "sympy.tensor": [[232, 0, 0, "-", "array"], [235, 0, 0, "-", "index_methods"], [236, 0, 0, "-", "indexed"], [237, 0, 0, "-", "tensor"], [238, 0, 0, "-", "toperators"]], "sympy.tensor.array": [[232, 1, 1, "", "ImmutableDenseNDimArray"], [232, 1, 1, "", "ImmutableSparseNDimArray"], [232, 1, 1, "", "MutableDenseNDimArray"], [232, 1, 1, "", "MutableSparseNDimArray"], [232, 4, 1, "", "derive_by_array"], [233, 0, 0, "-", "expressions"], [232, 4, 1, "", "permutedims"], [232, 4, 1, "", "tensorcontraction"], [232, 4, 1, "", "tensordiagonal"], [232, 4, 1, "", "tensorproduct"]], "sympy.tensor.array.expressions": [[233, 1, 1, "", "ArrayContraction"], [233, 1, 1, "", "ArrayDiagonal"], [233, 1, 1, "", "ArrayTensorProduct"], [233, 1, 1, "", "PermuteDims"]], "sympy.tensor.index_methods": [[235, 4, 1, "", "get_contraction_structure"], [235, 4, 1, "", "get_indices"]], "sympy.tensor.indexed": [[236, 1, 1, "", "Idx"], [236, 1, 1, "", "Indexed"], [236, 1, 1, "", "IndexedBase"]], "sympy.tensor.indexed.Idx": [[236, 3, 1, "", "label"], [236, 3, 1, "", "lower"], [236, 3, 1, "", "upper"]], "sympy.tensor.indexed.Indexed": [[236, 3, 1, "", "base"], [236, 3, 1, "", "indices"], [236, 3, 1, "", "ranges"], [236, 3, 1, "", "rank"], [236, 3, 1, "", "shape"]], "sympy.tensor.indexed.IndexedBase": [[236, 3, 1, "", "label"], [236, 3, 1, "", "offset"], [236, 3, 1, "", "shape"], [236, 3, 1, "", "strides"]], "sympy.tensor.tensor": [[237, 1, 1, "", "TensAdd"], [237, 1, 1, "", "TensExpr"], [237, 1, 1, "", "TensMul"], [237, 1, 1, "", "TensorHead"], [237, 1, 1, "", "TensorIndex"], [237, 1, 1, "", "TensorIndexType"], [237, 1, 1, "", "TensorSymmetry"], [237, 1, 1, "", "TensorType"], [237, 1, 1, "", "_TensorManager"], [237, 4, 1, "", "canon_bp"], [237, 4, 1, "", "riemann_cyclic"], [237, 4, 1, "", "riemann_cyclic_replace"], [237, 4, 1, "", "tensor_heads"], [237, 4, 1, "", "tensorsymmetry"]], "sympy.tensor.tensor.TensAdd": [[237, 2, 1, "", "canon_bp"], [237, 2, 1, "", "contract_metric"]], "sympy.tensor.tensor.TensExpr": [[237, 2, 1, "", "get_matrix"], [237, 2, 1, "", "replace_with_arrays"]], "sympy.tensor.tensor.TensMul": [[237, 2, 1, "", "canon_bp"], [237, 2, 1, "", "contract_metric"], [237, 2, 1, "", "get_free_indices"], [237, 2, 1, "", "get_indices"], [237, 2, 1, "", "perm2tensor"], [237, 2, 1, "", "sorted_components"], [237, 2, 1, "", "split"]], "sympy.tensor.tensor.TensorHead": [[237, 2, 1, "", "commutes_with"]], "sympy.tensor.tensor.TensorSymmetry": [[237, 2, 1, "", "direct_product"], [237, 2, 1, "", "fully_symmetric"], [237, 2, 1, "", "no_symmetry"], [237, 2, 1, "", "riemann"]], "sympy.tensor.tensor._TensorManager": [[237, 2, 1, "", "clear"], [237, 2, 1, "", "comm_i2symbol"], [237, 2, 1, "", "comm_symbols2i"], [237, 2, 1, "", "get_comm"], [237, 2, 1, "", "set_comm"], [237, 2, 1, "", "set_comms"]], "sympy.tensor.toperators": [[238, 1, 1, "", "PartialDerivative"]], "sympy.testing": [[240, 0, 0, "-", "pytest"], [241, 0, 0, "-", "randtest"], [242, 0, 0, "-", "runtests"]], "sympy.testing.pytest": [[240, 4, 1, "", "SKIP"], [240, 4, 1, "", "nocache_fail"], [240, 4, 1, "", "raises"], [240, 4, 1, "", "skip_under_pyodide"], [240, 4, 1, "", "warns"], [240, 4, 1, "", "warns_deprecated_sympy"]], "sympy.testing.runtests": [[242, 1, 1, "", "PyTestReporter"], [242, 1, 1, "", "Reporter"], [242, 1, 1, "", "SymPyDocTestFinder"], [242, 1, 1, "", "SymPyDocTestRunner"], [242, 1, 1, "", "SymPyOutputChecker"], [242, 1, 1, "", "SymPyTestResults"], [242, 4, 1, "", "convert_to_native_paths"], [242, 4, 1, "", "doctest"], [242, 4, 1, "", "get_sympy_dir"], [242, 4, 1, "", "raise_on_deprecated"], [242, 4, 1, "", "run_all_tests"], [242, 4, 1, "", "run_in_subprocess_with_hash_randomization"], [242, 4, 1, "", "split_list"], [242, 4, 1, "", "sympytestfile"], [242, 4, 1, "", "test"]], "sympy.testing.runtests.PyTestReporter": [[242, 2, 1, "", "write"]], "sympy.testing.runtests.SymPyDocTestRunner": [[242, 2, 1, "", "run"]], "sympy.testing.runtests.SymPyOutputChecker": [[242, 2, 1, "", "check_output"]], "sympy.testing.runtests.SymPyTestResults": [[242, 5, 1, "", "attempted"], [242, 5, 1, "", "failed"]], "sympy.utilities": [[243, 0, 0, "-", "autowrap"], [244, 0, 0, "-", "codegen"], [245, 0, 0, "-", "decorator"], [246, 0, 0, "-", "enumerative"], [247, 0, 0, "-", "exceptions"], [249, 0, 0, "-", "iterables"], [250, 0, 0, "-", "lambdify"], [251, 0, 0, "-", "memoization"], [252, 0, 0, "-", "misc"], [253, 0, 0, "-", "pkgdata"], [254, 0, 0, "-", "source"], [255, 0, 0, "-", "timeutils"]], "sympy.utilities.autowrap": [[243, 1, 1, "", "CodeWrapper"], [243, 1, 1, "", "CythonCodeWrapper"], [243, 1, 1, "", "DummyWrapper"], [243, 1, 1, "", "F2PyCodeWrapper"], [243, 1, 1, "", "UfuncifyCodeWrapper"], [243, 4, 1, "", "autowrap"], [243, 4, 1, "", "binary_function"], [243, 4, 1, "", "ufuncify"]], "sympy.utilities.autowrap.CythonCodeWrapper": [[243, 2, 1, "", "dump_pyx"]], "sympy.utilities.autowrap.UfuncifyCodeWrapper": [[243, 2, 1, "", "dump_c"]], "sympy.utilities.codegen": [[244, 1, 1, "", "Argument"], [244, 1, 1, "", "CCodeGen"], [244, 1, 1, "", "CodeGen"], [244, 1, 1, "", "DataType"], [244, 1, 1, "", "FCodeGen"], [244, 1, 1, "", "JuliaCodeGen"], [244, 1, 1, "", "OctaveCodeGen"], [244, 1, 1, "", "OutputArgument"], [244, 1, 1, "", "Result"], [244, 1, 1, "", "Routine"], [244, 1, 1, "", "RustCodeGen"], [244, 4, 1, "", "codegen"], [244, 4, 1, "", "get_default_datatype"], [244, 4, 1, "", "make_routine"]], "sympy.utilities.codegen.CCodeGen": [[244, 2, 1, "", "dump_c"], [244, 2, 1, "", "dump_h"], [244, 2, 1, "", "get_prototype"]], "sympy.utilities.codegen.CodeGen": [[244, 2, 1, "", "dump_code"], [244, 2, 1, "", "routine"], [244, 2, 1, "", "write"]], "sympy.utilities.codegen.FCodeGen": [[244, 2, 1, "", "dump_f95"], [244, 2, 1, "", "dump_h"], [244, 2, 1, "", "get_interface"]], "sympy.utilities.codegen.JuliaCodeGen": [[244, 2, 1, "", "dump_jl"], [244, 2, 1, "", "routine"]], "sympy.utilities.codegen.OctaveCodeGen": [[244, 2, 1, "", "dump_m"], [244, 2, 1, "", "routine"]], "sympy.utilities.codegen.Routine": [[244, 3, 1, "", "result_variables"], [244, 3, 1, "", "variables"]], "sympy.utilities.codegen.RustCodeGen": [[244, 2, 1, "", "dump_rs"], [244, 2, 1, "", "get_prototype"], [244, 2, 1, "", "routine"]], "sympy.utilities.decorator": [[245, 4, 1, "", "conserve_mpmath_dps"], [245, 4, 1, "", "deprecated"], [245, 4, 1, "", "doctest_depends_on"], [245, 4, 1, "", "memoize_property"], [245, 1, 1, "", "no_attrs_in_subclass"], [245, 4, 1, "", "public"], [245, 4, 1, "", "threaded"], [245, 4, 1, "", "threaded_factory"], [245, 4, 1, "", "xthreaded"]], "sympy.utilities.enumerative": [[246, 1, 1, "", "MultisetPartitionTraverser"], [246, 4, 1, "", "factoring_visitor"], [246, 4, 1, "", "list_visitor"], [246, 4, 1, "", "multiset_partitions_taocp"]], "sympy.utilities.enumerative.MultisetPartitionTraverser": [[246, 2, 1, "", "count_partitions"], [246, 2, 1, "", "enum_all"], [246, 2, 1, "", "enum_large"], [246, 2, 1, "", "enum_range"], [246, 2, 1, "", "enum_small"]], "sympy.utilities.exceptions": [[247, 7, 1, "", "SymPyDeprecationWarning"], [247, 4, 1, "", "ignore_warnings"], [247, 4, 1, "", "sympy_deprecation_warning"]], "sympy.utilities.iterables": [[249, 1, 1, "", "NotIterable"], [249, 4, 1, "", "binary_partitions"], [249, 4, 1, "", "bracelets"], [249, 4, 1, "", "capture"], [249, 4, 1, "", "common_prefix"], [249, 4, 1, "", "common_suffix"], [249, 4, 1, "", "connected_components"], [249, 4, 1, "", "dict_merge"], [249, 4, 1, "", "filter_symbols"], [249, 4, 1, "", "flatten"], [249, 4, 1, "", "generate_bell"], [249, 4, 1, "", "generate_derangements"], [249, 4, 1, "", "generate_involutions"], [249, 4, 1, "", "generate_oriented_forest"], [249, 4, 1, "", "group"], [249, 4, 1, "", "has_dups"], [249, 4, 1, "", "has_variety"], [249, 4, 1, "", "ibin"], [249, 4, 1, "", "iproduct"], [249, 4, 1, "", "is_palindromic"], [249, 4, 1, "", "is_sequence"], [249, 4, 1, "", "iterable"], [249, 4, 1, "", "kbins"], [249, 4, 1, "", "least_rotation"], [249, 4, 1, "", "minlex"], [249, 4, 1, "", "multiset"], [249, 4, 1, "", "multiset_combinations"], [249, 4, 1, "", "multiset_derangements"], [249, 4, 1, "", "multiset_partitions"], [249, 4, 1, "", "multiset_permutations"], [249, 4, 1, "", "necklaces"], [249, 4, 1, "", "numbered_symbols"], [249, 4, 1, "", "ordered_partitions"], [249, 4, 1, "", "partitions"], [249, 4, 1, "", "permute_signs"], [249, 4, 1, "", "postfixes"], [249, 4, 1, "", "prefixes"], [249, 4, 1, "", "random_derangement"], [249, 4, 1, "", "reshape"], [249, 4, 1, "", "rotate_left"], [249, 4, 1, "", "rotate_right"], [249, 4, 1, "", "rotations"], [249, 4, 1, "", "roundrobin"], [249, 4, 1, "", "runs"], [249, 4, 1, "", "sequence_partitions"], [249, 4, 1, "", "sequence_partitions_empty"], [249, 4, 1, "", "sift"], [249, 4, 1, "", "signed_permutations"], [249, 4, 1, "", "strongly_connected_components"], [249, 4, 1, "", "subsets"], [249, 4, 1, "", "take"], [249, 4, 1, "", "topological_sort"], [249, 4, 1, "", "unflatten"], [249, 4, 1, "", "uniq"], [249, 4, 1, "", "variations"]], "sympy.utilities.lambdify": [[250, 4, 1, "", "implemented_function"], [250, 4, 1, "", "lambdastr"], [250, 4, 1, "", "lambdify"]], "sympy.utilities.memoization": [[251, 4, 1, "", "assoc_recurrence_memo"], [251, 4, 1, "", "recurrence_memo"]], "sympy.utilities.misc": [[252, 4, 1, "", "as_int"], [252, 4, 1, "", "debug"], [252, 4, 1, "", "debug_decorator"], [252, 4, 1, "", "debugf"], [252, 4, 1, "", "filldedent"], [252, 4, 1, "", "find_executable"], [252, 4, 1, "", "func_name"], [252, 4, 1, "", "ordinal"], [252, 4, 1, "", "rawlines"], [252, 4, 1, "", "replace"], [252, 4, 1, "", "strlines"], [252, 4, 1, "", "translate"]], "sympy.utilities.pkgdata": [[253, 4, 1, "", "get_resource"]], "sympy.utilities.source": [[254, 4, 1, "", "get_class"], [254, 4, 1, "", "get_mod_func"]], "sympy.utilities.timeutils": [[255, 4, 1, "", "timed"]], "sympy.vector": [[259, 4, 1, "", "curl"], [259, 4, 1, "", "divergence"], [259, 4, 1, "", "express"], [259, 4, 1, "", "gradient"], [259, 4, 1, "", "is_conservative"], [259, 4, 1, "", "is_solenoidal"], [259, 4, 1, "", "matrix_to_vector"], [259, 4, 1, "", "scalar_potential"], [259, 4, 1, "", "scalar_potential_difference"]], "sympy.vector.coordsysrect": [[256, 1, 1, "", "CoordSys3D"]], "sympy.vector.coordsysrect.CoordSys3D": [[256, 2, 1, "", "__init__"], [256, 2, 1, "", "create_new"], [256, 2, 1, "", "locate_new"], [256, 2, 1, "", "orient_new"], [256, 2, 1, "", "orient_new_axis"], [256, 2, 1, "", "orient_new_body"], [256, 2, 1, "", "orient_new_quaternion"], [256, 2, 1, "", "orient_new_space"], [256, 2, 1, "", "position_wrt"], [256, 2, 1, "", "rotation_matrix"], [256, 2, 1, "", "scalar_map"]], "sympy.vector.deloperator": [[256, 1, 1, "", "Del"]], "sympy.vector.deloperator.Del": [[256, 2, 1, "", "cross"], [256, 2, 1, "", "dot"], [256, 2, 1, "", "gradient"]], "sympy.vector.dyadic": [[256, 1, 1, "", "Dyadic"]], "sympy.vector.dyadic.Dyadic": [[256, 3, 1, "", "components"], [256, 2, 1, "", "cross"], [256, 2, 1, "", "dot"], [256, 2, 1, "", "to_matrix"]], "sympy.vector.implicitregion": [[256, 1, 1, "", "ImplicitRegion"]], "sympy.vector.implicitregion.ImplicitRegion": [[256, 2, 1, "", "multiplicity"], [256, 2, 1, "", "rational_parametrization"], [256, 2, 1, "", "regular_point"], [256, 2, 1, "", "singular_points"]], "sympy.vector.integrals": [[256, 1, 1, "", "ParametricIntegral"], [259, 4, 1, "", "vector_integrate"]], "sympy.vector.orienters": [[258, 1, 1, "", "AxisOrienter"], [258, 1, 1, "", "BodyOrienter"], [258, 1, 1, "", "Orienter"], [258, 1, 1, "", "QuaternionOrienter"], [258, 1, 1, "", "SpaceOrienter"]], "sympy.vector.orienters.AxisOrienter": [[258, 2, 1, "", "__init__"], [258, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.BodyOrienter": [[258, 2, 1, "", "__init__"]], "sympy.vector.orienters.Orienter": [[258, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.QuaternionOrienter": [[258, 2, 1, "", "__init__"]], "sympy.vector.orienters.SpaceOrienter": [[258, 2, 1, "", "__init__"]], "sympy.vector.parametricregion": [[256, 1, 1, "", "ParametricRegion"]], "sympy.vector.vector": [[256, 1, 1, "", "Vector"]], "sympy.vector.vector.Vector": [[256, 3, 1, "", "components"], [256, 2, 1, "", "cross"], [256, 2, 1, "", "dot"], [256, 2, 1, "", "magnitude"], [256, 2, 1, "", "normalize"], [256, 2, 1, "", "outer"], [256, 2, 1, "", "projection"], [256, 2, 1, "", "separate"], [256, 2, 1, "", "to_matrix"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute", "6": "py:data", "7": "py:exception"}, "terms": {"": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 84, 85, 87, 89, 90, 91, 92, 93, 95, 96, 98, 101, 102, 103, 104, 105, 106, 110, 112, 114, 116, 117, 119, 120, 123, 126, 128, 132, 136, 137, 141, 143, 147, 148, 149, 155, 156, 158, 160, 162, 163, 166, 170, 171, 173, 174, 176, 179, 180, 181, 185, 186, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 231, 237, 242, 243, 244, 245, 246, 247, 249, 250, 252, 256, 258, 262, 263, 265, 268, 273, 274, 276, 277, 278, 280, 281, 282, 283, 284, 288, 289], "0": [4, 6, 10, 11, 12, 14, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 112, 113, 114, 115, 117, 118, 120, 121, 123, 126, 128, 129, 130, 131, 133, 135, 138, 139, 140, 141, 143, 144, 145, 148, 149, 150, 152, 155, 160, 161, 162, 165, 170, 171, 172, 173, 174, 175, 176, 177, 181, 183, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 245, 246, 247, 249, 250, 251, 256, 258, 259, 260, 261, 262, 263, 266, 277, 278, 280, 282, 283, 284, 287, 288, 289], "00": [12, 62, 102, 160, 170, 224, 249], "000": [46, 66, 89, 92, 170, 249], "0000": 46, "000000000000": 12, "0000000000000": 149, "00000000000000": [28, 62, 66, 177, 211, 231], "00000000000000e": 62, "00000000260573": 110, "0000000154172579002800188521596734869": 70, "00001": 170, "00002480019791932209313156167": 196, "0001": [46, 66], "00010": 46, "000100000000000000": 62, "00011001011": 249, "00011010011": 249, "0001111011": [92, 249], "0001953125": 105, "00026102": 89, "000507214304613640": 103, "000507214304614": 103, "00053": 145, "00070025": 84, "001": [46, 66, 92, 145, 249], "0010": 46, "00100": 62, "00100000000000000": 145, "00101413072159615": 145, "0011": [46, 57], "00138541666666667": 105, "00141": 54, "00210803120913829": 145, "0023152": 89, "003": 66, "0033": 149, "00453": 89, "004707066000264604": 43, "006046440489058766": 110, "0063339426292673": 70, "00689500421922113448": 196, "00708": 128, "00756": 128, "00906": 89, "01": [54, 62, 66, 126, 170, 205, 223, 249], "010": [46, 92, 249], "0100": 46, "0101": [46, 170], "010389": 89, "010399": 89, "011": [46, 92, 170, 249], "0110": 46, "0111": [46, 170], "01197": 102, "012": 62, "012297": 66, "012345": 54, "01375162659678": 84, "014895573969924817587": 70, "016": 220, "0174533": 126, "01747268": 231, "0175000000000000": 61, "0189": 65, "0190": 54, "0196": 249, "02": 128, "02005": 149, "020599914256786": 110, "0205999155219505": 110, "020884341620842555705": 67, "023844582399907256": 110, "025413462339411542": 110, "02671848900111377452242355235388489324562": 70, "0276302": 35, "02841027019385211055596446229489549303819644288109756659334461284756482337867831": 66, "02_03_40_42": 65, "03": [196, 231], "034": 63, "035581932165858e": 110, "035999037": 114, "035999037000": 114, "04": [93, 231], "04166666666667e": 105, "042894276802320226": 110, "045": 205, "04516378011749278484458888919": 70, "0472": 89, "0484508722725343": 110, "05": [53, 84, 110, 193, 196], "050584": 89, "0509758447494279": 31, "052": 229, "05426074": 103, "05426079": 103, "05433146": 103, "05433151": 103, "05440211": 103, "054525080242173562897": 70, "05457162000000e": 158, "05457162d": 43, "05555555": 196, "0555556377366884": 114, "0555558020932949": 114, "0555562951740285": 114, "05892": 128, "06": [56, 62, 128, 196, 231], "0603": 128, "0652795784357498247001125598": 70, "06616480200395854": 110, "06743": [67, 70, 207], "06e": 145, "07": 87, "08": [31, 128], "08333333333333e": 105, "08346052231061726610939702133": 70, "083954101": 22, "08395410131771": 22, "083c01": 155, "084489": 89, "087": 205, "0874989834394464": 277, "08895483066e": 110, "09": [62, 110, 196], "0904": 98, "0909": 249, "091999668350375232456": 66, "09326036123": 110, "0935077": 41, "095": 70, "0973": 89, "099419756723640344491": 70, "099609": 62, "0998334166468": 277, "0_": 140, "0_0": 85, "0_1": 85, "0d0": [43, 211], "0e": [43, 62], "0f1": 227, "0i": 35, "0j": [35, 201], "0k": 35, "0l": [43, 211], "0o121": 102, "0o171": 102, "0right": 230, "0th": [41, 54, 63, 70], "0x": 176, "0x12": 90, "0xfa": 102, "1": [1, 3, 4, 7, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 108, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 164, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 256, 259, 260, 261, 263, 266, 273, 277, 278, 280, 282, 283, 284, 287, 288, 289], "10": [0, 3, 6, 12, 20, 22, 28, 29, 31, 33, 35, 41, 43, 51, 53, 54, 58, 60, 61, 62, 63, 65, 66, 67, 68, 70, 75, 76, 78, 79, 87, 89, 90, 92, 93, 95, 98, 99, 102, 103, 104, 105, 108, 110, 112, 113, 118, 123, 126, 128, 143, 145, 149, 160, 170, 171, 182, 186, 187, 188, 190, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 214, 217, 218, 219, 220, 223, 224, 227, 230, 231, 232, 241, 242, 247, 249, 250, 252, 256, 259, 277, 284, 288], "100": [12, 20, 43, 46, 51, 61, 62, 63, 66, 70, 78, 85, 92, 93, 98, 102, 105, 197, 201, 206, 208, 210, 211, 218, 229, 230, 249, 277], "1000": [12, 43, 46, 62, 63, 66, 95, 102, 143, 180, 181, 182, 183, 196, 210, 211, 220, 250], "10000": [43, 66, 102, 103, 105, 229], "100000": [66, 102, 110], "1000000": [62, 102], "10000000": [66, 207], "1000000000": 66, "100000000000000": 66, "100000000000000000000": 62, "100000000000000000000000000000": 66, "100000000000000005551115123126": 66, "10000000001": 102, "1000001": 67, "1001": 46, "1002": 231, "100500": 72, "1007": 63, "1009": 102, "100x": 10, "101": [46, 70, 92, 102, 170, 249], "1010": 46, "1010203040506070809": 102, "1010381": 102, "1011": 46, "1012": 114, "10120": 284, "101456353": 89, "1016": [54, 249], "102": [53, 98], "1023265": 224, "1024": [53, 211, 231], "10279": 284, "103": [0, 53], "1031": 63, "103993": 102, "104": 66, "10431": 102, "104348": 102, "104755": 207, "105": [70, 102, 207, 224], "10517083333333": 84, "106": 102, "107": [48, 205], "10793": 105, "108": [60, 102, 106], "108208000e3": 179, "108270": 72, "10877": 102, "109": [102, 205, 224], "1090": [41, 207], "1092": 207, "10kn": 105, "10n": 103, "10pt": [90, 191, 211], "10sin": 104, "10th": 102, "11": [6, 18, 37, 38, 43, 53, 56, 58, 60, 62, 63, 65, 67, 70, 74, 75, 76, 78, 79, 87, 89, 92, 93, 94, 98, 102, 104, 112, 126, 128, 141, 160, 170, 196, 197, 199, 200, 202, 204, 205, 206, 207, 208, 210, 211, 218, 220, 224, 227, 229, 230, 231, 232, 243, 249, 260], "110": [46, 92, 227, 229, 243, 249], "1100": 46, "1101": 46, "11010011000": 249, "1101111000": [92, 249], "1103": 66, "110896": 102, "111": [46, 65, 72, 92, 102, 249], "1110": 46, "1111": 46, "1111339": 102, "11163337": 231, "1118": 102, "112": [204, 208], "1121416371": 43, "113": [66, 102, 224], "11337": 89, "1137796": 224, "113820": 102, "114": [53, 102], "1145": [61, 202, 205, 223], "1145768": 223, "1145809": 223, "115": 70, "1159": 102, "11590": 102, "115975": 67, "116": [196, 205], "1169": 220, "117": [53, 70], "1177": 220, "1178": 102, "1179": 205, "11895": 89, "1193": 63, "1197": 205, "11_0_0_intro": 231, "11_2_6_stationary_and_limiting_distribut": 231, "11_4_0_brownian_motion_wiener_process": 231, "12": [6, 12, 20, 22, 35, 41, 42, 43, 48, 50, 51, 53, 54, 55, 58, 60, 61, 62, 63, 65, 67, 68, 70, 72, 75, 76, 78, 87, 89, 93, 98, 99, 102, 105, 106, 110, 112, 114, 120, 128, 129, 141, 173, 186, 196, 199, 200, 201, 204, 206, 207, 208, 210, 211, 217, 219, 220, 224, 226, 227, 231, 232, 243, 246, 249, 259, 284, 288], "120": [16, 61, 62, 67, 68, 84, 102, 105, 106, 208, 210, 211, 213, 227, 278], "1200": 196, "12000": 105, "121": [62, 67, 102, 112, 186, 229], "1211": 65, "1215": 205, "12166980856813935": 110, "122": [63, 65, 70], "1224": [67, 102], "1225": 98, "12288": 266, "122921448543883967430908091422761898618349713604256384403202282756086473494959648313841": 102, "123": [62, 67, 72, 92, 120, 173, 186, 249, 256, 258], "1231": 205, "1231026625769": 102, "1233": 249, "1234": [102, 224], "12345": [43, 66], "123456": [43, 62, 102], "123456789": 62, "123456789012345646": 43, "123456789012345649": 43, "12345678901234567890": 12, "12345678910111213141516": 102, "123_456": 62, "124": [205, 277], "12465": 207, "12499999999568202": 110, "12499999999661349": 110, "124a": 228, "125": [62, 66, 89, 102, 202, 217, 224], "12500": 62, "1250000": 147, "12500000000000000000": 62, "125000000000000000000000000000": 66, "125000416028342": 114, "125002080189006": 114, "12524": 10, "125e": 105, "126": [98, 102, 210], "127": [63, 102], "12757857962640e": 28, "127750": 246, "128": [53, 67, 70, 72, 102, 205, 211], "1283": 65, "1294585930293": 224, "1296": 56, "1296959": 70, "1299709": 102, "12e": 62, "12kn": 106, "12mm": 42, "13": [6, 35, 43, 51, 53, 58, 62, 63, 65, 67, 70, 74, 75, 76, 77, 87, 92, 98, 102, 106, 110, 112, 126, 141, 197, 200, 204, 206, 207, 208, 210, 211, 217, 224, 226, 228, 229, 231, 232, 243, 249, 266], "130": 72, "130198866629986772369127970337": 66, "1307": 31, "131": [70, 186], "131072": 207, "13131491": 249, "132": [60, 67, 186], "1336": 66, "134": 98, "135": 102, "1350": 105, "136": [62, 98], "137": [67, 98, 114], "1371": 35, "1373651": 102, "13750": 105, "138": 102, "1381": 63, "1385": [67, 207], "139": 204, "13y": 224, "14": [6, 22, 43, 51, 53, 57, 58, 60, 62, 63, 67, 68, 70, 87, 98, 99, 102, 103, 105, 110, 126, 196, 197, 200, 202, 204, 205, 206, 207, 208, 210, 211, 220, 223, 224, 227, 229, 231, 232, 242, 278], "140": 102, "1401": 207, "1405": 128, "1407633717262338957430697921446883": 102, "141": 114, "14112001": 277, "1415": 66, "1415085799262523": 110, "14155265358979": 110, "14159": 211, "1415926535": 66, "14159265358979": [66, 70, 229], "141592653589793": 62, "141592653589793238462643383279502884197169399375105820974944592307816406286208": 66, "141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117068": 277, "14159265358979323846264338328": 66, "141592653589793238462643d0": 211, "1415926535897932d0": 211, "14159265358979d0": 43, "141592654": 62, "1416": 196, "142": 205, "14219": 65, "1428": 196, "14285278320312500000": 12, "142857": 12, "142857142857143": 12, "143": [12, 155, 196], "1430": 67, "14358881": 84, "144": [22, 31, 67, 89, 196], "147": 76, "14751999969868": 31, "1482": 102, "149": [67, 102], "149896229": [147, 150, 180], "15": [6, 12, 20, 41, 48, 51, 53, 58, 60, 62, 63, 65, 66, 67, 70, 72, 75, 76, 78, 79, 87, 89, 92, 93, 94, 98, 99, 102, 105, 117, 149, 196, 197, 199, 200, 201, 202, 206, 207, 208, 210, 211, 213, 217, 218, 220, 223, 224, 228, 229, 230, 231, 232, 249, 277, 278, 283, 284], "150": [98, 112, 224], "151": 51, "15141": 284, "1515151515151": 149, "15154262241479": 102, "152": 102, "1520": 105, "1521": 67, "153": 210, "15416": 10, "15423094826093": 102, "15494982830181068512": [6, 70], "155": 207, "15502": 65, "1551": 98, "1553": 63, "15555": 65, "15605338197184": 70, "15625": [105, 183], "157": [89, 102, 106, 205], "1570": 224, "15707": 89, "1577": 63, "158": [98, 106], "16": [6, 22, 31, 35, 41, 43, 45, 53, 54, 57, 61, 62, 63, 67, 70, 71, 72, 76, 87, 89, 92, 98, 99, 101, 102, 106, 192, 199, 200, 201, 204, 205, 206, 207, 210, 211, 217, 219, 220, 221, 224, 231, 232, 249, 256, 265, 284], "160": [12, 105, 205], "1600": [105, 106], "16000": 105, "160249952256379": 208, "161": 63, "16109": 102, "1633833": 249, "165": [207, 231, 249], "1666666": 196, "166666666666667": 208, "16667": 89, "167": 98, "167303978": 22, "16730397826142": 22, "16840434497100886801e": 28, "16843009": 102, "1684e": 229, "169": 207, "1692": 98, "17": [6, 28, 29, 31, 51, 53, 54, 62, 63, 66, 67, 68, 72, 75, 78, 87, 98, 102, 112, 201, 202, 206, 207, 210, 211, 218, 220, 224, 227, 232, 246, 250, 282], "170": [75, 231], "170748906965121e": 110, "172": 105, "172870711": 70, "1729": 224, "175": [72, 98, 204, 205], "176": 227, "1764": 102, "1768": 67, "17737": 102, "17749": 10, "17805383034794561964694160130": 70, "1786": 102, "1787": 102, "17881": 10, "179143454621291692285822705344": 70, "18": [6, 28, 45, 53, 54, 65, 67, 70, 72, 75, 78, 94, 98, 102, 105, 106, 110, 112, 114, 187, 196, 204, 205, 210, 211, 219, 220, 224, 227, 229, 230, 231, 232, 259], "180": [78, 195, 205], "1800": [35, 63], "18014398509481984": [62, 223], "18056": 10, "181": 31, "181232444469875": 22, "1812324445": 22, "1816": 89, "1827": 256, "1829": 102, "184": [41, 227], "18466446988997098217": 28, "1847": 206, "18482169793536e": 22, "18525034196069722536": 70, "187": [181, 205], "1870": 65, "18844": 10, "1889": 89, "18891601900395472": 43, "189": 204, "18971": 102, "19": [6, 28, 53, 62, 65, 70, 72, 75, 78, 98, 102, 104, 105, 196, 202, 206, 207, 210, 220, 224, 226, 229, 243, 277], "1901": 63, "1901263495547205e": 110, "19016": 89, "190347": 205, "190413": 205, "19093197": 70, "191": [44, 230], "1914": 98, "192": 91, "1920": 63, "1921": 102, "19287309935246": [28, 229], "192873099352460791205211": 28, "1929": 63, "193": [98, 110], "19351": 65, "19404": 65, "1944": 198, "195": 67, "1952": 181, "1953": [70, 206], "1954": 89, "19548": 284, "1955": 142, "1957": 196, "1958": [102, 196], "1959": 196, "1962": 102, "1963": 227, "1965": [6, 70, 93], "1967": [63, 205], "1968": 113, "1969": [6, 63, 70, 87, 205, 221], "197": 67, "1970": [42, 98], "1971": [205, 227], "1972": 102, "1973": [44, 63, 193], "1974": 213, "1976": 202, "1977": 181, "1978": [46, 53, 181, 205], "1979": [79, 181], "198": 98, "1980": [102, 249], "1981": [61, 205], "1982": [89, 196], "1983": [142, 246], "1985": [89, 121, 142, 186, 256], "1988": [41, 155, 173, 204, 205], "19882": 10, "1989": [6, 205, 229], "199": 44, "1990": [54, 87, 221, 256], "1991": [44, 205], "1992": [102, 205, 229, 249], "1993": [62, 205], "1994": [54, 204, 205, 207], "1995": [67, 205, 223, 229], "1996": [196, 205, 221, 229, 256], "1997": [61, 87, 102, 205, 221], "1998": [205, 224], "1999": [54, 98, 205, 210, 227], "1_": 62, "1_0": 85, "1_1": 85, "1cm": 42, "1d": [152, 154, 167, 186, 236], "1d0": 43, "1e": [43, 62, 66, 98, 110, 145, 207, 229], "1e11": 102, "1e16": 62, "1e20": 62, "1e23": [102, 252], "1e3": 102, "1e5": 43, "1f1": 227, "1g": 43, "1j": 201, "1kn": 105, "1m": 106, "1st": [41, 54, 102, 112, 227, 228, 252, 278], "1st_exact": [6, 227], "1st_exact_integr": 227, "1st_homogeneous_coeff": 227, "1st_homogeneous_coeff_best": 227, "1st_homogeneous_coeff_subs_dep_div_indep": 227, "1st_homogeneous_coeff_subs_dep_div_indep_integr": 227, "1st_homogeneous_coeff_subs_indep_div_dep": 227, "1st_homogeneous_coeff_subs_indep_div_dep_integr": 227, "1st_linear": 227, "1st_linear_constant_coeff_homogen": 228, "1st_linear_constant_coeff_integr": 228, "1st_linear_integr": 227, "1st_power_seri": 227, "1st_rational_riccati": 227, "1u": 103, "1x1": [101, 231], "1x3": 98, "2": [7, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 104, 105, 108, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 240, 242, 243, 244, 245, 246, 249, 250, 252, 256, 258, 259, 260, 261, 262, 263, 265, 266, 277, 278, 280, 282, 283, 284, 287, 288, 289], "20": [6, 12, 28, 31, 39, 43, 51, 53, 54, 61, 62, 63, 66, 67, 70, 78, 79, 89, 98, 102, 105, 106, 108, 112, 123, 181, 183, 196, 197, 201, 205, 206, 207, 208, 210, 211, 217, 218, 219, 220, 223, 224, 227, 230, 231, 256, 278], "200": [63, 93, 98, 102, 105, 110, 256], "2000": [43, 48, 89, 102, 205], "20000": 102, "20000000": [66, 207], "20000000000000": 12, "2000000000000002": 12, "2000061035": 12, "2001": [54, 102, 205], "2002": [65, 198, 205, 208], "2003": [43, 196, 205, 211, 224], "20033": 62, "2004": [70, 205, 224], "2005": [44, 52, 89, 102, 207], "2006": [63, 220], "2007": [102, 142, 246], "20071116100808": 63, "20078": 10, "2008": [98, 196, 205, 207, 211], "2009": [67, 70, 102, 196, 207], "2010": [56, 228, 249], "2011": [46, 54, 87, 102, 193, 220], "2012": 62, "2013": [64, 74, 93, 286], "2014": [230, 231], "20140123": 89, "2015": [89, 230], "20150716201437": 102, "20160": 200, "20160313023044": 249, "20160323033111": 224, "20160323033128": 224, "2017": [0, 196], "20171008094331": 54, "20180413004012": 102, "2020": [72, 155], "20200118141346": 89, "20200204081320": 231, "20200224064753": 46, "20200307091449": 284, "20200628222206": 231, "20200628222212": 231, "20201021115213": 224, "20201128173312": 70, "20201230182007": 231, "20205690315959": 70, "20209": 10, "2021": 205, "20210507012732": 67, "20210508104430": 231, "20210511015444": 79, "20210806201615": 223, "2022": 196, "20220207032113": 231, "20221029115428": 200, "202916782076162456022877024859": 102, "203": [51, 67], "2048": [63, 102, 211], "205": [67, 87, 221], "2057": 65, "206": [202, 207], "20621": 10, "207": 224, "20759": 10, "20780": 10, "2079": 207, "208": [66, 207], "20833333333333e": 105, "208341": 102, "2084": 142, "2093": 89, "2097152": 207, "20conic": 256, "20e9": 106, "20kn": [105, 106], "20on": 256, "20point": 256, "20th": 198, "21": [6, 10, 48, 53, 62, 65, 67, 75, 76, 84, 98, 102, 104, 105, 141, 197, 202, 204, 205, 206, 208, 210, 211, 217, 227, 231, 232, 288], "210": [66, 102, 224], "211": [87, 102, 207, 221, 227], "2111": 104, "2112166839943": 102, "2112723729365330143": 70, "21147": 67, "212": [63, 89, 205], "213": 98, "21306132": 43, "214": 181, "21402": 10, "21427": 10, "21441": 10, "21477639576571": 102, "21494": 10, "21496": 10, "21563": 10, "216": [98, 204], "2161": 224, "21626": 10, "217": [89, 205], "218332": 249, "21875": 89, "21938393439552": 70, "219383934395520": 70, "22": [6, 12, 53, 62, 65, 66, 67, 70, 98, 102, 105, 106, 141, 205, 210, 223, 224, 229, 231], "220": [102, 207], "2204": 204, "2209": 114, "221": 227, "22140257085069": 84, "22169": 89, "222": 65, "22252": 89, "22285": 89, "223": 205, "224": [35, 179, 205], "2247": 89, "225": [67, 102, 205], "22553956329232": 84, "225607735_dixon_result": 205, "226": 53, "22626": 121, "227": 53, "22740742820168557599192443603787379946077222541710": 70, "22827": 67, "229": 102, "22925376": 243, "23": [6, 41, 53, 54, 62, 65, 68, 70, 76, 78, 98, 102, 105, 141, 202, 207, 210, 217, 224, 249], "230": [207, 229], "2307": 98, "231": [102, 186], "232": 70, "233": [102, 205, 227], "2331v2": 249, "234": 102, "234137346_on_a_multivariate_log": 231, "2345": 224, "23456789123456789": 62, "23456789123457": 62, "235": 67, "235625382192159": 149, "236": 102, "237": [22, 205], "2376": 0, "238": [62, 102], "239": 62, "23903": 62, "24": [6, 25, 27, 28, 35, 41, 50, 54, 55, 62, 65, 67, 70, 76, 84, 89, 98, 102, 105, 106, 110, 112, 173, 183, 196, 202, 204, 206, 207, 208, 210, 213, 218, 224, 227, 231, 246, 249, 266, 278, 284], "240": [205, 213, 259], "2400": 105, "242": 202, "243": [53, 70, 229], "2434931": 102, "244": [62, 204], "247": [202, 205, 229], "2478": 220, "248": 102, "2489": 102, "249": 205, "25": [6, 12, 25, 28, 53, 54, 63, 65, 67, 70, 72, 75, 77, 94, 98, 101, 102, 105, 106, 112, 117, 123, 190, 196, 200, 204, 206, 207, 210, 211, 217, 218, 220, 224, 226, 227, 228, 231, 243], "250": [12, 102, 224], "2500": 105, "25000000000000000000": 12, "2507191691": 102, "251": 204, "2514261_algebraic_and_geometric_reasoning_using_dixon_result": 205, "25146": 183, "25165824": 243, "252": 102, "253": 54, "2531": 54, "25314": 54, "253140": 54, "255": 102, "256": [26, 43, 53, 102, 207, 211], "25645121643901801": 102, "257": [7, 102, 229], "2580": 102, "25882": 89, "259": 98, "25e": 106, "26": [6, 51, 62, 63, 65, 70, 74, 98, 102, 105, 106, 207, 224, 231], "2620": 70, "26390": 66, "264": [98, 229], "265": 207, "26629073187415": 61, "268": 67, "2690882": 98, "27": [6, 26, 43, 44, 53, 57, 67, 72, 98, 102, 105, 106, 112, 114, 204, 207, 229], "270": 108, "2700": [35, 105], "2702765": 67, "2709077133180915240135586837960864768806330782747": 102, "2715": 207, "272": [67, 207], "27261": 98, "2730": 67, "274": 67, "27433": 89, "2753": 63, "27720": 67, "278444111699106966687122": 28, "27844411169911": [28, 229], "27852": 89, "27879516692116952268509756941098324140300059345163": 70, "2788": 102, "279": 207, "2794155": 277, "27_number": 102, "27_theorem": 266, "27s_constant": 62, "27s_law": 220, "27s_method": 43, "27s_sampling_formula": 231, "27s_strongly_connected_components_algorithm": 249, "27s_theorem": 230, "27s_totient_funct": 102, "27s_z": 231, "27t": 92, "28": [6, 43, 53, 61, 65, 66, 70, 98, 102, 105, 128, 220, 224, 227, 283], "280": 67, "280311472_the_ubiquitous_ewens_sampling_formula": 231, "2809": 145, "281": 54, "28318530717959": 20, "28333333333333": 61, "284": [54, 102], "285": [102, 229], "287": 102, "288037795340032417959588909060233922890": [6, 70], "288716": 246, "289": 229, "28902548222223624241": 66, "2899": 89, "28continu": 231, "28cryptosystem": 63, "28graph_theori": 249, "28group_theori": 53, "28information_theori": 231, "28mathemat": [18, 54, 62, 98, 219], "28mathematical_const": 62, "28mathematical_log": [37, 38], "28number": 62, "28number_theori": 51, "28order": 68, "28permutation_group_theori": 53, "28physic": 165, "28set_theori": 219, "28x": 102, "29": [6, 18, 35, 37, 38, 51, 53, 54, 62, 63, 65, 67, 68, 75, 76, 98, 102, 112, 165, 201, 219, 231, 249], "290": [229, 259], "290764986058437": 70, "291": 62, "29128599706266": 66, "2912859970626635404072825905956005414986193682745": 66, "29136443417283": 70, "292": 102, "2943": 89, "2948": 230, "29541": 89, "296": 229, "297": [205, 207], "299792458": [147, 150, 180, 183], "29999999999999998890": 62, "2a": [22, 23, 231], "2c_and_li": 102, "2c_x_": 102, "2d": [3, 75, 76, 78, 105, 106, 108, 154, 186, 197, 211, 224, 236, 282], "2d_1": 231, "2e": [23, 27, 62], "2f": [16, 289], "2f1": 227, "2f_1": 204, "2f_log_x": 102, "2g": 29, "2h": 16, "2i": 62, "2j": [67, 204, 231], "2j_2": [67, 213], "2j_3": 196, "2k": [18, 62, 67, 87, 102, 224], "2l": 204, "2l_1": 196, "2l_2": 196, "2l_3": 196, "2m": 106, "2n": [54, 61, 67, 70, 89, 93, 108, 113, 139, 196, 214, 221], "2nd": [41, 54, 63, 102, 112, 143, 227, 232, 249], "2nd_hypergeometr": 227, "2nd_hypergeometric_integr": 227, "2nd_linear_airi": 227, "2nd_linear_bessel": 227, "2nd_nonlinear_autonomous_conserv": 227, "2nd_nonlinear_autonomous_conserved_integr": 227, "2nd_power_series_ordinari": 227, "2nd_power_series_regular": 227, "2pq": [23, 25], "2t": 67, "2x": [12, 25, 62, 70, 87, 104, 223, 224, 230, 231, 277, 280, 288], "2x1": 145, "2x2": [95, 101, 145, 200, 227], "2x_": 224, "2xy": [204, 282], "2y": [204, 224, 227, 230, 282], "2z": [23, 30, 70, 230, 231], "3": [0, 4, 5, 7, 10, 12, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 31, 33, 35, 36, 38, 39, 40, 41, 43, 44, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 108, 110, 112, 113, 114, 115, 117, 118, 120, 123, 125, 128, 129, 130, 131, 133, 134, 135, 136, 137, 139, 140, 143, 144, 145, 147, 149, 153, 155, 156, 157, 161, 165, 170, 171, 173, 175, 176, 179, 180, 182, 183, 185, 186, 187, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 242, 243, 245, 246, 247, 249, 250, 252, 256, 258, 259, 260, 261, 263, 265, 266, 273, 277, 278, 280, 282, 283, 284, 287, 288, 289], "30": [6, 35, 41, 43, 48, 62, 63, 65, 66, 67, 70, 76, 78, 89, 93, 98, 99, 102, 105, 106, 126, 149, 200, 202, 206, 207, 211, 217, 220, 223, 231, 232, 288], "300": [93, 98, 102, 105, 192, 197, 208, 265], "3000": [78, 105], "300000": 183, "30000000000000000000": 62, "30030": 63, "301": [105, 221, 224], "301369863013699": 98, "30247": 67, "304": [205, 207], "305": 61, "30589": 98, "306": 63, "30625": 98, "307": 62, "308": 221, "309016994374947": 62, "3096": 231, "31": [50, 62, 65, 66, 78, 102, 141, 196, 207, 224], "311": [62, 102], "312": [63, 186, 229, 256, 258], "3125": [78, 231], "31250": 105, "313": 190, "313552108895239": 31, "31413": 89, "31417": 66, "3144337": 207, "315": 229, "3176591": 231, "317843553417859": 149, "3192": 102, "3193": 89, "32": [53, 65, 68, 70, 72, 98, 102, 105, 110, 141, 205, 207, 208, 220, 221, 224, 231, 242], "320": 62, "321": 76, "322248": 61, "322255": 61, "323": [45, 70, 102], "3233": 63, "3239": 102, "324": [22, 102, 205], "3243f6a8885a30": 102, "3248186011": 110, "325": 45, "3251": 98, "32555634906645": 70, "3267000013": 102, "327": [65, 227], "3275": 207, "32767": 102, "32768": 211, "329": 227, "33": [43, 62, 65, 98, 141, 149, 204, 208, 211, 231], "330": 205, "33062": 102, "331": 84, "33102": 102, "3312": 249, "3321": 249, "33215": 102, "333": [65, 102], "3333": 89, "33333": [66, 89], "333333333333333": [66, 201, 223], "333333333333333314830": 62, "333333333333333333333": 62, "33333333333333333333333333333": 201, "335": 62, "3358": 89, "336": 35, "33768": 200, "33795": 89, "33998": 89, "34": [12, 43, 54, 67, 75, 98, 102, 117, 158, 205, 210, 217, 223, 224], "3400000000000": 12, "341": 75, "34105": 67, "3416277185114782": 28, "3418463277618": 149, "34211": 231, "342923500": 95, "343415678363698242195300815958": 70, "345": 54, "3456": 224, "346": 66, "34635637913639": 66, "34665576869e": 66, "34747534407696": 68, "34785": 89, "348": 98, "348645229818821": 149, "349745826211722": 22, "34985849706254": 84, "35": [53, 56, 65, 67, 75, 76, 89, 98, 102, 128, 206, 211, 224, 227, 231], "350": [61, 123], "3506": 89, "352": 31, "352471546": 22, "352471546031726": 22, "353": [65, 98], "355": [66, 102, 205], "356": [89, 206, 229], "357947691": 84, "36": [22, 45, 56, 63, 67, 78, 89, 93, 98, 102, 106, 207, 211, 224, 227, 231, 266], "360": 108, "3600": [35, 67], "3602879701896397": 62, "36188804005": 110, "362": 89, "3627": 114, "363": [72, 102, 205], "364": 72, "3674160": 53, "368": 196, "369": 63, "37": [51, 63, 68, 72, 98, 102, 106, 196, 211, 224], "376": 205, "377": 102, "379": [102, 207], "379238": 102, "37933": 231, "38": [78, 98, 102, 211, 224, 226, 231], "381": 102, "38177329": 250, "38177329068": 250, "3827": 102, "384": 65, "387": 65, "38954165": 231, "39": [70, 102, 210], "391": 230, "39267e": 229, "3927": 89, "393": 224, "39439": 89, "39578": 200, "396": [66, 126], "397": 205, "39764993382373624267": 67, "399": 223, "3aintegr": 89, "3aissu": 89, "3aopen": 89, "3d": [3, 35, 46, 75, 76, 105, 154, 177, 192, 197, 260, 262, 263, 264, 265], "3e": 43, "3f_1": 204, "3i": 102, "3j": [70, 155, 196], "3j_2": [67, 213], "3kn": 105, "3m": 106, "3rd": [41, 54, 68, 102, 143, 207, 229, 232, 249], "3x": [23, 29, 62, 104, 204, 230, 280], "3x1": 98, "3x3": [16, 27, 77, 98, 261], "3xy": 224, "3xyz": 104, "3y": 224, "3z": 230, "4": [3, 7, 12, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 84, 85, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 104, 105, 108, 110, 112, 113, 114, 118, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 143, 144, 145, 148, 152, 155, 160, 170, 171, 173, 174, 175, 176, 177, 179, 185, 186, 187, 190, 192, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 242, 243, 246, 249, 250, 256, 259, 260, 261, 263, 265, 266, 277, 278, 280, 282, 283, 284, 288, 289], "40": [6, 31, 43, 65, 67, 70, 72, 79, 93, 98, 102, 105, 197, 208, 210, 211, 231, 252, 277], "400": [105, 197, 207], "4000": [105, 106], "40000": 105, "4002723175": 231, "4013": 105, "40207856": 231, "404": 224, "409": 231, "4096": 67, "4096000": 44, "41": [65, 72, 98, 102, 202, 224], "41152": 149, "4117304087953": 110, "41211849": 277, "412214747707527": 174, "41230258795639848808323405461146104203453483447240": 70, "413": 63, "414": 249, "4140": 67, "414213562": 62, "4142135623730951": 31, "4142135623731": [18, 28, 211, 229], "414645": 207, "415": 65, "41577": 89, "41624341514535": 68, "417": [89, 223], "42": [29, 43, 51, 62, 65, 67, 75, 76, 78, 93, 94, 96, 98, 100, 102, 202, 207, 224, 242], "420": [102, 224], "4200": 102, "423": 98, "42519758": 231, "42525": 67, "42658": 89, "429": [67, 211], "43": [57, 98, 102, 105, 106, 231, 288], "430": 249, "432": [31, 75, 206], "434607": 31, "43466557686937456435688527675040625802564660517371780402481729089536555417949051890403879840079255169295922593080322634775209689623239873322471161642996440906533187938298969649928516003704476137795166849228875": 66, "43608": 89, "438990337475312": 22, "44": [65, 67, 98, 102, 220, 231], "4410317": 102, "4418": 114, "44224957030741": 208, "4423": 102, "4428829381583662470158809900606936986146216893757": 66, "44288293815837": 66, "4429": 66, "444": 65, "445": [6, 205], "44542": 224, "44626032": 43, "44721": 89, "4472354033813751e": 110, "448": 35, "4493": 89, "45": [42, 62, 67, 78, 98, 102, 108, 207, 208, 224], "450": 98, "4504508011325967e": 110, "45136923488338": 70, "45279": 231, "4536": 102, "456": [6, 62, 205], "456457160755703e": 110, "4579": 208, "45896": 89, "4596": 62, "45960141378007": 84, "459697694131860": 20, "46": [98, 105, 181, 210, 229, 231], "463": [44, 142], "4641": 84, "4641991": 102, "46792545969349058": 229, "47": [67, 70, 98, 102, 114, 149, 181, 210], "4701": 231, "4701sum07": 231, "472": 231, "473": 54, "47450": 102, "4753701529": 102, "47577": 110, "47757": 200, "478": 205, "479001599": 102, "48": [65, 72, 106, 224, 229, 231, 278], "4856615": 249, "4857018": 249, "4862": 67, "4869863": 102, "4877893607115270300540019e": 28, "488253406075340754500223503357": 70, "49": [66, 67, 102, 106, 204, 224], "490": [44, 54], "4915": 62, "49182424008069": 84, "49299": 224, "49315059": 250, "495": 105, "49801566811835604271": [6, 70], "499948155": 54, "4a": 246, "4ac": [22, 23, 224], "4e": [12, 229], "4i": 102, "4m": 106, "4th": [67, 68, 84, 98, 102, 143], "4x": [224, 230, 277], "4x1": [148, 231], "4x4": [27, 35, 77, 101, 148, 231], "4xy": [192, 265], "4y": [25, 204, 230, 277], "4z": [23, 30, 230], "5": [7, 12, 14, 18, 20, 22, 24, 26, 28, 31, 35, 37, 38, 39, 41, 43, 44, 45, 46, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 104, 105, 108, 110, 112, 114, 115, 117, 123, 126, 128, 129, 133, 134, 135, 136, 138, 145, 149, 170, 171, 174, 176, 183, 185, 187, 190, 192, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 242, 243, 249, 250, 256, 259, 261, 263, 265, 266, 277, 278, 280, 283, 284, 287, 288], "50": [29, 44, 53, 65, 66, 67, 70, 78, 98, 102, 105, 106, 149, 180, 207, 211, 220, 229], "500": [44, 66, 123], "5000": [66, 105], "50000": 102, "50000000000000": [62, 66], "500000000000000": 112, "50000000000000000000000000000": 66, "5000000000291665e": 110, "500006656595360": 114, "5020": 7, "50232379629182": 70, "503": 206, "504": [66, 205], "5040": [16, 67, 84, 207, 208], "504067061906928": 66, "50406706190692837199": 66, "505": 205, "50521": [67, 207], "50923695405127": 70, "50u": 103, "51": [41, 98, 102], "51041666666667e": 105, "5109": 89, "511": 67, "5112118495813": 179, "512": [53, 70], "5124": 207, "514": [44, 52, 205], "5140": 242, "5148378120533502e": 110, "515": 70, "5173168": 70, "52": [51, 67, 102, 105, 106, 196, 210, 224, 227, 249, 278], "5236": 89, "525": 78, "5253": 89, "5269": 67, "52818775009509558395695966887": 102, "53": [20, 63, 65, 98, 145, 199, 201, 202], "53087": 89, "530e": 145, "5394769": 102, "54": [62, 98, 106, 204, 210, 249], "5404319552844595": 62, "542": 53, "544": 196, "5459": 102, "55": [53, 65, 67, 98, 196, 197, 207, 224], "55203744279187": 70, "55271367880050e": 41, "555": 65, "55556": 89, "558": 227, "55872552179222e": 22, "55998576005696": 145, "56": [31, 65, 89, 102, 207], "560": 105, "5648024145755525987042919132": 70, "567": 68, "57": [53, 98, 102, 231], "5706": 62, "5718": [41, 102], "5728": 62, "574": 102, "57721566490153286060651209008240243104215933593992": 66, "577215664901533": 66, "5772157": 62, "577377951366403": 149, "5777": 102, "579": 67, "58": [63, 98, 237], "58602": 231, "5880": 67, "588469032184": 229, "59": [98, 227], "590": 205, "5915587277": 102, "5917": 89, "5919532755215": 20, "5937424601": 84, "59375e": 105, "5992": 0, "5b7c3e8ee5b40332abdb206c": 284, "5c52": 102, "5g": 43, "5kn": 105, "5m": [106, 246], "5th": [62, 143, 204, 206], "5x": 224, "5x5": 63, "5y": 224, "6": [12, 14, 16, 22, 30, 31, 35, 37, 38, 41, 43, 44, 45, 46, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 74, 75, 76, 77, 78, 84, 85, 87, 89, 91, 92, 93, 95, 96, 98, 99, 101, 102, 104, 105, 108, 110, 112, 113, 114, 128, 129, 133, 134, 135, 145, 149, 155, 173, 185, 186, 195, 196, 197, 199, 200, 201, 202, 204, 206, 207, 208, 210, 211, 213, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 242, 243, 246, 249, 250, 256, 259, 261, 266, 278, 284, 288, 289], "60": [35, 48, 53, 55, 61, 62, 67, 70, 89, 98, 102, 105, 106, 210, 211, 224, 227, 249], "6000": 62, "6004799503160655": 223, "600e": 62, "60123853010113e": 66, "609": 67, "609344": 183, "60e2": 62, "60n": 63, "61": [63, 67, 78, 98, 102, 207, 213], "61051": 84, "6116978": 252, "6125": 98, "617": 102, "618": 104, "61803398874989": 62, "6180885085e": 110, "61825902074169104140626429133247528291577794512415": 70, "62": [98, 204], "62349": 89, "625": [78, 266], "625146415202697": 70, "62963087839509e": 183, "63": [65, 98, 102], "630": 207, "631": 48, "63232916": 231, "634": 48, "6349839002": 218, "635": 66, "635564016364870": 68, "636": 63, "639985": [102, 204], "64": [1, 47, 53, 102, 142, 196, 210, 220, 229, 231, 242, 249, 252, 287], "6400": 105, "643": [65, 102], "6435": 67, "643501108793284": 68, "6449340668": 218, "64493406684823": 66, "6460": 102, "64613129282185e": 66, "64705": 231, "648": 231, "64872063859684": 84, "65": [102, 112, 204, 231], "65092319930185633889": 70, "651354770181179": 149, "65215": 89, "6543612251060553497428174e": 28, "6545": 207, "65504": 43, "65536": [207, 210, 211], "65537": [102, 210], "6569866": 277, "657": 220, "658921776708929": 149, "659097795948": 179, "659936": 70, "66": [67, 93, 98, 207, 211], "660539060e": 183, "662": 93, "66317": 102, "6634255": 207, "6659": 230, "666": 65, "666666666666667": [105, 106], "668": 35, "67": [98, 205], "670250533855183": 110, "6707": 98, "6711f12": 231, "6720": 207, "676": 224, "67721": 89, "6774": 249, "67884": 110, "67894": 43, "679": 106, "68": [65, 90, 98, 102, 200, 224], "6832579186": 231, "68437": 110, "686": 246, "6868680200532414": 6, "687": 22, "6875": 105, "6881721793": 218, "689": [89, 106], "69": [53, 98, 200, 229, 246], "691": 67, "6931396564": 218, "6931471805599453094172321215": 218, "6931471806": 218, "693147255559946": 66, "69629": 207, "6963328": 231, "6988699669998001": 102, "699": 41, "6j": [155, 196], "6k": 67, "6th": [46, 102], "6x": [62, 204], "6x6": 63, "6z": [23, 30], "7": [6, 12, 18, 20, 22, 25, 29, 35, 37, 38, 41, 43, 46, 48, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 70, 72, 75, 76, 77, 78, 84, 87, 89, 92, 93, 95, 96, 98, 102, 104, 105, 110, 112, 128, 135, 138, 139, 143, 176, 181, 183, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 213, 214, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 236, 237, 242, 243, 246, 249, 250, 256, 266, 278, 283, 284, 287], "70": [62, 63, 79, 89, 98, 102, 210, 211, 224, 231, 252], "700000000000000": 231, "701": 179, "7042848373025861": 110, "7048138294": 218, "706": [41, 98], "7060005655815754299976961394452809": 102, "7063": 89, "707106781186548": 68, "70711": 89, "71": [53, 78, 98, 179], "71109": 89, "712": 89, "712328767123288": 98, "71318": 207, "7143": 231, "715": [155, 196, 211], "71827974413517": 84, "718281828": 62, "7182818284": 66, "718281828459045235360287d0": 211, "7182818284590452d0": 211, "71828182845905": 84, "7182818285": 218, "718281835": 102, "72": [41, 45, 62, 75, 98, 102, 105, 196, 210], "720": [213, 227, 249], "721": 205, "72463": 89, "729": 204, "73": [53, 61, 62, 75, 102, 227], "730": 89, "730061685774": 229, "73071763923152794095062": 70, "73205080756887729352744634151": 207, "73205080756888": 207, "73908513321516": 28, "73908513321516064165531208767387340401341175890076": 229, "739085133215161": [23, 28, 30, 31, 229], "74": [53, 67, 102], "74126166983329d": 43, "744": 202, "74720545502474": 70, "75": [62, 65, 200, 231, 256], "750": 67, "7523": 230, "754": 62, "756": 102, "7568025": 277, "76": [67, 70, 98, 102, 204, 207], "760939574180767": 70, "761": 67, "7635": 70, "764": 70, "7648844336": 22, "764884433600585": 22, "7649": 62, "765": 31, "7655283165378005676": 70, "766": 43, "767": 65, "77": [5, 51, 70, 98, 102, 210, 211, 244], "771561": 84, "7717": 0, "77245385090552": 31, "7746": 89, "7751": 89, "777": [56, 65], "778": 56, "779": 56, "78": [53, 76, 98, 102, 106, 181, 227, 231], "7845": 89, "7854": 89, "789": [62, 102], "79": [53, 54, 106], "79115232": 231, "7936": [67, 207], "797": 63, "799333555511111": 102, "7_f64": 211, "7abb76ffed50425299b9065129ae87261668a0f7": 230, "7o38": 196, "7y": 224, "8": [6, 16, 22, 28, 33, 35, 36, 41, 43, 46, 53, 54, 55, 58, 60, 62, 63, 65, 66, 67, 68, 70, 72, 75, 76, 78, 84, 87, 89, 91, 92, 93, 95, 96, 98, 99, 101, 102, 104, 105, 110, 112, 114, 128, 143, 148, 149, 160, 196, 197, 199, 200, 201, 202, 204, 206, 207, 208, 210, 211, 213, 214, 217, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 236, 242, 244, 246, 249, 256, 259, 260, 266, 277, 278, 282, 284, 288], "80": [1, 4, 6, 12, 20, 41, 53, 62, 65, 89, 98, 102, 105, 106, 110, 207, 210, 227, 231, 247, 249], "8000": [1, 105], "800205": 202, "805": 207, "806342": 202, "809": 89, "809709509409109": 102, "81": [53, 67, 72, 93, 98, 102, 126, 128, 196, 210], "8100": 231, "816477005968898": 149, "818": 181, "81879421395609": 70, "82": [53, 89, 98, 231], "82211796209193": 84, "823": 63, "827273": 53, "82842712474619": 277, "82842712475": 282, "828770759094287e": 110, "83": [53, 210], "831": 102, "83333": 89, "83403519": 231, "83711": 67, "8375": 89, "8392867552141611326": 62, "84": [62, 66, 102], "84092844": 103, "8411998": 103, "84119981": 103, "84147096": 103, "84147098": [103, 250, 277], "8414709848078965": 250, "844291913708725": 110, "846749014511809332450147": 67, "85": [51, 66, 67, 98, 102, 128, 174, 196, 231], "850908514477849": 149, "854500743565858": 110, "85768055": 231, "85819627": 231, "86": [54, 98, 142, 210, 220], "861136": 207, "86113631159405258": 207, "86114": 89, "861246379582118": 110, "86400": 183, "86458333333333e": 105, "865474033102": 43, "865474033111": 43, "865477135298": 43, "86602": 89, "8660254j": 110, "867263818209": 43, "869604401089358618834491d0": 211, "87": [53, 68, 98, 102], "87174": 89, "8724366472624298171": 70, "877": 67, "88": [62, 98, 102], "884": 224, "88679245283019": 145, "888": 65, "888888877777777": 102, "88889": 89, "89": [53, 60, 89], "8a975c1405bd35c65993abf5a4edb667c1db": 102, "8am": 63, "8kn": 106, "8m": 224, "8xy": 204, "9": [6, 14, 29, 31, 33, 41, 43, 50, 52, 53, 54, 58, 60, 61, 62, 63, 65, 67, 68, 70, 71, 72, 75, 76, 78, 84, 87, 89, 93, 94, 95, 96, 98, 99, 101, 102, 104, 105, 110, 112, 113, 114, 115, 117, 126, 128, 131, 137, 143, 145, 149, 181, 196, 197, 199, 200, 201, 202, 204, 206, 207, 208, 210, 211, 217, 219, 220, 221, 223, 224, 227, 229, 230, 231, 232, 242, 246, 249, 256, 259, 282, 284, 289], "90": [41, 53, 60, 70, 93, 98, 104, 105, 108, 116, 126, 144, 211, 213, 223, 231, 244], "900": 35, "90047": 249, "90097": 89, "903": 105, "90300": 105, "906425478894557": 14, "90642547889456": 14, "9071": 102, "90929743": [250, 277], "909449841483": 70, "909672693737": 43, "91": [12, 44, 205, 210, 217, 231], "912285": [102, 204], "914148152112161": 102, "91596559": 62, "9179": 102, "92": [75, 205, 227, 231, 249], "920": 224, "9215": 204, "921_": 62, "92242131492155809316615998938": 70, "926093295503462": 149, "92753330865999": 145, "93": [53, 205], "932": 220, "9330": 67, "9369318": 224, "93accumulate_oper": 20, "93add": 20, "93euler_equ": 227, "93gauss_quadratur": 89, "93hadamard_transform": 65, "93jacobi_quadratur": 89, "93johnson": 249, "93lagrange_equ": 41, "93laguerre_quadratur": 89, "93lobatto_rul": 89, "93mascheroni_const": 62, "93rabin_primality_test": 102, "93schmidt_process": 98, "93simon_distribut": 231, "93trotter_algorithm": 249, "93tukey_fft_algorithm": 65, "93zero_plot": 110, "94": [114, 205], "9405": 204, "9412172": 231, "9424": 102, "945": [202, 208], "9487171": 84, "9496": 70, "94991743": 231, "95": [43, 60, 102, 204, 211, 227, 229, 244], "951": 66, "951056516295154": 62, "954": 102, "956": 66, "9562288417661": 66, "95678796130331164628399634646042209010610577945815": 66, "95892427": 277, "96": [93, 98, 231], "9603": 204, "96593": 89, "967": 89, "96716083": 231, "9696": 230, "97": [53, 63, 102, 204], "971843958291041": 149, "9780470316887": 231, "97851": 89, "98": [53, 63, 142, 207, 227], "9801": 66, "9804659461513846513": 102, "981": 89, "98101184": 43, "982": 142, "983": 89, "983697455232980674869851942390639915940": 67, "9855e": 89, "986": 224, "987": 102, "989": 102, "9891e30": 179, "98935825": 277, "99": [1, 43, 62, 63, 98, 102, 204, 205], "9900": 67, "99009901": 102, "9904": 89, "991": 102, "991052601328069": 70, "9927": 89, "995322265018952734162069256367": 70, "99862803482534211706798214808651328230664709384460955058223172535940812848111745": 66, "999": [62, 66], "999849107691": 231, "9999": 240, "9999999799999999": 110, "999999984582742099719981147840": 70, "99999999999999991611392": 252, "99999999999999999999": 62, "9j": [155, 196], "9th": 102, "9x": 230, "9y": [23, 29], "9z": 230, "A": [0, 3, 4, 6, 7, 10, 11, 12, 14, 15, 17, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 104, 105, 106, 108, 110, 112, 116, 117, 118, 120, 121, 122, 123, 126, 127, 130, 131, 136, 137, 138, 141, 142, 143, 144, 145, 148, 150, 153, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 184, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 223, 224, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 243, 244, 245, 246, 247, 249, 250, 256, 258, 260, 261, 262, 263, 265, 266, 273, 279, 281, 283, 284, 288], "AND": [65, 92], "And": [4, 10, 19, 20, 24, 37, 53, 54, 61, 62, 63, 70, 87, 92, 93, 98, 101, 120, 148, 195, 197, 199, 207, 208, 211, 219, 223, 224, 229, 230, 231, 249, 250, 261, 288], "As": [6, 15, 16, 19, 20, 22, 27, 28, 29, 34, 43, 53, 54, 62, 63, 66, 67, 68, 70, 86, 87, 92, 98, 101, 102, 104, 120, 125, 126, 128, 130, 137, 140, 141, 176, 181, 194, 198, 199, 201, 202, 204, 207, 208, 210, 211, 218, 219, 221, 227, 230, 231, 249, 250, 260, 261, 277, 278, 280, 282, 283, 284, 287, 288], "At": [3, 18, 20, 26, 41, 58, 68, 70, 89, 102, 105, 106, 116, 181, 185, 195, 206, 221, 250], "BE": 0, "BY": 224, "Be": [1, 4, 6, 20, 41, 62, 92, 98, 204, 227, 230, 238, 250], "Being": [4, 58, 72, 78, 201], "But": [3, 4, 7, 10, 11, 12, 20, 22, 31, 61, 62, 70, 76, 86, 93, 98, 102, 164, 165, 176, 181, 186, 198, 199, 204, 208, 218, 220, 221, 223, 224, 227, 229, 230, 236, 246, 249, 250, 259, 278, 280, 282, 283, 288], "By": [3, 12, 18, 20, 22, 26, 27, 29, 35, 36, 38, 43, 52, 61, 62, 64, 66, 67, 70, 76, 77, 81, 85, 87, 92, 93, 98, 101, 102, 103, 104, 105, 106, 110, 117, 171, 176, 197, 199, 201, 202, 204, 206, 207, 208, 210, 211, 213, 218, 220, 223, 224, 227, 229, 230, 231, 235, 237, 238, 242, 245, 249, 250, 263, 277, 282, 283, 288], "For": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 58, 61, 62, 63, 64, 65, 66, 67, 68, 70, 74, 76, 77, 80, 83, 85, 86, 87, 91, 92, 93, 98, 102, 103, 104, 105, 106, 112, 114, 118, 120, 121, 122, 126, 130, 136, 137, 138, 139, 140, 141, 143, 145, 159, 160, 165, 169, 171, 173, 174, 175, 176, 178, 180, 181, 182, 186, 190, 191, 192, 194, 195, 197, 198, 199, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 223, 224, 226, 227, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 246, 247, 249, 250, 253, 254, 256, 258, 261, 263, 265, 266, 277, 278, 280, 283, 284, 288, 289], "ITE": [68, 92, 211], "If": [1, 3, 4, 6, 7, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 51, 53, 54, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 87, 89, 90, 91, 92, 93, 95, 98, 99, 101, 102, 103, 104, 105, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 138, 139, 140, 141, 143, 144, 149, 153, 157, 160, 166, 170, 171, 172, 173, 174, 176, 180, 184, 185, 186, 187, 188, 190, 191, 192, 195, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 249, 250, 252, 256, 259, 261, 263, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289], "In": [1, 3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 22, 26, 31, 33, 39, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 61, 62, 63, 64, 66, 67, 68, 70, 75, 77, 78, 79, 80, 87, 89, 90, 91, 92, 93, 95, 98, 99, 102, 104, 106, 108, 112, 116, 120, 121, 126, 129, 130, 131, 136, 137, 138, 139, 140, 141, 143, 144, 162, 164, 165, 166, 171, 175, 176, 179, 180, 181, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 218, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 232, 233, 235, 237, 240, 242, 244, 246, 247, 249, 250, 253, 256, 260, 261, 263, 265, 277, 280, 281, 282, 283, 284, 287, 288, 289], "It": [0, 1, 3, 4, 5, 6, 7, 10, 11, 12, 16, 18, 19, 20, 22, 25, 26, 28, 29, 30, 33, 35, 36, 37, 38, 41, 42, 43, 50, 53, 54, 56, 57, 58, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 74, 78, 79, 85, 87, 89, 91, 92, 98, 102, 103, 104, 105, 106, 108, 110, 112, 114, 116, 117, 118, 120, 121, 126, 128, 134, 136, 137, 138, 139, 141, 143, 145, 149, 150, 160, 165, 166, 171, 172, 173, 174, 175, 176, 178, 181, 184, 186, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 211, 214, 218, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 242, 243, 244, 245, 246, 247, 250, 256, 259, 260, 261, 263, 265, 266, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288], "Its": [62, 68, 78, 143, 174, 200, 204, 211, 219], "NO": [29, 176], "NOT": [10, 92, 112, 156, 160, 175, 178, 240, 243], "No": [3, 6, 7, 12, 31, 42, 62, 70, 77, 92, 102, 105, 113, 126, 171, 197, 207, 213, 214, 223, 224, 229, 230, 231, 236, 240, 246, 247, 249, 277, 289], "Not": [10, 11, 19, 20, 27, 62, 67, 92, 112, 211, 230, 231, 249, 282, 289], "OF": 246, "ONE": 211, "OR": [11, 41, 65, 92, 204], "Of": [16, 18, 22, 61, 87, 98, 227, 230, 249, 288], "On": [1, 10, 18, 38, 55, 62, 64, 70, 89, 92, 102, 126, 180, 181, 192, 201, 204, 205, 206, 207, 227, 229, 246, 250, 263, 265], "One": [11, 12, 15, 18, 20, 41, 42, 43, 52, 54, 61, 62, 67, 68, 70, 81, 84, 86, 87, 89, 92, 98, 102, 105, 106, 126, 141, 143, 152, 181, 202, 204, 205, 207, 210, 213, 219, 223, 226, 229, 230, 231, 232, 237, 250, 263, 277, 278, 280, 283, 284, 288], "Or": [1, 7, 10, 12, 19, 24, 26, 53, 62, 63, 64, 70, 87, 92, 102, 123, 198, 208, 210, 211, 223, 230, 231, 242, 250, 263, 283, 286], "Ore": 85, "Such": [4, 6, 18, 43, 62, 78, 130, 198, 199, 206, 212, 220, 221, 223, 277, 283], "That": [0, 4, 7, 11, 12, 18, 19, 20, 62, 63, 68, 92, 98, 136, 173, 178, 184, 194, 195, 198, 199, 201, 202, 204, 206, 217, 218, 227, 231, 243, 244, 250, 277, 280, 283, 288], "The": [0, 1, 3, 5, 6, 7, 8, 11, 12, 14, 16, 17, 19, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 48, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 147, 148, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 256, 258, 259, 260, 261, 264, 265, 266, 273, 277, 278, 280, 281, 283, 284, 285, 286, 287, 288, 289], "Their": [6, 62, 70, 87, 196, 197, 201, 204, 221], "Then": [1, 5, 11, 16, 18, 53, 58, 61, 62, 87, 91, 98, 102, 118, 121, 123, 133, 135, 136, 141, 145, 173, 181, 194, 198, 199, 201, 204, 206, 208, 211, 218, 221, 223, 224, 227, 229, 250], "There": [1, 3, 4, 5, 6, 7, 10, 11, 12, 15, 18, 19, 20, 22, 25, 26, 30, 43, 44, 53, 54, 55, 56, 59, 61, 62, 63, 66, 67, 70, 86, 87, 89, 90, 91, 92, 95, 98, 102, 105, 106, 108, 112, 116, 125, 136, 138, 140, 149, 166, 171, 185, 186, 191, 194, 195, 197, 201, 202, 203, 204, 206, 207, 208, 211, 212, 213, 219, 220, 221, 223, 224, 227, 229, 230, 231, 233, 236, 245, 246, 249, 250, 252, 261, 277, 278, 280, 282, 283, 287, 288], "These": [0, 3, 6, 7, 10, 11, 12, 13, 14, 16, 18, 19, 20, 31, 32, 34, 42, 43, 53, 61, 62, 63, 64, 70, 87, 89, 92, 98, 104, 106, 112, 120, 121, 122, 128, 130, 134, 140, 143, 166, 171, 172, 180, 186, 187, 192, 194, 195, 198, 199, 200, 201, 202, 204, 207, 211, 221, 224, 227, 228, 230, 231, 233, 238, 242, 243, 244, 249, 263, 278, 281, 284, 287, 288], "To": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 16, 19, 20, 24, 25, 26, 28, 29, 30, 31, 33, 34, 37, 38, 41, 42, 43, 44, 52, 53, 54, 58, 61, 62, 63, 64, 66, 67, 68, 69, 70, 75, 85, 87, 89, 91, 92, 93, 95, 98, 102, 104, 105, 106, 110, 112, 113, 115, 117, 120, 121, 139, 140, 143, 153, 157, 170, 179, 181, 185, 192, 195, 197, 199, 201, 202, 204, 206, 207, 208, 210, 211, 218, 219, 221, 224, 227, 228, 229, 230, 231, 232, 235, 236, 240, 242, 243, 246, 247, 249, 250, 256, 258, 260, 261, 263, 265, 266, 277, 278, 280, 281, 283, 284, 287, 288, 289], "Will": [43, 98, 104, 206, 211, 242], "With": [4, 12, 19, 33, 43, 45, 61, 62, 66, 87, 102, 129, 130, 131, 137, 139, 140, 149, 173, 176, 195, 197, 198, 199, 201, 202, 209, 210, 211, 218, 223, 232, 249, 282, 283], "_": [4, 6, 7, 10, 12, 14, 16, 20, 37, 38, 42, 50, 51, 53, 54, 55, 58, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 75, 76, 77, 78, 87, 89, 92, 93, 94, 95, 96, 98, 100, 102, 104, 112, 138, 141, 143, 155, 176, 181, 185, 191, 194, 196, 202, 206, 207, 210, 211, 212, 214, 218, 219, 220, 221, 223, 224, 227, 228, 229, 232, 233, 249, 259, 261, 287], "_0": [62, 67, 87, 93, 98, 207, 250], "_1": [70, 98, 120, 186, 196, 221, 250], "_1cm": 42, "_1f_1": 70, "_2": [29, 98, 120, 185, 186, 196, 227], "_2cm": 42, "_2f_1": 288, "_3": [186, 196], "_3mm": 42, "_5": [45, 198], "__": [12, 70, 89, 211, 231, 236], "__1": 70, "___": [61, 66, 89, 90, 98, 199, 223, 231, 236, 249, 287], "____": [61, 66, 89, 148, 199, 212, 231, 249, 289], "_____": [61, 231], "______": 236, "________": [212, 231, 249], "__________": [43, 199], "___________": [66, 106, 227], "____________": 106, "_____________": 106, "_______________": 106, "________________": [106, 227], "_________________": 106, "__________________": 227, "_____________________": 106, "______________________": 106, "_______________________": 106, "________________________": 106, "______________________________": 231, "________________________________": 106, "_____________________________________": 106, "______________________________________________": 106, "_______________________________________________": 106, "____________________________________________________": 106, "_______________________________________________________": 197, "_____________________o_______________________": 106, "_______________v": 106, "____________o________________________": 106, "_______i_______": 106, "__abs__": [93, 202], "__add__": [93, 202, 206], "__all__": 245, "__bool__": 62, "__builtins__": 12, "__cacheit": 62, "__call__": [43, 54, 62, 206], "__class__": 250, "__cmp__": [153, 157, 176], "__contains__": 53, "__divmod__": 202, "__doc__": [6, 12], "__file__": [12, 253], "__floordiv__": 202, "__future__": [12, 16, 280, 287], "__getitem__": [10, 62, 93, 236], "__globals__": 250, "__index__": 252, "__init__": [4, 6, 20, 62, 121, 206, 256, 258, 283], "__init_subclass__": [10, 18], "__iter__": [10, 54, 62, 223], "__len__": 93, "__loader__": 253, "__main__": [12, 43, 284], "__mod__": [202, 206], "__mul__": [47, 53, 93, 98, 202, 206], "__name__": [12, 211, 253], "__neg__": 202, "__new__": [18, 20, 43, 53, 62, 283], "__package__": 12, "__pos__": 202, "__pow__": [10, 93, 202, 208], "__repr__": [10, 211], "__rmul__": 93, "__setitem__": 197, "__sub__": 202, "__truediv__": [62, 202], "__weakref__": [53, 93], "_a": [58, 70, 176, 207], "_add": [198, 217], "_aesara": 211, "_af_par": 54, "_af_rmul": 58, "_all_root": 207, "_amv": 207, "_appli": 198, "_apply_operators_qubit": 160, "_arg": [62, 68], "_array_form": 54, "_as_integr": 89, "_ask": 18, "_assume_rul": 18, "_assumpt": [18, 62], "_assumptions_orig": 62, "_b": [58, 70, 176], "_base_ord": 60, "_basic": 242, "_basic_orbit": 53, "_best": 227, "_build": [1, 6], "_c": 176, "_ccode": [20, 211], "_check_anteced": 87, "_check_antecedents_1": 87, "_check_antecedents_invers": 87, "_check_cycles_alt_sym": [53, 60], "_clash": [34, 62], "_clash1": [34, 62], "_clash2": [34, 62], "_cmp_perm_list": 59, "_coeffexpvalueerror": 87, "_collapse_extra": 89, "_complexes_index": 207, "_complexes_sort": 207, "_components_data_full_destroi": 10, "_compos": 198, "_compute_transform": 89, "_condsimp": 87, "_construct_": 43, "_contain": 198, "_contains_elem": 198, "_contains_id": 198, "_convert_poly_rat_alg": [81, 83], "_coset_repres": 53, "_count_root": 207, "_create_lookup_t": [83, 87], "_create_t": [81, 83], "_csrtodok": 101, "_cxxcode": [20, 211], "_d": 176, "_default_set": 211, "_dict": 224, "_diff_wrt": 62, "_distinct_primes_lemma": 53, "_distribute_gens_by_bas": 60, "_doktocsr": 101, "_dummi": 87, "_dummy_": 87, "_dummy_10": 62, "_dummy_fmt": 10, "_element": 53, "_ensure_complexes_init": 207, "_ensure_reals_init": 207, "_enumerate_st": 171, "_eval_": 11, "_eval_adjoint": 174, "_eval_as_leading_term": 62, "_eval_cond": 87, "_eval_deriv": [11, 20, 62, 70], "_eval_eq": 62, "_eval_evalf": [20, 207], "_eval_expand_": 20, "_eval_expand_bas": 62, "_eval_expand_complex": 62, "_eval_expand_doubl": 62, "_eval_expand_hint": 62, "_eval_expand_trig": 20, "_eval_i": 18, "_eval_integr": [68, 89], "_eval_is_": 18, "_eval_is_algebra": 18, "_eval_is_alt_sym_monte_carlo": 53, "_eval_is_alt_sym_na": 53, "_eval_is_eq": 62, "_eval_is_finit": 18, "_eval_is_g": 62, "_eval_is_imaginari": 207, "_eval_is_integ": 18, "_eval_is_nonneg": 20, "_eval_is_posit": 20, "_eval_is_r": [18, 20, 207], "_eval_is_zero": [18, 20], "_eval_nseri": 62, "_eval_rewrit": [20, 62], "_eval_rewrite_as_": 62, "_eval_rewrite_as_co": 62, "_expand": 7, "_expon": 87, "_fcode": 211, "_field": 43, "_find_reasonable_pivot": 98, "_find_splitting_point": 87, "_first": [62, 68], "_flip_g": 87, "_form_eom": 129, "_fourier_transform": 89, "_fun": 208, "_function": 87, "_g": 63, "_gcd_term": 62, "_generate_coordin": 120, "_generate_spe": 120, "_get_coeff_exp": 87, "_get_complex": 207, "_get_complexes_sqf": 207, "_get_interv": 207, "_get_ordered_dummi": 176, "_get_real": 207, "_get_reals_sqf": 207, "_get_root": 207, "_greek": 12, "_guess_expans": 87, "_h": [53, 230], "_handle_integr": 227, "_handle_precomputed_bsg": 60, "_hull": 79, "_i": [89, 176, 181, 208], "_ignor": 207, "_imag": 198, "_img": 198, "_imp_": [243, 250], "_in_terms_of_gener": 198, "_indexed_root": 207, "_inflate_fox_h": 87, "_inflate_g": 87, "_int0oo": 87, "_int0oo_1": 87, "_int_invers": 87, "_integr": [29, 227, 228], "_intersect": 198, "_invers": 63, "_is_analyt": 87, "_is_class": 230, "_is_exponenti": 230, "_is_logarithm": 230, "_is_zero_after_expand_mul": 98, "_iszero": [98, 284], "_iter": 249, "_j": [176, 181, 196, 213], "_javascript": 211, "_julia": 211, "_k": [67, 70, 89, 196, 206, 231], "_k_kqdot": 128, "_ker": 198, "_kernel": 198, "_l": 196, "_lambdacod": 211, "_lambdifygener": 250, "_latex": [20, 211], "_latin": 12, "_linear_2eq_order1_type6": 227, "_linear_2eq_order1_type7": 227, "_list": 102, "_m": [20, 70], "_mapl": 211, "_mathml_cont": 211, "_mathml_present": 211, "_mcode": 211, "_meijerint_definite_2": 87, "_meijerint_definite_3": 87, "_meijerint_definite_4": 87, "_meijerint_indefinite_1": 87, "_method": 129, "_minpoly_compos": 206, "_modgcd_multivariate_p": 204, "_module_quoti": 198, "_mpc_": 201, "_mpf_": [62, 201], "_mul": 217, "_mul_arg": 87, "_mul_as_two_part": 87, "_mul_scalar": 198, "_mult_tab": 206, "_my_principal_branch": 87, "_mytyp": 87, "_n": [20, 63, 67, 70, 89, 207, 221, 230], "_naive_list_centr": 59, "_name": 89, "_new": 207, "_nocheck": 77, "_node": 62, "_nonlinear_2eq_order1_type1": 227, "_nonlinear_2eq_order1_type2": 227, "_nonlinear_2eq_order1_type3": 227, "_nonlinear_2eq_order1_type4": 227, "_nonlinear_2eq_order1_type5": 227, "_nonlinear_3eq_order1_type1": 227, "_nonlinear_3eq_order1_type2": 227, "_nonlinear_3eq_order1_type3": 227, "_nonlinear_3eq_order1_type4": 227, "_nonlinear_3eq_order1_type5": 227, "_nth": 208, "_octav": 211, "_only_": 207, "_operators_to_st": 166, "_orbits_transversals_from_bsg": 60, "_order": 52, "_orient_fram": 120, "_p": [63, 176, 202, 204, 206, 218, 221, 229], "_p_0": 176, "_p_1": 176, "_p_elements_group": 53, "_pf_q": [70, 221, 227, 288], "_pg": 207, "_postprocess_root": 207, "_prec": 62, "_preprocess": 228, "_preprocess_root": 207, "_pretti": 211, "_print": [20, 211], "_print_": 211, "_print_atom": 211, "_print_bas": 211, "_print_deriv": 211, "_print_hyp": 211, "_print_meijerg": 211, "_print_numb": 211, "_print_rat": 211, "_process_seri": 197, "_product": 198, "_q": 176, "_quotient": 198, "_quotient_codomain": 198, "_quotient_domain": 198, "_r": [62, 176, 221, 230], "_randint": [10, 62, 204], "_random_gen": 53, "_random_pr_init": 53, "_random_prec": 53, "_random_prec_n": 53, "_randrang": [10, 62, 63], "_rang": 246, "_raw": 209, "_rcode": 211, "_real_root": 207, "_reals_index": 207, "_reals_sort": 207, "_recur": 84, "_refine_complex": 207, "_remove_gen": 60, "_repres": 171, "_represent_foobasi": 171, "_represent_szop": 171, "_represent_zg": 161, "_reset": [102, 207], "_restrict_codomain": 198, "_restrict_domain": 198, "_rewrit": 7, "_rewrite1": [81, 87], "_rewrite2": 87, "_rewrite_invers": 87, "_rewrite_saxena": 87, "_rewrite_saxena_1": 87, "_rewrite_singl": 87, "_root": 208, "_roots_trivi": 207, "_rust_cod": 211, "_sage_": 3, "_seri": [197, 208], "_set": 231, "_set_angular_veloc": 120, "_set_interv": 207, "_set_linear_veloc": 120, "_signsimp": 207, "_simplifi": 98, "_sizedinttyp": 43, "_slope": 72, "_smtlib": 211, "_solve_ab": 230, "_solve_as_poli": 230, "_solve_as_poly_complex": 230, "_solve_as_poly_r": 230, "_solve_as_r": 230, "_solve_class": 230, "_solve_expo": 230, "_solve_exponenti": 230, "_solve_lin_si": 209, "_solve_lin_sys_compon": 209, "_solve_logarithm": 230, "_solve_rad": 230, "_solve_real_trig": 230, "_solve_system": 230, "_solve_using_known_valu": 230, "_sort_variable_count": 62, "_sparse_": 212, "_split_mul": 87, "_state_to_oper": 166, "_str": 185, "_strip": [53, 60], "_strong_gens_from_distr": 60, "_succ": 53, "_sylow_alt_sym": 53, "_sympifi": [10, 62, 95, 283], "_sympy_": [10, 62], "_sympyrepr": 211, "_sympystr": 211, "_syzygi": 198, "_t": [89, 126, 129, 143, 176, 185, 186, 190, 221, 231], "_tan": 208, "_tan1": 208, "_tensormanag": 237, "_test": 242, "_token_splitt": 104, "_tr56": 220, "_transolv": 230, "_try_heurisch": 89, "_tsolv": 230, "_tupl": 102, "_u": [89, 176], "_union": 198, "_union_find_merg": 53, "_union_find_rep": 53, "_v": [176, 195], "_verifi": 53, "_verify_bsg": [53, 59, 60], "_verify_centr": 59, "_verify_normal_closur": 59, "_w": [207, 218], "_w0_0": 98, "_w1_0": 98, "_w2_0": 98, "_x": [18, 20, 98, 137, 141, 191, 194, 195, 202, 208, 223, 227, 243], "_xi_1": 228, "_y": [20, 24, 137, 141, 191, 194, 195], "_z": [20, 89, 137, 141, 194, 195, 231], "a0": [58, 227, 288], "a000073": 67, "a000085": 70, "a000111": [67, 207], "a066272": 102, "a066272a": 102, "a1": [54, 58, 62, 90, 93, 102, 106, 126, 143, 150, 227, 231, 232, 262, 288], "a10": 79, "a1pt": 143, "a1pt_theori": [143, 190], "a2": [54, 58, 62, 91, 93, 102, 106, 126, 143, 150, 200, 231, 232, 262, 288], "a217120": 102, "a217255": 102, "a217719": 102, "a2idx": 98, "a2pt": 143, "a2pt_theori": [143, 190, 194], "a3": [54, 58, 62, 91, 93, 143, 262, 288], "a4": [45, 58, 62, 91, 143, 288], "a4_in_s6": 45, "a4xc2": 45, "a5": [58, 62], "a6": 62, "a6_wrong": 62, "a9chet_distribut": 231, "a9vy_distribut": 231, "a_": [25, 58, 62, 63, 70, 87, 91, 93, 95, 112, 113, 141, 213, 221, 224, 227, 229, 231, 232, 233], "a_0": [93, 98, 214, 224, 227, 232, 288], "a_0_0": 98, "a_0_0_0": 98, "a_0_0_1": 98, "a_0_1": 98, "a_0_1_0": 98, "a_0_1_1": 98, "a_0_2": 98, "a_0_2_0": 98, "a_0_2_1": 98, "a_1": [52, 53, 63, 70, 84, 87, 93, 98, 113, 176, 181, 199, 204, 221, 224, 227, 231, 288], "a_1_0": 98, "a_1_0_0": 98, "a_1_0_1": 98, "a_1_1": 98, "a_1_1_0": 98, "a_1_1_1": 98, "a_1_2": 98, "a_1_2_0": 98, "a_1_2_1": 98, "a_1x_1": [25, 224], "a_2": [53, 63, 84, 98, 204, 221, 224, 227, 231, 288], "a_2x_2": [25, 224], "a_3": 98, "a_4": 45, "a_5": 45, "a_6": 45, "a_and_b": [121, 122, 130], "a_b": 143, "a_i": [87, 181, 186, 195, 199, 204, 221], "a_ij": 236, "a_interv": 219, "a_ixi": 117, "a_ixx": 117, "a_iyi": 117, "a_iyz": 117, "a_izx": 117, "a_izz": 117, "a_j": [52, 70, 87, 181, 204, 213, 221], "a_k": [53, 63, 208, 214], "a_kx_k": 208, "a_lin": 140, "a_m": [58, 227], "a_mass": 117, "a_n": [58, 63, 70, 87, 91, 181, 199, 204, 206, 214, 224, 227, 288], "a_non_commut": 227, "a_nx_n": [25, 224], "a_o_n": 143, "a_op": 140, "a_p": [70, 87, 221, 288], "a_prim": 62, "a_r": [52, 221], "a_real": 236, "a_t": 227, "a_x": [186, 195, 211], "a_z": [186, 195], "aa": [67, 196], "aaa": 249, "aaaabbbbcccc": 67, "aab": [67, 249], "aabbc": 67, "aabc": 67, "aaecc": 229, "aand": [70, 89], "aaron": 0, "aau": 105, "ab": [12, 40, 43, 44, 61, 62, 63, 66, 67, 68, 70, 74, 85, 87, 92, 93, 98, 108, 114, 143, 176, 199, 202, 206, 207, 211, 224, 226, 229, 230, 231, 233, 237, 246, 249, 252, 262, 288], "aba": 249, "abb": [246, 249], "abbrev": [182, 183, 211], "abbrevi": [183, 199, 211, 230, 232], "abc": [4, 6, 12, 14, 15, 20, 22, 24, 26, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 43, 51, 53, 55, 61, 62, 63, 64, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 85, 86, 87, 89, 90, 92, 93, 95, 98, 101, 103, 110, 112, 114, 147, 149, 151, 152, 157, 174, 176, 177, 198, 200, 202, 204, 206, 207, 208, 211, 212, 213, 214, 216, 217, 218, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 238, 243, 244, 245, 246, 247, 249, 250, 252, 256, 259, 260, 261, 266, 268, 280, 283, 287], "abcbb": 249, "abcd": [51, 55, 176, 233, 249, 252], "abcdef": 280, "abel": [22, 31, 98], "abelian": [49, 50, 53, 91, 181, 198, 268], "abelian_invari": 53, "abeliangroup": [50, 53], "abi": 249, "abij": 176, "abil": [12, 18, 41, 98, 136, 206, 210, 227, 230, 282, 288], "abji": 176, "abl": [3, 4, 6, 11, 16, 18, 20, 25, 29, 42, 43, 53, 58, 62, 63, 64, 73, 81, 89, 95, 98, 102, 109, 126, 138, 140, 141, 143, 144, 198, 201, 202, 208, 227, 230, 242, 260, 282, 287, 289], "abnorm": 204, "abort": 240, "about": [4, 5, 6, 7, 10, 11, 12, 13, 16, 18, 19, 20, 22, 27, 29, 31, 32, 33, 35, 36, 38, 39, 42, 43, 53, 54, 55, 56, 62, 66, 68, 70, 72, 73, 74, 76, 77, 78, 82, 84, 88, 89, 91, 98, 102, 105, 106, 112, 116, 117, 118, 120, 121, 122, 123, 125, 126, 130, 140, 141, 171, 173, 174, 176, 180, 185, 186, 194, 195, 196, 198, 200, 201, 206, 208, 211, 213, 218, 223, 224, 225, 227, 231, 235, 236, 242, 243, 244, 245, 246, 247, 256, 258, 260, 263, 264, 271, 274, 277, 279, 280, 282, 283, 284, 288], "abov": [1, 3, 4, 6, 7, 10, 12, 14, 16, 19, 20, 22, 24, 28, 29, 31, 41, 42, 43, 44, 46, 52, 53, 54, 58, 61, 62, 66, 67, 70, 72, 75, 78, 79, 87, 89, 92, 93, 98, 102, 103, 104, 106, 112, 116, 120, 121, 123, 125, 126, 128, 129, 130, 131, 136, 137, 139, 140, 141, 144, 171, 173, 176, 186, 192, 194, 195, 197, 198, 199, 201, 202, 204, 206, 207, 208, 210, 211, 212, 218, 221, 223, 224, 227, 229, 230, 231, 235, 236, 243, 244, 250, 260, 261, 262, 263, 266, 280, 282, 283, 284, 288], "above_fermi": [70, 176], "abracadabra": 249, "abramov": [205, 229], "abramov71": [205, 207], "abramowitz": [6, 70], "abridg": 198, "abs_sqrd": 114, "absenc": [45, 58, 92], "absent": [6, 46, 229], "absolut": [1, 39, 40, 43, 61, 62, 68, 70, 77, 87, 89, 93, 98, 114, 174, 202, 206, 207, 221, 223, 226, 231, 242, 265, 266, 267], "absolute_converg": 61, "absorb": [10, 11, 87, 227, 231, 278], "absorbing_markov_chain": 231, "absorbing_prob": [10, 231], "absorpt": 227, "abstract": [0, 10, 41, 42, 51, 62, 64, 68, 70, 75, 80, 95, 120, 126, 160, 162, 171, 174, 175, 176, 198, 206, 230, 231, 233, 237, 244, 265], "abund": 102, "abundantnumb": 102, "abus": [62, 237], "ac": [35, 43, 54, 74, 108, 123, 141, 153, 231, 249, 252], "academ": [0, 42, 46, 205], "acb": 249, "acc": [42, 143, 190, 194], "acceler": [4, 103, 123, 128, 133, 135, 140, 141, 143, 179, 186, 190, 192, 246, 265], "acceleration_": 143, "acceleration_constraint": 121, "accept": [6, 11, 20, 24, 31, 42, 43, 53, 62, 68, 76, 89, 92, 93, 95, 98, 101, 104, 126, 170, 180, 186, 191, 197, 206, 207, 210, 211, 212, 219, 221, 223, 229, 243, 250, 256, 258, 261, 284], "accepted_latex_funct": 211, "access": [3, 6, 7, 11, 12, 18, 20, 36, 37, 38, 43, 62, 70, 91, 92, 95, 98, 103, 106, 112, 113, 120, 121, 125, 126, 144, 185, 186, 192, 195, 197, 201, 202, 204, 206, 223, 227, 232, 235, 243, 244, 260, 263, 283, 287], "accid": [63, 250], "accident": 11, "accompani": 42, "accomplish": [24, 89, 140, 143, 263], "accord": [7, 12, 43, 50, 53, 54, 58, 61, 62, 63, 70, 92, 95, 98, 102, 104, 120, 127, 136, 170, 176, 197, 202, 204, 206, 208, 224, 229, 230, 237, 242, 244, 249, 265], "accordingli": [53, 199, 206], "account": [4, 11, 68, 98, 214, 223, 227], "accumul": [53, 242, 246], "accur": [4, 10, 12, 16, 20, 22, 41, 53, 62, 66, 67, 84, 89, 109, 197, 218, 277, 284], "accuraci": [12, 16, 41, 62, 207, 284], "achiev": [11, 12, 20, 62, 66, 70, 95, 102, 126, 143, 210, 218, 221, 223, 230, 233, 245, 261], "acm": [44, 61, 87, 89, 202, 205, 221, 223, 227, 229], "aco": [6, 12, 35, 68, 75, 78, 128, 143, 149, 186, 211, 227, 256, 288], "acosh": [68, 211], "acot": [68, 211], "acoth": [68, 211], "acquir": 253, "across": [4, 7, 53, 60, 62, 73, 89, 106, 175, 176, 183, 197, 211, 246, 248, 249, 250, 286], "acsc": [68, 211], "acsch": [68, 211], "act": [11, 42, 45, 52, 53, 54, 58, 62, 70, 78, 91, 92, 98, 105, 108, 117, 120, 125, 126, 131, 139, 148, 160, 165, 168, 169, 219, 230, 232, 233, 261, 265, 277], "action": [1, 3, 7, 53, 91, 168, 171, 181, 207, 223, 230], "activ": [1, 4, 5, 13, 128, 197, 240, 245, 247], "active_deprecations_target": [4, 240, 245, 247], "activepython": 33, "activest": 249, "actual": [1, 3, 4, 6, 7, 11, 12, 16, 18, 19, 20, 42, 43, 44, 51, 53, 60, 62, 63, 70, 74, 87, 89, 91, 95, 98, 102, 112, 116, 126, 128, 138, 139, 140, 191, 198, 201, 206, 211, 219, 221, 223, 224, 227, 230, 238, 242, 243, 246, 247, 249, 250, 282], "acycl": 249, "ad": [1, 6, 7, 10, 18, 24, 26, 35, 42, 43, 46, 52, 53, 62, 63, 73, 77, 84, 87, 91, 102, 104, 108, 116, 117, 120, 126, 127, 143, 150, 178, 181, 187, 196, 197, 206, 208, 210, 211, 213, 221, 224, 227, 230, 231, 233, 236, 237, 242, 259, 280], "adam": [196, 207], "adamek": 42, "adapt": [10, 110, 197, 217, 229, 249, 255], "add": [3, 4, 5, 6, 10, 11, 12, 15, 18, 29, 35, 37, 41, 43, 51, 53, 58, 63, 66, 69, 77, 79, 87, 91, 95, 98, 102, 105, 108, 117, 126, 143, 154, 160, 170, 175, 176, 179, 194, 195, 197, 200, 201, 202, 204, 206, 207, 208, 211, 212, 221, 223, 224, 227, 228, 230, 231, 233, 235, 236, 237, 245, 250, 254, 278, 280, 283, 287, 288], "add_as_root": 91, "add_formula": 221, "add_gen": 202, "add_ground": [202, 207], "add_handl": 10, "add_memb": 108, "add_nod": 108, "add_simple_root": 91, "add_typ": 230, "addaugmentedassign": 43, "addb": 221, "addend": 237, "addison": [46, 54, 102, 205], "addit": [0, 3, 4, 7, 10, 11, 12, 14, 16, 33, 35, 43, 52, 53, 54, 61, 62, 68, 70, 74, 80, 82, 86, 87, 89, 90, 92, 95, 98, 104, 109, 110, 112, 116, 117, 121, 140, 141, 144, 162, 174, 175, 178, 191, 194, 195, 196, 197, 198, 199, 200, 201, 204, 206, 207, 211, 217, 220, 221, 223, 224, 227, 228, 229, 230, 231, 242, 243, 244, 246, 247, 249, 250, 252, 260, 280, 282, 283, 284, 287, 288], "addition": [3, 6, 10, 62, 138, 174, 195, 204, 211, 231, 240, 247, 260], "additional_transl": 10, "address": [62, 211, 230], "addrul": 89, "adequ": 211, "adher": [4, 7, 87], "adi": 233, "adic": 205, "adj": 98, "adjac": [52, 53, 54, 62, 67, 112, 148, 200, 249], "adject": [11, 231], "adjoin": [53, 199], "adjoint": [91, 93, 98, 153, 157], "adjug": 98, "adjust": [125, 214, 218], "admiss": [213, 216], "admit": [70, 227], "adopt": [53, 237], "advanc": [7, 15, 17, 20, 37, 53, 62, 66, 67, 98, 99, 136, 141, 193, 197, 200, 201, 203, 205, 206, 213, 220, 227, 242, 243, 244, 249, 273, 277, 279, 281, 285, 286, 287, 288], "advantag": [5, 10, 14, 18, 20, 22, 38, 41, 43, 62, 63, 67, 89, 92, 98, 102, 109, 180, 200, 201, 208, 219, 224, 227, 230, 246, 280, 282, 284, 288], "advers": 62, "advertis": 7, "advis": [10, 18, 31, 42, 120, 126], "ae": 208, "aegean": 63, "aesara": [3, 10, 43, 143], "aesara_cod": [10, 211], "aesara_funct": [43, 103, 211], "aesaracod": [3, 10, 43, 103, 211], "aesaraprint": [10, 211], "aeseara": 3, "aesthet": [7, 11, 197], "af": [50, 53, 59, 143], "affect": [10, 18, 20, 61, 62, 98, 185, 207, 229, 230, 261], "affin": [62, 63, 77, 198], "affine_ciph": 63, "affine_rank": 77, "affirm": 219, "aforement": [128, 192, 224, 263], "after": [1, 4, 5, 6, 7, 10, 12, 33, 35, 37, 38, 42, 44, 50, 53, 54, 58, 60, 61, 62, 63, 64, 68, 77, 79, 84, 89, 93, 98, 102, 104, 105, 112, 137, 138, 140, 143, 145, 149, 161, 173, 181, 185, 192, 195, 200, 204, 206, 207, 208, 209, 211, 212, 217, 224, 227, 228, 229, 230, 232, 242, 245, 250, 252, 256, 259, 263, 277, 278, 280, 284, 288], "afterward": [12, 43, 62, 123, 130], "afunc": 250, "ag": 227, "again": [1, 4, 12, 16, 19, 45, 54, 62, 77, 102, 126, 128, 141, 171, 172, 186, 194, 198, 199, 206, 214, 221, 227, 240, 260, 280, 288], "against": [10, 18, 20, 31, 63, 98, 105, 126, 243], "agca": [203, 274], "agnost": 244, "agre": [62, 63, 70, 77, 87, 221], "ahead": [6, 102], "ai": [70, 102, 207, 224, 233, 252, 288], "aid": [43, 128], "aim": [6, 7, 80, 87, 181, 198, 221, 227, 230, 281, 282], "airi": [89, 227], "airspe": 3, "airy_funct": 70, "airyai": [70, 211, 227], "airyaiprim": [70, 211], "airybas": 70, "airybi": [70, 211, 227], "airybiprim": [70, 211], "airyfunct": 70, "aitken_html": 224, "ajwa": 205, "ajwa95": 205, "ak": [61, 213], "aka": 95, "akrita": 207, "al": [89, 126, 155, 204, 220, 223], "albeit": [89, 260], "aleaxit": 66, "alembertian": 229, "alexandria": 224, "alf_b_n": 143, "alg": [202, 206, 210], "alg_con": [125, 144], "alg_con_ful": 144, "alg_field_from_poli": [202, 206], "algebra": [0, 7, 11, 12, 14, 18, 23, 28, 31, 39, 44, 45, 53, 62, 63, 66, 68, 80, 83, 84, 85, 87, 89, 92, 93, 97, 99, 102, 103, 104, 125, 136, 143, 144, 196, 199, 200, 202, 203, 204, 205, 207, 208, 211, 213, 221, 224, 226, 227, 230, 267, 268, 271, 273, 274, 279, 280, 282, 284], "algebraic_express": 62, "algebraic_field": [201, 202, 204, 206], "algebraic_multipl": 284, "algebraic_numb": [18, 39, 62], "algebraiccomput": 62, "algebraicfield": [201, 202, 204, 206], "algebraichandl": 39, "algebraicnumb": [62, 202, 206, 210], "algebraicpred": 39, "algintpow": 206, "algo": [43, 54], "algo2008": 54, "algorithm": [3, 6, 11, 18, 22, 26, 28, 30, 31, 41, 46, 47, 52, 53, 54, 56, 58, 60, 61, 62, 63, 66, 67, 68, 74, 79, 87, 89, 92, 95, 98, 99, 102, 105, 113, 120, 140, 163, 181, 186, 196, 197, 198, 199, 200, 201, 202, 205, 206, 208, 212, 216, 219, 220, 223, 224, 227, 229, 230, 231, 237, 246, 249, 273, 278, 283, 284, 288], "algorithmist": 53, "alia": [43, 55, 62, 72, 78, 93, 94, 96, 100, 160, 169, 176, 198, 201, 202, 206, 210, 219, 242, 252, 288], "alias": [96, 202], "alic": [53, 63], "align": [10, 43, 72, 98, 120, 195, 196, 211, 229, 242], "alignof": 43, "alkiviadi": 207, "all": [0, 1, 3, 4, 5, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 27, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 87, 89, 91, 92, 93, 94, 95, 98, 101, 102, 103, 104, 105, 106, 108, 110, 112, 113, 117, 118, 120, 121, 123, 125, 126, 128, 129, 131, 136, 138, 140, 143, 144, 150, 155, 156, 160, 170, 172, 173, 174, 176, 178, 179, 180, 181, 183, 184, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 235, 237, 238, 240, 242, 243, 244, 245, 247, 249, 250, 252, 256, 258, 260, 262, 263, 264, 265, 267, 277, 278, 280, 282, 283, 284, 287, 288, 289], "all_coeff": [201, 202, 207], "all_integr": [29, 227, 228], "all_model": 92, "all_monom": [202, 207], "all_root": [91, 102, 207], "all_term": [202, 207], "allei": 70, "allhint": [227, 228], "alli": 206, "alloc": [43, 68], "allow": [3, 4, 7, 10, 11, 12, 18, 20, 22, 39, 42, 43, 44, 46, 53, 55, 58, 61, 62, 63, 66, 68, 70, 72, 73, 74, 87, 90, 92, 93, 95, 96, 98, 102, 103, 104, 106, 120, 121, 126, 128, 136, 140, 141, 143, 148, 160, 176, 180, 181, 182, 195, 197, 198, 201, 202, 204, 206, 207, 208, 211, 216, 218, 219, 220, 223, 224, 227, 229, 230, 231, 232, 236, 242, 245, 247, 249, 250, 261, 280, 283], "allow_half": 62, "allow_hyp": [70, 223], "allow_unknown_funct": 211, "almost": [27, 87, 96, 104, 178, 197, 198, 202, 207, 208, 227, 231, 245, 246, 249, 282], "almost_linear": 227, "almost_linear_integr": 227, "almosteq": 202, "almostlinear": 227, "alon": [18, 63, 90, 204, 227, 229, 236, 249, 282, 283], "along": [16, 20, 22, 43, 53, 62, 63, 64, 68, 70, 71, 72, 76, 77, 80, 82, 85, 87, 93, 95, 98, 105, 106, 108, 115, 116, 120, 121, 128, 130, 133, 134, 135, 138, 139, 140, 143, 145, 173, 185, 186, 192, 195, 197, 200, 201, 206, 207, 227, 230, 259, 263, 265], "alongsid": [4, 10, 20, 95], "alp": 63, "alpertron": 224, "alpha": [7, 12, 53, 62, 70, 89, 91, 148, 152, 155, 173, 190, 194, 195, 196, 202, 204, 206, 207, 210, 211, 223, 227, 231], "alpha_": [93, 196], "alpha_0": 93, "alpha_1": [93, 102, 206], "alpha_2": [102, 206], "alpha_i": 206, "alpha_k": 102, "alpha_m": 206, "alpha_n": 206, "alpha_r": 221, "alphabet": [62, 63, 112, 181, 199, 224, 244], "alphanumer": 227, "alreadi": [3, 4, 10, 12, 18, 20, 25, 26, 29, 31, 33, 35, 53, 54, 62, 63, 71, 72, 75, 76, 78, 87, 89, 93, 99, 102, 108, 113, 117, 126, 140, 145, 171, 173, 176, 192, 194, 195, 197, 200, 201, 204, 206, 210, 214, 220, 221, 223, 227, 230, 231, 237, 261, 263, 278, 280, 281, 282, 286, 287, 288, 289], "also": [0, 1, 3, 4, 7, 8, 10, 11, 12, 14, 16, 18, 19, 20, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 51, 53, 54, 61, 63, 64, 66, 67, 68, 69, 70, 74, 78, 80, 82, 84, 85, 87, 89, 91, 92, 93, 96, 98, 99, 102, 103, 104, 105, 106, 108, 109, 110, 112, 116, 117, 118, 120, 121, 125, 126, 128, 129, 130, 131, 134, 137, 138, 139, 140, 141, 143, 144, 145, 149, 159, 160, 162, 166, 170, 175, 176, 179, 180, 181, 185, 186, 188, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 242, 243, 244, 245, 246, 247, 250, 252, 256, 259, 260, 261, 262, 263, 265, 266, 277, 278, 280, 282, 283, 284, 287, 288, 289], "alt": [43, 206], "alter": [12, 44, 53, 62, 186, 201, 211, 213, 230], "altern": [1, 4, 6, 10, 11, 12, 19, 20, 33, 43, 50, 53, 54, 61, 62, 66, 67, 68, 69, 70, 93, 95, 99, 103, 126, 138, 140, 186, 194, 196, 197, 199, 200, 201, 206, 207, 211, 216, 218, 220, 229, 230, 232, 233, 249, 280, 282, 284], "alternating_permut": 67, "alternatinggroup": [50, 53, 59], "alternatingpermut": 67, "although": [0, 3, 4, 6, 7, 11, 12, 15, 16, 18, 20, 25, 54, 62, 63, 68, 74, 86, 87, 90, 92, 93, 95, 98, 102, 105, 116, 128, 143, 198, 201, 202, 204, 206, 207, 219, 220, 223, 224, 229, 243, 249, 250, 280, 283, 288], "altitud": 78, "alwai": [4, 6, 7, 10, 11, 12, 18, 19, 20, 27, 33, 35, 42, 53, 54, 61, 62, 63, 64, 66, 68, 70, 72, 74, 77, 78, 86, 87, 89, 92, 93, 98, 101, 102, 108, 112, 113, 125, 126, 128, 130, 134, 144, 176, 178, 181, 182, 192, 194, 198, 199, 201, 202, 204, 206, 207, 211, 212, 213, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 238, 242, 244, 249, 250, 256, 258, 263, 278, 280, 281, 282, 283, 288], "am": [102, 181, 211], "amalgam": 87, "amat": 128, "ambient": 77, "ambient_dimens": [71, 73, 75, 77], "ambigu": [7, 10, 12, 14, 62, 164, 170, 223, 235, 240], "amd64": 43, "amen": 136, "amend": 53, "amer": 98, "american": [7, 48, 63], "ami": 102, "ami_42_from129to134": 102, "amic": 102, "amicable_numb": 102, "amirgi": 231, "amit": [0, 230], "among": [18, 42, 43, 44, 46, 53, 54, 63, 90, 103, 207, 227, 232, 235, 237, 260], "amongst": [18, 229], "amount": [6, 42, 62, 63, 74, 120, 136, 186, 192, 195, 204, 214, 242, 256, 258], "amper": [147, 180], "amplitud": [110, 150], "amsfont": 211, "amsmath": 211, "amus": 198, "an": [0, 1, 3, 4, 6, 7, 9, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 27, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 112, 113, 114, 116, 117, 120, 121, 123, 125, 128, 130, 136, 138, 140, 141, 143, 144, 147, 148, 149, 153, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 169, 170, 171, 173, 174, 176, 177, 178, 180, 185, 186, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 223, 224, 226, 227, 228, 229, 231, 232, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 256, 258, 260, 261, 263, 264, 265, 266, 277, 278, 279, 280, 281, 282, 284, 287, 288, 289], "analog": [20, 22, 27, 55, 61, 63, 67, 141, 194, 195, 198, 199, 200, 204, 216, 232, 249], "analogi": [61, 204], "analogu": [19, 39, 61, 76, 201, 202], "analyitc": 87, "analys": [42, 110, 112, 143, 231], "analysi": [16, 43, 44, 53, 62, 63, 68, 109, 128, 140, 141, 144, 198, 207, 221, 224, 231], "analyt": [11, 33, 67, 70, 87, 98, 136, 227, 278], "analytic_func": 98, "analyz": [223, 236], "anc": 206, "ancestor": 206, "andi": [0, 142], "andr": [67, 207], "andre_poli": [67, 207], "andreescu": 224, "andrew": 79, "andrica": 224, "anf": 92, "anf_coeff": 92, "anfform": 92, "ang": 128, "ang_acc_in": [143, 186], "ang_vel_in": [117, 120, 126, 133, 134, 143, 186, 194], "angelia": 41, "angl": [20, 35, 68, 70, 71, 72, 73, 75, 76, 77, 78, 108, 114, 120, 125, 126, 128, 129, 130, 131, 137, 140, 145, 148, 149, 150, 173, 181, 186, 194, 195, 196, 211, 220, 230, 256, 258, 261, 288], "angle1": [256, 258], "angle2": [256, 258], "angle3": [256, 258], "angle_addit": 35, "angle_between": [75, 76, 78, 186], "angle_of_incid": 149, "angular": [105, 114, 117, 120, 123, 128, 129, 130, 131, 133, 135, 137, 140, 143, 145, 149, 150, 152, 155, 173, 177, 186, 190, 196], "angular_deflect": 105, "angular_momentum": [123, 141, 143], "angular_veloc": 150, "angvel": 143, "ani": [1, 3, 4, 5, 6, 7, 10, 11, 12, 14, 15, 18, 19, 20, 22, 24, 25, 26, 29, 33, 39, 40, 41, 42, 43, 44, 51, 52, 53, 54, 60, 61, 62, 63, 64, 66, 67, 68, 70, 72, 73, 74, 77, 78, 79, 87, 89, 90, 92, 93, 96, 98, 99, 102, 104, 105, 106, 108, 112, 114, 117, 120, 121, 122, 123, 125, 126, 136, 139, 140, 141, 144, 145, 149, 162, 165, 170, 171, 174, 176, 178, 181, 185, 186, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 211, 212, 217, 218, 219, 220, 221, 223, 224, 227, 228, 229, 231, 233, 236, 237, 242, 243, 245, 246, 247, 249, 250, 256, 260, 261, 262, 263, 265, 266, 277, 278, 280, 283, 284, 287, 288, 289], "annal": 54, "annihil": [61, 80, 81, 85, 152, 176, 229], "annihilateboson": 176, "annihilatefermion": 176, "annot": [29, 102, 197, 211], "annoy": 62, "anoth": [4, 6, 7, 10, 11, 12, 15, 16, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 39, 42, 43, 54, 59, 61, 62, 63, 64, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 87, 89, 95, 98, 102, 105, 106, 117, 123, 137, 165, 180, 181, 183, 186, 190, 194, 195, 197, 199, 201, 202, 204, 206, 207, 208, 211, 212, 218, 219, 221, 227, 229, 230, 231, 243, 244, 250, 256, 260, 261, 265, 277, 280, 282, 283, 288, 289], "anp": [62, 201, 202, 206, 207], "answer": [4, 18, 20, 22, 53, 62, 66, 84, 87, 89, 92, 98, 102, 181, 204, 208, 220, 221, 223, 229, 231, 246, 252, 282, 284, 288], "anteced": [87, 218], "anthoni": 0, "anti": [11, 35, 39, 58, 68, 89, 93, 148, 153, 237], "anti_symmetr": 98, "anticip": 181, "anticlockwis": 93, "anticommut": [58, 163, 165, 175, 176, 237, 273], "antideriv": [11, 68, 70, 89, 227, 278], "antiderv": 227, "antidivisor": 102, "antidivisor_count": 102, "antihermitian": [18, 39, 62], "antihermitianhandl": 39, "antihermitianpred": 39, "antipattern": [20, 281], "antisym": 58, "antisymmetr": [58, 64, 93, 176, 237], "antisymmetrictensor": 176, "antlr": [3, 104, 126], "antlr4": [3, 104], "anymor": 197, "anyon": [6, 7, 10, 32, 207, 211, 276, 286, 287], "anyth": [4, 6, 7, 10, 12, 20, 41, 43, 62, 63, 73, 77, 98, 126, 150, 160, 208, 211, 217, 219, 223, 227, 229, 243, 249, 252, 280], "anyv": 63, "anywai": [87, 223, 227], "anywher": [4, 6, 10, 18, 43, 62, 70, 76, 176, 252, 282], "ao": 143, "aocp": 246, "aother": 70, "ap": [70, 74, 221], "apart": [20, 35, 53, 58, 62, 66, 68, 89, 192, 199, 202, 204, 207, 210, 213, 224, 230, 237, 261, 263, 283], "apart_list": 207, "aperiod": 41, "apfloat": 65, "aphras": 63, "api": [6, 7, 10, 18, 21, 25, 27, 43, 62, 74, 82, 103, 104, 111, 136, 143, 172, 185, 193, 197, 204, 224, 226, 250, 253, 260, 261, 264, 271, 273, 274, 281, 282, 285], "apoapsi": 72, "apothem": 78, "app": 89, "app1": 231, "appar": [11, 12, 62, 252, 288], "appdata": 1, "appeal": 87, "appear": [6, 7, 11, 12, 14, 29, 42, 43, 46, 51, 53, 62, 63, 67, 68, 71, 72, 75, 78, 81, 85, 87, 89, 93, 98, 102, 104, 126, 130, 160, 176, 178, 181, 197, 199, 201, 204, 206, 207, 211, 220, 223, 227, 228, 229, 231, 235, 237, 242, 249, 250, 256, 261], "appel": [67, 70], "appell_seri": 70, "appellf1": [70, 211], "appellseq": [67, 207], "append": [24, 29, 53, 62, 63, 98, 106, 143, 171, 197, 202, 211, 229, 232, 244, 245, 249, 288], "appetit": 282, "appli": [7, 10, 11, 19, 20, 27, 31, 35, 36, 37, 38, 39, 43, 53, 54, 55, 60, 61, 62, 63, 64, 65, 68, 69, 72, 77, 78, 80, 89, 92, 93, 94, 98, 102, 104, 105, 106, 108, 112, 113, 117, 118, 128, 131, 138, 140, 142, 153, 157, 160, 161, 165, 168, 169, 173, 176, 186, 195, 197, 199, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 217, 218, 219, 220, 223, 227, 228, 229, 230, 231, 232, 235, 242, 245, 249, 256, 258, 261, 284, 287, 288], "applic": [0, 7, 10, 23, 26, 44, 45, 46, 52, 53, 54, 55, 62, 63, 68, 89, 93, 98, 102, 105, 108, 120, 121, 125, 126, 136, 140, 142, 143, 160, 161, 186, 190, 194, 199, 200, 204, 205, 206, 207, 211, 213, 218, 224, 227, 230, 244, 249, 256, 263, 264, 271, 282], "applied_load": 105, "appliedpermut": 54, "appliedpred": [15, 36, 37, 38], "appliedundef": 62, "apply_finite_diff": [41, 62, 278], "apply_forc": [117, 120, 131], "apply_grov": 161, "apply_load": [105, 106, 108], "apply_moment_load": 105, "apply_oper": [165, 176], "apply_support": [105, 108], "apply_torqu": [117, 131], "applyfunc": [93, 94, 98, 134, 186, 232], "approach": [1, 16, 22, 25, 26, 27, 29, 30, 31, 42, 61, 62, 89, 112, 130, 136, 201, 204, 205, 206, 208, 219, 228, 229, 231, 243, 246, 249, 278, 284], "appropri": [3, 6, 7, 10, 12, 16, 26, 30, 53, 62, 68, 77, 98, 116, 128, 165, 166, 176, 186, 194, 200, 201, 207, 208, 211, 217, 218, 223, 224, 229, 231, 236, 244, 261, 287], "approx": [16, 23, 28, 62, 89], "approxim": [6, 12, 17, 31, 41, 53, 61, 62, 63, 66, 70, 72, 78, 87, 89, 98, 102, 106, 109, 145, 179, 197, 201, 202, 207, 214, 218, 221, 231, 278, 282], "approximations_for_the_nth_prime_numb": 102, "apr": 74, "april": 61, "apt": [1, 5], "aq": 200, "ar": [0, 1, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 148, 149, 150, 151, 153, 155, 157, 160, 162, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 194, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 246, 247, 248, 249, 250, 252, 256, 258, 259, 260, 261, 262, 263, 265, 267, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289], "ar_": 208, "ar_i": 208, "ara": 63, "arab": 198, "arang": [20, 243, 277], "arb": 72, "arbitrari": [3, 6, 10, 11, 12, 18, 20, 22, 26, 28, 30, 31, 41, 47, 54, 55, 61, 62, 63, 66, 67, 70, 73, 74, 76, 92, 93, 98, 106, 137, 141, 162, 165, 195, 197, 198, 201, 202, 204, 206, 208, 223, 227, 228, 229, 237, 247, 250, 256, 258, 277, 278, 283, 288, 289], "arbitrarili": [14, 22, 41, 62, 75, 102, 204, 206, 218, 221, 227, 228, 231], "arbitrary_matrix": 98, "arbitrary_point": [71, 72, 73, 74, 75, 76, 78], "arc": [35, 68, 288], "arc_coplanar": 35, "arcco": [12, 68, 211], "arccosh": 211, "arccot": [68, 211], "arccoth": 211, "arccsc": [68, 211], "arccsch": [68, 211], "architectur": [0, 143, 201, 242], "archiv": [46, 54, 63, 67, 70, 79, 89, 102, 142, 200, 223, 224, 231, 249, 284], "arcsec": [68, 211], "arcsech": [68, 211], "arcsin": [12, 68, 208, 211, 231], "arcsine_distribut": 231, "arcsinh": 211, "arctan": [68, 208, 211], "arctan2": [68, 211], "arctang": 208, "arctanh": 211, "arctanrul": 89, "arcversin": 20, "arduou": 136, "are_collinear": 77, "are_concurr": [75, 76], "are_coplanar": 77, "are_similar": [6, 73, 74, 79], "area": [62, 72, 74, 78, 79, 105, 106], "aren": [4, 10, 11, 20, 43, 62, 126, 210, 230], "arg": [7, 11, 18, 20, 24, 26, 29, 35, 37, 38, 39, 40, 41, 42, 43, 46, 53, 54, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73, 75, 77, 78, 79, 84, 87, 89, 92, 93, 94, 95, 96, 98, 100, 102, 104, 112, 145, 151, 154, 156, 159, 160, 161, 162, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 186, 191, 195, 197, 200, 202, 204, 206, 207, 208, 211, 213, 214, 217, 218, 219, 220, 223, 227, 229, 230, 231, 232, 233, 236, 237, 242, 243, 244, 245, 249, 250, 252, 256, 258], "arg1": 231, "arg2": 231, "argand": 230, "argindex": [6, 20, 43, 62, 68, 69, 70], "args_cnc": 62, "argu": 102, "argular": 173, "argument": [3, 4, 5, 6, 11, 15, 18, 19, 20, 22, 24, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 53, 54, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 78, 79, 87, 89, 90, 92, 93, 95, 98, 101, 102, 104, 105, 110, 112, 120, 121, 125, 126, 138, 139, 143, 150, 153, 157, 159, 162, 165, 170, 171, 173, 174, 175, 176, 184, 191, 192, 196, 197, 198, 199, 201, 202, 204, 206, 207, 210, 211, 212, 213, 217, 218, 219, 220, 221, 223, 224, 227, 228, 229, 231, 233, 235, 236, 242, 243, 244, 245, 246, 247, 249, 250, 252, 260, 261, 263, 277, 278, 283, 284, 288], "argument_sequ": [43, 244], "argument_test": [43, 211], "argument_tupl": 243, "argumentindexerror": 20, "argv": [90, 242], "aris": [18, 19, 62, 67, 87, 89, 173, 195, 201, 206], "arithmet": [3, 43, 62, 63, 66, 93, 98, 102, 165, 172, 196, 197, 198, 200, 201, 202, 204, 205, 209, 212], "arithmetica": 224, "ariti": [7, 197], "arjona": 196, "armi": 63, "armstrong": 50, "around": [3, 4, 6, 7, 10, 11, 12, 19, 20, 33, 41, 51, 54, 62, 63, 64, 66, 68, 71, 78, 82, 98, 101, 102, 108, 117, 120, 136, 140, 144, 195, 201, 204, 206, 211, 213, 218, 224, 227, 230, 231, 242, 256, 258, 278, 280, 282], "arr": 43, "arr1": 102, "arr2": 102, "arrai": [20, 23, 27, 28, 29, 43, 53, 54, 58, 59, 63, 70, 89, 93, 95, 98, 102, 103, 110, 143, 173, 197, 200, 202, 207, 211, 230, 231, 234, 236, 237, 238, 243, 244, 246, 250, 271, 284], "arrang": [54, 112, 121, 141, 143, 220, 224, 237], "array_der": [232, 233], "array_express": 232, "array_form": [52, 54, 55, 233], "array_lik": 121, "arrayadd": 233, "arrayconstructor": 43, "arraycontract": [232, 233], "arraydiagon": [232, 233], "arrayexpr": 43, "arraysymbol": 233, "arraytensorproduct": [95, 232, 233], "arriv": [64, 204, 221, 223, 227, 231, 288], "arrow": [42, 91, 105, 197, 211], "arrow_formatt": 42, "arrow_styl": 42, "arrowstringdescript": 42, "art": [46, 54, 198, 211, 213, 246], "articl": [0, 62, 63, 95, 98, 203, 205, 206, 211, 220, 256, 274, 282], "articul": 206, "artifact": 98, "artifici": [205, 214], "artist": 63, "arxiv": [65, 67, 70, 98, 114, 207, 249], "as_add": [20, 62], "as_algebraicfield": 202, "as_base_exp": [62, 68, 69, 249], "as_coef_add": 62, "as_coef_mul": 62, "as_coeff_add": 62, "as_coeff_expon": 62, "as_coeff_mul": [10, 62, 87, 95], "as_coeffici": 62, "as_coefficients_dict": 62, "as_content_primit": [62, 98, 199, 207], "as_declar": 43, "as_dict": [51, 201, 207], "as_dummi": [62, 89], "as_explicit": [10, 27, 95, 98, 115, 232, 233], "as_expr": [10, 62, 98, 201, 206, 207, 208, 284], "as_expr_set_pair": 68, "as_ferr": 51, "as_finite_differ": [10, 41, 62, 278], "as_immut": 94, "as_independ": [20, 62, 230], "as_int": [170, 252], "as_leading_term": [62, 218], "as_list": [84, 207], "as_mut": [62, 94, 95], "as_numer_denom": [62, 229], "as_ordered_factor": 62, "as_ordered_term": 62, "as_poli": [10, 62, 199, 207], "as_powers_dict": 62, "as_real_imag": [62, 68, 93, 212], "as_rel": 219, "as_set": [24, 92], "as_submodul": 206, "as_sum": 89, "as_term": 62, "as_two_term": [20, 62], "as_unevaluated_bas": 223, "asa": 78, "asarrai": 103, "ascend": [54, 249], "ascent": 54, "ascii": 211, "asec": [68, 211], "asech": [68, 211], "aseri": 62, "ashutosh": 0, "asid": [12, 92, 227, 228, 282], "asin": [12, 68, 70, 76, 208, 211, 221, 223, 227, 231, 288], "asinh": [68, 211], "ask": [3, 6, 11, 12, 15, 18, 19, 37, 38, 39, 40, 62, 74, 87, 126, 181, 198, 217, 223, 230, 249, 268, 280], "askalgebraicpredicatehandl": 39, "askhandl": 36, "askpredicatehandl": [37, 38], "askprimehandl": 10, "asnumpi": 103, "aspect": [7, 18, 98, 201], "aspect_ratio": 197, "aspx": 227, "assembl": [63, 87, 218], "assemble_partfrac_list": 207, "assembli": [108, 128], "assert": [4, 42, 51, 52, 53, 54, 62, 72, 74, 104, 140, 200, 211, 219, 227, 228, 240, 247, 249], "assertionerror": 240, "assess": 16, "assign": [7, 18, 29, 42, 43, 44, 58, 62, 67, 78, 89, 91, 92, 98, 104, 121, 126, 133, 143, 181, 192, 195, 197, 199, 204, 211, 229, 230, 237, 244, 260, 263, 280], "assign_to": [43, 211], "assignmentbas": 43, "assignmenterror": 211, "assist": 227, "assoc_laguerr": [43, 70, 211], "assoc_legendr": [70, 211], "assoc_recurrence_memo": 251, "associ": [7, 11, 18, 25, 42, 44, 60, 62, 63, 69, 70, 84, 85, 87, 91, 141, 143, 166, 174, 185, 186, 194, 195, 199, 200, 201, 202, 204, 206, 211, 219, 221, 224, 237, 251], "associated_legendre_polynomi": 70, "associatedlaguerrepolynomi": 70, "assocop": 62, "asssumpt": 211, "assum": [3, 6, 11, 12, 15, 18, 20, 26, 29, 30, 35, 38, 43, 44, 46, 51, 53, 61, 62, 63, 64, 67, 68, 70, 72, 79, 80, 87, 89, 98, 102, 105, 108, 112, 125, 126, 132, 138, 139, 140, 141, 143, 149, 171, 175, 176, 186, 190, 192, 198, 199, 201, 204, 207, 209, 211, 218, 219, 221, 223, 224, 227, 228, 230, 231, 235, 236, 237, 244, 249, 252, 259, 261, 265, 268, 281, 283, 286, 288, 289], "assump": [37, 38], "assumpt": [6, 11, 12, 17, 19, 21, 25, 26, 27, 36, 37, 39, 40, 42, 43, 53, 54, 56, 61, 64, 66, 68, 69, 89, 92, 93, 98, 99, 105, 112, 116, 143, 180, 183, 188, 200, 210, 211, 219, 220, 223, 227, 229, 230, 236, 244, 249, 267, 268, 288], "assumptionkei": 36, "assumptions0": [18, 62], "assumptionscontext": [36, 37, 38], "assur": [4, 102, 207], "ast": [62, 211], "asterisk": 7, "astr": 42, "astrophys": 179, "asv": 3, "asym2": 237, "asymmetr": [63, 78], "asymmetri": 231, "asymp": 218, "asymptot": [62, 87, 112, 278], "asymptotic_expans": 62, "atan": [35, 40, 64, 66, 68, 73, 78, 86, 89, 130, 144, 145, 208, 211, 213], "atan2": [35, 40, 64, 68, 150, 211, 256], "atan_2": 35, "atanh": [68, 208, 211, 221], "atbash": 63, "atiyah": 205, "atiyah69": [198, 205], "atkinson": 53, "atleast": 227, "atol": 43, "atom": [11, 24, 43, 54, 62, 89, 92, 93, 114, 177, 201, 208, 211, 229, 230, 236], "atom_nam": 211, "atomic_mass_const": 183, "atomicexpr": [10, 62], "atoms_t": 211, "atop": [67, 70, 213, 221], "attach": [18, 54, 56, 87, 103, 105, 120, 121, 137, 195, 243, 245, 250], "attack": 63, "attain": [229, 261], "attempt": [14, 16, 19, 20, 22, 25, 29, 31, 43, 53, 58, 60, 62, 66, 67, 74, 87, 89, 98, 102, 116, 118, 171, 201, 202, 206, 211, 213, 220, 223, 224, 227, 229, 230, 231, 242, 280, 288], "attent": [41, 53, 68], "attenu": 148, "attr": [4, 43], "attr_param": 43, "attribut": [6, 11, 15, 18, 20, 37, 38, 42, 43, 53, 54, 62, 70, 71, 72, 75, 76, 77, 78, 95, 98, 104, 106, 112, 117, 120, 121, 122, 123, 125, 133, 141, 144, 165, 170, 174, 181, 185, 186, 192, 195, 197, 198, 201, 202, 206, 211, 219, 223, 224, 236, 237, 243, 245, 249, 250, 253, 260, 283], "attributeerror": [10, 18, 62, 98, 230, 250, 284], "au": 67, "aug": [193, 230], "aug_assign": 43, "augment": [6, 43, 98, 121, 138, 139, 143, 209, 229, 230, 247, 250, 289], "augmentedassign": 43, "august": [227, 246], "augustu": 63, "austin": 286, "author": [0, 6, 102, 162, 206], "auto": [8, 10, 12, 25, 41, 62, 63, 90, 197, 204, 207, 211, 223, 227, 231], "auto_assert": 211, "auto_declar": 211, "auto_int_to_integ": [3, 90], "auto_kei": 63, "auto_numb": 104, "auto_symbol": [3, 90, 104], "autoclass": 6, "autocomplet": 12, "autocorrel": 63, "autodetect": [227, 228], "autodoc": 7, "autoexpand": [12, 223], "autofunc": 43, "autofunct": 6, "autogener": 156, "autolev": [3, 128, 136, 273], "autom": [43, 68, 103, 220, 243, 282], "automat": [1, 3, 4, 6, 7, 10, 11, 12, 14, 18, 25, 26, 29, 31, 42, 43, 44, 54, 62, 64, 65, 66, 67, 68, 70, 75, 77, 81, 87, 90, 92, 102, 104, 105, 121, 126, 128, 134, 162, 164, 165, 174, 176, 180, 190, 194, 197, 198, 201, 202, 206, 207, 208, 211, 214, 217, 218, 220, 221, 223, 224, 227, 229, 230, 236, 237, 242, 243, 244, 247, 250, 261, 266, 278, 280, 282, 283, 287, 288, 289], "automatiqu": 208, "automorphisms_of_the_symmetric_and_alternating_group": 45, "autonom": 227, "autos": [54, 101], "autoscal": 197, "autosimplif": [62, 220, 223], "autowrap": [103, 236, 244, 248, 275], "auxiliari": [43, 89, 121, 126, 138, 227, 243], "auxiliary_circl": 72, "auxiliary_eq": [121, 134], "avail": [1, 3, 5, 7, 10, 11, 12, 18, 22, 28, 31, 32, 33, 42, 43, 53, 54, 61, 62, 67, 70, 89, 98, 103, 104, 126, 140, 143, 201, 202, 204, 207, 211, 212, 217, 219, 221, 223, 224, 229, 230, 231, 232, 236, 237, 242, 249, 250, 255, 256, 280, 287], "averag": [79, 89, 102, 204, 231], "aversin": 20, "avoid": [7, 8, 10, 11, 19, 20, 22, 25, 35, 43, 44, 62, 63, 68, 87, 89, 92, 98, 101, 104, 130, 140, 170, 194, 195, 199, 201, 207, 211, 212, 219, 223, 227, 229, 231, 235, 244, 247, 250, 280, 281], "avoid_square_root": 35, "awai": [6, 42, 44, 63, 105, 106, 108, 128, 206, 211], "awang": 205, "awar": [3, 4, 6, 11, 12, 19, 41, 62, 66, 92, 98, 221, 231, 250], "awhil": 125, "ax": [22, 23, 25, 27, 35, 63, 66, 72, 75, 87, 94, 98, 105, 110, 120, 148, 173, 186, 195, 196, 197, 200, 208, 224, 227, 230, 232, 233, 236, 256, 258, 260, 263, 265, 288], "ax2p": 224, "axb": 175, "axc": 175, "axi": [10, 29, 35, 55, 67, 68, 72, 73, 75, 76, 78, 84, 87, 89, 95, 98, 105, 110, 115, 120, 126, 128, 130, 133, 134, 135, 137, 140, 143, 144, 145, 148, 149, 173, 186, 188, 190, 192, 194, 195, 197, 202, 230, 256, 258, 261, 263, 266], "axial": [105, 145], "axial_forc": 105, "axial_stress": 105, "axiom": [53, 198], "axiom_of_power_set": 219, "axis_cent": 197, "axis_orient": [256, 261], "axis_orienter1": 258, "axis_orienter2": 258, "axis_orienter3": 258, "axisorient": [256, 258, 261], "az": [63, 112, 224], "azimuth": 114, "a\u2080": 288, "a\u2080\u2080": 27, "a\u2080\u2081": 27, "a\u2080\u2082": 27, "a\u2080\u2083": 27, "a\u2081": [27, 106, 288], "a\u2081\u2080": 27, "a\u2081\u2081": 27, "a\u2081\u2082": 27, "a\u2081\u2083": 27, "a\u2082": [106, 288], "a\u2082\u2080": 27, "a\u2082\u2081": 27, "a\u2082\u2082": 27, "a\u2082\u2083": 27, "a\u2083": 288, "a\u2083\u2080": 27, "a\u2083\u2081": 27, "a\u2083\u2082": 27, "a\u2083\u2083": 27, "a\u2084": 288, "b": [0, 5, 11, 12, 14, 18, 19, 20, 22, 23, 25, 27, 35, 42, 43, 44, 46, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 85, 87, 89, 91, 92, 93, 94, 95, 98, 102, 104, 105, 106, 108, 110, 112, 117, 118, 120, 121, 122, 123, 126, 130, 131, 140, 141, 143, 145, 148, 153, 155, 157, 159, 164, 165, 168, 173, 174, 175, 176, 186, 188, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 211, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 242, 245, 246, 249, 252, 256, 258, 259, 260, 261, 262, 278, 280, 284, 288, 289], "b0": [58, 70, 202, 221, 227], "b1": [53, 58, 70, 102, 105, 106, 117, 126, 143, 186, 202, 211, 221, 224, 227, 262], "b11": 143, "b12": 143, "b1_frame": 117, "b1prime": 221, "b2": [27, 70, 102, 105, 106, 117, 126, 143, 186, 200, 202, 211, 221, 224, 227, 262], "b21": 143, "b22": 143, "b2_frame": 117, "b3": [91, 126, 143, 186, 262], "b4": 91, "b6bius_funct": 102, "b6bius_inversion_formula": 65, "b_": [53, 58, 60, 62, 67, 70, 87, 95, 112, 213, 221, 224, 232, 233], "b_0": [58, 63, 67, 221, 224, 227], "b_1": [53, 60, 70, 84, 87, 198, 221, 224, 227, 288], "b_2": [53, 60, 70, 84, 221, 227], "b_cm": 126, "b_f": 126, "b_frame": [117, 120], "b_i": [53, 58, 60, 87, 198, 221], "b_ij": 236, "b_interv": 219, "b_ixx": 117, "b_j": [58, 60, 70, 87, 221], "b_k": [53, 60, 63, 67, 70, 213, 214], "b_m": [70, 87, 229], "b_mass": [117, 120], "b_masscent": 117, "b_n": [63, 67, 91, 198, 214], "b_op": 140, "b_q": [70, 87, 221, 288], "b_r": 53, "b_x": [186, 188, 195, 237], "b_y": [186, 188, 195, 237], "b_z": [186, 195, 237], "ba": [67, 249], "baa": 249, "bab": 50, "babbag": 63, "babi": [67, 102, 249], "back": [0, 20, 25, 26, 28, 42, 43, 58, 61, 62, 63, 68, 70, 77, 78, 84, 86, 87, 89, 90, 93, 102, 103, 112, 170, 191, 194, 201, 206, 207, 209, 211, 221, 227, 229, 232, 233], "backcolor": [90, 191], "backend": [43, 90, 103, 104, 110, 129, 131, 137, 191, 208, 243, 250], "background": [70, 90, 191, 194, 286], "backport": 4, "backslash": [6, 62, 211], "backtick": [1, 6, 7], "backtrac": 211, "backtrack": 60, "backward": [3, 8, 16, 41, 62, 93, 98, 112, 211, 249, 288], "backward_diff": 112, "bad": [1, 10, 61, 102, 178, 211], "badli": 53, "baij": 176, "bailli": 102, "baji": 176, "balanc": [63, 142, 198, 231, 242], "ball": 120, "ban275": 98, "banana": 249, "band": [93, 101], "bar": [43, 70, 127, 136, 165, 171, 252, 273], "bar_10": 171, "bar_4": 171, "bar_5": 171, "bare": [63, 121], "barei": 98, "bareiss": 98, "barn": 70, "barri": 249, "base": [1, 3, 4, 5, 6, 7, 9, 11, 12, 18, 20, 22, 33, 35, 37, 38, 41, 43, 44, 51, 52, 53, 58, 59, 60, 62, 63, 65, 67, 68, 69, 70, 73, 75, 78, 85, 89, 90, 91, 92, 94, 95, 102, 103, 109, 117, 120, 126, 128, 143, 144, 145, 154, 156, 160, 161, 165, 171, 172, 174, 176, 178, 181, 182, 184, 186, 188, 191, 192, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 211, 213, 218, 219, 220, 221, 223, 224, 227, 229, 231, 235, 236, 237, 242, 243, 244, 245, 246, 247, 249, 250, 251, 256, 259, 260, 263, 283, 288], "base1": 58, "base10": 223, "base2": 58, "base2a": 58, "base_a": 58, "base_char": 105, "base_dim": 178, "base_f": 58, "base_i": 58, "base_id": [198, 202], "base_oneform": 64, "base_ord": 60, "base_req": 43, "base_scalar": 64, "base_seq": 251, "base_set": 219, "base_solution_linear": 224, "base_unit": 184, "base_vector": [64, 256], "basebackend": 197, "basecovarderivativeop": 64, "basedyad": [256, 260], "baselin": 211, "basenam": [242, 243, 244], "basepolynomialerror": 204, "basescalar": [261, 263], "basescalarfield": 64, "baseseri": 197, "baseswap": 53, "basevector": [256, 260, 261], "basevectorfield": 64, "basi": [4, 62, 64, 91, 95, 98, 117, 133, 135, 161, 170, 171, 173, 176, 178, 181, 184, 185, 186, 192, 194, 196, 198, 200, 202, 207, 210, 221, 223, 229, 230, 232, 237, 259, 260, 263, 286], "basic": [3, 4, 5, 6, 7, 10, 11, 18, 20, 31, 35, 37, 42, 43, 44, 50, 53, 57, 60, 61, 65, 68, 78, 80, 85, 86, 87, 92, 93, 96, 99, 112, 120, 126, 138, 139, 141, 143, 144, 150, 160, 174, 181, 184, 189, 192, 193, 195, 197, 198, 200, 202, 203, 204, 206, 208, 209, 211, 212, 218, 223, 224, 227, 228, 229, 230, 231, 242, 244, 249, 250, 254, 262, 263, 264, 271, 273, 274, 278, 279, 280, 281, 286], "basic_orbit": [53, 60], "basic_root": 91, "basic_stabil": 53, "basic_transvers": [53, 60], "basis_el": 206, "basis_element_pullback": 206, "basis_st": 161, "batcheld": 10, "bateman": [70, 89], "batista": 63, "batman": 63, "battl": 282, "baz": 43, "bb": [67, 196, 223, 249], "bb1": 223, "bb2": 223, "bbp_pi": 102, "bbra": 176, "bby": 249, "bc": [35, 74, 108, 249, 252, 262], "bc_deflect": [105, 106], "bc_new": 108, "bc_slope": [105, 106], "bcd": 249, "bch": 63, "bd": [35, 176], "be1": 223, "be2": 223, "bead": 249, "beam": [78, 108, 145, 148, 273], "beam3d": 105, "beamparamet": 145, "beams3d": 105, "bear": [7, 18], "beat": 63, "becam": [63, 136], "becaus": [1, 3, 4, 6, 7, 10, 11, 12, 14, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 39, 43, 54, 61, 62, 63, 68, 74, 78, 79, 87, 89, 92, 96, 98, 102, 104, 120, 126, 130, 156, 164, 176, 178, 180, 181, 194, 197, 198, 200, 201, 202, 204, 206, 207, 208, 210, 211, 214, 218, 221, 223, 224, 227, 228, 229, 230, 240, 242, 243, 245, 249, 250, 252, 260, 278, 280, 282, 283, 284, 287, 288, 289], "beckerweispfenning93": 204, "becom": [0, 4, 6, 7, 10, 11, 12, 16, 18, 53, 58, 61, 62, 63, 66, 85, 90, 98, 104, 191, 194, 198, 199, 201, 208, 211, 214, 220, 227, 230, 231, 237, 250, 252, 259, 261, 288], "bee": 252, "been": [4, 12, 18, 20, 22, 41, 43, 44, 53, 54, 55, 58, 61, 62, 63, 68, 74, 87, 89, 98, 102, 103, 104, 120, 121, 126, 128, 136, 140, 141, 149, 161, 171, 173, 181, 185, 192, 193, 194, 195, 198, 201, 202, 206, 208, 209, 211, 213, 218, 221, 223, 228, 229, 230, 232, 233, 241, 242, 244, 245, 247, 249, 252, 260, 263, 280, 281, 283, 284, 288], "befor": [4, 6, 10, 11, 12, 18, 19, 20, 29, 31, 33, 43, 53, 54, 56, 58, 62, 63, 64, 70, 90, 93, 98, 102, 104, 105, 106, 116, 122, 126, 128, 129, 130, 133, 134, 140, 143, 145, 176, 185, 191, 195, 199, 201, 206, 207, 211, 212, 218, 219, 223, 224, 227, 229, 230, 231, 238, 242, 245, 249, 250, 260, 281, 282, 283, 288], "beforehand": [121, 244], "begin": [6, 10, 12, 18, 20, 23, 27, 29, 35, 62, 63, 67, 68, 70, 87, 93, 95, 98, 102, 130, 138, 139, 140, 141, 172, 181, 186, 195, 196, 200, 211, 221, 224, 227, 228, 230, 231, 242, 252, 280, 282, 284, 288], "beginn": [224, 226, 227, 229, 230, 289], "behav": [12, 39, 41, 62, 63, 68, 70, 102, 207, 219, 223, 229, 232, 238, 284], "behavior": [3, 4, 10, 11, 12, 20, 53, 62, 67, 70, 89, 104, 115, 116, 136, 140, 171, 198, 199, 206, 207, 211, 212, 216, 218, 220, 223, 240, 243, 245, 249, 250, 280], "behavior1": 4, "behavior2": 4, "behaviour": [18, 87, 92, 117, 204, 208, 214, 217], "behind": [13, 32, 113, 126, 140, 180, 200, 220, 223, 227, 230, 273, 280], "bei": 223, "being": [4, 7, 11, 12, 14, 18, 19, 39, 41, 43, 53, 54, 60, 61, 62, 63, 67, 68, 70, 72, 74, 75, 78, 79, 87, 92, 93, 98, 99, 102, 105, 106, 108, 116, 125, 126, 128, 140, 141, 143, 144, 172, 181, 188, 192, 194, 195, 196, 197, 198, 200, 201, 206, 207, 208, 210, 211, 220, 221, 223, 224, 227, 228, 229, 230, 231, 237, 240, 242, 246, 247, 249, 250, 252, 256, 261, 265, 282, 284], "beings": 6, "belaso": 63, "believ": [99, 102, 200], "belittl": 7, "bell": [67, 160, 213, 249], "bell_numb": 67, "bell_seq": 213, "bellnumb": 67, "bellpolynomi": 67, "belong": [7, 18, 39, 42, 53, 58, 62, 85, 98, 176, 186, 194, 197, 198, 200, 201, 202, 204, 206, 207, 218, 219, 223, 224, 230, 237], "below": [1, 3, 4, 6, 7, 10, 12, 18, 20, 22, 26, 29, 30, 31, 33, 41, 42, 43, 52, 53, 54, 62, 63, 67, 69, 70, 71, 72, 78, 79, 85, 87, 89, 93, 98, 101, 102, 104, 105, 106, 112, 117, 120, 121, 125, 126, 128, 130, 131, 132, 137, 138, 139, 140, 143, 170, 176, 181, 186, 195, 196, 197, 198, 200, 207, 211, 212, 214, 220, 223, 224, 226, 227, 228, 229, 230, 231, 242, 244, 249, 250, 252, 261, 263, 266, 267, 284, 288], "below_fermi": [70, 176], "ben": 98, "benchmark": [10, 128, 142], "bend": [72, 78, 105, 107, 273], "bender": 227, "bending_mo": [105, 106], "benefit": [0, 3, 20, 24, 43, 116, 140, 191], "bengt": [16, 41], "benini": 231, "benini_distribut": 231, "beninidistribut": 231, "berkelei": 98, "berkowitz": 98, "berlekamp": 204, "berlin": 204, "bernd": 98, "bernoulli": [67, 70, 207, 211, 227, 229, 231], "bernoulli_c_poli": 207, "bernoulli_differential_equ": 227, "bernoulli_distribut": 231, "bernoulli_integr": 227, "bernoulli_numb": 67, "bernoulli_poli": [67, 207], "bernoulli_polynomi": [67, 207], "bernoulli_process": 231, "bernoullidistribut": 231, "bernoullinumb": 67, "bernoullipolynomi": 67, "bernoulliprocess": 231, "bertrand": 102, "besid": [45, 62, 204, 229], "bess": [6, 70, 211, 223, 227, 231], "bessel": [6, 7, 68, 80, 89, 207, 223, 227, 231, 282], "bessel_funct": [6, 70], "besselbas": [6, 70], "besselj": [6, 70, 84, 211, 223, 227, 282], "besseljzero": 70, "besselk": [6, 70, 211, 231], "besselsimp": 223, "best": [4, 8, 12, 22, 26, 28, 29, 32, 33, 43, 62, 70, 87, 89, 103, 175, 197, 208, 211, 220, 221, 223, 227, 230, 235, 243, 276, 280, 281, 287, 288], "best_hint": 227, "beta": [6, 12, 43, 53, 62, 89, 173, 186, 196, 206, 208, 211, 227, 231], "beta_": 53, "beta_distribut": 231, "beta_funct": 70, "beta_prime_distribut": 231, "beta_r": 221, "betabinomi": 231, "betabinomialdistribut": 231, "betadistribut": 231, "betafunct": 70, "betanoncentr": 231, "betaprim": 231, "betaprimedistribut": 231, "better": [1, 3, 4, 6, 10, 11, 12, 18, 19, 20, 35, 42, 43, 54, 62, 66, 70, 89, 92, 112, 126, 156, 184, 197, 200, 201, 202, 214, 218, 219, 220, 221, 227, 228, 229, 230, 231, 243, 249, 250, 282, 288], "between": [3, 4, 11, 15, 19, 20, 22, 26, 42, 43, 52, 53, 54, 56, 60, 62, 64, 67, 70, 72, 74, 75, 76, 77, 78, 79, 89, 91, 92, 95, 96, 98, 102, 103, 104, 108, 109, 110, 112, 120, 123, 125, 126, 129, 133, 135, 137, 140, 141, 143, 144, 145, 148, 149, 155, 162, 164, 165, 166, 170, 173, 174, 175, 176, 179, 180, 181, 186, 187, 188, 190, 192, 194, 195, 197, 198, 200, 204, 206, 207, 211, 213, 223, 227, 228, 229, 230, 231, 232, 245, 250, 256, 259, 260, 263, 265, 280], "betweensubtleshadingandtheabsenc": 63, "bewar": [41, 70], "beyer": 249, "beyond": [3, 18, 24, 56, 78, 102, 140, 198, 201, 220, 223, 284], "bf": 143, "bfb0055738": 63, "bg": 227, "bh": 227, "bi": [35, 62, 68, 70, 89, 195, 218, 227], "bianchi": 237, "bias": 14, "bibtex": 0, "bicycl": [127, 136, 142, 273], "bidiagn": 98, "bidiagon": 98, "bidiagonal_decomposit": 98, "bifid": 63, "bifid5": 63, "bifid5_squar": 63, "bifid6_squar": 63, "bifid_ciph": 63, "big": [10, 12, 16, 18, 46, 62, 64, 102, 143, 156, 196, 210, 211, 218, 233, 252, 278, 280], "big_trig_ident": 12, "bigger": [20, 43, 62, 67, 98, 221, 227, 288], "bigl": 214, "bigr": 214, "biholomorph": 87, "biject": [54, 56, 63, 93, 198], "bilater": 89, "bilinear": 112, "bin": [1, 2, 3, 5, 6, 90, 211, 242, 249], "bin_prefix": 182, "bin_to_grai": 46, "binari": [12, 19, 20, 25, 39, 43, 46, 57, 62, 63, 89, 92, 102, 103, 170, 182, 198, 201, 207, 224, 243, 246, 249], "binary_cal": 243, "binary_func": [43, 243], "binary_funct": [43, 103, 243], "binary_partit": 249, "binaryquadrat": 224, "bincoeff": 211, "bind": [3, 43, 211, 243], "bind_c": 43, "binet": 66, "binom": [67, 102, 231, 288], "binomi": [61, 66, 67, 70, 102, 207, 211, 216, 223, 227, 231, 249, 288], "binomial_coeffici": [67, 102], "binomial_coefficients_list": 102, "binomial_distribut": 231, "binomialdistribut": 231, "binop": 43, "bio": 63, "biproduct": 198, "bisect": [28, 102, 207, 229], "bisector": [75, 78], "bit": [1, 16, 20, 42, 43, 46, 62, 63, 65, 92, 93, 98, 102, 170, 181, 198, 207, 221, 224, 230, 242, 249, 260, 261, 287], "bitcount": 62, "bitlist": [46, 57], "bitlist_from_subset": 57, "bitmap": 211, "bitmask": 65, "bitstr": 46, "bitwis": [19, 65, 92], "bitwiseand": 211, "bitwiseor": 211, "bitwisexor": 211, "biu": 231, "bivari": [204, 210, 227, 231], "bixk": 89, "bizarr": 230, "bket": 176, "bl": [121, 128, 138, 143], "black": [90, 161, 172, 191, 211, 287], "blacklist": 242, "blais": 63, "blajer": 142, "blajer1994": [140, 142], "blank": [6, 104, 122, 197], "blazingli": 208, "bleicher": 102, "blindli": 221, "blob": 89, "block": [4, 6, 31, 43, 51, 53, 63, 93, 98, 120, 125, 126, 128, 131, 186, 195, 200, 224, 250, 260], "block_": 53, "block_collaps": 95, "blockdiagmatrix": [95, 98], "blockmatrix": [93, 95, 98], "blockwis": 98, "blog": [10, 20, 43, 67, 93, 224, 230], "blogpost": 87, "blow": 102, "blowup": 93, "blue": [110, 137, 197, 211], "blurb": [53, 231], "bm": 70, "bmatrix": [29, 35, 93, 95, 98, 130, 138, 139, 140, 141, 186, 195, 224], "bmd": 78, "bmod": [63, 207, 211], "bmtwmg": 63, "bn": 214, "bo": 211, "bob": [63, 120], "bode_magnitude_numerical_data": 110, "bode_magnitude_plot": 110, "bode_phase_numerical_data": 110, "bode_phase_plot": 110, "bode_plot": 110, "bodi": [10, 12, 43, 87, 104, 115, 116, 119, 120, 121, 123, 125, 126, 128, 129, 130, 131, 133, 136, 137, 138, 143, 144, 179, 185, 186, 190, 194, 195, 256, 258, 273], "body1": 123, "body2": 123, "body3": 123, "body_b": 126, "body_b_f": 126, "body_inertia": 117, "body_orient": [256, 258, 261], "body_orienter1": 258, "body_orienter2": 258, "body_orienter3": 258, "bodyd": [133, 134, 135], "bodyfork": 128, "bodyfram": 128, "bodylist": [133, 134], "bodyorient": [256, 258, 261], "bodywf": 128, "bodywr": 128, "boer": 181, "bokeh": 10, "bold": 211, "bold_nam": 211, "boltzmann": 180, "bonazzi": 0, "bonn": 44, "book": [42, 53, 63, 68, 121, 126, 129, 137, 141, 142, 161, 205, 210, 211, 281], "books_articl": 231, "bool": [18, 35, 41, 43, 45, 58, 60, 62, 63, 65, 68, 89, 90, 92, 93, 95, 98, 102, 104, 121, 122, 160, 188, 191, 197, 206, 207, 209, 211, 212, 213, 218, 219, 223, 226, 231, 243, 244, 249, 250, 256, 259, 280], "bool1": 92, "bool2": 92, "bool_": 43, "bool_map": 92, "bool_maxterm": 92, "bool_minterm": 92, "bool_monomi": 92, "boolalg": [62, 92], "boolean": [10, 11, 20, 21, 24, 29, 36, 37, 38, 39, 40, 41, 43, 62, 68, 72, 76, 77, 78, 79, 90, 93, 98, 99, 102, 105, 110, 112, 121, 161, 186, 188, 191, 197, 200, 202, 204, 206, 208, 211, 223, 227, 229, 231, 249, 259, 284], "booleanfals": 92, "booleanfunct": 211, "booleankind": [11, 62], "booleantru": 92, "boost": 43, "boost_mp50": 43, "border": [72, 78], "borrow": 246, "bose": 205, "bose03": 205, "boson": 176, "bosonbra": 176, "bosonicbasi": 176, "bostan": 208, "bot": 4, "botanist": 231, "both": [0, 3, 4, 6, 7, 10, 11, 12, 15, 18, 19, 20, 22, 24, 25, 26, 29, 34, 35, 41, 42, 43, 54, 57, 58, 60, 61, 62, 63, 67, 68, 70, 77, 86, 87, 89, 92, 93, 98, 102, 104, 105, 106, 112, 117, 120, 121, 128, 130, 131, 137, 140, 148, 149, 160, 166, 173, 176, 180, 181, 186, 190, 194, 195, 197, 198, 199, 201, 202, 204, 206, 207, 209, 210, 211, 213, 218, 219, 220, 221, 223, 224, 227, 229, 230, 232, 236, 242, 244, 249, 250, 256, 258, 278, 281, 282, 283, 288, 289], "both_posit": 19, "both_positive_best": 19, "both_positive_bett": 19, "bother": [70, 283], "bottom": [52, 53, 62, 63, 78, 93, 98, 101, 125, 206, 211, 220, 266], "bottom_fac": 266, "bottom_up": [10, 62], "bound": [11, 24, 39, 43, 44, 61, 62, 71, 72, 73, 75, 77, 78, 89, 102, 174, 202, 204, 206, 207, 211, 217, 227, 229, 230, 231, 236, 246, 252, 256], "bound_symbol": [62, 89], "boundari": [73, 75, 105, 106, 190, 208, 219, 227, 231], "boundary_condit": 105, "bounded_pareto_distribut": 231, "boundedpareto": 231, "box": [156, 161, 163, 172, 174, 266, 273], "bp": [195, 227], "bpp": 195, "bpr": 63, "bpsw": 102, "bq": [70, 199, 200, 221], "br": 29, "bra": [159, 164, 165, 166, 168, 170, 171, 174, 176], "brabas": [164, 165, 171, 174], "brace": [6, 67, 126, 211], "bracelet": [7, 249], "bracket": [12, 20, 28, 30, 54, 62, 70, 174, 176, 186, 211], "bradford": 204, "brain": 246, "branch": [5, 19, 41, 62, 67, 68, 69, 70, 208, 221, 230, 283, 288], "branchpoint": 87, "brandei": 231, "brass": 63, "braun": 227, "breach": [87, 221], "breadth": [43, 62, 231], "break": [4, 6, 10, 20, 42, 43, 54, 62, 63, 102, 194, 208, 211, 219, 249], "break_": 43, "breakag": 4, "breaker": 62, "breaktoken": 43, "bremen": 42, "bremner": 200, "brent": [102, 246], "brew": 1, "brewster": 149, "brewster_angl": 149, "brgc": 46, "brian": [0, 162], "bridg": [96, 108, 126, 250], "brief": [43, 230, 242, 265], "briefli": [18, 199, 204], "brien": [53, 60], "bring": [7, 87, 121, 134, 200, 214, 223, 284], "brito": 196, "broad": [62, 283], "broadcast": [43, 103, 211, 236, 243], "broader": 201, "brocard": 102, "broken": [10, 51, 62, 194, 211, 227, 252], "bronstein": [89, 205, 207, 213, 229], "bronstein93": [205, 207], "brought": [140, 231], "brown": [204, 205, 231], "brown71": [204, 205], "brown78": [204, 205], "brownian": 231, "browntraub71": [204, 205], "brows": 5, "browser": 1, "bruce": 205, "bruce97": 205, "brute": [16, 220, 224], "bryan": [120, 186, 256, 258], "brychkov": [87, 221], "bsd": [0, 1, 3, 282], "bsg": [53, 58, 60, 237], "bsgs_direct_product": 58, "bspline": 70, "bspline_basi": 70, "bspline_basis_set": 70, "bubbl": 160, "buchberg": [199, 204, 205, 207], "buchberger01": [205, 207], "bug": [4, 6, 18, 20, 33, 41, 63, 201, 219, 227, 230, 280], "build": [6, 7, 8, 15, 37, 38, 43, 62, 64, 70, 92, 143, 170, 181, 186, 195, 198, 203, 206, 207, 208, 218, 231, 260, 277, 280, 283], "build_expression_tre": 218, "build_opt": 204, "built": [0, 1, 3, 6, 7, 11, 12, 15, 36, 38, 44, 62, 68, 89, 98, 126, 143, 199, 202, 211, 212, 216, 227, 230, 231, 237, 246, 249, 250, 282, 283, 287], "builtin": [62, 202, 211, 219, 252, 287], "bulk": [204, 221], "bullet": 7, "bulletin": 89, "bunch": 207, "bundl": 206, "burden": [4, 211], "burtonl": 54, "butler": [58, 237], "button": [197, 243], "bvar": 287, "bx": [22, 23, 87, 231, 237], "bxc": 175, "bxy": [25, 224], "by_nam": [202, 206, 207], "bypass": [20, 227], "bytesio": 211, "bz": [87, 224, 237], "c": [0, 1, 3, 11, 12, 16, 18, 20, 22, 23, 25, 27, 34, 35, 41, 42, 46, 47, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 65, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 85, 87, 89, 91, 92, 93, 95, 98, 102, 103, 104, 105, 106, 108, 112, 114, 116, 118, 120, 121, 126, 131, 133, 134, 135, 137, 139, 140, 141, 143, 145, 149, 155, 156, 157, 160, 162, 165, 170, 173, 175, 176, 181, 186, 190, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 218, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 232, 236, 237, 243, 244, 246, 249, 252, 253, 256, 258, 259, 260, 261, 262, 263, 266, 278, 280, 287, 288, 289], "c0": [93, 95, 218, 227, 229], "c1": [6, 16, 29, 63, 72, 79, 93, 95, 120, 162, 176, 219, 224, 227, 229, 262, 289], "c2": [29, 45, 63, 72, 79, 93, 95, 120, 162, 176, 219, 227, 231, 259, 262, 289], "c3": [16, 29, 45, 65, 91, 93, 95, 102, 227, 231, 262, 289], "c4": [45, 91, 93, 95, 227], "c5": [16, 227], "c6": 202, "c7": [16, 53], "c77": 102, "c89": [43, 211, 244], "c89codeprint": 211, "c99": [43, 211, 244], "c99codeprint": [20, 43, 211], "c_": [16, 23, 29, 63, 85, 87, 195, 199, 227], "c_0": [16, 63, 85], "c_1": [16, 29, 63, 85, 87, 218, 221, 227], "c_2": [16, 29, 45, 87, 218, 227], "c_3": [45, 87, 227], "c_4": [45, 87], "c_5": 87, "c_6": 87, "c_7": 87, "c_8": 87, "c_9": 87, "c_code": [43, 244], "c_explicit": 236, "c_frame": 120, "c_g": 53, "c_header": [43, 244], "c_i": [16, 87, 218, 221, 227], "c_inherit": 236, "c_j": [84, 87, 221], "c_k": 63, "c_kn": 102, "c_masscent": 120, "c_n": [67, 70, 91, 207, 227], "c_name": [43, 244], "c_r": [44, 221], "c_t": 63, "c_u": 87, "c_w": 221, "c_x": 195, "c_xr": 64, "c_xy": 64, "c_y": 195, "c_z": 195, "ca": [7, 33, 63, 70, 89, 210, 211, 249], "cab": 232, "cach": [18, 67, 87, 198, 207, 211, 240, 245, 246], "cacheit": 62, "cacr": 63, "cacr2006": 63, "cadabra": 237, "caesar": 63, "caesar_ciph": 63, "caesarsmethod": 63, "caeser": 63, "cafe": 89, "calc_transform": 98, "calcul": [3, 12, 16, 18, 28, 29, 35, 41, 44, 54, 60, 62, 63, 64, 65, 66, 68, 70, 72, 74, 75, 76, 78, 79, 89, 93, 95, 98, 102, 105, 106, 114, 116, 117, 120, 121, 125, 128, 129, 130, 145, 148, 149, 152, 155, 171, 172, 173, 174, 176, 177, 185, 186, 187, 188, 190, 192, 194, 195, 196, 197, 198, 200, 201, 202, 204, 206, 207, 208, 213, 218, 227, 231, 235, 243, 244, 250, 256, 259, 263, 265, 284, 287], "calculate_seri": 218, "calculu": [24, 26, 62, 67, 89, 98, 143, 192, 220, 231, 262, 263, 264, 267, 268, 279, 281, 286], "call": [3, 4, 6, 7, 11, 12, 15, 16, 18, 19, 20, 22, 23, 26, 27, 28, 29, 30, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 60, 62, 63, 65, 66, 67, 69, 70, 72, 77, 78, 80, 85, 87, 89, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 104, 105, 106, 112, 116, 120, 126, 128, 130, 137, 140, 141, 166, 168, 171, 176, 180, 181, 186, 192, 194, 195, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 209, 210, 211, 213, 218, 219, 221, 223, 224, 226, 227, 229, 230, 231, 232, 233, 235, 237, 238, 240, 242, 243, 244, 245, 246, 247, 249, 250, 252, 256, 259, 260, 263, 265, 278, 280, 282, 283, 284, 287, 288, 289], "callabl": [3, 12, 29, 43, 53, 98, 104, 161, 206, 211, 212, 223, 240, 243, 244, 249, 250, 251], "callback": 254, "caller": 20, "calori": 181, "caltech": 89, "caltechauthor": 89, "calulc": 256, "cambridg": [205, 224], "came": [136, 283], "camera": 197, "can": [0, 1, 3, 4, 5, 6, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 114, 116, 117, 118, 120, 121, 122, 123, 125, 126, 129, 130, 131, 134, 136, 137, 138, 139, 140, 141, 143, 144, 148, 149, 150, 155, 157, 160, 164, 165, 166, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 246, 247, 249, 250, 252, 259, 260, 261, 262, 263, 265, 266, 277, 278, 280, 282, 283, 284, 286, 287, 288, 289], "can_split": 104, "can_transf_matrix": 178, "canada": 205, "canberra": 77, "canberra_dist": 77, "cancel": [16, 20, 43, 62, 66, 70, 78, 87, 89, 98, 102, 112, 113, 201, 202, 204, 207, 210, 223, 229, 282], "candid": [26, 53, 62, 98, 102, 204, 223], "canfield": 246, "cannon": 44, "cannot": [3, 4, 6, 7, 10, 11, 12, 15, 19, 20, 22, 25, 28, 33, 36, 37, 38, 39, 40, 41, 43, 54, 59, 61, 62, 64, 66, 68, 72, 74, 75, 77, 79, 84, 89, 91, 94, 96, 98, 100, 102, 112, 171, 179, 181, 194, 195, 197, 202, 204, 206, 207, 208, 211, 218, 219, 223, 224, 226, 227, 229, 230, 231, 232, 240, 242, 243, 244, 249, 253, 256, 258, 282, 283, 284, 288, 289], "canon": [6, 11, 18, 24, 43, 46, 51, 53, 54, 58, 62, 63, 64, 68, 78, 87, 92, 98, 102, 104, 121, 153, 157, 176, 178, 181, 183, 204, 212, 219, 220, 223, 227, 229, 231, 237, 249, 288], "canon_bp": 237, "canonic": [11, 49, 62, 220, 237, 268], "canonical_eq": 227, "canonical_form": 231, "canonical_fre": 58, "canonical_normal_form": 92, "canonical_od": 227, "canonical_system": 227, "canonical_vari": 62, "canonicalize_na": 58, "canonicalz": 63, "cantilev": [105, 106], "cantor": 204, "canva": 197, "cap": [63, 66, 176, 219, 230], "capabl": [10, 11, 18, 28, 41, 43, 62, 66, 74, 87, 102, 105, 106, 136, 143, 197, 208, 211, 230, 281, 282, 288, 289], "capit": [11, 61, 63, 112, 227], "capital_pi_not": 61, "capitalis": 18, "captur": [3, 62, 249], "car2d": 64, "cardin": [53, 54, 57, 198, 219], "care": [11, 12, 19, 20, 53, 62, 70, 89, 92, 98, 105, 116, 126, 140, 186, 195, 201, 206, 223, 224, 227, 229, 230, 235, 238, 243, 277, 280, 282], "care_term": 92, "carefulli": [19, 62, 186, 204, 213], "carl": [102, 246], "carla": 249, "carlo": 53, "carmichael": [63, 102], "carmichael_funct": 102, "carmichaelfunct": 102, "carri": [42, 43, 62, 168, 174, 181, 198, 201, 204, 206, 208, 209, 250], "cartan": 91, "cartan_matrix": 91, "cartan_typ": 91, "cartanmatrix": 91, "cartantyp": 91, "cartantype_gener": 91, "cartesian": [64, 105, 144, 149, 163, 166, 171, 192, 197, 198, 219, 230, 249, 260, 261, 263, 264, 273], "cartesian_product": 219, "cartesiancomplexregion": 219, "case": [3, 4, 6, 7, 10, 11, 12, 16, 18, 19, 22, 25, 26, 27, 28, 29, 30, 31, 35, 41, 42, 43, 44, 45, 47, 50, 53, 54, 58, 61, 62, 63, 64, 66, 67, 68, 70, 74, 77, 78, 79, 80, 84, 87, 89, 92, 93, 95, 98, 99, 102, 103, 104, 106, 112, 116, 120, 121, 126, 128, 129, 130, 131, 137, 139, 141, 143, 149, 160, 166, 171, 173, 175, 176, 181, 182, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 210, 211, 216, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 235, 237, 240, 242, 244, 245, 247, 249, 250, 251, 252, 253, 256, 259, 260, 278, 282, 283, 284, 287, 288, 289], "cask": 1, "casoratian": 98, "cass": 282, "cast": [43, 95, 280], "cast_check": 43, "cast_nocheck": 43, "casu": 207, "cat": [42, 185], "catalan": [62, 67, 211], "catalan_numb": 67, "catalannumb": [67, 211], "catastroph": 43, "catch": [15, 62, 227, 242, 284], "catch_warn": 247, "catchal": 288, "categor": [4, 22, 98, 198], "categori": [10, 198, 267, 274], "cauchi": [70, 87, 89, 202, 227, 231], "cauchy_distribut": 231, "cauchy_lower_bound": 202, "cauchy_principal_valu": 89, "cauchy_upper_bound": 202, "cauchydistribut": 231, "cauchyprincipalvalu": 89, "caught": 227, "caus": [4, 7, 10, 11, 20, 29, 33, 62, 63, 66, 68, 98, 126, 134, 140, 194, 211, 220, 227, 228, 229, 246, 247, 284], "caution": [54, 62, 68, 211, 223], "caveat": [62, 207, 280], "caylei": [56, 93], "cb": [199, 249], "cba": [53, 232, 249], "cbead": 51, "cbm": [70, 89], "cbrt": [43, 68, 211], "cc": [23, 27, 63, 78, 196, 199, 201, 207, 284], "ccc": [200, 230], "cccc": 230, "ccode": [20, 43, 211, 236, 244], "ccodegen": 244, "ccw": [75, 78], "cd": [1, 5, 6, 230, 233, 249], "cdf": 231, "cdhw73": 44, "cdir": 62, "cdot": [10, 18, 44, 61, 67, 70, 80, 84, 85, 87, 93, 95, 98, 102, 113, 115, 141, 181, 192, 194, 195, 196, 198, 199, 207, 214, 218, 221, 227, 229, 232, 233, 249, 262, 263, 282, 283, 288], "cdot1": 288, "cdot2": 288, "ce": [23, 27], "ceca": 231, "ceil": [63, 68, 102, 120, 211], "ceiling_joint": 120, "ceilingfunct": 68, "cell": 42, "celler": 53, "center": [7, 10, 16, 41, 53, 61, 62, 72, 76, 78, 79, 89, 98, 117, 120, 123, 126, 128, 133, 135, 137, 141, 143, 149, 194, 197, 206, 211, 219, 266], "center_": 53, "center_of_mass": 143, "centimet": 183, "centr": [42, 59, 197], "central": [32, 53, 59, 70, 72, 78, 117, 123, 141, 197, 206, 207, 224, 231], "central_inertia": [117, 123, 129, 131], "centralizer_and_norm": 53, "centralmo": 231, "centric": 197, "centripet": 128, "centroid": [72, 78, 79, 105], "centuri": [63, 198], "cep849r": 67, "certain": [3, 7, 11, 20, 31, 33, 40, 42, 43, 45, 53, 60, 62, 66, 70, 78, 87, 89, 102, 104, 140, 186, 187, 198, 201, 204, 206, 211, 212, 218, 221, 223, 224, 227, 229, 230, 231, 233, 244, 245, 250, 256, 259, 265, 288], "certainli": [16, 74, 104, 246], "cexpr": 231, "cf": [102, 204], "cff": [204, 207], "cfg": [204, 207], "cfrac": 288, "cfunction": 20, "cfunction_format": 211, "cfunction_str": [43, 211], "cg": [155, 173, 180, 233], "cg_simp": 155, "cgate": 160, "cgi": 256, "cgs_gauss": 180, "cgt": 53, "cgtnote": 53, "ch": [64, 98, 224], "ch4": 126, "ch5": 126, "ch6": 126, "chain": [18, 20, 43, 53, 58, 62, 70, 79, 103, 194, 206, 231], "challeng": 136, "chan": 227, "chanc": [4, 12, 19, 62, 90, 221, 231, 283], "chang": [0, 1, 6, 7, 8, 11, 12, 18, 33, 42, 43, 44, 53, 54, 58, 61, 62, 63, 66, 67, 68, 70, 76, 77, 87, 89, 92, 98, 102, 104, 105, 108, 112, 120, 123, 126, 128, 133, 150, 161, 171, 181, 182, 185, 192, 194, 195, 196, 197, 198, 199, 200, 204, 207, 208, 211, 218, 219, 220, 221, 223, 226, 227, 229, 230, 231, 232, 242, 249, 250, 261, 263, 277, 280, 283, 287], "change_index": 61, "change_member_label": 108, "change_node_label": 108, "chao": 205, "chaotic": 29, "chapman": [44, 52], "chapter": [6, 53, 70, 102, 126, 205], "chapter11": 231, "chapter3": 211, "chapter4": 211, "chapui": 102, "char": 51, "charact": [4, 6, 7, 62, 63, 87, 90, 104, 156, 186, 191, 211, 227, 242, 244, 247, 252, 280, 282, 287], "character": [105, 106, 192, 195, 218, 231, 237, 265], "characteris": 231, "characterist": [0, 64, 80, 98, 194, 200, 202, 204, 205, 227, 229, 284], "charg": [192, 265], "charl": 53, "charles_marsh_continuous_entropi": 231, "charpoli": [98, 200, 284], "chart": [64, 197], "chat": 33, "cheap": [20, 62, 102], "cheat": 98, "cheb": 227, "chebyshev": [7, 41, 62, 89, 204, 207], "chebyshev1_rul": 89, "chebyshev2_rul": 89, "chebyshev_polynomi": 70, "chebyshev_root": 70, "chebyshevpolynomialofthefirstkind": 70, "chebyshevpolynomialofthesecondkind": 70, "chebyshevt": [7, 70, 211], "chebyshevt_poli": [70, 207], "chebyshevt_root": 70, "chebyshevu": [70, 211], "chebyshevu_poli": [70, 207], "chebyshevu_root": 70, "check": [1, 3, 4, 6, 7, 11, 12, 14, 15, 16, 18, 19, 20, 25, 29, 31, 37, 38, 41, 42, 43, 45, 48, 51, 53, 54, 55, 60, 61, 62, 63, 67, 70, 74, 85, 87, 91, 92, 93, 95, 98, 99, 102, 112, 117, 118, 126, 140, 143, 156, 164, 176, 178, 179, 184, 192, 197, 198, 200, 201, 202, 204, 206, 207, 213, 219, 221, 223, 227, 228, 229, 230, 231, 235, 236, 240, 242, 244, 247, 249, 259, 263, 280, 288], "check_and_join": 63, "check_output": 242, "check_rank": [99, 200], "check_sqf": 207, "check_symmetri": 93, "checkbox": 4, "checker": 242, "checkinfsol": 227, "checkodesol": [29, 227], "checkout": [5, 42], "checkpdesol": 228, "checksol": 229, "chemic": 29, "chemistri": 181, "chi": [12, 70, 87, 148, 211, 221, 227, 231, 237], "chi_distribut": 231, "chi_squared_distribut": 231, "chidistribut": 231, "child": [10, 11, 120, 137, 186, 201, 246], "child_axi": [10, 120], "child_fram": [10, 137], "child_interfram": [10, 120, 137], "child_izz": 137, "child_joint_po": [10, 120], "child_mass": 137, "child_point": [10, 120, 129, 131, 137], "children": [11, 62, 63, 201, 246], "chin": 89, "china": 98, "chines": [63, 102, 204], "chinoncentr": 231, "chisquar": 231, "choco": 1, "chocolatei": 1, "choic": [29, 43, 54, 67, 70, 87, 89, 103, 140, 172, 181, 185, 186, 194, 202, 204, 207, 211, 223, 227, 249, 282], "choleski": [94, 98], "cholesky_solv": [94, 98], "choos": [1, 6, 26, 29, 53, 58, 62, 64, 67, 98, 102, 106, 110, 130, 141, 176, 180, 186, 194, 195, 207, 208, 211, 218, 220, 221, 227, 228, 231, 242, 247, 288], "chop": [62, 66, 70, 93, 98, 229, 277], "chord": 72, "chose": [1, 63], "chosen": [53, 54, 63, 64, 75, 76, 98, 102, 105, 144, 178, 180, 181, 197, 198, 202, 204, 206, 211, 218, 221, 227, 231, 242, 256], "christoffel": 64, "christoph": [0, 256], "chrome": 1, "chromium": 1, "chula": 54, "ci": [3, 7, 70, 87, 211, 287], "cia": 63, "cimento": [181, 196], "cimrman": 0, "cipher": 63, "ciphertext": 63, "circ": [42, 62, 73, 79, 87, 95], "circ_plot": 160, "circl": [6, 20, 62, 72, 73, 74, 76, 77, 78, 79, 87, 149, 156, 197, 230, 256, 259, 266], "circuit": [62, 160, 163, 273], "circuit_plot": 156, "circuitplot": 156, "circular": [12, 18, 110, 148, 204], "circumcent": 78, "circumcircl": 78, "circumfer": [62, 72], "circumradiu": 78, "circumscrib": 78, "circumst": [206, 282], "citat": 6, "cite": [6, 21], "cites": 205, "citeseerx": [205, 220], "citi": 224, "cits7209": 67, "civil": [63, 105], "civita": [64, 70, 237], "cj": 35, "cl": [12, 18, 20, 29, 43, 53, 62, 89, 93, 176, 190, 202, 206, 227, 236, 245, 249, 262, 278, 287, 289], "claim": [63, 195, 221, 230], "clairaut": 227, "clang": [3, 104], "claredon": 93, "clarifi": 6, "clariti": [7, 53, 190], "clarku": 231, "clash": [11, 34, 62, 98], "class": [4, 7, 8, 10, 11, 12, 17, 18, 19, 20, 22, 26, 27, 31, 32, 35, 36, 37, 38, 39, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 104, 105, 108, 109, 110, 112, 117, 120, 121, 122, 123, 125, 126, 130, 131, 136, 137, 141, 143, 144, 145, 147, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 181, 182, 183, 184, 185, 189, 190, 191, 193, 198, 200, 201, 202, 204, 207, 208, 209, 210, 212, 213, 214, 217, 218, 219, 221, 223, 227, 228, 229, 230, 231, 233, 236, 237, 238, 242, 243, 244, 245, 246, 247, 249, 250, 254, 257, 260, 261, 263, 264, 266, 267, 271, 273, 278, 280, 283, 288], "class_kei": 62, "class_nam": 62, "classic": [29, 41, 68, 70, 98, 162, 178, 186, 195, 198, 273], "classif": [11, 17, 62, 227, 228], "classifi": [15, 98, 201, 227, 228, 230, 231], "classify_diop": 224, "classify_od": [29, 227], "classify_pd": 228, "classify_sysod": 227, "classmethod": [18, 20, 35, 37, 38, 43, 46, 51, 53, 54, 56, 57, 62, 68, 69, 70, 77, 93, 98, 112, 162, 173, 174, 176, 200, 202, 206, 207, 211, 219, 237, 242], "classnam": 6, "claus": [18, 92], "clean": [4, 242], "cleaner": [116, 143, 227], "cleanest": 261, "cleanup": 207, "clear": [6, 10, 18, 37, 52, 62, 87, 91, 117, 194, 195, 197, 202, 204, 207, 221, 229, 230, 237, 242, 246, 265, 280], "clear_cach": 207, "clear_denom": [202, 207], "clear_glob": 242, "clear_load": 117, "clearer": [10, 260], "clearli": [4, 6, 20, 102, 195, 201, 221, 284], "clebsch": [163, 173, 196, 273], "clebsch_gordan": 196, "clebsh": 155, "clemson": 231, "cleve": 93, "click": 1, "clickabl": 6, "client": [62, 246], "clo": 202, "clock": [68, 220], "clockwis": [74, 89, 93, 98, 105, 106, 108], "clone": [5, 33, 204], "close": [6, 11, 28, 43, 61, 62, 66, 67, 70, 78, 80, 87, 89, 91, 112, 129, 197, 198, 199, 205, 206, 219, 229, 230, 244, 278, 288], "closed": 219, "closer": [28, 128, 230, 283], "closest": [28, 62, 75], "closing_angl": 75, "closur": [53, 59, 85, 156, 202, 206, 219], "closurefailur": 206, "cloudi": 231, "cloudpickl": 3, "clunki": 34, "clutter": 6, "cm": [42, 143, 231], "cmod": 172, "cmoment": 231, "cmplx": [43, 211], "cn": [54, 211, 287], "cname": 244, "cnf": 92, "cnot": 160, "cnotgat": 160, "co": [6, 10, 12, 20, 23, 24, 26, 28, 29, 30, 31, 35, 41, 43, 61, 62, 64, 66, 67, 68, 70, 71, 72, 75, 76, 78, 80, 84, 85, 86, 87, 89, 93, 98, 102, 104, 117, 118, 120, 126, 128, 129, 131, 133, 134, 135, 140, 143, 148, 150, 186, 188, 190, 192, 194, 195, 196, 197, 201, 204, 207, 208, 210, 211, 212, 213, 214, 218, 219, 220, 221, 223, 227, 229, 230, 231, 232, 238, 250, 256, 258, 259, 260, 261, 266, 277, 278, 280, 282, 288, 289], "coalesc": 246, "coc": 149, "code": [1, 6, 8, 9, 11, 16, 18, 19, 20, 25, 28, 29, 30, 31, 33, 34, 44, 49, 53, 56, 57, 62, 63, 64, 70, 74, 87, 89, 90, 98, 102, 103, 104, 117, 120, 126, 128, 134, 136, 137, 141, 143, 144, 170, 176, 185, 191, 194, 196, 197, 198, 199, 200, 201, 204, 210, 221, 223, 227, 229, 230, 231, 233, 236, 239, 240, 242, 243, 244, 247, 248, 249, 250, 260, 268, 275, 280, 282, 285, 287], "code_gen": [243, 244], "code_qu": 5, "code_text": 211, "codebas": [4, 10, 18, 201, 240], "codeblock": [43, 104], "codegen": [3, 20, 103, 211, 243, 248, 275], "codegenast": 43, "codegenerror": 244, "codeprint": 43, "codewrapp": 243, "codifi": 4, "codirect": 186, "codomain": [42, 198, 206], "coef": [126, 143], "coeff": [20, 62, 64, 92, 143, 202, 206, 207, 217, 223, 227, 229, 237, 288], "coeff_bel": 213, "coeff_monomi": [62, 207], "coeff_mul": 217, "coeff_search": 206, "coeffici": [6, 14, 16, 18, 22, 25, 27, 38, 41, 43, 61, 62, 64, 66, 67, 70, 75, 80, 81, 84, 85, 87, 91, 92, 95, 98, 99, 102, 112, 113, 121, 126, 149, 163, 173, 181, 196, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 213, 214, 217, 218, 221, 223, 224, 226, 227, 228, 229, 230, 231, 237, 243, 260, 263, 273, 283, 288], "coerc": [62, 140, 204], "coercibl": 202, "coercionfail": [201, 204], "cof": 98, "cofactor": [62, 98, 202, 204, 207], "cofactor_matrix": 98, "cogniz": 4, "cohen": [45, 99, 200, 205, 206], "cohen00": 206, "cohen93": [205, 206], "coher": [152, 178, 184], "coherent_st": 152, "coin": [219, 231], "coin_flip": 231, "coincid": [78, 98, 101, 120, 126, 198, 256, 261, 280], "coincis": 198, "coker": 198, "cokernel": 198, "col": [93, 95, 98, 101, 112, 143, 200, 206, 284], "col1": 98, "col2": 98, "col_del": [93, 98, 284], "col_insert": [93, 284], "col_join": [93, 98, 128], "col_matrix": 143, "colin": 54, "collabor": 5, "collaps": [62, 170, 223], "collect": [1, 3, 7, 17, 42, 43, 53, 62, 79, 89, 102, 105, 112, 125, 134, 143, 176, 183, 196, 202, 207, 220, 221, 223, 227, 231, 242, 249], "collect_const": 223, "collect_sqrt": 223, "collected_expr": 288, "collected_word": 52, "collid": [34, 237], "collin": [204, 205], "collinear": [72, 74, 76, 77, 78, 197], "collins67": [204, 205], "collis": [62, 101, 211], "colloqui": [11, 23], "colmatrix": 143, "colon": [6, 62], "color": [7, 90, 110, 191, 211, 242, 249, 287], "colost": 53, "colour": 7, "colsep": 98, "colslist": 93, "columbia": 231, "column": [27, 35, 39, 42, 43, 44, 90, 92, 93, 95, 98, 99, 101, 112, 121, 125, 128, 141, 171, 178, 186, 191, 196, 200, 206, 211, 227, 230, 236, 256], "columnspac": [98, 200], "com": [1, 3, 4, 5, 6, 7, 10, 20, 33, 35, 39, 41, 53, 55, 56, 62, 63, 65, 66, 67, 68, 70, 72, 78, 79, 87, 89, 93, 98, 102, 110, 196, 205, 214, 216, 219, 220, 223, 224, 227, 230, 231, 249, 252, 284], "comb_explicit_rh": [125, 144], "comb_implicit_mat": [125, 144], "comb_implicit_rh": [125, 144], "combin": [6, 10, 12, 20, 22, 30, 42, 62, 66, 67, 70, 89, 91, 92, 93, 102, 106, 112, 120, 125, 129, 136, 144, 155, 162, 170, 171, 173, 174, 175, 179, 180, 181, 182, 198, 199, 201, 202, 204, 206, 207, 211, 212, 220, 221, 223, 224, 227, 229, 231, 232, 246, 249, 277, 280, 283], "combinator": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 95, 102, 206, 213, 232, 237, 246, 249, 268, 282, 288], "combinatori": [20, 46, 54, 61, 62, 69, 70, 207, 213, 223, 249, 251, 268, 288], "combintor": 10, "combo": 92, "combsimp": [61, 62, 67, 223], "come": [4, 27, 33, 53, 58, 60, 61, 62, 68, 70, 87, 89, 98, 103, 116, 126, 128, 138, 179, 195, 198, 201, 204, 206, 207, 221, 224, 227, 230, 240, 242, 247, 250, 280, 282, 283, 286, 288], "comfort": [102, 103], "comm": [157, 176, 237], "comm_i2symbol": 237, "comm_symbols2i": 237, "comma": [6, 7, 12, 43, 62, 211, 250, 280], "command": [1, 3, 5, 6, 11, 12, 22, 25, 31, 33, 43, 66, 90, 126, 138, 143, 191, 197, 211, 242, 243, 287], "commaoper": 43, "comment": [6, 7, 43, 53, 126, 128, 208, 211, 244, 249], "commerci": [0, 282], "common": [6, 7, 11, 12, 18, 19, 20, 23, 24, 25, 26, 29, 41, 43, 53, 54, 62, 63, 68, 73, 76, 79, 89, 95, 97, 98, 102, 103, 110, 112, 117, 120, 122, 129, 136, 141, 143, 148, 181, 186, 194, 195, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 213, 219, 220, 221, 223, 224, 227, 229, 230, 231, 243, 244, 247, 249, 250, 263, 265, 271, 277, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289], "common_prefix": 249, "common_suffix": 249, "commonli": [7, 11, 54, 67, 70, 89, 98, 116, 194, 199, 227, 263], "commun": [4, 7, 33, 196, 227, 229, 231, 284], "communication_class": 231, "commut": [11, 18, 35, 39, 42, 53, 54, 58, 62, 64, 85, 89, 98, 153, 160, 163, 164, 165, 175, 176, 181, 188, 195, 199, 202, 203, 204, 205, 207, 211, 218, 219, 221, 227, 237, 273, 274, 283], "commutative_diagram": 42, "commutative_part": 62, "commutative_properti": [18, 62], "commutativehandl": 39, "commutativepred": 39, "commutes_with": [54, 237], "comp": [44, 227], "compa": 238, "compact": [56, 62, 109, 121, 143, 174, 191, 207, 211, 229, 246], "compactif": 62, "companion": [93, 95], "companionmatrix": 95, "compar": [12, 18, 31, 41, 43, 54, 59, 62, 67, 68, 79, 92, 98, 102, 103, 128, 155, 179, 183, 201, 204, 207, 208, 211, 216, 218, 223, 227, 230, 232, 236, 242, 249, 280, 283, 288], "comparison": [43, 61, 62, 92, 98, 126, 198, 206, 210, 229, 242, 249], "compat": [1, 3, 4, 15, 43, 62, 70, 90, 93, 98, 103, 116, 178, 183, 191, 197, 200, 202, 206, 207, 211, 231, 235, 238, 242, 244, 250], "compatibli": 3, "compb": 238, "compil": [3, 43, 90, 103, 116, 143, 191, 211, 223, 236, 242, 243, 244, 267, 282], "compileflag": [12, 242], "complement": [92, 95, 207, 219, 230], "complementari": [6, 70, 112], "complementset": 219, "complet": [3, 4, 6, 10, 11, 12, 18, 26, 29, 38, 43, 62, 63, 64, 66, 68, 69, 70, 78, 87, 89, 98, 102, 116, 121, 122, 130, 136, 143, 162, 165, 166, 195, 204, 206, 207, 208, 212, 218, 223, 224, 227, 230, 231, 242, 244, 252, 282, 283, 288], "complex": [6, 10, 11, 12, 15, 18, 20, 25, 26, 27, 31, 35, 39, 40, 41, 43, 53, 62, 63, 65, 66, 67, 70, 74, 84, 87, 93, 94, 98, 102, 103, 104, 110, 112, 116, 126, 143, 145, 149, 159, 162, 164, 165, 176, 185, 186, 195, 199, 200, 202, 206, 207, 211, 212, 216, 219, 221, 223, 227, 229, 230, 231, 244, 252, 288, 289], "complex128": 43, "complex64": 43, "complex_": 43, "complex_allow": 244, "complex_beam_paramet": 145, "complex_conjug": 68, "complex_el": 39, "complex_numb": [18, 39, 62], "complexbasetyp": 43, "complexel": [201, 202], "complexelementshandl": 39, "complexelementspred": 39, "complexfield": 202, "complexhandl": 39, "complexinfin": [62, 112], "complexpred": 39, "complexregion": [219, 230], "complexrootof": [22, 62, 98, 202, 207, 227], "complexspac": 162, "complextyp": 43, "compliant": 43, "complic": [6, 12, 14, 18, 20, 22, 28, 35, 43, 53, 61, 63, 64, 66, 67, 68, 70, 87, 89, 95, 136, 138, 176, 195, 201, 204, 208, 210, 221, 223, 230, 231, 235, 236, 244, 246, 250, 252, 278, 280, 283, 284], "compon": [22, 42, 43, 58, 62, 64, 77, 89, 95, 98, 113, 120, 123, 136, 137, 141, 148, 173, 178, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 207, 209, 231, 233, 236, 237, 246, 249, 256, 259, 262, 263], "component_": 249, "componentwis": [198, 211], "compos": [42, 62, 63, 130, 140, 178, 181, 194, 198, 202, 206, 207, 208, 211, 213, 223], "composit": [18, 39, 42, 51, 53, 54, 62, 63, 80, 82, 89, 102, 105, 202, 204, 207, 210, 223, 230, 245], "composite_numb": [18, 62], "compositedomain": 202, "compositehandl": 39, "compositemorph": 42, "compositepi": 102, "compositepred": 39, "composition_seri": 53, "compound": [62, 131, 174], "compound_pend": 131, "compound_probability_distribut": 231, "compound_rv": 231, "compounddistribut": 231, "comprehens": [5, 10, 18, 26, 27, 29, 205, 219, 231, 277], "compress": [53, 98, 101, 108], "compris": [53, 63, 95, 123, 141, 144, 207, 249], "compulsori": 112, "comput": [0, 3, 4, 6, 7, 10, 11, 12, 16, 18, 19, 20, 22, 23, 26, 27, 28, 33, 35, 41, 43, 44, 45, 46, 51, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 77, 81, 84, 85, 86, 88, 89, 91, 93, 95, 98, 99, 101, 102, 104, 105, 106, 110, 112, 116, 120, 121, 122, 125, 126, 128, 129, 133, 136, 143, 160, 161, 162, 170, 175, 176, 178, 180, 181, 185, 186, 187, 192, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 216, 218, 219, 220, 221, 223, 224, 227, 229, 230, 231, 233, 243, 246, 249, 250, 256, 258, 259, 260, 261, 262, 263, 265, 268, 277, 278, 280, 281, 284, 288], "computation": [27, 58, 68, 120, 121, 122], "computationfail": 204, "compute_explicit_form": 125, "compute_fp": 213, "compute_leading_term": 62, "compute_m_ybar": 227, "comtet": 213, "comupt": 227, "concaten": [63, 93, 249], "concav": [41, 145], "concave_funct": 41, "concentr": [29, 106, 231], "concept": [10, 11, 18, 53, 128, 195, 201, 203, 206, 211, 230, 235, 265, 281, 286], "conceptu": [181, 198, 265], "concern": [6, 11, 18, 41, 44, 61, 66, 102, 192, 197, 199, 200, 201, 210, 211, 212, 223, 224, 229, 243, 244, 246, 252], "concis": [6, 143], "conclud": [18, 70, 85, 128, 192, 218, 229, 265], "conclus": [42, 62], "concret": [18, 42, 54, 62, 67, 68, 89, 91, 98, 102, 126, 181, 202, 206, 211, 268], "concur": 208, "concurr": [75, 76, 208], "concycl": 77, "cond": [68, 87, 89, 219], "conda": [1, 3, 5, 33, 104], "condens": [98, 230], "condit": [11, 18, 19, 22, 24, 43, 53, 62, 64, 68, 70, 80, 81, 84, 85, 86, 89, 92, 98, 102, 104, 105, 106, 108, 112, 118, 122, 128, 136, 140, 143, 145, 190, 196, 208, 211, 214, 221, 224, 226, 227, 229, 230, 231, 236, 288], "condition_numb": 98, "condition_set": 231, "conditionaldomain": 231, "conditionset": [219, 230, 231, 289], "conduct": 7, "cone": 266, "confederaci": 63, "confer": [67, 103, 286], "confid": 282, "config": 90, "configur": [3, 4, 5, 10, 54, 92, 112, 120, 121, 129, 130, 133, 135, 136, 138, 140, 211], "configura": 143, "configuration_constraint": [121, 128, 129, 130, 138], "confirm": [4, 10, 53, 102, 227], "conflict": [10, 68, 102, 112, 126, 244], "confluent": [70, 221], "conform": [62, 230, 235, 236, 249], "confus": [4, 7, 10, 11, 18, 25, 62, 67, 92, 149, 195, 199, 207, 230, 277, 278, 280], "confusingli": 70, "cong": [102, 204], "congratul": 285, "congruenc": [53, 62, 102, 221, 224], "congruent": [204, 221, 224], "conic": [72, 224, 256], "conicis": 198, "conj": 211, "conjectur": [102, 204], "conjg": 211, "conjug": [6, 22, 39, 51, 52, 53, 62, 68, 70, 93, 98, 114, 145, 159, 162, 176, 207, 211, 227, 237], "conjugaci": [44, 45, 53], "conjugacy_class": 53, "conjugate_convent": 98, "conjugate_gauss_beam": 145, "conjunct": [68, 92, 197, 221, 242, 288], "conlist_coord": 128, "conlist_spe": 128, "connect": [18, 56, 63, 64, 77, 78, 98, 103, 105, 108, 117, 120, 128, 131, 137, 198, 199, 200, 209, 227, 231, 249, 256], "connect_to": 10, "connected_compon": [98, 249], "connected_components_decomposit": 98, "connector": 106, "consec": 53, "consec_succ": 53, "consecut": [7, 43, 53, 58, 61, 63, 67, 78, 223, 229], "consequ": [10, 20, 39, 62, 199, 201, 280, 288], "conserv": [62, 121, 139, 187, 259, 265], "conservative_field": [192, 263], "conserve_mpmath_dp": 245, "consid": [0, 4, 7, 10, 11, 12, 15, 18, 19, 20, 31, 35, 39, 42, 43, 51, 54, 57, 61, 62, 63, 65, 66, 67, 68, 70, 72, 74, 78, 86, 87, 89, 90, 91, 92, 93, 95, 98, 102, 112, 116, 117, 123, 127, 138, 144, 166, 173, 176, 180, 181, 187, 191, 192, 194, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 210, 211, 214, 218, 223, 224, 227, 228, 229, 230, 231, 242, 244, 249, 259, 261, 263, 265, 266, 280, 284, 288], "consider": [4, 19, 62, 103, 116, 201, 210, 219, 224, 227, 260], "consist": [6, 7, 10, 11, 16, 18, 24, 26, 30, 42, 53, 54, 58, 62, 63, 67, 68, 70, 72, 78, 80, 87, 92, 105, 108, 120, 137, 141, 150, 170, 176, 181, 184, 190, 197, 199, 201, 202, 204, 219, 227, 229, 230, 231, 235, 240, 243, 244, 249, 281, 283], "consol": [3, 4, 12, 62, 90, 191, 197, 287], "const": [202, 211], "constanc": 62, "constant": [10, 11, 22, 24, 25, 27, 30, 41, 43, 61, 62, 66, 68, 70, 86, 87, 89, 105, 106, 112, 125, 126, 128, 143, 144, 153, 157, 163, 179, 180, 182, 183, 184, 187, 190, 192, 197, 199, 202, 204, 206, 207, 208, 211, 213, 218, 221, 223, 224, 227, 228, 229, 230, 231, 242, 244, 249, 250, 259, 263, 266, 273, 278, 284, 289], "constant_problem": 284, "constant_renumb": 227, "constant_symbol": 125, "constantli": 218, "constantrul": 89, "constantsimp": 227, "constanttimesrul": 89, "constitu": [72, 78, 123, 186, 217, 256], "constitut": [4, 7, 11, 89, 102, 211], "constrain": [121, 130, 139, 143], "constraint": [16, 24, 98, 106, 112, 120, 121, 122, 125, 126, 128, 129, 130, 132, 136, 138, 139, 140, 143, 208, 273], "construct": [10, 16, 24, 35, 37, 38, 42, 43, 45, 62, 64, 68, 70, 72, 76, 78, 90, 95, 98, 103, 106, 116, 117, 121, 123, 126, 128, 161, 165, 174, 175, 178, 182, 198, 201, 202, 204, 206, 207, 211, 224, 229, 231, 232, 236, 244, 246, 247, 260, 262, 263, 280, 283, 284, 288], "construct_c": 227, "construct_d": 227, "construct_domain": [200, 201, 202, 207], "constructor": [10, 11, 20, 37, 38, 42, 43, 49, 53, 54, 55, 62, 69, 70, 91, 96, 98, 130, 169, 170, 174, 178, 197, 198, 200, 201, 202, 211, 219, 227, 236, 244, 260, 268, 279, 283], "consult": [5, 44], "consum": [6, 43, 70, 122, 140], "contact": [78, 128, 132, 133, 134, 135, 194, 235], "contain": [1, 3, 4, 6, 7, 10, 11, 12, 14, 18, 19, 20, 24, 25, 26, 27, 29, 30, 31, 34, 36, 37, 41, 42, 43, 44, 45, 53, 54, 58, 60, 61, 64, 65, 66, 68, 70, 71, 73, 75, 76, 77, 78, 79, 88, 89, 91, 92, 93, 95, 98, 101, 102, 103, 104, 105, 107, 110, 111, 113, 117, 121, 122, 123, 125, 128, 130, 140, 141, 143, 144, 145, 146, 147, 149, 150, 151, 163, 166, 168, 171, 173, 176, 185, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 211, 212, 213, 218, 219, 221, 223, 224, 225, 227, 228, 229, 230, 231, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 256, 259, 267, 278, 280, 284, 288], "contbound": 204, "content": [8, 13, 43, 62, 63, 97, 199, 202, 204, 207, 210, 211, 239, 244, 247, 248, 268, 269, 270, 271, 272, 273, 274, 275, 279, 281], "context": [4, 6, 7, 10, 14, 18, 20, 28, 36, 37, 38, 62, 64, 70, 92, 126, 181, 201, 204, 206, 219, 240, 242, 247, 256], "contigu": [62, 221, 244], "continu": [4, 6, 7, 10, 16, 19, 20, 41, 43, 52, 54, 56, 62, 67, 68, 70, 87, 90, 93, 102, 109, 110, 112, 171, 174, 191, 202, 204, 207, 224, 226, 227, 235, 279], "continue_": 43, "continued_fract": 102, "continued_fraction_converg": 102, "continued_fraction_iter": 102, "continued_fraction_period": 102, "continued_fraction_reduc": 102, "continuetoken": 43, "continuous_domain": [41, 226], "continuousdistributionhandmad": 231, "continuousdomain": 231, "continuousmarkovchain": 231, "continuouspspac": 231, "continuousrv": 231, "continuum": [33, 273], "continuum_mechan": [105, 106, 108], "contour": [70, 72, 87, 197, 221], "contract": [43, 64, 113, 176, 211, 220, 233, 235, 236, 237, 238], "contract_al": 237, "contract_metr": 237, "contraction_ax": 232, "contraction_indic": 233, "contradict": 18, "contrarili": 22, "contrast": [11, 20, 61, 62, 130, 201, 221, 227, 282], "contravari": [58, 98, 237, 238], "contribut": [0, 3, 4, 5, 6, 7, 33, 78, 102, 121, 131, 134, 201, 204, 206, 227, 266, 285], "contributor": [1, 3, 7, 10, 20], "control": [3, 5, 10, 12, 14, 18, 20, 42, 44, 62, 63, 66, 87, 92, 93, 140, 143, 156, 160, 171, 172, 176, 207, 208, 212, 219, 224, 230, 249, 273, 277], "control_lin": 156, "control_plot": 110, "control_point": 156, "control_valu": 160, "controller_mat": 112, "conv": 65, "convei": 22, "conveni": [0, 1, 10, 11, 12, 24, 26, 31, 34, 41, 43, 54, 62, 63, 67, 70, 89, 92, 104, 126, 143, 185, 188, 194, 195, 197, 198, 199, 200, 201, 202, 206, 209, 218, 219, 223, 229, 235, 236, 243, 245, 246, 250, 263, 278, 280], "convent": [4, 6, 7, 9, 20, 29, 53, 54, 58, 61, 62, 63, 67, 68, 70, 72, 77, 87, 89, 92, 104, 105, 106, 108, 112, 115, 128, 143, 145, 149, 170, 171, 173, 178, 179, 192, 197, 211, 227, 228, 230, 231, 237, 265, 280, 288], "converg": [10, 43, 61, 66, 70, 89, 102, 145, 207, 214, 218, 221, 278], "convergence_stat": 70, "convergence_test": 61, "convers": [6, 7, 10, 18, 25, 43, 62, 82, 104, 140, 180, 199, 200, 201, 202, 204, 206, 208, 211, 224, 236, 243, 256], "convert": [1, 3, 4, 10, 11, 12, 14, 18, 19, 20, 25, 27, 28, 29, 35, 39, 43, 46, 54, 58, 62, 63, 66, 67, 68, 76, 77, 79, 82, 83, 86, 90, 92, 93, 98, 101, 102, 104, 112, 170, 173, 179, 180, 181, 183, 190, 197, 198, 200, 202, 204, 206, 207, 208, 209, 211, 212, 213, 219, 220, 221, 223, 224, 227, 228, 230, 231, 232, 233, 236, 242, 243, 249, 250, 252, 254, 259, 274, 279, 280, 283, 288], "convert_array_to_matrix": 233, "convert_equals_sign": 104, "convert_from": [201, 202], "convert_indexed_to_arrai": 233, "convert_matrix_to_arrai": 233, "convert_to": [179, 180, 183, 200, 206], "convert_to_c": 104, "convert_to_expr": 104, "convert_to_fortran": 104, "convert_to_native_path": 242, "convert_to_python": 104, "convert_xor": [62, 104], "convex": [41, 78, 79, 89], "convex_funct": 41, "convex_hul": [6, 74, 78, 79], "convolut": [70, 213], "convolution2d": 43, "convolution_fft": 65, "convolution_fwht": 65, "convolution_ntt": 65, "convolution_subset": 65, "convolution_theorem": 65, "coolei": 65, "cooper": 62, "coord": [64, 77, 79, 116, 174, 190], "coord_con": 138, "coord_funct": 64, "coord_idx": [125, 144], "coord_index": 64, "coord_si": [64, 259], "coord_stat": 125, "coord_system": 10, "coord_tuple_transform_to": [10, 64], "coordin": [35, 43, 63, 64, 68, 70, 71, 73, 77, 79, 95, 98, 105, 108, 110, 114, 120, 121, 122, 125, 126, 127, 128, 129, 131, 133, 136, 137, 138, 139, 142, 144, 152, 154, 173, 174, 177, 185, 186, 187, 188, 190, 192, 195, 198, 206, 207, 219, 227, 256, 258, 259, 262, 264, 266, 271, 273], "coordinate_deriv": [125, 144], "coordinate_system": 64, "coordinatesym": [186, 188], "coordinatesymbol": 64, "coordsyrect": 256, "coordsys3d": [256, 258, 259, 260, 262, 263, 266], "coordsysrect": 256, "coordsystem": [10, 64], "copi": [0, 1, 5, 10, 12, 18, 44, 54, 55, 62, 78, 98, 102, 103, 200, 202, 204, 206, 210, 211, 218, 229, 242, 249, 252, 287], "coplanar": [35, 76, 195], "coprim": [63, 89, 102, 172, 204, 224], "core": [3, 4, 5, 6, 11, 12, 15, 18, 19, 20, 24, 39, 41, 43, 53, 63, 68, 69, 71, 79, 93, 102, 104, 174, 175, 199, 201, 202, 203, 204, 206, 207, 208, 211, 218, 219, 223, 224, 227, 231, 241, 242, 243, 249, 250, 254, 267, 268, 280, 283], "core_2": 102, "core_t": 102, "corioli": 128, "cornacchia": 224, "corner": [53, 55, 93, 207, 227, 230, 250], "correct": [4, 6, 7, 10, 12, 19, 20, 25, 27, 29, 43, 51, 53, 59, 61, 62, 66, 68, 86, 87, 89, 98, 102, 112, 126, 140, 194, 195, 204, 207, 218, 224, 227, 229, 230, 235, 243, 249, 280, 287], "correctli": [1, 3, 4, 6, 7, 10, 19, 20, 41, 66, 87, 90, 98, 126, 128, 140, 211, 218, 224, 227], "correl": 231, "correspond": [4, 6, 7, 10, 16, 18, 19, 20, 25, 29, 41, 42, 43, 44, 52, 53, 54, 56, 57, 58, 61, 62, 63, 64, 65, 68, 70, 72, 73, 75, 76, 77, 78, 85, 87, 91, 92, 93, 98, 101, 102, 105, 106, 112, 118, 120, 121, 125, 126, 128, 130, 144, 148, 152, 166, 170, 171, 173, 177, 178, 181, 186, 190, 192, 196, 197, 199, 200, 201, 202, 204, 206, 207, 211, 217, 218, 221, 223, 224, 227, 228, 229, 230, 231, 233, 235, 236, 237, 244, 245, 246, 247, 249, 250, 252, 256, 258, 260, 261, 263, 265, 283, 289], "correspondingli": 42, "cosec": 68, "coset": [53, 58, 206], "coset_enumer": 44, "coset_enumeration_c": 44, "coset_enumeration_r": 44, "coset_factor": 53, "coset_rank": 53, "coset_t": [44, 53], "coset_table_bas": 44, "coset_table_max_limit": 44, "coset_transvers": 53, "coset_unrank": 53, "cosh": [20, 62, 68, 70, 81, 87, 208, 211, 212, 221, 223, 229, 284, 288], "coshint": 211, "coshintegr": 211, "cosin": [20, 62, 68, 70, 77, 89, 117, 120, 186, 195, 207, 208, 214, 220, 231, 256, 288], "cosine_transform": 89, "cosinetransform": 89, "cosint": 211, "cosintegr": 211, "coskew": 231, "cosmet": 211, "cost": [41, 43, 102, 130, 230, 282], "cost_funct": 43, "costli": [87, 130, 284], "cot": [62, 68, 70, 104, 208, 211, 220], "cotang": [68, 208], "coth": [68, 211, 223], "could": [10, 11, 12, 16, 18, 20, 26, 28, 30, 38, 43, 55, 62, 74, 87, 89, 92, 120, 123, 126, 136, 140, 176, 179, 181, 198, 201, 204, 206, 208, 211, 219, 221, 223, 227, 228, 229, 230, 231, 232, 235, 236, 243, 247, 261, 262, 280, 283, 288], "could_extract_minus_sign": 62, "couldn": 89, "count": [4, 7, 11, 54, 61, 62, 63, 67, 72, 92, 98, 101, 102, 171, 207, 219, 220, 223, 230, 231, 237, 246, 249], "count_complex_root": 202, "count_digit": 102, "count_op": [12, 62, 220, 223], "count_partit": 246, "count_real_root": 202, "count_root": 207, "countabl": [181, 230], "counter": [43, 62, 68, 74, 93, 106, 108], "counterclockwis": [71, 72, 73, 77, 98, 105, 106], "counterexampl": [102, 288], "counterpart": [62, 63, 227, 278], "coupl": [29, 62, 98, 140, 155, 170, 173, 196], "coupledspinst": 173, "cours": [16, 18, 45, 46, 53, 61, 70, 87, 89, 98, 99, 102, 192, 200, 201, 205, 206, 218, 220, 221, 263, 288], "cov": 229, "covarderivativeop": 64, "covari": [58, 64, 98, 231, 237, 238], "cover": [16, 68, 102, 104, 116, 126, 185, 194, 237, 244, 278, 280], "coverag": 6, "coverage_doctest": 6, "covering_product": 65, "cox": [44, 205, 207], "cox97": [205, 207], "coxet": 91, "coxeter_diagram": 91, "cp": [0, 54, 103, 199], "cphase": 160, "cpp_dec_float_50": 43, "cpp_src": 89, "cpu": [43, 103, 143], "cpython": 143, "crack": 102, "cramer": 227, "crandal": 102, "crazi": 280, "crc": [44, 52, 54], "creat": [0, 1, 3, 4, 5, 6, 7, 9, 11, 18, 19, 24, 25, 26, 27, 29, 30, 31, 35, 37, 42, 43, 44, 51, 53, 54, 62, 63, 64, 66, 68, 69, 70, 72, 74, 75, 77, 78, 83, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 102, 103, 104, 105, 108, 112, 117, 120, 121, 123, 126, 129, 130, 131, 133, 135, 137, 139, 140, 141, 143, 144, 153, 155, 157, 161, 164, 165, 166, 170, 171, 173, 174, 176, 179, 182, 185, 186, 188, 190, 194, 195, 197, 198, 200, 201, 202, 204, 206, 207, 208, 211, 218, 223, 227, 230, 231, 232, 236, 237, 242, 243, 244, 246, 247, 249, 250, 256, 261, 263, 278, 280, 283, 284, 287, 288, 289], "create_expand_pow_optim": 43, "create_new": [256, 261], "createboson": 176, "createcg": 156, "createfermion": 176, "creation": [10, 12, 20, 62, 64, 98, 117, 123, 133, 136, 137, 138, 139, 140, 150, 160, 164, 165, 166, 176, 194, 195, 211, 231, 236, 244, 250], "creator": 176, "credit": 249, "crell": 206, "cremona": 224, "criteria": [18, 62, 283], "criterion": [43, 53, 142, 199, 204], "critic": [26, 41, 149, 194, 206, 230], "critical_angl": 149, "critical_point": 26, "critiqu": 210, "crmarsh": 231, "croot": 22, "crootof": [31, 62, 207, 227, 229], "cross": [4, 7, 8, 11, 62, 72, 78, 93, 98, 105, 106, 120, 123, 134, 141, 143, 156, 186, 188, 194, 195, 224, 230, 256, 260, 262, 263], "cross_sect": 105, "crosscovariancematrix": 231, "crt": [63, 102, 204], "crt1": 102, "crt2": 102, "crucial": [53, 61, 201], "crude": [87, 128, 197], "crv": 231, "crv_type": 231, "cryptanalysi": 63, "crypto": 63, "cryptograph": 63, "cryptographi": [102, 267, 274], "cryptosystem": 63, "csail": 65, "csc": [68, 104, 211, 220], "csch": [68, 211], "cse": [43, 103, 116, 165, 212, 223, 244, 250], "cse_main": [43, 212, 223], "cset": 62, "csr": 101, "csse": 67, "cst": 126, "cstech": 256, "csusm": 224, "ct": [63, 91, 204], "ctan": [90, 191], "ctimesd": 12, "ctmcnote": 231, "ctr1": 220, "ctr2": 220, "ctr3": 220, "ctr4": 220, "ctrl": 1, "cube": [22, 41, 43, 46, 53, 55, 68, 89, 204, 205, 224, 230, 266], "cube_root": 68, "cubefre": 102, "cuberoot": 68, "cubic": [22, 70, 198, 207, 224, 229], "cubic_curv": 256, "cubic_equ": 207, "cubicthu": 224, "cucurezeanu": 224, "cuda": [3, 103], "cuhk": 224, "cultur": 198, "cumbersom": [6, 31], "cup": [18, 207, 219, 230], "cupi": [3, 103], "curl": [187, 256, 259, 266], "curli": [12, 126, 211], "current": [4, 7, 10, 12, 18, 24, 25, 35, 38, 41, 42, 43, 44, 46, 53, 56, 57, 59, 60, 61, 62, 64, 68, 70, 72, 74, 77, 82, 85, 87, 89, 91, 93, 98, 102, 104, 105, 109, 116, 120, 126, 136, 170, 175, 176, 180, 184, 195, 197, 198, 199, 200, 202, 204, 207, 208, 210, 211, 212, 218, 221, 223, 224, 226, 227, 228, 229, 230, 231, 237, 242, 243, 244, 246, 260, 274, 284, 289], "currentfactor": 207, "curri": [0, 162], "curv": [6, 42, 64, 74, 89, 102, 105, 145, 197, 198, 227, 256, 266, 274, 278], "curvatur": [26, 145, 149], "curvedmirror": 145, "curvedrefract": 145, "curvilinear": [197, 260, 261], "curving_amount": 42, "custom": [6, 10, 21, 43, 54, 62, 66, 69, 90, 93, 98, 118, 120, 185, 191, 192, 213, 217, 224, 231, 237, 243, 250, 256, 265, 282, 284], "custom_funct": [43, 211], "custom_sin": 250, "customarili": 199, "cut": [62, 67, 68, 70, 78, 87, 198, 221, 246, 252, 288], "cut_sect": 78, "cvd": 64, "cx": [63, 106], "cxd": 175, "cxx": 211, "cxx11codeprint": [20, 211], "cxx98codeprint": 211, "cxxcode": [20, 43, 211], "cy": [25, 224], "cyan": 197, "cybertest": 223, "cycl": [7, 10, 43, 50, 53, 54, 60, 62, 65, 67, 93, 102, 150, 219, 249], "cycle_detect": 102, "cycle_length": 102, "cycle_list": 63, "cycle_structur": 54, "cyclic": [49, 50, 53, 54, 55, 65, 93, 102, 237, 249, 268], "cyclic_form": [50, 54, 55], "cyclic_ord": 50, "cyclicgroup": [47, 50, 53], "cyclotom": [62, 202, 204, 205, 206, 207], "cyclotomic_field": [202, 206], "cyclotomic_poli": [62, 206, 207], "cyclotomicpolynomi": 205, "cygwin": 1, "cylind": 266, "cylindr": [120, 197, 263], "cylindricaljoint": 120, "cython": [3, 43, 103, 143, 243], "cythoncodewrapp": 243, "cz": [25, 65, 112, 224], "czapor": 205, "c\u2081": [282, 289], "c\u2082": [282, 289], "d": [1, 6, 7, 10, 11, 12, 16, 20, 23, 25, 27, 29, 35, 42, 46, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 67, 70, 72, 76, 80, 85, 87, 89, 91, 92, 93, 94, 95, 98, 99, 101, 102, 104, 105, 108, 112, 120, 121, 143, 145, 148, 149, 155, 165, 173, 175, 176, 181, 185, 186, 188, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 211, 213, 217, 221, 223, 224, 227, 228, 229, 230, 231, 232, 233, 235, 237, 249, 252, 256, 258, 259, 260, 261, 265, 273, 284, 289], "d0": 58, "d1": [42, 58, 186, 198, 218, 231, 256], "d2": [58, 186, 198, 218, 231, 249, 256], "d2fdx2": 278, "d2fdxdy": 62, "d3": [58, 218], "d4": [45, 91, 207, 231], "d6": 231, "d_": [58, 221], "d_0": [58, 63], "d_1": [87, 181, 207, 231], "d_1e": 231, "d_1z": 231, "d_2": [181, 207, 231], "d_3": 181, "d_4": 45, "d_6": 45, "d_i": [58, 87, 181], "d_ij": 176, "d_ip": 176, "d_j": [87, 181, 221], "d_n": [50, 91, 207], "d_qp": 176, "d_v": 87, "da": 227, "dae": [125, 144], "dag": 11, "dagger": [153, 157, 163, 165, 168, 170, 175, 176, 273], "dagum": 231, "dagum_distribut": 231, "dai": [179, 183, 227], "damp": 143, "damper": [120, 121, 126, 131], "danger": [10, 199], "dartmouth": 231, "dash": 42, "dat": [95, 249], "data": [11, 16, 43, 53, 62, 63, 70, 89, 98, 103, 110, 121, 155, 197, 198, 201, 202, 204, 207, 208, 211, 223, 236, 237, 242, 244, 246, 249, 253], "databas": [211, 221], "datatyp": [104, 202, 211, 244], "date": 244, "davenport": [89, 204, 205], "davenport88": 205, "david": [142, 207], "dbase": 58, "dc": [112, 139], "dc_gain": 112, "dcm": [10, 117, 120, 126, 128, 143, 186, 194, 195, 256], "dd": [196, 216], "ddm": 200, "ddot": [95, 98, 130, 139, 191, 194, 211, 288], "de": [42, 63, 67, 102, 181, 196, 197, 208, 213, 224, 227, 249], "dead": 220, "deal": [18, 43, 61, 62, 66, 74, 82, 87, 89, 109, 116, 121, 122, 126, 192, 194, 195, 199, 204, 207, 224, 229, 240, 250, 252, 260, 265, 280, 282, 288], "dealt": [66, 87], "debian": 211, "deboer79": 181, "debug": [8, 43, 62, 89, 128, 165, 242, 243, 252], "debug_decor": 252, "debugf": 252, "decad": 227, "decai": 89, "decent": 286, "decid": [4, 6, 16, 18, 19, 20, 22, 42, 61, 93, 116, 140, 169, 201, 204, 206, 207, 211, 227, 230, 244, 284], "decim": [12, 20, 43, 62, 65, 66, 102, 104, 110, 201, 207, 282], "decimal_dig": 43, "decimal_separ": 211, "deciph": 63, "decipher_affin": 63, "decipher_atbash": 63, "decipher_bifid": 63, "decipher_bifid5": 63, "decipher_bifid6": 63, "decipher_elgam": 63, "decipher_gm": 63, "decipher_hil": 63, "decipher_kid_rsa": 63, "decipher_railf": 63, "decipher_rot13": 63, "decipher_rsa": 63, "decipher_shift": 63, "decipher_vigener": 63, "decis": [13, 32, 62, 68, 89, 220, 229, 244], "decistmt": 90, "decl1": 43, "decl2": 43, "declar": [12, 18, 26, 43, 75, 87, 98, 104, 113, 126, 128, 143, 155, 200, 211, 218, 221, 226, 227, 228, 231, 244], "decod": 63, "decode_mors": 63, "decompos": [31, 53, 54, 60, 62, 64, 68, 73, 98, 102, 160, 169, 170, 172, 202, 207, 210, 231], "decomposit": [6, 22, 27, 53, 60, 94, 95, 98, 200, 202, 204, 205, 213, 288], "decor": [4, 20, 53, 62, 70, 240, 242, 247, 248, 251, 252, 275], "decoupl": 93, "decre": 87, "decreas": [41, 43, 54, 204], "decrement": [43, 246], "decrypt": 63, "dedekind": 198, "dedent": [247, 252], "dedic": [7, 43, 45, 203, 226, 244, 261, 263], "deduc": [20, 43, 87, 92, 221, 282], "deduct": [20, 43], "deduction_stack": 44, "deem": 220, "deep": [12, 20, 62, 68, 92, 93, 207, 218, 223, 231, 283], "deepak": 205, "deeper": [21, 235, 283], "deepest": 235, "def": [4, 6, 7, 10, 11, 12, 16, 18, 19, 20, 37, 38, 42, 62, 67, 74, 92, 98, 102, 104, 134, 171, 201, 207, 211, 220, 223, 230, 245, 247, 249, 250, 253, 277, 280, 283, 284, 288], "default": [3, 4, 6, 7, 10, 11, 12, 18, 20, 22, 26, 27, 29, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 52, 53, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 84, 89, 90, 92, 93, 95, 98, 99, 102, 103, 104, 105, 106, 108, 110, 112, 114, 116, 117, 118, 120, 121, 122, 126, 140, 149, 166, 168, 171, 173, 174, 176, 180, 182, 185, 186, 188, 190, 191, 196, 197, 199, 200, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 236, 237, 242, 243, 244, 246, 247, 249, 250, 252, 256, 277, 278, 282, 284, 287, 288], "default_arrow_formatt": 42, "default_assumpt": 18, "default_curving_amount": 42, "default_curving_step": 42, "default_formatt": 42, "default_sort_kei": [10, 42, 51, 62, 235], "defaultdict": [18, 62, 249], "defeat": [4, 227], "defect": 227, "defective_matrix": 227, "defer": [98, 253], "defici": [98, 102, 230], "deficientnumb": 102, "defin": [4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 31, 34, 35, 37, 38, 41, 43, 44, 45, 46, 52, 53, 54, 57, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 85, 87, 89, 90, 93, 95, 98, 102, 105, 106, 110, 116, 117, 120, 123, 125, 126, 128, 129, 133, 135, 136, 137, 141, 143, 144, 147, 153, 155, 157, 162, 165, 171, 173, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 210, 211, 213, 214, 217, 218, 219, 221, 223, 224, 227, 229, 230, 231, 232, 236, 237, 243, 244, 245, 249, 250, 251, 252, 256, 258, 259, 260, 261, 262, 263, 265, 266, 280, 282, 288], "defined_fact": 18, "definit": [6, 10, 11, 12, 19, 35, 39, 43, 44, 53, 54, 59, 61, 62, 64, 65, 67, 68, 70, 75, 78, 85, 87, 89, 93, 94, 95, 98, 102, 104, 120, 128, 133, 134, 141, 178, 181, 184, 186, 194, 195, 198, 199, 202, 207, 208, 211, 218, 231, 232, 243, 244, 245, 249, 250, 256, 260, 261, 262, 263, 278, 288], "definite_matrix": 39, "definiteness_of_a_matrix": 98, "deflat": [202, 207], "deflect": [72, 78, 105, 106], "defn": 204, "deform": [87, 106], "deg": [89, 110, 126, 199, 204, 206, 207], "deg2rad": 126, "degbound": 204, "degener": [35, 229, 230], "degre": [16, 22, 44, 45, 53, 60, 61, 67, 70, 78, 89, 93, 98, 105, 108, 110, 112, 120, 121, 126, 127, 130, 136, 144, 148, 195, 198, 199, 202, 204, 206, 207, 210, 214, 217, 220, 221, 223, 224, 227, 229, 231, 256, 273], "degree_list": [202, 207], "degree_offset": 89, "dejavu": 1, "dejavufont": 1, "del": [181, 246, 256, 264, 288], "delai": [62, 110, 140, 220, 242, 278], "delastel": 63, "delet": [46, 91, 93, 98, 208, 252, 288], "delete_doubl": 91, "deletechar": 252, "deliber": 206, "delic": [89, 198], "delimit": [7, 62, 211], "delin": 4, "delop": [256, 262, 263], "deloper": [256, 264], "delta": [10, 12, 43, 46, 56, 67, 85, 87, 91, 110, 140, 148, 176, 196, 200, 211, 218, 224, 227, 231, 232, 237], "delta_": [70, 173, 181, 196], "delta_funct": [70, 89], "delta_i": 221, "delta_rang": [70, 176], "deltafunct": [70, 89], "deltaintegr": 89, "demand": [20, 34], "demonstr": [6, 7, 12, 18, 20, 22, 26, 27, 28, 53, 54, 62, 89, 102, 117, 120, 126, 130, 131, 140, 198, 201, 262, 288], "den": [112, 202, 223, 227], "dena": 227, "denest": [10, 62, 207, 223, 229, 249], "deni": 227, "denom": [62, 201, 202, 206, 223], "denomin": [12, 62, 66, 70, 89, 102, 112, 118, 199, 201, 202, 204, 206, 207, 210, 211, 220, 221, 223, 224, 227, 229, 288], "denot": [10, 11, 12, 16, 53, 54, 62, 64, 70, 84, 85, 87, 89, 91, 92, 93, 98, 102, 104, 112, 181, 186, 192, 197, 198, 199, 204, 206, 214, 218, 219, 221, 227, 231, 236, 237, 256, 258, 260, 261, 263, 265], "dens": [11, 93, 95, 97, 98, 200, 206, 207, 232, 250, 271, 283], "densearith": 204, "densebas": 204, "densematrix": [94, 98], "densetool": 204, "densiti": [129, 231, 242, 266], "denz": 112, "dep": [62, 227], "depend": [8, 10, 11, 12, 14, 18, 20, 22, 27, 28, 29, 33, 41, 43, 44, 53, 54, 61, 62, 63, 64, 67, 68, 70, 74, 79, 86, 87, 89, 90, 91, 98, 102, 103, 104, 110, 114, 117, 121, 122, 125, 126, 128, 130, 136, 138, 148, 149, 150, 165, 174, 176, 178, 180, 181, 191, 192, 197, 199, 200, 202, 204, 206, 207, 208, 210, 211, 212, 217, 221, 223, 224, 227, 228, 229, 230, 231, 242, 243, 244, 245, 249, 250, 263, 265, 266, 280, 282], "depict": [105, 192, 230, 265], "deploy": 33, "deprec": [6, 8, 13, 24, 36, 54, 62, 89, 93, 115, 120, 140, 207, 211, 231, 237, 240, 241, 245, 247, 250], "deprecat": 4, "deprecated_since_vers": [4, 240, 245, 247], "deprecationwarn": [242, 247], "depth": [6, 7, 9, 12, 13, 32, 53, 62, 128, 197, 198, 211], "der": [52, 53], "derang": [67, 249], "derefer": 211, "dereferenc": 211, "derek": [44, 52], "deriv": [0, 6, 10, 11, 17, 20, 26, 41, 42, 43, 46, 52, 53, 62, 64, 68, 69, 70, 72, 79, 84, 85, 87, 89, 90, 92, 95, 98, 108, 112, 116, 118, 120, 121, 125, 128, 130, 131, 133, 136, 138, 139, 140, 141, 165, 174, 178, 181, 182, 185, 186, 188, 190, 191, 192, 194, 197, 198, 199, 200, 202, 204, 206, 207, 208, 211, 213, 221, 223, 227, 228, 229, 233, 238, 244, 256, 259, 260, 279, 282, 289], "derivand": 238, "derive_by_arrai": 232, "derived_dim": 178, "derived_seri": [52, 53], "derived_subgroup": 53, "derived_unit": 184, "descend": [62, 198, 206, 244], "descent": [54, 224], "descr": 184, "describ": [4, 6, 7, 10, 12, 18, 19, 20, 22, 29, 35, 42, 44, 52, 53, 54, 56, 57, 60, 61, 62, 63, 67, 70, 72, 77, 78, 87, 89, 93, 98, 101, 102, 112, 116, 120, 121, 123, 125, 126, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 155, 176, 181, 185, 186, 192, 194, 195, 198, 201, 204, 206, 212, 218, 221, 223, 224, 227, 230, 231, 235, 244, 249, 250, 256, 258, 263, 278], "descript": [0, 4, 6, 7, 10, 23, 32, 42, 44, 52, 70, 89, 102, 148, 166, 173, 184, 194, 195, 196, 211, 235, 242, 244, 246, 247, 267, 285], "design": [3, 4, 6, 10, 11, 13, 15, 19, 20, 23, 28, 32, 39, 44, 52, 62, 98, 101, 104, 143, 144, 201, 205, 211, 216, 221, 227, 230, 282, 283, 287], "desir": [6, 10, 12, 16, 20, 24, 29, 31, 34, 53, 54, 62, 63, 65, 66, 67, 68, 72, 76, 78, 92, 93, 98, 101, 102, 103, 121, 122, 123, 125, 136, 140, 161, 186, 194, 195, 200, 202, 204, 206, 207, 208, 211, 212, 214, 219, 223, 227, 229, 230, 243, 245, 246, 249, 263, 277], "despit": [4, 22, 31, 62, 288], "desri": 117, "destin": 244, "destroi": [176, 220], "destruct": 207, "det": [27, 35, 98, 99, 143, 195, 200, 284], "det_lu": 98, "detach": 1, "detail": [0, 3, 4, 5, 6, 7, 8, 10, 11, 13, 15, 18, 20, 32, 42, 53, 62, 64, 67, 69, 70, 87, 88, 89, 90, 98, 102, 110, 120, 121, 126, 141, 143, 148, 166, 170, 186, 188, 196, 197, 198, 204, 206, 213, 218, 223, 224, 225, 227, 228, 231, 236, 237, 242, 245, 247, 250, 261, 262, 263, 264, 267, 271, 278, 280, 284, 285, 287], "detect": [1, 3, 34, 41, 95, 98, 102, 197, 201, 211, 227, 228, 230, 232, 249, 287], "determin": [4, 7, 10, 11, 14, 16, 18, 19, 20, 22, 25, 26, 27, 30, 36, 38, 39, 40, 41, 43, 44, 45, 46, 53, 62, 63, 64, 65, 66, 68, 72, 73, 75, 77, 78, 89, 90, 91, 95, 98, 102, 104, 105, 106, 112, 118, 120, 122, 123, 125, 135, 141, 144, 155, 168, 170, 172, 173, 176, 179, 181, 186, 192, 197, 198, 199, 200, 204, 206, 207, 211, 217, 218, 219, 221, 223, 224, 226, 227, 229, 230, 231, 235, 247, 249, 256, 263, 266, 280, 288], "determinisit": 211, "determinist": [18, 53, 89, 102, 204, 205], "deterministic_vari": 102, "detool": 227, "deutil": [227, 228], "dev": [1, 3, 4, 5, 247], "devel": [7, 196], "develop": [0, 4, 6, 7, 8, 9, 11, 16, 18, 20, 32, 41, 44, 60, 104, 143, 180, 197, 198, 201, 204, 229, 230, 282, 285], "deviat": [7, 149, 231], "devis": 16, "df": [16, 64, 227], "dfdx": 278, "dfdxcheck": 16, "dfrac": 231, "dft": [10, 65, 115], "dfx": 62, "dg": 64, "dh_private_kei": 63, "dh_public_kei": 63, "dh_shared_kei": 63, "di": 207, "di1": 53, "di2": 53, "di3": 53, "di4": 53, "diag": [93, 95, 98, 101, 143, 200, 237, 284], "diag_block": 95, "diagmat": 143, "diagon": [39, 67, 93, 94, 95, 98, 101, 125, 148, 200, 233], "diagonal_ax": 232, "diagonal_indic": 233, "diagonal_matrix": 39, "diagonal_solv": [94, 98], "diagonalhandl": 39, "diagonaliz": [98, 284], "diagonalpred": 39, "diagram": [43, 51, 91, 105, 129, 130, 131, 136, 156, 236, 261, 283], "diagram_draw": 42, "diagram_format": 42, "diagramgrid": 42, "diamet": [62, 72], "diaz": 205, "dic": 204, "dice": 231, "dict": [10, 12, 14, 18, 22, 25, 26, 30, 31, 43, 45, 54, 62, 63, 64, 78, 79, 92, 93, 98, 102, 104, 121, 122, 156, 168, 171, 182, 184, 186, 197, 200, 201, 202, 204, 206, 207, 208, 209, 211, 223, 224, 227, 228, 229, 230, 231, 235, 242, 243, 249, 256, 289], "dict_iter": 224, "dict_merg": 249, "dictionari": [3, 10, 11, 25, 29, 31, 42, 43, 51, 53, 54, 60, 62, 67, 76, 78, 91, 93, 98, 101, 102, 104, 105, 118, 121, 122, 125, 126, 128, 130, 133, 138, 140, 166, 176, 186, 195, 197, 199, 202, 204, 206, 207, 209, 211, 218, 223, 224, 227, 228, 229, 230, 231, 235, 237, 242, 246, 249, 250, 256, 277, 284], "did": [3, 7, 19, 62, 89, 102, 116, 133, 181, 204, 208, 219, 229, 240, 250, 280, 282, 288], "didn": [89, 98, 140], "die": [10, 206, 231], "die_rol": 231, "diedistribut": 231, "diepspac": 231, "dif": 62, "diff": [6, 10, 11, 16, 20, 26, 29, 41, 43, 62, 67, 68, 69, 70, 79, 84, 95, 98, 116, 118, 129, 130, 143, 174, 186, 188, 191, 192, 195, 197, 202, 207, 210, 211, 221, 227, 228, 229, 232, 233, 238, 260, 263, 278, 282, 289], "diff_oper": 211, "diffeq": 289, "differ": [1, 4, 6, 7, 10, 11, 12, 14, 15, 17, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 34, 42, 43, 44, 45, 51, 52, 53, 54, 58, 61, 62, 63, 64, 66, 67, 68, 70, 73, 75, 77, 78, 82, 84, 86, 87, 89, 90, 91, 92, 95, 98, 102, 103, 104, 105, 110, 112, 116, 117, 123, 126, 128, 132, 140, 141, 144, 148, 149, 161, 162, 170, 171, 174, 176, 178, 180, 181, 185, 186, 187, 190, 191, 192, 195, 197, 198, 199, 200, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 216, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 235, 237, 240, 242, 243, 244, 245, 246, 247, 249, 250, 256, 259, 263, 265, 279, 280, 282, 283, 284, 287, 288], "difference_delta": 216, "differencedelta": 216, "differenti": [6, 7, 10, 11, 23, 41, 62, 67, 68, 70, 79, 80, 82, 85, 112, 120, 121, 125, 126, 128, 130, 133, 136, 137, 138, 139, 140, 143, 144, 165, 171, 185, 186, 188, 190, 192, 195, 198, 204, 208, 210, 211, 216, 221, 223, 227, 228, 256, 263, 264, 267, 274, 278, 279, 282], "differentialoper": [84, 85, 165], "differentialoperatoralgebra": 85, "differentiate_finit": [41, 62, 278], "diffgeom": 64, "diffi": 63, "difficult": [7, 18, 29, 31, 62, 98, 126, 208, 221, 227, 228, 230, 243, 250, 266, 282, 288], "difficulti": [64, 127], "dig": [20, 43, 283], "digamma": [6, 67, 70, 211], "digamma_funct": 70, "digammafunct": 70, "digit": [6, 11, 12, 28, 43, 62, 63, 65, 66, 72, 89, 92, 102, 136, 186, 201, 207, 218, 223, 249, 277], "digit_2txt": 211, "digraph": [211, 249, 287], "dihedr": [45, 50, 53, 54], "dihedral2": 53, "dihedral_group": [50, 53], "dihedralgroup": [50, 53, 60], "dilbert": 89, "dim": [43, 64, 77, 98, 103, 178, 184, 211, 234, 237, 271], "dim1": 236, "dim2": 236, "dim_can_vector": 178, "dim_handl": 211, "dim_si": 178, "dim_vector": 178, "dimens": [27, 43, 46, 63, 64, 70, 71, 73, 75, 76, 77, 79, 91, 93, 95, 98, 101, 105, 113, 130, 150, 160, 162, 165, 170, 179, 180, 183, 184, 186, 197, 200, 211, 224, 227, 229, 231, 232, 233, 236, 237, 244, 256, 259, 261, 273], "dimension": [27, 41, 43, 46, 64, 74, 75, 76, 77, 78, 95, 98, 106, 113, 143, 150, 152, 162, 178, 192, 193, 197, 198, 204, 206, 207, 210, 211, 229, 230, 232, 233, 237, 243, 265, 289], "dimension_system": 184, "dimensional_depend": 178, "dimensionless": [180, 181], "dimensions": 178, "dimensionsystem": 178, "diment": 98, "dimino": [44, 53], "dimitar": 220, "dimsys_si": [178, 179], "diop_bf_dn": 224, "diop_dn": 224, "diop_general_pythagorean": 224, "diop_general_sum_of_even_pow": 224, "diop_general_sum_of_squar": 224, "diop_linear": 224, "diop_quadrat": 224, "diop_solv": 224, "diop_ternary_quadrat": 224, "diop_ternary_quadratic_norm": 224, "diophantin": [23, 24, 102, 204, 225, 268], "diophantineequ": 224, "diophantineequationtyp": 224, "diophantinesolutionset": 224, "diophantu": 224, "diplform": 84, "diploma": 256, "diplomat": 63, "dir": [12, 62, 105, 213, 218, 249], "dirac": [93, 98, 110, 114, 115, 174, 211], "diracdelta": [6, 70, 89, 171, 176, 211], "direct": [4, 6, 7, 10, 11, 17, 29, 35, 37, 38, 42, 47, 50, 53, 58, 61, 62, 64, 66, 68, 71, 75, 76, 77, 78, 92, 93, 98, 105, 106, 108, 116, 117, 120, 128, 130, 134, 143, 162, 186, 192, 194, 195, 198, 200, 201, 204, 208, 218, 221, 237, 240, 249, 256, 261, 262, 265], "direct_product": 237, "direct_sum": 162, "directed_complete_partial_ord": 68, "direction": 195, "direction_cosin": [75, 77], "direction_ratio": [75, 77], "directional_deriv": 263, "directli": [3, 4, 6, 10, 11, 12, 16, 18, 19, 20, 22, 33, 37, 38, 41, 42, 43, 53, 61, 62, 64, 68, 73, 93, 95, 98, 102, 126, 162, 174, 179, 186, 190, 197, 198, 200, 201, 202, 206, 207, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 242, 243, 244, 245, 246, 247, 278, 289], "director": 72, "director_circl": 72, "directori": [1, 3, 6, 7, 33, 38, 43, 227, 242, 243, 252], "directproduct": [47, 50], "directrix": 72, "directsumhilbertspac": 162, "dirichlet": [61, 70, 231], "dirichlet_distribut": 231, "dirichlet_eta": [70, 211], "dirichlet_eta_funct": 70, "dirichletdistribut": 231, "dirichleteta": 211, "dirnam": 253, "disabl": [10, 11, 29, 62, 63, 87, 89, 102, 204, 207, 211, 219, 227, 229, 240, 242, 245, 249, 250], "disable_view": 245, "disadvantag": 62, "disallow": [20, 62, 207, 212, 223, 245], "disambigu": 62, "disc": [127, 136, 194, 273], "discard": [62, 206, 211, 230], "discard_befor": 206, "discern": [36, 38], "disciplin": 198, "disco": 205, "discontinu": [10, 41, 66, 68, 89, 105, 214, 229], "discourag": [11, 18, 62, 223], "discov": [63, 87, 116, 235, 284], "discoveri": [204, 284], "discrep": 180, "discret": [10, 41, 43, 44, 52, 54, 62, 63, 70, 102, 112, 176, 181, 213, 216, 227, 229, 230, 268, 277], "discrete_fourier_transform_": 65, "discrete_log": 102, "discrete_uniform_distribut": 231, "discretedistributionhandmad": 231, "discretelogarithm": 102, "discretemarkovchain": 231, "discreterv": 231, "discreteuniform": 231, "discreteuniformdistribut": 231, "discrimin": [102, 202, 204, 206, 207], "discrit": 16, "discuss": [0, 4, 6, 7, 10, 12, 13, 14, 16, 18, 19, 20, 32, 44, 53, 63, 70, 102, 116, 121, 126, 136, 140, 141, 185, 193, 194, 195, 201, 237, 246, 267, 277, 279, 280, 282, 283, 285, 287, 288], "disguis": 87, "disjoint": [39, 42, 51, 54, 207, 219, 249], "disjoint_set": 219, "disjoint_union": 219, "disjointunion": 219, "disjunct": 92, "disk": [43, 63, 219, 230, 250], "dispatch": [11, 37, 38, 39, 62, 63, 171, 211, 230, 246], "dispers": [205, 231], "dispersionset": 207, "displac": [192, 194, 265], "displai": [6, 7, 12, 18, 19, 29, 62, 63, 66, 87, 91, 105, 106, 110, 147, 180, 186, 190, 191, 197, 201, 202, 211, 219, 235, 242], "displayhook": [211, 242], "disregard": 42, "dissimilar": 229, "dist": 231, "distanc": [20, 42, 46, 54, 72, 75, 76, 77, 78, 105, 106, 115, 116, 120, 130, 131, 145, 149, 179, 190, 192, 265], "distinct": [4, 7, 11, 14, 18, 20, 30, 43, 53, 54, 62, 63, 67, 75, 87, 92, 98, 102, 125, 194, 201, 206, 207, 211, 219, 221, 288], "distinguish": [15, 18, 19, 42, 53, 66, 91, 126, 175, 181, 198], "distract": 6, "distribut": [1, 3, 33, 53, 60, 62, 70, 78, 89, 105, 106, 175, 199, 202, 207, 211, 237], "distribute_and_over_or": 92, "distribute_or_over_and": 92, "distribute_order_term": [62, 223], "distribute_xor_over_and": 92, "distributedmodul": 204, "distributionshandbook": 231, "distutil": 243, "div": [62, 199, 201, 202, 207, 211, 223, 283], "divaugmentedassign": 43, "diverg": [61, 70, 145, 187, 256, 259], "divergence_theorem": 266, "divid": [10, 11, 53, 61, 62, 63, 78, 98, 102, 180, 181, 199, 201, 202, 204, 206, 207, 211, 227, 246, 283], "dividend": [62, 202], "divis": [12, 20, 62, 98, 102, 178, 180, 198, 201, 202, 203, 204, 207, 209, 211, 224, 227, 229, 242, 250, 280, 283, 287], "divisisor": 102, "divisor": [20, 39, 53, 62, 63, 98, 102, 198, 199, 201, 202, 204, 205, 206, 207, 210], "divisor_count": 102, "divisor_funct": 102, "divisor_sigma": [11, 102], "divmod": [199, 201, 202], "dixon": 205, "django": 280, "djoyc": 231, "dk": [35, 105, 206], "dkei": 62, "dl": [61, 195, 202, 205, 223], "dlmf": [6, 68, 70], "dlp": 63, "dm": [200, 206], "dmc": [133, 134, 135], "dmdomainerror": [99, 200], "dmension": 91, "dmf": 202, "dmnonsquarematrixerror": 200, "dmp": [62, 198, 202, 207], "dmp_": [201, 204], "dmp_ab": 204, "dmp_add": 204, "dmp_add_ground": 204, "dmp_add_mul": 204, "dmp_add_term": 204, "dmp_apply_pair": 204, "dmp_cancel": 204, "dmp_clear_denom": 204, "dmp_compos": 204, "dmp_content": 204, "dmp_convert": 204, "dmp_copi": 204, "dmp_deflat": 204, "dmp_degre": 204, "dmp_degree_in": 204, "dmp_degree_list": 204, "dmp_diff": 204, "dmp_diff_eval_in": 204, "dmp_diff_in": 204, "dmp_discrimin": 204, "dmp_div": 204, "dmp_eject": 204, "dmp_euclidean_pr": 204, "dmp_eval": 204, "dmp_eval_in": 204, "dmp_eval_tail": 204, "dmp_exclud": 204, "dmp_expand": 204, "dmp_exquo": 204, "dmp_exquo_ground": 204, "dmp_ext_factor": 204, "dmp_factor_list": 204, "dmp_factor_list_includ": 204, "dmp_ff_div": 204, "dmp_ff_prs_gcd": 204, "dmp_from_dict": 204, "dmp_from_sympi": 204, "dmp_gcd": 204, "dmp_gcdex": 204, "dmp_ground": 204, "dmp_ground_cont": 204, "dmp_ground_extract": 204, "dmp_ground_lc": 204, "dmp_ground_mon": 204, "dmp_ground_nth": 204, "dmp_ground_p": 204, "dmp_ground_primit": 204, "dmp_ground_tc": 204, "dmp_ground_trunc": 204, "dmp_half_gcdex": 204, "dmp_includ": 204, "dmp_inflat": 204, "dmp_inject": 204, "dmp_inner_gcd": 204, "dmp_inner_subresult": 204, "dmp_integr": 204, "dmp_integrate_in": 204, "dmp_invert": 204, "dmp_irreducible_p": 204, "dmp_l1_norm": 204, "dmp_lc": 204, "dmp_lcm": 204, "dmp_lift": 204, "dmp_list_term": 204, "dmp_max_norm": 204, "dmp_mul": 204, "dmp_mul_ground": 204, "dmp_mul_term": 204, "dmp_multi_defl": 204, "dmp_neg": 204, "dmp_negative_p": 204, "dmp_nest": 204, "dmp_normal": 204, "dmp_nth": 204, "dmp_one": 204, "dmp_one_p": 204, "dmp_pdiv": 204, "dmp_permut": 204, "dmp_pexquo": 204, "dmp_positive_p": 204, "dmp_pow": 204, "dmp_pquo": 204, "dmp_prem": 204, "dmp_primit": 204, "dmp_primitive_pr": 204, "dmp_prs_result": 204, "dmp_qq_collins_result": 204, "dmp_qq_heu_gcd": 204, "dmp_quo": 204, "dmp_quo_ground": 204, "dmp_rais": 204, "dmp_rem": 204, "dmp_result": 204, "dmp_revert": 204, "dmp_rr_div": 204, "dmp_rr_prs_gcd": 204, "dmp_slice": 204, "dmp_sqr": 204, "dmp_strip": 204, "dmp_sub": 204, "dmp_sub_ground": 204, "dmp_sub_mul": 204, "dmp_sub_term": 204, "dmp_subresult": 204, "dmp_swap": 204, "dmp_tc": 204, "dmp_terms_gcd": 204, "dmp_to_dict": 204, "dmp_to_tupl": 204, "dmp_trial_divis": 204, "dmp_true_lt": 204, "dmp_trunc": 204, "dmp_valid": 204, "dmp_zero": 204, "dmp_zero_p": 204, "dmp_zz_collins_result": 204, "dmp_zz_diophantin": 204, "dmp_zz_factor": 204, "dmp_zz_heu_gcd": 204, "dmp_zz_mignotte_bound": 204, "dmp_zz_modular_result": 204, "dmp_zz_wang": 204, "dmp_zz_wang_hensel_lift": 204, "dmp_zz_wang_lead_coeff": 204, "dmp_zz_wang_non_divisor": 204, "dmp_zz_wang_test_point": 204, "dmrankerror": [200, 206], "dmshapeerror": [99, 200], "dmtc": 249, "dmvalueerror": 200, "dn": [54, 231], "dnf": [1, 92], "dnh": 138, "do": [2, 3, 4, 6, 7, 10, 11, 12, 16, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 32, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 54, 58, 61, 62, 63, 64, 65, 68, 70, 72, 74, 77, 78, 81, 87, 89, 90, 92, 93, 95, 96, 98, 99, 102, 103, 109, 112, 116, 120, 121, 123, 125, 126, 127, 129, 130, 134, 137, 138, 143, 148, 151, 156, 160, 165, 168, 170, 172, 178, 180, 181, 184, 185, 187, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 210, 211, 212, 214, 218, 219, 220, 221, 223, 224, 227, 228, 229, 233, 236, 237, 240, 242, 243, 245, 247, 249, 250, 252, 259, 261, 262, 263, 265, 277, 278, 280, 281, 282, 283, 284, 286, 288], "do1": 43, "do2": 43, "do_sub": 218, "dobelman": 231, "doc": [3, 4, 6, 7, 8, 12, 32, 43, 53, 61, 62, 78, 90, 141, 178, 201, 203, 224, 227, 242, 243, 245, 247, 249, 256, 261, 274], "docbook": 1, "docbook2x": 1, "dockerfil": 1, "docstr": [4, 8, 10, 12, 20, 24, 42, 43, 55, 62, 84, 87, 89, 98, 102, 107, 111, 113, 119, 136, 141, 146, 163, 169, 170, 172, 189, 193, 207, 214, 217, 218, 220, 223, 227, 228, 229, 230, 236, 237, 242, 245, 250, 252, 257, 264, 267, 271, 273], "docstring_limit": 250, "doctest": [4, 6, 7, 12, 20, 55, 70, 98, 102, 128, 165, 176, 201, 207, 227, 242, 245, 247, 287], "doctest_arg": 242, "doctest_depends_on": 245, "doctest_kwarg": 242, "doctestpars": 242, "doctestrunn": 242, "document": [8, 10, 11, 17, 20, 23, 37, 38, 39, 53, 58, 62, 63, 68, 69, 70, 74, 84, 87, 88, 90, 95, 98, 103, 106, 116, 121, 136, 138, 139, 141, 143, 151, 165, 171, 185, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 204, 207, 211, 221, 225, 227, 229, 230, 240, 242, 244, 245, 247, 249, 256, 263, 264, 267, 278, 280, 281, 287, 288], "documentclass": [90, 191, 211], "docutil": 7, "doe": [3, 6, 7, 8, 10, 11, 15, 18, 19, 20, 22, 23, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 53, 54, 58, 60, 61, 62, 63, 64, 66, 68, 70, 72, 73, 76, 78, 87, 89, 92, 93, 98, 101, 102, 104, 114, 116, 118, 126, 128, 133, 137, 156, 160, 166, 170, 172, 175, 185, 194, 195, 197, 199, 200, 201, 202, 204, 206, 207, 208, 211, 218, 219, 220, 221, 223, 224, 226, 227, 229, 232, 236, 237, 240, 242, 244, 246, 249, 250, 252, 256, 258, 261, 277, 278, 280, 283, 284, 287, 288, 289], "doesn": [4, 6, 10, 12, 20, 22, 43, 86, 126, 130, 140, 143, 195, 199, 208, 210, 220, 223, 230, 289], "doi": [0, 6, 35, 41, 54, 61, 98, 202, 205, 220, 223, 231, 249], "doit": [61, 62, 64, 67, 68, 70, 89, 95, 112, 153, 155, 157, 168, 170, 173, 174, 176, 186, 196, 207, 213, 218, 223, 227, 228, 231, 233, 256, 259, 260, 262, 263, 278, 283], "doit_numer": 62, "dok": 101, "dollar": [7, 282], "dom": [201, 202, 204, 219], "domain": [3, 6, 10, 11, 16, 20, 22, 27, 41, 42, 62, 63, 65, 67, 68, 70, 81, 83, 84, 87, 89, 95, 98, 99, 102, 109, 112, 126, 143, 198, 200, 203, 204, 206, 208, 209, 226, 227, 229, 231, 274, 284, 289], "domain_check": 230, "domain_or_field": 202, "domain_or_r": [198, 202], "domainel": [201, 202, 209], "domainerror": [200, 204, 207], "domainmatrix": [10, 27, 94, 98, 203, 206, 209, 274], "domin": [87, 93, 216, 218], "dominik": [62, 213], "don": [4, 10, 12, 19, 20, 38, 43, 87, 92, 98, 103, 104, 116, 126, 185, 194, 195, 201, 211, 221, 230, 232, 240, 245, 265, 277, 278, 282, 283, 288], "donal": 207, "donald": [205, 246], "donaldlab": 205, "done": [4, 6, 10, 11, 12, 16, 20, 37, 38, 40, 41, 42, 43, 53, 55, 60, 62, 63, 64, 67, 70, 73, 74, 87, 89, 93, 98, 102, 120, 126, 128, 134, 141, 143, 162, 171, 172, 173, 176, 178, 179, 186, 192, 194, 195, 197, 198, 200, 204, 207, 208, 210, 211, 212, 220, 223, 224, 227, 229, 230, 231, 236, 237, 242, 243, 246, 250, 260, 261, 277, 280, 282, 283, 284], "dont_accept_blanklin": 242, "dont_accept_true_for_1": 242, "dontcar": 92, "doprint": [43, 211], "dorin": 224, "doron": 61, "dot": [53, 54, 58, 60, 63, 75, 77, 84, 93, 98, 112, 121, 123, 128, 129, 130, 133, 134, 135, 138, 139, 140, 141, 143, 160, 186, 188, 191, 194, 195, 196, 198, 199, 204, 207, 211, 230, 231, 249, 256, 260, 262, 263], "dot_rot_grad_ynm": 196, "dotprint": [283, 287], "dotprodsimp": 93, "dotsb": [67, 213], "dotsc": [67, 213], "doubl": [1, 6, 7, 29, 41, 43, 58, 62, 63, 67, 98, 104, 120, 135, 136, 194, 201, 211, 220, 221, 244, 288], "double_coset_can_rep": 58, "double_factori": 67, "double_pendulum": 126, "doubli": 102, "doubt": [92, 126], "dover": 227, "down": [1, 4, 6, 18, 67, 95, 114, 128, 130, 194, 195, 197, 202, 213, 219, 221, 223, 227, 246, 284, 288], "download": [5, 7, 33, 42, 84, 205, 220, 227, 256, 282], "downsid": 284, "downstream": [10, 18], "downward": [105, 106, 108, 206], "doy": 53, "dozen": [4, 11, 20, 288], "dp": [20, 43, 62, 65, 70, 102, 201, 202, 229, 245], "dpi": [90, 191], "dpll": 3, "dq_dict": 130, "dr": [42, 64, 211, 227], "drag": 197, "dramat": 246, "drastic": 196, "draw": [105, 156, 211, 231], "drawer": 42, "drawn": [42, 53, 91, 197, 201, 209], "dreal": 211, "drep": 200, "drho": 64, "driver": [211, 243], "drop": [1, 68, 89, 103, 133, 202, 204], "drop_to_ground": 202, "dsign": 43, "dsolv": [6, 11, 29, 227, 228, 229, 278, 282, 289], "dsolve_system": 227, "dt": [29, 64, 70, 130, 143, 185, 186, 188, 194, 195, 207, 227, 288], "dt2": 143, "dth": 16, "dtheta": 64, "dtmc": 231, "dtype": [98, 103, 198, 200, 201, 202, 211, 250], "du": 228, "dual": [98, 168, 174], "dual_class": 174, "duart": 227, "due": [1, 6, 10, 16, 20, 28, 41, 43, 45, 52, 53, 62, 64, 79, 98, 102, 105, 108, 126, 128, 140, 149, 176, 192, 195, 201, 207, 211, 214, 224, 226, 228, 231, 247, 259, 265, 288], "duke": 205, "dum": 237, "dummi": [11, 43, 58, 61, 62, 68, 87, 89, 98, 126, 143, 171, 176, 201, 202, 206, 207, 208, 217, 218, 219, 221, 223, 227, 230, 235, 237, 240, 244, 249, 250], "dummifi": 250, "dummy_eq": 62, "dummy_index": 62, "dummy_nam": [10, 237], "dummy_vari": 61, "dummywrapp": 243, "dump_c": [243, 244], "dump_cod": 244, "dump_f95": 244, "dump_h": 244, "dump_jl": 244, "dump_m": 244, "dump_pyx": 243, "dump_r": 244, "dup": [53, 202], "dup_": [201, 204], "dup__": 204, "dup_cont": 204, "dup_cyclotomic_p": 204, "dup_decompos": 204, "dup_extract": 204, "dup_factor_list": 201, "dup_gf_factor": 204, "dup_lshift": 204, "dup_mirror": 204, "dup_mon": 204, "dup_primit": 204, "dup_random": 204, "dup_real_imag": 204, "dup_revers": 204, "dup_rshift": 204, "dup_scal": 204, "dup_shift": 204, "dup_sign_vari": 204, "dup_transform": 204, "dup_zz_cyclotomic_factor": 204, "dup_zz_cyclotomic_poli": 204, "dup_zz_factor": 204, "dup_zz_factor_sqf": 204, "dup_zz_hensel_lift": 204, "dup_zz_hensel_step": 204, "dup_zz_irreducible_p": 204, "dup_zz_zassenhau": 204, "duplic": [12, 53, 56, 63, 68, 70, 98, 102, 219, 227, 249, 281], "dure": [4, 10, 12, 34, 43, 62, 63, 93, 98, 102, 104, 117, 121, 143, 144, 194, 206, 211, 220, 229, 230, 247, 249], "dv": 224, "dvi": [90, 191, 211], "dvioption": 211, "dvip": 90, "dvipng": 1, "dx": [7, 10, 11, 16, 20, 25, 41, 43, 58, 62, 64, 66, 70, 79, 81, 84, 85, 86, 87, 89, 98, 105, 115, 121, 122, 165, 195, 207, 208, 214, 224, 227, 228, 232, 278, 282, 287, 289], "dxa": 85, "dxi": 64, "dxy": [25, 224], "dy": [20, 43, 64, 79, 98, 105, 115, 143, 207, 211, 224, 227, 228, 278], "dy2": 143, "dyad": [116, 143, 260], "dyadic": [6, 65, 117, 123, 126, 128, 133, 135, 143, 186, 188, 191, 193, 256, 259, 264], "dyadic_product": [193, 264], "dyadic_tensor": [186, 256], "dyadicadd": 260, "dyadicmul": 260, "dyadicproduct": 264, "dyer": 207, "dyn_implicit_mat": [125, 144], "dyn_implicit_rh": [125, 144], "dynam": [102, 109, 110, 112, 116, 118, 121, 122, 125, 128, 136, 138, 139, 140, 141, 142, 143, 144, 185, 186, 188, 190, 194, 195, 246, 247, 256], "dynamic_symbol": 125, "dynamicsymbol": [6, 116, 117, 118, 120, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 186, 188, 190, 191, 192, 194, 195], "dynkin": 91, "dynkin_diagram": 91, "dynkindiagram": 91, "dz": [20, 105, 115, 221], "e": [0, 1, 3, 4, 5, 6, 7, 10, 11, 12, 18, 19, 20, 23, 27, 28, 31, 33, 34, 35, 39, 41, 42, 43, 44, 51, 52, 53, 54, 55, 58, 60, 61, 62, 63, 64, 66, 67, 68, 70, 72, 74, 75, 76, 77, 78, 79, 84, 85, 87, 89, 91, 92, 93, 98, 102, 104, 105, 106, 108, 112, 113, 117, 120, 121, 123, 125, 126, 139, 140, 143, 144, 145, 148, 155, 156, 160, 165, 166, 168, 171, 173, 175, 176, 181, 182, 186, 191, 192, 195, 196, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 218, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 256, 260, 263, 265, 266, 277, 278, 282, 283, 288], "e0": 218, "e1": [70, 72, 79, 126, 201, 206, 218, 227, 230], "e103": 0, "e2": [20, 41, 62, 65, 72, 79, 89, 98, 102, 110, 126, 201, 206, 218, 227, 230, 231, 249], "e2row": 126, "e3": [126, 218, 227], "e4": [126, 218], "e6": 91, "e_": [62, 67, 98], "e_0": 63, "e_1": [52, 98, 198, 204, 207], "e_2": [204, 207], "e_d": 204, "e_dom": 201, "e_i": [64, 198, 221, 237], "e_j": 64, "e_k": 204, "e_n": [52, 67, 91, 98, 152, 198, 207], "e_nl": [114, 177], "e_nl_dirac": 114, "e_r": 64, "e_rho": 64, "e_theta": 64, "e_x": [64, 237], "e_z": 237, "each": [1, 4, 10, 11, 12, 14, 18, 20, 22, 24, 25, 26, 27, 29, 32, 35, 38, 39, 41, 42, 43, 44, 45, 46, 53, 54, 58, 62, 63, 64, 65, 66, 67, 68, 70, 72, 77, 78, 79, 84, 85, 87, 89, 91, 92, 93, 95, 98, 102, 105, 108, 110, 112, 118, 120, 121, 126, 128, 130, 133, 135, 137, 138, 141, 160, 173, 176, 185, 186, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 209, 211, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 242, 244, 246, 249, 250, 252, 256, 258, 259, 261, 263, 265, 278, 281, 283, 288, 289], "eager": 250, "eagertensor": 250, "earli": [4, 62, 102, 165, 224], "earlier": [10, 116, 208, 212, 221, 223, 250, 261, 263, 283], "earth": [192, 265], "eas": [0, 126, 195, 197, 211, 214], "easi": [4, 11, 50, 54, 62, 70, 87, 103, 123, 130, 136, 194, 198, 201, 206, 211, 218, 221, 224, 227, 230, 235, 236, 237, 277, 278, 280, 281, 282, 283, 284, 287], "easier": [4, 11, 19, 30, 45, 62, 106, 126, 128, 194, 202, 206, 208, 221, 227, 230, 244, 250, 260, 282, 288, 289], "easiest": [5, 7, 10, 11, 12, 62, 198, 201, 224, 250, 261, 277, 283, 288], "easili": [7, 10, 18, 20, 29, 33, 45, 62, 63, 85, 87, 98, 102, 103, 120, 138, 174, 194, 207, 210, 211, 216, 223, 224, 227, 229, 230, 233, 243, 282], "east": 63, "easyfit": 231, "ebnf": 223, "ec": 207, "ecart": 204, "eccentr": [70, 72], "echelon": [98, 200, 230, 284], "echelon_form": [98, 284], "ecm_one_factor": 102, "eco": 249, "econ": 231, "econom": [54, 89, 249], "economi": 54, "ecosystem": 0, "ect": 229, "ed": [6, 54, 70, 89, 98, 205, 229, 231], "edg": [46, 55, 56, 91, 200, 211, 230, 249, 287], "edit": [7, 89, 98, 102, 204, 205, 207], "edmond": 196, "edmonds74": 196, "edu": [41, 46, 53, 54, 63, 65, 67, 89, 98, 102, 205, 210, 220, 224, 227, 231, 256], "educ": [29, 63, 98], "ee": [196, 206], "eea": 204, "eez": 204, "ef": 249, "effect": [3, 6, 20, 28, 33, 53, 55, 62, 79, 87, 89, 93, 98, 105, 126, 128, 140, 148, 176, 186, 197, 201, 204, 208, 210, 227, 280], "effici": [11, 16, 18, 22, 27, 35, 41, 43, 46, 53, 58, 62, 65, 66, 67, 78, 79, 95, 98, 102, 103, 112, 120, 121, 143, 196, 199, 200, 201, 202, 204, 207, 208, 209, 210, 223, 224, 229, 243, 250, 277, 283, 284, 288], "effort": [103, 202, 204], "eg": [62, 126, 183, 230], "egg": 252, "eggsham": 252, "egypt": 102, "egyptian": 102, "egyptian_fract": 102, "ei": [25, 29, 70, 87, 206, 211, 221, 224, 227, 237], "eick": [53, 60], "eig": [98, 126, 143], "eigen": [98, 152], "eigenbra": [154, 167, 173], "eigenket": [154, 167, 173], "eigenspac": 98, "eigenst": [154, 166, 171, 173, 174], "eigenv": [93, 98, 126, 128, 143, 170, 282, 284], "eigenvalu": [93, 98, 126, 128, 170, 173, 282], "eigenvec": 126, "eigenvect": [98, 126, 143, 170, 284], "eigenvector": [98, 126, 170, 171, 196], "eight": [16, 31, 211], "eigval": 143, "eigvec": [126, 143], "eijk": 70, "einstein": [176, 237], "eisenstein": 204, "either": [1, 3, 6, 7, 10, 11, 12, 18, 19, 20, 22, 25, 26, 27, 28, 30, 35, 39, 41, 42, 46, 54, 61, 62, 63, 66, 67, 68, 70, 77, 79, 85, 87, 89, 90, 92, 93, 98, 102, 112, 117, 120, 121, 122, 125, 126, 139, 141, 143, 160, 166, 173, 176, 178, 180, 191, 195, 197, 199, 200, 201, 202, 204, 206, 207, 211, 213, 218, 219, 220, 221, 224, 227, 228, 229, 230, 231, 232, 235, 236, 243, 249, 250, 256, 265, 280, 283, 284], "ej": 0, "eject": [202, 207], "ektf": 102, "elabor": [6, 21, 192, 263], "elast": [105, 106], "elastic_modulu": 105, "elbow": 198, "electr": [147, 149, 192, 263, 265], "electric_potenti": [192, 263], "electromagnet": [147, 180, 192, 237, 265], "electron": [70, 114, 220], "eleg": [45, 208, 210], "elegantli": 25, "elem": [43, 53, 198], "elem_pol": 112, "elem_zero": 112, "element": [7, 10, 11, 12, 15, 18, 25, 35, 39, 42, 43, 45, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 78, 85, 87, 89, 91, 92, 93, 94, 95, 98, 101, 102, 103, 105, 106, 112, 113, 123, 143, 145, 148, 162, 173, 181, 190, 193, 195, 197, 198, 199, 200, 202, 204, 207, 209, 210, 211, 217, 218, 219, 221, 223, 224, 227, 229, 230, 231, 232, 236, 243, 245, 246, 249, 250, 251, 259, 278, 283, 284, 287, 288], "element_": 219, "element_from_alg_num": 206, "element_from_anp": 206, "element_from_poli": 206, "element_from_r": 206, "element_kind": [62, 93, 219], "element_ord": 91, "elementari": [6, 18, 19, 20, 53, 62, 63, 66, 69, 70, 84, 87, 89, 93, 98, 102, 141, 169, 172, 202, 207, 208, 249, 250, 260, 268], "elementary_col_op": 98, "elementary_row_op": 98, "elementaryfunct": 68, "elements_k": 201, "elements_sympi": 201, "elementwis": [93, 95, 98, 232], "elemsdict": 200, "elgam": 63, "elgamal_private_kei": 63, "elgamal_public_kei": 63, "elif": [18, 19, 20, 68], "elimin": [14, 16, 27, 43, 58, 62, 92, 94, 98, 116, 202, 209, 210, 212, 214, 223, 227, 229, 230, 237, 244, 284], "eliminate_gen": 53, "eliminate_impl": 92, "ellips": [6, 73, 74, 78, 148, 197, 211, 274, 287], "ellipsi": [242, 250], "ellipt": [72, 102, 198], "elliptic": [70, 211], "elliptic_": [70, 72, 211], "elliptic_f": [70, 211], "elliptic_integr": 70, "elliptic_k": [70, 211], "elliptic_pi": [70, 211], "ellipticcurv": 25, "elliptice2": 70, "ellipticf": 70, "ellipticintegr": 70, "elliptick": [70, 211], "ellipticpi": [70, 211], "ellipticpi3": 70, "ellis": 72, "els": [4, 10, 11, 18, 19, 20, 24, 43, 52, 54, 58, 62, 63, 70, 72, 76, 78, 79, 87, 89, 92, 98, 102, 112, 176, 186, 197, 202, 206, 207, 211, 212, 219, 223, 227, 229, 230, 235, 237, 242, 249, 252, 256, 259, 277, 283], "elsewher": [11, 18, 67, 91, 128, 200, 242], "elt": [200, 206], "em": 207, "email": 211, "eman": 75, "embed": [6, 7, 41, 54, 62, 90, 206], "embryon": 42, "emerg": [145, 199], "emg": 231, "emit": [4, 211, 240, 247], "emphas": [22, 61], "emphasi": [7, 201], "emploi": [42, 61, 66, 89, 102, 207, 210, 227, 231], "empti": [10, 11, 18, 22, 25, 26, 30, 37, 41, 42, 43, 44, 53, 57, 61, 62, 74, 77, 78, 79, 92, 93, 98, 102, 121, 140, 171, 184, 202, 206, 207, 211, 217, 218, 219, 221, 227, 229, 230, 242, 244, 249, 252, 283], "empty_product": 61, "empty_set": 219, "empty_sum": 61, "emptyprint": 211, "emptysequ": [211, 217], "emptyset": [10, 18, 26, 41, 42, 92, 211, 219, 230, 256, 289], "emufphzlrfaxyusdjkzldkrnshgnfivj": 63, "emul": [10, 223, 230, 232, 250], "en": [1, 6, 7, 18, 20, 35, 37, 38, 39, 41, 42, 43, 45, 50, 51, 53, 54, 61, 62, 63, 64, 65, 67, 68, 70, 72, 74, 78, 79, 80, 89, 90, 91, 92, 93, 95, 98, 102, 110, 112, 115, 145, 147, 148, 149, 151, 152, 153, 157, 158, 159, 162, 164, 165, 174, 176, 186, 188, 193, 200, 207, 208, 214, 218, 219, 220, 227, 230, 231, 244, 249, 250, 256, 258, 262, 264, 266, 284], "enabl": [3, 7, 11, 20, 33, 62, 89, 90, 102, 106, 126, 128, 176, 186, 191, 211, 227, 231, 242, 247, 250, 284, 287, 288], "enable_automatic_int_sympif": 90, "enable_automatic_symbol": 90, "enable_eager_execut": 250, "encapsul": [182, 204, 230, 244], "enciph": 63, "encipher_affin": 63, "encipher_atbash": 63, "encipher_bifid": 63, "encipher_bifid5": 63, "encipher_bifid6": 63, "encipher_elgam": 63, "encipher_gm": 63, "encipher_hil": 63, "encipher_kid_rsa": 63, "encipher_railf": 63, "encipher_rot13": 63, "encipher_rsa": 63, "encipher_shift": 63, "encipher_substitut": 63, "encipher_vigener": 63, "encircl": 87, "enclos": [6, 72, 73, 78, 101, 113, 211, 221, 250], "encloses_point": [72, 73, 78], "encod": [4, 10, 46, 54, 60, 63, 92, 211, 242, 246, 249], "encode_mors": 63, "encompass": 201, "encount": [7, 12, 16, 22, 62, 89, 98, 168, 199, 204, 207, 229, 230, 244, 256, 284], "encourag": [6, 10, 42, 138, 139, 206], "encryp": 63, "encrypt": 63, "encyclopedia": [74, 193], "encyclopediaofmath": 70, "end": [0, 3, 6, 10, 12, 16, 18, 19, 20, 23, 27, 29, 35, 41, 42, 43, 52, 53, 58, 60, 61, 62, 63, 67, 68, 70, 72, 74, 78, 87, 90, 92, 93, 95, 98, 102, 104, 105, 106, 108, 125, 128, 130, 133, 138, 139, 140, 141, 181, 186, 191, 192, 195, 196, 200, 204, 211, 214, 217, 219, 220, 224, 227, 228, 229, 230, 231, 232, 233, 242, 244, 245, 247, 249, 252, 263, 278, 282, 284, 288], "endian": 46, "endif": [43, 244], "endnumb": 227, "endomorph": [85, 206], "endomorphism_r": 206, "endomorphismr": 206, "endow": [199, 207], "endpoint": [61, 62, 66, 75, 192, 219, 263], "energi": [10, 114, 117, 121, 123, 126, 135, 152, 177, 181, 192, 237, 263, 273], "enforc": [54, 128], "eng": 54, "engag": 45, "engin": [12, 108, 142, 143, 193, 227, 287], "english": [6, 63], "engr": 89, "enhanc": [204, 231], "enlarg": 73, "enough": [4, 6, 24, 26, 53, 62, 66, 89, 98, 101, 102, 112, 126, 143, 202, 204, 211, 227, 278, 280], "enricogiampieri": 249, "ensembl": 170, "enspac": [227, 230], "ensur": [4, 12, 20, 22, 24, 25, 26, 27, 30, 33, 62, 63, 66, 94, 98, 120, 141, 206, 207, 211, 242, 247, 250], "ent": 102, "entail": 89, "enter": [14, 54, 62, 63, 67, 75, 102, 104, 105, 121, 125, 128, 138, 211, 221, 229, 242, 283, 287], "entertain": 281, "enthought": 33, "entir": [3, 4, 18, 53, 62, 63, 66, 67, 70, 76, 78, 87, 101, 118, 137, 141, 186, 198, 200, 206, 219, 236, 245, 247, 282, 288], "entireti": 185, "entiti": [62, 72, 75, 76, 78, 79, 87, 126, 141, 192, 230, 265, 274, 284], "entity1": 74, "entity2": 74, "entri": [0, 27, 39, 44, 52, 54, 60, 63, 74, 87, 91, 93, 94, 95, 101, 121, 126, 128, 141, 148, 200, 204, 206, 207, 221, 231, 250], "entropi": [63, 231], "entropy_": 231, "entropypost": 231, "enum": [45, 206, 248, 275], "enum_al": 246, "enum_larg": 246, "enum_rang": 246, "enum_smal": 246, "enumer": [18, 32, 46, 51, 54, 57, 65, 69, 87, 92, 102, 206, 207, 221, 246, 249, 268], "enumerate_st": 171, "envelop": 227, "environ": [1, 3, 8, 9, 10, 11, 62, 90, 191, 211, 231, 242, 252, 280, 282, 287], "envis": 16, "eom": [130, 131, 140], "ep": [43, 53, 61, 202, 206, 207], "epath": 223, "epathtool": 223, "eppstein": 102, "eps_dim": 237, "epsilon": [10, 12, 61, 63, 70, 87, 89, 147, 211, 237], "eq": [6, 11, 12, 14, 18, 20, 24, 25, 29, 31, 39, 41, 43, 62, 67, 68, 70, 72, 75, 79, 87, 92, 179, 197, 198, 202, 207, 209, 211, 213, 217, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 243, 244, 250, 256, 280, 282, 289], "eq1": [29, 72, 227, 229, 230], "eq2": [29, 72, 92, 227, 230], "eq3": 230, "eq4": 230, "eq_x": 223, "eqn": [26, 29, 41, 230], "eqs_coeff": 209, "eqs_mat": 227, "eqs_one_soln_set": 29, "eqs_r": 209, "eqs_rh": 209, "eqs_to_matrix": 209, "equ": 229, "equal": [6, 10, 11, 14, 18, 19, 20, 22, 29, 31, 35, 39, 42, 43, 44, 51, 52, 53, 54, 58, 60, 61, 62, 63, 64, 66, 67, 68, 70, 75, 76, 77, 78, 79, 81, 87, 92, 93, 95, 98, 102, 105, 108, 112, 113, 117, 121, 123, 128, 138, 139, 160, 161, 176, 180, 181, 186, 190, 195, 198, 199, 200, 201, 202, 204, 206, 207, 209, 211, 217, 219, 221, 224, 227, 228, 229, 230, 231, 237, 242, 243, 244, 249, 252, 256, 261, 266, 278, 281, 289], "equal_valu": 62, "equat": [7, 11, 12, 14, 16, 21, 24, 41, 43, 58, 61, 62, 64, 68, 70, 72, 75, 76, 80, 84, 85, 86, 87, 90, 93, 98, 105, 108, 112, 114, 116, 120, 121, 122, 125, 126, 128, 129, 130, 131, 133, 135, 136, 137, 142, 143, 144, 145, 149, 185, 190, 191, 194, 195, 196, 197, 198, 202, 204, 205, 206, 209, 210, 211, 217, 221, 223, 226, 227, 228, 236, 256, 261, 262, 266, 278, 279, 282], "equidimension": 227, "equidist": 62, "equidistantli": 278, "equilater": 78, "equilibrium": [106, 108, 128, 140], "equispac": 207, "equiv": [53, 63, 67, 102, 206, 221, 224], "equival": [4, 10, 11, 12, 14, 18, 19, 20, 27, 29, 35, 39, 43, 44, 52, 53, 58, 62, 63, 66, 68, 70, 87, 89, 98, 102, 104, 109, 110, 112, 120, 126, 159, 170, 173, 176, 179, 180, 186, 191, 195, 197, 198, 199, 201, 202, 206, 207, 211, 218, 219, 223, 224, 227, 229, 230, 232, 233, 236, 237, 246, 250, 252, 253], "equivalent_dim": 179, "eqworld": 227, "eqyptian": 224, "eratosthen": 102, "erdelyi": [70, 89], "erdo": 246, "erf": [6, 70, 87, 89, 211, 221, 231], "erf2": [6, 70, 211], "erf2inv": [6, 70, 211], "erfc": [6, 70, 87, 211, 231], "erfcinv": [6, 70, 211], "erfi": [6, 70, 87, 211], "erfinv": [6, 70, 211, 231], "eric": [89, 205], "erik": 256, "erlang": 231, "erlang_distribut": 231, "erlangdistribut": 231, "erlend": 56, "erron": 66, "error": [1, 3, 4, 6, 7, 10, 14, 18, 19, 24, 25, 26, 27, 28, 29, 31, 34, 41, 43, 51, 54, 61, 62, 63, 68, 72, 77, 87, 89, 98, 101, 102, 104, 126, 195, 196, 199, 201, 202, 204, 208, 211, 213, 219, 227, 228, 229, 230, 231, 242, 243, 244, 247, 249, 252, 256, 277], "error_funct": 70, "error_term": 102, "error_when_incomplet": 98, "ert": 0, "escap": [62, 104, 197, 211, 252], "especi": [4, 6, 20, 31, 61, 98, 116, 126, 143, 170, 185, 195, 223, 227, 229, 242, 277, 278], "espinosa": 70, "esploro": 231, "esqu": 143, "essenc": 260, "essenti": [7, 46, 57, 62, 66, 68, 69, 70, 87, 123, 128, 189, 192, 193, 195, 198, 199, 202, 206, 218, 221, 257, 260, 263, 264, 265, 271, 273], "establish": [16, 58, 87, 120, 131, 221], "estim": [31, 41, 61, 62, 66, 87, 278], "et": [42, 89, 155, 204, 207, 208, 220, 223], "eta": [12, 70, 87, 206, 211, 227, 228, 231], "etc": [16, 18, 19, 38, 41, 43, 58, 62, 63, 67, 68, 80, 91, 92, 97, 102, 126, 147, 156, 160, 173, 176, 188, 192, 194, 195, 197, 198, 199, 201, 204, 206, 211, 212, 219, 220, 221, 223, 227, 230, 231, 235, 243, 244, 249, 261, 265], "euclid": [62, 204, 205], "euclidean": [64, 75, 77, 186, 202, 204, 207], "euclidean_algorithm": 62, "euclideanspac": 35, "eucliden": 63, "euclidtool": 204, "euler": [6, 35, 41, 42, 61, 62, 63, 66, 67, 70, 78, 84, 90, 102, 120, 173, 186, 191, 195, 196, 207, 211, 227, 231, 256, 258], "euler_angl": [256, 258], "euler_equ": 41, "euler_maclaurin": [61, 66], "euler_numb": 67, "euler_poli": [67, 207], "euler_pseudoprim": 102, "eulergamma": [6, 62, 66, 67, 70], "eulerian": 70, "eulerlin": 78, "eulernumb": 67, "eulervm": 211, "eulerzigzagnumb": 67, "eurocam": 89, "eurocast": 205, "european": 198, "eval": [6, 10, 18, 37, 38, 43, 62, 68, 70, 162, 176, 202, 207, 211, 244, 277], "eval_approx": 207, "eval_control": 160, "eval_expr": 104, "eval_integr": 61, "eval_levicivita": 70, "eval_r": 207, "eval_zeta_funct": 61, "evalf": [3, 6, 11, 12, 18, 22, 28, 31, 43, 61, 66, 67, 68, 70, 81, 84, 85, 93, 98, 104, 126, 128, 143, 158, 202, 207, 211, 218, 219, 223, 231, 243, 250, 279], "evalf_r": 207, "evalfmixin": 62, "evalu": [3, 6, 11, 16, 18, 19, 23, 29, 31, 35, 36, 37, 38, 41, 43, 62, 64, 67, 68, 70, 73, 77, 78, 87, 89, 92, 95, 98, 102, 103, 104, 112, 116, 118, 126, 140, 141, 151, 153, 155, 157, 162, 165, 173, 176, 196, 197, 201, 202, 204, 205, 207, 211, 212, 217, 218, 219, 221, 223, 224, 227, 229, 230, 231, 232, 233, 243, 244, 245, 250, 263, 268, 277, 278, 279, 280, 282, 284], "evaluate_delta": 176, "evaluate_integr": 231, "evaluate_pauli_product": 151, "evaluationfail": 204, "evalul": 62, "even": [4, 6, 7, 11, 12, 15, 18, 20, 22, 25, 28, 29, 30, 31, 36, 37, 38, 39, 40, 43, 44, 45, 50, 53, 54, 61, 62, 63, 66, 67, 68, 70, 74, 78, 87, 89, 92, 93, 98, 101, 102, 113, 126, 136, 161, 172, 179, 181, 186, 196, 199, 200, 201, 202, 204, 206, 207, 208, 211, 212, 219, 220, 221, 223, 224, 227, 229, 230, 238, 242, 265, 277, 278, 280, 282, 283, 288, 289], "evenhandl": 39, "evenli": 224, "evenpred": 39, "event": [206, 231], "eventu": [53, 70, 89, 197, 198, 218, 244, 249], "ever": [10, 11, 20, 68, 195, 198, 207, 221, 227, 244, 247, 283], "everi": [3, 4, 6, 11, 18, 20, 22, 26, 32, 37, 38, 39, 42, 48, 50, 53, 54, 62, 63, 77, 91, 93, 98, 102, 112, 141, 180, 192, 194, 195, 197, 198, 199, 201, 202, 204, 206, 211, 216, 219, 221, 223, 224, 227, 230, 231, 233, 260, 263, 265, 281, 283, 284, 288], "everyon": 208, "everyth": [4, 7, 12, 20, 43, 62, 64, 70, 89, 96, 114, 140, 172, 173, 197, 211, 283, 287], "everywher": [4, 11, 12, 62, 70, 87, 112, 192, 249, 265], "evid": [87, 121, 134, 221, 233], "evinc": 211, "evolut": 72, "ew": 205, "ewen": 231, "ex": [50, 89, 113, 125, 201, 206, 207, 237, 245], "exact": [4, 10, 11, 12, 18, 20, 28, 39, 61, 62, 63, 66, 72, 77, 84, 87, 89, 93, 98, 105, 143, 170, 201, 202, 204, 207, 218, 223, 227, 229, 242, 252, 280, 282, 287], "exact_differential_equ": 227, "exactli": [4, 6, 7, 10, 11, 12, 20, 22, 29, 31, 39, 46, 53, 62, 65, 66, 98, 104, 141, 196, 221, 223, 227, 230, 232, 246, 249, 250, 278, 280, 282, 287, 288], "exactquotientfail": [201, 202, 204, 207], "examin": [43, 63, 165, 242, 244, 288], "exampl": [0, 2, 3, 4, 5, 7, 10, 11, 12, 14, 15, 16, 18, 19, 23, 26, 27, 29, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 84, 85, 87, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 108, 110, 112, 114, 115, 117, 118, 120, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 143, 145, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 170, 171, 173, 174, 175, 176, 177, 178, 182, 183, 186, 187, 188, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 216, 217, 219, 220, 223, 224, 226, 227, 228, 229, 230, 235, 237, 238, 240, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 258, 259, 261, 263, 264, 265, 266, 271, 273, 274, 277, 278, 279, 280, 281, 283, 284, 286, 287, 289], "examples_arg": 242, "examples_kwarg": 242, "exaxmpl": 62, "exc": 204, "exce": [44, 102, 237, 250], "exceed": [12, 128, 206], "exceedingli": 204, "excel": [33, 66, 206, 286], "excent": 78, "except": [3, 4, 6, 10, 11, 12, 16, 18, 19, 20, 27, 31, 41, 43, 53, 54, 62, 63, 66, 67, 68, 70, 87, 89, 102, 134, 180, 182, 196, 198, 200, 201, 202, 206, 207, 208, 209, 211, 220, 223, 224, 227, 228, 230, 235, 240, 242, 244, 245, 248, 249, 250, 260, 263, 275, 277, 280, 283, 284], "exceptional_isomorph": 45, "exceptioninfo": 240, "excerpt": 6, "excess": 11, "exchang": [58, 63, 98, 196, 200, 249], "excircl": 78, "excit": 198, "exclud": [24, 29, 31, 43, 61, 62, 89, 98, 118, 143, 199, 202, 204, 207, 217, 227, 229, 242, 245, 249], "exclude_empti": 242, "exclus": [61, 62, 68, 92, 98, 204, 280], "exec": [43, 62, 90, 250], "execut": [11, 18, 33, 43, 90, 93, 143, 197, 211, 227, 230, 240, 242, 244, 245, 250, 252, 255, 267, 282, 287], "exercis": [20, 53, 246, 281, 288], "exgaussian": 231, "exhaust": [4, 18, 221, 249, 281], "exhibit": [102, 196, 206, 220], "exist": [4, 10, 11, 16, 18, 20, 28, 31, 41, 42, 43, 46, 53, 62, 66, 72, 74, 77, 78, 79, 80, 89, 92, 98, 102, 108, 166, 192, 195, 197, 198, 199, 200, 204, 206, 211, 218, 219, 221, 224, 227, 229, 230, 242, 250, 261, 282, 284, 289], "existing_julia_fcn": 211, "existing_octave_fcn": [43, 211], "existing_smtlib_fcn": 211, "exit": [43, 102, 242], "exogen": [125, 144], "exp": [10, 11, 12, 14, 18, 20, 28, 29, 31, 35, 41, 43, 52, 61, 62, 64, 66, 67, 68, 70, 80, 81, 84, 87, 89, 93, 95, 98, 102, 114, 152, 155, 171, 177, 196, 201, 202, 207, 208, 211, 213, 218, 221, 223, 227, 228, 229, 230, 231, 232, 249, 266, 278, 282, 284, 289], "exp1": [62, 211], "exp2": [43, 211], "exp2_opt": 43, "exp_polar": [62, 68, 70, 221], "exp_r": 213, "expand": [6, 10, 11, 12, 16, 18, 22, 43, 62, 64, 66, 67, 68, 70, 87, 89, 93, 112, 126, 128, 143, 157, 165, 168, 175, 176, 199, 201, 204, 206, 207, 208, 211, 214, 218, 220, 221, 223, 227, 230, 231, 235, 243, 250, 262, 277, 282], "expand_": 20, "expand_complex": [20, 62], "expand_func": [62, 67, 70], "expand_hint": 62, "expand_log": [20, 43, 62, 223], "expand_mul": [62, 87], "expand_multinomi": 62, "expand_opt": 43, "expand_power_bas": [62, 223], "expand_power_exp": 62, "expand_trig": [20, 62, 277], "expanded_expr": 282, "expans": [6, 16, 20, 43, 62, 64, 67, 68, 70, 89, 98, 102, 140, 155, 157, 207, 208, 213, 214, 215, 220, 222, 223, 227, 229, 230, 268, 279, 288], "expect": [6, 7, 12, 18, 20, 42, 44, 47, 62, 68, 70, 74, 92, 102, 103, 112, 120, 126, 170, 201, 204, 206, 208, 209, 218, 223, 226, 229, 230, 231, 240, 242, 243, 246, 249, 250, 282, 283], "expectationmatrix": 231, "expectedexcept": 240, "expens": [11, 20, 29, 62, 140, 220, 227, 228, 229, 245, 284], "experi": [3, 128, 230, 231], "experienc": [10, 44], "experiment": [3, 4, 223], "expint": [70, 211], "expintegral": [70, 211], "expintegralei": 211, "expj": 227, "explain": [3, 4, 6, 7, 18, 22, 31, 42, 58, 62, 70, 80, 85, 198, 201, 204, 206, 208, 218], "explan": [4, 7, 12, 14, 18, 21, 35, 36, 37, 38, 39, 40, 42, 43, 47, 50, 51, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 68, 70, 74, 84, 85, 87, 89, 93, 98, 102, 112, 115, 117, 118, 120, 121, 123, 134, 145, 147, 150, 153, 155, 157, 159, 171, 176, 196, 197, 198, 200, 202, 206, 207, 209, 213, 214, 216, 217, 218, 219, 221, 223, 224, 227, 229, 231, 232, 233, 236, 237, 242, 245, 247, 249, 250, 285], "explanatori": 128, "explicit": [10, 11, 18, 20, 22, 25, 26, 54, 61, 62, 66, 78, 79, 89, 101, 102, 121, 125, 126, 130, 140, 144, 195, 198, 207, 210, 211, 213, 219, 221, 227, 228, 229, 230, 246], "explicit_kinemat": 121, "explicitli": [4, 10, 11, 18, 20, 43, 53, 54, 62, 63, 65, 68, 70, 75, 79, 95, 98, 103, 112, 126, 185, 186, 197, 199, 201, 202, 204, 207, 211, 223, 227, 229, 247, 280, 284, 287, 289], "explik": 213, "exploit": [87, 243], "explor": [21, 138, 139, 197, 206, 246, 288], "explos": [99, 200], "expm1": [43, 211], "expm1_opt": 43, "expon": [12, 22, 31, 40, 43, 62, 63, 68, 69, 70, 87, 89, 95, 102, 110, 112, 182, 199, 200, 201, 207, 208, 211, 220, 223, 227, 230, 235, 246, 288], "exponent_vector": 52, "exponenti": [10, 12, 18, 29, 35, 43, 53, 58, 62, 63, 67, 89, 92, 93, 98, 102, 104, 162, 178, 208, 223, 227, 230, 231, 279, 280, 284], "exponential_distribut": 231, "exponential_integr": 70, "exponentialdistribut": 231, "exponentially_modified_gaussian_distribut": 231, "export": [34, 211], "expos": [10, 42, 231], "exposit": 218, "expr": [4, 6, 11, 12, 18, 20, 26, 28, 31, 37, 38, 40, 41, 43, 54, 61, 64, 66, 68, 70, 72, 84, 87, 89, 92, 95, 98, 103, 104, 112, 116, 118, 126, 140, 153, 157, 159, 161, 165, 168, 171, 173, 174, 176, 183, 186, 188, 191, 197, 199, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 218, 220, 223, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 243, 244, 245, 247, 250, 256, 258, 259, 260, 261, 263, 277, 278, 280, 282, 283, 287, 288, 289], "expr1": [4, 18, 112, 197, 229, 283], "expr2": [4, 18, 112, 197, 283], "expr_1": 112, "expr_2": 112, "expr_3": 112, "expr_4": 112, "expr_class": 211, "expr_free_symbol": 62, "expr_i": 197, "expr_modifi": 12, "expr_to_holonom": [81, 84, 85, 86], "expr_tr": 233, "expr_with_intlimit": [61, 89], "expr_with_limit": [61, 89], "expr_x": 197, "expr_z": 197, "exprcondpair": 68, "expreal": 18, "express": [3, 4, 6, 7, 11, 14, 15, 18, 19, 20, 23, 24, 27, 29, 31, 35, 36, 37, 38, 39, 40, 41, 54, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 75, 77, 78, 85, 86, 87, 89, 90, 93, 96, 97, 98, 101, 102, 103, 105, 112, 113, 115, 116, 117, 119, 120, 122, 123, 126, 130, 136, 137, 138, 139, 140, 141, 143, 144, 151, 155, 159, 160, 164, 165, 168, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 185, 186, 188, 190, 191, 192, 195, 196, 197, 198, 199, 202, 204, 206, 207, 208, 211, 212, 214, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 243, 244, 245, 246, 247, 250, 252, 256, 258, 259, 260, 262, 263, 265, 271, 273, 278, 279, 280, 281, 282, 284, 287, 288, 289], "express_coordin": [260, 261], "expression_complex": 22, "expression_complex_poli": 22, "expression_expand": 22, "expressiondomain": [201, 202], "expressions_dom": 201, "expressions_sympi": 201, "expressli": 260, "exprtool": 207, "exprwithintlimit": [61, 89], "exprwithlimit": [61, 89], "expsboth": 218, "expsf": 218, "expsg": 218, "exquo": [201, 202, 207], "exquo_ground": [202, 207], "exradii": 78, "exradiu": 78, "ext": [7, 198, 202], "ext_rank": 237, "extend": [6, 7, 18, 20, 25, 39, 43, 53, 54, 62, 63, 67, 74, 87, 89, 98, 102, 143, 184, 191, 197, 199, 202, 204, 206, 207, 208, 211, 218, 220, 224, 226, 227, 230, 231, 232, 244, 246, 280, 282], "extend_to_no": 102, "extended_euclidean_algorithm": 62, "extended_neg": [18, 62], "extended_nonneg": [18, 62], "extended_nonposit": [18, 62], "extended_nonzero": [18, 62, 211], "extended_posit": [18, 62], "extended_r": [18, 39, 62, 211, 226, 230], "extended_real_number_lin": 18, "extendedrealhandl": 39, "extendedrealpred": 39, "extens": [0, 3, 6, 7, 18, 20, 53, 62, 67, 68, 74, 78, 89, 98, 123, 143, 199, 201, 202, 204, 205, 206, 207, 211, 221, 223, 227, 229, 230, 243, 244, 253, 281, 288], "extensionel": [198, 202], "extent": 43, "exterior": [64, 78], "exterior_angl": 78, "extern": [3, 33, 90, 104, 108, 110, 128, 136, 191, 201, 202, 212, 219, 223, 231, 242, 243], "extra": [1, 10, 43, 45, 62, 63, 102, 103, 134, 181, 192, 204, 211, 221, 227, 242, 243, 244, 263], "extra_compile_arg": 243, "extra_link_arg": 243, "extra_preambl": 211, "extract": [11, 22, 26, 30, 31, 41, 62, 89, 93, 95, 98, 102, 113, 128, 136, 185, 195, 204, 206, 207, 229, 230, 231, 242, 244, 249], "extract_addit": 62, "extract_branch_factor": 62, "extract_fundamental_discrimin": 206, "extract_leading_ord": 62, "extract_multipl": 62, "extract_type_ten": 113, "extraglob": 242, "extran": [7, 227], "extraneousfactor": 204, "extrapol": [66, 218], "extrem": [4, 27, 53, 66, 72, 78, 89, 95, 108, 140, 195, 223, 231], "extrins": 35, "ey": [10, 27, 93, 94, 95, 96, 97, 98, 100, 200, 206, 232, 252, 284], "eyz": [25, 224], "ez": [202, 237], "f": [0, 1, 6, 10, 11, 12, 16, 20, 22, 25, 26, 28, 29, 41, 42, 43, 44, 45, 52, 53, 54, 58, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 80, 85, 86, 87, 89, 91, 93, 95, 98, 102, 103, 104, 106, 110, 120, 121, 125, 131, 136, 138, 139, 143, 145, 149, 150, 161, 162, 165, 174, 176, 179, 186, 191, 192, 195, 196, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 210, 211, 213, 214, 217, 218, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 232, 236, 237, 242, 243, 244, 245, 246, 249, 250, 252, 262, 263, 266, 277, 278, 283, 287, 288, 289], "f0": 202, "f1": [12, 28, 53, 87, 89, 98, 112, 117, 126, 134, 143, 197, 202, 204, 207, 211, 213, 229], "f16": 43, "f2": [12, 28, 62, 87, 98, 112, 117, 126, 134, 143, 179, 197, 204, 207, 211, 213, 229], "f2py": [3, 43, 103, 243, 244], "f2pycodewrapp": 243, "f3": [134, 197, 211], "f4": [91, 197], "f401": 90, "f5": 197, "f5b": [204, 207], "f6": 197, "f8": 197, "f811": 62, "f821": [62, 245], "f90": 244, "f95": [43, 243, 244], "f_": [16, 62, 67, 70, 89, 138, 139, 140, 204, 210, 211, 221, 227], "f_0": [64, 67, 122, 204], "f_1": [64, 67, 70, 87, 112, 122, 125, 144, 198, 204, 207, 227], "f_2": [67, 87, 112, 122, 125, 144, 204, 221, 227], "f_3": [122, 125, 144, 227], "f_4": [91, 122], "f_5": 204, "f_a": 122, "f_c": [122, 130], "f_code": [43, 244], "f_cython": 243, "f_d": [121, 138, 139, 204], "f_dnh": 121, "f_fortran": 243, "f_h": 138, "f_i": [64, 87, 98, 204, 208], "f_j": [204, 221], "f_k": [61, 121, 138, 204], "f_list": 204, "f_n": [61, 67, 70, 198, 204, 207, 227], "f_name": [43, 244], "f_q": 221, "f_r": [138, 140, 204], "f_real": [62, 69], "f_real_inherit": [62, 69], "f_result": 244, "f_v": [122, 130], "f_x": [192, 230, 263], "f_y": [192, 263], "f_z": [67, 192, 263], "fab": [43, 211], "fabian": 0, "fac": 87, "face": [53, 55, 75, 89, 126, 204, 208, 211, 224, 266, 284], "facil": 43, "facilit": [103, 136, 147, 193, 242], "fact": [6, 10, 11, 18, 19, 20, 26, 38, 39, 62, 67, 70, 80, 87, 102, 108, 128, 140, 181, 198, 199, 201, 204, 206, 208, 210, 221, 223, 227, 230, 242, 250, 265, 277, 280, 281, 282, 283, 288], "factor": [3, 11, 12, 44, 53, 54, 61, 62, 63, 66, 67, 68, 70, 87, 89, 98, 102, 105, 112, 143, 145, 153, 157, 160, 172, 176, 180, 181, 182, 183, 198, 201, 202, 203, 205, 206, 207, 214, 220, 221, 223, 224, 227, 229, 231, 235, 246, 260, 263, 282, 284], "factor_": [62, 63, 102, 207, 224], "factor_index": 53, "factor_list": [202, 207, 288], "factor_list_includ": [202, 207], "factor_term": [62, 134, 207, 220, 223], "factori": [6, 16, 20, 27, 61, 62, 66, 67, 70, 98, 102, 104, 196, 202, 204, 206, 207, 211, 213, 223, 229, 231, 244, 245, 249, 250, 288], "factorial2": [67, 177, 211], "factorial_mo": 231, "factorial_not": 104, "factorialmo": 231, "factorialpow": 211, "factoring_visitor": 246, "factorint": [62, 102, 206, 207, 246], "factoris": [102, 201, 202, 227], "factorisatio": 246, "factorrat": 102, "factortool": [201, 204], "factrul": 18, "fagin": 223, "fail": [1, 3, 4, 6, 7, 10, 18, 19, 20, 22, 43, 53, 54, 58, 61, 62, 66, 68, 86, 87, 89, 90, 98, 99, 102, 104, 128, 166, 171, 191, 197, 200, 201, 202, 204, 206, 207, 211, 218, 221, 227, 229, 231, 240, 242, 249, 250, 284], "failing_express": 62, "failing_numb": 62, "failur": [58, 66, 79, 87, 102, 231, 242, 288], "fair": [74, 231], "fairli": [62, 70, 87, 128, 136, 185, 198], "fall": [44, 61, 62, 67, 90, 112, 191, 206, 211, 224, 228, 231], "fallback": [62, 90, 176, 191, 201, 211, 229], "fallingfactori": [67, 211], "fals": [7, 11, 12, 18, 19, 20, 22, 24, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 84, 87, 89, 90, 92, 93, 94, 95, 98, 99, 102, 104, 105, 106, 110, 112, 114, 115, 118, 121, 122, 123, 126, 128, 129, 133, 134, 135, 137, 138, 139, 140, 141, 144, 148, 160, 161, 165, 168, 173, 174, 175, 176, 179, 183, 186, 187, 188, 190, 191, 194, 195, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 236, 237, 240, 242, 243, 244, 245, 249, 250, 252, 256, 259, 280, 283, 284, 287], "falsei": 19, "famili": [43, 46, 80, 89, 199], "familiar": [12, 20, 89, 126, 141, 160, 208, 278, 280, 286], "famou": [44, 70, 89, 102, 224], "fancyset": 219, "faq": 12, "far": [12, 42, 62, 76, 89, 196, 198, 201, 211, 221, 250, 277, 278, 280], "farr": 64, "farther": 42, "farthest": [72, 78], "fascin": 136, "fashion": [29, 43, 62, 68, 95, 128, 138, 139, 141, 195, 198, 249], "fast": [3, 18, 29, 43, 62, 97, 98, 102, 148, 202, 203, 204, 205, 206, 207, 208, 214, 218, 227, 229, 246, 249, 250], "fast_walsh": 65, "faster": [3, 18, 22, 27, 28, 43, 47, 62, 70, 93, 102, 103, 116, 118, 121, 122, 140, 200, 201, 202, 204, 206, 207, 208, 212, 214, 218, 223, 224, 227, 228, 230, 243, 246], "fastest": [62, 67, 89, 102, 103, 208], "fastfouriertransform": 65, "fateman": 205, "father": 224, "fauger": [204, 207], "fault": 227, "favor": 10, "fbra": 176, "fcall": 43, "fcn": [43, 244], "fcn2": 244, "fcode": [43, 211], "fcodegen": 244, "fcodeprint": [43, 211], "fd": [41, 43, 176], "fdiff": [6, 20, 43, 62, 68, 69, 70], "fdistribut": 231, "feasibl": [53, 112], "featur": [0, 3, 4, 7, 10, 12, 13, 20, 32, 33, 62, 64, 66, 104, 126, 136, 143, 193, 211, 227, 231, 240, 244, 247, 264, 273, 276, 281, 282, 286, 288], "februari": 205, "fed": 112, "feedback": [63, 109, 112, 281], "feedforward": 112, "feel": [18, 33, 143, 144, 223, 227, 229], "feet": 78, "felix": 63, "femtesemest": 105, "fermat": 147, "fermi": [70, 176], "fermi_level": 176, "fermion": [102, 176], "fermionicoper": 176, "fernando": 0, "ferrer": 51, "fetch": 5, "fetter": 176, "few": [1, 3, 4, 10, 11, 18, 25, 31, 39, 52, 54, 62, 63, 89, 90, 102, 103, 128, 136, 179, 185, 191, 194, 195, 198, 206, 211, 219, 220, 221, 227, 230, 231, 244, 249, 288], "fewer": [77, 78, 140, 231, 278], "fewest": [92, 170], "ff": [61, 63, 67, 196, 199, 200, 201, 206, 207], "ffield": 262, "fft": [65, 143], "fg": [54, 64, 227, 230], "fgh": 62, "fglm": 207, "fglmtool": 204, "fgp": 227, "fh": 129, "fhd": 129, "fi": 16, "fib": 217, "fibonacci": [62, 66, 67, 102], "fibonacci_numb": 67, "fibonaccinumb": 67, "fiddl": [242, 288], "field": [18, 29, 35, 39, 43, 62, 63, 64, 70, 80, 89, 148, 149, 188, 189, 193, 198, 199, 200, 202, 203, 205, 207, 208, 209, 224, 229, 242, 256, 259, 261, 262, 264, 266, 271, 273, 274], "field_el": 62, "field_gen": 206, "field_isomorph": 206, "fieldfunct": [187, 192], "fifth": 22, "fifth_ord": 22, "fifth_order_solv": 22, "figsiz": 156, "figueiredo": 197, "figur": [7, 62, 63, 72, 73, 75, 77, 78, 89, 106, 126, 171, 194, 195, 196, 197, 200, 208, 211, 266, 288], "file": [0, 1, 3, 4, 5, 6, 7, 11, 12, 43, 98, 126, 143, 165, 211, 218, 221, 223, 231, 240, 242, 243, 244, 250, 253], "filebox": 63, "filenam": [104, 211, 242, 243, 244, 252], "filepath": 243, "filesystem": 1, "fill": [12, 17, 53, 63, 93, 95, 98, 101, 176, 197, 242, 245, 249, 252, 284], "fill_between": 197, "fillded": 252, "filter": [4, 10, 15, 26, 62, 63, 87, 148, 207, 240, 242, 247, 249], "filter_symbol": 249, "filterwarn": [4, 10], "fim1": 16, "final": [4, 6, 7, 10, 18, 20, 29, 42, 54, 61, 62, 68, 70, 87, 89, 92, 98, 102, 106, 110, 120, 121, 128, 133, 135, 136, 138, 141, 156, 168, 171, 173, 174, 176, 178, 179, 181, 186, 194, 195, 198, 201, 204, 206, 213, 219, 220, 221, 223, 224, 227, 229, 230, 237, 249, 250, 281, 282, 283], "final_exp": 110, "finalpdf": 102, "find": [6, 11, 12, 14, 16, 17, 20, 23, 24, 25, 26, 27, 29, 30, 31, 35, 38, 41, 43, 44, 45, 53, 56, 57, 58, 61, 62, 66, 68, 70, 72, 74, 75, 76, 79, 84, 87, 89, 91, 98, 102, 104, 118, 127, 134, 141, 143, 145, 161, 168, 170, 171, 172, 176, 179, 181, 194, 197, 198, 199, 200, 201, 202, 204, 208, 210, 211, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 229, 230, 231, 237, 246, 249, 250, 252, 256, 266, 278, 280, 282, 284, 289], "find_dn": 224, "find_dynamicsymbol": 118, "find_execut": 252, "find_linear_recurr": 217, "find_min_poli": 206, "find_transitive_subgroups_of_s6": 45, "findroot": [28, 70, 229], "fine": [16, 20, 25, 62, 66, 90, 191, 201, 211, 223], "finish": [1, 43, 44, 170, 245, 285], "finit": [17, 18, 26, 39, 43, 48, 49, 50, 53, 61, 62, 63, 65, 66, 89, 91, 92, 162, 186, 196, 199, 202, 205, 207, 208, 211, 213, 214, 217, 219, 224, 226, 227, 230, 249, 256, 258, 268, 279, 282, 288], "finite_diff": [41, 62], "finite_diff_weight": [41, 62, 278], "finite_set": [41, 219], "finitediff": 41, "finitedistributionhandmad": 231, "finitedomain": 231, "finiteextens": 198, "finitefield": [201, 202], "finiteformalpowerseri": 213, "finitehandl": 39, "finitepred": 39, "finitepspac": 231, "finiterv": 231, "finiteset": [18, 26, 41, 42, 219, 230, 231, 289], "finset_intersect": 41, "fip1": 16, "fip2": 16, "fire": 4, "first": [1, 3, 5, 6, 7, 8, 11, 12, 16, 18, 19, 20, 22, 26, 29, 30, 33, 35, 42, 43, 44, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 75, 76, 78, 79, 86, 87, 89, 91, 92, 93, 98, 101, 102, 105, 106, 112, 113, 118, 120, 121, 125, 126, 128, 129, 130, 131, 136, 137, 140, 141, 144, 148, 149, 153, 157, 160, 165, 166, 169, 170, 171, 172, 173, 175, 176, 179, 181, 186, 190, 194, 195, 197, 198, 200, 202, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 220, 221, 223, 224, 227, 228, 229, 230, 231, 235, 237, 240, 242, 243, 244, 245, 249, 250, 252, 261, 266, 277, 278, 280, 282, 283, 284, 286, 288, 289], "first_index": 95, "first_linear": 227, "first_moment_of_area": 78, "firstexact": 227, "firstli": [4, 10, 18, 20, 221], "firstlinear": 227, "fisher": 231, "fishersz": 231, "fisherz": 231, "fit": [4, 11, 42, 87, 98, 101, 102, 195, 211, 227, 252, 283], "five": [22, 25, 42, 51, 87, 108, 211, 224], "five_lemma": 42, "fivelemma": 42, "fix": [4, 6, 9, 10, 43, 53, 55, 58, 60, 63, 67, 70, 74, 91, 98, 105, 106, 108, 117, 120, 123, 128, 137, 143, 160, 165, 169, 172, 176, 181, 186, 190, 194, 195, 197, 201, 204, 206, 207, 208, 211, 217, 221, 229, 231, 249, 256, 258], "fixed_row_vector": 231, "fixedbosonicbasi": 176, "fixedfram": 190, "fket": 176, "fl": [121, 128, 138, 139, 143, 205], "flag": [3, 4, 14, 20, 22, 41, 43, 53, 54, 58, 60, 62, 77, 89, 92, 93, 94, 98, 102, 120, 126, 160, 197, 202, 204, 207, 208, 211, 212, 213, 219, 223, 224, 227, 229, 230, 237, 242, 243, 249, 252, 277, 288], "flag_fram": 120, "flag_joint": 120, "flagerror": 204, "flajolet": 208, "flake8": 5, "flambda": 219, "flank": 63, "flat": [10, 76, 93, 243], "flatmirror": 145, "flatrefract": 145, "flatten": [42, 62, 201, 233, 238, 249, 250], "flavius_josephu": 54, "flavor": 212, "flaw": 10, "flexibl": [54, 62, 126, 143, 194, 197, 201, 230, 278], "flexur": 106, "flip": [128, 161, 170, 231], "float": [3, 11, 18, 20, 24, 43, 53, 62, 68, 70, 77, 79, 89, 90, 93, 98, 102, 104, 110, 112, 143, 149, 191, 197, 201, 202, 211, 223, 229, 231, 242, 250, 252, 277, 280], "float16": 43, "float32": [43, 103, 104, 250], "float64": [28, 43, 103, 231], "float80": [43, 211], "floatbasetyp": 43, "floattyp": 43, "floatx": 211, "floor": [62, 68, 102, 120, 201, 202, 211, 231], "floor1": 211, "floor2": 211, "floor_fram": 120, "floor_joint": 120, "floorfunct": 68, "flow": [18, 206], "floyd": 102, "fma": [43, 211], "fmax": 211, "fmin": 211, "fmt": [200, 202, 206], "fn": [16, 29, 89, 98, 198, 207], "fn_fortran": 43, "fn_numpi": 43, "fname": 244, "fnm1": 16, "fnm2": 16, "focal": [72, 145, 149], "focal_length": 149, "foci": 72, "fock": 176, "fock_spac": 162, "fockspac": 162, "fockstat": 176, "fockstatebosonbra": 176, "fockstatebosonket": 176, "fockstatebra": 176, "fockstatefermionbra": 176, "fockstatefermionket": 176, "fockstateket": 176, "focu": [0, 10, 18, 72, 229, 282], "focus": [11, 28, 204, 224, 226, 227, 229, 230, 289], "focus_dist": 72, "fold": [53, 62, 68, 211, 218, 223], "fold_frac_pow": 211, "fold_func_bracket": 211, "fold_short_frac": 211, "folded_cond": 68, "folder": 1, "follow": [1, 3, 4, 6, 7, 10, 12, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 36, 38, 41, 42, 43, 44, 45, 51, 52, 53, 54, 55, 58, 61, 62, 63, 66, 67, 68, 70, 74, 76, 78, 85, 86, 87, 89, 92, 93, 95, 98, 102, 103, 105, 106, 108, 120, 121, 126, 128, 136, 137, 138, 139, 140, 141, 143, 145, 149, 168, 171, 173, 176, 179, 181, 186, 192, 194, 195, 196, 197, 198, 199, 204, 205, 206, 207, 209, 210, 211, 212, 213, 218, 220, 221, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 242, 245, 246, 249, 250, 253, 260, 261, 263, 277, 278, 280, 281, 283, 284, 288, 289], "font": [1, 90, 191, 211], "fontsiz": [90, 191, 211], "foo": [34, 41, 43, 62, 171, 191, 249, 252], "foo_1": 171, "foo_2": 171, "foo_3": 171, "foobasi": 171, "footnot": [19, 181, 283, 284, 287], "for_i": 43, "for_ji": 43, "for_kji": 43, "foral": [53, 61, 64, 181], "forc": [3, 12, 16, 19, 20, 62, 66, 68, 72, 78, 87, 89, 92, 105, 106, 108, 117, 120, 121, 125, 128, 130, 131, 132, 133, 136, 138, 139, 140, 143, 164, 165, 179, 192, 195, 197, 199, 201, 220, 223, 224, 229, 242, 263, 265, 273, 287, 288], "force1": 117, "force_color": 242, "force_o": 143, "force_p": 126, "force_r": 126, "force_vector": 143, "forcelist": [121, 126, 129, 130, 133, 134, 139, 140, 143], "forcing_ful": [120, 121, 126, 131, 138, 139], "forcing_kin": 121, "forcing_lin": 128, "fore": 39, "forecolor": [90, 191], "foreground": [90, 191], "forest": 249, "forg": [1, 3, 104], "forget": [25, 42, 288], "fork": [0, 5, 7, 10, 128], "fork_i": 128, "fork_mc": 128, "forkcg1": 128, "forkcg3": 128, "forkcgnorm": 128, "forkcgpar": 128, "forklength": 128, "forkoffset": 128, "form": [4, 7, 10, 11, 16, 18, 20, 27, 28, 35, 38, 39, 40, 41, 43, 44, 52, 53, 54, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 75, 78, 82, 84, 85, 87, 89, 91, 93, 95, 97, 98, 102, 104, 105, 106, 108, 109, 112, 116, 117, 120, 121, 122, 125, 126, 128, 130, 133, 135, 136, 137, 138, 139, 141, 143, 144, 153, 156, 157, 158, 160, 170, 171, 174, 176, 178, 181, 184, 185, 186, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 236, 237, 242, 243, 249, 256, 259, 260, 262, 263, 265, 271, 278, 282, 283, 284, 287, 288, 289], "form_eom": [120, 131, 137], "form_field": 64, "form_lagranges_equ": [121, 130, 135, 139, 140], "formal": [18, 25, 42, 61, 62, 70, 87, 92, 145, 181, 201, 204, 215, 218, 268], "formalpowerseri": 213, "formalpowerseriescompos": 213, "formalpowerseriesinvers": 213, "formalpowerseriesproduct": 213, "format": [1, 4, 8, 11, 14, 16, 26, 29, 30, 42, 54, 63, 84, 85, 89, 92, 98, 101, 102, 105, 125, 144, 149, 160, 170, 197, 200, 201, 206, 207, 209, 211, 221, 227, 230, 242, 252, 256, 260, 281, 284, 287], "formatstr": 43, "formatt": 42, "former": [15, 43, 62, 67, 126, 204, 206, 207, 224, 249], "formul": [16, 27, 120, 129, 130, 136, 138, 139, 176, 195], "formula": [6, 16, 22, 35, 41, 56, 61, 62, 66, 67, 68, 70, 75, 92, 98, 102, 196, 198, 204, 207, 211, 213, 217, 220, 223, 224, 227, 282, 288], "fornberg": [16, 41], "fort": 63, "forth": [201, 206], "forthcom": 89, "fortran": [3, 11, 16, 20, 41, 103, 104, 116, 143, 196, 244, 287], "fortran77": 244, "fortran90": 244, "fortranreturn": 43, "fortun": [43, 103, 130, 207, 208], "forum": [196, 230], "forward": [41, 43, 93, 112, 128, 136, 169, 194, 223, 242], "found": [0, 1, 3, 4, 6, 7, 18, 19, 22, 26, 41, 44, 45, 53, 54, 56, 58, 60, 62, 63, 64, 72, 73, 78, 87, 89, 98, 102, 112, 118, 120, 121, 122, 140, 143, 180, 194, 198, 199, 201, 206, 207, 208, 211, 213, 214, 217, 218, 221, 224, 227, 228, 229, 230, 231, 235, 249, 250, 252, 253, 287], "foundat": [54, 205, 206], "four": [7, 27, 43, 45, 54, 62, 66, 70, 92, 95, 102, 108, 113, 127, 136, 141, 149, 186, 197, 198, 204, 207, 211, 219, 224, 227, 229, 231, 232, 256, 258, 261, 273], "four_group": 45, "fourier": [10, 62, 70, 89, 115, 169, 215, 268], "fourier_seri": [62, 214], "fourier_transform": 89, "fourierseri": 214, "fouriertransform": 89, "fourth": [22, 62, 63, 199, 227, 278], "fox": 87, "fp": [43, 44, 62, 207, 213], "fp_group": [44, 53], "fpgroup": [44, 53], "fqyej": 63, "fr": [84, 89, 102, 121, 126, 128, 130, 133, 134, 138, 140, 143, 231], "frac": [11, 16, 18, 20, 22, 23, 27, 29, 41, 61, 62, 63, 64, 67, 68, 70, 87, 89, 98, 102, 104, 112, 130, 141, 179, 191, 192, 194, 195, 196, 200, 204, 207, 211, 213, 214, 218, 221, 224, 227, 228, 230, 231, 232, 249, 263, 265, 278, 282, 283, 287, 288], "frac2": 231, "frac_field": [201, 202], "frac_unifi": 202, "fracel": [202, 211], "fracfield": [201, 202], "fraction": [12, 62, 63, 66, 68, 78, 89, 98, 102, 118, 182, 201, 202, 204, 205, 208, 211, 213, 223, 224, 227, 229, 279], "fractional_part": 68, "fractionalpart": 68, "fractionfield": [201, 202], "fracton": 211, "fragil": 20, "fragment": [6, 63], "frame": [6, 116, 117, 118, 120, 121, 123, 125, 126, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 141, 143, 144, 185, 186, 187, 188, 190, 192, 194, 246, 256, 263], "frame1": 186, "frame2": [186, 188], "frame_a": 126, "frame_b": 126, "frame_i": 128, "frame_mc": 128, "frame_n": 126, "framecg1": 128, "framecg3": 128, "framecgnorm": 128, "framecgpar": 128, "framelength": 128, "framework": [62, 119, 126, 136, 236, 242, 244, 250, 273], "francesco": 0, "franci": 205, "frank": [53, 54, 98, 249], "frechet": 231, "fredrik": 0, "free": [0, 10, 11, 22, 27, 28, 33, 41, 42, 43, 52, 53, 58, 62, 74, 89, 93, 95, 98, 102, 105, 106, 110, 113, 120, 136, 145, 165, 183, 186, 193, 197, 198, 202, 204, 206, 207, 211, 213, 219, 221, 223, 224, 227, 229, 230, 237, 249, 282], "free_arg": 237, "free_dynamicsymbol": 186, "free_group": [44, 52, 53], "free_integ": 102, "free_modul": [198, 202], "free_symbol": [10, 11, 25, 43, 62, 71, 89, 93, 165, 183, 186, 207, 217, 224], "free_symbols_in_domain": 207, "free_to_perm": 52, "free_var_index": 98, "freedom": [105, 120, 121, 127, 130, 136, 231, 273], "freegroup": 44, "freeli": [6, 34, 96, 120, 198], "freemodul": 198, "freemoduleel": 198, "freespac": 145, "freevar": 98, "freir": 205, "freq_unit": 110, "frequenc": [63, 89, 110, 112, 150, 152, 160, 177], "frequent": [16, 53, 206, 218, 230], "freshli": 33, "fresnel": [149, 211, 221], "fresnel_coeffici": 149, "fresnel_equ": 149, "fresnel_integr": 70, "fresnelc": [70, 211, 221], "fresnelintegr": 70, "fridai": 63, "friend": 195, "friendli": [7, 43, 87, 224, 226, 227, 229, 230, 244, 289], "fro": 98, "frobeniu": [86, 98, 102, 204, 205], "from": [1, 3, 4, 5, 6, 7, 10, 11, 14, 15, 16, 18, 19, 20, 22, 24, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 254, 256, 258, 259, 260, 261, 262, 263, 265, 266, 274, 277, 278, 280, 282, 283, 284, 287, 288, 289], "from_algebraicfield": 202, "from_array_to_matrix": 233, "from_axis_angl": 35, "from_complexfield": 202, "from_ddm": 200, "from_dict": [202, 207], "from_dict_sympi": 200, "from_eul": 35, "from_expr": [43, 207], "from_expressiondomain": 202, "from_expressionrawdomain": 202, "from_ff": 202, "from_ff_gmpi": 202, "from_ff_python": 202, "from_fractionfield": 202, "from_functionprototyp": 43, "from_gaussianinteg": 202, "from_gaussianrationalfield": 202, "from_globalpolynomialr": 202, "from_hyp": [81, 84], "from_index_summ": 95, "from_int_list": 206, "from_inversion_vector": 54, "from_list": [200, 202, 207, 208], "from_list_sympi": 200, "from_matrix": [35, 112, 200], "from_meijerg": [81, 84], "from_monogenicfiniteextens": 202, "from_poli": 207, "from_polynomialr": 202, "from_qq": 202, "from_qq_gmpi": 202, "from_qq_python": 202, "from_rational_express": 112, "from_real": 219, "from_realfield": 202, "from_rep": 200, "from_rg": 51, "from_rotation_matrix": 35, "from_sequ": 54, "from_sympi": [201, 202], "from_sympy_list": 202, "from_zz": 202, "from_zz_gmpi": 202, "from_zz_python": 202, "fromit": 62, "front": [53, 62, 128, 129, 145, 175, 202, 204, 207, 211, 223, 288], "frontier": [98, 219], "frown": 11, "frstar": [121, 126, 128, 130, 133, 134, 138, 140, 143], "frustrat": 4, "frv": 231, "frv_type": 231, "fsolv": 28, "fsp": 87, "fsu": 89, "ftheta": 64, "fu": [222, 223, 268], "fudg": 4, "fulfil": [87, 196], "full": [4, 6, 7, 8, 9, 10, 12, 14, 18, 20, 25, 32, 39, 41, 43, 53, 54, 62, 66, 70, 74, 75, 89, 95, 98, 104, 138, 139, 186, 201, 204, 205, 207, 211, 213, 223, 224, 250, 282, 285, 288], "full_cyclic_form": 54, "full_impl": 18, "full_pb": 87, "full_prec": [61, 211], "fullform": 104, "fulli": [4, 6, 10, 18, 53, 62, 79, 89, 92, 104, 105, 106, 120, 126, 143, 176, 194, 201, 202, 208, 218, 231, 237, 253], "fullrank": [39, 43], "fullrankhandl": 39, "fullrankpred": 39, "fulltext": 65, "fully_qualified_modul": 211, "fully_symmetr": 237, "fun": [211, 228, 281], "func": [4, 6, 11, 17, 20, 37, 41, 43, 62, 64, 67, 70, 81, 83, 102, 165, 186, 204, 207, 211, 212, 223, 227, 228, 229, 240, 245, 247, 249, 250, 252, 255], "func_field_modgcd": 204, "func_m_1": 43, "func_nam": [4, 43, 68, 93, 252], "funcminusoneoptim": 43, "funcnam": 243, "function": [2, 3, 4, 7, 8, 11, 14, 15, 16, 18, 19, 21, 23, 25, 27, 30, 32, 36, 37, 38, 40, 41, 42, 44, 45, 53, 54, 57, 58, 60, 63, 64, 65, 66, 67, 71, 72, 73, 74, 79, 82, 83, 86, 88, 89, 90, 91, 93, 95, 97, 101, 103, 105, 107, 109, 110, 112, 113, 114, 118, 120, 123, 124, 125, 126, 129, 130, 131, 132, 136, 138, 139, 143, 148, 149, 150, 151, 155, 160, 161, 162, 165, 170, 171, 172, 173, 174, 175, 176, 179, 180, 185, 186, 189, 190, 191, 193, 195, 196, 198, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 225, 226, 229, 230, 231, 233, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 261, 262, 264, 265, 266, 267, 268, 271, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 286, 289], "function1": 92, "function2": 92, "function_arg": [43, 242], "function_exponenti": 104, "function_kwarg": 242, "function_nam": [43, 243], "function_prototyp": 244, "function_rang": 41, "function_vari": 89, "functioncal": 43, "functionclass": [62, 211, 250], "functiondefinit": [43, 104], "functionmatrix": 95, "functionprototyp": 43, "functiontyp": 98, "functor": 42, "fundament": [18, 20, 41, 44, 52, 80, 87, 89, 98, 180, 181, 201, 206, 224, 227, 231, 284], "fundamental_matrix": 231, "funtion_nam": 243, "further": [0, 3, 5, 18, 20, 22, 38, 42, 63, 68, 70, 74, 87, 89, 94, 95, 98, 104, 105, 109, 110, 117, 120, 121, 141, 148, 194, 196, 197, 198, 204, 206, 207, 220, 221, 223, 227, 231, 237, 281, 282], "furthermor": [4, 10, 20, 39, 62, 63, 92, 206, 220, 280, 282, 283], "furthest": [41, 63], "fuse": 43, "fused_multipli": 20, "futur": [4, 18, 19, 43, 44, 62, 87, 89, 98, 104, 120, 125, 128, 136, 140, 176, 180, 193, 197, 199, 210, 211, 223, 227, 236, 242, 245, 247, 250, 273, 283, 289], "fuzzi": [11, 18, 20, 21], "fuzzy_": 20, "fuzzy_and": [18, 19, 20], "fuzzy_not": [19, 20], "fuzzy_or": [18, 19], "fv": 202, "fwht": 65, "fwrap": 243, "fx": [62, 64, 197, 227, 228], "fxx": 62, "fxy": 224, "fxz": 224, "fy": [64, 197, 228], "fz": 197, "fzx": [25, 224], "g": [1, 3, 4, 5, 7, 10, 12, 18, 19, 20, 28, 29, 31, 41, 42, 43, 44, 47, 50, 52, 53, 54, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 74, 78, 79, 80, 85, 88, 89, 91, 92, 93, 98, 102, 104, 105, 112, 113, 117, 120, 123, 125, 126, 128, 130, 131, 133, 134, 135, 140, 141, 143, 144, 156, 160, 165, 171, 173, 174, 176, 179, 181, 182, 186, 192, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 242, 243, 244, 245, 247, 249, 250, 251, 252, 265, 268, 278, 283, 287, 288, 289], "g1": [43, 47, 52, 53, 87, 98, 112], "g162": 63, "g18": 45, "g2": [43, 47, 52, 53, 87, 91, 98, 112], "g3": [53, 112], "g36": 45, "g36m": 45, "g36p": 45, "g4": 112, "g72": 45, "g_": [45, 53, 60, 61, 70, 87, 98, 224], "g_0": [53, 224], "g_1": [53, 207, 218, 224, 227], "g_2": [53, 91, 218, 227], "g_frame": 120, "g_i": [53, 218], "g_k": 53, "g_n": [61, 67, 207], "g_name": 206, "g_t": 53, "gain": [12, 63, 112, 138, 139, 143], "galoi": [49, 201, 202, 204, 207, 268], "galois_group": [202, 206, 207], "galoisgroup": [202, 206, 207], "galoistool": [102, 204], "galton": 231, "game": 221, "gamma": [6, 7, 12, 20, 61, 62, 64, 66, 67, 87, 89, 115, 143, 173, 195, 196, 211, 221, 223, 227, 231, 288], "gamma2": 70, "gamma3": 70, "gamma_": [70, 113, 115], "gamma_0": 115, "gamma_1": [43, 115], "gamma_2": [43, 115], "gamma_3": 115, "gamma_5": 115, "gamma_distribut": 231, "gamma_distribution_and_the_use_of_the_distribution_in_the_bayesian_analysi": 231, "gamma_funct": [6, 70], "gamma_i": 204, "gamma_matric": [113, 115], "gamma_p": 70, "gamma_process": 231, "gamma_trac": 113, "gammabetaerf": [6, 67, 70], "gammadistribut": 231, "gammafunct": [6, 70], "gammainvers": 231, "gammaln": 211, "gammamatrix": 113, "gammamatrixhead": 113, "gammaprocess": 231, "gammasimp": [61, 62, 223], "gap": [17, 53, 102, 126, 208], "garbag": 242, "gate": [92, 156, 161, 163, 169, 170, 172, 273], "gate_idx": [156, 160], "gate_simp": 160, "gate_sort": 160, "gate_spac": 160, "gateinputcount": 92, "gathen": [204, 205], "gathen92": [204, 205], "gathen99": [204, 205], "gather": 227, "gaunt": 196, "gauss": [6, 27, 70, 89, 98, 145, 199, 206, 209, 229, 230], "gauss_chebyshev_t": 89, "gauss_chebyshev_u": 89, "gauss_conj": 145, "gauss_gen_laguerr": 89, "gauss_hermit": 89, "gauss_jacobi": 89, "gauss_jordan_solv": [94, 98], "gauss_laguerr": 89, "gauss_legendr": 89, "gauss_lobatto": 89, "gaussian": [18, 70, 89, 98, 102, 146, 180, 204, 207, 224, 229, 231, 273, 284], "gaussian_beam": 145, "gaussian_conj": 145, "gaussian_elimin": 98, "gaussian_prim": 102, "gaussian_quadratur": 89, "gaussian_reduc": 224, "gaussiandomain": 202, "gaussianel": 202, "gaussianinteg": [201, 202], "gaussianinvers": 231, "gaussianr": [201, 202], "gaussianrationalfield": [201, 202], "gaussopt": 145, "gave": [12, 62, 249], "gb": 53, "gcc": [3, 244], "gcd": [61, 62, 63, 98, 102, 172, 201, 202, 205, 206, 207, 211, 223, 224], "gcd_list": 207, "gcd_term": [62, 207], "gcdex": [202, 207], "gcomm": 237, "gd": 231, "ge": [7, 18, 62, 67, 68, 70, 87, 93, 98, 102, 196, 199, 204, 207, 221, 249], "gear": 198, "gedd": [89, 205], "geddes92": [204, 205], "gedg": 211, "gegenbau": [207, 211], "gegenbauer_poli": [70, 207], "gegenbauer_polynomi": 70, "gegenbauer_rul": 89, "gegenbauerc": 211, "gegenbauerc3": 70, "gegenbauerpolynomi": 70, "gen": [52, 53, 58, 59, 60, 62, 98, 198, 201, 202, 204, 206, 207, 208, 209, 217, 223, 226, 229], "gen0": 44, "gen1": 44, "gen_": 44, "gen_count": 53, "gen_hermite_rul": 89, "gen_laguerre_rul": 89, "gen_mat": 231, "gen_spe": [186, 190], "gender": 7, "gener": [1, 4, 8, 10, 11, 12, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 37, 39, 40, 41, 42, 44, 45, 46, 47, 50, 51, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 76, 78, 80, 85, 87, 89, 90, 91, 92, 95, 98, 102, 103, 104, 112, 116, 117, 120, 121, 122, 125, 126, 128, 129, 130, 131, 133, 135, 136, 137, 139, 140, 141, 143, 144, 148, 159, 160, 161, 162, 165, 170, 171, 174, 175, 176, 181, 183, 185, 186, 187, 190, 191, 192, 194, 196, 197, 198, 199, 200, 202, 204, 207, 208, 209, 210, 211, 212, 213, 217, 220, 221, 223, 224, 226, 227, 228, 229, 231, 236, 237, 243, 244, 246, 247, 248, 249, 250, 256, 260, 261, 263, 264, 265, 271, 278, 280, 281, 282, 283, 284, 288, 289], "general_sum_of_even_pow": 224, "general_sum_of_squar": 224, "generalis": [18, 70, 87, 198], "generalizations_of_fibonacci_numb": [62, 67], "generalized_hypergeometric_funct": 70, "generalized_laguerre_polynomi": 70, "generalized_multivariate_log": 231, "generalizedmultivariateloggamma": 231, "generalizedmultivariateloggammaomega": 231, "generalpythagorean": 224, "generalsumofevenpow": 224, "generalsumofsquar": 224, "generate_bel": [54, 249], "generate_derang": [67, 249], "generate_dimino": [50, 53], "generate_grai": 46, "generate_involut": 249, "generate_oriented_forest": 249, "generate_schreier_sim": [50, 53], "generator_matrix": 231, "generator_product": 53, "generators_and_rel": 50, "generatorserror": 204, "generatorsneed": 204, "generatortyp": 249, "genform": [227, 228], "genfrac": 102, "genocchi": [67, 70, 207], "genocchi_numb": 67, "genocchi_poli": [67, 207], "genocchinumb": 67, "gens1": 58, "gens2": 58, "gens2a": 58, "gens_a": 58, "gens_f": 58, "gens_h": 53, "gens_i": 58, "gens_k": 53, "gensol": 227, "geodesi": 205, "geodet": 205, "geomalgorithm": 79, "geomet": [67, 198], "geometr": [20, 64, 71, 72, 73, 74, 75, 76, 77, 78, 79, 98, 145, 195, 198, 205, 231, 284], "geometri": [6, 71, 72, 73, 75, 76, 77, 78, 79, 89, 136, 149, 203, 259, 266, 267, 274, 282], "geometric_conj": 145, "geometric_conj_ab": 145, "geometric_conj_af": 145, "geometric_conj_bf": 145, "geometric_distribut": 231, "geometricdistribut": 231, "geometricent": 77, "geometricrai": 145, "geometryent": [71, 72, 73, 75, 77, 78, 79], "geometryerror": [72, 75, 78, 79], "geometryresult": 74, "georg": [44, 198, 227, 249], "geq": [62, 63, 70, 98, 207, 224, 231, 288], "geq0": 231, "gerardo": 196, "gerhard": 205, "german": 63, "get": [1, 2, 4, 6, 7, 8, 10, 15, 16, 18, 19, 20, 26, 28, 29, 30, 33, 34, 37, 38, 41, 42, 43, 45, 46, 51, 52, 54, 55, 57, 58, 61, 62, 63, 64, 66, 67, 68, 70, 75, 85, 87, 89, 91, 95, 98, 102, 104, 105, 110, 112, 115, 121, 126, 129, 130, 138, 139, 140, 143, 148, 149, 156, 160, 165, 170, 171, 172, 173, 178, 180, 181, 195, 199, 201, 202, 204, 206, 207, 208, 209, 210, 211, 213, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 232, 233, 237, 238, 243, 249, 250, 251, 253, 256, 260, 277, 280, 282, 283, 284, 287, 288, 289], "get_adjacency_dist": 54, "get_adjacency_matrix": 54, "get_basi": 171, "get_class": 254, "get_color_arrai": 197, "get_comm": 237, "get_contraction_structur": [235, 236], "get_data": [10, 197, 253], "get_default_datatyp": 244, "get_diag_block": [93, 95, 98], "get_dimensional_depend": [178, 179], "get_domain": 207, "get_exact": 202, "get_field": [201, 202], "get_free_indic": [237, 238], "get_gen_sol_from_part_sol": 227, "get_indic": [235, 236, 237, 238], "get_interfac": 244, "get_matrix": [10, 237], "get_mesh": 197, "get_mod_func": 254, "get_modulu": 207, "get_motion_param": 190, "get_num_denom": 206, "get_numpy_arrai": 43, "get_period": [70, 87], "get_perm_group": [45, 206], "get_permut": 176, "get_point": [10, 197], "get_positional_dist": 54, "get_precedence_dist": 54, "get_precedence_matrix": 54, "get_prototyp": 244, "get_r": 202, "get_resourc": 253, "get_seg": 197, "get_subno": 176, "get_subset_from_bitstr": 46, "get_symmetric_group_sg": [58, 237], "get_sympy_dir": 242, "get_target_matrix": 160, "get_transvers": 58, "get_units_non_prefix": 184, "getn": 62, "geto": 62, "getresourc": 253, "getsourc": 250, "getstat": 62, "getter": [10, 62, 126, 143], "gf": [54, 63, 198, 200, 201, 204, 206], "gf_": 204, "gf_add": 204, "gf_add_ground": 204, "gf_add_mul": 204, "gf_berlekamp": 204, "gf_cofactor": 204, "gf_compos": 204, "gf_compose_mod": 204, "gf_crt": [102, 204], "gf_crt1": 204, "gf_crt2": 204, "gf_csolv": 204, "gf_degre": 204, "gf_diff": 204, "gf_div": 204, "gf_eval": 204, "gf_expand": 204, "gf_exquo": 204, "gf_factor": 204, "gf_factor_method": 204, "gf_factor_sqf": 204, "gf_from_dict": 204, "gf_from_int_poli": 204, "gf_gcd": 204, "gf_gcdex": 204, "gf_int": 204, "gf_irreduc": 204, "gf_irreducible_p": 204, "gf_lc": 204, "gf_lcm": 204, "gf_lshift": 204, "gf_monic": 204, "gf_mul": 204, "gf_mul_ground": 204, "gf_multi_ev": 204, "gf_neg": 204, "gf_normal": 204, "gf_pow": 204, "gf_pow_mod": 204, "gf_qbasi": 204, "gf_qmatrix": 204, "gf_quo": 204, "gf_quo_ground": 204, "gf_random": 204, "gf_rem": 204, "gf_rshift": 204, "gf_shoup": 204, "gf_sqf": 204, "gf_sqf_list": 204, "gf_sqf_p": 204, "gf_sqf_part": 204, "gf_sqr": 204, "gf_strip": 204, "gf_sub": 204, "gf_sub_ground": 204, "gf_sub_mul": 204, "gf_tc": 204, "gf_to_dict": 204, "gf_to_int_poli": 204, "gf_trace_map": 204, "gf_trunc": 204, "gf_valu": 204, "gf_zassenhau": 204, "gff": 207, "gff_list": [202, 207], "gfvar": 217, "gh": [53, 199, 230, 237], "ghcomm": 237, "gianni": [204, 207, 229], "giant": [102, 230], "gib": 207, "gibb": 214, "gibbs_phenomenon": 214, "gigabyt": 282, "gimp": 211, "giovan": 63, "giovini": [204, 205], "giovini91": 205, "git": [3, 8], "github": [0, 1, 3, 4, 5, 7, 10, 26, 30, 33, 41, 62, 66, 78, 89, 98, 180, 219, 230, 284], "gitlab": 126, "gitter": [33, 284], "give": [3, 4, 6, 12, 14, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 35, 36, 38, 43, 44, 51, 53, 54, 55, 56, 61, 62, 63, 64, 67, 68, 70, 72, 74, 75, 77, 78, 86, 87, 89, 90, 92, 95, 98, 101, 102, 103, 105, 108, 112, 120, 126, 143, 155, 170, 171, 173, 174, 178, 179, 181, 182, 184, 186, 190, 192, 194, 195, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 211, 212, 213, 214, 218, 219, 220, 221, 223, 224, 227, 229, 230, 231, 242, 243, 244, 249, 260, 265, 280, 281, 283, 288, 289], "given": [1, 3, 4, 7, 10, 11, 12, 14, 16, 18, 20, 22, 24, 27, 29, 35, 37, 38, 41, 42, 43, 44, 46, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 86, 87, 89, 91, 92, 93, 95, 98, 101, 102, 104, 105, 108, 110, 113, 117, 118, 120, 121, 123, 125, 126, 130, 141, 149, 166, 171, 173, 180, 181, 182, 184, 186, 187, 188, 190, 192, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 214, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 236, 237, 240, 242, 244, 246, 249, 250, 252, 253, 256, 259, 261, 263, 265, 277, 283, 286, 288, 289], "given_condit": 231, "givens_rot": 98, "gj": 98, "gl": 63, "glob": [12, 242], "global": [4, 6, 10, 36, 37, 38, 41, 43, 44, 62, 74, 87, 104, 160, 166, 186, 188, 197, 198, 201, 202, 204, 211, 224, 227, 228, 231, 242, 244, 245, 250, 259], "global_assumpt": [36, 37, 38], "global_dict": 104, "global_paramet": 68, "global_var": [43, 244], "globalpolynomialr": 201, "gloss": 218, "glossari": 13, "glu": 181, "glue": 98, "gm": [63, 179], "gm_private_kei": 63, "gm_public_kei": 63, "gmail": 196, "gmp": 3, "gmpy": [66, 201, 202, 287], "gmpy2": [3, 201, 202], "gmpyfinitefield": [201, 202], "gmpyinteg": 202, "gmpyrationalfield": 202, "gmvlg": 231, "gmvlgo": 231, "gn": 47, "go": [4, 5, 6, 7, 20, 33, 42, 43, 53, 63, 67, 68, 87, 121, 126, 128, 141, 143, 144, 170, 181, 190, 197, 206, 207, 218, 221, 227, 280, 282, 283, 286, 288], "goal": [10, 11, 42, 116, 144, 206, 208, 242, 243, 245, 281, 282], "goe": [8, 20, 32, 98, 218, 221, 230, 280, 283], "gold": 63, "gold_bug": 63, "goldbuggonavybeatarmyy": 63, "golden": [62, 66, 102], "golden_ratio": 62, "goldenratio": [62, 66, 212, 223], "goldstein": 227, "goldwass": 63, "golomb": [63, 102], "golub": 98, "golumb": 102, "gompertz": 231, "gompertz_distribut": 231, "gon": 50, "gonavybeatarmi": 63, "gonavybeatarmyyesyoucan": 63, "goo": 63, "good": [4, 7, 11, 18, 20, 25, 31, 43, 62, 63, 66, 74, 87, 98, 102, 128, 140, 143, 198, 201, 202, 211, 218, 220, 221, 223, 227, 249, 277, 281, 284], "googl": [196, 197, 230], "gordan": [163, 173, 196, 273], "gordon": [87, 155, 221], "gosper": 61, "gosper_norm": 61, "gosper_sum": 61, "gosper_term": 61, "got": [98, 198, 201, 204, 207, 210, 242, 243, 249, 250, 280, 282, 283], "gotcha": [11, 13, 62, 195, 250, 281, 289], "gothic_re_im": 211, "goto": 43, "goui": 145, "gov": [6, 68, 70], "govern": 102, "gp": [207, 227], "gpa": 105, "gpu": [3, 103, 143], "gr": 53, "gracefulli": [211, 235], "grad_field": [187, 259], "grade": [63, 90, 191, 207], "gradedlexord": 207, "gradient": [187, 196, 197, 256, 259, 265], "gradient_field": 263, "gradual": 208, "graduat": 231, "grafarend": 205, "graham": [54, 67, 68, 102], "graham_scan": 79, "grai": [49, 57, 90, 145, 191, 197, 268], "gram": [98, 180, 181, 183], "grammar": [126, 223], "gramschmidt": 98, "grand": 41, "granger": [0, 162], "grantham": 102, "graph": [3, 6, 11, 54, 70, 91, 98, 103, 200, 211, 230, 231, 249, 283, 287], "graphic": [7, 29, 110], "graphviz": [1, 7, 283, 287], "grav_eq": 179, "gravit": [128, 133, 179, 192, 265], "gravitational_const": [179, 183], "graviti": [125, 126, 130, 131, 133, 135, 143, 192, 265], "gray_to_bin": 46, "graycod": 46, "graycode_subset": 46, "grayscal": 197, "great": [20, 145, 208, 211, 224, 250], "greater": [7, 22, 39, 54, 62, 67, 68, 70, 87, 91, 102, 112, 202, 204, 207, 210, 218, 223, 227, 229, 231, 246, 249, 263, 278], "greaterthan": [62, 211], "greaterthanobject": 62, "greatest": [62, 67, 72, 102, 199, 201, 202, 204, 205, 207, 210], "greatli": 212, "greedi": [102, 204, 220, 223], "greedy_algorithm_for_egyptian_fract": 102, "greek": [7, 11, 34, 62, 102, 104, 198, 211], "greek_lett": 211, "green": [53, 137, 197], "greet": 92, "greuel": 205, "greuel2008": [198, 205], "grevlex": [62, 90, 191, 199, 204, 207, 210, 211], "grid": [16, 41, 42, 110, 197], "gridpoint": 41, "grigoryan": 228, "grlex": [62, 90, 191, 202, 207, 210, 211], "groebner": [205, 206, 207, 210, 223, 229, 230], "groebnerbasi": [31, 199, 207, 210], "groebnertool": 204, "ground": [81, 120, 128, 132, 133, 134, 135, 198, 201, 202, 204, 206, 207, 229, 287], "ground_root": 207, "group": [7, 42, 48, 49, 54, 55, 58, 59, 60, 62, 65, 67, 91, 92, 102, 155, 164, 165, 176, 196, 197, 198, 202, 207, 223, 227, 229, 230, 237, 249, 268], "group_construct": 47, "group_nam": 91, "group_numb": 48, "group_ord": 91, "groupprop": [50, 53], "grouptheori": 53, "grover": [163, 273], "grover_iter": 161, "grow": [58, 62, 87, 98, 102, 201, 204], "growth": [51, 102, 204, 278], "gruntz": [62, 213], "gr\u00f6bner": 203, "gsl": [116, 244], "gsoc": 230, "gt": [39, 43, 62, 231, 249], "gtkmathview": 211, "guarante": [15, 18, 22, 28, 43, 53, 54, 62, 74, 87, 89, 98, 201, 204, 206, 207, 227, 229, 230, 247, 252, 284, 288], "guard": 244, "guess": [10, 14, 42, 63, 66, 87, 90, 191, 204, 207, 221, 224, 283], "gui": [90, 191], "guid": [1, 3, 8, 9, 11, 13, 20, 27, 33, 42, 62, 69, 126, 140, 211, 224, 226, 227, 229, 230, 237, 281, 285, 286, 289], "guidanc": 23, "guidelin": [4, 8, 31, 227], "guiver": 205, "gumbel": 231, "gumbel_distribut": 231, "gumbel_max": 231, "gumbel_min": 231, "gumbeldistribut": 231, "gupta": [0, 230], "gx": 72, "gy": 227, "gymbal": 35, "gyz": 224, "gz": 53, "h": [0, 12, 16, 41, 42, 43, 44, 45, 46, 53, 58, 61, 62, 63, 67, 70, 84, 87, 89, 93, 94, 98, 99, 104, 112, 120, 123, 141, 145, 148, 160, 162, 165, 170, 174, 181, 196, 197, 198, 199, 200, 204, 205, 206, 207, 210, 211, 219, 223, 227, 229, 230, 231, 232, 237, 244, 266, 278, 287], "h0": 70, "h1": [42, 123], "h2": 123, "h5": 55, "h_": [42, 53, 58, 67, 70, 89], "h_0": [53, 58], "h_1": [53, 58, 230], "h_2": [53, 230], "h_i": [43, 58], "h_n": [58, 70, 89, 207, 230], "h_name": [43, 244], "ha": [1, 3, 4, 6, 7, 10, 11, 12, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 39, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 56, 58, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 74, 75, 77, 78, 79, 85, 87, 89, 91, 92, 93, 95, 98, 99, 101, 102, 103, 105, 106, 108, 112, 113, 117, 120, 121, 126, 128, 130, 136, 141, 143, 149, 150, 160, 161, 170, 173, 178, 181, 185, 186, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 216, 218, 219, 221, 223, 224, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 242, 243, 244, 245, 246, 247, 249, 252, 256, 258, 260, 261, 263, 265, 266, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289], "haaheim": 227, "hack": [201, 227, 240], "hackman": 102, "had": [10, 20, 26, 27, 54, 62, 63, 98, 102, 126, 140, 206, 207, 208, 211, 219, 221, 227, 229, 230, 245, 250, 277, 280, 283, 284], "hadamard": [93, 95, 98, 160, 161, 172, 211], "hadamard_product": 95, "hadamard_transform": 65, "hadamardg": 160, "hadamardpow": [95, 211], "hadamardproduct": [95, 211], "hadn": 20, "hal": 84, "half": [12, 20, 43, 62, 63, 67, 68, 70, 72, 78, 89, 91, 98, 102, 104, 105, 145, 148, 173, 196, 202, 204, 206, 207, 219, 220, 221, 223, 231, 242, 249], "half_gcdex": [202, 207], "half_per": 202, "half_precis": 43, "half_wave_retard": 148, "hall": [44, 52, 231], "halt": 53, "halv": 206, "hamberg": 56, "hamburg": 249, "hamilton": [35, 46, 93], "hamiltonian": [46, 167], "hand": [6, 10, 16, 18, 20, 24, 29, 42, 43, 45, 54, 55, 62, 68, 70, 89, 92, 93, 98, 102, 105, 121, 125, 126, 140, 144, 148, 165, 168, 180, 186, 192, 195, 196, 198, 201, 202, 204, 206, 209, 221, 230, 242, 244, 246, 250, 253, 263, 265, 282], "handbook": [5, 6, 44, 52, 53, 60, 70, 102], "handi": [61, 62, 98, 211, 283], "handl": [7, 16, 18, 19, 20, 41, 50, 54, 62, 68, 89, 90, 92, 97, 102, 103, 104, 105, 113, 116, 126, 140, 156, 159, 165, 166, 171, 180, 201, 207, 208, 217, 223, 227, 229, 232, 235, 243, 249, 250, 252, 283, 288], "handle_first": 89, "handler": [20, 36, 37, 38, 39, 40, 62, 69, 98], "handwritten": [90, 191], "hang": [29, 98, 130, 134, 227, 228], "hankel": [70, 89], "hankel1": [70, 211], "hankel2": [70, 211], "hankel_transform": 89, "hankelh1": [70, 211], "hankelh2": [70, 211], "hankeltransform": 89, "happen": [4, 6, 10, 11, 16, 18, 19, 20, 26, 35, 43, 54, 61, 62, 66, 74, 77, 86, 120, 171, 175, 181, 198, 204, 206, 207, 210, 219, 223, 227, 231, 250, 261, 280, 287, 288], "happi": 20, "happili": [89, 235], "hard": [4, 8, 11, 18, 54, 63, 98, 102, 126, 176, 201, 211, 218, 227, 230, 280, 282], "harder": [6, 10, 18, 62, 87, 201, 242], "hardest": 63, "hardi": 102, "hardwar": [20, 43], "harm": 4, "harmless": [211, 284], "harmon": [62, 67, 102, 114, 155, 196, 211, 273], "harmonic_numb": 67, "harmonicnumb": [67, 211], "harmonicnumber2": 67, "harsh": [0, 230], "hartre": 114, "has_assoc_field": 202, "has_assoc_r": 202, "has_dup": 249, "has_empty_sequ": [61, 89], "has_equ": 197, "has_finite_limit": [61, 89], "has_fre": 62, "has_integer_pow": 178, "has_only_gen": 207, "has_q_annihil": 176, "has_q_creat": 176, "has_reversed_limit": [61, 89], "has_varieti": 249, "has_xfre": 62, "hasattr": [223, 245], "hash": [62, 202, 204, 212, 223, 227, 242, 244], "hashabl": [11, 59, 87, 249], "hasn": 140, "hat": [120, 137, 141, 185, 186, 191, 192, 194, 195, 260, 261, 263, 265, 266], "hate": 211, "hav91": 44, "hava": 44, "have": [0, 1, 4, 5, 6, 7, 11, 12, 15, 16, 18, 19, 20, 22, 24, 25, 27, 28, 29, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 52, 53, 54, 55, 58, 60, 61, 62, 63, 64, 66, 67, 68, 70, 72, 73, 77, 78, 80, 85, 86, 87, 89, 91, 92, 93, 94, 95, 98, 101, 102, 103, 104, 105, 106, 110, 112, 113, 115, 116, 120, 121, 123, 126, 127, 128, 134, 136, 140, 143, 160, 162, 165, 169, 171, 173, 174, 175, 176, 178, 179, 181, 184, 185, 186, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 213, 214, 216, 218, 219, 220, 221, 223, 224, 227, 229, 230, 231, 232, 233, 235, 237, 238, 240, 241, 242, 244, 245, 246, 249, 250, 252, 256, 258, 260, 261, 262, 263, 266, 277, 278, 280, 281, 282, 283, 284, 287, 288, 289], "haven": 12, "hbar": [43, 152, 158, 171, 177, 181, 183, 196], "hd": 63, "he": [7, 67, 87, 204], "he_n": [70, 207], "head": [6, 15, 42, 62, 229, 231, 237, 252, 283], "header": [4, 43, 243, 244], "headquart": 63, "heat": 181, "heavi": [3, 231, 283], "heavili": [4, 218, 228], "heavisid": [6, 70, 87, 89, 211], "heavisidediracdelta": 70, "heavisidestepfunct": 70, "heavisidetheta": 211, "hebrew": 63, "hedetniemi": 249, "heidelberg": 204, "height": [42, 43, 78, 95, 145, 197, 198, 211, 218, 266], "heinz": 56, "held": [41, 63, 140, 235, 288], "heldo": 63, "helen": 63, "helium": 114, "hellman": [63, 102], "hello": [63, 249], "helloworld": 63, "help": [4, 5, 6, 7, 18, 26, 34, 43, 52, 62, 70, 87, 89, 98, 102, 103, 105, 110, 126, 143, 151, 161, 195, 197, 206, 208, 211, 220, 221, 224, 227, 228, 231, 242, 243, 244, 250, 273, 281, 284], "helper": [10, 25, 41, 43, 53, 57, 60, 62, 87, 90, 91, 161, 163, 172, 208, 218, 221, 224, 227, 228, 230, 243, 273], "hemispher": 266, "henc": [41, 43, 52, 53, 62, 64, 68, 70, 74, 87, 90, 92, 102, 108, 192, 197, 198, 199, 204, 211, 221, 224, 228, 230, 242, 246, 261, 262, 263, 283, 288], "henri": 205, "henriqu": 197, "hensel": 204, "hep": 113, "her": 230, "herbert": 61, "here": [4, 6, 7, 10, 11, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 32, 33, 37, 38, 43, 44, 46, 51, 52, 53, 54, 60, 61, 62, 63, 64, 66, 67, 68, 70, 78, 79, 80, 84, 85, 87, 89, 92, 93, 98, 101, 102, 103, 104, 105, 108, 112, 116, 121, 126, 127, 128, 133, 134, 135, 138, 140, 141, 143, 144, 166, 171, 176, 185, 191, 192, 194, 195, 197, 198, 201, 202, 204, 206, 207, 208, 211, 212, 218, 220, 221, 223, 224, 227, 229, 230, 231, 235, 236, 243, 244, 246, 247, 249, 250, 261, 263, 265, 276, 277, 278, 280, 282, 283, 284, 286, 287, 288], "hermetian": 159, "hermit": [89, 93, 98, 99, 200, 206, 207, 211, 231], "hermite_distribut": 231, "hermite_normal_form": [99, 200, 206], "hermite_poli": [70, 207], "hermite_polynomi": 70, "hermite_prob": 70, "hermite_prob_poli": [70, 207], "hermite_quadratur": 89, "hermite_rul": 89, "hermiteh": [70, 211], "hermitepolynomi": 70, "hermitian": [18, 27, 39, 62, 93, 94, 98, 159, 165, 176, 211], "hermitian_adjoint": 159, "hermitian_matrix": 18, "hermitian_transpos": 159, "hermitianhandl": 39, "hermitianoper": [39, 165], "hermitianpred": 39, "heroic": [207, 229], "herrlich": 42, "hertz": 110, "hessenberg": [93, 98], "hessenbergdecomposit": 98, "hessian": 98, "hessian_matrix": 98, "heurisch": [10, 89], "heurist": [11, 18, 29, 54, 87, 89, 93, 204, 205, 218, 220, 223, 229, 230, 242, 278, 288], "heuristicgcdfail": 204, "hex": 102, "hfst": 63, "hg": 53, "hg2sfuei7t": 63, "hgh": 53, "hi": 224, "hidden": [11, 185], "hide": [63, 211], "hierarch": 62, "hierarchi": [211, 231], "high": [6, 7, 12, 16, 18, 22, 26, 43, 62, 66, 67, 90, 102, 143, 191, 201, 206, 209, 211, 224, 229, 273, 284], "higher": [12, 16, 22, 41, 43, 62, 64, 66, 70, 73, 98, 190, 196, 198, 201, 204, 207, 213, 214, 218, 220, 223, 227, 229, 232, 250, 278], "highest": [12, 43, 56, 91, 116, 198, 207, 214, 224, 227], "highest_root": 91, "highli": [7, 62, 66, 109, 201, 207, 216, 244], "hilbert": [163, 165, 171, 273], "hilbert_spac": [162, 165, 174], "hilbertspac": 162, "hill": [63, 70, 89, 121, 142, 186, 193, 256], "hill_ciph": 63, "hillgart": 256, "hinder": 227, "hing": [105, 106, 137], "hint": [6, 20, 42, 46, 53, 62, 65, 68, 89, 93, 98, 102, 112, 143, 153, 157, 173, 175, 176, 186, 207, 218, 221, 229, 288], "hint_integr": 227, "hintnam": [227, 228], "hir": 62, "hire": [29, 98, 105, 106, 110, 197, 214], "histogram": 246, "histor": [10, 11, 14, 20, 63, 200, 227, 231], "histori": 143, "hit": [62, 283], "hjeb": 63, "hk": 224, "hline": 211, "hnf": [99, 200, 206], "hnf_modulu": 206, "ho05": [44, 52], "hobj": 211, "hoc": 87, "hoeij": 205, "hoeij02": 205, "hoeij04": [204, 205], "hoffmann": 256, "hol_coneq": [121, 130, 139], "hold": [11, 12, 20, 38, 42, 53, 58, 62, 63, 64, 68, 70, 84, 87, 98, 101, 104, 112, 114, 120, 122, 123, 141, 172, 207, 221, 223, 227, 231, 244, 288], "holder": 62, "hole": 176, "holomorph": [62, 69, 87], "holonom": [10, 83, 86, 127, 128, 129, 130, 136, 138, 139, 267, 273, 274], "holonomic_funct": 80, "holonomicfunct": [81, 84, 85], "holonomicsequ": 84, "holt": [44, 52, 53, 60], "holzer": 224, "hom": 42, "home": [105, 206, 224], "homebrew": 1, "homeier": 196, "homeier96": 196, "homogen": [25, 35, 85, 89, 98, 112, 202, 204, 207, 224, 227, 228, 231], "homogeneous_differential_equ": 227, "homogeneous_ord": [202, 207, 224, 227], "homogeneouscoeffbest": 227, "homogeneouscoeffsubsdepdivindep": 227, "homogeneouscoeffsubsindepdivdep": 227, "homogeneousgeneralquadrat": 224, "homogeneousternaryquadrat": 224, "homogeneousternaryquadraticnorm": 224, "homomoprh": 198, "homomorph": 53, "homomorphismfail": 204, "hongguang": [222, 268], "hood": [3, 11], "hook": [20, 103, 211], "hookrightarrow": 62, "hope": [16, 53, 116, 198], "hopefulli": [12, 17, 87], "horel": 63, "horizont": [20, 31, 42, 72, 75, 77, 93, 108, 148, 197, 200, 211], "horizontal_direct": 42, "horner": [62, 143, 204, 207], "horner_schem": 207, "horowitz": 89, "host": [3, 7], "hostedtoolcach": 242, "hostnam": 244, "household": 98, "how": [1, 3, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 42, 43, 45, 53, 54, 61, 62, 68, 69, 70, 74, 85, 89, 92, 93, 95, 98, 102, 104, 105, 116, 120, 121, 126, 127, 133, 138, 139, 141, 143, 147, 148, 164, 168, 171, 172, 173, 178, 179, 186, 194, 197, 198, 201, 202, 204, 206, 210, 211, 214, 218, 219, 221, 223, 224, 227, 228, 229, 231, 237, 242, 243, 244, 245, 247, 249, 250, 252, 261, 278, 280, 282, 283, 284, 285, 287, 288], "howev": [0, 1, 3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 22, 25, 26, 29, 36, 38, 43, 45, 53, 54, 58, 61, 62, 63, 64, 67, 68, 70, 72, 87, 89, 92, 93, 98, 102, 103, 104, 105, 108, 120, 126, 140, 144, 176, 195, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 210, 211, 212, 218, 219, 220, 221, 223, 227, 228, 229, 230, 242, 243, 250, 260, 261, 265, 277, 280, 282, 284, 288, 289], "hp": 63, "hpobwzcfbubsnz": 63, "hradiu": 72, "hrzqe": 63, "hsin": 205, "hstack": [93, 200], "ht": 89, "hta": 128, "htangl": 128, "htm": [54, 70, 89, 224], "html": [1, 3, 4, 6, 7, 39, 43, 46, 54, 55, 56, 62, 63, 65, 67, 68, 70, 72, 78, 79, 89, 90, 98, 102, 110, 205, 211, 214, 216, 219, 220, 224, 227, 231, 243, 245, 247, 249, 250, 284], "htmldoc": 1, "http": [0, 1, 3, 4, 5, 6, 7, 10, 18, 20, 33, 35, 37, 38, 39, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 74, 78, 79, 80, 84, 87, 89, 90, 91, 92, 93, 95, 98, 102, 105, 110, 112, 114, 115, 145, 147, 148, 149, 151, 152, 153, 157, 158, 159, 162, 164, 165, 174, 176, 186, 188, 191, 193, 196, 200, 202, 205, 207, 210, 211, 214, 216, 218, 219, 220, 223, 224, 227, 230, 231, 243, 244, 245, 247, 249, 250, 252, 256, 258, 262, 264, 266, 284, 287], "hu": [102, 200], "huge": [89, 102, 207, 247], "hull": 79, "hulpk": 53, "human": [6, 14, 87, 178, 207, 211], "humphrei": 91, "hundr": [103, 250, 282], "hurdl": 126, "hurwitz": [67, 70], "hurwitz_zeta_funct": 70, "hw": [152, 177], "hwp": 148, "hxz": 224, "hy": 72, "hybrid": 201, "hydrogen": [43, 273], "hyper": [11, 62, 67, 70, 81, 84, 211, 213, 221, 223, 229, 231, 288], "hyper_algorithm": 213, "hyper_r": 213, "hyperbol": [70, 208, 230, 284, 288], "hyperbolic_funct": 68, "hyperbolicfunct": 68, "hyperegeometr": 223, "hyperexpand": [62, 70, 84, 87, 221, 223], "hyperfocal_dist": 149, "hypergeometr": [66, 67, 80, 86, 87, 205, 222, 223, 227, 229, 231, 268, 288], "hypergeometric_distribut": 231, "hypergeometricdistribut": 231, "hypergeometricfunct": 70, "hypergeometricpfq": 211, "hyperlink": 6, "hyperplan": 91, "hypersimilar": 223, "hypersimp": [61, 223], "hypot": [43, 211], "hypotenus": [43, 78], "hypothet": 246, "hz": 110, "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 156, 157, 159, 160, 162, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 255, 256, 258, 259, 260, 261, 262, 263, 265, 266, 277, 278, 280, 281, 283, 284, 286, 287, 288, 289], "i0": [113, 148, 237], "i1": [105, 113, 126, 143, 237], "i12": 143, "i2": [113, 126, 143, 237], "i23": 143, "i3": [98, 113, 126, 143, 237], "i31": 143, "i4": [113, 237], "i5": 113, "iT": 87, "i_": [70, 87, 221, 231, 232], "i_0": 231, "i_1": [52, 176, 207, 232], "i_2": [52, 176, 207], "i_a": 232, "i_b": 232, "i_b_bo": 126, "i_b_o": 126, "i_c_d": 126, "i_k": 231, "i_n": [206, 207, 232], "i_p_o": 126, "i_p_q": 126, "i_r": 52, "i_xi": [72, 78], "i_xx": [72, 78], "i_yi": [72, 78], "ia": 101, "iamit": 230, "ib": [68, 131], "ibin": [92, 249], "ibm": 223, "ibzz": 131, "ic": [29, 102, 227], "icomp": 237, "icomp1": 237, "icomp2": 237, "icosahedr": 55, "id": [42, 58, 68, 233], "id_a": 42, "id_b": 42, "idea": [4, 11, 18, 19, 20, 47, 53, 60, 62, 63, 74, 80, 87, 89, 102, 113, 126, 176, 180, 181, 198, 200, 201, 220, 223, 224, 227, 230, 244, 250, 288], "ideal": [18, 43, 99, 123, 126, 136, 186, 194, 200, 202, 204, 205, 206, 207, 208, 223, 230, 256], "idempot": 43, "ident": [4, 11, 12, 20, 39, 42, 44, 52, 53, 54, 60, 62, 63, 67, 68, 78, 85, 91, 93, 95, 98, 113, 115, 120, 121, 141, 160, 162, 165, 181, 198, 199, 200, 204, 205, 206, 207, 211, 220, 223, 227, 230, 235, 237, 242, 249, 250, 252, 261, 280, 284, 288], "identif": [87, 230], "identifi": [6, 10, 18, 19, 41, 55, 62, 65, 66, 89, 98, 108, 138, 164, 165, 198, 201, 202, 212, 220, 223, 227, 228, 230, 231, 250, 253], "identity_hom": 198, "identityfunct": 68, "identityg": 160, "identitymorph": 42, "identityoper": 165, "ideologi": [43, 230], "idiff": [62, 79], "idiom": [11, 253, 280, 281], "idl": 43, "idx": [41, 43, 211, 235, 236, 243], "ie": [54, 224], "ieee": [62, 63], "ieilehfstsfxe": 63, "ieilh": 63, "ieilhhfstsfqy": 63, "ifascii_nougli": 211, "ifels": 211, "iff": [20, 39, 54, 63, 92, 98, 195, 198, 206, 221, 224, 242], "ifft": 65, "ifndef": [43, 244], "ifork11": 128, "ifork22": 128, "ifork31": 128, "ifork33": 128, "ifort": 3, "ifp": 41, "iframe11": 128, "iframe22": 128, "iframe31": 128, "iframe33": 128, "ifwht": 65, "igcd": [62, 102, 199], "ignor": [10, 12, 14, 20, 43, 53, 62, 63, 67, 68, 72, 77, 87, 92, 98, 102, 112, 118, 128, 173, 176, 186, 197, 207, 211, 212, 223, 229, 230, 243, 288], "ignore_exception_detail": 242, "ignore_warn": [4, 240, 245, 247, 250], "igusa": 231, "ii": [18, 68, 87, 89, 102, 207, 211, 219, 227, 230, 233], "iii": [89, 211, 227], "iin": 91, "ij": [39, 98, 176, 181, 196, 231, 233], "ijk": [43, 236], "ijklm": 233, "ijr22d": 63, "ijth": 91, "il": 231, "ilcm": [62, 102], "ild_moment": 105, "ild_react": 105, "ild_shear": 105, "ilex": 198, "ill": [22, 179], "illinoi": 41, "illumin": 6, "illustr": [43, 98, 127, 130, 181, 201, 214, 218], "im": [20, 40, 62, 68, 87, 96, 198, 211, 212, 219, 227, 284], "imag": [1, 3, 53, 120, 132, 137, 143, 145, 149, 198, 202, 204, 211, 219, 230], "imagemagick": 1, "imageset": [219, 230, 289], "imaginari": [4, 6, 12, 18, 20, 22, 26, 28, 35, 39, 40, 62, 66, 68, 70, 93, 143, 201, 202, 207, 211, 212, 219, 223, 230], "imaginary_numb": [18, 39, 62], "imaginary_unit": [62, 211], "imaginaryhandl": 39, "imaginarypred": 39, "imaginaryunit": [62, 211], "imath": 221, "imbu": 64, "immateri": 63, "immedi": [4, 18, 27, 45, 53, 62, 87, 92, 176, 198, 201, 232, 243, 250], "immut": [10, 11, 62, 94, 97, 100, 195, 202, 227, 232, 271, 277, 284], "immutabledensematrix": [64, 93, 94, 95, 96, 231], "immutabledensendimarrai": 232, "immutablematrix": [93, 94, 95, 112, 186, 231, 256, 259, 284], "immutablesparsendimarrai": 232, "impact": 10, "implement": [3, 6, 7, 10, 11, 13, 15, 19, 20, 26, 28, 30, 31, 32, 35, 36, 37, 38, 41, 42, 43, 44, 47, 52, 53, 54, 59, 62, 63, 65, 67, 68, 70, 73, 75, 82, 83, 85, 86, 89, 92, 93, 94, 98, 102, 103, 104, 116, 126, 136, 145, 147, 148, 151, 160, 161, 169, 170, 172, 180, 185, 187, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 215, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 235, 236, 246, 249, 250, 253, 264, 267, 271, 278, 282, 288], "implemented_funct": [103, 243, 250], "impli": [7, 11, 12, 18, 35, 39, 43, 53, 92, 108, 176, 197, 202, 204, 211, 219, 221, 227, 229, 232, 235, 236, 249, 263], "implic": [62, 92, 204], "implicit": [18, 29, 43, 60, 62, 104, 121, 125, 144, 197, 227, 229, 233, 236, 243, 244, 256, 259, 266, 280], "implicit_appl": 104, "implicit_circl": 266, "implicit_multipl": 104, "implicit_multiplication_appl": 104, "implicitli": [11, 18, 19, 20, 54, 62, 89, 198, 201, 229], "implicitregion": [256, 259, 266], "implicitseri": 197, "implieddoloop": 43, "import": [3, 4, 8, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 256, 258, 259, 260, 261, 262, 263, 266, 277, 278, 280, 282, 283, 284, 286, 287, 288, 289], "import_modul": 3, "importantli": [18, 20, 208, 246], "importerror": 3, "impos": [4, 106], "imposs": [4, 6, 10, 11, 20, 29, 62, 201, 220, 227, 228, 240, 280, 288], "impract": 227, "imprecis": 10, "impress": 12, "improp": [70, 89], "improperli": 62, "improv": [3, 4, 10, 19, 20, 62, 87, 197, 201, 204, 205, 207, 208, 210, 212, 227, 230, 236, 278, 284], "impuls": 112, "impulse_response_numerical_data": 110, "impulse_response_plot": 110, "imul_num": 202, "in_terms_of_gener": 198, "inabl": 228, "inappropri": 64, "inc": [193, 205], "incent": 78, "inch": 197, "incid": [145, 149], "incircl": 78, "inclin": 198, "includ": [1, 3, 4, 6, 7, 9, 10, 11, 12, 18, 20, 22, 25, 26, 30, 33, 38, 39, 41, 42, 43, 54, 58, 61, 62, 63, 64, 66, 67, 68, 70, 74, 80, 87, 89, 92, 93, 95, 97, 98, 102, 103, 104, 114, 116, 125, 126, 128, 130, 131, 136, 138, 140, 143, 156, 160, 165, 170, 173, 174, 184, 192, 195, 199, 202, 203, 204, 206, 207, 210, 211, 212, 217, 218, 219, 221, 223, 226, 227, 228, 229, 231, 234, 237, 240, 242, 244, 245, 246, 247, 249, 256, 258, 260, 265, 267, 278, 282, 283, 284, 288, 289], "include_dir": 243, "include_numer": 126, "include_pydi": 126, "include_self": 206, "includepr": [202, 204, 207], "inclus": [7, 61, 108, 169, 198, 217, 218, 219, 230], "inclusion_hom": 198, "incom": 206, "incommensur": 41, "incompat": [8, 24], "incomplet": [3, 6, 7, 62, 67, 70, 199, 201, 207, 211, 213, 229, 230], "incomplete_gamma_funct": 70, "inconclus": 229, "incongru": 221, "inconsist": [18, 20, 36, 38, 61, 181, 186, 190, 194, 223, 227, 230], "inconsistentassumpt": 18, "inconveni": 211, "incorpor": [0, 3, 16, 199, 223], "incorrect": [4, 7, 10, 19, 20, 28, 53, 62, 72, 102, 110, 190, 202, 227, 230, 243, 246, 247], "incorrectli": [6, 10, 20, 71, 72, 98, 199], "increas": [12, 27, 41, 42, 54, 60, 61, 62, 65, 66, 70, 93, 102, 103, 116, 127, 160, 185, 186, 188, 194, 195, 201, 204, 206, 207, 213, 216, 220, 227, 231, 247, 249], "increment": [43, 53, 54, 55, 61, 78, 102, 231], "incur": [43, 103], "ind": [58, 213, 237], "inde": [4, 16, 20, 50, 53, 61, 87, 198, 221, 227, 238, 242, 282], "indefinit": [11, 35, 68, 86, 87, 89, 98, 202, 204, 205, 207, 216, 278], "indent": [6, 12, 252], "indent_cod": 211, "indep": 227, "indep_div_dep": 227, "independ": [11, 12, 20, 27, 39, 41, 43, 53, 61, 62, 64, 70, 79, 87, 89, 91, 98, 112, 121, 122, 126, 128, 130, 138, 140, 174, 181, 192, 197, 199, 201, 206, 207, 213, 214, 221, 223, 224, 227, 228, 229, 230, 231, 237, 242, 243, 263, 282, 283], "indetermin": [18, 19, 62, 98, 204, 216, 229], "indeterminate_form": 62, "index": [1, 3, 10, 12, 20, 22, 29, 30, 31, 35, 43, 51, 53, 54, 58, 61, 62, 63, 64, 67, 68, 70, 73, 78, 87, 89, 92, 93, 95, 98, 101, 102, 112, 125, 126, 143, 144, 145, 147, 149, 150, 160, 169, 171, 173, 176, 181, 186, 197, 198, 202, 206, 207, 208, 211, 216, 217, 221, 229, 231, 232, 234, 235, 237, 238, 243, 271], "index_group": 176, "index_method": 235, "index_order_new": [232, 233], "index_order_old": [232, 233], "index_typ": 237, "index_vector": 35, "indexconformanceexcept": 235, "indexedbas": [41, 43, 61, 62, 211, 229, 235, 236, 243], "indexerror": [54, 98, 207], "indexing_maxterm": 92, "indexing_minterm": 92, "indic": [4, 6, 12, 15, 18, 26, 29, 30, 41, 42, 43, 44, 46, 51, 53, 54, 55, 57, 58, 60, 61, 62, 65, 66, 67, 70, 72, 77, 78, 87, 89, 92, 93, 95, 98, 101, 102, 113, 125, 130, 160, 171, 173, 174, 176, 181, 185, 186, 196, 200, 201, 202, 206, 207, 208, 211, 218, 219, 220, 223, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 243, 244, 249, 284], "indices_contain_equal_inform": [70, 176], "indici": [84, 85, 86, 227], "indirect": [62, 64, 70, 102, 176, 227], "indirectli": 18, "individu": [10, 18, 20, 24, 27, 62, 68, 73, 78, 79, 91, 95, 98, 112, 141, 148, 166, 170, 196, 219, 227, 242, 284], "induc": [62, 93, 206, 220, 249], "induct": 198, "ineffici": [25, 62, 98, 201], "inequ": [11, 18, 19, 20, 23, 62, 197, 204, 219, 221, 225, 268], "inequival": 87, "inert": [206, 227], "inerti": [117, 120, 121, 123, 128, 130, 133, 138, 139, 141, 143], "inertia": [105, 106, 115, 116, 117, 119, 125, 126, 128, 129, 131, 133, 134, 135, 136, 143, 186, 194, 195, 206, 273], "inertia_dyad": 186, "inertia_of_point_mass": 123, "inertia_tupl": 123, "inexact": [12, 31, 62, 202], "inexpress": 207, "inf": [43, 54, 62, 98, 202, 207, 219, 227, 231], "infal": 280, "infanc": 74, "infeas": [204, 207], "infer": [18, 37, 38, 54, 62, 89, 201, 210, 211, 216, 221, 227, 243], "infimum": 219, "infin": [11, 18, 24, 39, 61, 62, 67, 68, 70, 75, 87, 89, 98, 149, 202, 204, 207, 211, 216, 217, 218, 219, 223, 226, 227, 231], "infinit": [18, 20, 24, 25, 39, 61, 62, 63, 66, 67, 68, 75, 76, 89, 98, 102, 112, 132, 162, 181, 198, 206, 211, 212, 213, 216, 217, 218, 219, 223, 224, 226, 229, 236, 249, 288, 289], "infinite_product": 61, "infinitehandl": 39, "infinitepred": 39, "infinitesim": [192, 227, 263], "infix": 62, "inflect": 196, "influenc": [44, 105, 198, 199], "info": [7, 12, 112, 211, 227, 228], "inform": [1, 3, 4, 6, 7, 11, 12, 15, 18, 19, 22, 31, 32, 38, 39, 42, 43, 44, 48, 53, 54, 60, 62, 63, 67, 70, 74, 87, 89, 91, 95, 98, 103, 106, 117, 118, 120, 121, 125, 126, 128, 136, 137, 138, 140, 141, 143, 144, 171, 176, 181, 185, 186, 191, 195, 197, 201, 206, 207, 211, 212, 218, 221, 223, 224, 229, 230, 231, 235, 236, 237, 242, 243, 244, 245, 246, 256, 261, 263, 288], "informatik": 249, "informatiqu": 208, "infrastructur": [211, 228], "infti": [6, 11, 18, 39, 61, 62, 63, 67, 68, 70, 87, 89, 198, 207, 214, 218, 221, 227, 230, 231, 278, 282, 288], "inftyright": 230, "infunct": 62, "inher": [126, 250, 280], "inherit": [36, 62, 69, 92, 95, 96, 120, 165, 174, 196, 211, 231, 236, 244, 245], "inhomogen": [224, 227, 229], "inhomogeneousgeneralquadrat": 224, "inhomogeneousternaryquadrat": 224, "init": 229, "init_cond": 64, "init_ipython_sess": 90, "init_print": [10, 22, 27, 33, 43, 54, 66, 89, 90, 98, 106, 191, 198, 199, 210, 278, 282, 284, 287, 288, 289], "init_python_sess": 90, "init_sess": [3, 90, 287], "init_subgroup": 53, "init_vprint": [123, 124, 141, 144, 186, 188, 190, 191, 194, 195], "initcond": [81, 83, 84], "initi": [7, 11, 18, 28, 37, 53, 57, 62, 63, 64, 67, 70, 78, 80, 81, 84, 85, 86, 87, 90, 102, 104, 106, 108, 110, 112, 117, 121, 123, 125, 126, 128, 130, 135, 138, 139, 140, 143, 144, 148, 156, 165, 187, 188, 191, 195, 196, 204, 206, 207, 211, 217, 221, 223, 227, 229, 230, 236, 244, 251, 252, 256, 258, 259, 260, 261], "initial_condit": [126, 143], "initial_exp": 110, "initializing_quadratic_siev": 102, "initialor": 29, "inject": [53, 62, 198, 202, 207, 284], "inlin": [6, 90, 191, 211, 244], "inlist": 186, "inner": [18, 29, 61, 87, 98, 159, 162, 163, 168, 170, 171, 174, 176, 186, 190, 200, 206, 213, 256, 273], "inner_endomorph": 206, "inner_product": 164, "innerendomorph": 206, "innermost": 62, "innerproduct": [159, 164, 165, 171, 173, 176], "inout": 43, "inoutargu": [43, 244], "inp_vec": [130, 140], "inplac": 202, "input": [6, 7, 11, 12, 20, 26, 29, 35, 41, 44, 58, 62, 63, 65, 66, 67, 68, 76, 89, 91, 92, 98, 102, 104, 109, 110, 112, 116, 120, 122, 125, 126, 128, 129, 130, 140, 143, 144, 149, 172, 186, 188, 190, 201, 202, 204, 207, 208, 209, 210, 211, 212, 219, 223, 224, 227, 229, 231, 233, 243, 244, 246, 247, 249, 250, 252, 277, 283, 284, 288], "inputargu": [43, 244], "inputoutput": 244, "inquiri": 62, "inradiu": 78, "inria": [84, 89], "insconsist": 62, "inscrib": 78, "insensit": [43, 98, 143, 211, 242, 244], "insert": [42, 44, 93, 104, 105, 171, 176, 211, 231, 252], "insid": [7, 10, 11, 12, 20, 53, 54, 59, 62, 72, 73, 78, 105, 116, 118, 130, 140, 175, 176, 180, 181, 191, 195, 207, 211, 219, 221, 224, 229, 230, 231, 233, 235, 246, 250, 283, 284], "insidepoli": 78, "insight": [24, 281], "inspect": [10, 18, 98, 206, 217, 248, 250, 275], "inspir": [228, 284], "instal": [3, 5, 7, 11, 12, 66, 103, 201, 202, 211, 243, 250, 281, 287], "instanc": [2, 4, 6, 7, 10, 11, 15, 18, 19, 20, 36, 37, 38, 40, 42, 43, 45, 53, 55, 57, 62, 64, 66, 67, 68, 70, 75, 78, 79, 80, 85, 86, 89, 90, 93, 95, 98, 102, 104, 105, 113, 117, 121, 125, 126, 144, 149, 156, 160, 166, 170, 171, 173, 175, 176, 186, 188, 191, 192, 197, 201, 202, 206, 207, 208, 209, 211, 219, 221, 223, 227, 229, 230, 231, 235, 236, 237, 242, 243, 244, 246, 249, 250, 256, 258, 259, 260, 261, 263, 265, 277, 278, 283, 288, 289], "instantan": 263, "instanti": [35, 42, 43, 54, 62, 70, 75, 77, 78, 95, 98, 166, 174, 186, 197, 198, 202, 206, 231, 256, 260], "instead": [1, 3, 4, 6, 7, 10, 11, 12, 14, 18, 19, 20, 24, 26, 27, 29, 30, 31, 34, 35, 36, 38, 42, 43, 53, 55, 58, 62, 64, 65, 66, 67, 70, 89, 90, 92, 93, 95, 96, 98, 102, 110, 113, 115, 125, 126, 128, 130, 140, 143, 174, 178, 186, 191, 192, 194, 195, 198, 201, 202, 204, 206, 207, 209, 211, 213, 221, 223, 227, 229, 230, 231, 235, 236, 237, 240, 245, 246, 247, 249, 250, 263, 266, 277, 278, 280, 282, 283, 284, 288, 289], "institut": 208, "instruct": [1, 3, 5, 6, 7, 9, 10, 12, 16, 21, 32, 43, 211, 229, 243, 244], "insuffici": [14, 93], "int": [3, 6, 7, 10, 11, 12, 18, 19, 20, 35, 41, 43, 54, 62, 63, 64, 67, 68, 70, 71, 78, 87, 89, 90, 92, 93, 98, 99, 102, 104, 110, 112, 120, 156, 160, 161, 170, 186, 188, 190, 191, 196, 197, 201, 202, 206, 207, 208, 211, 213, 214, 216, 227, 228, 231, 243, 247, 249, 250, 252, 280, 282, 283, 287, 288], "int1": [37, 38], "int16": 43, "int2": [37, 38], "int32": 43, "int64": [43, 231], "int8": 43, "int_": [70, 86, 87, 89, 207, 214, 278, 282], "int_0": [70, 87, 89, 278, 288], "int_1": [70, 87], "int_a": 89, "int_fram": 10, "int_l": [70, 87, 221], "int_to_integ": 90, "int_x": 70, "intact": [4, 10, 43, 243], "intbasetyp": 43, "intc": [43, 104], "intcurve_diffequ": 64, "intcurve_seri": 64, "integ": [3, 6, 7, 10, 11, 12, 18, 20, 24, 25, 26, 36, 37, 38, 39, 41, 43, 44, 51, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 70, 72, 75, 86, 87, 89, 90, 91, 92, 93, 95, 98, 99, 102, 104, 105, 112, 114, 120, 165, 170, 172, 173, 174, 176, 178, 186, 188, 191, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 210, 211, 213, 216, 217, 218, 219, 220, 221, 223, 224, 227, 229, 230, 231, 235, 236, 237, 243, 244, 246, 249, 252, 278, 280, 283, 287, 288], "integer_as_sum_of_three_squar": 224, "integer_el": 39, "integer_log": 62, "integer_nthroot": [62, 68, 102], "integer_to_term": 92, "integerelementshandl": 39, "integerelementspred": 39, "integerhandl": 39, "integerpartit": [51, 249], "integerpred": 39, "integers_onli": 197, "integr": [3, 11, 12, 15, 23, 33, 35, 41, 54, 61, 62, 64, 67, 68, 80, 81, 82, 85, 91, 93, 98, 101, 102, 112, 114, 121, 126, 136, 143, 162, 171, 174, 177, 180, 185, 187, 192, 196, 198, 201, 202, 204, 207, 208, 211, 213, 214, 221, 227, 228, 231, 244, 252, 256, 259, 260, 263, 264, 268, 271, 279, 282, 287], "integral_basi": [202, 206], "integral_step": 89, "integraltransform": 89, "integraltransformerror": 89, "integrand": [66, 70, 86, 87, 89, 221], "integrate_result": 171, "integration_techniqu": 89, "integration_vari": 278, "integstp": 126, "intellig": [205, 223, 227, 288], "intend": [3, 4, 6, 10, 14, 18, 62, 63, 73, 82, 87, 102, 104, 118, 171, 201, 202, 206, 209, 224, 227, 228, 240, 245, 252, 277], "intens": [121, 122, 145, 148], "intent": [18, 43, 61, 62, 104, 244], "intent_in": 43, "intent_out": 43, "intention": 62, "interact": [0, 11, 14, 26, 34, 62, 76, 89, 96, 98, 143, 173, 191, 195, 201, 202, 223, 231, 247, 254, 267, 275, 280, 282, 283, 287, 288], "interactive_travers": 10, "interactiveconsol": [90, 191], "interchang": [11, 58, 61, 87, 227], "interconnect": [109, 112, 120], "interest": [12, 14, 20, 22, 25, 31, 58, 62, 64, 67, 68, 78, 87, 89, 98, 102, 127, 128, 176, 181, 195, 198, 202, 206, 207, 208, 210, 218, 221, 223, 224, 229, 230, 243, 244, 261, 278, 281, 283, 284, 285, 288], "interf": 230, "interfac": [3, 7, 11, 26, 41, 62, 90, 120, 145, 171, 191, 195, 201, 204, 209, 230, 243, 244], "interfer": [18, 211], "interfram": [120, 190], "interior": [78, 207, 219], "interior_angl": 78, "intermedi": [11, 43, 44, 85, 93, 120, 126, 128, 133, 137, 160, 170, 178, 179, 186, 190, 194, 230, 244, 285], "intern": [4, 10, 11, 12, 18, 19, 24, 41, 43, 44, 53, 62, 65, 66, 67, 70, 78, 79, 82, 94, 98, 102, 106, 108, 110, 128, 140, 149, 170, 171, 181, 198, 200, 202, 203, 205, 207, 209, 211, 221, 223, 226, 227, 228, 229, 230, 231, 235, 237, 240, 244, 246, 249, 274, 283, 287], "internal_forc": 108, "internet": 5, "interpol": [41, 67, 71, 143, 204, 207], "interpolating_poli": [70, 207], "interpolating_splin": 70, "interpret": [12, 19, 29, 31, 43, 53, 61, 62, 67, 68, 70, 75, 78, 89, 93, 95, 98, 102, 104, 116, 181, 197, 199, 206, 207, 211, 218, 224, 229, 230, 231, 236, 242, 243, 246, 252, 284], "interrog": 30, "interrupt": 242, "intersect": [6, 18, 26, 41, 42, 53, 72, 73, 75, 76, 77, 78, 79, 98, 149, 198, 207, 211, 217, 218, 219, 230], "intersecting_product": 65, "intersection_": 219, "interspers": 198, "interv": [22, 24, 26, 29, 39, 41, 53, 62, 66, 68, 70, 71, 72, 75, 78, 87, 89, 92, 102, 162, 171, 200, 202, 204, 206, 207, 214, 217, 219, 226, 230, 231, 289], "interval_": 219, "intgrl": 66, "intim": 198, "intiuit": 98, "intm": 93, "intp": 43, "intpoli": 89, "intqubit": [161, 170], "intqubitbra": 170, "intransit": 53, "intrins": [35, 43], "intrinsic_imped": 147, "introduc": [10, 19, 25, 58, 61, 62, 70, 87, 98, 103, 106, 126, 128, 133, 134, 135, 139, 176, 181, 195, 202, 203, 207, 208, 211, 218, 221, 224, 231, 247, 274, 281, 284, 286, 288], "introduct": [7, 10, 17, 53, 54, 67, 70, 200, 202, 204, 205, 207, 211, 224, 227, 230, 264, 271, 281, 287], "introductori": [12, 16, 32, 33, 143, 201, 202, 207], "introspect": 143, "intstep": 89, "intt": 65, "inttyp": 43, "intuit": [62, 181, 227], "inv": [16, 27, 54, 94, 98, 120, 121, 128, 133, 134, 143, 165, 200, 227], "inv_can_transf_matrix": 178, "inv_method": [120, 121], "inv_mod": 98, "inv_perm": 54, "inv_trig_styl": 211, "invalid": [7, 12, 31, 62, 63, 104, 128, 201, 204, 219], "invari": [7, 10, 20, 53, 58, 109, 112, 196, 202, 206, 207, 221, 227], "invent": [63, 206, 229, 282], "inver": 208, "invers": [6, 27, 29, 35, 53, 54, 62, 63, 64, 70, 89, 95, 98, 102, 120, 121, 165, 169, 170, 173, 178, 181, 198, 199, 200, 202, 204, 207, 208, 211, 213, 221, 223, 227, 229, 230, 231, 249, 284, 288], "inverse_adj": [98, 284], "inverse_block": 98, "inverse_ch": 98, "inverse_cosine_transform": 89, "inverse_fourier_transform": 89, "inverse_funct": 70, "inverse_g": [98, 284], "inverse_gaussian_distribut": 231, "inverse_hankel_transform": 89, "inverse_laplace_transform": 89, "inverse_ldl": 98, "inverse_lu": [98, 284], "inverse_mellin_transform": 89, "inverse_mobius_transform": 65, "inverse_qr": 98, "inverse_sine_transform": 89, "inverse_trigonometric_funct": 68, "inversecosinetransform": 89, "inverseerf": [70, 211], "inverseerf2": 70, "inverseerfc": [70, 211], "inversefouriertransform": 89, "inversegaussiandistribut": 231, "inversehankeltransform": 89, "inverselaplacetransform": 89, "inversemellintransform": 89, "inversesinetransform": 89, "inversetrigonometricfunct": 20, "inversion_vector": 54, "invert": [16, 27, 31, 39, 62, 63, 93, 95, 98, 112, 130, 178, 199, 201, 202, 206, 207, 227, 229, 230, 237, 284], "invert_complex": 230, "invert_r": 230, "invertible_matrix": 39, "invertiblehandl": 39, "invertiblepred": 39, "investig": [54, 87, 196, 198, 221, 249, 280], "invok": [218, 242, 243], "involut": 249, "involv": [10, 12, 16, 18, 22, 24, 26, 38, 40, 53, 61, 62, 63, 67, 74, 75, 87, 89, 102, 112, 117, 121, 126, 155, 165, 171, 173, 183, 194, 195, 198, 199, 202, 204, 206, 207, 208, 212, 213, 218, 219, 220, 221, 223, 224, 227, 229, 232, 250, 288], "io": [3, 7, 90, 211, 250], "ioerror": 253, "ion": 224, "iosi": 63, "iota": [12, 211], "ip": [90, 164, 170, 191], "ip_doit": 168, "ipmnet": 227, "ipo": 237, "ipos1": 237, "ipos2": 237, "iproduct": 249, "ipython": [3, 6, 11, 12, 33, 90, 143, 191, 250, 255, 286, 287], "iqft": 169, "iren": [6, 70], "irrat": [18, 22, 39, 41, 62, 102, 201, 207, 211, 219, 282], "irrational_numb": [18, 39, 62], "irrationalhandl": 39, "irrationalpred": 39, "irreduc": [22, 199, 202, 204, 206, 207, 210, 231, 237, 288], "irreducibili": 207, "irregular": [95, 98], "irrelev": 67, "irrespect": [89, 224, 227, 252], "irrot": [192, 263], "irwin": 231, "is2pow": 102, "is_": [11, 20, 62], "is_2dlin": 197, "is_abelian": 53, "is_abelian_numb": 48, "is_above_fermi": [70, 176], "is_absolutely_converg": 61, "is_abund": 102, "is_add": [62, 230], "is_algebra": [18, 62, 202], "is_algebraic_expr": 62, "is_alias": 62, "is_alt_sym": [53, 60], "is_altern": 53, "is_amic": 102, "is_anf": 92, "is_anti_symmetr": 93, "is_below_fermi": [70, 176], "is_biprop": 112, "is_canon_bp": 237, "is_capit": 11, "is_clos": 219, "is_cnf": 92, "is_collinear": [74, 77], "is_commut": [18, 89, 165, 174, 249], "is_compar": [18, 62], "is_compat": 206, "is_compat_col": 206, "is_complex": [18, 62], "is_concycl": 77, "is_conserv": [187, 192, 259, 263], "is_consist": [178, 184], "is_const": 62, "is_converg": 61, "is_convex": [41, 78], "is_coplanar": 76, "is_cycl": 53, "is_cyclic_numb": 48, "is_cyclotom": [202, 207], "is_decreas": 41, "is_defici": 102, "is_deriv": [10, 62], "is_diagon": [93, 98], "is_diagonaliz": [93, 98], "is_dihedr": 53, "is_dimensionless": 178, "is_disjoint": 219, "is_dnf": 92, "is_echelon": [98, 284], "is_elementari": 53, "is_empti": [10, 18, 54], "is_equilater": 78, "is_euler_pseudoprim": 102, "is_even": [20, 50, 53, 54], "is_extended_neg": 18, "is_extended_nonneg": 18, "is_extended_nonposit": 18, "is_extended_posit": [18, 19], "is_extended_r": 18, "is_extra_strong_lucas_prp": 102, "is_field": [201, 202], "is_finit": [18, 62], "is_finite_set": 18, "is_float": 62, "is_full_modul": 198, "is_funct": 43, "is_gaussian_prim": 102, "is_groebn": 204, "is_ground": [202, 207], "is_group": [50, 53], "is_hermitian": [93, 98], "is_homogen": [202, 207], "is_hypergeometr": 61, "is_ident": [52, 54, 62], "is_increas": 41, "is_indefinit": 98, "is_inert": 206, "is_infinit": 18, "is_inject": 198, "is_int": 206, "is_integ": [11, 18, 20, 62, 188, 211, 236], "is_irr": 62, "is_irreduc": [202, 207], "is_isomorph": 198, "is_isoscel": 78, "is_iter": 219, "is_left_unbound": 219, "is_linear": [202, 207], "is_low": [93, 200], "is_lower_hessenberg": 93, "is_lucas_prp": 102, "is_matrix": [43, 211], "is_maxim": 198, "is_meromorph": 62, "is_mersenne_prim": 102, "is_minim": 204, "is_mon": [202, 207], "is_monomi": [202, 207], "is_monoton": 41, "is_mul": 62, "is_multivari": 207, "is_neg": [18, 20, 202], "is_negative_definit": 98, "is_negative_semidefinit": 98, "is_nilpot": [53, 98], "is_nilpotent_numb": 48, "is_nnf": 92, "is_nonneg": [18, 20, 202], "is_nonposit": 202, "is_nonzero": [18, 77], "is_norm": [53, 174], "is_nthpow_residu": 102, "is_numb": [11, 18, 62, 70, 89], "is_odd": 54, "is_on": [202, 207], "is_only_above_fermi": [70, 176], "is_only_below_fermi": [70, 176], "is_only_q_annihil": 176, "is_only_q_cr": 176, "is_open": 219, "is_palindrom": [102, 249], "is_parallel": [75, 76], "is_perfect": [53, 102], "is_perfect_squar": 10, "is_perpendicular": [75, 76, 77, 78], "is_pid": 202, "is_polycycl": 53, "is_polynomi": 62, "is_posit": [11, 18, 19, 20, 62, 188, 202], "is_positive_definit": 98, "is_positive_semidefinit": 98, "is_pow": [12, 43, 62, 68], "is_prefix": 183, "is_prim": [10, 18, 62, 198], "is_primari": 198, "is_primit": [53, 202, 207], "is_primitive_el": 62, "is_primitive_root": [63, 102], "is_princip": 198, "is_prop": 112, "is_proper_subset": 219, "is_proper_superset": 219, "is_pur": 35, "is_q_annihil": 176, "is_q_creat": 176, "is_quad_residu": 102, "is_quadrat": [202, 207], "is_r": 202, "is_rad": 198, "is_rat": [12, 18, 206, 249], "is_rational_funct": 62, "is_real": [11, 18, 20, 22, 26, 62, 64, 68, 69, 98, 188, 211, 236], "is_recurr": 231, "is_reduc": 204, "is_right": 78, "is_right_unbound": 219, "is_scalar_multipl": 77, "is_scalen": 78, "is_sequ": 249, "is_similar": [73, 75, 78, 79], "is_simpl": 70, "is_singleton": 54, "is_singular": [62, 69, 85], "is_solenoid": [187, 192, 259, 263], "is_solv": 53, "is_sqf": [202, 207], "is_squar": [10, 62, 93, 102], "is_stabl": 112, "is_strictly_decreas": 41, "is_strictly_increas": 41, "is_strictly_prop": 112, "is_strong_lucas_prp": 102, "is_strongly_diagonally_domin": 93, "is_subdiagram": 42, "is_subgroup": 53, "is_submodul": 198, "is_subset": [15, 219], "is_superset": 219, "is_surject": 198, "is_symbol": [43, 93], "is_symmetr": [53, 93], "is_tang": [72, 74], "is_this_zero": [4, 247], "is_transit": 53, "is_trivi": 53, "is_tru": [36, 38, 39], "is_unit": 202, "is_univari": 207, "is_up": 237, "is_upp": [93, 200], "is_upper_hessenberg": 93, "is_weakly_diagonally_domin": 93, "is_whole_r": 198, "is_zero": [4, 18, 20, 77, 98, 198, 202, 207, 247, 284], "is_zero_dimension": [207, 230], "is_zero_matrix": [18, 93, 200], "is_zero_quaternion": 35, "isdisjoint": 219, "isfinit": 62, "isign": 43, "isinst": [11, 15, 18, 20, 43, 62, 93, 95, 112, 201, 202, 211, 212, 223, 232, 235, 244, 283], "isint": 20, "isn": [10, 20, 29, 89, 116, 126, 230, 282], "isol": [5, 22, 41, 68, 202, 206, 207, 208, 229, 244], "isometri": 91, "isomorph": [45, 53, 56, 198, 201, 204, 206], "isomorphismfail": [204, 206], "isotrop": 177, "ispk": 63, "isposit": 19, "isprim": [10, 39, 63, 102], "isprimit": 62, "issac": [44, 89, 205, 229], "issn": 0, "issu": [4, 7, 9, 10, 11, 12, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 41, 61, 62, 79, 89, 92, 98, 103, 122, 136, 156, 193, 196, 205, 206, 208, 211, 219, 220, 229, 230, 242, 244, 246, 247, 249, 252, 273, 279, 280, 283, 288], "issubset": 219, "issuperset": 219, "ist": [205, 220], "istruehandl": 39, "istruepred": 39, "isuru": 0, "isympi": [2, 3, 11, 12, 90], "iszero": 284, "iszerofunc": [98, 284], "ital": [7, 211], "italic": 7, "ite": 211, "item": [6, 7, 11, 12, 14, 22, 29, 43, 51, 52, 54, 62, 67, 73, 79, 93, 98, 102, 121, 197, 201, 204, 207, 211, 219, 227, 228, 231, 242, 243, 246, 249, 250, 288], "iter": [11, 22, 25, 26, 27, 31, 41, 43, 51, 53, 54, 57, 58, 62, 63, 64, 65, 67, 70, 78, 92, 102, 117, 118, 120, 121, 122, 125, 140, 144, 161, 176, 190, 197, 198, 199, 200, 202, 204, 207, 211, 212, 213, 214, 217, 223, 224, 227, 229, 230, 231, 232, 235, 243, 244, 245, 246, 248, 250, 256, 261, 275], "iter_q_annihil": 176, "iter_q_cr": 176, "iterate_binari": 57, "iterate_graycod": 57, "itercoeff": 202, "itermax": 43, "itermonom": 202, "itermonomi": 207, "iterterm": 202, "itertool": [57, 249], "itex": 211, "ith": [54, 91, 102, 202, 208, 230, 231], "itii": 63, "its": [0, 3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 31, 35, 37, 38, 39, 42, 43, 44, 46, 50, 52, 53, 54, 61, 62, 63, 64, 67, 68, 70, 72, 74, 78, 80, 87, 89, 90, 92, 93, 95, 98, 102, 104, 105, 106, 108, 112, 116, 117, 120, 121, 123, 126, 128, 129, 130, 136, 137, 140, 141, 143, 144, 149, 155, 161, 162, 164, 165, 170, 171, 174, 176, 180, 181, 183, 186, 187, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 217, 218, 219, 223, 226, 227, 229, 230, 231, 233, 235, 236, 237, 242, 245, 246, 249, 250, 253, 256, 259, 260, 261, 263, 266, 282, 283, 284, 287, 288], "itself": [3, 4, 6, 7, 10, 11, 20, 39, 51, 53, 54, 60, 62, 64, 67, 68, 75, 79, 84, 102, 121, 125, 126, 141, 166, 173, 192, 194, 197, 198, 201, 204, 206, 207, 211, 219, 220, 223, 230, 235, 236, 237, 244, 246, 249, 265, 282], "iv": [70, 208], "ivan": 204, "ivanov": 0, "iverson": 20, "iwf11": 128, "iwf22": 128, "iwr11": 128, "iwr22": 128, "ixi": [123, 186], "ixx": [117, 123, 186], "ixz": 186, "iy_": 70, "iyi": [123, 186], "iyz": [123, 186], "iz": 70, "izx": 123, "izz": [123, 186], "i\u2080": 148, "j": [0, 7, 12, 35, 39, 41, 43, 44, 48, 52, 53, 54, 58, 60, 61, 63, 64, 66, 67, 70, 84, 87, 89, 91, 93, 95, 98, 102, 110, 113, 120, 141, 142, 143, 148, 155, 156, 173, 176, 181, 185, 192, 196, 198, 200, 202, 204, 205, 206, 207, 208, 210, 211, 213, 219, 221, 223, 224, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 243, 249, 256, 258, 259, 260, 261, 262, 263, 265, 266], "j1": [120, 129, 131, 155, 173], "j12": [155, 173], "j13": 155, "j2": [120, 129, 131, 155, 173], "j23": 155, "j24": 155, "j2op": 173, "j3": [129, 131, 155, 173], "j34": 155, "j4": 155, "j_": [67, 70, 87, 89, 173, 213, 221, 282], "j_0": 156, "j_1": [67, 155, 156, 173, 196, 213, 232], "j_2": [67, 155, 156, 173, 196, 213], "j_3": [155, 173, 196], "j_4": [173, 196], "j_5": 196, "j_6": 196, "j_7": 196, "j_8": 196, "j_9": 196, "j_m": 232, "j_n": [70, 173], "j_y": 196, "j_z": 196, "ja": 101, "jacobi": [89, 102, 114, 207, 211], "jacobi_norm": 70, "jacobi_poli": [70, 207], "jacobi_polynomi": 70, "jacobi_rul": 89, "jacobi_symbol": [63, 102], "jacobian": [64, 98, 140, 229], "jacobian_determin": 64, "jacobian_matrix": 64, "jacobip": [70, 211], "jacobipolynomi": 70, "jakob": 207, "jame": [63, 204], "jan": [0, 63], "jane": 44, "januari": 102, "jason": [0, 211], "java": 12, "javascript": 287, "javascriptcodeprint": 211, "jax": [3, 103, 250], "jburkardt": 89, "jc": 105, "jcoupl": 173, "jcoupling_list": 173, "jean": 89, "jeffrei": [98, 223], "jen": 196, "jensen": 43, "jerom": 249, "jeromekelleh": 249, "jewett": 102, "ji": [98, 233], "jim": 142, "jit": [3, 220], "jj": 173, "jk": 0, "jku": [84, 227, 256], "jl": [205, 244], "jlname": 244, "jm": 173, "jn": [68, 70, 173, 207, 211, 282], "jn_zero": 70, "jnp": 103, "job": [16, 20, 54, 156, 208, 211], "joel": 227, "johansson": 0, "john": [44, 53, 70, 207, 224, 227], "johndcook": 67, "johnson": [54, 98], "joi": 42, "join": [12, 24, 54, 62, 63, 75, 93, 105, 106, 211, 223, 227, 229, 232, 249, 253], "joint": [108, 119, 129, 131, 136, 273], "joint1": 129, "joint2": 129, "joint3": 129, "joint_axi": [10, 120, 129, 131, 137], "joint_distribut": 231, "joint_point": 120, "joint_rv_typ": 231, "jointdistributionhandmad": 231, "jointli": 18, "jointrv": 231, "jointsmethod": [120, 129, 131], "jon": 102, "jone": [102, 148], "jones_2_stok": 148, "jones_calculu": 148, "jones_vector": 148, "jordan": [27, 87, 93, 98, 209, 227, 229, 230], "jordan_block": [93, 98], "jordan_cel": 98, "jordan_form": 98, "jordan_matrix": [93, 227], "jordan_normal_form": 227, "joseph": [113, 205], "josephu": 54, "josephus_problem": 54, "josi": 63, "joul": 181, "journal": [0, 6, 35, 61, 67, 102, 113, 205, 223, 246, 249], "joyofcat": 42, "jpg": 253, "jpr2718": 224, "jr": 70, "js_function_str": 211, "jscode": [43, 211], "jth": [91, 230], "judgement": 7, "juli": [63, 224], "julia": 244, "julia_cod": [43, 211], "juliacodegen": 244, "juliacodeprint": 211, "juliu": 63, "jump": [231, 288], "june": [63, 98], "jupyt": [3, 11, 20, 250], "jurjen": 211, "just": [2, 4, 6, 7, 10, 11, 12, 18, 19, 20, 24, 26, 29, 33, 39, 42, 43, 53, 60, 62, 63, 64, 68, 85, 87, 89, 90, 91, 92, 98, 102, 103, 114, 116, 117, 123, 126, 130, 134, 140, 141, 143, 156, 161, 166, 176, 181, 185, 191, 192, 194, 198, 200, 201, 202, 204, 206, 210, 211, 218, 219, 220, 221, 223, 227, 230, 232, 240, 242, 244, 245, 247, 262, 263, 265, 277, 278, 280, 281, 282, 283, 284, 288, 289], "just_gen": 206, "justifi": 204, "juxtaposit": [141, 185, 260], "jx": 173, "jxbra": 173, "jxbracoupl": 173, "jxket": 173, "jxketcoupl": 173, "jy": 173, "jybra": 173, "jybracoupl": 173, "jyket": 173, "jyketcoupl": 173, "jyr2000": 196, "jz": 173, "jzbra": 173, "jzbracoupl": 173, "jzket": 173, "jzketcoupl": 173, "jzop": 173, "k": [0, 7, 12, 14, 18, 20, 25, 35, 41, 42, 43, 44, 46, 48, 52, 53, 56, 57, 60, 61, 62, 63, 65, 66, 67, 68, 70, 80, 87, 89, 92, 93, 95, 98, 102, 120, 121, 131, 138, 140, 141, 143, 150, 164, 165, 168, 172, 174, 176, 185, 192, 196, 198, 200, 201, 204, 205, 206, 207, 208, 211, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 227, 229, 231, 232, 233, 235, 236, 237, 238, 242, 246, 249, 256, 258, 259, 260, 261, 262, 263, 265, 266, 287, 288], "k0": [174, 202, 204, 231], "k1": [102, 143, 174, 201, 202, 204], "k2": [102, 143, 201], "k3": [143, 201], "k3d": 10, "k4": 143, "k_": [70, 87, 121, 138, 139], "k_0": 204, "k_1": [63, 102, 204, 221], "k_2": 63, "k_3": 63, "k_arrai": 52, "k_b": 29, "k_d": [121, 138], "k_dnh": 121, "k_f": 29, "k_i": [102, 204, 221], "k_j": 221, "k_kqdot": 121, "k_ku": 121, "k_m": 102, "k_n": [63, 70, 204], "k_sym": 67, "k_u": 221, "k_val": 29, "k_y": 91, "ka": 0, "kahan": 113, "kahane_simplifi": 113, "kalkbrenn": 229, "kaltofen": [204, 205], "kaltofen98": 205, "kane": [116, 119, 120, 126, 132, 136, 137, 142, 143, 185, 186, 256, 273], "kane1983": [142, 195], "kane1985": [134, 138, 141, 142], "kanes_equ": [121, 126, 128, 130, 133, 134, 138, 140, 143], "kanesmethod": [10, 120, 121, 126, 128, 129, 130, 131, 133, 134, 137, 138, 140, 143], "kappa": [12, 196, 211, 231], "kapur": 205, "kapur1994": 205, "karr": 61, "kasiski": 63, "katmat": 42, "kauer": 216, "kb": 29, "kbin": 249, "kconrad": [53, 231], "kd": [121, 128, 133, 134, 138], "kd_eq": [121, 126, 128, 129, 130, 133, 134, 140, 143], "kdd": [128, 133, 134], "kde": [120, 129, 130, 137, 140], "kdvi": 211, "ke": 143, "keep": [4, 6, 12, 15, 20, 58, 62, 63, 66, 67, 70, 87, 98, 121, 129, 137, 141, 160, 176, 197, 200, 201, 202, 207, 218, 219, 221, 223, 227, 229, 232, 237, 265, 278, 283], "keep_only_fully_contract": 176, "kei": [10, 11, 12, 14, 22, 24, 36, 39, 42, 51, 53, 54, 62, 63, 64, 67, 78, 91, 93, 98, 101, 102, 105, 125, 126, 168, 171, 176, 195, 197, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 223, 227, 228, 229, 231, 235, 246, 249, 250, 252, 284, 285, 288], "kelleh": 249, "kelli": [87, 221], "kempf": 198, "kepler": [179, 256], "kept": [64, 178, 195, 249, 283], "ker": 198, "kern": 62, "kernel": [98, 198, 204, 206, 229], "ket": [159, 164, 165, 166, 168, 170, 171, 174, 176], "ket_not": 174, "ketbas": [164, 165, 171, 174], "key1": 197, "key2": 197, "key2bound": 98, "key2ij": 98, "keyboard": 197, "keyboardinterrupt": 242, "keyfunc": 249, "keyword": [0, 4, 6, 10, 11, 14, 20, 42, 43, 44, 53, 54, 62, 63, 66, 67, 75, 77, 78, 79, 93, 98, 102, 105, 110, 112, 121, 138, 139, 170, 176, 191, 197, 199, 201, 202, 204, 206, 207, 210, 211, 212, 218, 223, 224, 229, 236, 242, 243, 245, 247, 250, 252, 261, 284], "kf": 29, "kfkljjhf5mmmktfrgpl": 63, "kg": [181, 266], "kid": 63, "kid_rsa_private_kei": 63, "kid_rsa_public_kei": 63, "kiev": 205, "kijml": 233, "kill": [198, 202, 242], "killable_index": [70, 176], "killed_modul": 198, "kilo": 182, "kilogram": [147, 179, 181, 183], "kilomet": [180, 182, 183], "kin_explicit_rh": [125, 144], "kind": [6, 7, 10, 11, 17, 18, 19, 20, 42, 43, 64, 67, 70, 82, 89, 93, 105, 108, 121, 126, 139, 180, 192, 199, 201, 202, 207, 212, 213, 219, 227, 228, 231, 249, 263, 265, 278, 288], "kindiff": 143, "kindiffdict": [121, 128, 133, 134, 138, 143], "kinema": 125, "kinemat": [116, 120, 121, 125, 126, 128, 129, 130, 131, 133, 135, 137, 138, 140, 141, 143, 144, 186, 189, 193, 195, 273], "kinet": [29, 117, 121, 123], "kinetic_energi": [117, 123, 141, 143], "kirpichev": 0, "kite": 78, "kk": 98, "kleen": 249, "klein": [45, 54], "km": [98, 102, 116, 121, 128, 130, 133, 134, 138, 140, 143, 182], "kn": [98, 105, 106], "knew": [62, 288], "knife": 207, "knot": 70, "know": [4, 6, 7, 10, 11, 12, 18, 19, 20, 22, 29, 30, 31, 36, 38, 42, 45, 54, 62, 63, 66, 74, 79, 87, 89, 98, 102, 123, 126, 144, 170, 174, 178, 179, 181, 185, 186, 194, 195, 197, 207, 208, 210, 211, 221, 223, 227, 229, 230, 231, 245, 249, 250, 261, 277, 278, 280, 281, 282, 283, 286, 288], "knowabl": 18, "knowledg": [11, 61, 62, 63, 206, 227, 283, 286], "known": [6, 11, 18, 19, 20, 29, 38, 42, 43, 44, 45, 51, 53, 54, 62, 63, 66, 67, 70, 72, 75, 80, 87, 89, 90, 99, 102, 110, 112, 113, 115, 117, 123, 140, 179, 186, 194, 200, 201, 202, 206, 207, 211, 214, 217, 219, 220, 221, 223, 226, 227, 228, 229, 231, 249, 250, 256, 263, 265, 288], "known_const": 211, "known_fcns_src1": 211, "known_fcns_src2": 211, "known_funct": 211, "known_functions_c89": 211, "known_functions_c99": 211, "known_typ": 211, "knuth": [46, 54, 246], "koepf": [205, 213, 223], "koepf98": [205, 207], "kog": 249, "koshi": 102, "kozen": [6, 205], "kozen89": [6, 204, 205], "kreher": 54, "kroneck": [70, 175, 176, 196, 232, 237], "kronecker_delta": [70, 176], "kroneckerdelta": [70, 95, 176, 211, 223], "kroneckerproduct": 211, "kroneckersimp": 223, "krypto": 63, "ksubset": 57, "kt": [63, 131], "kth": [93, 102], "ku": [138, 211], "kulal": 0, "kumar": [0, 230], "kumaraswami": 231, "kumaraswamy_distribut": 231, "kummer": 206, "kurtosi": 231, "kutta": [11, 84], "kw": 242, "kw_arg": [46, 56, 176, 236, 237], "kwarg": [5, 12, 37, 38, 39, 43, 53, 54, 61, 62, 63, 64, 68, 70, 72, 73, 75, 76, 77, 78, 79, 84, 87, 89, 93, 94, 95, 96, 98, 100, 101, 110, 112, 118, 121, 130, 145, 154, 156, 160, 161, 165, 167, 169, 170, 172, 173, 174, 186, 190, 191, 197, 200, 202, 207, 211, 213, 217, 218, 219, 223, 227, 228, 229, 231, 232, 233, 237, 242, 243, 245, 252, 261], "kwong": 205, "l": [6, 10, 12, 41, 42, 43, 44, 51, 53, 54, 61, 63, 70, 73, 74, 75, 76, 77, 79, 80, 85, 87, 89, 91, 94, 95, 98, 102, 105, 106, 112, 114, 120, 121, 123, 125, 126, 129, 130, 131, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 174, 177, 178, 179, 181, 194, 195, 196, 198, 200, 202, 204, 205, 211, 213, 214, 220, 221, 224, 227, 229, 231, 235, 236, 237, 238, 242, 244, 249, 266, 288], "l0": 204, "l1": [63, 72, 74, 75, 120, 123, 129, 141, 202, 204, 207, 224, 231], "l1_norm": [202, 207], "l2": [63, 74, 75, 120, 123, 129, 162, 178, 202, 204, 231], "l2_norm_squar": 202, "l3": [75, 129, 204], "l3_convfunc": 41, "l4": [75, 129], "l_": [10, 89, 98, 196], "l_0": [67, 113, 237, 238], "l_1": [63, 67, 113, 196, 221, 237, 249], "l_2": 196, "l_3": 196, "l_b": 141, "l_frame": 120, "l_i": [63, 196, 221], "l_m": 249, "l_n": [70, 89, 207], "l_p": 141, "l_t": 63, "l_u": 221, "l_v": 221, "la": [53, 143, 181], "labahn": 205, "label": [6, 29, 42, 43, 56, 62, 72, 85, 89, 108, 149, 156, 160, 165, 174, 176, 197, 211, 212, 214, 223, 236, 237, 287], "label_displac": 42, "label_posit": 42, "labeledtre": 56, "labelfunc": 211, "lack": [31, 43, 64, 66, 123, 211, 278], "lag": [130, 135, 140], "lag_eq": [130, 140], "lagrang": [41, 62, 119, 120, 132, 136, 207, 224, 273], "lagranges_equ": 121, "lagrangesmethod": [120, 121, 130, 135, 139, 140], "lagrangian": [41, 121, 123, 130, 135, 139, 140], "laguerr": [89, 207, 211], "laguerre_poli": [70, 207], "laguerre_polynomi": 70, "laguerre_rul": 89, "laguerrel": [70, 211], "laguerrel3": 70, "laguerrepolynomi": 70, "laguna": 63, "lai": 42, "laid": [42, 126, 173], "laigl": 102, "lam": [121, 122, 144], "lam1": 139, "lam_f": [28, 250], "lam_op": 130, "lamar": 227, "lambda": [11, 12, 20, 24, 28, 37, 38, 41, 43, 53, 54, 62, 63, 64, 68, 89, 93, 94, 95, 98, 101, 102, 104, 126, 139, 140, 143, 144, 161, 197, 204, 206, 207, 211, 212, 219, 220, 223, 227, 229, 230, 231, 232, 240, 249, 250, 256, 258, 261, 277, 284], "lambda_": 87, "lambda_c": [87, 139], "lambda_i": [186, 256, 258], "lambda_not": 104, "lambda_x": [186, 256, 258], "lambda_z": [186, 256, 258], "lambdaprint": 250, "lambdarepr": [43, 211, 250], "lambdastr": 250, "lambdifi": [11, 20, 28, 29, 43, 70, 128, 211, 229, 243, 248, 275, 279], "lambert": [31, 68, 89, 208], "lambert_w_funct": 68, "lambertw": [68, 208, 211, 229, 230, 289], "lambidfi": 10, "lamda": [11, 95, 211, 219, 231, 284], "lame": 263, "lamina": 266, "lanczo": 214, "land": 63, "landau": [6, 205, 278], "landscap": 54, "langl": [44, 53, 155, 196], "languag": [3, 7, 11, 12, 16, 20, 43, 68, 98, 104, 116, 126, 143, 211, 216, 231, 243, 244, 280, 282, 284, 286, 288], "laplac": [89, 109, 110, 112, 231], "laplace_distribut": 231, "laplace_transform": [89, 112], "laplacedistribut": 231, "laplacetransform": 89, "larg": [3, 4, 6, 12, 18, 22, 27, 53, 54, 62, 63, 72, 87, 89, 101, 102, 116, 122, 140, 143, 156, 181, 185, 196, 201, 202, 204, 207, 210, 211, 212, 218, 221, 223, 231, 236, 243, 250, 252, 259, 277, 282, 288], "larger": [4, 7, 11, 20, 27, 43, 53, 54, 61, 62, 63, 70, 87, 95, 98, 102, 130, 134, 200, 202, 208, 212, 218, 223, 229, 244, 246, 280, 288], "largest": [43, 54, 56, 62, 68, 70, 98, 101, 102, 156, 198, 202, 229, 249], "lasserr": 89, "last": [7, 8, 10, 12, 14, 15, 16, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 36, 37, 38, 42, 43, 44, 52, 53, 54, 58, 61, 62, 63, 66, 72, 89, 92, 93, 94, 95, 96, 98, 100, 101, 102, 104, 112, 125, 148, 180, 181, 196, 197, 198, 199, 201, 202, 204, 207, 210, 211, 218, 219, 224, 227, 229, 230, 231, 232, 233, 237, 240, 242, 243, 244, 245, 247, 249, 250, 252, 278, 280, 283, 284], "last_index": 95, "lastli": [12, 89, 106, 144, 227], "later": [4, 10, 16, 43, 53, 87, 92, 93, 116, 122, 123, 128, 130, 131, 138, 140, 141, 143, 150, 185, 194, 201, 204, 210, 211, 212, 221, 223, 227, 246, 260, 277, 278, 280, 282, 283, 288], "latest": [3, 5, 33, 42, 245, 247, 250], "latex": [0, 1, 3, 6, 11, 20, 31, 33, 70, 90, 185, 186, 191, 195, 197, 202, 211, 282, 283], "latex2sympi": 104, "latex_mod": [90, 191], "latex_print": [90, 191], "latex_repr": [182, 183], "latex_scalar": 256, "latex_set": 211, "latex_vect": 256, "latexmk": 1, "latexnam": 156, "latexparsingerror": 104, "latexprint": 20, "latin": 34, "latter": [10, 15, 20, 43, 53, 62, 67, 70, 87, 102, 198, 202, 206, 211, 221, 224, 237, 244, 249, 250, 280], "lattic": [65, 200, 224], "lattice_": 68, "latu": 72, "latus_rectum": 72, "lauer": 202, "laurent": [70, 202, 208, 227], "law": [11, 42, 136, 179, 195, 199], "layer": [10, 112, 204, 250], "layout": 42, "lazard": [89, 204, 207], "lazi": [62, 95, 207], "lazili": [95, 217, 249], "lazo": 196, "lb": [43, 84, 246], "lbound": 43, "lc": [202, 204, 207], "lceil": 87, "lcim": 41, "lcm": [62, 102, 202, 204, 207, 211], "lcm_list": 207, "ld": 42, "ldescent": 224, "ldl": [94, 98], "ldldecomposit": [94, 98], "ldlsolv": [94, 98], "ldot": [20, 25, 44, 52, 53, 61, 62, 63, 67, 70, 87, 102, 106, 181, 196, 198, 199, 202, 204, 206, 211, 214, 218, 221, 224, 229, 232, 288], "ldu": 95, "ldudecomposit": 95, "le": [18, 44, 58, 62, 70, 87, 93, 102, 135, 204, 221, 231], "lead": [10, 11, 18, 19, 20, 22, 31, 61, 62, 68, 72, 89, 92, 98, 102, 114, 122, 160, 186, 195, 199, 202, 204, 206, 207, 208, 211, 218, 220, 223, 227, 230, 244, 247, 252, 281, 288], "leader": 102, "leading_expon": 52, "leading_expv": 202, "leading_monom": 202, "leading_term": 202, "leadterm": 62, "leadup": 102, "leaf": [11, 201, 211, 220, 283], "lean": [128, 133, 135], "learn": [1, 3, 5, 7, 23, 29, 31, 98, 141, 195, 220, 230, 277, 280, 281, 282, 286], "least": [3, 4, 7, 10, 14, 18, 29, 39, 41, 43, 53, 62, 68, 74, 86, 87, 89, 98, 102, 103, 121, 156, 170, 178, 180, 198, 199, 201, 202, 204, 206, 207, 218, 220, 223, 227, 229, 230, 231, 244, 288], "least_rot": 249, "leav": [11, 18, 20, 28, 30, 43, 62, 89, 98, 102, 122, 136, 160, 176, 218, 246, 277, 283, 288], "lebesgu": 219, "leblond": 181, "lect1023big": 231, "lectur": [143, 205, 231], "lecture4_6up": 231, "led": 0, "leedham": 53, "left": [4, 7, 10, 16, 18, 20, 23, 24, 27, 35, 41, 43, 44, 53, 54, 58, 62, 63, 64, 67, 68, 70, 78, 79, 85, 87, 89, 90, 92, 93, 98, 101, 102, 112, 117, 125, 141, 148, 155, 160, 164, 165, 168, 173, 186, 192, 196, 197, 198, 200, 207, 208, 209, 210, 211, 213, 214, 218, 219, 220, 221, 223, 227, 228, 229, 230, 231, 242, 243, 244, 246, 249, 263, 278, 282, 284, 288], "left_eigenvect": 98, "left_hand_sid": 43, "left_open": 219, "leftmost": 176, "leftrightarrow": 58, "leftslash": 211, "leg": 78, "legaci": [62, 89, 98, 231], "legacy_matrix": [10, 89], "legal": 178, "legend": [29, 143, 197, 214], "legendr": [89, 102, 207, 211, 224], "legendre_poli": [70, 207], "legendre_polynomi": 70, "legendre_rul": 89, "legendre_symbol": 102, "legendrep": [70, 211], "legendrep2": 70, "legendrepolynomi": 70, "legibl": 202, "legitim": 204, "legrang": 224, "lehmer": 54, "lehmer_cod": 54, "lemaitr": 196, "lemma": [42, 53, 87, 199], "len": [41, 50, 51, 52, 53, 54, 58, 60, 62, 63, 67, 70, 77, 87, 92, 130, 145, 149, 160, 170, 207, 223, 227, 236, 249], "len1": 53, "len2": 53, "len3": 53, "len_i": [43, 211], "length": [6, 10, 35, 43, 46, 52, 53, 54, 56, 60, 62, 63, 65, 67, 68, 70, 71, 75, 77, 78, 79, 92, 93, 98, 101, 102, 105, 106, 116, 121, 125, 129, 130, 131, 141, 145, 149, 173, 178, 179, 180, 181, 186, 190, 195, 206, 207, 211, 217, 221, 223, 227, 231, 242, 243, 249, 252, 256, 258, 266], "lengthen": 4, "lengthi": 53, "lenic": [81, 83], "lens": 145, "lens_formula": 149, "lens_makers_formula": 149, "lenstra": [102, 200], "leq": [53, 61, 63, 70, 87, 98, 102, 196, 204, 206, 217, 218, 224, 231], "lerch": 70, "lerch_transcend": 70, "lerchphi": [70, 211], "less": [6, 7, 11, 16, 22, 25, 27, 35, 39, 43, 44, 45, 53, 54, 61, 62, 63, 66, 67, 68, 70, 76, 77, 78, 93, 98, 102, 110, 112, 126, 128, 176, 201, 204, 206, 207, 220, 221, 223, 224, 227, 229, 230, 231, 242, 244], "lesser": [54, 108, 207], "lessthan": [62, 211], "lester": 63, "let": [16, 18, 19, 20, 41, 43, 53, 58, 62, 63, 72, 80, 85, 87, 91, 95, 98, 99, 102, 104, 117, 126, 143, 181, 186, 194, 198, 199, 200, 204, 206, 207, 208, 211, 218, 221, 223, 224, 227, 229, 230, 237, 240, 243, 247, 250, 261, 262, 266, 277, 280, 282, 283, 288], "lett": 54, "letter": [7, 11, 12, 34, 55, 62, 63, 102, 176, 211, 249, 278, 280], "lev": 202, "level": [4, 6, 7, 10, 11, 12, 18, 19, 24, 26, 43, 53, 60, 62, 68, 70, 89, 92, 98, 102, 116, 130, 143, 171, 176, 181, 185, 188, 195, 197, 200, 201, 209, 211, 220, 224, 230, 231, 235, 243, 244, 249, 283, 284, 286], "levelt": 229, "leverag": [29, 43, 103, 211], "levi": [64, 70, 231, 237], "levicivita": [70, 98], "levinson": [121, 142, 186, 256], "levydistribut": 231, "levyleblond77": 181, "lex": [62, 90, 191, 199, 201, 202, 204, 207, 208, 210, 211, 223], "lexic": [51, 156, 249], "lexicograph": [53, 54, 57, 58, 62, 204, 207, 249], "lexicographically_minimal_string_rot": 249, "lexograph": [90, 191], "lexord": [202, 207], "lfloor": [68, 202, 230, 231], "lfortran": [3, 104], "lfsr": 63, "lfsr_autocorrel": 63, "lfsr_connection_polynomi": 63, "lfsr_sequenc": 63, "lgamma": 211, "lh": [10, 14, 24, 29, 43, 52, 62, 209, 211, 227, 229, 230, 262], "li": [67, 70, 78, 89, 102, 176, 211, 266], "liabl": [62, 92], "liao": 205, "liao95": [204, 205], "lib": 256, "liber": [104, 116, 282], "liberato": 196, "liberatodebrito82": 196, "libgtkmathview": 211, "librari": [0, 3, 4, 6, 10, 11, 18, 20, 28, 32, 33, 43, 62, 63, 67, 87, 89, 90, 98, 103, 116, 126, 143, 180, 197, 201, 202, 231, 242, 243, 244, 249, 250, 277, 280, 281, 282], "library_dir": 243, "librsvg": 1, "librsvg2": 1, "libtcc": 244, "licens": [0, 1, 3, 282], "lie": [22, 54, 64, 76, 77, 78, 207, 231, 267, 274], "lie_algebra": 91, "lie_group": 227, "lie_heuristic_abaco1_product": 227, "lie_heuristic_abaco1_simpl": 227, "lie_heuristic_abaco2_similar": 227, "lie_heuristic_abaco2_unique_gener": 227, "lie_heuristic_abaco2_unique_unknown": 227, "lie_heuristic_bivari": 227, "lie_heuristic_chi": 227, "lie_heuristic_function_sum": 227, "lie_heuristic_linear": 227, "liealgebra": [3, 91], "liederiv": 64, "liegroup": 227, "lift": [43, 58, 68, 70, 87, 202, 204, 207], "light": [114, 148, 180, 181, 191, 198], "lighten": 198, "lightli": 4, "lightweight": [43, 206, 282], "like": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 15, 18, 19, 20, 27, 29, 30, 31, 32, 33, 43, 44, 45, 47, 53, 54, 61, 62, 63, 66, 67, 68, 70, 72, 82, 85, 89, 90, 92, 93, 95, 96, 97, 98, 102, 103, 104, 108, 112, 116, 120, 123, 126, 128, 137, 140, 141, 143, 144, 158, 160, 170, 171, 174, 175, 176, 180, 181, 185, 186, 190, 192, 194, 197, 198, 199, 201, 202, 203, 204, 206, 207, 209, 210, 211, 214, 218, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 240, 242, 243, 244, 245, 249, 250, 252, 253, 260, 261, 263, 265, 277, 278, 280, 281, 282, 283, 284, 288], "likelihood": 102, "likewis": [6, 18, 42, 105, 129, 130], "likin": [142, 193], "likins1973": [141, 193], "lim": [62, 218, 278], "lim_": [63, 68, 70, 87, 89, 218, 278, 282], "limit": [2, 4, 10, 12, 26, 27, 31, 33, 39, 41, 43, 61, 62, 64, 66, 67, 68, 70, 71, 74, 82, 84, 89, 90, 92, 98, 102, 110, 141, 165, 171, 174, 191, 197, 202, 204, 207, 208, 211, 214, 215, 217, 219, 223, 224, 226, 227, 228, 229, 231, 236, 243, 246, 249, 250, 252, 255, 256, 266, 268, 274, 279, 280, 282, 284], "limit_denomin": 62, "limit_seq": [216, 218], "limitinf": 218, "limiting_distribut": 231, "limits_": [62, 196, 213, 282], "limitseq": 216, "limsup_": 218, "linalg": [27, 28, 43], "lincomb": 206, "line": [4, 6, 10, 11, 12, 16, 18, 33, 42, 43, 45, 53, 54, 58, 63, 72, 73, 74, 76, 77, 78, 79, 84, 87, 89, 90, 91, 98, 102, 105, 110, 113, 126, 128, 134, 156, 186, 191, 192, 194, 196, 197, 211, 214, 221, 223, 227, 231, 232, 240, 242, 243, 244, 247, 250, 252, 263, 266, 274, 280], "line2d": [72, 75, 78], "line2dbaseseri": [10, 197], "line3d": [75, 76, 77], "line3dbaseseri": 197, "line_break": 211, "line_color": [7, 197, 214], "line_integr": 89, "linear": [14, 20, 23, 25, 27, 28, 31, 42, 43, 54, 61, 62, 63, 65, 66, 70, 75, 85, 87, 89, 91, 93, 95, 97, 105, 109, 112, 119, 120, 121, 123, 128, 130, 131, 136, 138, 142, 143, 148, 170, 173, 174, 190, 197, 198, 202, 204, 206, 207, 209, 217, 219, 221, 224, 227, 228, 229, 230, 249, 271, 273, 289], "linear_coeffici": 227, "linear_coefficients_integr": 227, "linear_differential_equ": 227, "linear_eq_to_matrix": [27, 227, 230], "linear_momentum": [123, 141, 143], "linear_ode_to_matrix": 227, "linear_polar": 148, "linearcoeffici": 227, "linearent": [6, 72, 75, 76, 77, 78], "linearentity2d": 75, "linearentity3d": [75, 76], "linearli": [39, 43, 70, 86, 98, 200, 204, 227, 229, 237], "linecollect": [10, 197], "lineover1drangeseri": [110, 197], "link": [4, 6, 7, 11, 12, 23, 27, 43, 63, 72, 78, 89, 113, 120, 129, 137, 243, 246, 247, 286], "link1": 129, "link2": 129, "link3": 129, "link4": 129, "linkag": [127, 136, 273], "linkcod": 7, "linodesolv": 227, "linodesolve_typ": 227, "linprog": 24, "linsolv": [143, 209, 229, 230, 289], "linspac": [29, 43, 85, 103, 126, 143], "linux": [1, 33], "linz": 256, "liouvil": 227, "liouville_integr": 227, "liouvillian": 227, "lip": 231, "list": [0, 3, 4, 6, 7, 13, 18, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 87, 89, 90, 91, 92, 93, 95, 98, 101, 102, 103, 104, 105, 112, 117, 120, 121, 125, 128, 130, 133, 137, 138, 139, 143, 144, 149, 160, 162, 165, 166, 170, 171, 173, 174, 176, 178, 186, 190, 195, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 242, 243, 244, 245, 246, 247, 249, 250, 252, 277, 281, 282, 284, 287, 288, 289], "list2numpi": 98, "list_can_dim": 178, "list_free_indic": 58, "list_of_poli": 85, "list_of_second_moments_of_area": 72, "list_of_trigonometric_ident": 220, "list_to_frac": 288, "list_visitor": 246, "listcoeff": 202, "listmonom": 202, "listofsolut": 227, "listterm": 202, "liter": [6, 12, 20, 43, 52, 62, 90, 92, 104, 176, 183, 223], "literal_dp": 43, "literal_sp": 43, "literatur": [6, 11, 87, 203, 274], "litter": 62, "littl": [18, 20, 42, 54, 72, 98, 102, 103, 128, 181, 200, 205, 207, 211, 221, 223, 231, 246, 260], "liu": 205, "live": [8, 34, 44, 143, 206, 224], "livehtml": 1, "ll": [1, 42, 60, 98, 130, 194, 195, 240], "ll1": 74, "ll2": 74, "ll3": 74, "ll4": 74, "ll5": 74, "ll6": 74, "lll": 200, "lll_transform": 200, "llvm": 3, "llvm_callabl": 3, "llvmjitcod": 3, "llvmlite": 3, "lm": [130, 139, 140, 204, 207], "lmm": 224, "lmn": 43, "lmodern": 1, "ln": [62, 68, 89, 211, 213, 227, 231, 288], "ln_notat": 211, "lnc": [89, 205, 229], "load": [1, 43, 62, 90, 105, 106, 108, 117, 120, 121, 125, 129, 131, 144, 156, 191], "load_vector": 105, "loan": 98, "lobatto": 89, "loc": 105, "local": [3, 34, 36, 37, 38, 62, 64, 87, 104, 133, 135, 188, 198, 204, 229, 242], "local_dict": 104, "local_var": 244, "localhost": 1, "localis": 198, "locat": [7, 10, 45, 54, 62, 76, 98, 102, 105, 106, 108, 120, 130, 137, 140, 144, 190, 192, 206, 207, 211, 223, 231, 245, 254, 256, 260, 262, 265], "locate_new": [256, 259, 260, 261, 262, 263], "locatenew": [10, 117, 123, 128, 130, 133, 134, 135, 140, 141, 143, 144, 187, 190, 192, 194], "location_matrix": 231, "lock": 35, "log": [6, 7, 12, 20, 33, 35, 41, 43, 53, 61, 62, 66, 67, 68, 70, 80, 84, 86, 87, 89, 93, 98, 102, 197, 202, 211, 213, 218, 221, 223, 227, 230, 231, 238, 278, 288, 289], "log10": [43, 211], "log1p": [43, 211], "log1p_opt": 43, "log2": [43, 70, 211], "log2_opt": 43, "log2const_opt": 43, "log_b": 230, "log_warn": 211, "logarithm": [7, 12, 35, 41, 43, 62, 63, 68, 87, 89, 98, 102, 202, 204, 208, 211, 221, 223, 230, 231, 279], "logarithmic_distribut": 231, "logarithmic_integr": 70, "logarithmically_concave_funct": 41, "logarithmically_convex_funct": 41, "logarithmicdistribut": 231, "logarithmicintegr": 70, "logcombin": [223, 227, 230], "loggamma": [6, 7, 70, 211], "loggammafunct": 70, "logic": [10, 11, 18, 20, 36, 37, 38, 39, 42, 62, 64, 87, 89, 102, 168, 170, 171, 175, 211, 213, 219, 227, 231, 249, 280, 281, 282, 284], "login": 205, "logint": 211, "logintegr": 211, "logist": 231, "logistic_distribut": 231, "logisticdistribut": 231, "loglogist": 231, "lognorm": 231, "lognormaldistribut": 231, "logx": [62, 218], "lomax": 231, "lomax_distribut": 231, "london": [205, 224], "long": [0, 6, 7, 8, 22, 31, 43, 54, 61, 62, 63, 65, 75, 87, 89, 90, 92, 98, 102, 105, 106, 128, 191, 207, 208, 211, 220, 221, 229, 231, 243, 250, 252, 259, 280, 283], "long_frac_ratio": 211, "longer": [4, 6, 12, 17, 62, 72, 102, 130, 140, 199, 204, 211, 220, 223, 249, 252, 280, 288], "longest": 249, "longrightarrow": 95, "look": [4, 6, 7, 10, 12, 18, 19, 20, 34, 42, 43, 53, 62, 67, 68, 70, 83, 98, 102, 121, 126, 128, 136, 160, 170, 171, 174, 190, 197, 201, 202, 206, 211, 213, 214, 218, 221, 223, 224, 227, 228, 233, 242, 246, 250, 252, 261, 278, 283, 286, 287], "looking_for": 43, "lookup": [89, 98, 102, 221], "lookup_view": 254, "loop": [22, 25, 29, 42, 43, 102, 112, 129, 186, 197, 208, 211, 227, 246, 249, 283], "looping_end": 42, "looping_start": 42, "loos": [43, 62], "lopen": [41, 62, 219, 226, 231], "lorentz": 237, "lorentzindex": 113, "lorenz": 29, "lose": [12, 198], "loss": [11, 43, 87, 176, 243, 262], "lost": 62, "lot": [10, 53, 62, 80, 87, 89, 98, 126, 143, 197, 210, 214, 224, 230, 242, 288], "loui": 213, "lovasz": 200, "lov\u00e1sz": 200, "lov\u00e1sz_lattice_basis_reduction_algorithm": 200, "low": [12, 18, 19, 43, 62, 63, 70, 102, 201, 204, 209, 211, 223, 243, 244, 249], "low_index_subgroup": 44, "lower": [6, 11, 18, 24, 39, 41, 43, 53, 54, 61, 62, 64, 70, 71, 73, 78, 79, 89, 93, 94, 95, 98, 110, 115, 120, 176, 190, 196, 198, 200, 202, 204, 207, 211, 220, 221, 223, 227, 236, 237, 246, 256, 278, 286], "lower_bob": 120, "lower_bound": [71, 72, 75, 78], "lower_central_seri": 53, "lower_incomplete_gamma_funct": 70, "lower_limit": [110, 278], "lower_polygon": 78, "lower_seg": 78, "lower_triangular": [39, 93], "lower_triangular_solv": [94, 98], "lowercas": [11, 12, 35, 227, 242, 278], "lowergamma": [6, 70, 231], "lowertriangularhandl": 39, "lowertriangularmatrix": 39, "lowertriangularpred": 39, "lowest": [16, 43, 53, 58, 102, 198, 213, 230], "lpart": 246, "lr": 198, "lrh": 135, "ls1": 59, "ls2": 59, "lseri": 62, "lsoda": 116, "lst": 242, "lt": [62, 207, 252], "ltd": 61, "lti": [109, 110], "ltrim": 207, "lu": [27, 95, 98, 200, 205], "lu_": 98, "lu_solv": [27, 98, 200], "luca": [67, 102, 211, 217], "lucas_numb": 67, "lucas_pseudoprim": 102, "lucasl": 211, "lucasnumb": 67, "lucaspseudoprim": 102, "lucien": 44, "lucki": 220, "lucombin": 98, "ludecomposit": [94, 95, 98, 284], "ludecomposition_simpl": [98, 284], "ludecompositionff": 98, "luiz": 197, "luke": [6, 70, 87, 221], "luke1969": [87, 221], "luschni": [67, 70, 207], "lusolv": [27, 94, 98, 120, 122, 140, 144, 229, 284], "lvert": 87, "lvovich": 7, "ly": [78, 98, 202], "l\u00e9vy": 181, "m": [0, 1, 10, 12, 16, 18, 20, 33, 35, 39, 43, 44, 50, 51, 53, 54, 58, 61, 62, 63, 64, 65, 67, 70, 72, 74, 78, 79, 87, 89, 91, 93, 94, 95, 96, 98, 99, 101, 102, 104, 105, 106, 108, 112, 114, 115, 117, 120, 121, 122, 123, 125, 126, 130, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 152, 159, 173, 174, 177, 179, 181, 192, 196, 198, 199, 200, 202, 204, 205, 206, 207, 208, 211, 212, 213, 214, 216, 217, 218, 219, 221, 223, 224, 227, 229, 230, 231, 232, 233, 236, 237, 243, 244, 246, 249, 251, 256, 259, 261, 265, 266, 278, 284, 287, 288, 289], "m0": [196, 237], "m1": [93, 98, 102, 105, 106, 147, 155, 173, 175, 179, 224, 227, 232, 237], "m11": [16, 231], "m12": [16, 231], "m13": 16, "m163": 63, "m2": [98, 102, 105, 106, 123, 147, 155, 173, 175, 179, 206, 224, 227, 232, 237], "m20": 45, "m21": [16, 231], "m22": [16, 231], "m23": 16, "m3": [98, 155, 224, 232], "m31": 16, "m32": 16, "m33": [16, 102], "m4": 224, "m4nzdu": 196, "m53": 102, "m_": [39, 139, 196, 204, 233], "m_0": [204, 224], "m_1": [67, 112, 155, 173, 196, 224], "m_2": [67, 125, 144, 155, 173, 196], "m_3": [125, 144, 155, 196], "m_d": 139, "m_i": [102, 196, 204], "m_ik": 102, "m_k": 67, "m_n": 204, "m_op": 140, "m_sqrt2": 211, "m_sqrt2l": 211, "m_tf": 112, "ma": [54, 61, 131], "ma217": 231, "macaulai": 70, "macdonald": 205, "machin": [1, 3, 5, 6, 212, 223, 227, 277], "machineri": [6, 62, 206, 250], "maclaurin": [61, 66], "made": [4, 7, 10, 11, 12, 18, 20, 30, 56, 58, 62, 63, 68, 71, 72, 75, 78, 79, 89, 92, 98, 102, 104, 126, 137, 140, 143, 195, 198, 202, 204, 206, 207, 211, 212, 218, 219, 220, 223, 227, 229, 230, 231, 244, 249, 252, 265, 283], "mag": 143, "magazin": 98, "magic": [54, 223, 242, 280], "magnet": [114, 147, 192, 265], "magnif": 149, "magnitud": [35, 43, 61, 62, 66, 70, 103, 105, 106, 108, 110, 130, 143, 174, 183, 186, 192, 195, 197, 256, 263, 265], "mai": [1, 3, 4, 5, 6, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 39, 41, 42, 43, 44, 45, 53, 54, 55, 61, 62, 63, 64, 66, 67, 68, 70, 72, 74, 75, 77, 78, 79, 87, 89, 90, 92, 93, 94, 98, 99, 101, 102, 104, 108, 118, 121, 122, 126, 130, 136, 140, 162, 171, 176, 177, 178, 180, 183, 186, 190, 192, 194, 197, 198, 199, 200, 204, 206, 210, 211, 212, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 240, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 263, 265, 277, 278, 280, 283, 284, 288, 289], "mail": [4, 10, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 211, 281], "main": [3, 5, 6, 7, 10, 12, 28, 38, 39, 43, 62, 68, 87, 93, 98, 101, 126, 134, 174, 191, 195, 197, 198, 202, 211, 218, 227, 230, 236, 243, 288, 289], "mainli": [53, 70, 98, 103, 181, 191, 204, 221, 224, 227], "maintain": [11, 12, 62, 63, 102, 106, 211, 219, 220, 227, 230, 246], "mainten": [4, 38], "major": [1, 3, 4, 7, 10, 22, 31, 72, 116, 236, 282, 288], "majorli": 62, "make": [1, 3, 4, 6, 7, 8, 10, 11, 12, 14, 16, 18, 19, 20, 22, 27, 28, 30, 34, 37, 38, 39, 41, 43, 44, 52, 53, 61, 62, 63, 64, 65, 66, 67, 68, 70, 74, 78, 89, 90, 92, 98, 101, 102, 103, 104, 105, 106, 108, 121, 125, 126, 128, 129, 133, 134, 138, 140, 141, 143, 156, 173, 178, 191, 194, 197, 200, 201, 202, 204, 206, 207, 208, 210, 211, 214, 219, 220, 221, 223, 227, 228, 229, 230, 235, 237, 240, 242, 243, 244, 245, 247, 249, 250, 260, 265, 266, 280, 281, 282, 283, 284, 288], "make_mod_elt": 206, "make_monic_over_integers_by_scaling_root": 207, "make_perm": 53, "make_routin": [43, 244], "makefil": 1, "man": [89, 205], "man93": [205, 207], "manag": [4, 33, 37, 38, 104, 156, 204, 223, 237, 240, 242, 247], "mandatori": [43, 211, 243], "mangl": 211, "mani": [3, 4, 6, 11, 12, 14, 16, 18, 19, 20, 22, 23, 24, 26, 28, 29, 31, 33, 41, 42, 43, 44, 50, 53, 58, 62, 63, 64, 66, 68, 70, 74, 87, 89, 92, 93, 98, 102, 103, 121, 122, 126, 128, 136, 139, 140, 143, 160, 176, 184, 195, 198, 200, 201, 202, 204, 206, 215, 218, 219, 221, 223, 224, 227, 228, 229, 230, 231, 235, 244, 249, 277, 278, 280, 281, 282, 283, 287, 288, 289], "manifest": [18, 199], "manifesto": 67, "manifold": [10, 64], "manipul": [3, 11, 15, 16, 18, 22, 25, 27, 29, 42, 43, 44, 53, 62, 68, 70, 87, 102, 103, 119, 126, 136, 141, 174, 194, 200, 201, 202, 205, 210, 211, 213, 220, 223, 234, 249, 267, 273, 274, 277, 278, 279, 280, 281, 282, 284, 287, 288], "manner": [46, 63, 70, 140, 174, 192, 224, 227, 232, 249, 265], "mantissa": 43, "manual": [1, 3, 4, 7, 10, 11, 20, 25, 43, 44, 53, 66, 72, 89, 90, 104, 112, 125, 126, 129, 140, 144, 197, 204, 211, 227, 229, 230, 245, 278, 288], "manualintegr": 89, "manuel": [89, 216], "manufactur": 103, "manuscript": [63, 89], "manwright94": [205, 207], "map": [11, 18, 20, 41, 42, 43, 45, 52, 53, 54, 62, 63, 74, 78, 85, 87, 89, 92, 93, 102, 110, 121, 130, 154, 165, 166, 171, 186, 195, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 218, 223, 227, 228, 229, 230, 231, 235, 236, 243, 246, 249, 250, 252, 256], "mapl": [12, 89, 200, 227, 282], "maple_cod": 211, "maplecodeprint": 211, "maplesoft": 227, "mapsto": [61, 87, 93, 206], "marbl": 231, "march": 62, "marcum": 70, "marcum_q": 70, "marcumq": 70, "margin": [102, 112, 197, 231], "marginal_distribut": 231, "marichev": [87, 221], "mark": [4, 6, 7, 110, 149, 161, 224, 240, 245, 247], "markdown": [4, 8, 11], "marker": [110, 197], "markers": 110, "marko": 61, "markov": 231, "markov_chain": 231, "markup": [4, 211], "mascheroni": [62, 70], "mask": [42, 211], "mass": [10, 79, 114, 115, 116, 117, 119, 120, 121, 125, 126, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 143, 144, 152, 177, 179, 180, 181, 192, 194, 242, 265, 273], "mass_matrix": [120, 121, 125, 128, 133, 134, 138, 139, 144], "mass_matrix_ful": [120, 121, 126, 131, 138, 139], "mass_matrix_kin": 121, "masscent": [10, 117, 120, 123, 129, 137, 141, 143], "masscenter_vel": [117, 120], "massei": 63, "master": [6, 7, 33, 89, 242], "mat": [43, 95, 145, 170, 211], "mat_1": 43, "mat_2": 43, "mat_a": 112, "mat_b": 112, "mat_c": 112, "mat_delim": 211, "mat_str": 211, "mat_symbol_styl": 211, "matadd": [62, 95, 211], "match": [3, 4, 6, 10, 12, 18, 20, 29, 53, 54, 61, 62, 70, 75, 87, 89, 93, 98, 120, 125, 152, 177, 185, 186, 200, 207, 223, 224, 227, 228, 229, 231, 240, 242, 244, 249, 250, 262, 278], "matchdict": 227, "matching_hint": 227, "materi": [0, 105, 147, 286], "mateusz": 0, "math": [1, 3, 6, 20, 31, 35, 39, 42, 44, 53, 62, 67, 70, 72, 89, 98, 102, 103, 126, 136, 192, 197, 202, 205, 210, 211, 227, 228, 231, 243, 244, 250, 261, 262, 263, 264, 265, 277, 278, 282], "math24": 227, "math56a_s08_notes015": 231, "math56as08": 231, "math_macro": 211, "mathbb": [18, 20, 25, 39, 44, 45, 53, 61, 62, 63, 68, 70, 87, 93, 98, 140, 196, 198, 199, 201, 202, 204, 206, 207, 210, 218, 219, 221, 224, 230, 231, 288], "mathbf": [35, 95, 121, 136, 138, 139, 141, 181, 185, 186, 191, 192, 194, 195, 211, 221, 232, 260, 261, 263, 265, 266], "mathc": 231, "mathcal": [67, 68, 87, 112, 141, 173, 196, 207, 219], "mathcin": 43, "mathcircl": 67, "mathemat": [3, 4, 7, 8, 10, 11, 15, 18, 20, 24, 26, 28, 29, 31, 32, 35, 37, 38, 41, 43, 44, 48, 52, 54, 61, 62, 63, 64, 67, 68, 69, 70, 75, 76, 87, 89, 92, 95, 98, 102, 103, 104, 112, 113, 116, 130, 142, 181, 192, 194, 195, 198, 199, 201, 202, 205, 210, 211, 219, 220, 224, 226, 227, 230, 231, 236, 243, 244, 250, 256, 260, 263, 265, 277, 280, 281, 282, 283, 286, 288], "mathematca": 3, "mathematica": [12, 43, 54, 104, 282, 284], "mathematica_cod": [43, 211], "mathematical_express": 7, "mathematical_singular": 41, "mathematician": [224, 230], "mathfrak": 206, "mathieu": 211, "mathieu_funct": 70, "mathieuandspheroidalfunct": 70, "mathieubas": 70, "mathieuc": [70, 211], "mathieucprim": [70, 211], "mathieufunct": 70, "mathieusprim": [70, 211], "mathjax": [3, 7, 90, 191, 287], "mathml": 211, "mathml2": 211, "mathml_presentation_repr": 183, "mathml_tag": 211, "mathmlcontentprint": 211, "mathmlpresentationprint": 211, "mathmlprinterbas": 211, "mathrm": [6, 33, 52, 61, 62, 63, 70, 87, 89, 98, 202, 204, 211, 219, 221, 227, 230, 231, 278, 282], "mathtt": 211, "mathwav": 231, "mathwork": [93, 110, 231, 284], "mathworld": [6, 11, 39, 55, 56, 62, 63, 65, 67, 68, 70, 72, 78, 89, 98, 102, 205, 214, 219, 224, 231, 249], "matin_opt": 43, "matinv_opt": 43, "matlab": [43, 116, 143, 244, 284], "matlplotlib": 143, "matmul": [62, 95, 200], "matplotlib": [1, 3, 6, 7, 10, 29, 33, 85, 90, 110, 143, 156, 191, 197, 287], "matplotlibbackend": [10, 197], "matpow": [95, 211], "matric": [3, 6, 11, 17, 18, 39, 43, 62, 63, 89, 99, 101, 112, 120, 121, 122, 126, 130, 140, 143, 145, 148, 149, 151, 159, 160, 170, 175, 186, 195, 196, 200, 206, 211, 212, 219, 221, 223, 224, 227, 229, 230, 232, 244, 245, 273, 279, 281, 282], "matrix": [11, 15, 16, 18, 23, 28, 30, 35, 43, 51, 54, 62, 63, 64, 70, 77, 87, 89, 91, 93, 94, 96, 97, 100, 101, 103, 104, 112, 113, 115, 117, 120, 121, 122, 125, 126, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 143, 144, 145, 148, 149, 151, 159, 160, 165, 170, 171, 173, 175, 176, 178, 181, 185, 186, 195, 196, 198, 200, 204, 206, 209, 211, 212, 219, 221, 223, 224, 227, 229, 230, 232, 233, 235, 236, 237, 238, 243, 244, 249, 250, 252, 256, 258, 259, 261, 265, 271, 279, 282, 283, 288, 289], "matrix1": 200, "matrix2numpi": 98, "matrix_differential_equ": 227, "matrix_exp": 227, "matrix_exp_jordan_form": 227, "matrix_exponenti": 227, "matrix_fglm": 204, "matrix_form": 91, "matrix_gamma_distribut": 231, "matrix_multiply_elementwis": [93, 98], "matrix_nod": 43, "matrix_normal_distribut": 231, "matrix_rep": 176, "matrix_tensor_product": 175, "matrix_to_dens": 170, "matrix_to_qubit": 170, "matrix_to_vector": 259, "matrixbas": [27, 93, 94, 95, 98, 200], "matrixcalculu": 98, "matrixcommon": [6, 93, 95, 98], "matrixdetermin": 98, "matrixeigen": [93, 98], "matrixel": [10, 43], "matrixerror": 98, "matrixexpr": [11, 20, 93, 95, 96], "matrixgamma": 231, "matrixi": 98, "matrixkind": [11, 15, 62, 93, 219], "matrixnorm": 231, "matrixpermut": 95, "matrixreduct": 98, "matrixset": [95, 219], "matrixsolv": [43, 211], "matrixsubspac": 98, "matrixsymbol": [10, 15, 18, 27, 39, 40, 43, 62, 93, 95, 98, 211, 231, 233], "matt": 162, "matter": [20, 41, 51, 54, 61, 62, 67, 87, 89, 141, 218, 249, 282, 283], "matthew": 0, "matur": [17, 18, 229, 230], "matvec": 243, "max": [10, 43, 53, 54, 62, 68, 70, 72, 98, 102, 104, 105, 196, 197, 206, 207, 211, 218, 220, 221, 250], "max_bending_mo": 105, "max_bmoment": 105, "max_coset": 44, "max_curv": 102, "max_deflect": 105, "max_degre": [89, 207], "max_denomin": 62, "max_div": 53, "max_expon": 43, "max_it": 223, "max_len": 223, "max_norm": [202, 207], "max_ord": 43, "max_shear_forc": 105, "max_stack_s": 44, "max_step": 102, "max_term": 223, "max_tri": [202, 206, 207], "max_wir": 156, "maxdepth": 211, "maxim": [53, 63, 91, 198, 202, 206, 218, 220], "maxima": [3, 26, 104, 230], "maximal_ord": [202, 206], "maximum": [10, 12, 26, 27, 41, 43, 44, 53, 54, 62, 68, 89, 98, 102, 105, 128, 173, 181, 197, 202, 204, 207, 211, 218, 219, 223, 224, 227, 230, 231, 246, 249], "maxn": [62, 66, 93], "maxprec": 62, "maxsiz": 62, "maxstep": 207, "maxterm": 92, "maxtriesexcept": 206, "maxwel": 231, "maxwell_distribut": 231, "maxwelldistribut": 231, "mayavi": 10, "mayb": [1, 19, 24], "mayor": 148, "mb": [131, 143], "mbox": 42, "mc": [63, 131], "mccluskei": 92, "mccluskey_algorithm": 92, "mcgraw": [70, 89, 121, 142, 186, 193, 256], "mcii": 231, "mcode": 211, "mcodeprint": 211, "mcom": 102, "mcydwshkogamkzcelyfgayr": 63, "md": [4, 7, 240, 247], "md5": 252, "mdarg": 62, "mdft": 115, "me": [63, 126, 143, 186, 211, 233], "mead": 63, "mean": [3, 4, 6, 7, 10, 11, 12, 18, 19, 20, 22, 30, 39, 44, 54, 61, 62, 63, 64, 80, 87, 89, 90, 92, 93, 96, 98, 102, 105, 116, 137, 176, 178, 181, 186, 191, 194, 197, 198, 199, 201, 204, 206, 210, 211, 221, 223, 224, 226, 227, 229, 230, 231, 232, 233, 235, 236, 242, 249, 261, 277, 278, 280, 282, 283, 284, 288, 289], "meaning": [18, 36, 38, 42, 63], "meaningfulli": 198, "meaningless": 66, "meant": [6, 7, 10, 12, 18, 20, 43, 62, 70, 75, 89, 102, 126, 143, 197, 202, 219, 223, 228, 233, 261, 283], "meanwhil": 206, "measur": [12, 35, 68, 70, 78, 94, 116, 156, 165, 170, 178, 181, 183, 185, 186, 190, 192, 195, 207, 219, 220, 223, 231, 255, 256, 259, 260, 262, 263, 265], "measure_al": 170, "measure_all_oneshot": 170, "measure_parti": 170, "measure_partial_oneshot": 170, "meat": 43, "mechan": [3, 20, 62, 85, 89, 105, 117, 118, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 158, 162, 165, 171, 173, 174, 175, 178, 185, 186, 193, 196, 273], "mechanicalc": 78, "mechanics_print": [128, 129, 133, 134, 135, 137, 138, 139], "media": [143, 149], "medial": 78, "median": [78, 231], "mediterranean": 198, "medium": [1, 20, 145, 146, 149, 150, 160, 204, 273], "medium1": 149, "medium2": 149, "meet": [18, 63, 218], "meetmeonmondai": 63, "meetmeonmondayat8am": 63, "meijaard": 142, "meijaard2007": [128, 142], "meijer": [70, 80, 88, 89, 268, 278, 288], "meijer_g": 70, "meijerg": [70, 81, 87, 89, 211, 231, 288], "meijerint": [81, 83, 87, 89], "meijerint_definit": 87, "meijerint_indefinit": 87, "meijerint_invers": 87, "mein": 249, "mellin": [70, 89], "mellin_transform": 89, "mellintransform": 89, "member": [0, 6, 10, 18, 22, 42, 51, 53, 63, 85, 108, 198, 219, 236], "member_1": 108, "member_2": 108, "member_3": 108, "member_4": 108, "member_5": 108, "member_label": 108, "membership": [26, 60, 206, 219], "memo": 251, "memoiz": [246, 248, 275], "memoize_properti": 245, "memori": [11, 43, 62, 102, 207, 232, 243, 246], "men": 181, "menez": 102, "mensor": 35, "mental": 11, "mention": [3, 4, 6, 20, 22, 29, 53, 87, 89, 112, 128, 144, 145, 192, 221, 224, 227, 231, 260, 261, 262, 263, 284], "menu": 1, "mere": [37, 38, 43, 45, 66, 171], "merg": [4, 43, 53, 54, 62, 184, 211, 219, 231, 242, 249, 250], "merge_solut": 224, "mermin": 161, "meromorph": [62, 70], "mersenn": 102, "mersenne_prime_expon": 102, "mersenneforum": 102, "mersenneprim": 102, "mesh": 197, "mess": [162, 227, 230, 288], "messag": [4, 10, 63, 90, 240, 245, 247, 252], "messi": 221, "met": [62, 108, 224, 230, 245, 288], "meta": [7, 62, 227, 228], "metaclass": 62, "metacycl": 45, "metadata": [4, 42, 245, 247], "metahint": 62, "metaprogram": 62, "meter": [105, 106, 147, 150, 179, 180, 181, 182, 183], "method": [1, 3, 4, 6, 7, 11, 12, 17, 18, 22, 24, 25, 26, 28, 29, 30, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 53, 54, 55, 61, 62, 63, 64, 65, 66, 68, 69, 70, 73, 74, 75, 76, 78, 81, 84, 86, 87, 89, 91, 93, 94, 95, 98, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 119, 120, 125, 126, 129, 131, 132, 136, 137, 142, 143, 150, 153, 155, 157, 165, 166, 171, 173, 176, 178, 180, 183, 184, 185, 186, 188, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 212, 213, 214, 216, 217, 218, 219, 223, 224, 227, 229, 231, 232, 234, 236, 237, 238, 242, 244, 246, 249, 250, 256, 260, 263, 266, 267, 271, 273, 277, 278, 279, 280, 283, 288], "method_of_undetermined_coeffici": 227, "method_ring": 249, "methodologi": [230, 281], "metric": [43, 54, 58, 64, 113, 223, 227, 230, 237], "metric_nam": 237, "metric_symmetri": [10, 237], "metric_to_christoffel_1st": 64, "metric_to_christoffel_2nd": 64, "metric_to_ricci_compon": 64, "metric_to_riemann_compon": 64, "meurer": 0, "mfork": 128, "mframe": 128, "mgamma": 115, "mi": [102, 211], "mib": 5, "micali": 63, "michael": [61, 205, 210], "microsecond": 103, "microsoft": 1, "mid": [20, 44, 63, 66, 106, 219, 224], "middl": [20, 70, 78, 87, 98, 106, 156, 197, 221, 288], "midpoint": [75, 77, 78, 89, 197, 262], "midwai": 63, "might": [4, 6, 10, 11, 12, 14, 18, 19, 20, 24, 28, 41, 62, 66, 68, 75, 84, 87, 95, 98, 102, 104, 116, 126, 127, 143, 156, 186, 194, 197, 201, 202, 207, 208, 211, 212, 219, 220, 221, 223, 224, 229, 230, 231, 243, 244, 247, 249, 252, 277, 280, 282, 283, 285, 288], "mignott": [202, 204], "mignotte_sep_bound_squar": 202, "migrat": 4, "miktex": [1, 3], "mile": 183, "mileston": 244, "militari": 63, "miller": 102, "milton": [6, 70], "mimic": [89, 90, 191, 250], "mimo": [109, 112], "mimofeedback": [109, 112], "mimolineartimeinvari": 112, "mimoparallel": [109, 112], "mimoseri": [109, 112], "min": [10, 54, 58, 62, 67, 68, 98, 104, 196, 197, 206, 211, 217, 227, 249], "min_degre": 207, "min_expon": 43, "min_qubit": [156, 160], "min_wir": 156, "mind": [6, 12, 15, 18, 26, 62, 98, 141, 197, 218, 219, 265, 283], "minim": [6, 18, 20, 41, 53, 54, 58, 61, 62, 63, 87, 89, 92, 102, 117, 130, 145, 200, 201, 202, 204, 207, 210, 220, 223, 224, 229, 249, 253], "minima": [26, 230], "minimal_block": 53, "minimal_polynomi": 206, "minimal_uncollected_subword": 52, "minimum": [4, 10, 26, 41, 43, 53, 54, 56, 58, 62, 63, 66, 68, 98, 116, 121, 128, 160, 185, 197, 199, 204, 230, 231, 245, 278], "minisat": 3, "minisat22": 3, "minlex": 249, "minor": [62, 72, 98, 211, 242], "minor_submatrix": 98, "minpoli": [62, 201, 202, 206], "minpoly_of_el": 62, "minterm": 92, "minu": [43, 61, 62, 192, 204, 211, 263], "minut": [12, 27, 116, 128, 185], "mirror": [6, 70, 89, 149], "mirror_formula": 149, "misappli": 10, "misc": [68, 93, 252], "miscellan": [248, 275], "mise": 231, "mismatch": 93, "miss": [52, 53, 79, 211, 229, 244, 288], "missingunityerror": 206, "mission": [7, 42, 96], "mississippi": [67, 249], "misspel": 10, "mistak": [7, 12, 25, 53, 250], "misunderstand": 18, "mit": 65, "mix": [18, 34, 61, 68, 93, 98, 104, 185, 201, 202, 207, 211, 230, 233, 235, 237, 250], "mixin": [62, 249], "mixtur": [41, 43, 79, 198, 244], "mj": 0, "mk": [178, 181], "mlatex": 116, "mm": [39, 42, 102, 121, 128, 133, 134, 174, 200], "mm_full": 128, "mn": [174, 211, 231], "mnemon": [12, 220, 249], "mnt": 1, "mo": [102, 143, 211], "mobiu": [65, 102], "mobius_transform": 65, "mobiusrang": 102, "mock": 156, "mod": [35, 63, 68, 92, 98, 99, 102, 172, 198, 200, 201, 202, 204, 206, 207, 211, 213, 221, 224], "mod_invers": [62, 207], "modaugmentedassign": 43, "mode": [1, 2, 22, 62, 90, 104, 148, 171, 191, 207, 211, 242, 253], "model": [4, 11, 66, 92, 102, 112, 122, 128, 130, 131, 132, 148, 207, 220, 231], "moder": 89, "modern": [20, 43, 198, 205, 211], "modest": 44, "modgcd_bivari": 204, "modgcd_multivari": 204, "modgcd_univari": 204, "modif": [53, 68, 98, 230, 231, 246], "modifi": [7, 11, 12, 42, 43, 53, 62, 68, 70, 102, 104, 139, 148, 197, 204, 206, 207, 208, 211, 223, 229, 230, 231, 242, 245, 246, 249, 250, 277, 282, 284], "modn": 102, "modop": 211, "modopmodewrong": 211, "modopnestedwrong": 211, "modopsettingswrong": 211, "modul": [3, 4, 5, 6, 7, 11, 12, 15, 18, 25, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 52, 54, 62, 63, 65, 67, 68, 70, 74, 78, 82, 85, 88, 89, 90, 92, 95, 96, 97, 98, 103, 104, 105, 107, 108, 110, 113, 116, 126, 127, 132, 136, 138, 139, 143, 145, 148, 150, 151, 163, 166, 179, 180, 181, 182, 192, 195, 197, 202, 203, 205, 208, 209, 211, 215, 218, 221, 225, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 259, 261, 263, 264, 265, 266, 267, 273, 274, 275, 277, 280, 282, 288, 289], "modular": [63, 102, 172, 205, 230], "modular_multiplicative_invers": 62, "modulargcd": 204, "modularinteg": 202, "module_dictionari": 250, "module_quoti": 198, "module_rel": 242, "moduleel": 206, "moduleendomorph": 206, "modulehomomorph": [198, 206], "moduli": [63, 102, 204], "modulo": [62, 63, 99, 102, 172, 198, 200, 201, 202, 204, 206, 207, 208, 210, 211, 214, 223], "modulu": [62, 63, 65, 70, 72, 78, 93, 102, 105, 106, 198, 202, 204, 206, 207, 210, 230], "mol": 196, "mold": 195, "mole": 181, "moll": 70, "momemtum": 173, "moment": [72, 78, 105, 106, 128, 136, 139, 185, 197, 207, 224, 231], "moment_load_vector": 105, "momenta": 155, "momentum": [114, 123, 126, 143, 154, 155, 173, 177, 196, 237], "monad": 246, "monagan": [205, 223], "monagan00": [204, 205], "monagan93": [204, 205], "mondai": 63, "monic": [61, 70, 198, 199, 202, 204, 206, 207, 210], "monitor": 1, "monoalphabet": 63, "monogen": 198, "monogenicfiniteextens": [198, 202], "monoid": 42, "monom": [202, 207], "monomi": [62, 89, 92, 102, 199, 201, 202, 204, 210, 211, 288], "monomial_basi": 202, "monomial_count": 207, "monomial_kei": 207, "monomialord": [202, 207], "monomorph": 206, "monospac": 211, "monoterm": 237, "monoton": [41, 43, 79], "monotonicity_help": 41, "monotorem": 237, "mont": 53, "montgomeri": 204, "month": 0, "monthli": [48, 63, 98], "montreal": 205, "moor": [0, 27, 95, 98], "moot": 62, "moprhism": 42, "mora": [204, 205, 207, 229], "mordel": 224, "more": [1, 3, 4, 6, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 38, 39, 41, 42, 43, 44, 45, 48, 52, 53, 54, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 74, 75, 76, 77, 78, 79, 80, 84, 87, 89, 92, 93, 95, 96, 98, 99, 101, 102, 103, 104, 110, 112, 116, 120, 121, 122, 126, 128, 130, 132, 134, 136, 138, 139, 140, 141, 143, 145, 148, 160, 164, 165, 170, 173, 174, 175, 176, 181, 185, 186, 190, 191, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 220, 221, 223, 224, 227, 228, 229, 230, 231, 242, 244, 245, 246, 249, 250, 252, 256, 260, 264, 271, 273, 277, 278, 280, 281, 283, 284, 286, 287, 288, 289], "moreno": 205, "moreov": [53, 63, 87, 192, 198, 199, 204, 212, 261], "morphism": [42, 198], "morri": 220, "mors": 63, "morse_cod": 63, "mortem": 242, "mose": 227, "most": [3, 4, 6, 7, 10, 11, 12, 15, 16, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 33, 36, 37, 38, 41, 42, 43, 44, 53, 54, 61, 62, 63, 66, 68, 72, 74, 89, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 112, 116, 120, 121, 126, 134, 137, 140, 141, 144, 178, 180, 185, 186, 190, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 209, 210, 211, 218, 219, 221, 224, 227, 228, 229, 230, 231, 240, 243, 244, 245, 246, 247, 249, 250, 252, 259, 261, 277, 280, 282, 283, 284, 286, 287, 288], "mostli": [62, 68, 89, 98, 143, 171, 194, 198, 210, 211, 221, 229, 287], "mota": 227, "motion": [53, 116, 120, 121, 122, 125, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 143, 144, 190, 191, 194, 195, 231], "motiongenesi": [126, 143], "motionvari": [126, 143], "motiv": [13, 20, 32, 207], "mous": 197, "move": [20, 53, 54, 62, 63, 76, 78, 105, 120, 128, 130, 136, 164, 190, 194, 195, 223, 232, 241, 263], "movement": 64, "moyal": 231, "moyaldistribut": 231, "mp": [35, 173, 229, 245], "mpc": 201, "mpelement": 202, "mpf": [62, 201, 202], "mpi": 219, "mpmath": [1, 3, 5, 11, 20, 27, 28, 43, 67, 70, 98, 103, 143, 201, 202, 211, 219, 229, 245, 250], "mpmathprint": 211, "mpprint": [116, 138], "mpq": [102, 200, 201], "mprint": [116, 133, 134, 135, 138], "mpz": [201, 202], "mr": 102, "mrow": 211, "mrv": [62, 218], "mrv_leadterm": 218, "mrv_max1": 218, "mrv_max3": 218, "msg": [63, 89], "msigma": 115, "msub": [116, 118, 140], "msym": 58, "msymbol": 229, "msys2": 1, "mt": 87, "mu": [12, 70, 87, 102, 113, 115, 147, 211, 231, 237], "mu1": 231, "mu2": 231, "mu_1": 231, "mu_2": 231, "much": [4, 6, 16, 18, 19, 20, 22, 28, 42, 43, 47, 58, 66, 70, 84, 87, 89, 140, 184, 185, 194, 195, 196, 198, 201, 204, 207, 218, 221, 223, 227, 228, 229, 230, 244, 246, 280, 282, 288], "mueller": 148, "mueller_calculu": 148, "mueller_matrix": 148, "mul": [6, 10, 11, 12, 15, 20, 35, 87, 89, 93, 102, 156, 160, 170, 171, 200, 201, 202, 206, 207, 211, 212, 213, 220, 223, 227, 228, 229, 230, 235, 283], "mul_ground": [202, 207], "mul_inv": 54, "mul_symbol": 211, "mul_symbol_mathml_numb": 211, "mul_xin": 208, "mulaugmentedassign": 43, "muller": 0, "mulsimp": 93, "mult": 206, "mult_tab": 206, "multi": [34, 62, 63, 127, 136, 143, 156, 160, 170, 197, 211, 230, 273], "multibodi": [123, 126, 136, 142, 143, 144, 194], "multicharact": 252, "multidimension": [28, 205, 242], "multifactor": 204, "multifactori": 67, "multifram": 195, "multigamma": 70, "multilin": [4, 211], "multilinear": 64, "multinomi": [62, 93, 102, 231], "multinomial_coeffici": 102, "multinomial_coefficients_iter": 102, "multinomial_distribut": 231, "multinomialdistribut": 231, "multipl": [3, 4, 6, 10, 11, 12, 14, 18, 20, 24, 26, 30, 31, 35, 37, 38, 39, 41, 42, 43, 44, 51, 53, 54, 58, 61, 62, 63, 67, 68, 70, 72, 77, 80, 82, 87, 89, 91, 92, 93, 95, 98, 99, 102, 104, 109, 112, 116, 128, 136, 143, 144, 160, 161, 162, 166, 173, 175, 178, 181, 182, 183, 186, 190, 194, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 211, 216, 217, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 232, 235, 237, 240, 244, 245, 246, 247, 249, 250, 252, 256, 261, 277, 278, 280, 281, 283, 284, 289], "multipledispatch": [10, 36], "multiplex": 92, "multipli": [10, 12, 27, 35, 39, 43, 53, 62, 73, 77, 84, 91, 93, 98, 102, 121, 130, 139, 140, 141, 153, 162, 176, 181, 182, 198, 199, 200, 202, 204, 206, 207, 211, 213, 220, 221, 224, 227, 232, 249, 260, 280, 283], "multiplicity_in_factori": 102, "multiply_elementwis": [93, 98], "multiply_id": 198, "multiply_transitive_group": 53, "multipow": 63, "multiprecis": [43, 201], "multiprim": 63, "multiset": [67, 87, 246, 249], "multiset_combin": [67, 249], "multiset_derang": 249, "multiset_partit": [51, 67, 87, 246, 249], "multiset_partitions_taocp": 246, "multiset_permut": [67, 249], "multisetpartitiontravers": 246, "multiterm": 237, "multivalu": [62, 68], "multivari": [41, 62, 70, 198, 199, 201, 202, 203, 205, 207, 208, 218, 223, 229, 230, 231, 288], "multivariate_gamma_funct": 70, "multivariate_laplace_distribut": 231, "multivariate_normal_distribut": 231, "multivariatebeta": 231, "multivariateewen": 231, "multivariatelaplac": 231, "multivariatenorm": 231, "multivariatepolynomialerror": [204, 207], "multivariatet": 231, "mun": 211, "mundi": 205, "mupad_ref": 284, "murrai": [53, 200], "museum": 63, "must": [3, 4, 5, 6, 10, 11, 12, 18, 19, 29, 35, 36, 37, 38, 43, 53, 54, 56, 58, 60, 61, 62, 63, 64, 67, 68, 70, 72, 75, 78, 81, 84, 85, 87, 89, 92, 93, 94, 95, 98, 101, 102, 105, 106, 108, 110, 112, 113, 120, 121, 122, 126, 128, 136, 138, 139, 140, 141, 143, 156, 171, 173, 176, 185, 186, 195, 196, 197, 198, 199, 200, 202, 204, 206, 207, 211, 212, 219, 220, 221, 223, 224, 227, 229, 230, 231, 235, 236, 242, 243, 244, 245, 246, 247, 249, 250, 253, 280, 282, 283, 287, 288], "mutabl": [11, 12, 44, 62, 94, 95, 96, 105, 202, 211, 212, 223, 232, 284], "mutabledensematrix": [94, 200, 252], "mutabledensendimarrai": 232, "mutablesparsematrix": 100, "mutablesparsendimarrai": 232, "mutat": [10, 112, 200, 202, 231], "mute": [43, 243], "mutual": [68, 87, 195], "mwf": 128, "mwr": 128, "mx": [110, 156, 218], "my": [1, 211, 277], "my_dummi": 176, "my_equ": 62, "my_fcn": [43, 211], "my_inequ": 62, "my_iszero": 284, "my_mat_fcn": [43, 211], "my_measur": 223, "my_real_root": 22, "my_root": 22, "my_routin": 43, "my_smt_variable_for_pi": 211, "my_sym": 25, "mycites": 205, "myclass": 62, "mycoeff": 41, "mydata": 253, "myfcn": 244, "myfcn_result": 244, "mygamma": 211, "mylatexprint": 211, "mylist": 62, "mylist1": 62, "mylist2": 62, "myop": 249, "mypkgdata": 253, "myprogram": 43, "myrvold": 54, "mysin": [62, 250, 277], "mysingleton": 62, "myst": [4, 7], "mysub": 43, "mz": 156, "m\u2081": 106, "m\u2082": 106, "n": [0, 5, 6, 7, 11, 12, 16, 18, 20, 22, 25, 26, 34, 39, 41, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 56, 58, 60, 61, 62, 63, 64, 66, 67, 68, 70, 72, 75, 76, 77, 78, 79, 84, 85, 87, 89, 91, 92, 93, 95, 98, 99, 102, 104, 105, 106, 108, 112, 114, 115, 117, 120, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 138, 139, 140, 141, 143, 144, 145, 147, 149, 150, 152, 156, 161, 162, 165, 170, 172, 173, 174, 176, 177, 179, 181, 183, 185, 186, 188, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 227, 229, 230, 231, 234, 236, 237, 240, 243, 249, 251, 252, 256, 258, 259, 260, 261, 265, 271, 278, 284, 287, 288, 289], "n1": [18, 43, 53, 62, 63, 126, 143, 145, 149, 185, 224, 231, 256], "n11": 231, "n12": 231, "n2": [18, 43, 53, 62, 63, 143, 145, 149, 224, 231], "n21": 231, "n22": 231, "n3": [62, 126], "n_": [204, 224], "n_0": [84, 204, 229, 230], "n_1": [204, 229, 231], "n_2": [204, 231], "n_a": 126, "n_adj": 54, "n_alpha_b": 186, "n_b": 126, "n_c": 231, "n_digit": 89, "n_ep": 53, "n_frame": 117, "n_i": [58, 204, 229], "n_k": 204, "n_len": 149, "n_level": 176, "n_m": 229, "n_max": 176, "n_order": 102, "n_particl": 176, "n_point_check": 43, "n_surr": 149, "n_x": 188, "nabla": [192, 256, 262, 263], "naiv": [15, 53, 59, 62, 87, 93, 98, 181, 221, 229, 230, 237], "nakagami": 231, "nakagami_distribut": 231, "name": [1, 3, 4, 5, 6, 7, 10, 11, 12, 18, 20, 29, 30, 34, 37, 38, 42, 43, 44, 45, 49, 52, 55, 58, 61, 62, 63, 64, 67, 68, 69, 70, 72, 75, 87, 89, 90, 91, 95, 98, 102, 104, 105, 108, 117, 120, 123, 125, 126, 128, 143, 147, 156, 171, 178, 181, 182, 183, 184, 185, 186, 188, 190, 192, 195, 197, 198, 199, 201, 202, 204, 206, 208, 211, 217, 221, 223, 224, 227, 228, 230, 231, 236, 237, 240, 242, 243, 244, 245, 250, 252, 253, 254, 256, 260, 263, 268, 277, 280, 283, 284, 288], "name_dict": 104, "name_expr": [43, 244], "name_mangl": 211, "name_of_bodi": 117, "named_group": [47, 50, 52, 53, 59, 60], "namedmorph": 42, "nameerror": [12, 90, 245, 280], "nameless": 237, "namespac": [3, 6, 10, 34, 43, 44, 62, 202, 224, 227, 228, 242, 244, 245, 250], "nan": [39, 40, 62, 68, 70, 118, 223, 231, 278], "nand": 92, "nano": 103, "nanosecond": 103, "napier": 62, "narg": [62, 204], "narr": [6, 8, 281], "nation": 208, "nativ": [11, 62, 112, 202, 207, 242], "native_coeff": 62, "natur": [4, 12, 18, 27, 35, 39, 43, 44, 45, 53, 62, 63, 67, 68, 96, 102, 126, 178, 180, 181, 198, 201, 202, 204, 206, 208, 211, 219, 220, 224, 230, 231, 249, 266, 283, 288], "naturals0": [62, 211, 219, 230, 231], "navi": 63, "navig": 1, "nb": 62, "nb2": 211, "nb_of_point": [110, 197], "nb_of_points_i": 197, "nb_of_points_u": 197, "nb_of_points_v": 197, "nb_of_points_x": 197, "nbit": 43, "nc": 67, "nca": 206, "nck": 288, "ncol": 200, "ncolumn": 197, "ndarrai": [98, 231, 237, 243], "ndf": 148, "ndimension": 243, "ne": [11, 14, 18, 62, 63, 67, 68, 75, 87, 98, 102, 199, 201, 204, 221, 227, 231], "near_int": 102, "nearer": 87, "nearest": [41, 206], "nearest_common_ancestor": 206, "nearli": [12, 102, 220], "necess": 204, "necessari": [1, 3, 4, 6, 8, 10, 12, 18, 20, 32, 41, 42, 53, 54, 62, 72, 87, 89, 92, 98, 102, 121, 128, 136, 197, 199, 201, 206, 207, 211, 214, 220, 223, 227, 228, 229, 230, 231, 232, 237, 242, 244, 249, 250, 256, 281, 286], "necessarili": [4, 6, 18, 39, 62, 63, 64, 87, 89, 92, 121, 198, 199, 206, 207, 209, 223, 227, 229, 230], "necessit": 134, "necesssari": 266, "necklac": [7, 249], "ned": 10, "need": [1, 3, 4, 6, 7, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 37, 38, 41, 42, 43, 47, 53, 54, 58, 60, 61, 62, 63, 64, 68, 70, 73, 77, 78, 85, 86, 87, 89, 90, 92, 93, 98, 102, 103, 104, 105, 106, 108, 112, 116, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 140, 141, 144, 145, 156, 160, 168, 174, 179, 185, 186, 191, 194, 195, 198, 199, 200, 201, 202, 204, 206, 207, 208, 210, 211, 218, 219, 221, 223, 224, 226, 227, 229, 230, 231, 235, 236, 237, 238, 240, 243, 244, 245, 246, 247, 249, 252, 256, 260, 262, 263, 266, 277, 278, 280, 283, 284, 286, 288], "needev": 89, "neg": [6, 11, 12, 18, 19, 26, 39, 40, 43, 44, 57, 61, 62, 67, 68, 70, 72, 74, 75, 78, 87, 89, 91, 92, 93, 98, 101, 102, 105, 106, 108, 109, 110, 112, 120, 176, 186, 196, 199, 200, 202, 204, 206, 207, 208, 211, 217, 219, 220, 221, 223, 224, 227, 229, 230, 231, 250], "neg_feedback": 112, "negat": [19, 20, 39, 62, 68, 92, 112, 186, 200, 202, 204, 207], "negative_binomial_distribut": 231, "negative_multinomial_distribut": 231, "negative_numb": [18, 62], "negativebinomi": 231, "negativebinomialdistribut": 231, "negativehandl": 39, "negativeinfin": [62, 211], "negativemultinomi": 231, "negativeon": [62, 68, 283], "negativepred": 39, "neglect": 43, "neglig": 22, "neighbor": 249, "neighborhood": 219, "neighbourhood": 87, "neither": [18, 19, 39, 62, 150, 171, 197, 207, 218, 219, 220, 227, 237, 250, 256, 265, 288], "nephew": 63, "neq": [11, 20, 62, 68, 70, 87, 89, 93, 181, 195, 196, 204, 207, 224, 227, 229, 288], "nessgrh": 87, "nest": [4, 25, 29, 62, 64, 68, 70, 89, 93, 112, 199, 201, 204, 211, 221, 223, 226, 230, 231, 232, 233, 235, 238, 249, 250, 283], "nested_contract": 235, "net": [42, 78, 205, 227, 231, 249], "netwon": 43, "neutral": 7, "never": [11, 18, 20, 29, 62, 68, 89, 178, 207, 208, 211, 219, 229, 231, 240, 260, 280, 281], "nevertheless": 42, "new": [1, 3, 4, 5, 7, 11, 18, 20, 25, 32, 37, 38, 42, 43, 44, 53, 54, 61, 62, 63, 64, 70, 75, 78, 87, 89, 90, 93, 98, 102, 105, 108, 112, 117, 120, 126, 133, 135, 141, 142, 143, 145, 166, 172, 173, 176, 178, 181, 182, 184, 186, 190, 195, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 211, 218, 221, 223, 224, 227, 229, 230, 231, 232, 233, 242, 243, 247, 250, 256, 258, 260, 276, 277, 280, 283, 284, 286], "new_eq": 230, "new_gen": 60, "new_indic": 176, "new_label": 108, "new_matrix": 231, "new_method": [121, 130], "new_msg": 63, "new_nam": 42, "new_system": 256, "newa": 220, "newchar": 252, "newconst": 227, "newer": [4, 11, 194, 229], "newli": [62, 87, 221], "newlin": [4, 98, 252], "newmatrix": 10, "newnam": 186, "newroot": 91, "newton": [43, 70, 136, 179, 183, 204, 208], "newtonian": [126, 143], "newtonion": [117, 120], "newtons_method": 43, "newtons_method_funct": 43, "newtyp": 62, "newvar": 61, "nexp": 43, "next": [12, 16, 18, 20, 34, 43, 44, 46, 51, 53, 54, 56, 57, 62, 63, 68, 87, 89, 92, 98, 102, 116, 117, 120, 121, 129, 130, 131, 133, 135, 136, 137, 144, 194, 195, 198, 202, 206, 207, 211, 219, 221, 224, 227, 246, 247, 249, 281, 282, 283], "next_binari": 57, "next_grai": 57, "next_lex": [51, 54], "next_lexicograph": 57, "next_nonlex": 54, "next_trotterjohnson": [54, 249], "nextprim": 102, "nf": 204, "nfac": 102, "nfloat": [62, 223], "ngate": 160, "nh": 138, "ni": [70, 102], "nice": [2, 4, 6, 33, 62, 74, 98, 102, 126, 140, 143, 197, 211, 221, 252, 283], "nicer": [33, 62, 134], "nicheck": 126, "nielsen_transform": 53, "niemey": 53, "nigel": 224, "nijenhui": 46, "nilpot": [49, 53, 98, 268], "nilpotent_group": 53, "nilrad": 206, "nine": [78, 211], "nine_point_circl": 78, "nist": [6, 68, 70, 181], "nitaj": 224, "niven": 204, "nl": [114, 177], "nlm": 114, "nm": [105, 106, 174, 232], "nmant": 43, "nmax": 102, "nn": 5, "nnf": 92, "no_attrs_in_subclass": 245, "no_glob": [90, 191], "no_symmetri": 237, "nobr": 29, "nocache_fail": 240, "nocond": 89, "nodal": [152, 177, 198], "node": [10, 11, 41, 56, 62, 89, 104, 108, 118, 152, 177, 186, 196, 201, 211, 218, 230, 235, 246, 250, 283, 287], "node12": 46, "node81": 102, "node_1": 108, "node_2": 108, "node_3": 108, "node_4": 108, "node_label": 108, "node_posit": 108, "nois": 22, "non": [3, 4, 11, 12, 18, 20, 22, 28, 29, 31, 34, 39, 41, 44, 52, 55, 61, 62, 63, 67, 68, 69, 70, 71, 72, 75, 76, 77, 89, 91, 92, 93, 94, 95, 98, 99, 101, 116, 121, 123, 128, 130, 134, 138, 139, 143, 160, 165, 175, 176, 178, 192, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 214, 218, 219, 221, 223, 224, 226, 227, 229, 230, 231, 232, 235, 236, 237, 242, 244, 249, 252, 263, 283, 288, 289], "non_trivial_metr": 64, "nonbas": 62, "noncentr": 231, "noncentral_beta_distribut": 231, "noncentral_chi_distribut": 231, "noncentralbetadistribut": 231, "noncommut": [18, 62, 85, 283], "noncommutative_part": 62, "noncomput": 11, "nonconserv": 121, "nonconvex": 89, "none": [6, 7, 10, 11, 18, 19, 20, 35, 36, 37, 38, 39, 41, 42, 43, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 83, 84, 85, 87, 89, 90, 92, 93, 95, 98, 99, 102, 103, 104, 105, 112, 117, 118, 120, 121, 122, 123, 125, 126, 145, 147, 149, 150, 156, 161, 166, 171, 173, 176, 178, 182, 183, 184, 186, 188, 190, 191, 195, 196, 197, 198, 200, 201, 202, 204, 206, 207, 209, 211, 212, 213, 214, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 240, 242, 243, 244, 245, 249, 250, 252, 255, 256, 259, 284, 288, 289], "nonelementari": 89, "nonelementaryintegr": 89, "nonempti": [53, 249], "nonetheless": [4, 63, 178, 223, 227], "nonetoken": 43, "nonetyp": [19, 43], "nonhol_coneq": [121, 130, 139], "nonholonom": 128, "nonhomogeneous_equation_with_constant_coeffici": 227, "noninteg": [18, 39, 62, 201, 211], "nonintegr": 20, "noninvert": 231, "noninvertiblematrixerror": [27, 95, 284], "nonlex": 54, "nonlinear": [14, 23, 29, 31, 61, 143, 207, 227, 229, 230], "nonlinearerror": 230, "nonlinsolv": [143, 229, 230, 289], "nonminim": [127, 136, 140, 273], "nonneg": [18, 20, 39, 62, 63, 64, 67, 70, 95, 143, 199, 201, 207, 224, 231, 288], "nonnegativehandl": 39, "nonnegativepred": 39, "nonparallel": 120, "nonparametr": 197, "nonposit": [18, 39, 62, 67, 70, 143], "nonpositivehandl": 39, "nonpositivepred": 39, "nonreal": [20, 28, 229], "nonrep": 237, "nonresidu": 102, "nonsens": [61, 70], "nonsquarematrixerror": [98, 227], "nontrivi": [20, 53, 62, 102], "nonvanish": 62, "nonzero": [18, 20, 39, 40, 61, 62, 77, 98, 114, 199, 200, 201, 202, 211, 214, 230], "nonzerohandl": 39, "nonzeropred": 39, "noqa": [62, 90, 202, 245], "nor": [39, 41, 62, 92, 102, 150, 197, 207, 218, 220, 227, 237, 256], "noramlize_last": 98, "norm": [35, 98, 174, 186, 202, 204, 206, 207], "normal": [7, 10, 12, 18, 19, 20, 31, 35, 39, 43, 53, 61, 62, 66, 68, 72, 75, 76, 77, 89, 90, 92, 96, 97, 98, 102, 104, 114, 116, 120, 126, 128, 134, 143, 149, 160, 170, 173, 174, 175, 176, 177, 181, 184, 186, 195, 198, 200, 201, 202, 204, 206, 207, 211, 212, 214, 219, 220, 224, 227, 231, 236, 242, 247, 249, 250, 256, 271], "normal_closur": 53, "normal_distribut": 231, "normal_lin": 72, "normal_matrix": 39, "normal_vector": [76, 149], "normaldistribut": [10, 231], "normaldistributionfunct": 231, "normalform": [99, 200], "normalgamma": 231, "normalhandl": 39, "normalis": [62, 213], "normalize_last": 98, "normalize_theta_set": 219, "normalize_whitespac": 242, "normalpred": 39, "normalpspac": 231, "norman": 89, "normilz": 70, "normpath": 253, "north": 11, "not_empty_in": [41, 230], "not_in_arg": 43, "not_point": 156, "not_rep": 53, "not_supported_funct": 211, "notabl": [38, 43, 65, 70, 87, 103, 201], "notalgebra": 204, "notat": [12, 16, 22, 26, 29, 31, 50, 54, 55, 61, 62, 63, 67, 70, 87, 95, 98, 104, 112, 174, 185, 186, 191, 195, 198, 211, 218, 223, 230, 236, 237, 249, 263, 278], "note": [1, 3, 6, 7, 10, 11, 12, 14, 16, 18, 19, 23, 24, 25, 27, 28, 29, 30, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 52, 53, 54, 55, 58, 60, 61, 63, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 87, 89, 90, 92, 93, 95, 98, 102, 104, 112, 113, 117, 118, 120, 121, 122, 125, 126, 128, 130, 133, 141, 143, 149, 152, 160, 170, 171, 173, 175, 176, 177, 179, 185, 186, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 217, 219, 221, 223, 224, 226, 227, 228, 229, 230, 231, 236, 237, 240, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 261, 263, 265, 277, 278, 279, 281, 282, 283, 284, 288], "notebook": [3, 11, 20, 33, 90, 191, 250, 286, 287], "noth": [10, 22, 42, 53, 62, 89, 160, 176, 198, 202, 210, 211, 223, 227, 229, 240, 242, 250, 252, 280], "notic": [10, 12, 20, 53, 54, 60, 62, 98, 164, 185, 201, 221, 233, 237, 238, 249, 250, 280, 282, 283, 288], "notifi": 6, "notimpl": [72, 206], "notimplementederror": [6, 24, 26, 29, 30, 31, 41, 61, 72, 75, 79, 89, 98, 110, 200, 206, 210, 219, 226, 227, 228, 229, 230], "notin": [52, 87, 219], "notinvert": [198, 204, 207], "notion": [18, 42, 181, 184, 198, 230, 260, 265], "notiter": 249, "notrevers": [204, 207], "nottingham": 224, "novemb": 249, "now": [1, 2, 3, 5, 7, 10, 12, 16, 18, 19, 20, 22, 33, 42, 43, 54, 62, 63, 67, 70, 73, 78, 79, 84, 86, 87, 91, 98, 102, 112, 117, 120, 125, 126, 129, 131, 134, 136, 143, 144, 179, 181, 186, 191, 194, 195, 198, 199, 201, 204, 207, 208, 212, 219, 220, 221, 223, 224, 227, 229, 230, 231, 232, 237, 242, 243, 250, 261, 262, 280, 282, 283, 288, 289], "np": [20, 29, 67, 85, 102, 126, 243, 250], "npartit": 102, "nqubit": [156, 160, 161, 170], "nr": 20, "nright": 230, "nroot": [207, 229], "nrow": [197, 200], "nsa": 63, "nseri": 62, "nsimplifi": [62, 66, 223], "nsolv": [14, 22, 28, 30, 31, 143, 229], "nt": [67, 249], "nth": [16, 62, 67, 70, 91, 102, 202, 207, 208, 217, 223, 227, 231], "nth_algebra": 227, "nth_algebraic_integr": 227, "nth_linear": 227, "nth_linear_constant_coeff_homogen": 227, "nth_linear_constant_coeff_homogeneous_integr": 227, "nth_linear_constant_coeff_undetermined_coeffici": 227, "nth_linear_constant_coeff_variation_of_paramet": 227, "nth_linear_constant_coeff_variation_of_parameters_integr": 227, "nth_linear_euler_eq_homogen": 227, "nth_linear_euler_eq_homogeneous_integr": 227, "nth_linear_euler_eq_nonhomogeneous_undetermined_coeffici": 227, "nth_linear_euler_eq_nonhomogeneous_variation_of_paramet": 227, "nth_linear_euler_eq_nonhomogeneous_variation_of_parameters_integr": 227, "nth_linear_homogeneous_constant_coeff_integr": 227, "nth_order_reduc": 227, "nth_power_roots_poli": 207, "nthalgebra": 227, "ntheori": [10, 39, 53, 62, 63, 204, 207, 224, 249], "nthlinearconstantcoeffhomogen": 227, "nthlinearconstantcoeffundeterminedcoeffici": 227, "nthlinearconstantcoeffvariationofparamet": 227, "nthlineareulereqhomogen": 227, "nthlineareulereqnonhomogeneousundeterminedcoeffici": 227, "nthlineareulereqnonhomogeneousvariationofparamet": 227, "nthorderreduc": 227, "nthroot": 223, "nthroot_mod": 102, "ntop": 98, "ntt": 65, "nu": [7, 12, 70, 89, 102, 177, 199, 211, 223, 231, 237, 282], "nu_1": 199, "nu_2": 199, "nu_i": 199, "nu_n": 199, "null": [12, 62, 98], "nullspac": [98, 200], "num": [43, 53, 62, 102, 112, 202, 223, 227, 246, 252], "num_column": [90, 191, 211, 227], "num_input": 112, "num_output": 112, "num_qq": 201, "num_zz": 201, "numa": 227, "number": [3, 4, 5, 6, 7, 10, 11, 14, 15, 18, 20, 22, 25, 26, 27, 30, 31, 35, 37, 38, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 67, 68, 70, 72, 75, 76, 77, 78, 79, 81, 89, 90, 91, 92, 93, 95, 98, 99, 101, 103, 104, 106, 108, 110, 112, 113, 114, 116, 121, 122, 125, 126, 130, 140, 141, 143, 149, 152, 155, 156, 159, 160, 161, 162, 164, 165, 170, 171, 172, 173, 174, 176, 177, 178, 181, 184, 185, 186, 190, 191, 192, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 207, 208, 211, 213, 217, 218, 219, 220, 221, 223, 224, 227, 229, 230, 231, 232, 236, 237, 242, 244, 246, 249, 250, 252, 256, 259, 260, 262, 263, 265, 268, 274, 277, 278, 280, 282, 283, 284, 288], "number_cl": 62, "number_field": 206, "number_theori": 67, "numbered_symbol": [212, 223, 227, 249], "numberfield": [202, 206, 207], "numberkind": [11, 15, 62, 93, 219], "numbersymbol": [62, 211], "numbertheoretictransform": 65, "numbertheori": 224, "numberworld": 102, "numer": [3, 6, 10, 11, 12, 14, 16, 18, 23, 24, 25, 26, 27, 30, 35, 39, 41, 43, 61, 62, 67, 70, 74, 78, 85, 98, 102, 104, 108, 109, 110, 112, 120, 121, 122, 126, 128, 136, 140, 144, 148, 155, 158, 173, 185, 195, 197, 201, 202, 204, 205, 206, 207, 210, 211, 220, 221, 223, 227, 229, 230, 236, 242, 243, 249, 250, 268, 277, 280, 284, 288], "numerical_funct": 277, "numerorum": 246, "numexpr": [3, 250], "numexpr3": 250, "numi": 227, "numpad": 197, "numpi": [3, 6, 10, 11, 20, 22, 27, 28, 29, 33, 43, 62, 85, 90, 103, 110, 126, 143, 160, 170, 200, 211, 231, 236, 243, 244, 250, 277, 280], "numpydoc": [6, 7], "numpyprint": 43, "numqubit": 161, "numsampl": 231, "numth": 102, "numz": 112, "nuovo": [181, 196], "nx": 249, "ny": [186, 202], "o": [0, 1, 6, 11, 12, 16, 18, 34, 42, 43, 53, 54, 60, 62, 63, 68, 70, 72, 73, 75, 76, 78, 84, 87, 102, 106, 117, 121, 123, 125, 126, 138, 139, 140, 141, 143, 144, 166, 176, 187, 190, 192, 194, 196, 204, 205, 207, 208, 211, 213, 218, 221, 227, 231, 236, 242, 249, 252, 253, 259, 262, 278], "o2": 218, "o____________________________________________________": 106, "o_from": 204, "o_to": 204, "oa": 262, "oabc": 262, "ob": 231, "obei": [6, 70, 196, 211, 221], "obextj": 266, "obj": [6, 18, 62, 202, 207, 211, 245], "object": [3, 4, 6, 7, 11, 12, 17, 18, 19, 20, 29, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 52, 53, 54, 55, 56, 57, 61, 62, 64, 67, 68, 70, 72, 73, 74, 75, 77, 78, 79, 87, 89, 92, 93, 95, 96, 98, 103, 104, 105, 106, 110, 112, 113, 116, 117, 120, 121, 122, 123, 125, 126, 130, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 149, 150, 151, 159, 160, 162, 170, 171, 175, 176, 178, 179, 180, 182, 183, 185, 186, 190, 191, 194, 195, 197, 198, 199, 200, 201, 202, 204, 206, 207, 211, 213, 214, 217, 218, 219, 220, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 242, 243, 244, 245, 246, 249, 250, 253, 254, 259, 260, 261, 266, 267, 271, 277, 278, 280, 282, 283, 284, 287, 288], "oblig": 197, "obscur": [10, 18], "observ": [58, 84, 87, 165, 195, 198, 221, 224, 227, 231, 265, 288], "obsolet": 10, "obstacl": 87, "obtain": [7, 11, 12, 14, 16, 25, 26, 31, 37, 38, 42, 44, 46, 53, 54, 55, 58, 62, 63, 65, 66, 67, 68, 70, 72, 73, 75, 76, 78, 84, 87, 89, 91, 93, 98, 101, 102, 109, 112, 136, 139, 141, 149, 171, 176, 181, 198, 199, 202, 204, 206, 207, 210, 212, 219, 220, 221, 223, 224, 227, 228, 229, 230, 249, 252, 260, 261], "obtaining_all_solutions_of_a_linear_system": 98, "obtus": 75, "obviou": [18, 19, 20, 27, 45, 53, 61, 198, 201, 210, 224, 282], "obvious": [7, 44, 53, 179, 194, 201, 221], "oc": [211, 262], "occasion": 62, "occup": 176, "occupi": [102, 176, 237], "occur": [6, 10, 11, 12, 53, 54, 62, 66, 70, 79, 87, 93, 104, 116, 120, 140, 185, 186, 194, 206, 214, 223, 228, 229, 232, 233, 242, 249, 283], "occurr": [44, 62, 102, 126, 186, 223, 231], "oct": 102, "octahedr": 55, "octahedron": 89, "octav": [43, 143, 244], "octave_cod": [43, 211], "octavecodegen": 244, "octavecodeprint": 211, "octnam": 244, "octob": 113, "od": [6, 11, 20, 85, 121, 125, 136, 143, 225, 228, 268, 289], "odd": [15, 18, 25, 36, 38, 39, 40, 50, 54, 62, 63, 67, 68, 70, 92, 101, 102, 113, 196, 206, 207, 211, 229], "oddbal": 62, "oddhandl": 39, "oddpred": 39, "ode0106": 227, "ode0123": 227, "ode_": 227, "ode_1st_homogeneous_coeff_best_integr": 227, "ode_1st_power_seri": 227, "ode_2nd_power_series_ordinari": 227, "ode_2nd_power_series_regular": 227, "ode_hintnam": 227, "ode_ord": [227, 228, 229], "ode_problem": 227, "ode_sol_simpl": 227, "odeadvisor": 227, "odel": 98, "odenonlinearerror": 227, "odeordererror": 227, "odesimp": 227, "oei": [67, 70, 102, 207], "oeyag": 63, "of_typ": [201, 202], "ofcours": 260, "off": [62, 72, 87, 93, 101, 103, 128, 137, 160, 198, 207, 211, 227, 242, 253, 256, 282], "off_circl": 76, "offer": [7, 42, 43, 53, 62, 103, 116, 143, 185, 195, 201, 206, 246, 264], "offici": [1, 12, 33, 62, 116, 143, 185, 195, 230, 250, 286], "offset": [42, 43, 62, 67, 70, 236], "often": [4, 6, 11, 18, 19, 20, 22, 28, 42, 43, 44, 52, 62, 70, 72, 74, 87, 89, 98, 102, 103, 112, 136, 140, 185, 194, 195, 198, 199, 201, 204, 207, 212, 218, 219, 224, 227, 231, 249, 250, 277, 282, 283, 284, 288], "oh": 278, "ok": [43, 54, 211, 227], "okai": 63, "old": [4, 10, 11, 12, 62, 63, 64, 90, 140, 145, 181, 191, 197, 198, 202, 211, 212, 223, 227, 230, 232, 277], "old_assumpt": 165, "old_frac_field": [201, 202], "old_fractionfield": 201, "old_poly_r": [84, 85, 198, 201, 202], "old_polynomialr": 201, "oldchar": 252, "older": [4, 7, 11, 85, 126, 201, 211, 229], "oldid": 54, "olga": 206, "ollwd": 63, "omega": [12, 43, 44, 53, 87, 102, 117, 123, 125, 141, 144, 150, 152, 177, 186, 190, 191, 194, 196, 211, 218, 231], "omega_": 87, "omicron": [12, 211], "omit": [6, 10, 18, 20, 43, 54, 61, 62, 63, 67, 87, 89, 92, 98, 178, 211, 212, 219, 221, 229, 235, 244, 249, 278], "omposit": 213, "on_circl": 76, "on_morph": 77, "onc": [1, 4, 11, 12, 18, 19, 20, 43, 45, 46, 53, 58, 62, 63, 67, 70, 78, 87, 89, 103, 106, 118, 120, 136, 140, 181, 186, 188, 195, 197, 199, 201, 207, 211, 212, 220, 221, 223, 227, 230, 237, 249, 260, 277, 278, 288, 289], "ond": 0, "one": [3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 32, 34, 35, 38, 39, 41, 42, 43, 45, 46, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 70, 72, 73, 74, 75, 76, 78, 79, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 112, 113, 116, 117, 120, 121, 126, 127, 130, 140, 141, 143, 145, 148, 149, 150, 156, 161, 170, 174, 176, 178, 179, 180, 181, 184, 185, 186, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 218, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 232, 235, 237, 238, 242, 243, 244, 246, 249, 250, 252, 256, 261, 263, 265, 276, 277, 278, 280, 282, 283, 284, 286, 287, 288], "one_half": 62, "one_qubit_box": 156, "oneform": 64, "onequbitg": 160, "ones": [3, 4, 10, 20, 33, 43, 53, 58, 62, 87, 89, 92, 93, 95, 98, 101, 102, 126, 149, 170, 176, 180, 200, 204, 214, 224, 227, 232, 238, 244, 252, 256, 261, 284, 287], "oneshot": 170, "onli": [1, 4, 6, 7, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 25, 26, 27, 28, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 48, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 75, 76, 78, 79, 80, 85, 87, 89, 90, 91, 92, 93, 98, 99, 102, 103, 104, 108, 110, 112, 118, 120, 126, 128, 129, 130, 132, 133, 135, 137, 138, 140, 141, 144, 149, 151, 170, 171, 175, 176, 178, 181, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 223, 224, 227, 228, 229, 231, 232, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 249, 250, 251, 256, 259, 261, 263, 265, 266, 277, 278, 280, 281, 283, 284, 288, 289], "onlin": [3, 6, 121, 224, 249], "onlinelibrari": 231, "only_alt": 53, "only_doubl": 87, "only_integ": 197, "only_sym": 53, "onset": 149, "onto": [63, 75, 76, 77, 87, 91, 98, 101, 103, 206], "oo": [6, 11, 14, 18, 19, 24, 39, 41, 61, 62, 66, 67, 68, 70, 75, 87, 89, 92, 98, 112, 114, 162, 174, 177, 202, 204, 207, 216, 217, 218, 219, 223, 226, 227, 229, 230, 231, 236, 249, 252, 278, 282], "oohai": 211, "ooo": 249, "oooo": [106, 249], "oop": 280, "op": [43, 62, 98, 165, 176, 190, 194, 220, 249, 250], "op_point": [121, 122, 130, 140], "opaqu": [87, 211], "open": [0, 1, 3, 4, 6, 7, 9, 10, 26, 27, 28, 30, 33, 41, 62, 64, 68, 89, 92, 112, 126, 129, 143, 211, 219, 226, 230, 231, 253, 282, 284], "oper": [3, 5, 6, 11, 18, 19, 20, 27, 28, 29, 31, 35, 39, 43, 53, 54, 55, 61, 62, 63, 64, 65, 66, 68, 70, 72, 80, 82, 85, 87, 92, 93, 95, 102, 104, 112, 113, 116, 121, 122, 130, 134, 140, 143, 148, 152, 153, 157, 159, 160, 161, 162, 167, 168, 171, 173, 174, 175, 176, 185, 186, 188, 193, 198, 199, 200, 201, 202, 204, 206, 207, 208, 211, 214, 216, 219, 220, 223, 226, 227, 229, 230, 233, 234, 235, 236, 242, 243, 246, 249, 250, 256, 267, 271, 273, 274, 279, 280, 281, 283, 288], "operand": [10, 12, 54, 62, 187, 206, 259], "operar": 62, "operationnotsupport": 204, "operator_": 165, "operator_to_st": 171, "operatornam": [20, 35, 67, 68, 70, 87, 89, 196, 199, 207, 211, 214, 219, 221, 229], "operators_to_st": 166, "operatorset": [154, 166], "opinion": [13, 32], "oplu": [92, 160], "oppenheim": 246, "opportun": [4, 6, 223], "opportunist": 43, "oppos": [43, 250, 278], "opposit": [22, 58, 78, 92, 93, 117, 199, 202, 219, 223, 230, 238, 249, 256, 258, 288], "oppposit": 117, "opqrstuvwxi": 63, "opt": [198, 204, 223, 242, 284], "opt2": 43, "opt_cs": [6, 223], "opt_sub": 223, "optic": [147, 148, 149, 150, 273], "optical_medium": 147, "optim": [6, 11, 28, 43, 46, 53, 66, 92, 102, 116, 143, 156, 160, 207, 211, 212, 220, 223, 231, 243], "optimis": [18, 227], "optims_c99": 43, "option": [1, 4, 5, 6, 7, 8, 12, 20, 22, 24, 36, 38, 41, 43, 53, 60, 61, 62, 63, 64, 65, 66, 68, 71, 72, 75, 76, 78, 79, 81, 89, 90, 93, 95, 98, 99, 102, 103, 104, 105, 110, 112, 116, 117, 118, 120, 121, 122, 125, 143, 149, 160, 165, 166, 168, 171, 173, 178, 180, 185, 186, 191, 197, 198, 199, 200, 201, 202, 206, 207, 208, 210, 211, 212, 213, 214, 216, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 233, 236, 237, 242, 243, 244, 247, 249, 250, 256, 281, 287, 288], "optionerror": 204, "optionflag": 242, "oq": 194, "oracl": 161, "oracleg": 161, "orang": 110, "orb": 53, "orbit": [53, 60, 176, 177, 179], "orbit_rep": 53, "orbit_transvers": 53, "ord": [58, 63, 98], "order": [3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 22, 24, 29, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 75, 78, 79, 81, 84, 87, 89, 90, 91, 92, 93, 98, 99, 102, 103, 104, 105, 106, 112, 113, 116, 120, 121, 125, 126, 127, 128, 129, 137, 138, 139, 140, 141, 149, 153, 157, 160, 170, 171, 172, 173, 174, 175, 176, 180, 181, 185, 186, 188, 190, 191, 194, 195, 197, 198, 199, 200, 201, 202, 204, 206, 208, 210, 211, 212, 213, 214, 217, 219, 223, 224, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 242, 243, 244, 246, 249, 250, 252, 256, 258, 260, 261, 266, 278, 280, 281, 283, 287, 288, 289], "order_equation_with_variable_coeffici": 227, "order_symbol": 62, "ordered_flag": 249, "ordered_partit": 249, "ordering_of_class": 73, "ordin": [197, 227, 252], "ordinari": [3, 18, 19, 23, 41, 43, 53, 62, 66, 67, 68, 70, 80, 84, 85, 89, 99, 112, 136, 198, 200, 201, 210, 217, 227, 232, 246, 282, 288], "ordinarili": 206, "org": [0, 3, 6, 7, 12, 18, 20, 35, 37, 38, 39, 41, 42, 43, 45, 46, 50, 51, 53, 54, 61, 62, 63, 64, 65, 67, 68, 70, 72, 74, 78, 79, 80, 89, 90, 91, 92, 93, 95, 98, 102, 110, 112, 114, 115, 145, 147, 148, 149, 151, 152, 153, 157, 158, 159, 162, 164, 165, 174, 176, 186, 188, 191, 193, 200, 202, 205, 207, 211, 214, 218, 219, 220, 223, 224, 227, 230, 231, 243, 244, 245, 247, 249, 256, 258, 262, 264, 266, 284, 287], "organ": 136, "orient": [10, 35, 74, 78, 93, 120, 126, 128, 130, 133, 137, 141, 143, 186, 190, 192, 194, 195, 204, 249, 256, 257, 264, 265, 271], "orient_axi": [10, 117, 120, 186, 188], "orient_body_fix": 186, "orient_explicit": 186, "orient_new": [256, 258], "orient_new_": 261, "orient_new_axi": [256, 259, 261], "orient_new_bodi": [256, 261], "orient_new_quaternion": [256, 261], "orient_new_spac": [256, 261], "orient_quaternion": 186, "orient_space_fix": 186, "orientnew": [128, 130, 133, 134, 135, 140, 144, 186, 188, 190, 192, 194, 195], "orig": 204, "orig_expr": 171, "orig_ext": 202, "orig_frac": 288, "origin": [5, 11, 12, 16, 18, 25, 33, 35, 53, 54, 55, 58, 61, 62, 63, 66, 67, 68, 70, 71, 73, 75, 77, 87, 89, 93, 98, 102, 110, 112, 113, 120, 130, 140, 143, 168, 171, 181, 187, 192, 197, 198, 200, 202, 206, 207, 210, 211, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 237, 242, 249, 250, 256, 259, 260, 261, 262, 263, 265, 266, 288], "orlando": 205, "ormv": 63, "orszag": 227, "orthocent": 78, "orthogon": [35, 39, 77, 91, 98, 174, 186, 195, 256, 258], "orthogonal_direct": 77, "orthogonal_matrix": 39, "orthogonalbra": 174, "orthogonalhandl": 39, "orthogonalket": 174, "orthogonalpolynomi": 7, "orthogonalpred": 39, "orthogonalst": 174, "orthonorm": [98, 143, 171, 195, 260], "orthopoli": [70, 207], "osc": [62, 66], "oscar": 196, "oscil": [62, 273], "oscillatori": [62, 66, 216], "osi": 63, "osineq": 12, "ostrogradski": 89, "other": [1, 4, 5, 6, 7, 10, 11, 12, 14, 15, 16, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 35, 39, 42, 43, 44, 45, 53, 54, 55, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 87, 89, 92, 93, 95, 98, 102, 103, 104, 105, 106, 112, 116, 117, 120, 121, 126, 127, 130, 131, 136, 137, 140, 141, 143, 145, 148, 149, 150, 160, 171, 173, 174, 175, 176, 179, 180, 181, 182, 183, 185, 186, 188, 190, 194, 195, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 211, 212, 213, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 237, 238, 240, 243, 244, 245, 246, 249, 250, 256, 259, 260, 263, 265, 267, 274, 277, 278, 280, 282, 283, 284, 288], "otherfram": [186, 256], "otherpoint": 190, "otherwis": [3, 4, 14, 18, 19, 20, 41, 42, 43, 53, 54, 58, 61, 62, 63, 66, 68, 70, 71, 72, 75, 76, 77, 78, 87, 89, 91, 92, 94, 98, 101, 102, 104, 110, 112, 114, 117, 125, 126, 161, 166, 172, 190, 193, 194, 198, 202, 204, 206, 207, 209, 211, 213, 214, 216, 217, 219, 223, 224, 227, 228, 229, 230, 231, 232, 240, 242, 244, 249, 250, 277, 278, 287], "otim": [141, 232, 233], "our": [7, 9, 10, 16, 20, 33, 43, 62, 70, 87, 98, 102, 129, 181, 194, 195, 197, 198, 200, 202, 206, 207, 208, 211, 218, 221, 224, 227, 230, 242, 277, 280, 281, 283, 288], "out": [7, 12, 18, 19, 20, 25, 42, 43, 53, 54, 62, 63, 64, 67, 70, 78, 87, 89, 95, 98, 102, 105, 112, 113, 126, 128, 130, 133, 143, 153, 157, 168, 171, 173, 175, 176, 198, 199, 201, 202, 206, 207, 208, 209, 211, 212, 218, 221, 223, 227, 232, 233, 242, 244, 249, 250, 280, 282, 283, 287, 288], "out1": 98, "out2": 98, "out_8598435338387848786": [43, 244], "outcom": [92, 179, 231], "outer": [29, 89, 123, 141, 143, 159, 164, 165, 186, 188, 190, 195, 213, 219, 235, 256, 259, 260], "outer_product": 165, "outermost": [211, 219, 223, 235], "outerproduct": [159, 165], "outfram": 190, "outlier": 231, "outlin": [0, 3, 4, 18, 20, 60, 89, 198, 227], "outperform": 43, "output": [3, 6, 7, 10, 12, 13, 16, 18, 20, 26, 29, 31, 42, 43, 62, 63, 70, 86, 89, 90, 92, 93, 95, 98, 102, 103, 104, 109, 112, 121, 125, 126, 134, 140, 143, 144, 148, 149, 160, 172, 176, 185, 186, 190, 191, 192, 195, 201, 204, 207, 211, 212, 221, 223, 224, 226, 227, 229, 231, 236, 242, 243, 244, 246, 249, 250, 256, 280, 282, 283, 284, 287, 288, 289], "output_eqn": 125, "outputargu": [43, 244], "outputbuff": 211, "outputcheck": 242, "outputtexfil": 211, "outright": 230, "outsid": [6, 26, 39, 53, 62, 70, 73, 78, 93, 102, 116, 181, 195, 207, 223, 278, 283], "outweigh": 198, "over": [4, 7, 8, 10, 12, 15, 20, 22, 25, 32, 35, 41, 42, 43, 44, 53, 54, 57, 61, 62, 63, 64, 65, 66, 67, 76, 78, 85, 87, 91, 92, 95, 98, 99, 102, 105, 106, 114, 120, 126, 143, 144, 155, 171, 174, 176, 180, 181, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 214, 216, 218, 223, 224, 226, 227, 229, 230, 231, 232, 233, 235, 236, 245, 249, 250, 256, 259, 263, 266, 282, 286, 288], "over_power_basi": 206, "overal": [62, 183, 197, 229], "overcompens": 63, "overconstrain": 30, "overdetermin": [28, 229, 230], "overflow": [43, 246], "overhang": [105, 106], "overhead": [63, 103, 208], "overlap": [74, 79, 101, 198, 219, 252], "overleaf": 7, "overli": 28, "overlin": [7, 18, 70], "overload": [198, 201, 202, 260, 283], "overrid": [11, 12, 43, 62, 71, 72, 78, 104, 174, 211, 236, 243, 244, 249, 250], "overridden": [184, 198, 213, 288], "overview": [199, 230, 264, 265], "overwrit": [143, 185], "overwritten": 126, "own": [3, 5, 6, 12, 20, 37, 46, 53, 54, 62, 78, 106, 120, 126, 143, 206, 211, 218, 223, 227, 246, 249, 250, 282], "ownership": 200, "oxford": 93, "p": [0, 1, 10, 11, 12, 16, 18, 19, 20, 22, 23, 25, 35, 37, 38, 39, 43, 44, 45, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 67, 68, 70, 72, 75, 76, 77, 78, 79, 84, 85, 87, 89, 93, 95, 98, 102, 104, 105, 106, 108, 112, 113, 117, 120, 121, 122, 123, 125, 126, 130, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 155, 174, 176, 181, 187, 190, 192, 194, 196, 197, 199, 200, 201, 204, 205, 207, 208, 211, 213, 214, 218, 219, 221, 223, 224, 227, 229, 230, 231, 232, 236, 237, 249, 256, 259, 260, 261, 262, 263, 265, 284, 288], "p0": [58, 72, 206, 227], "p1": [44, 53, 54, 58, 61, 72, 74, 75, 76, 77, 78, 105, 112, 117, 120, 130, 143, 145, 190, 197, 201, 202, 204, 208, 220, 231, 232], "p10": 53, "p11": 74, "p12": 74, "p13": 74, "p1_frame": 120, "p2": [19, 53, 54, 61, 72, 74, 75, 76, 77, 78, 105, 112, 117, 120, 143, 190, 197, 201, 202, 204, 208, 220, 231], "p20": 53, "p21": 74, "p22": 74, "p23": 74, "p3": [61, 72, 74, 75, 77, 78, 112, 197, 201, 220, 231], "p4": [72, 75, 77, 78, 197], "p5": [75, 77, 78, 197], "p6": [75, 78, 197], "p64": 202, "p7": [75, 78, 197], "p8": 197, "p9": 197, "p90": 62, "p_": [53, 58, 62, 89, 181, 224, 227, 232], "p_0": [53, 58, 80, 221, 224], "p_1": [53, 58, 63, 80, 102, 194, 221, 224], "p_2": [53, 63, 80, 102, 194, 221], "p_3": [63, 194], "p_dom": 201, "p_domain": 202, "p_expr": [201, 202], "p_frame": 120, "p_i": [53, 58, 102], "p_invers": 227, "p_j": [53, 58], "p_k": [53, 102], "p_m": 70, "p_masscent": 120, "p_n": [63, 67, 70, 89, 207], "p_new": 231, "p_o_p": 126, "p_o_q": 143, "p_p": 53, "p_p_q": 143, "p_p_r": 126, "p_pt": 126, "p_q": 221, "p_r": 80, "p_so_o": 126, "p_val": 25, "p_x": 237, "p_y": 237, "p_z": 237, "pa": [98, 121, 123, 138, 141, 144], "packag": [1, 3, 23, 27, 28, 33, 90, 103, 104, 109, 136, 143, 191, 211, 242, 253, 262, 263, 282], "pad": [12, 43, 63, 64, 65, 77, 102], "padded_kei": 63, "pafnuti": 7, "page": [0, 1, 3, 4, 6, 7, 10, 11, 12, 18, 19, 22, 23, 25, 26, 30, 32, 43, 44, 45, 61, 67, 87, 102, 103, 120, 121, 143, 181, 197, 200, 201, 202, 205, 211, 221, 224, 247, 265, 288], "page52": 181, "page78": 181, "page_228": 70, "page_888": 89, "pai": 41, "pain": 4, "pair": [6, 12, 16, 22, 25, 42, 43, 53, 54, 62, 63, 68, 74, 79, 86, 98, 102, 126, 130, 166, 168, 170, 171, 176, 185, 196, 198, 201, 202, 204, 206, 207, 212, 217, 218, 220, 221, 223, 224, 227, 230, 231, 244, 249, 260, 277, 284], "pairwis": [7, 39, 42, 62, 67, 79, 98, 102, 224, 229], "pakianathan": 48, "palancz08": 205, "palimpsest": 63, "palindrom": 102, "pal\u00e1ncz": 205, "panagioti": 207, "papadopoulo": 142, "paper": [0, 6, 102, 128, 195, 206, 207, 220, 221, 224, 227], "paperforkcgx": 128, "paperforkcgz": 128, "paperforkl": 128, "paperframecgx": 128, "paperframecgz": 128, "paperradfront": 128, "paperradrear": 128, "paperwb": 128, "paprocki": 0, "parabol": 105, "parabola": 256, "paragraph": [4, 6, 7, 20, 42], "parallel": [35, 72, 75, 76, 78, 89, 109, 112, 115, 194, 195, 204, 262, 266], "parallel_axi": [117, 123], "parallel_lin": 75, "parallel_plan": 76, "parallel_poly_from_expr": 207, "parallelogram": 195, "param": [43, 64, 98, 224], "param_circl": 266, "paramet": [4, 7, 10, 11, 12, 22, 28, 30, 35, 36, 38, 41, 43, 44, 45, 53, 54, 58, 60, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 85, 87, 89, 90, 92, 93, 95, 98, 99, 101, 102, 104, 105, 108, 110, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 125, 126, 128, 143, 145, 147, 148, 149, 151, 152, 153, 155, 156, 157, 159, 160, 161, 164, 165, 166, 168, 170, 171, 173, 174, 175, 176, 177, 178, 180, 186, 187, 188, 190, 191, 192, 195, 196, 197, 199, 200, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 240, 242, 243, 244, 246, 247, 249, 250, 256, 258, 259, 260, 261, 266, 278, 283], "parameter": [25, 64, 71, 72, 75, 78, 224], "parameter_valu": [73, 76], "parametr": [43, 70, 71, 75, 98, 197, 224, 230, 256, 259, 266], "parametric2dlineseri": 197, "parametric3dlineseri": 197, "parametricintegr": 256, "parametricregion": [256, 259, 266], "parametricsurfaceseri": 197, "parametris": [62, 219], "parametrize_ternary_quadrat": 224, "paraxi": [145, 149], "pare1970": 42, "pareigi": 42, "paren": 211, "parent": [10, 53, 62, 85, 120, 137, 186, 190, 197, 201, 202, 206, 242, 246, 256, 260, 261], "parent_axi": [10, 120], "parent_fram": [10, 137], "parent_interfram": [10, 120, 137], "parent_joint_po": [10, 120], "parent_point": [10, 120, 129, 131, 137], "parent_vector": 120, "parenthes": [6, 12, 62, 104, 116, 164, 165, 195, 211, 235, 252], "parenthesi": [211, 235], "parenthesize_sup": 211, "pareto": 231, "pareto_distribut": 231, "paretodistribut": 231, "parg": 70, "pariti": [18, 54, 207], "parity_": [18, 62], "park": 63, "pars": [10, 54, 62, 95, 126, 137, 208, 210, 267, 275], "parsabl": 11, "parse_autolev": 126, "parse_c": 3, "parse_expr": [3, 10, 18, 31, 104], "parse_latex": [31, 104], "parse_mathematica": [3, 10, 104], "parse_maxima": [3, 104], "parser": [3, 95, 104, 136, 143, 242, 273], "part": [3, 4, 6, 7, 10, 11, 18, 19, 20, 22, 35, 40, 53, 54, 61, 62, 63, 67, 68, 70, 78, 85, 87, 89, 92, 93, 95, 102, 112, 116, 117, 120, 121, 125, 126, 128, 134, 136, 137, 141, 143, 160, 172, 176, 185, 195, 199, 201, 202, 204, 206, 207, 208, 210, 211, 212, 219, 221, 223, 224, 227, 229, 242, 244, 246, 249, 278, 283, 288], "part1": 120, "part2": 120, "part_sol": 227, "partcompon": 246, "partfrac": [207, 213], "parti": 247, "partial": [1, 11, 41, 53, 60, 61, 62, 64, 66, 67, 68, 102, 104, 143, 170, 186, 190, 192, 202, 205, 208, 211, 213, 220, 223, 227, 228, 232, 238, 256, 263, 278, 288], "partial_list": 207, "partial_veloc": [143, 186, 190], "partialderiv": 238, "particl": [10, 117, 119, 120, 121, 126, 130, 131, 136, 138, 140, 143, 144, 152, 155, 162, 163, 174, 176, 179, 181, 194, 237, 273], "particle_p": 126, "particle_r": 126, "particular": [4, 6, 10, 11, 12, 18, 19, 23, 25, 39, 44, 53, 62, 63, 66, 70, 73, 87, 89, 92, 95, 98, 102, 105, 108, 136, 160, 171, 199, 200, 201, 202, 204, 206, 207, 217, 219, 221, 223, 224, 227, 229, 230, 242, 244, 246, 284, 286, 288], "particularli": [18, 66, 89, 201, 202, 221, 288, 289], "partit": [7, 49, 53, 67, 102, 130, 140, 142, 224, 231, 246, 268], "partition_": [51, 67], "partitionfunctionp": 102, "partitions_": 102, "pascal": [67, 102], "pass": [3, 4, 5, 6, 11, 12, 14, 15, 18, 19, 20, 24, 25, 28, 29, 31, 34, 35, 38, 41, 42, 43, 53, 54, 62, 63, 64, 66, 68, 69, 70, 72, 75, 76, 78, 89, 90, 92, 93, 95, 98, 99, 102, 104, 105, 110, 112, 117, 125, 126, 130, 143, 144, 148, 165, 166, 170, 171, 173, 174, 186, 191, 197, 198, 200, 201, 202, 204, 206, 207, 209, 211, 212, 218, 219, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 242, 243, 244, 245, 247, 249, 250, 252, 255, 256, 277, 278, 283, 287, 288, 289], "passiv": 173, "past": [12, 68, 102, 210, 211, 287], "pastabl": 252, "pat_matrix": 115, "patashnik": 54, "patch": [10, 64, 211], "path": [1, 5, 6, 10, 53, 78, 84, 112, 134, 192, 194, 220, 223, 227, 230, 242, 243, 246, 247, 249, 252, 253, 254, 263], "pathsep": 252, "patrizia": 229, "pattern": [10, 11, 12, 18, 20, 62, 87, 89, 92, 93, 104, 170, 201, 221, 223, 227, 229, 278, 283], "paul": [67, 246], "paulbourk": 78, "pauli": [115, 273], "pauli_matric": [115, 151], "paulialgebra": 151, "paulimatric": 151, "pb": 148, "pc": [120, 208], "pc_group": 52, "pc_present": 52, "pc_resent": 52, "pc_sequenc": [52, 53], "pc_seri": [52, 53], "pcg": 52, "pcgroup": 52, "pdb": 242, "pde": [225, 227, 268], "pde_1st_linear_constant_coeff": 228, "pde_1st_linear_constant_coeff_homogen": 228, "pde_1st_linear_variable_coeff": 228, "pde_hint": 228, "pde_hintnam": 228, "pde_separ": 228, "pde_separate_add": 228, "pde_separate_mul": 228, "pdf": [3, 7, 8, 29, 32, 41, 42, 53, 63, 65, 67, 84, 89, 98, 102, 105, 106, 110, 197, 200, 202, 205, 210, 211, 214, 220, 223, 224, 227, 231, 249, 256], "pdiv": [202, 207], "pdp": 284, "pdsolv": 228, "pe": 61, "peak": 145, "pearc": 223, "pearson": 231, "peculiar": [87, 195], "pedregosa": 0, "peek": [246, 288], "peerj": 0, "pell": 224, "penalti": 116, "pendent": 143, "pendulum": [29, 120, 125, 127, 131, 136, 140, 144, 194, 273], "pendulum_joint": 120, "penros": [27, 95, 98], "penrose_pseudoinvers": 98, "pent": 73, "pentagonal_number_theorem": 67, "peopl": [4, 6, 65, 70, 89, 98, 181, 231], "pep": [7, 43, 62, 92], "per": [4, 63, 98, 103, 108, 150, 180, 186, 192, 197, 202, 207, 208, 256, 260, 262, 265], "percent": [98, 230], "percentag": [98, 102], "perfect": [6, 20, 29, 53, 62, 102, 224, 230, 282, 283], "perfect_numb": 102, "perfect_pow": [62, 102], "perfectli": [54, 61, 62, 63, 204, 207, 210], "perfectnumb": 102, "perform": [3, 10, 11, 12, 15, 16, 18, 20, 40, 42, 43, 44, 53, 54, 57, 61, 62, 63, 65, 66, 68, 75, 79, 86, 89, 96, 98, 102, 103, 118, 121, 128, 130, 136, 140, 141, 143, 160, 161, 170, 173, 176, 192, 195, 199, 200, 201, 204, 206, 207, 212, 213, 214, 218, 223, 224, 227, 229, 230, 231, 232, 243, 249, 256, 258, 260, 263, 277, 278, 282, 283, 288], "perhap": [10, 14, 43, 62, 92, 102, 161, 201, 229, 244, 277], "periapsi": 72, "perimet": 78, "period": [4, 6, 10, 26, 41, 62, 63, 68, 87, 102, 112, 140, 150, 172, 179, 206, 211, 214, 217, 226, 230, 231, 249], "period_find": 172, "periodic_argu": 68, "periodic_continued_fract": 102, "perl": 102, "perm": [50, 52, 53, 54, 55, 60, 67, 93, 95, 98, 232], "perm1": 233, "perm2": 233, "perm2tensor": 237, "perm_cycl": [10, 54, 211], "perm_group": [47, 52, 53, 54, 59, 60], "perm_mat": [121, 122, 140], "perman": 98, "permanent_": 98, "permeabl": 147, "permiss": [102, 196], "permit": [18, 54, 64, 68, 92, 102, 197], "permitt": 147, "permut": [7, 44, 45, 47, 49, 50, 52, 55, 58, 59, 60, 63, 67, 70, 93, 95, 98, 122, 176, 196, 200, 202, 207, 224, 232, 233, 237, 249, 268, 288], "permutation_oper": 176, "permutationgroup": [45, 47, 50, 52, 53, 54, 59, 60, 206], "permutationinvolut": 249, "permutationmatrix": [95, 98], "permutationoper": 176, "permute_backward": 98, "permute_col": 93, "permute_forward": 98, "permute_row": 93, "permute_sign": [224, 249], "permutebkwd": 98, "permutedim": [95, 232, 233], "permutefwd": 98, "permutlist": 176, "perpendicualar": 76, "perpendicular": [72, 75, 76, 78, 91, 120, 134, 149, 195], "perpendicular_bisector": 75, "perpendicular_lin": [75, 76], "perpendicular_plan": 76, "perpendicular_seg": 75, "persist": 246, "person": [7, 11], "perspect": [92, 102, 112, 181, 197, 244, 261, 265], "pertain": [187, 193], "pertin": [144, 198, 206], "peter": [61, 67, 70, 102, 142, 193, 207, 249], "petkovsek": [61, 229], "pexquo": [202, 207], "pfd": 207, "pfda": 207, "pfister": 205, "pfq": 227, "pgl": 45, "pgl2f5": 45, "pgl_2": 45, "pgroup": [53, 55], "phantom": 204, "phase": [62, 89, 110, 145, 148, 150, 160, 161, 230], "phase_retard": 148, "phase_unit": 110, "phaseg": 160, "phdthesisthieu": 227, "phenomenon": [41, 181, 204, 214, 283], "phi": [12, 53, 62, 63, 67, 70, 87, 91, 98, 102, 114, 143, 150, 159, 161, 196, 198, 206, 211, 227, 256, 266], "phi1": 150, "phi2": 150, "phi_0": 70, "phi_a": 148, "phi_b": 148, "phia": 148, "phib": 148, "phidd": 211, "phil": 196, "philosoph": 11, "philosophi": [180, 227, 230, 273], "php": [54, 102, 224, 231], "phrase": [7, 11, 63], "phy": [155, 181, 196], "physic": [3, 6, 16, 43, 55, 98, 102, 105, 106, 108, 109, 110, 111, 112, 114, 115, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 190, 191, 196, 205, 231, 246, 249, 263, 282, 288], "physicalconst": 180, "pi": [6, 10, 11, 12, 15, 18, 20, 23, 24, 26, 29, 31, 34, 35, 36, 38, 39, 40, 41, 43, 54, 61, 62, 64, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 81, 87, 89, 98, 102, 114, 120, 128, 143, 145, 147, 148, 149, 150, 152, 160, 171, 173, 174, 177, 179, 186, 196, 197, 199, 201, 202, 207, 211, 214, 218, 219, 220, 221, 223, 226, 227, 229, 230, 231, 249, 256, 259, 266, 277, 282, 288], "pi_": 20, "pi_hex_digit": 102, "piab": 167, "piabbra": 167, "piabhamiltonian": 167, "piabket": 167, "pic": 42, "pick": [9, 18, 63, 67, 140, 170, 172, 288], "pickl": 3, "pictori": 105, "pictur": [52, 211], "piec": [62, 66, 221, 244], "piecewis": [19, 20, 43, 61, 67, 70, 89, 92, 105, 174, 211, 213, 214, 229, 230, 231, 250, 278], "piecewise_exclus": 68, "piecewise_fold": 68, "piecewise_integr": 68, "pietjepuk314": 211, "pii": [205, 220], "pin": [10, 35, 105, 106, 108, 120], "pinjoint": [10, 120, 129, 131, 137], "pinv": [95, 98], "pinv_solv": [94, 98], "pip": [1, 3, 33, 104], "pipe": 242, "pitch": 128, "pitfal": [13, 20, 195, 201, 280, 285, 288], "pivot": [98, 200, 284], "piziak": 98, "pkg": [90, 191], "pkgdata": [248, 275], "pkgname": 253, "pkgpath": 253, "place": [7, 8, 10, 11, 12, 18, 20, 26, 32, 42, 54, 55, 62, 63, 68, 78, 94, 98, 101, 102, 104, 112, 143, 144, 205, 206, 211, 212, 218, 220, 223, 227, 246, 249, 276, 277, 284, 288], "placehold": 250, "plai": [18, 61, 128, 138, 224, 280, 282, 283], "plain": [4, 6, 18, 62, 70, 90, 191, 207, 211], "plaintext": [63, 211], "plan": [41, 116, 202, 287], "planar": [72, 78, 106, 120, 149], "planar_coordin": 120, "planar_spe": 120, "planar_vector": 120, "planarjoint": 120, "planck": 183, "planck_const": 158, "plane": [6, 35, 62, 70, 72, 74, 75, 77, 78, 89, 98, 110, 120, 128, 148, 149, 194, 195, 219, 230, 266, 274, 288], "plane_vector": 120, "planet": 136, "planetmath": 227, "plank": 158, "plant": 112, "plant_mat": 112, "plate": 148, "platform": [6, 62, 176, 195, 227, 243], "platon": 55, "plausibl": 198, "pleas": [0, 4, 6, 7, 9, 10, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 39, 41, 62, 70, 74, 87, 102, 116, 121, 126, 136, 140, 141, 148, 149, 170, 185, 195, 196, 197, 198, 204, 205, 219, 223, 224, 229, 230, 250, 256, 261, 285, 289], "plenti": 10, "plot": [6, 20, 29, 33, 71, 72, 74, 75, 78, 85, 90, 98, 105, 106, 111, 143, 160, 163, 169, 214, 267, 273, 274, 282, 287], "plot3d": [98, 197], "plot3d_parametric_lin": 197, "plot3d_parametric_surfac": 197, "plot_bending_mo": [105, 106], "plot_deflect": [105, 106], "plot_direct": 7, "plot_gat": 160, "plot_ild_mo": 105, "plot_ild_react": 105, "plot_ild_shear": 105, "plot_implicit": 197, "plot_interv": [71, 72, 75, 78], "plot_loading_result": [105, 106], "plot_parametr": 197, "plot_shear_forc": [105, 106], "plot_shear_stress": 105, "plot_slop": [105, 106], "plotgrid": 105, "plotli": 10, "plt": [29, 85, 143], "plu": [43, 61, 98, 104, 143, 156, 207, 211, 221, 249, 250], "plug": [126, 181], "plural": [6, 7], "pm": [18, 22, 23, 25, 35, 61, 87, 89, 199, 210, 218, 224, 227], "pmatrix": 181, "pmf": 231, "pmint": 89, "pmod": [53, 62, 63, 67, 98, 221], "pn": [53, 130, 140], "pn0": 251, "png": [29, 42, 90, 98, 105, 106, 110, 191, 197, 211, 214], "po": [53, 87, 92, 93, 123, 141, 143, 202, 229], "pochhamm": [67, 211, 223], "pochhammer_symbol": 67, "pohlig": 102, "pohst": 206, "poin": 64, "poincar\u00e9": 148, "point": [3, 4, 6, 7, 11, 12, 16, 18, 26, 28, 29, 33, 35, 41, 43, 44, 53, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 84, 85, 86, 87, 89, 98, 102, 105, 106, 108, 110, 117, 120, 121, 122, 123, 125, 126, 128, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 156, 178, 181, 187, 190, 192, 195, 197, 198, 201, 202, 204, 206, 207, 211, 213, 217, 218, 219, 227, 229, 230, 231, 243, 246, 249, 250, 252, 256, 259, 261, 262, 263, 265, 266, 274, 277, 278, 280, 283], "point1": [26, 187, 259], "point2": [26, 187, 259], "point2d": [71, 72, 73, 74, 75, 77, 78, 79], "point3d": [75, 76, 77, 149], "point_cflexur": 105, "point_o": 126, "point_p": 64, "point_r": 64, "point_to_coord": 64, "pointer": [43, 244, 245], "pointer_const": 43, "pointless": 288, "pointload": [105, 106], "pointwis": [53, 60], "pointwise_stabil": 53, "poisson": 231, "poisson_distribut": 231, "poisson_point_process": 231, "poissondistribut": 231, "poissonprocess": 231, "pol": 64, "polar": [64, 68, 70, 72, 78, 105, 114, 146, 197, 219, 223, 230, 273], "polar_lift": [68, 70, 223], "polar_mo": 105, "polar_moment_of_inertia": [72, 78], "polar_second_moment_of_area": [72, 78], "polarcomplexregion": 219, "polaris": 149, "polarizing_beam_splitt": 148, "pole": [6, 11, 70, 87, 112, 120, 149, 218, 221, 227], "pole_color": 110, "pole_markers": 110, "pole_zero_numerical_data": 110, "pole_zero_plot": 110, "poleerror": 62, "poli": [3, 11, 22, 45, 61, 62, 63, 67, 68, 70, 71, 78, 84, 89, 93, 95, 98, 102, 143, 198, 199, 203, 204, 206, 207, 208, 210, 213, 226, 227, 229, 230, 242, 274], "polici": [7, 8, 10, 245, 247], "polificationfail": 204, "polish": 223, "pollard": [102, 227], "pollard_pm1": 102, "pollard_rho": 102, "polnomi": 207, "poly1": 78, "poly2": 78, "poly_from_expr": [206, 207], "poly_lc": 204, "poly_r": [201, 202], "poly_tc": 204, "poly_unifi": 202, "polyalphabet": 63, "polybiu": 63, "polyclass": [201, 202, 207], "polyconfig": [204, 207], "polycycl": [49, 53, 268], "polycyclic_group": [52, 53], "polycyclicgroup": 53, "polycyl": 52, "polyel": [201, 202, 204, 208, 209, 211], "polyerror": [22, 204, 207], "polyfunc": [71, 202, 207], "polygamma": [6, 67, 70, 211], "polygamma2": 70, "polygamma_funct": 70, "polygammafunct": 70, "polygon": [6, 72, 73, 74, 79, 197, 266, 274], "polygonmesh": 78, "polygraph": 63, "polyhedr": 55, "polyhedra": 55, "polyhedralgroup": 55, "polyhedron": [49, 53, 89, 249, 268], "polylog": [70, 211], "polylogarithm": 70, "polymatrix": 10, "polymoni": 165, "polynomi": [6, 7, 11, 16, 18, 23, 25, 31, 39, 53, 61, 62, 63, 66, 67, 80, 81, 83, 85, 89, 92, 93, 95, 98, 102, 106, 112, 141, 143, 198, 200, 205, 209, 213, 218, 220, 221, 223, 224, 226, 227, 230, 242, 267, 274, 279, 284, 289], "polynomialerror": [204, 207], "polynomialr": [198, 202, 209], "polyopt": [204, 208], "polyr": [202, 204, 209], "polyroot": 207, "polysi": 229, "polytool": [62, 207, 230], "polytope_integr": 89, "pomer": [102, 246], "pone": 35, "poor": [89, 103], "poorer": 41, "pop": [89, 224], "popen": 211, "popul": 231, "popular": [0, 3, 63, 103, 143, 282], "port": [1, 104, 128, 148], "portabl": [242, 243], "portion": [66, 78, 93, 98], "portug": [58, 237], "pos_from": [10, 120, 126, 128, 129, 130, 137, 143, 190, 194], "pos_vec": 123, "posform": 92, "posifi": [18, 223], "posit": [4, 10, 11, 12, 18, 19, 20, 22, 26, 36, 37, 38, 39, 40, 42, 43, 44, 46, 51, 53, 54, 55, 57, 58, 61, 62, 63, 64, 66, 67, 68, 70, 72, 74, 75, 78, 87, 89, 91, 92, 93, 94, 98, 99, 101, 102, 105, 106, 108, 112, 114, 120, 123, 126, 128, 130, 133, 135, 137, 140, 141, 143, 145, 148, 150, 154, 171, 174, 176, 187, 188, 190, 192, 194, 195, 198, 199, 200, 201, 202, 204, 206, 207, 208, 210, 211, 216, 217, 219, 220, 221, 223, 224, 227, 229, 230, 231, 232, 237, 249, 250, 256, 259, 260, 261, 263, 265, 266, 284, 288, 289], "position2": [187, 259], "position_i": 154, "position_wrt": [256, 260, 261, 262], "position_x": 154, "position_z": 154, "positionbra3d": 154, "positionket3d": 154, "positionstate3d": 154, "positive_definit": 39, "positive_real_numb": 18, "positive_root": 91, "positivedefinitehandl": 39, "positivedefinitematrix": 98, "positivedefinitepred": 39, "positivehandl": 39, "positivepred": 39, "poss": [52, 128, 195], "possess": [117, 141, 237], "possibl": [1, 6, 10, 11, 14, 18, 19, 20, 22, 25, 30, 33, 41, 43, 44, 45, 46, 51, 53, 54, 56, 57, 58, 62, 63, 67, 68, 70, 72, 74, 76, 77, 79, 84, 86, 87, 89, 91, 92, 93, 95, 98, 102, 113, 114, 116, 128, 139, 141, 170, 172, 176, 178, 180, 181, 190, 192, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 237, 242, 244, 245, 246, 247, 249, 250, 260, 261, 263, 279, 280, 283, 288], "possiblezeroq": 284, "possibli": [18, 43, 54, 60, 62, 87, 89, 102, 179, 204, 218, 219, 229, 244, 249, 278, 284], "post": [10, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 43, 56, 62, 211, 212, 223, 242, 283], "postdecr": 43, "postfix": [211, 249], "postincr": 43, "postiv": 70, "postord": 62, "postorder_travers": [10, 62, 283], "postprocess": [43, 207, 212, 223], "postprocessor": [212, 223], "postscript": 211, "postul": 102, "potenti": [10, 18, 74, 95, 98, 102, 121, 122, 123, 125, 135, 136, 187, 193, 201, 206, 211, 218, 221, 223, 227, 245, 246, 259, 265, 273], "potential_energi": [10, 120, 121, 123, 135, 141], "pound": 180, "povm": 170, "pow": [6, 10, 11, 12, 35, 40, 43, 62, 63, 68, 87, 93, 102, 175, 200, 201, 202, 207, 211, 213, 220, 223, 229, 230, 283, 287], "pow_cos_sin": 35, "pow_xin": 208, "powdenest": [68, 223], "power": [10, 12, 24, 29, 35, 40, 43, 52, 53, 54, 63, 65, 66, 68, 84, 85, 87, 89, 91, 93, 95, 102, 103, 112, 126, 143, 148, 159, 162, 175, 178, 180, 181, 182, 186, 198, 199, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 215, 218, 220, 223, 224, 227, 229, 230, 231, 235, 244, 249, 268, 277, 278, 279, 280, 281, 283, 284, 287], "power_bas": [62, 93], "power_basis_ancestor": 206, "power_exp": [62, 93], "power_func": 231, "power_represent": 224, "power_set": 219, "powerbasi": 206, "powerbasisel": 206, "powerfunct": 231, "powerrul": 89, "powerset": 219, "powf": 211, "powi": [43, 211], "powl": [43, 211], "powsimp": [12, 62, 68, 220, 223], "pp": [6, 53, 54, 60, 61, 62, 63, 67, 68, 89, 93, 98, 130, 140, 196, 199, 200, 204, 205, 227, 228, 231], "pp1": 74, "pp2": 74, "pp3": 74, "pprint": [11, 12, 20, 26, 41, 42, 64, 70, 89, 98, 102, 112, 148, 196, 211, 212, 219, 223, 227, 228, 230, 231, 249, 287], "pprint_nod": 211, "pq": 262, "pqa": 224, "pquo": [202, 207], "pr": [4, 10, 61, 120, 202, 204, 205, 207, 230], "prabha": 54, "practic": [5, 8, 16, 18, 22, 25, 28, 31, 51, 53, 62, 63, 72, 137, 140, 143, 197, 198, 199, 201, 206, 208, 235, 280, 281], "pre": [11, 35, 42, 43, 62, 196, 197, 212, 220, 223, 229, 230, 242, 261, 265, 283], "preambl": [90, 191, 211], "prebuilt": 231, "prec": [20, 28, 62, 72, 78, 102, 110, 196, 202, 207, 208, 223, 229], "preced": [6, 7, 12, 44, 54, 62, 63, 66, 67, 156, 223, 250], "precedence_float": 211, "precedence_fracel": 211, "precedence_funct": 211, "precedence_integ": 211, "precedence_mul": 211, "precedence_polyel": 211, "precedence_r": 211, "precedence_unevaluatedexpr": 211, "precedence_valu": 211, "precis": [3, 4, 6, 11, 12, 18, 19, 20, 22, 26, 43, 53, 62, 65, 66, 67, 70, 78, 89, 98, 102, 110, 141, 196, 198, 201, 202, 206, 207, 208, 211, 218, 223, 224, 229, 230, 243, 244, 252, 277, 288], "precision_target": 43, "precisionexhaust": [62, 66], "precomput": [18, 67, 102, 250], "predecr": 43, "predefin": [20, 64, 143, 201, 211, 212, 223, 230, 237, 256, 261], "predetermin": [62, 242], "predic": [10, 11, 36, 37, 41, 104, 207, 223, 249, 268], "predicate_": [37, 38], "predict": [18, 176, 223, 249], "prefer": [1, 3, 6, 10, 11, 18, 20, 22, 27, 28, 29, 43, 45, 54, 61, 62, 70, 102, 104, 120, 126, 176, 180, 181, 186, 197, 200, 202, 204, 206, 211, 219, 223, 227, 229, 236, 242, 244, 247, 250, 282, 284], "preferred_index": [70, 176], "prefix": [4, 43, 62, 98, 102, 180, 183, 184, 201, 204, 208, 211, 224, 227, 243, 244, 249, 273], "prefix_express": 211, "prefix_i1_i2_": 98, "preimag": 198, "preincrement": 43, "preliminari": 281, "prem": [202, 207], "premad": 43, "premis": 42, "premises_kei": 42, "premultipli": 207, "preorder_travers": [10, 62, 283], "prep": [102, 227, 228], "prepar": [18, 121, 209], "prepend": [1, 42, 53, 98, 112, 183, 211, 237], "preprint": 102, "preprocess": [18, 89, 209], "preprocessor": [43, 212, 223, 244], "preprocessor_stat": 244, "prerequisit": 1, "presenc": [62, 68, 92, 108, 125, 130, 140, 227, 235], "present": [0, 3, 7, 10, 11, 12, 16, 41, 42, 46, 49, 53, 54, 56, 60, 62, 65, 89, 98, 102, 105, 108, 110, 112, 121, 128, 176, 178, 186, 188, 191, 192, 197, 198, 204, 205, 206, 210, 211, 224, 230, 244, 250, 253, 259, 260, 261, 265, 268, 289], "preserv": [31, 42, 43, 53, 62, 98, 174, 202, 207, 212, 213, 223], "presimplifi": 130, "press": [12, 42, 44, 46, 54, 63, 89, 93, 196, 205, 224, 229], "presum": [18, 87, 201, 221, 244], "pretti": [6, 11, 20, 42, 43, 70, 89, 90, 98, 102, 106, 112, 128, 191, 221, 223, 230, 265, 279, 282, 284, 288], "prettifi": 211, "pretty_ascii_repr": 183, "pretty_atom": 211, "pretty_indic": 176, "pretty_print": [54, 90, 123, 128, 129, 133, 134, 135, 137, 138, 139, 141, 144, 186, 188, 190, 191, 194, 195, 211], "pretty_scalar": 256, "pretty_symbol": 211, "pretty_symbologi": 211, "pretty_try_use_unicod": 211, "pretty_unicode_repr": 183, "pretty_use_unicod": 211, "pretty_vect": 256, "prettyform": 211, "prev": [56, 62], "prev_binari": 57, "prev_grai": 57, "prev_lex": 51, "prev_lexicograph": 57, "prevent": [4, 12, 26, 31, 43, 62, 68, 99, 102, 116, 200, 202, 207, 211, 223, 231, 240, 247, 279], "preview": [3, 42, 245], "preview_diagram": 42, "previou": [4, 6, 10, 20, 46, 51, 52, 53, 54, 57, 62, 67, 68, 89, 92, 93, 101, 117, 140, 178, 194, 195, 204, 217, 224, 228, 232, 249, 281, 283, 288], "previous": [3, 4, 10, 61, 120, 134, 137, 192, 210, 223, 231, 263], "previous_term": [62, 68], "prevprim": 102, "pri": 63, "primal": [102, 198], "primari": [3, 4, 6, 7, 18, 20, 62, 74, 92, 195, 198, 244, 250], "primarili": [3, 11, 18, 43, 62, 68, 102, 105, 175, 207, 209, 243, 246, 252, 260], "prime": [10, 18, 29, 36, 37, 38, 39, 53, 60, 61, 62, 63, 65, 67, 70, 102, 147, 198, 199, 201, 202, 204, 207, 221, 223, 224, 231, 246], "prime_as_sum_of_two_squar": 224, "prime_bound": 102, "prime_decomp": 206, "prime_numb": [18, 62, 102], "prime_number_theorem": 102, "prime_ord": 102, "prime_valu": 206, "primefactor": 102, "primehandl": 39, "primeid": [202, 206], "primenu": 102, "primeomega": 102, "primepi": [11, 20, 102], "primepred": [10, 39], "primerang": 102, "primes_abov": [202, 206], "primetest": [10, 62, 102], "primit": [11, 53, 62, 63, 70, 102, 170, 174, 198, 199, 201, 202, 204, 206, 207, 210, 211, 224, 278], "primitive_el": [62, 201, 202, 206], "primitive_root": [102, 206], "primori": 102, "primtiiv": 206, "princeton": [196, 231], "princip": [42, 63, 68, 70, 87, 89, 99, 114, 128, 149, 198, 199, 200, 201, 202, 204, 206, 207, 208], "principal_branch": [68, 87], "principal_valu": [68, 89], "principl": [3, 63, 93, 102, 147, 196, 198, 199, 204, 220, 229], "print": [2, 4, 6, 7, 11, 12, 16, 18, 19, 22, 25, 26, 28, 33, 36, 37, 38, 39, 41, 42, 44, 45, 46, 51, 53, 54, 61, 62, 63, 66, 67, 68, 70, 89, 91, 92, 95, 98, 99, 102, 103, 104, 105, 106, 112, 119, 121, 126, 128, 136, 142, 148, 156, 169, 170, 174, 176, 186, 189, 193, 195, 197, 200, 201, 202, 206, 207, 217, 218, 220, 221, 223, 227, 229, 236, 238, 242, 244, 249, 250, 252, 256, 260, 267, 273, 275, 278, 279, 280, 281, 282, 283, 284, 288], "print_builtin": [90, 191], "print_ccod": 211, "print_cycl": 54, "print_dim_bas": 178, "print_fcod": 211, "print_funct": 16, "print_gtk": 211, "print_latex": 211, "print_maple_cod": 211, "print_mathml": [211, 287], "print_my_latex": 211, "print_nod": 211, "print_nonzero": [98, 249], "print_python": 211, "print_rcod": 211, "print_report": 45, "print_tre": 211, "printabl": 63, "printer": [10, 11, 20, 54, 62, 70, 90, 98, 103, 191, 233, 236, 243, 244, 250, 279, 283], "printer_exampl": 211, "printer_set": 43, "printmethod": [20, 211], "prior": [4, 10, 33, 190, 207, 223, 284], "prioriti": [27, 43, 85, 116, 126, 195, 250], "prism": 45, "prismat": 120, "prismaticjoint": [10, 120, 131, 137], "privat": [4, 6, 62, 63, 126, 197, 244], "prk": 63, "prng": 98, "prob": [174, 231], "probabilist": [70, 207, 231], "probabilit": 10, "probability_book": 231, "probability_distribut": 231, "probabilitycours": 231, "probabl": [45, 53, 62, 67, 70, 74, 102, 126, 170, 174, 221, 227, 230, 231, 243, 280, 286], "problem": [7, 10, 11, 12, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 46, 56, 58, 62, 63, 74, 87, 89, 93, 98, 102, 105, 107, 108, 113, 116, 126, 130, 131, 134, 136, 138, 185, 194, 195, 198, 199, 204, 221, 223, 224, 227, 230, 246, 249, 273, 278, 280, 284], "problemat": [10, 20, 201], "proc": [62, 202, 229], "proce": [76, 140, 204, 206, 221, 229], "procedur": [1, 25, 27, 44, 45, 47, 53, 59, 60, 61, 89, 98, 121, 141, 204, 206, 223, 224, 229, 230, 256, 284], "proceed": [42, 44, 87, 89, 142, 205, 221], "process": [6, 7, 10, 11, 12, 18, 40, 43, 53, 54, 60, 62, 63, 68, 70, 78, 87, 89, 98, 102, 112, 122, 126, 128, 134, 137, 138, 140, 143, 197, 198, 204, 211, 212, 219, 223, 227, 229, 233, 242, 246, 288], "process_seri": 197, "prod": [62, 201, 208, 220], "prod_": [61, 67, 70, 87, 102, 181, 221], "produc": [3, 6, 7, 11, 19, 20, 25, 27, 28, 29, 31, 42, 53, 62, 63, 75, 89, 92, 98, 186, 200, 201, 206, 207, 211, 218, 227, 228, 229, 231, 240, 242, 246, 247, 249, 250, 287], "product": [10, 18, 35, 45, 47, 50, 53, 54, 58, 60, 61, 62, 63, 64, 66, 67, 70, 72, 75, 77, 78, 85, 87, 89, 91, 92, 93, 95, 98, 102, 103, 112, 113, 114, 116, 120, 128, 141, 143, 151, 155, 156, 159, 161, 162, 163, 165, 168, 170, 171, 173, 174, 176, 180, 181, 182, 185, 186, 188, 193, 194, 195, 196, 198, 199, 200, 202, 204, 206, 207, 208, 211, 212, 213, 216, 219, 220, 223, 224, 227, 228, 229, 230, 231, 233, 235, 236, 237, 243, 246, 249, 256, 260, 273], "product_and_invers": 54, "product_matrix_left": 35, "product_matrix_right": 35, "product_replacement_algorithm": 53, "productdomain": 231, "productpspac": 231, "productset": [219, 230], "prof": 98, "profil": 105, "prog": [43, 155], "program": [3, 7, 12, 18, 43, 46, 54, 143, 181, 196, 244, 246, 280, 282, 286, 288], "programm": [102, 211], "programmat": [0, 11, 14, 15, 30, 31, 230, 261], "programminggeek": 249, "progress": [36, 38, 102, 244], "prohibit": [42, 54, 55, 186], "project": [5, 7, 10, 43, 45, 75, 76, 77, 91, 98, 142, 243, 244, 250, 256], "project__test__h": [43, 244], "projection_lin": 76, "projective_linear_group": 45, "promin": 208, "prompt": [1, 6, 11], "prone": [20, 25, 43, 62], "pronoun": 7, "pronounc": 288, "proof": [53, 56, 87, 89, 230], "proofwiki": 224, "prooject": 89, "prop": [53, 206], "prop_even": 53, "propag": [66, 75, 147, 150], "proper": [12, 53, 62, 89, 102, 116, 126, 185, 201, 202, 206, 211, 219, 227, 232, 243, 244, 263, 284], "proper_divisor": 102, "proper_divisor_count": 102, "properli": [4, 11, 20, 42, 62, 68, 74, 87, 98, 122, 126, 138, 153, 157, 160, 174, 199, 201, 211, 227, 230, 240, 244, 250, 284, 289], "properti": [4, 11, 15, 20, 22, 27, 29, 35, 37, 38, 41, 42, 43, 44, 45, 46, 50, 51, 53, 54, 55, 56, 57, 61, 62, 63, 64, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 85, 87, 89, 93, 95, 98, 102, 105, 106, 108, 109, 112, 117, 120, 121, 123, 125, 141, 143, 145, 147, 150, 151, 154, 155, 160, 161, 162, 164, 165, 172, 174, 176, 178, 180, 181, 183, 184, 186, 187, 188, 192, 195, 196, 197, 199, 200, 201, 202, 204, 206, 207, 210, 213, 214, 217, 218, 219, 221, 224, 227, 230, 231, 236, 237, 242, 244, 245, 256, 259, 260, 261, 263, 265, 284], "propfunc": 245, "proport": [53, 63, 218, 250], "propos": 102, "proposit": [36, 38, 92], "proprietari": 143, "protect": [63, 211], "prototyp": [43, 103, 244], "prove": [27, 62, 87, 89, 98, 198, 218, 227, 262], "proven": [89, 102, 262, 280], "provid": [0, 1, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 23, 24, 28, 32, 35, 41, 42, 43, 44, 45, 51, 52, 53, 54, 60, 61, 62, 64, 66, 70, 71, 73, 78, 81, 84, 85, 89, 90, 92, 93, 95, 98, 99, 101, 102, 103, 104, 106, 108, 110, 116, 117, 120, 121, 123, 125, 128, 129, 130, 131, 136, 137, 138, 139, 140, 141, 143, 144, 149, 150, 170, 178, 179, 180, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 214, 216, 219, 220, 221, 223, 227, 228, 229, 230, 231, 232, 236, 237, 242, 243, 244, 246, 247, 249, 250, 252, 256, 259, 260, 261, 263, 264, 266, 278, 282, 283, 284, 288], "providean": 224, "prudnikov": [87, 221], "prudnikov1990": [87, 221], "prufer": [49, 268], "prufer_rank": 56, "prufer_repr": 56, "prune": 53, "pset": 219, "pseudo": [54, 98, 102, 202, 204, 207], "pseudocod": 53, "pseudoinvers": [27, 98], "pseudoprim": 102, "pseudorandom": [102, 249], "pseudotensor": 70, "psg": 55, "psi": [12, 67, 70, 87, 148, 159, 160, 166, 174, 206, 211, 237], "psi_": [114, 152], "psi_n": [43, 152], "psi_nl": 43, "psi_nlm": 114, "psl2f5": 45, "psl_2": 45, "psm": 102, "pspace": 231, "pspace1": 231, "pspace2": 231, "pstack": 246, "psu": [205, 220], "psum": 207, "psw_primality_test": 102, "pt": [63, 71, 72, 73, 75, 76, 77, 78, 217], "pt1": 76, "pth": 35, "pub": [63, 256], "public": [0, 6, 43, 62, 63, 84, 201, 202, 204, 205, 209, 224, 227, 231, 245, 256], "public_kei": 63, "publicli": 63, "publish": [6, 87, 221], "pug": 63, "puiseux": 208, "puk": 63, "pull": [1, 3, 4, 5, 6, 7, 9, 10, 20, 33, 43, 62, 67, 70, 175, 212, 223, 227, 230, 284, 288], "puppi": 63, "purdu": 256, "pure": [0, 3, 11, 26, 28, 35, 63, 68, 89, 92, 95, 112, 140, 181, 201, 202, 204, 207, 211, 231, 249], "purepoli": [98, 207], "purpos": [5, 6, 7, 8, 10, 11, 17, 18, 20, 29, 42, 43, 53, 59, 62, 63, 89, 98, 126, 143, 181, 185, 195, 201, 204, 208, 210, 211, 218, 227, 230, 236, 246, 248, 250, 260, 261, 278, 288], "purposefulli": 128, "push": [5, 87], "pushforward": 64, "put": [4, 6, 10, 11, 12, 16, 20, 24, 43, 58, 59, 62, 63, 64, 68, 92, 93, 98, 148, 153, 157, 172, 173, 207, 211, 212, 220, 221, 223, 227, 232, 238, 243, 284, 288], "puyoqrstvwx": 63, "pval": 229, "pw": 211, "px": [123, 166, 171, 237], "px_1": 171, "px_2": 171, "pxbra": [154, 166], "pxket": [154, 166, 171], "pxop": [154, 166, 171], "py": [3, 4, 5, 6, 18, 42, 62, 73, 87, 89, 98, 154, 156, 197, 200, 202, 208, 211, 218, 221, 227, 228, 237, 240, 242, 247, 250], "py3k": 12, "py_mod": 43, "py_str": 43, "pycod": [43, 211], "pycosat": 3, "pydi": [126, 143, 186], "pyf": 244, "pyglet": [3, 211], "pyglet_plot": 197, "pygletplot": [3, 197], "pylab": 90, "pymc": [3, 231], "pynam": 244, "pyodid": 240, "pypi": 33, "pyplot": [29, 85, 143], "pysat": 3, "pytest": [3, 4, 10, 239, 245, 247, 250, 275], "pytestreport": 242, "pythag": 25, "pythag_eq": 25, "pythag_v": 25, "pythagorean": [25, 224], "pythogorean": 25, "python": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 15, 18, 19, 20, 22, 23, 26, 27, 29, 31, 32, 33, 36, 37, 38, 41, 54, 62, 63, 66, 68, 74, 90, 92, 93, 95, 98, 102, 103, 104, 105, 116, 126, 143, 186, 197, 198, 199, 201, 202, 208, 210, 211, 219, 223, 227, 230, 232, 242, 243, 244, 245, 246, 249, 250, 256, 280, 281, 282, 283, 284, 286, 287, 288], "python3": [1, 3, 43, 104, 211], "python_trick": 249, "python_vers": 245, "pythonfinitefield": [201, 202], "pythonhashse": 242, "pythoninteg": 202, "pythonmpq": [201, 202], "pythonr": [202, 209], "pythonrationalfield": 202, "pythontyp": 211, "pythonwarn": 10, "pz": [65, 110, 237], "q": [10, 11, 12, 15, 18, 23, 25, 34, 35, 36, 37, 38, 39, 40, 43, 54, 58, 61, 62, 63, 70, 79, 84, 85, 87, 89, 91, 93, 98, 104, 105, 112, 113, 120, 121, 122, 125, 126, 128, 130, 135, 137, 138, 139, 140, 143, 144, 145, 156, 170, 176, 179, 186, 187, 188, 190, 191, 192, 194, 197, 198, 199, 201, 202, 204, 206, 207, 208, 210, 211, 213, 221, 224, 227, 229, 231, 236, 237, 252, 256, 259, 260, 262, 265, 284, 288], "q0": [186, 227, 256, 258], "q0_": 120, "q0_c1": 120, "q0_c2": 120, "q0_pc": 120, "q1": [35, 98, 105, 116, 126, 128, 129, 130, 131, 133, 134, 135, 138, 139, 140, 144, 185, 186, 188, 190, 191, 194, 195, 201, 256, 258], "q1_": 120, "q1_c1": 120, "q1_c2": 120, "q1_pc": 120, "q1d": [116, 126, 128, 130, 133, 134, 135, 138, 139, 140, 141, 185, 191, 195], "q1dd": 191, "q2": [35, 105, 116, 126, 128, 129, 130, 131, 133, 134, 135, 138, 139, 144, 185, 186, 188, 190, 191, 194, 195, 201, 256, 258], "q2_": 120, "q2_pc": 120, "q2d": [116, 126, 128, 130, 133, 134, 135, 138, 139, 190, 191], "q2dd": 191, "q3": [35, 116, 128, 129, 131, 133, 134, 135, 138, 186, 188, 190, 195, 256, 258], "q3d": [116, 133, 134, 135, 138], "q4": [128, 138, 188], "q4d": [128, 138], "q5": [128, 188], "q5d": 128, "q6": 188, "q_": [10, 62, 120, 191, 224, 227], "q_0": [120, 156, 224], "q_1": [120, 129, 130, 131, 140, 156, 194, 207, 224], "q_2": [120, 129, 130, 131, 140, 194], "q_3": [129, 131, 194], "q_annihil": 176, "q_aug": 98, "q_creator": 176, "q_d": 122, "q_dep": [121, 138, 140], "q_depend": [121, 128, 129, 130, 138, 143], "q_domain": 202, "q_expr": 202, "q_i": [89, 122, 140], "q_ind": [121, 122, 126, 128, 129, 130, 133, 134, 138, 140, 143], "q_j1": 120, "q_j2": 120, "q_m": 70, "q_n": 207, "q_op": [122, 130], "q_orient": [256, 258], "q_p1": 120, "q_p2": 120, "q_pc": 120, "q_pin": 10, "q_val": 25, "q_x": [78, 194], "q_y": [78, 194], "qa": 143, "qad": 143, "qappli": [160, 161, 163, 165, 170, 273], "qb": [143, 199], "qbd": 143, "qd": [120, 121, 128, 138, 190], "qd_dep": [121, 140], "qd_ind": [121, 140], "qd_op": 122, "qdot": [121, 128, 129, 190], "qdoubledot": 121, "qexpr": 171, "qft": [163, 172, 273], "qg": 204, "qho": 43, "qho_1d": [43, 152], "qiq": 63, "qo": 143, "qp": 194, "qq": [80, 81, 83, 84, 85, 89, 198, 199, 200, 201, 204, 206, 207, 208], "qq_col": 206, "qq_i": 201, "qq_matrix": 206, "qq_python": 202, "qquad": [68, 181, 204], "qr": 98, "qr_solv": 98, "qrdecomposit": [94, 98], "qrgk": 63, "qrgkkthrzqebpr": 63, "qrsolv": [94, 98], "qstate": 161, "qt": 3, "qtconsol": [33, 287], "qtf": 169, "quad": [61, 62, 64, 66, 70, 89, 93], "quadrant": [68, 202, 230], "quadrat": [22, 25, 62, 63, 89, 102, 198, 202, 206, 207, 224, 229, 231], "quadratic_distribut": 231, "quadratic_residu": 102, "quadraticu": 231, "quadratur": [62, 66, 89, 227], "quadrupl": [42, 207], "qualifi": [6, 253], "qualiti": [5, 103, 211], "quantifi": 265, "quantil": 231, "quantit": [43, 178], "quantiti": [10, 12, 54, 62, 67, 70, 74, 79, 106, 116, 121, 134, 141, 155, 178, 180, 184, 192, 194, 195, 206, 223, 231, 260, 265, 273], "quantity_simplifi": 180, "quantiz": [162, 273], "quantum": [10, 114, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 196, 273], "quarter": [120, 148], "quarter_wave_retard": 148, "quartic": [22, 72, 207, 229], "quasi": 176, "quaternion": [186, 190, 195, 256, 258], "quaternionorient": [256, 258, 261], "qubit": [156, 160, 161, 162, 163, 169, 273], "qubit_to_matrix": 170, "qubit_valu": 170, "qubitbra": 170, "quebec": 205, "queri": [11, 18, 19, 20, 36, 39, 40, 41, 43, 62, 74, 207, 223, 231], "query_gt": 231, "question": [4, 6, 7, 16, 18, 61, 64, 72, 79, 87, 89, 92, 102, 116, 178, 181, 185, 198, 201, 206, 221, 230, 249, 252], "quick": [6, 7, 20, 62, 98, 102, 223, 229, 250], "quicker": [53, 102], "quickli": [16, 20, 53, 54, 62, 63, 66, 102, 204, 207, 220, 230, 246], "quiet": 90, "quin": 92, "quintic": [22, 207, 229], "quirk": 19, "quit": [11, 16, 20, 70, 98, 102, 128, 194, 197, 208, 210, 221, 229, 249, 265, 280, 283], "quo": [201, 202, 204, 207], "quo_ground": [202, 207], "quot": [6, 12, 43, 92, 211, 252], "quotat": 7, "quotedstr": 43, "quotient": [61, 62, 65, 68, 102, 198, 199, 201, 204, 207, 221, 223, 227], "quotient_codomain": 198, "quotient_domain": 198, "quotient_hom": 198, "quotient_modul": 198, "quotient_r": [198, 202], "quotientmodul": 198, "quotientmoduleel": 198, "quotientr": [198, 202], "qv": 202, "qwerti": 236, "qwp": 148, "r": [0, 1, 6, 7, 10, 12, 16, 18, 20, 22, 35, 42, 43, 44, 46, 53, 54, 62, 63, 64, 66, 67, 68, 75, 76, 78, 80, 84, 85, 87, 89, 98, 102, 104, 106, 108, 112, 114, 117, 120, 121, 122, 123, 125, 126, 128, 130, 133, 134, 135, 140, 141, 142, 143, 144, 145, 148, 172, 173, 176, 177, 179, 186, 187, 190, 192, 194, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 218, 219, 221, 223, 224, 227, 229, 230, 231, 237, 242, 244, 246, 256, 259, 261, 262, 263, 266, 288], "r0": [22, 207], "r1": [22, 35, 72, 75, 91, 105, 106, 149, 186, 192, 207, 256], "r10": 39, "r100": 61, "r1000": 249, "r1001": 249, "r1002": 249, "r1003": 252, "r1004": 256, "r1005": 256, "r101": 61, "r102": 61, "r103": 61, "r104": 62, "r105": 62, "r106": 62, "r107": 62, "r108": 62, "r109": 62, "r11": 39, "r110": 62, "r111": 62, "r112": 62, "r113": 62, "r114": 62, "r115": 62, "r116": 62, "r117": 62, "r118": 62, "r119": 62, "r12": 39, "r120": 62, "r121": 62, "r122": 62, "r123": 62, "r124": 62, "r125": 62, "r126": 62, "r127": 62, "r128": 62, "r129": 62, "r13": 39, "r130": 62, "r131": 62, "r132": 62, "r133": 62, "r134": 62, "r135": 62, "r136": 62, "r137": 62, "r138": 62, "r139": 62, "r14": 39, "r140": 62, "r141": 62, "r142": 63, "r143": 63, "r144": 63, "r145": 63, "r146": 63, "r147": 63, "r148": 63, "r149": 63, "r15": 39, "r150": 63, "r151": 63, "r152": 63, "r153": 63, "r154": 63, "r155": 63, "r156": 63, "r157": 63, "r158": 63, "r159": 63, "r16": 39, "r160": 63, "r161": 63, "r162": 63, "r165": 63, "r166": 64, "r167": 64, "r168": 64, "r169": 65, "r17": 39, "r170": 65, "r171": 65, "r172": 65, "r173": 65, "r174": 65, "r175": 65, "r176": 65, "r177": 65, "r178": 65, "r179": 65, "r18": 39, "r180": 65, "r181": 65, "r182": 65, "r183": 65, "r184": 65, "r185": 65, "r186": 65, "r187": 65, "r188": 65, "r189": 65, "r19": 39, "r190": 65, "r191": 65, "r192": 65, "r193": 65, "r194": 65, "r195": 65, "r196": 65, "r197": 65, "r198": 67, "r199": 67, "r1_x": 192, "r1_y": 192, "r2": [22, 35, 64, 75, 91, 93, 105, 106, 149, 186, 207, 211, 223, 256], "r20": 39, "r200": 67, "r201": 67, "r202": 67, "r203": 67, "r204": 67, "r205": 67, "r206": 67, "r207": 67, "r208": 67, "r209": 67, "r21": 39, "r210": 67, "r211": 67, "r212": 67, "r213": 67, "r214": 67, "r215": 67, "r216": 67, "r217": 67, "r218": 67, "r219": 67, "r22": 39, "r220": 67, "r222": 67, "r223": 67, "r224": 67, "r225": 67, "r226": 67, "r227": 67, "r228": 67, "r229": 67, "r23": 39, "r230": 67, "r231": 67, "r232": 67, "r233": 67, "r234": 67, "r235": 67, "r236": 67, "r237": 67, "r238": 67, "r239": 67, "r24": 39, "r240": 67, "r241": 67, "r242": 67, "r243": 67, "r244": 67, "r245": 67, "r246": 67, "r247": 67, "r248": 68, "r249": 68, "r25": 39, "r250": 68, "r251": 68, "r252": 68, "r253": 68, "r254": 68, "r255": 68, "r256": 68, "r257": 68, "r258": 68, "r259": 68, "r26": 39, "r260": 68, "r261": 68, "r262": 68, "r263": 68, "r264": 68, "r265": 68, "r266": 68, "r267": 68, "r268": 68, "r269": 68, "r27": 39, "r270": 68, "r271": 68, "r272": 68, "r273": 68, "r274": 68, "r275": 68, "r276": 68, "r277": 68, "r278": 68, "r279": 68, "r28": 39, "r280": 68, "r281": 68, "r282": 68, "r283": 68, "r284": 68, "r285": 68, "r286": 68, "r287": 68, "r288": 68, "r289": 68, "r29": 39, "r290": 68, "r291": 68, "r292": 68, "r293": 68, "r294": 68, "r295": 68, "r296": 68, "r297": 68, "r298": 68, "r299": 68, "r2_p": 64, "r2_r": 64, "r3": [22, 35, 91, 105, 106, 223], "r30": 39, "r300": 68, "r301": 68, "r302": 68, "r303": 68, "r304": 68, "r305": 68, "r306": 68, "r307": 68, "r308": 68, "r309": 68, "r31": 41, "r310": 68, "r311": 68, "r312": 68, "r313": 68, "r314": 70, "r315": 70, "r316": 70, "r317": 70, "r318": 70, "r319": 70, "r32": 41, "r320": 70, "r321": 70, "r322": 70, "r323": 70, "r324": 70, "r325": 70, "r326": 70, "r327": 70, "r328": 70, "r329": 70, "r33": 41, "r330": 70, "r331": 70, "r332": 70, "r333": 70, "r334": 70, "r335": 70, "r336": 70, "r337": 70, "r338": 70, "r339": 70, "r34": 41, "r340": 70, "r341": 70, "r342": 70, "r343": 70, "r344": 70, "r345": 70, "r346": 70, "r347": 70, "r348": 70, "r349": 70, "r35": 41, "r350": 70, "r351": 70, "r352": 70, "r353": 70, "r354": 70, "r355": 70, "r356": 70, "r357": 70, "r358": 70, "r359": 70, "r36": 41, "r360": 70, "r361": 70, "r362": 70, "r363": 70, "r364": 70, "r365": 70, "r366": 70, "r367": 70, "r368": 70, "r369": 70, "r37": 41, "r370": 70, "r371": 70, "r372": 70, "r373": 70, "r374": 70, "r375": 70, "r376": 70, "r377": 70, "r378": 70, "r379": 70, "r38": 41, "r380": 70, "r381": 70, "r382": 70, "r383": 70, "r384": 70, "r385": 70, "r386": 70, "r387": 70, "r388": 70, "r389": 70, "r39": 43, "r390": 70, "r391": 70, "r392": 70, "r393": 70, "r394": 70, "r395": 70, "r396": 70, "r397": 70, "r398": 70, "r399": 70, "r4": [22, 91, 105], "r40": 43, "r400": 70, "r401": 70, "r402": 70, "r403": 70, "r404": 70, "r405": 70, "r406": 70, "r407": 70, "r408": 70, "r409": 70, "r41": 45, "r410": 70, "r411": 70, "r412": 70, "r413": 70, "r414": 70, "r415": 70, "r416": 70, "r417": 70, "r418": 70, "r419": 70, "r420": 70, "r421": 70, "r422": 70, "r423": 70, "r424": 70, "r425": 70, "r426": 70, "r427": 70, "r428": 70, "r429": 70, "r43": 45, "r430": 70, "r431": 70, "r432": 70, "r433": 70, "r434": 70, "r435": 70, "r436": 70, "r437": 70, "r438": 70, "r439": 70, "r44": [45, 46], "r440": 70, "r441": 70, "r442": 70, "r443": 70, "r444": 70, "r445": 70, "r446": 70, "r447": 70, "r448": 70, "r449": 70, "r45": 46, "r450": 70, "r451": 70, "r452": 70, "r453": 70, "r454": 70, "r455": 70, "r456": 70, "r457": 70, "r458": 70, "r459": 70, "r46": 46, "r460": 70, "r461": 70, "r462": 70, "r463": 70, "r464": 70, "r465": 70, "r466": 70, "r467": 70, "r468": 70, "r469": 70, "r47": 46, "r470": 70, "r471": 70, "r472": 70, "r473": 70, "r474": 70, "r475": 70, "r476": 70, "r477": 70, "r478": 70, "r479": 70, "r48": 48, "r480": 70, "r481": 70, "r482": 70, "r483": 70, "r484": 70, "r485": 70, "r486": 70, "r487": 70, "r488": 70, "r489": 70, "r49": 48, "r490": 70, "r491": 70, "r492": 70, "r493": 70, "r494": 70, "r495": 70, "r496": 70, "r497": 70, "r498": 70, "r499": 70, "r5": [37, 223], "r50": 48, "r500": 70, "r501": 70, "r502": 70, "r503": 70, "r504": 70, "r505": 70, "r506": 70, "r507": 70, "r508": 70, "r509": 70, "r51": 50, "r510": 70, "r511": 70, "r512": 70, "r513": 70, "r514": 70, "r515": 70, "r516": 70, "r517": 72, "r518": 72, "r519": 72, "r52": 50, "r520": 72, "r521": 72, "r522": 72, "r523": 72, "r524": 72, "r525": 78, "r526": 78, "r527": 78, "r528": 78, "r529": 78, "r53": 50, "r530": 78, "r531": 78, "r532": 78, "r533": 78, "r534": 78, "r535": 79, "r536": 79, "r537": 84, "r538": 84, "r539": 89, "r54": 50, "r540": 89, "r541": 89, "r542": 89, "r543": 89, "r544": 89, "r545": 89, "r546": 89, "r547": 89, "r548": 89, "r549": 89, "r55": 51, "r550": 89, "r551": 89, "r552": 89, "r553": 89, "r554": 89, "r555": 89, "r556": 89, "r557": 89, "r558": 89, "r559": 89, "r56": 53, "r560": 89, "r561": 89, "r562": 89, "r563": 89, "r564": 89, "r565": 89, "r566": 89, "r567": 89, "r568": 90, "r569": 90, "r57": 53, "r570": 91, "r571": 91, "r572": 92, "r573": 92, "r574": 92, "r575": 92, "r576": 92, "r577": 92, "r578": 92, "r579": 92, "r58": 53, "r580": 93, "r581": 93, "r582": 93, "r583": 95, "r584": 98, "r585": 98, "r586": 98, "r587": 98, "r588": 98, "r589": 98, "r59": 53, "r590": 98, "r591": 98, "r592": 98, "r593": 98, "r594": 98, "r595": 98, "r596": 98, "r597": 98, "r598": 98, "r599": 98, "r6": 37, "r60": 53, "r600": 98, "r601": 98, "r602": 98, "r603": 98, "r604": 98, "r605": 98, "r606": 98, "r607": 98, "r608": 98, "r609": 98, "r61": 53, "r610": 98, "r611": 98, "r612": 98, "r613": 98, "r614": 98, "r615": 98, "r616": 98, "r617": 99, "r618": 102, "r619": 102, "r62": 53, "r620": 102, "r621": 102, "r622": 102, "r623": 102, "r624": 102, "r625": 102, "r626": 102, "r627": 102, "r628": 102, "r629": 102, "r63": 53, "r630": 102, "r631": 102, "r632": 102, "r633": 102, "r634": 102, "r635": 102, "r636": 102, "r637": 102, "r638": 102, "r639": 102, "r64": 53, "r640": 102, "r641": 102, "r642": 102, "r643": 102, "r644": 102, "r645": 102, "r646": 102, "r647": 102, "r648": 102, "r649": 102, "r65": 53, "r650": 102, "r651": 102, "r652": 102, "r653": 102, "r654": 102, "r655": 102, "r656": 102, "r657": 102, "r658": 102, "r659": 102, "r660": 102, "r661": 102, "r662": 102, "r663": 102, "r664": 102, "r665": 102, "r666": 102, "r667": 102, "r668": 102, "r669": 102, "r67": 53, "r670": 105, "r671": 110, "r672": 110, "r673": 110, "r674": 110, "r675": 112, "r676": 112, "r677": 115, "r678": 115, "r679": 145, "r680": 145, "r681": 145, "r682": 147, "r683": 148, "r684": 148, "r685": 148, "r686": 149, "r687": 151, "r688": 153, "r689": 155, "r69": 53, "r690": 155, "r691": 155, "r692": 155, "r693": 157, "r694": 158, "r695": 159, "r696": 159, "r697": 162, "r698": 162, "r699": 162, "r7": 38, "r70": 53, "r700": 162, "r701": 162, "r702": 164, "r703": 165, "r704": 165, "r705": 165, "r706": 173, "r707": 173, "r708": 174, "r709": 174, "r71": 53, "r710": 176, "r711": 197, "r712": 197, "r713": 200, "r714": 200, "r715": 200, "r716": 200, "r717": 202, "r718": 204, "r719": 204, "r720": 204, "r721": 204, "r722": 204, "r723": 204, "r724": 204, "r725": 204, "r726": 204, "r727": 204, "r728": 204, "r729": 204, "r73": [53, 54], "r730": 204, "r731": 204, "r732": 204, "r733": 204, "r734": 204, "r735": 204, "r736": 206, "r737": 206, "r738": 206, "r739": 206, "r74": 54, "r740": 206, "r741": 206, "r742": 207, "r743": 207, "r744": 207, "r745": 207, "r746": 207, "r747": 207, "r748": 207, "r749": 207, "r75": 54, "r750": 207, "r751": 207, "r752": 207, "r753": 207, "r754": 207, "r755": 208, "r756": 213, "r757": 213, "r758": 213, "r759": 213, "r76": 54, "r760": 213, "r761": 213, "r762": 214, "r763": 214, "r764": 214, "r765": 216, "r766": 216, "r767": 218, "r768": 218, "r769": 219, "r77": 54, "r770": 219, "r771": 219, "r772": 219, "r773": 219, "r774": 219, "r775": 219, "r776": 219, "r777": 219, "r778": 219, "r779": 219, "r78": 54, "r780": 219, "r781": 219, "r782": 219, "r783": 219, "r784": 220, "r785": 220, "r786": 220, "r787": 223, "r788": 223, "r789": 223, "r79": 54, "r790": 224, "r791": 224, "r792": 224, "r793": 224, "r794": 224, "r795": 224, "r796": 224, "r797": 224, "r798": 224, "r799": 224, "r8": 38, "r80": 54, "r800": 224, "r801": 224, "r802": 224, "r803": 224, "r804": 224, "r805": 224, "r806": 224, "r807": 224, "r808": 224, "r809": 224, "r81": 54, "r810": 224, "r811": 224, "r812": 224, "r813": 224, "r814": 224, "r815": 224, "r816": 227, "r817": 227, "r818": 227, "r819": 227, "r82": 54, "r820": 227, "r821": 227, "r822": 229, "r823": 229, "r824": 229, "r825": 229, "r826": 229, "r827": 229, "r828": 231, "r829": 231, "r83": 54, "r830": 231, "r831": 231, "r832": 231, "r833": 231, "r834": 231, "r835": 231, "r836": 231, "r837": 231, "r838": 231, "r839": 231, "r84": 54, "r840": 231, "r841": 231, "r842": 231, "r843": 231, "r844": 231, "r845": 231, "r846": 231, "r847": 231, "r848": 231, "r849": 231, "r85": 54, "r850": 231, "r851": 231, "r852": 231, "r853": 231, "r854": 231, "r855": 231, "r856": 231, "r857": 231, "r858": 231, "r859": 231, "r86": 55, "r860": 231, "r861": 231, "r862": 231, "r863": 231, "r864": 231, "r865": 231, "r866": 231, "r867": 231, "r868": 231, "r869": 231, "r87": 56, "r870": 231, "r871": 231, "r872": 231, "r873": 231, "r874": 231, "r875": 231, "r876": 231, "r877": 231, "r878": 231, "r879": 231, "r88": 56, "r880": 231, "r881": 231, "r882": 231, "r883": 231, "r884": 231, "r885": 231, "r886": 231, "r887": 231, "r888": 231, "r889": 231, "r89": 60, "r890": 231, "r891": 231, "r892": 231, "r893": 231, "r894": 231, "r895": 231, "r896": 231, "r897": 231, "r898": 231, "r899": 231, "r9": 39, "r90": 60, "r900": 231, "r901": 231, "r902": 231, "r903": 231, "r904": 231, "r905": 231, "r906": 231, "r907": 231, "r908": 231, "r909": 231, "r91": 60, "r910": 231, "r911": 231, "r912": 231, "r913": 231, "r914": 231, "r915": 231, "r916": 231, "r917": 231, "r918": 231, "r919": 231, "r92": 61, "r920": 231, "r921": 231, "r922": 231, "r923": 231, "r924": 231, "r925": 231, "r926": 231, "r927": 231, "r928": 231, "r929": 231, "r93": 61, "r930": 231, "r931": 231, "r932": 231, "r933": 231, "r934": 231, "r935": 231, "r936": 231, "r937": 231, "r938": 231, "r939": 231, "r94": 61, "r940": 231, "r941": 231, "r942": 231, "r943": 231, "r944": 231, "r945": 231, "r946": 231, "r947": 231, "r948": 231, "r949": 231, "r95": 61, "r950": 231, "r951": 231, "r952": 231, "r953": 231, "r954": 231, "r955": 231, "r956": 231, "r957": 231, "r958": 231, "r959": 231, "r96": 61, "r960": 231, "r961": 231, "r962": 231, "r963": 231, "r964": 231, "r965": 231, "r966": 231, "r967": 231, "r968": 231, "r969": 231, "r97": 61, "r970": 231, "r971": 231, "r972": 231, "r973": 231, "r974": 231, "r975": 231, "r976": 231, "r977": 231, "r978": 231, "r979": 231, "r98": 61, "r980": 231, "r981": 231, "r982": 243, "r983": 249, "r984": 249, "r985": 249, "r986": 249, "r987": 249, "r988": 249, "r989": 249, "r99": 61, "r990": 249, "r991": 249, "r992": 249, "r993": 249, "r994": 249, "r995": 249, "r996": 249, "r997": 249, "r998": 249, "r999": 249, "r_": [62, 114, 177, 208], "r_0": 105, "r_1": [44, 198, 208], "r_10": 105, "r_2": 44, "r_30": 105, "r_7": 105, "r_8": 105, "r_aug": 98, "r_b": 29, "r_f": [29, 207], "r_g": 207, "r_i": [44, 208], "r_j": 221, "r_k": [44, 169], "r_n": 198, "r_nl": [43, 114, 177], "r_node_1_i": 108, "r_node_1_x": 108, "r_node_2_i": 108, "r_pt": 126, "r_x": [187, 192], "r_y": [187, 192], "r_z": [187, 192], "ra": 213, "rabin": 102, "racah": 196, "rad": [10, 63, 110, 126, 206], "rad_ration": 223, "rademach": [102, 231], "rademacher_distribut": 231, "radial": [114, 130, 177], "radian": [35, 68, 71, 72, 73, 75, 76, 77, 98, 110, 126, 149, 150, 186], "radic": [12, 22, 62, 63, 98, 198, 206, 207, 223, 229, 230], "radii": 72, "radioeng": 65, "radiu": [70, 72, 76, 78, 133, 135, 145, 149, 197, 230, 231, 266], "radius_of_converg": 70, "radix": 65, "radsimp": [62, 223], "rag": 98, "rai": [6, 72, 74, 75, 76, 78, 79, 145, 149], "rail": 63, "rail_fence_ciph": 63, "railfenc": 63, "raini": 231, "rais": [4, 10, 12, 14, 18, 19, 20, 36, 38, 41, 43, 51, 54, 62, 63, 64, 66, 68, 71, 72, 75, 77, 78, 79, 87, 89, 93, 95, 98, 99, 101, 102, 110, 112, 150, 162, 192, 195, 198, 199, 200, 201, 202, 204, 206, 207, 208, 211, 213, 219, 223, 226, 227, 228, 229, 230, 231, 235, 237, 240, 242, 244, 247, 249, 250, 252, 253, 263, 284], "raise_on_deprec": 242, "raise_on_error": 242, "raised_cosine_distribut": 231, "raisedcosin": 231, "rake": 128, "ramanujan": [66, 67, 102], "ramif": 206, "ramp": [105, 106], "ramp_funct": 110, "ramp_response_numerical_data": 110, "ramp_response_plot": 110, "randal": 205, "randint": [62, 98, 204], "randmatrix": 98, "random": [3, 6, 10, 45, 46, 51, 53, 54, 60, 63, 72, 75, 76, 97, 98, 102, 160, 172, 197, 202, 204, 206, 207, 211, 241, 242, 245, 249, 280, 284, 288], "random_bitstr": 46, "random_circuit": 160, "random_complex_numb": [10, 62], "random_derang": 249, "random_integer_partit": 51, "random_point": [72, 75, 76], "random_poli": 207, "random_pr": 53, "random_stab": 53, "random_symbol": 231, "randomdomain": 231, "randomindexedsymbol": 231, "randomis": [18, 239, 275], "randomli": [53, 62, 63, 102, 170], "randommatrixsymbol": 231, "randomst": 231, "randomsymbol": 231, "randomvari": 231, "randprim": [48, 102], "randrang": 62, "randtest": 241, "rang": [6, 10, 11, 16, 20, 22, 25, 26, 41, 43, 51, 52, 53, 54, 56, 58, 62, 63, 67, 68, 70, 76, 93, 98, 102, 106, 110, 114, 145, 176, 197, 200, 201, 202, 203, 204, 206, 207, 208, 213, 214, 217, 219, 220, 223, 227, 230, 231, 232, 236, 242, 249, 277, 288], "range1": 197, "range2": 197, "range_i": 197, "range_u": 197, "range_v": 197, "range_x": 197, "rangl": [44, 53, 155, 173, 196], "rank": [39, 43, 44, 46, 51, 53, 54, 56, 57, 58, 77, 91, 98, 99, 186, 188, 198, 200, 202, 204, 206, 232, 236, 237, 284], "rank_binari": 57, "rank_decomposit": 98, "rank_factor": 98, "rank_grai": 57, "rank_lexicograph": 57, "rank_nonlex": 54, "rank_trotterjohnson": 54, "rankcheck": 98, "rankdir": [211, 287], "raphson": 43, "rapidli": [27, 62, 66, 87, 218], "rare": [6, 20, 62, 227, 231, 240, 280], "rasch": 196, "rasch03": 196, "rat": 102, "rat_clear_denom": 207, "rate": [12, 128, 194, 231, 263, 278], "rather": [3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 22, 26, 29, 30, 31, 34, 39, 43, 44, 45, 53, 54, 55, 62, 66, 68, 73, 78, 80, 87, 92, 93, 95, 98, 102, 104, 125, 133, 143, 156, 170, 174, 176, 180, 185, 194, 198, 201, 204, 207, 209, 214, 221, 224, 226, 227, 230, 231, 233, 246, 249, 250, 253, 265, 280, 282, 283], "rathnayak": 0, "ratint": 89, "ratint_logpart": 89, "ratint_ratpart": 89, "ratio": [39, 52, 53, 61, 62, 66, 67, 70, 72, 75, 76, 77, 78, 94, 102, 112, 149, 181, 211, 220, 223, 229], "ration": [11, 18, 20, 22, 36, 38, 39, 41, 43, 61, 62, 66, 67, 68, 70, 72, 75, 77, 79, 83, 87, 89, 90, 95, 98, 102, 104, 112, 145, 178, 196, 199, 204, 205, 206, 208, 211, 216, 219, 220, 221, 223, 224, 226, 229, 230, 231, 249, 256, 279, 280, 283, 287], "rational_algorithm": 213, "rational_convers": 223, "rational_funct": 62, "rational_independ": 213, "rational_laurent_seri": 227, "rational_numb": [18, 39], "rational_parametr": 256, "rationalfield": [201, 202], "rationalhandl": 39, "rationalpred": 39, "rationalriccati": 227, "rationaltool": [89, 207], "ratsimp": [62, 223], "ratsimpmodprim": 223, "raw": [6, 7, 43, 62, 63, 68, 103, 104, 170, 175, 201, 202, 207, 219, 223, 287], "rawlin": 252, "ray2d": [75, 78], "ray3d": [75, 76, 149], "ray_transfer_matrix_analysi": 145, "rayleigh": [145, 231], "rayleigh2waist": 145, "rayleigh_distribut": 231, "rayleighdistribut": 231, "raytransfermatrix": 145, "rb": [29, 253], "rcall": [62, 64], "rceil": 87, "rcirc": 73, "rcode": 211, "rcollect": 223, "rd": [98, 126, 211], "re": [4, 12, 20, 40, 41, 43, 53, 54, 62, 63, 66, 68, 70, 87, 89, 98, 186, 188, 192, 198, 204, 211, 212, 213, 219, 220, 221, 227, 229, 242, 259, 261, 278, 280, 283], "reach": [18, 102, 112, 206, 207, 227], "reachabl": [221, 231], "reaction": [105, 106, 108], "reaction_bodi": [117, 120, 131], "reaction_load": [105, 106, 108], "reaction_point": 117, "read": [4, 6, 7, 9, 10, 20, 31, 54, 68, 87, 102, 106, 143, 194, 195, 200, 201, 202, 208, 211, 224, 237, 238, 246, 250, 253, 281, 287, 288], "readabl": [6, 34, 42, 90, 116, 207, 210, 211, 218, 220, 253], "reader": [6, 7, 20, 42, 44, 141, 198, 211, 246, 281, 286], "readi": [4, 18, 125, 201, 211, 227], "readili": [75, 98], "readlin": 242, "readm": 3, "readthedoc": [7, 90, 250], "reagent": 206, "real": [10, 11, 12, 15, 16, 18, 19, 20, 22, 25, 26, 35, 37, 39, 40, 41, 43, 54, 62, 63, 64, 66, 67, 68, 69, 70, 74, 78, 79, 84, 87, 89, 92, 93, 95, 98, 102, 104, 108, 114, 126, 143, 145, 148, 149, 156, 174, 188, 196, 199, 202, 206, 207, 208, 211, 212, 214, 218, 219, 221, 223, 226, 227, 229, 230, 231, 236, 240, 244, 253, 282, 288, 289], "real_el": 39, "real_field": 35, "real_gaunt": 196, "real_num": 79, "real_numb": [18, 39], "real_root": [68, 207, 229], "realel": [201, 202], "realelementshandl": 39, "realelementspred": 39, "realfield": [201, 202], "realgaunt": 196, "realhandl": 39, "realist": 102, "realiz": [12, 45, 47, 53, 64, 92, 102, 130, 198, 199, 204, 231], "realli": [4, 10, 11, 16, 18, 19, 20, 62, 74, 102, 128, 178, 201, 210, 212, 218, 220, 221, 223, 227, 243, 252, 280, 282], "realnormedalgebra": 35, "realnumb": 62, "realpred": 39, "reals_onli": 98, "rear": 128, "rearrang": [26, 113, 121, 138, 139, 160, 227], "reason": [4, 7, 10, 11, 14, 18, 19, 20, 28, 29, 35, 43, 54, 60, 62, 66, 70, 87, 90, 96, 98, 121, 122, 126, 128, 133, 136, 140, 147, 181, 191, 195, 200, 201, 204, 205, 208, 211, 219, 221, 223, 227, 230, 240, 246, 247, 249, 250, 277, 278, 282, 283, 284], "reassembl": 207, "reassign": 126, "rebuild": [8, 11, 20, 62, 207, 283], "rebuilt": [11, 283], "recal": [20, 62, 98, 204, 206, 221, 280, 282, 283, 289], "recalcul": [121, 207], "recast": [87, 223, 229, 230], "reccur": 231, "receiv": [12, 31, 45, 62, 63, 102, 117, 171, 206, 236], "recent": [4, 10, 12, 15, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 36, 37, 38, 43, 44, 54, 62, 63, 66, 70, 72, 89, 92, 93, 94, 95, 96, 98, 100, 101, 104, 112, 196, 198, 201, 202, 204, 207, 210, 218, 219, 227, 229, 230, 240, 243, 245, 247, 249, 250, 252, 280, 284], "recherch": 208, "recip": [211, 249], "reciph": 63, "reciproc": [98, 231, 288], "reciprocal_distribut": 231, "reciprocaltrigonometricfunct": 20, "recogn": [10, 12, 22, 27, 29, 62, 63, 67, 77, 102, 105, 113, 199, 202, 210, 219, 220, 229, 236, 280], "recognis": [87, 201, 221, 223], "recommend": [1, 5, 6, 10, 11, 12, 13, 18, 20, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 42, 43, 62, 63, 66, 93, 116, 138, 143, 170, 186, 194, 199, 200, 201, 202, 208, 224, 227, 230, 236, 240, 247, 260, 261, 286, 289], "recomput": [58, 207], "reconnect": 43, "reconstruct": [63, 98, 204, 224, 283], "reconstuct": 204, "record": [45, 56, 62, 206, 211, 242], "recov": [63, 89, 181, 204, 206, 207, 224, 227], "recreat": [62, 120], "rectangl": [72, 73, 75, 77, 78, 197, 207], "rectangular": [98, 219, 230, 260], "rectum": 72, "recur": 62, "recurr": [61, 67, 84, 98, 206, 217, 223, 227, 231, 251], "recurrence_memo": 251, "recurs": [11, 12, 15, 18, 20, 41, 62, 67, 87, 89, 92, 93, 102, 128, 197, 204, 207, 208, 211, 212, 216, 218, 223, 229, 230, 235, 240, 242, 246, 247, 249, 279, 288], "recursiveseq": 217, "red": 197, "red_groebn": 204, "redefin": [20, 54, 62, 138, 140, 199, 250], "redistribut": [0, 207], "reduc": [7, 12, 19, 23, 30, 36, 38, 40, 44, 58, 62, 63, 65, 67, 68, 70, 77, 78, 87, 89, 98, 102, 112, 113, 140, 158, 176, 198, 200, 201, 202, 204, 205, 206, 207, 208, 212, 217, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 249, 250, 284], "reduce_abs_inequ": 226, "reduce_alg_num": 206, "reduce_anp": 206, "reduce_el": [198, 206], "reduce_inequ": [14, 24, 226, 229], "reduce_rational_inequ": 226, "reduced_expr": [212, 223], "reduced_mod_p": 206, "reduced_toti": [63, 102], "reduct": [44, 98, 122, 200, 204, 206, 224], "reduction_formula": 220, "redund": [4, 18, 53, 60, 92, 98, 227, 244], "reev": 54, "reevalu": 280, "reexpress": [186, 261], "ref": [4, 53, 68, 98, 110, 143, 216, 231, 245, 284], "ref_fram": 125, "refactor": [10, 227, 235, 246], "refer": [3, 4, 5, 7, 10, 11, 12, 16, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 33, 37, 38, 39, 41, 43, 46, 48, 50, 51, 53, 54, 55, 56, 60, 63, 65, 67, 68, 70, 72, 77, 78, 79, 84, 90, 91, 92, 93, 99, 103, 105, 110, 112, 113, 115, 117, 120, 121, 123, 125, 126, 128, 136, 138, 141, 143, 144, 145, 147, 149, 153, 155, 157, 158, 159, 162, 164, 165, 173, 174, 176, 185, 186, 187, 188, 190, 192, 194, 200, 201, 203, 211, 213, 214, 216, 219, 223, 226, 227, 228, 229, 231, 237, 246, 249, 250, 252, 256, 260, 261, 265, 273, 274, 280, 284, 285, 288, 289], "referenc": [7, 8, 46, 51, 102, 125, 128, 173, 206], "reference_fram": [118, 186], "reference_quant": 183, "referencefram": [6, 10, 117, 118, 120, 121, 123, 126, 128, 129, 130, 133, 134, 135, 138, 139, 140, 141, 143, 144, 186, 187, 188, 190, 191, 192, 193, 194, 273], "refin": [36, 38, 62, 93, 198, 202, 206, 207, 223, 244, 268], "refine_ab": 40, "refine_arg": 40, "refine_atan2": 40, "refine_im": 40, "refine_matrixel": 40, "refine_pow": 40, "refine_r": 40, "refine_root": [202, 206, 207], "refine_sign": 40, "refinementfail": 204, "reflect": [24, 31, 46, 50, 54, 62, 72, 73, 78, 91, 108, 145, 148, 149, 186], "reflected_port": 148, "reflected_pow": 148, "reflective_filt": 148, "reflex": 75, "reform": 75, "reformat": 172, "refract": [145, 147, 149, 150], "refraction_angl": 149, "refractive_index": 147, "refus": [18, 288], "reg_point": 256, "regard": [20, 44, 63, 70, 90, 144, 176, 198, 199, 213, 229, 230], "regardless": [4, 6, 20, 54, 62, 89, 102, 204, 219, 223, 249, 260, 265, 288], "regex": 10, "regg": 196, "regge58": 196, "regge59": 196, "region": [41, 70, 79, 89, 197, 219, 227, 230, 231, 256, 259, 266], "regist": [10, 36, 37, 38, 63, 172], "register_handl": [10, 36], "register_mani": [10, 37, 38], "registr": 10, "registri": 62, "regul": 206, "regular": [4, 10, 12, 18, 19, 44, 50, 62, 63, 66, 70, 78, 84, 85, 89, 102, 126, 170, 201, 208, 227, 237, 242, 287, 288], "regular_point": 256, "regularpolygon": [6, 73, 74, 78, 197], "reidel": 213, "reidemeister_present": 44, "reimport": 12, "reindex": 207, "reintroduc": 58, "reject": [18, 19, 102, 224, 252], "rel": [6, 7, 25, 42, 43, 52, 53, 54, 55, 59, 60, 61, 62, 63, 66, 73, 87, 102, 117, 120, 123, 131, 140, 141, 148, 175, 186, 190, 194, 195, 198, 200, 201, 204, 206, 219, 221, 226, 229, 231, 242, 249, 260, 261, 265, 282], "rel_op": [24, 62], "rela": 198, "relat": [3, 4, 6, 7, 11, 19, 36, 38, 39, 41, 44, 46, 52, 53, 60, 64, 67, 68, 78, 84, 87, 89, 98, 102, 108, 115, 121, 130, 133, 136, 137, 143, 145, 150, 158, 160, 180, 186, 190, 194, 196, 197, 198, 204, 206, 207, 208, 210, 211, 215, 217, 218, 221, 223, 224, 226, 227, 229, 230, 231, 249, 288], "relation_dict": 64, "relation_with_other_funct": 70, "relations_sort": 24, "relationship": [12, 14, 18, 43, 62, 67, 69, 89, 102, 137, 160, 186, 192, 195, 201, 229], "relative_ord": [52, 53], "relativist": 114, "relator_bas": 44, "relax": [98, 104], "relb": 198, "releas": [1, 7, 10, 62, 89, 93, 104, 140, 197, 236, 247, 250, 283], "relev": [4, 6, 7, 10, 18, 43, 60, 75, 90, 91, 117, 121, 123, 128, 181, 191, 195, 201, 221, 227, 228, 237, 242, 264], "reli": [3, 10, 43, 98, 103, 109, 204, 210, 211, 218, 223, 230, 245, 250, 284], "reliabl": [41, 62, 227, 247, 278], "reload": 1, "rels_h": 53, "rels_k": 53, "reltol": 43, "rem": [201, 202, 204, 207], "rem_z": 207, "remain": [4, 10, 11, 20, 37, 38, 43, 53, 54, 56, 58, 62, 63, 68, 87, 93, 102, 104, 113, 126, 175, 192, 194, 195, 206, 207, 208, 217, 220, 221, 227, 228, 229, 231, 233, 237, 246, 249, 250, 260, 265, 277, 280, 282, 283, 284], "remaind": [12, 61, 62, 63, 102, 199, 201, 202, 205, 207, 227], "remainder_modulus_pair": 102, "remainin": 204, "remark": [204, 210, 221, 227], "remedi": 87, "rememb": [4, 6, 12, 20, 29, 92, 98, 113, 116, 143, 194, 195, 211, 223, 229, 232, 250, 283, 288], "remot": [5, 62], "remov": [4, 10, 18, 24, 35, 36, 37, 53, 56, 60, 62, 66, 68, 77, 78, 87, 92, 98, 102, 105, 108, 117, 120, 133, 135, 140, 160, 176, 202, 204, 207, 209, 210, 211, 223, 224, 227, 229, 230, 232, 233, 243, 244, 245, 247, 249, 250, 277, 288], "remove_handl": [10, 36], "remove_load": [105, 108, 117], "remove_memb": 108, "remove_nod": 108, "remove_redundant_sol": 227, "remove_support": 108, "removeo": [62, 143, 211, 278], "ren": 43, "renam": [4, 43, 89], "render": [1, 3, 6, 7, 43, 62, 90, 191, 197, 211, 250, 287], "render_as_modul": 43, "render_as_source_fil": 43, "renewcommand": 211, "renumb": 227, "reorder": [54, 61, 68, 176, 207, 227, 231, 249], "reorder_limit": 61, "rep": [18, 53, 58, 62, 160, 198, 200, 201, 202, 205, 206, 207, 220, 223, 252], "rep1": [205, 220], "rep_expect": 171, "rep_innerproduct": 171, "repeat": [1, 11, 12, 53, 56, 61, 62, 68, 70, 89, 91, 93, 98, 102, 104, 160, 162, 176, 197, 198, 199, 204, 206, 207, 211, 217, 227, 231, 235, 236, 243, 245, 249, 288], "repeated_decim": 104, "repeatedli": [27, 102, 113, 243], "repetit": [237, 249], "rephras": 278, "repl": [11, 237], "repl_dict": 62, "replac": [4, 6, 10, 11, 12, 18, 41, 43, 53, 61, 62, 63, 66, 67, 68, 70, 72, 76, 89, 92, 93, 98, 102, 103, 104, 116, 118, 120, 143, 165, 171, 186, 198, 204, 207, 208, 212, 218, 220, 221, 223, 227, 229, 230, 237, 238, 249, 250, 252, 277, 286], "replace_in_add": 43, "replace_non": 171, "replace_with_arrai": [10, 237, 238], "replacement_dict": 237, "replaceoptim": 43, "replic": 128, "repo": 126, "report": [34, 41, 53, 62, 75, 93, 102, 208, 219, 230, 242, 284, 289], "report_": 242, "report_cdiff": 242, "report_ndiff": 242, "report_only_first_failur": 242, "report_udiff": 242, "reportedli": 63, "repositori": [3, 5, 7, 33, 224], "repr": [10, 43, 89, 170, 201, 206, 211, 242, 287], "repres": [3, 10, 11, 12, 15, 18, 19, 20, 25, 27, 29, 35, 37, 39, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 57, 58, 61, 62, 63, 64, 67, 68, 70, 72, 73, 75, 77, 78, 79, 84, 85, 89, 91, 92, 93, 95, 98, 102, 104, 105, 106, 109, 110, 112, 117, 120, 121, 123, 125, 126, 128, 129, 130, 131, 134, 136, 138, 139, 140, 141, 143, 145, 147, 148, 150, 162, 163, 165, 169, 170, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 204, 207, 209, 211, 213, 214, 217, 218, 219, 221, 223, 224, 227, 229, 230, 231, 232, 233, 235, 236, 237, 244, 246, 249, 250, 256, 259, 263, 265, 273, 278, 280, 282, 283, 288, 289], "represantit": 198, "represent": [10, 11, 20, 22, 26, 35, 42, 43, 44, 45, 53, 56, 62, 63, 68, 70, 74, 82, 84, 86, 87, 89, 91, 92, 93, 94, 95, 101, 102, 109, 110, 115, 116, 117, 125, 136, 140, 141, 145, 160, 165, 170, 171, 173, 174, 176, 178, 185, 191, 192, 194, 197, 198, 200, 202, 204, 206, 207, 208, 209, 210, 211, 213, 221, 223, 224, 227, 230, 231, 236, 237, 250, 252, 256, 259, 266, 274, 278, 280, 283], "reprifi": 211, "reproduc": [3, 22, 207, 242, 288], "reprprint": 211, "request": [1, 3, 4, 6, 7, 9, 10, 18, 22, 33, 41, 62, 66, 78, 87, 102, 126, 176, 204, 207, 235, 243], "requir": [0, 3, 6, 7, 8, 10, 11, 12, 20, 27, 31, 33, 43, 53, 62, 63, 65, 66, 70, 72, 73, 75, 76, 79, 81, 92, 98, 101, 102, 103, 104, 105, 110, 116, 117, 120, 121, 123, 125, 126, 128, 130, 137, 141, 150, 173, 185, 186, 188, 196, 197, 198, 200, 201, 202, 204, 206, 208, 211, 214, 220, 221, 224, 227, 229, 230, 231, 235, 242, 243, 244, 245, 247, 249, 250, 259, 260, 261, 284, 286], "requisit": 141, "rersiv": 202, "rerun": [1, 207, 242], "res_": 221, "research": [16, 54, 208, 223], "researchg": [205, 231], "reseed": 249, "resembl": [11, 64, 70, 89, 236], "reserv": [11, 18, 126, 237, 244, 284], "reset": [53, 55, 197, 204, 207, 242, 245, 247], "reshap": [43, 93, 126, 143, 232, 238, 249], "resid": 7, "residu": [58, 63, 102, 204, 221], "residue_ntheori": 102, "residue_theorem": 218, "residuos": 63, "resist": [72, 78, 105, 106, 220], "resiz": [53, 54, 93, 95], "resolut": [37, 38, 224], "resolv": [18, 19, 22, 24, 25, 26, 27, 28, 29, 30, 62, 89, 220, 223, 229], "resourc": [1, 6, 7, 20, 98, 205, 227, 243, 253], "resp": [199, 202, 227], "respect": [5, 6, 10, 11, 12, 20, 29, 36, 38, 39, 41, 42, 43, 44, 52, 53, 54, 57, 58, 60, 61, 62, 64, 67, 68, 70, 72, 74, 78, 79, 84, 85, 87, 89, 92, 93, 95, 98, 102, 104, 105, 106, 108, 112, 117, 118, 120, 123, 130, 137, 139, 141, 143, 150, 165, 178, 179, 185, 186, 190, 192, 195, 196, 197, 198, 201, 204, 206, 207, 208, 211, 213, 214, 217, 219, 223, 227, 228, 229, 230, 231, 232, 236, 237, 242, 244, 256, 258, 259, 260, 261, 262, 263, 264, 265, 278, 288], "respond": 62, "respons": [61, 62, 112, 126, 197, 244], "rest": [4, 10, 87, 90, 92, 96, 106, 114, 126, 130, 136, 181, 198, 201, 231, 249, 280, 281, 288], "restor": [12, 201, 223], "restrict": [11, 18, 20, 24, 43, 51, 62, 63, 70, 98, 105, 106, 176, 180, 198, 201, 206, 208, 226], "restrict_codomain": 198, "restrict_domain": 198, "restructur": 7, "restructuredtext": [6, 7], "result": [1, 3, 6, 10, 11, 12, 14, 15, 16, 18, 19, 20, 31, 35, 36, 37, 38, 39, 41, 42, 43, 52, 53, 54, 58, 61, 62, 63, 64, 66, 68, 70, 74, 79, 80, 84, 86, 87, 89, 91, 92, 93, 95, 98, 101, 102, 103, 104, 105, 112, 113, 116, 117, 118, 122, 126, 130, 136, 140, 143, 161, 168, 170, 171, 173, 175, 176, 178, 179, 180, 181, 185, 186, 195, 197, 198, 201, 202, 204, 205, 206, 207, 208, 209, 211, 213, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 235, 236, 238, 242, 243, 244, 246, 247, 249, 250, 252, 256, 259, 261, 280, 282, 283, 284, 288], "result_5397460570204848505": [43, 244], "result_dom": 201, "result_sympi": 201, "result_var": [43, 244], "result_vari": 244, "result\u2085\u2081\u2084\u2082\u2083\u2084\u2081\u2086\u2088\u2081\u2083\u2089\u2087\u2087\u2081\u2089\u2084\u2082\u2088": 43, "ret": 98, "retain": [54, 62, 68, 70, 89, 104, 207, 212, 220, 223], "retard": 148, "rethink": 156, "retract": 207, "retri": [89, 102], "retriev": [15, 45, 60, 93, 207, 223, 237], "return": [3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 22, 25, 26, 28, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 87, 89, 91, 92, 93, 94, 95, 98, 99, 101, 102, 104, 105, 108, 110, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 125, 126, 128, 130, 134, 138, 140, 141, 143, 145, 147, 148, 149, 150, 152, 153, 157, 160, 161, 162, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 190, 192, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 223, 224, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 256, 259, 261, 263, 277, 278, 283, 284, 287, 288, 289], "return_expr": 104, "return_mpmath": 207, "return_typ": 43, "returnvalu": 244, "reurn": 68, "reus": [12, 20, 43, 176, 282], "rev": 62, "rev1": 131, "rev2": 131, "reveal": [22, 25, 27, 43, 102, 230, 283], "revers": [7, 46, 51, 54, 61, 62, 63, 68, 89, 90, 92, 98, 102, 112, 175, 186, 191, 198, 200, 204, 207, 208, 211, 212, 219, 223, 227, 249, 288], "reverse_ord": 61, "reversedgradedlexord": 207, "reversedsign": 62, "revert": [10, 202, 207], "review": [6, 7, 142], "revis": 229, "revisit": [134, 194], "revolut": 120, "revolv": 108, "rewrit": [61, 62, 64, 67, 68, 70, 87, 89, 92, 105, 112, 173, 202, 207, 218, 219, 220, 223, 227, 228, 229, 230, 231, 268, 282, 284], "rewrite_complex": 89, "rewriterul": 89, "rewritten": [20, 62, 67, 68, 70, 89, 126, 173, 180, 218, 223, 227, 229, 288], "rf": [29, 61, 67, 207], "rfloor": [68, 202, 230, 231], "rfunction_format": 211, "rfunction_str": 211, "rg": 51, "rgs_enum": 51, "rgs_gener": 51, "rgs_rank": 51, "rgs_unrank": 51, "rh": [10, 14, 24, 27, 29, 43, 52, 54, 62, 93, 94, 98, 120, 121, 126, 133, 134, 135, 200, 209, 211, 213, 227, 229, 230, 262], "rho": [12, 64, 87, 98, 102, 129, 170, 211, 231, 237, 266], "rhs_x": 126, "ri": [62, 211], "riccati_equ": 227, "riccati_inverse_norm": 227, "riccati_norm": 227, "riccati_reduc": 227, "riccati_special_minus2": 227, "riccatispeci": 227, "ricci": 64, "rice": 231, "rich": [143, 223], "richard": [0, 102], "richardon": 201, "richardson": [66, 218, 230], "richer": 196, "riemann": [11, 64, 67, 68, 87, 198, 223, 237], "riemann_cycl": 237, "riemann_cyclic_replac": 237, "riemann_sum": 89, "riemann_summation_method": 89, "riemann_xi": 211, "riemannxi": 211, "rieselprim": 102, "right": [1, 4, 6, 7, 10, 12, 16, 20, 23, 24, 27, 29, 35, 41, 43, 44, 53, 54, 58, 62, 63, 65, 67, 68, 70, 78, 79, 87, 89, 92, 93, 98, 101, 102, 104, 105, 106, 112, 121, 125, 126, 140, 141, 143, 144, 148, 155, 160, 162, 164, 165, 170, 173, 176, 186, 192, 195, 196, 197, 198, 200, 206, 207, 208, 209, 211, 213, 214, 218, 219, 221, 227, 228, 230, 231, 242, 244, 246, 249, 263, 278, 282, 284, 288], "right_hand_sid": 125, "right_open": 219, "rightarrow": [42, 54, 58, 63, 67, 68, 70, 84, 85, 87, 89, 92, 93, 102, 197, 206, 218, 230, 233, 249, 278], "rightmost": [20, 176], "rigibodi": 143, "rigid": [106, 108, 117, 121, 123, 126, 128, 131, 136, 143, 186, 194, 273], "rigidbodi": [10, 117, 119, 121, 125, 128, 133, 134, 135, 136, 141, 143, 273], "rigidli": 185, "rigor": [4, 70, 195, 244], "rim": 219, "ring": [11, 22, 65, 85, 98, 99, 194, 199, 200, 204, 206, 207, 208, 209, 210, 211, 249], "ring_seri": 208, "rioboo": 89, "risc": [84, 227, 256], "risc_1355": 256, "risc_2244": 84, "risc_5387": 227, "risch": [10, 89, 278], "risch_integr": 89, "rise": [61, 67, 70, 196, 223, 227, 231, 260], "risingfactori": [61, 67, 70, 211, 213], "risk": 31, "riski": 211, "rivista": 181, "rk": 169, "rk4": 84, "rkgate": 169, "rl1": 220, "rl2": 220, "rm": [1, 43], "rm4": 63, "rmul": 54, "rmul_with_af": 54, "rmultipli": 93, "rn": 64, "rng": 62, "roach": [87, 221], "roach1996": 221, "roach1997": 221, "robert": [0, 231], "robertson": 224, "robot": 136, "robust": [29, 59, 62, 66, 203, 223, 227], "robustli": 22, "roch": 227, "rocklin": 0, "rod": 194, "roken": 252, "role": [18, 68, 209], "roll": [127, 128, 136, 194, 231, 273], "roller": [105, 106, 108], "room": 198, "root": [12, 18, 20, 23, 26, 31, 35, 41, 43, 61, 62, 63, 68, 70, 84, 85, 86, 87, 89, 91, 94, 98, 102, 143, 181, 196, 198, 199, 202, 206, 208, 210, 211, 221, 223, 227, 229, 230, 231, 242, 246, 249, 282, 284, 287, 289], "root1": 91, "root2": 91, "root_index": 202, "root_not": 211, "root_of_un": 68, "root_scalar": 28, "root_spac": 91, "root_system": 91, "rootof": [22, 68, 207], "rootoftool": [68, 98, 207], "rootsum": [89, 207, 213], "rootsystem": 91, "rop": 62, "ropen": [41, 68, 219, 231], "rose": 53, "rosen": 102, "rot": [6, 78, 173], "rot13": 63, "rot90": 93, "rot_axis1": 98, "rot_axis2": 98, "rot_axis3": 98, "rot_ccw_axis1": 98, "rot_ccw_axis2": 98, "rot_ccw_axis3": 98, "rot_given": 98, "rot_ord": [120, 186, 190, 258], "rot_typ": [120, 186, 190, 192], "rotat": [10, 35, 50, 53, 55, 62, 71, 72, 73, 75, 77, 78, 93, 105, 106, 120, 128, 131, 133, 135, 137, 141, 144, 160, 173, 186, 190, 192, 194, 195, 196, 197, 249, 256, 258, 261, 263, 265], "rotate_left": 249, "rotate_point": 35, "rotate_right": 249, "rotated_fram": 120, "rotating_reference_fram": 188, "rotation_axi": 120, "rotation_coordin": 120, "rotation_matrix": [256, 258, 261], "rotation_ord": [186, 256, 258], "rotation_spe": 120, "rou": 0, "rough": 181, "roughli": [18, 62, 63, 103, 127, 227, 250], "round": [11, 20, 28, 41, 43, 62, 66, 67, 68, 98, 149, 206, 207, 218, 220, 231], "round_trip": 63, "round_two": 206, "roundfunct": 68, "roundoff": 277, "roundrobin": 249, "routin": [29, 43, 51, 61, 62, 63, 64, 87, 92, 93, 98, 102, 148, 176, 200, 204, 207, 210, 211, 212, 223, 224, 227, 228, 229, 230, 243, 249, 263], "rou\u010dka": 0, "row": [27, 39, 42, 43, 44, 51, 54, 62, 67, 93, 94, 95, 98, 99, 101, 102, 112, 125, 126, 128, 141, 143, 144, 171, 186, 195, 200, 206, 211, 221, 230, 231, 236, 250, 256, 258], "row1": 98, "row2": 98, "row_del": [93, 98, 284], "row_insert": [93, 284], "row_join": [93, 98, 128], "row_matrix": 143, "row_swap": 98, "rowend": 98, "rowmatrix": 143, "rowsep": 98, "rowslist": [93, 200], "rowspac": [98, 200], "rowstart": 98, "royal": 142, "rp": [0, 78, 148], "rpent": 73, "rpm": 1, "rq0": 22, "rq1": 22, "rq2": 22, "rq3": 22, "rr": [42, 62, 80, 200, 201, 207, 208], "rr100": 201, "rref": [98, 200], "rref_matrix": [98, 200], "rref_pivot": [98, 200], "rrw": 65, "rs_": 208, "rs_asin": 208, "rs_atan": 208, "rs_atanh": 208, "rs_co": 208, "rs_compose_add": 208, "rs_cos_sin": 208, "rs_cosh": 208, "rs_cot": 208, "rs_diff": 208, "rs_exp": 208, "rs_fun": 208, "rs_hadamard_exp": 208, "rs_integr": 208, "rs_is_puiseux": 208, "rs_lambertw": 208, "rs_log": 208, "rs_mul": 208, "rs_newton": 208, "rs_nth_root": 208, "rs_pow": 208, "rs_puiseux": 208, "rs_puiseux2": 208, "rs_series_from_list": 208, "rs_series_invers": 208, "rs_series_revers": 208, "rs_sin": 208, "rs_sinh": 208, "rs_squar": 208, "rs_sub": 208, "rs_swap": 231, "rs_tan": 208, "rs_tanh": 208, "rs_trunc": 208, "rsa": 63, "rsa_": 63, "rsa_private_kei": 63, "rsa_public_kei": 63, "rset": 219, "rsname": 244, "rsolv": 229, "rsolve_hyp": [98, 229], "rsolve_hypergeometr": 213, "rsolve_poli": 229, "rsolve_ratio": 229, "rst": [4, 6, 7, 11, 44, 227, 242], "rsvg": 1, "rtime": 45, "rtol": 43, "ru": 227, "rubik": 53, "rubric": [61, 62], "rudimentari": [3, 20, 204], "ruffini": [22, 31, 98], "ruina": 142, "rule": [4, 7, 10, 16, 18, 20, 43, 53, 54, 61, 62, 70, 85, 87, 89, 92, 93, 98, 105, 126, 157, 160, 181, 186, 192, 195, 196, 208, 210, 211, 212, 217, 221, 223, 227, 237, 249, 250, 263, 280, 283], "run": [1, 4, 6, 7, 8, 11, 12, 16, 18, 20, 44, 53, 54, 56, 62, 63, 87, 98, 103, 104, 121, 128, 143, 176, 191, 197, 198, 211, 221, 223, 227, 228, 229, 239, 240, 243, 245, 246, 249, 250, 275, 280, 287], "run_all_test": 242, "run_in_subprocess_with_hash_random": 242, "rung": [11, 41, 84], "runner": [3, 242], "runtest": [10, 242], "runtim": [3, 11, 43, 62, 122, 250], "runtimeerror": [12, 41, 219, 230, 249], "runtimewarn": 250, "rusin": 224, "ruskei": [54, 249], "russel": 204, "russian": 7, "rust": 244, "rust_cod": [43, 211], "rustcodegen": 244, "rustcodeprint": 211, "rv": [62, 220, 231, 249], "rvert": 87, "ry": 143, "ryser": 98, "r\u2081": 106, "r\u2082": 106, "r\u2083": 106, "s0": [61, 85, 87, 148], "s0020": 54, "s0025": [41, 102], "s0747717183710539": 205, "s0895717706001609": 220, "s1": [18, 45, 53, 61, 75, 78, 85, 112, 187, 198, 207, 214, 224, 249, 259], "s1transitivesubgroup": [45, 206], "s2": [18, 45, 53, 54, 61, 75, 78, 112, 187, 198, 207, 214, 218, 224, 249, 259], "s208": 46, "s2transitivesubgroup": [45, 206], "s3": [45, 53, 61, 112, 214, 224], "s3_in_s6": 45, "s3transitivesubgroup": 45, "s4": [45, 54, 112], "s4m": 45, "s4p": 45, "s4transitivesubgroup": [45, 206, 207], "s4xc2": 45, "s5": [45, 53], "s5transitivesubgroup": 45, "s6": 45, "s6transitivesubgroup": [45, 202], "s_": [52, 58, 126, 204], "s_0": 58, "s_1": [44, 249], "s_2": 44, "s_3": 53, "s_4": 45, "s_5": 45, "s_6": 45, "s_aug": 98, "s_field": 64, "s_hexagon_theorem": 74, "s_i": [44, 58, 89, 91], "s_in": 145, "s_is_j": 91, "s_j": [52, 91, 204], "s_k": 44, "s_n": [45, 61, 207, 249], "s_out": 145, "s_postul": 102, "s_solution_of_systems_of_geodetic_polynomial_equ": 205, "s_transvers": 58, "s_x": [72, 78], "s_y": [72, 78], "sa": [78, 207], "saboo": 0, "saddl": 197, "safe": [62, 102, 201, 207, 229, 235, 278], "safeguard": 216, "safeti": [44, 54, 96], "sage": [25, 62, 102, 196, 282], "sai": [4, 7, 11, 12, 16, 18, 44, 52, 61, 62, 63, 91, 116, 121, 126, 136, 143, 181, 194, 195, 198, 199, 200, 204, 206, 210, 211, 218, 221, 224, 227, 229, 230, 231, 250, 277, 282, 288], "said": [0, 4, 11, 35, 39, 43, 48, 102, 181, 192, 194, 195, 199, 227, 230, 231, 256, 263], "sake": [20, 67, 224], "sakki": 249, "salvi": [205, 208], "sam": 231, "same": [1, 4, 6, 7, 10, 11, 12, 16, 18, 19, 20, 22, 24, 26, 29, 35, 37, 38, 39, 41, 42, 43, 45, 51, 52, 53, 54, 58, 61, 62, 63, 64, 67, 69, 70, 72, 75, 76, 77, 78, 79, 84, 85, 87, 89, 91, 92, 93, 95, 98, 102, 104, 105, 106, 112, 113, 116, 117, 120, 124, 126, 130, 133, 134, 137, 140, 141, 160, 162, 170, 173, 174, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 191, 192, 194, 195, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 218, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 232, 236, 237, 238, 240, 242, 244, 245, 246, 247, 249, 250, 252, 256, 258, 260, 261, 265, 278, 280, 283, 284, 287, 288], "same_root": 207, "samp": 231, "samp_list": 231, "sampl": [3, 8, 16, 53, 65, 110, 112, 160, 197, 211, 231, 278, 282], "sample_it": [10, 231], "sample_p": 112, "sampling_": 231, "sampling_dens": 231, "sampling_p": 231, "samuelson": 98, "sanit": 252, "sartaj": 0, "sat": [3, 37], "satisfi": [3, 7, 10, 18, 25, 26, 30, 38, 39, 41, 44, 50, 53, 58, 62, 63, 67, 70, 72, 85, 87, 91, 92, 98, 102, 122, 140, 160, 165, 198, 199, 202, 204, 206, 207, 211, 217, 218, 219, 224, 227, 228, 229, 230, 231, 237, 283, 288], "satur": 198, "savag": 249, "save": [3, 11, 41, 62, 98, 102, 197, 210, 229, 246], "saw": [101, 201, 288], "sawtooth": 214, "saxena": 205, "sb": 0, "sc": [53, 89], "sca": 204, "scalar": [10, 28, 35, 62, 64, 77, 91, 93, 95, 98, 103, 123, 126, 175, 186, 187, 188, 193, 195, 198, 200, 204, 211, 227, 232, 244, 250, 256, 258, 259, 260, 261, 262, 264, 266, 271, 273], "scalar_field": [187, 192, 256, 259, 263], "scalar_map": 256, "scalar_part": 35, "scalar_potenti": [187, 192, 259, 263], "scalar_potential_differ": [187, 192, 259, 263], "scale": [71, 72, 73, 77, 78, 79, 90, 105, 156, 177, 179, 180, 181, 183, 184, 191, 195, 197, 207, 214, 231, 263, 265], "scale_factor": 183, "scale_matrix": 231, "scale_matrix_1": 231, "scale_matrix_2": 231, "scalex": 214, "scan": [62, 200], "scarc": 204, "scc": 200, "scenario": [102, 231], "scene": [126, 223, 280], "schedul": 4, "schemat": [176, 181], "scheme": [1, 4, 18, 54, 61, 66, 196, 197, 204, 207, 236], "schiehlen": 142, "schirm": 142, "schmidt": 98, "school": [63, 220], "schorn": 224, "schost": 208, "schreier": [53, 58, 60], "schreier_sim": [53, 59, 60], "schreier_sims_increment": [53, 60], "schreier_sims_random": [53, 60], "schreier_vector": 53, "schur": 95, "schur_compl": 95, "schwab": 142, "sci": 196, "scienc": [0, 54, 87, 98, 142, 143, 198, 205, 220, 221, 278], "sciencedirect": [205, 220], "scienceworld": 29, "scientif": [0, 11, 33, 62, 143], "scientificamerican": 20, "scientist": 227, "scipi": [3, 11, 22, 24, 27, 70, 116, 143, 170, 211, 231, 250, 277, 286], "scopatz": 0, "scope": [6, 43, 136, 140, 240, 288], "scott": 53, "scottish": 231, "scratch": [62, 181], "screen": [4, 11, 90, 191, 195, 242, 287], "screenshot": 197, "script": [3, 5, 6, 11, 34, 70, 191, 243], "scroll": 31, "sculptur": 63, "sdm": [200, 204], "sdm_": 204, "sdm_add": 204, "sdm_deg": 204, "sdm_ecart": 204, "sdm_from_dict": 204, "sdm_from_vector": 204, "sdm_groebner": 204, "sdm_lc": 204, "sdm_lm": 204, "sdm_lt": 204, "sdm_monomial_deg": 204, "sdm_monomial_divid": 204, "sdm_monomial_mul": 204, "sdm_mul_term": 204, "sdm_nf_mora": 204, "sdm_spoli": 204, "sdm_to_dict": 204, "sdm_to_vector": 204, "sdm_zero": 204, "seamlessli": 159, "sean": 0, "search": [4, 6, 23, 41, 45, 53, 54, 58, 60, 62, 68, 98, 102, 126, 198, 206, 207, 211, 220, 221, 223, 228, 231, 243], "search_funct": 161, "sec": [68, 89, 110, 206, 211, 220, 288], "secant": [68, 207], "sech": [68, 211], "second": [4, 7, 11, 12, 16, 18, 19, 20, 22, 24, 26, 27, 29, 31, 34, 35, 38, 41, 43, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 72, 75, 76, 78, 89, 98, 102, 103, 105, 106, 110, 112, 113, 116, 117, 120, 121, 126, 130, 133, 135, 136, 137, 139, 141, 147, 149, 150, 153, 157, 162, 165, 170, 171, 173, 174, 179, 180, 181, 183, 185, 186, 187, 194, 195, 197, 200, 201, 204, 205, 206, 207, 211, 213, 221, 223, 224, 227, 229, 230, 231, 232, 233, 249, 250, 256, 259, 260, 261, 273, 277, 282, 283, 284], "second_mo": 105, "second_moment_of_area": [72, 78], "second_reference_fram": 186, "second_system": 256, "secondarili": [43, 207], "secondhypergeometr": 227, "secondli": [4, 20, 221], "secondlinearairi": 227, "secondlinearbessel": 227, "secondqu": 176, "secret": [20, 63], "secretli": 63, "section": [1, 4, 7, 8, 11, 18, 20, 21, 35, 42, 44, 53, 54, 61, 62, 63, 65, 69, 70, 72, 78, 87, 92, 98, 105, 106, 120, 126, 141, 179, 181, 185, 192, 195, 198, 201, 204, 206, 211, 214, 218, 221, 227, 237, 246, 247, 249, 260, 261, 262, 263, 267, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289], "section_modulu": [72, 78], "secur": 10, "see": [0, 1, 3, 4, 7, 8, 10, 11, 12, 15, 16, 18, 19, 20, 21, 32, 36, 37, 38, 39, 41, 42, 43, 45, 48, 50, 53, 54, 55, 58, 61, 63, 64, 67, 68, 69, 70, 74, 78, 79, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 98, 99, 102, 103, 104, 110, 116, 120, 121, 132, 134, 138, 140, 141, 145, 148, 151, 152, 161, 165, 166, 170, 171, 172, 173, 175, 176, 179, 181, 186, 191, 194, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 210, 211, 213, 214, 217, 218, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 236, 237, 240, 242, 243, 244, 245, 246, 247, 250, 251, 256, 258, 266, 277, 278, 280, 282, 283, 284, 286, 287, 288, 289], "seed": [51, 53, 62, 63, 72, 75, 76, 98, 102, 204, 231, 242, 249], "seek": [4, 229], "seem": [14, 18, 20, 86, 87, 126, 181, 198, 223, 227, 288], "seemingli": [61, 230], "seen": [6, 16, 18, 35, 54, 87, 89, 104, 108, 120, 125, 137, 181, 194, 198, 201, 204, 207, 227, 230, 247, 249, 260, 280, 283, 287], "segment": [6, 10, 53, 72, 74, 75, 76, 77, 78, 79, 194, 197, 227, 242], "segment2d": [74, 75, 78, 79], "segment3d": [75, 76], "seldom": 102, "select": [0, 1, 13, 14, 27, 32, 43, 46, 53, 54, 61, 62, 63, 71, 76, 90, 92, 93, 102, 104, 118, 141, 181, 191, 201, 202, 204, 205, 207, 211, 220, 223, 229], "selector": [61, 93, 223, 249], "self": [6, 18, 20, 27, 35, 37, 38, 42, 43, 53, 54, 59, 61, 62, 64, 68, 71, 72, 73, 75, 76, 77, 78, 89, 93, 98, 102, 117, 128, 171, 176, 186, 188, 190, 198, 200, 202, 204, 206, 207, 211, 213, 218, 219, 237, 256], "selfridg": 102, "sell": 282, "semant": [4, 11, 18, 95, 229], "semanticscholar": 102, "semi": [72, 75, 102], "semicircl": 231, "semicolon": 211, "semidefinit": [98, 231], "semidirect": 45, "semilatus_rectum": 72, "semilatusrectum": 72, "semilog": 110, "semisimpl": 91, "semispher": [256, 266], "send": [53, 62, 63, 68, 102, 198, 227, 229], "sender": 63, "sens": [10, 11, 16, 18, 20, 35, 39, 41, 42, 62, 64, 67, 70, 87, 92, 121, 128, 181, 186, 195, 198, 204, 206, 220, 221, 223, 230, 231, 243, 244, 249, 265, 288], "sensibl": [87, 89], "sensit": [62, 112, 143, 197, 204, 223, 242], "sent": [62, 89, 223, 229], "sentenc": [7, 92], "sep": [63, 211, 228, 242], "separ": [4, 6, 10, 11, 12, 16, 19, 20, 24, 30, 42, 50, 62, 63, 68, 70, 87, 89, 98, 113, 120, 125, 140, 141, 144, 149, 173, 176, 185, 186, 197, 199, 202, 204, 207, 208, 211, 220, 223, 224, 227, 228, 230, 235, 240, 242, 246, 250, 252, 256, 280], "separable_integr": [29, 227], "separable_reduc": 227, "separable_reduced_integr": 227, "separablereduc": 227, "separate_integr": 89, "separatevar": [62, 223, 227], "septemb": [54, 246], "seq": [35, 53, 62, 65, 98, 202, 204, 207, 217, 229, 249], "seqadd": 217, "seqbas": 217, "seqformula": 217, "seqmul": 217, "seqper": 217, "sequenc": [7, 12, 35, 41, 43, 46, 49, 52, 53, 54, 58, 60, 61, 62, 63, 65, 67, 70, 72, 75, 76, 77, 78, 79, 86, 92, 93, 95, 98, 101, 102, 143, 149, 175, 176, 202, 205, 211, 213, 215, 218, 220, 221, 223, 224, 227, 228, 230, 237, 240, 243, 244, 249, 251, 252, 268], "sequence_partit": 249, "sequence_partitions_empti": 249, "sequence_term": 61, "sequenti": [42, 46, 63, 68, 256, 258], "serendipit": 220, "seress": 53, "sergei": 0, "sergiu": 0, "seri": [6, 16, 29, 41, 42, 43, 44, 52, 53, 61, 62, 64, 66, 67, 68, 70, 85, 86, 87, 91, 102, 109, 112, 126, 133, 135, 143, 190, 194, 203, 204, 211, 216, 217, 221, 227, 230, 268, 274, 279], "series_approx2": 43, "series_approx3": 43, "series_approx8": 43, "seriesapprox": 43, "seriessolut": 227, "serious": 4, "serv": [7, 11, 16, 20, 37, 38, 43, 45, 59, 62, 69, 85, 206, 227, 228, 252, 281], "server": 8, "servic": 43, "session": [11, 34, 43, 62, 74, 89, 191, 195, 201, 247, 280, 287], "set": [1, 2, 3, 4, 6, 7, 11, 12, 14, 16, 17, 18, 19, 22, 24, 25, 31, 34, 35, 37, 41, 42, 43, 44, 45, 50, 51, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 75, 77, 79, 80, 81, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 104, 105, 106, 112, 116, 120, 121, 125, 126, 128, 129, 130, 135, 137, 138, 139, 140, 143, 144, 160, 166, 171, 176, 178, 181, 183, 184, 185, 186, 188, 190, 191, 192, 194, 197, 198, 199, 200, 201, 204, 206, 207, 210, 211, 212, 213, 218, 220, 221, 223, 224, 226, 227, 228, 229, 231, 235, 236, 237, 240, 242, 243, 244, 245, 249, 250, 256, 259, 261, 267, 270, 277, 279, 288], "set_": 10, "set_acc": [143, 190, 194], "set_ang_acc": [143, 186], "set_ang_vel": [117, 123, 126, 128, 133, 134, 140, 141, 143, 144, 186, 188, 190, 194], "set_comm": 237, "set_condit": 10, "set_domain": 207, "set_global_relative_scale_factor": 183, "set_global_set": 211, "set_metr": [10, 237], "set_modulu": 207, "set_norm": 35, "set_po": [126, 190, 194], "set_quantity_dimens": 179, "set_quantity_scale_factor": 179, "set_vel": [117, 121, 123, 126, 128, 130, 133, 134, 135, 138, 139, 140, 141, 143, 144, 190, 194], "setdelai": 104, "seterr": 62, "setkind": [62, 93], "setminu": [70, 87], "setsymbol": 18, "setter": [10, 126, 143], "setup": [8, 10, 43, 62, 129, 130, 131, 145, 186, 204, 207, 209, 210, 221, 242, 243, 245, 255, 287], "seven": 211, "sever": [3, 4, 5, 6, 10, 11, 15, 18, 20, 22, 26, 33, 43, 47, 53, 54, 61, 62, 66, 67, 69, 70, 74, 87, 89, 102, 118, 137, 181, 183, 197, 199, 201, 204, 206, 210, 211, 212, 218, 219, 227, 231, 242, 244, 254, 267, 280, 284, 287], "sexi": [37, 38], "sexy_prim": [37, 38], "sexyprim": [37, 38], "sexyprimepred": [37, 38], "sfield": [202, 262], "sfu": [70, 89], "sg": [53, 231, 237], "sgen": 58, "sh": 1, "sha": 252, "sha1": 244, "shadow": [29, 55], "shall": [16, 53, 87, 126, 143, 218, 221, 283], "shallow": [202, 218], "shank": 218, "shankar": 48, "shape": [6, 10, 43, 78, 93, 95, 98, 100, 101, 110, 112, 120, 125, 126, 186, 197, 198, 200, 211, 214, 221, 231, 232, 233, 235, 236, 237, 250, 287], "shapeerror": [27, 93, 95, 98], "share": [4, 18, 20, 63, 102, 202, 206, 211, 231, 244], "she": [7, 230], "shea": [205, 207], "shear": [105, 106], "shear_forc": [105, 106], "shear_modulu": 105, "shear_stress": 105, "sheet": [70, 220], "shell": [1, 12, 90, 143, 210], "shi": [70, 87, 211, 221], "shier": 231, "shierd": 231, "shift": [47, 53, 54, 56, 63, 70, 73, 77, 79, 92, 197, 202, 204, 207, 214, 221, 229, 231], "shifted_ellips": 72, "shifted_gompertz_distribut": 231, "shiftedgompertz": 231, "shiftx": 214, "ship": [11, 103], "shivam": 0, "sho": 177, "shor": [163, 273], "short": [4, 7, 12, 34, 44, 52, 54, 58, 62, 63, 64, 65, 68, 96, 102, 116, 162, 181, 185, 195, 198, 205, 232, 242, 252, 283, 287], "short_lif": 12, "shortcut": [42, 62, 94, 195, 211, 219, 223, 288], "shorten": 6, "shorter": [10, 31, 62, 72, 116, 138, 185, 198, 202, 211, 244, 252], "shortest": [72, 75, 78, 194, 217, 223, 227, 249], "shorthand": [11, 12, 18, 20, 62, 92, 170, 206, 219, 240], "should": [1, 3, 5, 6, 7, 8, 10, 11, 12, 15, 18, 19, 20, 22, 29, 31, 34, 36, 38, 41, 42, 43, 44, 53, 54, 55, 56, 58, 61, 62, 63, 65, 66, 68, 70, 72, 73, 74, 75, 76, 77, 79, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 98, 102, 104, 105, 110, 112, 116, 121, 126, 128, 130, 138, 140, 141, 143, 144, 145, 156, 160, 164, 166, 168, 170, 171, 174, 176, 178, 179, 181, 182, 186, 191, 194, 195, 197, 198, 199, 200, 201, 202, 204, 206, 207, 210, 211, 213, 214, 217, 218, 219, 220, 221, 223, 224, 226, 227, 229, 230, 231, 235, 236, 240, 242, 243, 244, 245, 246, 247, 249, 250, 252, 256, 260, 277, 278, 280, 281, 284], "shouldn": [62, 208], "shoup": [204, 205], "shoup91": 205, "shoup95": 205, "show": [1, 3, 4, 6, 7, 12, 15, 16, 17, 18, 19, 20, 29, 43, 54, 61, 62, 66, 68, 85, 87, 89, 98, 102, 105, 106, 110, 116, 126, 132, 137, 141, 143, 171, 175, 179, 181, 186, 194, 195, 197, 198, 201, 202, 204, 206, 207, 211, 212, 214, 218, 219, 220, 221, 223, 224, 227, 229, 231, 232, 240, 243, 244, 247, 249, 250, 280, 282, 284, 287], "show_ax": 110, "shown": [4, 6, 10, 11, 18, 19, 20, 51, 54, 61, 62, 66, 68, 70, 87, 104, 106, 110, 112, 116, 121, 123, 129, 130, 131, 137, 138, 139, 141, 185, 186, 194, 195, 197, 200, 201, 202, 207, 211, 227, 231, 247, 249, 260, 261, 281], "showpost": 102, "shp": 43, "shrink": [73, 87], "shuffl": [54, 98, 288], "shut": [62, 207], "shutil": 10, "si": [20, 70, 86, 87, 149, 178, 179, 180, 181, 182, 183, 211], "siam": [196, 249], "sibx0afl3q": 230, "side": [12, 16, 18, 24, 26, 29, 43, 53, 54, 62, 74, 78, 89, 98, 102, 105, 112, 121, 125, 140, 141, 144, 164, 165, 181, 186, 196, 198, 204, 206, 209, 211, 228, 230, 231, 235, 242, 244, 266, 278], "siev": [53, 102], "sift": [53, 60, 249], "sigma": [12, 54, 85, 87, 93, 98, 211, 214, 231], "sigma3": 151, "sigma_": 231, "sigma_approxim": 214, "sigma_i": [115, 231], "sigma_k": 102, "sigma_not": 61, "sigma_x": 231, "sign": [4, 6, 7, 11, 22, 26, 31, 35, 40, 43, 58, 62, 63, 67, 68, 72, 78, 87, 89, 98, 102, 105, 106, 108, 112, 128, 149, 161, 186, 192, 194, 196, 204, 211, 216, 218, 223, 224, 229, 249, 263, 266, 281], "signal": [70, 92, 102, 110, 112, 143, 204, 283], "signallib": 43, "signatur": [6, 20, 37, 38, 54, 62, 98, 244, 245, 249, 250], "signed_permut": [224, 249], "signedinttyp": 43, "signifi": [53, 62, 105, 207, 231], "signific": [4, 12, 18, 43, 62, 63, 66, 89, 98, 116, 141, 170, 201, 230, 250, 283], "significantli": [10, 27, 43, 66, 116, 138, 202, 213, 243, 246], "signsimp": [62, 134, 223], "signum": 211, "sigsam": 89, "silenc": [4, 240, 247], "silent": [19, 66, 102, 243], "silver": 114, "sim": [53, 58, 60, 87], "similar": [4, 5, 10, 12, 16, 18, 20, 22, 54, 61, 62, 63, 66, 67, 68, 70, 73, 78, 79, 83, 92, 98, 103, 112, 126, 128, 130, 140, 141, 174, 192, 194, 195, 199, 201, 202, 204, 208, 218, 220, 221, 223, 227, 229, 232, 237, 240, 243, 246, 247, 256, 258, 260, 261, 265, 277, 282, 283, 284, 286, 288], "similarli": [5, 10, 18, 22, 29, 58, 62, 63, 70, 74, 98, 105, 106, 112, 121, 141, 180, 197, 198, 201, 206, 208, 218, 219, 221, 227, 242, 250, 261, 262, 284], "simmon": 227, "simon": 231, "simp": [87, 128, 186], "simpfunc": 98, "simpl": [6, 11, 12, 16, 18, 20, 28, 33, 42, 43, 53, 61, 62, 66, 70, 74, 78, 80, 87, 89, 91, 98, 102, 103, 105, 106, 112, 113, 116, 120, 121, 123, 125, 128, 130, 131, 133, 135, 136, 140, 144, 150, 164, 165, 173, 174, 175, 186, 194, 195, 201, 202, 203, 207, 208, 211, 213, 218, 220, 221, 223, 224, 227, 230, 237, 243, 244, 249, 253, 255, 256, 258, 259, 263, 277, 280, 283, 284, 288], "simple_pend": 131, "simple_root": 91, "simpled": 213, "simpledomain": 202, "simplefilt": 247, "simpler": [11, 19, 20, 22, 35, 62, 66, 70, 86, 87, 133, 195, 204, 220, 221, 223, 227, 229, 230, 288], "simplest": [20, 29, 42, 92, 98, 102, 103, 196, 197, 208, 212, 220, 223, 227, 278, 288], "simplfiy_thi": 4, "simpli": [1, 3, 4, 7, 18, 19, 24, 25, 39, 44, 45, 61, 62, 64, 68, 72, 93, 95, 98, 102, 104, 105, 108, 113, 117, 126, 128, 140, 166, 171, 181, 192, 195, 201, 207, 208, 219, 220, 221, 226, 227, 230, 247, 249, 250, 263], "simplic": [20, 221, 227], "simplif": [3, 11, 12, 18, 36, 38, 40, 41, 43, 62, 64, 67, 68, 87, 93, 98, 104, 118, 126, 140, 143, 160, 176, 186, 207, 212, 222, 223, 227, 229, 230, 267, 268, 277, 279, 281, 282], "simplifc": 134, "simplifi": [4, 6, 11, 12, 16, 18, 19, 20, 27, 28, 29, 36, 38, 40, 41, 61, 62, 64, 66, 67, 68, 70, 74, 79, 84, 87, 89, 92, 93, 94, 95, 98, 105, 112, 113, 118, 120, 122, 129, 130, 133, 134, 135, 140, 148, 155, 160, 175, 176, 180, 183, 186, 192, 198, 206, 208, 210, 212, 217, 219, 220, 221, 224, 227, 228, 229, 230, 231, 233, 245, 247, 250, 260, 262, 268, 277, 279, 280, 282, 283, 284], "simplified_pair": 92, "simplify_auxiliary_eq": 134, "simplify_cg": 160, "simplify_gpgp": 113, "simplify_index_permut": 176, "simplify_log": 92, "simplify_thi": [4, 6, 245], "simprot": [126, 143], "simul": [62, 126, 143, 210], "simultan": [12, 62, 68, 75, 93, 102, 197, 220], "sin": [6, 7, 10, 11, 12, 18, 20, 23, 26, 28, 29, 31, 33, 35, 41, 43, 61, 62, 64, 66, 67, 68, 70, 71, 72, 76, 80, 81, 84, 85, 86, 87, 89, 90, 93, 98, 103, 104, 114, 117, 118, 120, 125, 126, 128, 129, 131, 133, 134, 135, 140, 143, 148, 150, 174, 186, 188, 190, 192, 194, 195, 196, 197, 199, 201, 207, 208, 210, 211, 212, 213, 214, 218, 219, 220, 221, 223, 226, 227, 229, 230, 232, 238, 244, 250, 256, 258, 259, 260, 261, 266, 277, 278, 280, 282, 283, 288, 289], "sin_co": 250, "sin_cos_numpi": 250, "sin_cos_sympi": 250, "sin_sol": 219, "sinc": [10, 11, 12, 14, 15, 16, 18, 19, 20, 36, 41, 43, 44, 53, 54, 55, 58, 59, 60, 62, 63, 65, 67, 68, 70, 71, 72, 74, 78, 80, 86, 87, 89, 91, 92, 93, 98, 102, 115, 120, 128, 141, 143, 152, 176, 177, 181, 185, 192, 195, 198, 199, 201, 202, 204, 206, 207, 211, 214, 219, 220, 221, 223, 224, 227, 229, 230, 231, 237, 241, 245, 246, 247, 249, 250, 260, 262, 263, 265, 277, 282, 284, 287, 288, 289], "sinc_funct": 68, "sine": [6, 20, 62, 68, 70, 87, 89, 150, 208, 214, 220, 277], "sine_transform": 89, "sinetransform": 89, "sing": 98, "singh": 0, "singl": [1, 4, 7, 10, 11, 16, 18, 20, 23, 29, 34, 35, 42, 43, 46, 53, 62, 63, 67, 68, 70, 75, 76, 78, 79, 80, 87, 89, 92, 93, 98, 101, 104, 112, 113, 118, 120, 130, 137, 156, 160, 162, 170, 173, 176, 183, 186, 190, 197, 198, 200, 201, 202, 204, 206, 207, 211, 212, 213, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 236, 242, 244, 246, 249, 250, 252, 278, 280, 283, 284, 289], "singlecontinuouspspac": 231, "singledomain": 231, "singlefinitepspac": 231, "singlepspac": 231, "singleton": [11, 54, 92, 230, 283], "singletonregistri": [18, 62], "singli": 102, "singular": [39, 43, 54, 62, 66, 68, 69, 70, 84, 85, 87, 89, 98, 105, 107, 140, 186, 198, 205, 218, 227, 230, 256, 273, 278], "singular_point": 256, "singular_valu": 98, "singular_value_decomposit": 98, "singularhandl": 39, "singularit": [89, 140], "singularity_funct": 70, "singularityfunct": [70, 89, 105], "singularityintegr": 89, "singularmatrix": 39, "singularpred": 39, "sinh": [20, 41, 62, 66, 68, 70, 81, 87, 208, 211, 212, 221, 288], "sinhint": 211, "sinhintegr": 211, "sinint": 211, "sinintegr": 211, "sink": [192, 263], "sinrul": 89, "siq": 102, "siret": 205, "siso": [110, 112], "sisolineartimeinvari": [110, 112], "sit": [112, 195], "site": [7, 102, 245], "situat": [18, 31, 62, 66, 87, 195, 227, 229, 231, 247, 280], "six": [14, 106, 211, 224, 230, 231], "sixteenth": 63, "size": [10, 16, 27, 43, 44, 46, 51, 53, 54, 55, 56, 57, 58, 62, 63, 65, 67, 90, 93, 95, 98, 101, 102, 110, 128, 138, 139, 140, 149, 171, 172, 191, 197, 200, 204, 211, 223, 224, 227, 231, 249, 278], "sizeof": 43, "sk": 63, "skellam": 231, "skellam_distribut": 231, "skew": [18, 85, 102, 231], "skiena": 54, "skip": [1, 3, 4, 6, 12, 42, 46, 62, 93, 98, 102, 186, 206, 210, 211, 213, 227, 229, 240, 242, 278, 286, 287], "skip_nan": 68, "skip_under_pyodid": 240, "skyciv": 78, "slash": [211, 242], "slate": 242, "slater": [70, 221], "slice": [62, 92, 93, 98, 104, 202, 207, 217, 219, 223, 232, 249], "slide": 120, "slider": 131, "slightli": [28, 34, 35, 43, 58, 102, 104, 128, 197, 198, 202, 204, 207, 211, 221, 223], "slip": [128, 132, 134, 194], "slope": [72, 73, 75, 78, 105, 106, 110, 120], "slot": [58, 160, 232, 236, 237, 283], "slow": [18, 20, 22, 27, 58, 62, 66, 89, 103, 116, 128, 148, 185, 195, 201, 202, 211, 212, 213, 214, 223, 227, 229, 230, 242, 243, 288], "slowdown": [10, 66], "slower": [10, 20, 22, 27, 58, 98, 201, 206, 250, 277], "slowest": [27, 89, 103], "slowli": [66, 218], "slp": 60, "slp_dict": 53, "sm": [102, 126, 143, 198], "small": [16, 25, 43, 44, 45, 53, 54, 62, 66, 67, 89, 92, 98, 102, 112, 130, 134, 143, 173, 196, 197, 202, 204, 205, 206, 223, 224, 229, 249, 277, 280, 282], "smaller": [11, 43, 53, 54, 62, 63, 67, 70, 78, 89, 95, 102, 138, 199, 201, 204, 207, 214, 220, 221, 229, 249, 277, 288], "smallest": [41, 56, 68, 75, 77, 84, 92, 98, 102, 173, 186, 202, 247, 249], "smallest_angle_between": 75, "smallmatrix": [211, 282], "smart": [118, 140, 218, 224, 227], "smarter": [169, 220], "smith": [0, 10, 99, 200], "smith_normal_form": [10, 99, 200], "smooth": [62, 66, 102, 213], "smoothness_p": 102, "smt_builtin_func": 211, "smtlib": 211, "smtlib_cod": 211, "smtlibprint": 211, "sn": [53, 54, 61, 84], "snippet": [12, 43], "snr": 43, "so": [0, 3, 4, 6, 7, 10, 11, 12, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 50, 51, 53, 54, 56, 58, 60, 62, 63, 66, 68, 70, 72, 74, 75, 76, 78, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 98, 99, 102, 104, 105, 106, 112, 116, 120, 121, 126, 128, 130, 136, 137, 138, 140, 143, 144, 149, 160, 162, 170, 172, 173, 174, 176, 178, 180, 181, 185, 186, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 235, 236, 240, 242, 243, 246, 247, 249, 250, 252, 262, 266, 277, 278, 280, 282, 283, 284, 287, 288, 289], "societi": [142, 224], "socket": 120, "sode0401": 227, "sode0402": 227, "sode0404": 227, "sode0405": 227, "sode0406": 227, "softwar": [3, 7, 89, 205, 282], "soil": 198, "sol": [14, 28, 98, 224, 227, 228, 229], "sol0": 14, "sol1": 227, "sol2": 227, "sol_f": 230, "sol_typ": 121, "sol_uniqu": 98, "sol_vector": 227, "sol_vector_evalu": 227, "sola": 227, "solar": 179, "solar_mass": 179, "solb": 227, "soldner": 70, "soldnersconst": 70, "sole": 22, "solenoid": [187, 259], "solid": [55, 76, 120, 197, 266], "solidspher": 266, "sollist": 227, "soln": 98, "solomon": 63, "solut": [1, 10, 11, 12, 14, 16, 19, 20, 23, 24, 43, 58, 62, 63, 68, 70, 72, 80, 84, 85, 86, 89, 98, 102, 105, 109, 116, 121, 126, 130, 136, 140, 145, 181, 185, 198, 204, 205, 206, 207, 208, 209, 210, 219, 224, 226, 227, 228, 229, 289], "solution2": 27, "solution_dict": [25, 29], "solution_first": 25, "solution_list": [25, 26], "solution_one_soln_set_dict": 29, "solution_outside_2_3": 26, "solution_p4q3": 25, "solution_set": 26, "solution_set_arg": 26, "solutions_list": 29, "solutions_one_soln_set": 29, "solutions_set": 26, "solv": [4, 6, 10, 11, 12, 13, 16, 18, 20, 21, 43, 46, 58, 61, 62, 70, 75, 87, 89, 93, 94, 98, 105, 107, 108, 120, 121, 122, 126, 129, 130, 133, 135, 136, 138, 140, 143, 179, 200, 204, 208, 209, 210, 211, 213, 223, 224, 226, 227, 228, 231, 273, 278, 279, 282, 284, 287], "solvabl": [31, 53, 108, 120, 224, 227, 230, 289], "solve_aux_eq": 227, "solve_congru": [102, 204], "solve_d": 213, "solve_expo": 230, "solve_for_func": [227, 228], "solve_for_ild_mo": 105, "solve_for_ild_react": 105, "solve_for_ild_shear": 105, "solve_for_reaction_load": [105, 106], "solve_for_tors": 105, "solve_ivp": 29, "solve_least_squar": 98, "solve_lin_si": [10, 209], "solve_linear": 229, "solve_linear_system": 229, "solve_linear_system_lu": 229, "solve_log": 230, "solve_multipli": [121, 130], "solve_poly_inequ": 226, "solve_poly_system": [199, 207, 229, 230], "solve_rational_inequ": 226, "solve_riccati": 227, "solve_slope_deflect": 105, "solve_triangul": 229, "solve_undetermined_coeff": 229, "solve_univariate_inequ": [24, 226, 230], "solvefun": 228, "solver": [3, 6, 11, 25, 28, 37, 70, 98, 102, 125, 136, 143, 144, 200, 203, 211, 223, 224, 228, 242, 267, 268, 274, 279, 281], "solveset": [4, 20, 28, 31, 143, 209, 225, 226, 229, 268, 289], "solveset_complex": 230, "solveset_r": 230, "solvifi": [226, 230], "some": [1, 3, 4, 6, 11, 12, 16, 18, 19, 20, 22, 25, 26, 27, 28, 30, 31, 33, 34, 35, 39, 42, 43, 44, 45, 50, 53, 54, 60, 61, 62, 63, 66, 67, 68, 70, 72, 73, 74, 78, 87, 89, 91, 92, 93, 95, 98, 102, 103, 104, 110, 113, 116, 117, 120, 123, 125, 126, 127, 128, 129, 130, 131, 137, 138, 140, 141, 144, 156, 161, 165, 173, 176, 180, 181, 182, 185, 187, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 211, 213, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 237, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 256, 258, 259, 261, 263, 267, 277, 278, 280, 282, 283, 284, 286, 287, 288], "some_filenam": 126, "some_funct": 245, "somehow": [11, 20], "someon": [4, 227, 246, 281], "someth": [4, 6, 7, 10, 11, 12, 18, 19, 20, 31, 41, 43, 62, 63, 66, 72, 87, 92, 93, 98, 102, 116, 126, 127, 143, 169, 182, 185, 197, 201, 202, 210, 218, 219, 223, 227, 230, 242, 244, 250, 277, 280, 282, 283, 286], "sometim": [4, 6, 7, 11, 12, 18, 20, 22, 29, 42, 43, 62, 67, 70, 86, 87, 112, 136, 140, 168, 176, 195, 198, 201, 206, 211, 213, 218, 220, 224, 227, 229, 240, 249, 277, 284], "somewhat": [70, 89, 126, 202], "somewher": [4, 6, 7, 11, 43], "soon": [61, 62, 126, 181, 208], "sop": [89, 92], "sopform": 92, "sophist": [20, 103, 229], "sort": [11, 24, 37, 38, 42, 43, 51, 54, 58, 87, 89, 92, 98, 101, 102, 113, 116, 121, 160, 176, 181, 185, 197, 204, 207, 208, 218, 223, 224, 227, 228, 229, 233, 235, 237, 242, 244, 249, 260, 280, 282, 283], "sort_kei": [51, 62, 227], "sorted_class": 62, "sorted_compon": 237, "sosmath": 220, "sought": [53, 102, 161, 171, 223, 229, 230], "sound": [211, 288], "sourc": [0, 1, 5, 6, 7, 11, 12, 20, 27, 28, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 108, 110, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 125, 126, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 186, 187, 188, 190, 191, 192, 196, 197, 198, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 258, 259, 263, 275, 282], "source_cod": 104, "source_format": [43, 211], "sourceforg": [7, 42], "sp": 194, "space": [6, 12, 20, 41, 42, 43, 62, 63, 64, 71, 72, 73, 75, 77, 78, 91, 98, 104, 105, 114, 120, 121, 122, 123, 145, 147, 150, 160, 163, 165, 171, 173, 186, 190, 192, 195, 196, 197, 198, 206, 230, 231, 242, 246, 256, 258, 260, 261, 262, 263, 265, 266, 273, 280, 283], "space_orient": [256, 258], "spacecraft": 142, "spaceorient": [256, 258, 261], "spack": 33, "spam": 252, "spamham": 252, "spammer": 211, "span": [6, 10, 91, 98, 105, 106, 120, 206, 211, 247, 284], "spars": [7, 11, 95, 97, 98, 170, 200, 206, 207, 208, 231, 232, 271, 283], "sparsematrix": [93, 98, 101, 212, 223], "sparsetool": [93, 101], "spatial": [123, 150, 186, 211], "speak": [98, 206, 263], "spec": [206, 207], "specfun": 251, "speci": [29, 61, 62], "special": [3, 6, 11, 13, 18, 20, 27, 31, 34, 35, 45, 54, 62, 63, 65, 66, 67, 69, 77, 80, 87, 89, 93, 98, 143, 160, 165, 192, 198, 201, 204, 205, 206, 211, 220, 221, 223, 226, 227, 228, 229, 231, 242, 243, 244, 247, 249, 250, 260, 263, 265, 268, 278, 279, 283], "specialpoli": 207, "specif": [1, 5, 6, 7, 10, 11, 18, 20, 21, 25, 32, 53, 54, 62, 63, 64, 70, 74, 89, 91, 93, 98, 117, 120, 121, 125, 126, 136, 143, 145, 181, 195, 197, 198, 202, 204, 206, 207, 210, 211, 212, 217, 223, 224, 227, 228, 229, 231, 237, 242, 243, 244, 249, 284, 288], "specifi": [6, 7, 10, 14, 18, 20, 22, 27, 28, 30, 31, 42, 43, 44, 57, 61, 62, 63, 64, 65, 68, 70, 71, 75, 78, 87, 89, 91, 92, 93, 95, 98, 102, 104, 105, 106, 112, 117, 120, 121, 125, 126, 128, 130, 131, 133, 136, 138, 139, 140, 141, 143, 144, 160, 165, 170, 171, 173, 174, 179, 185, 186, 188, 190, 192, 194, 195, 198, 199, 200, 201, 202, 204, 206, 207, 208, 211, 213, 214, 217, 218, 219, 221, 223, 227, 228, 229, 230, 231, 232, 236, 237, 238, 242, 243, 244, 249, 250, 256, 258, 259, 262, 265, 284], "spectral": 98, "spectrum": 20, "speed": [3, 6, 10, 38, 43, 53, 62, 63, 66, 93, 102, 103, 114, 120, 121, 122, 125, 126, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 143, 144, 147, 150, 180, 185, 186, 190, 195, 196, 208, 211, 212, 218, 223, 227, 243, 246, 249, 283, 284], "speed_con": 138, "speed_idx": [125, 144], "speed_of_light": [180, 183], "speedup": [62, 98, 103, 204, 208, 250], "spell": [6, 10, 11, 227], "spent": 250, "sph_jn": 70, "sphere": [11, 148, 256, 266], "spheric": [68, 114, 120, 155, 196, 197, 207, 256, 260, 261, 282], "spherical_bessel_fn": [70, 207], "spherical_harmon": 70, "sphericalbess": 211, "sphericalbesselj": 211, "sphericalharmon": 70, "sphericalharmonici": 70, "sphericaljoint": 120, "sphinx": [1, 4, 7, 8, 68, 227, 242, 247], "sphinx_math_dollar": 7, "sphinxext": 7, "spin": [78, 114, 128, 162, 163, 171, 273], "spin_up": 114, "spinor": 113, "spinstat": 173, "split": [20, 43, 62, 63, 66, 87, 89, 104, 204, 206, 209, 210, 211, 229, 231, 237, 242, 249, 254, 283, 288], "split_1": 62, "split_list": 242, "split_super_sub": 211, "split_symbol": 104, "split_symbols_custom": 104, "splitter": 148, "spoli": 204, "spot": [98, 144], "spread": [145, 211, 231, 246], "spring": [102, 117, 120, 121, 126, 131], "spring_forc": 117, "springer": [63, 89, 102, 204, 205, 227], "spuriou": [22, 204, 229], "sq": [12, 224], "sq2": 62, "sqf": [199, 202, 207, 224], "sqf_list": [199, 202, 207], "sqf_list_includ": [202, 207], "sqf_norm": [202, 207], "sqf_normal": 224, "sqf_part": [202, 207], "sqr": [202, 207], "sqrt": [6, 10, 11, 14, 18, 20, 22, 23, 24, 25, 26, 30, 31, 35, 39, 40, 41, 43, 62, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 85, 86, 87, 89, 90, 93, 94, 98, 102, 104, 105, 108, 112, 114, 128, 145, 147, 149, 150, 155, 160, 170, 171, 173, 174, 176, 177, 179, 180, 186, 192, 195, 196, 199, 201, 202, 204, 206, 207, 210, 211, 212, 217, 220, 221, 223, 224, 226, 227, 229, 230, 231, 249, 250, 252, 256, 265, 266, 277, 282, 287, 288, 289], "sqrt2": [198, 201], "sqrt3": 201, "sqrt_mod": 102, "sqrt_mod_it": 102, "sqrtdenest": 223, "sqt": 220, "squar": [12, 18, 22, 25, 26, 31, 35, 39, 43, 53, 62, 63, 68, 78, 79, 87, 89, 93, 94, 98, 101, 102, 105, 112, 114, 138, 139, 162, 178, 186, 196, 200, 202, 204, 206, 207, 208, 211, 219, 223, 224, 227, 230, 231, 282], "square_factor": [102, 224], "square_in_unit_circl": 78, "square_iter": 219, "square_matrix": 39, "square_root": 68, "squareddistribut": 231, "squarefre": [102, 206], "squarefree_cor": 102, "squarehandl": 39, "squarepred": 39, "squeez": 211, "sr": 262, "src": [4, 6, 7, 104, 227, 242, 247], "src2": 104, "src3": 104, "src_code": 104, "sre": 204, "srepr": [201, 283], "sring": [202, 208, 209], "ss": [62, 202], "sss": 78, "sstr": [61, 191, 211], "sstrrepr": [90, 191, 211], "st": [63, 89, 176], "stab": 53, "stabil": [11, 53, 58, 60, 66, 112, 140, 235], "stabl": [4, 6, 7, 20, 43, 62, 90, 98, 104, 108, 112, 243, 277], "stack": [44, 79, 93, 143, 200, 206, 211, 240, 246, 284], "stackexchang": [7, 53, 72], "stacklevel": [4, 240, 245, 247], "stackoverflow": [102, 249, 252], "stade": 87, "stage": [18, 42, 61, 102, 218, 288], "stai": [20, 206], "stall": 206, "stand": [11, 61, 62, 143, 199, 201, 202, 208], "standalon": [7, 143], "standard": [3, 7, 10, 11, 12, 18, 20, 22, 26, 27, 29, 31, 43, 62, 66, 68, 70, 85, 87, 89, 90, 91, 92, 96, 98, 102, 103, 104, 115, 153, 157, 186, 192, 196, 198, 201, 202, 204, 211, 214, 219, 223, 224, 227, 230, 231, 233, 244, 250, 253, 260, 265, 277, 280, 288], "standard_cartan": 91, "standard_transform": 104, "standardis": [53, 201], "stanford": 46, "star": [229, 249], "starrett": 227, "start": [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 28, 32, 33, 42, 43, 46, 51, 52, 53, 54, 58, 61, 62, 63, 64, 70, 92, 93, 95, 98, 101, 102, 103, 105, 106, 108, 126, 128, 138, 139, 171, 172, 175, 179, 194, 195, 197, 201, 204, 206, 207, 211, 214, 217, 219, 220, 221, 224, 227, 229, 230, 231, 232, 235, 242, 243, 249, 251, 252, 262, 276, 277, 280, 282], "start_point": 64, "start_view": 211, "starter": 33, "startnumb": 227, "starts_with_un": 206, "stat": [3, 267, 274], "stat317": 231, "state": [11, 16, 18, 29, 53, 60, 62, 70, 102, 105, 112, 114, 120, 121, 122, 125, 128, 130, 144, 148, 152, 153, 155, 156, 157, 159, 160, 161, 165, 168, 170, 171, 172, 173, 175, 176, 200, 207, 211, 220, 221, 223, 231, 246, 273, 284], "state_map": 166, "state_spac": 231, "state_to_oper": 166, "statebas": [166, 171, 174], "statement": [0, 6, 18, 19, 20, 33, 42, 43, 62, 70, 87, 92, 95, 126, 155, 211, 231, 240, 244, 249], "static": [18, 35, 43, 53, 54, 56, 62, 68, 75, 76, 77, 78, 95, 106, 128, 136, 197, 211, 217, 219, 231, 243], "staticmethod": [10, 242], "stationari": [41, 231], "stationary_distribut": 231, "stationary_point": 41, "statist": [46, 63, 70, 231, 242, 282], "statu": 90, "statweb": 46, "std": [20, 211, 231], "stderr": 43, "stdfactkb": 18, "stdin": [12, 245, 247], "stdlib": 242, "stdout": [43, 45, 242], "steep": 229, "steer": [128, 142], "stefanu": 89, "stegun": [6, 70], "stein": [102, 227], "steinborn": 196, "steinhau": 249, "stem": 236, "step": [1, 4, 5, 20, 21, 32, 41, 43, 53, 57, 58, 61, 62, 63, 70, 86, 87, 89, 98, 102, 103, 121, 133, 136, 138, 143, 144, 178, 190, 195, 196, 197, 201, 202, 204, 206, 207, 211, 212, 213, 216, 219, 220, 221, 223, 224, 227, 229, 231, 236, 243, 249, 250, 278], "step_response_numerical_data": 110, "step_response_plot": 110, "stick": 34, "stieltj": [70, 211], "stieltjes_const": 70, "stieltjesgamma": 211, "stiff": 143, "still": [3, 4, 6, 7, 10, 11, 12, 18, 20, 33, 34, 35, 42, 54, 61, 62, 63, 70, 74, 89, 93, 98, 126, 176, 195, 197, 198, 199, 204, 206, 211, 218, 220, 221, 223, 227, 229, 230, 236, 242, 249, 263, 284], "stiller": 205, "stiller96": 205, "stinson": 54, "stirl": [7, 54, 67, 249], "stirling_numbers_of_the_first_kind": 67, "stirling_numbers_of_the_second_kind": 67, "stochast": 10, "stoke": 148, "stokes_paramet": 148, "stokes_vector": 148, "stop": [1, 4, 43, 44, 54, 62, 98, 102, 197, 217, 219, 227, 231], "stopiter": 224, "stopper": 283, "storag": [43, 62, 98, 170, 196, 204], "store": [1, 5, 10, 12, 18, 42, 43, 52, 53, 62, 84, 86, 95, 98, 102, 104, 117, 121, 123, 125, 126, 141, 170, 176, 190, 194, 195, 197, 198, 201, 206, 207, 208, 218, 221, 232, 235, 236, 244, 245, 246, 249, 261, 263, 283], "stori": 181, "stormi": 227, "stqq": 63, "str": [10, 11, 20, 37, 42, 43, 44, 54, 62, 63, 64, 66, 71, 72, 75, 78, 79, 90, 92, 95, 102, 104, 110, 120, 121, 123, 143, 160, 170, 176, 186, 188, 190, 197, 202, 206, 211, 223, 227, 231, 247, 249, 250, 252, 256], "str_expr": 277, "str_printer": [90, 191], "strai": 126, "straight": [78, 84, 110, 130, 194, 227], "straightforward": [7, 20, 53, 63, 98, 221], "strang": 201, "strategi": [44, 62, 89, 204, 205, 218, 221, 223, 228], "strawberryperl": 1, "stream": [43, 63, 212, 223, 249], "strecker": 42, "strength": 201, "stress": 105, "stretch": 246, "strict": [10, 11, 22, 53, 54, 62, 66, 67, 93, 98, 204, 207, 229, 230, 249, 252, 288], "stricter": 104, "strictgreaterthan": [19, 62, 211], "strictlessthan": [62, 211, 252], "strictli": [11, 12, 15, 17, 18, 39, 41, 62, 70, 98, 102, 112, 204, 223, 229, 250], "stride": [43, 236], "strigonometr": 223, "string": [3, 4, 6, 7, 11, 12, 20, 35, 36, 42, 43, 46, 51, 62, 63, 64, 65, 66, 69, 75, 85, 90, 91, 92, 95, 98, 102, 104, 105, 108, 110, 116, 117, 120, 123, 147, 156, 160, 170, 174, 178, 184, 185, 186, 190, 191, 192, 197, 200, 202, 206, 211, 212, 218, 223, 227, 231, 232, 235, 236, 237, 242, 243, 244, 249, 250, 252, 254, 256, 258, 260, 279, 280, 283, 287], "string_of_lett": 176, "stringifi": [90, 191], "stringify_expr": 104, "stringio": 253, "stringpict": 211, "strip": [7, 63, 89, 102, 204, 247, 252], "strip_zero": 202, "strive": 42, "strline": 252, "strong": [53, 58, 59, 60, 102, 103], "strong_gen": [53, 59, 60], "strong_gens_distr": [53, 60], "strong_present": 53, "strong_pseudoprim": 102, "stronger": 284, "strongli": [93, 98, 200, 249], "strongly_connected_compon": [98, 200, 249], "strongly_connected_components_decomposit": 98, "strprinter": [98, 191], "struct": [43, 196], "structur": [7, 10, 11, 15, 18, 20, 40, 42, 43, 50, 53, 54, 60, 62, 87, 89, 92, 93, 98, 105, 106, 108, 125, 174, 176, 197, 198, 201, 204, 206, 207, 208, 223, 227, 229, 230, 231, 235, 236, 244, 246, 249, 250, 280, 288], "structure_theorem_for_finitely_generated_abelian_group": 50, "structureerror": 206, "struggl": [66, 210], "strzebonski": 207, "stub": 62, "student": [89, 220, 224, 231], "student_t": 231, "studentst": 231, "studentt": 231, "studi": [44, 52, 61, 64, 98, 195, 198, 204, 207, 224, 231], "stuff": [197, 242, 244, 252], "sturm": [202, 207], "sturmian": 207, "sty": 211, "style": [1, 8, 42, 62, 90, 170, 191, 197, 211, 230, 287], "stylis": 211, "stzz": 63, "su": 237, "sub": [6, 10, 11, 12, 14, 18, 19, 20, 22, 25, 26, 28, 29, 43, 61, 62, 68, 70, 71, 72, 73, 74, 75, 76, 78, 89, 92, 93, 95, 98, 102, 104, 105, 106, 112, 116, 118, 126, 128, 129, 130, 133, 134, 140, 143, 173, 174, 179, 186, 196, 198, 200, 201, 202, 207, 211, 218, 219, 223, 224, 227, 228, 229, 231, 242, 243, 245, 277, 278, 280], "sub1": [118, 211], "sub2": [118, 211], "sub_dict": [116, 118, 128], "sub_ground": [202, 207], "subalgebra": 91, "subaugmentedassign": 43, "subcategori": [226, 267], "subclass": [10, 11, 18, 20, 37, 38, 43, 62, 69, 73, 75, 89, 92, 145, 151, 160, 164, 165, 166, 171, 173, 174, 180, 197, 198, 200, 201, 202, 206, 207, 211, 231, 242, 243, 244, 247, 250, 256, 260, 283], "subcompon": 211, "subdetermin": 204, "subdiagon": [93, 98], "subdiagram": 42, "subdiagram_from_object": 42, "subdirectori": 1, "subdomain": 204, "subexponenti": 102, "subexpress": [11, 20, 43, 62, 68, 93, 116, 118, 206, 207, 211, 218, 223, 230, 244, 250, 277], "subfactori": [67, 211, 249], "subgraph": 249, "subgroup": [45, 53, 54, 58, 60, 91, 102], "subgroup_search": 53, "subinterv": 89, "subject": [39, 62, 72, 78, 106, 116, 144, 206], "sublist": [41, 58, 63, 89, 173, 278], "submatric": [95, 98, 200, 231], "submatrix": [93, 98, 204, 231], "submit": 6, "submodul": [0, 3, 4, 6, 11, 43, 116, 198, 202, 204, 206], "submodule_from_gen": 206, "submodule_from_matrix": 206, "subnorm": [43, 53], "subobject": 211, "suboptim": 221, "subpackag": [3, 267], "subplot": [105, 197], "subprocess": [62, 211, 242, 243], "subquadrat": 205, "subquoti": 198, "subquotientmodul": 198, "subresult": [62, 202, 205, 207], "subresultants_qq_zz": 207, "subroutin": [43, 53, 172, 204], "subroutinecal": 43, "subs_point": 74, "subscheck": 227, "subscript": [25, 27, 54, 202, 211, 221, 224, 249], "subsect": [53, 263], "subsequ": [6, 12, 29, 62, 68, 186, 202, 204, 207, 246, 249, 260, 263], "subset": [7, 16, 18, 20, 22, 41, 42, 46, 49, 53, 54, 60, 67, 68, 74, 85, 87, 89, 91, 102, 198, 200, 204, 206, 211, 219, 249, 268], "subset_from_bitlist": 57, "subset_indic": 57, "subspac": [98, 206], "subsset": 218, "substack": 228, "substanti": [7, 103], "substep": 89, "substitut": [1, 11, 12, 16, 19, 22, 25, 29, 31, 43, 62, 63, 68, 70, 87, 89, 98, 103, 104, 112, 121, 122, 126, 128, 130, 140, 165, 174, 176, 179, 186, 188, 190, 208, 209, 212, 213, 218, 221, 223, 224, 227, 228, 229, 230, 250, 259, 279, 280], "substitute_dummi": 176, "substitute_indic": 10, "substitution_ciph": 63, "substr": 252, "subsum": 70, "subsystem": [1, 211], "subtl": [20, 220], "subtleti": 87, "subtract": [12, 26, 35, 43, 54, 62, 66, 77, 102, 112, 120, 178, 199, 200, 201, 202, 204, 206, 207, 283, 288], "subtre": [62, 211, 246], "subvector": 70, "subwiki": [50, 53], "subword_index": 52, "succ": [218, 231], "succe": [62, 87, 92, 102, 166, 206, 229], "success": [1, 7, 42, 53, 62, 70, 87, 89, 102, 120, 128, 186, 198, 204, 206, 219, 220, 227, 230, 231, 249, 256, 258], "successfulli": 206, "succinct": 62, "succinctli": 62, "sudo": 1, "suetoniu": 63, "suffer": 6, "suffic": [6, 199, 229], "suffici": [4, 6, 18, 42, 43, 53, 54, 58, 62, 98, 181, 202, 214, 218, 227, 231, 246, 288], "suffix": [207, 244], "suffix_express": 211, "sugar": [204, 205, 236], "suggest": [7, 10, 27, 44, 53, 89, 98, 102, 126, 209, 284], "suit": [3, 4, 7, 18, 20, 26, 27, 42, 197, 207, 240, 242], "suitabl": [89, 95, 104, 196, 199, 201, 204, 206, 211, 221, 224, 227, 230, 232, 281], "suku": 89, "sukumar": 89, "sullivan": 249, "sum": [16, 18, 25, 43, 51, 54, 61, 62, 65, 67, 70, 75, 77, 85, 87, 89, 91, 92, 93, 95, 98, 102, 108, 123, 138, 155, 159, 162, 170, 173, 175, 176, 196, 198, 199, 201, 202, 206, 207, 208, 211, 213, 214, 216, 218, 220, 221, 223, 224, 227, 229, 230, 231, 232, 233, 235, 237, 246, 249, 288], "sum_": [43, 61, 62, 63, 67, 70, 87, 89, 93, 95, 102, 196, 207, 208, 213, 214, 221, 227, 231], "sum_0": 221, "sum_approx1": 43, "sum_approx2": 43, "sum_approx3": 43, "sum_domain": 201, "sum_i": [70, 218], "sum_k": 232, "sum_m": 232, "sum_of_four_squar": 224, "sum_of_pow": 224, "sum_of_squar": 224, "sum_of_three_squar": 224, "sumapprox": 43, "sumith": 0, "summand": [51, 206], "summar": [4, 242, 288], "summari": [129, 242, 267], "summat": [43, 61, 62, 66, 67, 70, 176, 205, 207, 211, 214, 223, 231, 232, 235, 236, 237, 243], "sunni": 231, "sup": [202, 207, 211, 219], "super": [43, 70, 202, 211, 256, 258], "super_set": 57, "superclass": [10, 11, 18, 61, 89, 95, 202], "superdiagon": 93, "superfici": 62, "superflu": 87, "supergroup": 53, "superior": [4, 211], "superposit": [150, 161, 172, 198], "superposition_basi": 161, "superscript": [112, 211], "supersed": [7, 126, 143], "superset": [18, 41, 51, 57, 65, 143, 201, 219, 229], "superset_s": 57, "supplant": 4, "supplement_a_subspac": 206, "supplementari": 0, "suppli": [12, 28, 29, 41, 42, 43, 53, 54, 62, 64, 72, 76, 98, 102, 117, 120, 121, 123, 128, 130, 133, 138, 139, 149, 176, 185, 190, 195, 197, 206, 208, 213, 220, 227, 243, 249, 250, 256, 258, 261], "support": [3, 4, 5, 6, 7, 10, 11, 12, 20, 28, 33, 35, 36, 37, 38, 41, 42, 43, 54, 62, 66, 69, 70, 72, 86, 89, 95, 98, 102, 103, 104, 105, 106, 108, 109, 112, 116, 120, 126, 143, 171, 186, 194, 197, 199, 200, 201, 202, 204, 206, 207, 208, 211, 216, 217, 218, 219, 223, 227, 228, 229, 230, 231, 232, 236, 240, 242, 243, 244, 250, 261, 263, 278, 280, 283, 287], "suppos": [10, 19, 20, 54, 61, 62, 63, 87, 198, 200, 204, 206, 207, 211, 218, 221, 227, 229, 240, 249, 261, 266, 280, 282, 288], "suppress": [62, 104, 240, 247], "supremum": [68, 219], "surd": 223, "sure": [1, 4, 6, 7, 20, 43, 53, 62, 74, 125, 126, 156, 181, 207, 208, 218, 227, 229, 230, 243, 249, 280, 283, 288], "surfac": [4, 68, 70, 76, 87, 106, 120, 145, 149, 176, 197, 223, 256], "surface_color": 197, "surfacebaseseri": 197, "surfaceover2drangeseri": 197, "surject": 198, "surpris": [11, 18, 230], "surround": [7, 62, 79, 149, 219, 252], "survei": 7, "surviv": 34, "susan": 46, "suspect": [62, 102], "sussman": 64, "svg": [1, 90, 191], "sw": 75, "swap": [53, 54, 55, 93, 98, 156, 160, 169, 231, 249], "swap_point": 156, "swapgat": 160, "swig": 243, "swing": 67, "swinnerton": 207, "swinnerton_dyer_poli": 207, "swiss": 207, "switch": [10, 35, 53, 60, 89, 102, 112, 204, 207, 233], "sx": 58, "sy": [33, 43, 64, 126, 143, 211, 242, 253, 262, 280], "sylow": 53, "sylow_subgroup": 53, "sylvest": [102, 204], "sym": [25, 41, 52, 53, 58, 62, 67, 186, 211, 214, 219, 223, 224, 229, 231, 237, 249, 288], "sym2": 237, "sym_expr": 104, "sym_i": 58, "symarrai": 98, "symb": [98, 211], "symb85": 223, "symb_2txt": 211, "symb_nam": 211, "symbol": [0, 3, 6, 7, 10, 11, 14, 16, 21, 22, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 52, 54, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 89, 90, 92, 93, 95, 98, 102, 103, 104, 105, 106, 108, 109, 110, 112, 114, 116, 117, 118, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 141, 143, 145, 148, 149, 150, 151, 153, 155, 156, 158, 160, 162, 164, 165, 168, 171, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 223, 224, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 243, 249, 250, 256, 258, 259, 261, 262, 263, 266, 273, 277, 278, 281, 283, 284, 287, 288, 289], "symbol_nam": 211, "symbol_t": 211, "symbolc": 18, "symbolic_complex": 22, "symbolic_expand": 22, "symbolicnumericalcomput": 205, "symbolicsystem": [119, 136, 273], "symbolnam": 227, "symbologi": 211, "symbols_seq": 224, "symbols_to_declar": 211, "symfunc": [243, 250], "symmetr": [27, 39, 40, 44, 45, 50, 53, 54, 58, 78, 93, 94, 95, 98, 102, 185, 196, 202, 204, 207, 210, 219, 221, 237, 249], "symmetri": [6, 10, 45, 50, 55, 58, 70, 93, 155, 196, 227, 235, 237, 277, 288], "symmetric_differ": 219, "symmetric_group": 50, "symmetric_matrix": 39, "symmetric_poli": [202, 207], "symmetric_residu": 102, "symmetricdiffer": [211, 219, 230], "symmetricgroup": [50, 52, 53, 59, 60], "symmetrichandl": 39, "symmetricpred": 39, "symp": [62, 202], "sympi": [2, 3, 4, 7, 8, 9, 11, 13, 14, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 261, 262, 264, 265, 266, 267, 271, 273, 274, 276, 278, 280, 281, 283, 284, 285, 286, 287, 288, 289], "sympif": [34, 62], "sympifi": [11, 12, 18, 19, 43, 66, 72, 92, 141, 149, 174, 176, 186, 187, 201, 202, 277, 283], "sympify": [72, 78, 105, 108, 117, 123, 147, 150, 188], "sympifyerror": 62, "symplifi": [221, 223], "symposium": [44, 87, 204, 205, 221], "sympy_benchmark": 3, "sympy_cod": 126, "sympy_debug": [2, 89, 252], "sympy_deprecation_warn": [4, 240, 245, 247], "sympy_eqs_to_r": 209, "sympy_express": [43, 243], "sympy_gamma": 89, "sympy_htmldoc": 1, "sympy_integ": 211, "sympy_nam": 277, "sympy_pars": 104, "sympy_use_cach": 62, "sympydeprecationwarn": [4, 10, 240, 242, 245, 247], "sympydoctestfind": 242, "sympydoctestrunn": 242, "sympyexpress": 104, "sympyfi": [187, 188, 190, 259], "sympyifi": 12, "sympyoutputcheck": 242, "sympytestfil": 242, "sympytestresult": 242, "symsac": 205, "symsystem": 125, "symsystem1": 144, "symsystem2": 144, "symsystem3": 144, "synonym": [72, 206], "syntact": 236, "syntax": [4, 6, 7, 10, 11, 12, 20, 29, 36, 38, 54, 62, 89, 104, 126, 143, 173, 197, 201, 210, 211, 223, 229, 233, 252, 278, 280, 282, 287, 289], "syntaxerror": [12, 104], "synthesi": 63, "sys1": 112, "sys2": 112, "sysod": 227, "system": [0, 1, 2, 3, 5, 7, 10, 11, 12, 14, 15, 16, 19, 20, 22, 23, 27, 29, 36, 38, 53, 62, 63, 64, 68, 87, 90, 91, 92, 93, 98, 103, 104, 105, 108, 109, 111, 112, 116, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 135, 136, 137, 138, 139, 140, 141, 143, 154, 155, 170, 173, 174, 176, 179, 183, 186, 190, 191, 192, 194, 195, 196, 198, 199, 201, 202, 203, 204, 205, 206, 209, 210, 211, 219, 220, 226, 230, 231, 242, 243, 256, 258, 259, 262, 264, 266, 271, 273, 280, 282, 284, 288, 289], "system2": 259, "system_default_view": 211, "system_info": 227, "systemat": 210, "syzygy_modul": 198, "sz": 171, "szop": 171, "szupket": 171, "t": [0, 1, 4, 6, 7, 10, 11, 12, 19, 20, 22, 29, 35, 38, 39, 41, 43, 44, 46, 53, 54, 55, 56, 58, 62, 63, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 86, 87, 89, 91, 92, 93, 94, 95, 98, 102, 103, 104, 108, 112, 113, 116, 117, 118, 120, 121, 122, 123, 125, 126, 129, 130, 131, 138, 139, 140, 141, 143, 144, 148, 150, 156, 160, 172, 174, 176, 178, 179, 181, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 214, 218, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 232, 233, 237, 240, 242, 245, 249, 250, 256, 259, 261, 265, 277, 278, 282, 283, 284, 287, 288, 289], "t0": 58, "t1": [58, 78, 79, 102, 117, 123, 224, 231], "t2": [73, 78, 79, 102, 117, 123, 224, 231, 237], "t3": [79, 224], "t4": 224, "t5": 224, "t_": [58, 67], "t_0": [67, 224], "t_1": [53, 67, 224], "t_2": [53, 67, 224], "t_b": 141, "t_c": 58, "t_eval": 29, "t_m": 204, "t_n": [7, 67, 70, 89, 204, 207, 261], "t_p": 141, "t_r": [53, 141, 237], "t_t": 141, "ta": [113, 220], "tab": [1, 10, 12, 58, 143], "tab1": 58, "tabl": [6, 18, 44, 53, 62, 67, 70, 83, 89, 98, 102, 120, 143, 196, 206, 233], "table_of_": 102, "tableau": 10, "tableaux": 237, "tableform": [10, 229, 252], "tackl": [136, 244], "tactic": 231, "tag": [4, 211, 229], "tail": [46, 61, 62, 202, 231], "tail_degre": 202, "tailor": 18, "tait": [120, 186, 256, 258], "take": [3, 4, 5, 7, 10, 11, 12, 16, 18, 19, 20, 24, 25, 26, 27, 29, 38, 41, 43, 44, 47, 52, 53, 57, 61, 62, 63, 64, 68, 70, 74, 75, 85, 89, 91, 92, 93, 98, 102, 103, 104, 105, 108, 112, 116, 120, 121, 123, 125, 126, 128, 140, 141, 143, 145, 159, 162, 165, 166, 170, 172, 173, 174, 175, 176, 178, 181, 184, 185, 186, 187, 188, 191, 194, 195, 197, 198, 199, 200, 201, 202, 204, 207, 208, 211, 214, 217, 218, 219, 220, 221, 223, 224, 227, 229, 230, 231, 233, 236, 242, 243, 245, 246, 249, 250, 256, 258, 259, 277, 278, 280, 282, 283, 284, 288], "taken": [4, 11, 43, 44, 45, 50, 53, 60, 61, 62, 67, 68, 70, 79, 93, 102, 112, 114, 116, 117, 140, 143, 173, 179, 186, 190, 196, 197, 201, 206, 207, 211, 214, 218, 220, 221, 230, 231, 236, 244, 249, 256], "takenouchi": 102, "talk": [7, 13, 32, 63, 198, 206, 260], "tan": [41, 62, 67, 68, 89, 104, 118, 133, 134, 135, 140, 208, 210, 211, 218, 220, 227, 230, 288], "tandem": 243, "tangent": [68, 72, 74, 78, 89, 208, 227], "tangent_lin": 72, "tanh": [62, 66, 68, 89, 208, 211, 223, 288], "taocp": 249, "tap": 1, "tapestri": 198, "target": [4, 6, 11, 41, 42, 43, 45, 62, 102, 118, 156, 160, 161, 180, 220, 223, 226, 229, 230, 240, 243, 244, 247, 288], "target1": 160, "target2": 160, "target_unit": 183, "tarjan": [231, 249], "task": [21, 23, 32, 68, 136, 137, 143, 201, 206, 278, 285], "tau": [12, 43, 87, 89, 98, 206, 211, 227], "tau0": [98, 230, 231], "tau1": 98, "taught": [20, 89], "taus_zero": 98, "tausski": 206, "taxicab": 77, "taxicab_dist": 77, "taxonomi": 53, "taylor": [16, 62, 68, 126, 140, 143, 202, 204, 207, 208, 218, 227], "taylor_term": [62, 68], "tb": [113, 220, 242], "tbanilorngnezl": 63, "tc": [113, 202, 207, 220], "tcc": 244, "tchebychev": 7, "td": [62, 211, 287], "te": 149, "teach": [7, 54, 63, 67, 231], "teacher": 20, "teaching_aid": 231, "team": [0, 4], "tear": 283, "technic": [7, 10, 13, 20, 32, 42, 62, 143, 162, 198, 227, 244, 249, 263, 280, 283], "techniqu": [22, 26, 27, 29, 44, 57, 87, 89, 211, 213, 223, 227, 230, 284], "technolog": 220, "techreport": 63, "tediou": [16, 89], "teeter": 198, "telephon": 70, "tell": [6, 7, 18, 19, 22, 26, 29, 43, 54, 63, 66, 70, 93, 104, 125, 181, 201, 206, 210, 218, 221, 227, 243, 280], "temp": [43, 128], "tempa": 128, "tempb": 128, "tempc": 128, "tempdir": [43, 243], "temper": 192, "temperatur": [178, 192, 265], "tempfork": 128, "tempfram": 128, "templat": [10, 249], "tempor": 150, "temporari": [62, 243], "temporarili": 62, "tempt": [18, 20, 62, 102], "temptat": [4, 220, 288], "ten": [43, 103], "tend": [20, 34, 43, 62, 67, 204, 206, 216, 218, 221, 281, 288], "tendenc": 102, "tenenbaum": 227, "tens": 7, "tensadd": [211, 237], "tensexpr": [10, 113, 237], "tensil": 108, "tension": 96, "tensmul": [211, 237], "tensor": [43, 49, 64, 98, 113, 123, 141, 155, 161, 162, 163, 173, 176, 185, 186, 211, 232, 233, 235, 236, 243, 250, 260, 261, 267, 268, 271, 273], "tensor_can": [58, 237], "tensor_funct": 70, "tensor_gen": 58, "tensor_head": [10, 113, 237], "tensor_inde_typ": 237, "tensor_index_typ": 237, "tensor_indic": [10, 113, 237], "tensor_product": 162, "tensor_product_simp": 175, "tensorcontract": [232, 233], "tensordiagon": [232, 233], "tensorflow": [3, 250], "tensorflow_cod": 3, "tensorhead": [237, 238], "tensori": [237, 238], "tensorindex": [10, 237], "tensorindextyp": [237, 238], "tensormanag": 237, "tensorpowerhilbertspac": 162, "tensorproduct": [64, 173, 175, 232, 233], "tensorproducthilbertspac": 162, "tensorsymmetri": 237, "tensortyp": 237, "tensorvari": 211, "teo": 229, "term": [7, 11, 12, 16, 18, 20, 22, 25, 27, 29, 31, 43, 53, 62, 63, 64, 66, 67, 68, 70, 81, 85, 86, 87, 89, 92, 93, 98, 102, 106, 110, 112, 118, 121, 128, 130, 133, 136, 138, 140, 141, 155, 160, 172, 173, 176, 178, 180, 181, 186, 188, 192, 194, 196, 198, 199, 200, 201, 202, 204, 206, 207, 208, 211, 213, 214, 216, 217, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 235, 236, 249, 256, 259, 263, 268, 278, 280, 282, 283, 288], "term_to_integ": 92, "termin": [1, 53, 62, 68, 90, 102, 191, 211, 218, 242, 287], "terminal_str": 211, "terminal_width": 211, "terminologi": [11, 23, 237], "termnam": 11, "terms_gcd": [62, 202, 207], "termwis": 207, "ternari": [25, 43, 62, 211, 224], "terrab": 227, "terrel": 0, "terri": 249, "terribl": 53, "test": [4, 6, 7, 8, 11, 12, 17, 19, 20, 24, 25, 38, 39, 41, 42, 43, 49, 53, 54, 61, 62, 63, 69, 72, 77, 87, 93, 95, 98, 102, 156, 165, 169, 170, 171, 179, 195, 201, 202, 204, 206, 208, 219, 221, 224, 227, 228, 229, 230, 240, 243, 244, 245, 246, 247, 249, 250, 252, 267, 268, 275, 280, 282, 283], "test2": 171, "test_": [6, 242], "test_arg": 242, "test_bas": [5, 242], "test_derivative_numer": [10, 62], "test_draw": 42, "test_equ": 242, "test_expr": 62, "test_factor": 206, "test_formula": 221, "test_hyperexpand": 221, "test_kwarg": 242, "test_od": 227, "test_pd": 228, "test_pickl": 3, "test_rewrite1": 218, "test_stacklevel": 240, "tester": 242, "testmod": 242, "testrunn": 242, "testutil": [53, 59, 60], "tetrahedr": 55, "tetrahedron": [53, 55], "tex": 211, "texliv": [1, 3, 211], "text": [3, 4, 6, 7, 11, 20, 33, 43, 53, 63, 67, 68, 70, 80, 87, 90, 93, 98, 102, 141, 181, 191, 196, 197, 198, 211, 218, 224, 227, 230, 231, 242], "textbackend": 197, "textfil": 231, "textplot": 197, "textrm": [194, 195, 219], "texttt": [67, 219], "textual": 211, "textwrap": [176, 252], "tf": [112, 250], "tf1": [110, 112], "tf10": 112, "tf11": 112, "tf12": 112, "tf2": 112, "tf3": 112, "tf4": 112, "tf5": 112, "tf6": 112, "tf7": 112, "tf8": 112, "tf9": 112, "tf_1": 112, "tf_10": 112, "tf_2": 112, "tf_3": 112, "tf_4": 112, "tf_5": 112, "tf_6": 112, "tf_7": 112, "tf_8": 112, "tf_9": 112, "tfinal": 126, "tfm": 112, "tfm1": 112, "tfm2": 112, "tfm3": 112, "tfm_1": 112, "tfm_10": 112, "tfm_11": 112, "tfm_12": 112, "tfm_2": 112, "tfm_3": 112, "tfm_4": 112, "tfm_5": 112, "tfm_6": 112, "tfm_7": 112, "tfm_8": 112, "tfm_9": 112, "tfm_a": 112, "tfm_b": 112, "tfm_c": 112, "tfrac": [70, 227, 231], "tgamma": 211, "tgate": 160, "th": [20, 35, 44, 53, 54, 60, 63, 64, 66, 67, 68, 70, 91, 92, 98, 102, 121, 202, 204, 206, 207, 213, 216, 221, 224, 227, 229, 231, 232, 237], "than": [1, 3, 4, 6, 7, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 34, 35, 39, 43, 44, 45, 47, 53, 54, 55, 61, 62, 63, 66, 67, 68, 70, 71, 76, 77, 78, 80, 84, 87, 89, 91, 92, 93, 95, 98, 99, 101, 102, 103, 104, 108, 110, 112, 116, 121, 125, 126, 130, 133, 150, 156, 170, 173, 174, 176, 185, 195, 196, 199, 200, 201, 202, 204, 207, 208, 209, 211, 214, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 238, 243, 244, 246, 249, 250, 252, 253, 277, 278, 280, 281, 282, 283, 284, 286, 288], "the_68_standard_colors_known_to_dvip": 90, "theano": [3, 10, 143, 287], "theano_cod": 10, "theanoprint": 10, "thei": [3, 4, 6, 7, 10, 11, 12, 14, 18, 19, 20, 22, 27, 29, 30, 31, 33, 39, 42, 43, 44, 50, 52, 53, 54, 60, 61, 62, 63, 64, 67, 68, 70, 72, 75, 76, 77, 78, 79, 84, 87, 89, 90, 92, 93, 95, 96, 98, 101, 102, 104, 116, 120, 121, 123, 125, 126, 128, 134, 136, 138, 139, 140, 143, 144, 150, 155, 160, 165, 168, 173, 178, 179, 181, 182, 186, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 217, 218, 220, 221, 223, 224, 227, 228, 229, 230, 231, 232, 233, 237, 240, 242, 244, 246, 249, 250, 252, 256, 263, 265, 278, 280, 281, 282, 283, 284, 288], "them": [1, 3, 4, 5, 6, 7, 10, 11, 12, 15, 16, 18, 19, 20, 22, 25, 26, 27, 29, 31, 34, 37, 39, 42, 43, 51, 53, 54, 61, 62, 63, 64, 66, 67, 70, 73, 78, 80, 82, 84, 85, 87, 91, 92, 95, 98, 101, 102, 103, 116, 121, 123, 126, 128, 130, 131, 136, 138, 140, 141, 143, 149, 153, 169, 170, 176, 178, 181, 184, 186, 192, 194, 195, 198, 199, 201, 202, 204, 206, 207, 208, 210, 211, 212, 218, 219, 220, 221, 223, 224, 227, 229, 230, 232, 233, 242, 244, 246, 249, 259, 277, 278, 280, 282, 283, 288], "theme": 282, "themselv": [3, 7, 10, 20, 39, 42, 54, 58, 60, 62, 89, 102, 136, 137, 201, 202, 206, 217, 231, 237, 246, 249, 252, 288], "theor": 155, "theorem": [22, 31, 50, 63, 70, 72, 78, 89, 93, 98, 102, 115, 116, 128, 176, 185, 194, 198, 201, 204, 218, 221, 224, 230], "theoret": [18, 42, 44, 53, 63, 67, 205, 206, 221, 231, 280], "theori": [15, 20, 44, 45, 51, 52, 53, 54, 60, 62, 63, 67, 70, 91, 99, 121, 126, 140, 142, 155, 173, 176, 186, 190, 200, 204, 205, 206, 210, 224, 246, 256, 274, 282], "theorist": 205, "therebi": 42, "therefor": [3, 4, 6, 20, 22, 26, 44, 53, 58, 62, 66, 70, 78, 91, 102, 112, 120, 192, 195, 196, 197, 201, 204, 207, 211, 227, 230, 231, 232, 237, 256, 258, 260, 261, 263, 265], "thereof": [43, 62, 198, 204, 206], "thesi": [53, 62, 218, 256], "theta": [12, 62, 64, 68, 70, 87, 90, 98, 104, 114, 125, 144, 148, 186, 195, 196, 202, 206, 211, 214, 219, 230, 231, 256, 258, 261, 263, 266], "theta1": [29, 130], "theta2": 29, "theta_1": 29, "theta_2": 29, "theta_dot": 125, "theta_pin": 10, "thetaset": 219, "thi": [0, 1, 3, 4, 5, 6, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 147, 148, 149, 150, 151, 153, 155, 156, 157, 159, 160, 162, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289], "thick": 149, "thieu": 227, "thilina": 0, "thilinaatsympi": 224, "thin": [37, 98, 132, 145], "thing": [3, 4, 6, 7, 10, 11, 12, 13, 18, 19, 20, 22, 24, 32, 39, 43, 52, 53, 54, 62, 64, 74, 90, 91, 92, 93, 98, 103, 116, 123, 126, 140, 143, 160, 176, 181, 194, 195, 208, 210, 218, 219, 220, 223, 227, 230, 235, 245, 247, 249, 277, 278, 280, 282, 283, 284, 287, 288], "thingi": 43, "think": [6, 10, 11, 18, 19, 20, 26, 33, 41, 53, 128, 181, 246, 250, 280, 288], "thinlen": 145, "third": [3, 4, 14, 22, 35, 43, 53, 54, 62, 70, 72, 76, 98, 112, 120, 173, 179, 180, 194, 199, 207, 221, 227, 230, 231, 233, 247, 249, 278, 283], "thoma": [102, 142], "thorough": [134, 140, 224], "those": [3, 6, 10, 11, 12, 14, 18, 19, 22, 26, 30, 31, 34, 39, 42, 43, 44, 45, 53, 54, 60, 61, 62, 63, 66, 75, 76, 87, 89, 92, 98, 101, 102, 116, 120, 121, 128, 134, 137, 149, 173, 185, 188, 191, 194, 195, 197, 201, 202, 204, 206, 207, 209, 210, 211, 217, 219, 223, 227, 228, 229, 230, 231, 237, 240, 242, 246, 249, 256, 259, 280, 282, 288], "though": [6, 11, 12, 18, 19, 20, 22, 28, 29, 30, 31, 34, 44, 62, 63, 64, 74, 78, 87, 89, 93, 98, 102, 116, 121, 128, 138, 140, 171, 180, 185, 186, 194, 195, 199, 201, 202, 207, 208, 220, 221, 223, 227, 228, 229, 230, 242, 263, 278, 283, 288], "thought": [6, 11, 62, 218, 227, 280, 283], "thousand": [66, 102, 277], "thread": 245, "threaded_factori": 245, "three": [4, 11, 12, 14, 16, 18, 20, 29, 30, 35, 39, 43, 53, 54, 55, 58, 62, 63, 67, 70, 72, 76, 77, 78, 87, 91, 92, 105, 106, 120, 125, 129, 132, 133, 134, 149, 171, 173, 178, 186, 190, 194, 195, 196, 197, 198, 199, 202, 204, 207, 211, 221, 223, 224, 229, 230, 231, 242, 256, 258, 263, 266, 280, 283, 288], "threshold": [43, 102], "through": [0, 1, 4, 6, 11, 12, 18, 20, 22, 26, 27, 29, 31, 33, 41, 43, 53, 54, 56, 61, 62, 63, 66, 67, 70, 72, 73, 74, 75, 76, 78, 87, 91, 92, 98, 102, 105, 106, 110, 117, 121, 126, 128, 136, 141, 147, 148, 186, 197, 198, 204, 206, 211, 217, 221, 223, 227, 229, 230, 231, 232, 243, 249, 256, 258, 263, 266, 279, 280, 281, 286], "throughout": [11, 87, 92, 204, 214, 230, 265, 280], "throw": [98, 104, 126, 200, 206, 224, 230], "throwawai": 34, "thrown": [43, 211], "thu": [3, 4, 10, 11, 12, 16, 24, 26, 27, 29, 39, 47, 53, 54, 62, 63, 64, 68, 70, 85, 87, 89, 93, 96, 98, 101, 102, 113, 125, 130, 136, 140, 181, 186, 199, 204, 206, 208, 212, 218, 221, 223, 244, 249, 250, 261, 262, 280, 283, 288, 289], "thue": 224, "thumb": [7, 92, 249], "ti": [51, 54, 62, 102], "ticket": 33, "tid": 237, "tidi": 98, "tie": [62, 249], "tight": 43, "tikz": 42, "tild": [62, 68, 232], "till": [62, 105, 106, 126, 227], "tilt": 148, "tim": [102, 249], "time": [1, 3, 4, 7, 10, 11, 12, 16, 18, 19, 22, 29, 31, 34, 38, 39, 43, 45, 53, 54, 58, 62, 63, 67, 70, 85, 87, 92, 93, 98, 99, 101, 102, 103, 104, 109, 110, 112, 116, 121, 122, 125, 126, 128, 130, 133, 134, 136, 138, 139, 140, 141, 143, 144, 150, 160, 165, 173, 174, 178, 179, 180, 181, 182, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 204, 205, 206, 207, 208, 210, 211, 218, 219, 220, 221, 223, 227, 229, 231, 240, 242, 243, 248, 249, 250, 263, 265, 275, 278, 282, 283, 284], "time_bal": 242, "time_deriv": [186, 188, 192], "time_derivatives_in_the_two_fram": 188, "time_markov_chain": 231, "time_period": 150, "timedepbra": 174, "timedepket": 174, "timedepst": 174, "timeit": [43, 208], "timeout": 242, "timestamp": 10, "timeutil": 255, "timevalue1": 190, "timevalue2": 190, "tina": 143, "tini": [43, 62], "tinyurl": 67, "tion_constraint": 143, "tip": [1, 6, 62, 140, 227, 228, 288], "titl": [0, 6, 7, 29, 197], "titu": 224, "tlmzebyvzgzinb": 63, "tm": [39, 149], "tmp": 43, "tmpfile": 10, "tmz": 39, "tn": 62, "to_alg_num": [202, 206], "to_algebraic_integ": 62, "to_ancestor": 206, "to_anf": 92, "to_anp": 206, "to_axis_angl": 35, "to_cnf": 92, "to_col": 206, "to_ddm": 200, "to_dens": 200, "to_dict": 202, "to_dnf": 92, "to_domain": 204, "to_eul": 35, "to_exact": [202, 207], "to_expr": [84, 85, 86, 112], "to_field": [200, 202, 207], "to_fil": [43, 244], "to_hyp": 84, "to_int_repr": 92, "to_linear": [121, 140], "to_list": [62, 200, 202], "to_matrix": [35, 117, 120, 185, 186, 195, 200, 206, 256, 259, 261], "to_meijerg": 84, "to_nnf": 92, "to_number_field": [62, 206], "to_par": 206, "to_primitive_el": 62, "to_pruf": 56, "to_r": [202, 207], "to_rat": 202, "to_root": 62, "to_rotation_matrix": 35, "to_sequ": 84, "to_si": 64, "to_spars": 200, "to_sympi": [201, 202], "to_sympy_dict": 202, "to_sympy_list": 202, "to_tre": 56, "to_tupl": 202, "todai": [20, 198], "todo": [154, 156, 160, 161, 165, 166, 168, 169, 170, 171, 172, 204, 211, 218, 236], "todod": 93, "todok": [10, 93], "togeth": [11, 16, 43, 53, 62, 66, 91, 98, 102, 136, 162, 173, 181, 195, 198, 202, 204, 206, 207, 210, 211, 223, 227, 229, 231, 242, 243, 249, 282, 288], "toggl": [102, 197], "token": [43, 87, 90, 104], "tol": [43, 62, 202], "told": 1, "toler": [28, 43, 62, 66, 202, 223, 229], "tolist": [93, 232], "tomatrix": 232, "tomfooleri": 242, "tone": 6, "too": [6, 12, 20, 31, 53, 54, 62, 68, 70, 72, 75, 77, 87, 92, 101, 102, 103, 138, 145, 218, 219, 223, 224, 227, 229, 230, 231, 242, 243, 259, 260], "took": [208, 220], "tool": [1, 7, 11, 20, 53, 90, 97, 98, 103, 112, 143, 195, 198, 203, 204, 211, 243, 249, 255, 264, 271], "toolset": 198, "top": [4, 6, 7, 10, 11, 24, 43, 61, 62, 63, 78, 79, 89, 92, 98, 105, 106, 120, 125, 171, 178, 201, 211, 221, 227, 244, 245, 250, 266, 283], "top_fac": 266, "toper": 238, "topic": [13, 21, 32, 43, 136, 141, 193, 194, 195, 196, 198, 200, 201, 206, 230, 273, 280, 285], "topmost": 246, "topolog": [43, 62, 64, 200, 249], "topologi": [87, 219], "topological_sort": [43, 249], "toronto": 102, "torqu": [105, 117, 121, 125, 131, 138, 139, 143], "torque1": 117, "torque_a": 143, "torquess": 117, "torsion": 105, "torsional_mo": 105, "toss": 231, "total": [31, 44, 51, 53, 62, 67, 78, 91, 92, 93, 95, 128, 130, 138, 145, 149, 155, 160, 173, 182, 196, 202, 204, 207, 220, 223, 227, 235, 237, 266], "total_degre": [202, 207, 224], "totient": [63, 102], "totientfunct": 102, "totientrang": 102, "totter": 198, "touch": [78, 128, 220], "tough": 227, "tournier": 205, "toward": [14, 43, 62, 70, 198, 218, 230], "tp": [64, 148, 175, 202, 233], "tp1": 64, "tpu": [3, 103], "tr": [10, 44, 53, 211, 220], "tr0": 220, "tr1": 220, "tr10": 220, "tr10i": 220, "tr11": 220, "tr111": 220, "tr12": 220, "tr12i": 220, "tr13": 220, "tr14": 220, "tr15": 220, "tr16": 220, "tr2": 220, "tr22": 220, "tr2i": 220, "tr3": 220, "tr4": 220, "tr5": 220, "tr6": 220, "tr7": 220, "tr8": 220, "tr9": 220, "trace": [58, 93, 95, 113, 143, 204, 211, 231, 232, 233, 235, 249, 284], "traceback": [10, 12, 15, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 36, 37, 38, 43, 44, 54, 62, 63, 66, 72, 89, 92, 93, 94, 95, 96, 98, 100, 101, 104, 112, 196, 198, 201, 202, 204, 207, 210, 218, 219, 227, 229, 230, 240, 242, 243, 245, 247, 249, 250, 252, 280, 284], "track": [10, 12, 53, 62, 66, 70, 125, 137, 141, 160, 195, 218, 237, 278], "tracker": [41, 219, 230, 284], "tractabl": [27, 230], "tradeoff": 284, "tradition": [63, 70], "trafo": 61, "trager": 89, "trail": [6, 54, 102, 202, 204, 207, 247, 252], "trailpap": 128, "train": 195, "traint": 143, "trait": 202, "trajectori": 136, "tran": 63, "trans_prob": 231, "transact": [89, 205], "transcedent": 39, "transcend": 70, "transcendent": [18, 26, 30, 31, 39, 62, 70, 89, 201, 206, 211, 229, 230, 284, 289], "transcendental_numb": [18, 62], "transcendentalpred": 39, "transfer": [1, 109, 110, 112, 145, 230], "transfer_funct": 112, "transferfunct": [109, 110, 112], "transferfunctionmatrix": [109, 112], "transform": [10, 11, 31, 35, 40, 43, 58, 61, 62, 63, 64, 66, 67, 70, 77, 95, 98, 110, 112, 120, 128, 137, 148, 169, 171, 173, 178, 196, 199, 200, 202, 204, 206, 207, 213, 218, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 233, 236, 244, 250, 256, 263, 282], "transform_vari": 89, "transformation_from_par": 256, "transformation_to_dn": 224, "transformation_to_norm": 224, "transformation_to_par": 256, "transient": 231, "transit": [45, 53, 143, 204, 231], "transition_prob": 231, "transitionmatrixof": 231, "transitivity_degre": 53, "translat": [3, 10, 43, 53, 62, 71, 73, 77, 79, 103, 104, 112, 115, 120, 121, 133, 135, 137, 141, 194, 197, 211, 227, 229, 243, 244, 250, 252, 261], "translation_coordin": 120, "translation_spe": 120, "transliter": 7, "transmiss": [148, 149], "transmissive_filt": 148, "transmit": [148, 149], "transmitt": 148, "transmitted_port": 148, "transmitted_pow": 148, "transpar": [87, 90, 191], "transport": 64, "transpos": [39, 42, 93, 95, 98, 112, 143, 159, 186, 195, 200, 206, 224, 232, 237, 238, 284], "transposit": [50, 53, 54, 63, 93, 95, 233], "transposition_": 54, "transvers": [53, 58, 60, 149, 150], "transversals_onli": 60, "transverse_magnif": 149, "trapezoid": [89, 98, 231], "trapezoidal_distribut": 231, "traub": [204, 205], "travel": [147, 150, 192, 263, 265], "travers": [22, 78, 102, 118, 207, 220, 236, 246, 283], "travi": 227, "treat": [10, 11, 18, 19, 20, 25, 29, 30, 35, 52, 53, 60, 62, 67, 70, 77, 78, 98, 104, 123, 126, 149, 186, 192, 199, 201, 202, 204, 206, 207, 208, 210, 211, 218, 219, 221, 223, 224, 227, 229, 235, 243, 246, 263, 280, 284], "treatment": [16, 87, 207], "tree": [2, 10, 11, 15, 53, 56, 62, 104, 118, 126, 168, 171, 186, 207, 218, 220, 223, 230, 233, 235, 246, 249, 252, 279], "tree_cs": 223, "tree_repr": 56, "tri": [10, 11, 12, 18, 24, 26, 29, 42, 62, 70, 78, 87, 89, 128, 140, 171, 198, 199, 206, 211, 213, 223, 227, 228, 230, 242, 280, 288], "trial": [62, 102, 204, 216, 220, 227, 231], "triangl": [6, 20, 42, 67, 73, 74, 78, 79, 89, 93, 102, 196, 197, 259, 266], "triangular": [27, 39, 45, 93, 94, 98, 200, 206, 229, 231, 266], "triangular_distribut": 231, "triangular_matrix": 39, "triangulardistribut": 231, "triangularhandl": 39, "triangularpred": 39, "tribonacci": [62, 67], "tribonacci_numb": [62, 67], "tribonacciconst": 62, "tribonaccinumb": 67, "trick": [10, 11, 12, 58, 221, 237], "tricki": [1, 62, 87], "trig": [20, 62, 89, 207, 211, 220, 223, 288], "trig5": 220, "trigamma": [6, 70, 211], "trigamma_funct": 70, "trigammafunct": 70, "trigexpand": 87, "trigger": [4, 20, 54, 104, 176, 240], "trigintegr": 89, "trigonometr": [6, 20, 24, 31, 62, 89, 208, 214, 222, 223, 226, 227, 230, 250, 268, 279, 289], "trigonometri": 89, "trigonometric_and_hyperbolic_solut": 207, "trigonometric_funct": 68, "trigonometric_integr": 70, "trigonometricfunct": 20, "trigonometryangl": 68, "trigsimp": [12, 35, 62, 98, 120, 126, 134, 186, 220, 223, 260], "trigsimp_groebn": 223, "trim": [54, 140], "tripl": [6, 25, 79, 98, 195, 196, 198, 202, 206, 252], "trivari": 89, "trivial": [4, 44, 53, 58, 61, 62, 63, 68, 77, 92, 95, 98, 102, 138, 176, 198, 199, 204, 207, 221, 224, 227, 230, 235], "trmorri": 220, "trobmvenbgbalv": 63, "trotter": 54, "troubl": [20, 70], "troubleshoot": [6, 140], "trpower": 220, "true": [2, 3, 6, 10, 11, 12, 14, 15, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 87, 89, 90, 92, 93, 94, 95, 98, 99, 102, 104, 105, 106, 110, 112, 113, 114, 115, 116, 118, 120, 121, 122, 126, 128, 130, 143, 147, 148, 157, 160, 161, 168, 170, 171, 174, 175, 176, 179, 185, 186, 187, 188, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 240, 242, 243, 244, 245, 247, 249, 250, 252, 256, 259, 260, 261, 262, 263, 266, 277, 278, 280, 282, 283, 284, 287, 288, 289], "truli": [62, 70, 181], "trunc": [202, 207, 210], "truncat": [16, 54, 62, 98, 102, 106, 181, 197, 208, 210, 213, 214], "truss": 273, "truth": [19, 36, 37, 38, 39, 40, 62, 93, 223], "truth_maintenance_system": 38, "truth_tabl": 92, "truthvalu": 92, "try": [6, 7, 8, 10, 11, 12, 18, 19, 20, 22, 24, 25, 28, 29, 31, 54, 61, 62, 66, 70, 72, 77, 87, 89, 92, 95, 98, 101, 102, 166, 168, 175, 176, 197, 201, 202, 206, 211, 216, 218, 219, 220, 221, 223, 224, 227, 229, 249, 250, 252, 277, 280, 283, 284, 288], "try_block_diag": 98, "trysolv": 227, "tschirnhausen": 206, "tsolv": 230, "tube": 120, "tube_fram": 120, "tune": [66, 90, 191, 211], "tupl": [11, 20, 25, 28, 29, 30, 35, 37, 38, 41, 42, 43, 44, 53, 54, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 84, 87, 89, 93, 98, 101, 102, 104, 105, 106, 110, 117, 120, 121, 123, 125, 138, 139, 141, 143, 145, 160, 161, 162, 165, 170, 173, 174, 175, 176, 186, 190, 195, 197, 198, 200, 201, 202, 204, 208, 209, 211, 212, 213, 217, 219, 223, 224, 227, 228, 229, 230, 231, 232, 236, 237, 242, 243, 244, 245, 249, 250, 252, 256, 260, 278, 283, 284, 287], "tuple_count": 62, "tuplekind": [62, 93, 219], "turn": [7, 10, 11, 18, 31, 43, 62, 68, 70, 77, 87, 96, 120, 134, 138, 192, 198, 206, 207, 208, 211, 218, 219, 221, 223, 224, 227, 242, 249, 265, 280, 282], "tushar": 205, "tutori": [1, 7, 11, 12, 16, 17, 33, 78, 126, 143, 199, 210, 211, 227, 250, 280, 283, 285, 286, 287, 288, 289], "twave": 150, "tweak": [28, 211, 229], "twice": [4, 12, 43, 62, 64, 76, 102, 186, 188, 194, 207, 211, 246, 247, 256, 258, 278], "twin": 102, "twist": 87, "two": [1, 3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 22, 24, 26, 29, 30, 35, 41, 42, 43, 44, 47, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 87, 89, 91, 92, 93, 95, 98, 102, 103, 105, 106, 108, 109, 112, 113, 116, 117, 120, 121, 129, 134, 136, 137, 138, 140, 141, 148, 149, 150, 155, 156, 160, 162, 165, 166, 171, 172, 173, 174, 175, 176, 178, 180, 181, 185, 186, 187, 188, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 218, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 232, 233, 236, 246, 249, 250, 256, 259, 261, 262, 263, 265, 277, 278, 281, 283, 284, 288], "two_qubit_box": 156, "twofold": 221, "twoform": 64, "twoform_to_matrix": 64, "twoqubitg": 160, "tx": [87, 286], "txt": [1, 211], "ty": 143, "typ": 237, "type": [6, 8, 10, 11, 12, 13, 15, 18, 19, 20, 23, 25, 26, 31, 37, 38, 41, 53, 54, 58, 61, 62, 63, 64, 65, 66, 68, 72, 73, 74, 75, 76, 77, 80, 87, 89, 90, 91, 92, 93, 94, 95, 98, 102, 103, 104, 105, 106, 108, 110, 112, 116, 120, 121, 126, 137, 143, 148, 162, 170, 171, 172, 174, 180, 186, 190, 191, 195, 197, 198, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 219, 220, 221, 223, 224, 226, 227, 229, 235, 236, 237, 240, 242, 243, 244, 249, 250, 252, 260, 263, 266, 278, 280, 282, 283, 284, 287, 288, 289], "type1": 227, "type2": 227, "type3": 227, "type4": 227, "type5": 227, "type6": 227, "type_": 91, "type_a": 91, "type_alias": [43, 211], "type_b": 91, "type_c": 91, "type_d": 91, "type_f": 91, "type_g": 91, "type_map": 211, "type_of_equ": 227, "typea": 91, "typeb": 91, "typec": 91, "typeerror": [10, 12, 19, 20, 26, 29, 36, 37, 38, 54, 62, 72, 77, 92, 94, 96, 100, 112, 150, 218, 219, 243, 250], "typef": 91, "typefunct": [6, 70], "typeg": 91, "typeinfo": 62, "typeset": [61, 211], "typic": [3, 4, 10, 11, 20, 58, 68, 87, 102, 112, 117, 123, 127, 185, 195, 197, 199, 204, 208, 221, 243, 244, 261], "typo": 221, "typograph": 104, "u": [0, 1, 12, 16, 18, 19, 20, 26, 35, 41, 42, 43, 53, 58, 61, 62, 63, 65, 76, 79, 84, 87, 89, 95, 98, 102, 117, 120, 121, 122, 125, 126, 128, 130, 133, 136, 137, 138, 140, 141, 143, 144, 148, 149, 160, 165, 171, 181, 190, 192, 194, 196, 197, 198, 199, 200, 204, 206, 207, 210, 211, 218, 221, 223, 224, 227, 228, 229, 230, 231, 236, 250, 263, 280, 282, 283, 284], "u03b8": 90, "u0_": 120, "u0_c1": 120, "u0_c2": 120, "u0_pc": 120, "u1": [53, 102, 126, 128, 129, 130, 131, 133, 134, 138, 140, 143, 186, 188, 190, 191, 194, 227], "u1_": 120, "u1_c1": 120, "u1_pc": 120, "u1d": [126, 128, 130, 133, 134, 138], "u2": [53, 101, 102, 126, 128, 129, 130, 131, 133, 134, 138, 143, 186, 190, 194, 227], "u2_": 120, "u2_pc": 120, "u2d": [126, 128, 130, 133, 134, 138], "u3": [126, 128, 129, 131, 133, 134, 138, 143, 186, 190, 194], "u3d": [128, 133, 134], "u4": [128, 134, 138, 143], "u4d": 128, "u5": [128, 134], "u5d": 128, "u6": [128, 134], "u6d": 128, "u_": [10, 98, 120], "u_0": 204, "u_1": [129, 130, 131, 194, 206, 227], "u_2": [129, 130, 131, 194, 206, 227], "u_3": [129, 131, 194], "u_aug": 98, "u_auxilia": 143, "u_auxiliari": [121, 134, 138, 143], "u_d": [122, 143], "u_dep": 138, "u_depend": [121, 128, 129, 130, 138, 143], "u_fram": 120, "u_func": 89, "u_i": [122, 140, 194, 204], "u_ind": [121, 122, 126, 128, 129, 130, 133, 134, 138, 140, 143], "u_j": 206, "u_j1": 120, "u_n": [70, 89, 204, 206, 207], "u_op": [122, 130], "u_p1": 120, "u_p2": 120, "u_pc": 120, "u_var": 89, "u_x": 194, "ua": 199, "ub": 246, "ubuntu": 211, "ubv": 98, "ucdavi": 89, "uchicago": 231, "uci": 102, "uconn": [53, 231], "ud": [121, 138], "ud_op": [122, 130], "udivisor": 102, "udivisor_count": 102, "udivisor_sigma": 102, "udl": 95, "udldecomposit": 95, "udot": [121, 128], "ueber": 206, "ueqdueodoctcwq": 63, "uexpr": 283, "uf": 204, "ufunc": [43, 103, 243, 250], "ufuncifi": [3, 43, 243], "ufuncifycodewrapp": 243, "ugat": 160, "ugli": 211, "ui": [89, 102, 228], "uiki": 63, "uint16": 43, "uint32": 43, "uint64": 43, "uint8": 43, "uj": 231, "ujcont": 231, "ukrain": 205, "ultim": [20, 68, 181], "un": [220, 221], "unabl": [43, 75, 79, 104, 229, 256, 277, 278], "unaffect": [62, 230], "unambigu": [14, 211, 227, 252], "unansw": [116, 185], "unappropri": 64, "unavoid": 181, "unbound": [62, 236], "unbound_theta": 197, "unbranch": [70, 87], "unbreak": 63, "uncertainti": [66, 181], "unchang": [4, 10, 11, 20, 53, 54, 62, 89, 98, 112, 180, 207, 211, 217, 220, 223, 230, 277], "unclear": [10, 18, 116], "uncondition": 4, "uncontract": 238, "uncount": 230, "uncoupl": [155, 173], "undecid": [18, 20, 26, 98, 201, 230, 284], "undecor": 62, "undefin": [11, 20, 26, 29, 37, 38, 41, 62, 68, 69, 70, 89, 95, 104, 117, 195, 206, 217, 218, 221, 250, 278, 289], "undefinedfunct": [62, 188, 211, 243, 250], "undefinedkind": [62, 93, 219], "undefinedpred": [37, 38], "under": [1, 3, 4, 6, 11, 12, 18, 19, 37, 38, 40, 41, 43, 44, 52, 53, 58, 60, 70, 80, 87, 89, 91, 92, 98, 102, 104, 105, 106, 145, 171, 196, 198, 199, 206, 207, 211, 218, 219, 221, 224, 227, 229, 230, 231, 237, 240, 282, 288], "underbrac": [181, 194], "underdetermin": [98, 229, 230], "underevalu": 284, "undergo": 149, "undergon": [195, 230], "underli": [11, 43, 54, 60, 62, 91, 98, 110, 126, 171, 184, 229, 230, 231], "underlin": [6, 7], "underscor": [4, 6, 10, 62, 98, 227, 237, 245], "understand": [6, 12, 18, 19, 20, 31, 62, 63, 87, 126, 136, 138, 139, 143, 181, 194, 197, 200, 201, 206, 211, 221, 224, 243, 250, 279, 280, 287, 288], "understood": [54, 102, 181, 198, 202, 207], "undertak": 288, "undertermin": 207, "undertest": 284, "undesir": [62, 116, 126, 140, 199, 202, 221], "undetermin": [14, 62, 98, 207, 213, 227, 229], "undetermined_coeffici": 227, "undirect": [91, 249], "undo": [221, 288], "undon": 288, "unequ": [11, 12, 14, 62, 105, 211], "unevalu": [10, 11, 18, 19, 20, 37, 38, 41, 54, 61, 62, 68, 70, 79, 89, 102, 112, 153, 157, 164, 165, 176, 207, 210, 218, 219, 223, 227, 229, 230, 231, 232, 278, 282, 283, 289], "unevaluat": 227, "unevaluatedexpr": [11, 62, 211, 283], "unexpand": [62, 201, 210, 220, 243], "unexpect": [62, 242], "unexplain": 42, "unfair": 231, "unflatten": 249, "unfortun": [64, 66, 103, 210, 224], "unhash": 249, "unhind": 227, "uni": [42, 89, 249], "unicod": [70, 90, 98, 191, 211, 242, 282], "unifi": [62, 144, 200, 202, 204, 206, 207, 219], "unificationfail": [204, 206], "uniform": [73, 197, 229, 231], "uniform_distribution_": 231, "uniform_sum_distribut": 231, "uniformdistribut": 231, "uniformli": [10, 16, 53, 78, 79, 105, 110, 197, 245], "uniformsum": 231, "uniformsumdistribut": 231, "unimod": 231, "unimport": 7, "unintegr": 29, "uninterest": 204, "union": [25, 34, 39, 41, 43, 51, 53, 60, 92, 198, 206, 211, 217, 218, 219, 226, 230, 249], "union_": 219, "union_find": 53, "uniq": 249, "uniqu": [4, 10, 11, 41, 42, 44, 53, 56, 58, 62, 63, 64, 67, 70, 77, 80, 85, 89, 91, 92, 98, 102, 120, 165, 174, 186, 195, 198, 199, 201, 204, 206, 207, 212, 216, 223, 224, 227, 229, 230, 231, 235, 244, 249, 252, 260, 265, 280, 283], "uniquenss": 63, "unit": [12, 20, 35, 39, 42, 62, 63, 67, 75, 76, 77, 89, 98, 102, 105, 110, 112, 114, 115, 120, 126, 141, 143, 152, 177, 178, 179, 183, 185, 186, 192, 195, 197, 199, 202, 204, 206, 207, 209, 211, 219, 221, 224, 230, 232, 256, 258, 260, 265, 266, 273], "unit_cub": 89, "unit_disk": 219, "unit_system": 183, "unit_triangular": 39, "unitari": [39, 89, 102, 160, 165, 196], "unitary_divisor": 102, "unitary_matrix": 39, "unitarydivisor": 102, "unitarydivisorfunct": 102, "unitaryhandl": 39, "unitaryoper": 165, "unitarypred": 39, "uniti": [20, 68, 70, 87, 171, 206], "unitless": 180, "unitsystem": [180, 184], "unittriangularhandl": 39, "unittriangularpred": 39, "unitvec": 143, "univari": [14, 22, 31, 41, 61, 62, 68, 85, 89, 198, 199, 201, 202, 205, 206, 207, 208, 213, 224, 226, 229, 231], "univariatepolynomialerror": 204, "univers": [4, 11, 43, 196, 205, 219, 224, 229, 230], "universal_set": 219, "universalset": [92, 219], "universitat": 256, "unix": [2, 242, 243], "unknow": 18, "unknown": [10, 11, 15, 18, 19, 20, 27, 29, 30, 35, 62, 63, 106, 161, 209, 226, 227, 228, 229, 230, 249, 289], "unless": [3, 6, 11, 18, 20, 36, 38, 41, 43, 53, 61, 62, 63, 67, 70, 77, 78, 87, 98, 101, 149, 194, 195, 199, 201, 206, 207, 211, 216, 219, 220, 227, 229, 242, 246, 249, 250, 252, 256, 265, 278, 284, 288], "unlik": [3, 6, 11, 12, 18, 19, 22, 29, 40, 63, 89, 98, 102, 104, 126, 194, 204, 211, 224, 227, 230, 246, 247, 280, 282, 283, 284, 287], "unm": 210, "unmodifi": 223, "unmov": 54, "unnam": 244, "unnecessari": [4, 6, 7, 39, 43, 207, 210, 231, 242, 281], "unnecessarili": 288, "unnecessary_permut": 89, "unneed": 11, "unnorm": [68, 70], "unord": [10, 12, 62, 102, 202, 230, 249, 250], "unpack": [10, 62, 93, 98, 249, 250], "unpolar": 148, "unpredict": 246, "unprejud": 62, "unrad": [223, 229], "unrank": [46, 51, 53, 54, 56], "unrank_binari": 57, "unrank_grai": 57, "unrank_lex": 54, "unrank_nonlex": 54, "unrank_trotterjohnson": 54, "unread": [207, 247], "unrecogn": 98, "unrel": [10, 27, 62, 69, 199, 280], "unreli": 201, "unresolv": 18, "unrestrict": [7, 51, 249], "unrol": 236, "unrot": 78, "unsanit": [62, 250, 277], "unsat": 92, "unsatisfi": 92, "unset": [211, 223], "unsign": [43, 67, 223], "unsignedinttyp": 43, "unsimplifi": [12, 220], "unsolv": [207, 230], "unsolvablefactorerror": [22, 207, 229], "unsort": [62, 116, 185], "unspecifi": [41, 62, 77, 278], "unsplitt": 104, "unstabl": 108, "unsuccess": [53, 60], "unsuit": 196, "unsupport": [10, 12, 15, 112, 206, 211], "unsur": [4, 6], "unsurmount": 244, "until": [4, 16, 18, 22, 24, 25, 26, 27, 28, 29, 30, 34, 54, 56, 62, 63, 72, 89, 98, 102, 140, 195, 204, 207, 220, 227, 280], "untouch": 62, "untyp": 43, "unusu": [6, 18, 128, 242], "unwant": [62, 229, 249], "unwelcom": 7, "unwieldi": 14, "up": [1, 3, 4, 10, 11, 16, 18, 19, 20, 29, 33, 38, 41, 43, 45, 53, 54, 56, 62, 63, 64, 66, 67, 68, 70, 71, 78, 79, 83, 87, 89, 90, 92, 93, 98, 102, 103, 105, 114, 116, 123, 125, 128, 129, 133, 135, 140, 141, 143, 144, 156, 171, 173, 190, 196, 197, 198, 201, 202, 206, 208, 211, 212, 213, 218, 220, 221, 223, 224, 227, 228, 229, 230, 243, 244, 245, 246, 247, 250, 279, 280, 283, 284, 286], "upcom": 4, "updat": [4, 10, 12, 29, 33, 62, 130, 156, 166, 169, 170, 172, 196, 200, 204, 207, 211, 224, 237, 247], "upgrad": [4, 34], "upload": [7, 102], "upon": [11, 18, 43, 62, 102, 125, 128, 138, 139, 140, 143, 170, 176, 192, 194, 195, 219, 227, 236, 243, 263, 288], "upper": [6, 39, 61, 63, 66, 70, 71, 78, 79, 93, 94, 95, 98, 101, 102, 110, 120, 169, 176, 196, 200, 202, 204, 206, 207, 211, 221, 229, 236, 256], "upper_bob": 120, "upper_bound": [71, 72, 75, 78], "upper_half_plan": 219, "upper_half_unit_disk": 219, "upper_hessenberg_decomposit": 98, "upper_incomplete_gamma_funct": 70, "upper_limit": [110, 278], "upper_polygon": 78, "upper_seg": 78, "upper_triangular": [39, 93], "upper_triangular_solv": [94, 98], "uppercas": [35, 63, 221], "uppergamma": [6, 67, 70, 211, 231], "uppertriangularhandl": 39, "uppertriangularmatrix": 39, "uppertriangularpred": 39, "upright": 128, "upsilon": [12, 211], "upstream": 5, "upto": [213, 218, 227], "upward": [105, 206], "ur": 224, "url": [0, 63, 247], "urul": 89, "us": [0, 1, 2, 4, 5, 6, 8, 11, 12, 14, 15, 17, 18, 19, 20, 23, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 148, 149, 151, 153, 155, 156, 157, 160, 162, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 185, 186, 187, 188, 190, 191, 192, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 256, 259, 260, 262, 263, 265, 266, 268, 273, 274, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289], "usa": [61, 205], "usabl": [4, 29, 201, 202, 211, 230, 282], "usag": [6, 7, 11, 12, 18, 19, 20, 34, 37, 64, 68, 89, 173, 192, 197, 198, 204, 211, 219, 221, 224, 227, 228, 232, 246, 250, 251, 263, 264, 271, 283], "use_add": 245, "use_cach": 207, "use_ecm": 102, "use_imp": 250, "use_interval_math": 197, "use_latex": [90, 191, 287], "use_model": 92, "use_pm1": [62, 102], "use_renam": 43, "use_rho": [62, 102], "use_symengin": 3, "use_tri": [62, 102], "use_unicod": [20, 27, 41, 42, 43, 66, 70, 89, 90, 98, 106, 112, 148, 191, 196, 198, 199, 210, 211, 212, 230, 231, 278, 282, 284, 287, 288, 289], "use_unicode_sqrt_char": 211, "usecas": 10, "usefulli": 202, "useless": [178, 202, 204], "usepackag": 211, "user": [0, 1, 3, 4, 5, 6, 7, 10, 11, 15, 17, 18, 20, 42, 43, 44, 53, 54, 61, 62, 63, 64, 70, 74, 87, 91, 95, 98, 104, 105, 106, 110, 112, 116, 126, 136, 139, 141, 144, 164, 165, 174, 180, 181, 185, 186, 190, 194, 198, 201, 204, 206, 208, 209, 210, 211, 212, 220, 223, 229, 230, 231, 240, 243, 244, 246, 247, 250, 256, 260, 261, 266, 273, 277, 280, 281, 283, 284, 285], "user_def_func": 211, "user_funct": [43, 211], "user_guid": 250, "usernam": 5, "userwarn": [186, 240, 247, 284], "ussr": 205, "usual": [3, 10, 11, 12, 16, 18, 22, 42, 44, 53, 61, 62, 63, 80, 87, 89, 98, 136, 162, 174, 180, 181, 192, 194, 195, 198, 199, 201, 202, 204, 210, 211, 212, 218, 221, 227, 230, 231, 232, 236, 237, 244, 246, 250, 256, 265, 277, 280, 283, 287, 288], "utf": 211, "util": [3, 4, 5, 6, 7, 24, 26, 41, 49, 51, 53, 54, 67, 68, 73, 74, 75, 78, 92, 93, 102, 103, 146, 180, 183, 200, 204, 208, 211, 223, 224, 240, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 268, 273, 274], "utilis": 42, "utm": 102, "uv": [133, 134, 176], "uvar": 89, "uwa": 67, "uwaterloo": 63, "ux": 228, "uxi": 228, "uxt": 228, "v": [0, 1, 5, 14, 22, 26, 31, 35, 43, 52, 58, 61, 62, 63, 64, 65, 66, 70, 76, 87, 91, 93, 98, 102, 106, 117, 118, 120, 123, 128, 140, 141, 143, 144, 148, 149, 161, 176, 181, 186, 188, 190, 192, 194, 195, 197, 204, 205, 206, 207, 211, 221, 223, 224, 227, 229, 231, 242, 249, 256, 259, 260, 261, 262, 263, 265], "v1": [64, 75, 98, 123, 143, 186, 187, 190, 231, 250, 256, 259, 260, 261, 262], "v10": 43, "v18": 43, "v1pt": 143, "v1pt_theori": [143, 190, 194], "v2": [64, 75, 98, 123, 186, 187, 190, 250, 256, 259, 260, 261, 262], "v2pt": [126, 143], "v2pt_theori": [126, 128, 133, 134, 135, 140, 141, 143, 144, 190, 194], "v3": [98, 186, 190, 262], "v4b3": 63, "v5_2": 62, "v6": 43, "v8": 231, "v_0": 229, "v_1": [64, 206, 229], "v_2": [64, 206], "v_a": 256, "v_arrai": 52, "v_aug": 98, "v_b": 256, "v_field": 64, "v_i": [102, 206, 229], "v_m": 229, "v_n": 206, "v_o_n": [126, 143], "v_p_n": 126, "v_r_n": 126, "va": 207, "vacuou": 93, "vajnovszki": 249, "val": [43, 62, 74, 202, 206, 250], "val_dict": 128, "val_inf": 227, "valenc": 238, "valid": [3, 6, 7, 10, 18, 19, 20, 25, 29, 36, 38, 40, 41, 42, 43, 55, 61, 62, 67, 68, 78, 98, 102, 118, 120, 121, 126, 128, 141, 145, 149, 168, 173, 180, 183, 186, 191, 195, 201, 204, 207, 210, 211, 219, 223, 224, 227, 229, 230, 231, 250, 284, 288], "validrelationoper": 62, "valu": [3, 4, 6, 7, 10, 11, 12, 16, 18, 20, 22, 25, 26, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 53, 54, 58, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 87, 89, 90, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 112, 114, 117, 120, 121, 122, 123, 125, 126, 128, 140, 143, 145, 149, 152, 155, 160, 162, 165, 168, 170, 171, 172, 173, 176, 177, 179, 181, 186, 187, 190, 192, 194, 195, 196, 197, 199, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 217, 218, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 242, 244, 245, 249, 250, 252, 259, 261, 263, 266, 278, 280, 283], "valuat": 227, "value1": 197, "value2": 197, "value_const": 43, "valueerror": [15, 18, 28, 29, 36, 38, 41, 43, 44, 54, 62, 63, 71, 72, 75, 77, 78, 89, 93, 95, 98, 101, 102, 105, 110, 112, 150, 190, 192, 196, 198, 200, 204, 206, 219, 227, 229, 230, 249, 252, 263], "van": [98, 102, 205], "vanilla": 18, "vanish": [98, 176, 204, 207, 210, 227, 256], "vanston": 102, "var": [12, 25, 41, 43, 61, 62, 66, 67, 85, 89, 92, 98, 112, 186, 197, 206, 210, 211, 223, 224, 250, 289], "var_in_dcm": 186, "var_start_end": 197, "var_start_end_i": 197, "var_start_end_u": 197, "var_start_end_v": 197, "var_start_end_x": 197, "var_sub1__sup_sub2": 211, "var_t": 224, "varbosonicbasi": 176, "varepsilon": 227, "vari": [16, 41, 43, 62, 76, 78, 105, 110, 116, 121, 141, 174, 195, 218, 229, 249, 263], "variabl": [2, 3, 6, 7, 10, 11, 14, 16, 19, 20, 22, 23, 25, 26, 28, 30, 34, 35, 36, 38, 39, 41, 43, 44, 57, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 79, 81, 87, 89, 90, 92, 93, 98, 104, 105, 106, 108, 110, 112, 125, 126, 133, 135, 143, 144, 150, 165, 170, 174, 176, 179, 185, 186, 188, 192, 199, 201, 202, 204, 206, 207, 208, 211, 212, 217, 218, 223, 224, 226, 227, 228, 229, 230, 238, 242, 244, 245, 246, 250, 256, 259, 260, 262, 263, 265, 278, 280, 282, 284, 289], "variable_map": 186, "variable_nam": [256, 263], "varianc": 231, "variancematrix": 231, "variant": [204, 227, 230], "variat": [54, 62, 204, 218, 227], "variation_of_paramet": 227, "variationofparamet": 227, "varieti": [31, 43, 44, 54, 62, 103, 106, 141, 198, 205, 207, 231, 249], "varii": 52, "varion": 20, "variou": [3, 6, 7, 11, 16, 20, 22, 25, 41, 43, 45, 46, 53, 61, 62, 67, 82, 87, 89, 92, 98, 123, 155, 159, 160, 171, 173, 185, 198, 199, 202, 203, 204, 206, 212, 218, 221, 224, 227, 228, 230, 244, 288], "varlist": 98, "varnoth": 219, "varphi": [66, 70, 206, 211, 227], "varshalovich": [155, 173], "vast": [3, 31, 89, 203], "vastli": 195, "vat": 0, "vc": 62, "vdiff": 62, "vdot": [93, 95, 98, 181], "ve": [20, 128], "vec": [29, 93, 98, 120, 143, 186, 196, 204, 262, 263, 265], "vec1": 188, "vec2": 188, "vech": 93, "vect": [187, 256, 259], "vectfield": [187, 192, 259, 263], "vector": [6, 10, 16, 35, 39, 43, 46, 53, 54, 62, 64, 70, 75, 76, 77, 84, 85, 91, 93, 98, 103, 105, 108, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 130, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 148, 149, 162, 171, 173, 178, 181, 186, 188, 190, 191, 198, 206, 211, 221, 227, 229, 231, 236, 237, 242, 243, 258, 262, 267, 271, 273, 284], "vector_coplanar": 35, "vector_field": [64, 263], "vector_integr": [259, 266], "vector_nam": 256, "vector_onli": 35, "vector_part": 35, "vectoradd": 260, "vectorfield": 266, "vectori": [190, 192, 260, 265], "vectormul": 260, "vectors_in_basi": 64, "vectorzero": 260, "vee": [87, 92], "vega": 53, "vehicl": 3, "vel": [120, 126, 128, 130, 134, 137, 143, 190, 194, 263], "vel_p": 140, "vel_vec": 190, "veloc": [3, 116, 117, 120, 121, 123, 128, 129, 130, 133, 134, 135, 137, 140, 141, 143, 150, 178, 180, 181, 185, 186, 190, 192, 195, 263, 265], "velocity_con": 143, "velocity_constraint": [121, 128, 129, 130, 138, 143], "venu": 179, "venus_a": 179, "venv": 1, "verbatim": [7, 211], "verbos": [43, 62, 93, 102, 211, 242, 243, 287], "veri": [2, 3, 4, 6, 10, 11, 12, 14, 15, 18, 20, 22, 43, 58, 62, 63, 66, 67, 72, 74, 80, 84, 87, 89, 92, 98, 102, 112, 116, 126, 130, 143, 148, 181, 194, 195, 198, 201, 204, 206, 207, 208, 210, 211, 212, 218, 219, 220, 221, 223, 224, 227, 229, 230, 231, 242, 243, 244, 250, 277, 280, 283, 288], "verif": [41, 200, 229], "verifi": [18, 22, 27, 29, 33, 41, 53, 59, 63, 64, 126, 198, 204, 210, 227, 229, 230, 232, 233, 288], "verify_numer": [10, 62], "verion": 62, "verlag": [89, 205], "vers": 20, "versa": [63, 89, 102, 105, 166, 186, 198, 202, 260, 261, 280], "versatil": 87, "version": [1, 3, 4, 5, 6, 7, 18, 19, 20, 31, 32, 33, 36, 42, 43, 53, 54, 60, 62, 63, 67, 68, 70, 89, 92, 94, 96, 98, 100, 102, 115, 117, 120, 126, 160, 174, 178, 186, 196, 197, 198, 201, 202, 204, 206, 207, 211, 214, 223, 229, 231, 241, 242, 244, 245, 246, 247, 249, 250, 254, 256, 262, 280, 283, 284], "versor": 35, "vert": [101, 192, 195, 265], "vertex": [46, 56, 73, 78, 89, 200], "vertic": [42, 46, 55, 56, 72, 73, 75, 77, 78, 79, 89, 91, 93, 98, 106, 125, 131, 148, 156, 196, 197, 200, 206, 211, 219, 249, 266], "vertical_direct": 42, "veryuniqu": 42, "vf": 211, "vfield": [202, 262], "vfree_group": 44, "vg": 204, "vi": 62, "via": [1, 3, 11, 16, 20, 27, 31, 33, 36, 37, 38, 53, 54, 62, 67, 70, 87, 89, 92, 98, 102, 103, 104, 105, 186, 196, 198, 202, 204, 206, 207, 210, 211, 230, 240, 243, 244, 256, 265, 283], "viabl": [1, 63], "vice": [63, 89, 102, 105, 166, 186, 198, 202, 260, 261, 280], "vicki": 70, "video": 286, "viet": 207, "view": [3, 6, 8, 11, 31, 43, 44, 45, 62, 98, 105, 178, 181, 195, 197, 204, 211, 227, 230, 244, 246, 249], "viewcod": 6, "viewcont": 256, "viewdoc": [205, 220], "vieweg": 205, "viewer": [3, 7, 42, 211, 245], "vig": 0, "vigener": 63, "vigenere_ciph": 63, "vigkla": 207, "viktor": 228, "vincent": [207, 249], "violat": [12, 126, 196, 208, 223], "virtu": [141, 143], "virtual": [1, 4, 8, 33, 62, 78, 195, 281], "visibl": [87, 197], "visit": [33, 46, 53, 62, 67, 285], "visitor": 246, "visual": [4, 62, 102, 106, 112, 210, 223], "vital": 221, "vlahovski": 220, "vlatex": [124, 185, 186, 191, 195], "vline": 211, "vlist": 98, "vo": 227, "vobj": 211, "void": 244, "vol": [46, 54, 63, 67, 70, 87, 98, 113, 206, 207, 221, 246, 249], "volatil": 43, "volum": [0, 6, 43, 61, 70, 87, 89, 196, 205, 221, 224, 227, 246, 256], "volume_result": 43, "von": [205, 231], "von_mises_distribut": 231, "vonmis": 231, "vonmisesdistribut": 231, "vpprint": [124, 185, 191, 195], "vprint": [124, 185, 190, 191, 195], "vr": 224, "vradiu": 72, "vring": 202, "vsin": 62, "vslobodi": 98, "vsort": 62, "vsort0": 62, "vstack": [93, 200], "vt": 63, "w": [10, 12, 31, 35, 43, 46, 52, 54, 61, 62, 63, 64, 65, 68, 70, 87, 89, 92, 98, 99, 120, 123, 134, 141, 142, 145, 150, 161, 165, 174, 190, 192, 193, 196, 197, 199, 200, 204, 205, 206, 207, 208, 212, 218, 219, 221, 223, 224, 227, 228, 230, 231, 242, 250, 252, 263, 289], "w1": [150, 223], "w2": [61, 150], "w2e": 61, "w3": [150, 211], "w3j": 155, "w_": [93, 206], "w_0": [145, 224], "w_1": [194, 206], "w_2": [194, 206], "w_3": 194, "w_a_n": 126, "w_b_n": [126, 143], "w_frame": 120, "w_i": [89, 145, 207, 227], "w_j": 206, "w_k": 68, "w_o": 145, "w_r": 206, "w_r_n_qd": [133, 134], "w_x": 194, "w_y": 194, "w_z": 194, "wa": [3, 4, 10, 12, 14, 18, 20, 29, 45, 51, 53, 54, 56, 62, 63, 64, 70, 75, 98, 102, 104, 116, 117, 126, 128, 130, 140, 141, 171, 181, 194, 195, 196, 198, 204, 206, 207, 208, 210, 211, 220, 221, 223, 227, 229, 231, 240, 242, 245, 247, 249, 250, 278, 280, 282, 283, 286], "wagstaff": 102, "wai": [3, 4, 5, 6, 7, 10, 11, 12, 15, 16, 17, 18, 19, 20, 22, 24, 26, 29, 34, 42, 44, 45, 46, 51, 53, 54, 55, 58, 62, 64, 67, 70, 78, 82, 86, 87, 89, 91, 95, 98, 101, 102, 104, 105, 108, 116, 121, 123, 125, 126, 130, 132, 133, 136, 140, 156, 170, 173, 174, 179, 181, 184, 185, 186, 188, 190, 192, 194, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 210, 211, 218, 221, 223, 224, 227, 228, 230, 232, 233, 236, 237, 240, 244, 246, 249, 250, 253, 256, 260, 261, 262, 263, 265, 277, 278, 280, 281, 282, 283, 288, 289], "waist": 145, "waist2rayleigh": 145, "waist_approximation_limit": 145, "waist_in": 145, "waist_out": 145, "wait": 195, "wald": 231, "walk": [11, 43, 46, 62, 168, 171, 221], "walker": 227, "wall": [120, 131], "walli": 61, "walter": 142, "wang": [204, 205, 249], "wang78": [204, 205], "wang81": 205, "want": [1, 3, 4, 5, 6, 10, 11, 12, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 39, 41, 43, 44, 45, 46, 54, 62, 63, 69, 74, 76, 78, 81, 87, 89, 93, 95, 98, 99, 102, 103, 110, 112, 115, 122, 126, 143, 159, 169, 170, 173, 176, 179, 181, 188, 190, 194, 195, 197, 199, 200, 201, 204, 206, 207, 208, 210, 211, 212, 218, 219, 221, 223, 224, 227, 228, 229, 230, 231, 232, 237, 240, 242, 244, 246, 249, 250, 261, 263, 266, 277, 278, 280, 282, 283, 284, 285, 287, 288], "war": 63, "warn": [4, 6, 12, 20, 62, 63, 77, 104, 186, 195, 199, 211, 227, 229, 240, 242, 244, 248, 249, 275, 284], "warningcl": [240, 247], "warns_deprecated_sympi": [4, 240, 245, 247], "washington": 102, "wast": [62, 99, 200], "watch": 54, "watson": [44, 223], "wave": [114, 146, 147, 148, 214, 273], "wavefunct": [152, 165, 174, 177, 273], "wavelen": 145, "wavelength": [145, 150], "wavenumb": 150, "we": [0, 3, 4, 5, 6, 7, 10, 12, 16, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 70, 75, 80, 85, 86, 87, 89, 90, 91, 92, 93, 98, 99, 101, 102, 112, 115, 116, 117, 118, 120, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 148, 151, 159, 162, 165, 166, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 181, 185, 186, 188, 190, 192, 194, 195, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 210, 211, 218, 219, 221, 223, 224, 226, 227, 228, 229, 231, 233, 235, 237, 242, 243, 244, 246, 247, 249, 250, 256, 260, 261, 262, 263, 265, 266, 277, 278, 280, 282, 283, 284, 287, 288, 289], "weak": [53, 62, 93, 201, 204], "weakli": [93, 249], "web": [1, 7, 46, 54, 63, 67, 70, 74, 79, 89, 102, 143, 193, 200, 205, 223, 224, 231, 249, 284], "webpag": [3, 7], "websit": [7, 286], "wedg": [64, 87], "wedgeproduct": 64, "weibul": 231, "weibull_distribut": 231, "weibulldistribut": 231, "weight": [16, 62, 70, 77, 79, 89, 91, 98, 160, 223, 278], "weisstein": 205, "weisstein09": [204, 205], "welcom": [201, 227, 281], "weld": 120, "weldjoint": 120, "welecka": 176, "well": [4, 6, 7, 10, 11, 12, 14, 16, 18, 20, 33, 39, 41, 42, 43, 44, 45, 46, 54, 61, 62, 67, 68, 70, 89, 93, 96, 98, 108, 113, 116, 120, 126, 128, 130, 131, 140, 166, 175, 178, 179, 185, 194, 196, 197, 198, 200, 201, 202, 204, 206, 211, 218, 219, 220, 221, 223, 227, 229, 230, 242, 243, 260, 261, 265, 280, 282, 283, 288], "welleslei": 61, "wendi": 54, "went": 194, "were": [4, 7, 10, 11, 12, 14, 18, 20, 42, 45, 54, 56, 62, 63, 68, 79, 87, 93, 98, 102, 103, 104, 116, 125, 140, 185, 192, 195, 198, 202, 204, 205, 206, 207, 210, 211, 212, 220, 223, 229, 249, 250, 252, 280, 282, 283, 287, 288], "werner": 142, "weslei": [46, 54, 102, 205], "wester": [203, 274], "wester1999": 210, "weyl": [85, 91], "weyl_group": 91, "weylelt": 91, "weylgroup": 91, "wf": [114, 128], "wf_cont": 128, "wf_i": 128, "wf_mc": 128, "wfrad": 128, "wgate": 161, "what": [6, 7, 8, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 32, 41, 43, 54, 56, 61, 62, 63, 64, 68, 69, 72, 73, 77, 87, 89, 91, 98, 102, 104, 117, 120, 121, 123, 126, 130, 137, 143, 175, 176, 179, 181, 186, 194, 195, 202, 204, 207, 210, 211, 212, 218, 220, 221, 223, 224, 227, 229, 236, 240, 242, 244, 245, 250, 260, 261, 266, 278, 280, 281, 283, 287, 288], "whatev": [10, 12, 20, 53, 62, 63, 223, 227, 228, 230, 250], "wheel": 128, "when": [0, 1, 3, 6, 7, 8, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 26, 28, 29, 30, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 53, 54, 55, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 86, 89, 90, 92, 93, 94, 98, 102, 103, 104, 108, 110, 112, 113, 116, 120, 126, 128, 134, 136, 137, 138, 139, 140, 141, 144, 149, 150, 155, 160, 161, 165, 168, 170, 178, 179, 180, 185, 191, 194, 195, 197, 198, 199, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 217, 218, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 233, 235, 236, 240, 242, 243, 244, 245, 247, 249, 250, 252, 253, 255, 260, 278, 280, 282, 283, 288, 289], "whenc": 221, "whenev": [3, 4, 10, 11, 12, 20, 60, 87, 89, 98, 183, 197, 198, 199, 213, 218, 221, 231, 278, 280, 283], "where": [1, 4, 5, 6, 7, 10, 11, 12, 16, 18, 19, 20, 22, 25, 26, 27, 29, 31, 34, 35, 39, 41, 42, 43, 44, 51, 52, 53, 54, 56, 58, 60, 61, 62, 63, 64, 66, 67, 68, 70, 72, 75, 77, 78, 79, 80, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 98, 102, 105, 108, 109, 112, 116, 120, 121, 122, 123, 125, 126, 128, 139, 140, 141, 143, 144, 150, 160, 165, 171, 173, 175, 176, 177, 178, 179, 186, 190, 192, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 217, 218, 219, 220, 221, 223, 224, 227, 228, 229, 231, 232, 235, 237, 242, 243, 244, 245, 249, 250, 252, 256, 263, 265, 278, 280, 282, 284, 288, 289], "wherea": [11, 16, 18, 22, 27, 39, 43, 63, 72, 78, 87, 92, 112, 181, 198, 201, 207, 211, 229, 230, 249, 288], "wherebi": 63, "wherev": [33, 126, 223, 230, 260], "whet": 282, "whether": [1, 4, 10, 11, 18, 19, 20, 22, 27, 29, 30, 31, 41, 42, 43, 48, 53, 61, 62, 63, 69, 70, 74, 77, 89, 90, 92, 93, 98, 102, 108, 116, 121, 122, 125, 126, 164, 183, 188, 195, 197, 200, 201, 202, 206, 207, 211, 214, 218, 219, 223, 224, 227, 229, 230, 231, 232, 242, 244, 249, 250, 256, 259, 280, 284], "which": [1, 2, 3, 4, 6, 7, 10, 11, 12, 16, 17, 18, 19, 20, 22, 23, 25, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 52, 53, 54, 55, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 75, 76, 77, 78, 81, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 98, 101, 102, 104, 105, 106, 108, 109, 110, 112, 113, 114, 116, 117, 118, 120, 121, 123, 125, 126, 128, 129, 131, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 149, 150, 162, 165, 171, 172, 173, 174, 176, 180, 181, 182, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 212, 213, 214, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 235, 237, 242, 243, 244, 245, 246, 247, 249, 250, 252, 256, 258, 261, 265, 266, 277, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289], "while": [4, 6, 11, 12, 18, 20, 23, 24, 29, 31, 42, 43, 44, 53, 54, 55, 58, 61, 62, 63, 64, 66, 67, 68, 72, 76, 78, 86, 92, 93, 98, 102, 103, 104, 105, 108, 117, 120, 122, 126, 130, 140, 160, 180, 181, 186, 192, 198, 206, 209, 211, 227, 230, 242, 244, 246, 249, 265, 277, 283, 284], "white": [90, 191, 231], "whitespac": [7, 62, 247], "whittak": 89, "whittl": 288, "whl": 43, "who": [3, 4, 6, 16, 20, 63, 64, 143, 195, 204, 211, 281], "whole": [6, 10, 18, 62, 64, 70, 89, 106, 114, 197, 198, 206, 207, 211, 214, 219, 221, 227, 230, 249], "whole_submodul": 206, "whose": [7, 10, 11, 18, 20, 22, 42, 44, 46, 51, 54, 61, 62, 63, 68, 72, 76, 78, 79, 85, 89, 92, 98, 102, 123, 138, 148, 171, 181, 187, 188, 192, 195, 199, 200, 202, 206, 207, 218, 219, 223, 227, 228, 229, 231, 237, 242, 246, 249, 250, 256, 259, 261, 263], "wht": 65, "why": [4, 10, 12, 18, 43, 62, 195, 202, 208, 218, 221, 250, 281, 283, 284], "wick": 176, "wide": [5, 18, 90, 98, 143, 191, 201, 207, 211, 231], "widen": 208, "wider": 211, "widget": 211, "width": [42, 43, 90, 191, 197, 207, 211, 242], "wiener": 231, "wiener_process": 231, "wienerprocess": [10, 231], "wigner": [155, 173, 231, 273], "wigner3j": [155, 196], "wigner6j": [155, 196], "wigner9j": [155, 196], "wigner_3j": 196, "wigner_6j": 196, "wigner_9j": 196, "wigner_d": 196, "wigner_d_smal": 196, "wigner_semicircle_distribut": 231, "wignerd": 173, "wignersemicircl": 231, "wignerssemicirclelaw": 231, "wiki": [4, 5, 6, 7, 8, 12, 18, 20, 32, 35, 37, 38, 39, 41, 42, 43, 45, 50, 51, 53, 54, 61, 62, 63, 64, 65, 67, 68, 70, 72, 74, 78, 79, 80, 89, 90, 91, 92, 93, 95, 98, 102, 110, 112, 115, 145, 147, 148, 149, 151, 152, 153, 157, 158, 159, 162, 164, 165, 174, 176, 180, 186, 188, 193, 197, 200, 207, 214, 218, 219, 220, 224, 227, 230, 231, 244, 249, 256, 258, 262, 264, 266, 284, 285], "wikibook": [7, 89, 90], "wikidel": 262, "wikidyad": [141, 193], "wikidyadicproduct": [141, 193], "wikipappu": 74, "wikipedia": [6, 11, 18, 20, 35, 37, 38, 39, 41, 42, 43, 45, 50, 51, 53, 54, 61, 62, 63, 64, 65, 67, 68, 70, 72, 74, 78, 79, 80, 89, 91, 92, 93, 95, 98, 102, 110, 112, 115, 145, 147, 148, 149, 151, 152, 153, 157, 158, 159, 162, 164, 165, 174, 176, 179, 186, 188, 193, 200, 207, 214, 218, 219, 220, 227, 230, 231, 244, 249, 256, 258, 262, 264, 266, 282, 284, 286], "wild": [12, 62, 223, 249], "wildcard": [62, 223], "wildfunct": 62, "wilei": 231, "wilf": [46, 61, 229], "wilkinson": [22, 93], "win": 34, "window": [2, 252], "wire": 156, "wire_idx": 156, "wirefram": 197, "wisdom": 64, "wise": [43, 44, 68, 93, 200, 204, 211, 217, 243], "wish": [3, 6, 12, 20, 29, 33, 43, 62, 63, 66, 87, 102, 171, 185, 195, 246, 250, 278, 282, 284, 289], "wishart": 231, "wishart_distribut": 231, "wit": 102, "with_pivot": 98, "within": [3, 7, 10, 11, 18, 28, 41, 42, 43, 45, 62, 68, 75, 78, 92, 93, 95, 102, 103, 105, 133, 171, 185, 186, 194, 195, 199, 201, 207, 209, 219, 227, 229, 230, 231, 242, 243, 252], "without": [3, 4, 6, 7, 10, 11, 12, 18, 20, 33, 37, 39, 40, 43, 61, 62, 63, 64, 66, 70, 87, 89, 90, 93, 95, 98, 112, 113, 120, 126, 132, 134, 139, 140, 176, 180, 181, 185, 186, 187, 194, 197, 200, 201, 204, 207, 211, 213, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 233, 236, 237, 240, 242, 243, 244, 247, 249, 250, 252, 259, 262, 284, 288], "withstand": [105, 106], "wittkopf": 205, "wkshum": 224, "wlog": 221, "wm": 231, "wminu": 93, "wn_m": 98, "wo": 126, "wojciech": 142, "wolfram": [6, 39, 55, 56, 62, 63, 65, 67, 68, 70, 72, 78, 89, 98, 102, 104, 205, 211, 213, 214, 216, 219, 224, 231, 249, 284], "wolphramalpha": 227, "won": [4, 12, 20, 43, 223, 230, 283], "wonder": 284, "wor6d": 63, "word": [4, 7, 11, 20, 39, 58, 61, 62, 63, 68, 70, 92, 112, 121, 126, 141, 198, 201, 206, 223, 224, 227, 229, 244, 256, 261, 280], "word_sep": 63, "wordpress": [87, 224], "work": [0, 1, 3, 4, 6, 10, 11, 12, 15, 16, 18, 19, 20, 22, 28, 33, 36, 38, 41, 42, 43, 45, 53, 54, 55, 62, 63, 66, 70, 87, 89, 91, 92, 93, 95, 98, 99, 102, 104, 116, 120, 126, 128, 137, 141, 143, 156, 160, 165, 169, 170, 171, 172, 175, 178, 188, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 211, 218, 219, 220, 221, 223, 224, 227, 229, 230, 231, 237, 242, 243, 244, 246, 249, 250, 251, 252, 260, 261, 280, 281, 282, 283, 284, 287, 288], "workaround": [1, 250], "workflow": [1, 3, 5, 8, 9, 28, 29, 32, 143, 201, 244, 250, 285], "workhors": 218, "worktrib": 224, "world": [63, 108, 130, 140, 249], "worri": [12, 62, 283], "wors": [20, 92, 223], "worst": [102, 207, 227], "worth": [4, 18, 20, 186, 261, 263], "worthwhil": 66, "wou": 54, "would": [2, 4, 5, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 23, 26, 28, 33, 42, 43, 44, 51, 53, 54, 61, 62, 63, 67, 68, 74, 78, 87, 89, 93, 98, 102, 104, 105, 112, 113, 114, 116, 118, 120, 126, 130, 140, 143, 171, 173, 176, 181, 185, 186, 192, 194, 197, 200, 201, 202, 204, 207, 208, 210, 211, 212, 214, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 233, 235, 236, 242, 244, 246, 249, 250, 252, 253, 261, 262, 263, 265, 277, 278, 280, 282, 283, 284, 287, 288, 289], "wouldn": 20, "woven": 198, "wp1": 64, "wplu": 93, "wr": 128, "wr_cont": 128, "wr_i": 128, "wr_mc": 128, "wrap": [3, 4, 6, 36, 37, 38, 39, 43, 51, 62, 68, 90, 103, 191, 195, 197, 200, 201, 204, 211, 214, 230, 236, 243, 247, 250, 252, 283], "wrap_lin": [66, 89, 90, 98, 106, 191, 198, 199, 210, 211, 227], "wrapper": [3, 10, 11, 20, 37, 39, 43, 54, 62, 70, 98, 140, 188, 191, 200, 201, 204, 211, 218, 227, 230, 231, 243, 247, 249], "wrench": 70, "wright": 205, "write": [4, 8, 10, 11, 16, 18, 19, 21, 22, 34, 43, 51, 62, 63, 69, 70, 87, 89, 95, 143, 156, 194, 195, 199, 202, 204, 206, 211, 220, 221, 224, 227, 230, 236, 242, 243, 244, 250, 281, 282, 283, 288], "writer": 242, "written": [0, 3, 6, 7, 11, 18, 20, 39, 43, 50, 53, 54, 58, 62, 67, 70, 74, 80, 85, 87, 91, 92, 101, 102, 130, 136, 143, 176, 192, 193, 194, 195, 198, 199, 207, 211, 214, 218, 221, 224, 227, 244, 263, 265, 281, 282, 283, 288], "wrong": [4, 7, 10, 53, 62, 63, 70, 72, 98, 186, 201, 227, 245, 280, 284], "wronskian": [98, 227], "wrote": [282, 283], "wrrad": 128, "wrt": [41, 43, 62, 64, 70, 79, 98, 126, 143, 186, 187, 204, 207, 256, 258, 259, 263], "wsl": 1, "wsym": 218, "wurlitz": 3, "wv": 161, "ww2040": 231, "www": [6, 7, 35, 41, 53, 54, 63, 65, 67, 89, 90, 102, 110, 191, 205, 210, 211, 220, 223, 224, 227, 231, 249, 284, 287], "www2": 205, "www3": [84, 227, 256], "x": [3, 4, 6, 7, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 51, 53, 54, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 101, 102, 103, 104, 105, 106, 108, 110, 112, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 148, 150, 151, 152, 153, 154, 156, 157, 160, 165, 166, 171, 173, 174, 175, 176, 177, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 245, 247, 249, 250, 252, 256, 259, 260, 261, 262, 263, 265, 266, 277, 278, 280, 282, 283, 284, 287, 288, 289], "x0": [16, 29, 41, 43, 52, 62, 70, 81, 83, 85, 86, 102, 148, 201, 212, 213, 218, 223, 227, 229, 231, 249, 278], "x01": 62, "x02": 62, "x1": [18, 20, 28, 29, 52, 62, 67, 143, 148, 201, 202, 212, 213, 223, 227, 229, 231, 249], "x11": 62, "x12": 62, "x2": [18, 28, 52, 62, 67, 143, 148, 201, 213, 227, 229, 231], "x3": [52, 62, 67, 201, 227, 231], "x4": [62, 67, 201], "x5": [62, 67, 201], "x50": 62, "x51": 62, "x6": [62, 201], "x64": 242, "x7": [62, 201], "x8": [62, 201], "x86": 43, "x9": [62, 201], "x_": [16, 25, 29, 43, 52, 62, 63, 67, 104, 202, 204, 207, 213, 224, 227, 232], "x_0": [16, 52, 53, 63, 84, 85, 86, 204, 213, 224, 227, 231, 278], "x_1": [20, 44, 52, 53, 63, 67, 84, 98, 171, 199, 202, 204, 207, 213, 224, 230], "x_1x_0": 52, "x_2": [44, 52, 67, 84, 171, 199, 204, 207, 213, 224, 230], "x_2x_0": 52, "x_2x_1": 52, "x_3": [44, 52, 84, 171], "x_3x_0": 52, "x_3x_1": 52, "x_3x_2": 52, "x_dom": 201, "x_domain": 202, "x_i": [16, 20, 52, 70, 89, 98, 199, 202, 204, 207, 208, 211, 230], "x_j": [202, 204, 207], "x_k": [20, 63, 204], "x_ket": 171, "x_list": [41, 278], "x_m": 231, "x_n": [16, 20, 44, 52, 63, 84, 98, 199, 202, 204, 207, 224, 230], "x_op": 171, "x_reduc": 24, "x_u": 204, "x_valu": 28, "x_var": 197, "x_y_reduc": 24, "xa": [62, 199, 204], "xax": 53, "xb": [62, 252], "xb7": 211, "xbra": [154, 166, 171], "xc": [62, 175, 252], "xd": 143, "xd2": 143, "xdagger": 175, "xdg": 211, "xdirect": 75, "xdot": 128, "xdvi": 211, "xelatex": 1, "xetex": 1, "xf": 201, "xf_1": 204, "xfail": [227, 240, 242], "xfield": 202, "xfree_group": 44, "xgate": 160, "xi": [12, 20, 64, 87, 211, 227, 228, 229], "xiuqin": 220, "xj": 198, "xk": [201, 202, 213], "xket": [154, 166, 171], "xl": 62, "xla": [3, 103], "xlabel": [29, 197], "xlim": [62, 197], "xlist": 41, "xm": 231, "xmax": [72, 73, 75, 77, 78, 197], "xmin": [72, 73, 75, 77, 78, 197], "xml": 223, "xn": [16, 20, 202], "xneg": 19, "xnor": 92, "xobj": 211, "xop": [154, 166, 171], "xor": [62, 65, 92, 104, 211, 280], "xpass": [240, 242], "xpath": 223, "xpo": 19, "xr": [201, 209], "xreplac": [11, 62, 93, 98, 186], "xring": 202, "xscale": 197, "xstr": 211, "xsym": 211, "xt": 70, "xthread": 245, "xval": 229, "xvi": [44, 52], "xx": [43, 98, 123, 195, 249], "xxx": [62, 89, 98, 249, 251], "xxxx": 249, "xxxxxx": 249, "xy": [20, 41, 42, 76, 98, 123, 195, 197, 198, 204, 211, 223, 230, 266, 283, 288], "xymatrix": 42, "xypic": 42, "xypic_draw_diagram": 42, "xypicdiagramdraw": 42, "xyx": [186, 256, 258], "xyz": [4, 35, 74, 104, 105, 186, 195, 256, 258, 261], "xz": [195, 197], "xzx": 186, "xzy": 186, "x\u2080": 212, "y": [4, 6, 10, 11, 12, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 53, 54, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 87, 89, 90, 91, 92, 93, 94, 95, 98, 102, 103, 104, 105, 106, 108, 110, 112, 117, 118, 120, 123, 126, 128, 129, 130, 131, 133, 134, 135, 137, 141, 143, 144, 153, 154, 157, 160, 165, 171, 173, 174, 176, 177, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 243, 244, 247, 249, 250, 252, 256, 259, 260, 261, 262, 263, 265, 266, 277, 278, 280, 282, 283, 287, 288, 289], "y0": [29, 62, 81, 83, 85, 227], "y1": [29, 62, 143], "y1d": 143, "y2": [29, 62, 143, 201], "y2d": 143, "y3": [62, 201], "y4": 62, "y_": [29, 43, 70, 87, 114, 196], "y_0": [29, 224, 227], "y_1": [29, 44, 224, 231], "y_2": [29, 44, 224, 231], "y_3": 231, "y_i": [202, 204, 206, 207, 227], "y_list": [41, 278], "y_n": [70, 224], "y_reduc": 24, "y_var": 197, "yang": 205, "yann": 102, "yaw": 128, "ybar": 227, "ydirect": 75, "ydot": 29, "ye": [63, 92, 227], "year": [0, 4, 6, 10, 180], "yet": [4, 5, 12, 18, 20, 36, 38, 41, 42, 66, 89, 140, 156, 198, 201, 202, 206, 208, 210, 219, 227, 230, 278], "yf": 201, "yf_1": 204, "ygate": 160, "yi": 18, "yibi": 231, "yield": [22, 24, 25, 26, 27, 29, 30, 41, 43, 53, 62, 63, 67, 70, 86, 87, 102, 105, 112, 118, 170, 196, 199, 204, 206, 207, 212, 213, 218, 219, 220, 223, 224, 229, 246, 249, 284], "yih": 249, "yiu": 205, "yk": [201, 202], "ylabel": [29, 197], "ylim": 197, "ymax": [72, 73, 75, 77, 78, 197], "ymin": [72, 73, 75, 77, 78, 197], "yn": [70, 211, 217], "ynm": [70, 196], "ynm_c": 70, "yop": 154, "yorgei": 246, "york": [70, 87, 142, 221, 229], "you": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 15, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 37, 38, 39, 41, 43, 44, 45, 53, 54, 61, 62, 63, 64, 66, 68, 69, 70, 74, 76, 78, 80, 81, 86, 87, 89, 90, 92, 93, 95, 96, 98, 99, 102, 103, 104, 112, 114, 115, 116, 120, 121, 122, 123, 126, 127, 137, 138, 140, 141, 143, 165, 170, 171, 174, 176, 180, 185, 186, 188, 192, 194, 195, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 211, 212, 214, 218, 219, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 242, 243, 244, 245, 247, 249, 250, 253, 260, 261, 262, 263, 276, 277, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289], "young": [10, 105, 237], "your": [0, 1, 3, 4, 5, 6, 7, 9, 10, 12, 20, 22, 23, 24, 25, 27, 29, 30, 31, 33, 37, 62, 63, 89, 90, 98, 103, 104, 112, 116, 120, 138, 140, 195, 197, 211, 218, 223, 227, 230, 231, 249, 250, 278, 282, 284, 285, 287, 288], "your_hint": 227, "yourself": [3, 20, 31, 43, 128, 245, 278], "yp": 29, "ypp": 29, "yr": [201, 209], "yscale": 197, "yu": [87, 196, 221], "yule": 231, "yulesimon": 231, "yuvalf": 102, "yx": [53, 195], "yxy": [186, 195], "yxz": 186, "yy": [123, 195, 227], "yz": [123, 195, 197], "yzx": [186, 195], "yzy": 186, "z": [6, 10, 11, 12, 14, 18, 20, 25, 28, 29, 30, 35, 39, 40, 43, 44, 53, 54, 61, 62, 63, 64, 65, 67, 68, 70, 74, 75, 76, 77, 78, 87, 89, 92, 93, 95, 98, 104, 105, 106, 112, 114, 117, 118, 120, 123, 126, 128, 129, 130, 131, 133, 134, 135, 137, 140, 141, 143, 144, 145, 154, 156, 160, 170, 171, 173, 177, 181, 185, 186, 187, 188, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 210, 211, 212, 218, 219, 220, 221, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 243, 244, 250, 256, 259, 260, 261, 262, 263, 265, 266, 277, 278, 280, 282, 283, 287, 288, 289], "z0": [62, 218], "z1": [201, 202, 229], "z1_sympi": 201, "z2": 202, "z3": 202, "z4": 202, "z_": [63, 223], "z_0": [87, 223], "z_1": 87, "z_eq": 14, "z_k": 206, "z_n": [70, 205], "z_p": 204, "z_r": 145, "z_r_in": 145, "z_r_out": 145, "z_sympi": 201, "z_zz": 201, "za": [223, 231], "zaletnyik": 205, "zassenhau": [204, 206], "zc": 201, "zdirect": 75, "ze": 70, "zeilberg": [61, 229], "zeng": 220, "zerlegung": 206, "zero": [4, 11, 12, 14, 18, 19, 20, 27, 28, 35, 39, 40, 43, 52, 53, 54, 58, 61, 62, 65, 66, 67, 68, 70, 72, 76, 77, 78, 87, 89, 91, 92, 93, 95, 97, 98, 101, 102, 104, 105, 112, 120, 123, 126, 128, 131, 134, 137, 138, 139, 143, 148, 170, 174, 176, 178, 190, 192, 194, 195, 196, 198, 199, 200, 201, 202, 206, 207, 209, 211, 214, 218, 219, 221, 223, 224, 227, 228, 229, 230, 231, 232, 247, 249, 250, 260, 262, 263, 283, 289], "zero_color": 110, "zero_markers": 110, "zero_matrix": 18, "zero_monom": 202, "zero_to_the_power_of_zero": 62, "zerodivisionerror": [112, 202, 240, 250], "zerohandl": 39, "zeromatrix": [39, 95], "zeropred": 39, "zeroth": [62, 206], "zeta": [6, 11, 12, 61, 62, 66, 67, 202, 206, 211, 218, 231], "zeta5": 202, "zeta7": 202, "zeta_": 202, "zeta_distribut": 231, "zeta_funct": 70, "zeta_pow": 206, "zfade4": 197, "zg": 53, "zgate": 160, "zhegalkin": 92, "zhegalkin_polynomi": 92, "zhenb": 220, "zhong": 220, "zhou": 98, "zigzag": 67, "ziki": 102, "zimmer": 206, "zip": [25, 41, 52, 63, 92, 102, 207, 217, 224, 227, 246, 249], "zk": 206, "zlabel": 197, "znm": 70, "zo42": 54, "zoo": [11, 14, 18, 39, 62, 67, 68, 70, 89, 218, 220, 223], "zoom": 197, "zop": 154, "zotero": 0, "zout": 204, "zp": 74, "zsol": 14, "zt": [70, 87], "zuckerman": 204, "zur": 205, "zx": [123, 195], "zxy": 186, "zxz": [120, 186, 195, 256, 258], "zy": 195, "zyla": 155, "zyx": 186, "zyz": [35, 186], "zz": [62, 67, 84, 85, 89, 95, 98, 99, 102, 123, 195, 198, 199, 200, 201, 204, 206, 207, 208, 209, 226], "zz_i": [200, 201], "zz_python": 202, "zzx": 195, "\u00b2": 211, "\u00b3": 211, "\u00b9": 211, "\u00bc": 211, "\u00bd": 211, "\u00be": 211, "\u010dert\u00edk": 0, "\u0161": 0, "\u03b1": [7, 196, 210], "\u03b2": [43, 196], "\u03b3": [196, 278, 288], "\u03b3\u2081": 43, "\u03b3\u2082": 43, "\u03b4": 148, "\u03b8": [90, 120, 148, 230], "\u03bb": [11, 284], "\u03bd": 282, "\u03c0": [20, 66, 148, 211, 230, 278, 282, 288, 289], "\u03c7": 148, "\u03c8": 148, "\u03c9": 120, "\u1d62": 211, "\u1d63": 211, "\u1d64": 211, "\u1d65": 211, "\u1d66": 211, "\u1d67": 211, "\u1d68": 211, "\u1d69": 211, "\u1d6a": 211, "\u2070": 211, "\u2071": 211, "\u2074": 211, "\u2075": 211, "\u2076": 211, "\u2077": 211, "\u2078": 211, "\u2079": 211, "\u207f": 211, "\u2080": 211, "\u2081": 211, "\u2082": 211, "\u2083": [27, 211], "\u2084": 211, "\u2085": 211, "\u2086": 211, "\u2087": 211, "\u2088": 211, "\u2089": 211, "\u2090": 211, "\u2091": 211, "\u2092": 211, "\u2093": 211, "\u2095": 211, "\u2096": 211, "\u2097": 211, "\u2098": 211, "\u2099": 211, "\u209a": 211, "\u209b": 211, "\u209c": 211, "\u2102": [211, 289], "\u2115": 211, "\u2115\u2080": 211, "\u211a": [198, 211], "\u211d": [211, 289], "\u2124": [210, 211, 230, 289], "\u212f": [43, 148, 196, 211, 278, 282, 284, 288, 289], "\u2148": [148, 196, 210, 211, 230, 289], "\u2153": 211, "\u2154": 211, "\u2155": 211, "\u2156": 211, "\u2157": 211, "\u2158": 211, "\u2159": 211, "\u215a": 211, "\u215b": 211, "\u215c": 211, "\u215d": 211, "\u215e": 211, "\ud835\udc45": 266}, "titles": ["Citing SymPy", "Build the Documentation", "Debugging", "Dependencies", "Deprecation Policy", "Development Environment Setup", "SymPy Docstrings Style Guide", "Docstring Style Guide", "Contributing", "Making a Contribution", "List of active deprecations", "Glossary", "Gotchas and Pitfalls", "Explanations", "Solve Output by Type", "Classification of SymPy objects", "Finite Difference Approximations to Derivatives", "SymPy Special Topics", "Assumptions", "Symbolic and fuzzy booleans", "Writing Custom Functions", "How-to Guides", "Find the Roots of a Polynomial Algebraically or Numerically", "Solve Equations", "Reduce One or a System of Inequalities for a Single Variable Algebraically", "Solve a Diophantine Equation Algebraically", "Solve an Equation Algebraically", "Solve a Matrix Equation Algebraically", "Solve One or a System of Equations Numerically", "Solve an Ordinary Differential Equation (ODE) Algebraically", "Solve a System of Equations Algebraically", "Solving Guidance", "Welcome to SymPy\u2019s documentation!", "Installation", "abc", "Algebras", "Ask", "Assume", "Assumptions", "Predicates", "Refine", "Calculus", "Category Theory", "Code Generation", "Finitely Presented Groups", "Galois Groups", "Gray Code", "Group constructors", "Nilpotent, Abelian and Cyclic Numbers", "Combinatorics", "Named Groups", "Partitions", "Polycyclic Groups", "Permutation Groups", "Permutations", "Polyhedron", "Prufer Sequences", "Subsets", "Tensor Canonicalization", "Test Utilities", "Utilities", "Concrete", "Core", "Cryptography", "Differential Geometry", "Discrete", "Numerical Evaluation", "Combinatorial", "Elementary", "Functions", "Special", "Curves", "Ellipses", "Entities", "Geometry", "Lines", "Plane", "Points", "Polygons", "Utils", "About Holonomic Functions", "Converting other representations to holonomic", "Holonomic", "Internal API", "Operations on holonomic functions", "Representation of holonomic functions in SymPy", "Uses and Current limitations", "Computing Integrals using Meijer G-Functions", "Integrals", "Integrals", "Interactive", "Lie Algebra", "Logic", "Common Matrices", "Dense Matrices", "Matrix Expressions", "Immutable Matrices", "Matrices", "Matrices (linear algebra)", "Matrix Normal Forms", "Sparse Matrices", "Sparse Tools", "Number Theory", "Numeric Computation", "Parsing", "Beam (Docstrings)", "Solving Beam Bending Problems using Singularity Functions", "Continuum Mechanics", "Truss (Docstrings)", "Control", "Control System Plots", "Control Module", "Control API", "High energy physics", "Hydrogen Wavefunctions", "Matrices", "Potential Issues/Advanced Topics/Future Features in Physics/Mechanics", "Body (Docstrings)", "Expression Manipulation (Docstrings)", "Mechanics API Reference", "Joints Framework (Docstrings)", "Kane\u2019s Method &amp; Lagrange\u2019s Method (Docstrings)", "Linearization (Docstrings)", "Masses, Inertias &amp; Particles, RigidBodys (Docstrings)", "Printing (Docstrings)", "SymbolicSystem (Docstrings)", "Autolev Parser", "Examples for Physics/Mechanics", "A bicycle", "A four bar linkage", "Nonminimal Coordinates Pendulum", "Multi Degree of Freedom Holonomic System", "A rolling disc", "A rolling disc, with Kane\u2019s method", "A rolling disc, with Kane\u2019s method and constraint forces", "A rolling disc using Lagrange\u2019s Method", "Classical Mechanics", "Joints Framework in Physics/Mechanics", "Kane\u2019s Method in Physics/Mechanics", "Lagrange\u2019s Method in Physics/Mechanics", "Linearization in Physics/Mechanics", "Masses, Inertias, Particles and Rigid Bodies in Physics/Mechanics", "References for Physics/Mechanics", "SymPy Mechanics for Autolev Users", "Symbolic Systems in Physics/Mechanics", "Gaussian Optics", "Optics Module", "Medium", "Polarization", "Utilities", "Waves", "Pauli Algebra", "Quantum Harmonic Oscillator in 1-D", "Anticommutator", "Cartesian Operators and States", "Clebsch-Gordan Coefficients", "Circuit Plot", "Commutator", "Constants", "Dagger", "Gates", "Grover\u2019s Algorithm", "Hilbert Space", "Quantum Mechanics", "Inner Product", "Operator", "Operator/State Helper Functions", "Particle in a Box", "Qapply", "QFT", "Qubit", "Represent", "Shor\u2019s Algorithm", "Spin", "State", "Tensor Product", "Second Quantization", "Quantum Harmonic Oscillator in 3-D", "Dimensions and dimension systems", "More examples", "Unit systems", "Philosophy behind unit systems", "Unit prefixes", "Physical quantities", "Units and unit systems", "Potential Issues/Advanced Topics/Future Features in Physics/Vector Module", "Essential Classes", "Docstrings for basic field functions", "Essential Functions (Docstrings)", "Physics Vector API", "Kinematics (Docstrings)", "Printing (Docstrings)", "Scalar and Vector Field Functionality", "The Physics Vector Module", "Vector: Kinematics", "Vector &amp; ReferenceFrame", "Wigner Symbols", "Plotting", "AGCA - Algebraic Geometry and Commutative Algebra Module", "Basic functionality of the module", "Introducing the domainmatrix of the poly module", "Introducing the Domains of the poly module", "Reference docs for the Poly Domains", "Polynomial Manipulation", "Internals of the Polynomial Manipulation Module", "Literature", "Number Fields", "Polynomials Manipulation Module Reference", "Series Manipulation using Polynomials", "Poly solvers", "Examples from Wester\u2019s Article", "Printing", "Term Rewriting", "Formal Power Series", "Fourier Series", "Series", "Limits of Sequences", "Sequences", "Series Expansions", "Sets", "Hongguang Fu\u2019s Trigonometric Simplification", "Hypergeometric Expansion", "Simplify", "Simplify", "Diophantine", "Solvers", "Inequality Solvers", "ODE", "PDE", "Solvers", "Solveset", "Stats", "N-dim array", "N-dim array expressions", "Tensor", "Methods", "Indexed Objects", "Tensor", "Tensor Operators", "Testing", "pytest", "Randomised Testing", "Run Tests", "Autowrap Module", "Codegen", "Decorator", "Enumerative", "Exceptions and Warnings", "Utilities", "Iterables", "Lambdify", "Memoization", "Miscellaneous", "PKGDATA", "Source Code Inspection", "Timing Utilities", "Essential Classes in sympy.vector (docstrings)", "Vector API", "Orienter classes (docstrings)", "Essential Functions in sympy.vector (docstrings)", "Basic Implementation details", "More about Coordinate Systems", "General examples of usage", "Scalar and Vector Field Functionality", "Vector", "Introduction", "Applications of Vector Integrals", "API Reference", "Basics", "Code Generation", "Logic", "Matrices", "Number Theory", "Physics", "Topics", "Utilities", "Tutorials", "Basic Operations", "Calculus", "SymPy Features", "Gotchas", "Introductory Tutorial", "Introduction", "Advanced Expression Manipulation", "Matrices", "What\u2019s Next", "Preliminaries", "Printing", "Simplification", "Solvers"], "titleterms": {"": [32, 121, 130, 133, 134, 135, 138, 139, 140, 161, 172, 210, 220, 229, 230, 261, 266, 285], "1": [6, 10, 29, 87, 106, 126, 140, 152], "10": [1, 10, 106], "11": [10, 106], "12": 10, "2": [6, 29, 87, 106, 126, 140], "2d": 89, "3": [6, 89, 106, 126, 177], "4": [6, 10, 106], "5": [6, 10, 106], "6": [6, 10, 106], "7": [10, 106], "8": [10, 106], "9": [10, 106], "A": [16, 128, 129, 132, 133, 134, 135, 140, 282, 289], "AND": 261, "As": 206, "Be": [22, 24, 25, 26, 27, 28, 29], "For": 89, "If": 29, "Into": [26, 28, 30], "Its": 29, "No": [22, 25, 26, 27, 29], "Not": [4, 22, 24, 25, 26, 28, 29, 30, 31], "Of": 14, "One": [24, 28, 29], "That": [24, 25, 26, 28, 30, 31], "The": [4, 10, 18, 20, 44, 52, 87, 140, 181, 193, 206, 218, 221, 262, 263, 282], "There": 29, "With": [22, 25, 26, 27, 28, 29, 30, 31], "__call__": 10, "_eval_": 20, "_mat": 10, "_smat": 10, "a_and_b": 140, "abc": 34, "abelian": 48, "about": [80, 230, 261, 289], "abov": 18, "absorbing_probabilit": 10, "abstract": [43, 107, 111, 113, 136, 146, 163, 193, 202], "acceler": [116, 185, 194, 218], "accept": 10, "access": 284, "accuraci": 66, "activ": 10, "ad": 4, "add": [20, 62], "addit": [20, 84], "adic": 206, "advanc": [116, 185, 210, 283, 284], "aesara": [103, 211], "agca": 198, "airi": 70, "algebra": [22, 24, 25, 26, 27, 29, 30, 35, 91, 98, 151, 195, 198, 201, 206, 210, 229, 289], "algorithm": [43, 44, 161, 172, 204, 207, 213, 218, 221], "all": [22, 24, 25, 26, 28, 29, 30], "all_root": 22, "also": [6, 62, 249], "altern": [22, 24, 25, 26, 27, 28, 29, 30, 195], "an": [10, 26, 28, 29, 74, 126, 181, 221, 230, 283], "anaconda": 33, "analysi": 179, "analyt": [24, 163], "angular": [141, 194], "ani": [31, 230], "anticommut": 153, "apart": 288, "api": [4, 32, 83, 87, 89, 112, 119, 189, 230, 243, 244, 257, 267], "appel": 207, "appli": [18, 87, 221], "applic": 266, "approxim": [16, 22, 43], "ar": [6, 24, 29, 195, 201, 230], "arbitrari": 29, "area": 266, "arg": [10, 283], "argand": 87, "argument": [10, 12, 230], "arithmet": 206, "around": 221, "arrai": [10, 232, 233], "art": 197, "articl": 210, "as_real_imag": 20, "ascii": [197, 287], "ask": 36, "askhandl": 10, "assign": 12, "assum": 37, "assumpt": [10, 15, 18, 20, 38, 62], "ast": [43, 126], "attach": 10, "attribut": [10, 44, 52], "author": 196, "auto": 1, "autolev": [126, 143], "automat": [20, 210], "autowrap": [3, 43, 243], "avail": 74, "avoid": 4, "b": 70, "back": 210, "backend": [3, 197], "background": 140, "backward": 4, "bar": 129, "base": [42, 64, 98, 198, 199, 210, 217, 230], "basi": [195, 204, 206], "basic": [62, 66, 98, 187, 199, 201, 207, 219, 260, 267, 268, 277, 284], "beam": [105, 106, 107], "been": 10, "behind": 181, "benchmark": 3, "bend": 106, "bessel": 70, "best": [6, 7, 20], "beta": 70, "between": [12, 18, 183, 201], "bewar": 29, "beyond": 74, "bibliographi": [44, 52], "bicycl": 128, "binari": 10, "block": 95, "bode": 110, "bodi": [117, 141, 266], "bool": 19, "boolean": [14, 19, 92], "boundari": 29, "box": 167, "branch": 87, "bug": [22, 24, 25, 26, 27, 28, 29, 30, 31, 89], "build": [1, 3], "c": [43, 211], "cach": 62, "calcul": 266, "calculu": [39, 41, 195, 278], "call": [10, 24, 31], "can": [22, 24, 25, 26, 28, 29, 30, 31], "cancel": 288, "cannot": [24, 26, 29, 30], "canonic": 58, "capit": 7, "carmichael": 10, "cartesian": 154, "case": [20, 230], "categori": 42, "caveat": [34, 104], "cc": 202, "cfunction": 43, "chang": [4, 10], "chebyshev": 70, "check": [10, 187], "checklist": 4, "choic": 116, "choos": 201, "circuit": 156, "cite": 0, "class": [6, 15, 42, 43, 61, 64, 96, 98, 100, 102, 140, 186, 197, 206, 211, 224, 232, 256, 258], "classic": [136, 204], "classif": 15, "clebsch": 155, "close": [22, 26, 29, 30, 31], "cnode": 43, "code": [3, 4, 5, 7, 10, 43, 46, 116, 195, 211, 254, 267, 269], "codegen": [43, 244], "codeprint": 211, "coeffici": [155, 204], "collect": [52, 212, 288], "collector": 52, "color": 197, "column": 284, "columnspac": 284, "combin": [18, 84], "combinator": [10, 49], "combinatori": 67, "combsimp": 288, "common": [39, 93, 116, 185, 210, 211, 212], "commut": [157, 198], "compat": [10, 233], "complet": [20, 22, 126], "complex": [22, 28, 68, 201], "composit": 84, "compound": [217, 219, 231], "compress": 44, "comput": [52, 87, 103, 163, 210, 282], "concept": 199, "concret": 61, "condit": [10, 29, 87, 219], "conditionset": 10, "configur": 204, "confluenc": 221, "conserv": [192, 263], "consid": [22, 24, 25, 26, 27, 28, 29, 30], "consist": 31, "constant": [29, 158, 181], "constraint": 134, "construct": [44, 52, 233], "constructor": [47, 207, 284], "contain": 62, "content": [38, 49, 69, 82, 88, 203, 215, 225, 234], "continu": [231, 288], "continuum": 107, "contract": 232, "contribut": [8, 9, 32, 208], "control": [109, 110, 111, 112, 197], "conv_": 10, "converg": 87, "convers": 183, "convert": [81, 84, 201, 277], "convolut": 65, "coordin": [10, 116, 130, 140, 197, 260, 261, 263, 265], "coordsys3d": 261, "copi": 29, "copyright": 196, "core": [10, 62, 95], "coset": 44, "cosett": 44, "cover": 65, "coxet": 44, "creat": [10, 12, 20, 28, 98], "credit": 196, "crootof": 22, "cross": 6, "cryptographi": 63, "curl": [192, 263], "current": 86, "curv": 71, "curvilinear": 263, "custom": [20, 197, 211], "cutil": 43, "cxxnode": 43, "cyclic": 48, "cyclotom": 210, "d": [152, 177], "dagger": 159, "data": 10, "de": [229, 230], "deal": 230, "debian": 1, "debug": 2, "decompos": 24, "decomposit": [206, 207, 210], "decor": 245, "decrement": 221, "defin": [20, 29], "definit": [18, 20, 80], "degre": 131, "del": [262, 263], "delet": 284, "delta": 70, "denomin": 31, "dens": [94, 201, 202, 204], "densematrix": 10, "depend": [1, 3, 140, 201, 261], "deprec": [4, 10], "depth": [52, 74], "deriv": [16, 29, 195, 232, 263, 278], "detail": [243, 244, 260], "detect": 212, "determin": 284, "deutil": 229, "develop": [3, 5, 62], "diagon": [232, 284], "diagram": 42, "dictionari": [12, 14, 22, 30], "differ": [16, 18, 41, 143, 201, 261, 278], "differenti": [20, 29, 64, 84, 116, 229, 230, 289], "differentiate_finit": 10, "diffgeom": 10, "dim": [232, 233], "dimens": [74, 178, 181], "dimension": 179, "diophantin": [25, 224, 229, 230], "dirac": 70, "direct": [16, 263], "directli": [140, 261], "disc": [132, 133, 134, 135], "discontinu": 70, "discret": [65, 231], "discretemarkovchain": 10, "dispers": 207, "distribut": [10, 204, 231], "diverg": [192, 263, 266], "divid": 20, "divis": 199, "dixonresult": 10, "dmp": 201, "do": [31, 230], "doc": [1, 202], "docker": 1, "docstr": [6, 7, 105, 108, 117, 118, 120, 121, 122, 123, 124, 125, 187, 188, 190, 191, 256, 258, 259], "document": [1, 3, 4, 6, 7, 32], "doe": [4, 12, 230], "doit": 20, "domain": [26, 199, 201, 202, 207, 210, 230], "domainmatrix": 200, "dot": 287, "dotprint": 211, "doubl": 12, "draw": 42, "dummy_fmt": 10, "dup": 201, "dyadic": [141, 185, 260, 261], "dynam": 126, "dynamicsymbol": 185, "easi": 20, "ecm": 102, "eigenvalu": 284, "eigenvector": 284, "element": [27, 140, 201, 206], "elementari": [68, 198, 217, 219], "ellips": 72, "ellipt": 70, "emploi": 230, "empti": 14, "encod": 207, "end": 221, "energi": [113, 141], "ensur": [28, 31, 230], "entiti": [73, 74, 197], "entri": [4, 98], "enum": 246, "enumer": [44, 67], "environ": 5, "eq": [10, 26], "equal": [12, 25, 26, 280], "equat": [22, 23, 25, 26, 27, 28, 29, 30, 31, 138, 139, 140, 179, 199, 224, 229, 230, 289], "equival": [92, 143], "error": [66, 70], "essenti": [186, 188, 256, 259], "euclidean": 199, "eval": 20, "evalf": [20, 62, 103, 277], "evalu": [10, 12, 20, 22, 66, 84, 143, 283], "ex": 202, "exact": [22, 31], "exampl": [6, 20, 22, 24, 25, 28, 30, 34, 62, 74, 86, 89, 102, 106, 113, 127, 140, 144, 148, 179, 180, 181, 195, 210, 211, 218, 221, 231, 232, 233, 236, 262, 282, 288], "except": [98, 104, 204, 247], "exercis": 286, "exist": 87, "expand": [20, 210, 212, 288], "expand_func": 288, "expand_log": 288, "expand_power_bas": 288, "expand_power_exp": 288, "expand_trig": 288, "expans": [84, 218, 221, 278], "experiment": 104, "explan": [6, 13, 32], "explicit": 233, "explicitli": [26, 29], "expon": [52, 210], "exponenti": [68, 70, 288], "expr": [10, 62], "expr_free_symbol": 10, "express": [10, 12, 22, 25, 26, 28, 43, 74, 81, 84, 92, 95, 104, 118, 201, 210, 233, 261, 277, 283], "exprtool": 62, "extend": 221, "extens": [198, 210], "extra": 207, "extract": [24, 25, 27, 29], "facil": 44, "factor": [22, 199, 204, 210, 288], "factori": 199, "fallback": 10, "fals": 10, "fast": 65, "featur": [116, 185, 279], "fedora": 1, "field": [187, 192, 201, 204, 206, 210, 263, 265], "final": 280, "find": [22, 28, 206, 207], "find_execut": 10, "finit": [16, 41, 44, 198, 201, 204, 206, 210, 221, 231, 278], "first": [4, 10], "fix": 126, "flag": 10, "float": [12, 66], "flux": 266, "fma": 20, "fnode": 43, "forc": 134, "form": [22, 26, 29, 30, 31, 92, 99, 140, 233], "formal": [207, 213], "format": [6, 7, 10, 31], "formula": [87, 221], "fortran": [43, 211], "found": 28, "four": 129, "fourier": [65, 214], "fraction": [207, 210, 288], "frame": [10, 195], "framework": [120, 137], "free": [44, 199], "freedom": 131, "fresnel": 70, "from": [12, 25, 26, 27, 31, 210, 233], "from_": 10, "fu": 220, "fulli": 20, "fun_ev": 10, "func": [15, 283], "function": [6, 10, 12, 20, 22, 24, 26, 28, 29, 31, 43, 52, 61, 62, 68, 69, 70, 80, 81, 84, 85, 87, 92, 98, 102, 104, 106, 116, 141, 163, 166, 187, 188, 192, 197, 199, 201, 202, 207, 210, 211, 221, 224, 227, 228, 232, 259, 263, 287, 288], "further": [140, 280], "fuse": 20, "futil": 43, "futur": [74, 116, 126, 185], "fuzzi": 19, "g": [81, 84, 87, 221], "galoi": [45, 206], "gamma": [70, 113], "gammasimp": 288, "gate": 160, "gaussian": [145, 201, 202, 210], "gcd": [199, 204, 210], "gegenbau": 70, "gener": [3, 6, 7, 43, 52, 54, 201, 206, 230, 262, 267, 269], "geometr": 197, "geometri": [64, 74, 198], "get": [3, 5, 12, 22], "get_epsilon": 10, "get_kronecker_delta": 10, "get_seg": 10, "get_upper_degre": 10, "gf": 202, "git": [5, 33], "given": [28, 30], "glossari": 11, "gordan": 155, "gotcha": [12, 18, 126, 280], "gradient": [192, 263], "grai": 46, "groebner": [199, 204], "group": [44, 45, 47, 50, 52, 53, 181, 206], "grover": 161, "gruntz": 218, "gr\u00f6bner": 210, "gtk": 211, "guid": [6, 7, 21, 32, 136, 193, 264], "guidanc": [22, 24, 25, 26, 27, 28, 29, 30, 31], "guidelin": [6, 7], "ha": 140, "hadamard": 65, "hadamardproduct": 10, "handl": [66, 230], "handler": [10, 18], "hard": 3, "harmon": [70, 152, 177], "have": [10, 26, 30, 210], "head": 7, "help": 12, "helper": [166, 211], "hermit": 70, "heurist": 227, "hexagon": 74, "high": 113, "hilbert": 162, "hint": [29, 227, 228], "holonom": [80, 81, 82, 84, 85, 131], "homomorph": [198, 206], "hongguang": 220, "how": [4, 21, 32, 87, 195, 230], "hydrogen": 114, "hyperbol": 68, "hyperexpand": 288, "hypergeometr": [61, 70, 81, 84, 213, 221], "i": [4, 12, 28, 29, 87, 103, 140, 200, 211, 230, 282], "ideal": 198, "immut": [12, 96], "immutablematrix": 96, "immutablesparsematrix": 100, "implement": [18, 87, 192, 211, 221, 243, 244, 260, 263], "implic": 18, "implicitli": [22, 29], "import": 6, "improv": [38, 126], "impuls": 110, "includ": [24, 29, 31], "incompat": 4, "increas": 28, "increment": 221, "indefinit": 10, "independ": 29, "index": [44, 52, 233, 236], "indic": 221, "inequ": [24, 226, 229, 230], "inertia": [123, 141, 185], "infer": 92, "infinit": [26, 230], "inform": [227, 228], "initi": 29, "inner": 164, "input": [18, 230], "insert": 284, "inspect": 254, "instal": [1, 32, 33, 104, 286], "integ": [68, 201], "integr": [10, 29, 66, 70, 84, 86, 87, 88, 89, 116, 199, 206, 266, 278], "interact": [3, 90, 197], "interest": [24, 282], "interfac": [116, 185, 197, 231], "intermedi": 10, "intern": [83, 87, 89, 201, 204, 206, 224], "interpret": 18, "interrog": 26, "intersect": [65, 74], "interv": [28, 197], "introduc": [200, 201], "introduct": [12, 16, 35, 42, 43, 44, 52, 64, 74, 92, 126, 143, 181, 192, 194, 197, 198, 199, 206, 210, 265, 282], "introductori": [276, 281], "intuit": 218, "invari": 283, "invers": [12, 20, 68, 87], "is_": 18, "is_emptyset": 10, "issu": [116, 126, 140, 185, 284], "iter": [10, 219, 249], "jacobi": 70, "javascript": 211, "joint": [10, 120, 137, 231], "jointsmethod": 137, "julia": 211, "k": 202, "kane": [121, 130, 133, 134, 138, 140], "kei": [20, 143, 283], "keyword": 12, "kind": [15, 62], "kinemat": [190, 194], "kinematic_equ": 190, "kinet": 141, "known": 230, "kwarg": 140, "lagrang": [121, 130, 135, 139, 140], "lagrangian": 141, "laguerr": 70, "lambda": 10, "lambdaprint": 211, "lambdifi": [3, 10, 103, 250, 277], "laplac": 87, "laplace_transform": 10, "last": 4, "latex": [7, 104, 287], "latexprint": 211, "lcm": 199, "lead": 52, "legendr": 70, "level": 204, "lib": 211, "lie": [91, 227], "limit": [18, 24, 25, 86, 126, 216, 218, 278], "line": 75, "linear": [30, 84, 98, 116, 122, 140, 141, 181, 210], "link": 143, "linkag": 129, "list": [10, 12, 14, 22, 24], "literatur": [181, 205, 210], "live": 1, "local": 1, "locat": 261, "logarithm": [70, 288], "logcombin": 288, "logic": [3, 19, 92, 267, 270], "logo": 1, "long": 4, "longer": 10, "lookup": 87, "loos": 221, "low": 44, "lti": 112, "mac": 1, "main": 206, "make": [9, 26, 31], "managedproperti": 10, "manipul": [92, 98, 118, 203, 204, 207, 208, 230, 283], "mapl": 211, "markdown": 7, "mass": [123, 141, 266], "matadd": 10, "math": [7, 43], "mathemat": [6, 12, 22, 143], "mathematica": [10, 211], "mathieu": 70, "mathml": 287, "mathmlprint": 211, "mathrm": [104, 287], "matlab": 211, "matmul": 10, "matric": [10, 16, 27, 93, 94, 95, 96, 97, 98, 100, 113, 115, 233, 267, 271, 284], "matrix": [10, 27, 39, 95, 98, 99, 140, 231, 284], "max_degre": 10, "mdft": 10, "mechan": [10, 18, 107, 116, 119, 127, 136, 137, 138, 139, 140, 141, 142, 143, 144, 163, 231], "mechanics_print": 124, "median": 74, "medium": 147, "meijer": [81, 84, 87, 221], "mellin": 87, "memoiz": 251, "metaclass": 10, "method": [10, 16, 20, 27, 33, 121, 130, 133, 134, 135, 138, 139, 140, 211, 228, 230, 235, 261, 284], "metric": 10, "might": 31, "minim": [52, 206], "misc": [10, 38], "miscellan": [20, 68, 74, 252], "mistak": 211, "mix": 10, "mlatex": 124, "mod": 62, "mode": 197, "modul": [10, 111, 146, 185, 193, 198, 199, 200, 201, 204, 206, 207, 224, 227, 228, 230, 243], "modular": 204, "momenta": 141, "momentum": 141, "monomi": 207, "more": [179, 180, 218, 261, 282], "move": [10, 221], "mpmath": 33, "mpprint": 124, "mpq": 202, "mprint": 124, "mul": 62, "multi": 131, "multidimension": 62, "multipl": [22, 29, 84, 195, 206], "multipli": 20, "multivari": [204, 210], "multivariate_result": 10, "must": 27, "mutabl": 10, "m\u00f6biu": 65, "n": [10, 232, 233], "name": 50, "nan": 140, "narr": 7, "necessarili": 26, "need": 181, "new": [10, 261], "new_method": 140, "next": 285, "nilpot": 48, "nocond": 10, "node": 43, "non": 10, "nonlinear": 30, "nonminim": 130, "normal": [99, 210], "notat": 221, "note": [4, 20, 62, 74, 140, 218, 220, 280, 289], "nroot": 22, "ntheori": 102, "nullspac": 284, "number": [12, 39, 48, 62, 65, 66, 87, 102, 201, 206, 210, 267, 272], "numer": [20, 22, 28, 29, 31, 66, 84, 89, 103, 116, 143], "numpi": 98, "numsampl": 10, "object": [10, 15, 236], "octav": 211, "od": [29, 227, 229, 230], "old": [18, 201], "onli": [3, 24, 29, 230], "onlin": 126, "oo": 140, "oper": [10, 12, 84, 98, 154, 163, 165, 166, 187, 192, 195, 221, 232, 238, 260, 262, 263, 277, 284], "optic": [145, 146], "option": [3, 26, 29, 30, 31, 204], "order": [25, 39, 207, 218, 221], "ordinari": [29, 229, 230], "orient": [258, 261], "orient_new": 261, "orthogon": [70, 207, 263], "oscil": [152, 177], "other": [18, 20, 33, 81, 192, 261], "output": [14, 116, 230], "over": [89, 210, 219], "overview": [44, 52, 87], "p": [202, 206], "pair": 29, "pappu": 74, "paramet": [6, 25, 221, 230], "pars": [3, 31, 104], "parser": [10, 126], "partial": [207, 210, 229, 230], "particl": [123, 141, 167], "partit": [51, 249], "pass": 10, "past": 29, "pauli": 151, "pde": [228, 229, 230], "pdf": 1, "pendulum": 130, "per": 24, "perform": 38, "perhap": 22, "perimet": 266, "period": 24, "permut": [10, 53, 54], "philosophi": 181, "physic": [10, 113, 116, 127, 137, 138, 139, 140, 141, 142, 143, 144, 183, 185, 189, 192, 193, 194, 195, 267, 273], "piecewis": 68, "pitfal": 12, "pkgdata": 253, "place": 4, "plan": 230, "plane": [76, 87], "plot": [3, 10, 110, 156, 197], "plotgrid": 197, "point": [10, 20, 66, 77, 116, 185, 194, 260], "polar": [87, 148], "pole": 110, "poli": [10, 200, 201, 202, 209], "polici": 4, "polycycl": 52, "polycyclicgroup": 52, "polygon": [78, 89], "polyhedra": 89, "polyhedron": 55, "polynomi": [10, 22, 70, 84, 199, 201, 202, 203, 204, 206, 207, 208, 210, 229, 288], "polynomialr": 201, "polyr": 201, "polytop": 89, "possibl": [4, 26, 284], "potenti": [116, 140, 141, 185, 192, 263], "powdenest": 288, "power": [62, 213, 219, 282, 288], "powsimp": 288, "practic": [6, 7, 20], "preced": 211, "precis": 28, "predefin": 43, "predic": [18, 38, 39], "prefer": [7, 31], "prefix": 182, "preliminari": 286, "present": [44, 52], "pretti": [10, 211, 287], "pretty_symbologi": 10, "prettyform": 10, "prettyprint": 211, "prevent": 283, "preview": 211, "prime": 206, "print": [3, 10, 20, 43, 90, 116, 124, 185, 191, 211, 287], "print_cycl": 10, "printer": [3, 43, 211, 287], "privat": 10, "problem": [106, 206, 262], "process": 231, "product": [65, 164, 175, 232, 262], "productset": 10, "programmat": [25, 26], "properti": [10, 18, 198], "prufer": 56, "public": 4, "punctuat": 7, "purpos": 4, "put": 26, "pyglet": 197, "pytest": 240, "python": [12, 43], "pythoncodeprint": 211, "pythonprint": 211, "pyutil": 43, "q": 102, "qappli": 168, "qft": 169, "qq": 202, "qq_i": 202, "quadrilater": 262, "quantiti": [179, 181, 183, 261], "quantiz": 176, "quantum": [152, 163, 177], "quaternion": 35, "qubit": 170, "queri": 38, "question": 33, "quick": [277, 278, 280, 283, 284], "quotient": 202, "ramp": 110, "random": [62, 231], "randomindexedsymbol": 10, "randomis": 241, "randtest": 10, "ration": [12, 201, 202, 207, 210, 213, 227, 288], "rawmatrix": 10, "rcodeprint": 211, "read": 280, "real": [28, 201], "real_root": 22, "rebuild": 1, "recommend": [3, 7], "recurr": 229, "recurs": [217, 283], "reduc": [24, 210], "reduct": [24, 221], "redund": 10, "refer": [6, 18, 32, 35, 42, 45, 61, 62, 64, 74, 80, 87, 89, 95, 96, 98, 100, 102, 104, 119, 142, 148, 151, 181, 193, 195, 196, 197, 198, 202, 204, 206, 207, 208, 218, 220, 221, 224, 230, 243, 244, 264, 267], "referenc": 6, "referencefram": [185, 195], "refin": 40, "reidemeist": 44, "relat": [10, 12, 14, 18, 24, 62, 70, 92, 192, 195, 263], "releas": 4, "remaind": 204, "remind": 20, "renam": 10, "report": [22, 24, 25, 26, 27, 28, 29, 30, 31], "repres": [22, 26, 31, 87, 171, 201, 206], "represent": [81, 85, 181, 195, 201], "requir": [1, 4], "residu": 218, "respons": [110, 211], "restrict": 26, "result": [22, 24, 25, 26, 27, 28, 29, 30, 210], "return": [24, 29, 230], "rewrit": [20, 43, 212, 288], "riccati": 227, "riemann": 70, "rigid": 141, "rigidbodi": 123, "ring": [198, 201, 202], "roll": [132, 133, 134, 135], "root": [22, 28, 207], "rotat": 98, "rough": 143, "routin": 244, "row": 284, "rr": 202, "rref": 284, "rs_seri": 208, "rule": [220, 262], "run": [3, 5, 33, 242], "runtim": 104, "rust": 211, "sage": 3, "same": 27, "sampl": [6, 10], "satisfi": 24, "scalar": [192, 263, 265], "schreier": 44, "scipi": [28, 29], "search": 230, "second": 176, "section": 6, "see": [6, 62, 249, 262], "select": 29, "sentenc": 6, "sequenc": [56, 84, 204, 207, 216, 217], "seri": [84, 197, 208, 213, 214, 215, 218, 278], "server": 1, "session": 90, "set": [10, 15, 26, 29, 30, 39, 74, 195, 219, 230, 287], "set_potential_energi": 10, "setkind": 219, "setup": 5, "sever": 27, "shape": 284, "shor": 172, "should": [4, 103], "sign": [12, 280], "silenc": 10, "simpl": 210, "simplif": [20, 66, 92, 220, 288], "simplifi": [31, 43, 204, 222, 223, 288], "singl": [6, 12, 14, 24], "singleton": [62, 217, 219], "singular": [41, 106], "slow": 140, "smt": 211, "so": 103, "solenoid": [192, 263], "solut": [22, 25, 26, 27, 28, 29, 30, 31, 163, 230, 262], "solv": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 106, 199, 206, 229, 230, 289], "solver": [10, 29, 209, 225, 226, 227, 229, 230, 289], "solveset": [26, 230], "some": [10, 29, 143, 230], "sort": 62, "sourc": [3, 254], "space": [162, 181, 221], "spars": [100, 101, 201, 202, 204], "sparsematrix": [10, 100], "special": [12, 17, 43, 70, 207, 219, 288], "specif": [29, 43], "specifi": [25, 29, 197], "speed": [22, 26, 27, 30, 31, 116, 140], "spell": 7, "spheric": 70, "sphinx": 6, "spin": 173, "spline": 70, "sqrt": 12, "squar": [27, 199], "srepr": [211, 287], "standard": 44, "stat": [10, 231], "state": [154, 163, 166, 174], "static": 10, "statist": 3, "step": [110, 230], "stochast": 231, "stochasticprocess": 10, "stoke": 266, "str": 287, "string": [10, 18, 31, 277], "stringpict": 10, "strprinter": 211, "structur": [138, 139, 181, 224], "style": [6, 7], "sub": 103, "subexpress": 212, "subfield": 206, "subgroup": 44, "submodul": [10, 74], "subresult": 204, "subset": [57, 65], "substitut": [26, 28, 116, 185, 277], "subword": 52, "sum": 66, "summari": 6, "support": 210, "surfac": 266, "switch": 126, "symbol": [12, 18, 19, 20, 24, 25, 27, 62, 81, 140, 144, 196, 201, 207, 210, 230, 280, 282], "symbolicsystem": [125, 144], "symengin": 3, "sympi": [0, 1, 5, 6, 10, 12, 15, 16, 17, 24, 26, 30, 32, 33, 43, 85, 104, 143, 192, 201, 256, 259, 260, 263, 277, 279, 282], "sympifi": [10, 62], "syntax": 43, "system": [18, 24, 28, 30, 110, 131, 144, 178, 180, 181, 184, 227, 229, 260, 261, 263, 265], "syzygi": 198, "tabl": [87, 92, 221], "technic": 4, "tensor": [10, 58, 70, 175, 234, 237, 238], "tensorhead": 10, "tensorindextyp": 10, "tensorsymmetri": 10, "tensortyp": 10, "term": [61, 210, 212, 218], "test": [3, 5, 10, 59, 92, 210, 239, 241, 242, 284], "theanocod": 10, "theorem": [74, 87, 266], "theoret": 65, "theori": [39, 42, 102, 267, 272], "thi": [87, 230], "third": 262, "three": [19, 74], "through": 283, "time": 255, "tip": [20, 277, 278, 280, 283, 284], "todd": 44, "todo": 89, "tone": 7, "tool": [43, 101], "topic": [17, 116, 185, 267, 274], "trace": 10, "tradeoff": 22, "transform": [65, 87, 89, 104, 261], "transolv": 230, "travers": [10, 62], "tree": [43, 201, 211, 283], "trig": 12, "trigonometr": [68, 70, 220, 288], "trigsimp": 288, "true": 140, "truss": [107, 108], "truth": [74, 92], "try": 4, "tupl": [10, 12, 14, 24, 207], "tutori": [32, 224, 276, 281], "two": 280, "type": [7, 14, 24, 43, 70, 187, 230, 231], "ubuntu": 1, "ufuncifi": 103, "uncollect": 52, "understand": 283, "undocu": 204, "unevalu": 29, "unicod": [10, 287], "unifi": 201, "unit": [180, 181, 182, 184], "univari": [204, 210], "up": [26, 27, 30, 31, 287], "us": [3, 7, 10, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 43, 65, 86, 87, 103, 106, 135, 140, 141, 195, 197, 208, 230, 261], "usag": [74, 126, 144, 201, 262], "user": [143, 224, 227, 228], "usual": 27, "util": [10, 43, 59, 60, 79, 98, 149, 206, 229, 248, 255, 267, 275], "v": [12, 19, 201], "valid": 87, "valu": [14, 19, 31], "valuat": 206, "variabl": [12, 24, 29, 31, 197, 231, 261], "variat": 249, "variou": [10, 210], "vector": [27, 52, 136, 185, 187, 189, 192, 193, 194, 195, 204, 256, 257, 259, 260, 261, 263, 264, 265, 266], "veloc": 194, "verifi": [25, 266], "versin": 20, "version": 10, "view": 1, "virtual": 5, "visual": [74, 143], "volum": 266, "walk": 283, "walsh": 65, "warn": [10, 247], "wave": 150, "wavefunct": 114, "we": 230, "weight": 41, "welcom": 32, "wester": 210, "what": [4, 140, 200, 201, 230, 282, 285], "when": [4, 31, 87], "where": 230, "which": [24, 26, 30, 103, 211], "why": [230, 282], "wigner": 196, "window": [1, 197], "within": 12, "without": [22, 29], "word": [44, 52], "work": [25, 27, 29, 74, 210], "write": [6, 7, 20], "wrong": 230, "x": 202, "xstr": 10, "you": 31, "your": 26, "zero": [25, 26, 31, 110, 204, 210, 284], "zeta": 70, "zoo": 140, "zz": 202, "zz_i": 202}})