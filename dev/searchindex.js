Search.setIndex({"alltitles": {"(Optional) Configure Git Settings": [[9, "optional-configure-git-settings"]], "1. Completing Dynamics Online": [[22, "completing-dynamics-online"]], "1. Single-Sentence Summary": [[4, "single-sentence-summary"]], "1. Symbolic linearization with A_and_B=True is slow": [[27, "symbolic-linearization-with-a-and-b-true-is-slow"]], "1. Using the Linearizer class directly:": [[27, "using-the-linearizer-class-directly"], [27, "id2"]], "2. Explanation Section": [[4, "explanation-section"]], "2. Fixing Issues": [[22, "fixing-issues"]], "2. The linearized form has nan, zoo, or oo as matrix elements": [[27, "the-linearized-form-has-nan-zoo-or-oo-as-matrix-elements"]], "2. Using the linearize class method:": [[27, "using-the-linearize-class-method"], [27, "id3"]], "3. Examples Section": [[4, "examples-section"]], "3. Switching to an AST": [[22, "switching-to-an-ast"]], "4. Parameters Section": [[4, "parameters-section"]], "5. See Also Section": [[4, "see-also-section"]], "6. References Section": [[4, "references-section"]], "A Direct Method Using SymPy Matrices": [[39, "a-direct-method-using-sympy-matrices"]], "A More Interesting Example": [[291, "a-more-interesting-example"]], "A Note about Equations": [[298, "a-note-about-equations"]], "A Note on Dependent Coordinates and Speeds": [[27, null]], "A Simple Musculotendon Model": [[18, "a-simple-musculotendon-model"]], "A four bar linkage": [[304, null]], "A rolling disc": [[308, null]], "A rolling disc using Lagrange\u2019s Method": [[311, null]], "A rolling disc, with Kane\u2019s method": [[309, null]], "A rolling disc, with Kane\u2019s method and constraint forces": [[310, null]], "AGCA - Algebraic Geometry and Commutative Algebra Module": [[208, null]], "ANTLR Backend": [[130, "antlr-backend"]], "ANTLR \\mathrm{\\LaTeX} Parser Caveats": [[130, "antlr-mathrm-latex-parser-caveats"]], "API Reference": [[58, "api-reference"], [253, "module-sympy.utilities.autowrap"], [254, "module-sympy.utilities.codegen"], [276, null]], "API reference": [[115, "api-reference"], [115, "id39"]], "ASCII Pretty Printer": [[296, "ascii-pretty-printer"]], "AST Type Tree": [[69, "ast-type-tree"]], "About Holonomic Functions": [[106, null]], "Abstract": [[133, null], [139, null], [143, null], [145, null], [151, null], [161, null], [178, null], [203, null]], "Abstract Domains": [[212, "abstract-domains"]], "Acceleration of Points": [[21, "acceleration-of-points"], [32, "acceleration-of-points"]], "Accessing Rows and Columns": [[293, "accessing-rows-and-columns"]], "Accuracy and error handling": [[92, "accuracy-and-error-handling"]], "Activation (Docstrings)": [[131, null]], "Activation Dynamics": [[18, "activation-dynamics"]], "Actuator (Docstrings)": [[148, null]], "Actuators": [[18, "actuators"]], "Add Tests": [[11, "add-tests"]], "Add your name and email address to the .mailmap file.": [[11, "add-your-name-and-email-address-to-the-mailmap-file"]], "Adding the deprecation to the code": [[3, "adding-the-deprecation-to-the-code"]], "Addition and Multiplication": [[110, "addition-and-multiplication"]], "Additional Tips": [[43, "additional-tips"]], "Advanced Expression Manipulation": [[292, null]], "Advanced Functionality": [[21, "advanced-functionality"]], "Advanced Interfaces": [[21, "advanced-interfaces"], [32, "advanced-interfaces"]], "Advanced Methods": [[293, "advanced-methods"]], "Advanced Usage": [[14, "advanced-usage"]], "Advanced factoring over finite fields": [[220, "advanced-factoring-over-finite-fields"]], "Aesara": [[129, "aesara"]], "Aesara Code printing": [[221, "module-sympy.printing.aesaracode"]], "Airy Functions": [[96, "airy-functions"]], "Algebraic Solution With Root Multiplicities": [[48, "algebraic-solution-with-root-multiplicities"]], "Algebraic Solution Without Root Multiplicities": [[48, "algebraic-solution-without-root-multiplicities"]], "Algebraic equations": [[239, "algebraic-equations"]], "Algebraic number fields": [[211, "algebraic-number-fields"], [216, "algebraic-number-fields"]], "Algebraically dependent generators": [[211, "algebraically-dependent-generators"]], "Algebras": [[61, null]], "Algorithms (sympy.codegen.algorithms)": [[69, "module-sympy.codegen.algorithms"]], "Alternative Representation": [[36, "alternative-representation"]], "Alternatives to Consider": [[48, "alternatives-to-consider"], [50, "alternatives-to-consider"], [51, "alternatives-to-consider"], [53, "alternatives-to-consider"], [54, "alternatives-to-consider"], [55, "alternatives-to-consider"], [56, "alternatives-to-consider"]], "Alternatives to consider": [[52, "alternatives-to-consider"]], "An example": [[196, "an-example"], [231, "an-example"]], "An in-depth example: Pappus\u2019 Hexagon Theorem": [[100, "an-in-depth-example-pappus-hexagon-theorem"]], "Anaconda": [[59, "anaconda"]], "Analytic Solutions": [[178, "analytic-solutions"]], "Angular Acceleration": [[35, "angular-acceleration"]], "Angular Momentum": [[28, "angular-momentum"]], "Angular Velocity": [[35, "angular-velocity"]], "Anticommutator": [[168, null]], "Appell sequences": [[217, "appell-sequences"]], "Applications of Vector Integrals": [[275, null]], "Applying assumptions to string inputs": [[41, "applying-assumptions-to-string-inputs"]], "Applying the Integral Theorems": [[113, "applying-the-integral-theorems"]], "Applying the Operators": [[231, "applying-the-operators"]], "Approximate Numeric Solution With Root Multiplicities": [[48, "approximate-numeric-solution-with-root-multiplicities"]], "Arch": [[135, "module-sympy.physics.continuum_mechanics.Arch"], [139, "arch"]], "Arch (Docstrings)": [[135, null]], "Args Invariants": [[14, "args-invariants"]], "Arithmetic with module elements": [[216, "arithmetic-with-module-elements"]], "As elements of finitely-generated modules": [[216, "as-elements-of-finitely-generated-modules"]], "As number field elements": [[216, "as-number-field-elements"]], "Ask": [[62, null]], "Assume": [[63, null]], "Assumptions": [[41, null], [43, "assumptions"], [64, null]], "Assumptions predicates for the (old) assumptions": [[41, "id28"]], "Attributes of Collector": [[78, "attributes-of-collector"]], "Attributes of CosetTable": [[70, "attributes-of-cosettable"]], "Attributes of PolycyclicGroup": [[78, "attributes-of-polycyclicgroup"]], "Authors": [[206, "authors"]], "Auto-Rebuild with the Live Server": [[8, "auto-rebuild-with-the-live-server"]], "Autolev Parser": [[22, null]], "Autowrap": [[2, "autowrap"], [69, "autowrap"]], "Autowrap Module": [[253, null]], "Available Entities": [[100, "available-entities"]], "Avoid Manipulating Expressions as Strings": [[14, "avoid-manipulating-expressions-as-strings"]], "Avoid Storing Extra Attributes on an Object": [[14, "avoid-storing-extra-attributes-on-an-object"]], "Avoid String Inputs": [[14, "avoid-string-inputs"]], "Avoid Too Much Automatic Evaluation": [[14, "avoid-too-much-automatic-evaluation"]], "Avoid simplify()": [[14, "avoid-simplify"]], "Avoiding Infinite Recursion from Assumptions Handlers": [[14, "avoiding-infinite-recursion-from-assumptions-handlers"]], "B-Splines": [[96, "b-splines"]], "Backends": [[207, "backends"]], "Background": [[27, "background"]], "Base Class Reference": [[68, "module-sympy.categories"], [90, "base-class-reference"]], "Base Rings": [[208, "base-rings"]], "Basic Implementation details": [[269, null]], "Basic Manipulation": [[124, "basic-manipulation"]], "Basic Methods": [[293, "basic-methods"]], "Basic Operations": [[286, null], [293, "basic-operations"]], "Basic Sets": [[229, "module-sympy.sets.sets"]], "Basic Usage": [[14, "basic-usage"]], "Basic concepts": [[209, "basic-concepts"]], "Basic functionality": [[209, "basic-functionality"]], "Basic functionality of the module": [[209, null]], "Basic polynomial manipulation functions": [[217, "basic-polynomial-manipulation-functions"]], "Basic usage of domains": [[211, "basic-usage-of-domains"]], "Basics": [[92, "basics"], [276, "basics"], [277, null]], "Basics for Writing Tests": [[12, "basics-for-writing-tests"]], "Be Careful Comparing and Sorting Symbolic Objects": [[14, "be-careful-comparing-and-sorting-symbolic-objects"]], "Beam": [[137, "beam"], [139, "beam"]], "Beam (Docstrings)": [[136, null]], "Bessel Type Functions": [[96, "module-sympy.functions.special.bessel"]], "Best Practices": [[14, null]], "Best Practices for Writing Docstrings": [[4, "best-practices-for-writing-docstrings"]], "Best Practices for Writing Documentation": [[5, "best-practices-for-writing-documentation"]], "Best Practices for eval()": [[43, "best-practices-for-eval"]], "Beware Copying and Pasting Results": [[55, "beware-copying-and-pasting-results"]], "Bibliography": [[70, "bibliography"], [78, "bibliography"]], "Biceps": [[299, "biceps"]], "Biomechanical Model Example": [[299, null]], "Biomechanics": [[19, null]], "Biomechanics API Reference": [[133, null]], "Biomechanics Tutorials": [[300, null]], "Block Matrices": [[120, "block-matrices"]], "Bode Plot": [[142, "bode-plot"]], "Bodies": [[155, "bodies"]], "Bodies, Inertias, Loads & Other Functions (Docstrings)": [[155, null]], "Boolean functions": [[118, "boolean-functions"]], "Boolean or Relational": [[37, "boolean-or-relational"]], "Branch names": [[11, "branch-names"]], "Build the Docs": [[8, "build-the-docs"]], "Building the Documentation": [[2, "building-the-documentation"], [8, null]], "C code printers": [[221, "module-sympy.printing.c"]], "C specific AST nodes (sympy.codegen.cnodes)": [[69, "module-sympy.codegen.cnodes"]], "C utilities (sympy.codegen.cutils)": [[69, "module-sympy.codegen.cutils"]], "C++ code printers": [[221, "module-sympy.printing.cxx"]], "C++ specific AST nodes (sympy.codegen.cxxnodes)": [[69, "module-sympy.codegen.cxxnodes"]], "CC": [[212, "cc"]], "Cable": [[138, "module-sympy.physics.continuum_mechanics.cable"], [139, "cable"]], "Cable (Docstrings)": [[138, null]], "Calculate the Eigenvalues": [[302, "calculate-the-eigenvalues"]], "Calculation of Flux": [[275, "calculation-of-flux"]], "Calculation of Perimeter, Surface Area, and Volume": [[275, "calculation-of-perimeter-surface-area-and-volume"]], "Calculation of mass of a body": [[275, "calculation-of-mass-of-a-body"]], "Calculus": [[65, "calculus"], [67, null], [287, null]], "Calling sympy.stats.StochasticProcess.distribution with RandomIndexedSymbol": [[13, "calling-sympy-stats-stochasticprocess-distribution-with-randomindexedsymbol"]], "Capitalization": [[5, "capitalization"]], "Cartesian Operators and States": [[169, null]], "Category Theory": [[68, null]], "Caveats": [[60, "caveats"]], "Change in joint attachment point argument": [[13, "change-in-joint-attachment-point-argument"]], "Chebyshev Polynomials": [[96, "chebyshev-polynomials"]], "Checking the type of vector field": [[201, "checking-the-type-of-vector-field"]], "Checklist": [[3, "checklist"]], "Checklist for Contributions": [[11, "checklist-for-contributions"]], "Choice of Coordinates and Speeds": [[21, "choice-of-coordinates-and-speeds"]], "Choosing a domain": [[211, "choosing-a-domain"]], "Choosing a domain for a Poly": [[211, "choosing-a-domain-for-a-poly"]], "Choosing generators": [[211, "choosing-generators"]], "Circuit Plot": [[171, null]], "Citing SymPy": [[0, null]], "Class Reference": [[216, "class-reference"]], "Classes": [[242, "classes"]], "Classes and functions for rewriting expressions (sympy.codegen.rewriting)": [[69, "module-sympy.codegen.rewriting"]], "Classes for abstract syntax trees (sympy.codegen.ast)": [[69, "module-sympy.codegen.ast"]], "Classical Mechanics": [[23, null]], "Classical remainder sequence": [[214, "classical-remainder-sequence"]], "Classification of SymPy objects": [[38, null]], "Clebsch-Gordan Coefficients": [[170, null]], "Co-Author": [[11, "co-author"]], "Code": [[5, "code"]], "Code Generation": [[2, "code-generation"], [69, null], [276, "code-generation"], [278, null]], "Code Output": [[21, "code-output"]], "Code Printers": [[2, "code-printers"]], "Code Quality": [[11, "code-quality"]], "Code Quality Checks": [[12, "code-quality-checks"]], "Code printers (sympy.printing)": [[69, "code-printers-sympy-printing"]], "CodePrinter": [[221, "module-sympy.printing.codeprinter"]], "Codegen": [[254, null]], "Codegen (sympy.utilities.codegen)": [[69, "codegen-sympy-utilities-codegen"]], "Columnspace": [[293, "columnspace"]], "Combinatorial": [[93, null]], "Combinatorics": [[75, null]], "Combining predicates with or": [[41, "combining-predicates-with-or"]], "Commit the changes": [[11, "commit-the-changes"]], "Common": [[65, "common"]], "Common Issues": [[21, "common-issues"], [32, "common-issues"]], "Common Subexpression Detection and Collection": [[222, "common-subexpression-detection-and-collection"]], "Common mistakes": [[221, "common-mistakes"]], "Commutator": [[172, null]], "Compatibility with matrices": [[243, "compatibility-with-matrices"]], "Complete Examples": [[43, "complete-examples"]], "Complex Functions": [[94, "complex-functions"]], "Complex Roots": [[48, "complex-roots"]], "Composition with polynomials": [[110, "composition-with-polynomials"]], "Compound Distribution": [[241, "compound-distribution"]], "Compound Sequences": [[227, "compound-sequences"]], "Compound Sets": [[229, "compound-sets"]], "Compression and Standardization": [[70, "compression-and-standardization"]], "Computation of Collected Word": [[78, "computation-of-collected-word"]], "Computation of Exponent Vector": [[78, "computation-of-exponent-vector"]], "Computation of Leading Exponent": [[78, "computation-of-leading-exponent"]], "Computation of Minimal Uncollected Subword": [[78, "computation-of-minimal-uncollected-subword"]], "Computation of Polycyclic Presentation": [[78, "computation-of-polycyclic-presentation"]], "Computation of Subword Index": [[78, "computation-of-subword-index"]], "Computing Integrals using Meijer G-Functions": [[113, null]], "Computing reduced Gr\u00f6bner bases": [[220, "computing-reduced-grobner-bases"]], "Computing with automatic field extensions": [[220, "computing-with-automatic-field-extensions"]], "Conclusion": [[299, "conclusion"]], "Concrete": [[87, null]], "Concrete Class Reference": [[87, "concrete-class-reference"]], "Concrete Functions Reference": [[87, "concrete-functions-reference"]], "Condition Sets": [[229, "module-sympy.sets.conditionset"]], "Conditions of Convergence for Integral (1)": [[113, "conditions-of-convergence-for-integral-1"]], "Conditions of Convergence for Integral (2)": [[113, "conditions-of-convergence-for-integral-2"]], "Configuration": [[214, "module-sympy.polys.polyconfig"]], "Configure Your Name and Email in Git": [[9, "configure-your-name-and-email-in-git"]], "Conservative and Solenoidal fields": [[33, "conservative-and-solenoidal-fields"], [272, "conservative-and-solenoidal-fields"]], "Consistency Checks": [[12, "consistency-checks"]], "Constants": [[173, null], [196, "constants"]], "Constructing a presentation for a subgroup": [[70, "constructing-a-presentation-for-a-subgroup"]], "Constructing array expressions from index-explicit forms": [[243, "constructing-array-expressions-from-index-explicit-forms"]], "Construction of a Free Group": [[70, "construction-of-a-free-group"]], "Construction of words": [[70, "construction-of-words"]], "Contents": [[64, "contents"], [75, "contents"], [95, "contents"], [108, "contents"], [114, "contents"], [213, "contents"], [225, "contents"], [235, "contents"], [244, "contents"]], "Continuous Types": [[241, "continuous-types"]], "Continuum Mechanics": [[139, null]], "Contribute": [[218, "contribute"]], "Contributing": [[6, null], [58, "contributing"]], "Control": [[141, null], [143, null]], "Control API": [[144, null]], "Control Package Examples": [[46, null]], "Control System Plots": [[142, null]], "Conversion between quantities": [[198, "module-sympy.physics.units.util"]], "Convert to a linear combination of Meijer G-functions": [[110, "convert-to-a-linear-combination-of-meijer-g-functions"]], "Convert to a linear combination of hypergeometric functions": [[110, "convert-to-a-linear-combination-of-hypergeometric-functions"]], "Convert to expressions": [[110, "convert-to-expressions"]], "Convert to holonomic sequence": [[110, "convert-to-holonomic-sequence"]], "Converting Meijer G-functions": [[107, "converting-meijer-g-functions"]], "Converting Strings to SymPy Expressions": [[286, "converting-strings-to-sympy-expressions"]], "Converting elements between different domains": [[211, "converting-elements-between-different-domains"]], "Converting hypergeometric functions": [[107, "converting-hypergeometric-functions"]], "Converting other representations to holonomic": [[107, null]], "Converting symbolic expressions": [[107, "converting-symbolic-expressions"]], "Convolution": [[91, "convolution"]], "Convolution using Fast Fourier Transform": [[91, "convolution-using-fast-fourier-transform"]], "Convolution using Fast Walsh Hadamard Transform": [[91, "convolution-using-fast-walsh-hadamard-transform"]], "Convolution using Number Theoretic Transform": [[91, "convolution-using-number-theoretic-transform"]], "Convolutions": [[91, "module-sympy.discrete.convolutions"]], "Coordinate Modes": [[207, "coordinate-modes"]], "Coordinate Systems": [[274, "coordinate-systems"]], "Coordinate Systems and Vectors": [[269, "coordinate-systems-and-vectors"]], "Coordinate Variables": [[270, "coordinate-variables"]], "Core": [[88, null]], "Core operators no longer accept non-Expr args": [[13, "core-operators-no-longer-accept-non-expr-args"]], "Coset Enumeration: The Todd-Coxeter Algorithm": [[70, "coset-enumeration-the-todd-coxeter-algorithm"]], "CosetTable": [[70, "cosettable"]], "Covering Product": [[91, "covering-product"]], "Create a Function That Can Be Solved With SciPy": [[54, "create-a-function-that-can-be-solved-with-scipy"]], "Create a GitHub Account": [[9, "create-a-github-account"]], "Create a new branch": [[11, "create-a-new-branch"]], "Creating Matrices": [[124, "creating-matrices"]], "Creating a Custom Function": [[43, "creating-a-custom-function"]], "Creating an indefinite Integral with an Eq argument": [[13, "creating-an-indefinite-integral-with-an-eq-argument"]], "Credits and Copyright": [[206, "credits-and-copyright"]], "Cross-Referencing": [[4, "cross-referencing"]], "Cryptography": [[89, null]], "Curl": [[33, "curl"], [272, "curl"]], "Curve (Docstrings)": [[132, null]], "Curves": [[97, null]], "Custom": [[18, "custom"]], "Custom SymPy Objects": [[14, "custom-sympy-objects"]], "DMP representation": [[211, "dmp-representation"]], "DUP representation": [[211, "dup-representation"]], "Dagger": [[174, null]], "Debian/Ubuntu": [[8, "debian-ubuntu"]], "Debugging": [[1, null]], "Debugging Test Failures on GitHub Actions": [[12, "debugging-test-failures-on-github-actions"]], "Declaration of Coordinates & Speeds": [[302, "declaration-of-coordinates-speeds"]], "Declaration of System\u2019s Parameters": [[302, "declaration-of-system-s-parameters"]], "Decorator": [[255, null]], "Define Forces": [[299, "define-forces"], [303, "define-forces"]], "Define Inertia": [[299, "define-inertia"]], "Define Kinematics": [[299, "define-kinematics"], [303, "define-kinematics"]], "Define Variables": [[299, "define-variables"], [303, "define-variables"]], "Define relevant points for the system": [[302, "define-relevant-points-for-the-system"]], "Defining Automatic Evaluation with eval()": [[43, "defining-automatic-evaluation-with-eval"]], "Defining Derivatives": [[55, "defining-derivatives"]], "Defining Symbols": [[14, "defining-symbols"]], "Definition": [[43, "definition"], [43, "id2"], [43, "id4"], [106, "definition"]], "Deleting and Inserting Rows and Columns": [[293, "deleting-and-inserting-rows-and-columns"]], "Deleting junk files": [[11, "deleting-junk-files"]], "Dense Matrices": [[119, null]], "Dense polynomials": [[212, "dense-polynomials"]], "Dependencies": [[2, null]], "Deprecate Eq.rewrite(Add)": [[13, "deprecate-eq-rewrite-add"]], "Deprecate markers, annotations, fill, rectangles of the Plot class": [[13, "deprecate-markers-annotations-fill-rectangles-of-the-plot-class"]], "Deprecate the DMP.rep attribute.": [[13, "deprecate-the-dmp-rep-attribute"]], "Deprecate the pkgdata module": [[13, "deprecate-the-pkgdata-module"]], "Deprecated Classes (Docstrings)": [[149, null]], "Deprecated matrix mixin classes": [[13, "deprecated-matrix-mixin-classes"]], "Deprecated mechanics Body class": [[13, "deprecated-mechanics-body-class"]], "Deprecated mechanics JointsMethod": [[13, "deprecated-mechanics-jointsmethod"]], "Deprecation Policy": [[3, null]], "Depth of Polycyclic generator": [[78, "depth-of-polycyclic-generator"]], "Derivatives": [[287, "derivatives"]], "Derivatives by array": [[242, "derivatives-by-array"]], "Derivatives of Vectors": [[36, "derivatives-of-vectors"]], "Derivatives with Multiple Frames": [[36, "derivatives-with-multiple-frames"]], "Determinant": [[293, "determinant"]], "Deutils (Utilities for solving ODE\u2019s and PDE\u2019s)": [[239, "deutils-utilities-for-solving-ode-s-and-pde-s"]], "Developers Notes": [[88, "developers-notes"]], "Development Dependencies": [[2, "development-dependencies"]], "Development Workflow Process": [[11, null]], "Diagonal operator": [[242, "diagonal-operator"]], "Diagram Drawing": [[68, "module-sympy.categories.diagram_drawing"]], "Dictionaries": [[16, "dictionaries"]], "Dictionary (roots)": [[48, "dictionary-roots"]], "Differential Geometry": [[90, null]], "Differentiating": [[21, "differentiating"]], "Differentiation": [[43, "differentiation"]], "Dimensional analysis": [[194, "dimensional-analysis"]], "Dimensions": [[196, "dimensions"]], "Dimensions and dimension systems": [[193, null]], "Diophantine": [[234, null]], "Diophantine Equation Can be Expressed as Expression That Equals Zero": [[51, "diophantine-equation-can-be-expressed-as-expression-that-equals-zero"]], "Diophantine Equations (DEs)": [[239, "diophantine-equations-des"], [240, "diophantine-equations-des"]], "Diophantine equations": [[234, "diophantine-equations"]], "Dirac Delta and Related Discontinuous Functions": [[96, "dirac-delta-and-related-discontinuous-functions"]], "Directional Derivative": [[272, "directional-derivative"]], "Discrete": [[91, null]], "Discrete Types": [[241, "discrete-types"]], "Dispersion of Polynomials": [[217, "dispersion-of-polynomials"]], "Divergence": [[33, "divergence"], [272, "divergence"]], "Divisibility": [[209, "divisibility"]], "Divisibility of polynomials": [[209, "divisibility-of-polynomials"]], "Division": [[209, "division"]], "Do Not Simplify Solutions": [[57, "do-not-simplify-solutions"]], "Docker": [[8, "docker"], [8, "id2"], [8, "id3"]], "Docstrings Style Guide": [[4, null]], "Docstrings for Classes that are Mathematical Functions": [[4, "docstrings-for-classes-that-are-mathematical-functions"]], "Docstrings for basic field functions": [[201, null]], "Doctests": [[12, "doctests"]], "Documentation": [[7, "documentation"], [11, "documentation"]], "Documentation Style Guide": [[5, null]], "Documentation using Markdown": [[5, "documentation-using-markdown"]], "Documenting a deprecation": [[3, "documenting-a-deprecation"]], "Domain constructors": [[217, "domain-constructors"]], "Domain elements vs sympy expressions": [[211, "domain-elements-vs-sympy-expressions"]], "Domains": [[212, "domains"]], "Don\u2019t Denest Collections": [[14, "don-t-denest-collections"]], "Don\u2019t Hardcode Symbol Names in Python Functions": [[14, "don-t-hardcode-symbol-names-in-python-functions"]], "Don\u2019t Overwrite __eq__": [[14, "don-t-overwrite-eq"]], "Dot": [[296, "dot"]], "Double Equals Signs": [[16, "double-equals-signs"]], "Duffing Oscillator with a Pendulum": [[303, null]], "Dyadic": [[32, "dyadic"]], "Dyadics": [[269, "dyadics"]], "ECM function": [[128, "ecm-function"]], "EX": [[212, "ex"]], "Easy Cases: Fully Symbolic or Fully Evaluated": [[43, "easy-cases-fully-symbolic-or-fully-evaluated"]], "Eigenvalues, Eigenvectors, and Diagonalization": [[293, "eigenvalues-eigenvectors-and-diagonalization"]], "Elastic Tendon Dynamics": [[18, "elastic-tendon-dynamics"]], "Elementary": [[94, null]], "Elementary Sequences": [[227, "elementary-sequences"]], "Elementary Sets": [[229, "elementary-sets"]], "Ellipses": [[98, null]], "Elliptic integrals": [[96, "module-sympy.functions.special.elliptic_integrals"]], "Empty List": [[37, "empty-list"]], "Ensure Consistent Formatting From solve()": [[57, "ensure-consistent-formatting-from-solve"]], "Ensure the Root Found is in a Given Interval": [[54, "ensure-the-root-found-is-in-a-given-interval"]], "Entities": [[99, null]], "Enumeration": [[93, "enumeration"]], "Enumerative": [[256, null]], "Equals Signs (=)": [[16, "equals-signs"]], "Equals signs": [[289, "equals-signs"]], "Equation with quantities": [[194, "equation-with-quantities"]], "Equations Which Have a Closed-Form Solution, and SymPy Cannot Solve": [[52, "equations-which-have-a-closed-form-solution-and-sympy-cannot-solve"], [56, "equations-which-have-a-closed-form-solution-and-sympy-cannot-solve"]], "Equations With No Closed-Form Solution": [[48, "equations-with-no-closed-form-solution"], [52, "equations-with-no-closed-form-solution"], [55, "equations-with-no-closed-form-solution"]], "Equations With No Solution": [[51, "equations-with-no-solution"], [53, "equations-with-no-solution"], [55, "equations-with-no-solution"]], "Equations With no Closed-Form Solution": [[57, "equations-with-no-closed-form-solution"]], "Equations With no Solution": [[54, "equations-with-no-solution"]], "Equations of Motion": [[299, "equations-of-motion"]], "Error Functions and Fresnel Integrals": [[96, "module-sympy.functions.special.error_functions"]], "Essential Classes": [[200, null]], "Essential Classes in sympy.vector (docstrings)": [[265, null]], "Essential Functions (Docstrings)": [[202, null]], "Essential Functions in sympy.vector (docstrings)": [[268, null]], "Euclidean domains": [[209, "euclidean-domains"]], "Evaluate the System Differential Equations": [[299, "evaluate-the-system-differential-equations"]], "Evaluating Expressions with Floats and Rationals": [[16, "evaluating-expressions-with-floats-and-rationals"]], "Exact Numeric Solution With Root Multiplicities": [[48, "exact-numeric-solution-with-root-multiplicities"]], "Exact Rational Numbers vs. Floats": [[14, "exact-rational-numbers-vs-floats"]], "Example": [[135, "example"]], "Example 1": [[46, "example-1"], [137, "example-1"]], "Example 10": [[137, "example-10"]], "Example 11": [[137, "example-11"]], "Example 2": [[46, "example-2"], [137, "example-2"]], "Example 3": [[46, "example-3"], [137, "example-3"]], "Example 4": [[46, "example-4"], [137, "example-4"]], "Example 5": [[46, "example-5"], [137, "example-5"]], "Example 6": [[137, "example-6"]], "Example 7": [[137, "example-7"]], "Example 8": [[137, "example-8"]], "Example 9": [[137, "example-9"]], "Example Usage": [[100, "example-usage"]], "Example of Custom Printer": [[221, "example-of-custom-printer"]], "Example of Custom Printing Method": [[221, "example-of-custom-printing-method"]], "Example of Finding the Roots of a Polynomial Algebraically": [[48, "example-of-finding-the-roots-of-a-polynomial-algebraically"]], "Example of Numerically Solving an Equation": [[54, "example-of-numerically-solving-an-equation"]], "Example of Solving a Diophantine Equation": [[51, "example-of-solving-a-diophantine-equation"]], "Example of a good commit message": [[11, "example-of-a-good-commit-message"]], "Example: Continued Fractions": [[297, "example-continued-fractions"]], "Examples": [[36, "examples"], [36, "id1"], [43, "examples"], [43, "id3"], [43, "id5"], [50, "examples"], [60, "examples"], [88, "examples"], [88, "id52"], [112, "examples"], [115, "examples"], [115, "id38"], [128, "examples"], [128, "id83"], [137, "examples"], [145, "examples"], [163, "examples"], [195, "examples"], [220, "examples"], [228, "examples"], [228, "id3"], [241, "examples"], [242, "examples"], [243, "examples"], [246, "examples"]], "Examples from Wester\u2019s Article": [[220, null]], "Examples of Solving a System of Equations Algebraically": [[56, "examples-of-solving-a-system-of-equations-algebraically"]], "Exceptions": [[214, "exceptions"]], "Exceptions and Warnings": [[257, null]], "Exercises": [[295, "exercises"]], "Expanding": [[222, "expanding"]], "Expanding expressions and factoring back": [[220, "expanding-expressions-and-factoring-back"]], "Experimental \\mathrm{\\LaTeX} Parsing": [[130, "experimental-mathrm-latex-parsing"]], "Explanations": [[17, null], [58, "explanations"]], "Explicitly Represent Infinite Sets of Possible Solutions": [[52, "explicitly-represent-infinite-sets-of-possible-solutions"]], "Exponential": [[94, "exponential"]], "Exponential, Logarithmic and Trigonometric Integrals": [[96, "exponential-logarithmic-and-trigonometric-integrals"]], "Exponentials and logarithms": [[297, "exponentials-and-logarithms"]], "Expression (factor)": [[48, "expression-factor"]], "Expression Manipulation (Docstrings)": [[150, null]], "Expression domain": [[211, "expression-domain"]], "Expression of quantities in different coordinate systems": [[270, "expression-of-quantities-in-different-coordinate-systems"]], "Extending The Hypergeometric Tables": [[231, "extending-the-hypergeometric-tables"]], "Extra polynomial manipulation functions": [[217, "extra-polynomial-manipulation-functions"]], "Extract Elements From the Solution": [[53, "extract-elements-from-the-solution"]], "Extract Expressions From the Result": [[51, "extract-expressions-from-the-result"]], "Extract a List of Decomposed Relations": [[50, "extract-a-list-of-decomposed-relations"]], "Extract a Tuple of Relations": [[50, "extract-a-tuple-of-relations"]], "Extract the Result for Multiple Function-Solution Pairs": [[55, "extract-the-result-for-multiple-function-solution-pairs"]], "Extract the Result for One Solution and Function": [[55, "extract-the-result-for-one-solution-and-function"]], "Factor the Equation": [[48, "factor-the-equation"]], "Factorial domains": [[209, "factorial-domains"]], "Factoring in terms of cyclotomic polynomials": [[220, "factoring-in-terms-of-cyclotomic-polynomials"]], "Factoring polynomials into linear factors": [[220, "factoring-polynomials-into-linear-factors"]], "Factorization": [[209, "factorization"]], "Fast Fourier Transform": [[91, "fast-fourier-transform"]], "Fast Walsh Hadamard Transform": [[91, "fast-walsh-hadamard-transform"]], "Fedora": [[8, "fedora"]], "Fiber Active Force-Length": [[18, "fiber-active-force-length"]], "Fiber Damping": [[18, "fiber-damping"]], "Fiber Force-Velocity": [[18, "fiber-force-velocity"]], "Fiber Passive Force-Length": [[18, "fiber-passive-force-length"]], "Field operation functions": [[201, "field-operation-functions"]], "Field operator in orthogonal curvilinear coordinate system": [[272, "field-operator-in-orthogonal-curvilinear-coordinate-system"]], "Field operators and other related functions": [[33, "field-operators-and-other-related-functions"]], "Field operators and related functions": [[272, "field-operators-and-related-functions"]], "Fields": [[33, "fields"], [274, "fields"]], "Find Complex Roots of a Real Function": [[54, "find-complex-roots-of-a-real-function"]], "Find the Roots of a Polynomial": [[48, "find-the-roots-of-a-polynomial"]], "Find the Roots of a Polynomial Algebraically or Numerically": [[48, null]], "Finding Minimal Polynomials": [[216, "finding-minimal-polynomials"]], "Finite Difference Approximations to Derivatives": [[39, null]], "Finite Extensions": [[208, "finite-extensions"]], "Finite Types": [[241, "finite-types"]], "Finite difference weights": [[67, "finite-difference-weights"]], "Finite differences": [[287, "finite-differences"]], "Finite fields": [[211, "finite-fields"]], "Finitely Presented Groups": [[70, null]], "Finitely-generated modules": [[216, "module-sympy.polys.numberfields.modules"]], "First-Order": [[18, "first-order"]], "Floating-point numbers": [[92, "floating-point-numbers"]], "For 2D Polygons": [[115, "for-2d-polygons"]], "For 3-Polytopes/Polyhedra": [[115, "for-3-polytopes-polyhedra"]], "Fork SymPy": [[9, "fork-sympy"]], "Formal Power Series": [[223, null]], "Formal manipulation of roots of polynomials": [[217, "formal-manipulation-of-roots-of-polynomials"]], "Formatting": [[4, "formatting"]], "Formatting Preferences": [[5, "formatting-preferences"]], "Forming logical expressions": [[118, "forming-logical-expressions"]], "Fortran Printing": [[221, "fortran-printing"]], "Fortran specific AST nodes (sympy.codegen.fnodes)": [[69, "module-sympy.codegen.fnodes"]], "Fortran utilities (sympy.codegen.futils)": [[69, "module-sympy.codegen.futils"]], "Fourier Series": [[224, null]], "Free Groups and Words": [[70, "free-groups-and-words"]], "Functions": [[16, "functions"], [95, null], [242, "functions"]], "Functions to Find the Roots of a Polynomial": [[48, "functions-to-find-the-roots-of-a-polynomial"]], "Further Examples": [[27, "further-examples"]], "Further Reading": [[289, "further-reading"]], "Fused Multiply-Add (FMA)": [[43, "fused-multiply-add-fma"]], "Future Features": [[21, "future-features"]], "Future Improvements": [[22, "future-improvements"]], "Future Work": [[100, "future-work"]], "GCD and LCM": [[209, "gcd-and-lcm"]], "GF(p)": [[212, "gf-p"]], "Galois Groups": [[71, null], [216, "galois-groups"]], "Gamma matrices": [[145, "module-sympy.physics.hep.gamma_matrices"]], "Gamma, Beta and Related Functions": [[96, "module-sympy.functions.special.gamma_functions"]], "Gates": [[175, null]], "Gaussian Optics": [[160, null]], "Gaussian domains": [[212, "gaussian-domains"]], "Gaussian integers and Gaussian rationals": [[211, "gaussian-integers-and-gaussian-rationals"]], "Gegenbauer Polynomials": [[96, "gegenbauer-polynomials"]], "General Guidelines": [[4, "general-guidelines"], [5, "general-guidelines"]], "General examples of usage": [[271, null]], "Generators": [[80, "module-sympy.combinatorics.generators"]], "Geometry": [[100, null]], "Geometry Visualization": [[100, "geometry-visualization"]], "Get All Roots, Perhaps Implicitly": [[48, "get-all-roots-perhaps-implicitly"]], "Get familiar using the software": [[7, "get-familiar-using-the-software"]], "Get the SymPy Code": [[9, "get-the-sympy-code"]], "Getting help from within SymPy": [[16, "getting-help-from-within-sympy"]], "Getting the Source Code": [[2, "getting-the-source-code"]], "Git": [[59, "git"]], "Glossary": [[15, null]], "Gotcha: symbols with different assumptions": [[41, "gotcha-symbols-with-different-assumptions"]], "Gotchas": [[22, "gotchas"], [289, null]], "Gotchas and Pitfalls": [[16, null]], "Gradient": [[33, "gradient"], [272, "gradient"]], "Gravitational Loads": [[302, "gravitational-loads"]], "Gray Code": [[72, null]], "Groebner bases": [[209, "groebner-bases"]], "Groebner basis algorithms": [[214, "groebner-basis-algorithms"]], "Group constructors": [[73, null]], "Group structure": [[196, "group-structure"]], "Grover\u2019s Algorithm": [[176, null]], "Gtk": [[221, "module-sympy.printing.gtk"]], "Guidance": [[48, "guidance"], [50, "guidance"], [51, "guidance"], [52, "guidance"], [53, "guidance"], [54, "guidance"], [55, "guidance"], [56, "guidance"]], "Guide for New Contributors": [[10, null]], "Guide to Biomechanics": [[19, "guide-to-biomechanics"], [133, "guide-to-biomechanics"]], "Guide to Classical Mechanics": [[23, "guide-to-classical-mechanics"]], "Guide to Mechanics": [[151, "guide-to-mechanics"]], "Guide to Vector": [[34, "guide-to-vector"], [203, "guide-to-vector"], [273, "guide-to-vector"]], "Hard Dependencies": [[2, "hard-dependencies"]], "Headings": [[5, "headings"]], "Hermite Polynomials": [[96, "hermite-polynomials"]], "High Energy Physics": [[145, null]], "Hilbert Space": [[177, null]], "Hint Functions": [[237, "hint-functions"]], "Hint Methods": [[238, "hint-methods"]], "Holonomic": [[108, null]], "Hongguang Fu\u2019s Trigonometric Simplification": [[230, null]], "How Vectors are Coded": [[36, "how-vectors-are-coded"]], "How are symbolic parameters handled in solveset?": [[240, "how-are-symbolic-parameters-handled-in-solveset"]], "How do we deal with cases where only some of the solutions are known?": [[240, "how-do-we-deal-with-cases-where-only-some-of-the-solutions-are-known"]], "How do we manipulate and return an infinite solution?": [[240, "how-do-we-manipulate-and-return-an-infinite-solution"]], "How does solveset ensure that it is not returning any wrong solution?": [[240, "how-does-solveset-ensure-that-it-is-not-returning-any-wrong-solution"]], "How long should deprecations last?": [[3, "how-long-should-deprecations-last"]], "How to compute the integral": [[113, "how-to-compute-the-integral"]], "How to deprecate code": [[3, "how-to-deprecate-code"]], "How-to Guides": [[44, null], [58, "how-to-guides"]], "Hydrogen Wavefunctions": [[146, null]], "Hyperbolic": [[94, "hyperbolic"]], "Hyperbolic Functions": [[94, "hyperbolic-functions"]], "Hyperbolic Inverses": [[94, "hyperbolic-inverses"]], "Hypergeometric Algorithm": [[223, "hypergeometric-algorithm"]], "Hypergeometric Expansion": [[231, null]], "Hypergeometric Function Expansion Algorithm": [[231, "hypergeometric-function-expansion-algorithm"]], "Hypergeometric Functions": [[96, "hypergeometric-functions"]], "Hypergeometric terms": [[87, "hypergeometric-terms"]], "Hypothesis Testing": [[12, "hypothesis-testing"]], "Identify something to work on": [[7, "identify-something-to-work-on"]], "If There are Multiple Solution Sets": [[55, "if-there-are-multiple-solution-sets"]], "If There is One Solution Set": [[55, "if-there-is-one-solution-set"]], "Immutability of Expressions": [[16, "immutability-of-expressions"]], "Immutable Matrices": [[121, null]], "ImmutableMatrix Class Reference": [[121, "module-sympy.matrices.immutable"]], "ImmutableSparseMatrix Class Reference": [[126, "immutablesparsematrix-class-reference"]], "Implementation - Helper Classes/Functions": [[221, "module-sympy.printing.conventions"]], "Implementation Details": [[254, "implementation-details"]], "Implementation details": [[253, "implementation-details"]], "Implementation in sympy.vector": [[272, "implementation-in-sympy-vector"]], "Implementation of fields in sympy.physics.vector": [[33, "implementation-of-fields-in-sympy-physics-vector"]], "Implemented G-Function Formulae": [[113, "implemented-g-function-formulae"]], "Implemented Hypergeometric Formulae": [[231, "implemented-hypergeometric-formulae"]], "Implementing assumptions handlers": [[41, "implementing-assumptions-handlers"]], "Implications": [[41, "implications"]], "Importing Docstrings into the Sphinx Documentation": [[4, "importing-docstrings-into-the-sphinx-documentation"]], "Impulse-Response Plot": [[142, "impulse-response-plot"]], "Include Solutions Making Any Denominator Zero": [[57, "include-solutions-making-any-denominator-zero"]], "Include the Variable to Be Reduced for in the Function Call": [[50, "include-the-variable-to-be-reduced-for-in-the-function-call"]], "Include the Variable to be Solved for in the Function Call": [[57, "include-the-variable-to-be-solved-for-in-the-function-call"]], "Increase Precision of the Solution": [[54, "increase-precision-of-the-solution"]], "Incrementing and decrementing indices": [[231, "incrementing-and-decrementing-indices"]], "Index": [[10, "index"]], "Indexed Objects": [[246, null]], "Inequalities": [[239, "inequalities"], [240, "inequalities"]], "Inequalities Which Can Be Reduced Analytically, and SymPy Cannot Reduce": [[50, "inequalities-which-can-be-reduced-analytically-and-sympy-cannot-reduce"]], "Inequality Solvers": [[236, null]], "Inertia": [[28, "inertia"]], "Inertia (Dyadics)": [[28, "inertia-dyadics"]], "Inertia and Rigid Bodies": [[302, "inertia-and-rigid-bodies"]], "Inertias": [[155, "inertias"]], "Inference": [[118, "module-sympy.logic.inference"]], "Information on the ode module": [[237, "module-sympy.solvers.ode.ode"]], "Information on the pde module": [[238, "module-sympy.solvers.pde"]], "Inner Product": [[179, null]], "Input API of solveset": [[240, "input-api-of-solveset"]], "Install Git": [[9, "install-git"]], "Installation": [[58, "installation"], [59, null], [295, "installation"]], "Integer Functions": [[94, "integer-functions"]], "Integral Basis": [[216, "integral-basis"]], "Integral Transforms": [[115, "module-sympy.integrals.transforms"]], "Integral domains": [[209, "integral-domains"]], "Integrals": [[114, null], [115, null], [287, "integrals"]], "Integration": [[112, "integration"]], "Integration and Differentiation": [[110, "integration-and-differentiation"]], "Integration over Polytopes": [[115, "module-sympy.integrals.intpoly"]], "Interactive": [[116, null]], "Interactive Use": [[2, "interactive-use"]], "Interface": [[241, "interface"]], "Internal API": [[109, null]], "Internal API Reference": [[113, "module-sympy.integrals.meijerint"]], "Internal Classes": [[234, "internal-classes"]], "Internal Functions": [[234, "internal-functions"]], "Internals": [[115, "internals"], [216, "internals"]], "Internals of a Poly": [[211, "internals-of-a-poly"]], "Internals of the Polynomial Manipulation Module": [[214, null]], "Interpretation of the predicates": [[41, "interpretation-of-the-predicates"]], "Intersecting Product": [[91, "intersecting-product"]], "Intersection of medians": [[100, "intersection-of-medians"]], "Introducing the Domains of the poly module": [[211, null]], "Introducing the domainmatrix of the poly module": [[210, null]], "Introduction": [[16, "introduction"], [22, "introduction"], [30, "introduction"], [33, "introduction"], [39, "introduction"], [61, "introduction"], [68, "introduction"], [69, "introduction"], [70, "introduction"], [78, "introduction"], [90, "introduction"], [100, "introduction"], [118, "introduction"], [133, "introduction"], [196, "introduction"], [207, "introduction"], [208, "introduction"], [209, "introduction"], [216, "introduction"], [220, "introduction"], [274, null], [291, null]], "Introduction to Biomechanical Modeling": [[18, null]], "Introduction to Contributing": [[7, null]], "Introduction to Kinematics": [[35, "introduction-to-kinematics"]], "Introductory Tutorial": [[285, "introductory-tutorial"], [290, null]], "Inverse Trig Functions": [[16, "inverse-trig-functions"]], "Iterables": [[259, null]], "Iteration over sets": [[229, "iteration-over-sets"]], "Jacobi Polynomials": [[96, "jacobi-polynomials"]], "Javascript Code printing": [[221, "module-sympy.printing.jscode"]], "Join our mailing list": [[7, "join-our-mailing-list"]], "Joint (Docstrings)": [[152, "module-sympy.physics.mechanics.joint"]], "Joint Types": [[241, "joint-types"]], "Joints Framework (Docstrings)": [[152, null]], "Joints Framework in Physics/Mechanics": [[24, null]], "Joints in Physics/Mechanics": [[24, "joints-in-physics-mechanics"]], "Julia code printing": [[221, "module-sympy.printing.julia"]], "K(x)": [[212, "id11"]], "K[x]": [[212, "k-x"]], "Kane\u2019s Method": [[306, "kane-s-method"]], "Kane\u2019s Method & Lagrange\u2019s Method (Docstrings)": [[153, null]], "Kane\u2019s Method in Physics/Mechanics": [[25, null], [25, "id2"]], "Key Invariant": [[292, null]], "Key Point": [[43, null]], "Keyword Arguments": [[16, "keyword-arguments"]], "Kinematics (Docstrings)": [[204, null]], "Kinematics in physics.vector": [[35, "kinematics-in-physics-vector"]], "Kinematics of the Bicycle": [[302, "kinematics-of-the-bicycle"]], "Kinetic Energy": [[28, "kinetic-energy"]], "LaTeX Recommendations": [[5, "latex-recommendations"]], "Lagrange\u2019s Method": [[303, "lagrange-s-method"], [306, "lagrange-s-method"]], "Lagrange\u2019s Method in Physics/Mechanics": [[26, null], [26, "id1"]], "Lagrangian": [[28, "lagrangian"]], "Laguerre Polynomials": [[96, "laguerre-polynomials"]], "LambdaPrinter": [[221, "module-sympy.printing.lambdarepr"]], "Lambdify": [[129, "lambdify"], [260, null]], "Lark Backend": [[130, "lark-backend"]], "Lark \\mathrm{\\LaTeX} Parser Capabilities": [[130, "lark-mathrm-latex-parser-capabilities"]], "Lark \\mathrm{\\LaTeX} Parser Classes": [[130, "lark-mathrm-latex-parser-classes"]], "Lark \\mathrm{\\LaTeX} Parser Features": [[130, "lark-mathrm-latex-parser-features"]], "Lark \\mathrm{\\LaTeX} Parser Functions": [[130, "lark-mathrm-latex-parser-functions"]], "LatexPrinter": [[221, "module-sympy.printing.latex"]], "Legendre Polynomials": [[96, "legendre-polynomials"]], "Level Zero": [[214, "level-zero"]], "Lie Algebra": [[117, null]], "Lie heuristics": [[237, "lie-heuristics"]], "Limitations": [[41, "limitations"], [51, "limitations"], [112, "limitations"]], "Limitations and Issues": [[22, "limitations-and-issues"]], "Limitations of Inequality Reduction Using SymPy": [[50, "limitations-of-inequality-reduction-using-sympy"]], "Limitations on Types of Inequalities That SymPy Can Solve": [[50, "limitations-on-types-of-inequalities-that-sympy-can-solve"]], "Limits": [[228, "limits"], [287, "limits"]], "Limits of Sequences": [[226, null]], "Linear Momentum": [[28, "linear-momentum"]], "Linear Programming (Optimization)": [[239, "module-sympy.solvers.simplex"]], "Linear algebra": [[124, "linear-algebra"]], "Linear space representation": [[196, "linear-space-representation"]], "Linearization": [[21, "linearization"]], "Linearization (Docstrings)": [[154, null]], "Linearization in Physics/Mechanics": [[27, null]], "Linearized Carvallo-Whipple Bicycle Model": [[302, null]], "Linearized Equations of Motion": [[302, "linearized-equations-of-motion"]], "Linearizing Kane\u2019s Equations": [[27, "linearizing-kane-s-equations"]], "Linearizing Lagrange\u2019s Equations": [[27, "linearizing-lagrange-s-equations"]], "Lines": [[101, null]], "Links": [[30, "links"]], "List (all_roots, real_roots, nroots)": [[48, "list-all-roots-real-roots-nroots"]], "List Of Values": [[37, "list-of-values"]], "List of Dictionaries": [[37, "list-of-dictionaries"]], "List of Tuples": [[37, "list-of-tuples"]], "List of active deprecations": [[13, null]], "List of dictionaries (solve)": [[48, "list-of-dictionaries-solve"]], "Lists": [[16, "lists"]], "Literature": [[196, "literature"], [215, null], [220, "literature"]], "Loads": [[18, "loads"], [28, "loads"], [155, "loads"]], "Local Installation": [[8, "local-installation"], [8, "id4"]], "Locating new systems": [[270, "locating-new-systems"]], "Logic": [[2, "logic"], [118, null], [276, "logic"], [279, null]], "Loose Ends": [[231, "loose-ends"]], "Low Index Subgroups": [[70, "low-index-subgroups"]], "MPQ": [[212, "mpq"]], "Mac": [[8, "mac"]], "Make Your Equation Into an Expression That Equals Zero": [[52, "make-your-equation-into-an-expression-that-equals-zero"]], "Make a Pull Request": [[11, "make-a-pull-request"]], "Manipulating expressions": [[118, "manipulating-expressions"]], "Manipulation of dense, multivariate polynomials": [[214, "manipulation-of-dense-multivariate-polynomials"]], "Manipulation of dense, univariate polynomials with finite field coefficients": [[214, "manipulation-of-dense-univariate-polynomials-with-finite-field-coefficients"]], "Manipulation of rational functions": [[217, "manipulation-of-rational-functions"]], "Manipulation of sparse, distributed polynomials and vectors": [[214, "manipulation-of-sparse-distributed-polynomials-and-vectors"]], "Maple code printing": [[221, "module-sympy.printing.maple"]], "Mapping user names to AUTHORS file entry": [[11, "mapping-user-names-to-authors-file-entry"]], "Marking Tests as Expected to Fail": [[12, "marking-tests-as-expected-to-fail"]], "Marking Tests as Slow": [[12, "marking-tests-as-slow"]], "Mass": [[28, "mass"]], "Masses, Inertias, Particles and Rigid Bodies in Physics/Mechanics": [[28, null]], "Math": [[5, "math"]], "MathML": [[296, "mathml"]], "MathMLPrinter": [[221, "module-sympy.printing.mathml"]], "Mathematica code printing": [[221, "module-sympy.printing.mathematica"]], "Mathematical Equivalents": [[30, "mathematical-equivalents"]], "Mathematical Exactness, Completeness of List of Roots, and Speed": [[48, "mathematical-exactness-completeness-of-list-of-roots-and-speed"]], "Mathematical Operators": [[16, "mathematical-operators"]], "Mathieu Functions": [[96, "module-sympy.functions.special.mathieu_functions"]], "Matrices": [[122, null], [147, null], [276, "matrices"], [280, null], [293, null]], "Matrices (linear algebra)": [[124, null]], "Matrix": [[65, "matrix"]], "Matrix Base Classes": [[124, "matrix-base-classes"]], "Matrix Constructors": [[293, "matrix-constructors"]], "Matrix Distributions": [[241, "matrix-distributions"]], "Matrix Exceptions": [[124, "matrix-exceptions"]], "Matrix Expressions": [[120, null]], "Matrix Expressions Core Reference": [[120, "matrix-expressions-core-reference"]], "Matrix Functions": [[124, "matrix-functions"]], "Matrix Kind": [[123, null]], "Matrix Normal Forms": [[125, null]], "Matrix Usually Must Be Square": [[53, "matrix-usually-must-be-square"]], "Mechanics": [[23, "mechanics"], [133, "mechanics"], [151, "mechanics"], [241, "module-sympy.stats.rv"]], "Mechanics API Reference": [[151, null]], "Mechanics Tutorials": [[305, null]], "Mechanism of the assumptions system": [[41, "mechanism-of-the-assumptions-system"]], "Medium": [[162, null]], "Meijer G-Functions of Finite Confluence": [[231, "meijer-g-functions-of-finite-confluence"]], "Memoization": [[261, null]], "Methods": [[245, null]], "Methods for Solving Matrix Equations": [[53, "methods-for-solving-matrix-equations"]], "Misc": [[64, "misc"]], "Miscellaneous": [[94, "miscellaneous"], [262, null]], "Miscellaneous Notes": [[100, "miscellaneous-notes"]], "Miscellaneous _eval_* methods": [[43, "miscellaneous-eval-methods"]], "Mixing Poly and non-polynomial expressions in binary operations": [[13, "mixing-poly-and-non-polynomial-expressions-in-binary-operations"]], "Model Description": [[299, "model-description"]], "Modify code": [[11, "modify-code"]], "Modular GCD": [[214, "modular-gcd"]], "Module Homomorphisms": [[216, "module-homomorphisms"]], "Module Homomorphisms and Syzygies": [[208, "module-homomorphisms-and-syzygies"]], "Module structure": [[234, "module-structure"]], "Modules sympy.tensor.array.expressions.conv_* renamed to sympy.tensor.array.expressions.from_*": [[13, "modules-sympy-tensor-array-expressions-conv-renamed-to-sympy-tensor-array-expressions-from"]], "Modules, Ideals and their Elementary Properties": [[208, "modules-ideals-and-their-elementary-properties"]], "Monomials encoded as tuples": [[217, "monomials-encoded-as-tuples"]], "More": [[195, "more"]], "More Intuitive Series Expansion": [[228, "more-intuitive-series-expansion"]], "More about Coordinate Systems": [[270, null]], "More examples": [[194, null]], "Moved mechanics functions": [[13, "moved-mechanics-functions"]], "Moving Around in the Parameter Space": [[231, "moving-around-in-the-parameter-space"]], "Multi Degree of Freedom Holonomic System": [[307, null]], "Multiplication": [[216, "multiplication"]], "Multivariate GCD and factorization": [[220, "multivariate-gcd-and-factorization"]], "Multivariate factoring over algebraic numbers": [[220, "multivariate-factoring-over-algebraic-numbers"]], "Muscle Activation Differential Equations": [[299, "muscle-activation-differential-equations"]], "Musculotendon (Docstrings)": [[134, null]], "Musculotendon Curves": [[18, "musculotendon-curves"]], "Musculotendon Dynamics": [[18, "musculotendon-dynamics"]], "Mutable attributes in sympy.diffgeom": [[13, "mutable-attributes-in-sympy-diffgeom"]], "M\u00f6bius Transform": [[91, "mobius-transform"]], "N-dim array": [[242, null]], "N-dim array expressions": [[243, null]], "Named Groups": [[76, null]], "Narrative Documentation Guidelines": [[5, "narrative-documentation-guidelines"]], "New Joint coordinate format": [[13, "new-joint-coordinate-format"]], "New Joint intermediate frames": [[13, "new-joint-intermediate-frames"]], "New Mathematica code parser": [[13, "new-mathematica-code-parser"]], "Non-Expr objects in a Matrix": [[13, "non-expr-objects-in-a-matrix"]], "Non-tuple iterable for the first argument to Lambda": [[13, "non-tuple-iterable-for-the-first-argument-to-lambda"]], "Nonlinear Equations of Motion": [[302, "nonlinear-equations-of-motion"]], "Nonminimal Coordinates Pendulum": [[306, null]], "Normalizing simple rational functions": [[220, "normalizing-simple-rational-functions"]], "Not All Equations Can Be Solved": [[48, "not-all-equations-can-be-solved"], [51, "not-all-equations-can-be-solved"], [52, "not-all-equations-can-be-solved"], [55, "not-all-equations-can-be-solved"]], "Not All Results Are Returned for Periodic Functions": [[50, "not-all-results-are-returned-for-periodic-functions"]], "Not All Systems of Equations Can be Solved": [[56, "not-all-systems-of-equations-can-be-solved"]], "Not All Systems of Inequalities Can Be Reduced": [[50, "not-all-systems-of-inequalities-can-be-reduced"]], "Not Public API": [[3, null]], "Not all Equations Can be Solved": [[54, "not-all-equations-can-be-solved"]], "Notation": [[231, "notation"]], "Note": [[43, null]], "Notes": [[88, "notes"], [228, "notes"], [230, "notes"]], "Ntheory Class Reference": [[128, "ntheory-class-reference"]], "Ntheory Functions Reference": [[128, "ntheory-functions-reference"]], "Nullspace": [[293, "nullspace"]], "Number Fields": [[216, null]], "Number Theoretic Transform": [[91, "number-theoretic-transform"]], "Number Theory": [[65, "number-theory"], [128, null], [276, "number-theory"], [281, null]], "Number of groups": [[74, null]], "Numeric Computation": [[129, null]], "Numeric Integrals": [[115, "numeric-integrals"]], "Numeric Integration": [[287, "numeric-integration"]], "Numeric Solutions": [[57, "numeric-solutions"]], "Numerical Evaluation": [[92, null]], "Numerical Evaluation and Visualization": [[30, "numerical-evaluation-and-visualization"]], "Numerical Evaluation with evalf()": [[43, "numerical-evaluation-with-evalf"]], "Numerical evaluation": [[110, "numerical-evaluation"]], "Numerical simplification": [[92, "numerical-simplification"]], "Numerically Evaluate CRootOf Roots": [[48, "numerically-evaluate-crootof-roots"]], "Numerically Integrating Code": [[21, "numerically-integrating-code"]], "Numerically Solve an ODE in SciPy": [[55, "numerically-solve-an-ode-in-scipy"]], "Numpy Utility Functions": [[124, "numpy-utility-functions"]], "ODE": [[237, null]], "Octave (and Matlab) Code printing": [[221, "module-sympy.printing.octave"]], "Old (dense) polynomial rings": [[211, "old-dense-polynomial-rings"]], "Operations on entries": [[124, "operations-on-entries"]], "Operations on holonomic functions": [[110, null]], "Operator": [[180, null]], "Operator/State Helper Functions": [[181, null]], "Optics": [[161, null]], "Option 1: Define a Function Without Including Its Independent Variable": [[55, "option-1-define-a-function-without-including-its-independent-variable"]], "Option 2: Define a Function of an Independent Variable": [[55, "option-2-define-a-function-of-an-independent-variable"]], "Optional Dependencies": [[2, "optional-dependencies"]], "Optional SymEngine Backend": [[2, "optional-symengine-backend"]], "Options": [[214, "module-sympy.polys.polyoptions"]], "Options That Can Speed up solve()": [[52, "options-that-can-speed-up-solve"], [56, "options-that-can-speed-up-solve"], [57, "options-that-can-speed-up-solve"]], "Options to Define an ODE": [[55, "options-to-define-an-ode"]], "Order": [[65, "order"]], "Order Terms": [[228, "order-terms"]], "Ordered comparisons like a < b with modular integers": [[13, "ordered-comparisons-like-a-b-with-modular-integers"]], "Orderings of monomials": [[217, "orderings-of-monomials"]], "Ordinary Differential Equation Solving Hints": [[55, "ordinary-differential-equation-solving-hints"]], "Ordinary Differential equations (ODEs)": [[239, "ordinary-differential-equations-odes"], [240, "ordinary-differential-equations-odes"]], "Orienter classes (docstrings)": [[267, null]], "Orienting AND Locating new systems": [[270, "orienting-and-locating-new-systems"]], "Orienting new systems": [[270, "orienting-new-systems"]], "Orthogonal Polynomials": [[96, "module-sympy.functions.special.polynomials"]], "Orthogonal polynomials": [[217, "orthogonal-polynomials"]], "Other Functions": [[155, "other-functions"]], "Other Methods": [[43, "other-methods"], [59, "other-methods"]], "Other expression-dependent methods": [[270, "other-expression-dependent-methods"]], "Other is_* properties": [[41, "other-is-properties"]], "Overview": [[113, "overview"]], "Overview of Facilities": [[70, "overview-of-facilities"]], "Overview of functionalities": [[78, "overview-of-functionalities"]], "PDE": [[238, null]], "PDF Documentation": [[8, "pdf-documentation"]], "Parse a String Representing the Equation": [[57, "parse-a-string-representing-the-equation"]], "Parsing": [[2, "parsing"], [130, null]], "Parsing Functions Reference": [[130, "parsing-functions-reference"]], "Parsing Transformations Reference": [[130, "parsing-transformations-reference"]], "Partial Differential Equations (PDEs)": [[239, "partial-differential-equations-pdes"], [240, "partial-differential-equations-pdes"]], "Partial fraction decomposition": [[217, "partial-fraction-decomposition"], [220, "partial-fraction-decomposition"]], "Particle": [[28, "particle"]], "Particle in a Box": [[182, null]], "Partitions": [[77, null]], "Passing the arguments to lambdify as a set": [[13, "passing-the-arguments-to-lambdify-as-a-set"]], "Pathway (Docstrings)": [[156, null]], "Pathways": [[18, "pathways"]], "Pauli Algebra": [[166, null]], "Performance improvements": [[64, "performance-improvements"]], "Permutation Groups": [[79, null]], "Permutations": [[80, null]], "Peruse the documentation": [[7, "peruse-the-documentation"]], "Philosophy behind unit systems": [[196, null]], "Physical Equivalents": [[30, "physical-equivalents"]], "Physical quantities": [[198, null]], "Physics": [[20, null], [47, null], [276, "physics"], [282, null]], "Physics Tutorial": [[285, "physics-tutorial"]], "Physics Tutorials": [[301, null]], "Physics Vector API": [[203, null]], "Pick an issue to fix": [[11, "pick-an-issue-to-fix"]], "Piecewise": [[94, "piecewise"]], "Plane": [[102, null]], "Plot Class": [[207, "plot-class"]], "Plot Window Controls": [[207, "plot-window-controls"]], "PlotGrid Class": [[207, "plotgrid-class"]], "Plotting": [[2, "plotting"], [207, null]], "Plotting Function Reference": [[207, "plotting-function-reference"]], "Plotting Geometric Entities": [[207, "plotting-geometric-entities"]], "Plotting with ASCII art": [[207, "plotting-with-ascii-art"]], "Point Velocity & Acceleration": [[35, "point-velocity-acceleration"]], "Points": [[103, null], [269, "points"]], "Polar Numbers and Branched Functions": [[113, "polar-numbers-and-branched-functions"]], "Polarization": [[163, null]], "Pole-Zero Plot": [[142, "pole-zero-plot"]], "Poly solvers": [[219, null]], "PolyRing vs PolynomialRing": [[211, "polyring-vs-polynomialring"]], "Polycyclic Groups": [[78, null]], "Polygons": [[104, null]], "Polyhedron": [[81, null]], "Polynomial Manipulation": [[213, null]], "Polynomial factorization algorithms": [[214, "polynomial-factorization-algorithms"]], "Polynomial ring domains": [[211, "polynomial-ring-domains"]], "Polynomial/Rational Function Simplification": [[297, "polynomial-rational-function-simplification"]], "Polynomials": [[209, "polynomials"]], "Polynomials Manipulation Module Reference": [[217, null]], "Possible Issues": [[293, "possible-issues"]], "Potential Energy": [[28, "potential-energy"]], "Potential Issues": [[27, "potential-issues"]], "Potential Issues/Advanced Topics/Future Features in Physics/Mechanics": [[21, null]], "Potential Issues/Advanced Topics/Future Features in Physics/Vector Module": [[32, null]], "Power sets": [[229, "module-sympy.sets.powerset"]], "Powers": [[297, "powers"]], "Precedence": [[221, "module-sympy.printing.precedence"]], "Predefined types": [[69, "predefined-types"]], "Predicate": [[64, "predicate"]], "Predicates": [[41, "predicates"], [65, null]], "Preliminaries": [[295, null]], "Pretty-Printing Implementation Helpers": [[221, "module-sympy.printing.pretty.pretty_symbology"]], "PrettyPrinter Class": [[221, "prettyprinter-class"]], "Prevent expression evaluation": [[292, "prevent-expression-evaluation"]], "Preview": [[221, "preview"]], "Prime Decomposition": [[216, "prime-decomposition"]], "Printer Class": [[221, "module-sympy.printing.printer"]], "Printers": [[296, "printers"]], "Printing": [[2, "printing"], [21, "printing"], [32, "printing"], [43, "printing"], [116, "module-sympy.interactive.printing"], [221, null], [296, null]], "Printing (Docstrings)": [[157, null], [205, null]], "Printing Functions": [[296, "printing-functions"]], "ProductSet(iterable)": [[13, "productset-iterable"]], "Products and contractions": [[242, "products-and-contractions"]], "Programmatically Extract Parameter Symbols": [[51, "programmatically-extract-parameter-symbols"]], "Prufer Sequences": [[82, null]], "Public API": [[3, null]], "Put Your Equation Into Eq Form": [[52, "put-your-equation-into-eq-form"]], "Pyglet Plotting": [[207, "module-sympy.plotting.pygletplot"]], "Python numbers vs. SymPy Numbers": [[16, "python-numbers-vs-sympy-numbers"]], "Python utilities (sympy.codegen.pyutils)": [[69, "module-sympy.codegen.pyutils"]], "PythonCodePrinter": [[221, "module-sympy.printing.pycode"]], "PythonPrinter": [[221, "module-sympy.printing.python"]], "QFT": [[184, null]], "QQ": [[212, "qq"]], "QQ<a>": [[212, "qq-a"]], "QQ_I": [[212, "qq-i"]], "QS function": [[128, "qs-function"]], "Qapply": [[183, null]], "Quadrilateral problem": [[271, "quadrilateral-problem"]], "Quantities": [[196, "quantities"]], "Quantum Computation": [[178, "quantum-computation"]], "Quantum Functions": [[178, "quantum-functions"]], "Quantum Harmonic Oscillator in 1-D": [[167, null]], "Quantum Harmonic Oscillator in 3-D": [[192, null]], "Quantum Mechanics": [[178, null]], "Quaternion Reference": [[61, "module-sympy.algebras"]], "Qubit": [[185, null]], "Querying": [[64, "querying"]], "Questions": [[59, "questions"]], "Quick Tip": [[286, null], [287, null], [289, null], [292, null], [293, null]], "Quotient ring": [[212, "quotient-ring"]], "RCodePrinter": [[221, "module-sympy.printing.rcode"]], "RR": [[212, "rr"]], "RREF": [[293, "rref"]], "Ramp-Response Plot": [[142, "ramp-response-plot"]], "Random": [[88, "module-sympy.core.random"]], "Random Tests": [[12, "random-tests"]], "Random Variable Types": [[241, "random-variable-types"]], "Randomised Testing": [[251, null]], "Rational Algorithm": [[223, "rational-algorithm"]], "Rational Riccati Solver": [[237, "rational-riccati-solver"]], "Rational function fields": [[211, "rational-function-fields"]], "Read the paper": [[7, "read-the-paper"]], "Real and complex fields": [[211, "real-and-complex-fields"]], "Recommended Optional Dependencies": [[2, "recommended-optional-dependencies"]], "Recurrence Equations": [[239, "module-sympy.solvers.recurr"]], "Recursing through an Expression Tree": [[292, "recursing-through-an-expression-tree"]], "Recursive Sequences": [[227, "recursive-sequences"]], "Reduce One or a System of Inequalities for a Single Variable Algebraically": [[50, null]], "Reduce a System of Inequalities Algebraically": [[50, "reduce-a-system-of-inequalities-algebraically"]], "Reducing One Inequality for a Single Variable Algebraically": [[50, "reducing-one-inequality-for-a-single-variable-algebraically"]], "Reducing a System of Inequalities for a Single Variable Algebraically": [[50, "reducing-a-system-of-inequalities-for-a-single-variable-algebraically"]], "Reduction of Order": [[231, "reduction-of-order"]], "Redundant static methods in carmichael": [[13, "redundant-static-methods-in-carmichael"]], "Reference": [[124, "reference"], [208, "reference"], [214, "reference"], [218, "reference"], [228, "reference"], [228, "id2"], [228, "id4"], [228, "id7"], [228, "id8"]], "Reference docs for the Poly Domains": [[212, null]], "ReferenceFrame": [[32, "referenceframe"]], "References": [[18, "references"], [46, "references"], [71, "references"], [88, "references"], [100, "references"], [106, "references"], [115, "references"], [163, "references"], [166, "references"], [206, "references"], [230, "references"], [231, "references"], [234, "references"], [240, "references"], [299, "references"], [302, "references"], [303, "references"]], "References for Physics/Mechanics": [[29, null]], "References for Physics/Vector": [[34, "references-for-physics-vector"], [203, "references-for-physics-vector"]], "References for Vector": [[273, "references-for-vector"]], "References for the above definitions": [[41, "references-for-the-above-definitions"]], "Refine": [[66, null]], "Regression Tests": [[12, "regression-tests"]], "Reidemeister Schreier algorithm": [[70, "reidemeister-schreier-algorithm"]], "Relating Sets of Basis Vectors": [[36, "relating-sets-of-basis-vectors"]], "Relations between different symbols": [[41, "relations-between-different-symbols"]], "Release notes entry": [[3, "release-notes-entry"]], "Relocate symbolic functions from ntheory to functions": [[13, "relocate-symbolic-functions-from-ntheory-to-functions"]], "Reminder": [[43, null]], "Report a Bug": [[48, "report-a-bug"], [50, "report-a-bug"], [51, "report-a-bug"], [52, "report-a-bug"], [53, "report-a-bug"], [54, "report-a-bug"], [55, "report-a-bug"], [56, "report-a-bug"], [57, "report-a-bug"]], "Represent": [[186, null]], "Representation of holonomic functions in SymPy": [[111, null]], "Representing Branched Functions on the Argand Plane": [[113, "representing-branched-functions-on-the-argand-plane"]], "Representing Roots": [[48, "representing-roots"]], "Representing algebraic numbers": [[216, "representing-algebraic-numbers"]], "Representing expressions symbolically": [[211, "representing-expressions-symbolically"]], "Required dependencies": [[8, "required-dependencies"]], "Residues": [[228, "residues"]], "Restrict the Domain of Solutions": [[52, "restrict-the-domain-of-solutions"]], "Return Unevaluated Integrals": [[55, "return-unevaluated-integrals"]], "Revealing noncontributing forces": [[304, "revealing-noncontributing-forces"]], "Review pull requests": [[7, "review-pull-requests"]], "Review the Code of Conduct": [[7, "review-the-code-of-conduct"]], "Rewriting and Simplification": [[43, "rewriting-and-simplification"]], "Riemann Zeta and Related Functions": [[96, "module-sympy.functions.special.zeta_functions"]], "Rigid Body": [[28, "rigid-body"]], "Rigid Tendon Dynamics": [[18, "rigid-tendon-dynamics"]], "Rotation matrices": [[124, "rotation-matrices"]], "Rough Autolev-SymPy Equivalents": [[30, "rough-autolev-sympy-equivalents"]], "Routine": [[254, "routine"]], "Rules": [[230, "rules"]], "Run SymPy": [[59, "run-sympy"]], "Run Tests": [[252, null]], "Run the Tests": [[11, "run-the-tests"]], "Running Tests": [[12, "running-tests"]], "Running the Benchmarks": [[2, "running-the-benchmarks"]], "Running the Tests": [[2, "running-the-tests"]], "Runtime Installation": [[130, "runtime-installation"]], "Rust code printing": [[221, "module-sympy.printing.rust"]], "SMT-Lib printing": [[221, "module-sympy.printing.smtlib"]], "Sage": [[2, "sage"]], "Sample Docstring": [[4, "sample-docstring"]], "Scalar and Vector Field Functionality": [[33, null], [272, null]], "Scalar and vector fields": [[272, "scalar-and-vector-fields"]], "Scalar potential functions": [[33, "scalar-potential-functions"], [272, "scalar-potential-functions"]], "Search based solver and step-by-step solution": [[240, "search-based-solver-and-step-by-step-solution"]], "Second Quantization": [[191, null]], "Sections": [[4, "sections"]], "See": [[271, "see"]], "See Also": [[88, "see-also"], [259, "see-also"]], "Select a Specific Solver": [[55, "select-a-specific-solver"]], "Separate Symbolic and Numeric Code": [[14, "separate-symbolic-and-numeric-code"]], "Sequences": [[227, null]], "Sequences Base": [[227, "sequences-base"]], "Series": [[225, null]], "Series Acceleration": [[228, "series-acceleration"]], "Series Classes": [[207, "series-classes"]], "Series Expansion": [[287, "series-expansion"]], "Series Expansions": [[228, null]], "Series Manipulation using Polynomials": [[218, null]], "Series expansion": [[110, "series-expansion"]], "Session": [[116, "module-sympy.interactive.session"]], "Set the angular velocity of each frame": [[302, "set-the-angular-velocity-of-each-frame"]], "Set up reference frames for the system": [[302, "set-up-reference-frames-for-the-system"]], "SetKind": [[229, "setkind"]], "Sets": [[65, "sets"], [229, null]], "Setting up Pretty Printing": [[296, "setting-up-pretty-printing"]], "Setup Development Environment": [[9, null]], "Setup GitHub": [[9, "setup-github"]], "Setup SSH Keys": [[9, "setup-ssh-keys"]], "Setup the constraints": [[302, "setup-the-constraints"]], "Setup your development environment": [[7, "setup-your-development-environment"]], "Shape": [[293, "shape"]], "Shor\u2019s Algorithm": [[187, null]], "Silencing SymPy Deprecation Warnings": [[13, "silencing-sympy-deprecation-warnings"]], "Simple univariate polynomial factorization": [[220, "simple-univariate-polynomial-factorization"]], "Simplification": [[297, null]], "Simplification and equivalence-testing": [[118, "simplification-and-equivalence-testing"]], "Simplified remainder sequences": [[214, "simplified-remainder-sequences"]], "Simplify": [[232, null], [233, null]], "Simulate the Muscle-actuated Motion": [[299, "simulate-the-muscle-actuated-motion"]], "Single Dictionary": [[37, "single-dictionary"]], "Single Equals Sign": [[16, "single-equals-sign"]], "Singleton Sequences": [[227, "singleton-sequences"]], "Singleton Sets": [[229, "singleton-sets"]], "Singularities": [[67, "singularities"]], "Skipping Tests": [[12, "skipping-tests"]], "So Which Should I Use?": [[129, "so-which-should-i-use"]], "Solution": [[271, "solution"], [271, "id2"]], "Solve Equations": [[49, null]], "Solve Into a Solution Given as a Dictionary": [[56, "solve-into-a-solution-given-as-a-dictionary"]], "Solve One or a System of Equations Numerically": [[54, null]], "Solve Output by Type": [[37, null]], "Solve Results in a Set": [[56, "solve-results-in-a-set"]], "Solve a Diophantine Equation Algebraically": [[51, null]], "Solve a Matrix Equation": [[53, "solve-a-matrix-equation"]], "Solve a Matrix Equation Algebraically": [[53, null]], "Solve a System of Equations Algebraically": [[56, null]], "Solve a System of Equations Numerically": [[54, "solve-a-system-of-equations-numerically"]], "Solve a System of Linear Equations Algebraically": [[56, "solve-a-system-of-linear-equations-algebraically"]], "Solve a System of Nonlinear Equations Algebraically": [[56, "solve-a-system-of-nonlinear-equations-algebraically"]], "Solve an Equation Algebraically": [[52, null], [52, "id1"]], "Solve an Ordinary Differential Equation (ODE)": [[55, "solve-an-ordinary-differential-equation-ode"]], "Solve an Ordinary Differential Equation (ODE) Algebraically": [[55, null]], "Solve and Use Results in a Dictionary": [[56, "solve-and-use-results-in-a-dictionary"]], "Solvers": [[235, null], [239, null], [298, null]], "Solveset": [[240, null]], "Solveset Module Reference": [[240, "solveset-module-reference"]], "Solving Beam Bending Problems using Singularity Functions": [[137, null]], "Solving Differential Equations": [[298, "solving-differential-equations"]], "Solving Equations": [[209, "solving-equations"]], "Solving Equations Algebraically": [[298, "solving-equations-algebraically"]], "Solving Functions": [[52, "solving-functions"]], "Solving Guidance": [[57, null]], "Solving Several Matrix Equations With the Same Matrix": [[53, "solving-several-matrix-equations-with-the-same-matrix"]], "Solving Vector Equations": [[32, "solving-vector-equations"]], "Solving the Main Problems": [[216, "solving-the-main-problems"]], "Some Key Differences": [[30, "some-key-differences"]], "Some ODEs Cannot Be Solved Explicitly, Only Implicitly": [[55, "some-odes-cannot-be-solved-explicitly-only-implicitly"]], "Some traversal functions have been moved": [[13, "some-traversal-functions-have-been-moved"]], "Sorting": [[88, "sorting"]], "Source Code Inspection": [[263, null]], "Sparse Matrices": [[126, null]], "Sparse Tools": [[127, null]], "Sparse polynomial representation": [[211, "sparse-polynomial-representation"]], "Sparse polynomials": [[212, "sparse-polynomials"]], "Sparse rational functions": [[212, "sparse-rational-functions"]], "SparseMatrix Class Reference": [[126, "sparsematrix-class-reference"]], "Special": [[96, null]], "Special C math functions (sympy.codegen.cfunctions)": [[69, "module-sympy.codegen.cfunctions"]], "Special Functions": [[297, "special-functions"]], "Special Sets": [[229, "module-sympy.sets.fancysets"]], "Special Symbols": [[16, "special-symbols"]], "Special Types of Tests": [[12, "special-types-of-tests"]], "Special polynomials": [[217, "special-polynomials"]], "Specify Initial Conditions or Boundary Conditions": [[55, "specify-initial-conditions-or-boundary-conditions"], [55, "id1"]], "Specify the Order of Symbols in the Result": [[51, "specify-the-order-of-symbols-in-the-result"]], "Specifying Intervals for Variables": [[207, "specifying-intervals-for-variables"]], "Speed up Solving Matrix Equations": [[53, "speed-up-solving-matrix-equations"]], "Spelling and Punctuation": [[5, "spelling-and-punctuation"]], "Spherical Harmonics": [[96, "spherical-harmonics"]], "Spin": [[188, null]], "Sqrt is not a Function": [[16, "sqrt-is-not-a-function"]], "Square-free factorization": [[209, "square-free-factorization"]], "State": [[189, null]], "States and Operators": [[178, "states-and-operators"]], "Statistics": [[2, "statistics"]], "Stats": [[241, null]], "Step-Response Plot": [[142, "step-response-plot"]], "Stochastic Processes": [[241, "stochastic-processes"]], "StrPrinter": [[221, "module-sympy.printing.str"]], "Structure of Equations": [[25, "structure-of-equations"], [26, "structure-of-equations"]], "Style Preferences": [[5, "style-preferences"]], "Subgroups of Finite Index": [[70, "subgroups-of-finite-index"]], "Submodules": [[100, "submodules"]], "Subresultant sequence": [[214, "subresultant-sequence"]], "Subs/evalf": [[129, "subs-evalf"]], "Subset Convolution": [[91, "subset-convolution"]], "Subsets": [[83, null]], "Substitute Solutions From solve() Into an Expression": [[52, "substitute-solutions-from-solve-into-an-expression"]], "Substitute the Result Into an Expression": [[54, "substitute-the-result-into-an-expression"]], "Substitution": [[21, "substitution"], [32, "substitution"], [286, "substitution"]], "Sums and integrals": [[92, "sums-and-integrals"]], "Support for symbols in exponents": [[220, "support-for-symbols-in-exponents"]], "SymPy Can Reduce for Only One Symbol of Interest Per Inequality": [[50, "sympy-can-reduce-for-only-one-symbol-of-interest-per-inequality"]], "SymPy Codebase": [[7, "sympy-codebase"]], "SymPy Expression Reference": [[130, "module-sympy.parsing.sym_expr"]], "SymPy Features": [[288, null]], "SymPy Logo": [[45, null]], "SymPy Mechanics for Autolev Users": [[30, null]], "SymPy Special Topics": [[40, null]], "SymPy operations on Vectors": [[269, "sympy-operations-on-vectors"]], "Symbolic Boolean vs three valued bool": [[42, "symbolic-boolean-vs-three-valued-bool"]], "Symbolic Expressions": [[16, "symbolic-expressions"]], "Symbolic Systems in Physics/Mechanics": [[31, null]], "Symbolic and fuzzy booleans": [[42, null]], "Symbolic root-finding algorithms": [[217, "symbolic-root-finding-algorithms"]], "SymbolicSystem Example Usage": [[31, "symbolicsystem-example-usage"]], "Symbols": [[16, "symbols"], [289, "symbols"]], "System (Docstrings)": [[158, null]], "System in Physics/Mechanics": [[24, "system-in-physics-mechanics"]], "System of ODEs": [[237, "system-of-odes"]], "Systems of Equations With no Closed-Form Solution": [[56, "systems-of-equations-with-no-closed-form-solution"]], "Systems of Equations With no Solution": [[56, "systems-of-equations-with-no-solution"]], "Systems of Inequalities That Cannot Be Reduced Analytically": [[50, "systems-of-inequalities-that-cannot-be-reduced-analytically"]], "Systems of Inequalities Which Cannot Be Satisfied": [[50, "systems-of-inequalities-which-cannot-be-satisfied"]], "Systems of Polynomial Equations": [[239, "systems-of-polynomial-equations"]], "TODO and Bugs": [[115, "todo-and-bugs"]], "Table Lookups and Inverse Mellin Transforms": [[113, "table-lookups-and-inverse-mellin-transforms"]], "Tendon Force-Length": [[18, "tendon-force-length"]], "Tensor": [[244, null], [247, null]], "Tensor Canonicalization": [[84, null]], "Tensor Functions": [[96, "tensor-functions"]], "Tensor Operators": [[248, null]], "Tensor Product": [[190, null]], "Tensor.fun_eval and Tensor.__call__": [[13, "tensor-fun-eval-and-tensor-call"]], "TensorIndexType.data and related methods": [[13, "tensorindextype-data-and-related-methods"]], "TensorType": [[13, "tensortype"]], "Term Rewriting": [[222, null]], "Test Coverage": [[12, "test-coverage"]], "Test Deprecated Functionality": [[12, "test-deprecated-functionality"]], "Test Utilities": [[85, null]], "Testing": [[249, null]], "Testing Exceptions": [[12, "testing-exceptions"]], "Testing Expressions with Dummy": [[12, "testing-expressions-with-dummy"]], "Testing Policies": [[12, "testing-policies"]], "Testing Warnings": [[12, "testing-warnings"]], "Testing if polynomials have common zeros": [[220, "testing-if-polynomials-have-common-zeros"]], "Testing that Something is Unchanged": [[12, "testing-that-something-is-unchanged"]], "Testing-Only Dependencies": [[2, "testing-only-dependencies"]], "Tests Style Guide": [[12, "tests-style-guide"]], "The (old) assumptions system": [[41, "the-old-assumptions-system"]], "The Construction of Collector": [[78, "the-construction-of-collector"]], "The Construction of Finitely Presented Groups": [[70, "the-construction-of-finitely-presented-groups"]], "The Construction of Polycyclic Groups": [[78, "the-construction-of-polycyclic-groups"]], "The Del operator": [[272, "the-del-operator"]], "The Fully Evaluated Case": [[43, "the-fully-evaluated-case"]], "The Fully Symbolic Case": [[43, "the-fully-symbolic-case"]], "The G-Function Integration Theorems": [[113, "the-g-function-integration-theorems"]], "The Gruntz Algorithm": [[228, "the-gruntz-algorithm"]], "The Inverse Laplace Transform of a G-function": [[113, "the-inverse-laplace-transform-of-a-g-function"]], "The ManagedProperties metaclass": [[13, "the-managedproperties-metaclass"]], "The ModularInteger.to_int() method": [[13, "the-modularinteger-to-int-method"]], "The Power of Symbolic Computation": [[291, "the-power-of-symbolic-computation"]], "The Problem": [[271, "the-problem"], [271, "id1"]], "The Subfield Problem": [[216, "the-subfield-problem"]], "The check argument to HadamardProduct, MatAdd and MatMul": [[13, "the-check-argument-to-hadamardproduct-matadd-and-matmul"]], "The dummy_fmt argument to TensorIndexType": [[13, "the-dummy-fmt-argument-to-tensorindextype"]], "The evaluate flag to differentiate_finite": [[13, "the-evaluate-flag-to-differentiate-finite"]], "The get_kronecker_delta() and get_epsilon() methods of TensorIndexType": [[13, "the-get-kronecker-delta-and-get-epsilon-methods-of-tensorindextype"]], "The get_segments attribute of plotting objects": [[13, "the-get-segments-attribute-of-plotting-objects"]], "The is_EmptySet attribute of sets": [[13, "the-is-emptyset-attribute-of-sets"]], "The max_degree and get_upper_degree properties of sympy.polys.multivariate_resultants.DixonResultant": [[13, "the-max-degree-and-get-upper-degree-properties-of-sympy-polys-multivariate-resultants-dixonresultant"]], "The mdft function in sympy.physics.matrices": [[13, "the-mdft-function-in-sympy-physics-matrices"]], "The metric argument to TensorIndexType": [[13, "the-metric-argument-to-tensorindextype"]], "The need for a reference": [[196, "the-need-for-a-reference"]], "The print_cyclic flag of sympy.combinatorics.Permutation": [[13, "the-print-cyclic-flag-of-sympy-combinatorics-permutation"]], "The private SparseMatrix._smat and DenseMatrix._mat attributes": [[13, "the-private-sparsematrix-smat-and-densematrix-mat-attributes"]], "The purpose of deprecation": [[3, "the-purpose-of-deprecation"]], "The set_potential_energy method in sympy.physics.mechanics": [[13, "the-set-potential-energy-method-in-sympy-physics-mechanics"]], "The string fallback in sympify()": [[13, "the-string-fallback-in-sympify"]], "The sympy.core.compatibility submodule": [[13, "the-sympy-core-compatibility-submodule"]], "The tensorhead() function": [[13, "the-tensorhead-function"]], "The tensorsymmetry() function": [[13, "the-tensorsymmetry-function"]], "The unicode argument and attribute to sympy.printing.pretty.stringpict.prettyForm and the sympy.printing.pretty.pretty_symbology.xstr function": [[13, "the-unicode-argument-and-attribute-to-sympy-printing-pretty-stringpict-prettyform-and-the-sympy-printing-pretty-pretty-symbology-xstr-function"]], "Third product rule for Del operator": [[271, "third-product-rule-for-del-operator"]], "Three Dimensions and Beyond": [[100, "three-dimensions-and-beyond"]], "Three-valued logic with fuzzy bools": [[42, "three-valued-logic-with-fuzzy-bools"]], "Three-valued logic with symbolic Booleans": [[42, "three-valued-logic-with-symbolic-booleans"]], "Timing Utilities": [[264, null]], "Tone Preferences": [[5, "tone-preferences"]], "Tools for simplifying expressions using approximations (sympy.codegen.approximations)": [[69, "module-sympy.codegen.approximations"]], "Topics": [[276, "topics"], [283, null]], "Tradeoffs": [[48, "tradeoffs"]], "Transforming new system": [[270, "transforming-new-system"]], "Transforms": [[91, "module-sympy.discrete.transforms"]], "Traversal": [[88, "module-sympy.core.traversal"]], "Tree Printing": [[221, "module-sympy.printing.tree"]], "Tree representation": [[211, "tree-representation"]], "Triceps": [[299, "triceps"]], "Trigonometric": [[94, "trigonometric"]], "Trigonometric Functions": [[94, "trigonometric-functions"]], "Trigonometric Inverses": [[94, "trigonometric-inverses"]], "Trigonometric Simplification": [[297, "trigonometric-simplification"]], "Truss": [[139, "truss"]], "Truss (Docstrings)": [[140, null]], "Truth Setting Expressions": [[100, "truth-setting-expressions"]], "Truth tables and related functions": [[118, "truth-tables-and-related-functions"]], "Try to avoid backwards incompatible changes in the first place": [[3, "try-to-avoid-backwards-incompatible-changes-in-the-first-place"]], "Tuples": [[16, "tuples"]], "Tutorial": [[234, "tutorial"]], "Tutorials": [[58, "tutorials"], [285, null]], "Two Final Notes: ^ and /": [[289, "two-final-notes-and"]], "Types of Documentation": [[5, "types-of-documentation"]], "Understanding Expression Trees": [[292, "understanding-expression-trees"]], "Undocumented": [[214, "undocumented"]], "Unicode Pretty Printer": [[296, "unicode-pretty-printer"]], "Unifying domains": [[211, "unifying-domains"]], "Unit Systems": [[195, null]], "Unit prefixes": [[197, null]], "Units": [[196, "units"]], "Units and unit systems": [[199, null]], "Univariate GCD, resultant and factorization": [[220, "univariate-gcd-resultant-and-factorization"]], "Univariate factoring over Gaussian numbers": [[220, "univariate-factoring-over-gaussian-numbers"]], "Univariate factoring over various domains": [[220, "univariate-factoring-over-various-domains"]], "Updating Existing Tests": [[12, "updating-existing-tests"]], "Usage": [[22, "usage"]], "Use Exact Values": [[57, "use-exact-values"]], "Use a Solution Given as a Dictionary": [[56, "use-a-solution-given-as-a-dictionary"]], "Use the Result": [[50, "use-the-result"]], "Use the Solution Result": [[48, "use-the-solution-result"], [51, "use-the-solution-result"], [52, "use-the-solution-result"], [53, "use-the-solution-result"], [54, "use-the-solution-result"], [55, "use-the-solution-result"]], "Use the Solution as a Vector": [[53, "use-the-solution-as-a-vector"]], "User Functions": [[234, "user-functions"], [237, "user-functions"], [238, "user-functions"]], "Uses and Current limitations": [[112, null]], "Using Custom Color Functions": [[207, "using-custom-color-functions"]], "Using Orienter(s) and the orient_new method": [[270, "using-orienter-s-and-the-orient-new-method"]], "Using Vectors and Reference Frames": [[36, "using-vectors-and-reference-frames"]], "Using a method of CoordSys3D directly": [[270, "using-a-method-of-coordsys3d-directly"]], "Using a set for the condition in ConditionSet": [[13, "using-a-set-for-the-condition-in-conditionset"]], "Using energy functions in Mechanics": [[28, "using-energy-functions-in-mechanics"]], "Using integrate with Poly": [[13, "using-integrate-with-poly"]], "Using momenta functions in Mechanics": [[28, "using-momenta-functions-in-mechanics"]], "Using the Interactive Interface": [[207, "using-the-interactive-interface"]], "Using the nodes": [[69, "using-the-nodes"]], "Utilities": [[86, null], [164, null], [216, "utilities"], [258, null], [276, "utilities"], [284, null]], "Utils": [[105, null]], "Variables": [[16, "variables"]], "Variables Assignment does not Create a Relation Between Expressions": [[16, "variables-assignment-does-not-create-a-relation-between-expressions"]], "Various sympy.utilities submodules have moved": [[13, "various-sympy-utilities-submodules-have-moved"]], "Vector": [[23, "vector"], [34, null], [36, "vector"], [151, "vector"], [273, null]], "Vector & ReferenceFrame": [[36, null]], "Vector API": [[266, null]], "Vector Algebra": [[36, "vector-algebra"]], "Vector Algebra, in physics.vector": [[36, "vector-algebra-in-physics-vector"]], "Vector Calculus": [[36, "vector-calculus"]], "Vector Calculus, in physics.vector": [[36, "vector-calculus-in-physics-vector"]], "Vector Operations": [[36, "vector-operations"]], "Vector: Kinematics": [[35, null]], "Vectors and Dyadics": [[270, "vectors-and-dyadics"]], "Vectors and Scalars": [[33, "vectors-and-scalars"], [274, "vectors-and-scalars"]], "Verify a Solution": [[51, "verify-a-solution"]], "Verifying Divergence Theorem": [[275, "verifying-divergence-theorem"]], "Verifying Stoke\u2019s Theorem": [[275, "verifying-stoke-s-theorem"]], "Versine": [[43, "versine"]], "Version 1.10": [[13, "version-1-10"]], "Version 1.11": [[13, "version-1-11"]], "Version 1.12": [[13, "version-1-12"]], "Version 1.13": [[13, "version-1-13"]], "Version 1.14": [[13, "version-1-14"]], "Version 1.4": [[13, "version-1-4"]], "Version 1.5": [[13, "version-1-5"]], "Version 1.6": [[13, "version-1-6"]], "Version 1.7": [[13, "version-1-7"]], "Version 1.7.1": [[13, "version-1-7-1"]], "Version 1.8": [[13, "version-1-8"]], "Version 1.9": [[13, "version-1-9"]], "View the Docs": [[8, "view-the-docs"]], "Virtual Environment Setup": [[9, "virtual-environment-setup"]], "Walking the Tree": [[292, "walking-the-tree"]], "Waves": [[165, null]], "Welcome to SymPy\u2019s documentation!": [[58, null]], "What are the domains?": [[211, "what-are-the-domains"]], "What are the general methods employed by solveset to solve an equation?": [[240, "what-are-the-general-methods-employed-by-solveset-to-solve-an-equation"]], "What is Symbolic Computation?": [[291, "what-is-symbolic-computation"]], "What is a deprecation?": [[3, "what-is-a-deprecation"]], "What is domainmatrix?": [[210, "what-is-domainmatrix"]], "What is the plan for solve and solveset?": [[240, "what-is-the-plan-for-solve-and-solveset"]], "What is this domain argument about?": [[240, "what-is-this-domain-argument-about"]], "What\u2019s Next": [[294, null]], "What\u2019s with the new_method kwarg?": [[27, null]], "What\u2019s wrong with solve():": [[240, "what-s-wrong-with-solve"]], "When You Might Prefer a Numeric Solution": [[57, "when-you-might-prefer-a-numeric-solution"]], "When does a change require deprecation?": [[3, "when-does-a-change-require-deprecation"]], "When it is not technically possible to deprecate": [[3, "when-it-is-not-technically-possible-to-deprecate"]], "When the integral exists": [[113, "when-the-integral-exists"]], "When this computation is valid": [[113, "when-this-computation-is-valid"]], "Which Method is Responsible for Printing?": [[221, "which-method-is-responsible-for-printing"]], "Why Solveset?": [[240, "why-solveset"]], "Why SymPy?": [[291, "why-sympy"]], "Why do we use Sets as an output type?": [[240, "why-do-we-use-sets-as-an-output-type"]], "Wigner Symbols": [[206, null]], "Windows 10": [[8, "windows-10"]], "Work With Arbitrary Constants": [[55, "work-with-arbitrary-constants"]], "Work With Parameters": [[51, "work-with-parameters"]], "Work With Symbolic Matrices": [[53, "work-with-symbolic-matrices"]], "Working with expressions as polynomials": [[220, "working-with-expressions-as-polynomials"]], "Wrapping Geometries": [[18, "wrapping-geometries"]], "Wrapping Geometry (Docstrings)": [[159, null]], "Writing Custom Functions": [[43, null]], "Writing Tests": [[12, null]], "Writing Tests with External Dependencies": [[12, "writing-tests-with-external-dependencies"]], "Writing commit messages": [[11, "writing-commit-messages"]], "Writing pull request title and description": [[11, "writing-pull-request-title-and-description"]], "ZZ": [[212, "zz"]], "ZZ_I": [[212, "zz-i"]], "Zero Testing": [[293, "zero-testing"]], "Zeroth-Order": [[18, "zeroth-order"]], "\\mathrm{\\LaTeX}": [[296, "mathrm-latex"]], "\\mathrm{\\LaTeX} Parsing Exceptions Reference": [[130, "mathrm-latex-parsing-exceptions-reference"]], "\\mathrm{\\LaTeX} Parsing Functions Reference": [[130, "mathrm-latex-parsing-functions-reference"]], "abc": [[60, null]], "add": [[88, "module-sympy.core.add"]], "apart": [[297, "apart"]], "args": [[292, "args"]], "as_real_imag()": [[43, "as-real-imag"]], "assumptions": [[88, "module-sympy.core.assumptions"]], "basic": [[88, "module-sympy.core.basic"]], "cache": [[88, "module-sympy.core.cache"]], "cancel": [[297, "cancel"]], "class": [[38, "class"]], "collect": [[297, "collect"]], "combsimp": [[297, "combsimp"]], "containers": [[88, "module-sympy.core.containers"]], "divides": [[43, "divides"]], "doit()": [[43, "doit"]], "dotprint": [[221, "dotprint"]], "dynamicsymbols": [[32, "dynamicsymbols"]], "evalf": [[88, "module-sympy.core.evalf"], [286, "evalf"]], "expand": [[297, "expand"]], "expand()": [[43, "expand"]], "expand_func": [[297, "expand-func"]], "expand_log": [[297, "expand-log"]], "expand_power_exp / expand_power_base": [[297, "expand-power-exp-expand-power-base"]], "expand_trig": [[297, "expand-trig"]], "expr": [[88, "module-sympy.core.expr"]], "expr_free_symbols": [[13, "expr-free-symbols"]], "exprtools": [[88, "module-sympy.core.exprtools"]], "factor": [[297, "factor"]], "func": [[38, "func"], [292, "func"]], "function": [[88, "module-sympy.core.function"]], "gammasimp": [[297, "gammasimp"]], "help()": [[16, "help"]], "hyperexpand": [[297, "hyperexpand"]], "intfunc": [[88, "module-sympy.core.intfunc"]], "inverse()": [[43, "inverse"]], "kind": [[38, "kind"], [88, "module-sympy.core.kind"]], "kinematic_equations": [[204, "module-sympy.physics.vector.functions"]], "lambdify": [[2, "lambdify"], [286, "lambdify"]], "laplace_transform of a Matrix with noconds=False": [[13, "laplace-transform-of-a-matrix-with-noconds-false"]], "logcombine": [[297, "logcombine"]], "lti": [[144, "module-sympy.physics.control.lti"]], "mechanics_printing": [[157, "mechanics-printing"]], "mlatex": [[157, "mlatex"]], "mod": [[88, "module-sympy.core.mod"]], "mpmath": [[59, "mpmath"]], "mpprint": [[157, "mpprint"]], "mprint": [[157, "mprint"]], "mul": [[88, "module-sympy.core.mul"]], "multidimensional": [[88, "module-sympy.core.multidimensional"]], "nroots": [[48, "nroots"]], "numbers": [[88, "module-sympy.core.numbers"]], "p-adic Valuation": [[216, "p-adic-valuation"]], "partitions": [[259, "partitions"]], "powdenest": [[297, "powdenest"]], "power": [[88, "module-sympy.core.power"]], "powsimp": [[297, "powsimp"]], "pytest": [[250, null]], "real_roots": [[48, "real-roots"]], "relational": [[88, "module-sympy.core.relational"]], "rewrite": [[297, "rewrite"]], "rewrite()": [[43, "rewrite"]], "roots": [[48, "roots"]], "rs_series": [[218, "rs-series"]], "sets and assumptions": [[38, "sets-and-assumptions"]], "simplify": [[297, "simplify"]], "singleton": [[88, "module-sympy.core.singleton"]], "solveset() Solution Sets Cannot Necessarily Be Interrogated Programmatically": [[52, "solveset-solution-sets-cannot-necessarily-be-interrogated-programmatically"]], "srepr": [[221, "module-sympy.printing.repr"], [296, "srepr"]], "str": [[296, "str"]], "symbol": [[88, "module-sympy.core.symbol"]], "sympify": [[88, "module-sympy.core.sympify"]], "sympy.assumptions.handlers.AskHandler and related methods": [[13, "sympy-assumptions-handlers-askhandler-and-related-methods"]], "sympy.core.trace": [[13, "sympy-core-trace"]], "sympy.polys.solvers.RawMatrix": [[13, "sympy-polys-solvers-rawmatrix"]], "sympy.printing.theanocode": [[13, "sympy-printing-theanocode"]], "sympy.stats.DiscreteMarkovChain.absorbing_probabilites()": [[13, "sympy-stats-discretemarkovchain-absorbing-probabilites"]], "sympy.stats.sample(numsamples=n)": [[13, "sympy-stats-sample-numsamples-n"]], "sympy.testing.randtest": [[13, "sympy-testing-randtest"]], "sympy.utilities.misc.find_executable()": [[13, "sympy-utilities-misc-find-executable"]], "transolve": [[240, "transolve"]], "trigsimp": [[297, "trigsimp"]], "uFuncify": [[129, "ufuncify"]], "variations": [[259, "variations"]]}, "docnames": ["citing", "contributing/debug", "contributing/dependencies", "contributing/deprecations", "contributing/docstring", "contributing/documentation-style-guide", "contributing/index", "contributing/introduction-to-contributing", "contributing/new-contributors-guide/build-docs", "contributing/new-contributors-guide/dev-setup", "contributing/new-contributors-guide/index", "contributing/new-contributors-guide/workflow-process", "contributing/new-contributors-guide/writing-tests", "explanation/active-deprecations", "explanation/best-practices", "explanation/glossary", "explanation/gotchas", "explanation/index", "explanation/modules/physics/biomechanics/biomechanics", "explanation/modules/physics/biomechanics/index", "explanation/modules/physics/index", "explanation/modules/physics/mechanics/advanced", "explanation/modules/physics/mechanics/autolev_parser", "explanation/modules/physics/mechanics/index", "explanation/modules/physics/mechanics/joints", "explanation/modules/physics/mechanics/kane", "explanation/modules/physics/mechanics/lagrange", "explanation/modules/physics/mechanics/linearize", "explanation/modules/physics/mechanics/masses", "explanation/modules/physics/mechanics/reference", "explanation/modules/physics/mechanics/sympy_mechanics_for_autolev_users", "explanation/modules/physics/mechanics/symsystem", "explanation/modules/physics/vector/advanced", "explanation/modules/physics/vector/fields", "explanation/modules/physics/vector/index", "explanation/modules/physics/vector/kinematics/kinematics", "explanation/modules/physics/vector/vectors/vectors", "explanation/solve_output", "explanation/special_topics/classification", "explanation/special_topics/finite_diff_derivatives", "explanation/special_topics/index", "guides/assumptions", "guides/booleans", "guides/custom-functions", "guides/index", "guides/logo", "guides/physics/control_problems", "guides/physics/index", "guides/solving/find-roots-polynomial", "guides/solving/index", "guides/solving/reduce-inequalities-algebraically", "guides/solving/solve-diophantine-equation", "guides/solving/solve-equation-algebraically", "guides/solving/solve-matrix-equation", "guides/solving/solve-numerically", "guides/solving/solve-ode", "guides/solving/solve-system-of-equations-algebraically", "guides/solving/solving-guidance", "index", "install", "modules/abc", "modules/algebras", "modules/assumptions/ask", "modules/assumptions/assume", "modules/assumptions/index", "modules/assumptions/predicates", "modules/assumptions/refine", "modules/calculus/index", "modules/categories", "modules/codegen", "modules/combinatorics/fp_groups", "modules/combinatorics/galois", "modules/combinatorics/graycode", "modules/combinatorics/group_constructs", "modules/combinatorics/group_numbers", "modules/combinatorics/index", "modules/combinatorics/named_groups", "modules/combinatorics/partitions", "modules/combinatorics/pc_groups", "modules/combinatorics/perm_groups", "modules/combinatorics/permutations", "modules/combinatorics/polyhedron", "modules/combinatorics/prufer", "modules/combinatorics/subsets", "modules/combinatorics/tensor_can", "modules/combinatorics/testutil", "modules/combinatorics/util", "modules/concrete", "modules/core", "modules/crypto", "modules/diffgeom", "modules/discrete", "modules/evalf", "modules/functions/combinatorial", "modules/functions/elementary", "modules/functions/index", "modules/functions/special", "modules/geometry/curves", "modules/geometry/ellipses", "modules/geometry/entities", "modules/geometry/index", "modules/geometry/lines", "modules/geometry/plane", "modules/geometry/points", "modules/geometry/polygons", "modules/geometry/utils", "modules/holonomic/about", "modules/holonomic/convert", "modules/holonomic/index", "modules/holonomic/internal", "modules/holonomic/operations", "modules/holonomic/represent", "modules/holonomic/uses", "modules/integrals/g-functions", "modules/integrals/index", "modules/integrals/integrals", "modules/interactive", "modules/liealgebras/index", "modules/logic", "modules/matrices/dense", "modules/matrices/expressions", "modules/matrices/immutablematrices", "modules/matrices/index", "modules/matrices/kind", "modules/matrices/matrices", "modules/matrices/normalforms", "modules/matrices/sparse", "modules/matrices/sparsetools", "modules/ntheory", "modules/numeric-computation", "modules/parsing", "modules/physics/biomechanics/api/activation", "modules/physics/biomechanics/api/curve", "modules/physics/biomechanics/api/index", "modules/physics/biomechanics/api/musculotendon", "modules/physics/continuum_mechanics/arches", "modules/physics/continuum_mechanics/beam", "modules/physics/continuum_mechanics/beam_problems", "modules/physics/continuum_mechanics/cable", "modules/physics/continuum_mechanics/index", "modules/physics/continuum_mechanics/truss", "modules/physics/control/control", "modules/physics/control/control_plots", "modules/physics/control/index", "modules/physics/control/lti", "modules/physics/hep/index", "modules/physics/hydrogen", "modules/physics/matrices", "modules/physics/mechanics/api/actuator", "modules/physics/mechanics/api/deprecated_classes", "modules/physics/mechanics/api/expr_manip", "modules/physics/mechanics/api/index", "modules/physics/mechanics/api/joint", "modules/physics/mechanics/api/kane_lagrange", "modules/physics/mechanics/api/linearize", "modules/physics/mechanics/api/part_bod", "modules/physics/mechanics/api/pathway", "modules/physics/mechanics/api/printing", "modules/physics/mechanics/api/system", "modules/physics/mechanics/api/wrapping_geometry", "modules/physics/optics/gaussopt", "modules/physics/optics/index", "modules/physics/optics/medium", "modules/physics/optics/polarization", "modules/physics/optics/utils", "modules/physics/optics/waves", "modules/physics/paulialgebra", "modules/physics/qho_1d", "modules/physics/quantum/anticommutator", "modules/physics/quantum/cartesian", "modules/physics/quantum/cg", "modules/physics/quantum/circuitplot", "modules/physics/quantum/commutator", "modules/physics/quantum/constants", "modules/physics/quantum/dagger", "modules/physics/quantum/gate", "modules/physics/quantum/grover", "modules/physics/quantum/hilbert", "modules/physics/quantum/index", "modules/physics/quantum/innerproduct", "modules/physics/quantum/operator", "modules/physics/quantum/operatorset", "modules/physics/quantum/piab", "modules/physics/quantum/qapply", "modules/physics/quantum/qft", "modules/physics/quantum/qubit", "modules/physics/quantum/represent", "modules/physics/quantum/shor", "modules/physics/quantum/spin", "modules/physics/quantum/state", "modules/physics/quantum/tensorproduct", "modules/physics/secondquant", "modules/physics/sho", "modules/physics/units/dimensions", "modules/physics/units/examples", "modules/physics/units/index", "modules/physics/units/philosophy", "modules/physics/units/prefixes", "modules/physics/units/quantities", "modules/physics/units/unitsystem", "modules/physics/vector/api/classes", "modules/physics/vector/api/fieldfunctions", "modules/physics/vector/api/functions", "modules/physics/vector/api/index", "modules/physics/vector/api/kinematics", "modules/physics/vector/api/printing", "modules/physics/wigner", "modules/plotting", "modules/polys/agca", "modules/polys/basics", "modules/polys/domainmatrix", "modules/polys/domainsintro", "modules/polys/domainsref", "modules/polys/index", "modules/polys/internals", "modules/polys/literature", "modules/polys/numberfields", "modules/polys/reference", "modules/polys/ringseries", "modules/polys/solvers", "modules/polys/wester", "modules/printing", "modules/rewriting", "modules/series/formal", "modules/series/fourier", "modules/series/index", "modules/series/limitseq", "modules/series/sequences", "modules/series/series", "modules/sets", "modules/simplify/fu", "modules/simplify/hyperexpand", "modules/simplify/index", "modules/simplify/simplify", "modules/solvers/diophantine", "modules/solvers/index", "modules/solvers/inequalities", "modules/solvers/ode", "modules/solvers/pde", "modules/solvers/solvers", "modules/solvers/solveset", "modules/stats", "modules/tensor/array", "modules/tensor/array_expressions", "modules/tensor/index", "modules/tensor/index_methods", "modules/tensor/indexed", "modules/tensor/tensor", "modules/tensor/toperators", "modules/testing/index", "modules/testing/pytest", "modules/testing/randtest", "modules/testing/runtests", "modules/utilities/autowrap", "modules/utilities/codegen", "modules/utilities/decorator", "modules/utilities/enumerative", "modules/utilities/exceptions", "modules/utilities/index", "modules/utilities/iterables", "modules/utilities/lambdify", "modules/utilities/memoization", "modules/utilities/misc", "modules/utilities/source", "modules/utilities/timeutils", "modules/vector/api/classes", "modules/vector/api/index", "modules/vector/api/orienterclasses", "modules/vector/api/vectorfunctions", "modules/vector/basics", "modules/vector/coordsys", "modules/vector/examples", "modules/vector/fields", "modules/vector/index", "modules/vector/intro", "modules/vector/vector_integration", "reference/index", "reference/public/basics/index", "reference/public/codegeneration/index", "reference/public/logic/index", "reference/public/matrices/index", "reference/public/numbertheory/index", "reference/public/physics/index", "reference/public/topics/index", "reference/public/utilities/index", "tutorials/index", "tutorials/intro-tutorial/basic_operations", "tutorials/intro-tutorial/calculus", "tutorials/intro-tutorial/features", "tutorials/intro-tutorial/gotchas", "tutorials/intro-tutorial/index", "tutorials/intro-tutorial/intro", "tutorials/intro-tutorial/manipulation", "tutorials/intro-tutorial/matrices", "tutorials/intro-tutorial/next", "tutorials/intro-tutorial/preliminaries", "tutorials/intro-tutorial/printing", "tutorials/intro-tutorial/simplification", "tutorials/intro-tutorial/solvers", "tutorials/physics/biomechanics/biomechanical-model-example", "tutorials/physics/biomechanics/index", "tutorials/physics/index", "tutorials/physics/mechanics/bicycle_example", "tutorials/physics/mechanics/duffing-example", "tutorials/physics/mechanics/four_bar_linkage_example", "tutorials/physics/mechanics/index", "tutorials/physics/mechanics/lin_pend_nonmin_example", "tutorials/physics/mechanics/multi_degree_freedom_holonomic_system", "tutorials/physics/mechanics/rollingdisc_example", "tutorials/physics/mechanics/rollingdisc_example_kane", "tutorials/physics/mechanics/rollingdisc_example_kane_constraints", "tutorials/physics/mechanics/rollingdisc_example_lagrange"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["citing.md", "contributing/debug.rst", "contributing/dependencies.md", "contributing/deprecations.md", "contributing/docstring.rst", "contributing/documentation-style-guide.rst", "contributing/index.md", "contributing/introduction-to-contributing.md", "contributing/new-contributors-guide/build-docs.rst", "contributing/new-contributors-guide/dev-setup.md", "contributing/new-contributors-guide/index.md", "contributing/new-contributors-guide/workflow-process.md", "contributing/new-contributors-guide/writing-tests.md", "explanation/active-deprecations.md", "explanation/best-practices.md", "explanation/glossary.md", "explanation/gotchas.rst", "explanation/index.rst", "explanation/modules/physics/biomechanics/biomechanics.rst", "explanation/modules/physics/biomechanics/index.rst", "explanation/modules/physics/index.rst", "explanation/modules/physics/mechanics/advanced.rst", "explanation/modules/physics/mechanics/autolev_parser.rst", "explanation/modules/physics/mechanics/index.rst", "explanation/modules/physics/mechanics/joints.rst", "explanation/modules/physics/mechanics/kane.rst", "explanation/modules/physics/mechanics/lagrange.rst", "explanation/modules/physics/mechanics/linearize.rst", "explanation/modules/physics/mechanics/masses.rst", "explanation/modules/physics/mechanics/reference.rst", "explanation/modules/physics/mechanics/sympy_mechanics_for_autolev_users.rst", "explanation/modules/physics/mechanics/symsystem.rst", "explanation/modules/physics/vector/advanced.rst", "explanation/modules/physics/vector/fields.rst", "explanation/modules/physics/vector/index.rst", "explanation/modules/physics/vector/kinematics/kinematics.rst", "explanation/modules/physics/vector/vectors/vectors.rst", "explanation/solve_output.rst", "explanation/special_topics/classification.rst", "explanation/special_topics/finite_diff_derivatives.rst", "explanation/special_topics/index.rst", "guides/assumptions.rst", "guides/booleans.rst", "guides/custom-functions.md", "guides/index.rst", "guides/logo.rst", "guides/physics/control_problems.rst", "guides/physics/index.rst", "guides/solving/find-roots-polynomial.md", "guides/solving/index.md", "guides/solving/reduce-inequalities-algebraically.md", "guides/solving/solve-diophantine-equation.md", "guides/solving/solve-equation-algebraically.md", "guides/solving/solve-matrix-equation.md", "guides/solving/solve-numerically.md", "guides/solving/solve-ode.md", "guides/solving/solve-system-of-equations-algebraically.md", "guides/solving/solving-guidance.md", "index.rst", "install.md", "modules/abc.rst", "modules/algebras.rst", "modules/assumptions/ask.rst", "modules/assumptions/assume.rst", "modules/assumptions/index.rst", "modules/assumptions/predicates.rst", "modules/assumptions/refine.rst", "modules/calculus/index.rst", "modules/categories.rst", "modules/codegen.rst", "modules/combinatorics/fp_groups.rst", "modules/combinatorics/galois.rst", "modules/combinatorics/graycode.rst", "modules/combinatorics/group_constructs.rst", "modules/combinatorics/group_numbers.rst", "modules/combinatorics/index.rst", "modules/combinatorics/named_groups.rst", "modules/combinatorics/partitions.rst", "modules/combinatorics/pc_groups.rst", "modules/combinatorics/perm_groups.rst", "modules/combinatorics/permutations.rst", "modules/combinatorics/polyhedron.rst", "modules/combinatorics/prufer.rst", "modules/combinatorics/subsets.rst", "modules/combinatorics/tensor_can.rst", "modules/combinatorics/testutil.rst", "modules/combinatorics/util.rst", "modules/concrete.rst", "modules/core.rst", "modules/crypto.rst", "modules/diffgeom.rst", "modules/discrete.rst", "modules/evalf.rst", "modules/functions/combinatorial.rst", "modules/functions/elementary.rst", "modules/functions/index.rst", "modules/functions/special.rst", "modules/geometry/curves.rst", "modules/geometry/ellipses.rst", "modules/geometry/entities.rst", "modules/geometry/index.rst", "modules/geometry/lines.rst", "modules/geometry/plane.rst", "modules/geometry/points.rst", "modules/geometry/polygons.rst", "modules/geometry/utils.rst", "modules/holonomic/about.rst", "modules/holonomic/convert.rst", "modules/holonomic/index.rst", "modules/holonomic/internal.rst", "modules/holonomic/operations.rst", "modules/holonomic/represent.rst", "modules/holonomic/uses.rst", "modules/integrals/g-functions.rst", "modules/integrals/index.rst", "modules/integrals/integrals.rst", "modules/interactive.rst", "modules/liealgebras/index.rst", "modules/logic.rst", "modules/matrices/dense.rst", "modules/matrices/expressions.rst", "modules/matrices/immutablematrices.rst", "modules/matrices/index.rst", "modules/matrices/kind.rst", "modules/matrices/matrices.rst", "modules/matrices/normalforms.rst", "modules/matrices/sparse.rst", "modules/matrices/sparsetools.rst", "modules/ntheory.rst", "modules/numeric-computation.rst", "modules/parsing.rst", "modules/physics/biomechanics/api/activation.rst", "modules/physics/biomechanics/api/curve.rst", "modules/physics/biomechanics/api/index.rst", "modules/physics/biomechanics/api/musculotendon.rst", "modules/physics/continuum_mechanics/arches.rst", "modules/physics/continuum_mechanics/beam.rst", "modules/physics/continuum_mechanics/beam_problems.rst", "modules/physics/continuum_mechanics/cable.rst", "modules/physics/continuum_mechanics/index.rst", "modules/physics/continuum_mechanics/truss.rst", "modules/physics/control/control.rst", "modules/physics/control/control_plots.rst", "modules/physics/control/index.rst", "modules/physics/control/lti.rst", "modules/physics/hep/index.rst", "modules/physics/hydrogen.rst", "modules/physics/matrices.rst", "modules/physics/mechanics/api/actuator.rst", "modules/physics/mechanics/api/deprecated_classes.rst", "modules/physics/mechanics/api/expr_manip.rst", "modules/physics/mechanics/api/index.rst", "modules/physics/mechanics/api/joint.rst", "modules/physics/mechanics/api/kane_lagrange.rst", "modules/physics/mechanics/api/linearize.rst", "modules/physics/mechanics/api/part_bod.rst", "modules/physics/mechanics/api/pathway.rst", "modules/physics/mechanics/api/printing.rst", "modules/physics/mechanics/api/system.rst", "modules/physics/mechanics/api/wrapping_geometry.rst", "modules/physics/optics/gaussopt.rst", "modules/physics/optics/index.rst", "modules/physics/optics/medium.rst", "modules/physics/optics/polarization.rst", "modules/physics/optics/utils.rst", "modules/physics/optics/waves.rst", "modules/physics/paulialgebra.rst", "modules/physics/qho_1d.rst", "modules/physics/quantum/anticommutator.rst", "modules/physics/quantum/cartesian.rst", "modules/physics/quantum/cg.rst", "modules/physics/quantum/circuitplot.rst", "modules/physics/quantum/commutator.rst", "modules/physics/quantum/constants.rst", "modules/physics/quantum/dagger.rst", "modules/physics/quantum/gate.rst", "modules/physics/quantum/grover.rst", "modules/physics/quantum/hilbert.rst", "modules/physics/quantum/index.rst", "modules/physics/quantum/innerproduct.rst", "modules/physics/quantum/operator.rst", "modules/physics/quantum/operatorset.rst", "modules/physics/quantum/piab.rst", "modules/physics/quantum/qapply.rst", "modules/physics/quantum/qft.rst", "modules/physics/quantum/qubit.rst", "modules/physics/quantum/represent.rst", "modules/physics/quantum/shor.rst", "modules/physics/quantum/spin.rst", "modules/physics/quantum/state.rst", "modules/physics/quantum/tensorproduct.rst", "modules/physics/secondquant.rst", "modules/physics/sho.rst", "modules/physics/units/dimensions.rst", "modules/physics/units/examples.rst", "modules/physics/units/index.rst", "modules/physics/units/philosophy.rst", "modules/physics/units/prefixes.rst", "modules/physics/units/quantities.rst", "modules/physics/units/unitsystem.rst", "modules/physics/vector/api/classes.rst", "modules/physics/vector/api/fieldfunctions.rst", "modules/physics/vector/api/functions.rst", "modules/physics/vector/api/index.rst", "modules/physics/vector/api/kinematics.rst", "modules/physics/vector/api/printing.rst", "modules/physics/wigner.rst", "modules/plotting.rst", "modules/polys/agca.rst", "modules/polys/basics.rst", "modules/polys/domainmatrix.rst", "modules/polys/domainsintro.rst", "modules/polys/domainsref.rst", "modules/polys/index.rst", "modules/polys/internals.rst", "modules/polys/literature.rst", "modules/polys/numberfields.rst", "modules/polys/reference.rst", "modules/polys/ringseries.rst", "modules/polys/solvers.rst", "modules/polys/wester.rst", "modules/printing.rst", "modules/rewriting.rst", "modules/series/formal.rst", "modules/series/fourier.rst", "modules/series/index.rst", "modules/series/limitseq.rst", "modules/series/sequences.rst", "modules/series/series.rst", "modules/sets.rst", "modules/simplify/fu.rst", "modules/simplify/hyperexpand.rst", "modules/simplify/index.rst", "modules/simplify/simplify.rst", "modules/solvers/diophantine.rst", "modules/solvers/index.rst", "modules/solvers/inequalities.rst", "modules/solvers/ode.rst", "modules/solvers/pde.rst", "modules/solvers/solvers.rst", "modules/solvers/solveset.rst", "modules/stats.rst", "modules/tensor/array.rst", "modules/tensor/array_expressions.rst", "modules/tensor/index.rst", "modules/tensor/index_methods.rst", "modules/tensor/indexed.rst", "modules/tensor/tensor.rst", "modules/tensor/toperators.rst", "modules/testing/index.rst", "modules/testing/pytest.rst", "modules/testing/randtest.rst", "modules/testing/runtests.rst", "modules/utilities/autowrap.rst", "modules/utilities/codegen.rst", "modules/utilities/decorator.rst", "modules/utilities/enumerative.rst", "modules/utilities/exceptions.rst", "modules/utilities/index.rst", "modules/utilities/iterables.rst", "modules/utilities/lambdify.rst", "modules/utilities/memoization.rst", "modules/utilities/misc.rst", "modules/utilities/source.rst", "modules/utilities/timeutils.rst", "modules/vector/api/classes.rst", "modules/vector/api/index.rst", "modules/vector/api/orienterclasses.rst", "modules/vector/api/vectorfunctions.rst", "modules/vector/basics.rst", "modules/vector/coordsys.rst", "modules/vector/examples.rst", "modules/vector/fields.rst", "modules/vector/index.rst", "modules/vector/intro.rst", "modules/vector/vector_integration.rst", "reference/index.rst", "reference/public/basics/index.rst", "reference/public/codegeneration/index.rst", "reference/public/logic/index.rst", "reference/public/matrices/index.rst", "reference/public/numbertheory/index.rst", "reference/public/physics/index.rst", "reference/public/topics/index.rst", "reference/public/utilities/index.rst", "tutorials/index.rst", "tutorials/intro-tutorial/basic_operations.rst", "tutorials/intro-tutorial/calculus.rst", "tutorials/intro-tutorial/features.rst", "tutorials/intro-tutorial/gotchas.rst", "tutorials/intro-tutorial/index.rst", "tutorials/intro-tutorial/intro.rst", "tutorials/intro-tutorial/manipulation.rst", "tutorials/intro-tutorial/matrices.rst", "tutorials/intro-tutorial/next.rst", "tutorials/intro-tutorial/preliminaries.rst", "tutorials/intro-tutorial/printing.rst", "tutorials/intro-tutorial/simplification.rst", "tutorials/intro-tutorial/solvers.rst", "tutorials/physics/biomechanics/biomechanical-model-example.rst", "tutorials/physics/biomechanics/index.rst", "tutorials/physics/index.rst", "tutorials/physics/mechanics/bicycle_example.rst", "tutorials/physics/mechanics/duffing-example.rst", "tutorials/physics/mechanics/four_bar_linkage_example.rst", "tutorials/physics/mechanics/index.rst", "tutorials/physics/mechanics/lin_pend_nonmin_example.rst", "tutorials/physics/mechanics/multi_degree_freedom_holonomic_system.rst", "tutorials/physics/mechanics/rollingdisc_example.rst", "tutorials/physics/mechanics/rollingdisc_example_kane.rst", "tutorials/physics/mechanics/rollingdisc_example_kane_constraints.rst", "tutorials/physics/mechanics/rollingdisc_example_lagrange.rst"], "indexentries": {"__abs__() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.__abs__", false]], "__add__() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.__add__", false]], "__add__() (sympy.polys.numberfields.modules.moduleelement method)": [[216, "sympy.polys.numberfields.modules.ModuleElement.__add__", false]], "__add__() (sympy.polys.numberfields.primes.primeideal method)": [[216, "sympy.polys.numberfields.primes.PrimeIdeal.__add__", false]], "__cacheit() (in module sympy.core.cache)": [[88, "sympy.core.cache.__cacheit", false]], "__call__() (sympy.polys.numberfields.modules.module method)": [[216, "sympy.polys.numberfields.modules.Module.__call__", false]], "__contains__() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.__contains__", false]], "__getitem__() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.__getitem__", false]], "__init__() (sympy.physics.mechanics.linearize.linearizer method)": [[154, "sympy.physics.mechanics.linearize.Linearizer.__init__", false]], "__init__() (sympy.polys.numberfields.modules.endomorphismring method)": [[216, "sympy.polys.numberfields.modules.EndomorphismRing.__init__", false]], "__init__() (sympy.polys.numberfields.modules.innerendomorphism method)": [[216, "sympy.polys.numberfields.modules.InnerEndomorphism.__init__", false]], "__init__() (sympy.polys.numberfields.modules.moduleelement method)": [[216, "sympy.polys.numberfields.modules.ModuleElement.__init__", false]], "__init__() (sympy.polys.numberfields.modules.moduleendomorphism method)": [[216, "sympy.polys.numberfields.modules.ModuleEndomorphism.__init__", false]], "__init__() (sympy.polys.numberfields.modules.modulehomomorphism method)": [[216, "sympy.polys.numberfields.modules.ModuleHomomorphism.__init__", false]], "__init__() (sympy.polys.numberfields.modules.powerbasis method)": [[216, "sympy.polys.numberfields.modules.PowerBasis.__init__", false]], "__init__() (sympy.polys.numberfields.modules.submodule method)": [[216, "sympy.polys.numberfields.modules.Submodule.__init__", false]], "__init__() (sympy.polys.numberfields.primes.primeideal method)": [[216, "sympy.polys.numberfields.primes.PrimeIdeal.__init__", false]], "__init__() (sympy.polys.numberfields.utilities.algintpowers method)": [[216, "sympy.polys.numberfields.utilities.AlgIntPowers.__init__", false]], "__init__() (sympy.vector.coordsysrect.coordsys3d method)": [[265, "sympy.vector.coordsysrect.CoordSys3D.__init__", false]], "__init__() (sympy.vector.orienters.axisorienter method)": [[267, "sympy.vector.orienters.AxisOrienter.__init__", false]], "__init__() (sympy.vector.orienters.bodyorienter method)": [[267, "sympy.vector.orienters.BodyOrienter.__init__", false]], "__init__() (sympy.vector.orienters.quaternionorienter method)": [[267, "sympy.vector.orienters.QuaternionOrienter.__init__", false]], "__init__() (sympy.vector.orienters.spaceorienter method)": [[267, "sympy.vector.orienters.SpaceOrienter.__init__", false]], "__len__() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.__len__", false]], "__mod__() (sympy.polys.numberfields.modules.moduleelement method)": [[216, "sympy.polys.numberfields.modules.ModuleElement.__mod__", false]], "__mul__() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.__mul__", false]], "__mul__() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.__mul__", false]], "__mul__() (sympy.polys.numberfields.modules.moduleelement method)": [[216, "sympy.polys.numberfields.modules.ModuleElement.__mul__", false]], "__mul__() (sympy.polys.numberfields.primes.primeideal method)": [[216, "sympy.polys.numberfields.primes.PrimeIdeal.__mul__", false]], "__new__() (sympy.combinatorics.perm_groups.permutationgroup static method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.__new__", false]], "__new__() (sympy.core.numbers.algebraicnumber static method)": [[88, "sympy.core.numbers.AlgebraicNumber.__new__", false]], "__pow__() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.__pow__", false]], "__weakref__ (sympy.combinatorics.perm_groups.permutationgroup attribute)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.__weakref__", false]], "__weakref__ (sympy.matrices.kind.matrixkind attribute)": [[123, "sympy.matrices.kind.MatrixKind.__weakref__", false]], "__weakref__ (sympy.matrices.matrixbase.matrixbase attribute)": [[124, "sympy.matrices.matrixbase.MatrixBase.__weakref__", false]], "_af_parity() (in module sympy.combinatorics.permutations)": [[80, "sympy.combinatorics.permutations._af_parity", false]], "_all_roots() (sympy.polys.rootoftools.complexrootof class method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._all_roots", false]], "_base_ordering() (in module sympy.combinatorics.util)": [[86, "sympy.combinatorics.util._base_ordering", false]], "_check_antecedents() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._check_antecedents", false]], "_check_antecedents_1() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._check_antecedents_1", false]], "_check_antecedents_inversion() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._check_antecedents_inversion", false]], "_check_cycles_alt_sym() (in module sympy.combinatorics.util)": [[86, "sympy.combinatorics.util._check_cycles_alt_sym", false]], "_cmp_perm_lists() (in module sympy.combinatorics.testutil)": [[85, "sympy.combinatorics.testutil._cmp_perm_lists", false]], "_coeffexpvalueerror": [[113, "sympy.integrals.meijerint._CoeffExpValueError", false]], "_complexes_index() (sympy.polys.rootoftools.complexrootof class method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._complexes_index", false]], "_complexes_sorted() (sympy.polys.rootoftools.complexrootof class method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._complexes_sorted", false]], "_condsimp() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._condsimp", false]], "_convert_poly_rat_alg() (in module sympy.holonomic.holonomic)": [[109, "sympy.holonomic.holonomic._convert_poly_rat_alg", false]], "_coset_representative() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup._coset_representative", false]], "_count_roots() (sympy.polys.rootoftools.complexrootof class method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._count_roots", false]], "_create_lookup_table() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._create_lookup_table", false]], "_create_table() (in module sympy.holonomic.holonomic)": [[109, "sympy.holonomic.holonomic._create_table", false]], "_csrtodok() (in module sympy.matrices.sparsetools)": [[127, "sympy.matrices.sparsetools._csrtodok", false]], "_default_settings (sympy.printing.smtlib.smtlibprinter attribute)": [[221, "sympy.printing.smtlib.SMTLibPrinter._default_settings", false]], "_diff_wrt (sympy.core.function.derivative property)": [[88, "sympy.core.function.Derivative._diff_wrt", false]], "_distinct_primes_lemma() (sympy.combinatorics.perm_groups.permutationgroup class method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup._distinct_primes_lemma", false]], "_distribute_gens_by_base() (in module sympy.combinatorics.util)": [[86, "sympy.combinatorics.util._distribute_gens_by_base", false]], "_doktocsr() (in module sympy.matrices.sparsetools)": [[127, "sympy.matrices.sparsetools._doktocsr", false]], "_dummy() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._dummy", false]], "_dummy_() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._dummy_", false]], "_ensure_complexes_init() (sympy.polys.rootoftools.complexrootof method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._ensure_complexes_init", false]], "_ensure_reals_init() (sympy.polys.rootoftools.complexrootof method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._ensure_reals_init", false]], "_eval_*": [[15, "term-_eval_", true]], "_eval_cond() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._eval_cond", false]], "_eval_evalf() (sympy.polys.rootoftools.complexrootof method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._eval_evalf", false]], "_eval_integral() (sympy.functions.elementary.piecewise.piecewise method)": [[94, "sympy.functions.elementary.piecewise.Piecewise._eval_integral", false]], "_eval_is_alt_sym_monte_carlo() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup._eval_is_alt_sym_monte_carlo", false]], "_eval_is_alt_sym_naive() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup._eval_is_alt_sym_naive", false]], "_eval_is_imaginary() (sympy.polys.rootoftools.complexrootof method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._eval_is_imaginary", false]], "_eval_is_real() (sympy.polys.rootoftools.complexrootof method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._eval_is_real", false]], "_exponents() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._exponents", false]], "_find_splitting_points() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._find_splitting_points", false]], "_flip_g() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._flip_g", false]], "_fourier_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms._fourier_transform", false]], "_functions() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._functions", false]], "_get_coeff_exp() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._get_coeff_exp", false]], "_get_complexes() (sympy.polys.rootoftools.complexrootof class method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._get_complexes", false]], "_get_complexes_sqf() (sympy.polys.rootoftools.complexrootof class method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._get_complexes_sqf", false]], "_get_interval() (sympy.polys.rootoftools.complexrootof method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._get_interval", false]], "_get_reals() (sympy.polys.rootoftools.complexrootof class method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._get_reals", false]], "_get_reals_sqf() (sympy.polys.rootoftools.complexrootof class method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._get_reals_sqf", false]], "_get_roots() (sympy.polys.rootoftools.complexrootof class method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._get_roots", false]], "_get_roots_alg() (sympy.polys.rootoftools.complexrootof class method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._get_roots_alg", false]], "_get_roots_qq() (sympy.polys.rootoftools.complexrootof class method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._get_roots_qq", false]], "_guess_expansion() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._guess_expansion", false]], "_handle_integral() (in module sympy.solvers.ode.ode)": [[237, "sympy.solvers.ode.ode._handle_Integral", false]], "_handle_precomputed_bsgs() (in module sympy.combinatorics.util)": [[86, "sympy.combinatorics.util._handle_precomputed_bsgs", false]], "_indexed_root() (sympy.polys.rootoftools.complexrootof class method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._indexed_root", false]], "_inflate_fox_h() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._inflate_fox_h", false]], "_inflate_g() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._inflate_g", false]], "_int0oo() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._int0oo", false]], "_int0oo_1() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._int0oo_1", false]], "_int_inversion() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._int_inversion", false]], "_is_analytic() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._is_analytic", false]], "_is_exponential() (in module sympy.solvers.solveset)": [[240, "sympy.solvers.solveset._is_exponential", false]], "_is_logarithmic() (in module sympy.solvers.solveset)": [[240, "sympy.solvers.solveset._is_logarithmic", false]], "_linear_2eq_order1_type6() (in module sympy.solvers.ode.ode)": [[237, "sympy.solvers.ode.ode._linear_2eq_order1_type6", false]], "_linear_2eq_order1_type7() (in module sympy.solvers.ode.ode)": [[237, "sympy.solvers.ode.ode._linear_2eq_order1_type7", false]], "_meijerint_definite_2() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._meijerint_definite_2", false]], "_meijerint_definite_3() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._meijerint_definite_3", false]], "_meijerint_definite_4() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._meijerint_definite_4", false]], "_meijerint_indefinite_1() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._meijerint_indefinite_1", false]], "_modgcd_multivariate_p() (in module sympy.polys.modulargcd)": [[214, "sympy.polys.modulargcd._modgcd_multivariate_p", false]], "_mul_args() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._mul_args", false]], "_mul_as_two_parts() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._mul_as_two_parts", false]], "_my_principal_branch() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._my_principal_branch", false]], "_mytype() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._mytype", false]], "_naive_list_centralizer() (in module sympy.combinatorics.testutil)": [[85, "sympy.combinatorics.testutil._naive_list_centralizer", false]], "_new() (sympy.polys.rootoftools.complexrootof class method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._new", false]], "_nonlinear_2eq_order1_type1() (in module sympy.solvers.ode.ode)": [[237, "sympy.solvers.ode.ode._nonlinear_2eq_order1_type1", false]], "_nonlinear_2eq_order1_type2() (in module sympy.solvers.ode.ode)": [[237, "sympy.solvers.ode.ode._nonlinear_2eq_order1_type2", false]], "_nonlinear_2eq_order1_type3() (in module sympy.solvers.ode.ode)": [[237, "sympy.solvers.ode.ode._nonlinear_2eq_order1_type3", false]], "_nonlinear_2eq_order1_type4() (in module sympy.solvers.ode.ode)": [[237, "sympy.solvers.ode.ode._nonlinear_2eq_order1_type4", false]], "_nonlinear_2eq_order1_type5() (in module sympy.solvers.ode.ode)": [[237, "sympy.solvers.ode.ode._nonlinear_2eq_order1_type5", false]], "_nonlinear_3eq_order1_type1() (in module sympy.solvers.ode.ode)": [[237, "sympy.solvers.ode.ode._nonlinear_3eq_order1_type1", false]], "_nonlinear_3eq_order1_type2() (in module sympy.solvers.ode.ode)": [[237, "sympy.solvers.ode.ode._nonlinear_3eq_order1_type2", false]], "_nonlinear_3eq_order1_type3() (in module sympy.solvers.ode.ode)": [[237, "sympy.solvers.ode.ode._nonlinear_3eq_order1_type3", false]], "_nonlinear_3eq_order1_type4() (in module sympy.solvers.ode.ode)": [[237, "sympy.solvers.ode.ode._nonlinear_3eq_order1_type4", false]], "_nonlinear_3eq_order1_type5() (in module sympy.solvers.ode.ode)": [[237, "sympy.solvers.ode.ode._nonlinear_3eq_order1_type5", false]], "_orbits_transversals_from_bsgs() (in module sympy.combinatorics.util)": [[86, "sympy.combinatorics.util._orbits_transversals_from_bsgs", false]], "_p_elements_group() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup._p_elements_group", false]], "_postprocess_root() (sympy.polys.rootoftools.complexrootof class method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._postprocess_root", false]], "_preprocess_roots() (sympy.polys.rootoftools.complexrootof class method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._preprocess_roots", false]], "_print() (sympy.printing.printer.printer method)": [[221, "sympy.printing.printer.Printer._print", false]], "_randint() (in module sympy.core.random)": [[88, "sympy.core.random._randint", false]], "_random_pr_init() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup._random_pr_init", false]], "_randrange() (in module sympy.core.random)": [[88, "sympy.core.random._randrange", false]], "_real_roots() (sympy.polys.rootoftools.complexrootof class method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._real_roots", false]], "_reals_index() (sympy.polys.rootoftools.complexrootof class method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._reals_index", false]], "_reals_sorted() (sympy.polys.rootoftools.complexrootof class method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._reals_sorted", false]], "_refine_complexes() (sympy.polys.rootoftools.complexrootof class method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._refine_complexes", false]], "_remove_gens() (in module sympy.combinatorics.util)": [[86, "sympy.combinatorics.util._remove_gens", false]], "_reset() (sympy.polys.rootoftools.complexrootof method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._reset", false]], "_rewrite1() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._rewrite1", false]], "_rewrite2() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._rewrite2", false]], "_rewrite_inversion() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._rewrite_inversion", false]], "_rewrite_saxena() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._rewrite_saxena", false]], "_rewrite_saxena_1() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._rewrite_saxena_1", false]], "_rewrite_single() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._rewrite_single", false]], "_roots_trivial() (sympy.polys.rootoftools.complexrootof class method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._roots_trivial", false]], "_set_interval() (sympy.polys.rootoftools.complexrootof method)": [[217, "sympy.polys.rootoftools.ComplexRootOf._set_interval", false]], "_solve_exponential() (in module sympy.solvers.solveset)": [[240, "sympy.solvers.solveset._solve_exponential", false]], "_solve_lin_sys() (in module sympy.polys.solvers)": [[219, "sympy.polys.solvers._solve_lin_sys", false]], "_solve_lin_sys_component() (in module sympy.polys.solvers)": [[219, "sympy.polys.solvers._solve_lin_sys_component", false]], "_solve_logarithm() (in module sympy.solvers.solveset)": [[240, "sympy.solvers.solveset._solve_logarithm", false]], "_sort_variable_count() (sympy.core.function.derivative class method)": [[88, "sympy.core.function.Derivative._sort_variable_count", false]], "_split_mul() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint._split_mul", false]], "_strip() (in module sympy.combinatorics.util)": [[86, "sympy.combinatorics.util._strip", false]], "_strong_gens_from_distr() (in module sympy.combinatorics.util)": [[86, "sympy.combinatorics.util._strong_gens_from_distr", false]], "_sylow_alt_sym() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup._sylow_alt_sym", false]], "_tan1() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series._tan1", false]], "_tensormanager (class in sympy.tensor.tensor)": [[247, "sympy.tensor.tensor._TensorManager", false]], "_transolve() (in module sympy.solvers.solveset)": [[240, "sympy.solvers.solveset._transolve", false]], "_union_find_merge() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup._union_find_merge", false]], "_union_find_rep() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup._union_find_rep", false]], "_verify() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup._verify", false]], "_verify_bsgs() (in module sympy.combinatorics.testutil)": [[85, "sympy.combinatorics.testutil._verify_bsgs", false]], "_verify_centralizer() (in module sympy.combinatorics.testutil)": [[85, "sympy.combinatorics.testutil._verify_centralizer", false]], "_verify_normal_closure() (in module sympy.combinatorics.testutil)": [[85, "sympy.combinatorics.testutil._verify_normal_closure", false]], "a (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.a", false]], "a (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.a", false]], "a (sympy.physics.optics.gaussopt.raytransfermatrix property)": [[160, "sympy.physics.optics.gaussopt.RayTransferMatrix.A", false]], "a (sympy.physics.quantum.shor.cmod property)": [[187, "sympy.physics.quantum.shor.CMod.a", false]], "a1pt_theory() (sympy.physics.vector.point.point method)": [[204, "sympy.physics.vector.point.Point.a1pt_theory", false]], "a2idx() (in module sympy.matrices.matrixbase)": [[124, "sympy.matrices.matrixbase.a2idx", false]], "a2pt_theory() (sympy.physics.vector.point.point method)": [[204, "sympy.physics.vector.point.Point.a2pt_theory", false]], "a4_in_s6() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.A4_in_S6", false]], "a4xc2() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.A4xC2", false]], "a_interval (sympy.sets.fancysets.complexregion property)": [[229, "sympy.sets.fancysets.ComplexRegion.a_interval", false]], "abbrev (sympy.physics.units.quantities.quantity property)": [[198, "sympy.physics.units.quantities.Quantity.abbrev", false]], "abelian_invariants() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.abelian_invariants", false]], "abeliangroup() (in module sympy.combinatorics.named_groups)": [[76, "sympy.combinatorics.named_groups.AbelianGroup", false]], "above() (sympy.printing.pretty.stringpict.stringpict method)": [[221, "sympy.printing.pretty.stringpict.stringPict.above", false]], "abs (class in sympy.functions.elementary.complexes)": [[94, "sympy.functions.elementary.complexes.Abs", false]], "abs() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.abs", false]], "abs() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.abs", false]], "abs() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.abs", false]], "absorbing_probabilities() (sympy.stats.discretemarkovchain method)": [[241, "sympy.stats.DiscreteMarkovChain.absorbing_probabilities", false]], "abundance() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.abundance", false]], "acc() (sympy.physics.vector.point.point method)": [[204, "sympy.physics.vector.point.Point.acc", false]], "accepted_latex_functions (in module sympy.printing.latex)": [[221, "sympy.printing.latex.accepted_latex_functions", false]], "acos (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.acos", false]], "acosh (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.acosh", false]], "acot (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.acot", false]], "acoth (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.acoth", false]], "acsc (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.acsc", false]], "acsch (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.acsch", false]], "activation (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.activation", false]], "activation (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.activation", false]], "activation_dynamics (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.activation_dynamics", false]], "activation_time_constant (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.activation_time_constant", false]], "activationbase (class in sympy.physics.biomechanics.activation)": [[131, "sympy.physics.biomechanics.activation.ActivationBase", false]], "actuatorbase (class in sympy.physics.mechanics.actuator)": [[148, "sympy.physics.mechanics.actuator.ActuatorBase", false]], "actuators (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.actuators", false]], "add (class in sympy.core.add)": [[88, "sympy.core.add.Add", false]], "add() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.add", false]], "add() (sympy.assumptions.assume.assumptionscontext method)": [[63, "sympy.assumptions.assume.AssumptionsContext.add", false]], "add() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.add", false]], "add() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.add", false]], "add() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.add", false]], "add() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.add", false]], "add() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.add", false]], "add() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.add", false]], "add() (sympy.polys.numberfields.modules.submodule method)": [[216, "sympy.polys.numberfields.modules.Submodule.add", false]], "add() (sympy.polys.polyclasses.dmf method)": [[212, "sympy.polys.polyclasses.DMF.add", false]], "add() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.add", false]], "add() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.add", false]], "add() (sympy.polys.rings.polyring method)": [[212, "sympy.polys.rings.PolyRing.add", false]], "add_actuators() (sympy.physics.mechanics.system.system method)": [[158, "sympy.physics.mechanics.system.System.add_actuators", false]], "add_as_roots() (sympy.liealgebras.root_system.rootsystem method)": [[117, "sympy.liealgebras.root_system.RootSystem.add_as_roots", false]], "add_auxiliary_speeds() (sympy.physics.mechanics.system.system method)": [[158, "sympy.physics.mechanics.system.System.add_auxiliary_speeds", false]], "add_bodies() (sympy.physics.mechanics.system.system method)": [[158, "sympy.physics.mechanics.system.System.add_bodies", false]], "add_coordinates() (sympy.physics.mechanics.system.system method)": [[158, "sympy.physics.mechanics.system.System.add_coordinates", false]], "add_gens() (sympy.polys.rings.polyring method)": [[212, "sympy.polys.rings.PolyRing.add_gens", false]], "add_ground() (sympy.polys.polyclasses.anp method)": [[212, "sympy.polys.polyclasses.ANP.add_ground", false]], "add_ground() (sympy.polys.polyclasses.dmf method)": [[212, "sympy.polys.polyclasses.DMF.add_ground", false]], "add_ground() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.add_ground", false]], "add_ground() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.add_ground", false]], "add_holonomic_constraints() (sympy.physics.mechanics.system.system method)": [[158, "sympy.physics.mechanics.system.System.add_holonomic_constraints", false]], "add_joints() (sympy.physics.mechanics.system.system method)": [[158, "sympy.physics.mechanics.system.System.add_joints", false]], "add_kdes() (sympy.physics.mechanics.system.system method)": [[158, "sympy.physics.mechanics.system.System.add_kdes", false]], "add_loads() (sympy.physics.mechanics.system.system method)": [[158, "sympy.physics.mechanics.system.System.add_loads", false]], "add_member() (sympy.physics.continuum_mechanics.truss.truss method)": [[140, "sympy.physics.continuum_mechanics.truss.Truss.add_member", false]], "add_node() (sympy.physics.continuum_mechanics.truss.truss method)": [[140, "sympy.physics.continuum_mechanics.truss.Truss.add_node", false]], "add_nonholonomic_constraints() (sympy.physics.mechanics.system.system method)": [[158, "sympy.physics.mechanics.system.System.add_nonholonomic_constraints", false]], "add_simple_roots() (sympy.liealgebras.root_system.rootsystem method)": [[117, "sympy.liealgebras.root_system.RootSystem.add_simple_roots", false]], "add_speeds() (sympy.physics.mechanics.system.system method)": [[158, "sympy.physics.mechanics.system.System.add_speeds", false]], "adj_det() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.adj_det", false]], "adj_poly_det() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.adj_poly_det", false]], "adjoint() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.adjoint", false]], "adjugate() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.adjugate", false]], "adjugate() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.adjugate", false]], "aesara_code() (in module sympy.printing.aesaracode)": [[221, "sympy.printing.aesaracode.aesara_code", false]], "aesara_function() (in module sympy.printing.aesaracode)": [[221, "sympy.printing.aesaracode.aesara_function", false]], "aesaraprinter (class in sympy.printing.aesaracode)": [[221, "sympy.printing.aesaracode.AesaraPrinter", false]], "affine_rank() (sympy.geometry.point.point static method)": [[103, "sympy.geometry.point.Point.affine_rank", false]], "airyai (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.airyai", false]], "airyaiprime (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.airyaiprime", false]], "airybase (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.AiryBase", false]], "airybi (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.airybi", false]], "airybiprime (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.airybiprime", false]], "alg_con (sympy.physics.mechanics.system.symbolicsystem property)": [[158, "sympy.physics.mechanics.system.SymbolicSystem.alg_con", false]], "alg_field_from_poly() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.alg_field_from_poly", false]], "algebraic": [[88, "term-algebraic", true]], "algebraic_field() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.algebraic_field", false]], "algebraic_field() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.algebraic_field", false]], "algebraic_field() (sympy.polys.domains.integerring method)": [[212, "sympy.polys.domains.IntegerRing.algebraic_field", false]], "algebraic_field() (sympy.polys.domains.rationalfield method)": [[212, "sympy.polys.domains.RationalField.algebraic_field", false]], "algebraicfield (class in sympy.polys.domains)": [[212, "sympy.polys.domains.AlgebraicField", false]], "algebraichandler (sympy.assumptions.predicates.sets.algebraicpredicate attribute)": [[65, "sympy.assumptions.predicates.sets.AlgebraicPredicate.AlgebraicHandler", false]], "algebraicnumber (class in sympy.core.numbers)": [[88, "sympy.core.numbers.AlgebraicNumber", false]], "algebraicpredicate (class in sympy.assumptions.predicates.sets)": [[65, "sympy.assumptions.predicates.sets.AlgebraicPredicate", false]], "algintpowers (class in sympy.polys.numberfields.utilities)": [[216, "sympy.polys.numberfields.utilities.AlgIntPowers", false]], "alignof() (in module sympy.codegen.cnodes)": [[69, "sympy.codegen.cnodes.alignof", false]], "all_coeffs() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.all_coeffs", false]], "all_coeffs() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.all_coeffs", false]], "all_monoms() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.all_monoms", false]], "all_monoms() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.all_monoms", false]], "all_roots() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.all_roots", false]], "all_roots() (sympy.liealgebras.root_system.rootsystem method)": [[117, "sympy.liealgebras.root_system.RootSystem.all_roots", false]], "all_roots() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.all_roots", false]], "all_roots() (sympy.polys.rootoftools.complexrootof class method)": [[217, "sympy.polys.rootoftools.ComplexRootOf.all_roots", false]], "all_terms() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.all_terms", false]], "all_terms() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.all_terms", false]], "allhints (in module sympy.solvers.ode)": [[237, "sympy.solvers.ode.allhints", false]], "allocated() (in module sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.allocated", false]], "almosteq() (sympy.polys.domains.complexfield method)": [[212, "sympy.polys.domains.ComplexField.almosteq", false]], "almosteq() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.almosteq", false]], "almosteq() (sympy.polys.domains.realfield method)": [[212, "sympy.polys.domains.RealField.almosteq", false]], "almosteq() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.almosteq", false]], "almostlinear (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.AlmostLinear", false]], "alpha_opt (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.alpha_opt", false]], "alternating() (sympy.combinatorics.generators method)": [[80, "sympy.combinatorics.generators.alternating", false]], "alternatinggroup() (in module sympy.combinatorics.named_groups)": [[76, "sympy.combinatorics.named_groups.AlternatingGroup", false]], "altitudes (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.altitudes", false]], "ambient_dimension (sympy.geometry.curve.curve property)": [[97, "sympy.geometry.curve.Curve.ambient_dimension", false]], "ambient_dimension (sympy.geometry.entity.geometryentity property)": [[99, "sympy.geometry.entity.GeometryEntity.ambient_dimension", false]], "ambient_dimension (sympy.geometry.line.linearentity property)": [[101, "sympy.geometry.line.LinearEntity.ambient_dimension", false]], "ambient_dimension (sympy.geometry.point.point property)": [[103, "sympy.geometry.point.Point.ambient_dimension", false]], "amplitude (sympy.physics.optics.waves.twave property)": [[165, "sympy.physics.optics.waves.TWave.amplitude", false]], "an (sympy.functions.special.hyper.meijerg property)": [[96, "sympy.functions.special.hyper.meijerg.an", false]], "analytic_func() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.analytic_func", false]], "ancestors() (sympy.polys.numberfields.modules.module method)": [[216, "sympy.polys.numberfields.modules.Module.ancestors", false]], "and (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.And", false]], "andre (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.andre", false]], "andre_poly() (in module sympy.polys.appellseqs)": [[217, "sympy.polys.appellseqs.andre_poly", false]], "anf_coeffs() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.anf_coeffs", false]], "anfform() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.ANFform", false]], "ang_acc_in() (sympy.physics.vector.frame.referenceframe method)": [[200, "sympy.physics.vector.frame.ReferenceFrame.ang_acc_in", false]], "ang_vel_in() (sympy.physics.mechanics.body.body method)": [[149, "sympy.physics.mechanics.body.Body.ang_vel_in", false]], "ang_vel_in() (sympy.physics.vector.frame.referenceframe method)": [[200, "sympy.physics.vector.frame.ReferenceFrame.ang_vel_in", false]], "angle (sympy.physics.optics.gaussopt.geometricray property)": [[160, "sympy.physics.optics.gaussopt.GeometricRay.angle", false]], "angle() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.angle", false]], "angle_between() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.angle_between", false]], "angle_between() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.angle_between", false]], "angle_between() (sympy.physics.vector.vector.vector method)": [[200, "sympy.physics.vector.vector.Vector.angle_between", false]], "angles (sympy.geometry.polygon.polygon property)": [[104, "sympy.geometry.polygon.Polygon.angles", false]], "angles (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.angles", false]], "angular_deflection() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.angular_deflection", false]], "angular_momentum() (in module sympy.physics.mechanics.functions)": [[155, "sympy.physics.mechanics.functions.angular_momentum", false]], "angular_momentum() (sympy.physics.mechanics.body.body method)": [[149, "sympy.physics.mechanics.body.Body.angular_momentum", false]], "angular_momentum() (sympy.physics.mechanics.particle.particle method)": [[155, "sympy.physics.mechanics.particle.Particle.angular_momentum", false]], "angular_momentum() (sympy.physics.mechanics.rigidbody.rigidbody method)": [[155, "sympy.physics.mechanics.rigidbody.RigidBody.angular_momentum", false]], "angular_velocity (sympy.physics.optics.waves.twave property)": [[165, "sympy.physics.optics.waves.TWave.angular_velocity", false]], "annihilateboson (class in sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.AnnihilateBoson", false]], "annihilatefermion (class in sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.AnnihilateFermion", false]], "annotated() (in module sympy.printing.pretty.pretty_symbology)": [[221, "sympy.printing.pretty.pretty_symbology.annotated", false]], "annotations (sympy.plotting.plot.plot property)": [[207, "sympy.plotting.plot.Plot.annotations", false]], "anp (class in sympy.polys.polyclasses)": [[212, "sympy.polys.polyclasses.ANP", false]], "anticommutator (class in sympy.physics.quantum.anticommutator)": [[168, "sympy.physics.quantum.anticommutator.AntiCommutator", false]], "antiderivative": [[15, "term-Antiderivative", true]], "antidivisor_count() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.antidivisor_count", false]], "antidivisors() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.antidivisors", false]], "antihermitian": [[88, "term-antihermitian", true]], "antihermitianpredicate (class in sympy.assumptions.predicates.sets)": [[65, "sympy.assumptions.predicates.sets.AntihermitianPredicate", false]], "antisymmetrictensor (class in sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.AntiSymmetricTensor", false]], "aother (sympy.functions.special.hyper.meijerg property)": [[96, "sympy.functions.special.hyper.meijerg.aother", false]], "ap (sympy.functions.special.hyper.hyper property)": [[96, "sympy.functions.special.hyper.hyper.ap", false]], "ap (sympy.functions.special.hyper.meijerg property)": [[96, "sympy.functions.special.hyper.meijerg.ap", false]], "apart() (in module sympy.polys.partfrac)": [[217, "sympy.polys.partfrac.apart", false]], "apart() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.apart", false]], "apart_list() (in module sympy.polys.partfrac)": [[217, "sympy.polys.partfrac.apart_list", false]], "apoapsis (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.apoapsis", false]], "apothem (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.apothem", false]], "appellf1 (class in sympy.functions.special.hyper)": [[96, "sympy.functions.special.hyper.appellf1", false]], "append() (sympy.plotting.plot.plot method)": [[207, "sympy.plotting.plot.Plot.append", false]], "applied_loads (sympy.physics.continuum_mechanics.beam.beam property)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.applied_loads", false]], "appliedpredicate (class in sympy.assumptions.assume)": [[63, "sympy.assumptions.assume.AppliedPredicate", false]], "apply() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.apply", false]], "apply() (sympy.printing.pretty.stringpict.prettyform static method)": [[221, "sympy.printing.pretty.stringpict.prettyForm.apply", false]], "apply() (sympy.simplify.epathtools.epath method)": [[233, "sympy.simplify.epathtools.EPath.apply", false]], "apply_finite_diff() (in module sympy.calculus.finite_diff)": [[67, "sympy.calculus.finite_diff.apply_finite_diff", false]], "apply_force() (sympy.physics.mechanics.body.body method)": [[149, "sympy.physics.mechanics.body.Body.apply_force", false]], "apply_grover() (in module sympy.physics.quantum.grover)": [[176, "sympy.physics.quantum.grover.apply_grover", false]], "apply_length() (sympy.physics.continuum_mechanics.cable.cable method)": [[138, "sympy.physics.continuum_mechanics.cable.Cable.apply_length", false]], "apply_load() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.apply_load", false]], "apply_load() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.apply_load", false]], "apply_load() (sympy.physics.continuum_mechanics.cable.cable method)": [[138, "sympy.physics.continuum_mechanics.cable.Cable.apply_load", false]], "apply_load() (sympy.physics.continuum_mechanics.truss.truss method)": [[140, "sympy.physics.continuum_mechanics.truss.Truss.apply_load", false]], "apply_moment_load() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.apply_moment_load", false]], "apply_operator() (sympy.physics.secondquant.annihilateboson method)": [[191, "sympy.physics.secondquant.AnnihilateBoson.apply_operator", false]], "apply_operator() (sympy.physics.secondquant.annihilatefermion method)": [[191, "sympy.physics.secondquant.AnnihilateFermion.apply_operator", false]], "apply_operator() (sympy.physics.secondquant.createboson method)": [[191, "sympy.physics.secondquant.CreateBoson.apply_operator", false]], "apply_operator() (sympy.physics.secondquant.createfermion method)": [[191, "sympy.physics.secondquant.CreateFermion.apply_operator", false]], "apply_operators() (in module sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.apply_operators", false]], "apply_rotation_hinge() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.apply_rotation_hinge", false]], "apply_sliding_hinge() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.apply_sliding_hinge", false]], "apply_support() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.apply_support", false]], "apply_support() (sympy.physics.continuum_mechanics.truss.truss method)": [[140, "sympy.physics.continuum_mechanics.truss.Truss.apply_support", false]], "apply_torque() (sympy.physics.mechanics.body.body method)": [[149, "sympy.physics.mechanics.body.Body.apply_torque", false]], "apply_uniform_gravity() (sympy.physics.mechanics.system.system method)": [[158, "sympy.physics.mechanics.system.System.apply_uniform_gravity", false]], "applyfunc() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.applyfunc", false]], "applyfunc() (sympy.physics.vector.dyadic.dyadic method)": [[200, "sympy.physics.vector.dyadic.Dyadic.applyfunc", false]], "applyfunc() (sympy.physics.vector.vector.vector method)": [[200, "sympy.physics.vector.vector.Vector.applyfunc", false]], "applyfunc() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.applyfunc", false]], "approximation() (sympy.core.numbers.numbersymbol method)": [[88, "sympy.core.numbers.NumberSymbol.approximation", false]], "arbitrary_point() (sympy.geometry.curve.curve method)": [[97, "sympy.geometry.curve.Curve.arbitrary_point", false]], "arbitrary_point() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.arbitrary_point", false]], "arbitrary_point() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.arbitrary_point", false]], "arbitrary_point() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.arbitrary_point", false]], "arbitrary_point() (sympy.geometry.polygon.polygon method)": [[104, "sympy.geometry.polygon.Polygon.arbitrary_point", false]], "arc_coplanar() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.arc_coplanar", false]], "arcsin() (in module sympy.stats)": [[241, "sympy.stats.Arcsin", false]], "are_collinear() (sympy.geometry.point.point3d static method)": [[103, "sympy.geometry.point.Point3D.are_collinear", false]], "are_concurrent() (sympy.geometry.line.linearentity static method)": [[101, "sympy.geometry.line.LinearEntity.are_concurrent", false]], "are_concurrent() (sympy.geometry.plane.plane static method)": [[102, "sympy.geometry.plane.Plane.are_concurrent", false]], "are_coplanar() (sympy.geometry.point.point class method)": [[103, "sympy.geometry.point.Point.are_coplanar", false]], "are_similar() (in module sympy.geometry.util)": [[105, "sympy.geometry.util.are_similar", false]], "area (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.area", false]], "area (sympy.geometry.polygon.polygon property)": [[104, "sympy.geometry.polygon.Polygon.area", false]], "area (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.area", false]], "area (sympy.physics.continuum_mechanics.beam.beam property)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.area", false]], "area (sympy.physics.continuum_mechanics.beam.beam3d property)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.area", false]], "arg (class in sympy.functions.elementary.complexes)": [[94, "sympy.functions.elementary.complexes.arg", false]], "arg (sympy.assumptions.assume.appliedpredicate property)": [[63, "sympy.assumptions.assume.AppliedPredicate.arg", false]], "args": [[15, "term-args", true]], "args (sympy.core.basic.basic property)": [[88, "sympy.core.basic.Basic.args", false]], "args (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.args", false]], "args_cnc() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.args_cnc", false]], "argument (class in sympy.utilities.codegen)": [[254, "sympy.utilities.codegen.Argument", false]], "argument (sympy.functions.special.bessel.besselbase property)": [[96, "sympy.functions.special.bessel.BesselBase.argument", false]], "argument (sympy.functions.special.hyper.hyper property)": [[96, "sympy.functions.special.hyper.hyper.argument", false]], "argument (sympy.functions.special.hyper.meijerg property)": [[96, "sympy.functions.special.hyper.meijerg.argument", false]], "arguments (sympy.assumptions.assume.appliedpredicate property)": [[63, "sympy.assumptions.assume.AppliedPredicate.arguments", false]], "array() (in module sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.array", false]], "array_form (sympy.combinatorics.permutations.permutation property)": [[80, "sympy.combinatorics.permutations.Permutation.array_form", false]], "array_form (sympy.combinatorics.polyhedron.polyhedron property)": [[81, "sympy.combinatorics.polyhedron.Polyhedron.array_form", false]], "arrayconstructor (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.ArrayConstructor", false]], "arraycontraction (class in sympy.tensor.array.expressions)": [[243, "sympy.tensor.array.expressions.ArrayContraction", false]], "arraydiagonal (class in sympy.tensor.array.expressions)": [[243, "sympy.tensor.array.expressions.ArrayDiagonal", false]], "arraytensorproduct (class in sympy.tensor.array.expressions)": [[243, "sympy.tensor.array.expressions.ArrayTensorProduct", false]], "arrowstringdescription (class in sympy.categories.diagram_drawing)": [[68, "sympy.categories.diagram_drawing.ArrowStringDescription", false]], "as_algebraicfield() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianRationalField.as_AlgebraicField", false]], "as_base_exp() (sympy.core.power.pow method)": [[88, "sympy.core.power.Pow.as_base_exp", false]], "as_coeff_add() (sympy.core.add.add method)": [[88, "sympy.core.add.Add.as_coeff_Add", false], [88, "sympy.core.add.Add.as_coeff_add", false]], "as_coeff_add() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_coeff_Add", false], [88, "sympy.core.expr.Expr.as_coeff_add", false]], "as_coeff_add() (sympy.core.numbers.number method)": [[88, "sympy.core.numbers.Number.as_coeff_Add", false]], "as_coeff_add() (sympy.core.numbers.rational method)": [[88, "sympy.core.numbers.Rational.as_coeff_Add", false]], "as_coeff_exponent() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_coeff_exponent", false]], "as_coeff_mul() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_coeff_Mul", false], [88, "sympy.core.expr.Expr.as_coeff_mul", false]], "as_coeff_mul() (sympy.core.mul.mul method)": [[88, "sympy.core.mul.Mul.as_coeff_Mul", false]], "as_coeff_mul() (sympy.core.numbers.number method)": [[88, "sympy.core.numbers.Number.as_coeff_Mul", false]], "as_coeff_mul() (sympy.core.numbers.rational method)": [[88, "sympy.core.numbers.Rational.as_coeff_Mul", false]], "as_coeff_mul() (sympy.matrices.expressions.matrixexpr method)": [[120, "sympy.matrices.expressions.MatrixExpr.as_coeff_Mul", false]], "as_coefficient() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_coefficient", false]], "as_coefficients_dict() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_coefficients_dict", false]], "as_content_primitive() (sympy.core.add.add method)": [[88, "sympy.core.add.Add.as_content_primitive", false]], "as_content_primitive() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.as_content_primitive", false]], "as_content_primitive() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_content_primitive", false]], "as_content_primitive() (sympy.core.mul.mul method)": [[88, "sympy.core.mul.Mul.as_content_primitive", false]], "as_content_primitive() (sympy.core.numbers.rational method)": [[88, "sympy.core.numbers.Rational.as_content_primitive", false]], "as_content_primitive() (sympy.core.power.pow method)": [[88, "sympy.core.power.Pow.as_content_primitive", false]], "as_declaration() (sympy.codegen.ast.variable method)": [[69, "sympy.codegen.ast.Variable.as_Declaration", false]], "as_dict() (sympy.combinatorics.partitions.integerpartition method)": [[77, "sympy.combinatorics.partitions.IntegerPartition.as_dict", false]], "as_dict() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.as_dict", false]], "as_dummy() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.as_dummy", false]], "as_explicit() (sympy.matrices.expressions.matrixexpr method)": [[120, "sympy.matrices.expressions.MatrixExpr.as_explicit", false]], "as_expr() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_expr", false]], "as_expr() (sympy.core.numbers.algebraicnumber method)": [[88, "sympy.core.numbers.AlgebraicNumber.as_expr", false]], "as_expr() (sympy.polys.monomials.monomial method)": [[217, "sympy.polys.monomials.Monomial.as_expr", false]], "as_expr() (sympy.polys.numberfields.modules.powerbasiselement method)": [[216, "sympy.polys.numberfields.modules.PowerBasisElement.as_expr", false]], "as_expr() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.as_expr", false]], "as_expr_set_pairs() (sympy.functions.elementary.piecewise.piecewise method)": [[94, "sympy.functions.elementary.piecewise.Piecewise.as_expr_set_pairs", false]], "as_ferrers() (sympy.combinatorics.partitions.integerpartition method)": [[77, "sympy.combinatorics.partitions.IntegerPartition.as_ferrers", false]], "as_finite_difference() (sympy.core.function.derivative method)": [[88, "sympy.core.function.Derivative.as_finite_difference", false]], "as_immutable() (sympy.matrices.dense.densematrix method)": [[119, "sympy.matrices.dense.DenseMatrix.as_immutable", false]], "as_independent() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_independent", false]], "as_int() (in module sympy.utilities.misc)": [[262, "sympy.utilities.misc.as_int", false]], "as_leading_term() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_leading_term", false]], "as_list() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.as_list", false]], "as_mutable() (sympy.matrices.dense.densematrix method)": [[119, "sympy.matrices.dense.DenseMatrix.as_mutable", false]], "as_mutable() (sympy.matrices.expressions.matrixexpr method)": [[120, "sympy.matrices.expressions.MatrixExpr.as_mutable", false]], "as_numer_denom() (sympy.core.add.add method)": [[88, "sympy.core.add.Add.as_numer_denom", false]], "as_numer_denom() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_numer_denom", false]], "as_ordered_factors() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_ordered_factors", false]], "as_ordered_factors() (sympy.core.mul.mul method)": [[88, "sympy.core.mul.Mul.as_ordered_factors", false]], "as_ordered_terms() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_ordered_terms", false]], "as_poly() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_poly", false]], "as_poly() (sympy.core.numbers.algebraicnumber method)": [[88, "sympy.core.numbers.AlgebraicNumber.as_poly", false]], "as_poly() (sympy.core.relational.equality method)": [[88, "sympy.core.relational.Equality.as_poly", false]], "as_poly() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.as_poly", false]], "as_powers_dict() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_powers_dict", false]], "as_real_imag() (sympy.core.add.add method)": [[88, "sympy.core.add.Add.as_real_imag", false]], "as_real_imag() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_real_imag", false]], "as_real_imag() (sympy.functions.elementary.complexes.im method)": [[94, "sympy.functions.elementary.complexes.im.as_real_imag", false]], "as_real_imag() (sympy.functions.elementary.complexes.re method)": [[94, "sympy.functions.elementary.complexes.re.as_real_imag", false]], "as_real_imag() (sympy.functions.elementary.exponential.exp method)": [[94, "sympy.functions.elementary.exponential.exp.as_real_imag", false]], "as_real_imag() (sympy.functions.elementary.exponential.log method)": [[94, "sympy.functions.elementary.exponential.log.as_real_imag", false]], "as_real_imag() (sympy.functions.elementary.hyperbolic.sinh method)": [[94, "sympy.functions.elementary.hyperbolic.sinh.as_real_imag", false]], "as_real_imag() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.as_real_imag", false]], "as_relational() (sympy.sets.fancysets.range method)": [[229, "sympy.sets.fancysets.Range.as_relational", false]], "as_relational() (sympy.sets.sets.complement method)": [[229, "sympy.sets.sets.Complement.as_relational", false]], "as_relational() (sympy.sets.sets.finiteset method)": [[229, "sympy.sets.sets.FiniteSet.as_relational", false]], "as_relational() (sympy.sets.sets.intersection method)": [[229, "sympy.sets.sets.Intersection.as_relational", false]], "as_relational() (sympy.sets.sets.interval method)": [[229, "sympy.sets.sets.Interval.as_relational", false]], "as_relational() (sympy.sets.sets.symmetricdifference method)": [[229, "sympy.sets.sets.SymmetricDifference.as_relational", false]], "as_relational() (sympy.sets.sets.union method)": [[229, "sympy.sets.sets.Union.as_relational", false]], "as_set() (sympy.logic.boolalg.boolean method)": [[118, "sympy.logic.boolalg.Boolean.as_set", false]], "as_set() (sympy.logic.boolalg.booleanfalse method)": [[118, "sympy.logic.boolalg.BooleanFalse.as_set", false]], "as_set() (sympy.logic.boolalg.booleantrue method)": [[118, "sympy.logic.boolalg.BooleanTrue.as_set", false]], "as_submodule() (sympy.polys.numberfields.primes.primeideal method)": [[216, "sympy.polys.numberfields.primes.PrimeIdeal.as_submodule", false]], "as_sum() (sympy.integrals.integrals.integral method)": [[115, "sympy.integrals.integrals.Integral.as_sum", false]], "as_terms() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.as_terms", false]], "as_two_terms() (sympy.core.add.add method)": [[88, "sympy.core.add.Add.as_two_terms", false]], "as_two_terms() (sympy.core.mul.mul method)": [[88, "sympy.core.mul.Mul.as_two_terms", false]], "ascents() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.ascents", false]], "asec (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.asec", false]], "asech (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.asech", false]], "aseries() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.aseries", false]], "asin (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.asin", false]], "asinh (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.asinh", false]], "ask() (in module sympy.assumptions.ask)": [[62, "sympy.assumptions.ask.ask", false]], "assemble_partfrac_list() (in module sympy.polys.partfrac)": [[217, "sympy.polys.partfrac.assemble_partfrac_list", false]], "assignment (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Assignment", false]], "assignmentbase (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.AssignmentBase", false]], "assignmenterror": [[221, "sympy.printing.codeprinter.AssignmentError", false]], "assoc_laguerre (class in sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.assoc_laguerre", false]], "assoc_legendre (class in sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.assoc_legendre", false]], "assoc_recurrence_memo() (in module sympy.utilities.memoization)": [[261, "sympy.utilities.memoization.assoc_recurrence_memo", false]], "assuming() (in module sympy.assumptions.assume)": [[63, "sympy.assumptions.assume.assuming", false]], "assumptionkeys (class in sympy.assumptions.ask)": [[62, "sympy.assumptions.ask.AssumptionKeys", false]], "assumptions": [[15, "term-Assumptions", true]], "assumptions0 (sympy.core.basic.basic property)": [[88, "sympy.core.basic.Basic.assumptions0", false]], "assumptionscontext (class in sympy.assumptions.assume)": [[63, "sympy.assumptions.assume.AssumptionsContext", false]], "at_pin_joint() (sympy.physics.mechanics.actuator.torqueactuator class method)": [[148, "sympy.physics.mechanics.actuator.TorqueActuator.at_pin_joint", false]], "atan (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.atan", false]], "atan2 (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.atan2", false]], "atanh (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.atanh", false]], "atom": [[15, "term-Atom", true]], "atom (class in sympy.core.basic)": [[88, "sympy.core.basic.Atom", false]], "atomicexpr (class in sympy.core.expr)": [[88, "sympy.core.expr.AtomicExpr", false]], "atoms() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.atoms", false]], "atoms() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.atoms", false]], "atoms() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.atoms", false]], "atoms_table (in module sympy.printing.pretty.pretty_symbology)": [[221, "sympy.printing.pretty.pretty_symbology.atoms_table", false]], "attachments (sympy.physics.mechanics.pathway.obstaclesetpathway property)": [[156, "sympy.physics.mechanics.pathway.ObstacleSetPathway.attachments", false]], "attachments (sympy.physics.mechanics.pathway.pathwaybase property)": [[156, "sympy.physics.mechanics.pathway.PathwayBase.attachments", false]], "attempted (sympy.testing.runtests.sympytestresults attribute)": [[252, "sympy.testing.runtests.SymPyTestResults.attempted", false]], "attr_params() (sympy.codegen.ast.node method)": [[69, "sympy.codegen.ast.Node.attr_params", false]], "attribute (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Attribute", false]], "aug_assign() (in module sympy.codegen.ast)": [[69, "sympy.codegen.ast.aug_assign", false]], "augmentedassignment (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.AugmentedAssignment", false]], "auto_number() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.auto_number", false]], "auto_symbol() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.auto_symbol", false]], "automatic simplification": [[15, "term-Automatic-Simplification", true]], "autowrap() (in module sympy.utilities.autowrap)": [[253, "sympy.utilities.autowrap.autowrap", false]], "auxiliary_circle() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.auxiliary_circle", false]], "auxiliary_eqs (sympy.physics.mechanics.kane.kanesmethod property)": [[153, "sympy.physics.mechanics.kane.KanesMethod.auxiliary_eqs", false]], "axial_force() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.axial_force", false]], "axial_stress() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.axial_stress", false]], "axis (sympy.physics.mechanics.actuator.torqueactuator property)": [[148, "sympy.physics.mechanics.actuator.TorqueActuator.axis", false]], "axis (sympy.physics.mechanics.wrapping_geometry.wrappingcylinder property)": [[159, "sympy.physics.mechanics.wrapping_geometry.WrappingCylinder.axis", false]], "axis() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.axis", false]], "axisorienter (class in sympy.vector.orienters)": [[267, "sympy.vector.orienters.AxisOrienter", false]], "az() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.AZ", false]], "b (in module sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.B", false]], "b (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.b", false]], "b (sympy.physics.optics.gaussopt.raytransfermatrix property)": [[160, "sympy.physics.optics.gaussopt.RayTransferMatrix.B", false]], "b_interval (sympy.sets.fancysets.complexregion property)": [[229, "sympy.sets.fancysets.ComplexRegion.b_interval", false]], "backward_diff() (in module sympy.physics.control.lti)": [[144, "sympy.physics.control.lti.backward_diff", false]], "banded() (in module sympy.matrices.sparsetools)": [[127, "sympy.matrices.sparsetools.banded", false]], "base (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.base", false]], "base (sympy.functions.elementary.exponential.exp property)": [[94, "sympy.functions.elementary.exponential.exp.base", false]], "base (sympy.tensor.indexed.indexed property)": [[246, "sympy.tensor.indexed.Indexed.base", false]], "base_oneform() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.base_oneform", false]], "base_oneforms() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.base_oneforms", false]], "base_scalar() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.base_scalar", false]], "base_scalars() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.base_scalars", false]], "base_solution_linear() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.base_solution_linear", false]], "base_vector() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.base_vector", false]], "base_vectors() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.base_vectors", false]], "basecovarderivativeop (class in sympy.diffgeom)": [[90, "sympy.diffgeom.BaseCovarDerivativeOp", false]], "basepolynomialerror (class in sympy.polys.polyerrors)": [[214, "sympy.polys.polyerrors.BasePolynomialError", false]], "basescalarfield (class in sympy.diffgeom)": [[90, "sympy.diffgeom.BaseScalarField", false]], "baseseries (class in sympy.plotting.series)": [[207, "sympy.plotting.series.BaseSeries", false]], "baseswap() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.baseswap", false]], "basevectorfield (class in sympy.diffgeom)": [[90, "sympy.diffgeom.BaseVectorField", false]], "basic": [[15, "term-Basic", true]], "basic (class in sympy.core.basic)": [[88, "sympy.core.basic.Basic", false]], "basic_orbits (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.basic_orbits", false]], "basic_root() (sympy.liealgebras.type_a.typea method)": [[117, "sympy.liealgebras.type_a.TypeA.basic_root", false]], "basic_root() (sympy.liealgebras.type_b.typeb method)": [[117, "sympy.liealgebras.type_b.TypeB.basic_root", false]], "basic_root() (sympy.liealgebras.type_c.typec method)": [[117, "sympy.liealgebras.type_c.TypeC.basic_root", false]], "basic_root() (sympy.liealgebras.type_d.typed method)": [[117, "sympy.liealgebras.type_d.TypeD.basic_root", false]], "basic_root() (sympy.liealgebras.type_e.typee method)": [[117, "sympy.liealgebras.type_e.TypeE.basic_root", false]], "basic_root() (sympy.liealgebras.type_f.typef method)": [[117, "sympy.liealgebras.type_f.TypeF.basic_root", false]], "basic_stabilizers (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.basic_stabilizers", false]], "basic_transversals (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.basic_transversals", false]], "basis() (sympy.liealgebras.type_a.typea method)": [[117, "sympy.liealgebras.type_a.TypeA.basis", false]], "basis() (sympy.liealgebras.type_b.typeb method)": [[117, "sympy.liealgebras.type_b.TypeB.basis", false]], "basis() (sympy.liealgebras.type_c.typec method)": [[117, "sympy.liealgebras.type_c.TypeC.basis", false]], "basis() (sympy.liealgebras.type_d.typed method)": [[117, "sympy.liealgebras.type_d.TypeD.basis", false]], "basis() (sympy.liealgebras.type_e.typee method)": [[117, "sympy.liealgebras.type_e.TypeE.basis", false]], "basis() (sympy.liealgebras.type_f.typef method)": [[117, "sympy.liealgebras.type_f.TypeF.basis", false]], "basis() (sympy.liealgebras.type_g.typeg method)": [[117, "sympy.liealgebras.type_g.TypeG.basis", false]], "basis() (sympy.polys.agca.modules.freemodule method)": [[208, "sympy.polys.agca.modules.FreeModule.basis", false]], "basis_element_pullbacks() (sympy.polys.numberfields.modules.submodule method)": [[216, "sympy.polys.numberfields.modules.Submodule.basis_element_pullbacks", false]], "basis_elements() (sympy.polys.numberfields.modules.module method)": [[216, "sympy.polys.numberfields.modules.Module.basis_elements", false]], "bbra (in module sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.BBra", false]], "bd (in module sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.Bd", false]], "beam (class in sympy.physics.continuum_mechanics.beam)": [[136, "sympy.physics.continuum_mechanics.beam.Beam", false]], "beam3d (class in sympy.physics.continuum_mechanics.beam)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D", false]], "beamparameter (class in sympy.physics.optics.gaussopt)": [[160, "sympy.physics.optics.gaussopt.BeamParameter", false]], "bell (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.bell", false]], "below() (sympy.printing.pretty.stringpict.stringpict method)": [[221, "sympy.printing.pretty.stringpict.stringPict.below", false]], "bending_moment() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.bending_moment", false]], "bending_moment() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.bending_moment", false]], "benini() (in module sympy.stats)": [[241, "sympy.stats.Benini", false]], "berkowitz_det() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.berkowitz_det", false]], "berkowitz_eigenvals() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.berkowitz_eigenvals", false]], "berkowitz_minors() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.berkowitz_minors", false]], "bernoulli (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.bernoulli", false]], "bernoulli (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.Bernoulli", false]], "bernoulli() (in module sympy.stats)": [[241, "sympy.stats.Bernoulli", false]], "bernoulli_c_poly() (in module sympy.polys.appellseqs)": [[217, "sympy.polys.appellseqs.bernoulli_c_poly", false]], "bernoulli_poly() (in module sympy.polys.appellseqs)": [[217, "sympy.polys.appellseqs.bernoulli_poly", false]], "bernoulliprocess (class in sympy.stats)": [[241, "sympy.stats.BernoulliProcess", false]], "besselbase (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.BesselBase", false]], "besseli (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.besseli", false]], "besselj (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.besselj", false]], "besselk (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.besselk", false]], "besselsimp() (in module sympy.simplify.simplify)": [[233, "sympy.simplify.simplify.besselsimp", false]], "bessely (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.bessely", false]], "beta (class in sympy.functions.special.beta_functions)": [[96, "sympy.functions.special.beta_functions.beta", false]], "beta (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.beta", false]], "beta() (in module sympy.stats)": [[241, "sympy.stats.Beta", false]], "betabinomial() (in module sympy.stats)": [[241, "sympy.stats.BetaBinomial", false]], "betanoncentral() (in module sympy.stats)": [[241, "sympy.stats.BetaNoncentral", false]], "betaprime() (in module sympy.stats)": [[241, "sympy.stats.BetaPrime", false]], "bidiagonal_decomposition() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.bidiagonal_decomposition", false]], "bidiagonalize() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.bidiagonalize", false]], "bifid5_square() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.bifid5_square", false]], "bifid6_square() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.bifid6_square", false]], "bilinear() (in module sympy.physics.control.lti)": [[144, "sympy.physics.control.lti.bilinear", false]], "bin_to_gray() (sympy.combinatorics.graycode method)": [[72, "sympy.combinatorics.graycode.bin_to_gray", false]], "binary_function() (in module sympy.utilities.autowrap)": [[253, "sympy.utilities.autowrap.binary_function", false]], "binary_partitions() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.binary_partitions", false]], "binaryquadratic (class in sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.BinaryQuadratic", false]], "bind_c() (in module sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.bind_C", false]], "binomial (class in sympy.functions.combinatorial.factorials)": [[93, "sympy.functions.combinatorial.factorials.binomial", false]], "binomial() (in module sympy.stats)": [[241, "sympy.stats.Binomial", false]], "binomial_coefficients() (in module sympy.ntheory.multinomial)": [[128, "sympy.ntheory.multinomial.binomial_coefficients", false]], "binomial_coefficients_list() (in module sympy.ntheory.multinomial)": [[128, "sympy.ntheory.multinomial.binomial_coefficients_list", false]], "binomial_mod() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.binomial_mod", false]], "bisectors() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.bisectors", false]], "bisectors() (sympy.geometry.polygon.polygon method)": [[104, "sympy.geometry.polygon.Polygon.bisectors", false]], "bisectors() (sympy.geometry.polygon.triangle method)": [[104, "sympy.geometry.polygon.Triangle.bisectors", false]], "bitlist_from_subset() (sympy.combinatorics.subsets.subset class method)": [[83, "sympy.combinatorics.subsets.Subset.bitlist_from_subset", false]], "bket (in module sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.BKet", false]], "block_collapse() (in module sympy.matrices.expressions.blockmatrix)": [[120, "sympy.matrices.expressions.blockmatrix.block_collapse", false]], "blockdiagmatrix (class in sympy.matrices.expressions.blockmatrix)": [[120, "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix", false]], "blockmatrix (class in sympy.matrices.expressions.blockmatrix)": [[120, "sympy.matrices.expressions.blockmatrix.BlockMatrix", false]], "bm (sympy.functions.special.hyper.meijerg property)": [[96, "sympy.functions.special.hyper.meijerg.bm", false]], "bode_magnitude_numerical_data() (sympy.physics.control.control_plots method)": [[142, "sympy.physics.control.control_plots.bode_magnitude_numerical_data", false]], "bode_magnitude_plot() (sympy.physics.control.control_plots method)": [[142, "sympy.physics.control.control_plots.bode_magnitude_plot", false]], "bode_phase_numerical_data() (sympy.physics.control.control_plots method)": [[142, "sympy.physics.control.control_plots.bode_phase_numerical_data", false]], "bode_phase_plot() (sympy.physics.control.control_plots method)": [[142, "sympy.physics.control.control_plots.bode_phase_plot", false]], "bode_plot() (sympy.physics.control.control_plots method)": [[142, "sympy.physics.control.control_plots.bode_plot", false]], "bodies (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[149, "sympy.physics.mechanics.jointsmethod.JointsMethod.bodies", false]], "bodies (sympy.physics.mechanics.system.symbolicsystem property)": [[158, "sympy.physics.mechanics.system.SymbolicSystem.bodies", false]], "bodies (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.bodies", false]], "body (class in sympy.physics.mechanics.body)": [[149, "sympy.physics.mechanics.body.Body", false]], "bodyorienter (class in sympy.vector.orienters)": [[267, "sympy.vector.orienters.BodyOrienter", false]], "bool_map() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.bool_map", false]], "bool_maxterm() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.bool_maxterm", false]], "bool_minterm() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.bool_minterm", false]], "bool_monomial() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.bool_monomial", false]], "boolean": [[15, "term-Boolean", true]], "boolean (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.Boolean", false]], "booleanfalse (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.BooleanFalse", false]], "booleankind (in module sympy.core.kind)": [[88, "sympy.core.kind.BooleanKind", false]], "booleantrue (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.BooleanTrue", false]], "bosonicbasis (class in sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.BosonicBasis", false]], "bother (sympy.functions.special.hyper.meijerg property)": [[96, "sympy.functions.special.hyper.meijerg.bother", false]], "bottom_up() (in module sympy.core.traversal)": [[88, "sympy.core.traversal.bottom_up", false]], "bound symbols": [[15, "term-Bound-symbols", true]], "bound_symbols (sympy.concrete.expr_with_limits.exprwithlimits property)": [[115, "sympy.concrete.expr_with_limits.ExprWithLimits.bound_symbols", false]], "bound_symbols (sympy.core.function.lambda property)": [[88, "sympy.core.function.Lambda.bound_symbols", false]], "bound_symbols (sympy.core.function.subs property)": [[88, "sympy.core.function.Subs.bound_symbols", false]], "boundary (sympy.sets.sets.set property)": [[229, "sympy.sets.sets.Set.boundary", false]], "boundary_conditions (sympy.physics.continuum_mechanics.beam.beam property)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.boundary_conditions", false]], "boundary_conditions (sympy.physics.continuum_mechanics.beam.beam3d property)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.boundary_conditions", false]], "boundedpareto() (in module sympy.stats)": [[241, "sympy.stats.BoundedPareto", false]], "bounds (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.bounds", false]], "bounds (sympy.geometry.entity.geometryentity property)": [[99, "sympy.geometry.entity.GeometryEntity.bounds", false]], "bounds (sympy.geometry.line.linearentity2d property)": [[101, "sympy.geometry.line.LinearEntity2D.bounds", false]], "bounds (sympy.geometry.point.point2d property)": [[103, "sympy.geometry.point.Point2D.bounds", false]], "bounds (sympy.geometry.polygon.polygon property)": [[104, "sympy.geometry.polygon.Polygon.bounds", false]], "bq (sympy.functions.special.hyper.hyper property)": [[96, "sympy.functions.special.hyper.hyper.bq", false]], "bq (sympy.functions.special.hyper.meijerg property)": [[96, "sympy.functions.special.hyper.meijerg.bq", false]], "bra (class in sympy.physics.quantum.state)": [[189, "sympy.physics.quantum.state.Bra", false]], "bra (sympy.physics.quantum.operator.outerproduct property)": [[180, "sympy.physics.quantum.operator.OuterProduct.bra", false]], "bra (sympy.physics.secondquant.innerproduct property)": [[191, "sympy.physics.secondquant.InnerProduct.bra", false]], "brabase (class in sympy.physics.quantum.state)": [[189, "sympy.physics.quantum.state.BraBase", false]], "bracelets() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.bracelets", false]], "breaktoken (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.BreakToken", false]], "brewster_angle() (in module sympy.physics.optics.utils)": [[164, "sympy.physics.optics.utils.brewster_angle", false]], "bsgs_direct_product() (in module sympy.combinatorics.tensor_can)": [[84, "sympy.combinatorics.tensor_can.bsgs_direct_product", false]], "bspline_basis() (in module sympy.functions.special.bsplines)": [[96, "sympy.functions.special.bsplines.bspline_basis", false]], "bspline_basis_set() (in module sympy.functions.special.bsplines)": [[96, "sympy.functions.special.bsplines.bspline_basis_set", false]], "build_expression_tree() (in module sympy.series.gruntz)": [[228, "sympy.series.gruntz.build_expression_tree", false]], "build_options() (in module sympy.polys.polyoptions)": [[214, "sympy.polys.polyoptions.build_options", false]], "c (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.C", false]], "c (sympy.physics.optics.gaussopt.raytransfermatrix property)": [[160, "sympy.physics.optics.gaussopt.RayTransferMatrix.C", false]], "c89codeprinter (class in sympy.printing.c)": [[221, "sympy.printing.c.C89CodePrinter", false]], "c99codeprinter (class in sympy.printing.c)": [[221, "sympy.printing.c.C99CodePrinter", false]], "cable (class in sympy.physics.continuum_mechanics.cable)": [[138, "sympy.physics.continuum_mechanics.cable.Cable", false]], "calculate_series() (in module sympy.series.gruntz)": [[228, "sympy.series.gruntz.calculate_series", false]], "can_transf_matrix (sympy.physics.units.dimensions.dimensionsystem property)": [[193, "sympy.physics.units.dimensions.DimensionSystem.can_transf_matrix", false]], "canberra_distance() (sympy.geometry.point.point method)": [[103, "sympy.geometry.point.Point.canberra_distance", false]], "cancel() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.cancel", false]], "cancel() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.cancel", false]], "cancel() (sympy.polys.polyclasses.dmf method)": [[212, "sympy.polys.polyclasses.DMF.cancel", false]], "cancel() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.cancel", false]], "cancel() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.cancel", false]], "cancel() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.cancel", false]], "cancel_denom() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.cancel_denom", false]], "cancel_denom_elementwise() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.cancel_denom_elementwise", false]], "canon_bp() (in module sympy.tensor.tensor)": [[247, "sympy.tensor.tensor.canon_bp", false]], "canon_bp() (sympy.tensor.tensor.tensadd method)": [[247, "sympy.tensor.tensor.TensAdd.canon_bp", false]], "canon_bp() (sympy.tensor.tensor.tensmul method)": [[247, "sympy.tensor.tensor.TensMul.canon_bp", false]], "canonical (sympy.core.relational.relational property)": [[88, "sympy.core.relational.Relational.canonical", false]], "canonical form": [[15, "term-Canonical-Form", true]], "canonical_form() (sympy.stats.discretemarkovchain method)": [[241, "sympy.stats.DiscreteMarkovChain.canonical_form", false]], "canonical_odes() (in module sympy.solvers.ode.systems)": [[237, "sympy.solvers.ode.systems.canonical_odes", false]], "canonical_variables (sympy.core.basic.basic property)": [[88, "sympy.core.basic.Basic.canonical_variables", false]], "canonicalize": [[15, "term-Canonicalize", true]], "canonicalize() (in module sympy.combinatorics.tensor_can)": [[84, "sympy.combinatorics.tensor_can.canonicalize", false]], "capture() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.capture", false]], "cardinality (sympy.combinatorics.permutations.permutation property)": [[80, "sympy.combinatorics.permutations.Permutation.cardinality", false]], "cardinality (sympy.combinatorics.subsets.subset property)": [[83, "sympy.combinatorics.subsets.Subset.cardinality", false]], "cartan_matrix() (sympy.liealgebras.root_system.rootsystem method)": [[117, "sympy.liealgebras.root_system.RootSystem.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_a.typea method)": [[117, "sympy.liealgebras.type_a.TypeA.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_b.typeb method)": [[117, "sympy.liealgebras.type_b.TypeB.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_c.typec method)": [[117, "sympy.liealgebras.type_c.TypeC.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_d.typed method)": [[117, "sympy.liealgebras.type_d.TypeD.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_e.typee method)": [[117, "sympy.liealgebras.type_e.TypeE.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_f.typef method)": [[117, "sympy.liealgebras.type_f.TypeF.cartan_matrix", false]], "cartan_matrix() (sympy.liealgebras.type_g.typeg method)": [[117, "sympy.liealgebras.type_g.TypeG.cartan_matrix", false]], "cartanmatrix() (in module sympy.liealgebras.cartan_matrix)": [[117, "sympy.liealgebras.cartan_matrix.CartanMatrix", false]], "cartantype_generator (class in sympy.liealgebras.cartan_type)": [[117, "sympy.liealgebras.cartan_type.CartanType_generator", false]], "cartesiancomplexregion (class in sympy.sets.fancysets)": [[229, "sympy.sets.fancysets.CartesianComplexRegion", false]], "casoratian() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.casoratian", false]], "cast_check() (sympy.codegen.ast.type method)": [[69, "sympy.codegen.ast.Type.cast_check", false]], "cast_nocheck (sympy.codegen.ast.floatbasetype attribute)": [[69, "sympy.codegen.ast.FloatBaseType.cast_nocheck", false]], "cast_nocheck() (sympy.codegen.ast.floattype method)": [[69, "sympy.codegen.ast.FloatType.cast_nocheck", false]], "catalan (class in sympy.core.numbers)": [[88, "sympy.core.numbers.Catalan", false]], "catalan (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.catalan", false]], "category (class in sympy.categories)": [[68, "sympy.categories.Category", false]], "cauchy() (in module sympy.stats)": [[241, "sympy.stats.Cauchy", false]], "cauchy_lower_bound() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.cauchy_lower_bound", false]], "cauchy_upper_bound() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.cauchy_upper_bound", false]], "cbrt (class in sympy.codegen.cfunctions)": [[69, "sympy.codegen.cfunctions.Cbrt", false]], "cbrt() (in module sympy.functions.elementary.miscellaneous)": [[94, "sympy.functions.elementary.miscellaneous.cbrt", false]], "ccode() (in module sympy.printing.c)": [[221, "sympy.printing.c.ccode", false]], "ccodegen (class in sympy.utilities.codegen)": [[254, "sympy.utilities.codegen.CCodeGen", false]], "ceiling (class in sympy.functions.elementary.integers)": [[94, "sympy.functions.elementary.integers.ceiling", false]], "center (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.center", false]], "center (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.center", false]], "center() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.center", false]], "center_of_mass() (in module sympy.physics.mechanics.functions)": [[155, "sympy.physics.mechanics.functions.center_of_mass", false]], "central_inertia (sympy.physics.mechanics.body.body property)": [[149, "sympy.physics.mechanics.body.Body.central_inertia", false]], "central_inertia (sympy.physics.mechanics.rigidbody.rigidbody property)": [[155, "sympy.physics.mechanics.rigidbody.RigidBody.central_inertia", false]], "centralizer() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.centralizer", false]], "centralmoment (class in sympy.stats)": [[241, "sympy.stats.CentralMoment", false]], "centroid (sympy.geometry.polygon.polygon property)": [[104, "sympy.geometry.polygon.Polygon.centroid", false]], "centroid (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.centroid", false]], "centroid() (in module sympy.geometry.util)": [[105, "sympy.geometry.util.centroid", false]], "cg (class in sympy.physics.quantum.cg)": [[170, "sympy.physics.quantum.cg.CG", false]], "cg_simp() (in module sympy.physics.quantum.cg)": [[170, "sympy.physics.quantum.cg.cg_simp", false]], "cgate (class in sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.CGate", false]], "cgates (class in sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.CGateS", false]], "change_index() (sympy.concrete.expr_with_intlimits.exprwithintlimits method)": [[87, "sympy.concrete.expr_with_intlimits.ExprWithIntLimits.change_index", false]], "change_member_label() (sympy.physics.continuum_mechanics.truss.truss method)": [[140, "sympy.physics.continuum_mechanics.truss.Truss.change_member_label", false]], "change_node_label() (sympy.physics.continuum_mechanics.truss.truss method)": [[140, "sympy.physics.continuum_mechanics.truss.Truss.change_node_label", false]], "change_support() (sympy.physics.continuum_mechanics.cable.cable method)": [[138, "sympy.physics.continuum_mechanics.cable.Cable.change_support", false]], "characteristic() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.characteristic", false]], "characteristic() (sympy.polys.domains.finitefield method)": [[212, "sympy.polys.domains.FiniteField.characteristic", false]], "characteristiccurvecollection (class in sympy.physics.biomechanics.curve)": [[132, "sympy.physics.biomechanics.curve.CharacteristicCurveCollection", false]], "characteristiccurvefunction (class in sympy.physics.biomechanics.curve)": [[132, "sympy.physics.biomechanics.curve.CharacteristicCurveFunction", false]], "charpoly() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.charpoly", false]], "charpoly() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.charpoly", false]], "charpoly() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.charpoly", false]], "charpoly() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.charpoly", false]], "charpoly() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.charpoly", false]], "charpoly_base() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.charpoly_base", false]], "charpoly_berk() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.charpoly_berk", false]], "charpoly_factor_blocks() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.charpoly_factor_blocks", false]], "charpoly_factor_list() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.charpoly_factor_list", false]], "chebyshevt (class in sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.chebyshevt", false]], "chebyshevt_poly() (in module sympy.polys.orthopolys)": [[217, "sympy.polys.orthopolys.chebyshevt_poly", false]], "chebyshevt_root (class in sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.chebyshevt_root", false]], "chebyshevu (class in sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.chebyshevu", false]], "chebyshevu_poly() (in module sympy.polys.orthopolys)": [[217, "sympy.polys.orthopolys.chebyshevu_poly", false]], "chebyshevu_root (class in sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.chebyshevu_root", false]], "check_and_join() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.check_and_join", false]], "check_output() (sympy.testing.runtests.sympyoutputchecker method)": [[252, "sympy.testing.runtests.SymPyOutputChecker.check_output", false]], "checkinfsol() (in module sympy.solvers.ode)": [[237, "sympy.solvers.ode.checkinfsol", false]], "checkodesol() (in module sympy.solvers.ode)": [[237, "sympy.solvers.ode.checkodesol", false]], "checkpdesol() (in module sympy.solvers.pde)": [[238, "sympy.solvers.pde.checkpdesol", false]], "checksol() (in module sympy.solvers.solvers)": [[239, "sympy.solvers.solvers.checksol", false]], "chi (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.Chi", false]], "chi() (in module sympy.stats)": [[241, "sympy.stats.Chi", false]], "child (sympy.physics.mechanics.joint.joint property)": [[152, "sympy.physics.mechanics.joint.Joint.child", false]], "child_axis (sympy.physics.mechanics.joint.joint property)": [[152, "sympy.physics.mechanics.joint.Joint.child_axis", false]], "child_point (sympy.physics.mechanics.joint.joint property)": [[152, "sympy.physics.mechanics.joint.Joint.child_point", false]], "chinoncentral() (in module sympy.stats)": [[241, "sympy.stats.ChiNoncentral", false]], "chisquared() (in module sympy.stats)": [[241, "sympy.stats.ChiSquared", false]], "cholesky() (sympy.matrices.dense.densematrix method)": [[119, "sympy.matrices.dense.DenseMatrix.cholesky", false]], "cholesky() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.cholesky", false]], "cholesky_solve() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.cholesky_solve", false]], "choose_domain() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.choose_domain", false]], "ci (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.Ci", false]], "circle (class in sympy.geometry.ellipse)": [[98, "sympy.geometry.ellipse.Circle", false]], "circuit_plot() (in module sympy.physics.quantum.circuitplot)": [[171, "sympy.physics.quantum.circuitplot.circuit_plot", false]], "circuitplot (class in sympy.physics.quantum.circuitplot)": [[171, "sympy.physics.quantum.circuitplot.CircuitPlot", false]], "circumcenter (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.circumcenter", false]], "circumcenter (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.circumcenter", false]], "circumcircle (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.circumcircle", false]], "circumcircle (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.circumcircle", false]], "circumference (sympy.geometry.ellipse.circle property)": [[98, "sympy.geometry.ellipse.Circle.circumference", false]], "circumference (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.circumference", false]], "circumradius (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.circumradius", false]], "circumradius (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.circumradius", false]], "class_key() (sympy.core.basic.basic class method)": [[88, "sympy.core.basic.Basic.class_key", false]], "classify_diop() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.classify_diop", false]], "classify_ode() (in module sympy.solvers.ode)": [[237, "sympy.solvers.ode.classify_ode", false]], "classify_pde() (in module sympy.solvers.pde)": [[238, "sympy.solvers.pde.classify_pde", false]], "clear() (sympy.tensor.tensor._tensormanager method)": [[247, "sympy.tensor.tensor._TensorManager.clear", false]], "clear_cache() (sympy.polys.rootoftools.complexrootof class method)": [[217, "sympy.polys.rootoftools.ComplexRootOf.clear_cache", false]], "clear_denoms() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.clear_denoms", false]], "clear_denoms() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.clear_denoms", false]], "clear_denoms() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.clear_denoms", false]], "clear_denoms_rowwise() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.clear_denoms_rowwise", false]], "clear_loads() (sympy.physics.mechanics.body.body method)": [[149, "sympy.physics.mechanics.body.Body.clear_loads", false]], "clebsch_gordan() (in module sympy.physics.wigner)": [[206, "sympy.physics.wigner.clebsch_gordan", false]], "clone() (sympy.polys.polyoptions.options method)": [[214, "sympy.polys.polyoptions.Options.clone", false]], "closing_angle() (sympy.geometry.line.ray2d method)": [[101, "sympy.geometry.line.Ray2D.closing_angle", false]], "closure (sympy.sets.sets.set property)": [[229, "sympy.sets.sets.Set.closure", false]], "cmod (class in sympy.physics.quantum.shor)": [[187, "sympy.physics.quantum.shor.CMod", false]], "cmoment() (in module sympy.stats)": [[241, "sympy.stats.cmoment", false]], "cmplx (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.cmplx", false]], "cnot (in module sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.CNOT", false]], "cnotgate (class in sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.CNotGate", false]], "code generation": [[15, "term-Code-Generation", true]], "codeblock (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.CodeBlock", false]], "codegen (class in sympy.utilities.codegen)": [[254, "sympy.utilities.codegen.CodeGen", false]], "codegen() (in module sympy.utilities.codegen)": [[254, "sympy.utilities.codegen.codegen", false]], "codeprinter (class in sympy.printing.codeprinter)": [[221, "sympy.printing.codeprinter.CodePrinter", false]], "codewrapper (class in sympy.utilities.autowrap)": [[253, "sympy.utilities.autowrap.CodeWrapper", false]], "codomain (sympy.categories.compositemorphism property)": [[68, "sympy.categories.CompositeMorphism.codomain", false]], "codomain (sympy.categories.morphism property)": [[68, "sympy.categories.Morphism.codomain", false]], "coeff() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.coeff", false]], "coeff() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.coeff", false]], "coeff() (sympy.series.sequences.seqbase method)": [[227, "sympy.series.sequences.SeqBase.coeff", false]], "coeff_bell() (sympy.series.formal.formalpowerseries method)": [[223, "sympy.series.formal.FormalPowerSeries.coeff_bell", false]], "coeff_monomial() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.coeff_monomial", false]], "coeff_mul() (sympy.series.sequences.emptysequence method)": [[227, "sympy.series.sequences.EmptySequence.coeff_mul", false]], "coeff_mul() (sympy.series.sequences.seqbase method)": [[227, "sympy.series.sequences.SeqBase.coeff_mul", false]], "coeff_mul() (sympy.series.sequences.seqformula method)": [[227, "sympy.series.sequences.SeqFormula.coeff_mul", false]], "coeff_mul() (sympy.series.sequences.seqper method)": [[227, "sympy.series.sequences.SeqPer.coeff_mul", false]], "coeff_search() (in module sympy.polys.numberfields.utilities)": [[216, "sympy.polys.numberfields.utilities.coeff_search", false]], "coeff_wrt() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.coeff_wrt", false]], "coefficients (sympy.geometry.line.line2d property)": [[101, "sympy.geometry.line.Line2D.coefficients", false]], "coeffs() (sympy.core.numbers.algebraicnumber method)": [[88, "sympy.core.numbers.AlgebraicNumber.coeffs", false]], "coeffs() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.coeffs", false]], "coeffs() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.coeffs", false]], "coeffs() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.coeffs", false]], "coercionfailed (class in sympy.polys.polyerrors)": [[214, "sympy.polys.polyerrors.CoercionFailed", false]], "cofactor() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.cofactor", false]], "cofactor_matrix() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.cofactor_matrix", false]], "cofactors() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.cofactors", false]], "cofactors() (sympy.core.numbers.number method)": [[88, "sympy.core.numbers.Number.cofactors", false]], "cofactors() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.cofactors", false]], "cofactors() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.cofactors", false]], "cofactors() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.cofactors", false]], "coherent_state() (in module sympy.physics.qho_1d)": [[167, "sympy.physics.qho_1d.coherent_state", false]], "coin() (in module sympy.stats)": [[241, "sympy.stats.Coin", false]], "col() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.col", false]], "col_del() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.col_del", false]], "col_insert() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.col_insert", false]], "col_join() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.col_join", false]], "collect() (in module sympy.simplify.radsimp)": [[233, "sympy.simplify.radsimp.collect", false]], "collect() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.collect", false]], "collect_const() (in module sympy.simplify.radsimp)": [[233, "sympy.simplify.radsimp.collect_const", false]], "collect_sqrt() (in module sympy.simplify.radsimp)": [[233, "sympy.simplify.radsimp.collect_sqrt", false]], "column() (sympy.polys.numberfields.modules.moduleelement method)": [[216, "sympy.polys.numberfields.modules.ModuleElement.column", false]], "columnspace() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.columnspace", false]], "columnspace() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.columnspace", false]], "comb_explicit_rhs (sympy.physics.mechanics.system.symbolicsystem property)": [[158, "sympy.physics.mechanics.system.SymbolicSystem.comb_explicit_rhs", false]], "comb_implicit_mat (sympy.physics.mechanics.system.symbolicsystem property)": [[158, "sympy.physics.mechanics.system.SymbolicSystem.comb_implicit_mat", false]], "comb_implicit_rhs (sympy.physics.mechanics.system.symbolicsystem property)": [[158, "sympy.physics.mechanics.system.SymbolicSystem.comb_implicit_rhs", false]], "combsimp() (in module sympy.simplify.combsimp)": [[233, "sympy.simplify.combsimp.combsimp", false]], "combsimp() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.combsimp", false]], "comm_i2symbol() (sympy.tensor.tensor._tensormanager method)": [[247, "sympy.tensor.tensor._TensorManager.comm_i2symbol", false]], "comm_symbols2i() (sympy.tensor.tensor._tensormanager method)": [[247, "sympy.tensor.tensor._TensorManager.comm_symbols2i", false]], "commaoperator (class in sympy.codegen.cnodes)": [[69, "sympy.codegen.cnodes.CommaOperator", false]], "comment (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Comment", false]], "common_prefix() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.common_prefix", false]], "common_suffix() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.common_suffix", false]], "communication_classes() (sympy.stats.discretemarkovchain method)": [[241, "sympy.stats.DiscreteMarkovChain.communication_classes", false]], "commutative": [[88, "term-commutative", true]], "commutative_diagrams (sympy.categories.category property)": [[68, "sympy.categories.Category.commutative_diagrams", false]], "commutativepredicate (class in sympy.assumptions.predicates.common)": [[65, "sympy.assumptions.predicates.common.CommutativePredicate", false]], "commutator (class in sympy.diffgeom)": [[90, "sympy.diffgeom.Commutator", false]], "commutator (class in sympy.physics.quantum.commutator)": [[172, "sympy.physics.quantum.commutator.Commutator", false]], "commutator (class in sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.Commutator", false]], "commutator() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.commutator", false]], "commutator() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.commutator", false]], "commutes_with() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.commutes_with", false]], "commutes_with() (sympy.tensor.tensor.tensorhead method)": [[247, "sympy.tensor.tensor.TensorHead.commutes_with", false]], "companion() (sympy.matrices.matrixbase.matrixbase class method)": [[124, "sympy.matrices.matrixbase.MatrixBase.companion", false]], "companionmatrix (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.CompanionMatrix", false]], "compare() (in module sympy.series.gruntz)": [[228, "sympy.series.gruntz.compare", false]], "compare() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.compare", false]], "complement (class in sympy.sets.sets)": [[229, "sympy.sets.sets.Complement", false]], "complement() (sympy.sets.sets.set method)": [[229, "sympy.sets.sets.Set.complement", false]], "complex": [[88, "term-complex", true]], "complexelementspredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.ComplexElementsPredicate", false]], "complexes (class in sympy.sets.fancysets)": [[229, "sympy.sets.fancysets.Complexes", false]], "complexfield (class in sympy.polys.domains)": [[212, "sympy.polys.domains.ComplexField", false]], "complexinfinity (class in sympy.core.numbers)": [[88, "sympy.core.numbers.ComplexInfinity", false]], "complexpredicate (class in sympy.assumptions.predicates.sets)": [[65, "sympy.assumptions.predicates.sets.ComplexPredicate", false]], "complexregion (class in sympy.sets.fancysets)": [[229, "sympy.sets.fancysets.ComplexRegion", false]], "complexrootof (class in sympy.polys.rootoftools)": [[217, "sympy.polys.rootoftools.ComplexRootOf", false]], "complexspace (class in sympy.physics.quantum.hilbert)": [[177, "sympy.physics.quantum.hilbert.ComplexSpace", false]], "complextype (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.ComplexType", false]], "components (sympy.categories.compositemorphism property)": [[68, "sympy.categories.CompositeMorphism.components", false]], "components (sympy.vector.dyadic.dyadic property)": [[265, "sympy.vector.dyadic.Dyadic.components", false]], "components (sympy.vector.vector.vector property)": [[265, "sympy.vector.vector.Vector.components", false]], "components() (in module sympy.integrals.heurisch)": [[115, "sympy.integrals.heurisch.components", false]], "compose() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.compose", false]], "compose() (sympy.categories.morphism method)": [[68, "sympy.categories.Morphism.compose", false]], "compose() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.compose", false]], "compose() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.compose", false]], "compose() (sympy.polys.rings.polyring method)": [[212, "sympy.polys.rings.PolyRing.compose", false]], "compose() (sympy.series.formal.formalpowerseries method)": [[223, "sympy.series.formal.FormalPowerSeries.compose", false]], "composite": [[88, "term-composite", true]], "composite() (in module sympy.ntheory.generate)": [[128, "sympy.ntheory.generate.composite", false]], "compositedomain (class in sympy.polys.domains.compositedomain)": [[212, "sympy.polys.domains.compositedomain.CompositeDomain", false]], "compositemorphism (class in sympy.categories)": [[68, "sympy.categories.CompositeMorphism", false]], "compositepi() (in module sympy.ntheory.generate)": [[128, "sympy.ntheory.generate.compositepi", false]], "compositepredicate (class in sympy.assumptions.predicates.ntheory)": [[65, "sympy.assumptions.predicates.ntheory.CompositePredicate", false]], "composition() (sympy.holonomic.holonomic.holonomicfunction method)": [[110, "sympy.holonomic.holonomic.HolonomicFunction.composition", false]], "composition_series() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.composition_series", false]], "compounddistribution (class in sympy.stats.compound_rv)": [[241, "sympy.stats.compound_rv.CompoundDistribution", false]], "computationfailed (class in sympy.polys.polyerrors)": [[214, "sympy.polys.polyerrors.ComputationFailed", false]], "compute_explicit_form() (sympy.physics.mechanics.system.symbolicsystem method)": [[158, "sympy.physics.mechanics.system.SymbolicSystem.compute_explicit_form", false]], "compute_fps() (in module sympy.series.formal)": [[223, "sympy.series.formal.compute_fps", false]], "compute_leading_term() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.compute_leading_term", false]], "compute_m_ybar() (in module sympy.solvers.ode.riccati)": [[237, "sympy.solvers.ode.riccati.compute_m_ybar", false]], "conclusions (sympy.categories.diagram property)": [[68, "sympy.categories.Diagram.conclusions", false]], "cond (sympy.functions.elementary.piecewise.exprcondpair property)": [[94, "sympy.functions.elementary.piecewise.ExprCondPair.cond", false]], "condition_number() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.condition_number", false]], "conditionaldomain (class in sympy.stats.rv)": [[241, "sympy.stats.rv.ConditionalDomain", false]], "conditionset (class in sympy.sets.conditionset)": [[229, "sympy.sets.conditionset.ConditionSet", false]], "conjugacy_class() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.conjugacy_class", false]], "conjugacy_classes() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.conjugacy_classes", false]], "conjugate (class in sympy.functions.elementary.complexes)": [[94, "sympy.functions.elementary.complexes.conjugate", false]], "conjugate (sympy.combinatorics.partitions.integerpartition property)": [[77, "sympy.combinatorics.partitions.IntegerPartition.conjugate", false]], "conjugate() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.conjugate", false]], "conjugate() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.conjugate", false]], "conjugate_gauss_beams() (in module sympy.physics.optics.gaussopt)": [[160, "sympy.physics.optics.gaussopt.conjugate_gauss_beams", false]], "connected_components() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.connected_components", false]], "connected_components() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.connected_components", false]], "connected_components_decomposition() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.connected_components_decomposition", false]], "conserve_mpmath_dps() (in module sympy.utilities.decorator)": [[255, "sympy.utilities.decorator.conserve_mpmath_dps", false]], "const() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.const", false]], "constant_renumber() (in module sympy.solvers.ode.ode)": [[237, "sympy.solvers.ode.ode.constant_renumber", false]], "constant_symbols() (sympy.physics.mechanics.system.symbolicsystem method)": [[158, "sympy.physics.mechanics.system.SymbolicSystem.constant_symbols", false]], "constants (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.constants", false]], "constants (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.constants", false]], "constants (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[131, "sympy.physics.biomechanics.activation.ZerothOrderActivation.constants", false]], "constants (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.constants", false]], "constantsimp() (in module sympy.solvers.ode)": [[237, "sympy.solvers.ode.constantsimp", false]], "construct_c() (in module sympy.solvers.ode.riccati)": [[237, "sympy.solvers.ode.riccati.construct_c", false]], "construct_d() (in module sympy.solvers.ode.riccati)": [[237, "sympy.solvers.ode.riccati.construct_d", false]], "construct_domain() (in module sympy.polys.constructor)": [[217, "sympy.polys.constructor.construct_domain", false]], "contains (class in sympy.sets.conditionset)": [[229, "sympy.sets.conditionset.Contains", false]], "contains() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.contains", false]], "contains() (sympy.geometry.line.line method)": [[101, "sympy.geometry.line.Line.contains", false]], "contains() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.contains", false]], "contains() (sympy.geometry.line.ray method)": [[101, "sympy.geometry.line.Ray.contains", false]], "contains() (sympy.geometry.line.segment method)": [[101, "sympy.geometry.line.Segment.contains", false]], "contains() (sympy.polys.agca.ideals.ideal method)": [[208, "sympy.polys.agca.ideals.Ideal.contains", false]], "contains() (sympy.polys.agca.modules.module method)": [[208, "sympy.polys.agca.modules.Module.contains", false]], "contains() (sympy.polys.polytools.groebnerbasis method)": [[217, "sympy.polys.polytools.GroebnerBasis.contains", false]], "contains() (sympy.series.order.order method)": [[228, "sympy.series.order.Order.contains", false]], "contains() (sympy.sets.sets.set method)": [[229, "sympy.sets.sets.Set.contains", false]], "content() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.content", false]], "content() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.content", false]], "content() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.content", false]], "content() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.content", false]], "content() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.content", false]], "continued_fraction() (in module sympy.ntheory.continued_fraction)": [[128, "sympy.ntheory.continued_fraction.continued_fraction", false]], "continued_fraction_convergents() (in module sympy.ntheory.continued_fraction)": [[128, "sympy.ntheory.continued_fraction.continued_fraction_convergents", false]], "continued_fraction_iterator() (in module sympy.ntheory.continued_fraction)": [[128, "sympy.ntheory.continued_fraction.continued_fraction_iterator", false]], "continued_fraction_periodic() (in module sympy.ntheory.continued_fraction)": [[128, "sympy.ntheory.continued_fraction.continued_fraction_periodic", false]], "continued_fraction_reduce() (in module sympy.ntheory.continued_fraction)": [[128, "sympy.ntheory.continued_fraction.continued_fraction_reduce", false]], "continuetoken (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.ContinueToken", false]], "continuous_domain() (in module sympy.calculus.util)": [[67, "sympy.calculus.util.continuous_domain", false]], "continuousdomain (class in sympy.stats.crv)": [[241, "sympy.stats.crv.ContinuousDomain", false]], "continuousmarkovchain (class in sympy.stats)": [[241, "sympy.stats.ContinuousMarkovChain", false]], "continuouspspace (class in sympy.stats.crv)": [[241, "sympy.stats.crv.ContinuousPSpace", false]], "continuousrv() (in module sympy.stats)": [[241, "sympy.stats.ContinuousRV", false]], "contract_metric() (sympy.tensor.tensor.tensadd method)": [[247, "sympy.tensor.tensor.TensAdd.contract_metric", false]], "contract_metric() (sympy.tensor.tensor.tensmul method)": [[247, "sympy.tensor.tensor.TensMul.contract_metric", false]], "contraction() (in module sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.contraction", false]], "control_line() (sympy.physics.quantum.circuitplot.circuitplot method)": [[171, "sympy.physics.quantum.circuitplot.CircuitPlot.control_line", false]], "control_point() (sympy.physics.quantum.circuitplot.circuitplot method)": [[171, "sympy.physics.quantum.circuitplot.CircuitPlot.control_point", false]], "controls (sympy.physics.quantum.gate.cgate property)": [[175, "sympy.physics.quantum.gate.CGate.controls", false]], "controls (sympy.physics.quantum.gate.cnotgate property)": [[175, "sympy.physics.quantum.gate.CNotGate.controls", false]], "convergence_statement (sympy.functions.special.hyper.hyper property)": [[96, "sympy.functions.special.hyper.hyper.convergence_statement", false]], "convert() (sympy.polys.agca.modules.freemodule method)": [[208, "sympy.polys.agca.modules.FreeModule.convert", false]], "convert() (sympy.polys.agca.modules.module method)": [[208, "sympy.polys.agca.modules.Module.convert", false]], "convert() (sympy.polys.agca.modules.quotientmodule method)": [[208, "sympy.polys.agca.modules.QuotientModule.convert", false]], "convert() (sympy.polys.agca.modules.submodule method)": [[208, "sympy.polys.agca.modules.SubModule.convert", false]], "convert() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.convert", false]], "convert() (sympy.polys.polyclasses.anp method)": [[212, "sympy.polys.polyclasses.ANP.convert", false]], "convert() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.convert", false]], "convert_from() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.convert_from", false]], "convert_to() (in module sympy.physics.units.util)": [[198, "sympy.physics.units.util.convert_to", false]], "convert_to() (sympy.physics.units.quantities.quantity method)": [[198, "sympy.physics.units.quantities.Quantity.convert_to", false]], "convert_to() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.convert_to", false]], "convert_to() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.convert_to", false]], "convert_to() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.convert_to", false]], "convert_to_c() (sympy.parsing.sym_expr.sympyexpression method)": [[130, "sympy.parsing.sym_expr.SymPyExpression.convert_to_c", false]], "convert_to_expr() (sympy.parsing.sym_expr.sympyexpression method)": [[130, "sympy.parsing.sym_expr.SymPyExpression.convert_to_expr", false]], "convert_to_fortran() (sympy.parsing.sym_expr.sympyexpression method)": [[130, "sympy.parsing.sym_expr.SymPyExpression.convert_to_fortran", false]], "convert_to_native_paths() (in module sympy.testing.runtests)": [[252, "sympy.testing.runtests.convert_to_native_paths", false]], "convert_to_python() (sympy.parsing.sym_expr.sympyexpression method)": [[130, "sympy.parsing.sym_expr.SymPyExpression.convert_to_python", false]], "convert_xor() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.convert_xor", false]], "convex_hull() (in module sympy.geometry.util)": [[105, "sympy.geometry.util.convex_hull", false]], "convolution() (in module sympy.discrete.convolutions)": [[91, "sympy.discrete.convolutions.convolution", false]], "convolution_fft() (in module sympy.discrete.convolutions)": [[91, "sympy.discrete.convolutions.convolution_fft", false]], "convolution_fwht() (in module sympy.discrete.convolutions)": [[91, "sympy.discrete.convolutions.convolution_fwht", false]], "convolution_ntt() (in module sympy.discrete.convolutions)": [[91, "sympy.discrete.convolutions.convolution_ntt", false]], "convolution_subset() (in module sympy.discrete.convolutions)": [[91, "sympy.discrete.convolutions.convolution_subset", false]], "coord_function() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.coord_function", false]], "coord_functions() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.coord_functions", false]], "coord_tuple_transform_to() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.coord_tuple_transform_to", false]], "coordinates (sympy.geometry.point.point2d property)": [[103, "sympy.geometry.point.Point2D.coordinates", false]], "coordinates (sympy.geometry.point.point3d property)": [[103, "sympy.geometry.point.Point3D.coordinates", false]], "coordinates (sympy.physics.mechanics.joint.joint property)": [[152, "sympy.physics.mechanics.joint.Joint.coordinates", false]], "coordinates (sympy.physics.mechanics.system.symbolicsystem property)": [[158, "sympy.physics.mechanics.system.SymbolicSystem.coordinates", false]], "coordinatesym (class in sympy.physics.vector.frame)": [[200, "sympy.physics.vector.frame.CoordinateSym", false]], "coordinatesymbol (class in sympy.diffgeom)": [[90, "sympy.diffgeom.CoordinateSymbol", false]], "coords() (sympy.diffgeom.point method)": [[90, "sympy.diffgeom.Point.coords", false]], "coordsys3d (class in sympy.vector.coordsysrect)": [[265, "sympy.vector.coordsysrect.CoordSys3D", false]], "coordsystem (class in sympy.diffgeom)": [[90, "sympy.diffgeom.CoordSystem", false]], "copy() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.copy", false]], "copy() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.copy", false]], "copy() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.copy", false]], "copy() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.copy", false]], "copy() (sympy.series.gruntz.subsset method)": [[228, "sympy.series.gruntz.SubsSet.copy", false]], "core": [[15, "term-Core", true]], "core() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.core", false]], "cornacchia() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.cornacchia", false]], "corners (sympy.combinatorics.polyhedron.polyhedron property)": [[81, "sympy.combinatorics.polyhedron.Polyhedron.corners", false]], "correlation() (in module sympy.stats)": [[241, "sympy.stats.correlation", false]], "cos (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.cos", false]], "coset_factor() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.coset_factor", false]], "coset_rank() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.coset_rank", false]], "coset_table() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.coset_table", false]], "coset_transversal() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.coset_transversal", false]], "coset_unrank() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.coset_unrank", false]], "cosh (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.cosh", false]], "cosine_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.cosine_transform", false]], "cosinetransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.CosineTransform", false]], "coskewness() (in module sympy.stats)": [[241, "sympy.stats.coskewness", false]], "cot (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.cot", false]], "coth (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.coth", false]], "could_extract_minus_sign() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.could_extract_minus_sign", false]], "coulombkineticfriction (class in sympy.physics.mechanics.actuator)": [[148, "sympy.physics.mechanics.actuator.CoulombKineticFriction", false]], "count() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.count", false]], "count_complex_roots() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.count_complex_roots", false]], "count_digits() (in module sympy.ntheory.digits)": [[128, "sympy.ntheory.digits.count_digits", false]], "count_ops() (in module sympy.core.function)": [[88, "sympy.core.function.count_ops", false]], "count_ops() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.count_ops", false]], "count_partitions() (sympy.utilities.enumerative.multisetpartitiontraverser method)": [[256, "sympy.utilities.enumerative.MultisetPartitionTraverser.count_partitions", false]], "count_real_roots() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.count_real_roots", false]], "count_roots() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.count_roots", false]], "count_roots() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.count_roots", false]], "couple() (in module sympy.physics.quantum.spin)": [[188, "sympy.physics.quantum.spin.couple", false]], "covarderivativeop (class in sympy.diffgeom)": [[90, "sympy.diffgeom.CovarDerivativeOp", false]], "covariance (class in sympy.stats)": [[241, "sympy.stats.Covariance", false]], "covariance() (in module sympy.stats)": [[241, "sympy.stats.covariance", false]], "covering_product() (in module sympy.discrete.convolutions)": [[91, "sympy.discrete.convolutions.covering_product", false]], "coxeter_diagram() (sympy.liealgebras.weyl_group.weylgroup method)": [[117, "sympy.liealgebras.weyl_group.WeylGroup.coxeter_diagram", false]], "cramer_solve() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.cramer_solve", false]], "create_expand_pow_optimization() (in module sympy.codegen.rewriting)": [[69, "sympy.codegen.rewriting.create_expand_pow_optimization", false]], "create_new() (sympy.vector.coordsysrect.coordsys3d method)": [[265, "sympy.vector.coordsysrect.CoordSys3D.create_new", false]], "createboson (class in sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.CreateBoson", false]], "createcgate() (in module sympy.physics.quantum.circuitplot)": [[171, "sympy.physics.quantum.circuitplot.CreateCGate", false]], "createfermion (class in sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.CreateFermion", false]], "critical_angle() (in module sympy.physics.optics.utils)": [[164, "sympy.physics.optics.utils.critical_angle", false]], "cross() (in module sympy.physics.vector.functions)": [[202, "sympy.physics.vector.functions.cross", false]], "cross() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.cross", false]], "cross() (sympy.physics.vector.dyadic.dyadic method)": [[200, "sympy.physics.vector.dyadic.Dyadic.cross", false]], "cross() (sympy.physics.vector.vector.vector method)": [[200, "sympy.physics.vector.vector.Vector.cross", false]], "cross() (sympy.vector.deloperator.del method)": [[265, "sympy.vector.deloperator.Del.cross", false]], "cross() (sympy.vector.dyadic.dyadic method)": [[265, "sympy.vector.dyadic.Dyadic.cross", false]], "cross() (sympy.vector.vector.vector method)": [[265, "sympy.vector.vector.Vector.cross", false]], "cross_section (sympy.physics.continuum_mechanics.beam.beam property)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.cross_section", false]], "crosscovariancematrix (class in sympy.stats)": [[241, "sympy.stats.CrossCovarianceMatrix", false]], "crt() (in module sympy.ntheory.modular)": [[128, "sympy.ntheory.modular.crt", false]], "crt1() (in module sympy.ntheory.modular)": [[128, "sympy.ntheory.modular.crt1", false]], "crt2() (in module sympy.ntheory.modular)": [[128, "sympy.ntheory.modular.crt2", false]], "csc (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.csc", false]], "csch (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.csch", false]], "cse() (in module sympy.simplify.cse_main)": [[233, "sympy.simplify.cse_main.cse", false]], "cse() (sympy.codegen.ast.codeblock method)": [[69, "sympy.codegen.ast.CodeBlock.cse", false]], "cubicthue (class in sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.CubicThue", false]], "curl() (in module sympy.physics.vector.fieldfunctions)": [[201, "sympy.physics.vector.fieldfunctions.curl", false]], "curl() (in module sympy.vector)": [[268, "sympy.vector.curl", false]], "current (sympy.combinatorics.graycode.graycode property)": [[72, "sympy.combinatorics.graycode.GrayCode.current", false]], "curve (class in sympy.geometry.curve)": [[97, "sympy.geometry.curve.Curve", false]], "curvedmirror (class in sympy.physics.optics.gaussopt)": [[160, "sympy.physics.optics.gaussopt.CurvedMirror", false]], "curvedrefraction (class in sympy.physics.optics.gaussopt)": [[160, "sympy.physics.optics.gaussopt.CurvedRefraction", false]], "curves() (sympy.physics.biomechanics.musculotendon.musculotendonbase method)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.curves", false]], "cut_section() (sympy.geometry.polygon.polygon method)": [[104, "sympy.geometry.polygon.Polygon.cut_section", false]], "cxx11codeprinter (class in sympy.printing.cxx)": [[221, "sympy.printing.cxx.CXX11CodePrinter", false]], "cxx98codeprinter (class in sympy.printing.cxx)": [[221, "sympy.printing.cxx.CXX98CodePrinter", false]], "cxxcode() (in module sympy.printing.codeprinter)": [[221, "sympy.printing.codeprinter.cxxcode", false]], "cycle (class in sympy.combinatorics.permutations)": [[80, "sympy.combinatorics.permutations.Cycle", false]], "cycle_length() (in module sympy.ntheory.generate)": [[128, "sympy.ntheory.generate.cycle_length", false]], "cycle_list() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.cycle_list", false]], "cycle_structure (sympy.combinatorics.permutations.permutation property)": [[80, "sympy.combinatorics.permutations.Permutation.cycle_structure", false]], "cycles (sympy.combinatorics.permutations.permutation property)": [[80, "sympy.combinatorics.permutations.Permutation.cycles", false]], "cyclic() (sympy.combinatorics.generators method)": [[80, "sympy.combinatorics.generators.cyclic", false]], "cyclic_form (sympy.combinatorics.permutations.permutation property)": [[80, "sympy.combinatorics.permutations.Permutation.cyclic_form", false]], "cyclic_form (sympy.combinatorics.polyhedron.polyhedron property)": [[81, "sympy.combinatorics.polyhedron.Polyhedron.cyclic_form", false]], "cyclicgroup() (in module sympy.combinatorics.named_groups)": [[76, "sympy.combinatorics.named_groups.CyclicGroup", false]], "cyclotomic_field() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.cyclotomic_field", false]], "cyclotomic_poly() (in module sympy.polys.specialpolys)": [[217, "sympy.polys.specialpolys.cyclotomic_poly", false]], "cylindricaljoint (class in sympy.physics.mechanics.joint)": [[152, "sympy.physics.mechanics.joint.CylindricalJoint", false]], "cythoncodewrapper (class in sympy.utilities.autowrap)": [[253, "sympy.utilities.autowrap.CythonCodeWrapper", false]], "d (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.D", false]], "d (sympy.physics.optics.gaussopt.raytransfermatrix property)": [[160, "sympy.physics.optics.gaussopt.RayTransferMatrix.D", false]], "d() (sympy.physics.quantum.spin.rotation class method)": [[188, "sympy.physics.quantum.spin.Rotation.D", false], [188, "sympy.physics.quantum.spin.Rotation.d", false]], "dagger (class in sympy.physics.quantum.dagger)": [[174, "sympy.physics.quantum.dagger.Dagger", false]], "dagger (class in sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.Dagger", false]], "dagum() (in module sympy.stats)": [[241, "sympy.stats.Dagum", false]], "damping (sympy.physics.mechanics.actuator.lineardamper property)": [[148, "sympy.physics.mechanics.actuator.LinearDamper.damping", false]], "datatype (class in sympy.utilities.codegen)": [[254, "sympy.utilities.codegen.DataType", false]], "davis() (in module sympy.stats)": [[241, "sympy.stats.Davis", false]], "dc_gain() (sympy.physics.control.lti.transferfunction method)": [[144, "sympy.physics.control.lti.TransferFunction.dc_gain", false]], "dcm() (sympy.physics.mechanics.body.body method)": [[149, "sympy.physics.mechanics.body.Body.dcm", false]], "dcm() (sympy.physics.vector.frame.referenceframe method)": [[200, "sympy.physics.vector.frame.ReferenceFrame.dcm", false]], "ddm (class in sympy.polys.matrices.ddm)": [[210, "sympy.polys.matrices.ddm.DDM", false]], "ddm_berk() (in module sympy.polys.matrices.dense)": [[210, "sympy.polys.matrices.dense.ddm_berk", false]], "ddm_iadd() (in module sympy.polys.matrices.dense)": [[210, "sympy.polys.matrices.dense.ddm_iadd", false]], "ddm_idet() (in module sympy.polys.matrices.dense)": [[210, "sympy.polys.matrices.dense.ddm_idet", false]], "ddm_iinv() (in module sympy.polys.matrices.dense)": [[210, "sympy.polys.matrices.dense.ddm_iinv", false]], "ddm_ilu() (in module sympy.polys.matrices.dense)": [[210, "sympy.polys.matrices.dense.ddm_ilu", false]], "ddm_ilu_solve() (in module sympy.polys.matrices.dense)": [[210, "sympy.polys.matrices.dense.ddm_ilu_solve", false]], "ddm_ilu_split() (in module sympy.polys.matrices.dense)": [[210, "sympy.polys.matrices.dense.ddm_ilu_split", false]], "ddm_imatmul() (in module sympy.polys.matrices.dense)": [[210, "sympy.polys.matrices.dense.ddm_imatmul", false]], "ddm_imul() (in module sympy.polys.matrices.dense)": [[210, "sympy.polys.matrices.dense.ddm_imul", false]], "ddm_ineg() (in module sympy.polys.matrices.dense)": [[210, "sympy.polys.matrices.dense.ddm_ineg", false]], "ddm_irmul() (in module sympy.polys.matrices.dense)": [[210, "sympy.polys.matrices.dense.ddm_irmul", false]], "ddm_irref() (in module sympy.polys.matrices.dense)": [[210, "sympy.polys.matrices.dense.ddm_irref", false]], "ddm_irref_den() (in module sympy.polys.matrices.dense)": [[210, "sympy.polys.matrices.dense.ddm_irref_den", false]], "ddm_isub() (in module sympy.polys.matrices.dense)": [[210, "sympy.polys.matrices.dense.ddm_isub", false]], "ddm_transpose() (in module sympy.polys.matrices.dense)": [[210, "sympy.polys.matrices.dense.ddm_transpose", false]], "deactivation_time_constant (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.deactivation_time_constant", false]], "debug() (in module sympy.utilities.misc)": [[262, "sympy.utilities.misc.debug", false]], "debug_decorator() (in module sympy.utilities.misc)": [[262, "sympy.utilities.misc.debug_decorator", false]], "debugf() (in module sympy.utilities.misc)": [[262, "sympy.utilities.misc.debugf", false]], "decimal_dig (sympy.codegen.ast.floattype property)": [[69, "sympy.codegen.ast.FloatType.decimal_dig", false]], "decipher_affine() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_affine", false]], "decipher_atbash() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_atbash", false]], "decipher_bifid() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_bifid", false]], "decipher_bifid5() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_bifid5", false]], "decipher_bifid6() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_bifid6", false]], "decipher_elgamal() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_elgamal", false]], "decipher_gm() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_gm", false]], "decipher_hill() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_hill", false]], "decipher_kid_rsa() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_kid_rsa", false]], "decipher_railfence() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_railfence", false]], "decipher_rot13() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_rot13", false]], "decipher_rsa() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_rsa", false]], "decipher_shift() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_shift", false]], "decipher_vigenere() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decipher_vigenere", false]], "declaration (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Declaration", false]], "decode_morse() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.decode_morse", false]], "decompose() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.decompose", false]], "decompose() (sympy.physics.quantum.gate.cgate method)": [[175, "sympy.physics.quantum.gate.CGate.decompose", false]], "decompose() (sympy.physics.quantum.gate.swapgate method)": [[175, "sympy.physics.quantum.gate.SwapGate.decompose", false]], "decompose() (sympy.physics.quantum.qft.iqft method)": [[184, "sympy.physics.quantum.qft.IQFT.decompose", false]], "decompose() (sympy.physics.quantum.qft.qft method)": [[184, "sympy.physics.quantum.qft.QFT.decompose", false]], "decompose() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.decompose", false]], "decompose() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.decompose", false]], "decompose() (sympy.stats.discretemarkovchain method)": [[241, "sympy.stats.DiscreteMarkovChain.decompose", false]], "deduced() (sympy.codegen.ast.variable class method)": [[69, "sympy.codegen.ast.Variable.deduced", false]], "default_sort_key() (in module sympy.core.sorting)": [[88, "sympy.core.sorting.default_sort_key", false]], "deflate() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.deflate", false]], "deflate() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.deflate", false]], "deflection() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.deflection", false]], "deflection() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.deflection", false]], "deflection_jumps (sympy.physics.continuum_mechanics.beam.beam property)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.deflection_jumps", false]], "degree (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.degree", false]], "degree() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.degree", false]], "degree() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.degree", false]], "degree() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.degree", false]], "degree() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.degree", false]], "degree_list() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.degree_list", false]], "degree_list() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.degree_list", false]], "degree_list() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.degree_list", false]], "degrees() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.degrees", false]], "del (class in sympy.vector.deloperator)": [[265, "sympy.vector.deloperator.Del", false]], "delete_doubles() (sympy.liealgebras.weyl_group.weylgroup method)": [[117, "sympy.liealgebras.weyl_group.WeylGroup.delete_doubles", false]], "delta (sympy.functions.special.hyper.meijerg property)": [[96, "sympy.functions.special.hyper.meijerg.delta", false]], "deltaintegrate() (in module sympy.integrals.deltafunctions)": [[115, "sympy.integrals.deltafunctions.deltaintegrate", false]], "den (sympy.physics.control.lti.feedback property)": [[144, "sympy.physics.control.lti.Feedback.den", false]], "den (sympy.physics.control.lti.transferfunction property)": [[144, "sympy.physics.control.lti.TransferFunction.den", false]], "denom() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.denom", false]], "denom() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.denom", false]], "denom() (sympy.polys.domains.expressiondomain method)": [[212, "sympy.polys.domains.ExpressionDomain.denom", false]], "denom() (sympy.polys.domains.fractionfield method)": [[212, "sympy.polys.domains.FractionField.denom", false]], "denom() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianRationalField.denom", false]], "denom() (sympy.polys.domains.gmpyrationalfield method)": [[212, "sympy.polys.domains.GMPYRationalField.denom", false]], "denom() (sympy.polys.domains.rationalfield method)": [[212, "sympy.polys.domains.RationalField.denom", false]], "denom() (sympy.polys.domains.ring.ring method)": [[212, "sympy.polys.domains.ring.Ring.denom", false]], "denom() (sympy.polys.polyclasses.dmf method)": [[212, "sympy.polys.polyclasses.DMF.denom", false]], "densematrix (class in sympy.matrices.dense)": [[119, "sympy.matrices.dense.DenseMatrix", false]], "density() (in module sympy.stats)": [[241, "sympy.stats.density", false]], "deprecated() (in module sympy.utilities.decorator)": [[255, "sympy.utilities.decorator.deprecated", false]], "depth() (sympy.polys.agca.ideals.ideal method)": [[208, "sympy.polys.agca.ideals.Ideal.depth", false]], "derivative (class in sympy.core.function)": [[88, "sympy.core.function.Derivative", false]], "derive_by_array() (in module sympy.tensor.array)": [[242, "sympy.tensor.array.derive_by_array", false]], "derived_series() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.derived_series", false]], "derived_subgroup() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.derived_subgroup", false]], "descent() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.descent", false]], "descents() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.descents", false]], "det() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.det", false]], "det() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.det", false]], "det() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.det", false]], "det() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.det", false]], "det() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.det", false]], "det_lu_decomposition() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.det_LU_decomposition", false]], "deviation() (in module sympy.physics.optics.utils)": [[164, "sympy.physics.optics.utils.deviation", false]], "dfm (class in sympy.polys.matrices._dfm)": [[210, "sympy.polys.matrices._dfm.DFM", false]], "dh_private_key() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.dh_private_key", false]], "dh_public_key() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.dh_public_key", false]], "dh_shared_key() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.dh_shared_key", false]], "diag() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.diag", false]], "diag() (sympy.matrices.matrixbase.matrixbase class method)": [[124, "sympy.matrices.matrixbase.MatrixBase.diag", false]], "diag() (sympy.polys.matrices._dfm.dfm class method)": [[210, "sympy.polys.matrices._dfm.DFM.diag", false]], "diag() (sympy.polys.matrices.ddm.ddm class method)": [[210, "sympy.polys.matrices.ddm.DDM.diag", false]], "diag() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.diag", false]], "diagonal() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.diagonal", false]], "diagonal() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.diagonal", false]], "diagonal() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.diagonal", false]], "diagonal() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.diagonal", false]], "diagonal() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.diagonal", false]], "diagonal_solve() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.diagonal_solve", false]], "diagonalize() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.diagonalize", false]], "diagonalpredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.DiagonalPredicate", false]], "diagram (class in sympy.categories)": [[68, "sympy.categories.Diagram", false]], "diagramgrid (class in sympy.categories.diagram_drawing)": [[68, "sympy.categories.diagram_drawing.DiagramGrid", false]], "dict (class in sympy.core.containers)": [[88, "sympy.core.containers.Dict", false]], "dict_merge() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.dict_merge", false]], "die() (in module sympy.stats)": [[241, "sympy.stats.Die", false]], "diepspace (class in sympy.stats.frv_types)": [[241, "sympy.stats.frv_types.DiePSpace", false]], "diff() (in module sympy.core.function)": [[88, "sympy.core.function.diff", false]], "diff() (sympy.holonomic.holonomic.holonomicfunction method)": [[110, "sympy.holonomic.holonomic.HolonomicFunction.diff", false]], "diff() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.diff", false]], "diff() (sympy.physics.vector.vector.vector method)": [[200, "sympy.physics.vector.vector.Vector.diff", false]], "diff() (sympy.polys.fields.fracelement method)": [[212, "sympy.polys.fields.FracElement.diff", false]], "diff() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.diff", false]], "diff() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.diff", false]], "diff() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.diff", false]], "difference_delta() (in module sympy.series.limitseq)": [[226, "sympy.series.limitseq.difference_delta", false]], "differential (class in sympy.diffgeom)": [[90, "sympy.diffgeom.Differential", false]], "differentialoperator (class in sympy.holonomic.holonomic)": [[111, "sympy.holonomic.holonomic.DifferentialOperator", false]], "differentialoperator (class in sympy.physics.quantum.operator)": [[180, "sympy.physics.quantum.operator.DifferentialOperator", false]], "differentialoperatoralgebra (class in sympy.holonomic.holonomic)": [[111, "sympy.holonomic.holonomic.DifferentialOperatorAlgebra", false]], "differentialoperators() (in module sympy.holonomic.holonomic)": [[111, "sympy.holonomic.holonomic.DifferentialOperators", false]], "differentiate_finite() (in module sympy.calculus.finite_diff)": [[67, "sympy.calculus.finite_diff.differentiate_finite", false]], "dig (sympy.codegen.ast.floattype property)": [[69, "sympy.codegen.ast.FloatType.dig", false]], "digamma (class in sympy.functions.special.gamma_functions)": [[96, "sympy.functions.special.gamma_functions.digamma", false]], "digit_2txt (in module sympy.printing.pretty.pretty_symbology)": [[221, "sympy.printing.pretty.pretty_symbology.digit_2txt", false]], "digits() (in module sympy.ntheory.digits)": [[128, "sympy.ntheory.digits.digits", false]], "digits() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.digits", false]], "dihedral() (sympy.combinatorics.generators method)": [[80, "sympy.combinatorics.generators.dihedral", false]], "dihedralgroup() (in module sympy.combinatorics.named_groups)": [[76, "sympy.combinatorics.named_groups.DihedralGroup", false]], "dim (sympy.physics.units.dimensions.dimensionsystem property)": [[193, "sympy.physics.units.dimensions.DimensionSystem.dim", false]], "dim (sympy.physics.units.unitsystem.unitsystem property)": [[199, "sympy.physics.units.unitsystem.UnitSystem.dim", false]], "dim_can_vector() (sympy.physics.units.dimensions.dimensionsystem method)": [[193, "sympy.physics.units.dimensions.DimensionSystem.dim_can_vector", false]], "dim_handling() (in module sympy.printing.aesaracode)": [[221, "sympy.printing.aesaracode.dim_handling", false]], "dim_vector() (sympy.physics.units.dimensions.dimensionsystem method)": [[193, "sympy.physics.units.dimensions.DimensionSystem.dim_vector", false]], "dimension (class in sympy.physics.units.dimensions)": [[193, "sympy.physics.units.dimensions.Dimension", false]], "dimension (sympy.physics.quantum.hilbert.hilbertspace property)": [[177, "sympy.physics.quantum.hilbert.HilbertSpace.dimension", false]], "dimension() (in module sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.dimension", false]], "dimension() (sympy.liealgebras.type_a.typea method)": [[117, "sympy.liealgebras.type_a.TypeA.dimension", false]], "dimension() (sympy.liealgebras.type_b.typeb method)": [[117, "sympy.liealgebras.type_b.TypeB.dimension", false]], "dimension() (sympy.liealgebras.type_c.typec method)": [[117, "sympy.liealgebras.type_c.TypeC.dimension", false]], "dimension() (sympy.liealgebras.type_d.typed method)": [[117, "sympy.liealgebras.type_d.TypeD.dimension", false]], "dimension() (sympy.liealgebras.type_e.typee method)": [[117, "sympy.liealgebras.type_e.TypeE.dimension", false]], "dimension() (sympy.liealgebras.type_f.typef method)": [[117, "sympy.liealgebras.type_f.TypeF.dimension", false]], "dimension() (sympy.liealgebras.type_g.typeg method)": [[117, "sympy.liealgebras.type_g.TypeG.dimension", false]], "dimensionsystem (class in sympy.physics.units.dimensions)": [[193, "sympy.physics.units.dimensions.DimensionSystem", false]], "diop_bf_dn() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.diop_bf_DN", false]], "diop_dn() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.diop_DN", false]], "diop_general_pythagorean() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.diop_general_pythagorean", false]], "diop_general_sum_of_even_powers() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.diop_general_sum_of_even_powers", false]], "diop_general_sum_of_squares() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.diop_general_sum_of_squares", false]], "diop_linear() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.diop_linear", false]], "diop_quadratic() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.diop_quadratic", false]], "diop_solve() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.diop_solve", false]], "diop_ternary_quadratic() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.diop_ternary_quadratic", false]], "diop_ternary_quadratic_normal() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.diop_ternary_quadratic_normal", false]], "diophantine() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.diophantine", false]], "diophantineequationtype (class in sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.DiophantineEquationType", false]], "diophantinesolutionset (class in sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.DiophantineSolutionSet", false]], "diracdelta (class in sympy.functions.special.delta_functions)": [[96, "sympy.functions.special.delta_functions.DiracDelta", false]], "direct_product() (sympy.tensor.tensor.tensorsymmetry class method)": [[247, "sympy.tensor.tensor.TensorSymmetry.direct_product", false]], "direction (sympy.geometry.line.linearentity property)": [[101, "sympy.geometry.line.LinearEntity.direction", false]], "direction_cosine (sympy.geometry.line.linearentity3d property)": [[101, "sympy.geometry.line.LinearEntity3D.direction_cosine", false]], "direction_cosine() (sympy.geometry.point.point3d method)": [[103, "sympy.geometry.point.Point3D.direction_cosine", false]], "direction_ratio (sympy.geometry.line.linearentity3d property)": [[101, "sympy.geometry.line.LinearEntity3D.direction_ratio", false]], "direction_ratio() (sympy.geometry.point.point3d method)": [[103, "sympy.geometry.point.Point3D.direction_ratio", false]], "director_circle() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.director_circle", false]], "directproduct() (in module sympy.combinatorics.group_constructs)": [[73, "sympy.combinatorics.group_constructs.DirectProduct", false]], "directsumhilbertspace (class in sympy.physics.quantum.hilbert)": [[177, "sympy.physics.quantum.hilbert.DirectSumHilbertSpace", false]], "dirichlet_eta (class in sympy.functions.special.zeta_functions)": [[96, "sympy.functions.special.zeta_functions.dirichlet_eta", false]], "discard_before() (sympy.polys.numberfields.modules.submodule method)": [[216, "sympy.polys.numberfields.modules.Submodule.discard_before", false]], "discrete_log() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.discrete_log", false]], "discretemarkovchain (class in sympy.stats)": [[241, "sympy.stats.DiscreteMarkovChain", false]], "discreteuniform() (in module sympy.stats)": [[241, "sympy.stats.DiscreteUniform", false]], "discriminant() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.discriminant", false]], "discriminant() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.discriminant", false]], "discriminant() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.discriminant", false]], "discriminant() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.discriminant", false]], "disjointunion (class in sympy.sets.sets)": [[229, "sympy.sets.sets.DisjointUnion", false]], "dispersion() (in module sympy.polys.dispersion)": [[217, "sympy.polys.dispersion.dispersion", false]], "dispersion() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.dispersion", false]], "dispersionset() (in module sympy.polys.dispersion)": [[217, "sympy.polys.dispersion.dispersionset", false]], "dispersionset() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.dispersionset", false]], "distance() (sympy.geometry.line.line method)": [[101, "sympy.geometry.line.Line.distance", false]], "distance() (sympy.geometry.line.line3d method)": [[101, "sympy.geometry.line.Line3D.distance", false]], "distance() (sympy.geometry.line.ray method)": [[101, "sympy.geometry.line.Ray.distance", false]], "distance() (sympy.geometry.line.segment method)": [[101, "sympy.geometry.line.Segment.distance", false]], "distance() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.distance", false]], "distance() (sympy.geometry.point.point method)": [[103, "sympy.geometry.point.Point.distance", false]], "distance() (sympy.geometry.polygon.polygon method)": [[104, "sympy.geometry.polygon.Polygon.distance", false]], "distribute_and_over_or() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.distribute_and_over_or", false]], "distribute_or_over_and() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.distribute_or_over_and", false]], "distribute_xor_over_and() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.distribute_xor_over_and", false]], "div() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.div", false]], "div() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.div", false]], "div() (sympy.polys.domains.field.field method)": [[212, "sympy.polys.domains.field.Field.div", false]], "div() (sympy.polys.domains.gmpyrationalfield method)": [[212, "sympy.polys.domains.GMPYRationalField.div", false]], "div() (sympy.polys.domains.rationalfield method)": [[212, "sympy.polys.domains.RationalField.div", false]], "div() (sympy.polys.domains.ring.ring method)": [[212, "sympy.polys.domains.ring.Ring.div", false]], "div() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.div", false]], "div() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.div", false]], "div() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.div", false]], "divergence (sympy.physics.optics.gaussopt.beamparameter property)": [[160, "sympy.physics.optics.gaussopt.BeamParameter.divergence", false]], "divergence() (in module sympy.physics.vector.fieldfunctions)": [[201, "sympy.physics.vector.fieldfunctions.divergence", false]], "divergence() (in module sympy.vector)": [[268, "sympy.vector.divergence", false]], "divisible() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.divisible", false]], "divisor_count() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.divisor_count", false]], "divisor_sigma (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.divisor_sigma", false]], "divisor_sigma() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.divisor_sigma", false]], "divisors() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.divisors", false]], "dm() (in module sympy.polys.matrices.domainmatrix)": [[210, "sympy.polys.matrices.domainmatrix.DM", false]], "dmf (class in sympy.polys.polyclasses)": [[212, "sympy.polys.polyclasses.DMF", false]], "dmp (class in sympy.polys.polyclasses)": [[212, "sympy.polys.polyclasses.DMP", false]], "dmp_abs() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_abs", false]], "dmp_add() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_add", false]], "dmp_add_ground() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_add_ground", false]], "dmp_add_mul() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_add_mul", false]], "dmp_add_term() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_add_term", false]], "dmp_apply_pairs() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_apply_pairs", false]], "dmp_cancel() (in module sympy.polys.euclidtools)": [[214, "sympy.polys.euclidtools.dmp_cancel", false]], "dmp_clear_denoms() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dmp_clear_denoms", false]], "dmp_compose() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dmp_compose", false]], "dmp_content() (in module sympy.polys.euclidtools)": [[214, "sympy.polys.euclidtools.dmp_content", false]], "dmp_convert() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_convert", false]], "dmp_copy() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_copy", false]], "dmp_deflate() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_deflate", false]], "dmp_degree() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_degree", false]], "dmp_degree_in() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_degree_in", false]], "dmp_degree_list() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_degree_list", false]], "dmp_diff() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dmp_diff", false]], "dmp_diff_eval_in() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dmp_diff_eval_in", false]], "dmp_diff_in() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dmp_diff_in", false]], "dmp_discriminant() (in module sympy.polys.euclidtools)": [[214, "sympy.polys.euclidtools.dmp_discriminant", false]], "dmp_div() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_div", false]], "dmp_eject() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_eject", false]], "dmp_euclidean_prs() (in module sympy.polys.euclidtools)": [[214, "sympy.polys.euclidtools.dmp_euclidean_prs", false]], "dmp_eval() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dmp_eval", false]], "dmp_eval_in() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dmp_eval_in", false]], "dmp_eval_tail() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dmp_eval_tail", false]], "dmp_exclude() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_exclude", false]], "dmp_expand() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_expand", false]], "dmp_exquo() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_exquo", false]], "dmp_exquo_ground() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_exquo_ground", false]], "dmp_ext_factor() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dmp_ext_factor", false]], "dmp_factor_list() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dmp_factor_list", false]], "dmp_factor_list_include() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dmp_factor_list_include", false]], "dmp_ff_div() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_ff_div", false]], "dmp_ff_prs_gcd() (in module sympy.polys.euclidtools)": [[214, "sympy.polys.euclidtools.dmp_ff_prs_gcd", false]], "dmp_from_dict() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_from_dict", false]], "dmp_from_sympy() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_from_sympy", false]], "dmp_gcd() (in module sympy.polys.euclidtools)": [[214, "sympy.polys.euclidtools.dmp_gcd", false]], "dmp_gcdex() (in module sympy.polys.euclidtools)": [[214, "sympy.polys.euclidtools.dmp_gcdex", false]], "dmp_gf_factor() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dmp_gf_factor", false]], "dmp_gf_sqf_list() (in module sympy.polys.sqfreetools)": [[214, "sympy.polys.sqfreetools.dmp_gf_sqf_list", false]], "dmp_gf_sqf_part() (in module sympy.polys.sqfreetools)": [[214, "sympy.polys.sqfreetools.dmp_gf_sqf_part", false]], "dmp_gff_list() (in module sympy.polys.sqfreetools)": [[214, "sympy.polys.sqfreetools.dmp_gff_list", false]], "dmp_ground() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_ground", false]], "dmp_ground_content() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dmp_ground_content", false]], "dmp_ground_extract() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dmp_ground_extract", false]], "dmp_ground_lc() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_ground_LC", false]], "dmp_ground_monic() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dmp_ground_monic", false]], "dmp_ground_nth() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_ground_nth", false]], "dmp_ground_p() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_ground_p", false]], "dmp_ground_primitive() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dmp_ground_primitive", false]], "dmp_ground_tc() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_ground_TC", false]], "dmp_ground_trunc() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dmp_ground_trunc", false]], "dmp_grounds() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_grounds", false]], "dmp_half_gcdex() (in module sympy.polys.euclidtools)": [[214, "sympy.polys.euclidtools.dmp_half_gcdex", false]], "dmp_include() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_include", false]], "dmp_inflate() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_inflate", false]], "dmp_inject() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_inject", false]], "dmp_inner_gcd() (in module sympy.polys.euclidtools)": [[214, "sympy.polys.euclidtools.dmp_inner_gcd", false]], "dmp_inner_subresultants() (in module sympy.polys.euclidtools)": [[214, "sympy.polys.euclidtools.dmp_inner_subresultants", false]], "dmp_integrate() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dmp_integrate", false]], "dmp_integrate_in() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dmp_integrate_in", false]], "dmp_invert() (in module sympy.polys.euclidtools)": [[214, "sympy.polys.euclidtools.dmp_invert", false]], "dmp_irreducible_p() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dmp_irreducible_p", false]], "dmp_l1_norm() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_l1_norm", false]], "dmp_lc() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_LC", false]], "dmp_lcm() (in module sympy.polys.euclidtools)": [[214, "sympy.polys.euclidtools.dmp_lcm", false]], "dmp_lift() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dmp_lift", false]], "dmp_list_terms() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_list_terms", false]], "dmp_max_norm() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_max_norm", false]], "dmp_mul() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_mul", false]], "dmp_mul_ground() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_mul_ground", false]], "dmp_mul_term() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_mul_term", false]], "dmp_multi_deflate() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_multi_deflate", false]], "dmp_neg() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_neg", false]], "dmp_negative_p() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_negative_p", false]], "dmp_nest() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_nest", false]], "dmp_norm() (in module sympy.polys.sqfreetools)": [[214, "sympy.polys.sqfreetools.dmp_norm", false]], "dmp_normal() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_normal", false]], "dmp_nth() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_nth", false]], "dmp_one() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_one", false]], "dmp_one_p() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_one_p", false]], "dmp_pdiv() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_pdiv", false]], "dmp_permute() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_permute", false]], "dmp_pexquo() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_pexquo", false]], "dmp_positive_p() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_positive_p", false]], "dmp_pow() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_pow", false]], "dmp_pquo() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_pquo", false]], "dmp_prem() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_prem", false]], "dmp_primitive() (in module sympy.polys.euclidtools)": [[214, "sympy.polys.euclidtools.dmp_primitive", false]], "dmp_primitive_prs() (in module sympy.polys.euclidtools)": [[214, "sympy.polys.euclidtools.dmp_primitive_prs", false]], "dmp_prs_resultant() (in module sympy.polys.euclidtools)": [[214, "sympy.polys.euclidtools.dmp_prs_resultant", false]], "dmp_qq_collins_resultant() (in module sympy.polys.euclidtools)": [[214, "sympy.polys.euclidtools.dmp_qq_collins_resultant", false]], "dmp_qq_heu_gcd() (in module sympy.polys.euclidtools)": [[214, "sympy.polys.euclidtools.dmp_qq_heu_gcd", false]], "dmp_qq_i_factor() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dmp_qq_i_factor", false]], "dmp_quo() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_quo", false]], "dmp_quo_ground() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_quo_ground", false]], "dmp_raise() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_raise", false]], "dmp_rem() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_rem", false]], "dmp_resultant() (in module sympy.polys.euclidtools)": [[214, "sympy.polys.euclidtools.dmp_resultant", false]], "dmp_revert() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dmp_revert", false]], "dmp_rr_div() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_rr_div", false]], "dmp_rr_prs_gcd() (in module sympy.polys.euclidtools)": [[214, "sympy.polys.euclidtools.dmp_rr_prs_gcd", false]], "dmp_slice() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_slice", false]], "dmp_sqf_list() (in module sympy.polys.sqfreetools)": [[214, "sympy.polys.sqfreetools.dmp_sqf_list", false]], "dmp_sqf_list_include() (in module sympy.polys.sqfreetools)": [[214, "sympy.polys.sqfreetools.dmp_sqf_list_include", false]], "dmp_sqf_norm() (in module sympy.polys.sqfreetools)": [[214, "sympy.polys.sqfreetools.dmp_sqf_norm", false]], "dmp_sqf_p() (in module sympy.polys.sqfreetools)": [[214, "sympy.polys.sqfreetools.dmp_sqf_p", false]], "dmp_sqf_part() (in module sympy.polys.sqfreetools)": [[214, "sympy.polys.sqfreetools.dmp_sqf_part", false]], "dmp_sqr() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_sqr", false]], "dmp_strip() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_strip", false]], "dmp_sub() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_sub", false]], "dmp_sub_ground() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_sub_ground", false]], "dmp_sub_mul() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_sub_mul", false]], "dmp_sub_term() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dmp_sub_term", false]], "dmp_subresultants() (in module sympy.polys.euclidtools)": [[214, "sympy.polys.euclidtools.dmp_subresultants", false]], "dmp_swap() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_swap", false]], "dmp_tc() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_TC", false]], "dmp_terms_gcd() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_terms_gcd", false]], "dmp_to_dict() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_to_dict", false]], "dmp_to_tuple() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_to_tuple", false]], "dmp_trial_division() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dmp_trial_division", false]], "dmp_true_lt() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_true_LT", false]], "dmp_trunc() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dmp_trunc", false]], "dmp_validate() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_validate", false]], "dmp_zero() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_zero", false]], "dmp_zero_p() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_zero_p", false]], "dmp_zeros() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dmp_zeros", false]], "dmp_zz_collins_resultant() (in module sympy.polys.euclidtools)": [[214, "sympy.polys.euclidtools.dmp_zz_collins_resultant", false]], "dmp_zz_diophantine() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dmp_zz_diophantine", false]], "dmp_zz_factor() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dmp_zz_factor", false]], "dmp_zz_heu_gcd() (in module sympy.polys.euclidtools)": [[214, "sympy.polys.euclidtools.dmp_zz_heu_gcd", false]], "dmp_zz_i_factor() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dmp_zz_i_factor", false]], "dmp_zz_mignotte_bound() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dmp_zz_mignotte_bound", false]], "dmp_zz_modular_resultant() (in module sympy.polys.euclidtools)": [[214, "sympy.polys.euclidtools.dmp_zz_modular_resultant", false]], "dmp_zz_wang() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dmp_zz_wang", false]], "dmp_zz_wang_hensel_lifting() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dmp_zz_wang_hensel_lifting", false]], "dmp_zz_wang_lead_coeffs() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dmp_zz_wang_lead_coeffs", false]], "dmp_zz_wang_non_divisors() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dmp_zz_wang_non_divisors", false]], "dmp_zz_wang_test_points() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dmp_zz_wang_test_points", false]], "do (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.Do", false]], "do_subs() (sympy.series.gruntz.subsset method)": [[228, "sympy.series.gruntz.SubsSet.do_subs", false]], "doctest() (in module sympy.testing.runtests)": [[252, "sympy.testing.runtests.doctest", false]], "doctest_depends_on() (in module sympy.utilities.decorator)": [[255, "sympy.utilities.decorator.doctest_depends_on", false]], "doit() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.doit", false]], "doit() (sympy.functions.elementary.piecewise.piecewise method)": [[94, "sympy.functions.elementary.piecewise.Piecewise.doit", false]], "doit() (sympy.integrals.integrals.integral method)": [[115, "sympy.integrals.integrals.Integral.doit", false]], "doit() (sympy.integrals.transforms.integraltransform method)": [[115, "sympy.integrals.transforms.IntegralTransform.doit", false]], "doit() (sympy.integrals.transforms.inverselaplacetransform method)": [[115, "sympy.integrals.transforms.InverseLaplaceTransform.doit", false]], "doit() (sympy.integrals.transforms.laplacetransform method)": [[115, "sympy.integrals.transforms.LaplaceTransform.doit", false]], "doit() (sympy.physics.biomechanics.curve.fiberforcelengthactivedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthActiveDeGroote2016.doit", false]], "doit() (sympy.physics.biomechanics.curve.fiberforcelengthpassivedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveDeGroote2016.doit", false]], "doit() (sympy.physics.biomechanics.curve.fiberforcelengthpassiveinversedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveInverseDeGroote2016.doit", false]], "doit() (sympy.physics.biomechanics.curve.fiberforcevelocitydegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceVelocityDeGroote2016.doit", false]], "doit() (sympy.physics.biomechanics.curve.fiberforcevelocityinversedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceVelocityInverseDeGroote2016.doit", false]], "doit() (sympy.physics.biomechanics.curve.tendonforcelengthdegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.TendonForceLengthDeGroote2016.doit", false]], "doit() (sympy.physics.biomechanics.curve.tendonforcelengthinversedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.TendonForceLengthInverseDeGroote2016.doit", false]], "doit() (sympy.physics.control.lti.feedback method)": [[144, "sympy.physics.control.lti.Feedback.doit", false]], "doit() (sympy.physics.control.lti.mimofeedback method)": [[144, "sympy.physics.control.lti.MIMOFeedback.doit", false]], "doit() (sympy.physics.control.lti.mimoparallel method)": [[144, "sympy.physics.control.lti.MIMOParallel.doit", false]], "doit() (sympy.physics.control.lti.mimoseries method)": [[144, "sympy.physics.control.lti.MIMOSeries.doit", false]], "doit() (sympy.physics.control.lti.parallel method)": [[144, "sympy.physics.control.lti.Parallel.doit", false]], "doit() (sympy.physics.control.lti.series method)": [[144, "sympy.physics.control.lti.Series.doit", false]], "doit() (sympy.physics.quantum.anticommutator.anticommutator method)": [[168, "sympy.physics.quantum.anticommutator.AntiCommutator.doit", false]], "doit() (sympy.physics.quantum.commutator.commutator method)": [[172, "sympy.physics.quantum.commutator.Commutator.doit", false]], "doit() (sympy.physics.secondquant.commutator method)": [[191, "sympy.physics.secondquant.Commutator.doit", false]], "doit() (sympy.physics.secondquant.no method)": [[191, "sympy.physics.secondquant.NO.doit", false]], "doit() (sympy.physics.vector.dyadic.dyadic method)": [[200, "sympy.physics.vector.dyadic.Dyadic.doit", false]], "doit() (sympy.physics.vector.vector.vector method)": [[200, "sympy.physics.vector.vector.Vector.doit", false]], "doit() (sympy.series.limits.limit method)": [[228, "sympy.series.limits.Limit.doit", false]], "doit_numerically() (sympy.core.function.derivative method)": [[88, "sympy.core.function.Derivative.doit_numerically", false]], "domain (class in sympy.polys.domains.domain)": [[212, "sympy.polys.domains.domain.Domain", false]], "domain (sympy.categories.compositemorphism property)": [[68, "sympy.categories.CompositeMorphism.domain", false]], "domain (sympy.categories.morphism property)": [[68, "sympy.categories.Morphism.domain", false]], "domain (sympy.polys.polytools.poly property)": [[217, "sympy.polys.polytools.Poly.domain", false]], "domain_check() (in module sympy.solvers.solveset)": [[240, "sympy.solvers.solveset.domain_check", false]], "domainelement (class in sympy.polys.domains.domainelement)": [[212, "sympy.polys.domains.domainelement.DomainElement", false]], "domainerror (class in sympy.polys.polyerrors)": [[214, "sympy.polys.polyerrors.DomainError", false]], "domainmatrix (class in sympy.polys.matrices.domainmatrix)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix", false]], "dominant() (in module sympy.series.limitseq)": [[226, "sympy.series.limitseq.dominant", false]], "doprint() (sympy.printing.aesaracode.aesaraprinter method)": [[221, "sympy.printing.aesaracode.AesaraPrinter.doprint", false]], "doprint() (sympy.printing.codeprinter.codeprinter method)": [[221, "sympy.printing.codeprinter.CodePrinter.doprint", false]], "doprint() (sympy.printing.mathml.mathmlprinterbase method)": [[221, "sympy.printing.mathml.MathMLPrinterBase.doprint", false]], "doprint() (sympy.printing.printer.printer method)": [[221, "sympy.printing.printer.Printer.doprint", false]], "dot() (in module sympy.physics.vector.functions)": [[202, "sympy.physics.vector.functions.dot", false]], "dot() (sympy.geometry.point.point method)": [[103, "sympy.geometry.point.Point.dot", false]], "dot() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.dot", false]], "dot() (sympy.physics.vector.dyadic.dyadic method)": [[200, "sympy.physics.vector.dyadic.Dyadic.dot", false]], "dot() (sympy.physics.vector.vector.vector method)": [[200, "sympy.physics.vector.vector.Vector.dot", false]], "dot() (sympy.vector.deloperator.del method)": [[265, "sympy.vector.deloperator.Del.dot", false]], "dot() (sympy.vector.dyadic.dyadic method)": [[265, "sympy.vector.dyadic.Dyadic.dot", false]], "dot() (sympy.vector.vector.vector method)": [[265, "sympy.vector.vector.Vector.dot", false]], "dot_rot_grad_ynm() (in module sympy.physics.wigner)": [[206, "sympy.physics.wigner.dot_rot_grad_Ynm", false]], "dotprint() (in module sympy.printing.dot)": [[221, "sympy.printing.dot.dotprint", false]], "double_coset_can_rep() (in module sympy.combinatorics.tensor_can)": [[84, "sympy.combinatorics.tensor_can.double_coset_can_rep", false]], "draw() (sympy.categories.diagram_drawing.xypicdiagramdrawer method)": [[68, "sympy.categories.diagram_drawing.XypicDiagramDrawer.draw", false]], "draw() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.draw", false]], "draw() (sympy.physics.continuum_mechanics.cable.cable method)": [[138, "sympy.physics.continuum_mechanics.cable.Cable.draw", false]], "draw() (sympy.physics.continuum_mechanics.truss.truss method)": [[140, "sympy.physics.continuum_mechanics.truss.Truss.draw", false]], "drop() (sympy.polys.domains.compositedomain.compositedomain method)": [[212, "sympy.polys.domains.compositedomain.CompositeDomain.drop", false]], "drop() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.drop", false]], "drop() (sympy.polys.rings.polyring method)": [[212, "sympy.polys.rings.PolyRing.drop", false]], "drop_to_ground() (sympy.polys.rings.polyring method)": [[212, "sympy.polys.rings.PolyRing.drop_to_ground", false]], "dsign (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.dsign", false]], "dsolve() (in module sympy.solvers.ode)": [[237, "sympy.solvers.ode.dsolve", false]], "dsolve_system() (in module sympy.solvers.ode.systems)": [[237, "sympy.solvers.ode.systems.dsolve_system", false]], "dt() (sympy.physics.vector.dyadic.dyadic method)": [[200, "sympy.physics.vector.dyadic.Dyadic.dt", false]], "dt() (sympy.physics.vector.vector.vector method)": [[200, "sympy.physics.vector.vector.Vector.dt", false]], "dtype (sympy.polys.agca.extensions.monogenicfiniteextension attribute)": [[208, "sympy.polys.agca.extensions.MonogenicFiniteExtension.dtype", false]], "dtype (sympy.polys.agca.modules.freemodule attribute)": [[208, "sympy.polys.agca.modules.FreeModule.dtype", false]], "dtype (sympy.polys.agca.modules.quotientmodule attribute)": [[208, "sympy.polys.agca.modules.QuotientModule.dtype", false]], "dtype (sympy.polys.domains.algebraicfield attribute)": [[212, "sympy.polys.domains.AlgebraicField.dtype", false]], "dtype (sympy.polys.domains.domain.domain attribute)": [[212, "sympy.polys.domains.domain.Domain.dtype", false]], "dtype (sympy.polys.domains.expressiondomain attribute)": [[212, "sympy.polys.domains.ExpressionDomain.dtype", false]], "dtype (sympy.polys.domains.gaussiandomains.gaussianintegerring attribute)": [[212, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.dtype", false]], "dtype (sympy.polys.domains.gaussiandomains.gaussianrationalfield attribute)": [[212, "sympy.polys.domains.gaussiandomains.GaussianRationalField.dtype", false]], "dual (sympy.physics.quantum.state.statebase property)": [[189, "sympy.physics.quantum.state.StateBase.dual", false]], "dual() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.dual", false]], "dual_class() (sympy.physics.quantum.state.statebase class method)": [[189, "sympy.physics.quantum.state.StateBase.dual_class", false]], "duffingspring (class in sympy.physics.mechanics.actuator)": [[148, "sympy.physics.mechanics.actuator.DuffingSpring", false]], "dummy": [[15, "term-Dummy", true]], "dummy (class in sympy.core.symbol)": [[88, "sympy.core.symbol.Dummy", false]], "dummy_eq() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.dummy_eq", false]], "dummywrapper (class in sympy.utilities.autowrap)": [[253, "sympy.utilities.autowrap.DummyWrapper", false]], "dump_c() (sympy.utilities.autowrap.ufuncifycodewrapper method)": [[253, "sympy.utilities.autowrap.UfuncifyCodeWrapper.dump_c", false]], "dump_c() (sympy.utilities.codegen.ccodegen method)": [[254, "sympy.utilities.codegen.CCodeGen.dump_c", false]], "dump_code() (sympy.utilities.codegen.codegen method)": [[254, "sympy.utilities.codegen.CodeGen.dump_code", false]], "dump_f95() (sympy.utilities.codegen.fcodegen method)": [[254, "sympy.utilities.codegen.FCodeGen.dump_f95", false]], "dump_h() (sympy.utilities.codegen.ccodegen method)": [[254, "sympy.utilities.codegen.CCodeGen.dump_h", false]], "dump_h() (sympy.utilities.codegen.fcodegen method)": [[254, "sympy.utilities.codegen.FCodeGen.dump_h", false]], "dump_jl() (sympy.utilities.codegen.juliacodegen method)": [[254, "sympy.utilities.codegen.JuliaCodeGen.dump_jl", false]], "dump_m() (sympy.utilities.codegen.octavecodegen method)": [[254, "sympy.utilities.codegen.OctaveCodeGen.dump_m", false]], "dump_pyx() (sympy.utilities.autowrap.cythoncodewrapper method)": [[253, "sympy.utilities.autowrap.CythonCodeWrapper.dump_pyx", false]], "dump_rs() (sympy.utilities.codegen.rustcodegen method)": [[254, "sympy.utilities.codegen.RustCodeGen.dump_rs", false]], "dup_content() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dup_content", false]], "dup_cyclotomic_p() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dup_cyclotomic_p", false]], "dup_decompose() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dup_decompose", false]], "dup_ext_factor() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dup_ext_factor", false]], "dup_extract() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dup_extract", false]], "dup_factor_list() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dup_factor_list", false]], "dup_factor_list_include() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dup_factor_list_include", false]], "dup_gf_factor() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dup_gf_factor", false]], "dup_gf_sqf_list() (in module sympy.polys.sqfreetools)": [[214, "sympy.polys.sqfreetools.dup_gf_sqf_list", false]], "dup_gf_sqf_part() (in module sympy.polys.sqfreetools)": [[214, "sympy.polys.sqfreetools.dup_gf_sqf_part", false]], "dup_gff_list() (in module sympy.polys.sqfreetools)": [[214, "sympy.polys.sqfreetools.dup_gff_list", false]], "dup_irreducible_p() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dup_irreducible_p", false]], "dup_lshift() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dup_lshift", false]], "dup_mirror() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dup_mirror", false]], "dup_monic() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dup_monic", false]], "dup_primitive() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dup_primitive", false]], "dup_qq_i_factor() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dup_qq_i_factor", false]], "dup_random() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dup_random", false]], "dup_real_imag() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dup_real_imag", false]], "dup_reverse() (in module sympy.polys.densebasic)": [[214, "sympy.polys.densebasic.dup_reverse", false]], "dup_rshift() (in module sympy.polys.densearith)": [[214, "sympy.polys.densearith.dup_rshift", false]], "dup_scale() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dup_scale", false]], "dup_shift() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dup_shift", false]], "dup_sign_variations() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dup_sign_variations", false]], "dup_sqf_list() (in module sympy.polys.sqfreetools)": [[214, "sympy.polys.sqfreetools.dup_sqf_list", false]], "dup_sqf_list_include() (in module sympy.polys.sqfreetools)": [[214, "sympy.polys.sqfreetools.dup_sqf_list_include", false]], "dup_sqf_norm() (in module sympy.polys.sqfreetools)": [[214, "sympy.polys.sqfreetools.dup_sqf_norm", false]], "dup_sqf_p() (in module sympy.polys.sqfreetools)": [[214, "sympy.polys.sqfreetools.dup_sqf_p", false]], "dup_sqf_part() (in module sympy.polys.sqfreetools)": [[214, "sympy.polys.sqfreetools.dup_sqf_part", false]], "dup_transform() (in module sympy.polys.densetools)": [[214, "sympy.polys.densetools.dup_transform", false]], "dup_trial_division() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dup_trial_division", false]], "dup_zz_cyclotomic_factor() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dup_zz_cyclotomic_factor", false]], "dup_zz_cyclotomic_poly() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dup_zz_cyclotomic_poly", false]], "dup_zz_diophantine() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dup_zz_diophantine", false]], "dup_zz_factor() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dup_zz_factor", false]], "dup_zz_factor_sqf() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dup_zz_factor_sqf", false]], "dup_zz_hensel_lift() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dup_zz_hensel_lift", false]], "dup_zz_hensel_step() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dup_zz_hensel_step", false]], "dup_zz_i_factor() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dup_zz_i_factor", false]], "dup_zz_irreducible_p() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dup_zz_irreducible_p", false]], "dup_zz_mignotte_bound() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dup_zz_mignotte_bound", false]], "dup_zz_zassenhaus() (in module sympy.polys.factortools)": [[214, "sympy.polys.factortools.dup_zz_zassenhaus", false]], "dyadic (class in sympy.physics.vector.dyadic)": [[200, "sympy.physics.vector.dyadic.Dyadic", false]], "dyadic (class in sympy.vector.dyadic)": [[265, "sympy.vector.dyadic.Dyadic", false]], "dyn_implicit_mat (sympy.physics.mechanics.system.symbolicsystem property)": [[158, "sympy.physics.mechanics.system.SymbolicSystem.dyn_implicit_mat", false]], "dyn_implicit_rhs (sympy.physics.mechanics.system.symbolicsystem property)": [[158, "sympy.physics.mechanics.system.SymbolicSystem.dyn_implicit_rhs", false]], "dynamic_symbols() (sympy.physics.mechanics.system.symbolicsystem method)": [[158, "sympy.physics.mechanics.system.SymbolicSystem.dynamic_symbols", false]], "dynamicsymbols() (in module sympy.physics.vector)": [[202, "sympy.physics.vector.dynamicsymbols", false]], "dynkin_diagram() (sympy.liealgebras.root_system.rootsystem method)": [[117, "sympy.liealgebras.root_system.RootSystem.dynkin_diagram", false]], "dynkindiagram() (in module sympy.liealgebras.dynkin_diagram)": [[117, "sympy.liealgebras.dynkin_diagram.DynkinDiagram", false]], "e (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.e", false]], "e (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.e", false]], "e() (in module sympy.stats)": [[241, "sympy.stats.E", false]], "e1() (in module sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.E1", false]], "e_n() (in module sympy.physics.qho_1d)": [[167, "sympy.physics.qho_1d.E_n", false]], "e_nl() (in module sympy.physics.hydrogen)": [[146, "sympy.physics.hydrogen.E_nl", false]], "e_nl() (in module sympy.physics.sho)": [[192, "sympy.physics.sho.E_nl", false]], "e_nl_dirac() (in module sympy.physics.hydrogen)": [[146, "sympy.physics.hydrogen.E_nl_dirac", false]], "ec() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.EC", false]], "eccentricity (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.eccentricity", false]], "echelon_form() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.echelon_form", false]], "ecm() (in module sympy.ntheory.ecm)": [[128, "sympy.ntheory.ecm.ecm", false]], "edges (sympy.combinatorics.polyhedron.polyhedron property)": [[81, "sympy.combinatorics.polyhedron.Polyhedron.edges", false]], "edges() (sympy.combinatorics.prufer.prufer static method)": [[82, "sympy.combinatorics.prufer.Prufer.edges", false]], "egyptian_fraction() (in module sympy.ntheory.egyptian_fraction)": [[128, "sympy.ntheory.egyptian_fraction.egyptian_fraction", false]], "ei (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.Ei", false]], "eigenvals() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.eigenvals", false]], "eigenvects() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.eigenvects", false]], "eijk() (in module sympy.functions.special.tensor_functions)": [[96, "sympy.functions.special.tensor_functions.Eijk", false]], "eject() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.eject", false]], "eject() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.eject", false]], "elastic_modulus (sympy.physics.continuum_mechanics.beam.beam property)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.elastic_modulus", false]], "elem_poles() (sympy.physics.control.lti.transferfunctionmatrix method)": [[144, "sympy.physics.control.lti.TransferFunctionMatrix.elem_poles", false]], "elem_zeros() (sympy.physics.control.lti.transferfunctionmatrix method)": [[144, "sympy.physics.control.lti.TransferFunctionMatrix.elem_zeros", false]], "element (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Element", false]], "element_from_alg_num() (sympy.polys.numberfields.modules.powerbasis method)": [[216, "sympy.polys.numberfields.modules.PowerBasis.element_from_alg_num", false]], "element_from_anp() (sympy.polys.numberfields.modules.powerbasis method)": [[216, "sympy.polys.numberfields.modules.PowerBasis.element_from_ANP", false]], "element_from_poly() (sympy.polys.numberfields.modules.powerbasis method)": [[216, "sympy.polys.numberfields.modules.PowerBasis.element_from_poly", false]], "element_from_rational() (sympy.polys.numberfields.modules.module method)": [[216, "sympy.polys.numberfields.modules.Module.element_from_rational", false]], "element_order() (sympy.liealgebras.weyl_group.weylgroup method)": [[117, "sympy.liealgebras.weyl_group.WeylGroup.element_order", false]], "elementary_col_op() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.elementary_col_op", false]], "elementary_row_op() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.elementary_row_op", false]], "elements (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.elements", false]], "elgamal_private_key() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.elgamal_private_key", false]], "elgamal_public_key() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.elgamal_public_key", false]], "eliminate_implications() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.eliminate_implications", false]], "ellipse (class in sympy.geometry.ellipse)": [[98, "sympy.geometry.ellipse.Ellipse", false]], "elliptic_e (class in sympy.functions.special.elliptic_integrals)": [[96, "sympy.functions.special.elliptic_integrals.elliptic_e", false]], "elliptic_f (class in sympy.functions.special.elliptic_integrals)": [[96, "sympy.functions.special.elliptic_integrals.elliptic_f", false]], "elliptic_k (class in sympy.functions.special.elliptic_integrals)": [[96, "sympy.functions.special.elliptic_integrals.elliptic_k", false]], "elliptic_pi (class in sympy.functions.special.elliptic_integrals)": [[96, "sympy.functions.special.elliptic_integrals.elliptic_pi", false]], "em() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.EM", false]], "emptyprinter() (sympy.printing.repr.reprprinter method)": [[221, "sympy.printing.repr.ReprPrinter.emptyPrinter", false]], "emptysequence (class in sympy.series.sequences)": [[227, "sympy.series.sequences.EmptySequence", false]], "emptyset (class in sympy.sets.sets)": [[229, "sympy.sets.sets.EmptySet", false]], "enable_automatic_int_sympification() (in module sympy.interactive.session)": [[116, "sympy.interactive.session.enable_automatic_int_sympification", false]], "enable_automatic_symbols() (in module sympy.interactive.session)": [[116, "sympy.interactive.session.enable_automatic_symbols", false]], "encipher_affine() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_affine", false]], "encipher_atbash() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_atbash", false]], "encipher_bifid() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_bifid", false]], "encipher_bifid5() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_bifid5", false]], "encipher_bifid6() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_bifid6", false]], "encipher_elgamal() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_elgamal", false]], "encipher_gm() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_gm", false]], "encipher_hill() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_hill", false]], "encipher_kid_rsa() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_kid_rsa", false]], "encipher_railfence() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_railfence", false]], "encipher_rot13() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_rot13", false]], "encipher_rsa() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_rsa", false]], "encipher_shift() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_shift", false]], "encipher_substitution() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_substitution", false]], "encipher_vigenere() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encipher_vigenere", false]], "encloses() (sympy.geometry.entity.geometryentity method)": [[99, "sympy.geometry.entity.GeometryEntity.encloses", false]], "encloses_point() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.encloses_point", false]], "encloses_point() (sympy.geometry.polygon.polygon method)": [[104, "sympy.geometry.polygon.Polygon.encloses_point", false]], "encloses_point() (sympy.geometry.polygon.regularpolygon method)": [[104, "sympy.geometry.polygon.RegularPolygon.encloses_point", false]], "encode_morse() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.encode_morse", false]], "end (sympy.sets.sets.interval property)": [[229, "sympy.sets.sets.Interval.end", false]], "endomorphism_ring() (sympy.polys.numberfields.modules.module method)": [[216, "sympy.polys.numberfields.modules.Module.endomorphism_ring", false]], "endomorphismring (class in sympy.polys.numberfields.modules)": [[216, "sympy.polys.numberfields.modules.EndomorphismRing", false]], "entropy() (in module sympy.stats)": [[241, "sympy.stats.entropy", false]], "enum_all() (sympy.utilities.enumerative.multisetpartitiontraverser method)": [[256, "sympy.utilities.enumerative.MultisetPartitionTraverser.enum_all", false]], "enum_large() (sympy.utilities.enumerative.multisetpartitiontraverser method)": [[256, "sympy.utilities.enumerative.MultisetPartitionTraverser.enum_large", false]], "enum_range() (sympy.utilities.enumerative.multisetpartitiontraverser method)": [[256, "sympy.utilities.enumerative.MultisetPartitionTraverser.enum_range", false]], "enum_small() (sympy.utilities.enumerative.multisetpartitiontraverser method)": [[256, "sympy.utilities.enumerative.MultisetPartitionTraverser.enum_small", false]], "enumerate_states() (in module sympy.physics.quantum.represent)": [[186, "sympy.physics.quantum.represent.enumerate_states", false]], "eom_method (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.eom_method", false]], "epath (class in sympy.simplify.epathtools)": [[233, "sympy.simplify.epathtools.EPath", false]], "epath() (in module sympy.simplify.epathtools)": [[233, "sympy.simplify.epathtools.epath", false]], "eps (sympy.codegen.ast.floattype property)": [[69, "sympy.codegen.ast.FloatType.eps", false]], "eq (in module sympy.core.relational)": [[88, "sympy.core.relational.Eq", false]], "eq() (sympy.polys.agca.modules.quotientmoduleelement method)": [[208, "sympy.polys.agca.modules.QuotientModuleElement.eq", false]], "eqs_to_matrix() (in module sympy.polys.solvers)": [[219, "sympy.polys.solvers.eqs_to_matrix", false]], "equal_valued() (in module sympy.core.numbers)": [[88, "sympy.core.numbers.equal_valued", false]], "equality (class in sympy.core.relational)": [[88, "sympy.core.relational.Equality", false]], "equals() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.equals", false]], "equals() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.equals", false]], "equals() (sympy.core.relational.relational method)": [[88, "sympy.core.relational.Relational.equals", false]], "equals() (sympy.geometry.line.line method)": [[101, "sympy.geometry.line.Line.equals", false]], "equals() (sympy.geometry.line.ray method)": [[101, "sympy.geometry.line.Ray.equals", false]], "equals() (sympy.geometry.line.segment method)": [[101, "sympy.geometry.line.Segment.equals", false]], "equals() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.equals", false]], "equals() (sympy.geometry.point.point method)": [[103, "sympy.geometry.point.Point.equals", false]], "equals() (sympy.logic.boolalg.boolean method)": [[118, "sympy.logic.boolalg.Boolean.equals", false]], "equals() (sympy.matrices.expressions.matrixexpr method)": [[120, "sympy.matrices.expressions.MatrixExpr.equals", false]], "equation": [[15, "term-Equation", true]], "equation() (sympy.geometry.ellipse.circle method)": [[98, "sympy.geometry.ellipse.Circle.equation", false]], "equation() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.equation", false]], "equation() (sympy.geometry.line.line2d method)": [[101, "sympy.geometry.line.Line2D.equation", false]], "equation() (sympy.geometry.line.line3d method)": [[101, "sympy.geometry.line.Line3D.equation", false]], "equation() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.equation", false]], "equilibrium_length (sympy.physics.mechanics.actuator.linearspring property)": [[148, "sympy.physics.mechanics.actuator.LinearSpring.equilibrium_length", false]], "equiv() (sympy.polys.numberfields.modules.moduleelement method)": [[216, "sympy.polys.numberfields.modules.ModuleElement.equiv", false]], "equivalent (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.Equivalent", false]], "equivalent() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.equivalent", false]], "erf (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.erf", false]], "erf2 (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.erf2", false]], "erf2inv (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.erf2inv", false]], "erfc (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.erfc", false]], "erfcinv (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.erfcinv", false]], "erfi (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.erfi", false]], "erfinv (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.erfinv", false]], "erlang() (in module sympy.stats)": [[241, "sympy.stats.Erlang", false]], "et() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.ET", false]], "eta (sympy.functions.special.hyper.hyper property)": [[96, "sympy.functions.special.hyper.hyper.eta", false]], "euler (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.euler", false]], "euler_equations() (in module sympy.calculus.euler)": [[67, "sympy.calculus.euler.euler_equations", false]], "euler_maclaurin() (sympy.concrete.summations.sum method)": [[87, "sympy.concrete.summations.Sum.euler_maclaurin", false]], "euler_poly() (in module sympy.polys.appellseqs)": [[217, "sympy.polys.appellseqs.euler_poly", false]], "eulergamma (class in sympy.core.numbers)": [[88, "sympy.core.numbers.EulerGamma", false]], "eulerline (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.eulerline", false]], "eval() (sympy.assumptions.assume.predicate method)": [[63, "sympy.assumptions.assume.Predicate.eval", false]], "eval() (sympy.functions.elementary.piecewise.piecewise class method)": [[94, "sympy.functions.elementary.piecewise.Piecewise.eval", false]], "eval() (sympy.functions.special.delta_functions.diracdelta class method)": [[96, "sympy.functions.special.delta_functions.DiracDelta.eval", false]], "eval() (sympy.functions.special.delta_functions.heaviside class method)": [[96, "sympy.functions.special.delta_functions.Heaviside.eval", false]], "eval() (sympy.functions.special.singularity_functions.singularityfunction class method)": [[96, "sympy.functions.special.singularity_functions.SingularityFunction.eval", false]], "eval() (sympy.functions.special.tensor_functions.kroneckerdelta class method)": [[96, "sympy.functions.special.tensor_functions.KroneckerDelta.eval", false]], "eval() (sympy.physics.biomechanics.curve.fiberforcelengthactivedegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthActiveDeGroote2016.eval", false]], "eval() (sympy.physics.biomechanics.curve.fiberforcelengthpassivedegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveDeGroote2016.eval", false]], "eval() (sympy.physics.biomechanics.curve.fiberforcelengthpassiveinversedegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveInverseDeGroote2016.eval", false]], "eval() (sympy.physics.biomechanics.curve.fiberforcevelocitydegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.FiberForceVelocityDeGroote2016.eval", false]], "eval() (sympy.physics.biomechanics.curve.fiberforcevelocityinversedegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.FiberForceVelocityInverseDeGroote2016.eval", false]], "eval() (sympy.physics.biomechanics.curve.tendonforcelengthdegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.TendonForceLengthDeGroote2016.eval", false]], "eval() (sympy.physics.biomechanics.curve.tendonforcelengthinversedegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.TendonForceLengthInverseDeGroote2016.eval", false]], "eval() (sympy.physics.quantum.hilbert.directsumhilbertspace class method)": [[177, "sympy.physics.quantum.hilbert.DirectSumHilbertSpace.eval", false]], "eval() (sympy.physics.quantum.hilbert.tensorproducthilbertspace class method)": [[177, "sympy.physics.quantum.hilbert.TensorProductHilbertSpace.eval", false]], "eval() (sympy.physics.secondquant.commutator class method)": [[191, "sympy.physics.secondquant.Commutator.eval", false]], "eval() (sympy.physics.secondquant.dagger class method)": [[191, "sympy.physics.secondquant.Dagger.eval", false]], "eval() (sympy.physics.secondquant.kroneckerdelta class method)": [[191, "sympy.physics.secondquant.KroneckerDelta.eval", false]], "eval() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.eval", false]], "eval() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.eval", false]], "eval_approx() (sympy.polys.rootoftools.complexrootof method)": [[217, "sympy.polys.rootoftools.ComplexRootOf.eval_approx", false]], "eval_color_func() (sympy.plotting.series.baseseries method)": [[207, "sympy.plotting.series.BaseSeries.eval_color_func", false]], "eval_controls() (sympy.physics.quantum.gate.cgate method)": [[175, "sympy.physics.quantum.gate.CGate.eval_controls", false]], "eval_expr() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.eval_expr", false]], "eval_frequency() (sympy.physics.control.lti.transferfunction method)": [[144, "sympy.physics.control.lti.TransferFunction.eval_frequency", false]], "eval_frequency() (sympy.physics.control.lti.transferfunctionmatrix method)": [[144, "sympy.physics.control.lti.TransferFunctionMatrix.eval_frequency", false]], "eval_levicivita() (in module sympy.functions.special.tensor_functions)": [[96, "sympy.functions.special.tensor_functions.eval_levicivita", false]], "eval_poly() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.eval_poly", false]], "eval_poly_mul() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.eval_poly_mul", false]], "eval_rational() (sympy.polys.rootoftools.complexrootof method)": [[217, "sympy.polys.rootoftools.ComplexRootOf.eval_rational", false]], "eval_zeta_function() (sympy.concrete.summations.sum method)": [[87, "sympy.concrete.summations.Sum.eval_zeta_function", false]], "evalf": [[15, "term-evalf", true]], "evalf() (sympy.core.evalf.evalfmixin method)": [[88, "sympy.core.evalf.EvalfMixin.evalf", false]], "evalf() (sympy.holonomic.holonomic.holonomicfunction method)": [[110, "sympy.holonomic.holonomic.HolonomicFunction.evalf", false]], "evalf() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.evalf", false]], "evalf() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.evalf", false]], "evalfmixin (class in sympy.core.evalf)": [[88, "sympy.core.evalf.EvalfMixin", false]], "evaluate": [[15, "term-Evaluate", true]], "evaluate_deltas() (in module sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.evaluate_deltas", false]], "evaluate_pauli_product() (in module sympy.physics.paulialgebra)": [[166, "sympy.physics.paulialgebra.evaluate_pauli_product", false]], "evaluationfailed (class in sympy.polys.polyerrors)": [[214, "sympy.polys.polyerrors.EvaluationFailed", false]], "even": [[88, "term-even", true]], "evenpredicate (class in sympy.assumptions.predicates.ntheory)": [[65, "sympy.assumptions.predicates.ntheory.EvenPredicate", false]], "evolute() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.evolute", false]], "exactquotientfailed (class in sympy.polys.polyerrors)": [[214, "sympy.polys.polyerrors.ExactQuotientFailed", false]], "excenters (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.excenters", false]], "excitation (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.excitation", false]], "excitation (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.excitation", false]], "exclude() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.exclude", false]], "exclude() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.exclude", false]], "exclusive (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.Exclusive", false]], "exgaussian() (in module sympy.stats)": [[241, "sympy.stats.ExGaussian", false]], "exp (class in sympy.functions.elementary.exponential)": [[94, "sympy.functions.elementary.exponential.exp", false]], "exp() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.exp", false]], "exp() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.exp", false]], "exp1 (class in sympy.core.numbers)": [[88, "sympy.core.numbers.Exp1", false]], "exp2 (class in sympy.codegen.cfunctions)": [[69, "sympy.codegen.cfunctions.exp2", false]], "exp_polar (class in sympy.functions.elementary.exponential)": [[94, "sympy.functions.elementary.exponential.exp_polar", false]], "exp_re() (in module sympy.series.formal)": [[223, "sympy.series.formal.exp_re", false]], "expand() (in module sympy.core.function)": [[88, "sympy.core.function.expand", false]], "expand() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.expand", false]], "expand() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.expand", false]], "expand() (sympy.physics.control.lti.transferfunction method)": [[144, "sympy.physics.control.lti.TransferFunction.expand", false]], "expand() (sympy.physics.control.lti.transferfunctionmatrix method)": [[144, "sympy.physics.control.lti.TransferFunctionMatrix.expand", false]], "expand_complex() (in module sympy.core.function)": [[88, "sympy.core.function.expand_complex", false]], "expand_func() (in module sympy.core.function)": [[88, "sympy.core.function.expand_func", false]], "expand_log() (in module sympy.core.function)": [[88, "sympy.core.function.expand_log", false]], "expand_mul() (in module sympy.core.function)": [[88, "sympy.core.function.expand_mul", false]], "expand_multinomial() (in module sympy.core.function)": [[88, "sympy.core.function.expand_multinomial", false]], "expand_power_base() (in module sympy.core.function)": [[88, "sympy.core.function.expand_power_base", false]], "expand_power_exp() (in module sympy.core.function)": [[88, "sympy.core.function.expand_power_exp", false]], "expand_trig() (in module sympy.core.function)": [[88, "sympy.core.function.expand_trig", false]], "expectation (class in sympy.stats)": [[241, "sympy.stats.Expectation", false]], "expectation() (sympy.stats.bernoulliprocess method)": [[241, "sympy.stats.BernoulliProcess.expectation", false]], "expectationmatrix (class in sympy.stats)": [[241, "sympy.stats.ExpectationMatrix", false]], "expint (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.expint", false]], "expm1 (class in sympy.codegen.cfunctions)": [[69, "sympy.codegen.cfunctions.expm1", false]], "exponential() (in module sympy.stats)": [[241, "sympy.stats.Exponential", false]], "expr": [[15, "term-Expr", true]], "expr (class in sympy.core.expr)": [[88, "sympy.core.expr.Expr", false]], "expr (sympy.core.function.lambda property)": [[88, "sympy.core.function.Lambda.expr", false]], "expr (sympy.core.function.subs property)": [[88, "sympy.core.function.Subs.expr", false]], "expr (sympy.functions.elementary.piecewise.exprcondpair property)": [[94, "sympy.functions.elementary.piecewise.ExprCondPair.expr", false]], "expr (sympy.physics.quantum.operator.differentialoperator property)": [[180, "sympy.physics.quantum.operator.DifferentialOperator.expr", false]], "expr (sympy.physics.quantum.state.wavefunction property)": [[189, "sympy.physics.quantum.state.Wavefunction.expr", false]], "expr (sympy.plotting.series.baseseries property)": [[207, "sympy.plotting.series.BaseSeries.expr", false]], "expr_free_symbols (sympy.core.expr.expr property)": [[88, "sympy.core.expr.Expr.expr_free_symbols", false]], "expr_to_holonomic() (in module sympy.holonomic.holonomic)": [[107, "sympy.holonomic.holonomic.expr_to_holonomic", false]], "exprcondpair (class in sympy.functions.elementary.piecewise)": [[94, "sympy.functions.elementary.piecewise.ExprCondPair", false]], "express() (in module sympy.physics.vector.functions)": [[202, "sympy.physics.vector.functions.express", false]], "express() (in module sympy.vector)": [[268, "sympy.vector.express", false]], "express() (sympy.physics.vector.dyadic.dyadic method)": [[200, "sympy.physics.vector.dyadic.Dyadic.express", false]], "express() (sympy.physics.vector.vector.vector method)": [[200, "sympy.physics.vector.vector.Vector.express", false]], "expression": [[15, "term-Expression", true]], "expression tree": [[15, "term-Expression-Tree", true]], "expressiondomain (class in sympy.polys.domains)": [[212, "sympy.polys.domains.ExpressionDomain", false]], "expressiondomain.expression (class in sympy.polys.domains)": [[212, "sympy.polys.domains.ExpressionDomain.Expression", false]], "expressiondomain.expression (class in sympy.polys.domains.expressiondomain)": [[212, "sympy.polys.domains.expressiondomain.ExpressionDomain.Expression", false]], "exprwithintlimits (class in sympy.concrete.expr_with_intlimits)": [[87, "sympy.concrete.expr_with_intlimits.ExprWithIntLimits", false]], "exprwithlimits (class in sympy.concrete.expr_with_limits)": [[115, "sympy.concrete.expr_with_limits.ExprWithLimits", false]], "exquo() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.exquo", false]], "exquo() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.exquo", false]], "exquo() (sympy.polys.domains.field.field method)": [[212, "sympy.polys.domains.field.Field.exquo", false]], "exquo() (sympy.polys.domains.gmpyrationalfield method)": [[212, "sympy.polys.domains.GMPYRationalField.exquo", false]], "exquo() (sympy.polys.domains.rationalfield method)": [[212, "sympy.polys.domains.RationalField.exquo", false]], "exquo() (sympy.polys.domains.ring.ring method)": [[212, "sympy.polys.domains.ring.Ring.exquo", false]], "exquo() (sympy.polys.polyclasses.dmf method)": [[212, "sympy.polys.polyclasses.DMF.exquo", false]], "exquo() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.exquo", false]], "exquo() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.exquo", false]], "exquo_ground() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.exquo_ground", false]], "exquo_ground() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.exquo_ground", false]], "exradii (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.exradii", false]], "exsqrt() (sympy.polys.domains.complexfield method)": [[212, "sympy.polys.domains.ComplexField.exsqrt", false]], "exsqrt() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.exsqrt", false]], "exsqrt() (sympy.polys.domains.finitefield method)": [[212, "sympy.polys.domains.FiniteField.exsqrt", false]], "exsqrt() (sympy.polys.domains.integerring method)": [[212, "sympy.polys.domains.IntegerRing.exsqrt", false]], "exsqrt() (sympy.polys.domains.rationalfield method)": [[212, "sympy.polys.domains.RationalField.exsqrt", false]], "exsqrt() (sympy.polys.domains.realfield method)": [[212, "sympy.polys.domains.RealField.exsqrt", false]], "ext (sympy.polys.domains.algebraicfield attribute)": [[212, "sympy.polys.domains.AlgebraicField.ext", false]], "extend() (sympy.ntheory.generate.sieve method)": [[128, "sympy.ntheory.generate.Sieve.extend", false]], "extend() (sympy.physics.units.unitsystem.unitsystem method)": [[199, "sympy.physics.units.unitsystem.UnitSystem.extend", false]], "extend() (sympy.plotting.plot.plot method)": [[207, "sympy.plotting.plot.Plot.extend", false]], "extend_to_no() (sympy.ntheory.generate.sieve method)": [[128, "sympy.ntheory.generate.Sieve.extend_to_no", false]], "extended_negative": [[88, "term-extended_negative", true]], "extended_nonnegative": [[88, "term-extended_nonnegative", true]], "extended_nonpositive": [[88, "term-extended_nonpositive", true]], "extended_nonzero": [[88, "term-extended_nonzero", true]], "extended_positive": [[88, "term-extended_positive", true]], "extended_real": [[88, "term-extended_real", true]], "extendedrealpredicate (class in sympy.assumptions.predicates.sets)": [[65, "sympy.assumptions.predicates.sets.ExtendedRealPredicate", false]], "extension_velocity (sympy.physics.mechanics.pathway.linearpathway property)": [[156, "sympy.physics.mechanics.pathway.LinearPathway.extension_velocity", false]], "extension_velocity (sympy.physics.mechanics.pathway.obstaclesetpathway property)": [[156, "sympy.physics.mechanics.pathway.ObstacleSetPathway.extension_velocity", false]], "extension_velocity (sympy.physics.mechanics.pathway.pathwaybase property)": [[156, "sympy.physics.mechanics.pathway.PathwayBase.extension_velocity", false]], "extension_velocity (sympy.physics.mechanics.pathway.wrappingpathway property)": [[156, "sympy.physics.mechanics.pathway.WrappingPathway.extension_velocity", false]], "extensionelement (class in sympy.polys.agca.extensions)": [[208, "sympy.polys.agca.extensions.ExtensionElement", false]], "extent (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.Extent", false]], "exterior_angle (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.exterior_angle", false]], "extract() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.extract", false]], "extract() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.extract", false]], "extract_additively() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.extract_additively", false]], "extract_branch_factor() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.extract_branch_factor", false]], "extract_fundamental_discriminant() (in module sympy.polys.numberfields.utilities)": [[216, "sympy.polys.numberfields.utilities.extract_fundamental_discriminant", false]], "extract_leading_order() (sympy.core.add.add method)": [[88, "sympy.core.add.Add.extract_leading_order", false]], "extract_multiplicatively() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.extract_multiplicatively", false]], "extract_slice() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.extract_slice", false]], "extract_type_tens() (in module sympy.physics.hep.gamma_matrices)": [[145, "sympy.physics.hep.gamma_matrices.extract_type_tens", false]], "extraneousfactors (class in sympy.polys.polyerrors)": [[214, "sympy.polys.polyerrors.ExtraneousFactors", false]], "eye() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.eye", false]], "eye() (sympy.matrices.matrixbase.matrixbase class method)": [[124, "sympy.matrices.matrixbase.MatrixBase.eye", false]], "eye() (sympy.polys.matrices._dfm.dfm class method)": [[210, "sympy.polys.matrices._dfm.DFM.eye", false]], "eye() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.eye", false]], "eye() (sympy.polys.matrices.sdm.sdm class method)": [[210, "sympy.polys.matrices.sdm.SDM.eye", false]], "f (in module sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.F", false]], "f (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.F", false]], "f (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.F", false]], "f (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[131, "sympy.physics.biomechanics.activation.ZerothOrderActivation.F", false]], "f (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.F", false]], "f2pycodewrapper (class in sympy.utilities.autowrap)": [[253, "sympy.utilities.autowrap.F2PyCodeWrapper", false]], "f_m_max (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.F_M_max", false]], "f_n (sympy.physics.mechanics.actuator.coulombkineticfriction property)": [[148, "sympy.physics.mechanics.actuator.CoulombKineticFriction.f_n", false]], "faces (sympy.combinatorics.polyhedron.polyhedron property)": [[81, "sympy.combinatorics.polyhedron.Polyhedron.faces", false]], "factor() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.factor", false]], "factor() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.factor", false]], "factor_list() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.factor_list", false]], "factor_list() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.factor_list", false]], "factor_list() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.factor_list", false]], "factor_list_include() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.factor_list_include", false]], "factor_list_include() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.factor_list_include", false]], "factor_terms() (in module sympy.core.exprtools)": [[88, "sympy.core.exprtools.factor_terms", false]], "factorable (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.Factorable", false]], "factorial (class in sympy.functions.combinatorial.factorials)": [[93, "sympy.functions.combinatorial.factorials.factorial", false]], "factorial() (sympy.polys.domains.fractionfield method)": [[212, "sympy.polys.domains.FractionField.factorial", false]], "factorial() (sympy.polys.domains.gmpyintegerring method)": [[212, "sympy.polys.domains.GMPYIntegerRing.factorial", false]], "factorial() (sympy.polys.domains.gmpyrationalfield method)": [[212, "sympy.polys.domains.GMPYRationalField.factorial", false]], "factorial() (sympy.polys.domains.integerring method)": [[212, "sympy.polys.domains.IntegerRing.factorial", false]], "factorial() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.factorial", false]], "factorial2 (class in sympy.functions.combinatorial.factorials)": [[93, "sympy.functions.combinatorial.factorials.factorial2", false]], "factorial_moment() (in module sympy.stats)": [[241, "sympy.stats.factorial_moment", false]], "factorial_notation() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.factorial_notation", false]], "factoring_visitor() (in module sympy.utilities.enumerative)": [[256, "sympy.utilities.enumerative.factoring_visitor", false]], "factorint() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.factorint", false]], "factorrat() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.factorrat", false]], "factors() (sympy.core.numbers.rational method)": [[88, "sympy.core.numbers.Rational.factors", false]], "failed (sympy.testing.runtests.sympytestresults attribute)": [[252, "sympy.testing.runtests.SymPyTestResults.failed", false]], "fallingfactorial (class in sympy.functions.combinatorial.factorials)": [[93, "sympy.functions.combinatorial.factorials.FallingFactorial", false]], "fbra (in module sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.FBra", false]], "fcode() (in module sympy.printing.fortran)": [[221, "sympy.printing.fortran.fcode", false]], "fcodegen (class in sympy.utilities.codegen)": [[254, "sympy.utilities.codegen.FCodeGen", false]], "fcodeprinter (class in sympy.printing.fortran)": [[221, "sympy.printing.fortran.FCodePrinter", false]], "fd (in module sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.Fd", false]], "fdiff() (sympy.codegen.cfunctions.cbrt method)": [[69, "sympy.codegen.cfunctions.Cbrt.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.exp2 method)": [[69, "sympy.codegen.cfunctions.exp2.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.expm1 method)": [[69, "sympy.codegen.cfunctions.expm1.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.fma method)": [[69, "sympy.codegen.cfunctions.fma.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.hypot method)": [[69, "sympy.codegen.cfunctions.hypot.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.log10 method)": [[69, "sympy.codegen.cfunctions.log10.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.log1p method)": [[69, "sympy.codegen.cfunctions.log1p.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.log2 method)": [[69, "sympy.codegen.cfunctions.log2.fdiff", false]], "fdiff() (sympy.codegen.cfunctions.sqrt method)": [[69, "sympy.codegen.cfunctions.Sqrt.fdiff", false]], "fdiff() (sympy.core.function.function method)": [[88, "sympy.core.function.Function.fdiff", false]], "fdiff() (sympy.functions.elementary.complexes.abs method)": [[94, "sympy.functions.elementary.complexes.Abs.fdiff", false]], "fdiff() (sympy.functions.elementary.exponential.exp method)": [[94, "sympy.functions.elementary.exponential.exp.fdiff", false]], "fdiff() (sympy.functions.elementary.exponential.lambertw method)": [[94, "sympy.functions.elementary.exponential.LambertW.fdiff", false]], "fdiff() (sympy.functions.elementary.exponential.log method)": [[94, "sympy.functions.elementary.exponential.log.fdiff", false]], "fdiff() (sympy.functions.elementary.hyperbolic.csch method)": [[94, "sympy.functions.elementary.hyperbolic.csch.fdiff", false]], "fdiff() (sympy.functions.elementary.hyperbolic.sinh method)": [[94, "sympy.functions.elementary.hyperbolic.sinh.fdiff", false]], "fdiff() (sympy.functions.special.delta_functions.diracdelta method)": [[96, "sympy.functions.special.delta_functions.DiracDelta.fdiff", false]], "fdiff() (sympy.functions.special.delta_functions.heaviside method)": [[96, "sympy.functions.special.delta_functions.Heaviside.fdiff", false]], "fdiff() (sympy.functions.special.singularity_functions.singularityfunction method)": [[96, "sympy.functions.special.singularity_functions.SingularityFunction.fdiff", false]], "fdiff() (sympy.physics.biomechanics.curve.fiberforcelengthactivedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthActiveDeGroote2016.fdiff", false]], "fdiff() (sympy.physics.biomechanics.curve.fiberforcelengthpassivedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveDeGroote2016.fdiff", false]], "fdiff() (sympy.physics.biomechanics.curve.fiberforcelengthpassiveinversedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveInverseDeGroote2016.fdiff", false]], "fdiff() (sympy.physics.biomechanics.curve.fiberforcevelocitydegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceVelocityDeGroote2016.fdiff", false]], "fdiff() (sympy.physics.biomechanics.curve.fiberforcevelocityinversedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceVelocityInverseDeGroote2016.fdiff", false]], "fdiff() (sympy.physics.biomechanics.curve.tendonforcelengthdegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.TendonForceLengthDeGroote2016.fdiff", false]], "fdiff() (sympy.physics.biomechanics.curve.tendonforcelengthinversedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.TendonForceLengthInverseDeGroote2016.fdiff", false]], "fdistribution() (in module sympy.stats)": [[241, "sympy.stats.FDistribution", false]], "feedback (class in sympy.physics.control.lti)": [[144, "sympy.physics.control.lti.Feedback", false]], "fft() (in module sympy.discrete.transforms)": [[91, "sympy.discrete.transforms.fft", false]], "fglm() (sympy.polys.polytools.groebnerbasis method)": [[217, "sympy.polys.polytools.GroebnerBasis.fglm", false]], "fiber_damping_coefficient (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.fiber_damping_coefficient", false]], "fiberforcelengthactivedegroote2016 (class in sympy.physics.biomechanics.curve)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthActiveDeGroote2016", false]], "fiberforcelengthpassivedegroote2016 (class in sympy.physics.biomechanics.curve)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveDeGroote2016", false]], "fiberforcelengthpassiveinversedegroote2016 (class in sympy.physics.biomechanics.curve)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveInverseDeGroote2016", false]], "fiberforcevelocitydegroote2016 (class in sympy.physics.biomechanics.curve)": [[132, "sympy.physics.biomechanics.curve.FiberForceVelocityDeGroote2016", false]], "fiberforcevelocityinversedegroote2016 (class in sympy.physics.biomechanics.curve)": [[132, "sympy.physics.biomechanics.curve.FiberForceVelocityInverseDeGroote2016", false]], "fibonacci (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.fibonacci", false]], "field (class in sympy.polys.domains.field)": [[212, "sympy.polys.domains.field.Field", false]], "field() (in module sympy.polys.fields)": [[212, "sympy.polys.fields.field", false]], "field_element() (sympy.core.numbers.algebraicnumber method)": [[88, "sympy.core.numbers.AlgebraicNumber.field_element", false]], "field_isomorphism() (in module sympy.polys.numberfields.subfield)": [[216, "sympy.polys.numberfields.subfield.field_isomorphism", false]], "fill (sympy.plotting.plot.plot property)": [[207, "sympy.plotting.plot.Plot.fill", false]], "filldedent() (in module sympy.utilities.misc)": [[262, "sympy.utilities.misc.filldedent", false]], "filter_symbols() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.filter_symbols", false]], "find() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.find", false]], "find_carmichael_numbers_in_range() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.find_carmichael_numbers_in_range", false]], "find_dn() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.find_DN", false]], "find_dynamicsymbols() (in module sympy.physics.mechanics)": [[150, "sympy.physics.mechanics.find_dynamicsymbols", false]], "find_dynamicsymbols() (in module sympy.physics.mechanics.functions)": [[155, "sympy.physics.mechanics.functions.find_dynamicsymbols", false]], "find_executable() (in module sympy.utilities.misc)": [[262, "sympy.utilities.misc.find_executable", false]], "find_first_n_carmichaels() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.find_first_n_carmichaels", false]], "find_linear_recurrence() (sympy.series.sequences.seqbase method)": [[227, "sympy.series.sequences.SeqBase.find_linear_recurrence", false]], "find_min_poly() (in module sympy.polys.numberfields.modules)": [[216, "sympy.polys.numberfields.modules.find_min_poly", false]], "find_transitive_subgroups_of_s6() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.find_transitive_subgroups_of_S6", false]], "finite": [[88, "term-finite", true]], "finite_diff_weights() (in module sympy.calculus.finite_diff)": [[67, "sympy.calculus.finite_diff.finite_diff_weights", false]], "finitedomain (class in sympy.stats.frv)": [[241, "sympy.stats.frv.FiniteDomain", false]], "finitefield (class in sympy.polys.domains)": [[212, "sympy.polys.domains.FiniteField", false]], "finiteformalpowerseries (class in sympy.series.formal)": [[223, "sympy.series.formal.FiniteFormalPowerSeries", false]], "finitepredicate (class in sympy.assumptions.predicates.calculus)": [[65, "sympy.assumptions.predicates.calculus.FinitePredicate", false]], "finitepspace (class in sympy.stats.frv)": [[241, "sympy.stats.frv.FinitePSpace", false]], "finiterv() (in module sympy.stats)": [[241, "sympy.stats.FiniteRV", false]], "finiteset (class in sympy.sets.sets)": [[229, "sympy.sets.sets.FiniteSet", false]], "first_moment_of_area() (sympy.geometry.polygon.polygon method)": [[104, "sympy.geometry.polygon.Polygon.first_moment_of_area", false]], "firstexact (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.FirstExact", false]], "firstlinear (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.FirstLinear", false]], "firstorderactivationdegroote2016 (class in sympy.physics.biomechanics.activation)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016", false]], "fisherz() (in module sympy.stats)": [[241, "sympy.stats.FisherZ", false]], "fixed_point (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.fixed_point", false]], "fixed_row_vector() (sympy.stats.discretemarkovchain method)": [[241, "sympy.stats.DiscreteMarkovChain.fixed_row_vector", false]], "fixedbosonicbasis (class in sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.FixedBosonicBasis", false]], "fket (in module sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.FKet", false]], "flagerror (class in sympy.polys.polyerrors)": [[214, "sympy.polys.polyerrors.FlagError", false]], "flat() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.flat", false]], "flatmirror (class in sympy.physics.optics.gaussopt)": [[160, "sympy.physics.optics.gaussopt.FlatMirror", false]], "flatrefraction (class in sympy.physics.optics.gaussopt)": [[160, "sympy.physics.optics.gaussopt.FlatRefraction", false]], "flatten() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.flatten", false]], "flatten() (sympy.categories.compositemorphism method)": [[68, "sympy.categories.CompositeMorphism.flatten", false]], "flatten() (sympy.core.add.add class method)": [[88, "sympy.core.add.Add.flatten", false]], "flatten() (sympy.core.mul.mul class method)": [[88, "sympy.core.mul.Mul.flatten", false]], "float (class in sympy.core.numbers)": [[88, "sympy.core.numbers.Float", false]], "floatbasetype (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.FloatBaseType", false]], "floattype (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.FloatType", false]], "floor (class in sympy.functions.elementary.integers)": [[94, "sympy.functions.elementary.integers.floor", false]], "fma (class in sympy.codegen.cfunctions)": [[69, "sympy.codegen.cfunctions.fma", false]], "foci (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.foci", false]], "fockspace (class in sympy.physics.quantum.hilbert)": [[177, "sympy.physics.quantum.hilbert.FockSpace", false]], "fockstate (class in sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.FockState", false]], "fockstatebosonbra (class in sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.FockStateBosonBra", false]], "fockstatebosonket (class in sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.FockStateBosonKet", false]], "fockstatebra (class in sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.FockStateBra", false]], "fockstatefermionbra (class in sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.FockStateFermionBra", false]], "fockstatefermionket (class in sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.FockStateFermionKet", false]], "fockstateket (class in sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.FockStateKet", false]], "focus_distance (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.focus_distance", false]], "for (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.For", false]], "force (class in sympy.physics.mechanics.loads)": [[155, "sympy.physics.mechanics.loads.Force", false]], "force (sympy.physics.mechanics.actuator.duffingspring property)": [[148, "sympy.physics.mechanics.actuator.DuffingSpring.force", false]], "force (sympy.physics.mechanics.actuator.forceactuator property)": [[148, "sympy.physics.mechanics.actuator.ForceActuator.force", false]], "force (sympy.physics.mechanics.actuator.lineardamper property)": [[148, "sympy.physics.mechanics.actuator.LinearDamper.force", false]], "force (sympy.physics.mechanics.actuator.linearspring property)": [[148, "sympy.physics.mechanics.actuator.LinearSpring.force", false]], "forceactuator (class in sympy.physics.mechanics.actuator)": [[148, "sympy.physics.mechanics.actuator.ForceActuator", false]], "forcing (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[149, "sympy.physics.mechanics.jointsmethod.JointsMethod.forcing", false]], "forcing (sympy.physics.mechanics.kane.kanesmethod property)": [[153, "sympy.physics.mechanics.kane.KanesMethod.forcing", false]], "forcing (sympy.physics.mechanics.lagrange.lagrangesmethod property)": [[153, "sympy.physics.mechanics.lagrange.LagrangesMethod.forcing", false]], "forcing (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.forcing", false]], "forcing_full (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[149, "sympy.physics.mechanics.jointsmethod.JointsMethod.forcing_full", false]], "forcing_full (sympy.physics.mechanics.kane.kanesmethod property)": [[153, "sympy.physics.mechanics.kane.KanesMethod.forcing_full", false]], "forcing_full (sympy.physics.mechanics.lagrange.lagrangesmethod property)": [[153, "sympy.physics.mechanics.lagrange.LagrangesMethod.forcing_full", false]], "forcing_full (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.forcing_full", false]], "forcing_kin (sympy.physics.mechanics.kane.kanesmethod property)": [[153, "sympy.physics.mechanics.kane.KanesMethod.forcing_kin", false]], "form_eoms() (sympy.physics.mechanics.jointsmethod.jointsmethod method)": [[149, "sympy.physics.mechanics.jointsmethod.JointsMethod.form_eoms", false]], "form_eoms() (sympy.physics.mechanics.system.system method)": [[158, "sympy.physics.mechanics.system.System.form_eoms", false]], "form_lagranges_equations() (sympy.physics.mechanics.lagrange.lagrangesmethod method)": [[153, "sympy.physics.mechanics.lagrange.LagrangesMethod.form_lagranges_equations", false]], "formalpowerseries (class in sympy.series.formal)": [[223, "sympy.series.formal.FormalPowerSeries", false]], "formalpowerseriescompose (class in sympy.series.formal)": [[223, "sympy.series.formal.FormalPowerSeriesCompose", false]], "formalpowerseriesinverse (class in sympy.series.formal)": [[223, "sympy.series.formal.FormalPowerSeriesInverse", false]], "formalpowerseriesproduct (class in sympy.series.formal)": [[223, "sympy.series.formal.FormalPowerSeriesProduct", false]], "fortranreturn (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.FortranReturn", false]], "forward_diff() (in module sympy.physics.control.lti)": [[144, "sympy.physics.control.lti.forward_diff", false]], "four_group() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.four_group", false]], "fourier_series() (in module sympy.series.fourier)": [[224, "sympy.series.fourier.fourier_series", false]], "fourier_series() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.fourier_series", false]], "fourier_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.fourier_transform", false]], "fourierseries (class in sympy.series.fourier)": [[224, "sympy.series.fourier.FourierSeries", false]], "fouriertransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.FourierTransform", false]], "fps() (in module sympy.series.formal)": [[223, "sympy.series.formal.fps", false]], "fps() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.fps", false]], "frac (class in sympy.functions.elementary.integers)": [[94, "sympy.functions.elementary.integers.frac", false]], "frac (in module sympy.printing.pretty.pretty_symbology)": [[221, "sympy.printing.pretty.pretty_symbology.frac", false]], "frac_field() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.frac_field", false]], "frac_unify() (sympy.polys.polyclasses.dmf method)": [[212, "sympy.polys.polyclasses.DMF.frac_unify", false]], "fracelement (class in sympy.polys.fields)": [[212, "sympy.polys.fields.FracElement", false]], "fracfield (class in sympy.polys.fields)": [[212, "sympy.polys.fields.FracField", false]], "fraction() (in module sympy.simplify.radsimp)": [[233, "sympy.simplify.radsimp.fraction", false]], "fractionfield (class in sympy.polys.domains)": [[212, "sympy.polys.domains.FractionField", false]], "frame (sympy.physics.mechanics.body.body property)": [[149, "sympy.physics.mechanics.body.Body.frame", false]], "frame (sympy.physics.mechanics.rigidbody.rigidbody property)": [[155, "sympy.physics.mechanics.rigidbody.RigidBody.frame", false]], "frame (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.frame", false]], "frechet() (in module sympy.stats)": [[241, "sympy.stats.Frechet", false]], "free symbols": [[15, "term-Free-symbols", true]], "free_dynamicsymbols() (sympy.physics.vector.vector.vector method)": [[200, "sympy.physics.vector.vector.Vector.free_dynamicsymbols", false]], "free_module() (sympy.polys.domains.ring.ring method)": [[212, "sympy.polys.domains.ring.Ring.free_module", false]], "free_symbols (sympy.concrete.expr_with_limits.exprwithlimits property)": [[115, "sympy.concrete.expr_with_limits.ExprWithLimits.free_symbols", false]], "free_symbols (sympy.core.basic.basic property)": [[88, "sympy.core.basic.Basic.free_symbols", false]], "free_symbols (sympy.geometry.curve.curve property)": [[97, "sympy.geometry.curve.Curve.free_symbols", false]], "free_symbols (sympy.integrals.integrals.integral property)": [[115, "sympy.integrals.integrals.Integral.free_symbols", false]], "free_symbols (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.free_symbols", false]], "free_symbols (sympy.physics.quantum.operator.differentialoperator property)": [[180, "sympy.physics.quantum.operator.DifferentialOperator.free_symbols", false]], "free_symbols (sympy.physics.units.quantities.quantity property)": [[198, "sympy.physics.units.quantities.Quantity.free_symbols", false]], "free_symbols (sympy.polys.polytools.poly property)": [[217, "sympy.polys.polytools.Poly.free_symbols", false]], "free_symbols (sympy.polys.polytools.purepoly property)": [[217, "sympy.polys.polytools.PurePoly.free_symbols", false]], "free_symbols (sympy.series.sequences.seqbase property)": [[227, "sympy.series.sequences.SeqBase.free_symbols", false]], "free_symbols() (sympy.physics.vector.vector.vector method)": [[200, "sympy.physics.vector.vector.Vector.free_symbols", false]], "free_symbols_in_domain (sympy.polys.polytools.poly property)": [[217, "sympy.polys.polytools.Poly.free_symbols_in_domain", false]], "freemodule (class in sympy.polys.agca.modules)": [[208, "sympy.polys.agca.modules.FreeModule", false]], "freemoduleelement (class in sympy.polys.agca.modules)": [[208, "sympy.polys.agca.modules.FreeModuleElement", false]], "freespace (class in sympy.physics.optics.gaussopt)": [[160, "sympy.physics.optics.gaussopt.FreeSpace", false]], "frequency (sympy.physics.optics.waves.twave property)": [[165, "sympy.physics.optics.waves.TWave.frequency", false]], "fresnel_coefficients() (in module sympy.physics.optics.utils)": [[164, "sympy.physics.optics.utils.fresnel_coefficients", false]], "fresnelc (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.fresnelc", false]], "fresnelintegral (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.FresnelIntegral", false]], "fresnels (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.fresnels", false]], "from_algebraicfield() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.expressiondomain method)": [[212, "sympy.polys.domains.ExpressionDomain.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.fractionfield method)": [[212, "sympy.polys.domains.FractionField.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.integerring method)": [[212, "sympy.polys.domains.IntegerRing.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.from_AlgebraicField", false]], "from_algebraicfield() (sympy.polys.domains.rationalfield method)": [[212, "sympy.polys.domains.RationalField.from_AlgebraicField", false]], "from_axis_angle() (sympy.algebras.quaternion class method)": [[61, "sympy.algebras.Quaternion.from_axis_angle", false]], "from_coeff_lists() (sympy.physics.control.lti.transferfunction class method)": [[144, "sympy.physics.control.lti.TransferFunction.from_coeff_lists", false]], "from_complexfield() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.from_ComplexField", false]], "from_complexfield() (sympy.polys.domains.expressiondomain method)": [[212, "sympy.polys.domains.ExpressionDomain.from_ComplexField", false]], "from_complexfield() (sympy.polys.domains.fractionfield method)": [[212, "sympy.polys.domains.FractionField.from_ComplexField", false]], "from_complexfield() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianRationalField.from_ComplexField", false]], "from_complexfield() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.from_ComplexField", false]], "from_ddm() (sympy.polys.matrices._dfm.dfm class method)": [[210, "sympy.polys.matrices._dfm.DFM.from_ddm", false]], "from_ddm() (sympy.polys.matrices.sdm.sdm class method)": [[210, "sympy.polys.matrices.sdm.SDM.from_ddm", false]], "from_dict() (sympy.polys.polytools.poly class method)": [[217, "sympy.polys.polytools.Poly.from_dict", false]], "from_dict_sympy() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_dict_sympy", false]], "from_dod() (sympy.polys.matrices._dfm.dfm class method)": [[210, "sympy.polys.matrices._dfm.DFM.from_dod", false]], "from_dod() (sympy.polys.matrices.ddm.ddm class method)": [[210, "sympy.polys.matrices.ddm.DDM.from_dod", false]], "from_dod() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_dod", false]], "from_dod() (sympy.polys.matrices.sdm.sdm class method)": [[210, "sympy.polys.matrices.sdm.SDM.from_dod", false]], "from_dod_like() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_dod_like", false]], "from_dok() (sympy.matrices.matrixbase.matrixbase class method)": [[124, "sympy.matrices.matrixbase.MatrixBase.from_dok", false]], "from_dok() (sympy.polys.matrices._dfm.dfm class method)": [[210, "sympy.polys.matrices._dfm.DFM.from_dok", false]], "from_dok() (sympy.polys.matrices.ddm.ddm class method)": [[210, "sympy.polys.matrices.ddm.DDM.from_dok", false]], "from_dok() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_dok", false]], "from_dok() (sympy.polys.matrices.sdm.sdm class method)": [[210, "sympy.polys.matrices.sdm.SDM.from_dok", false]], "from_euler() (sympy.algebras.quaternion class method)": [[61, "sympy.algebras.Quaternion.from_euler", false]], "from_ex() (sympy.polys.domains.integerring method)": [[212, "sympy.polys.domains.IntegerRing.from_EX", false]], "from_expr() (sympy.codegen.ast.type class method)": [[69, "sympy.codegen.ast.Type.from_expr", false]], "from_expr() (sympy.polys.polytools.poly class method)": [[217, "sympy.polys.polytools.Poly.from_expr", false]], "from_expressiondomain() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.from_ExpressionDomain", false]], "from_expressiondomain() (sympy.polys.domains.expressiondomain method)": [[212, "sympy.polys.domains.ExpressionDomain.from_ExpressionDomain", false]], "from_expressionrawdomain() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.from_ExpressionRawDomain", false]], "from_ff() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.from_FF", false]], "from_ff() (sympy.polys.domains.finitefield method)": [[212, "sympy.polys.domains.FiniteField.from_FF", false]], "from_ff() (sympy.polys.domains.integerring method)": [[212, "sympy.polys.domains.IntegerRing.from_FF", false]], "from_ff_gmpy() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.from_FF_gmpy", false]], "from_ff_gmpy() (sympy.polys.domains.finitefield method)": [[212, "sympy.polys.domains.FiniteField.from_FF_gmpy", false]], "from_ff_gmpy() (sympy.polys.domains.gmpyintegerring method)": [[212, "sympy.polys.domains.GMPYIntegerRing.from_FF_gmpy", false]], "from_ff_gmpy() (sympy.polys.domains.integerring method)": [[212, "sympy.polys.domains.IntegerRing.from_FF_gmpy", false]], "from_ff_python() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.from_FF_python", false]], "from_ff_python() (sympy.polys.domains.finitefield method)": [[212, "sympy.polys.domains.FiniteField.from_FF_python", false]], "from_ff_python() (sympy.polys.domains.gmpyintegerring method)": [[212, "sympy.polys.domains.GMPYIntegerRing.from_FF_python", false]], "from_ff_python() (sympy.polys.domains.integerring method)": [[212, "sympy.polys.domains.IntegerRing.from_FF_python", false]], "from_flat_nz() (sympy.polys.matrices._dfm.dfm class method)": [[210, "sympy.polys.matrices._dfm.DFM.from_flat_nz", false]], "from_flat_nz() (sympy.polys.matrices.ddm.ddm class method)": [[210, "sympy.polys.matrices.ddm.DDM.from_flat_nz", false]], "from_flat_nz() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_flat_nz", false]], "from_flat_nz() (sympy.polys.matrices.sdm.sdm class method)": [[210, "sympy.polys.matrices.sdm.SDM.from_flat_nz", false]], "from_fractionfield() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.from_FractionField", false]], "from_fractionfield() (sympy.polys.domains.expressiondomain method)": [[212, "sympy.polys.domains.ExpressionDomain.from_FractionField", false]], "from_fractionfield() (sympy.polys.domains.fractionfield method)": [[212, "sympy.polys.domains.FractionField.from_FractionField", false]], "from_fractionfield() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.from_FractionField", false]], "from_gaussianintegerring() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.from_GaussianIntegerRing", false]], "from_gaussianintegerring() (sympy.polys.domains.expressiondomain method)": [[212, "sympy.polys.domains.ExpressionDomain.from_GaussianIntegerRing", false]], "from_gaussianintegerring() (sympy.polys.domains.fractionfield method)": [[212, "sympy.polys.domains.FractionField.from_GaussianIntegerRing", false]], "from_gaussianintegerring() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.from_GaussianIntegerRing", false]], "from_gaussianintegerring() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianRationalField.from_GaussianIntegerRing", false]], "from_gaussianintegerring() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.from_GaussianIntegerRing", false]], "from_gaussianrationalfield() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.expressiondomain method)": [[212, "sympy.polys.domains.ExpressionDomain.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.fractionfield method)": [[212, "sympy.polys.domains.FractionField.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianRationalField.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.gmpyrationalfield method)": [[212, "sympy.polys.domains.GMPYRationalField.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.from_GaussianRationalField", false]], "from_gaussianrationalfield() (sympy.polys.domains.rationalfield method)": [[212, "sympy.polys.domains.RationalField.from_GaussianRationalField", false]], "from_globalpolynomialring() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.from_GlobalPolynomialRing", false]], "from_globalpolynomialring() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.from_GlobalPolynomialRing", false]], "from_hyper() (in module sympy.holonomic.holonomic)": [[107, "sympy.holonomic.holonomic.from_hyper", false]], "from_index_summation() (sympy.matrices.expressions.matrixexpr static method)": [[120, "sympy.matrices.expressions.MatrixExpr.from_index_summation", false]], "from_inertia_scalars() (sympy.physics.mechanics.inertia.inertia class method)": [[155, "sympy.physics.mechanics.inertia.Inertia.from_inertia_scalars", false]], "from_int_list() (sympy.polys.numberfields.modules.moduleelement class method)": [[216, "sympy.polys.numberfields.modules.ModuleElement.from_int_list", false]], "from_inversion_vector() (sympy.combinatorics.permutations.permutation class method)": [[80, "sympy.combinatorics.permutations.Permutation.from_inversion_vector", false]], "from_list() (sympy.polys.matrices._dfm.dfm class method)": [[210, "sympy.polys.matrices._dfm.DFM.from_list", false]], "from_list() (sympy.polys.matrices.ddm.ddm class method)": [[210, "sympy.polys.matrices.ddm.DDM.from_list", false]], "from_list() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_list", false]], "from_list() (sympy.polys.matrices.sdm.sdm class method)": [[210, "sympy.polys.matrices.sdm.SDM.from_list", false]], "from_list() (sympy.polys.polyclasses.dmp class method)": [[212, "sympy.polys.polyclasses.DMP.from_list", false]], "from_list() (sympy.polys.polytools.poly class method)": [[217, "sympy.polys.polytools.Poly.from_list", false]], "from_list_flat() (sympy.polys.matrices._dfm.dfm class method)": [[210, "sympy.polys.matrices._dfm.DFM.from_list_flat", false]], "from_list_flat() (sympy.polys.matrices.ddm.ddm class method)": [[210, "sympy.polys.matrices.ddm.DDM.from_list_flat", false]], "from_list_flat() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_list_flat", false]], "from_list_flat() (sympy.polys.matrices.sdm.sdm class method)": [[210, "sympy.polys.matrices.sdm.SDM.from_list_flat", false]], "from_list_sympy() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_list_sympy", false]], "from_matrix() (sympy.algebras.quaternion class method)": [[61, "sympy.algebras.Quaternion.from_Matrix", false]], "from_matrix() (sympy.physics.control.lti.transferfunctionmatrix class method)": [[144, "sympy.physics.control.lti.TransferFunctionMatrix.from_Matrix", false]], "from_matrix() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_Matrix", false]], "from_meijerg() (in module sympy.holonomic.holonomic)": [[107, "sympy.holonomic.holonomic.from_meijerg", false]], "from_monogenicfiniteextension() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.from_MonogenicFiniteExtension", false]], "from_newtonian() (sympy.physics.mechanics.system.system class method)": [[158, "sympy.physics.mechanics.system.System.from_newtonian", false]], "from_poly() (sympy.polys.polytools.poly class method)": [[217, "sympy.polys.polytools.Poly.from_poly", false]], "from_polynomialring() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.from_PolynomialRing", false]], "from_polynomialring() (sympy.polys.domains.expressiondomain method)": [[212, "sympy.polys.domains.ExpressionDomain.from_PolynomialRing", false]], "from_polynomialring() (sympy.polys.domains.fractionfield method)": [[212, "sympy.polys.domains.FractionField.from_PolynomialRing", false]], "from_polynomialring() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.from_PolynomialRing", false]], "from_qq() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.from_QQ", false]], "from_qq() (sympy.polys.domains.expressiondomain method)": [[212, "sympy.polys.domains.ExpressionDomain.from_QQ", false]], "from_qq() (sympy.polys.domains.finitefield method)": [[212, "sympy.polys.domains.FiniteField.from_QQ", false]], "from_qq() (sympy.polys.domains.fractionfield method)": [[212, "sympy.polys.domains.FractionField.from_QQ", false]], "from_qq() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_QQ", false]], "from_qq() (sympy.polys.domains.gmpyintegerring method)": [[212, "sympy.polys.domains.GMPYIntegerRing.from_QQ", false]], "from_qq() (sympy.polys.domains.integerring method)": [[212, "sympy.polys.domains.IntegerRing.from_QQ", false]], "from_qq() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.from_QQ", false]], "from_qq() (sympy.polys.domains.rationalfield method)": [[212, "sympy.polys.domains.RationalField.from_QQ", false]], "from_qq_gmpy() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.expressiondomain method)": [[212, "sympy.polys.domains.ExpressionDomain.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.finitefield method)": [[212, "sympy.polys.domains.FiniteField.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.fractionfield method)": [[212, "sympy.polys.domains.FractionField.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.gmpyintegerring method)": [[212, "sympy.polys.domains.GMPYIntegerRing.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.gmpyrationalfield method)": [[212, "sympy.polys.domains.GMPYRationalField.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.integerring method)": [[212, "sympy.polys.domains.IntegerRing.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.from_QQ_gmpy", false]], "from_qq_gmpy() (sympy.polys.domains.rationalfield method)": [[212, "sympy.polys.domains.RationalField.from_QQ_gmpy", false]], "from_qq_python() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.expressiondomain method)": [[212, "sympy.polys.domains.ExpressionDomain.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.finitefield method)": [[212, "sympy.polys.domains.FiniteField.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.fractionfield method)": [[212, "sympy.polys.domains.FractionField.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.gmpyintegerring method)": [[212, "sympy.polys.domains.GMPYIntegerRing.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.gmpyrationalfield method)": [[212, "sympy.polys.domains.GMPYRationalField.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.integerring method)": [[212, "sympy.polys.domains.IntegerRing.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.from_QQ_python", false]], "from_qq_python() (sympy.polys.domains.rationalfield method)": [[212, "sympy.polys.domains.RationalField.from_QQ_python", false]], "from_rational_expression() (sympy.physics.control.lti.transferfunction class method)": [[144, "sympy.physics.control.lti.TransferFunction.from_rational_expression", false]], "from_real() (sympy.sets.fancysets.complexregion class method)": [[229, "sympy.sets.fancysets.ComplexRegion.from_real", false]], "from_realfield() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.from_RealField", false]], "from_realfield() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.from_RealField", false]], "from_realfield() (sympy.polys.domains.expressiondomain method)": [[212, "sympy.polys.domains.ExpressionDomain.from_RealField", false]], "from_realfield() (sympy.polys.domains.finitefield method)": [[212, "sympy.polys.domains.FiniteField.from_RealField", false]], "from_realfield() (sympy.polys.domains.fractionfield method)": [[212, "sympy.polys.domains.FractionField.from_RealField", false]], "from_realfield() (sympy.polys.domains.gmpyintegerring method)": [[212, "sympy.polys.domains.GMPYIntegerRing.from_RealField", false]], "from_realfield() (sympy.polys.domains.gmpyrationalfield method)": [[212, "sympy.polys.domains.GMPYRationalField.from_RealField", false]], "from_realfield() (sympy.polys.domains.integerring method)": [[212, "sympy.polys.domains.IntegerRing.from_RealField", false]], "from_realfield() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.from_RealField", false]], "from_realfield() (sympy.polys.domains.rationalfield method)": [[212, "sympy.polys.domains.RationalField.from_RealField", false]], "from_rep() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.from_rep", false]], "from_rgs() (sympy.combinatorics.partitions.partition class method)": [[77, "sympy.combinatorics.partitions.Partition.from_rgs", false]], "from_rotation_matrix() (sympy.algebras.quaternion class method)": [[61, "sympy.algebras.Quaternion.from_rotation_matrix", false]], "from_sequence() (sympy.combinatorics.permutations.permutation class method)": [[80, "sympy.combinatorics.permutations.Permutation.from_sequence", false]], "from_sympy() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.from_sympy", false]], "from_sympy() (sympy.polys.domains.complexfield method)": [[212, "sympy.polys.domains.ComplexField.from_sympy", false]], "from_sympy() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.from_sympy", false]], "from_sympy() (sympy.polys.domains.expressiondomain method)": [[212, "sympy.polys.domains.ExpressionDomain.from_sympy", false]], "from_sympy() (sympy.polys.domains.finitefield method)": [[212, "sympy.polys.domains.FiniteField.from_sympy", false]], "from_sympy() (sympy.polys.domains.fractionfield method)": [[212, "sympy.polys.domains.FractionField.from_sympy", false]], "from_sympy() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_sympy", false]], "from_sympy() (sympy.polys.domains.gmpyintegerring method)": [[212, "sympy.polys.domains.GMPYIntegerRing.from_sympy", false]], "from_sympy() (sympy.polys.domains.gmpyrationalfield method)": [[212, "sympy.polys.domains.GMPYRationalField.from_sympy", false]], "from_sympy() (sympy.polys.domains.integerring method)": [[212, "sympy.polys.domains.IntegerRing.from_sympy", false]], "from_sympy() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.from_sympy", false]], "from_sympy() (sympy.polys.domains.rationalfield method)": [[212, "sympy.polys.domains.RationalField.from_sympy", false]], "from_sympy() (sympy.polys.domains.realfield method)": [[212, "sympy.polys.domains.RealField.from_sympy", false]], "from_sympy_list() (sympy.polys.polyclasses.dmp class method)": [[212, "sympy.polys.polyclasses.DMP.from_sympy_list", false]], "from_zpk() (sympy.physics.control.lti.transferfunction class method)": [[144, "sympy.physics.control.lti.TransferFunction.from_zpk", false]], "from_zz() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.from_ZZ", false]], "from_zz() (sympy.polys.domains.expressiondomain method)": [[212, "sympy.polys.domains.ExpressionDomain.from_ZZ", false]], "from_zz() (sympy.polys.domains.finitefield method)": [[212, "sympy.polys.domains.FiniteField.from_ZZ", false]], "from_zz() (sympy.polys.domains.fractionfield method)": [[212, "sympy.polys.domains.FractionField.from_ZZ", false]], "from_zz() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_ZZ", false]], "from_zz() (sympy.polys.domains.integerring method)": [[212, "sympy.polys.domains.IntegerRing.from_ZZ", false]], "from_zz() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.from_ZZ", false]], "from_zz() (sympy.polys.domains.rationalfield method)": [[212, "sympy.polys.domains.RationalField.from_ZZ", false]], "from_zz_gmpy() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.expressiondomain method)": [[212, "sympy.polys.domains.ExpressionDomain.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.finitefield method)": [[212, "sympy.polys.domains.FiniteField.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.fractionfield method)": [[212, "sympy.polys.domains.FractionField.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.gmpyintegerring method)": [[212, "sympy.polys.domains.GMPYIntegerRing.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.gmpyrationalfield method)": [[212, "sympy.polys.domains.GMPYRationalField.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.integerring method)": [[212, "sympy.polys.domains.IntegerRing.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.from_ZZ_gmpy", false]], "from_zz_gmpy() (sympy.polys.domains.rationalfield method)": [[212, "sympy.polys.domains.RationalField.from_ZZ_gmpy", false]], "from_zz_python() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.expressiondomain method)": [[212, "sympy.polys.domains.ExpressionDomain.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.finitefield method)": [[212, "sympy.polys.domains.FiniteField.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.fractionfield method)": [[212, "sympy.polys.domains.FractionField.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianDomain.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.gmpyintegerring method)": [[212, "sympy.polys.domains.GMPYIntegerRing.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.gmpyrationalfield method)": [[212, "sympy.polys.domains.GMPYRationalField.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.integerring method)": [[212, "sympy.polys.domains.IntegerRing.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.from_ZZ_python", false]], "from_zz_python() (sympy.polys.domains.rationalfield method)": [[212, "sympy.polys.domains.RationalField.from_ZZ_python", false]], "fromiter() (sympy.core.basic.basic class method)": [[88, "sympy.core.basic.Basic.fromiter", false]], "fu() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.fu", false]], "full_cyclic_form (sympy.combinatorics.permutations.permutation property)": [[80, "sympy.combinatorics.permutations.Permutation.full_cyclic_form", false]], "fullrankpredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.FullRankPredicate", false]], "fully_symmetric() (sympy.tensor.tensor.tensorsymmetry class method)": [[247, "sympy.tensor.tensor.TensorSymmetry.fully_symmetric", false]], "func": [[15, "term-func", true]], "func (sympy.core.basic.basic property)": [[88, "sympy.core.basic.Basic.func", false]], "func (sympy.physics.vector.dyadic.dyadic property)": [[200, "sympy.physics.vector.dyadic.Dyadic.func", false]], "func (sympy.physics.vector.vector.vector property)": [[200, "sympy.physics.vector.vector.Vector.func", false]], "func_field_modgcd() (in module sympy.polys.modulargcd)": [[214, "sympy.polys.modulargcd.func_field_modgcd", false]], "func_name() (in module sympy.utilities.misc)": [[262, "sympy.utilities.misc.func_name", false]], "funcminusoneoptim (class in sympy.codegen.rewriting)": [[69, "sympy.codegen.rewriting.FuncMinusOneOptim", false]], "function": [[15, "term-Function", true]], "function (class in sympy.core.function)": [[88, "sympy.core.function.Function", false]], "function (class)": [[15, "term-Function-class", true]], "function (sympy.assumptions.assume.appliedpredicate property)": [[63, "sympy.assumptions.assume.AppliedPredicate.function", false]], "function (sympy.concrete.expr_with_limits.exprwithlimits property)": [[115, "sympy.concrete.expr_with_limits.ExprWithLimits.function", false]], "function (sympy.integrals.transforms.integraltransform property)": [[115, "sympy.integrals.transforms.IntegralTransform.function", false]], "function (sympy.physics.quantum.operator.differentialoperator property)": [[180, "sympy.physics.quantum.operator.DifferentialOperator.function", false]], "function (sympy.series.formal.formalpowerseriescompose property)": [[223, "sympy.series.formal.FormalPowerSeriesCompose.function", false]], "function (sympy.series.formal.formalpowerseriesinverse property)": [[223, "sympy.series.formal.FormalPowerSeriesInverse.function", false]], "function (sympy.series.formal.formalpowerseriesproduct property)": [[223, "sympy.series.formal.FormalPowerSeriesProduct.function", false]], "function_exponentiation() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.function_exponentiation", false]], "function_range() (in module sympy.calculus.util)": [[67, "sympy.calculus.util.function_range", false]], "function_variable (sympy.integrals.transforms.integraltransform property)": [[115, "sympy.integrals.transforms.IntegralTransform.function_variable", false]], "functioncall (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.FunctionCall", false]], "functionclass (class in sympy.core.function)": [[88, "sympy.core.function.FunctionClass", false]], "functiondefinition (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.FunctionDefinition", false]], "functionmatrix (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.FunctionMatrix", false]], "functionprototype (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.FunctionPrototype", false]], "functions (sympy.geometry.curve.curve property)": [[97, "sympy.geometry.curve.Curve.functions", false]], "fundamental_matrix() (sympy.stats.discretemarkovchain method)": [[241, "sympy.stats.DiscreteMarkovChain.fundamental_matrix", false]], "fwht() (in module sympy.discrete.transforms)": [[91, "sympy.discrete.transforms.fwht", false]], "g() (in module sympy.printing.pretty.pretty_symbology)": [[221, "sympy.printing.pretty.pretty_symbology.G", false], [221, "sympy.printing.pretty.pretty_symbology.g", false]], "g18() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.G18", false]], "g36m() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.G36m", false]], "g36p() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.G36p", false]], "g72() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.G72", false]], "galois_group() (in module sympy.polys.numberfields.galoisgroups)": [[216, "sympy.polys.numberfields.galoisgroups.galois_group", false]], "galois_group() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.galois_group", false]], "galois_group() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.galois_group", false]], "gamma (class in sympy.functions.special.gamma_functions)": [[96, "sympy.functions.special.gamma_functions.gamma", false]], "gamma() (in module sympy.stats)": [[241, "sympy.stats.Gamma", false]], "gamma_trace() (in module sympy.physics.hep.gamma_matrices)": [[145, "sympy.physics.hep.gamma_matrices.gamma_trace", false]], "gammainverse() (in module sympy.stats)": [[241, "sympy.stats.GammaInverse", false]], "gammaprocess (class in sympy.stats)": [[241, "sympy.stats.GammaProcess", false]], "gammasimp() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.gammasimp", false]], "gate (class in sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.Gate", false]], "gate (sympy.physics.quantum.gate.cgate property)": [[175, "sympy.physics.quantum.gate.CGate.gate", false]], "gate (sympy.physics.quantum.gate.cnotgate property)": [[175, "sympy.physics.quantum.gate.CNotGate.gate", false]], "gate_simp() (in module sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.gate_simp", false]], "gate_sort() (in module sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.gate_sort", false]], "gateinputcount() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.gateinputcount", false]], "gaunt() (in module sympy.physics.wigner)": [[206, "sympy.physics.wigner.gaunt", false]], "gauss_chebyshev_t() (in module sympy.integrals.quadrature)": [[115, "sympy.integrals.quadrature.gauss_chebyshev_t", false]], "gauss_chebyshev_u() (in module sympy.integrals.quadrature)": [[115, "sympy.integrals.quadrature.gauss_chebyshev_u", false]], "gauss_gen_laguerre() (in module sympy.integrals.quadrature)": [[115, "sympy.integrals.quadrature.gauss_gen_laguerre", false]], "gauss_hermite() (in module sympy.integrals.quadrature)": [[115, "sympy.integrals.quadrature.gauss_hermite", false]], "gauss_jacobi() (in module sympy.integrals.quadrature)": [[115, "sympy.integrals.quadrature.gauss_jacobi", false]], "gauss_jordan_solve() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.gauss_jordan_solve", false]], "gauss_laguerre() (in module sympy.integrals.quadrature)": [[115, "sympy.integrals.quadrature.gauss_laguerre", false]], "gauss_legendre() (in module sympy.integrals.quadrature)": [[115, "sympy.integrals.quadrature.gauss_legendre", false]], "gauss_lobatto() (in module sympy.integrals.quadrature)": [[115, "sympy.integrals.quadrature.gauss_lobatto", false]], "gaussian_conj() (in module sympy.physics.optics.gaussopt)": [[160, "sympy.physics.optics.gaussopt.gaussian_conj", false]], "gaussian_reduce() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.gaussian_reduce", false]], "gaussiandomain (class in sympy.polys.domains.gaussiandomains)": [[212, "sympy.polys.domains.gaussiandomains.GaussianDomain", false]], "gaussianelement (class in sympy.polys.domains.gaussiandomains)": [[212, "sympy.polys.domains.gaussiandomains.GaussianElement", false]], "gaussianinteger (class in sympy.polys.domains.gaussiandomains)": [[212, "sympy.polys.domains.gaussiandomains.GaussianInteger", false]], "gaussianintegerring (class in sympy.polys.domains.gaussiandomains)": [[212, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing", false]], "gaussianrational (class in sympy.polys.domains.gaussiandomains)": [[212, "sympy.polys.domains.gaussiandomains.GaussianRational", false]], "gaussianrationalfield (class in sympy.polys.domains.gaussiandomains)": [[212, "sympy.polys.domains.gaussiandomains.GaussianRationalField", false]], "gbt() (in module sympy.physics.control.lti)": [[144, "sympy.physics.control.lti.gbt", false]], "gcd() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.gcd", false]], "gcd() (sympy.core.numbers.number method)": [[88, "sympy.core.numbers.Number.gcd", false]], "gcd() (sympy.polys.domains.complexfield method)": [[212, "sympy.polys.domains.ComplexField.gcd", false]], "gcd() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.gcd", false]], "gcd() (sympy.polys.domains.field.field method)": [[212, "sympy.polys.domains.field.Field.gcd", false]], "gcd() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.gcd", false]], "gcd() (sympy.polys.domains.gmpyintegerring method)": [[212, "sympy.polys.domains.GMPYIntegerRing.gcd", false]], "gcd() (sympy.polys.domains.integerring method)": [[212, "sympy.polys.domains.IntegerRing.gcd", false]], "gcd() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.gcd", false]], "gcd() (sympy.polys.domains.realfield method)": [[212, "sympy.polys.domains.RealField.gcd", false]], "gcd() (sympy.polys.monomials.monomial method)": [[217, "sympy.polys.monomials.Monomial.gcd", false]], "gcd() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.gcd", false]], "gcd() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.gcd", false]], "gcd_list() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.gcd_list", false]], "gcd_terms() (in module sympy.core.exprtools)": [[88, "sympy.core.exprtools.gcd_terms", false]], "gcdex() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.gcdex", false]], "gcdex() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.gcdex", false]], "gcdex() (sympy.polys.domains.gmpyintegerring method)": [[212, "sympy.polys.domains.GMPYIntegerRing.gcdex", false]], "gcdex() (sympy.polys.domains.integerring method)": [[212, "sympy.polys.domains.IntegerRing.gcdex", false]], "gcdex() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.gcdex", false]], "gcdex() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.gcdex", false]], "gcdex() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.gcdex", false]], "ge (in module sympy.core.relational)": [[88, "sympy.core.relational.Ge", false]], "gegenbauer (class in sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.gegenbauer", false]], "gegenbauer_poly() (in module sympy.polys.orthopolys)": [[217, "sympy.polys.orthopolys.gegenbauer_poly", false]], "gen (sympy.polys.polytools.poly property)": [[217, "sympy.polys.polytools.Poly.gen", false]], "gen (sympy.series.sequences.seqbase property)": [[227, "sympy.series.sequences.SeqBase.gen", false]], "generalizedmultivariateloggamma() (in module sympy.stats)": [[241, "sympy.stats.GeneralizedMultivariateLogGamma", false]], "generalizedmultivariateloggammaomega() (in module sympy.stats)": [[241, "sympy.stats.GeneralizedMultivariateLogGammaOmega", false]], "generalpythagorean (class in sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.GeneralPythagorean", false]], "generalsumofevenpowers (class in sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.GeneralSumOfEvenPowers", false]], "generalsumofsquares (class in sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.GeneralSumOfSquares", false]], "generate() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.generate", false]], "generate_bell() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.generate_bell", false]], "generate_derangements() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.generate_derangements", false]], "generate_dimino() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.generate_dimino", false]], "generate_gray() (sympy.combinatorics.graycode.graycode method)": [[72, "sympy.combinatorics.graycode.GrayCode.generate_gray", false]], "generate_involutions() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.generate_involutions", false]], "generate_oriented_forest() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.generate_oriented_forest", false]], "generate_schreier_sims() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.generate_schreier_sims", false]], "generator (sympy.polys.numberfields.modules.powerbasiselement property)": [[216, "sympy.polys.numberfields.modules.PowerBasisElement.generator", false]], "generator_product() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.generator_product", false]], "generators (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.generators", false]], "generators() (sympy.liealgebras.weyl_group.weylgroup method)": [[117, "sympy.liealgebras.weyl_group.WeylGroup.generators", false]], "generatorserror (class in sympy.polys.polyerrors)": [[214, "sympy.polys.polyerrors.GeneratorsError", false]], "generatorsneeded (class in sympy.polys.polyerrors)": [[214, "sympy.polys.polyerrors.GeneratorsNeeded", false]], "genocchi (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.genocchi", false]], "genocchi_poly() (in module sympy.polys.appellseqs)": [[217, "sympy.polys.appellseqs.genocchi_poly", false]], "geodesic_end_vectors() (sympy.physics.mechanics.wrapping_geometry.wrappingcylinder method)": [[159, "sympy.physics.mechanics.wrapping_geometry.WrappingCylinder.geodesic_end_vectors", false]], "geodesic_end_vectors() (sympy.physics.mechanics.wrapping_geometry.wrappinggeometrybase method)": [[159, "sympy.physics.mechanics.wrapping_geometry.WrappingGeometryBase.geodesic_end_vectors", false]], "geodesic_end_vectors() (sympy.physics.mechanics.wrapping_geometry.wrappingsphere method)": [[159, "sympy.physics.mechanics.wrapping_geometry.WrappingSphere.geodesic_end_vectors", false]], "geodesic_length() (sympy.physics.mechanics.wrapping_geometry.wrappingcylinder method)": [[159, "sympy.physics.mechanics.wrapping_geometry.WrappingCylinder.geodesic_length", false]], "geodesic_length() (sympy.physics.mechanics.wrapping_geometry.wrappinggeometrybase method)": [[159, "sympy.physics.mechanics.wrapping_geometry.WrappingGeometryBase.geodesic_length", false]], "geodesic_length() (sympy.physics.mechanics.wrapping_geometry.wrappingsphere method)": [[159, "sympy.physics.mechanics.wrapping_geometry.WrappingSphere.geodesic_length", false]], "geometric() (in module sympy.stats)": [[241, "sympy.stats.Geometric", false]], "geometric_conj_ab() (in module sympy.physics.optics.gaussopt)": [[160, "sympy.physics.optics.gaussopt.geometric_conj_ab", false]], "geometric_conj_af() (in module sympy.physics.optics.gaussopt)": [[160, "sympy.physics.optics.gaussopt.geometric_conj_af", false]], "geometric_conj_bf() (in module sympy.physics.optics.gaussopt)": [[160, "sympy.physics.optics.gaussopt.geometric_conj_bf", false]], "geometricray (class in sympy.physics.optics.gaussopt)": [[160, "sympy.physics.optics.gaussopt.GeometricRay", false]], "geometry (sympy.physics.mechanics.pathway.wrappingpathway property)": [[156, "sympy.physics.mechanics.pathway.WrappingPathway.geometry", false]], "geometryentity (class in sympy.geometry.entity)": [[99, "sympy.geometry.entity.GeometryEntity", false]], "get() (sympy.core.containers.dict method)": [[88, "sympy.core.containers.Dict.get", false]], "get_adjacency_distance() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.get_adjacency_distance", false]], "get_adjacency_matrix() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.get_adjacency_matrix", false]], "get_basis() (in module sympy.physics.quantum.represent)": [[186, "sympy.physics.quantum.represent.get_basis", false]], "get_body() (sympy.physics.mechanics.system.system method)": [[158, "sympy.physics.mechanics.system.System.get_body", false]], "get_class() (in module sympy.utilities.source)": [[263, "sympy.utilities.source.get_class", false]], "get_comm() (sympy.tensor.tensor._tensormanager method)": [[247, "sympy.tensor.tensor._TensorManager.get_comm", false]], "get_contraction_structure() (in module sympy.tensor.index_methods)": [[245, "sympy.tensor.index_methods.get_contraction_structure", false]], "get_data() (sympy.plotting.series.baseseries method)": [[207, "sympy.plotting.series.BaseSeries.get_data", false]], "get_data() (sympy.plotting.series.implicitseries method)": [[207, "sympy.plotting.series.ImplicitSeries.get_data", false]], "get_data() (sympy.plotting.series.line2dbaseseries method)": [[207, "sympy.plotting.series.Line2DBaseSeries.get_data", false]], "get_data() (sympy.plotting.series.parametricsurfaceseries method)": [[207, "sympy.plotting.series.ParametricSurfaceSeries.get_data", false]], "get_data() (sympy.plotting.series.surfaceover2drangeseries method)": [[207, "sympy.plotting.series.SurfaceOver2DRangeSeries.get_data", false]], "get_default_datatype() (in module sympy.utilities.codegen)": [[254, "sympy.utilities.codegen.get_default_datatype", false]], "get_diag_blocks() (sympy.matrices.expressions.blockmatrix.blockdiagmatrix method)": [[120, "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix.get_diag_blocks", false]], "get_diag_blocks() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.get_diag_blocks", false]], "get_domain() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.get_domain", false]], "get_exact() (sympy.polys.domains.complexfield method)": [[212, "sympy.polys.domains.ComplexField.get_exact", false]], "get_exact() (sympy.polys.domains.compositedomain.compositedomain method)": [[212, "sympy.polys.domains.compositedomain.CompositeDomain.get_exact", false]], "get_exact() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.get_exact", false]], "get_exact() (sympy.polys.domains.realfield method)": [[212, "sympy.polys.domains.RealField.get_exact", false]], "get_field() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.get_field", false]], "get_field() (sympy.polys.domains.expressiondomain method)": [[212, "sympy.polys.domains.ExpressionDomain.get_field", false]], "get_field() (sympy.polys.domains.field.field method)": [[212, "sympy.polys.domains.field.Field.get_field", false]], "get_field() (sympy.polys.domains.finitefield method)": [[212, "sympy.polys.domains.FiniteField.get_field", false]], "get_field() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.get_field", false]], "get_field() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianRationalField.get_field", false]], "get_field() (sympy.polys.domains.integerring method)": [[212, "sympy.polys.domains.IntegerRing.get_field", false]], "get_field() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.get_field", false]], "get_free_indices() (sympy.tensor.tensor.tensmul method)": [[247, "sympy.tensor.tensor.TensMul.get_free_indices", false]], "get_gen_sol_from_part_sol() (in module sympy.solvers.ode.riccati)": [[237, "sympy.solvers.ode.riccati.get_gen_sol_from_part_sol", false]], "get_indices() (in module sympy.tensor.index_methods)": [[245, "sympy.tensor.index_methods.get_indices", false]], "get_indices() (sympy.tensor.tensor.tensmul method)": [[247, "sympy.tensor.tensor.TensMul.get_indices", false]], "get_interface() (sympy.utilities.codegen.fcodegen method)": [[254, "sympy.utilities.codegen.FCodeGen.get_interface", false]], "get_joint() (sympy.physics.mechanics.system.system method)": [[158, "sympy.physics.mechanics.system.System.get_joint", false]], "get_label() (sympy.plotting.series.baseseries method)": [[207, "sympy.plotting.series.BaseSeries.get_label", false]], "get_label() (sympy.plotting.series.implicitseries method)": [[207, "sympy.plotting.series.ImplicitSeries.get_label", false]], "get_matrix() (sympy.tensor.tensor.tensexpr method)": [[247, "sympy.tensor.tensor.TensExpr.get_matrix", false]], "get_meshes() (sympy.plotting.series.parametricsurfaceseries method)": [[207, "sympy.plotting.series.ParametricSurfaceSeries.get_meshes", false]], "get_meshes() (sympy.plotting.series.surfaceover2drangeseries method)": [[207, "sympy.plotting.series.SurfaceOver2DRangeSeries.get_meshes", false]], "get_mod_func() (in module sympy.utilities.source)": [[263, "sympy.utilities.source.get_mod_func", false]], "get_modulus() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.get_modulus", false]], "get_motion_params() (in module sympy.physics.vector.functions)": [[204, "sympy.physics.vector.functions.get_motion_params", false]], "get_num_denom() (in module sympy.polys.numberfields.utilities)": [[216, "sympy.polys.numberfields.utilities.get_num_denom", false]], "get_period() (sympy.functions.special.hyper.meijerg method)": [[96, "sympy.functions.special.hyper.meijerg.get_period", false]], "get_permuted() (sympy.physics.secondquant.permutationoperator method)": [[191, "sympy.physics.secondquant.PermutationOperator.get_permuted", false]], "get_points() (sympy.plotting.series.lineover1drangeseries method)": [[207, "sympy.plotting.series.LineOver1DRangeSeries.get_points", false]], "get_positional_distance() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.get_positional_distance", false]], "get_precedence_distance() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.get_precedence_distance", false]], "get_precedence_matrix() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.get_precedence_matrix", false]], "get_prototype() (sympy.utilities.codegen.ccodegen method)": [[254, "sympy.utilities.codegen.CCodeGen.get_prototype", false]], "get_prototype() (sympy.utilities.codegen.rustcodegen method)": [[254, "sympy.utilities.codegen.RustCodeGen.get_prototype", false]], "get_ring() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.get_ring", false]], "get_ring() (sympy.polys.domains.complexfield method)": [[212, "sympy.polys.domains.ComplexField.get_ring", false]], "get_ring() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.get_ring", false]], "get_ring() (sympy.polys.domains.expressiondomain method)": [[212, "sympy.polys.domains.ExpressionDomain.get_ring", false]], "get_ring() (sympy.polys.domains.field.field method)": [[212, "sympy.polys.domains.field.Field.get_ring", false]], "get_ring() (sympy.polys.domains.fractionfield method)": [[212, "sympy.polys.domains.FractionField.get_ring", false]], "get_ring() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.get_ring", false]], "get_ring() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianRationalField.get_ring", false]], "get_ring() (sympy.polys.domains.gmpyrationalfield method)": [[212, "sympy.polys.domains.GMPYRationalField.get_ring", false]], "get_ring() (sympy.polys.domains.rationalfield method)": [[212, "sympy.polys.domains.RationalField.get_ring", false]], "get_ring() (sympy.polys.domains.realfield method)": [[212, "sympy.polys.domains.RealField.get_ring", false]], "get_ring() (sympy.polys.domains.ring.ring method)": [[212, "sympy.polys.domains.ring.Ring.get_ring", false]], "get_segments() (sympy.plotting.plot.matplotlibbackend static method)": [[207, "sympy.plotting.plot.MatplotlibBackend.get_segments", false]], "get_subno() (sympy.physics.secondquant.no method)": [[191, "sympy.physics.secondquant.NO.get_subNO", false]], "get_subset_from_bitstring() (sympy.combinatorics.graycode method)": [[72, "sympy.combinatorics.graycode.get_subset_from_bitstring", false]], "get_symmetric_group_sgs() (in module sympy.combinatorics.tensor_can)": [[84, "sympy.combinatorics.tensor_can.get_symmetric_group_sgs", false]], "get_sympy_dir() (in module sympy.testing.runtests)": [[252, "sympy.testing.runtests.get_sympy_dir", false]], "get_target_matrix() (sympy.physics.quantum.gate.gate method)": [[175, "sympy.physics.quantum.gate.Gate.get_target_matrix", false]], "get_target_matrix() (sympy.physics.quantum.gate.ugate method)": [[175, "sympy.physics.quantum.gate.UGate.get_target_matrix", false]], "get_units_non_prefixed() (sympy.physics.units.unitsystem.unitsystem method)": [[199, "sympy.physics.units.unitsystem.UnitSystem.get_units_non_prefixed", false]], "getitem() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.getitem", false]], "getn() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.getn", false]], "geto() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.getO", false]], "gf_add() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_add", false]], "gf_add_ground() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_add_ground", false]], "gf_add_mul() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_add_mul", false]], "gf_berlekamp() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_berlekamp", false]], "gf_cofactors() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_cofactors", false]], "gf_compose() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_compose", false]], "gf_compose_mod() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_compose_mod", false]], "gf_crt() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_crt", false]], "gf_crt1() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_crt1", false]], "gf_crt2() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_crt2", false]], "gf_csolve() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_csolve", false]], "gf_degree() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_degree", false]], "gf_diff() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_diff", false]], "gf_div() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_div", false]], "gf_eval() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_eval", false]], "gf_expand() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_expand", false]], "gf_exquo() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_exquo", false]], "gf_factor() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_factor", false]], "gf_factor_sqf() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_factor_sqf", false]], "gf_from_dict() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_from_dict", false]], "gf_from_int_poly() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_from_int_poly", false]], "gf_gcd() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_gcd", false]], "gf_gcdex() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_gcdex", false]], "gf_int() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_int", false]], "gf_irreducible() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_irreducible", false]], "gf_irreducible_p() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_irreducible_p", false]], "gf_lc() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_LC", false]], "gf_lcm() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_lcm", false]], "gf_lshift() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_lshift", false]], "gf_monic() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_monic", false]], "gf_mul() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_mul", false]], "gf_mul_ground() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_mul_ground", false]], "gf_multi_eval() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_multi_eval", false]], "gf_neg() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_neg", false]], "gf_normal() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_normal", false]], "gf_pow() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_pow", false]], "gf_pow_mod() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_pow_mod", false]], "gf_qbasis() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_Qbasis", false]], "gf_qmatrix() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_Qmatrix", false]], "gf_quo() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_quo", false]], "gf_quo_ground() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_quo_ground", false]], "gf_random() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_random", false]], "gf_rem() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_rem", false]], "gf_rshift() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_rshift", false]], "gf_shoup() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_shoup", false]], "gf_sqf_list() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_sqf_list", false]], "gf_sqf_p() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_sqf_p", false]], "gf_sqf_part() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_sqf_part", false]], "gf_sqr() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_sqr", false]], "gf_strip() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_strip", false]], "gf_sub() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_sub", false]], "gf_sub_ground() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_sub_ground", false]], "gf_sub_mul() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_sub_mul", false]], "gf_tc() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_TC", false]], "gf_to_dict() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_to_dict", false]], "gf_to_int_poly() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_to_int_poly", false]], "gf_trace_map() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_trace_map", false]], "gf_trunc() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_trunc", false]], "gf_value() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_value", false]], "gf_zassenhaus() (in module sympy.polys.galoistools)": [[214, "sympy.polys.galoistools.gf_zassenhaus", false]], "gff() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.gff", false]], "gff_list() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.gff_list", false]], "gff_list() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.gff_list", false]], "gff_list() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.gff_list", false]], "given() (in module sympy.stats)": [[241, "sympy.stats.given", false]], "gm_private_key() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.gm_private_key", false]], "gm_public_key() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.gm_public_key", false]], "gmpyfinitefield (class in sympy.polys.domains)": [[212, "sympy.polys.domains.GMPYFiniteField", false]], "gmpyintegerring (class in sympy.polys.domains)": [[212, "sympy.polys.domains.GMPYIntegerRing", false]], "gmpyrationalfield (class in sympy.polys.domains)": [[212, "sympy.polys.domains.GMPYRationalField", false]], "goldenratio (class in sympy.core.numbers)": [[88, "sympy.core.numbers.GoldenRatio", false]], "gompertz() (in module sympy.stats)": [[241, "sympy.stats.Gompertz", false]], "gosper_normal() (in module sympy.concrete.gosper)": [[87, "sympy.concrete.gosper.gosper_normal", false]], "gosper_sum() (in module sympy.concrete.gosper)": [[87, "sympy.concrete.gosper.gosper_sum", false]], "gosper_term() (in module sympy.concrete.gosper)": [[87, "sympy.concrete.gosper.gosper_term", false]], "goto (class in sympy.codegen.cnodes)": [[69, "sympy.codegen.cnodes.goto", false]], "goto (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.GoTo", false]], "gouy (sympy.physics.optics.gaussopt.beamparameter property)": [[160, "sympy.physics.optics.gaussopt.BeamParameter.gouy", false]], "gradedlexorder (class in sympy.polys.orderings)": [[217, "sympy.polys.orderings.GradedLexOrder", false]], "gradient() (in module sympy.physics.vector.fieldfunctions)": [[201, "sympy.physics.vector.fieldfunctions.gradient", false]], "gradient() (in module sympy.vector)": [[268, "sympy.vector.gradient", false]], "gradient() (sympy.vector.deloperator.del method)": [[265, "sympy.vector.deloperator.Del.gradient", false]], "gramschmidt() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.GramSchmidt", false]], "gray_to_bin() (sympy.combinatorics.graycode method)": [[72, "sympy.combinatorics.graycode.gray_to_bin", false]], "graycode (class in sympy.combinatorics.graycode)": [[72, "sympy.combinatorics.graycode.GrayCode", false]], "graycode_subsets() (sympy.combinatorics.graycode method)": [[72, "sympy.combinatorics.graycode.graycode_subsets", false]], "greaterthan (class in sympy.core.relational)": [[88, "sympy.core.relational.GreaterThan", false]], "greek_letters (in module sympy.printing.pretty.pretty_symbology)": [[221, "sympy.printing.pretty.pretty_symbology.greek_letters", false]], "groebner() (in module sympy.polys.groebnertools)": [[214, "sympy.polys.groebnertools.groebner", false]], "groebner() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.groebner", false]], "groebnerbasis (class in sympy.polys.polytools)": [[217, "sympy.polys.polytools.GroebnerBasis", false]], "ground_new() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.ground_new", false]], "ground_roots() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.ground_roots", false]], "ground_roots() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.ground_roots", false]], "group() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.group", false]], "group_name() (sympy.liealgebras.weyl_group.weylgroup method)": [[117, "sympy.liealgebras.weyl_group.WeylGroup.group_name", false]], "group_order() (sympy.liealgebras.weyl_group.weylgroup method)": [[117, "sympy.liealgebras.weyl_group.WeylGroup.group_order", false]], "groups_count() (in module sympy.combinatorics.group_numbers)": [[74, "sympy.combinatorics.group_numbers.groups_count", false]], "grover_iteration() (in module sympy.physics.quantum.grover)": [[176, "sympy.physics.quantum.grover.grover_iteration", false]], "gruntz() (in module sympy.series.gruntz)": [[228, "sympy.series.gruntz.gruntz", false]], "gt (in module sympy.core.relational)": [[88, "sympy.core.relational.Gt", false]], "gumbel() (in module sympy.stats)": [[241, "sympy.stats.Gumbel", false]], "h (in module sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.H", false]], "h (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.H", false]], "hadamard_product() (in module sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.hadamard_product", false]], "hadamardgate (class in sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.HadamardGate", false]], "hadamardpower (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.HadamardPower", false]], "hadamardproduct (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.HadamardProduct", false]], "half (class in sympy.core.numbers)": [[88, "sympy.core.numbers.Half", false]], "half_gcdex() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.half_gcdex", false]], "half_gcdex() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.half_gcdex", false]], "half_gcdex() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.half_gcdex", false]], "half_gcdex() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.half_gcdex", false]], "half_per() (sympy.polys.polyclasses.dmf method)": [[212, "sympy.polys.polyclasses.DMF.half_per", false]], "half_wave_retarder() (in module sympy.physics.optics.polarization)": [[163, "sympy.physics.optics.polarization.half_wave_retarder", false]], "handler (sympy.assumptions.assume.predicate attribute)": [[63, "sympy.assumptions.assume.Predicate.handler", false]], "handler (sympy.assumptions.predicates.calculus.finitepredicate attribute)": [[65, "sympy.assumptions.predicates.calculus.FinitePredicate.handler", false]], "handler (sympy.assumptions.predicates.calculus.infinitepredicate attribute)": [[65, "sympy.assumptions.predicates.calculus.InfinitePredicate.handler", false]], "handler (sympy.assumptions.predicates.common.commutativepredicate attribute)": [[65, "sympy.assumptions.predicates.common.CommutativePredicate.handler", false]], "handler (sympy.assumptions.predicates.common.istruepredicate attribute)": [[65, "sympy.assumptions.predicates.common.IsTruePredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.complexelementspredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.ComplexElementsPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.diagonalpredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.DiagonalPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.fullrankpredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.FullRankPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.integerelementspredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.IntegerElementsPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.invertiblepredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.InvertiblePredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.lowertriangularpredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.LowerTriangularPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.normalpredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.NormalPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.orthogonalpredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.OrthogonalPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.positivedefinitepredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.PositiveDefinitePredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.realelementspredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.RealElementsPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.singularpredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.SingularPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.squarepredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.SquarePredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.symmetricpredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.SymmetricPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.triangularpredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.TriangularPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.unitarypredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.UnitaryPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.unittriangularpredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.UnitTriangularPredicate.handler", false]], "handler (sympy.assumptions.predicates.matrices.uppertriangularpredicate attribute)": [[65, "sympy.assumptions.predicates.matrices.UpperTriangularPredicate.handler", false]], "handler (sympy.assumptions.predicates.ntheory.compositepredicate attribute)": [[65, "sympy.assumptions.predicates.ntheory.CompositePredicate.handler", false]], "handler (sympy.assumptions.predicates.ntheory.evenpredicate attribute)": [[65, "sympy.assumptions.predicates.ntheory.EvenPredicate.handler", false]], "handler (sympy.assumptions.predicates.ntheory.oddpredicate attribute)": [[65, "sympy.assumptions.predicates.ntheory.OddPredicate.handler", false]], "handler (sympy.assumptions.predicates.ntheory.primepredicate attribute)": [[65, "sympy.assumptions.predicates.ntheory.PrimePredicate.handler", false]], "handler (sympy.assumptions.predicates.order.negativepredicate attribute)": [[65, "sympy.assumptions.predicates.order.NegativePredicate.handler", false]], "handler (sympy.assumptions.predicates.order.nonnegativepredicate attribute)": [[65, "sympy.assumptions.predicates.order.NonNegativePredicate.handler", false]], "handler (sympy.assumptions.predicates.order.nonpositivepredicate attribute)": [[65, "sympy.assumptions.predicates.order.NonPositivePredicate.handler", false]], "handler (sympy.assumptions.predicates.order.nonzeropredicate attribute)": [[65, "sympy.assumptions.predicates.order.NonZeroPredicate.handler", false]], "handler (sympy.assumptions.predicates.order.positivepredicate attribute)": [[65, "sympy.assumptions.predicates.order.PositivePredicate.handler", false]], "handler (sympy.assumptions.predicates.order.zeropredicate attribute)": [[65, "sympy.assumptions.predicates.order.ZeroPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.algebraicpredicate attribute)": [[65, "sympy.assumptions.predicates.sets.AlgebraicPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.antihermitianpredicate attribute)": [[65, "sympy.assumptions.predicates.sets.AntihermitianPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.complexpredicate attribute)": [[65, "sympy.assumptions.predicates.sets.ComplexPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.extendedrealpredicate attribute)": [[65, "sympy.assumptions.predicates.sets.ExtendedRealPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.hermitianpredicate attribute)": [[65, "sympy.assumptions.predicates.sets.HermitianPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.imaginarypredicate attribute)": [[65, "sympy.assumptions.predicates.sets.ImaginaryPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.integerpredicate attribute)": [[65, "sympy.assumptions.predicates.sets.IntegerPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.irrationalpredicate attribute)": [[65, "sympy.assumptions.predicates.sets.IrrationalPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.rationalpredicate attribute)": [[65, "sympy.assumptions.predicates.sets.RationalPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.realpredicate attribute)": [[65, "sympy.assumptions.predicates.sets.RealPredicate.handler", false]], "handler (sympy.assumptions.predicates.sets.transcendentalpredicate attribute)": [[65, "sympy.assumptions.predicates.sets.TranscendentalPredicate.handler", false]], "hankel1 (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.hankel1", false]], "hankel2 (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.hankel2", false]], "hankel_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.hankel_transform", false]], "hankeltransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.HankelTransform", false]], "harmonic (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.harmonic", false]], "has() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.has", false]], "has() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.has", false]], "has_assoc_field (sympy.polys.domains.domain.domain attribute)": [[212, "sympy.polys.domains.domain.Domain.has_assoc_Field", false]], "has_assoc_ring (sympy.polys.domains.domain.domain attribute)": [[212, "sympy.polys.domains.domain.Domain.has_assoc_Ring", false]], "has_dups() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.has_dups", false]], "has_empty_sequence (sympy.concrete.expr_with_intlimits.exprwithintlimits property)": [[87, "sympy.concrete.expr_with_intlimits.ExprWithIntLimits.has_empty_sequence", false]], "has_finite_limits (sympy.concrete.expr_with_limits.exprwithlimits property)": [[115, "sympy.concrete.expr_with_limits.ExprWithLimits.has_finite_limits", false]], "has_free() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.has_free", false]], "has_integer_powers() (sympy.physics.units.dimensions.dimension method)": [[193, "sympy.physics.units.dimensions.Dimension.has_integer_powers", false]], "has_only_gens() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.has_only_gens", false]], "has_q_annihilators (sympy.physics.secondquant.no property)": [[191, "sympy.physics.secondquant.NO.has_q_annihilators", false]], "has_q_creators (sympy.physics.secondquant.no property)": [[191, "sympy.physics.secondquant.NO.has_q_creators", false]], "has_reversed_limits (sympy.concrete.expr_with_limits.exprwithlimits property)": [[115, "sympy.concrete.expr_with_limits.ExprWithLimits.has_reversed_limits", false]], "has_variety() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.has_variety", false]], "has_xfree() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.has_xfree", false]], "hat() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.hat", false]], "hbar (class in sympy.physics.quantum.constants)": [[173, "sympy.physics.quantum.constants.HBar", false]], "heaviside (class in sympy.functions.special.delta_functions)": [[96, "sympy.functions.special.delta_functions.Heaviside", false]], "height (sympy.categories.diagram_drawing.diagramgrid property)": [[68, "sympy.categories.diagram_drawing.DiagramGrid.height", false]], "height (sympy.physics.optics.gaussopt.geometricray property)": [[160, "sympy.physics.optics.gaussopt.GeometricRay.height", false]], "height() (sympy.polys.agca.ideals.ideal method)": [[208, "sympy.polys.agca.ideals.Ideal.height", false]], "height() (sympy.printing.pretty.stringpict.stringpict method)": [[221, "sympy.printing.pretty.stringpict.stringPict.height", false]], "hermite (class in sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.hermite", false]], "hermite() (in module sympy.stats)": [[241, "sympy.stats.Hermite", false]], "hermite_normal_form() (in module sympy.matrices.normalforms)": [[125, "sympy.matrices.normalforms.hermite_normal_form", false]], "hermite_normal_form() (in module sympy.polys.matrices.normalforms)": [[210, "sympy.polys.matrices.normalforms.hermite_normal_form", false]], "hermite_poly() (in module sympy.polys.orthopolys)": [[217, "sympy.polys.orthopolys.hermite_poly", false]], "hermite_prob (class in sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.hermite_prob", false]], "hermite_prob_poly() (in module sympy.polys.orthopolys)": [[217, "sympy.polys.orthopolys.hermite_prob_poly", false]], "hermitian": [[88, "term-hermitian", true]], "hermitianoperator (class in sympy.physics.quantum.operator)": [[180, "sympy.physics.quantum.operator.HermitianOperator", false]], "hermitianpredicate (class in sympy.assumptions.predicates.sets)": [[65, "sympy.assumptions.predicates.sets.HermitianPredicate", false]], "hessian() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.hessian", false]], "heurisch() (in module sympy.integrals.heurisch)": [[115, "sympy.integrals.heurisch.heurisch", false]], "heuristicgcdfailed (class in sympy.polys.polyerrors)": [[214, "sympy.polys.polyerrors.HeuristicGCDFailed", false]], "highest_root() (sympy.liealgebras.type_a.typea method)": [[117, "sympy.liealgebras.type_a.TypeA.highest_root", false]], "hilbertspace (class in sympy.physics.quantum.hilbert)": [[177, "sympy.physics.quantum.hilbert.HilbertSpace", false]], "hobj() (in module sympy.printing.pretty.pretty_symbology)": [[221, "sympy.printing.pretty.pretty_symbology.hobj", false]], "holonomic_constraints (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.holonomic_constraints", false]], "holonomicfunction (class in sympy.holonomic.holonomic)": [[111, "sympy.holonomic.holonomic.HolonomicFunction", false]], "holzer() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.holzer", false]], "hom() (sympy.categories.diagram method)": [[68, "sympy.categories.Diagram.hom", false]], "homogeneous_order() (in module sympy.solvers.ode)": [[237, "sympy.solvers.ode.homogeneous_order", false]], "homogeneous_order() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.homogeneous_order", false]], "homogeneous_order() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.homogeneous_order", false]], "homogeneouscoeffbest (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.HomogeneousCoeffBest", false]], "homogeneouscoeffsubsdepdivindep (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.HomogeneousCoeffSubsDepDivIndep", false]], "homogeneouscoeffsubsindepdivdep (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.HomogeneousCoeffSubsIndepDivDep", false]], "homogeneousgeneralquadratic (class in sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.HomogeneousGeneralQuadratic", false]], "homogeneousternaryquadratic (class in sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.HomogeneousTernaryQuadratic", false]], "homogeneousternaryquadraticnormal (class in sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.HomogeneousTernaryQuadraticNormal", false]], "homogenize() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.homogenize", false]], "homogenize() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.homogenize", false]], "homomorphism() (in module sympy.polys.agca.homomorphisms)": [[208, "sympy.polys.agca.homomorphisms.homomorphism", false]], "homomorphismfailed (class in sympy.polys.polyerrors)": [[214, "sympy.polys.polyerrors.HomomorphismFailed", false]], "horner() (in module sympy.polys.polyfuncs)": [[217, "sympy.polys.polyfuncs.horner", false]], "hradius (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.hradius", false]], "hstack() (sympy.matrices.matrixbase.matrixbase class method)": [[124, "sympy.matrices.matrixbase.MatrixBase.hstack", false]], "hstack() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.hstack", false]], "hstack() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.hstack", false]], "hstack() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.hstack", false]], "hstack() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.hstack", false]], "hyper (class in sympy.functions.special.hyper)": [[96, "sympy.functions.special.hyper.hyper", false]], "hyper_algorithm() (in module sympy.series.formal)": [[223, "sympy.series.formal.hyper_algorithm", false]], "hyper_re() (in module sympy.series.formal)": [[223, "sympy.series.formal.hyper_re", false]], "hyperbolicfunction (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.HyperbolicFunction", false]], "hyperexpand() (in module sympy.simplify.hyperexpand)": [[233, "sympy.simplify.hyperexpand.hyperexpand", false]], "hyperfocal_distance() (in module sympy.physics.optics.utils)": [[164, "sympy.physics.optics.utils.hyperfocal_distance", false]], "hypergeometric() (in module sympy.stats)": [[241, "sympy.stats.Hypergeometric", false]], "hypersimilar() (in module sympy.simplify.simplify)": [[233, "sympy.simplify.simplify.hypersimilar", false]], "hypersimp() (in module sympy.simplify.simplify)": [[233, "sympy.simplify.simplify.hypersimp", false]], "hypot (class in sympy.codegen.cfunctions)": [[69, "sympy.codegen.cfunctions.hypot", false]], "ibin() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.ibin", false]], "ideal (class in sympy.polys.agca.ideals)": [[208, "sympy.polys.agca.ideals.Ideal", false]], "ideal() (sympy.polys.domains.ring.ring method)": [[212, "sympy.polys.domains.ring.Ring.ideal", false]], "identity (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.Identity", false]], "identity (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.identity", false]], "identity_hom() (sympy.polys.agca.modules.freemodule method)": [[208, "sympy.polys.agca.modules.FreeModule.identity_hom", false]], "identity_hom() (sympy.polys.agca.modules.module method)": [[208, "sympy.polys.agca.modules.Module.identity_hom", false]], "identity_hom() (sympy.polys.agca.modules.quotientmodule method)": [[208, "sympy.polys.agca.modules.QuotientModule.identity_hom", false]], "identity_hom() (sympy.polys.agca.modules.submodule method)": [[208, "sympy.polys.agca.modules.SubModule.identity_hom", false]], "identityfunction (class in sympy.functions.elementary.miscellaneous)": [[94, "sympy.functions.elementary.miscellaneous.IdentityFunction", false]], "identitygate (class in sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.IdentityGate", false]], "identitymorphism (class in sympy.categories)": [[68, "sympy.categories.IdentityMorphism", false]], "identityoperator (class in sympy.physics.quantum.operator)": [[180, "sympy.physics.quantum.operator.IdentityOperator", false]], "idiff() (in module sympy.geometry.util)": [[105, "sympy.geometry.util.idiff", false]], "idx (class in sympy.tensor.indexed)": [[246, "sympy.tensor.indexed.Idx", false]], "ifft() (in module sympy.discrete.transforms)": [[91, "sympy.discrete.transforms.ifft", false]], "ifwht() (in module sympy.discrete.transforms)": [[91, "sympy.discrete.transforms.ifwht", false]], "igcd() (in module sympy.core.intfunc)": [[88, "sympy.core.intfunc.igcd", false]], "igcd_lehmer() (in module sympy.core.intfunc)": [[88, "sympy.core.intfunc.igcd_lehmer", false]], "igcdex() (in module sympy.core.intfunc)": [[88, "sympy.core.intfunc.igcdex", false]], "ignore_warnings() (in module sympy.utilities.exceptions)": [[257, "sympy.utilities.exceptions.ignore_warnings", false]], "ilcm() (in module sympy.core.intfunc)": [[88, "sympy.core.intfunc.ilcm", false]], "ild_deflection_jumps (sympy.physics.continuum_mechanics.beam.beam property)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.ild_deflection_jumps", false]], "ild_moment (sympy.physics.continuum_mechanics.beam.beam property)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.ild_moment", false]], "ild_reactions (sympy.physics.continuum_mechanics.beam.beam property)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.ild_reactions", false]], "ild_rotation_jumps (sympy.physics.continuum_mechanics.beam.beam property)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.ild_rotation_jumps", false]], "ild_shear (sympy.physics.continuum_mechanics.beam.beam property)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.ild_shear", false]], "im (class in sympy.functions.elementary.complexes)": [[94, "sympy.functions.elementary.complexes.im", false]], "image() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[208, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.image", false]], "imageset (class in sympy.sets.fancysets)": [[229, "sympy.sets.fancysets.ImageSet", false]], "imageset() (in module sympy.sets.sets)": [[229, "sympy.sets.sets.imageset", false]], "imaginary": [[88, "term-imaginary", true]], "imaginarypredicate (class in sympy.assumptions.predicates.sets)": [[65, "sympy.assumptions.predicates.sets.ImaginaryPredicate", false]], "imaginaryunit (class in sympy.core.numbers)": [[88, "sympy.core.numbers.ImaginaryUnit", false]], "immutable": [[15, "term-Immutable", true]], "immutabledensematrix (class in sympy.matrices.immutable)": [[121, "sympy.matrices.immutable.ImmutableDenseMatrix", false]], "immutabledensendimarray (class in sympy.tensor.array)": [[242, "sympy.tensor.array.ImmutableDenseNDimArray", false]], "immutablematrix (in module sympy.matrices.immutable)": [[121, "sympy.matrices.immutable.ImmutableMatrix", false]], "immutablesparsematrix (class in sympy.matrices.immutable)": [[126, "sympy.matrices.immutable.ImmutableSparseMatrix", false]], "immutablesparsendimarray (class in sympy.tensor.array)": [[242, "sympy.tensor.array.ImmutableSparseNDimArray", false]], "implemented_function() (in module sympy.utilities.lambdify)": [[260, "sympy.utilities.lambdify.implemented_function", false]], "implicit_application() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.implicit_application", false]], "implicit_multiplication() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.implicit_multiplication", false]], "implicit_multiplication_application() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.implicit_multiplication_application", false]], "implicitregion (class in sympy.vector.implicitregion)": [[265, "sympy.vector.implicitregion.ImplicitRegion", false]], "implicitseries (class in sympy.plotting.series)": [[207, "sympy.plotting.series.ImplicitSeries", false]], "implieddoloop (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.ImpliedDoLoop", false]], "implies (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.Implies", false]], "impulse_response_numerical_data() (sympy.physics.control.control_plots method)": [[142, "sympy.physics.control.control_plots.impulse_response_numerical_data", false]], "impulse_response_plot() (sympy.physics.control.control_plots method)": [[142, "sympy.physics.control.control_plots.impulse_response_plot", false]], "imul_num() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.imul_num", false]], "in_terms_of_generators() (sympy.polys.agca.modules.submodule method)": [[208, "sympy.polys.agca.modules.SubModule.in_terms_of_generators", false]], "incenter (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.incenter", false]], "incircle (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.incircle", false]], "incircle (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.incircle", false]], "inclusion_hom() (sympy.polys.agca.modules.submodule method)": [[208, "sympy.polys.agca.modules.SubModule.inclusion_hom", false]], "indent_code() (sympy.printing.c.c89codeprinter method)": [[221, "sympy.printing.c.C89CodePrinter.indent_code", false]], "indent_code() (sympy.printing.fortran.fcodeprinter method)": [[221, "sympy.printing.fortran.FCodePrinter.indent_code", false]], "indent_code() (sympy.printing.jscode.javascriptcodeprinter method)": [[221, "sympy.printing.jscode.JavascriptCodePrinter.indent_code", false]], "indent_code() (sympy.printing.julia.juliacodeprinter method)": [[221, "sympy.printing.julia.JuliaCodePrinter.indent_code", false]], "indent_code() (sympy.printing.octave.octavecodeprinter method)": [[221, "sympy.printing.octave.OctaveCodePrinter.indent_code", false]], "indent_code() (sympy.printing.rcode.rcodeprinter method)": [[221, "sympy.printing.rcode.RCodePrinter.indent_code", false]], "indent_code() (sympy.printing.rust.rustcodeprinter method)": [[221, "sympy.printing.rust.RustCodePrinter.indent_code", false]], "index() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.index", false]], "index() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.index", false]], "index() (sympy.concrete.expr_with_intlimits.exprwithintlimits method)": [[87, "sympy.concrete.expr_with_intlimits.ExprWithIntLimits.index", false]], "index() (sympy.core.containers.tuple method)": [[88, "sympy.core.containers.Tuple.index", false]], "index() (sympy.physics.secondquant.fixedbosonicbasis method)": [[191, "sympy.physics.secondquant.FixedBosonicBasis.index", false]], "index() (sympy.physics.secondquant.varbosonicbasis method)": [[191, "sympy.physics.secondquant.VarBosonicBasis.index", false]], "index() (sympy.polys.rings.polyring method)": [[212, "sympy.polys.rings.PolyRing.index", false]], "index_vector() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.index_vector", false]], "indexed (class in sympy.tensor.indexed)": [[246, "sympy.tensor.indexed.Indexed", false]], "indexedbase (class in sympy.tensor.indexed)": [[246, "sympy.tensor.indexed.IndexedBase", false]], "indices (sympy.tensor.indexed.indexed property)": [[246, "sympy.tensor.indexed.Indexed.indices", false]], "indices_contain_equal_information (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[96, "sympy.functions.special.tensor_functions.KroneckerDelta.indices_contain_equal_information", false]], "indices_contain_equal_information (sympy.physics.secondquant.kroneckerdelta property)": [[191, "sympy.physics.secondquant.KroneckerDelta.indices_contain_equal_information", false]], "inertia (class in sympy.physics.mechanics.inertia)": [[155, "sympy.physics.mechanics.inertia.Inertia", false]], "inertia (sympy.physics.mechanics.body.body property)": [[149, "sympy.physics.mechanics.body.Body.inertia", false]], "inertia (sympy.physics.mechanics.rigidbody.rigidbody property)": [[155, "sympy.physics.mechanics.rigidbody.RigidBody.inertia", false]], "inertia() (in module sympy.physics.mechanics.inertia)": [[155, "sympy.physics.mechanics.inertia.inertia", false]], "inertia_of_point_mass() (in module sympy.physics.mechanics.inertia)": [[155, "sympy.physics.mechanics.inertia.inertia_of_point_mass", false]], "inf (sympy.sets.sets.set property)": [[229, "sympy.sets.sets.Set.inf", false]], "infinite": [[88, "term-infinite", true]], "infinite (sympy.series.formal.formalpowerseries property)": [[223, "sympy.series.formal.FormalPowerSeries.infinite", false]], "infinitepredicate (class in sympy.assumptions.predicates.calculus)": [[65, "sympy.assumptions.predicates.calculus.InfinitePredicate", false]], "infinitesimals() (in module sympy.solvers.ode)": [[237, "sympy.solvers.ode.infinitesimals", false]], "infinity (class in sympy.core.numbers)": [[88, "sympy.core.numbers.Infinity", false]], "inhomogeneousgeneralquadratic (class in sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.InhomogeneousGeneralQuadratic", false]], "inhomogeneousternaryquadratic (class in sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.InhomogeneousTernaryQuadratic", false]], "init_ipython_session() (in module sympy.interactive.session)": [[116, "sympy.interactive.session.init_ipython_session", false]], "init_printing() (in module sympy.interactive.printing)": [[116, "sympy.interactive.printing.init_printing", false]], "init_python_session() (in module sympy.interactive.session)": [[116, "sympy.interactive.session.init_python_session", false]], "init_session() (in module sympy.interactive.session)": [[116, "sympy.interactive.session.init_session", false]], "init_vprinting() (in module sympy.physics.vector.printing)": [[205, "sympy.physics.vector.printing.init_vprinting", false]], "initial (sympy.series.sequences.recursiveseq property)": [[227, "sympy.series.sequences.RecursiveSeq.initial", false]], "inject() (sympy.polys.domains.compositedomain.compositedomain method)": [[212, "sympy.polys.domains.compositedomain.CompositeDomain.inject", false]], "inject() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.inject", false]], "inject() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianDomain.inject", false]], "inject() (sympy.polys.domains.simpledomain.simpledomain method)": [[212, "sympy.polys.domains.simpledomain.SimpleDomain.inject", false]], "inject() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.inject", false]], "inject() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.inject", false]], "inner_endomorphism() (sympy.polys.numberfields.modules.endomorphismring method)": [[216, "sympy.polys.numberfields.modules.EndomorphismRing.inner_endomorphism", false]], "innerendomorphism (class in sympy.polys.numberfields.modules)": [[216, "sympy.polys.numberfields.modules.InnerEndomorphism", false]], "innerproduct (class in sympy.physics.quantum.innerproduct)": [[179, "sympy.physics.quantum.innerproduct.InnerProduct", false]], "innerproduct (class in sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.InnerProduct", false]], "input_vars (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.input_vars", false]], "input_vars (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.input_vars", false]], "input_vars (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[131, "sympy.physics.biomechanics.activation.ZerothOrderActivation.input_vars", false]], "input_vars (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.input_vars", false]], "inradius (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.inradius", false]], "inradius (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.inradius", false]], "int_to_integer() (in module sympy.interactive.session)": [[116, "sympy.interactive.session.int_to_Integer", false]], "intbasetype (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.IntBaseType", false]], "intcurve_diffequ() (in module sympy.diffgeom)": [[90, "sympy.diffgeom.intcurve_diffequ", false]], "intcurve_series() (in module sympy.diffgeom)": [[90, "sympy.diffgeom.intcurve_series", false]], "integer": [[88, "term-integer", true]], "integer (class in sympy.core.numbers)": [[88, "sympy.core.numbers.Integer", false]], "integer_log() (in module sympy.core.intfunc)": [[88, "sympy.core.intfunc.integer_log", false]], "integer_nthroot() (in module sympy.core.intfunc)": [[88, "sympy.core.intfunc.integer_nthroot", false]], "integer_to_term() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.integer_to_term", false]], "integerelementspredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.IntegerElementsPredicate", false]], "integerpartition (class in sympy.combinatorics.partitions)": [[77, "sympy.combinatorics.partitions.IntegerPartition", false]], "integerpredicate (class in sympy.assumptions.predicates.sets)": [[65, "sympy.assumptions.predicates.sets.IntegerPredicate", false]], "integerring (class in sympy.polys.domains)": [[212, "sympy.polys.domains.IntegerRing", false]], "integers (class in sympy.sets.fancysets)": [[229, "sympy.sets.fancysets.Integers", false]], "integral (class in sympy.integrals.integrals)": [[115, "sympy.integrals.integrals.Integral", false]], "integral.is_commutative (in module sympy.integrals.integrals)": [[115, "sympy.integrals.integrals.Integral.is_commutative", false]], "integral_basis() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.integral_basis", false]], "integral_steps() (in module sympy.integrals.manualintegrate)": [[115, "sympy.integrals.manualintegrate.integral_steps", false]], "integraltransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.IntegralTransform", false]], "integraltransformerror": [[115, "sympy.integrals.transforms.IntegralTransformError", false]], "integrand() (sympy.functions.special.hyper.meijerg method)": [[96, "sympy.functions.special.hyper.meijerg.integrand", false]], "integrate() (in module sympy.integrals.integrals)": [[115, "sympy.integrals.integrals.integrate", false]], "integrate() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.integrate", false]], "integrate() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.integrate", false]], "integrate() (sympy.core.relational.equality method)": [[88, "sympy.core.relational.Equality.integrate", false]], "integrate() (sympy.holonomic.holonomic.holonomicfunction method)": [[110, "sympy.holonomic.holonomic.HolonomicFunction.integrate", false]], "integrate() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.integrate", false]], "integrate() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.integrate", false]], "integrate() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.integrate", false]], "integrate() (sympy.series.formal.formalpowerseries method)": [[223, "sympy.series.formal.FormalPowerSeries.integrate", false]], "integrate_result() (in module sympy.physics.quantum.represent)": [[186, "sympy.physics.quantum.represent.integrate_result", false]], "interactive": [[15, "term-Interactive", true]], "interior (sympy.sets.sets.set property)": [[229, "sympy.sets.sets.Set.interior", false]], "interior_angle (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.interior_angle", false]], "internal_forces (sympy.physics.continuum_mechanics.truss.truss property)": [[140, "sympy.physics.continuum_mechanics.truss.Truss.internal_forces", false]], "interpolate() (in module sympy.polys.polyfuncs)": [[217, "sympy.polys.polyfuncs.interpolate", false]], "interpolating_poly() (in module sympy.polys.specialpolys)": [[217, "sympy.polys.specialpolys.interpolating_poly", false]], "interpolating_spline() (in module sympy.functions.special.bsplines)": [[96, "sympy.functions.special.bsplines.interpolating_spline", false]], "intersect() (sympy.polys.agca.ideals.ideal method)": [[208, "sympy.polys.agca.ideals.Ideal.intersect", false]], "intersect() (sympy.polys.agca.modules.submodule method)": [[208, "sympy.polys.agca.modules.SubModule.intersect", false]], "intersect() (sympy.sets.sets.set method)": [[229, "sympy.sets.sets.Set.intersect", false]], "intersecting_product() (in module sympy.discrete.convolutions)": [[91, "sympy.discrete.convolutions.intersecting_product", false]], "intersection (class in sympy.sets.sets)": [[229, "sympy.sets.sets.Intersection", false]], "intersection() (in module sympy.geometry.util)": [[105, "sympy.geometry.util.intersection", false]], "intersection() (sympy.geometry.ellipse.circle method)": [[98, "sympy.geometry.ellipse.Circle.intersection", false]], "intersection() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.intersection", false]], "intersection() (sympy.geometry.entity.geometryentity method)": [[99, "sympy.geometry.entity.GeometryEntity.intersection", false]], "intersection() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.intersection", false]], "intersection() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.intersection", false]], "intersection() (sympy.geometry.point.point method)": [[103, "sympy.geometry.point.Point.intersection", false]], "intersection() (sympy.geometry.point.point3d method)": [[103, "sympy.geometry.point.Point3D.intersection", false]], "intersection() (sympy.geometry.polygon.polygon method)": [[104, "sympy.geometry.polygon.Polygon.intersection", false]], "intersection() (sympy.sets.sets.set method)": [[229, "sympy.sets.sets.Set.intersection", false]], "interval (class in sympy.sets.sets)": [[229, "sympy.sets.sets.Interval", false]], "interval (sympy.series.sequences.recursiveseq property)": [[227, "sympy.series.sequences.RecursiveSeq.interval", false]], "interval (sympy.series.sequences.seqbase property)": [[227, "sympy.series.sequences.SeqBase.interval", false]], "intervals() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.intervals", false]], "intervals() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.intervals", false]], "intervals() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.intervals", false]], "intqubit (class in sympy.physics.quantum.qubit)": [[185, "sympy.physics.quantum.qubit.IntQubit", false]], "intqubitbra (class in sympy.physics.quantum.qubit)": [[185, "sympy.physics.quantum.qubit.IntQubitBra", false]], "intt() (in module sympy.discrete.transforms)": [[91, "sympy.discrete.transforms.intt", false]], "inv() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.inv", false]], "inv() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.inv", false]], "inv() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.inv", false]], "inv() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.inv", false]], "inv() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.inv", false]], "inv_can_transf_matrix (sympy.physics.units.dimensions.dimensionsystem property)": [[193, "sympy.physics.units.dimensions.DimensionSystem.inv_can_transf_matrix", false]], "inv_den() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.inv_den", false]], "inverse (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.Inverse", false]], "inverse() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.inverse", false]], "inverse() (sympy.functions.elementary.exponential.log method)": [[94, "sympy.functions.elementary.exponential.log.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.acosh method)": [[94, "sympy.functions.elementary.hyperbolic.acosh.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.acoth method)": [[94, "sympy.functions.elementary.hyperbolic.acoth.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.acsch method)": [[94, "sympy.functions.elementary.hyperbolic.acsch.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.asech method)": [[94, "sympy.functions.elementary.hyperbolic.asech.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.asinh method)": [[94, "sympy.functions.elementary.hyperbolic.asinh.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.atanh method)": [[94, "sympy.functions.elementary.hyperbolic.atanh.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.coth method)": [[94, "sympy.functions.elementary.hyperbolic.coth.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.sinh method)": [[94, "sympy.functions.elementary.hyperbolic.sinh.inverse", false]], "inverse() (sympy.functions.elementary.hyperbolic.tanh method)": [[94, "sympy.functions.elementary.hyperbolic.tanh.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.acos method)": [[94, "sympy.functions.elementary.trigonometric.acos.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.acot method)": [[94, "sympy.functions.elementary.trigonometric.acot.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.acsc method)": [[94, "sympy.functions.elementary.trigonometric.acsc.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.asec method)": [[94, "sympy.functions.elementary.trigonometric.asec.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.asin method)": [[94, "sympy.functions.elementary.trigonometric.asin.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.atan method)": [[94, "sympy.functions.elementary.trigonometric.atan.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.cot method)": [[94, "sympy.functions.elementary.trigonometric.cot.inverse", false]], "inverse() (sympy.functions.elementary.trigonometric.tan method)": [[94, "sympy.functions.elementary.trigonometric.tan.inverse", false]], "inverse() (sympy.functions.special.error_functions.erf method)": [[96, "sympy.functions.special.error_functions.erf.inverse", false]], "inverse() (sympy.functions.special.error_functions.erfc method)": [[96, "sympy.functions.special.error_functions.erfc.inverse", false]], "inverse() (sympy.functions.special.error_functions.erfcinv method)": [[96, "sympy.functions.special.error_functions.erfcinv.inverse", false]], "inverse() (sympy.functions.special.error_functions.erfinv method)": [[96, "sympy.functions.special.error_functions.erfinv.inverse", false]], "inverse() (sympy.physics.biomechanics.curve.fiberforcelengthpassivedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveDeGroote2016.inverse", false]], "inverse() (sympy.physics.biomechanics.curve.fiberforcelengthpassiveinversedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveInverseDeGroote2016.inverse", false]], "inverse() (sympy.physics.biomechanics.curve.fiberforcevelocitydegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceVelocityDeGroote2016.inverse", false]], "inverse() (sympy.physics.biomechanics.curve.fiberforcevelocityinversedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.FiberForceVelocityInverseDeGroote2016.inverse", false]], "inverse() (sympy.physics.biomechanics.curve.tendonforcelengthdegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.TendonForceLengthDeGroote2016.inverse", false]], "inverse() (sympy.physics.biomechanics.curve.tendonforcelengthinversedegroote2016 method)": [[132, "sympy.physics.biomechanics.curve.TendonForceLengthInverseDeGroote2016.inverse", false]], "inverse() (sympy.polys.agca.extensions.extensionelement method)": [[208, "sympy.polys.agca.extensions.ExtensionElement.inverse", false]], "inverse() (sympy.series.formal.formalpowerseries method)": [[223, "sympy.series.formal.FormalPowerSeries.inverse", false]], "inverse_adj() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.inverse_ADJ", false]], "inverse_block() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.inverse_BLOCK", false]], "inverse_ch() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.inverse_CH", false]], "inverse_cosine_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.inverse_cosine_transform", false]], "inverse_fourier_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.inverse_fourier_transform", false]], "inverse_ge() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.inverse_GE", false]], "inverse_hankel_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.inverse_hankel_transform", false]], "inverse_laplace_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.inverse_laplace_transform", false]], "inverse_ldl() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.inverse_LDL", false]], "inverse_lu() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.inverse_LU", false]], "inverse_mellin_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.inverse_mellin_transform", false]], "inverse_mobius_transform() (in module sympy.discrete.transforms)": [[91, "sympy.discrete.transforms.inverse_mobius_transform", false]], "inverse_qr() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.inverse_QR", false]], "inverse_sine_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.inverse_sine_transform", false]], "inversecosinetransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.InverseCosineTransform", false]], "inversefouriertransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.InverseFourierTransform", false]], "inversehankeltransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.InverseHankelTransform", false]], "inverselaplacetransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.InverseLaplaceTransform", false]], "inversemellintransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.InverseMellinTransform", false]], "inversesinetransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.InverseSineTransform", false]], "inversion_vector() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.inversion_vector", false]], "inversions() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.inversions", false]], "invert() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.invert", false]], "invert() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.invert", false]], "invert() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.invert", false]], "invert() (sympy.polys.domains.ring.ring method)": [[212, "sympy.polys.domains.ring.Ring.invert", false]], "invert() (sympy.polys.polyclasses.dmf method)": [[212, "sympy.polys.polyclasses.DMF.invert", false]], "invert() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.invert", false]], "invert() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.invert", false]], "invert_complex() (in module sympy.solvers.solveset)": [[240, "sympy.solvers.solveset.invert_complex", false]], "invert_real() (in module sympy.solvers.solveset)": [[240, "sympy.solvers.solveset.invert_real", false]], "invertiblepredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.InvertiblePredicate", false]], "iproduct() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.iproduct", false]], "iqft (class in sympy.physics.quantum.qft)": [[184, "sympy.physics.quantum.qft.IQFT", false]], "irrational": [[88, "term-irrational", true]], "irrationalpredicate (class in sympy.assumptions.predicates.sets)": [[65, "sympy.assumptions.predicates.sets.IrrationalPredicate", false]], "irregular() (sympy.matrices.matrixbase.matrixbase class method)": [[124, "sympy.matrices.matrixbase.MatrixBase.irregular", false]], "is_*": [[15, "term-is_", true]], "is_abelian (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_abelian", false]], "is_abelian_number() (in module sympy.combinatorics.group_numbers)": [[74, "sympy.combinatorics.group_numbers.is_abelian_number", false]], "is_above_fermi (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[96, "sympy.functions.special.tensor_functions.KroneckerDelta.is_above_fermi", false]], "is_above_fermi (sympy.physics.secondquant.kroneckerdelta property)": [[191, "sympy.physics.secondquant.KroneckerDelta.is_above_fermi", false]], "is_absolutely_convergent() (sympy.concrete.summations.sum method)": [[87, "sympy.concrete.summations.Sum.is_absolutely_convergent", false]], "is_abundant() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.is_abundant", false]], "is_algebraic_expr() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.is_algebraic_expr", false]], "is_aliased (sympy.core.numbers.algebraicnumber property)": [[88, "sympy.core.numbers.AlgebraicNumber.is_aliased", false]], "is_alt_sym() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_alt_sym", false]], "is_alternating (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_alternating", false]], "is_amicable() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.is_amicable", false]], "is_anf() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.is_anf", false]], "is_anti_symmetric() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_anti_symmetric", false]], "is_below_fermi (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[96, "sympy.functions.special.tensor_functions.KroneckerDelta.is_below_fermi", false]], "is_below_fermi (sympy.physics.secondquant.kroneckerdelta property)": [[191, "sympy.physics.secondquant.KroneckerDelta.is_below_fermi", false]], "is_biproper (sympy.physics.control.lti.parallel property)": [[144, "sympy.physics.control.lti.Parallel.is_biproper", false]], "is_biproper (sympy.physics.control.lti.series property)": [[144, "sympy.physics.control.lti.Series.is_biproper", false]], "is_biproper (sympy.physics.control.lti.transferfunction property)": [[144, "sympy.physics.control.lti.TransferFunction.is_biproper", false]], "is_carmichael() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.is_carmichael", false]], "is_closed (sympy.sets.sets.set property)": [[229, "sympy.sets.sets.Set.is_closed", false]], "is_cnf() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.is_cnf", false]], "is_collinear() (sympy.geometry.point.point method)": [[103, "sympy.geometry.point.Point.is_collinear", false]], "is_commutative (sympy.physics.quantum.state.wavefunction property)": [[189, "sympy.physics.quantum.state.Wavefunction.is_commutative", false]], "is_comparable (sympy.core.basic.basic property)": [[88, "sympy.core.basic.Basic.is_comparable", false]], "is_compat() (sympy.polys.numberfields.modules.moduleelement method)": [[216, "sympy.polys.numberfields.modules.ModuleElement.is_compat", false]], "is_compat_col() (sympy.polys.numberfields.modules.module method)": [[216, "sympy.polys.numberfields.modules.Module.is_compat_col", false]], "is_concyclic() (sympy.geometry.point.point method)": [[103, "sympy.geometry.point.Point.is_concyclic", false]], "is_conservative() (in module sympy.physics.vector.fieldfunctions)": [[201, "sympy.physics.vector.fieldfunctions.is_conservative", false]], "is_conservative() (in module sympy.vector)": [[268, "sympy.vector.is_conservative", false]], "is_consistent (sympy.physics.units.dimensions.dimensionsystem property)": [[193, "sympy.physics.units.dimensions.DimensionSystem.is_consistent", false]], "is_consistent (sympy.physics.units.unitsystem.unitsystem property)": [[199, "sympy.physics.units.unitsystem.UnitSystem.is_consistent", false]], "is_constant() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.is_constant", false]], "is_convergent() (sympy.concrete.products.product method)": [[87, "sympy.concrete.products.Product.is_convergent", false]], "is_convergent() (sympy.concrete.summations.sum method)": [[87, "sympy.concrete.summations.Sum.is_convergent", false]], "is_convex() (in module sympy.calculus.util)": [[67, "sympy.calculus.util.is_convex", false]], "is_convex() (sympy.geometry.polygon.polygon method)": [[104, "sympy.geometry.polygon.Polygon.is_convex", false]], "is_coplanar() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.is_coplanar", false]], "is_cyclic (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_cyclic", false]], "is_cyclic_number() (in module sympy.combinatorics.group_numbers)": [[74, "sympy.combinatorics.group_numbers.is_cyclic_number", false]], "is_cyclotomic (sympy.polys.polyclasses.dmp property)": [[212, "sympy.polys.polyclasses.DMP.is_cyclotomic", false]], "is_cyclotomic (sympy.polys.polytools.poly property)": [[217, "sympy.polys.polytools.Poly.is_cyclotomic", false]], "is_decreasing() (in module sympy.calculus.singularities)": [[67, "sympy.calculus.singularities.is_decreasing", false]], "is_deficient() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.is_deficient", false]], "is_diagonal (sympy.polys.matrices.domainmatrix.domainmatrix property)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.is_diagonal", false]], "is_diagonal() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_diagonal", false]], "is_diagonal() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.is_diagonal", false]], "is_diagonal() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.is_diagonal", false]], "is_diagonal() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.is_diagonal", false]], "is_diagonalizable() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_diagonalizable", false]], "is_dihedral (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_dihedral", false]], "is_dimensionless() (sympy.physics.units.dimensions.dimensionsystem method)": [[193, "sympy.physics.units.dimensions.DimensionSystem.is_dimensionless", false]], "is_disjoint() (sympy.sets.sets.set method)": [[229, "sympy.sets.sets.Set.is_disjoint", false]], "is_dnf() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.is_dnf", false]], "is_echelon (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_echelon", false]], "is_elementary() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_elementary", false]], "is_empty (sympy.combinatorics.permutations.permutation property)": [[80, "sympy.combinatorics.permutations.Permutation.is_Empty", false]], "is_equilateral() (sympy.geometry.polygon.triangle method)": [[104, "sympy.geometry.polygon.Triangle.is_equilateral", false]], "is_euler_jacobi_pseudoprime() (in module sympy.ntheory.primetest)": [[128, "sympy.ntheory.primetest.is_euler_jacobi_pseudoprime", false]], "is_euler_pseudoprime() (in module sympy.ntheory.primetest)": [[128, "sympy.ntheory.primetest.is_euler_pseudoprime", false]], "is_even (sympy.combinatorics.permutations.permutation property)": [[80, "sympy.combinatorics.permutations.Permutation.is_even", false]], "is_exact (sympy.polys.domains.compositedomain.compositedomain property)": [[212, "sympy.polys.domains.compositedomain.CompositeDomain.is_Exact", false]], "is_extra_strong_lucas_prp() (in module sympy.ntheory.primetest)": [[128, "sympy.ntheory.primetest.is_extra_strong_lucas_prp", false]], "is_fermat_pseudoprime() (in module sympy.ntheory.primetest)": [[128, "sympy.ntheory.primetest.is_fermat_pseudoprime", false]], "is_field (sympy.polys.domains.domain.domain attribute)": [[212, "sympy.polys.domains.domain.Domain.is_Field", false]], "is_full_module() (sympy.polys.agca.modules.submodule method)": [[208, "sympy.polys.agca.modules.SubModule.is_full_module", false]], "is_full_module() (sympy.polys.agca.modules.subquotientmodule method)": [[208, "sympy.polys.agca.modules.SubQuotientModule.is_full_module", false]], "is_gaussian_prime() (in module sympy.ntheory.primetest)": [[128, "sympy.ntheory.primetest.is_gaussian_prime", false]], "is_groebner() (in module sympy.polys.groebnertools)": [[214, "sympy.polys.groebnertools.is_groebner", false]], "is_ground (sympy.polys.polyclasses.anp property)": [[212, "sympy.polys.polyclasses.ANP.is_ground", false]], "is_ground (sympy.polys.polyclasses.dmp property)": [[212, "sympy.polys.polyclasses.DMP.is_ground", false]], "is_ground (sympy.polys.polytools.poly property)": [[217, "sympy.polys.polytools.Poly.is_ground", false]], "is_hermitian (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_hermitian", false]], "is_homogeneous (sympy.polys.polyclasses.dmp property)": [[212, "sympy.polys.polyclasses.DMP.is_homogeneous", false]], "is_homogeneous (sympy.polys.polytools.poly property)": [[217, "sympy.polys.polytools.Poly.is_homogeneous", false]], "is_identity (sympy.combinatorics.permutations.permutation property)": [[80, "sympy.combinatorics.permutations.Permutation.is_Identity", false]], "is_identity (sympy.core.function.lambda property)": [[88, "sympy.core.function.Lambda.is_identity", false]], "is_increasing() (in module sympy.calculus.singularities)": [[67, "sympy.calculus.singularities.is_increasing", false]], "is_indefinite (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_indefinite", false]], "is_inert (sympy.polys.numberfields.primes.primeideal property)": [[216, "sympy.polys.numberfields.primes.PrimeIdeal.is_inert", false]], "is_injective() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[208, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.is_injective", false]], "is_int() (in module sympy.polys.numberfields.utilities)": [[216, "sympy.polys.numberfields.utilities.is_int", false]], "is_irreducible (sympy.polys.polyclasses.dmp property)": [[212, "sympy.polys.polyclasses.DMP.is_irreducible", false]], "is_irreducible (sympy.polys.polytools.poly property)": [[217, "sympy.polys.polytools.Poly.is_irreducible", false]], "is_isomorphism() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[208, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.is_isomorphism", false]], "is_isosceles() (sympy.geometry.polygon.triangle method)": [[104, "sympy.geometry.polygon.Triangle.is_isosceles", false]], "is_iterable (sympy.sets.sets.productset property)": [[229, "sympy.sets.sets.ProductSet.is_iterable", false]], "is_left_unbounded (sympy.sets.sets.interval property)": [[229, "sympy.sets.sets.Interval.is_left_unbounded", false]], "is_linear (sympy.polys.polyclasses.dmp property)": [[212, "sympy.polys.polyclasses.DMP.is_linear", false]], "is_linear (sympy.polys.polytools.poly property)": [[217, "sympy.polys.polytools.Poly.is_linear", false]], "is_lower (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_lower", false]], "is_lower (sympy.polys.matrices.domainmatrix.domainmatrix property)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.is_lower", false]], "is_lower() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.is_lower", false]], "is_lower() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.is_lower", false]], "is_lower() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.is_lower", false]], "is_lower_hessenberg (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_lower_hessenberg", false]], "is_lucas_prp() (in module sympy.ntheory.primetest)": [[128, "sympy.ntheory.primetest.is_lucas_prp", false]], "is_maximal() (sympy.polys.agca.ideals.ideal method)": [[208, "sympy.polys.agca.ideals.Ideal.is_maximal", false]], "is_meromorphic() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.is_meromorphic", false]], "is_mersenne_prime() (in module sympy.ntheory.primetest)": [[128, "sympy.ntheory.primetest.is_mersenne_prime", false]], "is_minimal() (in module sympy.polys.groebnertools)": [[214, "sympy.polys.groebnertools.is_minimal", false]], "is_monic (sympy.polys.polyclasses.dmp property)": [[212, "sympy.polys.polyclasses.DMP.is_monic", false]], "is_monic (sympy.polys.polytools.poly property)": [[217, "sympy.polys.polytools.Poly.is_monic", false]], "is_monomial (sympy.polys.polyclasses.dmp property)": [[212, "sympy.polys.polyclasses.DMP.is_monomial", false]], "is_monomial (sympy.polys.polytools.poly property)": [[217, "sympy.polys.polytools.Poly.is_monomial", false]], "is_monotonic() (in module sympy.calculus.singularities)": [[67, "sympy.calculus.singularities.is_monotonic", false]], "is_multivariate (sympy.polys.polytools.poly property)": [[217, "sympy.polys.polytools.Poly.is_multivariate", false]], "is_negative() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.is_negative", false]], "is_negative() (sympy.polys.domains.complexfield method)": [[212, "sympy.polys.domains.ComplexField.is_negative", false]], "is_negative() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.is_negative", false]], "is_negative() (sympy.polys.domains.expressiondomain method)": [[212, "sympy.polys.domains.ExpressionDomain.is_negative", false]], "is_negative() (sympy.polys.domains.finitefield method)": [[212, "sympy.polys.domains.FiniteField.is_negative", false]], "is_negative() (sympy.polys.domains.fractionfield method)": [[212, "sympy.polys.domains.FractionField.is_negative", false]], "is_negative() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianDomain.is_negative", false]], "is_negative() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.is_negative", false]], "is_negative_definite (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_negative_definite", false]], "is_negative_semidefinite (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_negative_semidefinite", false]], "is_nilpotent (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_nilpotent", false]], "is_nilpotent() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_nilpotent", false]], "is_nilpotent_number() (in module sympy.combinatorics.group_numbers)": [[74, "sympy.combinatorics.group_numbers.is_nilpotent_number", false]], "is_nnf() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.is_nnf", false]], "is_nonnegative() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.complexfield method)": [[212, "sympy.polys.domains.ComplexField.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.expressiondomain method)": [[212, "sympy.polys.domains.ExpressionDomain.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.finitefield method)": [[212, "sympy.polys.domains.FiniteField.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.fractionfield method)": [[212, "sympy.polys.domains.FractionField.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianDomain.is_nonnegative", false]], "is_nonnegative() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.is_nonnegative", false]], "is_nonpositive() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.complexfield method)": [[212, "sympy.polys.domains.ComplexField.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.expressiondomain method)": [[212, "sympy.polys.domains.ExpressionDomain.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.finitefield method)": [[212, "sympy.polys.domains.FiniteField.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.fractionfield method)": [[212, "sympy.polys.domains.FractionField.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianDomain.is_nonpositive", false]], "is_nonpositive() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.is_nonpositive", false]], "is_nonzero (sympy.geometry.point.point property)": [[103, "sympy.geometry.point.Point.is_nonzero", false]], "is_normal() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_normal", false]], "is_normalized (sympy.physics.quantum.state.wavefunction property)": [[189, "sympy.physics.quantum.state.Wavefunction.is_normalized", false]], "is_nthpow_residue() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.is_nthpow_residue", false]], "is_number (sympy.concrete.expr_with_limits.exprwithlimits property)": [[115, "sympy.concrete.expr_with_limits.ExprWithLimits.is_number", false]], "is_number (sympy.core.expr.expr property)": [[88, "sympy.core.expr.Expr.is_number", false]], "is_number (sympy.functions.special.hyper.meijerg property)": [[96, "sympy.functions.special.hyper.meijerg.is_number", false]], "is_odd (sympy.combinatorics.permutations.permutation property)": [[80, "sympy.combinatorics.permutations.Permutation.is_odd", false]], "is_one (sympy.polys.polyclasses.anp property)": [[212, "sympy.polys.polyclasses.ANP.is_one", false]], "is_one (sympy.polys.polyclasses.dmf property)": [[212, "sympy.polys.polyclasses.DMF.is_one", false]], "is_one (sympy.polys.polyclasses.dmp property)": [[212, "sympy.polys.polyclasses.DMP.is_one", false]], "is_one (sympy.polys.polytools.poly property)": [[217, "sympy.polys.polytools.Poly.is_one", false]], "is_one() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.is_one", false]], "is_only_above_fermi (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[96, "sympy.functions.special.tensor_functions.KroneckerDelta.is_only_above_fermi", false]], "is_only_above_fermi (sympy.physics.secondquant.kroneckerdelta property)": [[191, "sympy.physics.secondquant.KroneckerDelta.is_only_above_fermi", false]], "is_only_below_fermi (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[96, "sympy.functions.special.tensor_functions.KroneckerDelta.is_only_below_fermi", false]], "is_only_below_fermi (sympy.physics.secondquant.kroneckerdelta property)": [[191, "sympy.physics.secondquant.KroneckerDelta.is_only_below_fermi", false]], "is_only_q_annihilator (sympy.physics.secondquant.annihilatefermion property)": [[191, "sympy.physics.secondquant.AnnihilateFermion.is_only_q_annihilator", false]], "is_only_q_annihilator (sympy.physics.secondquant.createfermion property)": [[191, "sympy.physics.secondquant.CreateFermion.is_only_q_annihilator", false]], "is_only_q_creator (sympy.physics.secondquant.annihilatefermion property)": [[191, "sympy.physics.secondquant.AnnihilateFermion.is_only_q_creator", false]], "is_only_q_creator (sympy.physics.secondquant.createfermion property)": [[191, "sympy.physics.secondquant.CreateFermion.is_only_q_creator", false]], "is_open (sympy.sets.sets.set property)": [[229, "sympy.sets.sets.Set.is_open", false]], "is_palindromic() (in module sympy.ntheory.digits)": [[128, "sympy.ntheory.digits.is_palindromic", false]], "is_palindromic() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.is_palindromic", false]], "is_parallel() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.is_parallel", false]], "is_parallel() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.is_parallel", false]], "is_perfect (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_perfect", false]], "is_perfect() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.is_perfect", false]], "is_perpendicular() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.is_perpendicular", false]], "is_perpendicular() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.is_perpendicular", false]], "is_pid (sympy.polys.domains.domain.domain attribute)": [[212, "sympy.polys.domains.domain.Domain.is_PID", false]], "is_polycyclic (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_polycyclic", false]], "is_polynomial() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.is_polynomial", false]], "is_positive() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.is_positive", false]], "is_positive() (sympy.polys.domains.complexfield method)": [[212, "sympy.polys.domains.ComplexField.is_positive", false]], "is_positive() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.is_positive", false]], "is_positive() (sympy.polys.domains.expressiondomain method)": [[212, "sympy.polys.domains.ExpressionDomain.is_positive", false]], "is_positive() (sympy.polys.domains.finitefield method)": [[212, "sympy.polys.domains.FiniteField.is_positive", false]], "is_positive() (sympy.polys.domains.fractionfield method)": [[212, "sympy.polys.domains.FractionField.is_positive", false]], "is_positive() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianDomain.is_positive", false]], "is_positive() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.is_positive", false]], "is_positive_definite (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_positive_definite", false]], "is_positive_semidefinite (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_positive_semidefinite", false]], "is_prefixed (sympy.physics.units.quantities.quantity property)": [[198, "sympy.physics.units.quantities.Quantity.is_prefixed", false]], "is_primary() (sympy.polys.agca.ideals.ideal method)": [[208, "sympy.polys.agca.ideals.Ideal.is_primary", false]], "is_prime() (sympy.polys.agca.ideals.ideal method)": [[208, "sympy.polys.agca.ideals.Ideal.is_prime", false]], "is_primitive (sympy.polys.polyclasses.dmp property)": [[212, "sympy.polys.polyclasses.DMP.is_primitive", false]], "is_primitive (sympy.polys.polytools.poly property)": [[217, "sympy.polys.polytools.Poly.is_primitive", false]], "is_primitive() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_primitive", false]], "is_primitive_element (sympy.core.numbers.algebraicnumber property)": [[88, "sympy.core.numbers.AlgebraicNumber.is_primitive_element", false]], "is_primitive_root() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.is_primitive_root", false]], "is_principal() (sympy.polys.agca.ideals.ideal method)": [[208, "sympy.polys.agca.ideals.Ideal.is_principal", false]], "is_proper (sympy.physics.control.lti.parallel property)": [[144, "sympy.physics.control.lti.Parallel.is_proper", false]], "is_proper (sympy.physics.control.lti.series property)": [[144, "sympy.physics.control.lti.Series.is_proper", false]], "is_proper (sympy.physics.control.lti.transferfunction property)": [[144, "sympy.physics.control.lti.TransferFunction.is_proper", false]], "is_proper_subset() (sympy.sets.sets.set method)": [[229, "sympy.sets.sets.Set.is_proper_subset", false]], "is_proper_superset() (sympy.sets.sets.set method)": [[229, "sympy.sets.sets.Set.is_proper_superset", false]], "is_pure() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.is_pure", false]], "is_q_annihilator (sympy.physics.secondquant.annihilatefermion property)": [[191, "sympy.physics.secondquant.AnnihilateFermion.is_q_annihilator", false]], "is_q_annihilator (sympy.physics.secondquant.createfermion property)": [[191, "sympy.physics.secondquant.CreateFermion.is_q_annihilator", false]], "is_q_creator (sympy.physics.secondquant.annihilatefermion property)": [[191, "sympy.physics.secondquant.AnnihilateFermion.is_q_creator", false]], "is_q_creator (sympy.physics.secondquant.createfermion property)": [[191, "sympy.physics.secondquant.CreateFermion.is_q_creator", false]], "is_quad_residue() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.is_quad_residue", false]], "is_quadratic (sympy.polys.polyclasses.dmp property)": [[212, "sympy.polys.polyclasses.DMP.is_quadratic", false]], "is_quadratic (sympy.polys.polytools.poly property)": [[217, "sympy.polys.polytools.Poly.is_quadratic", false]], "is_radical() (sympy.polys.agca.ideals.ideal method)": [[208, "sympy.polys.agca.ideals.Ideal.is_radical", false]], "is_rat() (in module sympy.polys.numberfields.utilities)": [[216, "sympy.polys.numberfields.utilities.is_rat", false]], "is_rational (sympy.polys.numberfields.modules.powerbasiselement property)": [[216, "sympy.polys.numberfields.modules.PowerBasisElement.is_rational", false]], "is_rational_function() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.is_rational_function", false]], "is_reduced() (in module sympy.polys.groebnertools)": [[214, "sympy.polys.groebnertools.is_reduced", false]], "is_right() (sympy.geometry.polygon.triangle method)": [[104, "sympy.geometry.polygon.Triangle.is_right", false]], "is_right_unbounded (sympy.sets.sets.interval property)": [[229, "sympy.sets.sets.Interval.is_right_unbounded", false]], "is_ring (sympy.polys.domains.domain.domain attribute)": [[212, "sympy.polys.domains.domain.Domain.is_Ring", false]], "is_same() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.is_same", false]], "is_scalar_multiple() (sympy.geometry.point.point method)": [[103, "sympy.geometry.point.Point.is_scalar_multiple", false]], "is_scalene() (sympy.geometry.polygon.triangle method)": [[104, "sympy.geometry.polygon.Triangle.is_scalene", false]], "is_sequence() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.is_sequence", false]], "is_similar() (sympy.geometry.entity.geometryentity method)": [[99, "sympy.geometry.entity.GeometryEntity.is_similar", false]], "is_similar() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.is_similar", false]], "is_similar() (sympy.geometry.polygon.triangle method)": [[104, "sympy.geometry.polygon.Triangle.is_similar", false]], "is_simple() (sympy.functions.special.delta_functions.diracdelta method)": [[96, "sympy.functions.special.delta_functions.DiracDelta.is_simple", false]], "is_singleton (sympy.combinatorics.permutations.permutation property)": [[80, "sympy.combinatorics.permutations.Permutation.is_Singleton", false]], "is_singular() (sympy.core.function.function class method)": [[88, "sympy.core.function.Function.is_singular", false]], "is_singular() (sympy.holonomic.holonomic.differentialoperator method)": [[111, "sympy.holonomic.holonomic.DifferentialOperator.is_singular", false]], "is_solenoidal() (in module sympy.physics.vector.fieldfunctions)": [[201, "sympy.physics.vector.fieldfunctions.is_solenoidal", false]], "is_solenoidal() (in module sympy.vector)": [[268, "sympy.vector.is_solenoidal", false]], "is_solvable (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_solvable", false]], "is_sqf (sympy.polys.polyclasses.dmp property)": [[212, "sympy.polys.polyclasses.DMP.is_sqf", false]], "is_sqf (sympy.polys.polytools.poly property)": [[217, "sympy.polys.polytools.Poly.is_sqf", false]], "is_square (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_square", false]], "is_square (sympy.polys.matrices.domainmatrix.domainmatrix property)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.is_square", false]], "is_square() (in module sympy.ntheory.primetest)": [[128, "sympy.ntheory.primetest.is_square", false]], "is_square() (sympy.polys.domains.complexfield method)": [[212, "sympy.polys.domains.ComplexField.is_square", false]], "is_square() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.is_square", false]], "is_square() (sympy.polys.domains.finitefield method)": [[212, "sympy.polys.domains.FiniteField.is_square", false]], "is_square() (sympy.polys.domains.integerring method)": [[212, "sympy.polys.domains.IntegerRing.is_square", false]], "is_square() (sympy.polys.domains.rationalfield method)": [[212, "sympy.polys.domains.RationalField.is_square", false]], "is_square() (sympy.polys.domains.realfield method)": [[212, "sympy.polys.domains.RealField.is_square", false]], "is_stable() (sympy.physics.control.lti.transferfunction method)": [[144, "sympy.physics.control.lti.TransferFunction.is_stable", false]], "is_strictly_decreasing() (in module sympy.calculus.singularities)": [[67, "sympy.calculus.singularities.is_strictly_decreasing", false]], "is_strictly_increasing() (in module sympy.calculus.singularities)": [[67, "sympy.calculus.singularities.is_strictly_increasing", false]], "is_strictly_proper (sympy.physics.control.lti.parallel property)": [[144, "sympy.physics.control.lti.Parallel.is_strictly_proper", false]], "is_strictly_proper (sympy.physics.control.lti.series property)": [[144, "sympy.physics.control.lti.Series.is_strictly_proper", false]], "is_strictly_proper (sympy.physics.control.lti.transferfunction property)": [[144, "sympy.physics.control.lti.TransferFunction.is_strictly_proper", false]], "is_strong_lucas_prp() (in module sympy.ntheory.primetest)": [[128, "sympy.ntheory.primetest.is_strong_lucas_prp", false]], "is_strongly_diagonally_dominant (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_strongly_diagonally_dominant", false]], "is_subdiagram() (sympy.categories.diagram method)": [[68, "sympy.categories.Diagram.is_subdiagram", false]], "is_subgroup() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_subgroup", false]], "is_submodule() (sympy.polys.agca.modules.freemodule method)": [[208, "sympy.polys.agca.modules.FreeModule.is_submodule", false]], "is_submodule() (sympy.polys.agca.modules.module method)": [[208, "sympy.polys.agca.modules.Module.is_submodule", false]], "is_submodule() (sympy.polys.agca.modules.quotientmodule method)": [[208, "sympy.polys.agca.modules.QuotientModule.is_submodule", false]], "is_submodule() (sympy.polys.agca.modules.submodule method)": [[208, "sympy.polys.agca.modules.SubModule.is_submodule", false]], "is_subset() (sympy.sets.sets.set method)": [[229, "sympy.sets.sets.Set.is_subset", false]], "is_superset() (sympy.sets.sets.set method)": [[229, "sympy.sets.sets.Set.is_superset", false]], "is_surjective() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[208, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.is_surjective", false]], "is_symbolic() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_symbolic", false]], "is_symmetric (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_symmetric", false]], "is_symmetric() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_symmetric", false]], "is_tangent() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.is_tangent", false]], "is_transitive() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_transitive", false]], "is_trivial (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.is_trivial", false]], "is_unit() (sympy.polys.domains.field.field method)": [[212, "sympy.polys.domains.field.Field.is_unit", false]], "is_unit() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.is_unit", false]], "is_univariate (sympy.polys.polytools.poly property)": [[217, "sympy.polys.polytools.Poly.is_univariate", false]], "is_upper (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_upper", false]], "is_upper (sympy.polys.matrices.domainmatrix.domainmatrix property)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.is_upper", false]], "is_upper() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.is_upper", false]], "is_upper() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.is_upper", false]], "is_upper() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.is_upper", false]], "is_upper_hessenberg (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_upper_hessenberg", false]], "is_weakly_diagonally_dominant (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_weakly_diagonally_dominant", false]], "is_whole_ring() (sympy.polys.agca.ideals.ideal method)": [[208, "sympy.polys.agca.ideals.Ideal.is_whole_ring", false]], "is_zero (sympy.geometry.point.point property)": [[103, "sympy.geometry.point.Point.is_zero", false]], "is_zero (sympy.polys.polyclasses.anp property)": [[212, "sympy.polys.polyclasses.ANP.is_zero", false]], "is_zero (sympy.polys.polyclasses.dmf property)": [[212, "sympy.polys.polyclasses.DMF.is_zero", false]], "is_zero (sympy.polys.polyclasses.dmp property)": [[212, "sympy.polys.polyclasses.DMP.is_zero", false]], "is_zero (sympy.polys.polytools.poly property)": [[217, "sympy.polys.polytools.Poly.is_zero", false]], "is_zero() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[208, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.is_zero", false]], "is_zero() (sympy.polys.agca.ideals.ideal method)": [[208, "sympy.polys.agca.ideals.Ideal.is_zero", false]], "is_zero() (sympy.polys.agca.modules.freemodule method)": [[208, "sympy.polys.agca.modules.FreeModule.is_zero", false]], "is_zero() (sympy.polys.agca.modules.module method)": [[208, "sympy.polys.agca.modules.Module.is_zero", false]], "is_zero() (sympy.polys.agca.modules.quotientmodule method)": [[208, "sympy.polys.agca.modules.QuotientModule.is_zero", false]], "is_zero() (sympy.polys.agca.modules.submodule method)": [[208, "sympy.polys.agca.modules.SubModule.is_zero", false]], "is_zero() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.is_zero", false]], "is_zero_dimensional (sympy.polys.polytools.groebnerbasis property)": [[217, "sympy.polys.polytools.GroebnerBasis.is_zero_dimensional", false]], "is_zero_dimensional() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.is_zero_dimensional", false]], "is_zero_matrix (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.is_zero_matrix", false]], "is_zero_matrix() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.is_zero_matrix", false]], "is_zero_matrix() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.is_zero_matrix", false]], "is_zero_matrix() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.is_zero_matrix", false]], "is_zero_quaternion() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.is_zero_quaternion", false]], "isdisjoint() (sympy.sets.sets.set method)": [[229, "sympy.sets.sets.Set.isdisjoint", false]], "isign (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.isign", false]], "isolate() (in module sympy.polys.numberfields.utilities)": [[216, "sympy.polys.numberfields.utilities.isolate", false]], "isomorphismfailed (class in sympy.polys.polyerrors)": [[214, "sympy.polys.polyerrors.IsomorphismFailed", false]], "isprime() (in module sympy.ntheory.primetest)": [[128, "sympy.ntheory.primetest.isprime", false]], "isqrt() (in module sympy.core.intfunc)": [[88, "sympy.core.intfunc.isqrt", false]], "issubset() (sympy.sets.sets.set method)": [[229, "sympy.sets.sets.Set.issubset", false]], "issuperset() (sympy.sets.sets.set method)": [[229, "sympy.sets.sets.Set.issuperset", false]], "istruepredicate (class in sympy.assumptions.predicates.common)": [[65, "sympy.assumptions.predicates.common.IsTruePredicate", false]], "isympy": [[15, "term-isympy", true]], "ite (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.ITE", false]], "items() (sympy.core.containers.dict method)": [[88, "sympy.core.containers.Dict.items", false]], "iter_items() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.iter_items", false]], "iter_items() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.iter_items", false]], "iter_items() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.iter_items", false]], "iter_items() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.iter_items", false]], "iter_items() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.iter_items", false]], "iter_q_annihilators() (sympy.physics.secondquant.no method)": [[191, "sympy.physics.secondquant.NO.iter_q_annihilators", false]], "iter_q_creators() (sympy.physics.secondquant.no method)": [[191, "sympy.physics.secondquant.NO.iter_q_creators", false]], "iter_values() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.iter_values", false]], "iter_values() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.iter_values", false]], "iter_values() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.iter_values", false]], "iter_values() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.iter_values", false]], "iter_values() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.iter_values", false]], "iterable() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.iterable", false]], "iterate_binary() (sympy.combinatorics.subsets.subset method)": [[83, "sympy.combinatorics.subsets.Subset.iterate_binary", false]], "iterate_graycode() (sympy.combinatorics.subsets.subset method)": [[83, "sympy.combinatorics.subsets.Subset.iterate_graycode", false]], "itercoeffs() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.itercoeffs", false]], "itermonomials() (in module sympy.polys.monomials)": [[217, "sympy.polys.monomials.itermonomials", false]], "itermonoms() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.itermonoms", false]], "iterterms() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.iterterms", false]], "j2op (class in sympy.physics.quantum.spin)": [[188, "sympy.physics.quantum.spin.J2Op", false]], "jacobi (class in sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.jacobi", false]], "jacobi_normalized() (in module sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.jacobi_normalized", false]], "jacobi_poly() (in module sympy.polys.orthopolys)": [[217, "sympy.polys.orthopolys.jacobi_poly", false]], "jacobi_symbol (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.jacobi_symbol", false]], "jacobi_symbol() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.jacobi_symbol", false]], "jacobian() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.jacobian", false]], "jacobian() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.jacobian", false]], "jacobian_determinant() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.jacobian_determinant", false]], "jacobian_matrix() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.jacobian_matrix", false]], "javascriptcodeprinter (class in sympy.printing.jscode)": [[221, "sympy.printing.jscode.JavascriptCodePrinter", false]], "jn (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.jn", false]], "jn_zeros() (in module sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.jn_zeros", false]], "join() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.join", false]], "joint (class in sympy.physics.mechanics.joint)": [[152, "sympy.physics.mechanics.joint.Joint", false]], "joint_axis (sympy.physics.mechanics.joint.cylindricaljoint property)": [[152, "sympy.physics.mechanics.joint.CylindricalJoint.joint_axis", false]], "joint_axis (sympy.physics.mechanics.joint.pinjoint property)": [[152, "sympy.physics.mechanics.joint.PinJoint.joint_axis", false]], "joint_axis (sympy.physics.mechanics.joint.prismaticjoint property)": [[152, "sympy.physics.mechanics.joint.PrismaticJoint.joint_axis", false]], "jointrv() (in module sympy.stats)": [[241, "sympy.stats.JointRV", false]], "joints (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.joints", false]], "jointsmethod (class in sympy.physics.mechanics.jointsmethod)": [[149, "sympy.physics.mechanics.jointsmethod.JointsMethod", false]], "jones_2_stokes() (in module sympy.physics.optics.polarization)": [[163, "sympy.physics.optics.polarization.jones_2_stokes", false]], "jones_vector() (in module sympy.physics.optics.polarization)": [[163, "sympy.physics.optics.polarization.jones_vector", false]], "jordan_block() (sympy.matrices.matrixbase.matrixbase class method)": [[124, "sympy.matrices.matrixbase.MatrixBase.jordan_block", false]], "jordan_cell() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.jordan_cell", false]], "jordan_form() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.jordan_form", false]], "josephus() (sympy.combinatorics.permutations.permutation class method)": [[80, "sympy.combinatorics.permutations.Permutation.josephus", false]], "jscode() (in module sympy.printing.jscode)": [[221, "sympy.printing.jscode.jscode", false]], "julia_code() (in module sympy.printing.julia)": [[221, "sympy.printing.julia.julia_code", false]], "juliacodegen (class in sympy.utilities.codegen)": [[254, "sympy.utilities.codegen.JuliaCodeGen", false]], "juliacodeprinter (class in sympy.printing.julia)": [[221, "sympy.printing.julia.JuliaCodePrinter", false]], "jxbra (class in sympy.physics.quantum.spin)": [[188, "sympy.physics.quantum.spin.JxBra", false]], "jxbracoupled (class in sympy.physics.quantum.spin)": [[188, "sympy.physics.quantum.spin.JxBraCoupled", false]], "jxket (class in sympy.physics.quantum.spin)": [[188, "sympy.physics.quantum.spin.JxKet", false]], "jxketcoupled (class in sympy.physics.quantum.spin)": [[188, "sympy.physics.quantum.spin.JxKetCoupled", false]], "jybra (class in sympy.physics.quantum.spin)": [[188, "sympy.physics.quantum.spin.JyBra", false]], "jybracoupled (class in sympy.physics.quantum.spin)": [[188, "sympy.physics.quantum.spin.JyBraCoupled", false]], "jyket (class in sympy.physics.quantum.spin)": [[188, "sympy.physics.quantum.spin.JyKet", false]], "jyketcoupled (class in sympy.physics.quantum.spin)": [[188, "sympy.physics.quantum.spin.JyKetCoupled", false]], "jzbra (class in sympy.physics.quantum.spin)": [[188, "sympy.physics.quantum.spin.JzBra", false]], "jzbracoupled (class in sympy.physics.quantum.spin)": [[188, "sympy.physics.quantum.spin.JzBraCoupled", false]], "jzket (class in sympy.physics.quantum.spin)": [[188, "sympy.physics.quantum.spin.JzKet", false]], "jzketcoupled (class in sympy.physics.quantum.spin)": [[188, "sympy.physics.quantum.spin.JzKetCoupled", false]], "jzop (class in sympy.physics.quantum.spin)": [[188, "sympy.physics.quantum.spin.JzOp", false]], "kahane_simplify() (in module sympy.physics.hep.gamma_matrices)": [[145, "sympy.physics.hep.gamma_matrices.kahane_simplify", false]], "kanes_equations() (sympy.physics.mechanics.kane.kanesmethod method)": [[153, "sympy.physics.mechanics.kane.KanesMethod.kanes_equations", false]], "kanesmethod (class in sympy.physics.mechanics.kane)": [[153, "sympy.physics.mechanics.kane.KanesMethod", false]], "kbins() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.kbins", false]], "kdes (sympy.physics.mechanics.joint.joint property)": [[152, "sympy.physics.mechanics.joint.Joint.kdes", false]], "kdes (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[149, "sympy.physics.mechanics.jointsmethod.JointsMethod.kdes", false]], "kdes (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.kdes", false]], "kernel() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[208, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.kernel", false]], "kernel() (sympy.polys.numberfields.modules.modulehomomorphism method)": [[216, "sympy.polys.numberfields.modules.ModuleHomomorphism.kernel", false]], "ket (class in sympy.physics.quantum.state)": [[189, "sympy.physics.quantum.state.Ket", false]], "ket (sympy.physics.quantum.operator.outerproduct property)": [[180, "sympy.physics.quantum.operator.OuterProduct.ket", false]], "ket (sympy.physics.secondquant.innerproduct property)": [[191, "sympy.physics.secondquant.InnerProduct.ket", false]], "ketbase (class in sympy.physics.quantum.state)": [[189, "sympy.physics.quantum.state.KetBase", false]], "key2bounds() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.key2bounds", false]], "key2ij() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.key2ij", false]], "keys() (sympy.core.containers.dict method)": [[88, "sympy.core.containers.Dict.keys", false]], "kid_rsa_private_key() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.kid_rsa_private_key", false]], "kid_rsa_public_key() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.kid_rsa_public_key", false]], "killable_index (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[96, "sympy.functions.special.tensor_functions.KroneckerDelta.killable_index", false]], "killable_index (sympy.physics.secondquant.kroneckerdelta property)": [[191, "sympy.physics.secondquant.KroneckerDelta.killable_index", false]], "kin_explicit_rhs (sympy.physics.mechanics.system.symbolicsystem property)": [[158, "sympy.physics.mechanics.system.SymbolicSystem.kin_explicit_rhs", false]], "kind": [[15, "term-Kind", true]], "kind (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.kind", false]], "kind (class in sympy.core.kind)": [[88, "sympy.core.kind.Kind", false]], "kind (sympy.core.containers.tuple property)": [[88, "sympy.core.containers.Tuple.kind", false]], "kind (sympy.sets.sets.set property)": [[229, "sympy.sets.sets.Set.kind", false]], "kindiffdict() (sympy.physics.mechanics.kane.kanesmethod method)": [[153, "sympy.physics.mechanics.kane.KanesMethod.kindiffdict", false]], "kinematic_equations() (in module sympy.physics.vector.functions)": [[204, "sympy.physics.vector.functions.kinematic_equations", false]], "kinetic_energy() (in module sympy.physics.mechanics.functions)": [[155, "sympy.physics.mechanics.functions.kinetic_energy", false]], "kinetic_energy() (sympy.physics.mechanics.body.body method)": [[149, "sympy.physics.mechanics.body.Body.kinetic_energy", false]], "kinetic_energy() (sympy.physics.mechanics.particle.particle method)": [[155, "sympy.physics.mechanics.particle.Particle.kinetic_energy", false]], "kinetic_energy() (sympy.physics.mechanics.rigidbody.rigidbody method)": [[155, "sympy.physics.mechanics.rigidbody.RigidBody.kinetic_energy", false]], "known_fcns_src1 (in module sympy.printing.julia)": [[221, "sympy.printing.julia.known_fcns_src1", false]], "known_fcns_src1 (in module sympy.printing.octave)": [[221, "sympy.printing.octave.known_fcns_src1", false]], "known_fcns_src2 (in module sympy.printing.julia)": [[221, "sympy.printing.julia.known_fcns_src2", false]], "known_fcns_src2 (in module sympy.printing.octave)": [[221, "sympy.printing.octave.known_fcns_src2", false]], "known_functions (in module sympy.printing.jscode)": [[221, "sympy.printing.jscode.known_functions", false]], "known_functions (in module sympy.printing.mathematica)": [[221, "sympy.printing.mathematica.known_functions", false]], "known_functions (in module sympy.printing.rcode)": [[221, "sympy.printing.rcode.known_functions", false]], "known_functions (in module sympy.printing.rust)": [[221, "sympy.printing.rust.known_functions", false]], "known_functions_c89 (in module sympy.printing.c)": [[221, "sympy.printing.c.known_functions_C89", false]], "known_functions_c99 (in module sympy.printing.c)": [[221, "sympy.printing.c.known_functions_C99", false]], "kronecker_symbol (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.kronecker_symbol", false]], "kroneckerdelta (class in sympy.functions.special.tensor_functions)": [[96, "sympy.functions.special.tensor_functions.KroneckerDelta", false]], "kroneckerdelta (class in sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.KroneckerDelta", false]], "kroneckersimp() (in module sympy.simplify.simplify)": [[233, "sympy.simplify.simplify.kroneckersimp", false]], "ksubsets() (sympy.combinatorics.subsets method)": [[83, "sympy.combinatorics.subsets.ksubsets", false]], "kumaraswamy() (in module sympy.stats)": [[241, "sympy.stats.Kumaraswamy", false]], "kurtosis() (in module sympy.stats)": [[241, "sympy.stats.kurtosis", false]], "kwargs() (sympy.codegen.ast.token method)": [[69, "sympy.codegen.ast.Token.kwargs", false]], "l1_norm() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.l1_norm", false]], "l1_norm() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.l1_norm", false]], "l2 (class in sympy.physics.quantum.hilbert)": [[177, "sympy.physics.quantum.hilbert.L2", false]], "l2_norm_squared() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.l2_norm_squared", false]], "l_m_opt (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.l_M_opt", false]], "l_t_slack (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.l_T_slack", false]], "label (class in sympy.codegen.cnodes)": [[69, "sympy.codegen.cnodes.Label", false]], "label (sympy.physics.quantum.state.timedepstate property)": [[189, "sympy.physics.quantum.state.TimeDepState.label", false]], "label (sympy.tensor.indexed.idx property)": [[246, "sympy.tensor.indexed.Idx.label", false]], "label (sympy.tensor.indexed.indexedbase property)": [[246, "sympy.tensor.indexed.IndexedBase.label", false]], "labeller() (in module sympy.physics.quantum.circuitplot)": [[171, "sympy.physics.quantum.circuitplot.labeller", false]], "lagrangesmethod (class in sympy.physics.mechanics.lagrange)": [[153, "sympy.physics.mechanics.lagrange.LagrangesMethod", false]], "lagrangian() (in module sympy.physics.mechanics.functions)": [[155, "sympy.physics.mechanics.functions.Lagrangian", false]], "laguerre (class in sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.laguerre", false]], "laguerre_poly() (in module sympy.polys.orthopolys)": [[217, "sympy.polys.orthopolys.laguerre_poly", false]], "lambda (class in sympy.core.function)": [[88, "sympy.core.function.Lambda", false]], "lambda_notation() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.lambda_notation", false]], "lambdaprinter (class in sympy.printing.lambdarepr)": [[221, "sympy.printing.lambdarepr.LambdaPrinter", false]], "lambdarepr() (in module sympy.printing.lambdarepr)": [[221, "sympy.printing.lambdarepr.lambdarepr", false]], "lambdastr() (in module sympy.utilities.lambdify)": [[260, "sympy.utilities.lambdify.lambdastr", false]], "lambdify()": [[15, "term-lambdify", true]], "lambdify() (in module sympy.utilities.lambdify)": [[260, "sympy.utilities.lambdify.lambdify", false]], "lambertw (class in sympy.functions.elementary.exponential)": [[94, "sympy.functions.elementary.exponential.LambertW", false]], "lamda": [[15, "term-lamda", true]], "laplace() (in module sympy.stats)": [[241, "sympy.stats.Laplace", false]], "laplace_correspondence() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.laplace_correspondence", false]], "laplace_initial_conds() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.laplace_initial_conds", false]], "laplace_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.laplace_transform", false]], "laplacetransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.LaplaceTransform", false]], "larklatexparser (class in sympy.parsing.latex.lark)": [[130, "sympy.parsing.latex.lark.LarkLaTeXParser", false]], "latex() (in module sympy.printing.latex)": [[221, "sympy.printing.latex.latex", false]], "latexparsingerror (class in sympy.parsing.latex)": [[130, "sympy.parsing.latex.LaTeXParsingError", false]], "latexprinter (class in sympy.printing.latex)": [[221, "sympy.printing.latex.LatexPrinter", false]], "lbound() (in module sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.lbound", false]], "lc() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.LC", false]], "lc() (sympy.polys.polyclasses.anp method)": [[212, "sympy.polys.polyclasses.ANP.LC", false]], "lc() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.LC", false]], "lc() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.LC", false]], "lcim() (in module sympy.calculus.util)": [[67, "sympy.calculus.util.lcim", false]], "lcm() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.lcm", false]], "lcm() (sympy.core.numbers.number method)": [[88, "sympy.core.numbers.Number.lcm", false]], "lcm() (sympy.polys.domains.complexfield method)": [[212, "sympy.polys.domains.ComplexField.lcm", false]], "lcm() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.lcm", false]], "lcm() (sympy.polys.domains.field.field method)": [[212, "sympy.polys.domains.field.Field.lcm", false]], "lcm() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.lcm", false]], "lcm() (sympy.polys.domains.gmpyintegerring method)": [[212, "sympy.polys.domains.GMPYIntegerRing.lcm", false]], "lcm() (sympy.polys.domains.integerring method)": [[212, "sympy.polys.domains.IntegerRing.lcm", false]], "lcm() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.lcm", false]], "lcm() (sympy.polys.domains.realfield method)": [[212, "sympy.polys.domains.RealField.lcm", false]], "lcm() (sympy.polys.monomials.monomial method)": [[217, "sympy.polys.monomials.Monomial.lcm", false]], "lcm() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.lcm", false]], "lcm() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.lcm", false]], "lcm_list() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.lcm_list", false]], "ldescent() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.ldescent", false]], "ldldecomposition() (sympy.matrices.dense.densematrix method)": [[119, "sympy.matrices.dense.DenseMatrix.LDLdecomposition", false]], "ldldecomposition() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.LDLdecomposition", false]], "ldlsolve() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.LDLsolve", false]], "ldudecomposition() (sympy.matrices.expressions.blockmatrix.blockmatrix method)": [[120, "sympy.matrices.expressions.blockmatrix.BlockMatrix.LDUdecomposition", false]], "le (in module sympy.core.relational)": [[88, "sympy.core.relational.Le", false]], "leading_expv() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.leading_expv", false]], "leading_monom() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.leading_monom", false]], "leading_term() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.leading_term", false]], "leadterm() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.leadterm", false]], "least_rotation() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.least_rotation", false]], "left() (sympy.printing.pretty.stringpict.stringpict method)": [[221, "sympy.printing.pretty.stringpict.stringPict.left", false]], "left_eigenvects() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.left_eigenvects", false]], "left_open (sympy.sets.sets.interval property)": [[229, "sympy.sets.sets.Interval.left_open", false]], "left_support (sympy.physics.continuum_mechanics.cable.cable property)": [[138, "sympy.physics.continuum_mechanics.cable.Cable.left_support", false]], "leftslash() (sympy.printing.pretty.stringpict.stringpict method)": [[221, "sympy.printing.pretty.stringpict.stringPict.leftslash", false]], "legendre (class in sympy.functions.special.polynomials)": [[96, "sympy.functions.special.polynomials.legendre", false]], "legendre_poly() (in module sympy.polys.orthopolys)": [[217, "sympy.polys.orthopolys.legendre_poly", false]], "legendre_symbol (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.legendre_symbol", false]], "legendre_symbol() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.legendre_symbol", false]], "length (sympy.geometry.curve.curve property)": [[97, "sympy.geometry.curve.Curve.length", false]], "length (sympy.geometry.line.linearentity property)": [[101, "sympy.geometry.line.LinearEntity.length", false]], "length (sympy.geometry.line.segment property)": [[101, "sympy.geometry.line.Segment.length", false]], "length (sympy.geometry.point.point property)": [[103, "sympy.geometry.point.Point.length", false]], "length (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.length", false]], "length (sympy.physics.continuum_mechanics.beam.beam property)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.length", false]], "length (sympy.physics.continuum_mechanics.cable.cable property)": [[138, "sympy.physics.continuum_mechanics.cable.Cable.length", false]], "length (sympy.physics.mechanics.pathway.linearpathway property)": [[156, "sympy.physics.mechanics.pathway.LinearPathway.length", false]], "length (sympy.physics.mechanics.pathway.obstaclesetpathway property)": [[156, "sympy.physics.mechanics.pathway.ObstacleSetPathway.length", false]], "length (sympy.physics.mechanics.pathway.pathwaybase property)": [[156, "sympy.physics.mechanics.pathway.PathwayBase.length", false]], "length (sympy.physics.mechanics.pathway.wrappingpathway property)": [[156, "sympy.physics.mechanics.pathway.WrappingPathway.length", false]], "length (sympy.series.sequences.seqbase property)": [[227, "sympy.series.sequences.SeqBase.length", false]], "length() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.length", false]], "length() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.length", false]], "lens_formula() (in module sympy.physics.optics.utils)": [[164, "sympy.physics.optics.utils.lens_formula", false]], "lens_makers_formula() (in module sympy.physics.optics.utils)": [[164, "sympy.physics.optics.utils.lens_makers_formula", false]], "lerchphi (class in sympy.functions.special.zeta_functions)": [[96, "sympy.functions.special.zeta_functions.lerchphi", false]], "lessthan (class in sympy.core.relational)": [[88, "sympy.core.relational.LessThan", false]], "levicivita (class in sympy.functions.special.tensor_functions)": [[96, "sympy.functions.special.tensor_functions.LeviCivita", false]], "levy() (in module sympy.stats)": [[241, "sympy.stats.Levy", false]], "lexorder (class in sympy.polys.orderings)": [[217, "sympy.polys.orderings.LexOrder", false]], "lfsr_autocorrelation() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.lfsr_autocorrelation", false]], "lfsr_connection_polynomial() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.lfsr_connection_polynomial", false]], "lfsr_sequence() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.lfsr_sequence", false]], "lhs (sympy.core.relational.relational property)": [[88, "sympy.core.relational.Relational.lhs", false]], "li (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.Li", false], [96, "sympy.functions.special.error_functions.li", false]], "lie_algebra() (sympy.liealgebras.type_a.typea method)": [[117, "sympy.liealgebras.type_a.TypeA.lie_algebra", false]], "lie_algebra() (sympy.liealgebras.type_b.typeb method)": [[117, "sympy.liealgebras.type_b.TypeB.lie_algebra", false]], "lie_algebra() (sympy.liealgebras.type_c.typec method)": [[117, "sympy.liealgebras.type_c.TypeC.lie_algebra", false]], "lie_algebra() (sympy.liealgebras.type_d.typed method)": [[117, "sympy.liealgebras.type_d.TypeD.lie_algebra", false]], "lie_heuristic_abaco1_product() (in module sympy.solvers.ode.lie_group)": [[237, "sympy.solvers.ode.lie_group.lie_heuristic_abaco1_product", false]], "lie_heuristic_abaco1_simple() (in module sympy.solvers.ode.lie_group)": [[237, "sympy.solvers.ode.lie_group.lie_heuristic_abaco1_simple", false]], "lie_heuristic_abaco2_similar() (in module sympy.solvers.ode.lie_group)": [[237, "sympy.solvers.ode.lie_group.lie_heuristic_abaco2_similar", false]], "lie_heuristic_abaco2_unique_general() (in module sympy.solvers.ode.lie_group)": [[237, "sympy.solvers.ode.lie_group.lie_heuristic_abaco2_unique_general", false]], "lie_heuristic_abaco2_unique_unknown() (in module sympy.solvers.ode.lie_group)": [[237, "sympy.solvers.ode.lie_group.lie_heuristic_abaco2_unique_unknown", false]], "lie_heuristic_bivariate() (in module sympy.solvers.ode.lie_group)": [[237, "sympy.solvers.ode.lie_group.lie_heuristic_bivariate", false]], "lie_heuristic_chi() (in module sympy.solvers.ode.lie_group)": [[237, "sympy.solvers.ode.lie_group.lie_heuristic_chi", false]], "lie_heuristic_function_sum() (in module sympy.solvers.ode.lie_group)": [[237, "sympy.solvers.ode.lie_group.lie_heuristic_function_sum", false]], "lie_heuristic_linear() (in module sympy.solvers.ode.lie_group)": [[237, "sympy.solvers.ode.lie_group.lie_heuristic_linear", false]], "liederivative (class in sympy.diffgeom)": [[90, "sympy.diffgeom.LieDerivative", false]], "liegroup (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.LieGroup", false]], "lift() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.lift", false]], "lift() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.lift", false]], "limit (class in sympy.series.limits)": [[228, "sympy.series.limits.Limit", false]], "limit() (in module sympy.series.limits)": [[228, "sympy.series.limits.limit", false]], "limit() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.limit", false]], "limit() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.limit", false]], "limit_denominator() (sympy.core.numbers.rational method)": [[88, "sympy.core.numbers.Rational.limit_denominator", false]], "limit_seq() (in module sympy.series.limitseq)": [[226, "sympy.series.limitseq.limit_seq", false]], "limitinf() (in module sympy.series.gruntz)": [[228, "sympy.series.gruntz.limitinf", false]], "limiting_distribution (sympy.stats.discretemarkovchain property)": [[241, "sympy.stats.DiscreteMarkovChain.limiting_distribution", false]], "limits (sympy.concrete.expr_with_limits.exprwithlimits property)": [[115, "sympy.concrete.expr_with_limits.ExprWithLimits.limits", false]], "limits (sympy.geometry.curve.curve property)": [[97, "sympy.geometry.curve.Curve.limits", false]], "limits (sympy.physics.quantum.state.wavefunction property)": [[189, "sympy.physics.quantum.state.Wavefunction.limits", false]], "line (class in sympy.geometry.line)": [[101, "sympy.geometry.line.Line", false]], "line2d (class in sympy.geometry.line)": [[101, "sympy.geometry.line.Line2D", false]], "line2dbaseseries (class in sympy.plotting.series)": [[207, "sympy.plotting.series.Line2DBaseSeries", false]], "line3d (class in sympy.geometry.line)": [[101, "sympy.geometry.line.Line3D", false]], "line3dbaseseries (class in sympy.plotting.series)": [[207, "sympy.plotting.series.Line3DBaseSeries", false]], "line_integrate() (in module sympy.integrals.integrals)": [[115, "sympy.integrals.integrals.line_integrate", false]], "linear (class in sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.Linear", false]], "linear_eq_to_matrix() (in module sympy.solvers.solveset)": [[240, "sympy.solvers.solveset.linear_eq_to_matrix", false]], "linear_momentum() (in module sympy.physics.mechanics.functions)": [[155, "sympy.physics.mechanics.functions.linear_momentum", false]], "linear_momentum() (sympy.physics.mechanics.body.body method)": [[149, "sympy.physics.mechanics.body.Body.linear_momentum", false]], "linear_momentum() (sympy.physics.mechanics.particle.particle method)": [[155, "sympy.physics.mechanics.particle.Particle.linear_momentum", false]], "linear_momentum() (sympy.physics.mechanics.rigidbody.rigidbody method)": [[155, "sympy.physics.mechanics.rigidbody.RigidBody.linear_momentum", false]], "linear_ode_to_matrix() (in module sympy.solvers.ode.systems)": [[237, "sympy.solvers.ode.systems.linear_ode_to_matrix", false]], "linear_polarizer() (in module sympy.physics.optics.polarization)": [[163, "sympy.physics.optics.polarization.linear_polarizer", false]], "linearcoefficients (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.LinearCoefficients", false]], "lineardamper (class in sympy.physics.mechanics.actuator)": [[148, "sympy.physics.mechanics.actuator.LinearDamper", false]], "linearentity (class in sympy.geometry.line)": [[101, "sympy.geometry.line.LinearEntity", false]], "linearentity2d (class in sympy.geometry.line)": [[101, "sympy.geometry.line.LinearEntity2D", false]], "linearentity3d (class in sympy.geometry.line)": [[101, "sympy.geometry.line.LinearEntity3D", false]], "linearize() (sympy.physics.mechanics.kane.kanesmethod method)": [[153, "sympy.physics.mechanics.kane.KanesMethod.linearize", false]], "linearize() (sympy.physics.mechanics.lagrange.lagrangesmethod method)": [[153, "sympy.physics.mechanics.lagrange.LagrangesMethod.linearize", false]], "linearize() (sympy.physics.mechanics.linearize.linearizer method)": [[154, "sympy.physics.mechanics.linearize.Linearizer.linearize", false]], "linearizer (class in sympy.physics.mechanics.linearize)": [[154, "sympy.physics.mechanics.linearize.Linearizer", false]], "linearpathway (class in sympy.physics.mechanics.pathway)": [[156, "sympy.physics.mechanics.pathway.LinearPathway", false]], "linearspring (class in sympy.physics.mechanics.actuator)": [[148, "sympy.physics.mechanics.actuator.LinearSpring", false]], "lineover1drangeseries (class in sympy.plotting.series)": [[207, "sympy.plotting.series.LineOver1DRangeSeries", false]], "linodesolve() (in module sympy.solvers.ode.systems)": [[237, "sympy.solvers.ode.systems.linodesolve", false]], "linodesolve_type() (in module sympy.solvers.ode.systems)": [[237, "sympy.solvers.ode.systems.linodesolve_type", false]], "linprog() (in module sympy.solvers.simplex)": [[239, "sympy.solvers.simplex.linprog", false]], "linsolve() (in module sympy.solvers.solveset)": [[240, "sympy.solvers.solveset.linsolve", false]], "liouville (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.Liouville", false]], "list() (sympy.combinatorics.permutations.cycle method)": [[80, "sympy.combinatorics.permutations.Cycle.list", false]], "list() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.list", false]], "list2numpy() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.list2numpy", false]], "list_can_dims (sympy.physics.units.dimensions.dimensionsystem property)": [[193, "sympy.physics.units.dimensions.DimensionSystem.list_can_dims", false]], "list_visitor() (in module sympy.utilities.enumerative)": [[256, "sympy.utilities.enumerative.list_visitor", false]], "listcoeffs() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.listcoeffs", false]], "listmonoms() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.listmonoms", false]], "listterms() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.listterms", false]], "literal_dp (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.literal_dp", false]], "literal_sp (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.literal_sp", false]], "lll() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.lll", false]], "lll() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.lll", false]], "lll() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.lll", false]], "lll_transform() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.lll_transform", false]], "lll_transform() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.lll_transform", false]], "lll_transform() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.lll_transform", false]], "lm() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.LM", false]], "lm() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.LM", false]], "load (sympy.physics.continuum_mechanics.beam.beam property)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.load", false]], "load_vector (sympy.physics.continuum_mechanics.beam.beam3d property)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.load_vector", false]], "loads (sympy.physics.continuum_mechanics.cable.cable property)": [[138, "sympy.physics.continuum_mechanics.cable.Cable.loads", false]], "loads (sympy.physics.continuum_mechanics.truss.truss property)": [[140, "sympy.physics.continuum_mechanics.truss.Truss.loads", false]], "loads (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[149, "sympy.physics.mechanics.jointsmethod.JointsMethod.loads", false]], "loads (sympy.physics.mechanics.system.symbolicsystem property)": [[158, "sympy.physics.mechanics.system.SymbolicSystem.loads", false]], "loads (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.loads", false]], "loads_position (sympy.physics.continuum_mechanics.cable.cable property)": [[138, "sympy.physics.continuum_mechanics.cable.Cable.loads_position", false]], "locate_new() (sympy.vector.coordsysrect.coordsys3d method)": [[265, "sympy.vector.coordsysrect.CoordSys3D.locate_new", false]], "locatenew() (sympy.physics.vector.point.point method)": [[204, "sympy.physics.vector.point.Point.locatenew", false]], "log (class in sympy.functions.elementary.exponential)": [[94, "sympy.functions.elementary.exponential.log", false]], "log() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.log", false]], "log() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.log", false]], "log() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.log", false]], "log() (sympy.polys.domains.integerring method)": [[212, "sympy.polys.domains.IntegerRing.log", false]], "log10 (class in sympy.codegen.cfunctions)": [[69, "sympy.codegen.cfunctions.log10", false]], "log1p (class in sympy.codegen.cfunctions)": [[69, "sympy.codegen.cfunctions.log1p", false]], "log2 (class in sympy.codegen.cfunctions)": [[69, "sympy.codegen.cfunctions.log2", false]], "logarithmic() (in module sympy.stats)": [[241, "sympy.stats.Logarithmic", false]], "logcombine() (in module sympy.simplify.simplify)": [[233, "sympy.simplify.simplify.logcombine", false]], "loggamma (class in sympy.functions.special.gamma_functions)": [[96, "sympy.functions.special.gamma_functions.loggamma", false]], "logistic() (in module sympy.stats)": [[241, "sympy.stats.Logistic", false]], "loglogistic() (in module sympy.stats)": [[241, "sympy.stats.LogLogistic", false]], "lognormal() (in module sympy.stats)": [[241, "sympy.stats.LogNormal", false]], "lomax() (in module sympy.stats)": [[241, "sympy.stats.Lomax", false]], "lopen() (sympy.sets.sets.interval class method)": [[229, "sympy.sets.sets.Interval.Lopen", false]], "lower (sympy.physics.secondquant.antisymmetrictensor property)": [[191, "sympy.physics.secondquant.AntiSymmetricTensor.lower", false]], "lower (sympy.tensor.indexed.idx property)": [[246, "sympy.tensor.indexed.Idx.lower", false]], "lower_central_series() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.lower_central_series", false]], "lower_triangular() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.lower_triangular", false]], "lower_triangular_solve() (sympy.matrices.dense.densematrix method)": [[119, "sympy.matrices.dense.DenseMatrix.lower_triangular_solve", false]], "lower_triangular_solve() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.lower_triangular_solve", false]], "lowergamma (class in sympy.functions.special.gamma_functions)": [[96, "sympy.functions.special.gamma_functions.lowergamma", false]], "lowertriangularpredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.LowerTriangularPredicate", false]], "lpmax() (in module sympy.solvers.simplex)": [[239, "sympy.solvers.simplex.lpmax", false]], "lpmin() (in module sympy.solvers.simplex)": [[239, "sympy.solvers.simplex.lpmin", false]], "lseries() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.lseries", false]], "lt (in module sympy.core.relational)": [[88, "sympy.core.relational.Lt", false]], "lt() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.LT", false]], "lt() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.LT", false]], "ltrim() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.ltrim", false]], "lu() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.lu", false]], "lu() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.lu", false]], "lu() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.lu", false]], "lu() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.lu", false]], "lu_solve() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.lu_solve", false]], "lu_solve() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.lu_solve", false]], "lu_solve() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.lu_solve", false]], "lu_solve() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.lu_solve", false]], "lucas (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.lucas", false]], "ludecomposition() (sympy.matrices.expressions.blockmatrix.blockmatrix method)": [[120, "sympy.matrices.expressions.blockmatrix.BlockMatrix.LUdecomposition", false]], "ludecomposition() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.LUdecomposition", false]], "ludecomposition_simple() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.LUdecomposition_Simple", false]], "ludecompositionff() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.LUdecompositionFF", false]], "lusolve() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.LUsolve", false]], "m (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.M", false]], "m (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.M", false]], "m (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[131, "sympy.physics.biomechanics.activation.ZerothOrderActivation.M", false]], "m (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.M", false]], "m20() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.M20", false]], "magnitude() (sympy.physics.vector.vector.vector method)": [[200, "sympy.physics.vector.vector.Vector.magnitude", false]], "magnitude() (sympy.vector.vector.vector method)": [[265, "sympy.vector.vector.Vector.magnitude", false]], "major (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.major", false]], "make_mod_elt() (in module sympy.polys.numberfields.modules)": [[216, "sympy.polys.numberfields.modules.make_mod_elt", false]], "make_monic_over_integers_by_scaling_roots() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.make_monic_over_integers_by_scaling_roots", false]], "make_perm() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.make_perm", false]], "make_routine() (in module sympy.utilities.codegen)": [[254, "sympy.utilities.codegen.make_routine", false]], "manifold (class in sympy.diffgeom)": [[90, "sympy.diffgeom.Manifold", false]], "manualintegrate() (in module sympy.integrals.manualintegrate)": [[115, "sympy.integrals.manualintegrate.manualintegrate", false]], "map() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.map", false]], "maple_code() (in module sympy.printing.maple)": [[221, "sympy.printing.maple.maple_code", false]], "maplecodeprinter (class in sympy.printing.maple)": [[221, "sympy.printing.maple.MapleCodePrinter", false]], "marcumq (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.marcumq", false]], "marginal_distribution() (in module sympy.stats)": [[241, "sympy.stats.marginal_distribution", false]], "markers (sympy.plotting.plot.plot property)": [[207, "sympy.plotting.plot.Plot.markers", false]], "mass (sympy.physics.mechanics.body.body property)": [[149, "sympy.physics.mechanics.body.Body.mass", false]], "mass (sympy.physics.mechanics.particle.particle property)": [[155, "sympy.physics.mechanics.particle.Particle.mass", false]], "mass (sympy.physics.mechanics.rigidbody.rigidbody property)": [[155, "sympy.physics.mechanics.rigidbody.RigidBody.mass", false]], "mass_matrix (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[149, "sympy.physics.mechanics.jointsmethod.JointsMethod.mass_matrix", false]], "mass_matrix (sympy.physics.mechanics.kane.kanesmethod property)": [[153, "sympy.physics.mechanics.kane.KanesMethod.mass_matrix", false]], "mass_matrix (sympy.physics.mechanics.lagrange.lagrangesmethod property)": [[153, "sympy.physics.mechanics.lagrange.LagrangesMethod.mass_matrix", false]], "mass_matrix (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.mass_matrix", false]], "mass_matrix_full (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[149, "sympy.physics.mechanics.jointsmethod.JointsMethod.mass_matrix_full", false]], "mass_matrix_full (sympy.physics.mechanics.kane.kanesmethod property)": [[153, "sympy.physics.mechanics.kane.KanesMethod.mass_matrix_full", false]], "mass_matrix_full (sympy.physics.mechanics.lagrange.lagrangesmethod property)": [[153, "sympy.physics.mechanics.lagrange.LagrangesMethod.mass_matrix_full", false]], "mass_matrix_full (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.mass_matrix_full", false]], "mass_matrix_kin (sympy.physics.mechanics.kane.kanesmethod property)": [[153, "sympy.physics.mechanics.kane.KanesMethod.mass_matrix_kin", false]], "masscenter (sympy.physics.mechanics.body.body property)": [[149, "sympy.physics.mechanics.body.Body.masscenter", false]], "masscenter (sympy.physics.mechanics.particle.particle property)": [[155, "sympy.physics.mechanics.particle.Particle.masscenter", false]], "masscenter (sympy.physics.mechanics.rigidbody.rigidbody property)": [[155, "sympy.physics.mechanics.rigidbody.RigidBody.masscenter", false]], "masscenter_vel() (sympy.physics.mechanics.body.body method)": [[149, "sympy.physics.mechanics.body.Body.masscenter_vel", false]], "matadd (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.MatAdd", false]], "match() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.match", false]], "match() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.match", false]], "matches() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.matches", false]], "matches() (sympy.solvers.diophantine.diophantine.diophantineequationtype method)": [[234, "sympy.solvers.diophantine.diophantine.DiophantineEquationType.matches", false]], "mathematica_code() (in module sympy.printing.mathematica)": [[221, "sympy.printing.mathematica.mathematica_code", false]], "mathieubase (class in sympy.functions.special.mathieu_functions)": [[96, "sympy.functions.special.mathieu_functions.MathieuBase", false]], "mathieuc (class in sympy.functions.special.mathieu_functions)": [[96, "sympy.functions.special.mathieu_functions.mathieuc", false]], "mathieucprime (class in sympy.functions.special.mathieu_functions)": [[96, "sympy.functions.special.mathieu_functions.mathieucprime", false]], "mathieus (class in sympy.functions.special.mathieu_functions)": [[96, "sympy.functions.special.mathieu_functions.mathieus", false]], "mathieusprime (class in sympy.functions.special.mathieu_functions)": [[96, "sympy.functions.special.mathieu_functions.mathieusprime", false]], "mathml() (in module sympy.printing.mathml)": [[221, "sympy.printing.mathml.mathml", false]], "mathml_tag() (sympy.printing.mathml.mathmlcontentprinter method)": [[221, "sympy.printing.mathml.MathMLContentPrinter.mathml_tag", false]], "mathml_tag() (sympy.printing.mathml.mathmlpresentationprinter method)": [[221, "sympy.printing.mathml.MathMLPresentationPrinter.mathml_tag", false]], "mathmlcontentprinter (class in sympy.printing.mathml)": [[221, "sympy.printing.mathml.MathMLContentPrinter", false]], "mathmlpresentationprinter (class in sympy.printing.mathml)": [[221, "sympy.printing.mathml.MathMLPresentationPrinter", false]], "mathmlprinterbase (class in sympy.printing.mathml)": [[221, "sympy.printing.mathml.MathMLPrinterBase", false]], "matmul (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.MatMul", false]], "matmul() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.matmul", false]], "matmul() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.matmul", false]], "matmul() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.matmul", false]], "matmul() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.matmul", false]], "matplotlibbackend (class in sympy.plotting.plot)": [[207, "sympy.plotting.plot.MatplotlibBackend", false]], "matpow (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.MatPow", false]], "matrix": [[15, "term-Matrix", true]], "matrix (in module sympy.matrices.dense)": [[119, "sympy.matrices.dense.Matrix", false]], "matrix() (sympy.polys.numberfields.modules.modulehomomorphism method)": [[216, "sympy.polys.numberfields.modules.ModuleHomomorphism.matrix", false]], "matrix2numpy() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.matrix2numpy", false]], "matrix_exp() (in module sympy.solvers.ode.systems)": [[237, "sympy.solvers.ode.systems.matrix_exp", false]], "matrix_exp_jordan_form() (in module sympy.solvers.ode.systems)": [[237, "sympy.solvers.ode.systems.matrix_exp_jordan_form", false]], "matrix_fglm() (in module sympy.polys.fglmtools)": [[214, "sympy.polys.fglmtools.matrix_fglm", false]], "matrix_form() (sympy.liealgebras.weyl_group.weylgroup method)": [[117, "sympy.liealgebras.weyl_group.WeylGroup.matrix_form", false]], "matrix_multiply_elementwise() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.matrix_multiply_elementwise", false]], "matrix_rep() (in module sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.matrix_rep", false]], "matrix_to_density() (in module sympy.physics.quantum.qubit)": [[185, "sympy.physics.quantum.qubit.matrix_to_density", false]], "matrix_to_qubit() (in module sympy.physics.quantum.qubit)": [[185, "sympy.physics.quantum.qubit.matrix_to_qubit", false]], "matrix_to_vector() (in module sympy.vector)": [[268, "sympy.vector.matrix_to_vector", false]], "matrixbase (class in sympy.matrices.matrixbase)": [[124, "sympy.matrices.matrixbase.MatrixBase", false]], "matrixerror (class in sympy.matrices.matrixbase)": [[124, "sympy.matrices.matrixbase.MatrixError", false]], "matrixexpr (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.MatrixExpr", false]], "matrixgamma() (in module sympy.stats)": [[241, "sympy.stats.MatrixGamma", false]], "matrixkind (class in sympy.matrices.kind)": [[123, "sympy.matrices.kind.MatrixKind", false]], "matrixnormal() (in module sympy.stats)": [[241, "sympy.stats.MatrixNormal", false]], "matrixpermute (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.MatrixPermute", false]], "matrixset (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.MatrixSet", false]], "matrixsolve (class in sympy.codegen.matrix_nodes)": [[69, "sympy.codegen.matrix_nodes.MatrixSolve", false]], "matrixsymbol (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.MatrixSymbol", false]], "max (class in sympy.functions.elementary.miscellaneous)": [[94, "sympy.functions.elementary.miscellaneous.Max", false]], "max (sympy.codegen.ast.floattype property)": [[69, "sympy.codegen.ast.FloatType.max", false]], "max() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.max", false]], "max_bending_moment() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.max_bending_moment", false]], "max_bmoment() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.max_bmoment", false]], "max_bmoment() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.max_bmoment", false]], "max_deflection() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.max_deflection", false]], "max_deflection() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.max_deflection", false]], "max_div (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.max_div", false]], "max_exponent (sympy.codegen.ast.floattype property)": [[69, "sympy.codegen.ast.FloatType.max_exponent", false]], "max_norm() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.max_norm", false]], "max_norm() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.max_norm", false]], "max_shear_force() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.max_shear_force", false]], "max_shear_force() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.max_shear_force", false]], "maximal_fiber_velocity (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.maximal_fiber_velocity", false]], "maximal_order() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.maximal_order", false]], "maximum() (in module sympy.calculus.util)": [[67, "sympy.calculus.util.maximum", false]], "maxwell() (in module sympy.stats)": [[241, "sympy.stats.Maxwell", false]], "mcodeprinter (class in sympy.printing.mathematica)": [[221, "sympy.printing.mathematica.MCodePrinter", false]], "mdft() (in module sympy.physics.matrices)": [[147, "sympy.physics.matrices.mdft", false]], "measure (sympy.sets.sets.set property)": [[229, "sympy.sets.sets.Set.measure", false]], "measure_all() (in module sympy.physics.quantum.qubit)": [[185, "sympy.physics.quantum.qubit.measure_all", false]], "measure_all_oneshot() (in module sympy.physics.quantum.qubit)": [[185, "sympy.physics.quantum.qubit.measure_all_oneshot", false]], "measure_partial() (in module sympy.physics.quantum.qubit)": [[185, "sympy.physics.quantum.qubit.measure_partial", false]], "measure_partial_oneshot() (in module sympy.physics.quantum.qubit)": [[185, "sympy.physics.quantum.qubit.measure_partial_oneshot", false]], "medial (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.medial", false]], "median() (in module sympy.stats)": [[241, "sympy.stats.median", false]], "medians (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.medians", false]], "medium (class in sympy.physics.optics.medium)": [[162, "sympy.physics.optics.medium.Medium", false]], "meets() (sympy.series.gruntz.subsset method)": [[228, "sympy.series.gruntz.SubsSet.meets", false]], "meijerg (class in sympy.functions.special.hyper)": [[96, "sympy.functions.special.hyper.meijerg", false]], "meijerint_definite() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint.meijerint_definite", false]], "meijerint_indefinite() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint.meijerint_indefinite", false]], "meijerint_inversion() (in module sympy.integrals.meijerint)": [[113, "sympy.integrals.meijerint.meijerint_inversion", false]], "mellin_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.mellin_transform", false]], "mellintransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.MellinTransform", false]], "member_lengths (sympy.physics.continuum_mechanics.truss.truss property)": [[140, "sympy.physics.continuum_mechanics.truss.Truss.member_lengths", false]], "members (sympy.physics.continuum_mechanics.truss.truss property)": [[140, "sympy.physics.continuum_mechanics.truss.Truss.members", false]], "memoize_property() (in module sympy.utilities.decorator)": [[255, "sympy.utilities.decorator.memoize_property", false]], "mensor() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.mensor", false]], "merge (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.merge", false]], "merge_solution() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.merge_solution", false]], "mersenne_prime_exponent() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.mersenne_prime_exponent", false]], "method (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[149, "sympy.physics.mechanics.jointsmethod.JointsMethod.method", false]], "metric_to_christoffel_1st() (in module sympy.diffgeom)": [[90, "sympy.diffgeom.metric_to_Christoffel_1st", false]], "metric_to_christoffel_2nd() (in module sympy.diffgeom)": [[90, "sympy.diffgeom.metric_to_Christoffel_2nd", false]], "metric_to_ricci_components() (in module sympy.diffgeom)": [[90, "sympy.diffgeom.metric_to_Ricci_components", false]], "metric_to_riemann_components() (in module sympy.diffgeom)": [[90, "sympy.diffgeom.metric_to_Riemann_components", false]], "mgamma() (in module sympy.physics.matrices)": [[147, "sympy.physics.matrices.mgamma", false]], "midpoint (sympy.geometry.line.segment property)": [[101, "sympy.geometry.line.Segment.midpoint", false]], "midpoint() (sympy.geometry.point.point method)": [[103, "sympy.geometry.point.Point.midpoint", false]], "mignotte_sep_bound_squared() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.mignotte_sep_bound_squared", false]], "mimofeedback (class in sympy.physics.control.lti)": [[144, "sympy.physics.control.lti.MIMOFeedback", false]], "mimoparallel (class in sympy.physics.control.lti)": [[144, "sympy.physics.control.lti.MIMOParallel", false]], "mimoseries (class in sympy.physics.control.lti)": [[144, "sympy.physics.control.lti.MIMOSeries", false]], "min (class in sympy.functions.elementary.miscellaneous)": [[94, "sympy.functions.elementary.miscellaneous.Min", false]], "min() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.min", false]], "min_exponent (sympy.codegen.ast.floattype property)": [[69, "sympy.codegen.ast.FloatType.min_exponent", false]], "min_qubits (sympy.physics.quantum.gate.cgate property)": [[175, "sympy.physics.quantum.gate.CGate.min_qubits", false]], "min_qubits (sympy.physics.quantum.gate.cnotgate property)": [[175, "sympy.physics.quantum.gate.CNotGate.min_qubits", false]], "min_qubits (sympy.physics.quantum.gate.gate property)": [[175, "sympy.physics.quantum.gate.Gate.min_qubits", false]], "minimal_block() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.minimal_block", false]], "minimal_blocks() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.minimal_blocks", false]], "minimal_polynomial() (in module sympy.polys.numberfields.minpoly)": [[216, "sympy.polys.numberfields.minpoly.minimal_polynomial", false]], "minimum() (in module sympy.calculus.util)": [[67, "sympy.calculus.util.minimum", false]], "minlex() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.minlex", false]], "minor (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.minor", false]], "minor() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.minor", false]], "minor_submatrix() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.minor_submatrix", false]], "minpoly() (in module sympy.polys.numberfields.minpoly)": [[216, "sympy.polys.numberfields.minpoly.minpoly", false]], "minpoly_of_element() (sympy.core.numbers.algebraicnumber method)": [[88, "sympy.core.numbers.AlgebraicNumber.minpoly_of_element", false]], "mirror_formula() (in module sympy.physics.optics.utils)": [[164, "sympy.physics.optics.utils.mirror_formula", false]], "mobius (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.mobius", false]], "mobius() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.mobius", false]], "mobius_transform() (in module sympy.discrete.transforms)": [[91, "sympy.discrete.transforms.mobius_transform", false]], "mobiusrange() (sympy.ntheory.generate.sieve method)": [[128, "sympy.ntheory.generate.Sieve.mobiusrange", false]], "mod (class in sympy.core.mod)": [[88, "sympy.core.mod.Mod", false]], "mod (sympy.polys.domains.algebraicfield attribute)": [[212, "sympy.polys.domains.AlgebraicField.mod", false]], "mod_inverse() (in module sympy.core.intfunc)": [[88, "sympy.core.intfunc.mod_inverse", false]], "mod_inverse() (in module sympy.core.numbers)": [[88, "sympy.core.numbers.mod_inverse", false]], "mod_to_list() (sympy.polys.polyclasses.anp method)": [[212, "sympy.polys.polyclasses.ANP.mod_to_list", false]], "modgcd_bivariate() (in module sympy.polys.modulargcd)": [[214, "sympy.polys.modulargcd.modgcd_bivariate", false]], "modgcd_multivariate() (in module sympy.polys.modulargcd)": [[214, "sympy.polys.modulargcd.modgcd_multivariate", false]], "modgcd_univariate() (in module sympy.polys.modulargcd)": [[214, "sympy.polys.modulargcd.modgcd_univariate", false]], "module": [[16, "module-sympy.simplify.simplify", false], [58, "module-sympy", false], [60, "module-sympy.abc", false], [61, "module-sympy.algebras", false], [62, "module-sympy.assumptions.ask", false], [63, "module-sympy.assumptions.assume", false], [64, "module-sympy.assumptions", false], [65, "module-sympy.assumptions.predicates", false], [66, "module-sympy.assumptions.refine", false], [67, "module-sympy.calculus", false], [67, "module-sympy.calculus.euler", false], [67, "module-sympy.calculus.finite_diff", false], [67, "module-sympy.calculus.singularities", false], [67, "module-sympy.calculus.util", false], [68, "module-sympy.categories", false], [68, "module-sympy.categories.diagram_drawing", false], [69, "module-sympy.codegen.algorithms", false], [69, "module-sympy.codegen.approximations", false], [69, "module-sympy.codegen.ast", false], [69, "module-sympy.codegen.cfunctions", false], [69, "module-sympy.codegen.cnodes", false], [69, "module-sympy.codegen.cutils", false], [69, "module-sympy.codegen.cxxnodes", false], [69, "module-sympy.codegen.fnodes", false], [69, "module-sympy.codegen.futils", false], [69, "module-sympy.codegen.matrix_nodes", false], [69, "module-sympy.codegen.pyutils", false], [69, "module-sympy.codegen.rewriting", false], [71, "module-sympy.combinatorics.galois", false], [72, "module-sympy.combinatorics.graycode", false], [73, "module-sympy.combinatorics.group_constructs", false], [74, "module-sympy.combinatorics.group_numbers", false], [76, "module-sympy.combinatorics.named_groups", false], [77, "module-sympy.combinatorics.partitions", false], [79, "module-sympy.combinatorics.perm_groups", false], [80, "module-sympy.combinatorics.generators", false], [80, "module-sympy.combinatorics.permutations", false], [81, "module-sympy.combinatorics.polyhedron", false], [82, "module-sympy.combinatorics.prufer", false], [83, "module-sympy.combinatorics.subsets", false], [84, "module-sympy.combinatorics.tensor_can", false], [85, "module-sympy.combinatorics.testutil", false], [86, "module-sympy.combinatorics.util", false], [88, "module-sympy.core.add", false], [88, "module-sympy.core.assumptions", false], [88, "module-sympy.core.basic", false], [88, "module-sympy.core.cache", false], [88, "module-sympy.core.containers", false], [88, "module-sympy.core.evalf", false], [88, "module-sympy.core.expr", false], [88, "module-sympy.core.exprtools", false], [88, "module-sympy.core.function", false], [88, "module-sympy.core.intfunc", false], [88, "module-sympy.core.kind", false], [88, "module-sympy.core.mod", false], [88, "module-sympy.core.mul", false], [88, "module-sympy.core.multidimensional", false], [88, "module-sympy.core.numbers", false], [88, "module-sympy.core.power", false], [88, "module-sympy.core.random", false], [88, "module-sympy.core.relational", false], [88, "module-sympy.core.singleton", false], [88, "module-sympy.core.symbol", false], [88, "module-sympy.core.sympify", false], [88, "module-sympy.core.traversal", false], [89, "module-sympy.crypto.crypto", false], [90, "module-sympy.diffgeom", false], [91, "module-sympy.discrete", false], [91, "module-sympy.discrete.convolutions", false], [91, "module-sympy.discrete.transforms", false], [95, "module-sympy.functions", false], [96, "module-sympy.functions.special.bessel", false], [96, "module-sympy.functions.special.beta_functions", false], [96, "module-sympy.functions.special.elliptic_integrals", false], [96, "module-sympy.functions.special.error_functions", false], [96, "module-sympy.functions.special.gamma_functions", false], [96, "module-sympy.functions.special.mathieu_functions", false], [96, "module-sympy.functions.special.polynomials", false], [96, "module-sympy.functions.special.singularity_functions", false], [96, "module-sympy.functions.special.zeta_functions", false], [97, "module-sympy.geometry.curve", false], [98, "module-sympy.geometry.ellipse", false], [99, "module-sympy.geometry.entity", false], [101, "module-sympy.geometry.line", false], [102, "module-sympy.geometry.plane", false], [103, "module-sympy.geometry.point", false], [104, "module-sympy.geometry.polygon", false], [105, "module-sympy.geometry.util", false], [108, "module-sympy.holonomic", false], [113, "module-sympy.integrals.meijerint", false], [113, "module-sympy.integrals.meijerint_doc", false], [115, "module-sympy.integrals", false], [115, "module-sympy.integrals.intpoly", false], [115, "module-sympy.integrals.transforms", false], [116, "module-sympy.interactive", false], [116, "module-sympy.interactive.printing", false], [116, "module-sympy.interactive.session", false], [117, "module-sympy.liealgebras", false], [118, "module-sympy.logic", false], [118, "module-sympy.logic.inference", false], [120, "module-sympy.matrices.expressions", false], [120, "module-sympy.matrices.expressions.blockmatrix", false], [121, "module-sympy.matrices.immutable", false], [122, "module-sympy.matrices", false], [123, "module-sympy.matrices.kind", false], [124, "module-sympy.matrices.matrixbase", false], [126, "module-sympy.matrices.sparse", false], [127, "module-sympy.matrices.sparsetools", false], [128, "module-sympy.ntheory.bbp_pi", false], [128, "module-sympy.ntheory.continued_fraction", false], [128, "module-sympy.ntheory.digits", false], [128, "module-sympy.ntheory.ecm", false], [128, "module-sympy.ntheory.egyptian_fraction", false], [128, "module-sympy.ntheory.factor_", false], [128, "module-sympy.ntheory.generate", false], [128, "module-sympy.ntheory.modular", false], [128, "module-sympy.ntheory.multinomial", false], [128, "module-sympy.ntheory.partitions_", false], [128, "module-sympy.ntheory.primetest", false], [128, "module-sympy.ntheory.qs", false], [128, "module-sympy.ntheory.residue_ntheory", false], [130, "module-sympy.parsing", false], [130, "module-sympy.parsing.sym_expr", false], [131, "module-sympy.physics.biomechanics.activation", false], [132, "module-sympy.physics.biomechanics.curve", false], [133, "module-sympy.physics.biomechanics", false], [134, "module-sympy.physics.biomechanics.musculotendon", false], [135, "module-sympy.physics.continuum_mechanics.Arch", false], [136, "module-sympy.physics.continuum_mechanics.beam", false], [138, "module-sympy.physics.continuum_mechanics.cable", false], [140, "module-sympy.physics.continuum_mechanics.truss", false], [143, "module-sympy.physics.control", false], [144, "module-sympy.physics.control.lti", false], [145, "module-sympy.physics.hep.gamma_matrices", false], [146, "module-sympy.physics.hydrogen", false], [147, "module-sympy.physics.matrices", false], [148, "module-sympy.physics.mechanics.actuator", false], [151, "module-sympy.physics.mechanics", false], [152, "module-sympy.physics.mechanics.joint", false], [153, "module-sympy.physics.mechanics.kane", false], [153, "module-sympy.physics.mechanics.lagrange", false], [154, "module-sympy.physics.mechanics.linearize", false], [156, "module-sympy.physics.mechanics.pathway", false], [159, "module-sympy.physics.mechanics.wrapping_geometry", false], [160, "module-sympy.physics.optics.gaussopt", false], [162, "module-sympy.physics.optics.medium", false], [163, "module-sympy.physics.optics.polarization", false], [164, "module-sympy.physics.optics.utils", false], [165, "module-sympy.physics.optics.waves", false], [166, "module-sympy.physics.paulialgebra", false], [167, "module-sympy.physics.qho_1d", false], [168, "module-sympy.physics.quantum.anticommutator", false], [169, "module-sympy.physics.quantum.cartesian", false], [170, "module-sympy.physics.quantum.cg", false], [171, "module-sympy.physics.quantum.circuitplot", false], [172, "module-sympy.physics.quantum.commutator", false], [173, "module-sympy.physics.quantum.constants", false], [174, "module-sympy.physics.quantum.dagger", false], [175, "module-sympy.physics.quantum.gate", false], [176, "module-sympy.physics.quantum.grover", false], [177, "module-sympy.physics.quantum.hilbert", false], [179, "module-sympy.physics.quantum.innerproduct", false], [180, "module-sympy.physics.quantum.operator", false], [181, "module-sympy.physics.quantum.operatorset", false], [182, "module-sympy.physics.quantum.piab", false], [183, "module-sympy.physics.quantum.qapply", false], [184, "module-sympy.physics.quantum.qft", false], [185, "module-sympy.physics.quantum.qubit", false], [186, "module-sympy.physics.quantum.represent", false], [187, "module-sympy.physics.quantum.shor", false], [188, "module-sympy.physics.quantum.spin", false], [189, "module-sympy.physics.quantum.state", false], [190, "module-sympy.physics.quantum.tensorproduct", false], [191, "module-sympy.physics.secondquant", false], [192, "module-sympy.physics.sho", false], [193, "module-sympy.physics.units.dimensions", false], [197, "module-sympy.physics.units.prefixes", false], [198, "module-sympy.physics.units.quantities", false], [198, "module-sympy.physics.units.util", false], [199, "module-sympy.physics.units.unitsystem", false], [203, "module-sympy.physics.vector", false], [204, "module-sympy.physics.vector.functions", false], [204, "module-sympy.physics.vector.point", false], [206, "module-sympy.physics.wigner", false], [207, "module-sympy.plotting.plot", false], [207, "module-sympy.plotting.pygletplot", false], [210, "module-sympy.polys.matrices._dfm", false], [210, "module-sympy.polys.matrices._typing", false], [210, "module-sympy.polys.matrices.ddm", false], [210, "module-sympy.polys.matrices.dense", false], [210, "module-sympy.polys.matrices.domainmatrix", false], [210, "module-sympy.polys.matrices.sdm", false], [214, "module-sympy.polys.polyconfig", false], [214, "module-sympy.polys.polyoptions", false], [216, "module-sympy.polys.numberfields.modules", false], [216, "module-sympy.polys.numberfields.subfield", false], [217, "module-sympy.polys", false], [219, "module-sympy.polys.solvers", false], [221, "module-sympy.printing.aesaracode", false], [221, "module-sympy.printing.c", false], [221, "module-sympy.printing.codeprinter", false], [221, "module-sympy.printing.conventions", false], [221, "module-sympy.printing.cxx", false], [221, "module-sympy.printing.fortran", false], [221, "module-sympy.printing.gtk", false], [221, "module-sympy.printing.jscode", false], [221, "module-sympy.printing.julia", false], [221, "module-sympy.printing.lambdarepr", false], [221, "module-sympy.printing.latex", false], [221, "module-sympy.printing.maple", false], [221, "module-sympy.printing.mathematica", false], [221, "module-sympy.printing.mathml", false], [221, "module-sympy.printing.octave", false], [221, "module-sympy.printing.precedence", false], [221, "module-sympy.printing.pretty", false], [221, "module-sympy.printing.pretty.pretty", false], [221, "module-sympy.printing.pretty.pretty_symbology", false], [221, "module-sympy.printing.pretty.stringpict", false], [221, "module-sympy.printing.preview", false], [221, "module-sympy.printing.printer", false], [221, "module-sympy.printing.pycode", false], [221, "module-sympy.printing.python", false], [221, "module-sympy.printing.rcode", false], [221, "module-sympy.printing.repr", false], [221, "module-sympy.printing.rust", false], [221, "module-sympy.printing.smtlib", false], [221, "module-sympy.printing.str", false], [221, "module-sympy.printing.tree", false], [229, "module-sympy.sets.conditionset", false], [229, "module-sympy.sets.fancysets", false], [229, "module-sympy.sets.powerset", false], [229, "module-sympy.sets.sets", false], [230, "module-sympy.simplify.fu", false], [231, "module-sympy.simplify.hyperexpand_doc", false], [233, "module-sympy.simplify.combsimp", false], [233, "module-sympy.simplify.cse_main", false], [233, "module-sympy.simplify.epathtools", false], [233, "module-sympy.simplify.hyperexpand", false], [233, "module-sympy.simplify.powsimp", false], [233, "module-sympy.simplify.radsimp", false], [233, "module-sympy.simplify.ratsimp", false], [233, "module-sympy.simplify.sqrtdenest", false], [233, "module-sympy.simplify.trigsimp", false], [236, "module-sympy.solvers.inequalities", false], [237, "module-sympy.solvers.ode", false], [237, "module-sympy.solvers.ode.ode", false], [238, "module-sympy.solvers.pde", false], [239, "module-sympy.solvers", false], [239, "module-sympy.solvers.recurr", false], [239, "module-sympy.solvers.simplex", false], [240, "module-sympy.solvers.solveset", false], [241, "module-sympy.stats", false], [241, "module-sympy.stats.crv", false], [241, "module-sympy.stats.crv_types", false], [241, "module-sympy.stats.frv", false], [241, "module-sympy.stats.frv_types", false], [241, "module-sympy.stats.rv", false], [242, "module-sympy.tensor.array", false], [243, "module-sympy.tensor.array.expressions", false], [244, "module-sympy.tensor", false], [245, "module-sympy.tensor.index_methods", false], [246, "module-sympy.tensor.indexed", false], [247, "module-sympy.tensor.tensor", false], [248, "module-sympy.tensor.toperators", false], [249, "module-sympy.testing", false], [250, "module-sympy.testing.pytest", false], [251, "module-sympy.testing.randtest", false], [252, "module-sympy.testing.runtests", false], [253, "module-sympy.utilities.autowrap", false], [254, "module-sympy.utilities.codegen", false], [255, "module-sympy.utilities.decorator", false], [256, "module-sympy.utilities.enumerative", false], [257, "module-sympy.utilities.exceptions", false], [258, "module-sympy.utilities", false], [259, "module-sympy.utilities.iterables", false], [260, "module-sympy.utilities.lambdify", false], [261, "module-sympy.utilities.memoization", false], [262, "module-sympy.utilities.misc", false], [263, "module-sympy.utilities.source", false], [264, "module-sympy.utilities.timeutils", false], [273, "module-sympy.vector", false], [282, "module-sympy.physics", false]], "module (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.Module", false]], "module (class in sympy.polys.agca.modules)": [[208, "sympy.polys.agca.modules.Module", false]], "module (class in sympy.polys.numberfields.modules)": [[216, "sympy.polys.numberfields.modules.Module", false]], "module_quotient() (sympy.polys.agca.modules.submodule method)": [[208, "sympy.polys.agca.modules.SubModule.module_quotient", false]], "moduleelement (class in sympy.polys.numberfields.modules)": [[216, "sympy.polys.numberfields.modules.ModuleElement", false]], "moduleendomorphism (class in sympy.polys.numberfields.modules)": [[216, "sympy.polys.numberfields.modules.ModuleEndomorphism", false]], "modulehomomorphism (class in sympy.polys.agca.homomorphisms)": [[208, "sympy.polys.agca.homomorphisms.ModuleHomomorphism", false]], "modulehomomorphism (class in sympy.polys.numberfields.modules)": [[216, "sympy.polys.numberfields.modules.ModuleHomomorphism", false]], "moment (class in sympy.stats)": [[241, "sympy.stats.Moment", false]], "moment() (in module sympy.stats)": [[241, "sympy.stats.moment", false]], "moment_load_vector (sympy.physics.continuum_mechanics.beam.beam3d property)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.moment_load_vector", false]], "momentum (sympy.physics.quantum.cartesian.pxbra property)": [[169, "sympy.physics.quantum.cartesian.PxBra.momentum", false]], "momentum (sympy.physics.quantum.cartesian.pxket property)": [[169, "sympy.physics.quantum.cartesian.PxKet.momentum", false]], "monic() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.monic", false]], "monic() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.monic", false]], "monic() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.monic", false]], "monic() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.monic", false]], "monogenicfiniteextension (class in sympy.polys.agca.extensions)": [[208, "sympy.polys.agca.extensions.MonogenicFiniteExtension", false]], "monomial (class in sympy.polys.monomials)": [[217, "sympy.polys.monomials.Monomial", false]], "monomial_basis() (sympy.polys.rings.polyring method)": [[212, "sympy.polys.rings.PolyRing.monomial_basis", false]], "monomial_count() (in module sympy.polys.monomials)": [[217, "sympy.polys.monomials.monomial_count", false]], "monomialorder (class in sympy.polys.orderings)": [[217, "sympy.polys.orderings.MonomialOrder", false]], "monoms() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.monoms", false]], "monoms() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.monoms", false]], "monoms() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.monoms", false]], "monotonicity_helper() (in module sympy.calculus.singularities)": [[67, "sympy.calculus.singularities.monotonicity_helper", false]], "morphism (class in sympy.categories)": [[68, "sympy.categories.Morphism", false]], "morphisms (sympy.categories.diagram_drawing.diagramgrid property)": [[68, "sympy.categories.diagram_drawing.DiagramGrid.morphisms", false]], "moyal() (in module sympy.stats)": [[241, "sympy.stats.Moyal", false]], "mpmath": [[15, "term-mpmath", true]], "mpmathprinter (class in sympy.printing.pycode)": [[221, "sympy.printing.pycode.MpmathPrinter", false]], "mr() (in module sympy.ntheory.primetest)": [[128, "sympy.ntheory.primetest.mr", false]], "mrv() (in module sympy.series.gruntz)": [[228, "sympy.series.gruntz.mrv", false]], "mrv_leadterm() (in module sympy.series.gruntz)": [[228, "sympy.series.gruntz.mrv_leadterm", false]], "mrv_max1() (in module sympy.series.gruntz)": [[228, "sympy.series.gruntz.mrv_max1", false]], "mrv_max3() (in module sympy.series.gruntz)": [[228, "sympy.series.gruntz.mrv_max3", false]], "msigma() (in module sympy.physics.matrices)": [[147, "sympy.physics.matrices.msigma", false]], "msubs() (in module sympy.physics.mechanics)": [[150, "sympy.physics.mechanics.msubs", false]], "mu_k (sympy.physics.mechanics.actuator.coulombkineticfriction property)": [[148, "sympy.physics.mechanics.actuator.CoulombKineticFriction.mu_k", false]], "mu_s (sympy.physics.mechanics.actuator.coulombkineticfriction property)": [[148, "sympy.physics.mechanics.actuator.CoulombKineticFriction.mu_s", false]], "mueller_matrix() (in module sympy.physics.optics.polarization)": [[163, "sympy.physics.optics.polarization.mueller_matrix", false]], "mul (class in sympy.core.mul)": [[88, "sympy.core.mul.Mul", false]], "mul() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.mul", false]], "mul() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.mul", false]], "mul() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.mul", false]], "mul() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.mul", false]], "mul() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.mul", false]], "mul() (sympy.polys.numberfields.modules.submodule method)": [[216, "sympy.polys.numberfields.modules.Submodule.mul", false]], "mul() (sympy.polys.polyclasses.dmf method)": [[212, "sympy.polys.polyclasses.DMF.mul", false]], "mul() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.mul", false]], "mul() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.mul", false]], "mul() (sympy.polys.rings.polyring method)": [[212, "sympy.polys.rings.PolyRing.mul", false]], "mul_elementwise() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.mul_elementwise", false]], "mul_ground() (sympy.polys.polyclasses.anp method)": [[212, "sympy.polys.polyclasses.ANP.mul_ground", false]], "mul_ground() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.mul_ground", false]], "mul_ground() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.mul_ground", false]], "mul_inv() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.mul_inv", false]], "mul_xin() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.mul_xin", false]], "mult_tab() (sympy.polys.numberfields.modules.module method)": [[216, "sympy.polys.numberfields.modules.Module.mult_tab", false]], "multifactorial (class in sympy.functions.combinatorial.factorials)": [[93, "sympy.functions.combinatorial.factorials.MultiFactorial", false]], "multigamma (class in sympy.functions.special.gamma_functions)": [[96, "sympy.functions.special.gamma_functions.multigamma", false]], "multinomial() (in module sympy.stats)": [[241, "sympy.stats.Multinomial", false]], "multinomial_coefficients() (in module sympy.ntheory.multinomial)": [[128, "sympy.ntheory.multinomial.multinomial_coefficients", false]], "multinomial_coefficients_iterator() (in module sympy.ntheory.multinomial)": [[128, "sympy.ntheory.multinomial.multinomial_coefficients_iterator", false]], "multiplicity() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.multiplicity", false]], "multiplicity() (sympy.vector.implicitregion.implicitregion method)": [[265, "sympy.vector.implicitregion.ImplicitRegion.multiplicity", false]], "multiply() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.multiply", false]], "multiply_elementwise() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.multiply_elementwise", false]], "multiply_ideal() (sympy.polys.agca.modules.freemodule method)": [[208, "sympy.polys.agca.modules.FreeModule.multiply_ideal", false]], "multiply_ideal() (sympy.polys.agca.modules.module method)": [[208, "sympy.polys.agca.modules.Module.multiply_ideal", false]], "multiply_ideal() (sympy.polys.agca.modules.submodule method)": [[208, "sympy.polys.agca.modules.SubModule.multiply_ideal", false]], "multiset() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.multiset", false]], "multiset_combinations() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.multiset_combinations", false]], "multiset_derangements() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.multiset_derangements", false]], "multiset_partitions() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.multiset_partitions", false]], "multiset_partitions_taocp() (in module sympy.utilities.enumerative)": [[256, "sympy.utilities.enumerative.multiset_partitions_taocp", false]], "multiset_permutations() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.multiset_permutations", false]], "multisetpartitiontraverser (class in sympy.utilities.enumerative)": [[256, "sympy.utilities.enumerative.MultisetPartitionTraverser", false]], "multivariatebeta() (in module sympy.stats)": [[241, "sympy.stats.MultivariateBeta", false]], "multivariateewens() (in module sympy.stats)": [[241, "sympy.stats.MultivariateEwens", false]], "multivariatelaplace() (in module sympy.stats)": [[241, "sympy.stats.MultivariateLaplace", false]], "multivariatenormal() (in module sympy.stats)": [[241, "sympy.stats.MultivariateNormal", false]], "multivariatepolynomialerror (class in sympy.polys.polyerrors)": [[214, "sympy.polys.polyerrors.MultivariatePolynomialError", false]], "multivariatet() (in module sympy.stats)": [[241, "sympy.stats.MultivariateT", false]], "musculotendon_dynamics (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.musculotendon_dynamics", false]], "musculotendonbase (class in sympy.physics.biomechanics.musculotendon)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase", false]], "musculotendondegroote2016 (class in sympy.physics.biomechanics.musculotendon)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonDeGroote2016", false]], "musculotendonformulation (class in sympy.physics.biomechanics.musculotendon)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonFormulation", false]], "mutabledensematrix (class in sympy.matrices.dense)": [[119, "sympy.matrices.dense.MutableDenseMatrix", false]], "mutabledensendimarray (class in sympy.tensor.array)": [[242, "sympy.tensor.array.MutableDenseNDimArray", false]], "mutablesparsematrix (class in sympy.matrices.sparse)": [[126, "sympy.matrices.sparse.MutableSparseMatrix", false]], "mutablesparsendimarray (class in sympy.tensor.array)": [[242, "sympy.tensor.array.MutableSparseNDimArray", false]], "mx (class in sympy.physics.quantum.circuitplot)": [[171, "sympy.physics.quantum.circuitplot.Mx", false]], "mz (class in sympy.physics.quantum.circuitplot)": [[171, "sympy.physics.quantum.circuitplot.Mz", false]], "n (sympy.combinatorics.graycode.graycode property)": [[72, "sympy.combinatorics.graycode.GrayCode.n", false]], "n (sympy.physics.optics.waves.twave property)": [[165, "sympy.physics.optics.waves.TWave.n", false]], "n (sympy.physics.quantum.shor.cmod property)": [[187, "sympy.physics.quantum.shor.CMod.N", false]], "n (sympy.plotting.series.baseseries property)": [[207, "sympy.plotting.series.BaseSeries.n", false]], "n (sympy.polys.numberfields.modules.module property)": [[216, "sympy.polys.numberfields.modules.Module.n", false]], "n (sympy.polys.numberfields.modules.moduleelement property)": [[216, "sympy.polys.numberfields.modules.ModuleElement.n", false]], "n (sympy.series.sequences.recursiveseq property)": [[227, "sympy.series.sequences.RecursiveSeq.n", false]], "n() (in module sympy.core.evalf)": [[88, "sympy.core.evalf.N", false]], "n() (sympy.core.evalf.evalfmixin method)": [[88, "sympy.core.evalf.EvalfMixin.n", false]], "n() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.n", false]], "n() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.n", false]], "n_order() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.n_order", false]], "nakagami() (in module sympy.stats)": [[241, "sympy.stats.Nakagami", false]], "name (sympy.categories.category property)": [[68, "sympy.categories.Category.name", false]], "name (sympy.categories.namedmorphism property)": [[68, "sympy.categories.NamedMorphism.name", false]], "name (sympy.physics.mechanics.body.body property)": [[149, "sympy.physics.mechanics.body.Body.name", false]], "name (sympy.physics.mechanics.joint.joint property)": [[152, "sympy.physics.mechanics.joint.Joint.name", false]], "name (sympy.physics.mechanics.particle.particle property)": [[155, "sympy.physics.mechanics.particle.Particle.name", false]], "name (sympy.physics.mechanics.rigidbody.rigidbody property)": [[155, "sympy.physics.mechanics.rigidbody.RigidBody.name", false]], "namedmorphism (class in sympy.categories)": [[68, "sympy.categories.NamedMorphism", false]], "nan (class in sympy.core.numbers)": [[88, "sympy.core.numbers.NaN", false]], "nand (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.Nand", false]], "nargs (sympy.core.function.functionclass property)": [[88, "sympy.core.function.FunctionClass.nargs", false]], "native_coeffs() (sympy.core.numbers.algebraicnumber method)": [[88, "sympy.core.numbers.AlgebraicNumber.native_coeffs", false]], "naturals (class in sympy.sets.fancysets)": [[229, "sympy.sets.fancysets.Naturals", false]], "naturals0 (class in sympy.sets.fancysets)": [[229, "sympy.sets.fancysets.Naturals0", false]], "nc() (in module sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.nC", false]], "ne (in module sympy.core.relational)": [[88, "sympy.core.relational.Ne", false]], "nearest_common_ancestor() (sympy.polys.numberfields.modules.module method)": [[216, "sympy.polys.numberfields.modules.Module.nearest_common_ancestor", false]], "necklaces() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.necklaces", false]], "neg() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.neg", false]], "neg() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.neg", false]], "neg() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.neg", false]], "neg() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.neg", false]], "neg() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.neg", false]], "neg() (sympy.polys.polyclasses.dmf method)": [[212, "sympy.polys.polyclasses.DMF.neg", false]], "neg() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.neg", false]], "neg() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.neg", false]], "negated (sympy.core.relational.relational property)": [[88, "sympy.core.relational.Relational.negated", false]], "negative": [[88, "term-negative", true]], "negativebinomial() (in module sympy.stats)": [[241, "sympy.stats.NegativeBinomial", false]], "negativeinfinity (class in sympy.core.numbers)": [[88, "sympy.core.numbers.NegativeInfinity", false]], "negativemultinomial() (in module sympy.stats)": [[241, "sympy.stats.NegativeMultinomial", false]], "negativeone (class in sympy.core.numbers)": [[88, "sympy.core.numbers.NegativeOne", false]], "negativepredicate (class in sympy.assumptions.predicates.order)": [[65, "sympy.assumptions.predicates.order.NegativePredicate", false]], "new() (sympy.polys.domains.gaussiandomains.gaussianelement class method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianElement.new", false]], "new() (sympy.polys.matrices.sdm.sdm class method)": [[210, "sympy.polys.matrices.sdm.SDM.new", false]], "new() (sympy.polys.polytools.poly class method)": [[217, "sympy.polys.polytools.Poly.new", false]], "new() (sympy.polys.rootoftools.rootsum class method)": [[217, "sympy.polys.rootoftools.RootSum.new", false]], "newtons_method() (in module sympy.codegen.algorithms)": [[69, "sympy.codegen.algorithms.newtons_method", false]], "newtons_method_function() (in module sympy.codegen.algorithms)": [[69, "sympy.codegen.algorithms.newtons_method_function", false]], "next() (sympy.combinatorics.graycode.graycode method)": [[72, "sympy.combinatorics.graycode.GrayCode.next", false]], "next() (sympy.combinatorics.prufer.prufer method)": [[82, "sympy.combinatorics.prufer.Prufer.next", false]], "next() (sympy.printing.pretty.stringpict.stringpict static method)": [[221, "sympy.printing.pretty.stringpict.stringPict.next", false]], "next_binary() (sympy.combinatorics.subsets.subset method)": [[83, "sympy.combinatorics.subsets.Subset.next_binary", false]], "next_gray() (sympy.combinatorics.subsets.subset method)": [[83, "sympy.combinatorics.subsets.Subset.next_gray", false]], "next_lex() (sympy.combinatorics.partitions.integerpartition method)": [[77, "sympy.combinatorics.partitions.IntegerPartition.next_lex", false]], "next_lex() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.next_lex", false]], "next_lexicographic() (sympy.combinatorics.subsets.subset method)": [[83, "sympy.combinatorics.subsets.Subset.next_lexicographic", false]], "next_nonlex() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.next_nonlex", false]], "next_trotterjohnson() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.next_trotterjohnson", false]], "nextprime() (in module sympy.ntheory.generate)": [[128, "sympy.ntheory.generate.nextprime", false]], "nfloat() (in module sympy.core.function)": [[88, "sympy.core.function.nfloat", false]], "nine_point_circle (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.nine_point_circle", false]], "nnz() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.nnz", false]], "nnz() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.nnz", false]], "nnz() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.nnz", false]], "nnz() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.nnz", false]], "no (class in sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.NO", false]], "no_attrs_in_subclass (class in sympy.utilities.decorator)": [[255, "sympy.utilities.decorator.no_attrs_in_subclass", false]], "no_symmetry() (sympy.tensor.tensor.tensorsymmetry class method)": [[247, "sympy.tensor.tensor.TensorSymmetry.no_symmetry", false]], "nocache_fail() (in module sympy.testing.pytest)": [[250, "sympy.testing.pytest.nocache_fail", false]], "node (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Node", false]], "node_labels (sympy.physics.continuum_mechanics.truss.truss property)": [[140, "sympy.physics.continuum_mechanics.truss.Truss.node_labels", false]], "node_positions (sympy.physics.continuum_mechanics.truss.truss property)": [[140, "sympy.physics.continuum_mechanics.truss.Truss.node_positions", false]], "nodes (sympy.combinatorics.prufer.prufer property)": [[82, "sympy.combinatorics.prufer.Prufer.nodes", false]], "nodes (sympy.physics.continuum_mechanics.truss.truss property)": [[140, "sympy.physics.continuum_mechanics.truss.Truss.nodes", false]], "nonelementaryintegral (class in sympy.integrals.risch)": [[115, "sympy.integrals.risch.NonElementaryIntegral", false]], "nonetoken (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.NoneToken", false]], "nonholonomic_constraints (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.nonholonomic_constraints", false]], "nonlinsolve() (in module sympy.solvers.solveset)": [[240, "sympy.solvers.solveset.nonlinsolve", false]], "nonnegative": [[88, "term-nonnegative", true]], "nonnegativepredicate (class in sympy.assumptions.predicates.order)": [[65, "sympy.assumptions.predicates.order.NonNegativePredicate", false]], "nonpositive": [[88, "term-nonpositive", true]], "nonpositivepredicate (class in sympy.assumptions.predicates.order)": [[65, "sympy.assumptions.predicates.order.NonPositivePredicate", false]], "nonsquarematrixerror (class in sympy.matrices.matrixbase)": [[124, "sympy.matrices.matrixbase.NonSquareMatrixError", false]], "nonzero": [[88, "term-nonzero", true]], "nonzeropredicate (class in sympy.assumptions.predicates.order)": [[65, "sympy.assumptions.predicates.order.NonZeroPredicate", false]], "nor (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.Nor", false]], "norm (sympy.physics.quantum.state.wavefunction property)": [[189, "sympy.physics.quantum.state.Wavefunction.norm", false]], "norm() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.norm", false]], "norm() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.norm", false]], "norm() (sympy.polys.numberfields.modules.powerbasiselement method)": [[216, "sympy.polys.numberfields.modules.PowerBasisElement.norm", false]], "norm() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.norm", false]], "norm() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.norm", false]], "normal() (in module sympy.stats)": [[241, "sympy.stats.Normal", false]], "normal() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.normal", false]], "normal_closure() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.normal_closure", false]], "normal_lines() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.normal_lines", false]], "normal_vector (sympy.geometry.plane.plane property)": [[102, "sympy.geometry.plane.Plane.normal_vector", false]], "normalgamma() (in module sympy.stats)": [[241, "sympy.stats.NormalGamma", false]], "normalize() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.normalize", false]], "normalize() (sympy.physics.quantum.state.wavefunction method)": [[189, "sympy.physics.quantum.state.Wavefunction.normalize", false]], "normalize() (sympy.physics.vector.vector.vector method)": [[200, "sympy.physics.vector.vector.Vector.normalize", false]], "normalize() (sympy.polys.domains.gaussiandomains.gaussianintegerring method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianIntegerRing.normalize", false]], "normalize() (sympy.vector.vector.vector method)": [[265, "sympy.vector.vector.Vector.normalize", false]], "normalize_theta_set() (in module sympy.sets.fancysets)": [[229, "sympy.sets.fancysets.normalize_theta_set", false]], "normalized() (in module sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.normalized", false]], "normalized() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.normalized", false]], "normalpredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.NormalPredicate", false]], "normalpspace (class in sympy.stats.crv_types)": [[241, "sympy.stats.crv_types.NormalPSpace", false]], "not (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.Not", false]], "not_empty_in() (in module sympy.calculus.util)": [[67, "sympy.calculus.util.not_empty_in", false]], "not_point() (sympy.physics.quantum.circuitplot.circuitplot method)": [[171, "sympy.physics.quantum.circuitplot.CircuitPlot.not_point", false]], "notalgebraic (class in sympy.polys.polyerrors)": [[214, "sympy.polys.polyerrors.NotAlgebraic", false]], "notinvertible (class in sympy.polys.polyerrors)": [[214, "sympy.polys.polyerrors.NotInvertible", false]], "notiterable (class in sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.NotIterable", false]], "notreversible (class in sympy.polys.polyerrors)": [[214, "sympy.polys.polyerrors.NotReversible", false]], "np() (in module sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.nP", false]], "npartitions() (in module sympy.ntheory.partitions_)": [[128, "sympy.ntheory.partitions_.npartitions", false]], "nqubits (sympy.physics.quantum.gate.cgate property)": [[175, "sympy.physics.quantum.gate.CGate.nqubits", false]], "nqubits (sympy.physics.quantum.gate.gate property)": [[175, "sympy.physics.quantum.gate.Gate.nqubits", false]], "nroots() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.nroots", false]], "nroots() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.nroots", false]], "nseries() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.nseries", false]], "nsimplify() (in module sympy.simplify.simplify)": [[233, "sympy.simplify.simplify.nsimplify", false]], "nsimplify() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.nsimplify", false]], "nsolve() (in module sympy.solvers.solvers)": [[239, "sympy.solvers.solvers.nsolve", false]], "nt() (in module sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.nT", false]], "nth() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.nth", false]], "nth() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.nth", false]], "nth_power_roots_poly() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.nth_power_roots_poly", false]], "nth_power_roots_poly() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.nth_power_roots_poly", false]], "nthalgebraic (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.NthAlgebraic", false]], "nthlinearconstantcoeffhomogeneous (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.NthLinearConstantCoeffHomogeneous", false]], "nthlinearconstantcoeffundeterminedcoefficients (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.NthLinearConstantCoeffUndeterminedCoefficients", false]], "nthlinearconstantcoeffvariationofparameters (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.NthLinearConstantCoeffVariationOfParameters", false]], "nthlineareulereqhomogeneous (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.NthLinearEulerEqHomogeneous", false]], "nthlineareulereqnonhomogeneousundeterminedcoefficients (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.NthLinearEulerEqNonhomogeneousUndeterminedCoefficients", false]], "nthlineareulereqnonhomogeneousvariationofparameters (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.NthLinearEulerEqNonhomogeneousVariationOfParameters", false]], "nthorderreducible (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.NthOrderReducible", false]], "nthroot() (in module sympy.simplify.simplify)": [[233, "sympy.simplify.simplify.nthroot", false]], "nthroot_mod() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.nthroot_mod", false]], "ntt() (in module sympy.discrete.transforms)": [[91, "sympy.discrete.transforms.ntt", false]], "nu (sympy.functions.special.hyper.meijerg property)": [[96, "sympy.functions.special.hyper.meijerg.nu", false]], "nullspace() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.nullspace", false]], "nullspace() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.nullspace", false]], "nullspace() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.nullspace", false]], "nullspace() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.nullspace", false]], "nullspace() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.nullspace", false]], "nullspace_from_rref() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.nullspace_from_rref", false]], "nullspace_from_rref() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.nullspace_from_rref", false]], "nullspace_from_rref() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.nullspace_from_rref", false]], "nullspace_from_rref() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.nullspace_from_rref", false]], "num (sympy.physics.control.lti.feedback property)": [[144, "sympy.physics.control.lti.Feedback.num", false]], "num (sympy.physics.control.lti.transferfunction property)": [[144, "sympy.physics.control.lti.TransferFunction.num", false]], "num_digits() (in module sympy.core.intfunc)": [[88, "sympy.core.intfunc.num_digits", false]], "num_inputs (sympy.physics.control.lti.mimofeedback property)": [[144, "sympy.physics.control.lti.MIMOFeedback.num_inputs", false]], "num_inputs (sympy.physics.control.lti.mimoparallel property)": [[144, "sympy.physics.control.lti.MIMOParallel.num_inputs", false]], "num_inputs (sympy.physics.control.lti.mimoseries property)": [[144, "sympy.physics.control.lti.MIMOSeries.num_inputs", false]], "num_inputs (sympy.physics.control.lti.transferfunctionmatrix property)": [[144, "sympy.physics.control.lti.TransferFunctionMatrix.num_inputs", false]], "num_outputs (sympy.physics.control.lti.mimofeedback property)": [[144, "sympy.physics.control.lti.MIMOFeedback.num_outputs", false]], "num_outputs (sympy.physics.control.lti.mimoparallel property)": [[144, "sympy.physics.control.lti.MIMOParallel.num_outputs", false]], "num_outputs (sympy.physics.control.lti.mimoseries property)": [[144, "sympy.physics.control.lti.MIMOSeries.num_outputs", false]], "num_outputs (sympy.physics.control.lti.transferfunctionmatrix property)": [[144, "sympy.physics.control.lti.TransferFunctionMatrix.num_outputs", false]], "number": [[15, "term-Number", true]], "number (class in sympy.core.numbers)": [[88, "sympy.core.numbers.Number", false]], "number_field (sympy.polys.numberfields.modules.module property)": [[216, "sympy.polys.numberfields.modules.Module.number_field", false]], "numbered_symbols() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.numbered_symbols", false]], "numberkind (in module sympy.core.kind)": [[88, "sympy.core.kind.NumberKind", false]], "numbersymbol (class in sympy.core.numbers)": [[88, "sympy.core.numbers.NumberSymbol", false]], "numer() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.numer", false]], "numer() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.numer", false]], "numer() (sympy.polys.domains.expressiondomain method)": [[212, "sympy.polys.domains.ExpressionDomain.numer", false]], "numer() (sympy.polys.domains.fractionfield method)": [[212, "sympy.polys.domains.FractionField.numer", false]], "numer() (sympy.polys.domains.gaussiandomains.gaussianrationalfield method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianRationalField.numer", false]], "numer() (sympy.polys.domains.gmpyrationalfield method)": [[212, "sympy.polys.domains.GMPYRationalField.numer", false]], "numer() (sympy.polys.domains.rationalfield method)": [[212, "sympy.polys.domains.RationalField.numer", false]], "numer() (sympy.polys.domains.ring.ring method)": [[212, "sympy.polys.domains.ring.Ring.numer", false]], "numer() (sympy.polys.polyclasses.dmf method)": [[212, "sympy.polys.polyclasses.DMF.numer", false]], "numerator() (sympy.polys.numberfields.modules.powerbasiselement method)": [[216, "sympy.polys.numberfields.modules.PowerBasisElement.numerator", false]], "numeric": [[15, "term-Numeric", true]], "object (class in sympy.categories)": [[68, "sympy.categories.Object", false]], "objects (sympy.categories.category property)": [[68, "sympy.categories.Category.objects", false]], "objects (sympy.categories.diagram property)": [[68, "sympy.categories.Diagram.objects", false]], "obstaclesetpathway (class in sympy.physics.mechanics.pathway)": [[156, "sympy.physics.mechanics.pathway.ObstacleSetPathway", false]], "octave_code() (in module sympy.printing.octave)": [[221, "sympy.printing.octave.octave_code", false]], "octavecodegen (class in sympy.utilities.codegen)": [[254, "sympy.utilities.codegen.OctaveCodeGen", false]], "octavecodeprinter (class in sympy.printing.octave)": [[221, "sympy.printing.octave.OctaveCodePrinter", false]], "odd": [[88, "term-odd", true]], "oddpredicate (class in sympy.assumptions.predicates.ntheory)": [[65, "sympy.assumptions.predicates.ntheory.OddPredicate", false]], "ode_1st_power_series() (in module sympy.solvers.ode.ode)": [[237, "sympy.solvers.ode.ode.ode_1st_power_series", false]], "ode_2nd_power_series_ordinary() (in module sympy.solvers.ode.ode)": [[237, "sympy.solvers.ode.ode.ode_2nd_power_series_ordinary", false]], "ode_2nd_power_series_regular() (in module sympy.solvers.ode.ode)": [[237, "sympy.solvers.ode.ode.ode_2nd_power_series_regular", false]], "ode_order() (in module sympy.solvers.deutils)": [[239, "sympy.solvers.deutils.ode_order", false]], "ode_sol_simplicity() (in module sympy.solvers.ode.ode)": [[237, "sympy.solvers.ode.ode.ode_sol_simplicity", false]], "odesimp() (in module sympy.solvers.ode.ode)": [[237, "sympy.solvers.ode.ode.odesimp", false]], "of_type() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.of_type", false]], "offset (sympy.tensor.indexed.indexedbase property)": [[246, "sympy.tensor.indexed.IndexedBase.offset", false]], "old_frac_field() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.old_frac_field", false]], "old_poly_ring() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.old_poly_ring", false]], "one (class in sympy.core.numbers)": [[88, "sympy.core.numbers.One", false]], "one (sympy.polys.domains.domain.domain attribute)": [[212, "sympy.polys.domains.domain.Domain.one", false]], "one (sympy.polys.polytools.poly property)": [[217, "sympy.polys.polytools.Poly.one", false]], "one() (sympy.polys.numberfields.modules.module method)": [[216, "sympy.polys.numberfields.modules.Module.one", false]], "one_qubit_box() (sympy.physics.quantum.circuitplot.circuitplot method)": [[171, "sympy.physics.quantum.circuitplot.CircuitPlot.one_qubit_box", false]], "onequbitgate (class in sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.OneQubitGate", false]], "ones() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.ones", false]], "ones() (sympy.matrices.matrixbase.matrixbase class method)": [[124, "sympy.matrices.matrixbase.MatrixBase.ones", false]], "ones() (sympy.polys.matrices._dfm.dfm class method)": [[210, "sympy.polys.matrices._dfm.DFM.ones", false]], "ones() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.ones", false]], "oo": [[15, "term-oo", true]], "open() (sympy.sets.sets.interval class method)": [[229, "sympy.sets.sets.Interval.open", false]], "operationnotsupported (class in sympy.polys.polyerrors)": [[214, "sympy.polys.polyerrors.OperationNotSupported", false]], "operator (class in sympy.physics.quantum.operator)": [[180, "sympy.physics.quantum.operator.Operator", false]], "operators (sympy.physics.quantum.state.statebase property)": [[189, "sympy.physics.quantum.state.StateBase.operators", false]], "operators_to_state() (in module sympy.physics.quantum.operatorset)": [[181, "sympy.physics.quantum.operatorset.operators_to_state", false]], "opt_cse() (in module sympy.simplify.cse_main)": [[233, "sympy.simplify.cse_main.opt_cse", false]], "optimal_fiber_length (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.optimal_fiber_length", false]], "optimal_pennation_angle (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.optimal_pennation_angle", false]], "optimization (class in sympy.codegen.rewriting)": [[69, "sympy.codegen.rewriting.Optimization", false]], "optimize() (in module sympy.codegen.rewriting)": [[69, "sympy.codegen.rewriting.optimize", false]], "optionerror (class in sympy.polys.polyerrors)": [[214, "sympy.polys.polyerrors.OptionError", false]], "options (class in sympy.polys.polyoptions)": [[214, "sympy.polys.polyoptions.Options", false]], "or (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.Or", false]], "oraclegate (class in sympy.physics.quantum.grover)": [[176, "sympy.physics.quantum.grover.OracleGate", false]], "orbit() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.orbit", false]], "orbit_rep() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.orbit_rep", false]], "orbit_transversal() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.orbit_transversal", false]], "orbits() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.orbits", false]], "order (class in sympy.series.order)": [[228, "sympy.series.order.Order", false]], "order (sympy.functions.special.bessel.besselbase property)": [[96, "sympy.functions.special.bessel.BesselBase.order", false]], "order (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.order", false]], "order (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.order", false]], "order (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[131, "sympy.physics.biomechanics.activation.ZerothOrderActivation.order", false]], "order() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.order", false]], "order() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.order", false]], "ordered() (in module sympy.core.sorting)": [[88, "sympy.core.sorting.ordered", false]], "ordered_partitions() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.ordered_partitions", false]], "ordinal() (in module sympy.utilities.misc)": [[262, "sympy.utilities.misc.ordinal", false]], "orient() (sympy.physics.vector.frame.referenceframe method)": [[200, "sympy.physics.vector.frame.ReferenceFrame.orient", false]], "orient_axis() (sympy.physics.vector.frame.referenceframe method)": [[200, "sympy.physics.vector.frame.ReferenceFrame.orient_axis", false]], "orient_body_fixed() (sympy.physics.vector.frame.referenceframe method)": [[200, "sympy.physics.vector.frame.ReferenceFrame.orient_body_fixed", false]], "orient_dcm() (sympy.physics.vector.frame.referenceframe method)": [[200, "sympy.physics.vector.frame.ReferenceFrame.orient_dcm", false]], "orient_new() (sympy.vector.coordsysrect.coordsys3d method)": [[265, "sympy.vector.coordsysrect.CoordSys3D.orient_new", false]], "orient_new_axis() (sympy.vector.coordsysrect.coordsys3d method)": [[265, "sympy.vector.coordsysrect.CoordSys3D.orient_new_axis", false]], "orient_new_body() (sympy.vector.coordsysrect.coordsys3d method)": [[265, "sympy.vector.coordsysrect.CoordSys3D.orient_new_body", false]], "orient_new_quaternion() (sympy.vector.coordsysrect.coordsys3d method)": [[265, "sympy.vector.coordsysrect.CoordSys3D.orient_new_quaternion", false]], "orient_new_space() (sympy.vector.coordsysrect.coordsys3d method)": [[265, "sympy.vector.coordsysrect.CoordSys3D.orient_new_space", false]], "orient_quaternion() (sympy.physics.vector.frame.referenceframe method)": [[200, "sympy.physics.vector.frame.ReferenceFrame.orient_quaternion", false]], "orient_space_fixed() (sympy.physics.vector.frame.referenceframe method)": [[200, "sympy.physics.vector.frame.ReferenceFrame.orient_space_fixed", false]], "orienter (class in sympy.vector.orienters)": [[267, "sympy.vector.orienters.Orienter", false]], "orientnew() (sympy.physics.vector.frame.referenceframe method)": [[200, "sympy.physics.vector.frame.ReferenceFrame.orientnew", false]], "orig_ext (sympy.polys.domains.algebraicfield attribute)": [[212, "sympy.polys.domains.AlgebraicField.orig_ext", false]], "origin (sympy.geometry.point.point property)": [[103, "sympy.geometry.point.Point.origin", false]], "orthocenter (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.orthocenter", false]], "orthogonal() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.orthogonal", false]], "orthogonal_direction (sympy.geometry.point.point property)": [[103, "sympy.geometry.point.Point.orthogonal_direction", false]], "orthogonalbra (class in sympy.physics.quantum.state)": [[189, "sympy.physics.quantum.state.OrthogonalBra", false]], "orthogonalize() (sympy.matrices.matrixbase.matrixbase class method)": [[124, "sympy.matrices.matrixbase.MatrixBase.orthogonalize", false]], "orthogonalket (class in sympy.physics.quantum.state)": [[189, "sympy.physics.quantum.state.OrthogonalKet", false]], "orthogonalpredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.OrthogonalPredicate", false]], "orthogonalstate (class in sympy.physics.quantum.state)": [[189, "sympy.physics.quantum.state.OrthogonalState", false]], "outer() (in module sympy.physics.vector.functions)": [[202, "sympy.physics.vector.functions.outer", false]], "outer() (sympy.physics.vector.vector.vector method)": [[200, "sympy.physics.vector.vector.Vector.outer", false]], "outer() (sympy.vector.vector.vector method)": [[265, "sympy.vector.vector.Vector.outer", false]], "outerproduct (class in sympy.physics.quantum.operator)": [[180, "sympy.physics.quantum.operator.OuterProduct", false]], "outputargument (class in sympy.utilities.codegen)": [[254, "sympy.utilities.codegen.OutputArgument", false]], "over_power_basis() (sympy.polys.numberfields.modules.moduleelement method)": [[216, "sympy.polys.numberfields.modules.ModuleElement.over_power_basis", false]], "p (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.p", false]], "p (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.p", false]], "p (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[131, "sympy.physics.biomechanics.activation.ZerothOrderActivation.p", false]], "p (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.p", false]], "p() (in module sympy.stats)": [[241, "sympy.stats.P", false]], "p1 (sympy.geometry.line.linearentity property)": [[101, "sympy.geometry.line.LinearEntity.p1", false]], "p1 (sympy.geometry.plane.plane property)": [[102, "sympy.geometry.plane.Plane.p1", false]], "p2 (sympy.geometry.line.linearentity property)": [[101, "sympy.geometry.line.LinearEntity.p2", false]], "padded_key() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.padded_key", false]], "parallel (class in sympy.physics.control.lti)": [[144, "sympy.physics.control.lti.Parallel", false]], "parallel() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.parallel", false]], "parallel_axis() (sympy.physics.mechanics.body.body method)": [[149, "sympy.physics.mechanics.body.Body.parallel_axis", false]], "parallel_axis() (sympy.physics.mechanics.particle.particle method)": [[155, "sympy.physics.mechanics.particle.Particle.parallel_axis", false]], "parallel_axis() (sympy.physics.mechanics.rigidbody.rigidbody method)": [[155, "sympy.physics.mechanics.rigidbody.RigidBody.parallel_axis", false]], "parallel_line() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.parallel_line", false]], "parallel_plane() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.parallel_plane", false]], "parallel_poly_from_expr() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.parallel_poly_from_expr", false]], "parameter (sympy.geometry.curve.curve property)": [[97, "sympy.geometry.curve.Curve.parameter", false]], "parameter_value() (sympy.geometry.entity.geometryentity method)": [[99, "sympy.geometry.entity.GeometryEntity.parameter_value", false]], "parameter_value() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.parameter_value", false]], "parametric2dlineseries (class in sympy.plotting.series)": [[207, "sympy.plotting.series.Parametric2DLineSeries", false]], "parametric3dlineseries (class in sympy.plotting.series)": [[207, "sympy.plotting.series.Parametric3DLineSeries", false]], "parametricintegral (class in sympy.vector.integrals)": [[265, "sympy.vector.integrals.ParametricIntegral", false]], "parametricregion (class in sympy.vector.parametricregion)": [[265, "sympy.vector.parametricregion.ParametricRegion", false]], "parametricsurfaceseries (class in sympy.plotting.series)": [[207, "sympy.plotting.series.ParametricSurfaceSeries", false]], "parametrize_ternary_quadratic() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.parametrize_ternary_quadratic", false]], "params (sympy.plotting.series.baseseries property)": [[207, "sympy.plotting.series.BaseSeries.params", false]], "parens() (sympy.printing.pretty.stringpict.stringpict method)": [[221, "sympy.printing.pretty.stringpict.stringPict.parens", false]], "parent (sympy.physics.mechanics.joint.joint property)": [[152, "sympy.physics.mechanics.joint.Joint.parent", false]], "parent (sympy.polys.numberfields.modules.module property)": [[216, "sympy.polys.numberfields.modules.Module.parent", false]], "parent() (sympy.polys.domains.domainelement.domainelement method)": [[212, "sympy.polys.domains.domainelement.DomainElement.parent", false]], "parent() (sympy.polys.domains.gaussiandomains.gaussianelement method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianElement.parent", false]], "parent_axis (sympy.physics.mechanics.joint.joint property)": [[152, "sympy.physics.mechanics.joint.Joint.parent_axis", false]], "parent_point (sympy.physics.mechanics.joint.joint property)": [[152, "sympy.physics.mechanics.joint.Joint.parent_point", false]], "parenthesize_super() (sympy.printing.latex.latexprinter method)": [[221, "sympy.printing.latex.LatexPrinter.parenthesize_super", false]], "pareto() (in module sympy.stats)": [[241, "sympy.stats.Pareto", false]], "pargs (sympy.functions.special.delta_functions.heaviside property)": [[96, "sympy.functions.special.delta_functions.Heaviside.pargs", false]], "parity() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.parity", false]], "parse_expr() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.parse_expr", false]], "parse_latex() (in module sympy.parsing.latex)": [[130, "sympy.parsing.latex.parse_latex", false]], "parse_latex_lark() (in module sympy.parsing.latex)": [[130, "sympy.parsing.latex.parse_latex_lark", false]], "parse_mathematica() (in module sympy.parsing.mathematica)": [[130, "sympy.parsing.mathematica.parse_mathematica", false]], "parse_maxima() (in module sympy.parsing.maxima)": [[130, "sympy.parsing.maxima.parse_maxima", false]], "partial_velocity() (in module sympy.physics.vector.functions)": [[204, "sympy.physics.vector.functions.partial_velocity", false]], "partial_velocity() (sympy.physics.vector.frame.referenceframe method)": [[200, "sympy.physics.vector.frame.ReferenceFrame.partial_velocity", false]], "partial_velocity() (sympy.physics.vector.point.point method)": [[204, "sympy.physics.vector.point.Point.partial_velocity", false]], "partialderivative (class in sympy.tensor.toperators)": [[248, "sympy.tensor.toperators.PartialDerivative", false]], "particle (class in sympy.physics.mechanics.particle)": [[155, "sympy.physics.mechanics.particle.Particle", false]], "particular() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.particular", false]], "partition (class in sympy.combinatorics.partitions)": [[77, "sympy.combinatorics.partitions.Partition", false]], "partition (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.partition", false]], "partition (sympy.combinatorics.partitions.partition property)": [[77, "sympy.combinatorics.partitions.Partition.partition", false]], "partition() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.partition", false]], "partitions() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.partitions", false]], "pat_matrix() (in module sympy.physics.matrices)": [[147, "sympy.physics.matrices.pat_matrix", false]], "patch (class in sympy.diffgeom)": [[90, "sympy.diffgeom.Patch", false]], "pathway (sympy.physics.mechanics.actuator.forceactuator property)": [[148, "sympy.physics.mechanics.actuator.ForceActuator.pathway", false]], "pathwaybase (class in sympy.physics.mechanics.pathway)": [[156, "sympy.physics.mechanics.pathway.PathwayBase", false]], "pde_1st_linear_constant_coeff() (in module sympy.solvers.pde)": [[238, "sympy.solvers.pde.pde_1st_linear_constant_coeff", false]], "pde_1st_linear_constant_coeff_homogeneous() (in module sympy.solvers.pde)": [[238, "sympy.solvers.pde.pde_1st_linear_constant_coeff_homogeneous", false]], "pde_1st_linear_variable_coeff() (in module sympy.solvers.pde)": [[238, "sympy.solvers.pde.pde_1st_linear_variable_coeff", false]], "pde_separate() (in module sympy.solvers.pde)": [[238, "sympy.solvers.pde.pde_separate", false]], "pde_separate_add() (in module sympy.solvers.pde)": [[238, "sympy.solvers.pde.pde_separate_add", false]], "pde_separate_mul() (in module sympy.solvers.pde)": [[238, "sympy.solvers.pde.pde_separate_mul", false]], "pdiv() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.pdiv", false]], "pdiv() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.pdiv", false]], "pdiv() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.pdiv", false]], "pdiv() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.pdiv", false]], "pdsolve() (in module sympy.solvers.pde)": [[238, "sympy.solvers.pde.pdsolve", false]], "peak_isometric_force (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.peak_isometric_force", false]], "pep 335": [[88, "index-0", false], [88, "index-1", false], [88, "index-2", false], [88, "index-3", false]], "per() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.per", false]], "per() (sympy.polys.polyclasses.dmf method)": [[212, "sympy.polys.polyclasses.DMF.per", false]], "per() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.per", false]], "perfect_power() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.perfect_power", false]], "periapsis (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.periapsis", false]], "perimeter (sympy.geometry.polygon.polygon property)": [[104, "sympy.geometry.polygon.Polygon.perimeter", false]], "period_find() (in module sympy.physics.quantum.shor)": [[187, "sympy.physics.quantum.shor.period_find", false]], "periodic_argument (class in sympy.functions.elementary.complexes)": [[94, "sympy.functions.elementary.complexes.periodic_argument", false]], "periodicity() (in module sympy.calculus.util)": [[67, "sympy.calculus.util.periodicity", false]], "perm2tensor() (sympy.tensor.tensor.tensmul method)": [[247, "sympy.tensor.tensor.TensMul.perm2tensor", false]], "permutation (class in sympy.combinatorics.permutations)": [[80, "sympy.combinatorics.permutations.Permutation", false]], "permutationgroup (class in sympy.combinatorics.perm_groups)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup", false]], "permutationmatrix (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.PermutationMatrix", false]], "permutationoperator (class in sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.PermutationOperator", false]], "permute() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.permute", false]], "permute() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.permute", false]], "permute_cols() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.permute_cols", false]], "permute_rows() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.permute_rows", false]], "permute_signs() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.permute_signs", false]], "permutebkwd() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.permuteBkwd", false]], "permutedims (class in sympy.tensor.array.expressions)": [[243, "sympy.tensor.array.expressions.PermuteDims", false]], "permutedims() (in module sympy.tensor.array)": [[242, "sympy.tensor.array.permutedims", false]], "permutefwd() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.permuteFwd", false]], "perpendicular_bisector() (sympy.geometry.line.segment method)": [[101, "sympy.geometry.line.Segment.perpendicular_bisector", false]], "perpendicular_line() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.perpendicular_line", false]], "perpendicular_line() (sympy.geometry.line.linearentity2d method)": [[101, "sympy.geometry.line.LinearEntity2D.perpendicular_line", false]], "perpendicular_line() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.perpendicular_line", false]], "perpendicular_plane() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.perpendicular_plane", false]], "perpendicular_segment() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.perpendicular_segment", false]], "pexquo() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.pexquo", false]], "pexquo() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.pexquo", false]], "pexquo() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.pexquo", false]], "pexquo() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.pexquo", false]], "pgl2f5() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.PGL2F5", false]], "pgroup (sympy.combinatorics.polyhedron.polyhedron property)": [[81, "sympy.combinatorics.polyhedron.Polyhedron.pgroup", false]], "phase (in module sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.Phase", false]], "phase (sympy.physics.optics.waves.twave property)": [[165, "sympy.physics.optics.waves.TWave.phase", false]], "phase_retarder() (in module sympy.physics.optics.polarization)": [[163, "sympy.physics.optics.polarization.phase_retarder", false]], "phasegate (class in sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.PhaseGate", false]], "pi (class in sympy.core.numbers)": [[88, "sympy.core.numbers.Pi", false]], "pi_hex_digits() (in module sympy.ntheory.bbp_pi)": [[128, "sympy.ntheory.bbp_pi.pi_hex_digits", false]], "piabbra (class in sympy.physics.quantum.piab)": [[182, "sympy.physics.quantum.piab.PIABBra", false]], "piabhamiltonian (class in sympy.physics.quantum.piab)": [[182, "sympy.physics.quantum.piab.PIABHamiltonian", false]], "piabket (class in sympy.physics.quantum.piab)": [[182, "sympy.physics.quantum.piab.PIABKet", false]], "piecewise (class in sympy.functions.elementary.piecewise)": [[94, "sympy.functions.elementary.piecewise.Piecewise", false]], "piecewise_exclusive() (in module sympy.functions.elementary.piecewise)": [[94, "sympy.functions.elementary.piecewise.piecewise_exclusive", false]], "piecewise_fold() (in module sympy.functions.elementary.piecewise)": [[94, "sympy.functions.elementary.piecewise.piecewise_fold", false]], "piecewise_integrate() (sympy.functions.elementary.piecewise.piecewise method)": [[94, "sympy.functions.elementary.piecewise.Piecewise.piecewise_integrate", false]], "pinjoint (class in sympy.physics.mechanics.joint)": [[152, "sympy.physics.mechanics.joint.PinJoint", false]], "pinv() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.pinv", false]], "pinv_solve() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.pinv_solve", false]], "planar_coordinates (sympy.physics.mechanics.joint.planarjoint property)": [[152, "sympy.physics.mechanics.joint.PlanarJoint.planar_coordinates", false]], "planar_speeds (sympy.physics.mechanics.joint.planarjoint property)": [[152, "sympy.physics.mechanics.joint.PlanarJoint.planar_speeds", false]], "planar_vectors (sympy.physics.mechanics.joint.planarjoint property)": [[152, "sympy.physics.mechanics.joint.PlanarJoint.planar_vectors", false]], "planarjoint (class in sympy.physics.mechanics.joint)": [[152, "sympy.physics.mechanics.joint.PlanarJoint", false]], "plane (class in sympy.geometry.plane)": [[102, "sympy.geometry.plane.Plane", false]], "plot (class in sympy.plotting.plot)": [[207, "sympy.plotting.plot.Plot", false]], "plot() (in module sympy.plotting.plot)": [[207, "sympy.plotting.plot.plot", false]], "plot3d() (in module sympy.plotting.plot)": [[207, "sympy.plotting.plot.plot3d", false]], "plot3d_parametric_line() (in module sympy.plotting.plot)": [[207, "sympy.plotting.plot.plot3d_parametric_line", false]], "plot3d_parametric_surface() (in module sympy.plotting.plot)": [[207, "sympy.plotting.plot.plot3d_parametric_surface", false]], "plot_bending_moment() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.plot_bending_moment", false]], "plot_bending_moment() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.plot_bending_moment", false]], "plot_deflection() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.plot_deflection", false]], "plot_deflection() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.plot_deflection", false]], "plot_gate() (sympy.physics.quantum.gate.cgate method)": [[175, "sympy.physics.quantum.gate.CGate.plot_gate", false]], "plot_ild_moment() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.plot_ild_moment", false]], "plot_ild_reactions() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.plot_ild_reactions", false]], "plot_ild_shear() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.plot_ild_shear", false]], "plot_implicit() (in module sympy.plotting.plot_implicit)": [[207, "sympy.plotting.plot_implicit.plot_implicit", false]], "plot_interval() (sympy.geometry.curve.curve method)": [[97, "sympy.geometry.curve.Curve.plot_interval", false]], "plot_interval() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.plot_interval", false]], "plot_interval() (sympy.geometry.line.line method)": [[101, "sympy.geometry.line.Line.plot_interval", false]], "plot_interval() (sympy.geometry.line.ray method)": [[101, "sympy.geometry.line.Ray.plot_interval", false]], "plot_interval() (sympy.geometry.line.segment method)": [[101, "sympy.geometry.line.Segment.plot_interval", false]], "plot_interval() (sympy.geometry.polygon.polygon method)": [[104, "sympy.geometry.polygon.Polygon.plot_interval", false]], "plot_loading_results() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.plot_loading_results", false]], "plot_loading_results() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.plot_loading_results", false]], "plot_parametric() (in module sympy.plotting.plot)": [[207, "sympy.plotting.plot.plot_parametric", false]], "plot_shear_force() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.plot_shear_force", false]], "plot_shear_force() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.plot_shear_force", false]], "plot_shear_stress() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.plot_shear_stress", false]], "plot_shear_stress() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.plot_shear_stress", false]], "plot_slope() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.plot_slope", false]], "plot_slope() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.plot_slope", false]], "plot_tension() (sympy.physics.continuum_mechanics.cable.cable method)": [[138, "sympy.physics.continuum_mechanics.cable.Cable.plot_tension", false]], "plotgrid (class in sympy.plotting.plot)": [[207, "sympy.plotting.plot.PlotGrid", false]], "point (class in sympy.diffgeom)": [[90, "sympy.diffgeom.Point", false]], "point (class in sympy.geometry.point)": [[103, "sympy.geometry.point.Point", false]], "point (class in sympy.physics.vector.point)": [[204, "sympy.physics.vector.point.Point", false]], "point (sympy.core.function.subs property)": [[88, "sympy.core.function.Subs.point", false]], "point (sympy.physics.mechanics.body.body property)": [[149, "sympy.physics.mechanics.body.Body.point", false]], "point (sympy.physics.mechanics.particle.particle property)": [[155, "sympy.physics.mechanics.particle.Particle.point", false]], "point (sympy.physics.mechanics.wrapping_geometry.wrappingcylinder property)": [[159, "sympy.physics.mechanics.wrapping_geometry.WrappingCylinder.point", false]], "point (sympy.physics.mechanics.wrapping_geometry.wrappinggeometrybase property)": [[159, "sympy.physics.mechanics.wrapping_geometry.WrappingGeometryBase.point", false]], "point (sympy.physics.mechanics.wrapping_geometry.wrappingsphere property)": [[159, "sympy.physics.mechanics.wrapping_geometry.WrappingSphere.point", false]], "point() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.point", false]], "point2d (class in sympy.geometry.point)": [[103, "sympy.geometry.point.Point2D", false]], "point3d (class in sympy.geometry.point)": [[103, "sympy.geometry.point.Point3D", false]], "point_cflexure() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.point_cflexure", false]], "point_on_surface() (sympy.physics.mechanics.wrapping_geometry.wrappingcylinder method)": [[159, "sympy.physics.mechanics.wrapping_geometry.WrappingCylinder.point_on_surface", false]], "point_on_surface() (sympy.physics.mechanics.wrapping_geometry.wrappinggeometrybase method)": [[159, "sympy.physics.mechanics.wrapping_geometry.WrappingGeometryBase.point_on_surface", false]], "point_on_surface() (sympy.physics.mechanics.wrapping_geometry.wrappingsphere method)": [[159, "sympy.physics.mechanics.wrapping_geometry.WrappingSphere.point_on_surface", false]], "point_to_coords() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.point_to_coords", false]], "pointer (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Pointer", false]], "points (sympy.geometry.line.linearentity property)": [[101, "sympy.geometry.line.LinearEntity.points", false]], "pointwise_stabilizer() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.pointwise_stabilizer", false]], "poisson() (in module sympy.stats)": [[241, "sympy.stats.Poisson", false]], "poissonprocess (class in sympy.stats)": [[241, "sympy.stats.PoissonProcess", false]], "polar_lift (class in sympy.functions.elementary.complexes)": [[94, "sympy.functions.elementary.complexes.polar_lift", false]], "polar_moment() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.polar_moment", false]], "polar_second_moment_of_area() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.polar_second_moment_of_area", false]], "polar_second_moment_of_area() (sympy.geometry.polygon.polygon method)": [[104, "sympy.geometry.polygon.Polygon.polar_second_moment_of_area", false]], "polarcomplexregion (class in sympy.sets.fancysets)": [[229, "sympy.sets.fancysets.PolarComplexRegion", false]], "polarizing_beam_splitter() (in module sympy.physics.optics.polarization)": [[163, "sympy.physics.optics.polarization.polarizing_beam_splitter", false]], "pole_zero_numerical_data() (sympy.physics.control.control_plots method)": [[142, "sympy.physics.control.control_plots.pole_zero_numerical_data", false]], "pole_zero_plot() (sympy.physics.control.control_plots method)": [[142, "sympy.physics.control.control_plots.pole_zero_plot", false]], "poleerror (class in sympy.core.function)": [[88, "sympy.core.function.PoleError", false]], "poles() (sympy.physics.control.lti.transferfunction method)": [[144, "sympy.physics.control.lti.TransferFunction.poles", false]], "polificationfailed (class in sympy.polys.polyerrors)": [[214, "sympy.polys.polyerrors.PolificationFailed", false]], "pollard_pm1() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.pollard_pm1", false]], "pollard_rho() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.pollard_rho", false]], "poly (class in sympy.polys.polytools)": [[217, "sympy.polys.polytools.Poly", false]], "poly() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.poly", false]], "poly() (sympy.polys.numberfields.modules.powerbasiselement method)": [[216, "sympy.polys.numberfields.modules.PowerBasisElement.poly", false]], "poly_from_expr() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.poly_from_expr", false]], "poly_ring() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.poly_ring", false]], "poly_unify() (sympy.polys.polyclasses.dmf method)": [[212, "sympy.polys.polyclasses.DMF.poly_unify", false]], "polycyclic_group() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.polycyclic_group", false]], "polyelement (class in sympy.polys.rings)": [[212, "sympy.polys.rings.PolyElement", false]], "polygamma (class in sympy.functions.special.gamma_functions)": [[96, "sympy.functions.special.gamma_functions.polygamma", false]], "polygon (class in sympy.geometry.polygon)": [[104, "sympy.geometry.polygon.Polygon", false]], "polyhedron (class in sympy.combinatorics.polyhedron)": [[81, "sympy.combinatorics.polyhedron.Polyhedron", false]], "polylog (class in sympy.functions.special.zeta_functions)": [[96, "sympy.functions.special.zeta_functions.polylog", false]], "polynomial() (sympy.series.formal.formalpowerseries method)": [[223, "sympy.series.formal.FormalPowerSeries.polynomial", false]], "polynomial_congruence() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.polynomial_congruence", false]], "polynomialerror (class in sympy.polys.polyerrors)": [[214, "sympy.polys.polyerrors.PolynomialError", false]], "polynomialring (class in sympy.polys.domains)": [[212, "sympy.polys.domains.PolynomialRing", false]], "polyring (class in sympy.polys.rings)": [[212, "sympy.polys.rings.PolyRing", false]], "polys": [[15, "term-Polys", true]], "polytope_integrate() (in module sympy.integrals.intpoly)": [[115, "sympy.integrals.intpoly.polytope_integrate", false]], "pos() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.pos", false]], "pos_from() (sympy.physics.vector.point.point method)": [[204, "sympy.physics.vector.point.Point.pos_from", false]], "posform() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.POSform", false]], "posify() (in module sympy.simplify.simplify)": [[233, "sympy.simplify.simplify.posify", false]], "position (sympy.physics.quantum.cartesian.xbra property)": [[169, "sympy.physics.quantum.cartesian.XBra.position", false]], "position (sympy.physics.quantum.cartesian.xket property)": [[169, "sympy.physics.quantum.cartesian.XKet.position", false]], "position_wrt() (sympy.vector.coordsysrect.coordsys3d method)": [[265, "sympy.vector.coordsysrect.CoordSys3D.position_wrt", false]], "position_x (sympy.physics.quantum.cartesian.positionstate3d property)": [[169, "sympy.physics.quantum.cartesian.PositionState3D.position_x", false]], "position_y (sympy.physics.quantum.cartesian.positionstate3d property)": [[169, "sympy.physics.quantum.cartesian.PositionState3D.position_y", false]], "position_z (sympy.physics.quantum.cartesian.positionstate3d property)": [[169, "sympy.physics.quantum.cartesian.PositionState3D.position_z", false]], "positionbra3d (class in sympy.physics.quantum.cartesian)": [[169, "sympy.physics.quantum.cartesian.PositionBra3D", false]], "positionket3d (class in sympy.physics.quantum.cartesian)": [[169, "sympy.physics.quantum.cartesian.PositionKet3D", false]], "positionstate3d (class in sympy.physics.quantum.cartesian)": [[169, "sympy.physics.quantum.cartesian.PositionState3D", false]], "positive": [[88, "term-positive", true]], "positive_roots() (sympy.liealgebras.type_a.typea method)": [[117, "sympy.liealgebras.type_a.TypeA.positive_roots", false]], "positive_roots() (sympy.liealgebras.type_b.typeb method)": [[117, "sympy.liealgebras.type_b.TypeB.positive_roots", false]], "positive_roots() (sympy.liealgebras.type_c.typec method)": [[117, "sympy.liealgebras.type_c.TypeC.positive_roots", false]], "positive_roots() (sympy.liealgebras.type_d.typed method)": [[117, "sympy.liealgebras.type_d.TypeD.positive_roots", false]], "positive_roots() (sympy.liealgebras.type_e.typee method)": [[117, "sympy.liealgebras.type_e.TypeE.positive_roots", false]], "positive_roots() (sympy.liealgebras.type_f.typef method)": [[117, "sympy.liealgebras.type_f.TypeF.positive_roots", false]], "positive_roots() (sympy.liealgebras.type_g.typeg method)": [[117, "sympy.liealgebras.type_g.TypeG.positive_roots", false]], "positivedefinitepredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.PositiveDefinitePredicate", false]], "positivepredicate (class in sympy.assumptions.predicates.order)": [[65, "sympy.assumptions.predicates.order.PositivePredicate", false]], "postdecrement (class in sympy.codegen.cnodes)": [[69, "sympy.codegen.cnodes.PostDecrement", false]], "postfixes() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.postfixes", false]], "postincrement (class in sympy.codegen.cnodes)": [[69, "sympy.codegen.cnodes.PostIncrement", false]], "postorder_traversal() (in module sympy.core.traversal)": [[88, "sympy.core.traversal.postorder_traversal", false]], "potential_energy (sympy.physics.mechanics.body.body property)": [[149, "sympy.physics.mechanics.body.Body.potential_energy", false]], "potential_energy (sympy.physics.mechanics.particle.particle property)": [[155, "sympy.physics.mechanics.particle.Particle.potential_energy", false]], "potential_energy (sympy.physics.mechanics.rigidbody.rigidbody property)": [[155, "sympy.physics.mechanics.rigidbody.RigidBody.potential_energy", false]], "potential_energy() (in module sympy.physics.mechanics.functions)": [[155, "sympy.physics.mechanics.functions.potential_energy", false]], "pow (class in sympy.core.power)": [[88, "sympy.core.power.Pow", false]], "pow() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.pow", false]], "pow() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.pow", false]], "pow() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.pow", false]], "pow() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.pow", false]], "pow() (sympy.polys.polyclasses.anp method)": [[212, "sympy.polys.polyclasses.ANP.pow", false]], "pow() (sympy.polys.polyclasses.dmf method)": [[212, "sympy.polys.polyclasses.DMF.pow", false]], "pow() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.pow", false]], "pow() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.pow", false]], "pow_cos_sin() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.pow_cos_sin", false]], "pow_xin() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.pow_xin", false]], "powdenest() (in module sympy.simplify.powsimp)": [[233, "sympy.simplify.powsimp.powdenest", false]], "power_basis_ancestor() (sympy.polys.numberfields.modules.module method)": [[216, "sympy.polys.numberfields.modules.Module.power_basis_ancestor", false]], "power_representation() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.power_representation", false]], "powerbasis (class in sympy.polys.numberfields.modules)": [[216, "sympy.polys.numberfields.modules.PowerBasis", false]], "powerbasiselement (class in sympy.polys.numberfields.modules)": [[216, "sympy.polys.numberfields.modules.PowerBasisElement", false]], "powerfunction() (in module sympy.stats)": [[241, "sympy.stats.PowerFunction", false]], "powerset (class in sympy.sets.powerset)": [[229, "sympy.sets.powerset.PowerSet", false]], "powerset() (sympy.sets.sets.set method)": [[229, "sympy.sets.sets.Set.powerset", false]], "powsimp() (in module sympy.simplify.powsimp)": [[233, "sympy.simplify.powsimp.powsimp", false]], "powsimp() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.powsimp", false]], "pprint_nodes() (in module sympy.printing.tree)": [[221, "sympy.printing.tree.pprint_nodes", false]], "pqa() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.PQa", false]], "pquo() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.pquo", false]], "pquo() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.pquo", false]], "pquo() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.pquo", false]], "pquo() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.pquo", false]], "precedence (in module sympy.printing.precedence)": [[221, "sympy.printing.precedence.PRECEDENCE", false]], "precedence() (in module sympy.printing.precedence)": [[221, "sympy.printing.precedence.precedence", false]], "precedence_functions (in module sympy.printing.precedence)": [[221, "sympy.printing.precedence.PRECEDENCE_FUNCTIONS", false]], "precedence_values (in module sympy.printing.precedence)": [[221, "sympy.printing.precedence.PRECEDENCE_VALUES", false]], "precisionexhausted (class in sympy.core.evalf)": [[88, "sympy.core.evalf.PrecisionExhausted", false]], "predecrement (class in sympy.codegen.cnodes)": [[69, "sympy.codegen.cnodes.PreDecrement", false]], "predicate (class in sympy.assumptions.assume)": [[63, "sympy.assumptions.assume.Predicate", false]], "preferred_index (sympy.functions.special.tensor_functions.kroneckerdelta property)": [[96, "sympy.functions.special.tensor_functions.KroneckerDelta.preferred_index", false]], "preferred_index (sympy.physics.secondquant.kroneckerdelta property)": [[191, "sympy.physics.secondquant.KroneckerDelta.preferred_index", false]], "prefix (class in sympy.physics.units.prefixes)": [[197, "sympy.physics.units.prefixes.Prefix", false]], "prefixes() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.prefixes", false]], "preincrement (class in sympy.codegen.cnodes)": [[69, "sympy.codegen.cnodes.PreIncrement", false]], "prem() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.prem", false]], "prem() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.prem", false]], "prem() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.prem", false]], "prem() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.prem", false]], "premises (sympy.categories.diagram property)": [[68, "sympy.categories.Diagram.premises", false]], "preorder_traversal() (in module sympy.core.traversal)": [[88, "sympy.core.traversal.preorder_traversal", false]], "presentation() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.presentation", false]], "pretty() (in module sympy.printing.pretty.pretty)": [[221, "sympy.printing.pretty.pretty.pretty", false]], "pretty_atom() (in module sympy.printing.pretty.pretty_symbology)": [[221, "sympy.printing.pretty.pretty_symbology.pretty_atom", false]], "pretty_print() (in module sympy.printing.pretty.pretty)": [[221, "sympy.printing.pretty.pretty.pretty_print", false]], "pretty_symbol() (in module sympy.printing.pretty.pretty_symbology)": [[221, "sympy.printing.pretty.pretty_symbology.pretty_symbol", false]], "pretty_try_use_unicode() (in module sympy.printing.pretty.pretty_symbology)": [[221, "sympy.printing.pretty.pretty_symbology.pretty_try_use_unicode", false]], "pretty_use_unicode() (in module sympy.printing.pretty.pretty_symbology)": [[221, "sympy.printing.pretty.pretty_symbology.pretty_use_unicode", false]], "prettyform (class in sympy.printing.pretty.stringpict)": [[221, "sympy.printing.pretty.stringpict.prettyForm", false]], "prettyprinter (class in sympy.printing.pretty.pretty)": [[221, "sympy.printing.pretty.pretty.PrettyPrinter", false]], "prev() (sympy.combinatorics.prufer.prufer method)": [[82, "sympy.combinatorics.prufer.Prufer.prev", false]], "prev_binary() (sympy.combinatorics.subsets.subset method)": [[83, "sympy.combinatorics.subsets.Subset.prev_binary", false]], "prev_gray() (sympy.combinatorics.subsets.subset method)": [[83, "sympy.combinatorics.subsets.Subset.prev_gray", false]], "prev_lex() (sympy.combinatorics.partitions.integerpartition method)": [[77, "sympy.combinatorics.partitions.IntegerPartition.prev_lex", false]], "prev_lexicographic() (sympy.combinatorics.subsets.subset method)": [[83, "sympy.combinatorics.subsets.Subset.prev_lexicographic", false]], "preview() (in module sympy.printing.preview)": [[221, "sympy.printing.preview.preview", false]], "preview_diagram() (in module sympy.categories.diagram_drawing)": [[68, "sympy.categories.diagram_drawing.preview_diagram", false]], "prevprime() (in module sympy.ntheory.generate)": [[128, "sympy.ntheory.generate.prevprime", false]], "prime": [[88, "term-prime", true]], "prime() (in module sympy.ntheory.generate)": [[128, "sympy.ntheory.generate.prime", false]], "prime_as_sum_of_two_squares() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.prime_as_sum_of_two_squares", false]], "prime_decomp() (in module sympy.polys.numberfields.primes)": [[216, "sympy.polys.numberfields.primes.prime_decomp", false]], "prime_valuation() (in module sympy.polys.numberfields.primes)": [[216, "sympy.polys.numberfields.primes.prime_valuation", false]], "primefactors() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.primefactors", false]], "primeideal (class in sympy.polys.numberfields.primes)": [[216, "sympy.polys.numberfields.primes.PrimeIdeal", false]], "primenu (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.primenu", false]], "primenu() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.primenu", false]], "primeomega (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.primeomega", false]], "primeomega() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.primeomega", false]], "primepi (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.primepi", false]], "primepi() (in module sympy.ntheory.generate)": [[128, "sympy.ntheory.generate.primepi", false]], "primepredicate (class in sympy.assumptions.predicates.ntheory)": [[65, "sympy.assumptions.predicates.ntheory.PrimePredicate", false]], "primerange() (in module sympy.ntheory.generate)": [[128, "sympy.ntheory.generate.primerange", false]], "primerange() (sympy.ntheory.generate.sieve method)": [[128, "sympy.ntheory.generate.Sieve.primerange", false]], "primes_above() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.primes_above", false]], "primitive() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.primitive", false]], "primitive() (sympy.core.add.add method)": [[88, "sympy.core.add.Add.primitive", false]], "primitive() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.primitive", false]], "primitive() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.primitive", false]], "primitive() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.primitive", false]], "primitive() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.primitive", false]], "primitive() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.primitive", false]], "primitive_element() (in module sympy.polys.numberfields.subfield)": [[216, "sympy.polys.numberfields.subfield.primitive_element", false]], "primitive_element() (sympy.core.numbers.algebraicnumber method)": [[88, "sympy.core.numbers.AlgebraicNumber.primitive_element", false]], "primitive_root() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.primitive_root", false]], "primorial() (in module sympy.ntheory.generate)": [[128, "sympy.ntheory.generate.primorial", false]], "principal_branch (class in sympy.functions.elementary.complexes)": [[94, "sympy.functions.elementary.complexes.principal_branch", false]], "principal_value() (sympy.integrals.integrals.integral method)": [[115, "sympy.integrals.integrals.Integral.principal_value", false]], "print (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Print", false]], "print_ccode() (in module sympy.printing.c)": [[221, "sympy.printing.c.print_ccode", false]], "print_dim_base() (sympy.physics.units.dimensions.dimensionsystem method)": [[193, "sympy.physics.units.dimensions.DimensionSystem.print_dim_base", false]], "print_fcode() (in module sympy.printing.fortran)": [[221, "sympy.printing.fortran.print_fcode", false]], "print_gtk() (in module sympy.printing.gtk)": [[221, "sympy.printing.gtk.print_gtk", false]], "print_latex() (in module sympy.printing.latex)": [[221, "sympy.printing.latex.print_latex", false]], "print_maple_code() (in module sympy.printing.maple)": [[221, "sympy.printing.maple.print_maple_code", false]], "print_mathml() (in module sympy.printing.mathml)": [[221, "sympy.printing.mathml.print_mathml", false]], "print_node() (in module sympy.printing.tree)": [[221, "sympy.printing.tree.print_node", false]], "print_nonzero() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.print_nonzero", false]], "print_rcode() (in module sympy.printing.rcode)": [[221, "sympy.printing.rcode.print_rcode", false]], "print_tree() (in module sympy.printing.tree)": [[221, "sympy.printing.tree.print_tree", false]], "printer (class in sympy.printing.printer)": [[221, "sympy.printing.printer.Printer", false]], "printing": [[15, "term-Printing", true]], "printmethod (sympy.printing.aesaracode.aesaraprinter attribute)": [[221, "sympy.printing.aesaracode.AesaraPrinter.printmethod", false]], "printmethod (sympy.printing.c.c89codeprinter attribute)": [[221, "sympy.printing.c.C89CodePrinter.printmethod", false]], "printmethod (sympy.printing.c.c99codeprinter attribute)": [[221, "sympy.printing.c.C99CodePrinter.printmethod", false]], "printmethod (sympy.printing.codeprinter.codeprinter attribute)": [[221, "sympy.printing.codeprinter.CodePrinter.printmethod", false]], "printmethod (sympy.printing.cxx.cxx11codeprinter attribute)": [[221, "sympy.printing.cxx.CXX11CodePrinter.printmethod", false]], "printmethod (sympy.printing.cxx.cxx98codeprinter attribute)": [[221, "sympy.printing.cxx.CXX98CodePrinter.printmethod", false]], "printmethod (sympy.printing.fortran.fcodeprinter attribute)": [[221, "sympy.printing.fortran.FCodePrinter.printmethod", false]], "printmethod (sympy.printing.jscode.javascriptcodeprinter attribute)": [[221, "sympy.printing.jscode.JavascriptCodePrinter.printmethod", false]], "printmethod (sympy.printing.julia.juliacodeprinter attribute)": [[221, "sympy.printing.julia.JuliaCodePrinter.printmethod", false]], "printmethod (sympy.printing.lambdarepr.lambdaprinter attribute)": [[221, "sympy.printing.lambdarepr.LambdaPrinter.printmethod", false]], "printmethod (sympy.printing.latex.latexprinter attribute)": [[221, "sympy.printing.latex.LatexPrinter.printmethod", false]], "printmethod (sympy.printing.maple.maplecodeprinter attribute)": [[221, "sympy.printing.maple.MapleCodePrinter.printmethod", false]], "printmethod (sympy.printing.mathematica.mcodeprinter attribute)": [[221, "sympy.printing.mathematica.MCodePrinter.printmethod", false]], "printmethod (sympy.printing.mathml.mathmlcontentprinter attribute)": [[221, "sympy.printing.mathml.MathMLContentPrinter.printmethod", false]], "printmethod (sympy.printing.mathml.mathmlpresentationprinter attribute)": [[221, "sympy.printing.mathml.MathMLPresentationPrinter.printmethod", false]], "printmethod (sympy.printing.octave.octavecodeprinter attribute)": [[221, "sympy.printing.octave.OctaveCodePrinter.printmethod", false]], "printmethod (sympy.printing.pretty.pretty.prettyprinter attribute)": [[221, "sympy.printing.pretty.pretty.PrettyPrinter.printmethod", false]], "printmethod (sympy.printing.printer.printer attribute)": [[221, "sympy.printing.printer.Printer.printmethod", false]], "printmethod (sympy.printing.rcode.rcodeprinter attribute)": [[221, "sympy.printing.rcode.RCodePrinter.printmethod", false]], "printmethod (sympy.printing.repr.reprprinter attribute)": [[221, "sympy.printing.repr.ReprPrinter.printmethod", false]], "printmethod (sympy.printing.rust.rustcodeprinter attribute)": [[221, "sympy.printing.rust.RustCodePrinter.printmethod", false]], "printmethod (sympy.printing.smtlib.smtlibprinter attribute)": [[221, "sympy.printing.smtlib.SMTLibPrinter.printmethod", false]], "printmethod (sympy.printing.str.strprinter attribute)": [[221, "sympy.printing.str.StrPrinter.printmethod", false]], "prismaticjoint (class in sympy.physics.mechanics.joint)": [[152, "sympy.physics.mechanics.joint.PrismaticJoint", false]], "prob() (sympy.physics.quantum.state.wavefunction method)": [[189, "sympy.physics.quantum.state.Wavefunction.prob", false]], "probability (class in sympy.stats)": [[241, "sympy.stats.Probability", false]], "probability() (sympy.stats.bernoulliprocess method)": [[241, "sympy.stats.BernoulliProcess.probability", false]], "process_series() (sympy.plotting.plot.matplotlibbackend method)": [[207, "sympy.plotting.plot.MatplotlibBackend.process_series", false]], "prod() (in module sympy.core.mul)": [[88, "sympy.core.mul.prod", false]], "product (class in sympy.concrete.products)": [[87, "sympy.concrete.products.Product", false]], "product() (in module sympy.concrete.products)": [[87, "sympy.concrete.products.product", false]], "product() (sympy.polys.agca.ideals.ideal method)": [[208, "sympy.polys.agca.ideals.Ideal.product", false]], "product() (sympy.series.formal.formalpowerseries method)": [[223, "sympy.series.formal.FormalPowerSeries.product", false]], "product_matrix_left (sympy.algebras.quaternion property)": [[61, "sympy.algebras.Quaternion.product_matrix_left", false]], "product_matrix_right (sympy.algebras.quaternion property)": [[61, "sympy.algebras.Quaternion.product_matrix_right", false]], "productdomain (class in sympy.stats.rv)": [[241, "sympy.stats.rv.ProductDomain", false]], "productpspace (class in sympy.stats.rv)": [[241, "sympy.stats.rv.ProductPSpace", false]], "productset (class in sympy.sets.sets)": [[229, "sympy.sets.sets.ProductSet", false]], "program (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.Program", false]], "project() (sympy.geometry.point.point static method)": [[103, "sympy.geometry.point.Point.project", false]], "project() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.project", false]], "projection() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.projection", false]], "projection() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.projection", false]], "projection() (sympy.vector.vector.vector method)": [[265, "sympy.vector.vector.Vector.projection", false]], "projection_line() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.projection_line", false]], "proper_divisor_count() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.proper_divisor_count", false]], "proper_divisors() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.proper_divisors", false]], "proth_test() (in module sympy.ntheory.primetest)": [[128, "sympy.ntheory.primetest.proth_test", false]], "prufer (class in sympy.combinatorics.prufer)": [[82, "sympy.combinatorics.prufer.Prufer", false]], "prufer_rank() (sympy.combinatorics.prufer.prufer method)": [[82, "sympy.combinatorics.prufer.Prufer.prufer_rank", false]], "prufer_repr (sympy.combinatorics.prufer.prufer property)": [[82, "sympy.combinatorics.prufer.Prufer.prufer_repr", false]], "psets (sympy.sets.fancysets.complexregion property)": [[229, "sympy.sets.fancysets.ComplexRegion.psets", false]], "psi_n() (in module sympy.physics.qho_1d)": [[167, "sympy.physics.qho_1d.psi_n", false]], "psi_nlm() (in module sympy.physics.hydrogen)": [[146, "sympy.physics.hydrogen.Psi_nlm", false]], "psl2f5() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.PSL2F5", false]], "pspace (class in sympy.stats.rv)": [[241, "sympy.stats.rv.PSpace", false]], "pspace() (in module sympy.stats.rv)": [[241, "sympy.stats.rv.pspace", false]], "public() (in module sympy.utilities.decorator)": [[255, "sympy.utilities.decorator.public", false]], "purepoly (class in sympy.polys.polytools)": [[217, "sympy.polys.polytools.PurePoly", false]], "pxbra (class in sympy.physics.quantum.cartesian)": [[169, "sympy.physics.quantum.cartesian.PxBra", false]], "pxket (class in sympy.physics.quantum.cartesian)": [[169, "sympy.physics.quantum.cartesian.PxKet", false]], "pxop (class in sympy.physics.quantum.cartesian)": [[169, "sympy.physics.quantum.cartesian.PxOp", false]], "pycode() (in module sympy.printing.pycode)": [[221, "sympy.printing.pycode.pycode", false]], "pytestreporter (class in sympy.testing.runtests)": [[252, "sympy.testing.runtests.PyTestReporter", false]], "python enhancement proposals": [[88, "index-0", false], [88, "index-1", false], [88, "index-2", false], [88, "index-3", false]], "pythonfinitefield (class in sympy.polys.domains)": [[212, "sympy.polys.domains.PythonFiniteField", false]], "pythonintegerring (class in sympy.polys.domains)": [[212, "sympy.polys.domains.PythonIntegerRing", false]], "pythonmpq (class in sympy.external.pythonmpq)": [[212, "sympy.external.pythonmpq.PythonMPQ", false]], "pythonrationalfield (class in sympy.polys.domains)": [[212, "sympy.polys.domains.PythonRationalField", false]], "q (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[149, "sympy.physics.mechanics.jointsmethod.JointsMethod.q", false]], "q (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.q", false]], "q (sympy.physics.optics.gaussopt.beamparameter property)": [[160, "sympy.physics.optics.gaussopt.BeamParameter.q", false]], "q_dep (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.q_dep", false]], "q_ind (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.q_ind", false]], "qapply() (in module sympy.physics.quantum.qapply)": [[183, "sympy.physics.quantum.qapply.qapply", false]], "qft (class in sympy.physics.quantum.qft)": [[184, "sympy.physics.quantum.qft.QFT", false]], "qq_col (sympy.polys.numberfields.modules.moduleelement property)": [[216, "sympy.polys.numberfields.modules.ModuleElement.QQ_col", false]], "qq_matrix (sympy.polys.numberfields.modules.submodule property)": [[216, "sympy.polys.numberfields.modules.Submodule.QQ_matrix", false]], "qrdecomposition() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.QRdecomposition", false]], "qrsolve() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.QRsolve", false]], "qs() (in module sympy.ntheory.qs)": [[128, "sympy.ntheory.qs.qs", false]], "quadrant() (sympy.polys.domains.gaussiandomains.gaussianelement method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianElement.quadrant", false]], "quadratic_congruence() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.quadratic_congruence", false]], "quadratic_residues() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.quadratic_residues", false]], "quadraticu() (in module sympy.stats)": [[241, "sympy.stats.QuadraticU", false]], "quantile() (in module sympy.stats)": [[241, "sympy.stats.quantile", false]], "quantity (class in sympy.physics.units.quantities)": [[198, "sympy.physics.units.quantities.Quantity", false]], "quarter_wave_retarder() (in module sympy.physics.optics.polarization)": [[163, "sympy.physics.optics.polarization.quarter_wave_retarder", false]], "quaternion (class in sympy.algebras)": [[61, "sympy.algebras.Quaternion", false]], "quaternionorienter (class in sympy.vector.orienters)": [[267, "sympy.vector.orienters.QuaternionOrienter", false]], "qubit (class in sympy.physics.quantum.qubit)": [[185, "sympy.physics.quantum.qubit.Qubit", false]], "qubit_to_matrix() (in module sympy.physics.quantum.qubit)": [[185, "sympy.physics.quantum.qubit.qubit_to_matrix", false]], "qubitbra (class in sympy.physics.quantum.qubit)": [[185, "sympy.physics.quantum.qubit.QubitBra", false]], "quo() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.quo", false]], "quo() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.quo", false]], "quo() (sympy.polys.domains.field.field method)": [[212, "sympy.polys.domains.field.Field.quo", false]], "quo() (sympy.polys.domains.gmpyrationalfield method)": [[212, "sympy.polys.domains.GMPYRationalField.quo", false]], "quo() (sympy.polys.domains.rationalfield method)": [[212, "sympy.polys.domains.RationalField.quo", false]], "quo() (sympy.polys.domains.ring.ring method)": [[212, "sympy.polys.domains.ring.Ring.quo", false]], "quo() (sympy.polys.polyclasses.dmf method)": [[212, "sympy.polys.polyclasses.DMF.quo", false]], "quo() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.quo", false]], "quo() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.quo", false]], "quo_ground() (sympy.polys.polyclasses.anp method)": [[212, "sympy.polys.polyclasses.ANP.quo_ground", false]], "quo_ground() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.quo_ground", false]], "quo_ground() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.quo_ground", false]], "quotedstring (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.QuotedString", false]], "quotient() (sympy.polys.agca.ideals.ideal method)": [[208, "sympy.polys.agca.ideals.Ideal.quotient", false]], "quotient_codomain() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[208, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.quotient_codomain", false]], "quotient_domain() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[208, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.quotient_domain", false]], "quotient_hom() (sympy.polys.agca.modules.quotientmodule method)": [[208, "sympy.polys.agca.modules.QuotientModule.quotient_hom", false]], "quotient_hom() (sympy.polys.agca.modules.subquotientmodule method)": [[208, "sympy.polys.agca.modules.SubQuotientModule.quotient_hom", false]], "quotient_module() (sympy.polys.agca.modules.freemodule method)": [[208, "sympy.polys.agca.modules.FreeModule.quotient_module", false]], "quotient_module() (sympy.polys.agca.modules.module method)": [[208, "sympy.polys.agca.modules.Module.quotient_module", false]], "quotient_module() (sympy.polys.agca.modules.submodule method)": [[208, "sympy.polys.agca.modules.SubModule.quotient_module", false]], "quotient_ring() (sympy.polys.domains.ring.ring method)": [[212, "sympy.polys.domains.ring.Ring.quotient_ring", false]], "quotientmodule (class in sympy.polys.agca.modules)": [[208, "sympy.polys.agca.modules.QuotientModule", false]], "quotientmoduleelement (class in sympy.polys.agca.modules)": [[208, "sympy.polys.agca.modules.QuotientModuleElement", false]], "quotientring (class in sympy.polys.domains.quotientring)": [[212, "sympy.polys.domains.quotientring.QuotientRing", false]], "r (class in sympy.polys.matrices.dense)": [[210, "sympy.polys.matrices.dense.R", false]], "r (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.r", false]], "r (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.r", false]], "r (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[131, "sympy.physics.biomechanics.activation.ZerothOrderActivation.r", false]], "r (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.r", false]], "r_nl() (in module sympy.physics.hydrogen)": [[146, "sympy.physics.hydrogen.R_nl", false]], "r_nl() (in module sympy.physics.sho)": [[192, "sympy.physics.sho.R_nl", false]], "racah() (in module sympy.physics.wigner)": [[206, "sympy.physics.wigner.racah", false]], "rad_rationalize() (in module sympy.simplify.radsimp)": [[233, "sympy.simplify.radsimp.rad_rationalize", false]], "rademacher() (in module sympy.stats)": [[241, "sympy.stats.Rademacher", false]], "radical() (sympy.polys.agca.ideals.ideal method)": [[208, "sympy.polys.agca.ideals.Ideal.radical", false]], "radius (sympy.geometry.ellipse.circle property)": [[98, "sympy.geometry.ellipse.Circle.radius", false]], "radius (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.radius", false]], "radius (sympy.physics.mechanics.wrapping_geometry.wrappingcylinder property)": [[159, "sympy.physics.mechanics.wrapping_geometry.WrappingCylinder.radius", false]], "radius (sympy.physics.mechanics.wrapping_geometry.wrappingsphere property)": [[159, "sympy.physics.mechanics.wrapping_geometry.WrappingSphere.radius", false]], "radius (sympy.physics.optics.gaussopt.beamparameter property)": [[160, "sympy.physics.optics.gaussopt.BeamParameter.radius", false]], "radius_of_convergence (sympy.functions.special.hyper.hyper property)": [[96, "sympy.functions.special.hyper.hyper.radius_of_convergence", false]], "radsimp() (in module sympy.simplify.radsimp)": [[233, "sympy.simplify.radsimp.radsimp", false]], "radsimp() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.radsimp", false]], "raise (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Raise", false]], "raise_on_deprecated() (in module sympy.testing.runtests)": [[252, "sympy.testing.runtests.raise_on_deprecated", false]], "raisedcosine() (in module sympy.stats)": [[241, "sympy.stats.RaisedCosine", false]], "raises() (in module sympy.testing.pytest)": [[250, "sympy.testing.pytest.raises", false]], "ramp_response_numerical_data() (sympy.physics.control.control_plots method)": [[142, "sympy.physics.control.control_plots.ramp_response_numerical_data", false]], "ramp_response_plot() (sympy.physics.control.control_plots method)": [[142, "sympy.physics.control.control_plots.ramp_response_plot", false]], "randmatrix() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.randMatrix", false]], "random() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.random", false]], "random() (sympy.combinatorics.permutations.permutation class method)": [[80, "sympy.combinatorics.permutations.Permutation.random", false]], "random_bitstring() (sympy.combinatorics.graycode method)": [[72, "sympy.combinatorics.graycode.random_bitstring", false]], "random_circuit() (in module sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.random_circuit", false]], "random_complex_number() (in module sympy.core.random)": [[88, "sympy.core.random.random_complex_number", false]], "random_derangement() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.random_derangement", false]], "random_integer_partition() (in module sympy.combinatorics.partitions)": [[77, "sympy.combinatorics.partitions.random_integer_partition", false]], "random_point() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.random_point", false]], "random_point() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.random_point", false]], "random_point() (sympy.geometry.plane.plane method)": [[102, "sympy.geometry.plane.Plane.random_point", false]], "random_poly() (in module sympy.polys.specialpolys)": [[217, "sympy.polys.specialpolys.random_poly", false]], "random_pr() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.random_pr", false]], "random_stab() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.random_stab", false]], "random_symbols() (in module sympy.stats.rv)": [[241, "sympy.stats.rv.random_symbols", false]], "randomdomain (class in sympy.stats.rv)": [[241, "sympy.stats.rv.RandomDomain", false]], "randomsymbol (class in sympy.stats.rv)": [[241, "sympy.stats.rv.RandomSymbol", false]], "randprime() (in module sympy.ntheory.generate)": [[128, "sympy.ntheory.generate.randprime", false]], "range (class in sympy.sets.fancysets)": [[229, "sympy.sets.fancysets.Range", false]], "ranges (sympy.tensor.indexed.indexed property)": [[246, "sympy.tensor.indexed.Indexed.ranges", false]], "rank (sympy.combinatorics.graycode.graycode property)": [[72, "sympy.combinatorics.graycode.GrayCode.rank", false]], "rank (sympy.combinatorics.partitions.partition property)": [[77, "sympy.combinatorics.partitions.Partition.rank", false]], "rank (sympy.combinatorics.prufer.prufer property)": [[82, "sympy.combinatorics.prufer.Prufer.rank", false]], "rank (sympy.tensor.indexed.indexed property)": [[246, "sympy.tensor.indexed.Indexed.rank", false]], "rank() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.rank", false]], "rank() (sympy.liealgebras.cartan_type.standard_cartan method)": [[117, "sympy.liealgebras.cartan_type.Standard_Cartan.rank", false]], "rank() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.rank", false]], "rank_binary (sympy.combinatorics.subsets.subset property)": [[83, "sympy.combinatorics.subsets.Subset.rank_binary", false]], "rank_decomposition() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.rank_decomposition", false]], "rank_gray (sympy.combinatorics.subsets.subset property)": [[83, "sympy.combinatorics.subsets.Subset.rank_gray", false]], "rank_lexicographic (sympy.combinatorics.subsets.subset property)": [[83, "sympy.combinatorics.subsets.Subset.rank_lexicographic", false]], "rank_nonlex() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.rank_nonlex", false]], "rank_trotterjohnson() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.rank_trotterjohnson", false]], "rat_clear_denoms() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.rat_clear_denoms", false]], "ratint() (in module sympy.integrals.rationaltools)": [[115, "sympy.integrals.rationaltools.ratint", false]], "ratint_logpart() (in module sympy.integrals.rationaltools)": [[115, "sympy.integrals.rationaltools.ratint_logpart", false]], "ratint_ratpart() (in module sympy.integrals.rationaltools)": [[115, "sympy.integrals.rationaltools.ratint_ratpart", false]], "rational": [[88, "term-rational", true]], "rational (class in sympy.core.numbers)": [[88, "sympy.core.numbers.Rational", false]], "rational_algorithm() (in module sympy.series.formal)": [[223, "sympy.series.formal.rational_algorithm", false]], "rational_independent() (in module sympy.series.formal)": [[223, "sympy.series.formal.rational_independent", false]], "rational_laurent_series() (in module sympy.solvers.ode.riccati)": [[237, "sympy.solvers.ode.riccati.rational_laurent_series", false]], "rational_parametrization() (sympy.vector.implicitregion.implicitregion method)": [[265, "sympy.vector.implicitregion.ImplicitRegion.rational_parametrization", false]], "rationalfield (class in sympy.polys.domains)": [[212, "sympy.polys.domains.RationalField", false]], "rationalize() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.rationalize", false]], "rationalpredicate (class in sympy.assumptions.predicates.sets)": [[65, "sympy.assumptions.predicates.sets.RationalPredicate", false]], "rationalriccati (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.RationalRiccati", false]], "rationals (class in sympy.sets.fancysets)": [[229, "sympy.sets.fancysets.Rationals", false]], "ratsimp() (in module sympy.simplify.ratsimp)": [[233, "sympy.simplify.ratsimp.ratsimp", false]], "ratsimp() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.ratsimp", false]], "ratsimpmodprime() (in module sympy.simplify.ratsimp)": [[233, "sympy.simplify.ratsimp.ratsimpmodprime", false]], "rawlines() (in module sympy.utilities.misc)": [[262, "sympy.utilities.misc.rawlines", false]], "ray (class in sympy.geometry.line)": [[101, "sympy.geometry.line.Ray", false]], "ray2d (class in sympy.geometry.line)": [[101, "sympy.geometry.line.Ray2D", false]], "ray3d (class in sympy.geometry.line)": [[101, "sympy.geometry.line.Ray3D", false]], "rayleigh() (in module sympy.stats)": [[241, "sympy.stats.Rayleigh", false]], "rayleigh2waist() (in module sympy.physics.optics.gaussopt)": [[160, "sympy.physics.optics.gaussopt.rayleigh2waist", false]], "raytransfermatrix (class in sympy.physics.optics.gaussopt)": [[160, "sympy.physics.optics.gaussopt.RayTransferMatrix", false]], "rcall() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.rcall", false]], "rcode() (in module sympy.printing.rcode)": [[221, "sympy.printing.rcode.rcode", false]], "rcodeprinter (class in sympy.printing.rcode)": [[221, "sympy.printing.rcode.RCodePrinter", false]], "rcollect() (in module sympy.simplify.radsimp)": [[233, "sympy.simplify.radsimp.rcollect", false]], "re (class in sympy.functions.elementary.complexes)": [[94, "sympy.functions.elementary.complexes.re", false]], "reaction_frame (sympy.physics.mechanics.actuator.torqueactuator property)": [[148, "sympy.physics.mechanics.actuator.TorqueActuator.reaction_frame", false]], "reaction_loads (sympy.physics.continuum_mechanics.beam.beam property)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.reaction_loads", false]], "reaction_loads (sympy.physics.continuum_mechanics.cable.cable property)": [[138, "sympy.physics.continuum_mechanics.cable.Cable.reaction_loads", false]], "reaction_loads (sympy.physics.continuum_mechanics.truss.truss property)": [[140, "sympy.physics.continuum_mechanics.truss.Truss.reaction_loads", false]], "real": [[88, "term-real", true]], "real_gaunt() (in module sympy.physics.wigner)": [[206, "sympy.physics.wigner.real_gaunt", false]], "real_root() (in module sympy.functions.elementary.miscellaneous)": [[94, "sympy.functions.elementary.miscellaneous.real_root", false]], "real_roots() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.real_roots", false]], "real_roots() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.real_roots", false]], "real_roots() (sympy.polys.rootoftools.complexrootof class method)": [[217, "sympy.polys.rootoftools.ComplexRootOf.real_roots", false]], "realelementspredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.RealElementsPredicate", false]], "realfield (class in sympy.polys.domains)": [[212, "sympy.polys.domains.RealField", false]], "realnumber (in module sympy.core.numbers)": [[88, "sympy.core.numbers.RealNumber", false]], "realpredicate (class in sympy.assumptions.predicates.sets)": [[65, "sympy.assumptions.predicates.sets.RealPredicate", false]], "reals (class in sympy.sets.fancysets)": [[229, "sympy.sets.fancysets.Reals", false]], "reciprocal() (in module sympy.stats)": [[241, "sympy.stats.Reciprocal", false]], "reconstruct() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.reconstruct", false]], "rectangles (sympy.plotting.plot.plot property)": [[207, "sympy.plotting.plot.Plot.rectangles", false]], "recurrence (sympy.series.sequences.recursiveseq property)": [[227, "sympy.series.sequences.RecursiveSeq.recurrence", false]], "recurrence_memo() (in module sympy.utilities.memoization)": [[261, "sympy.utilities.memoization.recurrence_memo", false]], "recursiveseq (class in sympy.series.sequences)": [[227, "sympy.series.sequences.RecursiveSeq", false]], "red_groebner() (in module sympy.polys.groebnertools)": [[214, "sympy.polys.groebnertools.red_groebner", false]], "reduce() (sympy.polys.polytools.groebnerbasis method)": [[217, "sympy.polys.polytools.GroebnerBasis.reduce", false]], "reduce() (sympy.series.sequences.seqadd static method)": [[227, "sympy.series.sequences.SeqAdd.reduce", false]], "reduce() (sympy.series.sequences.seqmul static method)": [[227, "sympy.series.sequences.SeqMul.reduce", false]], "reduce() (sympy.sets.sets.complement static method)": [[229, "sympy.sets.sets.Complement.reduce", false]], "reduce_abs_inequalities() (in module sympy.solvers.inequalities)": [[236, "sympy.solvers.inequalities.reduce_abs_inequalities", false]], "reduce_abs_inequality() (in module sympy.solvers.inequalities)": [[236, "sympy.solvers.inequalities.reduce_abs_inequality", false]], "reduce_alg_num() (sympy.polys.numberfields.primes.primeideal method)": [[216, "sympy.polys.numberfields.primes.PrimeIdeal.reduce_alg_num", false]], "reduce_anp() (sympy.polys.numberfields.primes.primeideal method)": [[216, "sympy.polys.numberfields.primes.PrimeIdeal.reduce_ANP", false]], "reduce_element() (sympy.polys.agca.ideals.ideal method)": [[208, "sympy.polys.agca.ideals.Ideal.reduce_element", false]], "reduce_element() (sympy.polys.agca.modules.submodule method)": [[208, "sympy.polys.agca.modules.SubModule.reduce_element", false]], "reduce_element() (sympy.polys.numberfields.modules.submodule method)": [[216, "sympy.polys.numberfields.modules.Submodule.reduce_element", false]], "reduce_element() (sympy.polys.numberfields.primes.primeideal method)": [[216, "sympy.polys.numberfields.primes.PrimeIdeal.reduce_element", false]], "reduce_inequalities() (in module sympy.solvers.inequalities)": [[236, "sympy.solvers.inequalities.reduce_inequalities", false]], "reduce_rational_inequalities() (in module sympy.solvers.inequalities)": [[236, "sympy.solvers.inequalities.reduce_rational_inequalities", false]], "reduced() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.reduced", false]], "reduced() (sympy.polys.numberfields.modules.moduleelement method)": [[216, "sympy.polys.numberfields.modules.ModuleElement.reduced", false]], "reduced() (sympy.polys.numberfields.modules.submodule method)": [[216, "sympy.polys.numberfields.modules.Submodule.reduced", false]], "reduced_mod_p() (sympy.polys.numberfields.modules.moduleelement method)": [[216, "sympy.polys.numberfields.modules.ModuleElement.reduced_mod_p", false]], "reduced_totient (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.reduced_totient", false]], "reduced_totient() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.reduced_totient", false]], "referenceframe (class in sympy.physics.vector.frame)": [[200, "sympy.physics.vector.frame.ReferenceFrame", false]], "refine() (in module sympy.assumptions.refine)": [[66, "sympy.assumptions.refine.refine", false]], "refine() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.refine", false]], "refine() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.refine", false]], "refine_abs() (in module sympy.assumptions.refine)": [[66, "sympy.assumptions.refine.refine_abs", false]], "refine_arg() (in module sympy.assumptions.refine)": [[66, "sympy.assumptions.refine.refine_arg", false]], "refine_atan2() (in module sympy.assumptions.refine)": [[66, "sympy.assumptions.refine.refine_atan2", false]], "refine_im() (in module sympy.assumptions.refine)": [[66, "sympy.assumptions.refine.refine_im", false]], "refine_matrixelement() (in module sympy.assumptions.refine)": [[66, "sympy.assumptions.refine.refine_matrixelement", false]], "refine_pow() (in module sympy.assumptions.refine)": [[66, "sympy.assumptions.refine.refine_Pow", false]], "refine_re() (in module sympy.assumptions.refine)": [[66, "sympy.assumptions.refine.refine_re", false]], "refine_root() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.refine_root", false]], "refine_root() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.refine_root", false]], "refine_root() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.refine_root", false]], "refine_sign() (in module sympy.assumptions.refine)": [[66, "sympy.assumptions.refine.refine_sign", false]], "refinementfailed (class in sympy.polys.polyerrors)": [[214, "sympy.polys.polyerrors.RefinementFailed", false]], "reflect() (sympy.geometry.ellipse.circle method)": [[98, "sympy.geometry.ellipse.Circle.reflect", false]], "reflect() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.reflect", false]], "reflect() (sympy.geometry.entity.geometryentity method)": [[99, "sympy.geometry.entity.GeometryEntity.reflect", false]], "reflect() (sympy.geometry.polygon.regularpolygon method)": [[104, "sympy.geometry.polygon.RegularPolygon.reflect", false]], "reflective_filter() (in module sympy.physics.optics.polarization)": [[163, "sympy.physics.optics.polarization.reflective_filter", false]], "refraction_angle() (in module sympy.physics.optics.utils)": [[164, "sympy.physics.optics.utils.refraction_angle", false]], "refractive_index (sympy.physics.optics.medium.medium property)": [[162, "sympy.physics.optics.medium.Medium.refractive_index", false]], "register() (sympy.assumptions.assume.predicate class method)": [[63, "sympy.assumptions.assume.Predicate.register", false]], "register_handler() (in module sympy.assumptions.ask)": [[62, "sympy.assumptions.ask.register_handler", false]], "register_many() (sympy.assumptions.assume.predicate class method)": [[63, "sympy.assumptions.assume.Predicate.register_many", false]], "regular_point() (sympy.vector.implicitregion.implicitregion method)": [[265, "sympy.vector.implicitregion.ImplicitRegion.regular_point", false]], "regularpolygon (class in sympy.geometry.polygon)": [[104, "sympy.geometry.polygon.RegularPolygon", false]], "rel (in module sympy.core.relational)": [[88, "sympy.core.relational.Rel", false]], "relational": [[15, "term-Relational", true]], "relational (class in sympy.core.relational)": [[88, "sympy.core.relational.Relational", false]], "rem() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.rem", false]], "rem() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.rem", false]], "rem() (sympy.polys.domains.field.field method)": [[212, "sympy.polys.domains.field.Field.rem", false]], "rem() (sympy.polys.domains.gmpyrationalfield method)": [[212, "sympy.polys.domains.GMPYRationalField.rem", false]], "rem() (sympy.polys.domains.rationalfield method)": [[212, "sympy.polys.domains.RationalField.rem", false]], "rem() (sympy.polys.domains.ring.ring method)": [[212, "sympy.polys.domains.ring.Ring.rem", false]], "rem() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.rem", false]], "rem() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.rem", false]], "remove_handler() (in module sympy.assumptions.ask)": [[62, "sympy.assumptions.ask.remove_handler", false]], "remove_load() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.remove_load", false]], "remove_load() (sympy.physics.continuum_mechanics.truss.truss method)": [[140, "sympy.physics.continuum_mechanics.truss.Truss.remove_load", false]], "remove_load() (sympy.physics.mechanics.body.body method)": [[149, "sympy.physics.mechanics.body.Body.remove_load", false]], "remove_loads() (sympy.physics.continuum_mechanics.cable.cable method)": [[138, "sympy.physics.continuum_mechanics.cable.Cable.remove_loads", false]], "remove_member() (sympy.physics.continuum_mechanics.truss.truss method)": [[140, "sympy.physics.continuum_mechanics.truss.Truss.remove_member", false]], "remove_node() (sympy.physics.continuum_mechanics.truss.truss method)": [[140, "sympy.physics.continuum_mechanics.truss.Truss.remove_node", false]], "remove_redundant_sols() (in module sympy.solvers.ode.riccati)": [[237, "sympy.solvers.ode.riccati.remove_redundant_sols", false]], "remove_support() (sympy.physics.continuum_mechanics.truss.truss method)": [[140, "sympy.physics.continuum_mechanics.truss.Truss.remove_support", false]], "removeo() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.removeO", false]], "render() (sympy.printing.pretty.stringpict.stringpict method)": [[221, "sympy.printing.pretty.stringpict.stringPict.render", false]], "render_as_module() (in module sympy.codegen.futils)": [[69, "sympy.codegen.futils.render_as_module", false]], "render_as_module() (in module sympy.codegen.pyutils)": [[69, "sympy.codegen.pyutils.render_as_module", false]], "render_as_source_file() (in module sympy.codegen.cutils)": [[69, "sympy.codegen.cutils.render_as_source_file", false]], "reorder() (sympy.concrete.expr_with_intlimits.exprwithintlimits method)": [[87, "sympy.concrete.expr_with_intlimits.ExprWithIntLimits.reorder", false]], "reorder() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.reorder", false]], "reorder_limit() (sympy.concrete.expr_with_intlimits.exprwithintlimits method)": [[87, "sympy.concrete.expr_with_intlimits.ExprWithIntLimits.reorder_limit", false]], "rep (sympy.polys.polyclasses.dmp property)": [[212, "sympy.polys.polyclasses.DMP.rep", false]], "rep_expectation() (in module sympy.physics.quantum.represent)": [[186, "sympy.physics.quantum.represent.rep_expectation", false]], "rep_innerproduct() (in module sympy.physics.quantum.represent)": [[186, "sympy.physics.quantum.represent.rep_innerproduct", false]], "repeated_decimals() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.repeated_decimals", false]], "replace() (in module sympy.utilities.misc)": [[262, "sympy.utilities.misc.replace", false]], "replace() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.replace", false]], "replace() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.replace", false]], "replace() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.replace", false]], "replace_in_add() (sympy.codegen.rewriting.funcminusoneoptim method)": [[69, "sympy.codegen.rewriting.FuncMinusOneOptim.replace_in_Add", false]], "replace_with_arrays() (sympy.tensor.tensor.tensexpr method)": [[247, "sympy.tensor.tensor.TensExpr.replace_with_arrays", false]], "replaceoptim (class in sympy.codegen.rewriting)": [[69, "sympy.codegen.rewriting.ReplaceOptim", false]], "reporter (class in sympy.testing.runtests)": [[252, "sympy.testing.runtests.Reporter", false]], "repr() (sympy.polys.numberfields.primes.primeideal method)": [[216, "sympy.polys.numberfields.primes.PrimeIdeal.repr", false]], "represent() (in module sympy.physics.quantum.represent)": [[186, "sympy.physics.quantum.represent.represent", false]], "represent() (sympy.polys.numberfields.modules.endomorphismring method)": [[216, "sympy.polys.numberfields.modules.EndomorphismRing.represent", false]], "represent() (sympy.polys.numberfields.modules.module method)": [[216, "sympy.polys.numberfields.modules.Module.represent", false]], "represent() (sympy.polys.numberfields.modules.powerbasis method)": [[216, "sympy.polys.numberfields.modules.PowerBasis.represent", false]], "represent() (sympy.polys.numberfields.modules.submodule method)": [[216, "sympy.polys.numberfields.modules.Submodule.represent", false]], "reprify() (sympy.printing.repr.reprprinter method)": [[221, "sympy.printing.repr.ReprPrinter.reprify", false]], "reprprinter (class in sympy.printing.repr)": [[221, "sympy.printing.repr.ReprPrinter", false]], "reset() (sympy.combinatorics.polyhedron.polyhedron method)": [[81, "sympy.combinatorics.polyhedron.Polyhedron.reset", false]], "reshape() (in module sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.reshape", false]], "reshape() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.reshape", false]], "reshape() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.reshape", false]], "residue() (in module sympy.series.residues)": [[228, "sympy.series.residues.residue", false]], "resize() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.resize", false]], "restrict_codomain() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[208, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.restrict_codomain", false]], "restrict_domain() (sympy.polys.agca.homomorphisms.modulehomomorphism method)": [[208, "sympy.polys.agca.homomorphisms.ModuleHomomorphism.restrict_domain", false]], "result (class in sympy.utilities.codegen)": [[254, "sympy.utilities.codegen.Result", false]], "result_variables (sympy.utilities.codegen.routine property)": [[254, "sympy.utilities.codegen.Routine.result_variables", false]], "resultant() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.resultant", false]], "resultant() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.resultant", false]], "resultant() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.resultant", false]], "retract() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.retract", false]], "return (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Return", false]], "return_expr() (sympy.parsing.sym_expr.sympyexpression method)": [[130, "sympy.parsing.sym_expr.SymPyExpression.return_expr", false]], "reverse_order() (sympy.concrete.products.product method)": [[87, "sympy.concrete.products.Product.reverse_order", false]], "reverse_order() (sympy.concrete.summations.sum method)": [[87, "sympy.concrete.summations.Sum.reverse_order", false]], "reversed (sympy.core.relational.relational property)": [[88, "sympy.core.relational.Relational.reversed", false]], "reversed (sympy.sets.fancysets.range property)": [[229, "sympy.sets.fancysets.Range.reversed", false]], "reversedgradedlexorder (class in sympy.polys.orderings)": [[217, "sympy.polys.orderings.ReversedGradedLexOrder", false]], "reversedsign (sympy.core.relational.relational property)": [[88, "sympy.core.relational.Relational.reversedsign", false]], "revert() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.revert", false]], "revert() (sympy.polys.domains.field.field method)": [[212, "sympy.polys.domains.field.Field.revert", false]], "revert() (sympy.polys.domains.ring.ring method)": [[212, "sympy.polys.domains.ring.Ring.revert", false]], "revert() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.revert", false]], "revert() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.revert", false]], "rewrite() (in module sympy.series.gruntz)": [[228, "sympy.series.gruntz.rewrite", false]], "rewrite() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.rewrite", false]], "rgs (sympy.combinatorics.partitions.partition property)": [[77, "sympy.combinatorics.partitions.Partition.RGS", false]], "rgs_enum() (in module sympy.combinatorics.partitions)": [[77, "sympy.combinatorics.partitions.RGS_enum", false]], "rgs_generalized() (in module sympy.combinatorics.partitions)": [[77, "sympy.combinatorics.partitions.RGS_generalized", false]], "rgs_rank() (in module sympy.combinatorics.partitions)": [[77, "sympy.combinatorics.partitions.RGS_rank", false]], "rgs_unrank() (in module sympy.combinatorics.partitions)": [[77, "sympy.combinatorics.partitions.RGS_unrank", false]], "rhs (sympy.core.relational.relational property)": [[88, "sympy.core.relational.Relational.rhs", false]], "rhs() (sympy.physics.biomechanics.activation.activationbase method)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.rhs", false]], "rhs() (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 method)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.rhs", false]], "rhs() (sympy.physics.biomechanics.activation.zerothorderactivation method)": [[131, "sympy.physics.biomechanics.activation.ZerothOrderActivation.rhs", false]], "rhs() (sympy.physics.biomechanics.musculotendon.musculotendonbase method)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.rhs", false]], "rhs() (sympy.physics.mechanics.jointsmethod.jointsmethod method)": [[149, "sympy.physics.mechanics.jointsmethod.JointsMethod.rhs", false]], "rhs() (sympy.physics.mechanics.kane.kanesmethod method)": [[153, "sympy.physics.mechanics.kane.KanesMethod.rhs", false]], "rhs() (sympy.physics.mechanics.lagrange.lagrangesmethod method)": [[153, "sympy.physics.mechanics.lagrange.LagrangesMethod.rhs", false]], "rhs() (sympy.physics.mechanics.system.system method)": [[158, "sympy.physics.mechanics.system.System.rhs", false]], "riccati_inverse_normal() (in module sympy.solvers.ode.riccati)": [[237, "sympy.solvers.ode.riccati.riccati_inverse_normal", false]], "riccati_normal() (in module sympy.solvers.ode.riccati)": [[237, "sympy.solvers.ode.riccati.riccati_normal", false]], "riccati_reduced() (in module sympy.solvers.ode.riccati)": [[237, "sympy.solvers.ode.riccati.riccati_reduced", false]], "riccatispecial (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.RiccatiSpecial", false]], "richardson() (in module sympy.series.acceleration)": [[228, "sympy.series.acceleration.richardson", false]], "riemann() (sympy.tensor.tensor.tensorsymmetry class method)": [[247, "sympy.tensor.tensor.TensorSymmetry.riemann", false]], "riemann_cyclic() (in module sympy.tensor.tensor)": [[247, "sympy.tensor.tensor.riemann_cyclic", false]], "riemann_cyclic_replace() (in module sympy.tensor.tensor)": [[247, "sympy.tensor.tensor.riemann_cyclic_replace", false]], "right() (sympy.printing.pretty.stringpict.stringpict method)": [[221, "sympy.printing.pretty.stringpict.stringPict.right", false]], "right_open (sympy.sets.sets.interval property)": [[229, "sympy.sets.sets.Interval.right_open", false]], "right_support (sympy.physics.continuum_mechanics.cable.cable property)": [[138, "sympy.physics.continuum_mechanics.cable.Cable.right_support", false]], "rigidbody (class in sympy.physics.mechanics.rigidbody)": [[155, "sympy.physics.mechanics.rigidbody.RigidBody", false]], "ring (class in sympy.polys.domains.ring)": [[212, "sympy.polys.domains.ring.Ring", false]], "ring() (in module sympy.polys.rings)": [[212, "sympy.polys.rings.ring", false]], "ringelement (class in sympy.polys.matrices._typing)": [[210, "sympy.polys.matrices._typing.RingElement", false]], "risch_integrate() (in module sympy.integrals.risch)": [[115, "sympy.integrals.risch.risch_integrate", false]], "risingfactorial (class in sympy.functions.combinatorial.factorials)": [[93, "sympy.functions.combinatorial.factorials.RisingFactorial", false]], "rk (in module sympy.physics.quantum.qft)": [[184, "sympy.physics.quantum.qft.Rk", false]], "rkgate (class in sympy.physics.quantum.qft)": [[184, "sympy.physics.quantum.qft.RkGate", false]], "rmul() (sympy.combinatorics.permutations.permutation static method)": [[80, "sympy.combinatorics.permutations.Permutation.rmul", false]], "rmul() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.rmul", false]], "rmul_with_af() (sympy.combinatorics.permutations.permutation class method)": [[80, "sympy.combinatorics.permutations.Permutation.rmul_with_af", false]], "rmultiply() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.rmultiply", false]], "root (in module sympy.printing.pretty.pretty_symbology)": [[221, "sympy.printing.pretty.pretty_symbology.root", false]], "root() (in module sympy.functions.elementary.miscellaneous)": [[94, "sympy.functions.elementary.miscellaneous.root", false]], "root() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.root", false]], "root() (sympy.printing.pretty.stringpict.stringpict method)": [[221, "sympy.printing.pretty.stringpict.stringPict.root", false]], "root_space() (sympy.liealgebras.root_system.rootsystem method)": [[117, "sympy.liealgebras.root_system.RootSystem.root_space", false]], "rootof (class in sympy.polys.rootoftools)": [[217, "sympy.polys.rootoftools.RootOf", false]], "rootof() (in module sympy.polys.rootoftools)": [[217, "sympy.polys.rootoftools.rootof", false]], "roots() (in module sympy.polys.polyroots)": [[217, "sympy.polys.polyroots.roots", false]], "roots() (sympy.liealgebras.type_a.typea method)": [[117, "sympy.liealgebras.type_a.TypeA.roots", false]], "roots() (sympy.liealgebras.type_b.typeb method)": [[117, "sympy.liealgebras.type_b.TypeB.roots", false]], "roots() (sympy.liealgebras.type_c.typec method)": [[117, "sympy.liealgebras.type_c.TypeC.roots", false]], "roots() (sympy.liealgebras.type_d.typed method)": [[117, "sympy.liealgebras.type_d.TypeD.roots", false]], "roots() (sympy.liealgebras.type_e.typee method)": [[117, "sympy.liealgebras.type_e.TypeE.roots", false]], "roots() (sympy.liealgebras.type_f.typef method)": [[117, "sympy.liealgebras.type_f.TypeF.roots", false]], "roots() (sympy.liealgebras.type_g.typeg method)": [[117, "sympy.liealgebras.type_g.TypeG.roots", false]], "rootsum (class in sympy.polys.rootoftools)": [[217, "sympy.polys.rootoftools.RootSum", false]], "rootsystem (class in sympy.liealgebras.root_system)": [[117, "sympy.liealgebras.root_system.RootSystem", false]], "ropen() (sympy.sets.sets.interval class method)": [[229, "sympy.sets.sets.Interval.Ropen", false]], "rot90() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.rot90", false]], "rot_axis1() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.rot_axis1", false]], "rot_axis2() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.rot_axis2", false]], "rot_axis3() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.rot_axis3", false]], "rot_ccw_axis1() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.rot_ccw_axis1", false]], "rot_ccw_axis2() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.rot_ccw_axis2", false]], "rot_ccw_axis3() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.rot_ccw_axis3", false]], "rot_givens() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.rot_givens", false]], "rotate() (sympy.combinatorics.polyhedron.polyhedron method)": [[81, "sympy.combinatorics.polyhedron.Polyhedron.rotate", false]], "rotate() (sympy.geometry.curve.curve method)": [[97, "sympy.geometry.curve.Curve.rotate", false]], "rotate() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.rotate", false]], "rotate() (sympy.geometry.entity.geometryentity method)": [[99, "sympy.geometry.entity.GeometryEntity.rotate", false]], "rotate() (sympy.geometry.point.point2d method)": [[103, "sympy.geometry.point.Point2D.rotate", false]], "rotate() (sympy.geometry.polygon.regularpolygon method)": [[104, "sympy.geometry.polygon.RegularPolygon.rotate", false]], "rotate_left() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.rotate_left", false]], "rotate_point() (sympy.algebras.quaternion static method)": [[61, "sympy.algebras.Quaternion.rotate_point", false]], "rotate_right() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.rotate_right", false]], "rotation (class in sympy.physics.quantum.spin)": [[188, "sympy.physics.quantum.spin.Rotation", false]], "rotation (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.rotation", false]], "rotation_axis (sympy.physics.mechanics.joint.planarjoint property)": [[152, "sympy.physics.mechanics.joint.PlanarJoint.rotation_axis", false]], "rotation_coordinate (sympy.physics.mechanics.joint.cylindricaljoint property)": [[152, "sympy.physics.mechanics.joint.CylindricalJoint.rotation_coordinate", false]], "rotation_coordinate (sympy.physics.mechanics.joint.planarjoint property)": [[152, "sympy.physics.mechanics.joint.PlanarJoint.rotation_coordinate", false]], "rotation_jumps (sympy.physics.continuum_mechanics.beam.beam property)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.rotation_jumps", false]], "rotation_matrix() (sympy.vector.coordsysrect.coordsys3d method)": [[265, "sympy.vector.coordsysrect.CoordSys3D.rotation_matrix", false]], "rotation_matrix() (sympy.vector.orienters.axisorienter method)": [[267, "sympy.vector.orienters.AxisOrienter.rotation_matrix", false]], "rotation_matrix() (sympy.vector.orienters.orienter method)": [[267, "sympy.vector.orienters.Orienter.rotation_matrix", false]], "rotation_speed (sympy.physics.mechanics.joint.cylindricaljoint property)": [[152, "sympy.physics.mechanics.joint.CylindricalJoint.rotation_speed", false]], "rotation_speed (sympy.physics.mechanics.joint.planarjoint property)": [[152, "sympy.physics.mechanics.joint.PlanarJoint.rotation_speed", false]], "rotations() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.rotations", false]], "round() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.round", false]], "round_two() (in module sympy.polys.numberfields.basis)": [[216, "sympy.polys.numberfields.basis.round_two", false]], "roundfunction (class in sympy.functions.elementary.integers)": [[94, "sympy.functions.elementary.integers.RoundFunction", false]], "roundrobin() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.roundrobin", false]], "routine (class in sympy.utilities.codegen)": [[254, "sympy.utilities.codegen.Routine", false]], "routine() (sympy.utilities.codegen.codegen method)": [[254, "sympy.utilities.codegen.CodeGen.routine", false]], "routine() (sympy.utilities.codegen.juliacodegen method)": [[254, "sympy.utilities.codegen.JuliaCodeGen.routine", false]], "routine() (sympy.utilities.codegen.octavecodegen method)": [[254, "sympy.utilities.codegen.OctaveCodeGen.routine", false]], "routine() (sympy.utilities.codegen.rustcodegen method)": [[254, "sympy.utilities.codegen.RustCodeGen.routine", false]], "row() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.row", false]], "row_del() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.row_del", false]], "row_insert() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.row_insert", false]], "row_join() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.row_join", false]], "rowspace() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.rowspace", false]], "rowspace() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.rowspace", false]], "rref() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.rref", false]], "rref() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.rref", false]], "rref() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.rref", false]], "rref() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.rref", false]], "rref_den() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.rref_den", false]], "rref_den() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.rref_den", false]], "rref_den() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.rref_den", false]], "rref_rhs() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.rref_rhs", false]], "rs_asin() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_asin", false]], "rs_atan() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_atan", false]], "rs_atanh() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_atanh", false]], "rs_compose_add() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_compose_add", false]], "rs_cos() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_cos", false]], "rs_cos_sin() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_cos_sin", false]], "rs_cosh() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_cosh", false]], "rs_cot() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_cot", false]], "rs_diff() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_diff", false]], "rs_exp() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_exp", false]], "rs_fun() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_fun", false]], "rs_hadamard_exp() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_hadamard_exp", false]], "rs_integrate() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_integrate", false]], "rs_is_puiseux() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_is_puiseux", false]], "rs_lambertw() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_LambertW", false]], "rs_log() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_log", false]], "rs_mul() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_mul", false]], "rs_newton() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_newton", false]], "rs_nth_root() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_nth_root", false]], "rs_pow() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_pow", false]], "rs_puiseux() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_puiseux", false]], "rs_puiseux2() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_puiseux2", false]], "rs_series_from_list() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_series_from_list", false]], "rs_series_inversion() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_series_inversion", false]], "rs_series_reversion() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_series_reversion", false]], "rs_sin() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_sin", false]], "rs_sinh() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_sinh", false]], "rs_square() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_square", false]], "rs_subs() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_subs", false]], "rs_swap() (in module sympy.stats.rv)": [[241, "sympy.stats.rv.rs_swap", false]], "rs_tan() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_tan", false]], "rs_tanh() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_tanh", false]], "rs_trunc() (in module sympy.polys.ring_series)": [[218, "sympy.polys.ring_series.rs_trunc", false]], "rsa_private_key() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.rsa_private_key", false]], "rsa_public_key() (in module sympy.crypto.crypto)": [[89, "sympy.crypto.crypto.rsa_public_key", false]], "rsolve() (in module sympy.solvers.recurr)": [[239, "sympy.solvers.recurr.rsolve", false]], "rsolve_hyper() (in module sympy.solvers.recurr)": [[239, "sympy.solvers.recurr.rsolve_hyper", false]], "rsolve_hypergeometric() (in module sympy.series.formal)": [[223, "sympy.series.formal.rsolve_hypergeometric", false]], "rsolve_poly() (in module sympy.solvers.recurr)": [[239, "sympy.solvers.recurr.rsolve_poly", false]], "rsolve_ratio() (in module sympy.solvers.recurr)": [[239, "sympy.solvers.recurr.rsolve_ratio", false]], "run() (sympy.testing.runtests.sympydoctestrunner method)": [[252, "sympy.testing.runtests.SymPyDocTestRunner.run", false]], "run_all_tests() (in module sympy.testing.runtests)": [[252, "sympy.testing.runtests.run_all_tests", false]], "run_in_subprocess_with_hash_randomization() (in module sympy.testing.runtests)": [[252, "sympy.testing.runtests.run_in_subprocess_with_hash_randomization", false]], "runs() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.runs", false]], "runs() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.runs", false]], "runtimeerror_ (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.RuntimeError_", false]], "rust_code() (in module sympy.printing.codeprinter)": [[221, "sympy.printing.codeprinter.rust_code", false]], "rustcodegen (class in sympy.utilities.codegen)": [[254, "sympy.utilities.codegen.RustCodeGen", false]], "rustcodeprinter (class in sympy.printing.rust)": [[221, "sympy.printing.rust.RustCodePrinter", false]], "s": [[15, "term-S", true]], "s (in module sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.S", false]], "s1transitivesubgroups (class in sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.S1TransitiveSubgroups", false]], "s2transitivesubgroups (class in sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.S2TransitiveSubgroups", false]], "s3_in_s6() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.S3_in_S6", false]], "s3transitivesubgroups (class in sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.S3TransitiveSubgroups", false]], "s4m() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.S4m", false]], "s4p() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.S4p", false]], "s4transitivesubgroups (class in sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.S4TransitiveSubgroups", false]], "s4xc2() (in module sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.S4xC2", false]], "s5transitivesubgroups (class in sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.S5TransitiveSubgroups", false]], "s6transitivesubgroups (class in sympy.combinatorics.galois)": [[71, "sympy.combinatorics.galois.S6TransitiveSubgroups", false]], "same_root() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.same_root", false]], "sample() (in module sympy.stats)": [[241, "sympy.stats.sample", false]], "sample() (sympy.stats.discretemarkovchain method)": [[241, "sympy.stats.DiscreteMarkovChain.sample", false]], "sample_iter() (in module sympy.stats)": [[241, "sympy.stats.sample_iter", false]], "sampling_density() (in module sympy.stats.rv)": [[241, "sympy.stats.rv.sampling_density", false]], "sampling_e() (in module sympy.stats.rv)": [[241, "sympy.stats.rv.sampling_E", false]], "sampling_p() (in module sympy.stats.rv)": [[241, "sympy.stats.rv.sampling_P", false]], "satisfiable() (in module sympy.logic.inference)": [[118, "sympy.logic.inference.satisfiable", false]], "saturate() (sympy.polys.agca.ideals.ideal method)": [[208, "sympy.polys.agca.ideals.Ideal.saturate", false]], "scalar_map() (sympy.vector.coordsysrect.coordsys3d method)": [[265, "sympy.vector.coordsysrect.CoordSys3D.scalar_map", false]], "scalar_part() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.scalar_part", false]], "scalar_potential() (in module sympy.physics.vector.fieldfunctions)": [[201, "sympy.physics.vector.fieldfunctions.scalar_potential", false]], "scalar_potential() (in module sympy.vector)": [[268, "sympy.vector.scalar_potential", false]], "scalar_potential_difference() (in module sympy.physics.vector.fieldfunctions)": [[201, "sympy.physics.vector.fieldfunctions.scalar_potential_difference", false]], "scalar_potential_difference() (in module sympy.vector)": [[268, "sympy.vector.scalar_potential_difference", false]], "scale() (sympy.geometry.curve.curve method)": [[97, "sympy.geometry.curve.Curve.scale", false]], "scale() (sympy.geometry.ellipse.circle method)": [[98, "sympy.geometry.ellipse.Circle.scale", false]], "scale() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.scale", false]], "scale() (sympy.geometry.entity.geometryentity method)": [[99, "sympy.geometry.entity.GeometryEntity.scale", false]], "scale() (sympy.geometry.point.point2d method)": [[103, "sympy.geometry.point.Point2D.scale", false]], "scale() (sympy.geometry.point.point3d method)": [[103, "sympy.geometry.point.Point3D.scale", false]], "scale() (sympy.geometry.polygon.regularpolygon method)": [[104, "sympy.geometry.polygon.RegularPolygon.scale", false]], "scale() (sympy.series.fourier.fourierseries method)": [[224, "sympy.series.fourier.FourierSeries.scale", false]], "scale_factor (sympy.physics.units.quantities.quantity property)": [[198, "sympy.physics.units.quantities.Quantity.scale_factor", false]], "scalex() (sympy.series.fourier.fourierseries method)": [[224, "sympy.series.fourier.FourierSeries.scalex", false]], "scc() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.scc", false]], "scc() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.scc", false]], "scc() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.scc", false]], "scc() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.scc", false]], "schreier_sims() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.schreier_sims", false]], "schreier_sims_incremental() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.schreier_sims_incremental", false]], "schreier_sims_random() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.schreier_sims_random", false]], "schreier_vector() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.schreier_vector", false]], "schur() (sympy.matrices.expressions.blockmatrix.blockmatrix method)": [[120, "sympy.matrices.expressions.blockmatrix.BlockMatrix.schur", false]], "scope (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Scope", false]], "sdm (class in sympy.polys.matrices.sdm)": [[210, "sympy.polys.matrices.sdm.SDM", false]], "sdm_add() (in module sympy.polys.distributedmodules)": [[214, "sympy.polys.distributedmodules.sdm_add", false]], "sdm_berk() (in module sympy.polys.matrices.sdm)": [[210, "sympy.polys.matrices.sdm.sdm_berk", false]], "sdm_deg() (in module sympy.polys.distributedmodules)": [[214, "sympy.polys.distributedmodules.sdm_deg", false]], "sdm_ecart() (in module sympy.polys.distributedmodules)": [[214, "sympy.polys.distributedmodules.sdm_ecart", false]], "sdm_from_dict() (in module sympy.polys.distributedmodules)": [[214, "sympy.polys.distributedmodules.sdm_from_dict", false]], "sdm_from_vector() (in module sympy.polys.distributedmodules)": [[214, "sympy.polys.distributedmodules.sdm_from_vector", false]], "sdm_groebner() (in module sympy.polys.distributedmodules)": [[214, "sympy.polys.distributedmodules.sdm_groebner", false]], "sdm_irref() (in module sympy.polys.matrices.sdm)": [[210, "sympy.polys.matrices.sdm.sdm_irref", false]], "sdm_lc() (in module sympy.polys.distributedmodules)": [[214, "sympy.polys.distributedmodules.sdm_LC", false]], "sdm_lm() (in module sympy.polys.distributedmodules)": [[214, "sympy.polys.distributedmodules.sdm_LM", false]], "sdm_lt() (in module sympy.polys.distributedmodules)": [[214, "sympy.polys.distributedmodules.sdm_LT", false]], "sdm_monomial_deg() (in module sympy.polys.distributedmodules)": [[214, "sympy.polys.distributedmodules.sdm_monomial_deg", false]], "sdm_monomial_divides() (in module sympy.polys.distributedmodules)": [[214, "sympy.polys.distributedmodules.sdm_monomial_divides", false]], "sdm_monomial_mul() (in module sympy.polys.distributedmodules)": [[214, "sympy.polys.distributedmodules.sdm_monomial_mul", false]], "sdm_mul_term() (in module sympy.polys.distributedmodules)": [[214, "sympy.polys.distributedmodules.sdm_mul_term", false]], "sdm_nf_mora() (in module sympy.polys.distributedmodules)": [[214, "sympy.polys.distributedmodules.sdm_nf_mora", false]], "sdm_nullspace_from_rref() (in module sympy.polys.matrices.sdm)": [[210, "sympy.polys.matrices.sdm.sdm_nullspace_from_rref", false]], "sdm_particular_from_rref() (in module sympy.polys.matrices.sdm)": [[210, "sympy.polys.matrices.sdm.sdm_particular_from_rref", false]], "sdm_rref_den() (in module sympy.polys.matrices.sdm)": [[210, "sympy.polys.matrices.sdm.sdm_rref_den", false]], "sdm_spoly() (in module sympy.polys.distributedmodules)": [[214, "sympy.polys.distributedmodules.sdm_spoly", false]], "sdm_to_dict() (in module sympy.polys.distributedmodules)": [[214, "sympy.polys.distributedmodules.sdm_to_dict", false]], "sdm_to_vector() (in module sympy.polys.distributedmodules)": [[214, "sympy.polys.distributedmodules.sdm_to_vector", false]], "sdm_zero() (in module sympy.polys.distributedmodules)": [[214, "sympy.polys.distributedmodules.sdm_zero", false]], "search() (sympy.ntheory.generate.sieve method)": [[128, "sympy.ntheory.generate.Sieve.search", false]], "search_function (sympy.physics.quantum.grover.oraclegate property)": [[176, "sympy.physics.quantum.grover.OracleGate.search_function", false]], "sec (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.sec", false]], "sech (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.sech", false]], "second_moment (sympy.physics.continuum_mechanics.beam.beam property)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.second_moment", false]], "second_moment (sympy.physics.continuum_mechanics.beam.beam3d property)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.second_moment", false]], "second_moment_of_area() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.second_moment_of_area", false]], "second_moment_of_area() (sympy.geometry.polygon.polygon method)": [[104, "sympy.geometry.polygon.Polygon.second_moment_of_area", false]], "secondhypergeometric (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.SecondHypergeometric", false]], "secondlinearairy (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.SecondLinearAiry", false]], "secondlinearbessel (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.SecondLinearBessel", false]], "section_modulus() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.section_modulus", false]], "section_modulus() (sympy.geometry.polygon.polygon method)": [[104, "sympy.geometry.polygon.Polygon.section_modulus", false]], "segment (class in sympy.geometry.line)": [[101, "sympy.geometry.line.Segment", false]], "segment2d (class in sympy.geometry.line)": [[101, "sympy.geometry.line.Segment2D", false]], "segment3d (class in sympy.geometry.line)": [[101, "sympy.geometry.line.Segment3D", false]], "select() (sympy.simplify.epathtools.epath method)": [[233, "sympy.simplify.epathtools.EPath.select", false]], "selections (sympy.combinatorics.graycode.graycode property)": [[72, "sympy.combinatorics.graycode.GrayCode.selections", false]], "semilatus_rectum (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.semilatus_rectum", false]], "sensitivity (sympy.physics.control.lti.feedback property)": [[144, "sympy.physics.control.lti.Feedback.sensitivity", false]], "sensitivity (sympy.physics.control.lti.mimofeedback property)": [[144, "sympy.physics.control.lti.MIMOFeedback.sensitivity", false]], "separable (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.Separable", false]], "separablereduced (class in sympy.solvers.ode.single)": [[237, "sympy.solvers.ode.single.SeparableReduced", false]], "separate() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.separate", false]], "separate() (sympy.physics.vector.vector.vector method)": [[200, "sympy.physics.vector.vector.Vector.separate", false]], "separate() (sympy.vector.vector.vector method)": [[265, "sympy.vector.vector.Vector.separate", false]], "separatevars() (in module sympy.simplify.simplify)": [[233, "sympy.simplify.simplify.separatevars", false]], "seqadd (class in sympy.series.sequences)": [[227, "sympy.series.sequences.SeqAdd", false]], "seqbase (class in sympy.series.sequences)": [[227, "sympy.series.sequences.SeqBase", false]], "seqformula (class in sympy.series.sequences)": [[227, "sympy.series.sequences.SeqFormula", false]], "seqmul (class in sympy.series.sequences)": [[227, "sympy.series.sequences.SeqMul", false]], "seqper (class in sympy.series.sequences)": [[227, "sympy.series.sequences.SeqPer", false]], "sequence() (in module sympy.series.sequences)": [[227, "sympy.series.sequences.sequence", false]], "sequence_partitions() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.sequence_partitions", false]], "sequence_partitions_empty() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.sequence_partitions_empty", false]], "series (class in sympy.physics.control.lti)": [[144, "sympy.physics.control.lti.Series", false]], "series() (in module sympy.series.series)": [[228, "sympy.series.series.series", false]], "series() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.series", false]], "series() (sympy.holonomic.holonomic.holonomicfunction method)": [[110, "sympy.holonomic.holonomic.HolonomicFunction.series", false]], "series() (sympy.liealgebras.cartan_type.standard_cartan method)": [[117, "sympy.liealgebras.cartan_type.Standard_Cartan.series", false]], "seriesapprox (class in sympy.codegen.approximations)": [[69, "sympy.codegen.approximations.SeriesApprox", false]], "set (class in sympy.sets.sets)": [[229, "sympy.sets.sets.Set", false]], "set_acc() (sympy.physics.vector.point.point method)": [[204, "sympy.physics.vector.point.Point.set_acc", false]], "set_ang_acc() (sympy.physics.vector.frame.referenceframe method)": [[200, "sympy.physics.vector.frame.ReferenceFrame.set_ang_acc", false]], "set_ang_vel() (sympy.physics.vector.frame.referenceframe method)": [[200, "sympy.physics.vector.frame.ReferenceFrame.set_ang_vel", false]], "set_comm() (sympy.tensor.tensor._tensormanager method)": [[247, "sympy.tensor.tensor._TensorManager.set_comm", false]], "set_comms() (sympy.tensor.tensor._tensormanager method)": [[247, "sympy.tensor.tensor._TensorManager.set_comms", false]], "set_domain() (sympy.polys.domains.compositedomain.compositedomain method)": [[212, "sympy.polys.domains.compositedomain.CompositeDomain.set_domain", false]], "set_domain() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.set_domain", false]], "set_global_relative_scale_factor() (sympy.physics.units.quantities.quantity method)": [[198, "sympy.physics.units.quantities.Quantity.set_global_relative_scale_factor", false]], "set_global_settings() (sympy.printing.printer.printer class method)": [[221, "sympy.printing.printer.Printer.set_global_settings", false]], "set_modulus() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.set_modulus", false]], "set_norm() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.set_norm", false]], "set_pos() (sympy.physics.vector.point.point method)": [[204, "sympy.physics.vector.point.Point.set_pos", false]], "set_vel() (sympy.physics.vector.point.point method)": [[204, "sympy.physics.vector.point.Point.set_vel", false]], "seterr() (in module sympy.core.numbers)": [[88, "sympy.core.numbers.seterr", false]], "setitem() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.setitem", false]], "setkind (class in sympy.sets.conditionset)": [[229, "sympy.sets.conditionset.SetKind", false]], "sets (sympy.sets.fancysets.complexregion property)": [[229, "sympy.sets.fancysets.ComplexRegion.sets", false]], "setup() (in module sympy.polys.polyconfig)": [[214, "sympy.polys.polyconfig.setup", false]], "sfield() (in module sympy.polys.fields)": [[212, "sympy.polys.fields.sfield", false]], "shanks() (in module sympy.series.acceleration)": [[228, "sympy.series.acceleration.shanks", false]], "shape (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.shape", false]], "shape (sympy.physics.control.lti.mimoparallel property)": [[144, "sympy.physics.control.lti.MIMOParallel.shape", false]], "shape (sympy.physics.control.lti.mimoseries property)": [[144, "sympy.physics.control.lti.MIMOSeries.shape", false]], "shape (sympy.physics.control.lti.transferfunctionmatrix property)": [[144, "sympy.physics.control.lti.TransferFunctionMatrix.shape", false]], "shape (sympy.tensor.indexed.indexed property)": [[246, "sympy.tensor.indexed.Indexed.shape", false]], "shape (sympy.tensor.indexed.indexedbase property)": [[246, "sympy.tensor.indexed.IndexedBase.shape", false]], "shape() (in module sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.shape", false]], "shapeerror (class in sympy.matrices.matrixbase)": [[124, "sympy.matrices.matrixbase.ShapeError", false]], "shear_force() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.shear_force", false]], "shear_force() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.shear_force", false]], "shear_modulus (sympy.physics.continuum_mechanics.beam.beam3d property)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.shear_modulus", false]], "shear_stress() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.shear_stress", false]], "shear_stress() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.shear_stress", false]], "shi (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.Shi", false]], "shift() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.shift", false]], "shift() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.shift", false]], "shift() (sympy.series.fourier.fourierseries method)": [[224, "sympy.series.fourier.FourierSeries.shift", false]], "shift_list() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.shift_list", false]], "shift_list() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.shift_list", false]], "shiftedgompertz() (in module sympy.stats)": [[241, "sympy.stats.ShiftedGompertz", false]], "shiftx() (sympy.series.fourier.fourierseries method)": [[224, "sympy.series.fourier.FourierSeries.shiftx", false]], "shor() (in module sympy.physics.quantum.shor)": [[187, "sympy.physics.quantum.shor.shor", false]], "si (class in sympy.functions.special.error_functions)": [[96, "sympy.functions.special.error_functions.Si", false]], "sides (sympy.geometry.polygon.polygon property)": [[104, "sympy.geometry.polygon.Polygon.sides", false]], "sieve (class in sympy.ntheory.generate)": [[128, "sympy.ntheory.generate.Sieve", false]], "sift() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.sift", false]], "sigma (sympy.physics.mechanics.actuator.coulombkineticfriction property)": [[148, "sympy.physics.mechanics.actuator.CoulombKineticFriction.sigma", false]], "sigma_approximation() (sympy.series.fourier.fourierseries method)": [[224, "sympy.series.fourier.FourierSeries.sigma_approximation", false]], "sign (class in sympy.functions.elementary.complexes)": [[94, "sympy.functions.elementary.complexes.sign", false]], "sign (sympy.physics.control.lti.feedback property)": [[144, "sympy.physics.control.lti.Feedback.sign", false]], "sign (sympy.physics.control.lti.mimofeedback property)": [[144, "sympy.physics.control.lti.MIMOFeedback.sign", false]], "sign() (in module sympy.series.gruntz)": [[228, "sympy.series.gruntz.sign", false]], "signature (sympy.core.function.lambda property)": [[88, "sympy.core.function.Lambda.signature", false]], "signature() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.signature", false]], "signed_permutations() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.signed_permutations", false]], "signedinttype (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.SignedIntType", false]], "simple_root() (sympy.liealgebras.type_a.typea method)": [[117, "sympy.liealgebras.type_a.TypeA.simple_root", false]], "simple_root() (sympy.liealgebras.type_b.typeb method)": [[117, "sympy.liealgebras.type_b.TypeB.simple_root", false]], "simple_root() (sympy.liealgebras.type_c.typec method)": [[117, "sympy.liealgebras.type_c.TypeC.simple_root", false]], "simple_root() (sympy.liealgebras.type_d.typed method)": [[117, "sympy.liealgebras.type_d.TypeD.simple_root", false]], "simple_root() (sympy.liealgebras.type_e.typee method)": [[117, "sympy.liealgebras.type_e.TypeE.simple_root", false]], "simple_root() (sympy.liealgebras.type_f.typef method)": [[117, "sympy.liealgebras.type_f.TypeF.simple_root", false]], "simple_root() (sympy.liealgebras.type_g.typeg method)": [[117, "sympy.liealgebras.type_g.TypeG.simple_root", false]], "simple_roots() (sympy.liealgebras.root_system.rootsystem method)": [[117, "sympy.liealgebras.root_system.RootSystem.simple_roots", false]], "simplede() (in module sympy.series.formal)": [[223, "sympy.series.formal.simpleDE", false]], "simpledomain (class in sympy.polys.domains.simpledomain)": [[212, "sympy.polys.domains.simpledomain.SimpleDomain", false]], "simplification": [[15, "term-Simplification", true]], "simplify() (in module sympy.simplify.simplify)": [[233, "sympy.simplify.simplify.simplify", false]], "simplify() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.simplify", false]], "simplify() (sympy.matrices.dense.mutabledensematrix method)": [[119, "sympy.matrices.dense.MutableDenseMatrix.simplify", false]], "simplify() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.simplify", false]], "simplify() (sympy.physics.vector.dyadic.dyadic method)": [[200, "sympy.physics.vector.dyadic.Dyadic.simplify", false]], "simplify() (sympy.physics.vector.vector.vector method)": [[200, "sympy.physics.vector.vector.Vector.simplify", false]], "simplify_gpgp() (in module sympy.physics.hep.gamma_matrices)": [[145, "sympy.physics.hep.gamma_matrices.simplify_gpgp", false]], "simplify_index_permutations() (in module sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.simplify_index_permutations", false]], "simplify_logic() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.simplify_logic", false]], "sin (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.sin", false]], "sinc (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.sinc", false]], "sine_transform() (in module sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.sine_transform", false]], "sinetransform (class in sympy.integrals.transforms)": [[115, "sympy.integrals.transforms.SineTransform", false]], "singledomain (class in sympy.stats.rv)": [[241, "sympy.stats.rv.SingleDomain", false]], "singlepspace (class in sympy.stats.rv)": [[241, "sympy.stats.rv.SinglePSpace", false]], "singleton (class in sympy.core.singleton)": [[88, "sympy.core.singleton.Singleton", false]], "singletonregistry (class in sympy.core.singleton)": [[88, "sympy.core.singleton.SingletonRegistry", false]], "singular_points() (sympy.vector.implicitregion.implicitregion method)": [[265, "sympy.vector.implicitregion.ImplicitRegion.singular_points", false]], "singular_value_decomposition() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.singular_value_decomposition", false]], "singular_values() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.singular_values", false]], "singularities() (in module sympy.calculus.singularities)": [[67, "sympy.calculus.singularities.singularities", false]], "singularityfunction (class in sympy.functions.special.singularity_functions)": [[96, "sympy.functions.special.singularity_functions.SingularityFunction", false]], "singularityintegrate() (in module sympy.integrals.singularityfunctions)": [[115, "sympy.integrals.singularityfunctions.singularityintegrate", false]], "singularpredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.SingularPredicate", false]], "sinh (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.sinh", false]], "size (sympy.combinatorics.permutations.permutation property)": [[80, "sympy.combinatorics.permutations.Permutation.size", false]], "size (sympy.combinatorics.polyhedron.polyhedron property)": [[81, "sympy.combinatorics.polyhedron.Polyhedron.size", false]], "size (sympy.combinatorics.prufer.prufer property)": [[82, "sympy.combinatorics.prufer.Prufer.size", false]], "size (sympy.combinatorics.subsets.subset property)": [[83, "sympy.combinatorics.subsets.Subset.size", false]], "size() (in module sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.size", false]], "sizeof() (in module sympy.codegen.cnodes)": [[69, "sympy.codegen.cnodes.sizeof", false]], "skellam() (in module sympy.stats)": [[241, "sympy.stats.Skellam", false]], "skewness() (in module sympy.stats)": [[241, "sympy.stats.skewness", false]], "skip() (in module sympy.testing.pytest)": [[250, "sympy.testing.pytest.SKIP", false]], "skip() (sympy.combinatorics.graycode.graycode method)": [[72, "sympy.combinatorics.graycode.GrayCode.skip", false]], "skip_under_pyodide() (in module sympy.testing.pytest)": [[250, "sympy.testing.pytest.skip_under_pyodide", false]], "slice() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.slice", false]], "slice() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.slice", false]], "slope (sympy.geometry.line.linearentity2d property)": [[101, "sympy.geometry.line.LinearEntity2D.slope", false]], "slope() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.slope", false]], "slope() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.slope", false]], "smallest_angle_between() (sympy.geometry.line.linearentity method)": [[101, "sympy.geometry.line.LinearEntity.smallest_angle_between", false]], "smith_normal_form() (in module sympy.matrices.normalforms)": [[125, "sympy.matrices.normalforms.smith_normal_form", false]], "smith_normal_form() (in module sympy.polys.matrices.normalforms)": [[210, "sympy.polys.matrices.normalforms.smith_normal_form", false]], "smoothing_rate (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.smoothing_rate", false]], "smoothness() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.smoothness", false]], "smoothness_p() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.smoothness_p", false]], "smtlib_code() (in module sympy.printing.smtlib)": [[221, "sympy.printing.smtlib.smtlib_code", false]], "smtlibprinter (class in sympy.printing.smtlib)": [[221, "sympy.printing.smtlib.SMTLibPrinter", false]], "solve": [[15, "term-Solve", true]], "solve() (in module sympy.solvers.solvers)": [[239, "sympy.solvers.solvers.solve", false]], "solve() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.solve", false]], "solve() (sympy.physics.continuum_mechanics.cable.cable method)": [[138, "sympy.physics.continuum_mechanics.cable.Cable.solve", false]], "solve() (sympy.physics.continuum_mechanics.truss.truss method)": [[140, "sympy.physics.continuum_mechanics.truss.Truss.solve", false]], "solve_aux_eq() (in module sympy.solvers.ode.riccati)": [[237, "sympy.solvers.ode.riccati.solve_aux_eq", false]], "solve_congruence() (in module sympy.ntheory.modular)": [[128, "sympy.ntheory.modular.solve_congruence", false]], "solve_de() (in module sympy.series.formal)": [[223, "sympy.series.formal.solve_de", false]], "solve_den() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.solve_den", false]], "solve_den_charpoly() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.solve_den_charpoly", false]], "solve_den_rref() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.solve_den_rref", false]], "solve_for_ild_moment() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.solve_for_ild_moment", false]], "solve_for_ild_reactions() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.solve_for_ild_reactions", false]], "solve_for_ild_shear() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.solve_for_ild_shear", false]], "solve_for_reaction_loads() (sympy.physics.continuum_mechanics.beam.beam method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.solve_for_reaction_loads", false]], "solve_for_reaction_loads() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.solve_for_reaction_loads", false]], "solve_for_torsion() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.solve_for_torsion", false]], "solve_least_squares() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.solve_least_squares", false]], "solve_lin_sys() (in module sympy.polys.solvers)": [[219, "sympy.polys.solvers.solve_lin_sys", false]], "solve_linear() (in module sympy.solvers.solvers)": [[239, "sympy.solvers.solvers.solve_linear", false]], "solve_linear_system() (in module sympy.solvers.solvers)": [[239, "sympy.solvers.solvers.solve_linear_system", false]], "solve_linear_system_lu() (in module sympy.solvers.solvers)": [[239, "sympy.solvers.solvers.solve_linear_system_LU", false]], "solve_multipliers() (sympy.physics.mechanics.lagrange.lagrangesmethod method)": [[153, "sympy.physics.mechanics.lagrange.LagrangesMethod.solve_multipliers", false]], "solve_poly_inequalities() (in module sympy.solvers.inequalities)": [[236, "sympy.solvers.inequalities.solve_poly_inequalities", false]], "solve_poly_inequality() (in module sympy.solvers.inequalities)": [[236, "sympy.solvers.inequalities.solve_poly_inequality", false]], "solve_poly_system() (in module sympy.solvers.polysys)": [[239, "sympy.solvers.polysys.solve_poly_system", false]], "solve_rational_inequalities() (in module sympy.solvers.inequalities)": [[236, "sympy.solvers.inequalities.solve_rational_inequalities", false]], "solve_riccati() (in module sympy.solvers.ode.riccati)": [[237, "sympy.solvers.ode.riccati.solve_riccati", false]], "solve_triangulated() (in module sympy.solvers.polysys)": [[239, "sympy.solvers.polysys.solve_triangulated", false]], "solve_undetermined_coeffs() (in module sympy.solvers.solvers)": [[239, "sympy.solvers.solvers.solve_undetermined_coeffs", false]], "solve_univariate_inequality() (in module sympy.solvers.inequalities)": [[236, "sympy.solvers.inequalities.solve_univariate_inequality", false]], "solvers": [[15, "term-Solvers", true]], "solveset() (in module sympy.solvers.solveset)": [[240, "sympy.solvers.solveset.solveset", false]], "solveset_complex() (in module sympy.solvers.solveset)": [[240, "sympy.solvers.solveset.solveset_complex", false]], "solveset_real() (in module sympy.solvers.solveset)": [[240, "sympy.solvers.solveset.solveset_real", false]], "solvify() (in module sympy.solvers.solveset)": [[240, "sympy.solvers.solveset.solvify", false]], "sopform() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.SOPform", false]], "sort_key() (sympy.combinatorics.partitions.partition method)": [[77, "sympy.combinatorics.partitions.Partition.sort_key", false]], "sort_key() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.sort_key", false]], "sorted_components() (sympy.tensor.tensor.tensmul method)": [[247, "sympy.tensor.tensor.TensMul.sorted_components", false]], "source (sympy.geometry.line.ray property)": [[101, "sympy.geometry.line.Ray.source", false]], "spaceorienter (class in sympy.vector.orienters)": [[267, "sympy.vector.orienters.SpaceOrienter", false]], "spaces (sympy.physics.quantum.hilbert.directsumhilbertspace property)": [[177, "sympy.physics.quantum.hilbert.DirectSumHilbertSpace.spaces", false]], "spaces (sympy.physics.quantum.hilbert.tensorproducthilbertspace property)": [[177, "sympy.physics.quantum.hilbert.TensorProductHilbertSpace.spaces", false]], "sparsematrix (in module sympy.matrices.sparse)": [[126, "sympy.matrices.sparse.SparseMatrix", false]], "speed (sympy.physics.optics.medium.medium property)": [[162, "sympy.physics.optics.medium.Medium.speed", false]], "speed (sympy.physics.optics.waves.twave property)": [[165, "sympy.physics.optics.waves.TWave.speed", false]], "speeds (sympy.physics.mechanics.joint.joint property)": [[152, "sympy.physics.mechanics.joint.Joint.speeds", false]], "speeds (sympy.physics.mechanics.system.symbolicsystem property)": [[158, "sympy.physics.mechanics.system.SymbolicSystem.speeds", false]], "spherical_bessel_fn() (in module sympy.polys.orthopolys)": [[217, "sympy.polys.orthopolys.spherical_bessel_fn", false]], "sphericaljoint (class in sympy.physics.mechanics.joint)": [[152, "sympy.physics.mechanics.joint.SphericalJoint", false]], "spin() (sympy.geometry.polygon.regularpolygon method)": [[104, "sympy.geometry.polygon.RegularPolygon.spin", false]], "split() (sympy.tensor.tensor.tensmul method)": [[247, "sympy.tensor.tensor.TensMul.split", false]], "split_list() (in module sympy.testing.runtests)": [[252, "sympy.testing.runtests.split_list", false]], "split_super_sub() (in module sympy.printing.conventions)": [[221, "sympy.printing.conventions.split_super_sub", false]], "split_symbols() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.split_symbols", false]], "split_symbols_custom() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.split_symbols_custom", false]], "spoly() (in module sympy.polys.groebnertools)": [[214, "sympy.polys.groebnertools.spoly", false]], "sqf() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.sqf", false]], "sqf_list() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.sqf_list", false]], "sqf_list() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.sqf_list", false]], "sqf_list() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.sqf_list", false]], "sqf_list_include() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.sqf_list_include", false]], "sqf_list_include() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.sqf_list_include", false]], "sqf_norm() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.sqf_norm", false]], "sqf_norm() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.sqf_norm", false]], "sqf_norm() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.sqf_norm", false]], "sqf_normal() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.sqf_normal", false]], "sqf_part() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.sqf_part", false]], "sqf_part() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.sqf_part", false]], "sqf_part() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.sqf_part", false]], "sqr() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.sqr", false]], "sqr() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.sqr", false]], "sqrt (class in sympy.codegen.cfunctions)": [[69, "sympy.codegen.cfunctions.Sqrt", false]], "sqrt() (in module sympy.functions.elementary.miscellaneous)": [[94, "sympy.functions.elementary.miscellaneous.sqrt", false]], "sqrt() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.sqrt", false]], "sqrt() (sympy.polys.domains.gmpyintegerring method)": [[212, "sympy.polys.domains.GMPYIntegerRing.sqrt", false]], "sqrt() (sympy.polys.domains.integerring method)": [[212, "sympy.polys.domains.IntegerRing.sqrt", false]], "sqrt_mod() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.sqrt_mod", false]], "sqrt_mod_iter() (in module sympy.ntheory.residue_ntheory)": [[128, "sympy.ntheory.residue_ntheory.sqrt_mod_iter", false]], "sqrtdenest() (in module sympy.simplify.sqrtdenest)": [[233, "sympy.simplify.sqrtdenest.sqrtdenest", false]], "square() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.square", false]], "square_factor() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.square_factor", false]], "squarepredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.SquarePredicate", false]], "srepr() (in module sympy.printing.repr)": [[221, "sympy.printing.repr.srepr", false]], "sring() (in module sympy.polys.rings)": [[212, "sympy.polys.rings.sring", false]], "sstr() (in module sympy.printing.str)": [[221, "sympy.printing.str.sstr", false]], "sstrrepr() (in module sympy.printing.str)": [[221, "sympy.printing.str.sstrrepr", false]], "stabilizer() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.stabilizer", false]], "stack() (sympy.printing.pretty.stringpict.stringpict static method)": [[221, "sympy.printing.pretty.stringpict.stringPict.stack", false]], "standard_cartan (class in sympy.liealgebras.cartan_type)": [[117, "sympy.liealgebras.cartan_type.Standard_Cartan", false]], "standard_transformations (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.standard_transformations", false]], "start (sympy.series.sequences.recursiveseq property)": [[227, "sympy.series.sequences.RecursiveSeq.start", false]], "start (sympy.series.sequences.seqbase property)": [[227, "sympy.series.sequences.SeqBase.start", false]], "start (sympy.sets.sets.interval property)": [[229, "sympy.sets.sets.Interval.start", false]], "starts_with_unity() (sympy.polys.numberfields.modules.module method)": [[216, "sympy.polys.numberfields.modules.Module.starts_with_unity", false]], "state (class in sympy.physics.quantum.state)": [[189, "sympy.physics.quantum.state.State", false]], "state() (sympy.physics.secondquant.fixedbosonicbasis method)": [[191, "sympy.physics.secondquant.FixedBosonicBasis.state", false]], "state() (sympy.physics.secondquant.varbosonicbasis method)": [[191, "sympy.physics.secondquant.VarBosonicBasis.state", false]], "state_to_operators() (in module sympy.physics.quantum.operatorset)": [[181, "sympy.physics.quantum.operatorset.state_to_operators", false]], "state_vars (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.state_vars", false]], "state_vars (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.state_vars", false]], "state_vars (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[131, "sympy.physics.biomechanics.activation.ZerothOrderActivation.state_vars", false]], "state_vars (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.state_vars", false]], "statebase (class in sympy.physics.quantum.state)": [[189, "sympy.physics.quantum.state.StateBase", false]], "states (sympy.physics.mechanics.system.symbolicsystem property)": [[158, "sympy.physics.mechanics.system.SymbolicSystem.states", false]], "stationary_distribution() (sympy.stats.discretemarkovchain method)": [[241, "sympy.stats.DiscreteMarkovChain.stationary_distribution", false]], "stationary_points() (in module sympy.calculus.util)": [[67, "sympy.calculus.util.stationary_points", false]], "std() (in module sympy.stats)": [[241, "sympy.stats.std", false]], "step_response_numerical_data() (sympy.physics.control.control_plots method)": [[142, "sympy.physics.control.control_plots.step_response_numerical_data", false]], "step_response_plot() (sympy.physics.control.control_plots method)": [[142, "sympy.physics.control.control_plots.step_response_plot", false]], "stieltjes (class in sympy.functions.special.zeta_functions)": [[96, "sympy.functions.special.zeta_functions.stieltjes", false]], "stiffness (sympy.physics.mechanics.actuator.linearspring property)": [[148, "sympy.physics.mechanics.actuator.LinearSpring.stiffness", false]], "stirling() (in module sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.stirling", false]], "stokes_vector() (in module sympy.physics.optics.polarization)": [[163, "sympy.physics.optics.polarization.stokes_vector", false]], "stop (sympy.series.sequences.recursiveseq property)": [[227, "sympy.series.sequences.RecursiveSeq.stop", false]], "stop (sympy.series.sequences.seqbase property)": [[227, "sympy.series.sequences.SeqBase.stop", false]], "stream (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Stream", false]], "strict (sympy.core.relational.relational property)": [[88, "sympy.core.relational.Relational.strict", false]], "strictgreaterthan (class in sympy.core.relational)": [[88, "sympy.core.relational.StrictGreaterThan", false]], "strictlessthan (class in sympy.core.relational)": [[88, "sympy.core.relational.StrictLessThan", false]], "strides (sympy.tensor.indexed.indexedbase property)": [[246, "sympy.tensor.indexed.IndexedBase.strides", false]], "string (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.String", false]], "stringify_expr() (in module sympy.parsing.sympy_parser)": [[130, "sympy.parsing.sympy_parser.stringify_expr", false]], "stringpict (class in sympy.printing.pretty.stringpict)": [[221, "sympy.printing.pretty.stringpict.stringPict", false]], "strip_zero() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.strip_zero", false]], "strlines() (in module sympy.utilities.misc)": [[262, "sympy.utilities.misc.strlines", false]], "strong_gens (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.strong_gens", false]], "strong_presentation() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.strong_presentation", false]], "strongly_connected_components() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.strongly_connected_components", false]], "strongly_connected_components() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.strongly_connected_components", false]], "strongly_connected_components_decomposition() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.strongly_connected_components_decomposition", false]], "strprinter (class in sympy.printing.str)": [[221, "sympy.printing.str.StrPrinter", false]], "struct (class in sympy.codegen.cnodes)": [[69, "sympy.codegen.cnodes.struct", false]], "structural equality": [[15, "term-Structural-Equality", true]], "studentt() (in module sympy.stats)": [[241, "sympy.stats.StudentT", false]], "sturm() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.sturm", false]], "sturm() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.sturm", false]], "sturm() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.sturm", false]], "sub (in module sympy.printing.pretty.pretty_symbology)": [[221, "sympy.printing.pretty.pretty_symbology.sub", false]], "sub() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.sub", false]], "sub() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.sub", false]], "sub() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.sub", false]], "sub() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.sub", false]], "sub() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.sub", false]], "sub() (sympy.polys.polyclasses.dmf method)": [[212, "sympy.polys.polyclasses.DMF.sub", false]], "sub() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.sub", false]], "sub() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.sub", false]], "sub_ground() (sympy.polys.polyclasses.anp method)": [[212, "sympy.polys.polyclasses.ANP.sub_ground", false]], "sub_ground() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.sub_ground", false]], "sub_ground() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.sub_ground", false]], "subdiagram_from_objects() (sympy.categories.diagram method)": [[68, "sympy.categories.Diagram.subdiagram_from_objects", false]], "subexpression": [[15, "term-Subexpression", true]], "subfactorial (class in sympy.functions.combinatorial.factorials)": [[93, "sympy.functions.combinatorial.factorials.subfactorial", false]], "subgroup() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.subgroup", false]], "subgroup_search() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.subgroup_search", false]], "submodule (class in sympy.polys.agca.modules)": [[208, "sympy.polys.agca.modules.SubModule", false]], "submodule (class in sympy.polys.numberfields.modules)": [[216, "sympy.polys.numberfields.modules.Submodule", false]], "submodule() (sympy.polys.agca.modules.module method)": [[208, "sympy.polys.agca.modules.Module.submodule", false]], "submodule() (sympy.polys.agca.modules.quotientmodule method)": [[208, "sympy.polys.agca.modules.QuotientModule.submodule", false]], "submodule() (sympy.polys.agca.modules.submodule method)": [[208, "sympy.polys.agca.modules.SubModule.submodule", false]], "submodule_from_gens() (sympy.polys.numberfields.modules.module method)": [[216, "sympy.polys.numberfields.modules.Module.submodule_from_gens", false]], "submodule_from_matrix() (sympy.polys.numberfields.modules.module method)": [[216, "sympy.polys.numberfields.modules.Module.submodule_from_matrix", false]], "subquotientmodule (class in sympy.polys.agca.modules)": [[208, "sympy.polys.agca.modules.SubQuotientModule", false]], "subresultants() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.subresultants", false]], "subresultants() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.subresultants", false]], "subresultants() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.subresultants", false]], "subresultants() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.subresultants", false]], "subroutine (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.Subroutine", false]], "subroutinecall (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.SubroutineCall", false]], "subs (class in sympy.core.function)": [[88, "sympy.core.function.Subs", false]], "subs() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.subs", false]], "subs() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.subs", false]], "subs() (sympy.physics.vector.dyadic.dyadic method)": [[200, "sympy.physics.vector.dyadic.Dyadic.subs", false]], "subs() (sympy.physics.vector.vector.vector method)": [[200, "sympy.physics.vector.vector.Vector.subs", false]], "subset (class in sympy.combinatorics.subsets)": [[83, "sympy.combinatorics.subsets.Subset", false]], "subset (sympy.combinatorics.subsets.subset property)": [[83, "sympy.combinatorics.subsets.Subset.subset", false]], "subset() (sympy.polys.agca.ideals.ideal method)": [[208, "sympy.polys.agca.ideals.Ideal.subset", false]], "subset() (sympy.polys.agca.modules.module method)": [[208, "sympy.polys.agca.modules.Module.subset", false]], "subset_from_bitlist() (sympy.combinatorics.subsets.subset class method)": [[83, "sympy.combinatorics.subsets.Subset.subset_from_bitlist", false]], "subset_indices() (sympy.combinatorics.subsets.subset class method)": [[83, "sympy.combinatorics.subsets.Subset.subset_indices", false]], "subsets() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.subsets", false]], "subsset (class in sympy.series.gruntz)": [[228, "sympy.series.gruntz.SubsSet", false]], "substitute_dummies() (in module sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.substitute_dummies", false]], "substitution": [[15, "term-Substitution", true]], "sum (class in sympy.concrete.summations)": [[87, "sympy.concrete.summations.Sum", false]], "sum_of_four_squares() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.sum_of_four_squares", false]], "sum_of_powers() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.sum_of_powers", false]], "sum_of_squares() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.sum_of_squares", false]], "sum_of_three_squares() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.sum_of_three_squares", false]], "sumapprox (class in sympy.codegen.approximations)": [[69, "sympy.codegen.approximations.SumApprox", false]], "summation() (in module sympy.concrete.summations)": [[87, "sympy.concrete.summations.summation", false]], "sup (in module sympy.printing.pretty.pretty_symbology)": [[221, "sympy.printing.pretty.pretty_symbology.sup", false]], "sup (sympy.sets.sets.set property)": [[229, "sympy.sets.sets.Set.sup", false]], "superposition_basis() (in module sympy.physics.quantum.grover)": [[176, "sympy.physics.quantum.grover.superposition_basis", false]], "superset (sympy.combinatorics.subsets.subset property)": [[83, "sympy.combinatorics.subsets.Subset.superset", false]], "superset_size (sympy.combinatorics.subsets.subset property)": [[83, "sympy.combinatorics.subsets.Subset.superset_size", false]], "supplement_a_subspace() (in module sympy.polys.numberfields.utilities)": [[216, "sympy.polys.numberfields.utilities.supplement_a_subspace", false]], "support() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.support", false]], "supports (sympy.physics.continuum_mechanics.cable.cable property)": [[138, "sympy.physics.continuum_mechanics.cable.Cable.supports", false]], "supports (sympy.physics.continuum_mechanics.truss.truss property)": [[140, "sympy.physics.continuum_mechanics.truss.Truss.supports", false]], "surfacebaseseries (class in sympy.plotting.series)": [[207, "sympy.plotting.series.SurfaceBaseSeries", false]], "surfaceover2drangeseries (class in sympy.plotting.series)": [[207, "sympy.plotting.series.SurfaceOver2DRangeSeries", false]], "swap (in module sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.SWAP", false]], "swap_point() (sympy.physics.quantum.circuitplot.circuitplot method)": [[171, "sympy.physics.quantum.circuitplot.CircuitPlot.swap_point", false]], "swapgate (class in sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.SwapGate", false]], "swinnerton_dyer_poly() (in module sympy.polys.specialpolys)": [[217, "sympy.polys.specialpolys.swinnerton_dyer_poly", false]], "sylow_subgroup() (sympy.combinatorics.perm_groups.permutationgroup method)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.sylow_subgroup", false]], "symarray() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.symarray", false]], "symb_2txt (in module sympy.printing.pretty.pretty_symbology)": [[221, "sympy.printing.pretty.pretty_symbology.symb_2txt", false]], "symbol": [[15, "term-Symbol", true]], "symbol (class in sympy.core.symbol)": [[88, "sympy.core.symbol.Symbol", false]], "symbol (sympy.physics.secondquant.antisymmetrictensor property)": [[191, "sympy.physics.secondquant.AntiSymmetricTensor.symbol", false]], "symbolic": [[15, "term-Symbolic", true]], "symbolicsystem (class in sympy.physics.mechanics.system)": [[158, "sympy.physics.mechanics.system.SymbolicSystem", false]], "symbols() (in module sympy.core.symbol)": [[88, "sympy.core.symbol.symbols", false]], "symmetric() (sympy.combinatorics.generators method)": [[80, "sympy.combinatorics.generators.symmetric", false]], "symmetric_difference() (sympy.sets.sets.set method)": [[229, "sympy.sets.sets.Set.symmetric_difference", false]], "symmetric_poly() (in module sympy.polys.specialpolys)": [[217, "sympy.polys.specialpolys.symmetric_poly", false]], "symmetric_poly() (sympy.polys.rings.polyring method)": [[212, "sympy.polys.rings.PolyRing.symmetric_poly", false]], "symmetric_residue() (in module sympy.ntheory.modular)": [[128, "sympy.ntheory.modular.symmetric_residue", false]], "symmetricdifference (class in sympy.sets.sets)": [[229, "sympy.sets.sets.SymmetricDifference", false]], "symmetricgroup() (in module sympy.combinatorics.named_groups)": [[76, "sympy.combinatorics.named_groups.SymmetricGroup", false]], "symmetricpredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.SymmetricPredicate", false]], "symmetrize() (in module sympy.polys.polyfuncs)": [[217, "sympy.polys.polyfuncs.symmetrize", false]], "symmetrize() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.symmetrize", false]], "sympify()": [[15, "term-sympify", true]], "sympify() (in module sympy.core.sympify)": [[88, "sympy.core.sympify.sympify", false]], "sympy": [[58, "module-sympy", false]], "sympy.abc": [[60, "module-sympy.abc", false]], "sympy.algebras": [[61, "module-sympy.algebras", false]], "sympy.assumptions": [[64, "module-sympy.assumptions", false]], "sympy.assumptions.ask": [[62, "module-sympy.assumptions.ask", false]], "sympy.assumptions.assume": [[63, "module-sympy.assumptions.assume", false]], "sympy.assumptions.predicates": [[65, "module-sympy.assumptions.predicates", false]], "sympy.assumptions.refine": [[66, "module-sympy.assumptions.refine", false]], "sympy.calculus": [[67, "module-sympy.calculus", false]], "sympy.calculus.euler": [[67, "module-sympy.calculus.euler", false]], "sympy.calculus.finite_diff": [[67, "module-sympy.calculus.finite_diff", false]], "sympy.calculus.singularities": [[67, "module-sympy.calculus.singularities", false]], "sympy.calculus.util": [[67, "module-sympy.calculus.util", false]], "sympy.categories": [[68, "module-sympy.categories", false]], "sympy.categories.diagram_drawing": [[68, "module-sympy.categories.diagram_drawing", false]], "sympy.codegen.algorithms": [[69, "module-sympy.codegen.algorithms", false]], "sympy.codegen.approximations": [[69, "module-sympy.codegen.approximations", false]], "sympy.codegen.ast": [[69, "module-sympy.codegen.ast", false]], "sympy.codegen.cfunctions": [[69, "module-sympy.codegen.cfunctions", false]], "sympy.codegen.cnodes": [[69, "module-sympy.codegen.cnodes", false]], "sympy.codegen.cutils": [[69, "module-sympy.codegen.cutils", false]], "sympy.codegen.cxxnodes": [[69, "module-sympy.codegen.cxxnodes", false]], "sympy.codegen.fnodes": [[69, "module-sympy.codegen.fnodes", false]], "sympy.codegen.futils": [[69, "module-sympy.codegen.futils", false]], "sympy.codegen.matrix_nodes": [[69, "module-sympy.codegen.matrix_nodes", false]], "sympy.codegen.pyutils": [[69, "module-sympy.codegen.pyutils", false]], "sympy.codegen.rewriting": [[69, "module-sympy.codegen.rewriting", false]], "sympy.combinatorics.galois": [[71, "module-sympy.combinatorics.galois", false]], "sympy.combinatorics.generators": [[80, "module-sympy.combinatorics.generators", false]], "sympy.combinatorics.graycode": [[72, "module-sympy.combinatorics.graycode", false]], "sympy.combinatorics.group_constructs": [[73, "module-sympy.combinatorics.group_constructs", false]], "sympy.combinatorics.group_numbers": [[74, "module-sympy.combinatorics.group_numbers", false]], "sympy.combinatorics.named_groups": [[76, "module-sympy.combinatorics.named_groups", false]], "sympy.combinatorics.partitions": [[77, "module-sympy.combinatorics.partitions", false]], "sympy.combinatorics.perm_groups": [[79, "module-sympy.combinatorics.perm_groups", false]], "sympy.combinatorics.permutations": [[80, "module-sympy.combinatorics.permutations", false]], "sympy.combinatorics.polyhedron": [[81, "module-sympy.combinatorics.polyhedron", false]], "sympy.combinatorics.prufer": [[82, "module-sympy.combinatorics.prufer", false]], "sympy.combinatorics.subsets": [[83, "module-sympy.combinatorics.subsets", false]], "sympy.combinatorics.tensor_can": [[84, "module-sympy.combinatorics.tensor_can", false]], "sympy.combinatorics.testutil": [[85, "module-sympy.combinatorics.testutil", false]], "sympy.combinatorics.util": [[86, "module-sympy.combinatorics.util", false]], "sympy.core.add": [[88, "module-sympy.core.add", false]], "sympy.core.assumptions": [[88, "module-sympy.core.assumptions", false]], "sympy.core.basic": [[88, "module-sympy.core.basic", false]], "sympy.core.cache": [[88, "module-sympy.core.cache", false]], "sympy.core.containers": [[88, "module-sympy.core.containers", false]], "sympy.core.evalf": [[88, "module-sympy.core.evalf", false]], "sympy.core.expr": [[88, "module-sympy.core.expr", false]], "sympy.core.exprtools": [[88, "module-sympy.core.exprtools", false]], "sympy.core.function": [[88, "module-sympy.core.function", false]], "sympy.core.intfunc": [[88, "module-sympy.core.intfunc", false]], "sympy.core.kind": [[88, "module-sympy.core.kind", false]], "sympy.core.mod": [[88, "module-sympy.core.mod", false]], "sympy.core.mul": [[88, "module-sympy.core.mul", false]], "sympy.core.multidimensional": [[88, "module-sympy.core.multidimensional", false]], "sympy.core.numbers": [[88, "module-sympy.core.numbers", false]], "sympy.core.power": [[88, "module-sympy.core.power", false]], "sympy.core.random": [[88, "module-sympy.core.random", false]], "sympy.core.relational": [[88, "module-sympy.core.relational", false]], "sympy.core.singleton": [[88, "module-sympy.core.singleton", false]], "sympy.core.symbol": [[88, "module-sympy.core.symbol", false]], "sympy.core.sympify": [[88, "module-sympy.core.sympify", false]], "sympy.core.traversal": [[88, "module-sympy.core.traversal", false]], "sympy.crypto.crypto": [[89, "module-sympy.crypto.crypto", false]], "sympy.diffgeom": [[90, "module-sympy.diffgeom", false]], "sympy.discrete": [[91, "module-sympy.discrete", false]], "sympy.discrete.convolutions": [[91, "module-sympy.discrete.convolutions", false]], "sympy.discrete.transforms": [[91, "module-sympy.discrete.transforms", false]], "sympy.functions": [[95, "module-sympy.functions", false]], "sympy.functions.special.bessel": [[96, "module-sympy.functions.special.bessel", false]], "sympy.functions.special.beta_functions": [[96, "module-sympy.functions.special.beta_functions", false]], "sympy.functions.special.elliptic_integrals": [[96, "module-sympy.functions.special.elliptic_integrals", false]], "sympy.functions.special.error_functions": [[96, "module-sympy.functions.special.error_functions", false]], "sympy.functions.special.gamma_functions": [[96, "module-sympy.functions.special.gamma_functions", false]], "sympy.functions.special.mathieu_functions": [[96, "module-sympy.functions.special.mathieu_functions", false]], "sympy.functions.special.polynomials": [[96, "module-sympy.functions.special.polynomials", false]], "sympy.functions.special.singularity_functions": [[96, "module-sympy.functions.special.singularity_functions", false]], "sympy.functions.special.zeta_functions": [[96, "module-sympy.functions.special.zeta_functions", false]], "sympy.geometry.curve": [[97, "module-sympy.geometry.curve", false]], "sympy.geometry.ellipse": [[98, "module-sympy.geometry.ellipse", false]], "sympy.geometry.entity": [[99, "module-sympy.geometry.entity", false]], "sympy.geometry.line": [[101, "module-sympy.geometry.line", false]], "sympy.geometry.plane": [[102, "module-sympy.geometry.plane", false]], "sympy.geometry.point": [[103, "module-sympy.geometry.point", false]], "sympy.geometry.polygon": [[104, "module-sympy.geometry.polygon", false]], "sympy.geometry.util": [[105, "module-sympy.geometry.util", false]], "sympy.holonomic": [[108, "module-sympy.holonomic", false]], "sympy.integrals": [[115, "module-sympy.integrals", false]], "sympy.integrals.intpoly": [[115, "module-sympy.integrals.intpoly", false]], "sympy.integrals.meijerint": [[113, "module-sympy.integrals.meijerint", false]], "sympy.integrals.meijerint_doc": [[113, "module-sympy.integrals.meijerint_doc", false]], "sympy.integrals.transforms": [[115, "module-sympy.integrals.transforms", false]], "sympy.interactive": [[116, "module-sympy.interactive", false]], "sympy.interactive.printing": [[116, "module-sympy.interactive.printing", false]], "sympy.interactive.session": [[116, "module-sympy.interactive.session", false]], "sympy.liealgebras": [[117, "module-sympy.liealgebras", false]], "sympy.logic": [[118, "module-sympy.logic", false]], "sympy.logic.inference": [[118, "module-sympy.logic.inference", false]], "sympy.matrices": [[122, "module-sympy.matrices", false]], "sympy.matrices.expressions": [[120, "module-sympy.matrices.expressions", false]], "sympy.matrices.expressions.blockmatrix": [[120, "module-sympy.matrices.expressions.blockmatrix", false]], "sympy.matrices.immutable": [[121, "module-sympy.matrices.immutable", false]], "sympy.matrices.kind": [[123, "module-sympy.matrices.kind", false]], "sympy.matrices.matrixbase": [[124, "module-sympy.matrices.matrixbase", false]], "sympy.matrices.sparse": [[126, "module-sympy.matrices.sparse", false]], "sympy.matrices.sparsetools": [[127, "module-sympy.matrices.sparsetools", false]], "sympy.ntheory.bbp_pi": [[128, "module-sympy.ntheory.bbp_pi", false]], "sympy.ntheory.continued_fraction": [[128, "module-sympy.ntheory.continued_fraction", false]], "sympy.ntheory.digits": [[128, "module-sympy.ntheory.digits", false]], "sympy.ntheory.ecm": [[128, "module-sympy.ntheory.ecm", false]], "sympy.ntheory.egyptian_fraction": [[128, "module-sympy.ntheory.egyptian_fraction", false]], "sympy.ntheory.factor_": [[128, "module-sympy.ntheory.factor_", false]], "sympy.ntheory.generate": [[128, "module-sympy.ntheory.generate", false]], "sympy.ntheory.modular": [[128, "module-sympy.ntheory.modular", false]], "sympy.ntheory.multinomial": [[128, "module-sympy.ntheory.multinomial", false]], "sympy.ntheory.partitions_": [[128, "module-sympy.ntheory.partitions_", false]], "sympy.ntheory.primetest": [[128, "module-sympy.ntheory.primetest", false]], "sympy.ntheory.qs": [[128, "module-sympy.ntheory.qs", false]], "sympy.ntheory.residue_ntheory": [[128, "module-sympy.ntheory.residue_ntheory", false]], "sympy.parsing": [[130, "module-sympy.parsing", false]], "sympy.parsing.sym_expr": [[130, "module-sympy.parsing.sym_expr", false]], "sympy.physics": [[282, "module-sympy.physics", false]], "sympy.physics.biomechanics": [[133, "module-sympy.physics.biomechanics", false]], "sympy.physics.biomechanics.activation": [[131, "module-sympy.physics.biomechanics.activation", false]], "sympy.physics.biomechanics.curve": [[132, "module-sympy.physics.biomechanics.curve", false]], "sympy.physics.biomechanics.musculotendon": [[134, "module-sympy.physics.biomechanics.musculotendon", false]], "sympy.physics.continuum_mechanics.arch": [[135, "module-sympy.physics.continuum_mechanics.Arch", false]], "sympy.physics.continuum_mechanics.beam": [[136, "module-sympy.physics.continuum_mechanics.beam", false]], "sympy.physics.continuum_mechanics.cable": [[138, "module-sympy.physics.continuum_mechanics.cable", false]], "sympy.physics.continuum_mechanics.truss": [[140, "module-sympy.physics.continuum_mechanics.truss", false]], "sympy.physics.control": [[143, "module-sympy.physics.control", false]], "sympy.physics.control.lti": [[144, "module-sympy.physics.control.lti", false]], "sympy.physics.hep.gamma_matrices": [[145, "module-sympy.physics.hep.gamma_matrices", false]], "sympy.physics.hydrogen": [[146, "module-sympy.physics.hydrogen", false]], "sympy.physics.matrices": [[147, "module-sympy.physics.matrices", false]], "sympy.physics.mechanics": [[151, "module-sympy.physics.mechanics", false]], "sympy.physics.mechanics.actuator": [[148, "module-sympy.physics.mechanics.actuator", false]], "sympy.physics.mechanics.joint": [[152, "module-sympy.physics.mechanics.joint", false]], "sympy.physics.mechanics.kane": [[153, "module-sympy.physics.mechanics.kane", false]], "sympy.physics.mechanics.lagrange": [[153, "module-sympy.physics.mechanics.lagrange", false]], "sympy.physics.mechanics.linearize": [[154, "module-sympy.physics.mechanics.linearize", false]], "sympy.physics.mechanics.pathway": [[156, "module-sympy.physics.mechanics.pathway", false]], "sympy.physics.mechanics.wrapping_geometry": [[159, "module-sympy.physics.mechanics.wrapping_geometry", false]], "sympy.physics.optics.gaussopt": [[160, "module-sympy.physics.optics.gaussopt", false]], "sympy.physics.optics.medium": [[162, "module-sympy.physics.optics.medium", false]], "sympy.physics.optics.polarization": [[163, "module-sympy.physics.optics.polarization", false]], "sympy.physics.optics.utils": [[164, "module-sympy.physics.optics.utils", false]], "sympy.physics.optics.waves": [[165, "module-sympy.physics.optics.waves", false]], "sympy.physics.paulialgebra": [[166, "module-sympy.physics.paulialgebra", false]], "sympy.physics.qho_1d": [[167, "module-sympy.physics.qho_1d", false]], "sympy.physics.quantum.anticommutator": [[168, "module-sympy.physics.quantum.anticommutator", false]], "sympy.physics.quantum.cartesian": [[169, "module-sympy.physics.quantum.cartesian", false]], "sympy.physics.quantum.cg": [[170, "module-sympy.physics.quantum.cg", false]], "sympy.physics.quantum.circuitplot": [[171, "module-sympy.physics.quantum.circuitplot", false]], "sympy.physics.quantum.commutator": [[172, "module-sympy.physics.quantum.commutator", false]], "sympy.physics.quantum.constants": [[173, "module-sympy.physics.quantum.constants", false]], "sympy.physics.quantum.dagger": [[174, "module-sympy.physics.quantum.dagger", false]], "sympy.physics.quantum.gate": [[175, "module-sympy.physics.quantum.gate", false]], "sympy.physics.quantum.grover": [[176, "module-sympy.physics.quantum.grover", false]], "sympy.physics.quantum.hilbert": [[177, "module-sympy.physics.quantum.hilbert", false]], "sympy.physics.quantum.innerproduct": [[179, "module-sympy.physics.quantum.innerproduct", false]], "sympy.physics.quantum.operator": [[180, "module-sympy.physics.quantum.operator", false]], "sympy.physics.quantum.operatorset": [[181, "module-sympy.physics.quantum.operatorset", false]], "sympy.physics.quantum.piab": [[182, "module-sympy.physics.quantum.piab", false]], "sympy.physics.quantum.qapply": [[183, "module-sympy.physics.quantum.qapply", false]], "sympy.physics.quantum.qft": [[184, "module-sympy.physics.quantum.qft", false]], "sympy.physics.quantum.qubit": [[185, "module-sympy.physics.quantum.qubit", false]], "sympy.physics.quantum.represent": [[186, "module-sympy.physics.quantum.represent", false]], "sympy.physics.quantum.shor": [[187, "module-sympy.physics.quantum.shor", false]], "sympy.physics.quantum.spin": [[188, "module-sympy.physics.quantum.spin", false]], "sympy.physics.quantum.state": [[189, "module-sympy.physics.quantum.state", false]], "sympy.physics.quantum.tensorproduct": [[190, "module-sympy.physics.quantum.tensorproduct", false]], "sympy.physics.secondquant": [[191, "module-sympy.physics.secondquant", false]], "sympy.physics.sho": [[192, "module-sympy.physics.sho", false]], "sympy.physics.units.dimensions": [[193, "module-sympy.physics.units.dimensions", false]], "sympy.physics.units.prefixes": [[197, "module-sympy.physics.units.prefixes", false]], "sympy.physics.units.quantities": [[198, "module-sympy.physics.units.quantities", false]], "sympy.physics.units.unitsystem": [[199, "module-sympy.physics.units.unitsystem", false]], "sympy.physics.units.util": [[198, "module-sympy.physics.units.util", false]], "sympy.physics.vector": [[203, "module-sympy.physics.vector", false]], "sympy.physics.vector.functions": [[204, "module-sympy.physics.vector.functions", false]], "sympy.physics.vector.point": [[204, "module-sympy.physics.vector.point", false]], "sympy.physics.wigner": [[206, "module-sympy.physics.wigner", false]], "sympy.plotting.plot": [[207, "module-sympy.plotting.plot", false]], "sympy.plotting.pygletplot": [[207, "module-sympy.plotting.pygletplot", false]], "sympy.polys": [[217, "module-sympy.polys", false]], "sympy.polys.matrices._dfm": [[210, "module-sympy.polys.matrices._dfm", false]], "sympy.polys.matrices._typing": [[210, "module-sympy.polys.matrices._typing", false]], "sympy.polys.matrices.ddm": [[210, "module-sympy.polys.matrices.ddm", false]], "sympy.polys.matrices.dense": [[210, "module-sympy.polys.matrices.dense", false]], "sympy.polys.matrices.domainmatrix": [[210, "module-sympy.polys.matrices.domainmatrix", false]], "sympy.polys.matrices.sdm": [[210, "module-sympy.polys.matrices.sdm", false]], "sympy.polys.numberfields.modules": [[216, "module-sympy.polys.numberfields.modules", false]], "sympy.polys.numberfields.subfield": [[216, "module-sympy.polys.numberfields.subfield", false]], "sympy.polys.polyconfig": [[214, "module-sympy.polys.polyconfig", false]], "sympy.polys.polyoptions": [[214, "module-sympy.polys.polyoptions", false]], "sympy.polys.solvers": [[219, "module-sympy.polys.solvers", false]], "sympy.printing.aesaracode": [[221, "module-sympy.printing.aesaracode", false]], "sympy.printing.c": [[221, "module-sympy.printing.c", false]], "sympy.printing.codeprinter": [[221, "module-sympy.printing.codeprinter", false]], "sympy.printing.conventions": [[221, "module-sympy.printing.conventions", false]], "sympy.printing.cxx": [[221, "module-sympy.printing.cxx", false]], "sympy.printing.fortran": [[221, "module-sympy.printing.fortran", false]], "sympy.printing.gtk": [[221, "module-sympy.printing.gtk", false]], "sympy.printing.jscode": [[221, "module-sympy.printing.jscode", false]], "sympy.printing.julia": [[221, "module-sympy.printing.julia", false]], "sympy.printing.lambdarepr": [[221, "module-sympy.printing.lambdarepr", false]], "sympy.printing.latex": [[221, "module-sympy.printing.latex", false]], "sympy.printing.maple": [[221, "module-sympy.printing.maple", false]], "sympy.printing.mathematica": [[221, "module-sympy.printing.mathematica", false]], "sympy.printing.mathml": [[221, "module-sympy.printing.mathml", false]], "sympy.printing.octave": [[221, "module-sympy.printing.octave", false]], "sympy.printing.precedence": [[221, "module-sympy.printing.precedence", false]], "sympy.printing.pretty": [[221, "module-sympy.printing.pretty", false]], "sympy.printing.pretty.pretty": [[221, "module-sympy.printing.pretty.pretty", false]], "sympy.printing.pretty.pretty_symbology": [[221, "module-sympy.printing.pretty.pretty_symbology", false]], "sympy.printing.pretty.stringpict": [[221, "module-sympy.printing.pretty.stringpict", false]], "sympy.printing.preview": [[221, "module-sympy.printing.preview", false]], "sympy.printing.printer": [[221, "module-sympy.printing.printer", false]], "sympy.printing.pycode": [[221, "module-sympy.printing.pycode", false]], "sympy.printing.python": [[221, "module-sympy.printing.python", false]], "sympy.printing.rcode": [[221, "module-sympy.printing.rcode", false]], "sympy.printing.repr": [[221, "module-sympy.printing.repr", false]], "sympy.printing.rust": [[221, "module-sympy.printing.rust", false]], "sympy.printing.smtlib": [[221, "module-sympy.printing.smtlib", false]], "sympy.printing.str": [[221, "module-sympy.printing.str", false]], "sympy.printing.tree": [[221, "module-sympy.printing.tree", false]], "sympy.sets.conditionset": [[229, "module-sympy.sets.conditionset", false]], "sympy.sets.fancysets": [[229, "module-sympy.sets.fancysets", false]], "sympy.sets.powerset": [[229, "module-sympy.sets.powerset", false]], "sympy.sets.sets": [[229, "module-sympy.sets.sets", false]], "sympy.simplify.combsimp": [[233, "module-sympy.simplify.combsimp", false]], "sympy.simplify.cse_main": [[233, "module-sympy.simplify.cse_main", false]], "sympy.simplify.epathtools": [[233, "module-sympy.simplify.epathtools", false]], "sympy.simplify.fu": [[230, "module-sympy.simplify.fu", false]], "sympy.simplify.hyperexpand": [[233, "module-sympy.simplify.hyperexpand", false]], "sympy.simplify.hyperexpand_doc": [[231, "module-sympy.simplify.hyperexpand_doc", false]], "sympy.simplify.powsimp": [[233, "module-sympy.simplify.powsimp", false]], "sympy.simplify.radsimp": [[233, "module-sympy.simplify.radsimp", false]], "sympy.simplify.ratsimp": [[233, "module-sympy.simplify.ratsimp", false]], "sympy.simplify.simplify": [[16, "module-sympy.simplify.simplify", false]], "sympy.simplify.sqrtdenest": [[233, "module-sympy.simplify.sqrtdenest", false]], "sympy.simplify.trigsimp": [[233, "module-sympy.simplify.trigsimp", false]], "sympy.solvers": [[239, "module-sympy.solvers", false]], "sympy.solvers.inequalities": [[236, "module-sympy.solvers.inequalities", false]], "sympy.solvers.ode": [[237, "module-sympy.solvers.ode", false]], "sympy.solvers.ode.ode": [[237, "module-sympy.solvers.ode.ode", false]], "sympy.solvers.pde": [[238, "module-sympy.solvers.pde", false]], "sympy.solvers.recurr": [[239, "module-sympy.solvers.recurr", false]], "sympy.solvers.simplex": [[239, "module-sympy.solvers.simplex", false]], "sympy.solvers.solveset": [[240, "module-sympy.solvers.solveset", false]], "sympy.stats": [[241, "module-sympy.stats", false]], "sympy.stats.crv": [[241, "module-sympy.stats.crv", false]], "sympy.stats.crv_types": [[241, "module-sympy.stats.crv_types", false]], "sympy.stats.die() (in module sympy.stats.crv_types)": [[241, "sympy.stats.crv_types.sympy.stats.Die", false]], "sympy.stats.frv": [[241, "module-sympy.stats.frv", false]], "sympy.stats.frv_types": [[241, "module-sympy.stats.frv_types", false]], "sympy.stats.normal() (in module sympy.stats.crv_types)": [[241, "sympy.stats.crv_types.sympy.stats.Normal", false]], "sympy.stats.rv": [[241, "module-sympy.stats.rv", false]], "sympy.tensor": [[244, "module-sympy.tensor", false]], "sympy.tensor.array": [[242, "module-sympy.tensor.array", false]], "sympy.tensor.array.expressions": [[243, "module-sympy.tensor.array.expressions", false]], "sympy.tensor.index_methods": [[245, "module-sympy.tensor.index_methods", false]], "sympy.tensor.indexed": [[246, "module-sympy.tensor.indexed", false]], "sympy.tensor.tensor": [[247, "module-sympy.tensor.tensor", false]], "sympy.tensor.toperators": [[248, "module-sympy.tensor.toperators", false]], "sympy.testing": [[249, "module-sympy.testing", false]], "sympy.testing.pytest": [[250, "module-sympy.testing.pytest", false]], "sympy.testing.randtest": [[251, "module-sympy.testing.randtest", false]], "sympy.testing.runtests": [[252, "module-sympy.testing.runtests", false]], "sympy.utilities": [[258, "module-sympy.utilities", false]], "sympy.utilities.autowrap": [[253, "module-sympy.utilities.autowrap", false]], "sympy.utilities.codegen": [[254, "module-sympy.utilities.codegen", false]], "sympy.utilities.decorator": [[255, "module-sympy.utilities.decorator", false]], "sympy.utilities.enumerative": [[256, "module-sympy.utilities.enumerative", false]], "sympy.utilities.exceptions": [[257, "module-sympy.utilities.exceptions", false]], "sympy.utilities.iterables": [[259, "module-sympy.utilities.iterables", false]], "sympy.utilities.lambdify": [[260, "module-sympy.utilities.lambdify", false]], "sympy.utilities.memoization": [[261, "module-sympy.utilities.memoization", false]], "sympy.utilities.misc": [[262, "module-sympy.utilities.misc", false]], "sympy.utilities.source": [[263, "module-sympy.utilities.source", false]], "sympy.utilities.timeutils": [[264, "module-sympy.utilities.timeutils", false]], "sympy.vector": [[273, "module-sympy.vector", false]], "sympy_deprecation_warning() (in module sympy.utilities.exceptions)": [[257, "sympy.utilities.exceptions.sympy_deprecation_warning", false]], "sympy_eqs_to_ring() (in module sympy.polys.solvers)": [[219, "sympy.polys.solvers.sympy_eqs_to_ring", false]], "sympydeprecationwarning": [[257, "sympy.utilities.exceptions.SymPyDeprecationWarning", false]], "sympydoctestfinder (class in sympy.testing.runtests)": [[252, "sympy.testing.runtests.SymPyDocTestFinder", false]], "sympydoctestrunner (class in sympy.testing.runtests)": [[252, "sympy.testing.runtests.SymPyDocTestRunner", false]], "sympyexpression (class in sympy.parsing.sym_expr)": [[130, "sympy.parsing.sym_expr.SymPyExpression", false]], "sympyoutputchecker (class in sympy.testing.runtests)": [[252, "sympy.testing.runtests.SymPyOutputChecker", false]], "sympytestfile() (in module sympy.testing.runtests)": [[252, "sympy.testing.runtests.sympytestfile", false]], "sympytestresults (class in sympy.testing.runtests)": [[252, "sympy.testing.runtests.SymPyTestResults", false]], "sys1 (sympy.physics.control.lti.feedback property)": [[144, "sympy.physics.control.lti.Feedback.sys1", false]], "sys1 (sympy.physics.control.lti.mimofeedback property)": [[144, "sympy.physics.control.lti.MIMOFeedback.sys1", false]], "sys2 (sympy.physics.control.lti.feedback property)": [[144, "sympy.physics.control.lti.Feedback.sys2", false]], "sys2 (sympy.physics.control.lti.mimofeedback property)": [[144, "sympy.physics.control.lti.MIMOFeedback.sys2", false]], "system (class in sympy.physics.mechanics.system)": [[158, "sympy.physics.mechanics.system.System", false]], "syzygy_module() (sympy.polys.agca.modules.submodule method)": [[208, "sympy.polys.agca.modules.SubModule.syzygy_module", false]], "t (class in sympy.polys.matrices.dense)": [[210, "sympy.polys.matrices.dense.T", false]], "t (in module sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.T", false]], "t (sympy.matrices.expressions.matrixexpr property)": [[120, "sympy.matrices.expressions.MatrixExpr.T", false]], "t (sympy.matrices.matrixbase.matrixbase property)": [[124, "sympy.matrices.matrixbase.MatrixBase.T", false]], "t (sympy.physics.quantum.shor.cmod property)": [[187, "sympy.physics.quantum.shor.CMod.t", false]], "t (sympy.polys.numberfields.modules.powerbasiselement property)": [[216, "sympy.polys.numberfields.modules.PowerBasisElement.T", false]], "table() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.table", false]], "tail_degree() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.tail_degree", false]], "tail_degrees() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.tail_degrees", false]], "take() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.take", false]], "tan (class in sympy.functions.elementary.trigonometric)": [[94, "sympy.functions.elementary.trigonometric.tan", false]], "tangent_lines() (sympy.geometry.ellipse.ellipse method)": [[98, "sympy.geometry.ellipse.Ellipse.tangent_lines", false]], "tanh (class in sympy.functions.elementary.hyperbolic)": [[94, "sympy.functions.elementary.hyperbolic.tanh", false]], "target_frame (sympy.physics.mechanics.actuator.torqueactuator property)": [[148, "sympy.physics.mechanics.actuator.TorqueActuator.target_frame", false]], "targets (sympy.physics.quantum.gate.cgate property)": [[175, "sympy.physics.quantum.gate.CGate.targets", false]], "targets (sympy.physics.quantum.gate.cnotgate property)": [[175, "sympy.physics.quantum.gate.CNotGate.targets", false]], "targets (sympy.physics.quantum.gate.gate property)": [[175, "sympy.physics.quantum.gate.Gate.targets", false]], "targets (sympy.physics.quantum.gate.ugate property)": [[175, "sympy.physics.quantum.gate.UGate.targets", false]], "targets (sympy.physics.quantum.grover.oraclegate property)": [[176, "sympy.physics.quantum.grover.OracleGate.targets", false]], "tau_a (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.tau_a", false]], "tau_d (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.tau_d", false]], "taxicab_distance() (sympy.geometry.point.point method)": [[103, "sympy.geometry.point.Point.taxicab_distance", false]], "taylor_term() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.taylor_term", false]], "taylor_term() (sympy.functions.elementary.exponential.exp static method)": [[94, "sympy.functions.elementary.exponential.exp.taylor_term", false]], "taylor_term() (sympy.functions.elementary.exponential.log static method)": [[94, "sympy.functions.elementary.exponential.log.taylor_term", false]], "taylor_term() (sympy.functions.elementary.hyperbolic.csch static method)": [[94, "sympy.functions.elementary.hyperbolic.csch.taylor_term", false]], "taylor_term() (sympy.functions.elementary.hyperbolic.sinh static method)": [[94, "sympy.functions.elementary.hyperbolic.sinh.taylor_term", false]], "tc() (sympy.polys.polyclasses.anp method)": [[212, "sympy.polys.polyclasses.ANP.TC", false]], "tc() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.TC", false]], "tc() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.TC", false]], "tendon_slack_length (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.tendon_slack_length", false]], "tendonforcelengthdegroote2016 (class in sympy.physics.biomechanics.curve)": [[132, "sympy.physics.biomechanics.curve.TendonForceLengthDeGroote2016", false]], "tendonforcelengthinversedegroote2016 (class in sympy.physics.biomechanics.curve)": [[132, "sympy.physics.biomechanics.curve.TendonForceLengthInverseDeGroote2016", false]], "tensadd (class in sympy.tensor.tensor)": [[247, "sympy.tensor.tensor.TensAdd", false]], "tensexpr (class in sympy.tensor.tensor)": [[247, "sympy.tensor.tensor.TensExpr", false]], "tension (sympy.physics.continuum_mechanics.cable.cable property)": [[138, "sympy.physics.continuum_mechanics.cable.Cable.tension", false]], "tension_at() (sympy.physics.continuum_mechanics.cable.cable method)": [[138, "sympy.physics.continuum_mechanics.cable.Cable.tension_at", false]], "tensmul (class in sympy.tensor.tensor)": [[247, "sympy.tensor.tensor.TensMul", false]], "tensor_heads() (in module sympy.tensor.tensor)": [[247, "sympy.tensor.tensor.tensor_heads", false]], "tensor_product_simp() (in module sympy.physics.quantum.tensorproduct)": [[190, "sympy.physics.quantum.tensorproduct.tensor_product_simp", false]], "tensorcontraction() (in module sympy.tensor.array)": [[242, "sympy.tensor.array.tensorcontraction", false]], "tensordiagonal() (in module sympy.tensor.array)": [[242, "sympy.tensor.array.tensordiagonal", false]], "tensorhead (class in sympy.tensor.tensor)": [[247, "sympy.tensor.tensor.TensorHead", false]], "tensorindex (class in sympy.tensor.tensor)": [[247, "sympy.tensor.tensor.TensorIndex", false]], "tensorindextype (class in sympy.tensor.tensor)": [[247, "sympy.tensor.tensor.TensorIndexType", false]], "tensorpowerhilbertspace (class in sympy.physics.quantum.hilbert)": [[177, "sympy.physics.quantum.hilbert.TensorPowerHilbertSpace", false]], "tensorproduct (class in sympy.diffgeom)": [[90, "sympy.diffgeom.TensorProduct", false]], "tensorproduct (class in sympy.physics.quantum.tensorproduct)": [[190, "sympy.physics.quantum.tensorproduct.TensorProduct", false]], "tensorproduct() (in module sympy.tensor.array)": [[242, "sympy.tensor.array.tensorproduct", false]], "tensorproducthilbertspace (class in sympy.physics.quantum.hilbert)": [[177, "sympy.physics.quantum.hilbert.TensorProductHilbertSpace", false]], "tensorsymmetry (class in sympy.tensor.tensor)": [[247, "sympy.tensor.tensor.TensorSymmetry", false]], "tensorsymmetry() (in module sympy.tensor.tensor)": [[247, "sympy.tensor.tensor.tensorsymmetry", false]], "tensortype (class in sympy.tensor.tensor)": [[247, "sympy.tensor.tensor.TensorType", false]], "term_to_integer() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.term_to_integer", false]], "terminal_width() (sympy.printing.pretty.stringpict.stringpict method)": [[221, "sympy.printing.pretty.stringpict.stringPict.terminal_width", false]], "terms() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.terms", false]], "terms() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.terms", false]], "terms() (sympy.polys.rings.polyelement method)": [[212, "sympy.polys.rings.PolyElement.terms", false]], "terms_gcd() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.terms_gcd", false]], "terms_gcd() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.terms_gcd", false]], "terms_gcd() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.terms_gcd", false]], "termwise() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.termwise", false]], "test() (in module sympy.testing.runtests)": [[252, "sympy.testing.runtests.test", false]], "test_derivative_numerically() (in module sympy.core.random)": [[88, "sympy.core.random.test_derivative_numerically", false]], "test_factor() (sympy.polys.numberfields.primes.primeideal method)": [[216, "sympy.polys.numberfields.primes.PrimeIdeal.test_factor", false]], "textbackend (class in sympy.plotting.plot)": [[207, "sympy.plotting.plot.TextBackend", false]], "textplot() (in module sympy.plotting.textplot)": [[207, "sympy.plotting.textplot.textplot", false]], "tgate (class in sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.TGate", false]], "thinlens (class in sympy.physics.optics.gaussopt)": [[160, "sympy.physics.optics.gaussopt.ThinLens", false]], "threaded() (in module sympy.utilities.decorator)": [[255, "sympy.utilities.decorator.threaded", false]], "threaded_factory() (in module sympy.utilities.decorator)": [[255, "sympy.utilities.decorator.threaded_factory", false]], "three-valued logic": [[15, "term-Three-valued-logic", true]], "time (sympy.physics.quantum.state.timedepstate property)": [[189, "sympy.physics.quantum.state.TimeDepState.time", false]], "time_derivative() (in module sympy.physics.vector.functions)": [[202, "sympy.physics.vector.functions.time_derivative", false]], "time_period (sympy.physics.optics.waves.twave property)": [[165, "sympy.physics.optics.waves.TWave.time_period", false]], "timed() (in module sympy.utilities.timeutils)": [[264, "sympy.utilities.timeutils.timed", false]], "timedepbra (class in sympy.physics.quantum.state)": [[189, "sympy.physics.quantum.state.TimeDepBra", false]], "timedepket (class in sympy.physics.quantum.state)": [[189, "sympy.physics.quantum.state.TimeDepKet", false]], "timedepstate (class in sympy.physics.quantum.state)": [[189, "sympy.physics.quantum.state.TimeDepState", false]], "tiny (sympy.codegen.ast.floattype property)": [[69, "sympy.codegen.ast.FloatType.tiny", false]], "to_alg_num() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.to_alg_num", false]], "to_alg_num() (sympy.polys.numberfields.modules.powerbasiselement method)": [[216, "sympy.polys.numberfields.modules.PowerBasisElement.to_alg_num", false]], "to_algebraic_integer() (sympy.core.numbers.algebraicnumber method)": [[88, "sympy.core.numbers.AlgebraicNumber.to_algebraic_integer", false]], "to_ancestor() (sympy.polys.numberfields.modules.moduleelement method)": [[216, "sympy.polys.numberfields.modules.ModuleElement.to_ancestor", false]], "to_anf() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.to_anf", false]], "to_anp() (sympy.polys.numberfields.modules.powerbasiselement method)": [[216, "sympy.polys.numberfields.modules.PowerBasisElement.to_ANP", false]], "to_axis_angle() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.to_axis_angle", false]], "to_best() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.to_best", false]], "to_cnf() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.to_cnf", false]], "to_ddm() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.to_ddm", false]], "to_ddm() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.to_ddm", false]], "to_ddm() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_ddm", false]], "to_ddm() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.to_ddm", false]], "to_dense() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_dense", false]], "to_dfm() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.to_dfm", false]], "to_dfm() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.to_dfm", false]], "to_dfm() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_dfm", false]], "to_dfm() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.to_dfm", false]], "to_dfm_or_ddm() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.to_dfm_or_ddm", false]], "to_dfm_or_ddm() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.to_dfm_or_ddm", false]], "to_dfm_or_ddm() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_dfm_or_ddm", false]], "to_dfm_or_ddm() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.to_dfm_or_ddm", false]], "to_dict() (sympy.polys.polyclasses.anp method)": [[212, "sympy.polys.polyclasses.ANP.to_dict", false]], "to_dict() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.to_dict", false]], "to_dnf() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.to_dnf", false]], "to_dod() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.to_dod", false]], "to_dod() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.to_dod", false]], "to_dod() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_dod", false]], "to_dod() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.to_dod", false]], "to_dok() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.to_dok", false]], "to_dok() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.to_dok", false]], "to_dok() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_dok", false]], "to_dok() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.to_dok", false]], "to_euler() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.to_euler", false]], "to_exact() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.to_exact", false]], "to_exact() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.to_exact", false]], "to_expr() (sympy.holonomic.holonomic.holonomicfunction method)": [[110, "sympy.holonomic.holonomic.HolonomicFunction.to_expr", false]], "to_expr() (sympy.physics.control.lti.feedback method)": [[144, "sympy.physics.control.lti.Feedback.to_expr", false]], "to_expr() (sympy.physics.control.lti.parallel method)": [[144, "sympy.physics.control.lti.Parallel.to_expr", false]], "to_expr() (sympy.physics.control.lti.series method)": [[144, "sympy.physics.control.lti.Series.to_expr", false]], "to_expr() (sympy.physics.control.lti.transferfunction method)": [[144, "sympy.physics.control.lti.TransferFunction.to_expr", false]], "to_field() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_field", false]], "to_field() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.to_field", false]], "to_field() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.to_field", false]], "to_flat_nz() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.to_flat_nz", false]], "to_flat_nz() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.to_flat_nz", false]], "to_flat_nz() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_flat_nz", false]], "to_flat_nz() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.to_flat_nz", false]], "to_hyper() (sympy.holonomic.holonomic.holonomicfunction method)": [[110, "sympy.holonomic.holonomic.HolonomicFunction.to_hyper", false]], "to_int() (sympy.polys.domains.finitefield method)": [[212, "sympy.polys.domains.FiniteField.to_int", false]], "to_int_repr() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.to_int_repr", false]], "to_linearizer() (sympy.physics.mechanics.kane.kanesmethod method)": [[153, "sympy.physics.mechanics.kane.KanesMethod.to_linearizer", false]], "to_linearizer() (sympy.physics.mechanics.lagrange.lagrangesmethod method)": [[153, "sympy.physics.mechanics.lagrange.LagrangesMethod.to_linearizer", false]], "to_list() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.to_list", false]], "to_list() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.to_list", false]], "to_list() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_list", false]], "to_list() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.to_list", false]], "to_list() (sympy.polys.polyclasses.anp method)": [[212, "sympy.polys.polyclasses.ANP.to_list", false]], "to_list() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.to_list", false]], "to_list_flat() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.to_list_flat", false]], "to_list_flat() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.to_list_flat", false]], "to_list_flat() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_list_flat", false]], "to_list_flat() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.to_list_flat", false]], "to_loads() (sympy.physics.mechanics.actuator.actuatorbase method)": [[148, "sympy.physics.mechanics.actuator.ActuatorBase.to_loads", false]], "to_loads() (sympy.physics.mechanics.actuator.forceactuator method)": [[148, "sympy.physics.mechanics.actuator.ForceActuator.to_loads", false]], "to_loads() (sympy.physics.mechanics.actuator.torqueactuator method)": [[148, "sympy.physics.mechanics.actuator.TorqueActuator.to_loads", false]], "to_loads() (sympy.physics.mechanics.pathway.linearpathway method)": [[156, "sympy.physics.mechanics.pathway.LinearPathway.to_loads", false]], "to_loads() (sympy.physics.mechanics.pathway.obstaclesetpathway method)": [[156, "sympy.physics.mechanics.pathway.ObstacleSetPathway.to_loads", false]], "to_loads() (sympy.physics.mechanics.pathway.pathwaybase method)": [[156, "sympy.physics.mechanics.pathway.PathwayBase.to_loads", false]], "to_loads() (sympy.physics.mechanics.pathway.wrappingpathway method)": [[156, "sympy.physics.mechanics.pathway.WrappingPathway.to_loads", false]], "to_matrix() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.to_Matrix", false]], "to_matrix() (sympy.physics.vector.dyadic.dyadic method)": [[200, "sympy.physics.vector.dyadic.Dyadic.to_matrix", false]], "to_matrix() (sympy.physics.vector.vector.vector method)": [[200, "sympy.physics.vector.vector.Vector.to_matrix", false]], "to_matrix() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_Matrix", false]], "to_matrix() (sympy.vector.dyadic.dyadic method)": [[265, "sympy.vector.dyadic.Dyadic.to_matrix", false]], "to_matrix() (sympy.vector.vector.vector method)": [[265, "sympy.vector.vector.Vector.to_matrix", false]], "to_meijerg() (sympy.holonomic.holonomic.holonomicfunction method)": [[110, "sympy.holonomic.holonomic.HolonomicFunction.to_meijerg", false]], "to_nnf() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.to_nnf", false]], "to_number_field() (in module sympy.polys.numberfields.subfield)": [[216, "sympy.polys.numberfields.subfield.to_number_field", false]], "to_parent() (sympy.polys.numberfields.modules.moduleelement method)": [[216, "sympy.polys.numberfields.modules.ModuleElement.to_parent", false]], "to_primitive_element() (sympy.core.numbers.algebraicnumber method)": [[88, "sympy.core.numbers.AlgebraicNumber.to_primitive_element", false]], "to_prufer() (sympy.combinatorics.prufer.prufer static method)": [[82, "sympy.combinatorics.prufer.Prufer.to_prufer", false]], "to_rational() (sympy.polys.domains.realfield method)": [[212, "sympy.polys.domains.RealField.to_rational", false]], "to_ring() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.to_ring", false]], "to_ring() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.to_ring", false]], "to_root() (sympy.core.numbers.algebraicnumber method)": [[88, "sympy.core.numbers.AlgebraicNumber.to_root", false]], "to_rotation_matrix() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.to_rotation_matrix", false]], "to_sdm() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.to_sdm", false]], "to_sdm() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.to_sdm", false]], "to_sdm() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_sdm", false]], "to_sdm() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.to_sdm", false]], "to_sequence() (sympy.holonomic.holonomic.holonomicfunction method)": [[110, "sympy.holonomic.holonomic.HolonomicFunction.to_sequence", false]], "to_sparse() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.to_sparse", false]], "to_sympy() (sympy.polys.domains.algebraicfield method)": [[212, "sympy.polys.domains.AlgebraicField.to_sympy", false]], "to_sympy() (sympy.polys.domains.complexfield method)": [[212, "sympy.polys.domains.ComplexField.to_sympy", false]], "to_sympy() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.to_sympy", false]], "to_sympy() (sympy.polys.domains.expressiondomain method)": [[212, "sympy.polys.domains.ExpressionDomain.to_sympy", false]], "to_sympy() (sympy.polys.domains.finitefield method)": [[212, "sympy.polys.domains.FiniteField.to_sympy", false]], "to_sympy() (sympy.polys.domains.fractionfield method)": [[212, "sympy.polys.domains.FractionField.to_sympy", false]], "to_sympy() (sympy.polys.domains.gaussiandomains.gaussiandomain method)": [[212, "sympy.polys.domains.gaussiandomains.GaussianDomain.to_sympy", false]], "to_sympy() (sympy.polys.domains.gmpyintegerring method)": [[212, "sympy.polys.domains.GMPYIntegerRing.to_sympy", false]], "to_sympy() (sympy.polys.domains.gmpyrationalfield method)": [[212, "sympy.polys.domains.GMPYRationalField.to_sympy", false]], "to_sympy() (sympy.polys.domains.integerring method)": [[212, "sympy.polys.domains.IntegerRing.to_sympy", false]], "to_sympy() (sympy.polys.domains.polynomialring method)": [[212, "sympy.polys.domains.PolynomialRing.to_sympy", false]], "to_sympy() (sympy.polys.domains.rationalfield method)": [[212, "sympy.polys.domains.RationalField.to_sympy", false]], "to_sympy() (sympy.polys.domains.realfield method)": [[212, "sympy.polys.domains.RealField.to_sympy", false]], "to_sympy_dict() (sympy.polys.polyclasses.anp method)": [[212, "sympy.polys.polyclasses.ANP.to_sympy_dict", false]], "to_sympy_dict() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.to_sympy_dict", false]], "to_sympy_list() (sympy.polys.polyclasses.anp method)": [[212, "sympy.polys.polyclasses.ANP.to_sympy_list", false]], "to_sympy_list() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.to_sympy_list", false]], "to_tree() (sympy.combinatorics.prufer.prufer static method)": [[82, "sympy.combinatorics.prufer.Prufer.to_tree", false]], "to_tuple() (sympy.polys.polyclasses.anp method)": [[212, "sympy.polys.polyclasses.ANP.to_tuple", false]], "to_tuple() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.to_tuple", false]], "todod() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.todod", false]], "todok() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.todok", false]], "together() (in module sympy.polys.rationaltools)": [[217, "sympy.polys.rationaltools.together", false]], "together() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.together", false]], "token (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Token", false]], "tolist() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.tolist", false]], "topological_sort() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.topological_sort", false]], "topological_sort() (sympy.codegen.ast.codeblock class method)": [[69, "sympy.codegen.ast.CodeBlock.topological_sort", false]], "torque (class in sympy.physics.mechanics.loads)": [[155, "sympy.physics.mechanics.loads.Torque", false]], "torque (sympy.physics.mechanics.actuator.torqueactuator property)": [[148, "sympy.physics.mechanics.actuator.TorqueActuator.torque", false]], "torqueactuator (class in sympy.physics.mechanics.actuator)": [[148, "sympy.physics.mechanics.actuator.TorqueActuator", false]], "torsional_moment() (sympy.physics.continuum_mechanics.beam.beam3d method)": [[136, "sympy.physics.continuum_mechanics.beam.Beam3D.torsional_moment", false]], "total_degree() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.total_degree", false]], "total_degree() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.total_degree", false]], "totient (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.totient", false]], "totient() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.totient", false]], "totientrange() (sympy.ntheory.generate.sieve method)": [[128, "sympy.ntheory.generate.Sieve.totientrange", false]], "tp (sympy.polys.domains.domain.domain property)": [[212, "sympy.polys.domains.domain.Domain.tp", false]], "tr0() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.TR0", false]], "tr1() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.TR1", false]], "tr10() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.TR10", false]], "tr10i() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.TR10i", false]], "tr11() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.TR11", false]], "tr111() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.TR111", false]], "tr12() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.TR12", false]], "tr12i() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.TR12i", false]], "tr13() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.TR13", false]], "tr14() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.TR14", false]], "tr15() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.TR15", false]], "tr16() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.TR16", false]], "tr2() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.TR2", false]], "tr22() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.TR22", false]], "tr2i() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.TR2i", false]], "tr3() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.TR3", false]], "tr4() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.TR4", false]], "tr5() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.TR5", false]], "tr6() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.TR6", false]], "tr7() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.TR7", false]], "tr8() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.TR8", false]], "tr9() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.TR9", false]], "trace (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.Trace", false]], "trace() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.trace", false]], "trailing() (in module sympy.core.intfunc)": [[88, "sympy.core.intfunc.trailing", false]], "transcendental": [[88, "term-transcendental", true]], "transcendentalpredicate (class in sympy.assumptions.predicates.sets)": [[65, "sympy.assumptions.predicates.sets.TranscendentalPredicate", false]], "transferfunction (class in sympy.physics.control.lti)": [[144, "sympy.physics.control.lti.TransferFunction", false]], "transferfunctionmatrix (class in sympy.physics.control.lti)": [[144, "sympy.physics.control.lti.TransferFunctionMatrix", false]], "transform() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.transform", false]], "transform() (sympy.geometry.point.point2d method)": [[103, "sympy.geometry.point.Point2D.transform", false]], "transform() (sympy.geometry.point.point3d method)": [[103, "sympy.geometry.point.Point3D.transform", false]], "transform() (sympy.integrals.integrals.integral method)": [[115, "sympy.integrals.integrals.Integral.transform", false]], "transform() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.transform", false]], "transform() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.transform", false]], "transform_variable (sympy.integrals.transforms.integraltransform property)": [[115, "sympy.integrals.transforms.IntegralTransform.transform_variable", false]], "transformation() (sympy.diffgeom.coordsystem method)": [[90, "sympy.diffgeom.CoordSystem.transformation", false]], "transformation_to_dn() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.transformation_to_DN", false]], "transformation_to_normal() (in module sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.transformation_to_normal", false]], "transformtosympyexpr (class in sympy.parsing.latex.lark)": [[130, "sympy.parsing.latex.lark.TransformToSymPyExpr", false]], "transition_probabilities (sympy.stats.discretemarkovchain property)": [[241, "sympy.stats.DiscreteMarkovChain.transition_probabilities", false]], "transitivity_degree (sympy.combinatorics.perm_groups.permutationgroup property)": [[79, "sympy.combinatorics.perm_groups.PermutationGroup.transitivity_degree", false]], "translate() (in module sympy.utilities.misc)": [[262, "sympy.utilities.misc.translate", false]], "translate() (sympy.geometry.curve.curve method)": [[97, "sympy.geometry.curve.Curve.translate", false]], "translate() (sympy.geometry.entity.geometryentity method)": [[99, "sympy.geometry.entity.GeometryEntity.translate", false]], "translate() (sympy.geometry.point.point2d method)": [[103, "sympy.geometry.point.Point2D.translate", false]], "translate() (sympy.geometry.point.point3d method)": [[103, "sympy.geometry.point.Point3D.translate", false]], "translation_coordinate (sympy.physics.mechanics.joint.cylindricaljoint property)": [[152, "sympy.physics.mechanics.joint.CylindricalJoint.translation_coordinate", false]], "translation_speed (sympy.physics.mechanics.joint.cylindricaljoint property)": [[152, "sympy.physics.mechanics.joint.CylindricalJoint.translation_speed", false]], "transmissive_filter() (in module sympy.physics.optics.polarization)": [[163, "sympy.physics.optics.polarization.transmissive_filter", false]], "transpose (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.Transpose", false]], "transpose() (sympy.matrices.expressions.blockmatrix.blockmatrix method)": [[120, "sympy.matrices.expressions.blockmatrix.BlockMatrix.transpose", false]], "transpose() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.transpose", false]], "transpose() (sympy.physics.control.lti.transferfunctionmatrix method)": [[144, "sympy.physics.control.lti.TransferFunctionMatrix.transpose", false]], "transpose() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.transpose", false]], "transpose() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.transpose", false]], "transpose() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.transpose", false]], "transpositions() (sympy.combinatorics.permutations.permutation method)": [[80, "sympy.combinatorics.permutations.Permutation.transpositions", false]], "transverse_magnification() (in module sympy.physics.optics.utils)": [[164, "sympy.physics.optics.utils.transverse_magnification", false]], "trapezoidal() (in module sympy.stats)": [[241, "sympy.stats.Trapezoidal", false]], "tree() (in module sympy.printing.tree)": [[221, "sympy.printing.tree.tree", false]], "tree_cse() (in module sympy.simplify.cse_main)": [[233, "sympy.simplify.cse_main.tree_cse", false]], "tree_repr (sympy.combinatorics.prufer.prufer property)": [[82, "sympy.combinatorics.prufer.Prufer.tree_repr", false]], "triangle (class in sympy.geometry.polygon)": [[104, "sympy.geometry.polygon.Triangle", false]], "triangular() (in module sympy.stats)": [[241, "sympy.stats.Triangular", false]], "triangularpredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.TriangularPredicate", false]], "tribonacci (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.tribonacci", false]], "tribonacciconstant (class in sympy.core.numbers)": [[88, "sympy.core.numbers.TribonacciConstant", false]], "trigamma (class in sympy.functions.special.gamma_functions)": [[96, "sympy.functions.special.gamma_functions.trigamma", false]], "trigintegrate() (in module sympy.integrals.trigonometry)": [[115, "sympy.integrals.trigonometry.trigintegrate", false]], "trigsimp() (in module sympy.simplify.trigsimp)": [[233, "sympy.simplify.trigsimp.trigsimp", false]], "trigsimp() (sympy.core.expr.expr method)": [[88, "sympy.core.expr.Expr.trigsimp", false]], "trmorrie() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.TRmorrie", false]], "trpower() (in module sympy.simplify.fu)": [[230, "sympy.simplify.fu.TRpower", false]], "trunc() (in module sympy.polys.polytools)": [[217, "sympy.polys.polytools.trunc", false]], "trunc() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.trunc", false]], "trunc() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.trunc", false]], "truncate() (sympy.series.formal.formalpowerseries method)": [[223, "sympy.series.formal.FormalPowerSeries.truncate", false]], "truncate() (sympy.series.fourier.fourierseries method)": [[224, "sympy.series.fourier.FourierSeries.truncate", false]], "truss (class in sympy.physics.continuum_mechanics.truss)": [[140, "sympy.physics.continuum_mechanics.truss.Truss", false]], "truth_table() (in module sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.truth_table", false]], "tuple (class in sympy.core.containers)": [[88, "sympy.core.containers.Tuple", false]], "tuple_count() (sympy.core.containers.tuple method)": [[88, "sympy.core.containers.Tuple.tuple_count", false]], "tuplekind (class in sympy.core.containers)": [[88, "sympy.core.containers.TupleKind", false]], "twave (class in sympy.physics.optics.waves)": [[165, "sympy.physics.optics.waves.TWave", false]], "two_qubit_box() (sympy.physics.quantum.circuitplot.circuitplot method)": [[171, "sympy.physics.quantum.circuitplot.CircuitPlot.two_qubit_box", false]], "twoform_to_matrix() (in module sympy.diffgeom)": [[90, "sympy.diffgeom.twoform_to_matrix", false]], "twoqubitgate (class in sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.TwoQubitGate", false]], "type (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Type", false]], "typea (class in sympy.liealgebras.type_a)": [[117, "sympy.liealgebras.type_a.TypeA", false]], "typeb (class in sympy.liealgebras.type_b)": [[117, "sympy.liealgebras.type_b.TypeB", false]], "typec (class in sympy.liealgebras.type_c)": [[117, "sympy.liealgebras.type_c.TypeC", false]], "typed (class in sympy.liealgebras.type_d)": [[117, "sympy.liealgebras.type_d.TypeD", false]], "typee (class in sympy.liealgebras.type_e)": [[117, "sympy.liealgebras.type_e.TypeE", false]], "typef (class in sympy.liealgebras.type_f)": [[117, "sympy.liealgebras.type_f.TypeF", false]], "typeg (class in sympy.liealgebras.type_g)": [[117, "sympy.liealgebras.type_g.TypeG", false]], "u (sympy.physics.mechanics.jointsmethod.jointsmethod property)": [[149, "sympy.physics.mechanics.jointsmethod.JointsMethod.u", false]], "u (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.u", false]], "u (sympy.physics.vector.frame.referenceframe property)": [[200, "sympy.physics.vector.frame.ReferenceFrame.u", false]], "u() (in module sympy.printing.pretty.pretty_symbology)": [[221, "sympy.printing.pretty.pretty_symbology.U", false]], "u_aux (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.u_aux", false]], "u_dep (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.u_dep", false]], "u_ind (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.u_ind", false]], "udivisor_count() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.udivisor_count", false]], "udivisor_sigma (class in sympy.functions.combinatorial.numbers)": [[93, "sympy.functions.combinatorial.numbers.udivisor_sigma", false]], "udivisor_sigma() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.udivisor_sigma", false]], "udivisors() (in module sympy.ntheory.factor_)": [[128, "sympy.ntheory.factor_.udivisors", false]], "udldecomposition() (sympy.matrices.expressions.blockmatrix.blockmatrix method)": [[120, "sympy.matrices.expressions.blockmatrix.BlockMatrix.UDLdecomposition", false]], "ufuncify() (in module sympy.utilities.autowrap)": [[253, "sympy.utilities.autowrap.ufuncify", false]], "ufuncifycodewrapper (class in sympy.utilities.autowrap)": [[253, "sympy.utilities.autowrap.UfuncifyCodeWrapper", false]], "ugate (class in sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.UGate", false]], "uncouple() (in module sympy.physics.quantum.spin)": [[188, "sympy.physics.quantum.spin.uncouple", false]], "undefined function": [[15, "term-Undefined-Function", true]], "undefinedkind (in module sympy.core.kind)": [[88, "sympy.core.kind.UndefinedKind", false]], "undefinedpredicate (class in sympy.assumptions.assume)": [[63, "sympy.assumptions.assume.UndefinedPredicate", false]], "unequality (class in sympy.core.relational)": [[88, "sympy.core.relational.Unequality", false]], "unevaluated": [[15, "term-Unevaluated", true]], "unevaluatedexpr (class in sympy.core.expr)": [[88, "sympy.core.expr.UnevaluatedExpr", false]], "unflatten() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.unflatten", false]], "unificationfailed (class in sympy.polys.polyerrors)": [[214, "sympy.polys.polyerrors.UnificationFailed", false]], "uniform() (in module sympy.stats)": [[241, "sympy.stats.Uniform", false]], "uniformsum() (in module sympy.stats)": [[241, "sympy.stats.UniformSum", false]], "unify() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.unify", false]], "unify() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.unify", false]], "unify() (sympy.polys.numberfields.modules.moduleelement method)": [[216, "sympy.polys.numberfields.modules.ModuleElement.unify", false]], "unify() (sympy.polys.polyclasses.anp method)": [[212, "sympy.polys.polyclasses.ANP.unify", false]], "unify() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.unify", false]], "unify_anp() (sympy.polys.polyclasses.anp method)": [[212, "sympy.polys.polyclasses.ANP.unify_ANP", false]], "unify_composite() (sympy.polys.domains.domain.domain method)": [[212, "sympy.polys.domains.domain.Domain.unify_composite", false]], "unify_dmp() (sympy.polys.polyclasses.dmp method)": [[212, "sympy.polys.polyclasses.DMP.unify_DMP", false]], "union (class in sympy.codegen.cnodes)": [[69, "sympy.codegen.cnodes.union", false]], "union (class in sympy.sets.sets)": [[229, "sympy.sets.sets.Union", false]], "union() (sympy.polys.agca.ideals.ideal method)": [[208, "sympy.polys.agca.ideals.Ideal.union", false]], "union() (sympy.polys.agca.modules.submodule method)": [[208, "sympy.polys.agca.modules.SubModule.union", false]], "union() (sympy.series.gruntz.subsset method)": [[228, "sympy.series.gruntz.SubsSet.union", false]], "union() (sympy.sets.sets.set method)": [[229, "sympy.sets.sets.Set.union", false]], "uniq() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.uniq", false]], "unit (sympy.geometry.point.point property)": [[103, "sympy.geometry.point.Point.unit", false]], "unit (sympy.polys.polytools.poly property)": [[217, "sympy.polys.polytools.Poly.unit", false]], "unitaryoperator (class in sympy.physics.quantum.operator)": [[180, "sympy.physics.quantum.operator.UnitaryOperator", false]], "unitarypredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.UnitaryPredicate", false]], "unitsystem (class in sympy.physics.units.unitsystem)": [[199, "sympy.physics.units.unitsystem.UnitSystem", false]], "unittriangularpredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.UnitTriangularPredicate", false]], "univariate (class in sympy.solvers.diophantine.diophantine)": [[234, "sympy.solvers.diophantine.diophantine.Univariate", false]], "univariatepolynomialerror (class in sympy.polys.polyerrors)": [[214, "sympy.polys.polyerrors.UnivariatePolynomialError", false]], "universalset (class in sympy.sets.sets)": [[229, "sympy.sets.sets.UniversalSet", false]], "unrad() (in module sympy.solvers.solvers)": [[239, "sympy.solvers.solvers.unrad", false]], "unrank() (sympy.combinatorics.graycode.graycode class method)": [[72, "sympy.combinatorics.graycode.GrayCode.unrank", false]], "unrank() (sympy.combinatorics.prufer.prufer class method)": [[82, "sympy.combinatorics.prufer.Prufer.unrank", false]], "unrank_binary() (sympy.combinatorics.subsets.subset class method)": [[83, "sympy.combinatorics.subsets.Subset.unrank_binary", false]], "unrank_gray() (sympy.combinatorics.subsets.subset class method)": [[83, "sympy.combinatorics.subsets.Subset.unrank_gray", false]], "unrank_lex() (sympy.combinatorics.permutations.permutation class method)": [[80, "sympy.combinatorics.permutations.Permutation.unrank_lex", false]], "unrank_nonlex() (sympy.combinatorics.permutations.permutation class method)": [[80, "sympy.combinatorics.permutations.Permutation.unrank_nonlex", false]], "unrank_trotterjohnson() (sympy.combinatorics.permutations.permutation class method)": [[80, "sympy.combinatorics.permutations.Permutation.unrank_trotterjohnson", false]], "unsignedinttype (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.UnsignedIntType", false]], "update() (sympy.physics.quantum.circuitplot.circuitplot method)": [[171, "sympy.physics.quantum.circuitplot.CircuitPlot.update", false]], "upper (sympy.physics.secondquant.antisymmetrictensor property)": [[191, "sympy.physics.secondquant.AntiSymmetricTensor.upper", false]], "upper (sympy.tensor.indexed.idx property)": [[246, "sympy.tensor.indexed.Idx.upper", false]], "upper_hessenberg_decomposition() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.upper_hessenberg_decomposition", false]], "upper_triangular() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.upper_triangular", false]], "upper_triangular_solve() (sympy.matrices.dense.densematrix method)": [[119, "sympy.matrices.dense.DenseMatrix.upper_triangular_solve", false]], "upper_triangular_solve() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.upper_triangular_solve", false]], "uppergamma (class in sympy.functions.special.gamma_functions)": [[96, "sympy.functions.special.gamma_functions.uppergamma", false]], "uppertriangularpredicate (class in sympy.assumptions.predicates.matrices)": [[65, "sympy.assumptions.predicates.matrices.UpperTriangularPredicate", false]], "use (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.use", false]], "use() (in module sympy.core.traversal)": [[88, "sympy.core.traversal.use", false]], "use_rename (class in sympy.codegen.fnodes)": [[69, "sympy.codegen.fnodes.use_rename", false]], "using (class in sympy.codegen.cxxnodes)": [[69, "sympy.codegen.cxxnodes.using", false]], "v1pt_theory() (sympy.physics.vector.point.point method)": [[204, "sympy.physics.vector.point.Point.v1pt_theory", false]], "v2pt_theory() (sympy.physics.vector.point.point method)": [[204, "sympy.physics.vector.point.Point.v2pt_theory", false]], "v_m_max (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.v_M_max", false]], "v_s (sympy.physics.mechanics.actuator.coulombkineticfriction property)": [[148, "sympy.physics.mechanics.actuator.CoulombKineticFriction.v_s", false]], "validate_system() (sympy.physics.mechanics.system.system method)": [[158, "sympy.physics.mechanics.system.System.validate_system", false]], "valuation() (sympy.polys.numberfields.primes.primeideal method)": [[216, "sympy.polys.numberfields.primes.PrimeIdeal.valuation", false]], "values() (sympy.core.containers.dict method)": [[88, "sympy.core.containers.Dict.values", false]], "values() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.values", false]], "var (sympy.physics.control.lti.feedback property)": [[144, "sympy.physics.control.lti.Feedback.var", false]], "var (sympy.physics.control.lti.mimofeedback property)": [[144, "sympy.physics.control.lti.MIMOFeedback.var", false]], "var (sympy.physics.control.lti.mimoparallel property)": [[144, "sympy.physics.control.lti.MIMOParallel.var", false]], "var (sympy.physics.control.lti.mimoseries property)": [[144, "sympy.physics.control.lti.MIMOSeries.var", false]], "var (sympy.physics.control.lti.parallel property)": [[144, "sympy.physics.control.lti.Parallel.var", false]], "var (sympy.physics.control.lti.series property)": [[144, "sympy.physics.control.lti.Series.var", false]], "var (sympy.physics.control.lti.transferfunction property)": [[144, "sympy.physics.control.lti.TransferFunction.var", false]], "var (sympy.physics.control.lti.transferfunctionmatrix property)": [[144, "sympy.physics.control.lti.TransferFunctionMatrix.var", false]], "var() (in module sympy.core.symbol)": [[88, "sympy.core.symbol.var", false]], "varbosonicbasis (class in sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.VarBosonicBasis", false]], "variable (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.Variable", false]], "variable (sympy.physics.continuum_mechanics.beam.beam property)": [[136, "sympy.physics.continuum_mechanics.beam.Beam.variable", false]], "variable_map() (sympy.physics.vector.frame.referenceframe method)": [[200, "sympy.physics.vector.frame.ReferenceFrame.variable_map", false]], "variables (sympy.concrete.expr_with_limits.exprwithlimits property)": [[115, "sympy.concrete.expr_with_limits.ExprWithLimits.variables", false]], "variables (sympy.core.function.lambda property)": [[88, "sympy.core.function.Lambda.variables", false]], "variables (sympy.core.function.subs property)": [[88, "sympy.core.function.Subs.variables", false]], "variables (sympy.physics.quantum.operator.differentialoperator property)": [[180, "sympy.physics.quantum.operator.DifferentialOperator.variables", false]], "variables (sympy.physics.quantum.state.wavefunction property)": [[189, "sympy.physics.quantum.state.Wavefunction.variables", false]], "variables (sympy.series.sequences.seqbase property)": [[227, "sympy.series.sequences.SeqBase.variables", false]], "variables (sympy.utilities.codegen.routine property)": [[254, "sympy.utilities.codegen.Routine.variables", false]], "variance (class in sympy.stats)": [[241, "sympy.stats.Variance", false]], "variance() (in module sympy.stats)": [[241, "sympy.stats.variance", false]], "variancematrix (class in sympy.stats)": [[241, "sympy.stats.VarianceMatrix", false]], "variations() (in module sympy.utilities.iterables)": [[259, "sympy.utilities.iterables.variations", false]], "vec() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.vec", false]], "vech() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.vech", false]], "vector (class in sympy.physics.vector.vector)": [[200, "sympy.physics.vector.vector.Vector", false]], "vector (class in sympy.vector.vector)": [[265, "sympy.vector.vector.Vector", false]], "vector_coplanar() (sympy.algebras.quaternion class method)": [[61, "sympy.algebras.Quaternion.vector_coplanar", false]], "vector_integrate() (in module sympy.vector.integrals)": [[268, "sympy.vector.integrals.vector_integrate", false]], "vector_part() (sympy.algebras.quaternion method)": [[61, "sympy.algebras.Quaternion.vector_part", false]], "vectorize (class in sympy.core.multidimensional)": [[88, "sympy.core.multidimensional.vectorize", false]], "vectors_in_basis() (in module sympy.diffgeom)": [[90, "sympy.diffgeom.vectors_in_basis", false]], "vee() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.vee", false]], "vel() (sympy.physics.vector.point.point method)": [[204, "sympy.physics.vector.point.Point.vel", false]], "velocity_constraints (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.velocity_constraints", false]], "verify_numerically() (in module sympy.core.random)": [[88, "sympy.core.random.verify_numerically", false]], "vertices (sympy.combinatorics.polyhedron.polyhedron property)": [[81, "sympy.combinatorics.polyhedron.Polyhedron.vertices", false]], "vertices (sympy.geometry.polygon.polygon property)": [[104, "sympy.geometry.polygon.Polygon.vertices", false]], "vertices (sympy.geometry.polygon.regularpolygon property)": [[104, "sympy.geometry.polygon.RegularPolygon.vertices", false]], "vertices (sympy.geometry.polygon.triangle property)": [[104, "sympy.geometry.polygon.Triangle.vertices", false]], "vf() (in module sympy.printing.pretty.pretty_symbology)": [[221, "sympy.printing.pretty.pretty_symbology.VF", false]], "vfield() (in module sympy.polys.fields)": [[212, "sympy.polys.fields.vfield", false]], "viete() (in module sympy.polys.polyfuncs)": [[217, "sympy.polys.polyfuncs.viete", false]], "vlatex() (in module sympy.physics.vector.printing)": [[205, "sympy.physics.vector.printing.vlatex", false]], "vobj() (in module sympy.printing.pretty.pretty_symbology)": [[221, "sympy.printing.pretty.pretty_symbology.vobj", false]], "vonmises() (in module sympy.stats)": [[241, "sympy.stats.VonMises", false]], "vpprint() (in module sympy.physics.vector.printing)": [[205, "sympy.physics.vector.printing.vpprint", false]], "vprint() (in module sympy.physics.vector.printing)": [[205, "sympy.physics.vector.printing.vprint", false]], "vradius (sympy.geometry.ellipse.circle property)": [[98, "sympy.geometry.ellipse.Circle.vradius", false]], "vradius (sympy.geometry.ellipse.ellipse property)": [[98, "sympy.geometry.ellipse.Ellipse.vradius", false]], "vring() (in module sympy.polys.rings)": [[212, "sympy.polys.rings.vring", false]], "vstack() (sympy.matrices.matrixbase.matrixbase class method)": [[124, "sympy.matrices.matrixbase.MatrixBase.vstack", false]], "vstack() (sympy.polys.matrices._dfm.dfm method)": [[210, "sympy.polys.matrices._dfm.DFM.vstack", false]], "vstack() (sympy.polys.matrices.ddm.ddm method)": [[210, "sympy.polys.matrices.ddm.DDM.vstack", false]], "vstack() (sympy.polys.matrices.domainmatrix.domainmatrix method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.vstack", false]], "vstack() (sympy.polys.matrices.sdm.sdm method)": [[210, "sympy.polys.matrices.sdm.SDM.vstack", false]], "w (sympy.physics.optics.gaussopt.beamparameter property)": [[160, "sympy.physics.optics.gaussopt.BeamParameter.w", false]], "w_0 (sympy.physics.optics.gaussopt.beamparameter property)": [[160, "sympy.physics.optics.gaussopt.BeamParameter.w_0", false]], "waist2rayleigh() (in module sympy.physics.optics.gaussopt)": [[160, "sympy.physics.optics.gaussopt.waist2rayleigh", false]], "waist_approximation_limit (sympy.physics.optics.gaussopt.beamparameter property)": [[160, "sympy.physics.optics.gaussopt.BeamParameter.waist_approximation_limit", false]], "wald() (in module sympy.stats)": [[241, "sympy.stats.Wald", false]], "walk() (in module sympy.core.traversal)": [[88, "sympy.core.traversal.walk", false]], "warns() (in module sympy.testing.pytest)": [[250, "sympy.testing.pytest.warns", false]], "warns_deprecated_sympy() (in module sympy.testing.pytest)": [[250, "sympy.testing.pytest.warns_deprecated_sympy", false]], "wavefunction (class in sympy.physics.quantum.state)": [[189, "sympy.physics.quantum.state.Wavefunction", false]], "wavelength (sympy.physics.optics.waves.twave property)": [[165, "sympy.physics.optics.waves.TWave.wavelength", false]], "wavenumber (sympy.physics.optics.waves.twave property)": [[165, "sympy.physics.optics.waves.TWave.wavenumber", false]], "weak (sympy.core.relational.relational property)": [[88, "sympy.core.relational.Relational.weak", false]], "wedgeproduct (class in sympy.diffgeom)": [[90, "sympy.diffgeom.WedgeProduct", false]], "weibull() (in module sympy.stats)": [[241, "sympy.stats.Weibull", false]], "weldjoint (class in sympy.physics.mechanics.joint)": [[152, "sympy.physics.mechanics.joint.WeldJoint", false]], "weylgroup (class in sympy.liealgebras.weyl_group)": [[117, "sympy.liealgebras.weyl_group.WeylGroup", false]], "wgate (class in sympy.physics.quantum.grover)": [[176, "sympy.physics.quantum.grover.WGate", false]], "where() (in module sympy.stats)": [[241, "sympy.stats.where", false]], "which_all_roots() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.which_all_roots", false]], "which_real_roots() (sympy.polys.polytools.poly method)": [[217, "sympy.polys.polytools.Poly.which_real_roots", false]], "while (class in sympy.codegen.ast)": [[69, "sympy.codegen.ast.While", false]], "whole_submodule() (sympy.polys.numberfields.modules.module method)": [[216, "sympy.polys.numberfields.modules.Module.whole_submodule", false]], "wicks() (in module sympy.physics.secondquant)": [[191, "sympy.physics.secondquant.wicks", false]], "width (sympy.categories.diagram_drawing.diagramgrid property)": [[68, "sympy.categories.diagram_drawing.DiagramGrid.width", false]], "width() (sympy.printing.pretty.stringpict.stringpict method)": [[221, "sympy.printing.pretty.stringpict.stringPict.width", false]], "wienerprocess (class in sympy.stats)": [[241, "sympy.stats.WienerProcess", false]], "wigner3j (class in sympy.physics.quantum.cg)": [[170, "sympy.physics.quantum.cg.Wigner3j", false]], "wigner6j (class in sympy.physics.quantum.cg)": [[170, "sympy.physics.quantum.cg.Wigner6j", false]], "wigner9j (class in sympy.physics.quantum.cg)": [[170, "sympy.physics.quantum.cg.Wigner9j", false]], "wigner_3j() (in module sympy.physics.wigner)": [[206, "sympy.physics.wigner.wigner_3j", false]], "wigner_6j() (in module sympy.physics.wigner)": [[206, "sympy.physics.wigner.wigner_6j", false]], "wigner_9j() (in module sympy.physics.wigner)": [[206, "sympy.physics.wigner.wigner_9j", false]], "wigner_d() (in module sympy.physics.wigner)": [[206, "sympy.physics.wigner.wigner_d", false]], "wigner_d_small() (in module sympy.physics.wigner)": [[206, "sympy.physics.wigner.wigner_d_small", false]], "wignerd (class in sympy.physics.quantum.spin)": [[188, "sympy.physics.quantum.spin.WignerD", false]], "wignersemicircle() (in module sympy.stats)": [[241, "sympy.stats.WignerSemicircle", false]], "wild (class in sympy.core.symbol)": [[88, "sympy.core.symbol.Wild", false]], "wildfunction (class in sympy.core.function)": [[88, "sympy.core.function.WildFunction", false]], "wilkinson() (sympy.matrices.matrixbase.matrixbase class method)": [[124, "sympy.matrices.matrixbase.MatrixBase.wilkinson", false]], "wishart() (in module sympy.stats)": [[241, "sympy.stats.Wishart", false]], "with_defaults() (sympy.physics.biomechanics.activation.activationbase class method)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 class method)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.activation.zerothorderactivation class method)": [[131, "sympy.physics.biomechanics.activation.ZerothOrderActivation.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.curve.fiberforcelengthactivedegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthActiveDeGroote2016.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.curve.fiberforcelengthpassivedegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveDeGroote2016.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.curve.fiberforcelengthpassiveinversedegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.FiberForceLengthPassiveInverseDeGroote2016.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.curve.fiberforcevelocitydegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.FiberForceVelocityDeGroote2016.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.curve.fiberforcevelocityinversedegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.FiberForceVelocityInverseDeGroote2016.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.curve.tendonforcelengthdegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.TendonForceLengthDeGroote2016.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.curve.tendonforcelengthinversedegroote2016 class method)": [[132, "sympy.physics.biomechanics.curve.TendonForceLengthInverseDeGroote2016.with_defaults", false]], "with_defaults() (sympy.physics.biomechanics.musculotendon.musculotendonbase class method)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.with_defaults", false]], "wrappingcylinder (class in sympy.physics.mechanics.wrapping_geometry)": [[159, "sympy.physics.mechanics.wrapping_geometry.WrappingCylinder", false]], "wrappinggeometrybase (class in sympy.physics.mechanics.wrapping_geometry)": [[159, "sympy.physics.mechanics.wrapping_geometry.WrappingGeometryBase", false]], "wrappingpathway (class in sympy.physics.mechanics.pathway)": [[156, "sympy.physics.mechanics.pathway.WrappingPathway", false]], "wrappingsphere (class in sympy.physics.mechanics.wrapping_geometry)": [[159, "sympy.physics.mechanics.wrapping_geometry.WrappingSphere", false]], "write() (sympy.testing.runtests.pytestreporter method)": [[252, "sympy.testing.runtests.PyTestReporter.write", false]], "write() (sympy.utilities.codegen.codegen method)": [[254, "sympy.utilities.codegen.CodeGen.write", false]], "wronskian() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.wronskian", false]], "x (in module sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.X", false]], "x (sympy.geometry.point.point2d property)": [[103, "sympy.geometry.point.Point2D.x", false]], "x (sympy.geometry.point.point3d property)": [[103, "sympy.geometry.point.Point3D.x", false]], "x (sympy.physics.biomechanics.activation.activationbase property)": [[131, "sympy.physics.biomechanics.activation.ActivationBase.x", false]], "x (sympy.physics.biomechanics.activation.firstorderactivationdegroote2016 property)": [[131, "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016.x", false]], "x (sympy.physics.biomechanics.activation.zerothorderactivation property)": [[131, "sympy.physics.biomechanics.activation.ZerothOrderActivation.x", false]], "x (sympy.physics.biomechanics.musculotendon.musculotendonbase property)": [[134, "sympy.physics.biomechanics.musculotendon.MusculotendonBase.x", false]], "x (sympy.physics.mechanics.body.body property)": [[149, "sympy.physics.mechanics.body.Body.x", false]], "x (sympy.physics.mechanics.rigidbody.rigidbody property)": [[155, "sympy.physics.mechanics.rigidbody.RigidBody.x", false]], "x (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.x", false]], "x (sympy.physics.vector.frame.referenceframe property)": [[200, "sympy.physics.vector.frame.ReferenceFrame.x", false]], "xbra (class in sympy.physics.quantum.cartesian)": [[169, "sympy.physics.quantum.cartesian.XBra", false]], "xdirection (sympy.geometry.line.ray2d property)": [[101, "sympy.geometry.line.Ray2D.xdirection", false]], "xdirection (sympy.geometry.line.ray3d property)": [[101, "sympy.geometry.line.Ray3D.xdirection", false]], "xfield() (in module sympy.polys.fields)": [[212, "sympy.polys.fields.xfield", false]], "xgate (class in sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.XGate", false]], "xket (class in sympy.physics.quantum.cartesian)": [[169, "sympy.physics.quantum.cartesian.XKet", false]], "xnor (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.Xnor", false]], "xobj() (in module sympy.printing.pretty.pretty_symbology)": [[221, "sympy.printing.pretty.pretty_symbology.xobj", false]], "xop (class in sympy.physics.quantum.cartesian)": [[169, "sympy.physics.quantum.cartesian.XOp", false]], "xor (class in sympy.logic.boolalg)": [[118, "sympy.logic.boolalg.Xor", false]], "xreplace() (sympy.core.basic.basic method)": [[88, "sympy.core.basic.Basic.xreplace", false]], "xreplace() (sympy.matrices.matrixbase.matrixbase method)": [[124, "sympy.matrices.matrixbase.MatrixBase.xreplace", false]], "xreplace() (sympy.physics.vector.dyadic.dyadic method)": [[200, "sympy.physics.vector.dyadic.Dyadic.xreplace", false]], "xreplace() (sympy.physics.vector.vector.vector method)": [[200, "sympy.physics.vector.vector.Vector.xreplace", false]], "xring() (in module sympy.polys.rings)": [[212, "sympy.polys.rings.xring", false]], "xstr() (in module sympy.printing.pretty.pretty_symbology)": [[221, "sympy.printing.pretty.pretty_symbology.xstr", false]], "xsym() (in module sympy.printing.pretty.pretty_symbology)": [[221, "sympy.printing.pretty.pretty_symbology.xsym", false]], "xthreaded() (in module sympy.utilities.decorator)": [[255, "sympy.utilities.decorator.xthreaded", false]], "xx (sympy.physics.vector.frame.referenceframe property)": [[200, "sympy.physics.vector.frame.ReferenceFrame.xx", false]], "xy (sympy.physics.vector.frame.referenceframe property)": [[200, "sympy.physics.vector.frame.ReferenceFrame.xy", false]], "xypic_draw_diagram() (in module sympy.categories.diagram_drawing)": [[68, "sympy.categories.diagram_drawing.xypic_draw_diagram", false]], "xypicdiagramdrawer (class in sympy.categories.diagram_drawing)": [[68, "sympy.categories.diagram_drawing.XypicDiagramDrawer", false]], "xz (sympy.physics.vector.frame.referenceframe property)": [[200, "sympy.physics.vector.frame.ReferenceFrame.xz", false]], "y (in module sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.Y", false]], "y (sympy.geometry.point.point2d property)": [[103, "sympy.geometry.point.Point2D.y", false]], "y (sympy.geometry.point.point3d property)": [[103, "sympy.geometry.point.Point3D.y", false]], "y (sympy.physics.mechanics.body.body property)": [[149, "sympy.physics.mechanics.body.Body.y", false]], "y (sympy.physics.mechanics.rigidbody.rigidbody property)": [[155, "sympy.physics.mechanics.rigidbody.RigidBody.y", false]], "y (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.y", false]], "y (sympy.physics.vector.frame.referenceframe property)": [[200, "sympy.physics.vector.frame.ReferenceFrame.y", false]], "y (sympy.series.sequences.recursiveseq property)": [[227, "sympy.series.sequences.RecursiveSeq.y", false]], "ydirection (sympy.geometry.line.ray2d property)": [[101, "sympy.geometry.line.Ray2D.ydirection", false]], "ydirection (sympy.geometry.line.ray3d property)": [[101, "sympy.geometry.line.Ray3D.ydirection", false]], "ygate (class in sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.YGate", false]], "yn (class in sympy.functions.special.bessel)": [[96, "sympy.functions.special.bessel.yn", false]], "yn (sympy.series.sequences.recursiveseq property)": [[227, "sympy.series.sequences.RecursiveSeq.yn", false]], "ynm (class in sympy.functions.special.spherical_harmonics)": [[96, "sympy.functions.special.spherical_harmonics.Ynm", false]], "ynm_c() (in module sympy.functions.special.spherical_harmonics)": [[96, "sympy.functions.special.spherical_harmonics.Ynm_c", false]], "yop (class in sympy.physics.quantum.cartesian)": [[169, "sympy.physics.quantum.cartesian.YOp", false]], "yulesimon() (in module sympy.stats)": [[241, "sympy.stats.YuleSimon", false]], "yx (sympy.physics.vector.frame.referenceframe property)": [[200, "sympy.physics.vector.frame.ReferenceFrame.yx", false]], "yy (sympy.physics.vector.frame.referenceframe property)": [[200, "sympy.physics.vector.frame.ReferenceFrame.yy", false]], "yz (sympy.physics.vector.frame.referenceframe property)": [[200, "sympy.physics.vector.frame.ReferenceFrame.yz", false]], "z (in module sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.Z", false]], "z (sympy.geometry.point.point3d property)": [[103, "sympy.geometry.point.Point3D.z", false]], "z (sympy.physics.mechanics.body.body property)": [[149, "sympy.physics.mechanics.body.Body.z", false]], "z (sympy.physics.mechanics.rigidbody.rigidbody property)": [[155, "sympy.physics.mechanics.rigidbody.RigidBody.z", false]], "z (sympy.physics.mechanics.system.system property)": [[158, "sympy.physics.mechanics.system.System.z", false]], "z (sympy.physics.vector.frame.referenceframe property)": [[200, "sympy.physics.vector.frame.ReferenceFrame.z", false]], "zdirection (sympy.geometry.line.ray3d property)": [[101, "sympy.geometry.line.Ray3D.zdirection", false]], "zero": [[88, "term-zero", true]], "zero (class in sympy.core.numbers)": [[88, "sympy.core.numbers.Zero", false]], "zero (sympy.polys.domains.domain.domain attribute)": [[212, "sympy.polys.domains.domain.Domain.zero", false]], "zero (sympy.polys.polytools.poly property)": [[217, "sympy.polys.polytools.Poly.zero", false]], "zero() (sympy.polys.numberfields.modules.module method)": [[216, "sympy.polys.numberfields.modules.Module.zero", false]], "zeromatrix (class in sympy.matrices.expressions)": [[120, "sympy.matrices.expressions.ZeroMatrix", false]], "zeropredicate (class in sympy.assumptions.predicates.order)": [[65, "sympy.assumptions.predicates.order.ZeroPredicate", false]], "zeros() (in module sympy.matrices.dense)": [[124, "sympy.matrices.dense.zeros", false]], "zeros() (sympy.matrices.matrixbase.matrixbase class method)": [[124, "sympy.matrices.matrixbase.MatrixBase.zeros", false]], "zeros() (sympy.physics.control.lti.transferfunction method)": [[144, "sympy.physics.control.lti.TransferFunction.zeros", false]], "zeros() (sympy.polys.matrices._dfm.dfm class method)": [[210, "sympy.polys.matrices._dfm.DFM.zeros", false]], "zeros() (sympy.polys.matrices.domainmatrix.domainmatrix class method)": [[210, "sympy.polys.matrices.domainmatrix.DomainMatrix.zeros", false]], "zeros() (sympy.polys.matrices.sdm.sdm class method)": [[210, "sympy.polys.matrices.sdm.SDM.zeros", false]], "zerothorderactivation (class in sympy.physics.biomechanics.activation)": [[131, "sympy.physics.biomechanics.activation.ZerothOrderActivation", false]], "zeta (class in sympy.functions.special.zeta_functions)": [[96, "sympy.functions.special.zeta_functions.zeta", false]], "zeta() (in module sympy.stats)": [[241, "sympy.stats.Zeta", false]], "zgate (class in sympy.physics.quantum.gate)": [[175, "sympy.physics.quantum.gate.ZGate", false]], "znm (class in sympy.functions.special.spherical_harmonics)": [[96, "sympy.functions.special.spherical_harmonics.Znm", false]], "zoo": [[15, "term-zoo", true]], "zop (class in sympy.physics.quantum.cartesian)": [[169, "sympy.physics.quantum.cartesian.ZOp", false]], "zx (sympy.physics.vector.frame.referenceframe property)": [[200, "sympy.physics.vector.frame.ReferenceFrame.zx", false]], "zy (sympy.physics.vector.frame.referenceframe property)": [[200, "sympy.physics.vector.frame.ReferenceFrame.zy", false]], "zz (sympy.physics.vector.frame.referenceframe property)": [[200, "sympy.physics.vector.frame.ReferenceFrame.zz", false]]}, "objects": {"": [[58, 0, 0, "-", "sympy"]], "sympy": [[60, 0, 0, "-", "abc"], [61, 0, 0, "-", "algebras"], [64, 0, 0, "-", "assumptions"], [67, 0, 0, "-", "calculus"], [68, 0, 0, "-", "categories"], [90, 0, 0, "-", "diffgeom"], [91, 0, 0, "-", "discrete"], [95, 0, 0, "-", "functions"], [108, 0, 0, "-", "holonomic"], [115, 0, 0, "-", "integrals"], [116, 0, 0, "-", "interactive"], [117, 0, 0, "-", "liealgebras"], [118, 0, 0, "-", "logic"], [122, 0, 0, "-", "matrices"], [130, 0, 0, "-", "parsing"], [282, 0, 0, "-", "physics"], [217, 0, 0, "-", "polys"], [239, 0, 0, "-", "solvers"], [241, 0, 0, "-", "stats"], [244, 0, 0, "-", "tensor"], [249, 0, 0, "-", "testing"], [258, 0, 0, "-", "utilities"], [273, 0, 0, "-", "vector"]], "sympy.algebras": [[61, 1, 1, "", "Quaternion"]], "sympy.algebras.Quaternion": [[61, 2, 1, "", "add"], [61, 2, 1, "", "angle"], [61, 2, 1, "", "arc_coplanar"], [61, 2, 1, "", "axis"], [61, 2, 1, "", "exp"], [61, 2, 1, "", "from_Matrix"], [61, 2, 1, "", "from_axis_angle"], [61, 2, 1, "", "from_euler"], [61, 2, 1, "", "from_rotation_matrix"], [61, 2, 1, "", "index_vector"], [61, 2, 1, "", "integrate"], [61, 2, 1, "", "inverse"], [61, 2, 1, "", "is_pure"], [61, 2, 1, "", "is_zero_quaternion"], [61, 2, 1, "", "log"], [61, 2, 1, "", "mensor"], [61, 2, 1, "", "mul"], [61, 2, 1, "", "norm"], [61, 2, 1, "", "normalize"], [61, 2, 1, "", "orthogonal"], [61, 2, 1, "", "parallel"], [61, 2, 1, "", "pow"], [61, 2, 1, "", "pow_cos_sin"], [61, 3, 1, "", "product_matrix_left"], [61, 3, 1, "", "product_matrix_right"], [61, 2, 1, "", "rotate_point"], [61, 2, 1, "", "scalar_part"], [61, 2, 1, "", "set_norm"], [61, 2, 1, "", "to_Matrix"], [61, 2, 1, "", "to_axis_angle"], [61, 2, 1, "", "to_euler"], [61, 2, 1, "", "to_rotation_matrix"], [61, 2, 1, "", "vector_coplanar"], [61, 2, 1, "", "vector_part"]], "sympy.assumptions": [[62, 0, 0, "-", "ask"], [63, 0, 0, "-", "assume"], [65, 0, 0, "-", "predicates"], [66, 0, 0, "-", "refine"]], "sympy.assumptions.ask": [[62, 1, 1, "", "AssumptionKeys"], [62, 4, 1, "", "ask"], [62, 4, 1, "", "register_handler"], [62, 4, 1, "", "remove_handler"]], "sympy.assumptions.assume": [[63, 1, 1, "", "AppliedPredicate"], [63, 1, 1, "", "AssumptionsContext"], [63, 1, 1, "", "Predicate"], [63, 1, 1, "", "UndefinedPredicate"], [63, 4, 1, "", "assuming"]], "sympy.assumptions.assume.AppliedPredicate": [[63, 3, 1, "", "arg"], [63, 3, 1, "", "arguments"], [63, 3, 1, "", "function"]], "sympy.assumptions.assume.AssumptionsContext": [[63, 2, 1, "", "add"]], "sympy.assumptions.assume.Predicate": [[63, 2, 1, "", "eval"], [63, 5, 1, "", "handler"], [63, 2, 1, "", "register"], [63, 2, 1, "", "register_many"]], "sympy.assumptions.predicates.calculus": [[65, 1, 1, "", "FinitePredicate"], [65, 1, 1, "", "InfinitePredicate"]], "sympy.assumptions.predicates.calculus.FinitePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.calculus.InfinitePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common": [[65, 1, 1, "", "CommutativePredicate"], [65, 1, 1, "", "IsTruePredicate"]], "sympy.assumptions.predicates.common.CommutativePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common.IsTruePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices": [[65, 1, 1, "", "ComplexElementsPredicate"], [65, 1, 1, "", "DiagonalPredicate"], [65, 1, 1, "", "FullRankPredicate"], [65, 1, 1, "", "IntegerElementsPredicate"], [65, 1, 1, "", "InvertiblePredicate"], [65, 1, 1, "", "LowerTriangularPredicate"], [65, 1, 1, "", "NormalPredicate"], [65, 1, 1, "", "OrthogonalPredicate"], [65, 1, 1, "", "PositiveDefinitePredicate"], [65, 1, 1, "", "RealElementsPredicate"], [65, 1, 1, "", "SingularPredicate"], [65, 1, 1, "", "SquarePredicate"], [65, 1, 1, "", "SymmetricPredicate"], [65, 1, 1, "", "TriangularPredicate"], [65, 1, 1, "", "UnitTriangularPredicate"], [65, 1, 1, "", "UnitaryPredicate"], [65, 1, 1, "", "UpperTriangularPredicate"]], "sympy.assumptions.predicates.matrices.ComplexElementsPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.DiagonalPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.FullRankPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.IntegerElementsPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.InvertiblePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.LowerTriangularPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.NormalPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.OrthogonalPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.PositiveDefinitePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.RealElementsPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SingularPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SquarePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SymmetricPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.TriangularPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitTriangularPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitaryPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UpperTriangularPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory": [[65, 1, 1, "", "CompositePredicate"], [65, 1, 1, "", "EvenPredicate"], [65, 1, 1, "", "OddPredicate"], [65, 1, 1, "", "PrimePredicate"]], "sympy.assumptions.predicates.ntheory.CompositePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.EvenPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.OddPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.PrimePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order": [[65, 1, 1, "", "NegativePredicate"], [65, 1, 1, "", "NonNegativePredicate"], [65, 1, 1, "", "NonPositivePredicate"], [65, 1, 1, "", "NonZeroPredicate"], [65, 1, 1, "", "PositivePredicate"], [65, 1, 1, "", "ZeroPredicate"]], "sympy.assumptions.predicates.order.NegativePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonNegativePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonPositivePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonZeroPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.PositivePredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.ZeroPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets": [[65, 1, 1, "", "AlgebraicPredicate"], [65, 1, 1, "", "AntihermitianPredicate"], [65, 1, 1, "", "ComplexPredicate"], [65, 1, 1, "", "ExtendedRealPredicate"], [65, 1, 1, "", "HermitianPredicate"], [65, 1, 1, "", "ImaginaryPredicate"], [65, 1, 1, "", "IntegerPredicate"], [65, 1, 1, "", "IrrationalPredicate"], [65, 1, 1, "", "RationalPredicate"], [65, 1, 1, "", "RealPredicate"], [65, 1, 1, "", "TranscendentalPredicate"]], "sympy.assumptions.predicates.sets.AlgebraicPredicate": [[65, 5, 1, "", "AlgebraicHandler"], [65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.AntihermitianPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ComplexPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ExtendedRealPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.HermitianPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ImaginaryPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IntegerPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IrrationalPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RationalPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RealPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.TranscendentalPredicate": [[65, 5, 1, "", "handler"]], "sympy.assumptions.refine": [[66, 4, 1, "", "refine"], [66, 4, 1, "", "refine_Pow"], [66, 4, 1, "", "refine_abs"], [66, 4, 1, "", "refine_arg"], [66, 4, 1, "", "refine_atan2"], [66, 4, 1, "", "refine_im"], [66, 4, 1, "", "refine_matrixelement"], [66, 4, 1, "", "refine_re"], [66, 4, 1, "", "refine_sign"]], "sympy.calculus": [[67, 0, 0, "-", "euler"], [67, 0, 0, "-", "finite_diff"], [67, 0, 0, "-", "singularities"], [67, 0, 0, "-", "util"]], "sympy.calculus.euler": [[67, 4, 1, "", "euler_equations"]], "sympy.calculus.finite_diff": [[67, 4, 1, "", "apply_finite_diff"], [67, 4, 1, "", "differentiate_finite"], [67, 4, 1, "", "finite_diff_weights"]], "sympy.calculus.singularities": [[67, 4, 1, "", "is_decreasing"], [67, 4, 1, "", "is_increasing"], [67, 4, 1, "", "is_monotonic"], [67, 4, 1, "", "is_strictly_decreasing"], [67, 4, 1, "", "is_strictly_increasing"], [67, 4, 1, "", "monotonicity_helper"], [67, 4, 1, "", "singularities"]], "sympy.calculus.util": [[67, 4, 1, "", "continuous_domain"], [67, 4, 1, "", "function_range"], [67, 4, 1, "", "is_convex"], [67, 4, 1, "", "lcim"], [67, 4, 1, "", "maximum"], [67, 4, 1, "", "minimum"], [67, 4, 1, "", "not_empty_in"], [67, 4, 1, "", "periodicity"], [67, 4, 1, "", "stationary_points"]], "sympy.categories": [[68, 1, 1, "", "Category"], [68, 1, 1, "", "CompositeMorphism"], [68, 1, 1, "", "Diagram"], [68, 1, 1, "", "IdentityMorphism"], [68, 1, 1, "", "Morphism"], [68, 1, 1, "", "NamedMorphism"], [68, 1, 1, "", "Object"], [68, 0, 0, "-", "diagram_drawing"]], "sympy.categories.Category": [[68, 3, 1, "", "commutative_diagrams"], [68, 3, 1, "", "name"], [68, 3, 1, "", "objects"]], "sympy.categories.CompositeMorphism": [[68, 3, 1, "", "codomain"], [68, 3, 1, "", "components"], [68, 3, 1, "", "domain"], [68, 2, 1, "", "flatten"]], "sympy.categories.Diagram": [[68, 3, 1, "", "conclusions"], [68, 2, 1, "", "hom"], [68, 2, 1, "", "is_subdiagram"], [68, 3, 1, "", "objects"], [68, 3, 1, "", "premises"], [68, 2, 1, "", "subdiagram_from_objects"]], "sympy.categories.Morphism": [[68, 3, 1, "", "codomain"], [68, 2, 1, "", "compose"], [68, 3, 1, "", "domain"]], "sympy.categories.NamedMorphism": [[68, 3, 1, "", "name"]], "sympy.categories.diagram_drawing": [[68, 1, 1, "", "ArrowStringDescription"], [68, 1, 1, "", "DiagramGrid"], [68, 1, 1, "", "XypicDiagramDrawer"], [68, 4, 1, "", "preview_diagram"], [68, 4, 1, "", "xypic_draw_diagram"]], "sympy.categories.diagram_drawing.DiagramGrid": [[68, 3, 1, "", "height"], [68, 3, 1, "", "morphisms"], [68, 3, 1, "", "width"]], "sympy.categories.diagram_drawing.XypicDiagramDrawer": [[68, 2, 1, "", "draw"]], "sympy.codegen": [[69, 0, 0, "-", "algorithms"], [69, 0, 0, "-", "approximations"], [69, 0, 0, "-", "ast"], [69, 0, 0, "-", "cfunctions"], [69, 0, 0, "-", "cnodes"], [69, 0, 0, "-", "cutils"], [69, 0, 0, "-", "cxxnodes"], [69, 0, 0, "-", "fnodes"], [69, 0, 0, "-", "futils"], [69, 0, 0, "-", "matrix_nodes"], [69, 0, 0, "-", "pyutils"], [69, 0, 0, "-", "rewriting"]], "sympy.codegen.algorithms": [[69, 4, 1, "", "newtons_method"], [69, 4, 1, "", "newtons_method_function"]], "sympy.codegen.approximations": [[69, 1, 1, "", "SeriesApprox"], [69, 1, 1, "", "SumApprox"]], "sympy.codegen.ast": [[69, 1, 1, "", "Assignment"], [69, 1, 1, "", "AssignmentBase"], [69, 1, 1, "", "Attribute"], [69, 1, 1, "", "AugmentedAssignment"], [69, 1, 1, "", "BreakToken"], [69, 1, 1, "", "CodeBlock"], [69, 1, 1, "", "Comment"], [69, 1, 1, "", "ComplexType"], [69, 1, 1, "", "ContinueToken"], [69, 1, 1, "", "Declaration"], [69, 1, 1, "", "Element"], [69, 1, 1, "", "FloatBaseType"], [69, 1, 1, "", "FloatType"], [69, 1, 1, "", "For"], [69, 1, 1, "", "FunctionCall"], [69, 1, 1, "", "FunctionDefinition"], [69, 1, 1, "", "FunctionPrototype"], [69, 1, 1, "", "IntBaseType"], [69, 1, 1, "", "Node"], [69, 1, 1, "", "NoneToken"], [69, 1, 1, "", "Pointer"], [69, 1, 1, "", "Print"], [69, 1, 1, "", "QuotedString"], [69, 1, 1, "", "Raise"], [69, 1, 1, "", "Return"], [69, 1, 1, "", "RuntimeError_"], [69, 1, 1, "", "Scope"], [69, 1, 1, "", "SignedIntType"], [69, 1, 1, "", "Stream"], [69, 1, 1, "", "String"], [69, 1, 1, "", "Token"], [69, 1, 1, "", "Type"], [69, 1, 1, "", "UnsignedIntType"], [69, 1, 1, "", "Variable"], [69, 1, 1, "", "While"], [69, 4, 1, "", "aug_assign"]], "sympy.codegen.ast.CodeBlock": [[69, 2, 1, "", "cse"], [69, 2, 1, "", "topological_sort"]], "sympy.codegen.ast.FloatBaseType": [[69, 5, 1, "", "cast_nocheck"]], "sympy.codegen.ast.FloatType": [[69, 2, 1, "", "cast_nocheck"], [69, 3, 1, "", "decimal_dig"], [69, 3, 1, "", "dig"], [69, 3, 1, "", "eps"], [69, 3, 1, "", "max"], [69, 3, 1, "", "max_exponent"], [69, 3, 1, "", "min_exponent"], [69, 3, 1, "", "tiny"]], "sympy.codegen.ast.Node": [[69, 2, 1, "", "attr_params"]], "sympy.codegen.ast.Token": [[69, 2, 1, "", "kwargs"]], "sympy.codegen.ast.Type": [[69, 2, 1, "", "cast_check"], [69, 2, 1, "", "from_expr"]], "sympy.codegen.ast.Variable": [[69, 2, 1, "", "as_Declaration"], [69, 2, 1, "", "deduced"]], "sympy.codegen.cfunctions": [[69, 1, 1, "", "Cbrt"], [69, 1, 1, "", "Sqrt"], [69, 1, 1, "", "exp2"], [69, 1, 1, "", "expm1"], [69, 1, 1, "", "fma"], [69, 1, 1, "", "hypot"], [69, 1, 1, "", "log10"], [69, 1, 1, "", "log1p"], [69, 1, 1, "", "log2"]], "sympy.codegen.cfunctions.Cbrt": [[69, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.Sqrt": [[69, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.exp2": [[69, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.expm1": [[69, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.fma": [[69, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.hypot": [[69, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log10": [[69, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log1p": [[69, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log2": [[69, 2, 1, "", "fdiff"]], "sympy.codegen.cnodes": [[69, 1, 1, "", "CommaOperator"], [69, 1, 1, "", "Label"], [69, 1, 1, "", "PostDecrement"], [69, 1, 1, "", "PostIncrement"], [69, 1, 1, "", "PreDecrement"], [69, 1, 1, "", "PreIncrement"], [69, 4, 1, "", "alignof"], [69, 1, 1, "", "goto"], [69, 4, 1, "", "sizeof"], [69, 1, 1, "", "struct"], [69, 1, 1, "", "union"]], "sympy.codegen.cutils": [[69, 4, 1, "", "render_as_source_file"]], "sympy.codegen.cxxnodes": [[69, 1, 1, "", "using"]], "sympy.codegen.fnodes": [[69, 1, 1, "", "ArrayConstructor"], [69, 1, 1, "", "Do"], [69, 1, 1, "", "Extent"], [69, 1, 1, "", "FortranReturn"], [69, 1, 1, "", "GoTo"], [69, 1, 1, "", "ImpliedDoLoop"], [69, 1, 1, "", "Module"], [69, 1, 1, "", "Program"], [69, 1, 1, "", "Subroutine"], [69, 1, 1, "", "SubroutineCall"], [69, 4, 1, "", "allocated"], [69, 4, 1, "", "array"], [69, 4, 1, "", "bind_C"], [69, 1, 1, "", "cmplx"], [69, 4, 1, "", "dimension"], [69, 1, 1, "", "dsign"], [69, 1, 1, "", "isign"], [69, 1, 1, "", "kind"], [69, 4, 1, "", "lbound"], [69, 1, 1, "", "literal_dp"], [69, 1, 1, "", "literal_sp"], [69, 1, 1, "", "merge"], [69, 4, 1, "", "reshape"], [69, 4, 1, "", "shape"], [69, 4, 1, "", "size"], [69, 1, 1, "", "use"], [69, 1, 1, "", "use_rename"]], "sympy.codegen.futils": [[69, 4, 1, "", "render_as_module"]], "sympy.codegen.matrix_nodes": [[69, 1, 1, "", "MatrixSolve"]], "sympy.codegen.pyutils": [[69, 4, 1, "", "render_as_module"]], "sympy.codegen.rewriting": [[69, 1, 1, "", "FuncMinusOneOptim"], [69, 1, 1, "", "Optimization"], [69, 1, 1, "", "ReplaceOptim"], [69, 4, 1, "", "create_expand_pow_optimization"], [69, 4, 1, "", "optimize"]], "sympy.codegen.rewriting.FuncMinusOneOptim": [[69, 2, 1, "", "replace_in_Add"]], "sympy.combinatorics": [[71, 0, 0, "-", "galois"], [80, 0, 0, "-", "generators"], [72, 0, 0, "-", "graycode"], [73, 0, 0, "-", "group_constructs"], [74, 0, 0, "-", "group_numbers"], [76, 0, 0, "-", "named_groups"], [77, 0, 0, "-", "partitions"], [79, 0, 0, "-", "perm_groups"], [80, 0, 0, "-", "permutations"], [81, 0, 0, "-", "polyhedron"], [82, 0, 0, "-", "prufer"], [83, 0, 0, "-", "subsets"], [84, 0, 0, "-", "tensor_can"], [85, 0, 0, "-", "testutil"], [86, 0, 0, "-", "util"]], "sympy.combinatorics.galois": [[71, 4, 1, "", "A4_in_S6"], [71, 4, 1, "", "A4xC2"], [71, 4, 1, "", "G18"], [71, 4, 1, "", "G36m"], [71, 4, 1, "", "G36p"], [71, 4, 1, "", "G72"], [71, 4, 1, "", "M20"], [71, 4, 1, "", "PGL2F5"], [71, 4, 1, "", "PSL2F5"], [71, 1, 1, "", "S1TransitiveSubgroups"], [71, 1, 1, "", "S2TransitiveSubgroups"], [71, 1, 1, "", "S3TransitiveSubgroups"], [71, 4, 1, "", "S3_in_S6"], [71, 1, 1, "", "S4TransitiveSubgroups"], [71, 4, 1, "", "S4m"], [71, 4, 1, "", "S4p"], [71, 4, 1, "", "S4xC2"], [71, 1, 1, "", "S5TransitiveSubgroups"], [71, 1, 1, "", "S6TransitiveSubgroups"], [71, 4, 1, "", "find_transitive_subgroups_of_S6"], [71, 4, 1, "", "four_group"]], "sympy.combinatorics.generators": [[80, 2, 1, "", "alternating"], [80, 2, 1, "", "cyclic"], [80, 2, 1, "", "dihedral"], [80, 2, 1, "", "symmetric"]], "sympy.combinatorics.graycode": [[72, 1, 1, "", "GrayCode"], [72, 2, 1, "", "bin_to_gray"], [72, 2, 1, "", "get_subset_from_bitstring"], [72, 2, 1, "", "gray_to_bin"], [72, 2, 1, "", "graycode_subsets"], [72, 2, 1, "", "random_bitstring"]], "sympy.combinatorics.graycode.GrayCode": [[72, 3, 1, "", "current"], [72, 2, 1, "", "generate_gray"], [72, 3, 1, "", "n"], [72, 2, 1, "", "next"], [72, 3, 1, "", "rank"], [72, 3, 1, "", "selections"], [72, 2, 1, "", "skip"], [72, 2, 1, "", "unrank"]], "sympy.combinatorics.group_constructs": [[73, 4, 1, "", "DirectProduct"]], "sympy.combinatorics.group_numbers": [[74, 4, 1, "", "groups_count"], [74, 4, 1, "", "is_abelian_number"], [74, 4, 1, "", "is_cyclic_number"], [74, 4, 1, "", "is_nilpotent_number"]], "sympy.combinatorics.named_groups": [[76, 4, 1, "", "AbelianGroup"], [76, 4, 1, "", "AlternatingGroup"], [76, 4, 1, "", "CyclicGroup"], [76, 4, 1, "", "DihedralGroup"], [76, 4, 1, "", "SymmetricGroup"]], "sympy.combinatorics.partitions": [[77, 1, 1, "", "IntegerPartition"], [77, 1, 1, "", "Partition"], [77, 4, 1, "", "RGS_enum"], [77, 4, 1, "", "RGS_generalized"], [77, 4, 1, "", "RGS_rank"], [77, 4, 1, "", "RGS_unrank"], [77, 4, 1, "", "random_integer_partition"]], "sympy.combinatorics.partitions.IntegerPartition": [[77, 2, 1, "", "as_dict"], [77, 2, 1, "", "as_ferrers"], [77, 3, 1, "", "conjugate"], [77, 2, 1, "", "next_lex"], [77, 2, 1, "", "prev_lex"]], "sympy.combinatorics.partitions.Partition": [[77, 3, 1, "", "RGS"], [77, 2, 1, "", "from_rgs"], [77, 3, 1, "", "partition"], [77, 3, 1, "", "rank"], [77, 2, 1, "", "sort_key"]], "sympy.combinatorics.perm_groups": [[79, 1, 1, "", "PermutationGroup"]], "sympy.combinatorics.perm_groups.PermutationGroup": [[79, 2, 1, "", "__contains__"], [79, 2, 1, "", "__mul__"], [79, 2, 1, "", "__new__"], [79, 5, 1, "", "__weakref__"], [79, 2, 1, "", "_coset_representative"], [79, 2, 1, "", "_distinct_primes_lemma"], [79, 2, 1, "", "_eval_is_alt_sym_monte_carlo"], [79, 2, 1, "", "_eval_is_alt_sym_naive"], [79, 2, 1, "", "_p_elements_group"], [79, 2, 1, "", "_random_pr_init"], [79, 2, 1, "", "_sylow_alt_sym"], [79, 2, 1, "", "_union_find_merge"], [79, 2, 1, "", "_union_find_rep"], [79, 2, 1, "", "_verify"], [79, 2, 1, "", "abelian_invariants"], [79, 3, 1, "", "base"], [79, 2, 1, "", "baseswap"], [79, 3, 1, "", "basic_orbits"], [79, 3, 1, "", "basic_stabilizers"], [79, 3, 1, "", "basic_transversals"], [79, 2, 1, "", "center"], [79, 2, 1, "", "centralizer"], [79, 2, 1, "", "commutator"], [79, 2, 1, "", "composition_series"], [79, 2, 1, "", "conjugacy_class"], [79, 2, 1, "", "conjugacy_classes"], [79, 2, 1, "", "contains"], [79, 2, 1, "", "coset_factor"], [79, 2, 1, "", "coset_rank"], [79, 2, 1, "", "coset_table"], [79, 2, 1, "", "coset_transversal"], [79, 2, 1, "", "coset_unrank"], [79, 3, 1, "", "degree"], [79, 2, 1, "", "derived_series"], [79, 2, 1, "", "derived_subgroup"], [79, 3, 1, "", "elements"], [79, 2, 1, "", "equals"], [79, 2, 1, "", "generate"], [79, 2, 1, "", "generate_dimino"], [79, 2, 1, "", "generate_schreier_sims"], [79, 2, 1, "", "generator_product"], [79, 3, 1, "", "generators"], [79, 3, 1, "", "identity"], [79, 2, 1, "", "index"], [79, 3, 1, "", "is_abelian"], [79, 2, 1, "", "is_alt_sym"], [79, 3, 1, "", "is_alternating"], [79, 3, 1, "", "is_cyclic"], [79, 3, 1, "", "is_dihedral"], [79, 2, 1, "", "is_elementary"], [79, 3, 1, "", "is_nilpotent"], [79, 2, 1, "", "is_normal"], [79, 3, 1, "", "is_perfect"], [79, 3, 1, "", "is_polycyclic"], [79, 2, 1, "", "is_primitive"], [79, 3, 1, "", "is_solvable"], [79, 2, 1, "", "is_subgroup"], [79, 3, 1, "", "is_symmetric"], [79, 2, 1, "", "is_transitive"], [79, 3, 1, "", "is_trivial"], [79, 2, 1, "", "lower_central_series"], [79, 2, 1, "", "make_perm"], [79, 3, 1, "", "max_div"], [79, 2, 1, "", "minimal_block"], [79, 2, 1, "", "minimal_blocks"], [79, 2, 1, "", "normal_closure"], [79, 2, 1, "", "orbit"], [79, 2, 1, "", "orbit_rep"], [79, 2, 1, "", "orbit_transversal"], [79, 2, 1, "", "orbits"], [79, 2, 1, "", "order"], [79, 2, 1, "", "pointwise_stabilizer"], [79, 2, 1, "", "polycyclic_group"], [79, 2, 1, "", "presentation"], [79, 2, 1, "", "random"], [79, 2, 1, "", "random_pr"], [79, 2, 1, "", "random_stab"], [79, 2, 1, "", "schreier_sims"], [79, 2, 1, "", "schreier_sims_incremental"], [79, 2, 1, "", "schreier_sims_random"], [79, 2, 1, "", "schreier_vector"], [79, 2, 1, "", "stabilizer"], [79, 3, 1, "", "strong_gens"], [79, 2, 1, "", "strong_presentation"], [79, 2, 1, "", "subgroup"], [79, 2, 1, "", "subgroup_search"], [79, 2, 1, "", "sylow_subgroup"], [79, 3, 1, "", "transitivity_degree"]], "sympy.combinatorics.permutations": [[80, 1, 1, "", "Cycle"], [80, 1, 1, "", "Permutation"], [80, 4, 1, "", "_af_parity"]], "sympy.combinatorics.permutations.Cycle": [[80, 2, 1, "", "list"]], "sympy.combinatorics.permutations.Permutation": [[80, 2, 1, "", "apply"], [80, 3, 1, "", "array_form"], [80, 2, 1, "", "ascents"], [80, 2, 1, "", "atoms"], [80, 3, 1, "", "cardinality"], [80, 2, 1, "", "commutator"], [80, 2, 1, "", "commutes_with"], [80, 3, 1, "", "cycle_structure"], [80, 3, 1, "", "cycles"], [80, 3, 1, "", "cyclic_form"], [80, 2, 1, "", "descents"], [80, 2, 1, "", "from_inversion_vector"], [80, 2, 1, "", "from_sequence"], [80, 3, 1, "", "full_cyclic_form"], [80, 2, 1, "", "get_adjacency_distance"], [80, 2, 1, "", "get_adjacency_matrix"], [80, 2, 1, "", "get_positional_distance"], [80, 2, 1, "", "get_precedence_distance"], [80, 2, 1, "", "get_precedence_matrix"], [80, 2, 1, "", "index"], [80, 2, 1, "", "inversion_vector"], [80, 2, 1, "", "inversions"], [80, 3, 1, "", "is_Empty"], [80, 3, 1, "", "is_Identity"], [80, 3, 1, "", "is_Singleton"], [80, 3, 1, "", "is_even"], [80, 3, 1, "", "is_odd"], [80, 2, 1, "", "josephus"], [80, 2, 1, "", "length"], [80, 2, 1, "", "list"], [80, 2, 1, "", "max"], [80, 2, 1, "", "min"], [80, 2, 1, "", "mul_inv"], [80, 2, 1, "", "next_lex"], [80, 2, 1, "", "next_nonlex"], [80, 2, 1, "", "next_trotterjohnson"], [80, 2, 1, "", "order"], [80, 2, 1, "", "parity"], [80, 2, 1, "", "random"], [80, 2, 1, "", "rank"], [80, 2, 1, "", "rank_nonlex"], [80, 2, 1, "", "rank_trotterjohnson"], [80, 2, 1, "", "resize"], [80, 2, 1, "", "rmul"], [80, 2, 1, "", "rmul_with_af"], [80, 2, 1, "", "runs"], [80, 2, 1, "", "signature"], [80, 3, 1, "", "size"], [80, 2, 1, "", "support"], [80, 2, 1, "", "transpositions"], [80, 2, 1, "", "unrank_lex"], [80, 2, 1, "", "unrank_nonlex"], [80, 2, 1, "", "unrank_trotterjohnson"]], "sympy.combinatorics.polyhedron": [[81, 1, 1, "", "Polyhedron"]], "sympy.combinatorics.polyhedron.Polyhedron": [[81, 3, 1, "", "array_form"], [81, 3, 1, "", "corners"], [81, 3, 1, "", "cyclic_form"], [81, 3, 1, "", "edges"], [81, 3, 1, "", "faces"], [81, 3, 1, "", "pgroup"], [81, 2, 1, "", "reset"], [81, 2, 1, "", "rotate"], [81, 3, 1, "", "size"], [81, 3, 1, "", "vertices"]], "sympy.combinatorics.prufer": [[82, 1, 1, "", "Prufer"]], "sympy.combinatorics.prufer.Prufer": [[82, 2, 1, "", "edges"], [82, 2, 1, "", "next"], [82, 3, 1, "", "nodes"], [82, 2, 1, "", "prev"], [82, 2, 1, "", "prufer_rank"], [82, 3, 1, "", "prufer_repr"], [82, 3, 1, "", "rank"], [82, 3, 1, "", "size"], [82, 2, 1, "", "to_prufer"], [82, 2, 1, "", "to_tree"], [82, 3, 1, "", "tree_repr"], [82, 2, 1, "", "unrank"]], "sympy.combinatorics.subsets": [[83, 1, 1, "", "Subset"], [83, 2, 1, "", "ksubsets"]], "sympy.combinatorics.subsets.Subset": [[83, 2, 1, "", "bitlist_from_subset"], [83, 3, 1, "", "cardinality"], [83, 2, 1, "", "iterate_binary"], [83, 2, 1, "", "iterate_graycode"], [83, 2, 1, "", "next_binary"], [83, 2, 1, "", "next_gray"], [83, 2, 1, "", "next_lexicographic"], [83, 2, 1, "", "prev_binary"], [83, 2, 1, "", "prev_gray"], [83, 2, 1, "", "prev_lexicographic"], [83, 3, 1, "", "rank_binary"], [83, 3, 1, "", "rank_gray"], [83, 3, 1, "", "rank_lexicographic"], [83, 3, 1, "", "size"], [83, 3, 1, "", "subset"], [83, 2, 1, "", "subset_from_bitlist"], [83, 2, 1, "", "subset_indices"], [83, 3, 1, "", "superset"], [83, 3, 1, "", "superset_size"], [83, 2, 1, "", "unrank_binary"], [83, 2, 1, "", "unrank_gray"]], "sympy.combinatorics.tensor_can": [[84, 4, 1, "", "bsgs_direct_product"], [84, 4, 1, "", "canonicalize"], [84, 4, 1, "", "double_coset_can_rep"], [84, 4, 1, "", "get_symmetric_group_sgs"]], "sympy.combinatorics.testutil": [[85, 4, 1, "", "_cmp_perm_lists"], [85, 4, 1, "", "_naive_list_centralizer"], [85, 4, 1, "", "_verify_bsgs"], [85, 4, 1, "", "_verify_centralizer"], [85, 4, 1, "", "_verify_normal_closure"]], "sympy.combinatorics.util": [[86, 4, 1, "", "_base_ordering"], [86, 4, 1, "", "_check_cycles_alt_sym"], [86, 4, 1, "", "_distribute_gens_by_base"], [86, 4, 1, "", "_handle_precomputed_bsgs"], [86, 4, 1, "", "_orbits_transversals_from_bsgs"], [86, 4, 1, "", "_remove_gens"], [86, 4, 1, "", "_strip"], [86, 4, 1, "", "_strong_gens_from_distr"]], "sympy.concrete.expr_with_intlimits": [[87, 1, 1, "", "ExprWithIntLimits"]], "sympy.concrete.expr_with_intlimits.ExprWithIntLimits": [[87, 2, 1, "", "change_index"], [87, 3, 1, "", "has_empty_sequence"], [87, 2, 1, "", "index"], [87, 2, 1, "", "reorder"], [87, 2, 1, "", "reorder_limit"]], "sympy.concrete.expr_with_limits": [[115, 1, 1, "", "ExprWithLimits"]], "sympy.concrete.expr_with_limits.ExprWithLimits": [[115, 3, 1, "", "bound_symbols"], [115, 3, 1, "", "free_symbols"], [115, 3, 1, "", "function"], [115, 3, 1, "", "has_finite_limits"], [115, 3, 1, "", "has_reversed_limits"], [115, 3, 1, "", "is_number"], [115, 3, 1, "", "limits"], [115, 3, 1, "", "variables"]], "sympy.concrete.gosper": [[87, 4, 1, "", "gosper_normal"], [87, 4, 1, "", "gosper_sum"], [87, 4, 1, "", "gosper_term"]], "sympy.concrete.products": [[87, 1, 1, "", "Product"], [87, 4, 1, "", "product"]], "sympy.concrete.products.Product": [[87, 2, 1, "", "is_convergent"], [87, 2, 1, "", "reverse_order"]], "sympy.concrete.summations": [[87, 1, 1, "", "Sum"], [87, 4, 1, "", "summation"]], "sympy.concrete.summations.Sum": [[87, 2, 1, "", "euler_maclaurin"], [87, 2, 1, "", "eval_zeta_function"], [87, 2, 1, "", "is_absolutely_convergent"], [87, 2, 1, "", "is_convergent"], [87, 2, 1, "", "reverse_order"]], "sympy.core": [[88, 0, 0, "-", "add"], [88, 0, 0, "-", "assumptions"], [88, 0, 0, "-", "basic"], [88, 0, 0, "-", "cache"], [88, 0, 0, "-", "containers"], [88, 0, 0, "-", "evalf"], [88, 0, 0, "-", "expr"], [88, 0, 0, "-", "exprtools"], [88, 0, 0, "-", "function"], [88, 0, 0, "-", "intfunc"], [88, 0, 0, "-", "kind"], [88, 0, 0, "-", "mod"], [88, 0, 0, "-", "mul"], [88, 0, 0, "-", "multidimensional"], [88, 0, 0, "-", "numbers"], [88, 0, 0, "-", "power"], [88, 0, 0, "-", "random"], [88, 0, 0, "-", "relational"], [88, 0, 0, "-", "singleton"], [88, 0, 0, "-", "symbol"], [88, 0, 0, "-", "sympify"], [88, 0, 0, "-", "traversal"]], "sympy.core.add": [[88, 1, 1, "", "Add"]], "sympy.core.add.Add": [[88, 2, 1, "", "as_coeff_Add"], [88, 2, 1, "", "as_coeff_add"], [88, 2, 1, "", "as_content_primitive"], [88, 2, 1, "", "as_numer_denom"], [88, 2, 1, "", "as_real_imag"], [88, 2, 1, "", "as_two_terms"], [88, 2, 1, "", "extract_leading_order"], [88, 2, 1, "", "flatten"], [88, 2, 1, "", "primitive"]], "sympy.core.basic": [[88, 1, 1, "", "Atom"], [88, 1, 1, "", "Basic"]], "sympy.core.basic.Basic": [[88, 3, 1, "", "args"], [88, 2, 1, "", "as_content_primitive"], [88, 2, 1, "", "as_dummy"], [88, 3, 1, "", "assumptions0"], [88, 2, 1, "", "atoms"], [88, 3, 1, "", "canonical_variables"], [88, 2, 1, "", "class_key"], [88, 2, 1, "", "compare"], [88, 2, 1, "", "count"], [88, 2, 1, "", "count_ops"], [88, 2, 1, "", "doit"], [88, 2, 1, "", "dummy_eq"], [88, 2, 1, "", "find"], [88, 3, 1, "", "free_symbols"], [88, 2, 1, "", "fromiter"], [88, 3, 1, "", "func"], [88, 2, 1, "", "has"], [88, 2, 1, "", "has_free"], [88, 2, 1, "", "has_xfree"], [88, 3, 1, "", "is_comparable"], [88, 2, 1, "", "is_same"], [88, 2, 1, "", "match"], [88, 2, 1, "", "matches"], [88, 2, 1, "", "rcall"], [88, 2, 1, "", "refine"], [88, 2, 1, "", "replace"], [88, 2, 1, "", "rewrite"], [88, 2, 1, "", "simplify"], [88, 2, 1, "", "sort_key"], [88, 2, 1, "", "subs"], [88, 2, 1, "", "xreplace"]], "sympy.core.cache": [[88, 4, 1, "", "__cacheit"]], "sympy.core.containers": [[88, 1, 1, "", "Dict"], [88, 1, 1, "", "Tuple"], [88, 1, 1, "", "TupleKind"]], "sympy.core.containers.Dict": [[88, 2, 1, "", "get"], [88, 2, 1, "", "items"], [88, 2, 1, "", "keys"], [88, 2, 1, "", "values"]], "sympy.core.containers.Tuple": [[88, 2, 1, "", "index"], [88, 3, 1, "", "kind"], [88, 2, 1, "", "tuple_count"]], "sympy.core.evalf": [[88, 1, 1, "", "EvalfMixin"], [88, 4, 1, "", "N"], [88, 1, 1, "", "PrecisionExhausted"]], "sympy.core.evalf.EvalfMixin": [[88, 2, 1, "", "evalf"], [88, 2, 1, "", "n"]], "sympy.core.expr": [[88, 1, 1, "", "AtomicExpr"], [88, 1, 1, "", "Expr"], [88, 1, 1, "", "UnevaluatedExpr"]], "sympy.core.expr.Expr": [[88, 2, 1, "", "apart"], [88, 2, 1, "", "args_cnc"], [88, 2, 1, "", "as_coeff_Add"], [88, 2, 1, "", "as_coeff_Mul"], [88, 2, 1, "", "as_coeff_add"], [88, 2, 1, "", "as_coeff_exponent"], [88, 2, 1, "", "as_coeff_mul"], [88, 2, 1, "", "as_coefficient"], [88, 2, 1, "", "as_coefficients_dict"], [88, 2, 1, "", "as_content_primitive"], [88, 2, 1, "", "as_expr"], [88, 2, 1, "", "as_independent"], [88, 2, 1, "", "as_leading_term"], [88, 2, 1, "", "as_numer_denom"], [88, 2, 1, "", "as_ordered_factors"], [88, 2, 1, "", "as_ordered_terms"], [88, 2, 1, "", "as_poly"], [88, 2, 1, "", "as_powers_dict"], [88, 2, 1, "", "as_real_imag"], [88, 2, 1, "", "as_terms"], [88, 2, 1, "", "aseries"], [88, 2, 1, "", "cancel"], [88, 2, 1, "", "coeff"], [88, 2, 1, "", "collect"], [88, 2, 1, "", "combsimp"], [88, 2, 1, "", "compute_leading_term"], [88, 2, 1, "", "conjugate"], [88, 2, 1, "", "could_extract_minus_sign"], [88, 2, 1, "", "equals"], [88, 2, 1, "", "expand"], [88, 3, 1, "", "expr_free_symbols"], [88, 2, 1, "", "extract_additively"], [88, 2, 1, "", "extract_branch_factor"], [88, 2, 1, "", "extract_multiplicatively"], [88, 2, 1, "", "factor"], [88, 2, 1, "", "fourier_series"], [88, 2, 1, "", "fps"], [88, 2, 1, "", "gammasimp"], [88, 2, 1, "", "getO"], [88, 2, 1, "", "getn"], [88, 2, 1, "", "integrate"], [88, 2, 1, "", "invert"], [88, 2, 1, "", "is_algebraic_expr"], [88, 2, 1, "", "is_constant"], [88, 2, 1, "", "is_meromorphic"], [88, 3, 1, "", "is_number"], [88, 2, 1, "", "is_polynomial"], [88, 2, 1, "", "is_rational_function"], [88, 2, 1, "", "leadterm"], [88, 2, 1, "", "limit"], [88, 2, 1, "", "lseries"], [88, 2, 1, "", "normal"], [88, 2, 1, "", "nseries"], [88, 2, 1, "", "nsimplify"], [88, 2, 1, "", "powsimp"], [88, 2, 1, "", "primitive"], [88, 2, 1, "", "radsimp"], [88, 2, 1, "", "ratsimp"], [88, 2, 1, "", "removeO"], [88, 2, 1, "", "round"], [88, 2, 1, "", "separate"], [88, 2, 1, "", "series"], [88, 2, 1, "", "taylor_term"], [88, 2, 1, "", "together"], [88, 2, 1, "", "trigsimp"]], "sympy.core.exprtools": [[88, 4, 1, "", "factor_terms"], [88, 4, 1, "", "gcd_terms"]], "sympy.core.function": [[88, 1, 1, "", "Derivative"], [88, 1, 1, "", "Function"], [88, 1, 1, "", "FunctionClass"], [88, 1, 1, "", "Lambda"], [88, 1, 1, "", "PoleError"], [88, 1, 1, "", "Subs"], [88, 1, 1, "", "WildFunction"], [88, 4, 1, "", "count_ops"], [88, 4, 1, "", "diff"], [88, 4, 1, "", "expand"], [88, 4, 1, "", "expand_complex"], [88, 4, 1, "", "expand_func"], [88, 4, 1, "", "expand_log"], [88, 4, 1, "", "expand_mul"], [88, 4, 1, "", "expand_multinomial"], [88, 4, 1, "", "expand_power_base"], [88, 4, 1, "", "expand_power_exp"], [88, 4, 1, "", "expand_trig"], [88, 4, 1, "", "nfloat"]], "sympy.core.function.Derivative": [[88, 3, 1, "", "_diff_wrt"], [88, 2, 1, "", "_sort_variable_count"], [88, 2, 1, "", "as_finite_difference"], [88, 2, 1, "", "doit_numerically"]], "sympy.core.function.Function": [[88, 2, 1, "", "fdiff"], [88, 2, 1, "", "is_singular"]], "sympy.core.function.FunctionClass": [[88, 3, 1, "", "nargs"]], "sympy.core.function.Lambda": [[88, 3, 1, "", "bound_symbols"], [88, 3, 1, "", "expr"], [88, 3, 1, "", "is_identity"], [88, 3, 1, "", "signature"], [88, 3, 1, "", "variables"]], "sympy.core.function.Subs": [[88, 3, 1, "", "bound_symbols"], [88, 3, 1, "", "expr"], [88, 3, 1, "", "point"], [88, 3, 1, "", "variables"]], "sympy.core.intfunc": [[88, 4, 1, "", "igcd"], [88, 4, 1, "", "igcd_lehmer"], [88, 4, 1, "", "igcdex"], [88, 4, 1, "", "ilcm"], [88, 4, 1, "", "integer_log"], [88, 4, 1, "", "integer_nthroot"], [88, 4, 1, "", "isqrt"], [88, 4, 1, "", "mod_inverse"], [88, 4, 1, "", "num_digits"], [88, 4, 1, "", "trailing"]], "sympy.core.kind": [[88, 5, 1, "", "BooleanKind"], [88, 1, 1, "", "Kind"], [88, 5, 1, "", "NumberKind"], [88, 5, 1, "", "UndefinedKind"]], "sympy.core.mod": [[88, 1, 1, "", "Mod"]], "sympy.core.mul": [[88, 1, 1, "", "Mul"], [88, 4, 1, "", "prod"]], "sympy.core.mul.Mul": [[88, 2, 1, "", "as_coeff_Mul"], [88, 2, 1, "", "as_content_primitive"], [88, 2, 1, "", "as_ordered_factors"], [88, 2, 1, "", "as_two_terms"], [88, 2, 1, "", "flatten"]], "sympy.core.multidimensional": [[88, 1, 1, "", "vectorize"]], "sympy.core.numbers": [[88, 1, 1, "", "AlgebraicNumber"], [88, 1, 1, "", "Catalan"], [88, 1, 1, "", "ComplexInfinity"], [88, 1, 1, "", "EulerGamma"], [88, 1, 1, "", "Exp1"], [88, 1, 1, "", "Float"], [88, 1, 1, "", "GoldenRatio"], [88, 1, 1, "", "Half"], [88, 1, 1, "", "ImaginaryUnit"], [88, 1, 1, "", "Infinity"], [88, 1, 1, "", "Integer"], [88, 1, 1, "", "NaN"], [88, 1, 1, "", "NegativeInfinity"], [88, 1, 1, "", "NegativeOne"], [88, 1, 1, "", "Number"], [88, 1, 1, "", "NumberSymbol"], [88, 1, 1, "", "One"], [88, 1, 1, "", "Pi"], [88, 1, 1, "", "Rational"], [88, 5, 1, "", "RealNumber"], [88, 1, 1, "", "TribonacciConstant"], [88, 1, 1, "", "Zero"], [88, 4, 1, "", "equal_valued"], [88, 4, 1, "", "mod_inverse"], [88, 4, 1, "", "seterr"]], "sympy.core.numbers.AlgebraicNumber": [[88, 2, 1, "", "__new__"], [88, 2, 1, "", "as_expr"], [88, 2, 1, "", "as_poly"], [88, 2, 1, "", "coeffs"], [88, 2, 1, "", "field_element"], [88, 3, 1, "", "is_aliased"], [88, 3, 1, "", "is_primitive_element"], [88, 2, 1, "", "minpoly_of_element"], [88, 2, 1, "", "native_coeffs"], [88, 2, 1, "", "primitive_element"], [88, 2, 1, "", "to_algebraic_integer"], [88, 2, 1, "", "to_primitive_element"], [88, 2, 1, "", "to_root"]], "sympy.core.numbers.Number": [[88, 2, 1, "", "as_coeff_Add"], [88, 2, 1, "", "as_coeff_Mul"], [88, 2, 1, "", "cofactors"], [88, 2, 1, "", "gcd"], [88, 2, 1, "", "lcm"]], "sympy.core.numbers.NumberSymbol": [[88, 2, 1, "", "approximation"]], "sympy.core.numbers.Rational": [[88, 2, 1, "", "as_coeff_Add"], [88, 2, 1, "", "as_coeff_Mul"], [88, 2, 1, "", "as_content_primitive"], [88, 2, 1, "", "factors"], [88, 2, 1, "", "limit_denominator"]], "sympy.core.power": [[88, 1, 1, "", "Pow"]], "sympy.core.power.Pow": [[88, 2, 1, "", "as_base_exp"], [88, 2, 1, "", "as_content_primitive"]], "sympy.core.random": [[88, 4, 1, "", "_randint"], [88, 4, 1, "", "_randrange"], [88, 4, 1, "", "random_complex_number"], [88, 4, 1, "", "test_derivative_numerically"], [88, 4, 1, "", "verify_numerically"]], "sympy.core.relational": [[88, 5, 1, "", "Eq"], [88, 1, 1, "", "Equality"], [88, 5, 1, "", "Ge"], [88, 1, 1, "", "GreaterThan"], [88, 5, 1, "", "Gt"], [88, 5, 1, "", "Le"], [88, 1, 1, "", "LessThan"], [88, 5, 1, "", "Lt"], [88, 5, 1, "", "Ne"], [88, 5, 1, "", "Rel"], [88, 1, 1, "", "Relational"], [88, 1, 1, "", "StrictGreaterThan"], [88, 1, 1, "", "StrictLessThan"], [88, 1, 1, "", "Unequality"]], "sympy.core.relational.Equality": [[88, 2, 1, "", "as_poly"], [88, 2, 1, "", "integrate"]], "sympy.core.relational.Relational": [[88, 3, 1, "", "canonical"], [88, 2, 1, "", "equals"], [88, 3, 1, "", "lhs"], [88, 3, 1, "", "negated"], [88, 3, 1, "", "reversed"], [88, 3, 1, "", "reversedsign"], [88, 3, 1, "", "rhs"], [88, 3, 1, "", "strict"], [88, 3, 1, "", "weak"]], "sympy.core.singleton": [[88, 1, 1, "", "Singleton"], [88, 1, 1, "", "SingletonRegistry"]], "sympy.core.sorting": [[88, 4, 1, "", "default_sort_key"], [88, 4, 1, "", "ordered"]], "sympy.core.symbol": [[88, 1, 1, "", "Dummy"], [88, 1, 1, "", "Symbol"], [88, 1, 1, "", "Wild"], [88, 4, 1, "", "symbols"], [88, 4, 1, "", "var"]], "sympy.core.sympify": [[88, 4, 1, "", "sympify"]], "sympy.core.traversal": [[88, 4, 1, "", "bottom_up"], [88, 4, 1, "", "postorder_traversal"], [88, 4, 1, "", "preorder_traversal"], [88, 4, 1, "", "use"], [88, 4, 1, "", "walk"]], "sympy.crypto": [[89, 0, 0, "-", "crypto"]], "sympy.crypto.crypto": [[89, 4, 1, "", "AZ"], [89, 4, 1, "", "bifid5_square"], [89, 4, 1, "", "bifid6_square"], [89, 4, 1, "", "check_and_join"], [89, 4, 1, "", "cycle_list"], [89, 4, 1, "", "decipher_affine"], [89, 4, 1, "", "decipher_atbash"], [89, 4, 1, "", "decipher_bifid"], [89, 4, 1, "", "decipher_bifid5"], [89, 4, 1, "", "decipher_bifid6"], [89, 4, 1, "", "decipher_elgamal"], [89, 4, 1, "", "decipher_gm"], [89, 4, 1, "", "decipher_hill"], [89, 4, 1, "", "decipher_kid_rsa"], [89, 4, 1, "", "decipher_railfence"], [89, 4, 1, "", "decipher_rot13"], [89, 4, 1, "", "decipher_rsa"], [89, 4, 1, "", "decipher_shift"], [89, 4, 1, "", "decipher_vigenere"], [89, 4, 1, "", "decode_morse"], [89, 4, 1, "", "dh_private_key"], [89, 4, 1, "", "dh_public_key"], [89, 4, 1, "", "dh_shared_key"], [89, 4, 1, "", "elgamal_private_key"], [89, 4, 1, "", "elgamal_public_key"], [89, 4, 1, "", "encipher_affine"], [89, 4, 1, "", "encipher_atbash"], [89, 4, 1, "", "encipher_bifid"], [89, 4, 1, "", "encipher_bifid5"], [89, 4, 1, "", "encipher_bifid6"], [89, 4, 1, "", "encipher_elgamal"], [89, 4, 1, "", "encipher_gm"], [89, 4, 1, "", "encipher_hill"], [89, 4, 1, "", "encipher_kid_rsa"], [89, 4, 1, "", "encipher_railfence"], [89, 4, 1, "", "encipher_rot13"], [89, 4, 1, "", "encipher_rsa"], [89, 4, 1, "", "encipher_shift"], [89, 4, 1, "", "encipher_substitution"], [89, 4, 1, "", "encipher_vigenere"], [89, 4, 1, "", "encode_morse"], [89, 4, 1, "", "gm_private_key"], [89, 4, 1, "", "gm_public_key"], [89, 4, 1, "", "kid_rsa_private_key"], [89, 4, 1, "", "kid_rsa_public_key"], [89, 4, 1, "", "lfsr_autocorrelation"], [89, 4, 1, "", "lfsr_connection_polynomial"], [89, 4, 1, "", "lfsr_sequence"], [89, 4, 1, "", "padded_key"], [89, 4, 1, "", "rsa_private_key"], [89, 4, 1, "", "rsa_public_key"]], "sympy.diffgeom": [[90, 1, 1, "", "BaseCovarDerivativeOp"], [90, 1, 1, "", "BaseScalarField"], [90, 1, 1, "", "BaseVectorField"], [90, 1, 1, "", "Commutator"], [90, 1, 1, "", "CoordSystem"], [90, 1, 1, "", "CoordinateSymbol"], [90, 1, 1, "", "CovarDerivativeOp"], [90, 1, 1, "", "Differential"], [90, 1, 1, "", "LieDerivative"], [90, 1, 1, "", "Manifold"], [90, 1, 1, "", "Patch"], [90, 1, 1, "", "Point"], [90, 1, 1, "", "TensorProduct"], [90, 1, 1, "", "WedgeProduct"], [90, 4, 1, "", "intcurve_diffequ"], [90, 4, 1, "", "intcurve_series"], [90, 4, 1, "", "metric_to_Christoffel_1st"], [90, 4, 1, "", "metric_to_Christoffel_2nd"], [90, 4, 1, "", "metric_to_Ricci_components"], [90, 4, 1, "", "metric_to_Riemann_components"], [90, 4, 1, "", "twoform_to_matrix"], [90, 4, 1, "", "vectors_in_basis"]], "sympy.diffgeom.CoordSystem": [[90, 2, 1, "", "base_oneform"], [90, 2, 1, "", "base_oneforms"], [90, 2, 1, "", "base_scalar"], [90, 2, 1, "", "base_scalars"], [90, 2, 1, "", "base_vector"], [90, 2, 1, "", "base_vectors"], [90, 2, 1, "", "coord_function"], [90, 2, 1, "", "coord_functions"], [90, 2, 1, "", "coord_tuple_transform_to"], [90, 2, 1, "", "jacobian"], [90, 2, 1, "", "jacobian_determinant"], [90, 2, 1, "", "jacobian_matrix"], [90, 2, 1, "", "point"], [90, 2, 1, "", "point_to_coords"], [90, 2, 1, "", "transform"], [90, 2, 1, "", "transformation"]], "sympy.diffgeom.Point": [[90, 2, 1, "", "coords"]], "sympy.discrete": [[91, 0, 0, "-", "convolutions"], [91, 0, 0, "-", "transforms"]], "sympy.discrete.convolutions": [[91, 4, 1, "", "convolution"], [91, 4, 1, "", "convolution_fft"], [91, 4, 1, "", "convolution_fwht"], [91, 4, 1, "", "convolution_ntt"], [91, 4, 1, "", "convolution_subset"], [91, 4, 1, "", "covering_product"], [91, 4, 1, "", "intersecting_product"]], "sympy.discrete.transforms": [[91, 4, 1, "", "fft"], [91, 4, 1, "", "fwht"], [91, 4, 1, "", "ifft"], [91, 4, 1, "", "ifwht"], [91, 4, 1, "", "intt"], [91, 4, 1, "", "inverse_mobius_transform"], [91, 4, 1, "", "mobius_transform"], [91, 4, 1, "", "ntt"]], "sympy.external.pythonmpq": [[212, 1, 1, "", "PythonMPQ"]], "sympy.functions.combinatorial.factorials": [[93, 1, 1, "", "FallingFactorial"], [93, 1, 1, "", "MultiFactorial"], [93, 1, 1, "", "RisingFactorial"], [93, 1, 1, "", "binomial"], [93, 1, 1, "", "factorial"], [93, 1, 1, "", "factorial2"], [93, 1, 1, "", "subfactorial"]], "sympy.functions.combinatorial.numbers": [[93, 1, 1, "", "andre"], [93, 1, 1, "", "bell"], [93, 1, 1, "", "bernoulli"], [93, 1, 1, "", "catalan"], [93, 1, 1, "", "divisor_sigma"], [93, 1, 1, "", "euler"], [93, 1, 1, "", "fibonacci"], [93, 1, 1, "", "genocchi"], [93, 1, 1, "", "harmonic"], [93, 1, 1, "", "jacobi_symbol"], [93, 1, 1, "", "kronecker_symbol"], [93, 1, 1, "", "legendre_symbol"], [93, 1, 1, "", "lucas"], [93, 1, 1, "", "mobius"], [93, 4, 1, "", "nC"], [93, 4, 1, "", "nP"], [93, 4, 1, "", "nT"], [93, 1, 1, "", "partition"], [93, 1, 1, "", "primenu"], [93, 1, 1, "", "primeomega"], [93, 1, 1, "", "primepi"], [93, 1, 1, "", "reduced_totient"], [93, 4, 1, "", "stirling"], [93, 1, 1, "", "totient"], [93, 1, 1, "", "tribonacci"], [93, 1, 1, "", "udivisor_sigma"]], "sympy.functions.elementary.complexes": [[94, 1, 1, "", "Abs"], [94, 1, 1, "", "arg"], [94, 1, 1, "", "conjugate"], [94, 1, 1, "", "im"], [94, 1, 1, "", "periodic_argument"], [94, 1, 1, "", "polar_lift"], [94, 1, 1, "", "principal_branch"], [94, 1, 1, "", "re"], [94, 1, 1, "", "sign"]], "sympy.functions.elementary.complexes.Abs": [[94, 2, 1, "", "fdiff"]], "sympy.functions.elementary.complexes.im": [[94, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.complexes.re": [[94, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.exponential": [[94, 1, 1, "", "LambertW"], [94, 1, 1, "", "exp"], [94, 1, 1, "", "exp_polar"], [94, 1, 1, "", "log"]], "sympy.functions.elementary.exponential.LambertW": [[94, 2, 1, "", "fdiff"]], "sympy.functions.elementary.exponential.exp": [[94, 2, 1, "", "as_real_imag"], [94, 3, 1, "", "base"], [94, 2, 1, "", "fdiff"], [94, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.exponential.log": [[94, 2, 1, "", "as_real_imag"], [94, 2, 1, "", "fdiff"], [94, 2, 1, "", "inverse"], [94, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic": [[94, 1, 1, "", "HyperbolicFunction"], [94, 1, 1, "", "acosh"], [94, 1, 1, "", "acoth"], [94, 1, 1, "", "acsch"], [94, 1, 1, "", "asech"], [94, 1, 1, "", "asinh"], [94, 1, 1, "", "atanh"], [94, 1, 1, "", "cosh"], [94, 1, 1, "", "coth"], [94, 1, 1, "", "csch"], [94, 1, 1, "", "sech"], [94, 1, 1, "", "sinh"], [94, 1, 1, "", "tanh"]], "sympy.functions.elementary.hyperbolic.acosh": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acoth": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acsch": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asech": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asinh": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.atanh": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.coth": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.csch": [[94, 2, 1, "", "fdiff"], [94, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.sinh": [[94, 2, 1, "", "as_real_imag"], [94, 2, 1, "", "fdiff"], [94, 2, 1, "", "inverse"], [94, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.tanh": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.integers": [[94, 1, 1, "", "RoundFunction"], [94, 1, 1, "", "ceiling"], [94, 1, 1, "", "floor"], [94, 1, 1, "", "frac"]], "sympy.functions.elementary.miscellaneous": [[94, 1, 1, "", "IdentityFunction"], [94, 1, 1, "", "Max"], [94, 1, 1, "", "Min"], [94, 4, 1, "", "cbrt"], [94, 4, 1, "", "real_root"], [94, 4, 1, "", "root"], [94, 4, 1, "", "sqrt"]], "sympy.functions.elementary.piecewise": [[94, 1, 1, "", "ExprCondPair"], [94, 1, 1, "", "Piecewise"], [94, 4, 1, "", "piecewise_exclusive"], [94, 4, 1, "", "piecewise_fold"]], "sympy.functions.elementary.piecewise.ExprCondPair": [[94, 3, 1, "", "cond"], [94, 3, 1, "", "expr"]], "sympy.functions.elementary.piecewise.Piecewise": [[94, 2, 1, "", "_eval_integral"], [94, 2, 1, "", "as_expr_set_pairs"], [94, 2, 1, "", "doit"], [94, 2, 1, "", "eval"], [94, 2, 1, "", "piecewise_integrate"]], "sympy.functions.elementary.trigonometric": [[94, 1, 1, "", "acos"], [94, 1, 1, "", "acot"], [94, 1, 1, "", "acsc"], [94, 1, 1, "", "asec"], [94, 1, 1, "", "asin"], [94, 1, 1, "", "atan"], [94, 1, 1, "", "atan2"], [94, 1, 1, "", "cos"], [94, 1, 1, "", "cot"], [94, 1, 1, "", "csc"], [94, 1, 1, "", "sec"], [94, 1, 1, "", "sin"], [94, 1, 1, "", "sinc"], [94, 1, 1, "", "tan"]], "sympy.functions.elementary.trigonometric.acos": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acot": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acsc": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asec": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asin": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.atan": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.cot": [[94, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.tan": [[94, 2, 1, "", "inverse"]], "sympy.functions.special": [[96, 0, 0, "-", "bessel"], [96, 0, 0, "-", "beta_functions"], [96, 0, 0, "-", "elliptic_integrals"], [96, 0, 0, "-", "error_functions"], [96, 0, 0, "-", "gamma_functions"], [96, 0, 0, "-", "mathieu_functions"], [96, 0, 0, "-", "polynomials"], [96, 0, 0, "-", "singularity_functions"], [96, 0, 0, "-", "zeta_functions"]], "sympy.functions.special.bessel": [[96, 1, 1, "", "AiryBase"], [96, 1, 1, "", "BesselBase"], [96, 1, 1, "", "airyai"], [96, 1, 1, "", "airyaiprime"], [96, 1, 1, "", "airybi"], [96, 1, 1, "", "airybiprime"], [96, 1, 1, "", "besseli"], [96, 1, 1, "", "besselj"], [96, 1, 1, "", "besselk"], [96, 1, 1, "", "bessely"], [96, 1, 1, "", "hankel1"], [96, 1, 1, "", "hankel2"], [96, 1, 1, "", "jn"], [96, 4, 1, "", "jn_zeros"], [96, 1, 1, "", "marcumq"], [96, 1, 1, "", "yn"]], "sympy.functions.special.bessel.BesselBase": [[96, 3, 1, "", "argument"], [96, 3, 1, "", "order"]], "sympy.functions.special.beta_functions": [[96, 1, 1, "", "beta"]], "sympy.functions.special.bsplines": [[96, 4, 1, "", "bspline_basis"], [96, 4, 1, "", "bspline_basis_set"], [96, 4, 1, "", "interpolating_spline"]], "sympy.functions.special.delta_functions": [[96, 1, 1, "", "DiracDelta"], [96, 1, 1, "", "Heaviside"]], "sympy.functions.special.delta_functions.DiracDelta": [[96, 2, 1, "", "eval"], [96, 2, 1, "", "fdiff"], [96, 2, 1, "", "is_simple"]], "sympy.functions.special.delta_functions.Heaviside": [[96, 2, 1, "", "eval"], [96, 2, 1, "", "fdiff"], [96, 3, 1, "", "pargs"]], "sympy.functions.special.elliptic_integrals": [[96, 1, 1, "", "elliptic_e"], [96, 1, 1, "", "elliptic_f"], [96, 1, 1, "", "elliptic_k"], [96, 1, 1, "", "elliptic_pi"]], "sympy.functions.special.error_functions": [[96, 1, 1, "", "Chi"], [96, 1, 1, "", "Ci"], [96, 4, 1, "", "E1"], [96, 1, 1, "", "Ei"], [96, 1, 1, "", "FresnelIntegral"], [96, 1, 1, "", "Li"], [96, 1, 1, "", "Shi"], [96, 1, 1, "", "Si"], [96, 1, 1, "", "erf"], [96, 1, 1, "", "erf2"], [96, 1, 1, "", "erf2inv"], [96, 1, 1, "", "erfc"], [96, 1, 1, "", "erfcinv"], [96, 1, 1, "", "erfi"], [96, 1, 1, "", "erfinv"], [96, 1, 1, "", "expint"], [96, 1, 1, "", "fresnelc"], [96, 1, 1, "", "fresnels"], [96, 1, 1, "", "li"]], "sympy.functions.special.error_functions.erf": [[96, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfc": [[96, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfcinv": [[96, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfinv": [[96, 2, 1, "", "inverse"]], "sympy.functions.special.gamma_functions": [[96, 1, 1, "", "digamma"], [96, 1, 1, "", "gamma"], [96, 1, 1, "", "loggamma"], [96, 1, 1, "", "lowergamma"], [96, 1, 1, "", "multigamma"], [96, 1, 1, "", "polygamma"], [96, 1, 1, "", "trigamma"], [96, 1, 1, "", "uppergamma"]], "sympy.functions.special.hyper": [[96, 1, 1, "", "appellf1"], [96, 1, 1, "", "hyper"], [96, 1, 1, "", "meijerg"]], "sympy.functions.special.hyper.hyper": [[96, 3, 1, "", "ap"], [96, 3, 1, "", "argument"], [96, 3, 1, "", "bq"], [96, 3, 1, "", "convergence_statement"], [96, 3, 1, "", "eta"], [96, 3, 1, "", "radius_of_convergence"]], "sympy.functions.special.hyper.meijerg": [[96, 3, 1, "", "an"], [96, 3, 1, "", "aother"], [96, 3, 1, "", "ap"], [96, 3, 1, "", "argument"], [96, 3, 1, "", "bm"], [96, 3, 1, "", "bother"], [96, 3, 1, "", "bq"], [96, 3, 1, "", "delta"], [96, 2, 1, "", "get_period"], [96, 2, 1, "", "integrand"], [96, 3, 1, "", "is_number"], [96, 3, 1, "", "nu"]], "sympy.functions.special.mathieu_functions": [[96, 1, 1, "", "MathieuBase"], [96, 1, 1, "", "mathieuc"], [96, 1, 1, "", "mathieucprime"], [96, 1, 1, "", "mathieus"], [96, 1, 1, "", "mathieusprime"]], "sympy.functions.special.polynomials": [[96, 1, 1, "", "assoc_laguerre"], [96, 1, 1, "", "assoc_legendre"], [96, 1, 1, "", "chebyshevt"], [96, 1, 1, "", "chebyshevt_root"], [96, 1, 1, "", "chebyshevu"], [96, 1, 1, "", "chebyshevu_root"], [96, 1, 1, "", "gegenbauer"], [96, 1, 1, "", "hermite"], [96, 1, 1, "", "hermite_prob"], [96, 1, 1, "", "jacobi"], [96, 4, 1, "", "jacobi_normalized"], [96, 1, 1, "", "laguerre"], [96, 1, 1, "", "legendre"]], "sympy.functions.special.singularity_functions": [[96, 1, 1, "", "SingularityFunction"]], "sympy.functions.special.singularity_functions.SingularityFunction": [[96, 2, 1, "", "eval"], [96, 2, 1, "", "fdiff"]], "sympy.functions.special.spherical_harmonics": [[96, 1, 1, "", "Ynm"], [96, 4, 1, "", "Ynm_c"], [96, 1, 1, "", "Znm"]], "sympy.functions.special.tensor_functions": [[96, 4, 1, "", "Eijk"], [96, 1, 1, "", "KroneckerDelta"], [96, 1, 1, "", "LeviCivita"], [96, 4, 1, "", "eval_levicivita"]], "sympy.functions.special.tensor_functions.KroneckerDelta": [[96, 2, 1, "", "eval"], [96, 3, 1, "", "indices_contain_equal_information"], [96, 3, 1, "", "is_above_fermi"], [96, 3, 1, "", "is_below_fermi"], [96, 3, 1, "", "is_only_above_fermi"], [96, 3, 1, "", "is_only_below_fermi"], [96, 3, 1, "", "killable_index"], [96, 3, 1, "", "preferred_index"]], "sympy.functions.special.zeta_functions": [[96, 1, 1, "", "dirichlet_eta"], [96, 1, 1, "", "lerchphi"], [96, 1, 1, "", "polylog"], [96, 1, 1, "", "stieltjes"], [96, 1, 1, "", "zeta"]], "sympy.geometry": [[97, 0, 0, "-", "curve"], [98, 0, 0, "-", "ellipse"], [99, 0, 0, "-", "entity"], [101, 0, 0, "-", "line"], [102, 0, 0, "-", "plane"], [103, 0, 0, "-", "point"], [104, 0, 0, "-", "polygon"], [105, 0, 0, "-", "util"]], "sympy.geometry.curve": [[97, 1, 1, "", "Curve"]], "sympy.geometry.curve.Curve": [[97, 3, 1, "", "ambient_dimension"], [97, 2, 1, "", "arbitrary_point"], [97, 3, 1, "", "free_symbols"], [97, 3, 1, "", "functions"], [97, 3, 1, "", "length"], [97, 3, 1, "", "limits"], [97, 3, 1, "", "parameter"], [97, 2, 1, "", "plot_interval"], [97, 2, 1, "", "rotate"], [97, 2, 1, "", "scale"], [97, 2, 1, "", "translate"]], "sympy.geometry.ellipse": [[98, 1, 1, "", "Circle"], [98, 1, 1, "", "Ellipse"]], "sympy.geometry.ellipse.Circle": [[98, 3, 1, "", "circumference"], [98, 2, 1, "", "equation"], [98, 2, 1, "", "intersection"], [98, 3, 1, "", "radius"], [98, 2, 1, "", "reflect"], [98, 2, 1, "", "scale"], [98, 3, 1, "", "vradius"]], "sympy.geometry.ellipse.Ellipse": [[98, 3, 1, "", "apoapsis"], [98, 2, 1, "", "arbitrary_point"], [98, 3, 1, "", "area"], [98, 2, 1, "", "auxiliary_circle"], [98, 3, 1, "", "bounds"], [98, 3, 1, "", "center"], [98, 3, 1, "", "circumference"], [98, 2, 1, "", "director_circle"], [98, 3, 1, "", "eccentricity"], [98, 2, 1, "", "encloses_point"], [98, 2, 1, "", "equation"], [98, 2, 1, "", "evolute"], [98, 3, 1, "", "foci"], [98, 3, 1, "", "focus_distance"], [98, 3, 1, "", "hradius"], [98, 2, 1, "", "intersection"], [98, 2, 1, "", "is_tangent"], [98, 3, 1, "", "major"], [98, 3, 1, "", "minor"], [98, 2, 1, "", "normal_lines"], [98, 3, 1, "", "periapsis"], [98, 2, 1, "", "plot_interval"], [98, 2, 1, "", "polar_second_moment_of_area"], [98, 2, 1, "", "random_point"], [98, 2, 1, "", "reflect"], [98, 2, 1, "", "rotate"], [98, 2, 1, "", "scale"], [98, 2, 1, "", "second_moment_of_area"], [98, 2, 1, "", "section_modulus"], [98, 3, 1, "", "semilatus_rectum"], [98, 2, 1, "", "tangent_lines"], [98, 3, 1, "", "vradius"]], "sympy.geometry.entity": [[99, 1, 1, "", "GeometryEntity"]], "sympy.geometry.entity.GeometryEntity": [[99, 3, 1, "", "ambient_dimension"], [99, 3, 1, "", "bounds"], [99, 2, 1, "", "encloses"], [99, 2, 1, "", "intersection"], [99, 2, 1, "", "is_similar"], [99, 2, 1, "", "parameter_value"], [99, 2, 1, "", "reflect"], [99, 2, 1, "", "rotate"], [99, 2, 1, "", "scale"], [99, 2, 1, "", "translate"]], "sympy.geometry.line": [[101, 1, 1, "", "Line"], [101, 1, 1, "", "Line2D"], [101, 1, 1, "", "Line3D"], [101, 1, 1, "", "LinearEntity"], [101, 1, 1, "", "LinearEntity2D"], [101, 1, 1, "", "LinearEntity3D"], [101, 1, 1, "", "Ray"], [101, 1, 1, "", "Ray2D"], [101, 1, 1, "", "Ray3D"], [101, 1, 1, "", "Segment"], [101, 1, 1, "", "Segment2D"], [101, 1, 1, "", "Segment3D"]], "sympy.geometry.line.Line": [[101, 2, 1, "", "contains"], [101, 2, 1, "", "distance"], [101, 2, 1, "", "equals"], [101, 2, 1, "", "plot_interval"]], "sympy.geometry.line.Line2D": [[101, 3, 1, "", "coefficients"], [101, 2, 1, "", "equation"]], "sympy.geometry.line.Line3D": [[101, 2, 1, "", "distance"], [101, 2, 1, "", "equation"]], "sympy.geometry.line.LinearEntity": [[101, 3, 1, "", "ambient_dimension"], [101, 2, 1, "", "angle_between"], [101, 2, 1, "", "arbitrary_point"], [101, 2, 1, "", "are_concurrent"], [101, 2, 1, "", "bisectors"], [101, 2, 1, "", "contains"], [101, 3, 1, "", "direction"], [101, 2, 1, "", "intersection"], [101, 2, 1, "", "is_parallel"], [101, 2, 1, "", "is_perpendicular"], [101, 2, 1, "", "is_similar"], [101, 3, 1, "", "length"], [101, 3, 1, "", "p1"], [101, 3, 1, "", "p2"], [101, 2, 1, "", "parallel_line"], [101, 2, 1, "", "perpendicular_line"], [101, 2, 1, "", "perpendicular_segment"], [101, 3, 1, "", "points"], [101, 2, 1, "", "projection"], [101, 2, 1, "", "random_point"], [101, 2, 1, "", "smallest_angle_between"]], "sympy.geometry.line.LinearEntity2D": [[101, 3, 1, "", "bounds"], [101, 2, 1, "", "perpendicular_line"], [101, 3, 1, "", "slope"]], "sympy.geometry.line.LinearEntity3D": [[101, 3, 1, "", "direction_cosine"], [101, 3, 1, "", "direction_ratio"]], "sympy.geometry.line.Ray": [[101, 2, 1, "", "contains"], [101, 2, 1, "", "distance"], [101, 2, 1, "", "equals"], [101, 2, 1, "", "plot_interval"], [101, 3, 1, "", "source"]], "sympy.geometry.line.Ray2D": [[101, 2, 1, "", "closing_angle"], [101, 3, 1, "", "xdirection"], [101, 3, 1, "", "ydirection"]], "sympy.geometry.line.Ray3D": [[101, 3, 1, "", "xdirection"], [101, 3, 1, "", "ydirection"], [101, 3, 1, "", "zdirection"]], "sympy.geometry.line.Segment": [[101, 2, 1, "", "contains"], [101, 2, 1, "", "distance"], [101, 2, 1, "", "equals"], [101, 3, 1, "", "length"], [101, 3, 1, "", "midpoint"], [101, 2, 1, "", "perpendicular_bisector"], [101, 2, 1, "", "plot_interval"]], "sympy.geometry.plane": [[102, 1, 1, "", "Plane"]], "sympy.geometry.plane.Plane": [[102, 2, 1, "", "angle_between"], [102, 2, 1, "", "arbitrary_point"], [102, 2, 1, "", "are_concurrent"], [102, 2, 1, "", "distance"], [102, 2, 1, "", "equals"], [102, 2, 1, "", "equation"], [102, 2, 1, "", "intersection"], [102, 2, 1, "", "is_coplanar"], [102, 2, 1, "", "is_parallel"], [102, 2, 1, "", "is_perpendicular"], [102, 3, 1, "", "normal_vector"], [102, 3, 1, "", "p1"], [102, 2, 1, "", "parallel_plane"], [102, 2, 1, "", "parameter_value"], [102, 2, 1, "", "perpendicular_line"], [102, 2, 1, "", "perpendicular_plane"], [102, 2, 1, "", "projection"], [102, 2, 1, "", "projection_line"], [102, 2, 1, "", "random_point"]], "sympy.geometry.point": [[103, 1, 1, "", "Point"], [103, 1, 1, "", "Point2D"], [103, 1, 1, "", "Point3D"]], "sympy.geometry.point.Point": [[103, 2, 1, "", "affine_rank"], [103, 3, 1, "", "ambient_dimension"], [103, 2, 1, "", "are_coplanar"], [103, 2, 1, "", "canberra_distance"], [103, 2, 1, "", "distance"], [103, 2, 1, "", "dot"], [103, 2, 1, "", "equals"], [103, 2, 1, "", "intersection"], [103, 2, 1, "", "is_collinear"], [103, 2, 1, "", "is_concyclic"], [103, 3, 1, "", "is_nonzero"], [103, 2, 1, "", "is_scalar_multiple"], [103, 3, 1, "", "is_zero"], [103, 3, 1, "", "length"], [103, 2, 1, "", "midpoint"], [103, 3, 1, "", "origin"], [103, 3, 1, "", "orthogonal_direction"], [103, 2, 1, "", "project"], [103, 2, 1, "", "taxicab_distance"], [103, 3, 1, "", "unit"]], "sympy.geometry.point.Point2D": [[103, 3, 1, "", "bounds"], [103, 3, 1, "", "coordinates"], [103, 2, 1, "", "rotate"], [103, 2, 1, "", "scale"], [103, 2, 1, "", "transform"], [103, 2, 1, "", "translate"], [103, 3, 1, "", "x"], [103, 3, 1, "", "y"]], "sympy.geometry.point.Point3D": [[103, 2, 1, "", "are_collinear"], [103, 3, 1, "", "coordinates"], [103, 2, 1, "", "direction_cosine"], [103, 2, 1, "", "direction_ratio"], [103, 2, 1, "", "intersection"], [103, 2, 1, "", "scale"], [103, 2, 1, "", "transform"], [103, 2, 1, "", "translate"], [103, 3, 1, "", "x"], [103, 3, 1, "", "y"], [103, 3, 1, "", "z"]], "sympy.geometry.polygon": [[104, 1, 1, "", "Polygon"], [104, 1, 1, "", "RegularPolygon"], [104, 1, 1, "", "Triangle"]], "sympy.geometry.polygon.Polygon": [[104, 3, 1, "", "angles"], [104, 2, 1, "", "arbitrary_point"], [104, 3, 1, "", "area"], [104, 2, 1, "", "bisectors"], [104, 3, 1, "", "bounds"], [104, 3, 1, "", "centroid"], [104, 2, 1, "", "cut_section"], [104, 2, 1, "", "distance"], [104, 2, 1, "", "encloses_point"], [104, 2, 1, "", "first_moment_of_area"], [104, 2, 1, "", "intersection"], [104, 2, 1, "", "is_convex"], [104, 3, 1, "", "perimeter"], [104, 2, 1, "", "plot_interval"], [104, 2, 1, "", "polar_second_moment_of_area"], [104, 2, 1, "", "second_moment_of_area"], [104, 2, 1, "", "section_modulus"], [104, 3, 1, "", "sides"], [104, 3, 1, "", "vertices"]], "sympy.geometry.polygon.RegularPolygon": [[104, 3, 1, "", "angles"], [104, 3, 1, "", "apothem"], [104, 3, 1, "", "area"], [104, 3, 1, "", "args"], [104, 3, 1, "", "center"], [104, 3, 1, "", "centroid"], [104, 3, 1, "", "circumcenter"], [104, 3, 1, "", "circumcircle"], [104, 3, 1, "", "circumradius"], [104, 2, 1, "", "encloses_point"], [104, 3, 1, "", "exterior_angle"], [104, 3, 1, "", "incircle"], [104, 3, 1, "", "inradius"], [104, 3, 1, "", "interior_angle"], [104, 3, 1, "", "length"], [104, 3, 1, "", "radius"], [104, 2, 1, "", "reflect"], [104, 2, 1, "", "rotate"], [104, 3, 1, "", "rotation"], [104, 2, 1, "", "scale"], [104, 2, 1, "", "spin"], [104, 3, 1, "", "vertices"]], "sympy.geometry.polygon.Triangle": [[104, 3, 1, "", "altitudes"], [104, 2, 1, "", "bisectors"], [104, 3, 1, "", "circumcenter"], [104, 3, 1, "", "circumcircle"], [104, 3, 1, "", "circumradius"], [104, 3, 1, "", "eulerline"], [104, 3, 1, "", "excenters"], [104, 3, 1, "", "exradii"], [104, 3, 1, "", "incenter"], [104, 3, 1, "", "incircle"], [104, 3, 1, "", "inradius"], [104, 2, 1, "", "is_equilateral"], [104, 2, 1, "", "is_isosceles"], [104, 2, 1, "", "is_right"], [104, 2, 1, "", "is_scalene"], [104, 2, 1, "", "is_similar"], [104, 3, 1, "", "medial"], [104, 3, 1, "", "medians"], [104, 3, 1, "", "nine_point_circle"], [104, 3, 1, "", "orthocenter"], [104, 3, 1, "", "vertices"]], "sympy.geometry.util": [[105, 4, 1, "", "are_similar"], [105, 4, 1, "", "centroid"], [105, 4, 1, "", "convex_hull"], [105, 4, 1, "", "idiff"], [105, 4, 1, "", "intersection"]], "sympy.holonomic.holonomic": [[111, 1, 1, "", "DifferentialOperator"], [111, 1, 1, "", "DifferentialOperatorAlgebra"], [111, 4, 1, "", "DifferentialOperators"], [111, 1, 1, "", "HolonomicFunction"], [109, 4, 1, "", "_convert_poly_rat_alg"], [109, 4, 1, "", "_create_table"], [107, 4, 1, "", "expr_to_holonomic"], [107, 4, 1, "", "from_hyper"], [107, 4, 1, "", "from_meijerg"]], "sympy.holonomic.holonomic.DifferentialOperator": [[111, 2, 1, "", "is_singular"]], "sympy.holonomic.holonomic.HolonomicFunction": [[110, 2, 1, "", "composition"], [110, 2, 1, "", "diff"], [110, 2, 1, "", "evalf"], [110, 2, 1, "", "integrate"], [110, 2, 1, "", "series"], [110, 2, 1, "", "to_expr"], [110, 2, 1, "", "to_hyper"], [110, 2, 1, "", "to_meijerg"], [110, 2, 1, "", "to_sequence"]], "sympy.integrals": [[115, 0, 0, "-", "intpoly"], [113, 0, 0, "-", "meijerint"], [113, 0, 0, "-", "meijerint_doc"], [115, 0, 0, "-", "transforms"]], "sympy.integrals.deltafunctions": [[115, 4, 1, "", "deltaintegrate"]], "sympy.integrals.heurisch": [[115, 4, 1, "", "components"], [115, 4, 1, "", "heurisch"]], "sympy.integrals.integrals": [[115, 1, 1, "", "Integral"], [115, 4, 1, "", "integrate"], [115, 4, 1, "", "line_integrate"]], "sympy.integrals.integrals.Integral": [[115, 2, 1, "", "as_sum"], [115, 2, 1, "", "doit"], [115, 3, 1, "", "free_symbols"], [115, 6, 1, "", "is_commutative"], [115, 2, 1, "", "principal_value"], [115, 2, 1, "", "transform"]], "sympy.integrals.intpoly": [[115, 4, 1, "", "polytope_integrate"]], "sympy.integrals.manualintegrate": [[115, 4, 1, "", "integral_steps"], [115, 4, 1, "", "manualintegrate"]], "sympy.integrals.meijerint": [[113, 7, 1, "", "_CoeffExpValueError"], [113, 4, 1, "", "_check_antecedents"], [113, 4, 1, "", "_check_antecedents_1"], [113, 4, 1, "", "_check_antecedents_inversion"], [113, 4, 1, "", "_condsimp"], [113, 4, 1, "", "_create_lookup_table"], [113, 4, 1, "", "_dummy"], [113, 4, 1, "", "_dummy_"], [113, 4, 1, "", "_eval_cond"], [113, 4, 1, "", "_exponents"], [113, 4, 1, "", "_find_splitting_points"], [113, 4, 1, "", "_flip_g"], [113, 4, 1, "", "_functions"], [113, 4, 1, "", "_get_coeff_exp"], [113, 4, 1, "", "_guess_expansion"], [113, 4, 1, "", "_inflate_fox_h"], [113, 4, 1, "", "_inflate_g"], [113, 4, 1, "", "_int0oo"], [113, 4, 1, "", "_int0oo_1"], [113, 4, 1, "", "_int_inversion"], [113, 4, 1, "", "_is_analytic"], [113, 4, 1, "", "_meijerint_definite_2"], [113, 4, 1, "", "_meijerint_definite_3"], [113, 4, 1, "", "_meijerint_definite_4"], [113, 4, 1, "", "_meijerint_indefinite_1"], [113, 4, 1, "", "_mul_args"], [113, 4, 1, "", "_mul_as_two_parts"], [113, 4, 1, "", "_my_principal_branch"], [113, 4, 1, "", "_mytype"], [113, 4, 1, "", "_rewrite1"], [113, 4, 1, "", "_rewrite2"], [113, 4, 1, "", "_rewrite_inversion"], [113, 4, 1, "", "_rewrite_saxena"], [113, 4, 1, "", "_rewrite_saxena_1"], [113, 4, 1, "", "_rewrite_single"], [113, 4, 1, "", "_split_mul"], [113, 4, 1, "", "meijerint_definite"], [113, 4, 1, "", "meijerint_indefinite"], [113, 4, 1, "", "meijerint_inversion"]], "sympy.integrals.quadrature": [[115, 4, 1, "", "gauss_chebyshev_t"], [115, 4, 1, "", "gauss_chebyshev_u"], [115, 4, 1, "", "gauss_gen_laguerre"], [115, 4, 1, "", "gauss_hermite"], [115, 4, 1, "", "gauss_jacobi"], [115, 4, 1, "", "gauss_laguerre"], [115, 4, 1, "", "gauss_legendre"], [115, 4, 1, "", "gauss_lobatto"]], "sympy.integrals.rationaltools": [[115, 4, 1, "", "ratint"], [115, 4, 1, "", "ratint_logpart"], [115, 4, 1, "", "ratint_ratpart"]], "sympy.integrals.risch": [[115, 1, 1, "", "NonElementaryIntegral"], [115, 4, 1, "", "risch_integrate"]], "sympy.integrals.singularityfunctions": [[115, 4, 1, "", "singularityintegrate"]], "sympy.integrals.transforms": [[115, 1, 1, "", "CosineTransform"], [115, 1, 1, "", "FourierTransform"], [115, 1, 1, "", "HankelTransform"], [115, 1, 1, "", "IntegralTransform"], [115, 7, 1, "", "IntegralTransformError"], [115, 1, 1, "", "InverseCosineTransform"], [115, 1, 1, "", "InverseFourierTransform"], [115, 1, 1, "", "InverseHankelTransform"], [115, 1, 1, "", "InverseLaplaceTransform"], [115, 1, 1, "", "InverseMellinTransform"], [115, 1, 1, "", "InverseSineTransform"], [115, 1, 1, "", "LaplaceTransform"], [115, 1, 1, "", "MellinTransform"], [115, 1, 1, "", "SineTransform"], [115, 4, 1, "", "_fourier_transform"], [115, 4, 1, "", "cosine_transform"], [115, 4, 1, "", "fourier_transform"], [115, 4, 1, "", "hankel_transform"], [115, 4, 1, "", "inverse_cosine_transform"], [115, 4, 1, "", "inverse_fourier_transform"], [115, 4, 1, "", "inverse_hankel_transform"], [115, 4, 1, "", "inverse_laplace_transform"], [115, 4, 1, "", "inverse_mellin_transform"], [115, 4, 1, "", "inverse_sine_transform"], [115, 4, 1, "", "laplace_correspondence"], [115, 4, 1, "", "laplace_initial_conds"], [115, 4, 1, "", "laplace_transform"], [115, 4, 1, "", "mellin_transform"], [115, 4, 1, "", "sine_transform"]], "sympy.integrals.transforms.IntegralTransform": [[115, 2, 1, "", "doit"], [115, 3, 1, "", "function"], [115, 3, 1, "", "function_variable"], [115, 3, 1, "", "transform_variable"]], "sympy.integrals.transforms.InverseLaplaceTransform": [[115, 2, 1, "", "doit"]], "sympy.integrals.transforms.LaplaceTransform": [[115, 2, 1, "", "doit"]], "sympy.integrals.trigonometry": [[115, 4, 1, "", "trigintegrate"]], "sympy.interactive": [[116, 0, 0, "-", "printing"], [116, 0, 0, "-", "session"]], "sympy.interactive.printing": [[116, 4, 1, "", "init_printing"]], "sympy.interactive.session": [[116, 4, 1, "", "enable_automatic_int_sympification"], [116, 4, 1, "", "enable_automatic_symbols"], [116, 4, 1, "", "init_ipython_session"], [116, 4, 1, "", "init_python_session"], [116, 4, 1, "", "init_session"], [116, 4, 1, "", "int_to_Integer"]], "sympy.liealgebras.cartan_matrix": [[117, 4, 1, "", "CartanMatrix"]], "sympy.liealgebras.cartan_type": [[117, 1, 1, "", "CartanType_generator"], [117, 1, 1, "", "Standard_Cartan"]], "sympy.liealgebras.cartan_type.Standard_Cartan": [[117, 2, 1, "", "rank"], [117, 2, 1, "", "series"]], "sympy.liealgebras.dynkin_diagram": [[117, 4, 1, "", "DynkinDiagram"]], "sympy.liealgebras.root_system": [[117, 1, 1, "", "RootSystem"]], "sympy.liealgebras.root_system.RootSystem": [[117, 2, 1, "", "add_as_roots"], [117, 2, 1, "", "add_simple_roots"], [117, 2, 1, "", "all_roots"], [117, 2, 1, "", "cartan_matrix"], [117, 2, 1, "", "dynkin_diagram"], [117, 2, 1, "", "root_space"], [117, 2, 1, "", "simple_roots"]], "sympy.liealgebras.type_a": [[117, 1, 1, "", "TypeA"]], "sympy.liealgebras.type_a.TypeA": [[117, 2, 1, "", "basic_root"], [117, 2, 1, "", "basis"], [117, 2, 1, "", "cartan_matrix"], [117, 2, 1, "", "dimension"], [117, 2, 1, "", "highest_root"], [117, 2, 1, "", "lie_algebra"], [117, 2, 1, "", "positive_roots"], [117, 2, 1, "", "roots"], [117, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_b": [[117, 1, 1, "", "TypeB"]], "sympy.liealgebras.type_b.TypeB": [[117, 2, 1, "", "basic_root"], [117, 2, 1, "", "basis"], [117, 2, 1, "", "cartan_matrix"], [117, 2, 1, "", "dimension"], [117, 2, 1, "", "lie_algebra"], [117, 2, 1, "", "positive_roots"], [117, 2, 1, "", "roots"], [117, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_c": [[117, 1, 1, "", "TypeC"]], "sympy.liealgebras.type_c.TypeC": [[117, 2, 1, "", "basic_root"], [117, 2, 1, "", "basis"], [117, 2, 1, "", "cartan_matrix"], [117, 2, 1, "", "dimension"], [117, 2, 1, "", "lie_algebra"], [117, 2, 1, "", "positive_roots"], [117, 2, 1, "", "roots"], [117, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_d": [[117, 1, 1, "", "TypeD"]], "sympy.liealgebras.type_d.TypeD": [[117, 2, 1, "", "basic_root"], [117, 2, 1, "", "basis"], [117, 2, 1, "", "cartan_matrix"], [117, 2, 1, "", "dimension"], [117, 2, 1, "", "lie_algebra"], [117, 2, 1, "", "positive_roots"], [117, 2, 1, "", "roots"], [117, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_e": [[117, 1, 1, "", "TypeE"]], "sympy.liealgebras.type_e.TypeE": [[117, 2, 1, "", "basic_root"], [117, 2, 1, "", "basis"], [117, 2, 1, "", "cartan_matrix"], [117, 2, 1, "", "dimension"], [117, 2, 1, "", "positive_roots"], [117, 2, 1, "", "roots"], [117, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_f": [[117, 1, 1, "", "TypeF"]], "sympy.liealgebras.type_f.TypeF": [[117, 2, 1, "", "basic_root"], [117, 2, 1, "", "basis"], [117, 2, 1, "", "cartan_matrix"], [117, 2, 1, "", "dimension"], [117, 2, 1, "", "positive_roots"], [117, 2, 1, "", "roots"], [117, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_g": [[117, 1, 1, "", "TypeG"]], "sympy.liealgebras.type_g.TypeG": [[117, 2, 1, "", "basis"], [117, 2, 1, "", "cartan_matrix"], [117, 2, 1, "", "dimension"], [117, 2, 1, "", "positive_roots"], [117, 2, 1, "", "roots"], [117, 2, 1, "", "simple_root"]], "sympy.liealgebras.weyl_group": [[117, 1, 1, "", "WeylGroup"]], "sympy.liealgebras.weyl_group.WeylGroup": [[117, 2, 1, "", "coxeter_diagram"], [117, 2, 1, "", "delete_doubles"], [117, 2, 1, "", "element_order"], [117, 2, 1, "", "generators"], [117, 2, 1, "", "group_name"], [117, 2, 1, "", "group_order"], [117, 2, 1, "", "matrix_form"]], "sympy.logic": [[118, 0, 0, "-", "inference"]], "sympy.logic.boolalg": [[118, 4, 1, "", "ANFform"], [118, 1, 1, "", "And"], [118, 1, 1, "", "Boolean"], [118, 1, 1, "", "BooleanFalse"], [118, 1, 1, "", "BooleanTrue"], [118, 1, 1, "", "Equivalent"], [118, 1, 1, "", "Exclusive"], [118, 1, 1, "", "ITE"], [118, 1, 1, "", "Implies"], [118, 1, 1, "", "Nand"], [118, 1, 1, "", "Nor"], [118, 1, 1, "", "Not"], [118, 1, 1, "", "Or"], [118, 4, 1, "", "POSform"], [118, 4, 1, "", "SOPform"], [118, 1, 1, "", "Xnor"], [118, 1, 1, "", "Xor"], [118, 4, 1, "", "anf_coeffs"], [118, 4, 1, "", "bool_map"], [118, 4, 1, "", "bool_maxterm"], [118, 4, 1, "", "bool_minterm"], [118, 4, 1, "", "bool_monomial"], [118, 4, 1, "", "distribute_and_over_or"], [118, 4, 1, "", "distribute_or_over_and"], [118, 4, 1, "", "distribute_xor_over_and"], [118, 4, 1, "", "eliminate_implications"], [118, 4, 1, "", "gateinputcount"], [118, 4, 1, "", "integer_to_term"], [118, 4, 1, "", "is_anf"], [118, 4, 1, "", "is_cnf"], [118, 4, 1, "", "is_dnf"], [118, 4, 1, "", "is_nnf"], [118, 4, 1, "", "simplify_logic"], [118, 4, 1, "", "term_to_integer"], [118, 4, 1, "", "to_anf"], [118, 4, 1, "", "to_cnf"], [118, 4, 1, "", "to_dnf"], [118, 4, 1, "", "to_int_repr"], [118, 4, 1, "", "to_nnf"], [118, 4, 1, "", "truth_table"]], "sympy.logic.boolalg.Boolean": [[118, 2, 1, "", "as_set"], [118, 2, 1, "", "equals"]], "sympy.logic.boolalg.BooleanFalse": [[118, 2, 1, "", "as_set"]], "sympy.logic.boolalg.BooleanTrue": [[118, 2, 1, "", "as_set"]], "sympy.logic.inference": [[118, 4, 1, "", "satisfiable"]], "sympy.matrices": [[120, 0, 0, "-", "expressions"], [121, 0, 0, "-", "immutable"], [123, 0, 0, "-", "kind"], [124, 0, 0, "-", "matrixbase"], [126, 0, 0, "-", "sparse"], [127, 0, 0, "-", "sparsetools"]], "sympy.matrices.dense": [[119, 1, 1, "", "DenseMatrix"], [124, 4, 1, "", "GramSchmidt"], [119, 5, 1, "", "Matrix"], [119, 1, 1, "", "MutableDenseMatrix"], [124, 4, 1, "", "casoratian"], [124, 4, 1, "", "diag"], [124, 4, 1, "", "eye"], [124, 4, 1, "", "hessian"], [124, 4, 1, "", "jordan_cell"], [124, 4, 1, "", "list2numpy"], [124, 4, 1, "", "matrix2numpy"], [124, 4, 1, "", "matrix_multiply_elementwise"], [124, 4, 1, "", "ones"], [124, 4, 1, "", "randMatrix"], [124, 4, 1, "", "rot_axis1"], [124, 4, 1, "", "rot_axis2"], [124, 4, 1, "", "rot_axis3"], [124, 4, 1, "", "rot_ccw_axis1"], [124, 4, 1, "", "rot_ccw_axis2"], [124, 4, 1, "", "rot_ccw_axis3"], [124, 4, 1, "", "rot_givens"], [124, 4, 1, "", "symarray"], [124, 4, 1, "", "wronskian"], [124, 4, 1, "", "zeros"]], "sympy.matrices.dense.DenseMatrix": [[119, 2, 1, "", "LDLdecomposition"], [119, 2, 1, "", "as_immutable"], [119, 2, 1, "", "as_mutable"], [119, 2, 1, "", "cholesky"], [119, 2, 1, "", "lower_triangular_solve"], [119, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.dense.MutableDenseMatrix": [[119, 2, 1, "", "simplify"]], "sympy.matrices.expressions": [[120, 1, 1, "", "CompanionMatrix"], [120, 1, 1, "", "FunctionMatrix"], [120, 1, 1, "", "HadamardPower"], [120, 1, 1, "", "HadamardProduct"], [120, 1, 1, "", "Identity"], [120, 1, 1, "", "Inverse"], [120, 1, 1, "", "MatAdd"], [120, 1, 1, "", "MatMul"], [120, 1, 1, "", "MatPow"], [120, 1, 1, "", "MatrixExpr"], [120, 1, 1, "", "MatrixPermute"], [120, 1, 1, "", "MatrixSet"], [120, 1, 1, "", "MatrixSymbol"], [120, 1, 1, "", "PermutationMatrix"], [120, 1, 1, "", "Trace"], [120, 1, 1, "", "Transpose"], [120, 1, 1, "", "ZeroMatrix"], [120, 0, 0, "-", "blockmatrix"], [120, 4, 1, "", "hadamard_product"]], "sympy.matrices.expressions.MatrixExpr": [[120, 3, 1, "", "T"], [120, 2, 1, "", "as_coeff_Mul"], [120, 2, 1, "", "as_explicit"], [120, 2, 1, "", "as_mutable"], [120, 2, 1, "", "equals"], [120, 2, 1, "", "from_index_summation"]], "sympy.matrices.expressions.blockmatrix": [[120, 1, 1, "", "BlockDiagMatrix"], [120, 1, 1, "", "BlockMatrix"], [120, 4, 1, "", "block_collapse"]], "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix": [[120, 2, 1, "", "get_diag_blocks"]], "sympy.matrices.expressions.blockmatrix.BlockMatrix": [[120, 2, 1, "", "LDUdecomposition"], [120, 2, 1, "", "LUdecomposition"], [120, 2, 1, "", "UDLdecomposition"], [120, 2, 1, "", "schur"], [120, 2, 1, "", "transpose"]], "sympy.matrices.immutable": [[121, 1, 1, "", "ImmutableDenseMatrix"], [121, 5, 1, "", "ImmutableMatrix"], [126, 1, 1, "", "ImmutableSparseMatrix"]], "sympy.matrices.kind": [[123, 1, 1, "", "MatrixKind"]], "sympy.matrices.kind.MatrixKind": [[123, 5, 1, "", "__weakref__"]], "sympy.matrices.matrixbase": [[124, 1, 1, "", "MatrixBase"], [124, 1, 1, "", "MatrixError"], [124, 1, 1, "", "NonSquareMatrixError"], [124, 1, 1, "", "ShapeError"], [124, 4, 1, "", "a2idx"]], "sympy.matrices.matrixbase.MatrixBase": [[124, 3, 1, "", "C"], [124, 3, 1, "", "D"], [124, 3, 1, "", "H"], [124, 2, 1, "", "LDLdecomposition"], [124, 2, 1, "", "LDLsolve"], [124, 2, 1, "", "LUdecomposition"], [124, 2, 1, "", "LUdecompositionFF"], [124, 2, 1, "", "LUdecomposition_Simple"], [124, 2, 1, "", "LUsolve"], [124, 2, 1, "", "QRdecomposition"], [124, 2, 1, "", "QRsolve"], [124, 3, 1, "", "T"], [124, 2, 1, "", "__abs__"], [124, 2, 1, "", "__add__"], [124, 2, 1, "", "__getitem__"], [124, 2, 1, "", "__len__"], [124, 2, 1, "", "__mul__"], [124, 2, 1, "", "__pow__"], [124, 5, 1, "", "__weakref__"], [124, 2, 1, "", "add"], [124, 2, 1, "", "adjoint"], [124, 2, 1, "", "adjugate"], [124, 2, 1, "", "analytic_func"], [124, 2, 1, "", "applyfunc"], [124, 2, 1, "", "as_real_imag"], [124, 2, 1, "", "atoms"], [124, 2, 1, "", "berkowitz_det"], [124, 2, 1, "", "berkowitz_eigenvals"], [124, 2, 1, "", "berkowitz_minors"], [124, 2, 1, "", "bidiagonal_decomposition"], [124, 2, 1, "", "bidiagonalize"], [124, 2, 1, "", "charpoly"], [124, 2, 1, "", "cholesky"], [124, 2, 1, "", "cholesky_solve"], [124, 2, 1, "", "cofactor"], [124, 2, 1, "", "cofactor_matrix"], [124, 2, 1, "", "col"], [124, 2, 1, "", "col_del"], [124, 2, 1, "", "col_insert"], [124, 2, 1, "", "col_join"], [124, 2, 1, "", "columnspace"], [124, 2, 1, "", "companion"], [124, 2, 1, "", "condition_number"], [124, 2, 1, "", "conjugate"], [124, 2, 1, "", "connected_components"], [124, 2, 1, "", "connected_components_decomposition"], [124, 2, 1, "", "copy"], [124, 2, 1, "", "cramer_solve"], [124, 2, 1, "", "cross"], [124, 2, 1, "", "det"], [124, 2, 1, "", "det_LU_decomposition"], [124, 2, 1, "", "diag"], [124, 2, 1, "", "diagonal"], [124, 2, 1, "", "diagonal_solve"], [124, 2, 1, "", "diagonalize"], [124, 2, 1, "", "diff"], [124, 2, 1, "", "dot"], [124, 2, 1, "", "dual"], [124, 2, 1, "", "echelon_form"], [124, 2, 1, "", "eigenvals"], [124, 2, 1, "", "eigenvects"], [124, 2, 1, "", "elementary_col_op"], [124, 2, 1, "", "elementary_row_op"], [124, 2, 1, "", "evalf"], [124, 2, 1, "", "exp"], [124, 2, 1, "", "expand"], [124, 2, 1, "", "extract"], [124, 2, 1, "", "eye"], [124, 2, 1, "", "flat"], [124, 3, 1, "", "free_symbols"], [124, 2, 1, "", "from_dok"], [124, 2, 1, "", "gauss_jordan_solve"], [124, 2, 1, "", "get_diag_blocks"], [124, 2, 1, "", "has"], [124, 2, 1, "", "hat"], [124, 2, 1, "", "hstack"], [124, 2, 1, "", "integrate"], [124, 2, 1, "", "inv"], [124, 2, 1, "", "inverse_ADJ"], [124, 2, 1, "", "inverse_BLOCK"], [124, 2, 1, "", "inverse_CH"], [124, 2, 1, "", "inverse_GE"], [124, 2, 1, "", "inverse_LDL"], [124, 2, 1, "", "inverse_LU"], [124, 2, 1, "", "inverse_QR"], [124, 2, 1, "", "irregular"], [124, 2, 1, "", "is_anti_symmetric"], [124, 2, 1, "", "is_diagonal"], [124, 2, 1, "", "is_diagonalizable"], [124, 3, 1, "", "is_echelon"], [124, 3, 1, "", "is_hermitian"], [124, 3, 1, "", "is_indefinite"], [124, 3, 1, "", "is_lower"], [124, 3, 1, "", "is_lower_hessenberg"], [124, 3, 1, "", "is_negative_definite"], [124, 3, 1, "", "is_negative_semidefinite"], [124, 2, 1, "", "is_nilpotent"], [124, 3, 1, "", "is_positive_definite"], [124, 3, 1, "", "is_positive_semidefinite"], [124, 3, 1, "", "is_square"], [124, 3, 1, "", "is_strongly_diagonally_dominant"], [124, 2, 1, "", "is_symbolic"], [124, 2, 1, "", "is_symmetric"], [124, 3, 1, "", "is_upper"], [124, 3, 1, "", "is_upper_hessenberg"], [124, 3, 1, "", "is_weakly_diagonally_dominant"], [124, 3, 1, "", "is_zero_matrix"], [124, 2, 1, "", "iter_items"], [124, 2, 1, "", "iter_values"], [124, 2, 1, "", "jacobian"], [124, 2, 1, "", "jordan_block"], [124, 2, 1, "", "jordan_form"], [124, 2, 1, "", "key2bounds"], [124, 2, 1, "", "key2ij"], [124, 2, 1, "", "left_eigenvects"], [124, 2, 1, "", "limit"], [124, 2, 1, "", "log"], [124, 2, 1, "", "lower_triangular"], [124, 2, 1, "", "lower_triangular_solve"], [124, 2, 1, "", "minor"], [124, 2, 1, "", "minor_submatrix"], [124, 2, 1, "", "multiply"], [124, 2, 1, "", "multiply_elementwise"], [124, 2, 1, "", "n"], [124, 2, 1, "", "norm"], [124, 2, 1, "", "normalized"], [124, 2, 1, "", "nullspace"], [124, 2, 1, "", "ones"], [124, 2, 1, "", "orthogonalize"], [124, 2, 1, "", "per"], [124, 2, 1, "", "permute"], [124, 2, 1, "", "permuteBkwd"], [124, 2, 1, "", "permuteFwd"], [124, 2, 1, "", "permute_cols"], [124, 2, 1, "", "permute_rows"], [124, 2, 1, "", "pinv"], [124, 2, 1, "", "pinv_solve"], [124, 2, 1, "", "pow"], [124, 2, 1, "", "print_nonzero"], [124, 2, 1, "", "project"], [124, 2, 1, "", "rank"], [124, 2, 1, "", "rank_decomposition"], [124, 2, 1, "", "refine"], [124, 2, 1, "", "replace"], [124, 2, 1, "", "reshape"], [124, 2, 1, "", "rmultiply"], [124, 2, 1, "", "rot90"], [124, 2, 1, "", "row"], [124, 2, 1, "", "row_del"], [124, 2, 1, "", "row_insert"], [124, 2, 1, "", "row_join"], [124, 2, 1, "", "rowspace"], [124, 2, 1, "", "rref"], [124, 2, 1, "", "rref_rhs"], [124, 3, 1, "", "shape"], [124, 2, 1, "", "simplify"], [124, 2, 1, "", "singular_value_decomposition"], [124, 2, 1, "", "singular_values"], [124, 2, 1, "", "solve"], [124, 2, 1, "", "solve_least_squares"], [124, 2, 1, "", "strongly_connected_components"], [124, 2, 1, "", "strongly_connected_components_decomposition"], [124, 2, 1, "", "subs"], [124, 2, 1, "", "table"], [124, 2, 1, "", "todod"], [124, 2, 1, "", "todok"], [124, 2, 1, "", "tolist"], [124, 2, 1, "", "trace"], [124, 2, 1, "", "transpose"], [124, 2, 1, "", "upper_hessenberg_decomposition"], [124, 2, 1, "", "upper_triangular"], [124, 2, 1, "", "upper_triangular_solve"], [124, 2, 1, "", "values"], [124, 2, 1, "", "vec"], [124, 2, 1, "", "vech"], [124, 2, 1, "", "vee"], [124, 2, 1, "", "vstack"], [124, 2, 1, "", "wilkinson"], [124, 2, 1, "", "xreplace"], [124, 2, 1, "", "zeros"]], "sympy.matrices.normalforms": [[125, 4, 1, "", "hermite_normal_form"], [125, 4, 1, "", "smith_normal_form"]], "sympy.matrices.sparse": [[126, 1, 1, "", "MutableSparseMatrix"], [126, 5, 1, "", "SparseMatrix"]], "sympy.matrices.sparsetools": [[127, 2, 1, "", "_csrtodok"], [127, 2, 1, "", "_doktocsr"], [127, 2, 1, "", "banded"]], "sympy.ntheory": [[128, 0, 0, "-", "bbp_pi"], [128, 0, 0, "-", "continued_fraction"], [128, 0, 0, "-", "digits"], [128, 0, 0, "-", "ecm"], [128, 0, 0, "-", "egyptian_fraction"], [128, 0, 0, "-", "factor_"], [128, 0, 0, "-", "generate"], [128, 0, 0, "-", "modular"], [128, 0, 0, "-", "multinomial"], [128, 0, 0, "-", "partitions_"], [128, 0, 0, "-", "primetest"], [128, 0, 0, "-", "qs"], [128, 0, 0, "-", "residue_ntheory"]], "sympy.ntheory.bbp_pi": [[128, 4, 1, "", "pi_hex_digits"]], "sympy.ntheory.continued_fraction": [[128, 4, 1, "", "continued_fraction"], [128, 4, 1, "", "continued_fraction_convergents"], [128, 4, 1, "", "continued_fraction_iterator"], [128, 4, 1, "", "continued_fraction_periodic"], [128, 4, 1, "", "continued_fraction_reduce"]], "sympy.ntheory.digits": [[128, 4, 1, "", "count_digits"], [128, 4, 1, "", "digits"], [128, 4, 1, "", "is_palindromic"]], "sympy.ntheory.ecm": [[128, 4, 1, "", "ecm"]], "sympy.ntheory.egyptian_fraction": [[128, 4, 1, "", "egyptian_fraction"]], "sympy.ntheory.factor_": [[128, 4, 1, "", "abundance"], [128, 4, 1, "", "antidivisor_count"], [128, 4, 1, "", "antidivisors"], [128, 4, 1, "", "core"], [128, 4, 1, "", "digits"], [128, 4, 1, "", "divisor_count"], [128, 4, 1, "", "divisor_sigma"], [128, 4, 1, "", "divisors"], [128, 4, 1, "", "factorint"], [128, 4, 1, "", "factorrat"], [128, 4, 1, "", "find_carmichael_numbers_in_range"], [128, 4, 1, "", "find_first_n_carmichaels"], [128, 4, 1, "", "is_abundant"], [128, 4, 1, "", "is_amicable"], [128, 4, 1, "", "is_carmichael"], [128, 4, 1, "", "is_deficient"], [128, 4, 1, "", "is_perfect"], [128, 4, 1, "", "mersenne_prime_exponent"], [128, 4, 1, "", "multiplicity"], [128, 4, 1, "", "perfect_power"], [128, 4, 1, "", "pollard_pm1"], [128, 4, 1, "", "pollard_rho"], [128, 4, 1, "", "primefactors"], [128, 4, 1, "", "primenu"], [128, 4, 1, "", "primeomega"], [128, 4, 1, "", "proper_divisor_count"], [128, 4, 1, "", "proper_divisors"], [128, 4, 1, "", "reduced_totient"], [128, 4, 1, "", "smoothness"], [128, 4, 1, "", "smoothness_p"], [128, 4, 1, "", "totient"], [128, 4, 1, "", "udivisor_count"], [128, 4, 1, "", "udivisor_sigma"], [128, 4, 1, "", "udivisors"]], "sympy.ntheory.generate": [[128, 1, 1, "", "Sieve"], [128, 4, 1, "", "composite"], [128, 4, 1, "", "compositepi"], [128, 4, 1, "", "cycle_length"], [128, 4, 1, "", "nextprime"], [128, 4, 1, "", "prevprime"], [128, 4, 1, "", "prime"], [128, 4, 1, "", "primepi"], [128, 4, 1, "", "primerange"], [128, 4, 1, "", "primorial"], [128, 4, 1, "", "randprime"]], "sympy.ntheory.generate.Sieve": [[128, 2, 1, "", "extend"], [128, 2, 1, "", "extend_to_no"], [128, 2, 1, "", "mobiusrange"], [128, 2, 1, "", "primerange"], [128, 2, 1, "", "search"], [128, 2, 1, "", "totientrange"]], "sympy.ntheory.modular": [[128, 4, 1, "", "crt"], [128, 4, 1, "", "crt1"], [128, 4, 1, "", "crt2"], [128, 4, 1, "", "solve_congruence"], [128, 4, 1, "", "symmetric_residue"]], "sympy.ntheory.multinomial": [[128, 4, 1, "", "binomial_coefficients"], [128, 4, 1, "", "binomial_coefficients_list"], [128, 4, 1, "", "multinomial_coefficients"], [128, 4, 1, "", "multinomial_coefficients_iterator"]], "sympy.ntheory.partitions_": [[128, 4, 1, "", "npartitions"]], "sympy.ntheory.primetest": [[128, 4, 1, "", "is_euler_jacobi_pseudoprime"], [128, 4, 1, "", "is_euler_pseudoprime"], [128, 4, 1, "", "is_extra_strong_lucas_prp"], [128, 4, 1, "", "is_fermat_pseudoprime"], [128, 4, 1, "", "is_gaussian_prime"], [128, 4, 1, "", "is_lucas_prp"], [128, 4, 1, "", "is_mersenne_prime"], [128, 4, 1, "", "is_square"], [128, 4, 1, "", "is_strong_lucas_prp"], [128, 4, 1, "", "isprime"], [128, 4, 1, "", "mr"], [128, 4, 1, "", "proth_test"]], "sympy.ntheory.qs": [[128, 4, 1, "", "qs"]], "sympy.ntheory.residue_ntheory": [[128, 4, 1, "", "binomial_mod"], [128, 4, 1, "", "discrete_log"], [128, 4, 1, "", "is_nthpow_residue"], [128, 4, 1, "", "is_primitive_root"], [128, 4, 1, "", "is_quad_residue"], [128, 4, 1, "", "jacobi_symbol"], [128, 4, 1, "", "legendre_symbol"], [128, 4, 1, "", "mobius"], [128, 4, 1, "", "n_order"], [128, 4, 1, "", "nthroot_mod"], [128, 4, 1, "", "polynomial_congruence"], [128, 4, 1, "", "primitive_root"], [128, 4, 1, "", "quadratic_congruence"], [128, 4, 1, "", "quadratic_residues"], [128, 4, 1, "", "sqrt_mod"], [128, 4, 1, "", "sqrt_mod_iter"]], "sympy.parsing": [[130, 0, 0, "-", "sym_expr"]], "sympy.parsing.latex": [[130, 1, 1, "", "LaTeXParsingError"], [130, 4, 1, "", "parse_latex"], [130, 4, 1, "", "parse_latex_lark"]], "sympy.parsing.latex.lark": [[130, 1, 1, "", "LarkLaTeXParser"], [130, 1, 1, "", "TransformToSymPyExpr"]], "sympy.parsing.mathematica": [[130, 4, 1, "", "parse_mathematica"]], "sympy.parsing.maxima": [[130, 4, 1, "", "parse_maxima"]], "sympy.parsing.sym_expr": [[130, 1, 1, "", "SymPyExpression"]], "sympy.parsing.sym_expr.SymPyExpression": [[130, 2, 1, "", "convert_to_c"], [130, 2, 1, "", "convert_to_expr"], [130, 2, 1, "", "convert_to_fortran"], [130, 2, 1, "", "convert_to_python"], [130, 2, 1, "", "return_expr"]], "sympy.parsing.sympy_parser": [[130, 4, 1, "", "auto_number"], [130, 4, 1, "", "auto_symbol"], [130, 4, 1, "", "convert_xor"], [130, 4, 1, "", "eval_expr"], [130, 4, 1, "", "factorial_notation"], [130, 4, 1, "", "function_exponentiation"], [130, 4, 1, "", "implicit_application"], [130, 4, 1, "", "implicit_multiplication"], [130, 4, 1, "", "implicit_multiplication_application"], [130, 4, 1, "", "lambda_notation"], [130, 4, 1, "", "parse_expr"], [130, 4, 1, "", "rationalize"], [130, 4, 1, "", "repeated_decimals"], [130, 4, 1, "", "split_symbols"], [130, 4, 1, "", "split_symbols_custom"], [130, 6, 1, "", "standard_transformations"], [130, 4, 1, "", "stringify_expr"]], "sympy.physics": [[133, 0, 0, "-", "biomechanics"], [143, 0, 0, "-", "control"], [146, 0, 0, "-", "hydrogen"], [147, 0, 0, "-", "matrices"], [151, 0, 0, "-", "mechanics"], [166, 0, 0, "-", "paulialgebra"], [167, 0, 0, "-", "qho_1d"], [191, 0, 0, "-", "secondquant"], [192, 0, 0, "-", "sho"], [203, 0, 0, "-", "vector"], [206, 0, 0, "-", "wigner"]], "sympy.physics.biomechanics": [[131, 0, 0, "-", "activation"], [132, 0, 0, "-", "curve"], [134, 0, 0, "-", "musculotendon"]], "sympy.physics.biomechanics.activation": [[131, 1, 1, "", "ActivationBase"], [131, 1, 1, "", "FirstOrderActivationDeGroote2016"], [131, 1, 1, "", "ZerothOrderActivation"]], "sympy.physics.biomechanics.activation.ActivationBase": [[131, 3, 1, "", "F"], [131, 3, 1, "", "M"], [131, 3, 1, "", "a"], [131, 3, 1, "", "activation"], [131, 3, 1, "", "constants"], [131, 3, 1, "", "e"], [131, 3, 1, "", "excitation"], [131, 3, 1, "", "input_vars"], [131, 3, 1, "", "order"], [131, 3, 1, "", "p"], [131, 3, 1, "", "r"], [131, 2, 1, "", "rhs"], [131, 3, 1, "", "state_vars"], [131, 2, 1, "", "with_defaults"], [131, 3, 1, "", "x"]], "sympy.physics.biomechanics.activation.FirstOrderActivationDeGroote2016": [[131, 3, 1, "", "F"], [131, 3, 1, "", "M"], [131, 3, 1, "", "activation_time_constant"], [131, 3, 1, "", "b"], [131, 3, 1, "", "constants"], [131, 3, 1, "", "deactivation_time_constant"], [131, 3, 1, "", "input_vars"], [131, 3, 1, "", "order"], [131, 3, 1, "", "p"], [131, 3, 1, "", "r"], [131, 2, 1, "", "rhs"], [131, 3, 1, "", "smoothing_rate"], [131, 3, 1, "", "state_vars"], [131, 3, 1, "", "tau_a"], [131, 3, 1, "", "tau_d"], [131, 2, 1, "", "with_defaults"], [131, 3, 1, "", "x"]], "sympy.physics.biomechanics.activation.ZerothOrderActivation": [[131, 3, 1, "", "F"], [131, 3, 1, "", "M"], [131, 3, 1, "", "constants"], [131, 3, 1, "", "input_vars"], [131, 3, 1, "", "order"], [131, 3, 1, "", "p"], [131, 3, 1, "", "r"], [131, 2, 1, "", "rhs"], [131, 3, 1, "", "state_vars"], [131, 2, 1, "", "with_defaults"], [131, 3, 1, "", "x"]], "sympy.physics.biomechanics.curve": [[132, 1, 1, "", "CharacteristicCurveCollection"], [132, 1, 1, "", "CharacteristicCurveFunction"], [132, 1, 1, "", "FiberForceLengthActiveDeGroote2016"], [132, 1, 1, "", "FiberForceLengthPassiveDeGroote2016"], [132, 1, 1, "", "FiberForceLengthPassiveInverseDeGroote2016"], [132, 1, 1, "", "FiberForceVelocityDeGroote2016"], [132, 1, 1, "", "FiberForceVelocityInverseDeGroote2016"], [132, 1, 1, "", "TendonForceLengthDeGroote2016"], [132, 1, 1, "", "TendonForceLengthInverseDeGroote2016"]], "sympy.physics.biomechanics.curve.FiberForceLengthActiveDeGroote2016": [[132, 2, 1, "", "doit"], [132, 2, 1, "", "eval"], [132, 2, 1, "", "fdiff"], [132, 2, 1, "", "with_defaults"]], "sympy.physics.biomechanics.curve.FiberForceLengthPassiveDeGroote2016": [[132, 2, 1, "", "doit"], [132, 2, 1, "", "eval"], [132, 2, 1, "", "fdiff"], [132, 2, 1, "", "inverse"], [132, 2, 1, "", "with_defaults"]], "sympy.physics.biomechanics.curve.FiberForceLengthPassiveInverseDeGroote2016": [[132, 2, 1, "", "doit"], [132, 2, 1, "", "eval"], [132, 2, 1, "", "fdiff"], [132, 2, 1, "", "inverse"], [132, 2, 1, "", "with_defaults"]], "sympy.physics.biomechanics.curve.FiberForceVelocityDeGroote2016": [[132, 2, 1, "", "doit"], [132, 2, 1, "", "eval"], [132, 2, 1, "", "fdiff"], [132, 2, 1, "", "inverse"], [132, 2, 1, "", "with_defaults"]], "sympy.physics.biomechanics.curve.FiberForceVelocityInverseDeGroote2016": [[132, 2, 1, "", "doit"], [132, 2, 1, "", "eval"], [132, 2, 1, "", "fdiff"], [132, 2, 1, "", "inverse"], [132, 2, 1, "", "with_defaults"]], "sympy.physics.biomechanics.curve.TendonForceLengthDeGroote2016": [[132, 2, 1, "", "doit"], [132, 2, 1, "", "eval"], [132, 2, 1, "", "fdiff"], [132, 2, 1, "", "inverse"], [132, 2, 1, "", "with_defaults"]], "sympy.physics.biomechanics.curve.TendonForceLengthInverseDeGroote2016": [[132, 2, 1, "", "doit"], [132, 2, 1, "", "eval"], [132, 2, 1, "", "fdiff"], [132, 2, 1, "", "inverse"], [132, 2, 1, "", "with_defaults"]], "sympy.physics.biomechanics.musculotendon": [[134, 1, 1, "", "MusculotendonBase"], [134, 1, 1, "", "MusculotendonDeGroote2016"], [134, 1, 1, "", "MusculotendonFormulation"]], "sympy.physics.biomechanics.musculotendon.MusculotendonBase": [[134, 3, 1, "", "F"], [134, 3, 1, "", "F_M_max"], [134, 3, 1, "", "M"], [134, 3, 1, "", "a"], [134, 3, 1, "", "activation"], [134, 3, 1, "", "activation_dynamics"], [134, 3, 1, "", "alpha_opt"], [134, 3, 1, "", "beta"], [134, 3, 1, "", "constants"], [134, 2, 1, "", "curves"], [134, 3, 1, "", "e"], [134, 3, 1, "", "excitation"], [134, 3, 1, "", "fiber_damping_coefficient"], [134, 3, 1, "", "input_vars"], [134, 3, 1, "", "l_M_opt"], [134, 3, 1, "", "l_T_slack"], [134, 3, 1, "", "maximal_fiber_velocity"], [134, 3, 1, "", "musculotendon_dynamics"], [134, 3, 1, "", "optimal_fiber_length"], [134, 3, 1, "", "optimal_pennation_angle"], [134, 3, 1, "", "p"], [134, 3, 1, "", "peak_isometric_force"], [134, 3, 1, "", "r"], [134, 2, 1, "", "rhs"], [134, 3, 1, "", "state_vars"], [134, 3, 1, "", "tendon_slack_length"], [134, 3, 1, "", "v_M_max"], [134, 2, 1, "", "with_defaults"], [134, 3, 1, "", "x"]], "sympy.physics.continuum_mechanics": [[135, 0, 0, "-", "Arch"], [136, 0, 0, "-", "beam"], [138, 0, 0, "-", "cable"], [140, 0, 0, "-", "truss"]], "sympy.physics.continuum_mechanics.beam": [[136, 1, 1, "", "Beam"], [136, 1, 1, "", "Beam3D"]], "sympy.physics.continuum_mechanics.beam.Beam": [[136, 3, 1, "", "applied_loads"], [136, 2, 1, "", "apply_load"], [136, 2, 1, "", "apply_rotation_hinge"], [136, 2, 1, "", "apply_sliding_hinge"], [136, 2, 1, "", "apply_support"], [136, 3, 1, "", "area"], [136, 2, 1, "", "bending_moment"], [136, 3, 1, "", "boundary_conditions"], [136, 3, 1, "", "cross_section"], [136, 2, 1, "", "deflection"], [136, 3, 1, "", "deflection_jumps"], [136, 2, 1, "", "draw"], [136, 3, 1, "", "elastic_modulus"], [136, 3, 1, "", "ild_deflection_jumps"], [136, 3, 1, "", "ild_moment"], [136, 3, 1, "", "ild_reactions"], [136, 3, 1, "", "ild_rotation_jumps"], [136, 3, 1, "", "ild_shear"], [136, 2, 1, "", "join"], [136, 3, 1, "", "length"], [136, 3, 1, "", "load"], [136, 2, 1, "", "max_bmoment"], [136, 2, 1, "", "max_deflection"], [136, 2, 1, "", "max_shear_force"], [136, 2, 1, "", "plot_bending_moment"], [136, 2, 1, "", "plot_deflection"], [136, 2, 1, "", "plot_ild_moment"], [136, 2, 1, "", "plot_ild_reactions"], [136, 2, 1, "", "plot_ild_shear"], [136, 2, 1, "", "plot_loading_results"], [136, 2, 1, "", "plot_shear_force"], [136, 2, 1, "", "plot_shear_stress"], [136, 2, 1, "", "plot_slope"], [136, 2, 1, "", "point_cflexure"], [136, 3, 1, "", "reaction_loads"], [136, 2, 1, "", "remove_load"], [136, 3, 1, "", "rotation_jumps"], [136, 3, 1, "", "second_moment"], [136, 2, 1, "", "shear_force"], [136, 2, 1, "", "shear_stress"], [136, 2, 1, "", "slope"], [136, 2, 1, "", "solve_for_ild_moment"], [136, 2, 1, "", "solve_for_ild_reactions"], [136, 2, 1, "", "solve_for_ild_shear"], [136, 2, 1, "", "solve_for_reaction_loads"], [136, 3, 1, "", "variable"]], "sympy.physics.continuum_mechanics.beam.Beam3D": [[136, 2, 1, "", "angular_deflection"], [136, 2, 1, "", "apply_load"], [136, 2, 1, "", "apply_moment_load"], [136, 3, 1, "", "area"], [136, 2, 1, "", "axial_force"], [136, 2, 1, "", "axial_stress"], [136, 2, 1, "", "bending_moment"], [136, 3, 1, "", "boundary_conditions"], [136, 2, 1, "", "deflection"], [136, 3, 1, "", "load_vector"], [136, 2, 1, "", "max_bending_moment"], [136, 2, 1, "", "max_bmoment"], [136, 2, 1, "", "max_deflection"], [136, 2, 1, "", "max_shear_force"], [136, 3, 1, "", "moment_load_vector"], [136, 2, 1, "", "plot_bending_moment"], [136, 2, 1, "", "plot_deflection"], [136, 2, 1, "", "plot_loading_results"], [136, 2, 1, "", "plot_shear_force"], [136, 2, 1, "", "plot_shear_stress"], [136, 2, 1, "", "plot_slope"], [136, 2, 1, "", "polar_moment"], [136, 3, 1, "", "second_moment"], [136, 2, 1, "", "shear_force"], [136, 3, 1, "", "shear_modulus"], [136, 2, 1, "", "shear_stress"], [136, 2, 1, "", "slope"], [136, 2, 1, "", "solve_for_reaction_loads"], [136, 2, 1, "", "solve_for_torsion"], [136, 2, 1, "", "torsional_moment"]], "sympy.physics.continuum_mechanics.cable": [[138, 1, 1, "", "Cable"]], "sympy.physics.continuum_mechanics.cable.Cable": [[138, 2, 1, "", "apply_length"], [138, 2, 1, "", "apply_load"], [138, 2, 1, "", "change_support"], [138, 2, 1, "", "draw"], [138, 3, 1, "", "left_support"], [138, 3, 1, "", "length"], [138, 3, 1, "", "loads"], [138, 3, 1, "", "loads_position"], [138, 2, 1, "", "plot_tension"], [138, 3, 1, "", "reaction_loads"], [138, 2, 1, "", "remove_loads"], [138, 3, 1, "", "right_support"], [138, 2, 1, "", "solve"], [138, 3, 1, "", "supports"], [138, 3, 1, "", "tension"], [138, 2, 1, "", "tension_at"]], "sympy.physics.continuum_mechanics.truss": [[140, 1, 1, "", "Truss"]], "sympy.physics.continuum_mechanics.truss.Truss": [[140, 2, 1, "", "add_member"], [140, 2, 1, "", "add_node"], [140, 2, 1, "", "apply_load"], [140, 2, 1, "", "apply_support"], [140, 2, 1, "", "change_member_label"], [140, 2, 1, "", "change_node_label"], [140, 2, 1, "", "draw"], [140, 3, 1, "", "internal_forces"], [140, 3, 1, "", "loads"], [140, 3, 1, "", "member_lengths"], [140, 3, 1, "", "members"], [140, 3, 1, "", "node_labels"], [140, 3, 1, "", "node_positions"], [140, 3, 1, "", "nodes"], [140, 3, 1, "", "reaction_loads"], [140, 2, 1, "", "remove_load"], [140, 2, 1, "", "remove_member"], [140, 2, 1, "", "remove_node"], [140, 2, 1, "", "remove_support"], [140, 2, 1, "", "solve"], [140, 3, 1, "", "supports"]], "sympy.physics.control": [[144, 0, 0, "-", "lti"]], "sympy.physics.control.control_plots": [[142, 2, 1, "", "bode_magnitude_numerical_data"], [142, 2, 1, "", "bode_magnitude_plot"], [142, 2, 1, "", "bode_phase_numerical_data"], [142, 2, 1, "", "bode_phase_plot"], [142, 2, 1, "", "bode_plot"], [142, 2, 1, "", "impulse_response_numerical_data"], [142, 2, 1, "", "impulse_response_plot"], [142, 2, 1, "", "pole_zero_numerical_data"], [142, 2, 1, "", "pole_zero_plot"], [142, 2, 1, "", "ramp_response_numerical_data"], [142, 2, 1, "", "ramp_response_plot"], [142, 2, 1, "", "step_response_numerical_data"], [142, 2, 1, "", "step_response_plot"]], "sympy.physics.control.lti": [[144, 1, 1, "", "Feedback"], [144, 1, 1, "", "MIMOFeedback"], [144, 1, 1, "", "MIMOParallel"], [144, 1, 1, "", "MIMOSeries"], [144, 1, 1, "", "Parallel"], [144, 1, 1, "", "Series"], [144, 1, 1, "", "TransferFunction"], [144, 1, 1, "", "TransferFunctionMatrix"], [144, 4, 1, "", "backward_diff"], [144, 4, 1, "", "bilinear"], [144, 4, 1, "", "forward_diff"], [144, 4, 1, "", "gbt"]], "sympy.physics.control.lti.Feedback": [[144, 3, 1, "", "den"], [144, 2, 1, "", "doit"], [144, 3, 1, "", "num"], [144, 3, 1, "", "sensitivity"], [144, 3, 1, "", "sign"], [144, 3, 1, "", "sys1"], [144, 3, 1, "", "sys2"], [144, 2, 1, "", "to_expr"], [144, 3, 1, "", "var"]], "sympy.physics.control.lti.MIMOFeedback": [[144, 2, 1, "", "doit"], [144, 3, 1, "", "num_inputs"], [144, 3, 1, "", "num_outputs"], [144, 3, 1, "", "sensitivity"], [144, 3, 1, "", "sign"], [144, 3, 1, "", "sys1"], [144, 3, 1, "", "sys2"], [144, 3, 1, "", "var"]], "sympy.physics.control.lti.MIMOParallel": [[144, 2, 1, "", "doit"], [144, 3, 1, "", "num_inputs"], [144, 3, 1, "", "num_outputs"], [144, 3, 1, "", "shape"], [144, 3, 1, "", "var"]], "sympy.physics.control.lti.MIMOSeries": [[144, 2, 1, "", "doit"], [144, 3, 1, "", "num_inputs"], [144, 3, 1, "", "num_outputs"], [144, 3, 1, "", "shape"], [144, 3, 1, "", "var"]], "sympy.physics.control.lti.Parallel": [[144, 2, 1, "", "doit"], [144, 3, 1, "", "is_biproper"], [144, 3, 1, "", "is_proper"], [144, 3, 1, "", "is_strictly_proper"], [144, 2, 1, "", "to_expr"], [144, 3, 1, "", "var"]], "sympy.physics.control.lti.Series": [[144, 2, 1, "", "doit"], [144, 3, 1, "", "is_biproper"], [144, 3, 1, "", "is_proper"], [144, 3, 1, "", "is_strictly_proper"], [144, 2, 1, "", "to_expr"], [144, 3, 1, "", "var"]], "sympy.physics.control.lti.TransferFunction": [[144, 2, 1, "", "dc_gain"], [144, 3, 1, "", "den"], [144, 2, 1, "", "eval_frequency"], [144, 2, 1, "", "expand"], [144, 2, 1, "", "from_coeff_lists"], [144, 2, 1, "", "from_rational_expression"], [144, 2, 1, "", "from_zpk"], [144, 3, 1, "", "is_biproper"], [144, 3, 1, "", "is_proper"], [144, 2, 1, "", "is_stable"], [144, 3, 1, "", "is_strictly_proper"], [144, 3, 1, "", "num"], [144, 2, 1, "", "poles"], [144, 2, 1, "", "to_expr"], [144, 3, 1, "", "var"], [144, 2, 1, "", "zeros"]], "sympy.physics.control.lti.TransferFunctionMatrix": [[144, 2, 1, "", "elem_poles"], [144, 2, 1, "", "elem_zeros"], [144, 2, 1, "", "eval_frequency"], [144, 2, 1, "", "expand"], [144, 2, 1, "", "from_Matrix"], [144, 3, 1, "", "num_inputs"], [144, 3, 1, "", "num_outputs"], [144, 3, 1, "", "shape"], [144, 2, 1, "", "transpose"], [144, 3, 1, "", "var"]], "sympy.physics.hep": [[145, 0, 0, "-", "gamma_matrices"]], "sympy.physics.hep.gamma_matrices": [[145, 4, 1, "", "extract_type_tens"], [145, 4, 1, "", "gamma_trace"], [145, 4, 1, "", "kahane_simplify"], [145, 4, 1, "", "simplify_gpgp"]], "sympy.physics.hydrogen": [[146, 4, 1, "", "E_nl"], [146, 4, 1, "", "E_nl_dirac"], [146, 4, 1, "", "Psi_nlm"], [146, 4, 1, "", "R_nl"]], "sympy.physics.matrices": [[147, 4, 1, "", "mdft"], [147, 4, 1, "", "mgamma"], [147, 4, 1, "", "msigma"], [147, 4, 1, "", "pat_matrix"]], "sympy.physics.mechanics": [[148, 0, 0, "-", "actuator"], [150, 4, 1, "", "find_dynamicsymbols"], [152, 0, 0, "-", "joint"], [153, 0, 0, "-", "kane"], [153, 0, 0, "-", "lagrange"], [154, 0, 0, "-", "linearize"], [150, 4, 1, "", "msubs"], [156, 0, 0, "-", "pathway"], [159, 0, 0, "-", "wrapping_geometry"]], "sympy.physics.mechanics.actuator": [[148, 1, 1, "", "ActuatorBase"], [148, 1, 1, "", "CoulombKineticFriction"], [148, 1, 1, "", "DuffingSpring"], [148, 1, 1, "", "ForceActuator"], [148, 1, 1, "", "LinearDamper"], [148, 1, 1, "", "LinearSpring"], [148, 1, 1, "", "TorqueActuator"]], "sympy.physics.mechanics.actuator.ActuatorBase": [[148, 2, 1, "", "to_loads"]], "sympy.physics.mechanics.actuator.CoulombKineticFriction": [[148, 3, 1, "", "f_n"], [148, 3, 1, "", "mu_k"], [148, 3, 1, "", "mu_s"], [148, 3, 1, "", "sigma"], [148, 3, 1, "", "v_s"]], "sympy.physics.mechanics.actuator.DuffingSpring": [[148, 3, 1, "", "force"]], "sympy.physics.mechanics.actuator.ForceActuator": [[148, 3, 1, "", "force"], [148, 3, 1, "", "pathway"], [148, 2, 1, "", "to_loads"]], "sympy.physics.mechanics.actuator.LinearDamper": [[148, 3, 1, "", "damping"], [148, 3, 1, "", "force"]], "sympy.physics.mechanics.actuator.LinearSpring": [[148, 3, 1, "", "equilibrium_length"], [148, 3, 1, "", "force"], [148, 3, 1, "", "stiffness"]], "sympy.physics.mechanics.actuator.TorqueActuator": [[148, 2, 1, "", "at_pin_joint"], [148, 3, 1, "", "axis"], [148, 3, 1, "", "reaction_frame"], [148, 3, 1, "", "target_frame"], [148, 2, 1, "", "to_loads"], [148, 3, 1, "", "torque"]], "sympy.physics.mechanics.body": [[149, 1, 1, "", "Body"]], "sympy.physics.mechanics.body.Body": [[149, 2, 1, "", "ang_vel_in"], [149, 2, 1, "", "angular_momentum"], [149, 2, 1, "", "apply_force"], [149, 2, 1, "", "apply_torque"], [149, 3, 1, "", "central_inertia"], [149, 2, 1, "", "clear_loads"], [149, 2, 1, "", "dcm"], [149, 3, 1, "", "frame"], [149, 3, 1, "", "inertia"], [149, 2, 1, "", "kinetic_energy"], [149, 2, 1, "", "linear_momentum"], [149, 3, 1, "", "mass"], [149, 3, 1, "", "masscenter"], [149, 2, 1, "", "masscenter_vel"], [149, 3, 1, "", "name"], [149, 2, 1, "", "parallel_axis"], [149, 3, 1, "", "point"], [149, 3, 1, "", "potential_energy"], [149, 2, 1, "", "remove_load"], [149, 3, 1, "", "x"], [149, 3, 1, "", "y"], [149, 3, 1, "", "z"]], "sympy.physics.mechanics.functions": [[155, 4, 1, "", "Lagrangian"], [155, 4, 1, "", "angular_momentum"], [155, 4, 1, "", "center_of_mass"], [155, 4, 1, "", "find_dynamicsymbols"], [155, 4, 1, "", "kinetic_energy"], [155, 4, 1, "", "linear_momentum"], [155, 4, 1, "", "potential_energy"]], "sympy.physics.mechanics.inertia": [[155, 1, 1, "", "Inertia"], [155, 4, 1, "", "inertia"], [155, 4, 1, "", "inertia_of_point_mass"]], "sympy.physics.mechanics.inertia.Inertia": [[155, 2, 1, "", "from_inertia_scalars"]], "sympy.physics.mechanics.joint": [[152, 1, 1, "", "CylindricalJoint"], [152, 1, 1, "", "Joint"], [152, 1, 1, "", "PinJoint"], [152, 1, 1, "", "PlanarJoint"], [152, 1, 1, "", "PrismaticJoint"], [152, 1, 1, "", "SphericalJoint"], [152, 1, 1, "", "WeldJoint"]], "sympy.physics.mechanics.joint.CylindricalJoint": [[152, 3, 1, "", "joint_axis"], [152, 3, 1, "", "rotation_coordinate"], [152, 3, 1, "", "rotation_speed"], [152, 3, 1, "", "translation_coordinate"], [152, 3, 1, "", "translation_speed"]], "sympy.physics.mechanics.joint.Joint": [[152, 3, 1, "", "child"], [152, 3, 1, "", "child_axis"], [152, 3, 1, "", "child_point"], [152, 3, 1, "", "coordinates"], [152, 3, 1, "", "kdes"], [152, 3, 1, "", "name"], [152, 3, 1, "", "parent"], [152, 3, 1, "", "parent_axis"], [152, 3, 1, "", "parent_point"], [152, 3, 1, "", "speeds"]], "sympy.physics.mechanics.joint.PinJoint": [[152, 3, 1, "", "joint_axis"]], "sympy.physics.mechanics.joint.PlanarJoint": [[152, 3, 1, "", "planar_coordinates"], [152, 3, 1, "", "planar_speeds"], [152, 3, 1, "", "planar_vectors"], [152, 3, 1, "", "rotation_axis"], [152, 3, 1, "", "rotation_coordinate"], [152, 3, 1, "", "rotation_speed"]], "sympy.physics.mechanics.joint.PrismaticJoint": [[152, 3, 1, "", "joint_axis"]], "sympy.physics.mechanics.jointsmethod": [[149, 1, 1, "", "JointsMethod"]], "sympy.physics.mechanics.jointsmethod.JointsMethod": [[149, 3, 1, "", "bodies"], [149, 3, 1, "", "forcing"], [149, 3, 1, "", "forcing_full"], [149, 2, 1, "", "form_eoms"], [149, 3, 1, "", "kdes"], [149, 3, 1, "", "loads"], [149, 3, 1, "", "mass_matrix"], [149, 3, 1, "", "mass_matrix_full"], [149, 3, 1, "", "method"], [149, 3, 1, "", "q"], [149, 2, 1, "", "rhs"], [149, 3, 1, "", "u"]], "sympy.physics.mechanics.kane": [[153, 1, 1, "", "KanesMethod"]], "sympy.physics.mechanics.kane.KanesMethod": [[153, 3, 1, "", "auxiliary_eqs"], [153, 3, 1, "", "forcing"], [153, 3, 1, "", "forcing_full"], [153, 3, 1, "", "forcing_kin"], [153, 2, 1, "", "kanes_equations"], [153, 2, 1, "", "kindiffdict"], [153, 2, 1, "", "linearize"], [153, 3, 1, "", "mass_matrix"], [153, 3, 1, "", "mass_matrix_full"], [153, 3, 1, "", "mass_matrix_kin"], [153, 2, 1, "", "rhs"], [153, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.lagrange": [[153, 1, 1, "", "LagrangesMethod"]], "sympy.physics.mechanics.lagrange.LagrangesMethod": [[153, 3, 1, "", "forcing"], [153, 3, 1, "", "forcing_full"], [153, 2, 1, "", "form_lagranges_equations"], [153, 2, 1, "", "linearize"], [153, 3, 1, "", "mass_matrix"], [153, 3, 1, "", "mass_matrix_full"], [153, 2, 1, "", "rhs"], [153, 2, 1, "", "solve_multipliers"], [153, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.linearize": [[154, 1, 1, "", "Linearizer"]], "sympy.physics.mechanics.linearize.Linearizer": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "linearize"]], "sympy.physics.mechanics.loads": [[155, 1, 1, "", "Force"], [155, 1, 1, "", "Torque"]], "sympy.physics.mechanics.particle": [[155, 1, 1, "", "Particle"]], "sympy.physics.mechanics.particle.Particle": [[155, 2, 1, "", "angular_momentum"], [155, 2, 1, "", "kinetic_energy"], [155, 2, 1, "", "linear_momentum"], [155, 3, 1, "", "mass"], [155, 3, 1, "", "masscenter"], [155, 3, 1, "", "name"], [155, 2, 1, "", "parallel_axis"], [155, 3, 1, "", "point"], [155, 3, 1, "", "potential_energy"]], "sympy.physics.mechanics.pathway": [[156, 1, 1, "", "LinearPathway"], [156, 1, 1, "", "ObstacleSetPathway"], [156, 1, 1, "", "PathwayBase"], [156, 1, 1, "", "WrappingPathway"]], "sympy.physics.mechanics.pathway.LinearPathway": [[156, 3, 1, "", "extension_velocity"], [156, 3, 1, "", "length"], [156, 2, 1, "", "to_loads"]], "sympy.physics.mechanics.pathway.ObstacleSetPathway": [[156, 3, 1, "", "attachments"], [156, 3, 1, "", "extension_velocity"], [156, 3, 1, "", "length"], [156, 2, 1, "", "to_loads"]], "sympy.physics.mechanics.pathway.PathwayBase": [[156, 3, 1, "", "attachments"], [156, 3, 1, "", "extension_velocity"], [156, 3, 1, "", "length"], [156, 2, 1, "", "to_loads"]], "sympy.physics.mechanics.pathway.WrappingPathway": [[156, 3, 1, "", "extension_velocity"], [156, 3, 1, "", "geometry"], [156, 3, 1, "", "length"], [156, 2, 1, "", "to_loads"]], "sympy.physics.mechanics.rigidbody": [[155, 1, 1, "", "RigidBody"]], "sympy.physics.mechanics.rigidbody.RigidBody": [[155, 2, 1, "", "angular_momentum"], [155, 3, 1, "", "central_inertia"], [155, 3, 1, "", "frame"], [155, 3, 1, "", "inertia"], [155, 2, 1, "", "kinetic_energy"], [155, 2, 1, "", "linear_momentum"], [155, 3, 1, "", "mass"], [155, 3, 1, "", "masscenter"], [155, 3, 1, "", "name"], [155, 2, 1, "", "parallel_axis"], [155, 3, 1, "", "potential_energy"], [155, 3, 1, "", "x"], [155, 3, 1, "", "y"], [155, 3, 1, "", "z"]], "sympy.physics.mechanics.system": [[158, 1, 1, "", "SymbolicSystem"], [158, 1, 1, "", "System"]], "sympy.physics.mechanics.system.SymbolicSystem": [[158, 3, 1, "", "alg_con"], [158, 3, 1, "", "bodies"], [158, 3, 1, "", "comb_explicit_rhs"], [158, 3, 1, "", "comb_implicit_mat"], [158, 3, 1, "", "comb_implicit_rhs"], [158, 2, 1, "", "compute_explicit_form"], [158, 2, 1, "", "constant_symbols"], [158, 3, 1, "", "coordinates"], [158, 3, 1, "", "dyn_implicit_mat"], [158, 3, 1, "", "dyn_implicit_rhs"], [158, 2, 1, "", "dynamic_symbols"], [158, 3, 1, "", "kin_explicit_rhs"], [158, 3, 1, "", "loads"], [158, 3, 1, "", "speeds"], [158, 3, 1, "", "states"]], "sympy.physics.mechanics.system.System": [[158, 3, 1, "", "actuators"], [158, 2, 1, "", "add_actuators"], [158, 2, 1, "", "add_auxiliary_speeds"], [158, 2, 1, "", "add_bodies"], [158, 2, 1, "", "add_coordinates"], [158, 2, 1, "", "add_holonomic_constraints"], [158, 2, 1, "", "add_joints"], [158, 2, 1, "", "add_kdes"], [158, 2, 1, "", "add_loads"], [158, 2, 1, "", "add_nonholonomic_constraints"], [158, 2, 1, "", "add_speeds"], [158, 2, 1, "", "apply_uniform_gravity"], [158, 3, 1, "", "bodies"], [158, 3, 1, "", "eom_method"], [158, 3, 1, "", "fixed_point"], [158, 3, 1, "", "forcing"], [158, 3, 1, "", "forcing_full"], [158, 2, 1, "", "form_eoms"], [158, 3, 1, "", "frame"], [158, 2, 1, "", "from_newtonian"], [158, 2, 1, "", "get_body"], [158, 2, 1, "", "get_joint"], [158, 3, 1, "", "holonomic_constraints"], [158, 3, 1, "", "joints"], [158, 3, 1, "", "kdes"], [158, 3, 1, "", "loads"], [158, 3, 1, "", "mass_matrix"], [158, 3, 1, "", "mass_matrix_full"], [158, 3, 1, "", "nonholonomic_constraints"], [158, 3, 1, "", "q"], [158, 3, 1, "", "q_dep"], [158, 3, 1, "", "q_ind"], [158, 2, 1, "", "rhs"], [158, 3, 1, "", "u"], [158, 3, 1, "", "u_aux"], [158, 3, 1, "", "u_dep"], [158, 3, 1, "", "u_ind"], [158, 2, 1, "", "validate_system"], [158, 3, 1, "", "velocity_constraints"], [158, 3, 1, "", "x"], [158, 3, 1, "", "y"], [158, 3, 1, "", "z"]], "sympy.physics.mechanics.wrapping_geometry": [[159, 1, 1, "", "WrappingCylinder"], [159, 1, 1, "", "WrappingGeometryBase"], [159, 1, 1, "", "WrappingSphere"]], "sympy.physics.mechanics.wrapping_geometry.WrappingCylinder": [[159, 3, 1, "", "axis"], [159, 2, 1, "", "geodesic_end_vectors"], [159, 2, 1, "", "geodesic_length"], [159, 3, 1, "", "point"], [159, 2, 1, "", "point_on_surface"], [159, 3, 1, "", "radius"]], "sympy.physics.mechanics.wrapping_geometry.WrappingGeometryBase": [[159, 2, 1, "", "geodesic_end_vectors"], [159, 2, 1, "", "geodesic_length"], [159, 3, 1, "", "point"], [159, 2, 1, "", "point_on_surface"]], "sympy.physics.mechanics.wrapping_geometry.WrappingSphere": [[159, 2, 1, "", "geodesic_end_vectors"], [159, 2, 1, "", "geodesic_length"], [159, 3, 1, "", "point"], [159, 2, 1, "", "point_on_surface"], [159, 3, 1, "", "radius"]], "sympy.physics.optics": [[160, 0, 0, "-", "gaussopt"], [162, 0, 0, "-", "medium"], [163, 0, 0, "-", "polarization"], [164, 0, 0, "-", "utils"], [165, 0, 0, "-", "waves"]], "sympy.physics.optics.gaussopt": [[160, 1, 1, "", "BeamParameter"], [160, 1, 1, "", "CurvedMirror"], [160, 1, 1, "", "CurvedRefraction"], [160, 1, 1, "", "FlatMirror"], [160, 1, 1, "", "FlatRefraction"], [160, 1, 1, "", "FreeSpace"], [160, 1, 1, "", "GeometricRay"], [160, 1, 1, "", "RayTransferMatrix"], [160, 1, 1, "", "ThinLens"], [160, 4, 1, "", "conjugate_gauss_beams"], [160, 4, 1, "", "gaussian_conj"], [160, 4, 1, "", "geometric_conj_ab"], [160, 4, 1, "", "geometric_conj_af"], [160, 4, 1, "", "geometric_conj_bf"], [160, 4, 1, "", "rayleigh2waist"], [160, 4, 1, "", "waist2rayleigh"]], "sympy.physics.optics.gaussopt.BeamParameter": [[160, 3, 1, "", "divergence"], [160, 3, 1, "", "gouy"], [160, 3, 1, "", "q"], [160, 3, 1, "", "radius"], [160, 3, 1, "", "w"], [160, 3, 1, "", "w_0"], [160, 3, 1, "", "waist_approximation_limit"]], "sympy.physics.optics.gaussopt.GeometricRay": [[160, 3, 1, "", "angle"], [160, 3, 1, "", "height"]], "sympy.physics.optics.gaussopt.RayTransferMatrix": [[160, 3, 1, "", "A"], [160, 3, 1, "", "B"], [160, 3, 1, "", "C"], [160, 3, 1, "", "D"]], "sympy.physics.optics.medium": [[162, 1, 1, "", "Medium"]], "sympy.physics.optics.medium.Medium": [[162, 3, 1, "", "refractive_index"], [162, 3, 1, "", "speed"]], "sympy.physics.optics.polarization": [[163, 4, 1, "", "half_wave_retarder"], [163, 4, 1, "", "jones_2_stokes"], [163, 4, 1, "", "jones_vector"], [163, 4, 1, "", "linear_polarizer"], [163, 4, 1, "", "mueller_matrix"], [163, 4, 1, "", "phase_retarder"], [163, 4, 1, "", "polarizing_beam_splitter"], [163, 4, 1, "", "quarter_wave_retarder"], [163, 4, 1, "", "reflective_filter"], [163, 4, 1, "", "stokes_vector"], [163, 4, 1, "", "transmissive_filter"]], "sympy.physics.optics.utils": [[164, 4, 1, "", "brewster_angle"], [164, 4, 1, "", "critical_angle"], [164, 4, 1, "", "deviation"], [164, 4, 1, "", "fresnel_coefficients"], [164, 4, 1, "", "hyperfocal_distance"], [164, 4, 1, "", "lens_formula"], [164, 4, 1, "", "lens_makers_formula"], [164, 4, 1, "", "mirror_formula"], [164, 4, 1, "", "refraction_angle"], [164, 4, 1, "", "transverse_magnification"]], "sympy.physics.optics.waves": [[165, 1, 1, "", "TWave"]], "sympy.physics.optics.waves.TWave": [[165, 3, 1, "", "amplitude"], [165, 3, 1, "", "angular_velocity"], [165, 3, 1, "", "frequency"], [165, 3, 1, "", "n"], [165, 3, 1, "", "phase"], [165, 3, 1, "", "speed"], [165, 3, 1, "", "time_period"], [165, 3, 1, "", "wavelength"], [165, 3, 1, "", "wavenumber"]], "sympy.physics.paulialgebra": [[166, 4, 1, "", "evaluate_pauli_product"]], "sympy.physics.qho_1d": [[167, 4, 1, "", "E_n"], [167, 4, 1, "", "coherent_state"], [167, 4, 1, "", "psi_n"]], "sympy.physics.quantum": [[168, 0, 0, "-", "anticommutator"], [169, 0, 0, "-", "cartesian"], [170, 0, 0, "-", "cg"], [171, 0, 0, "-", "circuitplot"], [172, 0, 0, "-", "commutator"], [173, 0, 0, "-", "constants"], [174, 0, 0, "-", "dagger"], [175, 0, 0, "-", "gate"], [176, 0, 0, "-", "grover"], [177, 0, 0, "-", "hilbert"], [179, 0, 0, "-", "innerproduct"], [180, 0, 0, "-", "operator"], [181, 0, 0, "-", "operatorset"], [182, 0, 0, "-", "piab"], [183, 0, 0, "-", "qapply"], [184, 0, 0, "-", "qft"], [185, 0, 0, "-", "qubit"], [186, 0, 0, "-", "represent"], [187, 0, 0, "-", "shor"], [188, 0, 0, "-", "spin"], [189, 0, 0, "-", "state"], [190, 0, 0, "-", "tensorproduct"]], "sympy.physics.quantum.anticommutator": [[168, 1, 1, "", "AntiCommutator"]], "sympy.physics.quantum.anticommutator.AntiCommutator": [[168, 2, 1, "", "doit"]], "sympy.physics.quantum.cartesian": [[169, 1, 1, "", "PositionBra3D"], [169, 1, 1, "", "PositionKet3D"], [169, 1, 1, "", "PositionState3D"], [169, 1, 1, "", "PxBra"], [169, 1, 1, "", "PxKet"], [169, 1, 1, "", "PxOp"], [169, 1, 1, "", "XBra"], [169, 1, 1, "", "XKet"], [169, 1, 1, "", "XOp"], [169, 1, 1, "", "YOp"], [169, 1, 1, "", "ZOp"]], "sympy.physics.quantum.cartesian.PositionState3D": [[169, 3, 1, "", "position_x"], [169, 3, 1, "", "position_y"], [169, 3, 1, "", "position_z"]], "sympy.physics.quantum.cartesian.PxBra": [[169, 3, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.PxKet": [[169, 3, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.XBra": [[169, 3, 1, "", "position"]], "sympy.physics.quantum.cartesian.XKet": [[169, 3, 1, "", "position"]], "sympy.physics.quantum.cg": [[170, 1, 1, "", "CG"], [170, 1, 1, "", "Wigner3j"], [170, 1, 1, "", "Wigner6j"], [170, 1, 1, "", "Wigner9j"], [170, 4, 1, "", "cg_simp"]], "sympy.physics.quantum.circuitplot": [[171, 1, 1, "", "CircuitPlot"], [171, 4, 1, "", "CreateCGate"], [171, 1, 1, "", "Mx"], [171, 1, 1, "", "Mz"], [171, 4, 1, "", "circuit_plot"], [171, 4, 1, "", "labeller"]], "sympy.physics.quantum.circuitplot.CircuitPlot": [[171, 2, 1, "", "control_line"], [171, 2, 1, "", "control_point"], [171, 2, 1, "", "not_point"], [171, 2, 1, "", "one_qubit_box"], [171, 2, 1, "", "swap_point"], [171, 2, 1, "", "two_qubit_box"], [171, 2, 1, "", "update"]], "sympy.physics.quantum.commutator": [[172, 1, 1, "", "Commutator"]], "sympy.physics.quantum.commutator.Commutator": [[172, 2, 1, "", "doit"]], "sympy.physics.quantum.constants": [[173, 1, 1, "", "HBar"]], "sympy.physics.quantum.dagger": [[174, 1, 1, "", "Dagger"]], "sympy.physics.quantum.gate": [[175, 1, 1, "", "CGate"], [175, 1, 1, "", "CGateS"], [175, 5, 1, "", "CNOT"], [175, 1, 1, "", "CNotGate"], [175, 1, 1, "", "Gate"], [175, 5, 1, "", "H"], [175, 1, 1, "", "HadamardGate"], [175, 1, 1, "", "IdentityGate"], [175, 1, 1, "", "OneQubitGate"], [175, 5, 1, "", "Phase"], [175, 1, 1, "", "PhaseGate"], [175, 5, 1, "", "S"], [175, 5, 1, "", "SWAP"], [175, 1, 1, "", "SwapGate"], [175, 5, 1, "", "T"], [175, 1, 1, "", "TGate"], [175, 1, 1, "", "TwoQubitGate"], [175, 1, 1, "", "UGate"], [175, 5, 1, "", "X"], [175, 1, 1, "", "XGate"], [175, 5, 1, "", "Y"], [175, 1, 1, "", "YGate"], [175, 5, 1, "", "Z"], [175, 1, 1, "", "ZGate"], [175, 4, 1, "", "gate_simp"], [175, 4, 1, "", "gate_sort"], [175, 4, 1, "", "normalized"], [175, 4, 1, "", "random_circuit"]], "sympy.physics.quantum.gate.CGate": [[175, 3, 1, "", "controls"], [175, 2, 1, "", "decompose"], [175, 2, 1, "", "eval_controls"], [175, 3, 1, "", "gate"], [175, 3, 1, "", "min_qubits"], [175, 3, 1, "", "nqubits"], [175, 2, 1, "", "plot_gate"], [175, 3, 1, "", "targets"]], "sympy.physics.quantum.gate.CNotGate": [[175, 3, 1, "", "controls"], [175, 3, 1, "", "gate"], [175, 3, 1, "", "min_qubits"], [175, 3, 1, "", "targets"]], "sympy.physics.quantum.gate.Gate": [[175, 2, 1, "", "get_target_matrix"], [175, 3, 1, "", "min_qubits"], [175, 3, 1, "", "nqubits"], [175, 3, 1, "", "targets"]], "sympy.physics.quantum.gate.SwapGate": [[175, 2, 1, "", "decompose"]], "sympy.physics.quantum.gate.UGate": [[175, 2, 1, "", "get_target_matrix"], [175, 3, 1, "", "targets"]], "sympy.physics.quantum.grover": [[176, 1, 1, "", "OracleGate"], [176, 1, 1, "", "WGate"], [176, 4, 1, "", "apply_grover"], [176, 4, 1, "", "grover_iteration"], [176, 4, 1, "", "superposition_basis"]], "sympy.physics.quantum.grover.OracleGate": [[176, 3, 1, "", "search_function"], [176, 3, 1, "", "targets"]], "sympy.physics.quantum.hilbert": [[177, 1, 1, "", "ComplexSpace"], [177, 1, 1, "", "DirectSumHilbertSpace"], [177, 1, 1, "", "FockSpace"], [177, 1, 1, "", "HilbertSpace"], [177, 1, 1, "", "L2"], [177, 1, 1, "", "TensorPowerHilbertSpace"], [177, 1, 1, "", "TensorProductHilbertSpace"]], "sympy.physics.quantum.hilbert.DirectSumHilbertSpace": [[177, 2, 1, "", "eval"], [177, 3, 1, "", "spaces"]], "sympy.physics.quantum.hilbert.HilbertSpace": [[177, 3, 1, "", "dimension"]], "sympy.physics.quantum.hilbert.TensorProductHilbertSpace": [[177, 2, 1, "", "eval"], [177, 3, 1, "", "spaces"]], "sympy.physics.quantum.innerproduct": [[179, 1, 1, "", "InnerProduct"]], "sympy.physics.quantum.operator": [[180, 1, 1, "", "DifferentialOperator"], [180, 1, 1, "", "HermitianOperator"], [180, 1, 1, "", "IdentityOperator"], [180, 1, 1, "", "Operator"], [180, 1, 1, "", "OuterProduct"], [180, 1, 1, "", "UnitaryOperator"]], "sympy.physics.quantum.operator.DifferentialOperator": [[180, 3, 1, "", "expr"], [180, 3, 1, "", "free_symbols"], [180, 3, 1, "", "function"], [180, 3, 1, "", "variables"]], "sympy.physics.quantum.operator.OuterProduct": [[180, 3, 1, "", "bra"], [180, 3, 1, "", "ket"]], "sympy.physics.quantum.operatorset": [[181, 4, 1, "", "operators_to_state"], [181, 4, 1, "", "state_to_operators"]], "sympy.physics.quantum.piab": [[182, 1, 1, "", "PIABBra"], [182, 1, 1, "", "PIABHamiltonian"], [182, 1, 1, "", "PIABKet"]], "sympy.physics.quantum.qapply": [[183, 4, 1, "", "qapply"]], "sympy.physics.quantum.qft": [[184, 1, 1, "", "IQFT"], [184, 1, 1, "", "QFT"], [184, 5, 1, "", "Rk"], [184, 1, 1, "", "RkGate"]], "sympy.physics.quantum.qft.IQFT": [[184, 2, 1, "", "decompose"]], "sympy.physics.quantum.qft.QFT": [[184, 2, 1, "", "decompose"]], "sympy.physics.quantum.qubit": [[185, 1, 1, "", "IntQubit"], [185, 1, 1, "", "IntQubitBra"], [185, 1, 1, "", "Qubit"], [185, 1, 1, "", "QubitBra"], [185, 4, 1, "", "matrix_to_density"], [185, 4, 1, "", "matrix_to_qubit"], [185, 4, 1, "", "measure_all"], [185, 4, 1, "", "measure_all_oneshot"], [185, 4, 1, "", "measure_partial"], [185, 4, 1, "", "measure_partial_oneshot"], [185, 4, 1, "", "qubit_to_matrix"]], "sympy.physics.quantum.represent": [[186, 4, 1, "", "enumerate_states"], [186, 4, 1, "", "get_basis"], [186, 4, 1, "", "integrate_result"], [186, 4, 1, "", "rep_expectation"], [186, 4, 1, "", "rep_innerproduct"], [186, 4, 1, "", "represent"]], "sympy.physics.quantum.shor": [[187, 1, 1, "", "CMod"], [187, 4, 1, "", "period_find"], [187, 4, 1, "", "shor"]], "sympy.physics.quantum.shor.CMod": [[187, 3, 1, "", "N"], [187, 3, 1, "", "a"], [187, 3, 1, "", "t"]], "sympy.physics.quantum.spin": [[188, 1, 1, "", "J2Op"], [188, 1, 1, "", "JxBra"], [188, 1, 1, "", "JxBraCoupled"], [188, 1, 1, "", "JxKet"], [188, 1, 1, "", "JxKetCoupled"], [188, 1, 1, "", "JyBra"], [188, 1, 1, "", "JyBraCoupled"], [188, 1, 1, "", "JyKet"], [188, 1, 1, "", "JyKetCoupled"], [188, 1, 1, "", "JzBra"], [188, 1, 1, "", "JzBraCoupled"], [188, 1, 1, "", "JzKet"], [188, 1, 1, "", "JzKetCoupled"], [188, 1, 1, "", "JzOp"], [188, 1, 1, "", "Rotation"], [188, 1, 1, "", "WignerD"], [188, 4, 1, "", "couple"], [188, 4, 1, "", "uncouple"]], "sympy.physics.quantum.spin.Rotation": [[188, 2, 1, "", "D"], [188, 2, 1, "", "d"]], "sympy.physics.quantum.state": [[189, 1, 1, "", "Bra"], [189, 1, 1, "", "BraBase"], [189, 1, 1, "", "Ket"], [189, 1, 1, "", "KetBase"], [189, 1, 1, "", "OrthogonalBra"], [189, 1, 1, "", "OrthogonalKet"], [189, 1, 1, "", "OrthogonalState"], [189, 1, 1, "", "State"], [189, 1, 1, "", "StateBase"], [189, 1, 1, "", "TimeDepBra"], [189, 1, 1, "", "TimeDepKet"], [189, 1, 1, "", "TimeDepState"], [189, 1, 1, "", "Wavefunction"]], "sympy.physics.quantum.state.StateBase": [[189, 3, 1, "", "dual"], [189, 2, 1, "", "dual_class"], [189, 3, 1, "", "operators"]], "sympy.physics.quantum.state.TimeDepState": [[189, 3, 1, "", "label"], [189, 3, 1, "", "time"]], "sympy.physics.quantum.state.Wavefunction": [[189, 3, 1, "", "expr"], [189, 3, 1, "", "is_commutative"], [189, 3, 1, "", "is_normalized"], [189, 3, 1, "", "limits"], [189, 3, 1, "", "norm"], [189, 2, 1, "", "normalize"], [189, 2, 1, "", "prob"], [189, 3, 1, "", "variables"]], "sympy.physics.quantum.tensorproduct": [[190, 1, 1, "", "TensorProduct"], [190, 4, 1, "", "tensor_product_simp"]], "sympy.physics.secondquant": [[191, 1, 1, "", "AnnihilateBoson"], [191, 1, 1, "", "AnnihilateFermion"], [191, 1, 1, "", "AntiSymmetricTensor"], [191, 5, 1, "", "B"], [191, 5, 1, "", "BBra"], [191, 5, 1, "", "BKet"], [191, 5, 1, "", "Bd"], [191, 1, 1, "", "BosonicBasis"], [191, 1, 1, "", "Commutator"], [191, 1, 1, "", "CreateBoson"], [191, 1, 1, "", "CreateFermion"], [191, 1, 1, "", "Dagger"], [191, 5, 1, "", "F"], [191, 5, 1, "", "FBra"], [191, 5, 1, "", "FKet"], [191, 5, 1, "", "Fd"], [191, 1, 1, "", "FixedBosonicBasis"], [191, 1, 1, "", "FockState"], [191, 1, 1, "", "FockStateBosonBra"], [191, 1, 1, "", "FockStateBosonKet"], [191, 1, 1, "", "FockStateBra"], [191, 1, 1, "", "FockStateFermionBra"], [191, 1, 1, "", "FockStateFermionKet"], [191, 1, 1, "", "FockStateKet"], [191, 1, 1, "", "InnerProduct"], [191, 1, 1, "", "KroneckerDelta"], [191, 1, 1, "", "NO"], [191, 1, 1, "", "PermutationOperator"], [191, 1, 1, "", "VarBosonicBasis"], [191, 4, 1, "", "apply_operators"], [191, 4, 1, "", "contraction"], [191, 4, 1, "", "evaluate_deltas"], [191, 4, 1, "", "matrix_rep"], [191, 4, 1, "", "simplify_index_permutations"], [191, 4, 1, "", "substitute_dummies"], [191, 4, 1, "", "wicks"]], "sympy.physics.secondquant.AnnihilateBoson": [[191, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.AnnihilateFermion": [[191, 2, 1, "", "apply_operator"], [191, 3, 1, "", "is_only_q_annihilator"], [191, 3, 1, "", "is_only_q_creator"], [191, 3, 1, "", "is_q_annihilator"], [191, 3, 1, "", "is_q_creator"]], "sympy.physics.secondquant.AntiSymmetricTensor": [[191, 3, 1, "", "lower"], [191, 3, 1, "", "symbol"], [191, 3, 1, "", "upper"]], "sympy.physics.secondquant.Commutator": [[191, 2, 1, "", "doit"], [191, 2, 1, "", "eval"]], "sympy.physics.secondquant.CreateBoson": [[191, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.CreateFermion": [[191, 2, 1, "", "apply_operator"], [191, 3, 1, "", "is_only_q_annihilator"], [191, 3, 1, "", "is_only_q_creator"], [191, 3, 1, "", "is_q_annihilator"], [191, 3, 1, "", "is_q_creator"]], "sympy.physics.secondquant.Dagger": [[191, 2, 1, "", "eval"]], "sympy.physics.secondquant.FixedBosonicBasis": [[191, 2, 1, "", "index"], [191, 2, 1, "", "state"]], "sympy.physics.secondquant.InnerProduct": [[191, 3, 1, "", "bra"], [191, 3, 1, "", "ket"]], "sympy.physics.secondquant.KroneckerDelta": [[191, 2, 1, "", "eval"], [191, 3, 1, "", "indices_contain_equal_information"], [191, 3, 1, "", "is_above_fermi"], [191, 3, 1, "", "is_below_fermi"], [191, 3, 1, "", "is_only_above_fermi"], [191, 3, 1, "", "is_only_below_fermi"], [191, 3, 1, "", "killable_index"], [191, 3, 1, "", "preferred_index"]], "sympy.physics.secondquant.NO": [[191, 2, 1, "", "doit"], [191, 2, 1, "", "get_subNO"], [191, 3, 1, "", "has_q_annihilators"], [191, 3, 1, "", "has_q_creators"], [191, 2, 1, "", "iter_q_annihilators"], [191, 2, 1, "", "iter_q_creators"]], "sympy.physics.secondquant.PermutationOperator": [[191, 2, 1, "", "get_permuted"]], "sympy.physics.secondquant.VarBosonicBasis": [[191, 2, 1, "", "index"], [191, 2, 1, "", "state"]], "sympy.physics.sho": [[192, 4, 1, "", "E_nl"], [192, 4, 1, "", "R_nl"]], "sympy.physics.units": [[193, 0, 0, "-", "dimensions"], [197, 0, 0, "-", "prefixes"], [198, 0, 0, "-", "quantities"], [199, 0, 0, "-", "unitsystem"], [198, 0, 0, "-", "util"]], "sympy.physics.units.dimensions": [[193, 1, 1, "", "Dimension"], [193, 1, 1, "", "DimensionSystem"]], "sympy.physics.units.dimensions.Dimension": [[193, 2, 1, "", "has_integer_powers"]], "sympy.physics.units.dimensions.DimensionSystem": [[193, 3, 1, "", "can_transf_matrix"], [193, 3, 1, "", "dim"], [193, 2, 1, "", "dim_can_vector"], [193, 2, 1, "", "dim_vector"], [193, 3, 1, "", "inv_can_transf_matrix"], [193, 3, 1, "", "is_consistent"], [193, 2, 1, "", "is_dimensionless"], [193, 3, 1, "", "list_can_dims"], [193, 2, 1, "", "print_dim_base"]], "sympy.physics.units.prefixes": [[197, 1, 1, "", "Prefix"]], "sympy.physics.units.quantities": [[198, 1, 1, "", "Quantity"]], "sympy.physics.units.quantities.Quantity": [[198, 3, 1, "", "abbrev"], [198, 2, 1, "", "convert_to"], [198, 3, 1, "", "free_symbols"], [198, 3, 1, "", "is_prefixed"], [198, 3, 1, "", "scale_factor"], [198, 2, 1, "", "set_global_relative_scale_factor"]], "sympy.physics.units.unitsystem": [[199, 1, 1, "", "UnitSystem"]], "sympy.physics.units.unitsystem.UnitSystem": [[199, 3, 1, "", "dim"], [199, 2, 1, "", "extend"], [199, 2, 1, "", "get_units_non_prefixed"], [199, 3, 1, "", "is_consistent"]], "sympy.physics.units.util": [[198, 4, 1, "", "convert_to"]], "sympy.physics.vector": [[202, 4, 1, "", "dynamicsymbols"], [204, 0, 0, "-", "functions"], [204, 0, 0, "-", "point"]], "sympy.physics.vector.dyadic": [[200, 1, 1, "", "Dyadic"]], "sympy.physics.vector.dyadic.Dyadic": [[200, 2, 1, "", "applyfunc"], [200, 2, 1, "", "cross"], [200, 2, 1, "", "doit"], [200, 2, 1, "", "dot"], [200, 2, 1, "", "dt"], [200, 2, 1, "", "express"], [200, 3, 1, "", "func"], [200, 2, 1, "", "simplify"], [200, 2, 1, "", "subs"], [200, 2, 1, "", "to_matrix"], [200, 2, 1, "", "xreplace"]], "sympy.physics.vector.fieldfunctions": [[201, 4, 1, "", "curl"], [201, 4, 1, "", "divergence"], [201, 4, 1, "", "gradient"], [201, 4, 1, "", "is_conservative"], [201, 4, 1, "", "is_solenoidal"], [201, 4, 1, "", "scalar_potential"], [201, 4, 1, "", "scalar_potential_difference"]], "sympy.physics.vector.frame": [[200, 1, 1, "", "CoordinateSym"], [200, 1, 1, "", "ReferenceFrame"]], "sympy.physics.vector.frame.ReferenceFrame": [[200, 2, 1, "", "ang_acc_in"], [200, 2, 1, "", "ang_vel_in"], [200, 2, 1, "", "dcm"], [200, 2, 1, "", "orient"], [200, 2, 1, "", "orient_axis"], [200, 2, 1, "", "orient_body_fixed"], [200, 2, 1, "", "orient_dcm"], [200, 2, 1, "", "orient_quaternion"], [200, 2, 1, "", "orient_space_fixed"], [200, 2, 1, "", "orientnew"], [200, 2, 1, "", "partial_velocity"], [200, 2, 1, "", "set_ang_acc"], [200, 2, 1, "", "set_ang_vel"], [200, 3, 1, "", "u"], [200, 2, 1, "", "variable_map"], [200, 3, 1, "", "x"], [200, 3, 1, "", "xx"], [200, 3, 1, "", "xy"], [200, 3, 1, "", "xz"], [200, 3, 1, "", "y"], [200, 3, 1, "", "yx"], [200, 3, 1, "", "yy"], [200, 3, 1, "", "yz"], [200, 3, 1, "", "z"], [200, 3, 1, "", "zx"], [200, 3, 1, "", "zy"], [200, 3, 1, "", "zz"]], "sympy.physics.vector.functions": [[202, 4, 1, "", "cross"], [202, 4, 1, "", "dot"], [202, 4, 1, "", "express"], [204, 4, 1, "", "get_motion_params"], [204, 4, 1, "", "kinematic_equations"], [202, 4, 1, "", "outer"], [204, 4, 1, "", "partial_velocity"], [202, 4, 1, "", "time_derivative"]], "sympy.physics.vector.point": [[204, 1, 1, "", "Point"]], "sympy.physics.vector.point.Point": [[204, 2, 1, "", "a1pt_theory"], [204, 2, 1, "", "a2pt_theory"], [204, 2, 1, "", "acc"], [204, 2, 1, "", "locatenew"], [204, 2, 1, "", "partial_velocity"], [204, 2, 1, "", "pos_from"], [204, 2, 1, "", "set_acc"], [204, 2, 1, "", "set_pos"], [204, 2, 1, "", "set_vel"], [204, 2, 1, "", "v1pt_theory"], [204, 2, 1, "", "v2pt_theory"], [204, 2, 1, "", "vel"]], "sympy.physics.vector.printing": [[205, 4, 1, "", "init_vprinting"], [205, 4, 1, "", "vlatex"], [205, 4, 1, "", "vpprint"], [205, 4, 1, "", "vprint"]], "sympy.physics.vector.vector": [[200, 1, 1, "", "Vector"]], "sympy.physics.vector.vector.Vector": [[200, 2, 1, "", "angle_between"], [200, 2, 1, "", "applyfunc"], [200, 2, 1, "", "cross"], [200, 2, 1, "", "diff"], [200, 2, 1, "", "doit"], [200, 2, 1, "", "dot"], [200, 2, 1, "", "dt"], [200, 2, 1, "", "express"], [200, 2, 1, "", "free_dynamicsymbols"], [200, 2, 1, "", "free_symbols"], [200, 3, 1, "", "func"], [200, 2, 1, "", "magnitude"], [200, 2, 1, "", "normalize"], [200, 2, 1, "", "outer"], [200, 2, 1, "", "separate"], [200, 2, 1, "", "simplify"], [200, 2, 1, "", "subs"], [200, 2, 1, "", "to_matrix"], [200, 2, 1, "", "xreplace"]], "sympy.physics.wigner": [[206, 4, 1, "", "clebsch_gordan"], [206, 4, 1, "", "dot_rot_grad_Ynm"], [206, 4, 1, "", "gaunt"], [206, 4, 1, "", "racah"], [206, 4, 1, "", "real_gaunt"], [206, 4, 1, "", "wigner_3j"], [206, 4, 1, "", "wigner_6j"], [206, 4, 1, "", "wigner_9j"], [206, 4, 1, "", "wigner_d"], [206, 4, 1, "", "wigner_d_small"]], "sympy.plotting": [[207, 0, 0, "-", "plot"], [207, 0, 0, "-", "pygletplot"]], "sympy.plotting.plot": [[207, 1, 1, "", "MatplotlibBackend"], [207, 1, 1, "", "Plot"], [207, 1, 1, "", "PlotGrid"], [207, 1, 1, "", "TextBackend"], [207, 4, 1, "", "plot"], [207, 4, 1, "", "plot3d"], [207, 4, 1, "", "plot3d_parametric_line"], [207, 4, 1, "", "plot3d_parametric_surface"], [207, 4, 1, "", "plot_parametric"]], "sympy.plotting.plot.MatplotlibBackend": [[207, 2, 1, "", "get_segments"], [207, 2, 1, "", "process_series"]], "sympy.plotting.plot.Plot": [[207, 3, 1, "", "annotations"], [207, 2, 1, "", "append"], [207, 2, 1, "", "extend"], [207, 3, 1, "", "fill"], [207, 3, 1, "", "markers"], [207, 3, 1, "", "rectangles"]], "sympy.plotting.plot_implicit": [[207, 4, 1, "", "plot_implicit"]], "sympy.plotting.series": [[207, 1, 1, "", "BaseSeries"], [207, 1, 1, "", "ImplicitSeries"], [207, 1, 1, "", "Line2DBaseSeries"], [207, 1, 1, "", "Line3DBaseSeries"], [207, 1, 1, "", "LineOver1DRangeSeries"], [207, 1, 1, "", "Parametric2DLineSeries"], [207, 1, 1, "", "Parametric3DLineSeries"], [207, 1, 1, "", "ParametricSurfaceSeries"], [207, 1, 1, "", "SurfaceBaseSeries"], [207, 1, 1, "", "SurfaceOver2DRangeSeries"]], "sympy.plotting.series.BaseSeries": [[207, 2, 1, "", "eval_color_func"], [207, 3, 1, "", "expr"], [207, 2, 1, "", "get_data"], [207, 2, 1, "", "get_label"], [207, 3, 1, "", "n"], [207, 3, 1, "", "params"]], "sympy.plotting.series.ImplicitSeries": [[207, 2, 1, "", "get_data"], [207, 2, 1, "", "get_label"]], "sympy.plotting.series.Line2DBaseSeries": [[207, 2, 1, "", "get_data"]], "sympy.plotting.series.LineOver1DRangeSeries": [[207, 2, 1, "", "get_points"]], "sympy.plotting.series.ParametricSurfaceSeries": [[207, 2, 1, "", "get_data"], [207, 2, 1, "", "get_meshes"]], "sympy.plotting.series.SurfaceOver2DRangeSeries": [[207, 2, 1, "", "get_data"], [207, 2, 1, "", "get_meshes"]], "sympy.plotting.textplot": [[207, 4, 1, "", "textplot"]], "sympy.polys": [[214, 0, 0, "-", "polyconfig"], [214, 0, 0, "-", "polyoptions"], [219, 0, 0, "-", "solvers"]], "sympy.polys.agca.extensions": [[208, 1, 1, "", "ExtensionElement"], [208, 1, 1, "", "MonogenicFiniteExtension"]], "sympy.polys.agca.extensions.ExtensionElement": [[208, 2, 1, "", "inverse"]], "sympy.polys.agca.extensions.MonogenicFiniteExtension": [[208, 5, 1, "", "dtype"]], "sympy.polys.agca.homomorphisms": [[208, 1, 1, "", "ModuleHomomorphism"], [208, 4, 1, "", "homomorphism"]], "sympy.polys.agca.homomorphisms.ModuleHomomorphism": [[208, 2, 1, "", "image"], [208, 2, 1, "", "is_injective"], [208, 2, 1, "", "is_isomorphism"], [208, 2, 1, "", "is_surjective"], [208, 2, 1, "", "is_zero"], [208, 2, 1, "", "kernel"], [208, 2, 1, "", "quotient_codomain"], [208, 2, 1, "", "quotient_domain"], [208, 2, 1, "", "restrict_codomain"], [208, 2, 1, "", "restrict_domain"]], "sympy.polys.agca.ideals": [[208, 1, 1, "", "Ideal"]], "sympy.polys.agca.ideals.Ideal": [[208, 2, 1, "", "contains"], [208, 2, 1, "", "depth"], [208, 2, 1, "", "height"], [208, 2, 1, "", "intersect"], [208, 2, 1, "", "is_maximal"], [208, 2, 1, "", "is_primary"], [208, 2, 1, "", "is_prime"], [208, 2, 1, "", "is_principal"], [208, 2, 1, "", "is_radical"], [208, 2, 1, "", "is_whole_ring"], [208, 2, 1, "", "is_zero"], [208, 2, 1, "", "product"], [208, 2, 1, "", "quotient"], [208, 2, 1, "", "radical"], [208, 2, 1, "", "reduce_element"], [208, 2, 1, "", "saturate"], [208, 2, 1, "", "subset"], [208, 2, 1, "", "union"]], "sympy.polys.agca.modules": [[208, 1, 1, "", "FreeModule"], [208, 1, 1, "", "FreeModuleElement"], [208, 1, 1, "", "Module"], [208, 1, 1, "", "QuotientModule"], [208, 1, 1, "", "QuotientModuleElement"], [208, 1, 1, "", "SubModule"], [208, 1, 1, "", "SubQuotientModule"]], "sympy.polys.agca.modules.FreeModule": [[208, 2, 1, "", "basis"], [208, 2, 1, "", "convert"], [208, 5, 1, "", "dtype"], [208, 2, 1, "", "identity_hom"], [208, 2, 1, "", "is_submodule"], [208, 2, 1, "", "is_zero"], [208, 2, 1, "", "multiply_ideal"], [208, 2, 1, "", "quotient_module"]], "sympy.polys.agca.modules.Module": [[208, 2, 1, "", "contains"], [208, 2, 1, "", "convert"], [208, 2, 1, "", "identity_hom"], [208, 2, 1, "", "is_submodule"], [208, 2, 1, "", "is_zero"], [208, 2, 1, "", "multiply_ideal"], [208, 2, 1, "", "quotient_module"], [208, 2, 1, "", "submodule"], [208, 2, 1, "", "subset"]], "sympy.polys.agca.modules.QuotientModule": [[208, 2, 1, "", "convert"], [208, 5, 1, "", "dtype"], [208, 2, 1, "", "identity_hom"], [208, 2, 1, "", "is_submodule"], [208, 2, 1, "", "is_zero"], [208, 2, 1, "", "quotient_hom"], [208, 2, 1, "", "submodule"]], "sympy.polys.agca.modules.QuotientModuleElement": [[208, 2, 1, "", "eq"]], "sympy.polys.agca.modules.SubModule": [[208, 2, 1, "", "convert"], [208, 2, 1, "", "identity_hom"], [208, 2, 1, "", "in_terms_of_generators"], [208, 2, 1, "", "inclusion_hom"], [208, 2, 1, "", "intersect"], [208, 2, 1, "", "is_full_module"], [208, 2, 1, "", "is_submodule"], [208, 2, 1, "", "is_zero"], [208, 2, 1, "", "module_quotient"], [208, 2, 1, "", "multiply_ideal"], [208, 2, 1, "", "quotient_module"], [208, 2, 1, "", "reduce_element"], [208, 2, 1, "", "submodule"], [208, 2, 1, "", "syzygy_module"], [208, 2, 1, "", "union"]], "sympy.polys.agca.modules.SubQuotientModule": [[208, 2, 1, "", "is_full_module"], [208, 2, 1, "", "quotient_hom"]], "sympy.polys.appellseqs": [[217, 4, 1, "", "andre_poly"], [217, 4, 1, "", "bernoulli_c_poly"], [217, 4, 1, "", "bernoulli_poly"], [217, 4, 1, "", "euler_poly"], [217, 4, 1, "", "genocchi_poly"]], "sympy.polys.constructor": [[217, 4, 1, "", "construct_domain"]], "sympy.polys.densearith": [[214, 4, 1, "", "dmp_abs"], [214, 4, 1, "", "dmp_add"], [214, 4, 1, "", "dmp_add_ground"], [214, 4, 1, "", "dmp_add_mul"], [214, 4, 1, "", "dmp_add_term"], [214, 4, 1, "", "dmp_div"], [214, 4, 1, "", "dmp_expand"], [214, 4, 1, "", "dmp_exquo"], [214, 4, 1, "", "dmp_exquo_ground"], [214, 4, 1, "", "dmp_ff_div"], [214, 4, 1, "", "dmp_l1_norm"], [214, 4, 1, "", "dmp_max_norm"], [214, 4, 1, "", "dmp_mul"], [214, 4, 1, "", "dmp_mul_ground"], [214, 4, 1, "", "dmp_mul_term"], [214, 4, 1, "", "dmp_neg"], [214, 4, 1, "", "dmp_pdiv"], [214, 4, 1, "", "dmp_pexquo"], [214, 4, 1, "", "dmp_pow"], [214, 4, 1, "", "dmp_pquo"], [214, 4, 1, "", "dmp_prem"], [214, 4, 1, "", "dmp_quo"], [214, 4, 1, "", "dmp_quo_ground"], [214, 4, 1, "", "dmp_rem"], [214, 4, 1, "", "dmp_rr_div"], [214, 4, 1, "", "dmp_sqr"], [214, 4, 1, "", "dmp_sub"], [214, 4, 1, "", "dmp_sub_ground"], [214, 4, 1, "", "dmp_sub_mul"], [214, 4, 1, "", "dmp_sub_term"], [214, 4, 1, "", "dup_lshift"], [214, 4, 1, "", "dup_rshift"]], "sympy.polys.densebasic": [[214, 4, 1, "", "dmp_LC"], [214, 4, 1, "", "dmp_TC"], [214, 4, 1, "", "dmp_apply_pairs"], [214, 4, 1, "", "dmp_convert"], [214, 4, 1, "", "dmp_copy"], [214, 4, 1, "", "dmp_deflate"], [214, 4, 1, "", "dmp_degree"], [214, 4, 1, "", "dmp_degree_in"], [214, 4, 1, "", "dmp_degree_list"], [214, 4, 1, "", "dmp_eject"], [214, 4, 1, "", "dmp_exclude"], [214, 4, 1, "", "dmp_from_dict"], [214, 4, 1, "", "dmp_from_sympy"], [214, 4, 1, "", "dmp_ground"], [214, 4, 1, "", "dmp_ground_LC"], [214, 4, 1, "", "dmp_ground_TC"], [214, 4, 1, "", "dmp_ground_nth"], [214, 4, 1, "", "dmp_ground_p"], [214, 4, 1, "", "dmp_grounds"], [214, 4, 1, "", "dmp_include"], [214, 4, 1, "", "dmp_inflate"], [214, 4, 1, "", "dmp_inject"], [214, 4, 1, "", "dmp_list_terms"], [214, 4, 1, "", "dmp_multi_deflate"], [214, 4, 1, "", "dmp_negative_p"], [214, 4, 1, "", "dmp_nest"], [214, 4, 1, "", "dmp_normal"], [214, 4, 1, "", "dmp_nth"], [214, 4, 1, "", "dmp_one"], [214, 4, 1, "", "dmp_one_p"], [214, 4, 1, "", "dmp_permute"], [214, 4, 1, "", "dmp_positive_p"], [214, 4, 1, "", "dmp_raise"], [214, 4, 1, "", "dmp_slice"], [214, 4, 1, "", "dmp_strip"], [214, 4, 1, "", "dmp_swap"], [214, 4, 1, "", "dmp_terms_gcd"], [214, 4, 1, "", "dmp_to_dict"], [214, 4, 1, "", "dmp_to_tuple"], [214, 4, 1, "", "dmp_true_LT"], [214, 4, 1, "", "dmp_validate"], [214, 4, 1, "", "dmp_zero"], [214, 4, 1, "", "dmp_zero_p"], [214, 4, 1, "", "dmp_zeros"], [214, 4, 1, "", "dup_random"], [214, 4, 1, "", "dup_reverse"]], "sympy.polys.densetools": [[214, 4, 1, "", "dmp_clear_denoms"], [214, 4, 1, "", "dmp_compose"], [214, 4, 1, "", "dmp_diff"], [214, 4, 1, "", "dmp_diff_eval_in"], [214, 4, 1, "", "dmp_diff_in"], [214, 4, 1, "", "dmp_eval"], [214, 4, 1, "", "dmp_eval_in"], [214, 4, 1, "", "dmp_eval_tail"], [214, 4, 1, "", "dmp_ground_content"], [214, 4, 1, "", "dmp_ground_extract"], [214, 4, 1, "", "dmp_ground_monic"], [214, 4, 1, "", "dmp_ground_primitive"], [214, 4, 1, "", "dmp_ground_trunc"], [214, 4, 1, "", "dmp_integrate"], [214, 4, 1, "", "dmp_integrate_in"], [214, 4, 1, "", "dmp_lift"], [214, 4, 1, "", "dmp_revert"], [214, 4, 1, "", "dmp_trunc"], [214, 4, 1, "", "dup_content"], [214, 4, 1, "", "dup_decompose"], [214, 4, 1, "", "dup_extract"], [214, 4, 1, "", "dup_mirror"], [214, 4, 1, "", "dup_monic"], [214, 4, 1, "", "dup_primitive"], [214, 4, 1, "", "dup_real_imag"], [214, 4, 1, "", "dup_scale"], [214, 4, 1, "", "dup_shift"], [214, 4, 1, "", "dup_sign_variations"], [214, 4, 1, "", "dup_transform"]], "sympy.polys.dispersion": [[217, 4, 1, "", "dispersion"], [217, 4, 1, "", "dispersionset"]], "sympy.polys.distributedmodules": [[214, 4, 1, "", "sdm_LC"], [214, 4, 1, "", "sdm_LM"], [214, 4, 1, "", "sdm_LT"], [214, 4, 1, "", "sdm_add"], [214, 4, 1, "", "sdm_deg"], [214, 4, 1, "", "sdm_ecart"], [214, 4, 1, "", "sdm_from_dict"], [214, 4, 1, "", "sdm_from_vector"], [214, 4, 1, "", "sdm_groebner"], [214, 4, 1, "", "sdm_monomial_deg"], [214, 4, 1, "", "sdm_monomial_divides"], [214, 4, 1, "", "sdm_monomial_mul"], [214, 4, 1, "", "sdm_mul_term"], [214, 4, 1, "", "sdm_nf_mora"], [214, 4, 1, "", "sdm_spoly"], [214, 4, 1, "", "sdm_to_dict"], [214, 4, 1, "", "sdm_to_vector"], [214, 4, 1, "", "sdm_zero"]], "sympy.polys.domains": [[212, 1, 1, "", "AlgebraicField"], [212, 1, 1, "", "ComplexField"], [212, 1, 1, "", "ExpressionDomain"], [212, 1, 1, "", "FiniteField"], [212, 1, 1, "", "FractionField"], [212, 1, 1, "", "GMPYFiniteField"], [212, 1, 1, "", "GMPYIntegerRing"], [212, 1, 1, "", "GMPYRationalField"], [212, 1, 1, "", "IntegerRing"], [212, 1, 1, "", "PolynomialRing"], [212, 1, 1, "", "PythonFiniteField"], [212, 1, 1, "", "PythonIntegerRing"], [212, 1, 1, "", "PythonRationalField"], [212, 1, 1, "", "RationalField"], [212, 1, 1, "", "RealField"]], "sympy.polys.domains.AlgebraicField": [[212, 2, 1, "", "algebraic_field"], [212, 2, 1, "", "denom"], [212, 2, 1, "", "discriminant"], [212, 5, 1, "", "dtype"], [212, 5, 1, "", "ext"], [212, 2, 1, "", "from_AlgebraicField"], [212, 2, 1, "", "from_GaussianIntegerRing"], [212, 2, 1, "", "from_GaussianRationalField"], [212, 2, 1, "", "from_QQ"], [212, 2, 1, "", "from_QQ_gmpy"], [212, 2, 1, "", "from_QQ_python"], [212, 2, 1, "", "from_RealField"], [212, 2, 1, "", "from_ZZ"], [212, 2, 1, "", "from_ZZ_gmpy"], [212, 2, 1, "", "from_ZZ_python"], [212, 2, 1, "", "from_sympy"], [212, 2, 1, "", "galois_group"], [212, 2, 1, "", "get_ring"], [212, 2, 1, "", "integral_basis"], [212, 2, 1, "", "is_negative"], [212, 2, 1, "", "is_nonnegative"], [212, 2, 1, "", "is_nonpositive"], [212, 2, 1, "", "is_positive"], [212, 2, 1, "", "maximal_order"], [212, 5, 1, "", "mod"], [212, 2, 1, "", "numer"], [212, 5, 1, "", "orig_ext"], [212, 2, 1, "", "primes_above"], [212, 2, 1, "", "to_alg_num"], [212, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ComplexField": [[212, 2, 1, "", "almosteq"], [212, 2, 1, "", "exsqrt"], [212, 2, 1, "", "from_sympy"], [212, 2, 1, "", "gcd"], [212, 2, 1, "", "get_exact"], [212, 2, 1, "", "get_ring"], [212, 2, 1, "", "is_negative"], [212, 2, 1, "", "is_nonnegative"], [212, 2, 1, "", "is_nonpositive"], [212, 2, 1, "", "is_positive"], [212, 2, 1, "", "is_square"], [212, 2, 1, "", "lcm"], [212, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ExpressionDomain": [[212, 1, 1, "", "Expression"], [212, 2, 1, "", "denom"], [212, 5, 1, "", "dtype"], [212, 2, 1, "", "from_AlgebraicField"], [212, 2, 1, "", "from_ComplexField"], [212, 2, 1, "", "from_ExpressionDomain"], [212, 2, 1, "", "from_FractionField"], [212, 2, 1, "", "from_GaussianIntegerRing"], [212, 2, 1, "", "from_GaussianRationalField"], [212, 2, 1, "", "from_PolynomialRing"], [212, 2, 1, "", "from_QQ"], [212, 2, 1, "", "from_QQ_gmpy"], [212, 2, 1, "", "from_QQ_python"], [212, 2, 1, "", "from_RealField"], [212, 2, 1, "", "from_ZZ"], [212, 2, 1, "", "from_ZZ_gmpy"], [212, 2, 1, "", "from_ZZ_python"], [212, 2, 1, "", "from_sympy"], [212, 2, 1, "", "get_field"], [212, 2, 1, "", "get_ring"], [212, 2, 1, "", "is_negative"], [212, 2, 1, "", "is_nonnegative"], [212, 2, 1, "", "is_nonpositive"], [212, 2, 1, "", "is_positive"], [212, 2, 1, "", "numer"], [212, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FiniteField": [[212, 2, 1, "", "characteristic"], [212, 2, 1, "", "exsqrt"], [212, 2, 1, "", "from_FF"], [212, 2, 1, "", "from_FF_gmpy"], [212, 2, 1, "", "from_FF_python"], [212, 2, 1, "", "from_QQ"], [212, 2, 1, "", "from_QQ_gmpy"], [212, 2, 1, "", "from_QQ_python"], [212, 2, 1, "", "from_RealField"], [212, 2, 1, "", "from_ZZ"], [212, 2, 1, "", "from_ZZ_gmpy"], [212, 2, 1, "", "from_ZZ_python"], [212, 2, 1, "", "from_sympy"], [212, 2, 1, "", "get_field"], [212, 2, 1, "", "is_negative"], [212, 2, 1, "", "is_nonnegative"], [212, 2, 1, "", "is_nonpositive"], [212, 2, 1, "", "is_positive"], [212, 2, 1, "", "is_square"], [212, 2, 1, "", "to_int"], [212, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FractionField": [[212, 2, 1, "", "denom"], [212, 2, 1, "", "factorial"], [212, 2, 1, "", "from_AlgebraicField"], [212, 2, 1, "", "from_ComplexField"], [212, 2, 1, "", "from_FractionField"], [212, 2, 1, "", "from_GaussianIntegerRing"], [212, 2, 1, "", "from_GaussianRationalField"], [212, 2, 1, "", "from_PolynomialRing"], [212, 2, 1, "", "from_QQ"], [212, 2, 1, "", "from_QQ_gmpy"], [212, 2, 1, "", "from_QQ_python"], [212, 2, 1, "", "from_RealField"], [212, 2, 1, "", "from_ZZ"], [212, 2, 1, "", "from_ZZ_gmpy"], [212, 2, 1, "", "from_ZZ_python"], [212, 2, 1, "", "from_sympy"], [212, 2, 1, "", "get_ring"], [212, 2, 1, "", "is_negative"], [212, 2, 1, "", "is_nonnegative"], [212, 2, 1, "", "is_nonpositive"], [212, 2, 1, "", "is_positive"], [212, 2, 1, "", "numer"], [212, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYIntegerRing": [[212, 2, 1, "", "factorial"], [212, 2, 1, "", "from_FF_gmpy"], [212, 2, 1, "", "from_FF_python"], [212, 2, 1, "", "from_QQ"], [212, 2, 1, "", "from_QQ_gmpy"], [212, 2, 1, "", "from_QQ_python"], [212, 2, 1, "", "from_RealField"], [212, 2, 1, "", "from_ZZ_gmpy"], [212, 2, 1, "", "from_ZZ_python"], [212, 2, 1, "", "from_sympy"], [212, 2, 1, "", "gcd"], [212, 2, 1, "", "gcdex"], [212, 2, 1, "", "lcm"], [212, 2, 1, "", "sqrt"], [212, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYRationalField": [[212, 2, 1, "", "denom"], [212, 2, 1, "", "div"], [212, 2, 1, "", "exquo"], [212, 2, 1, "", "factorial"], [212, 2, 1, "", "from_GaussianRationalField"], [212, 2, 1, "", "from_QQ_gmpy"], [212, 2, 1, "", "from_QQ_python"], [212, 2, 1, "", "from_RealField"], [212, 2, 1, "", "from_ZZ_gmpy"], [212, 2, 1, "", "from_ZZ_python"], [212, 2, 1, "", "from_sympy"], [212, 2, 1, "", "get_ring"], [212, 2, 1, "", "numer"], [212, 2, 1, "", "quo"], [212, 2, 1, "", "rem"], [212, 2, 1, "", "to_sympy"]], "sympy.polys.domains.IntegerRing": [[212, 2, 1, "", "algebraic_field"], [212, 2, 1, "", "exsqrt"], [212, 2, 1, "", "factorial"], [212, 2, 1, "", "from_AlgebraicField"], [212, 2, 1, "", "from_EX"], [212, 2, 1, "", "from_FF"], [212, 2, 1, "", "from_FF_gmpy"], [212, 2, 1, "", "from_FF_python"], [212, 2, 1, "", "from_QQ"], [212, 2, 1, "", "from_QQ_gmpy"], [212, 2, 1, "", "from_QQ_python"], [212, 2, 1, "", "from_RealField"], [212, 2, 1, "", "from_ZZ"], [212, 2, 1, "", "from_ZZ_gmpy"], [212, 2, 1, "", "from_ZZ_python"], [212, 2, 1, "", "from_sympy"], [212, 2, 1, "", "gcd"], [212, 2, 1, "", "gcdex"], [212, 2, 1, "", "get_field"], [212, 2, 1, "", "is_square"], [212, 2, 1, "", "lcm"], [212, 2, 1, "", "log"], [212, 2, 1, "", "sqrt"], [212, 2, 1, "", "to_sympy"]], "sympy.polys.domains.PolynomialRing": [[212, 2, 1, "", "factorial"], [212, 2, 1, "", "from_AlgebraicField"], [212, 2, 1, "", "from_ComplexField"], [212, 2, 1, "", "from_FractionField"], [212, 2, 1, "", "from_GaussianIntegerRing"], [212, 2, 1, "", "from_GaussianRationalField"], [212, 2, 1, "", "from_GlobalPolynomialRing"], [212, 2, 1, "", "from_PolynomialRing"], [212, 2, 1, "", "from_QQ"], [212, 2, 1, "", "from_QQ_gmpy"], [212, 2, 1, "", "from_QQ_python"], [212, 2, 1, "", "from_RealField"], [212, 2, 1, "", "from_ZZ"], [212, 2, 1, "", "from_ZZ_gmpy"], [212, 2, 1, "", "from_ZZ_python"], [212, 2, 1, "", "from_sympy"], [212, 2, 1, "", "gcd"], [212, 2, 1, "", "gcdex"], [212, 2, 1, "", "get_field"], [212, 2, 1, "", "is_negative"], [212, 2, 1, "", "is_nonnegative"], [212, 2, 1, "", "is_nonpositive"], [212, 2, 1, "", "is_positive"], [212, 2, 1, "", "is_unit"], [212, 2, 1, "", "lcm"], [212, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RationalField": [[212, 2, 1, "", "algebraic_field"], [212, 2, 1, "", "denom"], [212, 2, 1, "", "div"], [212, 2, 1, "", "exquo"], [212, 2, 1, "", "exsqrt"], [212, 2, 1, "", "from_AlgebraicField"], [212, 2, 1, "", "from_GaussianRationalField"], [212, 2, 1, "", "from_QQ"], [212, 2, 1, "", "from_QQ_gmpy"], [212, 2, 1, "", "from_QQ_python"], [212, 2, 1, "", "from_RealField"], [212, 2, 1, "", "from_ZZ"], [212, 2, 1, "", "from_ZZ_gmpy"], [212, 2, 1, "", "from_ZZ_python"], [212, 2, 1, "", "from_sympy"], [212, 2, 1, "", "get_ring"], [212, 2, 1, "", "is_square"], [212, 2, 1, "", "numer"], [212, 2, 1, "", "quo"], [212, 2, 1, "", "rem"], [212, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RealField": [[212, 2, 1, "", "almosteq"], [212, 2, 1, "", "exsqrt"], [212, 2, 1, "", "from_sympy"], [212, 2, 1, "", "gcd"], [212, 2, 1, "", "get_exact"], [212, 2, 1, "", "get_ring"], [212, 2, 1, "", "is_square"], [212, 2, 1, "", "lcm"], [212, 2, 1, "", "to_rational"], [212, 2, 1, "", "to_sympy"]], "sympy.polys.domains.compositedomain": [[212, 1, 1, "", "CompositeDomain"]], "sympy.polys.domains.compositedomain.CompositeDomain": [[212, 2, 1, "", "drop"], [212, 2, 1, "", "get_exact"], [212, 2, 1, "", "inject"], [212, 3, 1, "", "is_Exact"], [212, 2, 1, "", "set_domain"]], "sympy.polys.domains.domain": [[212, 1, 1, "", "Domain"]], "sympy.polys.domains.domain.Domain": [[212, 2, 1, "", "abs"], [212, 2, 1, "", "add"], [212, 2, 1, "", "alg_field_from_poly"], [212, 2, 1, "", "algebraic_field"], [212, 2, 1, "", "almosteq"], [212, 2, 1, "", "characteristic"], [212, 2, 1, "", "cofactors"], [212, 2, 1, "", "convert"], [212, 2, 1, "", "convert_from"], [212, 2, 1, "", "cyclotomic_field"], [212, 2, 1, "", "denom"], [212, 2, 1, "", "div"], [212, 2, 1, "", "drop"], [212, 5, 1, "", "dtype"], [212, 2, 1, "", "evalf"], [212, 2, 1, "", "exquo"], [212, 2, 1, "", "exsqrt"], [212, 2, 1, "", "frac_field"], [212, 2, 1, "", "from_AlgebraicField"], [212, 2, 1, "", "from_ComplexField"], [212, 2, 1, "", "from_ExpressionDomain"], [212, 2, 1, "", "from_ExpressionRawDomain"], [212, 2, 1, "", "from_FF"], [212, 2, 1, "", "from_FF_gmpy"], [212, 2, 1, "", "from_FF_python"], [212, 2, 1, "", "from_FractionField"], [212, 2, 1, "", "from_GlobalPolynomialRing"], [212, 2, 1, "", "from_MonogenicFiniteExtension"], [212, 2, 1, "", "from_PolynomialRing"], [212, 2, 1, "", "from_QQ_gmpy"], [212, 2, 1, "", "from_QQ_python"], [212, 2, 1, "", "from_RealField"], [212, 2, 1, "", "from_ZZ_gmpy"], [212, 2, 1, "", "from_ZZ_python"], [212, 2, 1, "", "from_sympy"], [212, 2, 1, "", "gcd"], [212, 2, 1, "", "gcdex"], [212, 2, 1, "", "get_exact"], [212, 2, 1, "", "get_field"], [212, 2, 1, "", "get_ring"], [212, 2, 1, "", "half_gcdex"], [212, 5, 1, "", "has_assoc_Field"], [212, 5, 1, "", "has_assoc_Ring"], [212, 2, 1, "", "inject"], [212, 2, 1, "", "invert"], [212, 5, 1, "", "is_Field"], [212, 5, 1, "", "is_PID"], [212, 5, 1, "", "is_Ring"], [212, 2, 1, "", "is_negative"], [212, 2, 1, "", "is_nonnegative"], [212, 2, 1, "", "is_nonpositive"], [212, 2, 1, "", "is_one"], [212, 2, 1, "", "is_positive"], [212, 2, 1, "", "is_square"], [212, 2, 1, "", "is_zero"], [212, 2, 1, "", "lcm"], [212, 2, 1, "", "log"], [212, 2, 1, "", "map"], [212, 2, 1, "", "mul"], [212, 2, 1, "", "n"], [212, 2, 1, "", "neg"], [212, 2, 1, "", "numer"], [212, 2, 1, "", "of_type"], [212, 2, 1, "", "old_frac_field"], [212, 2, 1, "", "old_poly_ring"], [212, 5, 1, "", "one"], [212, 2, 1, "", "poly_ring"], [212, 2, 1, "", "pos"], [212, 2, 1, "", "pow"], [212, 2, 1, "", "quo"], [212, 2, 1, "", "rem"], [212, 2, 1, "", "revert"], [212, 2, 1, "", "sqrt"], [212, 2, 1, "", "sub"], [212, 2, 1, "", "to_sympy"], [212, 3, 1, "", "tp"], [212, 2, 1, "", "unify"], [212, 2, 1, "", "unify_composite"], [212, 5, 1, "", "zero"]], "sympy.polys.domains.domainelement": [[212, 1, 1, "", "DomainElement"]], "sympy.polys.domains.domainelement.DomainElement": [[212, 2, 1, "", "parent"]], "sympy.polys.domains.expressiondomain.ExpressionDomain": [[212, 1, 1, "", "Expression"]], "sympy.polys.domains.field": [[212, 1, 1, "", "Field"]], "sympy.polys.domains.field.Field": [[212, 2, 1, "", "div"], [212, 2, 1, "", "exquo"], [212, 2, 1, "", "gcd"], [212, 2, 1, "", "get_field"], [212, 2, 1, "", "get_ring"], [212, 2, 1, "", "is_unit"], [212, 2, 1, "", "lcm"], [212, 2, 1, "", "quo"], [212, 2, 1, "", "rem"], [212, 2, 1, "", "revert"]], "sympy.polys.domains.gaussiandomains": [[212, 1, 1, "", "GaussianDomain"], [212, 1, 1, "", "GaussianElement"], [212, 1, 1, "", "GaussianInteger"], [212, 1, 1, "", "GaussianIntegerRing"], [212, 1, 1, "", "GaussianRational"], [212, 1, 1, "", "GaussianRationalField"]], "sympy.polys.domains.gaussiandomains.GaussianDomain": [[212, 2, 1, "", "from_AlgebraicField"], [212, 2, 1, "", "from_QQ"], [212, 2, 1, "", "from_QQ_gmpy"], [212, 2, 1, "", "from_QQ_python"], [212, 2, 1, "", "from_ZZ"], [212, 2, 1, "", "from_ZZ_gmpy"], [212, 2, 1, "", "from_ZZ_python"], [212, 2, 1, "", "from_sympy"], [212, 2, 1, "", "inject"], [212, 2, 1, "", "is_negative"], [212, 2, 1, "", "is_nonnegative"], [212, 2, 1, "", "is_nonpositive"], [212, 2, 1, "", "is_positive"], [212, 2, 1, "", "to_sympy"]], "sympy.polys.domains.gaussiandomains.GaussianElement": [[212, 2, 1, "", "new"], [212, 2, 1, "", "parent"], [212, 2, 1, "", "quadrant"]], "sympy.polys.domains.gaussiandomains.GaussianIntegerRing": [[212, 5, 1, "", "dtype"], [212, 2, 1, "", "from_GaussianIntegerRing"], [212, 2, 1, "", "from_GaussianRationalField"], [212, 2, 1, "", "gcd"], [212, 2, 1, "", "get_field"], [212, 2, 1, "", "get_ring"], [212, 2, 1, "", "lcm"], [212, 2, 1, "", "normalize"]], "sympy.polys.domains.gaussiandomains.GaussianRationalField": [[212, 2, 1, "", "as_AlgebraicField"], [212, 2, 1, "", "denom"], [212, 5, 1, "", "dtype"], [212, 2, 1, "", "from_ComplexField"], [212, 2, 1, "", "from_GaussianIntegerRing"], [212, 2, 1, "", "from_GaussianRationalField"], [212, 2, 1, "", "get_field"], [212, 2, 1, "", "get_ring"], [212, 2, 1, "", "numer"]], "sympy.polys.domains.quotientring": [[212, 1, 1, "", "QuotientRing"]], "sympy.polys.domains.ring": [[212, 1, 1, "", "Ring"]], "sympy.polys.domains.ring.Ring": [[212, 2, 1, "", "denom"], [212, 2, 1, "", "div"], [212, 2, 1, "", "exquo"], [212, 2, 1, "", "free_module"], [212, 2, 1, "", "get_ring"], [212, 2, 1, "", "ideal"], [212, 2, 1, "", "invert"], [212, 2, 1, "", "numer"], [212, 2, 1, "", "quo"], [212, 2, 1, "", "quotient_ring"], [212, 2, 1, "", "rem"], [212, 2, 1, "", "revert"]], "sympy.polys.domains.simpledomain": [[212, 1, 1, "", "SimpleDomain"]], "sympy.polys.domains.simpledomain.SimpleDomain": [[212, 2, 1, "", "inject"]], "sympy.polys.euclidtools": [[214, 4, 1, "", "dmp_cancel"], [214, 4, 1, "", "dmp_content"], [214, 4, 1, "", "dmp_discriminant"], [214, 4, 1, "", "dmp_euclidean_prs"], [214, 4, 1, "", "dmp_ff_prs_gcd"], [214, 4, 1, "", "dmp_gcd"], [214, 4, 1, "", "dmp_gcdex"], [214, 4, 1, "", "dmp_half_gcdex"], [214, 4, 1, "", "dmp_inner_gcd"], [214, 4, 1, "", "dmp_inner_subresultants"], [214, 4, 1, "", "dmp_invert"], [214, 4, 1, "", "dmp_lcm"], [214, 4, 1, "", "dmp_primitive"], [214, 4, 1, "", "dmp_primitive_prs"], [214, 4, 1, "", "dmp_prs_resultant"], [214, 4, 1, "", "dmp_qq_collins_resultant"], [214, 4, 1, "", "dmp_qq_heu_gcd"], [214, 4, 1, "", "dmp_resultant"], [214, 4, 1, "", "dmp_rr_prs_gcd"], [214, 4, 1, "", "dmp_subresultants"], [214, 4, 1, "", "dmp_zz_collins_resultant"], [214, 4, 1, "", "dmp_zz_heu_gcd"], [214, 4, 1, "", "dmp_zz_modular_resultant"]], "sympy.polys.factortools": [[214, 4, 1, "", "dmp_ext_factor"], [214, 4, 1, "", "dmp_factor_list"], [214, 4, 1, "", "dmp_factor_list_include"], [214, 4, 1, "", "dmp_gf_factor"], [214, 4, 1, "", "dmp_irreducible_p"], [214, 4, 1, "", "dmp_qq_i_factor"], [214, 4, 1, "", "dmp_trial_division"], [214, 4, 1, "", "dmp_zz_diophantine"], [214, 4, 1, "", "dmp_zz_factor"], [214, 4, 1, "", "dmp_zz_i_factor"], [214, 4, 1, "", "dmp_zz_mignotte_bound"], [214, 4, 1, "", "dmp_zz_wang"], [214, 4, 1, "", "dmp_zz_wang_hensel_lifting"], [214, 4, 1, "", "dmp_zz_wang_lead_coeffs"], [214, 4, 1, "", "dmp_zz_wang_non_divisors"], [214, 4, 1, "", "dmp_zz_wang_test_points"], [214, 4, 1, "", "dup_cyclotomic_p"], [214, 4, 1, "", "dup_ext_factor"], [214, 4, 1, "", "dup_factor_list"], [214, 4, 1, "", "dup_factor_list_include"], [214, 4, 1, "", "dup_gf_factor"], [214, 4, 1, "", "dup_irreducible_p"], [214, 4, 1, "", "dup_qq_i_factor"], [214, 4, 1, "", "dup_trial_division"], [214, 4, 1, "", "dup_zz_cyclotomic_factor"], [214, 4, 1, "", "dup_zz_cyclotomic_poly"], [214, 4, 1, "", "dup_zz_diophantine"], [214, 4, 1, "", "dup_zz_factor"], [214, 4, 1, "", "dup_zz_factor_sqf"], [214, 4, 1, "", "dup_zz_hensel_lift"], [214, 4, 1, "", "dup_zz_hensel_step"], [214, 4, 1, "", "dup_zz_i_factor"], [214, 4, 1, "", "dup_zz_irreducible_p"], [214, 4, 1, "", "dup_zz_mignotte_bound"], [214, 4, 1, "", "dup_zz_zassenhaus"]], "sympy.polys.fglmtools": [[214, 4, 1, "", "matrix_fglm"]], "sympy.polys.fields": [[212, 1, 1, "", "FracElement"], [212, 1, 1, "", "FracField"], [212, 4, 1, "", "field"], [212, 4, 1, "", "sfield"], [212, 4, 1, "", "vfield"], [212, 4, 1, "", "xfield"]], "sympy.polys.fields.FracElement": [[212, 2, 1, "", "diff"]], "sympy.polys.galoistools": [[214, 4, 1, "", "gf_LC"], [214, 4, 1, "", "gf_Qbasis"], [214, 4, 1, "", "gf_Qmatrix"], [214, 4, 1, "", "gf_TC"], [214, 4, 1, "", "gf_add"], [214, 4, 1, "", "gf_add_ground"], [214, 4, 1, "", "gf_add_mul"], [214, 4, 1, "", "gf_berlekamp"], [214, 4, 1, "", "gf_cofactors"], [214, 4, 1, "", "gf_compose"], [214, 4, 1, "", "gf_compose_mod"], [214, 4, 1, "", "gf_crt"], [214, 4, 1, "", "gf_crt1"], [214, 4, 1, "", "gf_crt2"], [214, 4, 1, "", "gf_csolve"], [214, 4, 1, "", "gf_degree"], [214, 4, 1, "", "gf_diff"], [214, 4, 1, "", "gf_div"], [214, 4, 1, "", "gf_eval"], [214, 4, 1, "", "gf_expand"], [214, 4, 1, "", "gf_exquo"], [214, 4, 1, "", "gf_factor"], [214, 4, 1, "", "gf_factor_sqf"], [214, 4, 1, "", "gf_from_dict"], [214, 4, 1, "", "gf_from_int_poly"], [214, 4, 1, "", "gf_gcd"], [214, 4, 1, "", "gf_gcdex"], [214, 4, 1, "", "gf_int"], [214, 4, 1, "", "gf_irreducible"], [214, 4, 1, "", "gf_irreducible_p"], [214, 4, 1, "", "gf_lcm"], [214, 4, 1, "", "gf_lshift"], [214, 4, 1, "", "gf_monic"], [214, 4, 1, "", "gf_mul"], [214, 4, 1, "", "gf_mul_ground"], [214, 4, 1, "", "gf_multi_eval"], [214, 4, 1, "", "gf_neg"], [214, 4, 1, "", "gf_normal"], [214, 4, 1, "", "gf_pow"], [214, 4, 1, "", "gf_pow_mod"], [214, 4, 1, "", "gf_quo"], [214, 4, 1, "", "gf_quo_ground"], [214, 4, 1, "", "gf_random"], [214, 4, 1, "", "gf_rem"], [214, 4, 1, "", "gf_rshift"], [214, 4, 1, "", "gf_shoup"], [214, 4, 1, "", "gf_sqf_list"], [214, 4, 1, "", "gf_sqf_p"], [214, 4, 1, "", "gf_sqf_part"], [214, 4, 1, "", "gf_sqr"], [214, 4, 1, "", "gf_strip"], [214, 4, 1, "", "gf_sub"], [214, 4, 1, "", "gf_sub_ground"], [214, 4, 1, "", "gf_sub_mul"], [214, 4, 1, "", "gf_to_dict"], [214, 4, 1, "", "gf_to_int_poly"], [214, 4, 1, "", "gf_trace_map"], [214, 4, 1, "", "gf_trunc"], [214, 4, 1, "", "gf_value"], [214, 4, 1, "", "gf_zassenhaus"]], "sympy.polys.groebnertools": [[214, 4, 1, "", "groebner"], [214, 4, 1, "", "is_groebner"], [214, 4, 1, "", "is_minimal"], [214, 4, 1, "", "is_reduced"], [214, 4, 1, "", "red_groebner"], [214, 4, 1, "", "spoly"]], "sympy.polys.matrices": [[210, 0, 0, "-", "_dfm"], [210, 0, 0, "-", "_typing"], [210, 0, 0, "-", "ddm"], [210, 0, 0, "-", "dense"], [210, 0, 0, "-", "domainmatrix"], [210, 0, 0, "-", "sdm"]], "sympy.polys.matrices._dfm": [[210, 1, 1, "", "DFM"]], "sympy.polys.matrices._dfm.DFM": [[210, 2, 1, "", "add"], [210, 2, 1, "", "applyfunc"], [210, 2, 1, "", "charpoly"], [210, 2, 1, "", "convert_to"], [210, 2, 1, "", "copy"], [210, 2, 1, "", "det"], [210, 2, 1, "", "diag"], [210, 2, 1, "", "diagonal"], [210, 2, 1, "", "extract"], [210, 2, 1, "", "extract_slice"], [210, 2, 1, "", "eye"], [210, 2, 1, "", "from_ddm"], [210, 2, 1, "", "from_dod"], [210, 2, 1, "", "from_dok"], [210, 2, 1, "", "from_flat_nz"], [210, 2, 1, "", "from_list"], [210, 2, 1, "", "from_list_flat"], [210, 2, 1, "", "getitem"], [210, 2, 1, "", "hstack"], [210, 2, 1, "", "inv"], [210, 2, 1, "", "is_diagonal"], [210, 2, 1, "", "is_lower"], [210, 2, 1, "", "is_upper"], [210, 2, 1, "", "is_zero_matrix"], [210, 2, 1, "", "iter_items"], [210, 2, 1, "", "iter_values"], [210, 2, 1, "", "lll"], [210, 2, 1, "", "lll_transform"], [210, 2, 1, "", "lu"], [210, 2, 1, "", "lu_solve"], [210, 2, 1, "", "matmul"], [210, 2, 1, "", "mul"], [210, 2, 1, "", "mul_elementwise"], [210, 2, 1, "", "neg"], [210, 2, 1, "", "nnz"], [210, 2, 1, "", "nullspace"], [210, 2, 1, "", "nullspace_from_rref"], [210, 2, 1, "", "ones"], [210, 2, 1, "", "particular"], [210, 2, 1, "", "rmul"], [210, 2, 1, "", "scc"], [210, 2, 1, "", "setitem"], [210, 2, 1, "", "sub"], [210, 2, 1, "", "to_ddm"], [210, 2, 1, "", "to_dfm"], [210, 2, 1, "", "to_dfm_or_ddm"], [210, 2, 1, "", "to_dod"], [210, 2, 1, "", "to_dok"], [210, 2, 1, "", "to_flat_nz"], [210, 2, 1, "", "to_list"], [210, 2, 1, "", "to_list_flat"], [210, 2, 1, "", "to_sdm"], [210, 2, 1, "", "transpose"], [210, 2, 1, "", "vstack"], [210, 2, 1, "", "zeros"]], "sympy.polys.matrices._typing": [[210, 1, 1, "", "RingElement"]], "sympy.polys.matrices.ddm": [[210, 1, 1, "", "DDM"]], "sympy.polys.matrices.ddm.DDM": [[210, 2, 1, "", "add"], [210, 2, 1, "", "charpoly"], [210, 2, 1, "", "det"], [210, 2, 1, "", "diag"], [210, 2, 1, "", "diagonal"], [210, 2, 1, "", "from_dod"], [210, 2, 1, "", "from_dok"], [210, 2, 1, "", "from_flat_nz"], [210, 2, 1, "", "from_list"], [210, 2, 1, "", "from_list_flat"], [210, 2, 1, "", "hstack"], [210, 2, 1, "", "inv"], [210, 2, 1, "", "is_diagonal"], [210, 2, 1, "", "is_lower"], [210, 2, 1, "", "is_upper"], [210, 2, 1, "", "is_zero_matrix"], [210, 2, 1, "", "iter_items"], [210, 2, 1, "", "iter_values"], [210, 2, 1, "", "lu"], [210, 2, 1, "", "lu_solve"], [210, 2, 1, "", "matmul"], [210, 2, 1, "", "neg"], [210, 2, 1, "", "nnz"], [210, 2, 1, "", "nullspace"], [210, 2, 1, "", "nullspace_from_rref"], [210, 2, 1, "", "rref"], [210, 2, 1, "", "rref_den"], [210, 2, 1, "", "scc"], [210, 2, 1, "", "sub"], [210, 2, 1, "", "to_ddm"], [210, 2, 1, "", "to_dfm"], [210, 2, 1, "", "to_dfm_or_ddm"], [210, 2, 1, "", "to_dod"], [210, 2, 1, "", "to_dok"], [210, 2, 1, "", "to_flat_nz"], [210, 2, 1, "", "to_list"], [210, 2, 1, "", "to_list_flat"], [210, 2, 1, "", "to_sdm"], [210, 2, 1, "", "vstack"]], "sympy.polys.matrices.dense": [[210, 1, 1, "", "R"], [210, 1, 1, "", "T"], [210, 4, 1, "", "ddm_berk"], [210, 4, 1, "", "ddm_iadd"], [210, 4, 1, "", "ddm_idet"], [210, 4, 1, "", "ddm_iinv"], [210, 4, 1, "", "ddm_ilu"], [210, 4, 1, "", "ddm_ilu_solve"], [210, 4, 1, "", "ddm_ilu_split"], [210, 4, 1, "", "ddm_imatmul"], [210, 4, 1, "", "ddm_imul"], [210, 4, 1, "", "ddm_ineg"], [210, 4, 1, "", "ddm_irmul"], [210, 4, 1, "", "ddm_irref"], [210, 4, 1, "", "ddm_irref_den"], [210, 4, 1, "", "ddm_isub"], [210, 4, 1, "", "ddm_transpose"]], "sympy.polys.matrices.domainmatrix": [[210, 4, 1, "", "DM"], [210, 1, 1, "", "DomainMatrix"]], "sympy.polys.matrices.domainmatrix.DomainMatrix": [[210, 2, 1, "", "add"], [210, 2, 1, "", "adj_det"], [210, 2, 1, "", "adj_poly_det"], [210, 2, 1, "", "adjugate"], [210, 2, 1, "", "cancel_denom"], [210, 2, 1, "", "cancel_denom_elementwise"], [210, 2, 1, "", "charpoly"], [210, 2, 1, "", "charpoly_base"], [210, 2, 1, "", "charpoly_berk"], [210, 2, 1, "", "charpoly_factor_blocks"], [210, 2, 1, "", "charpoly_factor_list"], [210, 2, 1, "", "choose_domain"], [210, 2, 1, "", "clear_denoms"], [210, 2, 1, "", "clear_denoms_rowwise"], [210, 2, 1, "", "columnspace"], [210, 2, 1, "", "content"], [210, 2, 1, "", "convert_to"], [210, 2, 1, "", "det"], [210, 2, 1, "", "diag"], [210, 2, 1, "", "diagonal"], [210, 2, 1, "", "eval_poly"], [210, 2, 1, "", "eval_poly_mul"], [210, 2, 1, "", "eye"], [210, 2, 1, "", "from_Matrix"], [210, 2, 1, "", "from_dict_sympy"], [210, 2, 1, "", "from_dod"], [210, 2, 1, "", "from_dod_like"], [210, 2, 1, "", "from_dok"], [210, 2, 1, "", "from_flat_nz"], [210, 2, 1, "", "from_list"], [210, 2, 1, "", "from_list_flat"], [210, 2, 1, "", "from_list_sympy"], [210, 2, 1, "", "from_rep"], [210, 2, 1, "", "hstack"], [210, 2, 1, "", "inv"], [210, 2, 1, "", "inv_den"], [210, 3, 1, "", "is_diagonal"], [210, 3, 1, "", "is_lower"], [210, 3, 1, "", "is_square"], [210, 3, 1, "", "is_upper"], [210, 2, 1, "", "iter_items"], [210, 2, 1, "", "iter_values"], [210, 2, 1, "", "lll"], [210, 2, 1, "", "lll_transform"], [210, 2, 1, "", "lu"], [210, 2, 1, "", "lu_solve"], [210, 2, 1, "", "matmul"], [210, 2, 1, "", "mul"], [210, 2, 1, "", "neg"], [210, 2, 1, "", "nnz"], [210, 2, 1, "", "nullspace"], [210, 2, 1, "", "nullspace_from_rref"], [210, 2, 1, "", "ones"], [210, 2, 1, "", "pow"], [210, 2, 1, "", "primitive"], [210, 2, 1, "", "rowspace"], [210, 2, 1, "", "rref"], [210, 2, 1, "", "rref_den"], [210, 2, 1, "", "scc"], [210, 2, 1, "", "solve_den"], [210, 2, 1, "", "solve_den_charpoly"], [210, 2, 1, "", "solve_den_rref"], [210, 2, 1, "", "sub"], [210, 2, 1, "", "to_Matrix"], [210, 2, 1, "", "to_ddm"], [210, 2, 1, "", "to_dense"], [210, 2, 1, "", "to_dfm"], [210, 2, 1, "", "to_dfm_or_ddm"], [210, 2, 1, "", "to_dod"], [210, 2, 1, "", "to_dok"], [210, 2, 1, "", "to_field"], [210, 2, 1, "", "to_flat_nz"], [210, 2, 1, "", "to_list"], [210, 2, 1, "", "to_list_flat"], [210, 2, 1, "", "to_sdm"], [210, 2, 1, "", "to_sparse"], [210, 2, 1, "", "transpose"], [210, 2, 1, "", "unify"], [210, 2, 1, "", "vstack"], [210, 2, 1, "", "zeros"]], "sympy.polys.matrices.normalforms": [[210, 4, 1, "", "hermite_normal_form"], [210, 4, 1, "", "smith_normal_form"]], "sympy.polys.matrices.sdm": [[210, 1, 1, "", "SDM"], [210, 4, 1, "", "sdm_berk"], [210, 4, 1, "", "sdm_irref"], [210, 4, 1, "", "sdm_nullspace_from_rref"], [210, 4, 1, "", "sdm_particular_from_rref"], [210, 4, 1, "", "sdm_rref_den"]], "sympy.polys.matrices.sdm.SDM": [[210, 2, 1, "", "add"], [210, 2, 1, "", "charpoly"], [210, 2, 1, "", "convert_to"], [210, 2, 1, "", "copy"], [210, 2, 1, "", "det"], [210, 2, 1, "", "diagonal"], [210, 2, 1, "", "eye"], [210, 2, 1, "", "from_ddm"], [210, 2, 1, "", "from_dod"], [210, 2, 1, "", "from_dok"], [210, 2, 1, "", "from_flat_nz"], [210, 2, 1, "", "from_list"], [210, 2, 1, "", "from_list_flat"], [210, 2, 1, "", "hstack"], [210, 2, 1, "", "inv"], [210, 2, 1, "", "is_diagonal"], [210, 2, 1, "", "is_lower"], [210, 2, 1, "", "is_upper"], [210, 2, 1, "", "is_zero_matrix"], [210, 2, 1, "", "iter_items"], [210, 2, 1, "", "iter_values"], [210, 2, 1, "", "lll"], [210, 2, 1, "", "lll_transform"], [210, 2, 1, "", "lu"], [210, 2, 1, "", "lu_solve"], [210, 2, 1, "", "matmul"], [210, 2, 1, "", "mul"], [210, 2, 1, "", "neg"], [210, 2, 1, "", "new"], [210, 2, 1, "", "nnz"], [210, 2, 1, "", "nullspace"], [210, 2, 1, "", "nullspace_from_rref"], [210, 2, 1, "", "rref"], [210, 2, 1, "", "rref_den"], [210, 2, 1, "", "scc"], [210, 2, 1, "", "sub"], [210, 2, 1, "", "to_ddm"], [210, 2, 1, "", "to_dfm"], [210, 2, 1, "", "to_dfm_or_ddm"], [210, 2, 1, "", "to_dod"], [210, 2, 1, "", "to_dok"], [210, 2, 1, "", "to_flat_nz"], [210, 2, 1, "", "to_list"], [210, 2, 1, "", "to_list_flat"], [210, 2, 1, "", "to_sdm"], [210, 2, 1, "", "transpose"], [210, 2, 1, "", "vstack"], [210, 2, 1, "", "zeros"]], "sympy.polys.modulargcd": [[214, 4, 1, "", "_modgcd_multivariate_p"], [214, 4, 1, "", "func_field_modgcd"], [214, 4, 1, "", "modgcd_bivariate"], [214, 4, 1, "", "modgcd_multivariate"], [214, 4, 1, "", "modgcd_univariate"]], "sympy.polys.monomials": [[217, 1, 1, "", "Monomial"], [217, 4, 1, "", "itermonomials"], [217, 4, 1, "", "monomial_count"]], "sympy.polys.monomials.Monomial": [[217, 2, 1, "", "as_expr"], [217, 2, 1, "", "gcd"], [217, 2, 1, "", "lcm"]], "sympy.polys.numberfields": [[216, 0, 0, "-", "modules"], [216, 0, 0, "-", "subfield"]], "sympy.polys.numberfields.basis": [[216, 4, 1, "", "round_two"]], "sympy.polys.numberfields.galoisgroups": [[216, 4, 1, "", "galois_group"]], "sympy.polys.numberfields.minpoly": [[216, 4, 1, "", "minimal_polynomial"], [216, 4, 1, "", "minpoly"]], "sympy.polys.numberfields.modules": [[216, 1, 1, "", "EndomorphismRing"], [216, 1, 1, "", "InnerEndomorphism"], [216, 1, 1, "", "Module"], [216, 1, 1, "", "ModuleElement"], [216, 1, 1, "", "ModuleEndomorphism"], [216, 1, 1, "", "ModuleHomomorphism"], [216, 1, 1, "", "PowerBasis"], [216, 1, 1, "", "PowerBasisElement"], [216, 1, 1, "", "Submodule"], [216, 4, 1, "", "find_min_poly"], [216, 4, 1, "", "make_mod_elt"]], "sympy.polys.numberfields.modules.EndomorphismRing": [[216, 2, 1, "", "__init__"], [216, 2, 1, "", "inner_endomorphism"], [216, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.InnerEndomorphism": [[216, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.Module": [[216, 2, 1, "", "__call__"], [216, 2, 1, "", "ancestors"], [216, 2, 1, "", "basis_elements"], [216, 2, 1, "", "element_from_rational"], [216, 2, 1, "", "endomorphism_ring"], [216, 2, 1, "", "is_compat_col"], [216, 2, 1, "", "mult_tab"], [216, 3, 1, "", "n"], [216, 2, 1, "", "nearest_common_ancestor"], [216, 3, 1, "", "number_field"], [216, 2, 1, "", "one"], [216, 3, 1, "", "parent"], [216, 2, 1, "", "power_basis_ancestor"], [216, 2, 1, "", "represent"], [216, 2, 1, "", "starts_with_unity"], [216, 2, 1, "", "submodule_from_gens"], [216, 2, 1, "", "submodule_from_matrix"], [216, 2, 1, "", "whole_submodule"], [216, 2, 1, "", "zero"]], "sympy.polys.numberfields.modules.ModuleElement": [[216, 3, 1, "", "QQ_col"], [216, 2, 1, "", "__add__"], [216, 2, 1, "", "__init__"], [216, 2, 1, "", "__mod__"], [216, 2, 1, "", "__mul__"], [216, 2, 1, "", "column"], [216, 2, 1, "", "equiv"], [216, 2, 1, "", "from_int_list"], [216, 2, 1, "", "is_compat"], [216, 3, 1, "", "n"], [216, 2, 1, "", "over_power_basis"], [216, 2, 1, "", "reduced"], [216, 2, 1, "", "reduced_mod_p"], [216, 2, 1, "", "to_ancestor"], [216, 2, 1, "", "to_parent"], [216, 2, 1, "", "unify"]], "sympy.polys.numberfields.modules.ModuleEndomorphism": [[216, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.ModuleHomomorphism": [[216, 2, 1, "", "__init__"], [216, 2, 1, "", "kernel"], [216, 2, 1, "", "matrix"]], "sympy.polys.numberfields.modules.PowerBasis": [[216, 2, 1, "", "__init__"], [216, 2, 1, "", "element_from_ANP"], [216, 2, 1, "", "element_from_alg_num"], [216, 2, 1, "", "element_from_poly"], [216, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.PowerBasisElement": [[216, 3, 1, "", "T"], [216, 2, 1, "", "as_expr"], [216, 3, 1, "", "generator"], [216, 3, 1, "", "is_rational"], [216, 2, 1, "", "norm"], [216, 2, 1, "", "numerator"], [216, 2, 1, "", "poly"], [216, 2, 1, "", "to_ANP"], [216, 2, 1, "", "to_alg_num"]], "sympy.polys.numberfields.modules.Submodule": [[216, 3, 1, "", "QQ_matrix"], [216, 2, 1, "", "__init__"], [216, 2, 1, "", "add"], [216, 2, 1, "", "basis_element_pullbacks"], [216, 2, 1, "", "discard_before"], [216, 2, 1, "", "mul"], [216, 2, 1, "", "reduce_element"], [216, 2, 1, "", "reduced"], [216, 2, 1, "", "represent"]], "sympy.polys.numberfields.primes": [[216, 1, 1, "", "PrimeIdeal"], [216, 4, 1, "", "prime_decomp"], [216, 4, 1, "", "prime_valuation"]], "sympy.polys.numberfields.primes.PrimeIdeal": [[216, 2, 1, "", "__add__"], [216, 2, 1, "", "__init__"], [216, 2, 1, "", "__mul__"], [216, 2, 1, "", "as_submodule"], [216, 3, 1, "", "is_inert"], [216, 2, 1, "", "reduce_ANP"], [216, 2, 1, "", "reduce_alg_num"], [216, 2, 1, "", "reduce_element"], [216, 2, 1, "", "repr"], [216, 2, 1, "", "test_factor"], [216, 2, 1, "", "valuation"]], "sympy.polys.numberfields.subfield": [[216, 4, 1, "", "field_isomorphism"], [216, 4, 1, "", "primitive_element"], [216, 4, 1, "", "to_number_field"]], "sympy.polys.numberfields.utilities": [[216, 1, 1, "", "AlgIntPowers"], [216, 4, 1, "", "coeff_search"], [216, 4, 1, "", "extract_fundamental_discriminant"], [216, 4, 1, "", "get_num_denom"], [216, 4, 1, "", "is_int"], [216, 4, 1, "", "is_rat"], [216, 4, 1, "", "isolate"], [216, 4, 1, "", "supplement_a_subspace"]], "sympy.polys.numberfields.utilities.AlgIntPowers": [[216, 2, 1, "", "__init__"]], "sympy.polys.orderings": [[217, 1, 1, "", "GradedLexOrder"], [217, 1, 1, "", "LexOrder"], [217, 1, 1, "", "MonomialOrder"], [217, 1, 1, "", "ReversedGradedLexOrder"]], "sympy.polys.orthopolys": [[217, 4, 1, "", "chebyshevt_poly"], [217, 4, 1, "", "chebyshevu_poly"], [217, 4, 1, "", "gegenbauer_poly"], [217, 4, 1, "", "hermite_poly"], [217, 4, 1, "", "hermite_prob_poly"], [217, 4, 1, "", "jacobi_poly"], [217, 4, 1, "", "laguerre_poly"], [217, 4, 1, "", "legendre_poly"], [217, 4, 1, "", "spherical_bessel_fn"]], "sympy.polys.partfrac": [[217, 4, 1, "", "apart"], [217, 4, 1, "", "apart_list"], [217, 4, 1, "", "assemble_partfrac_list"]], "sympy.polys.polyclasses": [[212, 1, 1, "", "ANP"], [212, 1, 1, "", "DMF"], [212, 1, 1, "", "DMP"]], "sympy.polys.polyclasses.ANP": [[212, 2, 1, "", "LC"], [212, 2, 1, "", "TC"], [212, 2, 1, "", "add_ground"], [212, 2, 1, "", "convert"], [212, 3, 1, "", "is_ground"], [212, 3, 1, "", "is_one"], [212, 3, 1, "", "is_zero"], [212, 2, 1, "", "mod_to_list"], [212, 2, 1, "", "mul_ground"], [212, 2, 1, "", "pow"], [212, 2, 1, "", "quo_ground"], [212, 2, 1, "", "sub_ground"], [212, 2, 1, "", "to_dict"], [212, 2, 1, "", "to_list"], [212, 2, 1, "", "to_sympy_dict"], [212, 2, 1, "", "to_sympy_list"], [212, 2, 1, "", "to_tuple"], [212, 2, 1, "", "unify"], [212, 2, 1, "", "unify_ANP"]], "sympy.polys.polyclasses.DMF": [[212, 2, 1, "", "add"], [212, 2, 1, "", "add_ground"], [212, 2, 1, "", "cancel"], [212, 2, 1, "", "denom"], [212, 2, 1, "", "exquo"], [212, 2, 1, "", "frac_unify"], [212, 2, 1, "", "half_per"], [212, 2, 1, "", "invert"], [212, 3, 1, "", "is_one"], [212, 3, 1, "", "is_zero"], [212, 2, 1, "", "mul"], [212, 2, 1, "", "neg"], [212, 2, 1, "", "numer"], [212, 2, 1, "", "per"], [212, 2, 1, "", "poly_unify"], [212, 2, 1, "", "pow"], [212, 2, 1, "", "quo"], [212, 2, 1, "", "sub"]], "sympy.polys.polyclasses.DMP": [[212, 2, 1, "", "LC"], [212, 2, 1, "", "TC"], [212, 2, 1, "", "abs"], [212, 2, 1, "", "add"], [212, 2, 1, "", "add_ground"], [212, 2, 1, "", "all_coeffs"], [212, 2, 1, "", "all_monoms"], [212, 2, 1, "", "all_terms"], [212, 2, 1, "", "cancel"], [212, 2, 1, "", "cauchy_lower_bound"], [212, 2, 1, "", "cauchy_upper_bound"], [212, 2, 1, "", "clear_denoms"], [212, 2, 1, "", "coeffs"], [212, 2, 1, "", "cofactors"], [212, 2, 1, "", "compose"], [212, 2, 1, "", "content"], [212, 2, 1, "", "convert"], [212, 2, 1, "", "count_complex_roots"], [212, 2, 1, "", "count_real_roots"], [212, 2, 1, "", "decompose"], [212, 2, 1, "", "deflate"], [212, 2, 1, "", "degree"], [212, 2, 1, "", "degree_list"], [212, 2, 1, "", "diff"], [212, 2, 1, "", "discriminant"], [212, 2, 1, "", "div"], [212, 2, 1, "", "eject"], [212, 2, 1, "", "eval"], [212, 2, 1, "", "exclude"], [212, 2, 1, "", "exquo"], [212, 2, 1, "", "exquo_ground"], [212, 2, 1, "", "factor_list"], [212, 2, 1, "", "factor_list_include"], [212, 2, 1, "", "from_list"], [212, 2, 1, "", "from_sympy_list"], [212, 2, 1, "", "gcd"], [212, 2, 1, "", "gcdex"], [212, 2, 1, "", "gff_list"], [212, 2, 1, "", "ground_new"], [212, 2, 1, "", "half_gcdex"], [212, 2, 1, "", "homogeneous_order"], [212, 2, 1, "", "homogenize"], [212, 2, 1, "", "inject"], [212, 2, 1, "", "integrate"], [212, 2, 1, "", "intervals"], [212, 2, 1, "", "invert"], [212, 3, 1, "", "is_cyclotomic"], [212, 3, 1, "", "is_ground"], [212, 3, 1, "", "is_homogeneous"], [212, 3, 1, "", "is_irreducible"], [212, 3, 1, "", "is_linear"], [212, 3, 1, "", "is_monic"], [212, 3, 1, "", "is_monomial"], [212, 3, 1, "", "is_one"], [212, 3, 1, "", "is_primitive"], [212, 3, 1, "", "is_quadratic"], [212, 3, 1, "", "is_sqf"], [212, 3, 1, "", "is_zero"], [212, 2, 1, "", "l1_norm"], [212, 2, 1, "", "l2_norm_squared"], [212, 2, 1, "", "lcm"], [212, 2, 1, "", "lift"], [212, 2, 1, "", "max_norm"], [212, 2, 1, "", "mignotte_sep_bound_squared"], [212, 2, 1, "", "monic"], [212, 2, 1, "", "monoms"], [212, 2, 1, "", "mul"], [212, 2, 1, "", "mul_ground"], [212, 2, 1, "", "neg"], [212, 2, 1, "", "norm"], [212, 2, 1, "", "nth"], [212, 2, 1, "", "pdiv"], [212, 2, 1, "", "permute"], [212, 2, 1, "", "pexquo"], [212, 2, 1, "", "pow"], [212, 2, 1, "", "pquo"], [212, 2, 1, "", "prem"], [212, 2, 1, "", "primitive"], [212, 2, 1, "", "quo"], [212, 2, 1, "", "quo_ground"], [212, 2, 1, "", "refine_root"], [212, 2, 1, "", "rem"], [212, 3, 1, "", "rep"], [212, 2, 1, "", "resultant"], [212, 2, 1, "", "revert"], [212, 2, 1, "", "shift"], [212, 2, 1, "", "shift_list"], [212, 2, 1, "", "slice"], [212, 2, 1, "", "sqf_list"], [212, 2, 1, "", "sqf_list_include"], [212, 2, 1, "", "sqf_norm"], [212, 2, 1, "", "sqf_part"], [212, 2, 1, "", "sqr"], [212, 2, 1, "", "sturm"], [212, 2, 1, "", "sub"], [212, 2, 1, "", "sub_ground"], [212, 2, 1, "", "subresultants"], [212, 2, 1, "", "terms"], [212, 2, 1, "", "terms_gcd"], [212, 2, 1, "", "to_best"], [212, 2, 1, "", "to_dict"], [212, 2, 1, "", "to_exact"], [212, 2, 1, "", "to_field"], [212, 2, 1, "", "to_list"], [212, 2, 1, "", "to_ring"], [212, 2, 1, "", "to_sympy_dict"], [212, 2, 1, "", "to_sympy_list"], [212, 2, 1, "", "to_tuple"], [212, 2, 1, "", "total_degree"], [212, 2, 1, "", "transform"], [212, 2, 1, "", "trunc"], [212, 2, 1, "", "unify_DMP"]], "sympy.polys.polyconfig": [[214, 4, 1, "", "setup"]], "sympy.polys.polyerrors": [[214, 1, 1, "", "BasePolynomialError"], [214, 1, 1, "", "CoercionFailed"], [214, 1, 1, "", "ComputationFailed"], [214, 1, 1, "", "DomainError"], [214, 1, 1, "", "EvaluationFailed"], [214, 1, 1, "", "ExactQuotientFailed"], [214, 1, 1, "", "ExtraneousFactors"], [214, 1, 1, "", "FlagError"], [214, 1, 1, "", "GeneratorsError"], [214, 1, 1, "", "GeneratorsNeeded"], [214, 1, 1, "", "HeuristicGCDFailed"], [214, 1, 1, "", "HomomorphismFailed"], [214, 1, 1, "", "IsomorphismFailed"], [214, 1, 1, "", "MultivariatePolynomialError"], [214, 1, 1, "", "NotAlgebraic"], [214, 1, 1, "", "NotInvertible"], [214, 1, 1, "", "NotReversible"], [214, 1, 1, "", "OperationNotSupported"], [214, 1, 1, "", "OptionError"], [214, 1, 1, "", "PolificationFailed"], [214, 1, 1, "", "PolynomialError"], [214, 1, 1, "", "RefinementFailed"], [214, 1, 1, "", "UnificationFailed"], [214, 1, 1, "", "UnivariatePolynomialError"]], "sympy.polys.polyfuncs": [[217, 4, 1, "", "horner"], [217, 4, 1, "", "interpolate"], [217, 4, 1, "", "symmetrize"], [217, 4, 1, "", "viete"]], "sympy.polys.polyoptions": [[214, 1, 1, "", "Options"], [214, 4, 1, "", "build_options"]], "sympy.polys.polyoptions.Options": [[214, 2, 1, "", "clone"]], "sympy.polys.polyroots": [[217, 4, 1, "", "roots"]], "sympy.polys.polytools": [[217, 1, 1, "", "GroebnerBasis"], [217, 4, 1, "", "LC"], [217, 4, 1, "", "LM"], [217, 4, 1, "", "LT"], [217, 1, 1, "", "Poly"], [217, 1, 1, "", "PurePoly"], [217, 4, 1, "", "all_roots"], [217, 4, 1, "", "cancel"], [217, 4, 1, "", "cofactors"], [217, 4, 1, "", "compose"], [217, 4, 1, "", "content"], [217, 4, 1, "", "count_roots"], [217, 4, 1, "", "decompose"], [217, 4, 1, "", "degree"], [217, 4, 1, "", "degree_list"], [217, 4, 1, "", "discriminant"], [217, 4, 1, "", "div"], [217, 4, 1, "", "exquo"], [217, 4, 1, "", "factor"], [217, 4, 1, "", "factor_list"], [217, 4, 1, "", "gcd"], [217, 4, 1, "", "gcd_list"], [217, 4, 1, "", "gcdex"], [217, 4, 1, "", "gff"], [217, 4, 1, "", "gff_list"], [217, 4, 1, "", "groebner"], [217, 4, 1, "", "ground_roots"], [217, 4, 1, "", "half_gcdex"], [217, 4, 1, "", "intervals"], [217, 4, 1, "", "invert"], [217, 4, 1, "", "is_zero_dimensional"], [217, 4, 1, "", "lcm"], [217, 4, 1, "", "lcm_list"], [217, 4, 1, "", "monic"], [217, 4, 1, "", "nroots"], [217, 4, 1, "", "nth_power_roots_poly"], [217, 4, 1, "", "parallel_poly_from_expr"], [217, 4, 1, "", "pdiv"], [217, 4, 1, "", "pexquo"], [217, 4, 1, "", "poly"], [217, 4, 1, "", "poly_from_expr"], [217, 4, 1, "", "pquo"], [217, 4, 1, "", "prem"], [217, 4, 1, "", "primitive"], [217, 4, 1, "", "quo"], [217, 4, 1, "", "real_roots"], [217, 4, 1, "", "reduced"], [217, 4, 1, "", "refine_root"], [217, 4, 1, "", "rem"], [217, 4, 1, "", "resultant"], [217, 4, 1, "", "sqf"], [217, 4, 1, "", "sqf_list"], [217, 4, 1, "", "sqf_norm"], [217, 4, 1, "", "sqf_part"], [217, 4, 1, "", "sturm"], [217, 4, 1, "", "subresultants"], [217, 4, 1, "", "terms_gcd"], [217, 4, 1, "", "trunc"]], "sympy.polys.polytools.GroebnerBasis": [[217, 2, 1, "", "contains"], [217, 2, 1, "", "fglm"], [217, 3, 1, "", "is_zero_dimensional"], [217, 2, 1, "", "reduce"]], "sympy.polys.polytools.Poly": [[217, 2, 1, "", "EC"], [217, 2, 1, "", "EM"], [217, 2, 1, "", "ET"], [217, 2, 1, "", "LC"], [217, 2, 1, "", "LM"], [217, 2, 1, "", "LT"], [217, 2, 1, "", "TC"], [217, 2, 1, "", "abs"], [217, 2, 1, "", "add"], [217, 2, 1, "", "add_ground"], [217, 2, 1, "", "all_coeffs"], [217, 2, 1, "", "all_monoms"], [217, 2, 1, "", "all_roots"], [217, 2, 1, "", "all_terms"], [217, 2, 1, "", "as_dict"], [217, 2, 1, "", "as_expr"], [217, 2, 1, "", "as_list"], [217, 2, 1, "", "as_poly"], [217, 2, 1, "", "cancel"], [217, 2, 1, "", "clear_denoms"], [217, 2, 1, "", "coeff_monomial"], [217, 2, 1, "", "coeffs"], [217, 2, 1, "", "cofactors"], [217, 2, 1, "", "compose"], [217, 2, 1, "", "content"], [217, 2, 1, "", "count_roots"], [217, 2, 1, "", "decompose"], [217, 2, 1, "", "deflate"], [217, 2, 1, "", "degree"], [217, 2, 1, "", "degree_list"], [217, 2, 1, "", "diff"], [217, 2, 1, "", "discriminant"], [217, 2, 1, "", "dispersion"], [217, 2, 1, "", "dispersionset"], [217, 2, 1, "", "div"], [217, 3, 1, "", "domain"], [217, 2, 1, "", "eject"], [217, 2, 1, "", "eval"], [217, 2, 1, "", "exclude"], [217, 2, 1, "", "exquo"], [217, 2, 1, "", "exquo_ground"], [217, 2, 1, "", "factor_list"], [217, 2, 1, "", "factor_list_include"], [217, 3, 1, "", "free_symbols"], [217, 3, 1, "", "free_symbols_in_domain"], [217, 2, 1, "", "from_dict"], [217, 2, 1, "", "from_expr"], [217, 2, 1, "", "from_list"], [217, 2, 1, "", "from_poly"], [217, 2, 1, "", "galois_group"], [217, 2, 1, "", "gcd"], [217, 2, 1, "", "gcdex"], [217, 3, 1, "", "gen"], [217, 2, 1, "", "get_domain"], [217, 2, 1, "", "get_modulus"], [217, 2, 1, "", "gff_list"], [217, 2, 1, "", "ground_roots"], [217, 2, 1, "", "half_gcdex"], [217, 2, 1, "", "has_only_gens"], [217, 2, 1, "", "homogeneous_order"], [217, 2, 1, "", "homogenize"], [217, 2, 1, "", "inject"], [217, 2, 1, "", "integrate"], [217, 2, 1, "", "intervals"], [217, 2, 1, "", "invert"], [217, 3, 1, "", "is_cyclotomic"], [217, 3, 1, "", "is_ground"], [217, 3, 1, "", "is_homogeneous"], [217, 3, 1, "", "is_irreducible"], [217, 3, 1, "", "is_linear"], [217, 3, 1, "", "is_monic"], [217, 3, 1, "", "is_monomial"], [217, 3, 1, "", "is_multivariate"], [217, 3, 1, "", "is_one"], [217, 3, 1, "", "is_primitive"], [217, 3, 1, "", "is_quadratic"], [217, 3, 1, "", "is_sqf"], [217, 3, 1, "", "is_univariate"], [217, 3, 1, "", "is_zero"], [217, 2, 1, "", "l1_norm"], [217, 2, 1, "", "lcm"], [217, 2, 1, "", "length"], [217, 2, 1, "", "lift"], [217, 2, 1, "", "ltrim"], [217, 2, 1, "", "make_monic_over_integers_by_scaling_roots"], [217, 2, 1, "", "match"], [217, 2, 1, "", "max_norm"], [217, 2, 1, "", "monic"], [217, 2, 1, "", "monoms"], [217, 2, 1, "", "mul"], [217, 2, 1, "", "mul_ground"], [217, 2, 1, "", "neg"], [217, 2, 1, "", "new"], [217, 2, 1, "", "norm"], [217, 2, 1, "", "nroots"], [217, 2, 1, "", "nth"], [217, 2, 1, "", "nth_power_roots_poly"], [217, 3, 1, "", "one"], [217, 2, 1, "", "pdiv"], [217, 2, 1, "", "per"], [217, 2, 1, "", "pexquo"], [217, 2, 1, "", "pow"], [217, 2, 1, "", "pquo"], [217, 2, 1, "", "prem"], [217, 2, 1, "", "primitive"], [217, 2, 1, "", "quo"], [217, 2, 1, "", "quo_ground"], [217, 2, 1, "", "rat_clear_denoms"], [217, 2, 1, "", "real_roots"], [217, 2, 1, "", "refine_root"], [217, 2, 1, "", "rem"], [217, 2, 1, "", "reorder"], [217, 2, 1, "", "replace"], [217, 2, 1, "", "resultant"], [217, 2, 1, "", "retract"], [217, 2, 1, "", "revert"], [217, 2, 1, "", "root"], [217, 2, 1, "", "same_root"], [217, 2, 1, "", "set_domain"], [217, 2, 1, "", "set_modulus"], [217, 2, 1, "", "shift"], [217, 2, 1, "", "shift_list"], [217, 2, 1, "", "slice"], [217, 2, 1, "", "sqf_list"], [217, 2, 1, "", "sqf_list_include"], [217, 2, 1, "", "sqf_norm"], [217, 2, 1, "", "sqf_part"], [217, 2, 1, "", "sqr"], [217, 2, 1, "", "sturm"], [217, 2, 1, "", "sub"], [217, 2, 1, "", "sub_ground"], [217, 2, 1, "", "subresultants"], [217, 2, 1, "", "terms"], [217, 2, 1, "", "terms_gcd"], [217, 2, 1, "", "termwise"], [217, 2, 1, "", "to_exact"], [217, 2, 1, "", "to_field"], [217, 2, 1, "", "to_ring"], [217, 2, 1, "", "total_degree"], [217, 2, 1, "", "transform"], [217, 2, 1, "", "trunc"], [217, 2, 1, "", "unify"], [217, 3, 1, "", "unit"], [217, 2, 1, "", "which_all_roots"], [217, 2, 1, "", "which_real_roots"], [217, 3, 1, "", "zero"]], "sympy.polys.polytools.PurePoly": [[217, 3, 1, "", "free_symbols"]], "sympy.polys.rationaltools": [[217, 4, 1, "", "together"]], "sympy.polys.ring_series": [[218, 4, 1, "", "_tan1"], [218, 4, 1, "", "mul_xin"], [218, 4, 1, "", "pow_xin"], [218, 4, 1, "", "rs_LambertW"], [218, 4, 1, "", "rs_asin"], [218, 4, 1, "", "rs_atan"], [218, 4, 1, "", "rs_atanh"], [218, 4, 1, "", "rs_compose_add"], [218, 4, 1, "", "rs_cos"], [218, 4, 1, "", "rs_cos_sin"], [218, 4, 1, "", "rs_cosh"], [218, 4, 1, "", "rs_cot"], [218, 4, 1, "", "rs_diff"], [218, 4, 1, "", "rs_exp"], [218, 4, 1, "", "rs_fun"], [218, 4, 1, "", "rs_hadamard_exp"], [218, 4, 1, "", "rs_integrate"], [218, 4, 1, "", "rs_is_puiseux"], [218, 4, 1, "", "rs_log"], [218, 4, 1, "", "rs_mul"], [218, 4, 1, "", "rs_newton"], [218, 4, 1, "", "rs_nth_root"], [218, 4, 1, "", "rs_pow"], [218, 4, 1, "", "rs_puiseux"], [218, 4, 1, "", "rs_puiseux2"], [218, 4, 1, "", "rs_series_from_list"], [218, 4, 1, "", "rs_series_inversion"], [218, 4, 1, "", "rs_series_reversion"], [218, 4, 1, "", "rs_sin"], [218, 4, 1, "", "rs_sinh"], [218, 4, 1, "", "rs_square"], [218, 4, 1, "", "rs_subs"], [218, 4, 1, "", "rs_tan"], [218, 4, 1, "", "rs_tanh"], [218, 4, 1, "", "rs_trunc"]], "sympy.polys.rings": [[212, 1, 1, "", "PolyElement"], [212, 1, 1, "", "PolyRing"], [212, 4, 1, "", "ring"], [212, 4, 1, "", "sring"], [212, 4, 1, "", "vring"], [212, 4, 1, "", "xring"]], "sympy.polys.rings.PolyElement": [[212, 2, 1, "", "almosteq"], [212, 2, 1, "", "cancel"], [212, 2, 1, "", "coeff"], [212, 2, 1, "", "coeff_wrt"], [212, 2, 1, "", "coeffs"], [212, 2, 1, "", "const"], [212, 2, 1, "", "content"], [212, 2, 1, "", "copy"], [212, 2, 1, "", "degree"], [212, 2, 1, "", "degrees"], [212, 2, 1, "", "diff"], [212, 2, 1, "", "div"], [212, 2, 1, "", "imul_num"], [212, 2, 1, "", "itercoeffs"], [212, 2, 1, "", "itermonoms"], [212, 2, 1, "", "iterterms"], [212, 2, 1, "", "leading_expv"], [212, 2, 1, "", "leading_monom"], [212, 2, 1, "", "leading_term"], [212, 2, 1, "", "listcoeffs"], [212, 2, 1, "", "listmonoms"], [212, 2, 1, "", "listterms"], [212, 2, 1, "", "monic"], [212, 2, 1, "", "monoms"], [212, 2, 1, "", "pdiv"], [212, 2, 1, "", "pexquo"], [212, 2, 1, "", "pquo"], [212, 2, 1, "", "prem"], [212, 2, 1, "", "primitive"], [212, 2, 1, "", "square"], [212, 2, 1, "", "strip_zero"], [212, 2, 1, "", "subresultants"], [212, 2, 1, "", "symmetrize"], [212, 2, 1, "", "tail_degree"], [212, 2, 1, "", "tail_degrees"], [212, 2, 1, "", "terms"]], "sympy.polys.rings.PolyRing": [[212, 2, 1, "", "add"], [212, 2, 1, "", "add_gens"], [212, 2, 1, "", "compose"], [212, 2, 1, "", "drop"], [212, 2, 1, "", "drop_to_ground"], [212, 2, 1, "", "index"], [212, 2, 1, "", "monomial_basis"], [212, 2, 1, "", "mul"], [212, 2, 1, "", "symmetric_poly"]], "sympy.polys.rootoftools": [[217, 1, 1, "", "ComplexRootOf"], [217, 1, 1, "", "RootOf"], [217, 1, 1, "", "RootSum"], [217, 4, 1, "", "rootof"]], "sympy.polys.rootoftools.ComplexRootOf": [[217, 2, 1, "", "_all_roots"], [217, 2, 1, "", "_complexes_index"], [217, 2, 1, "", "_complexes_sorted"], [217, 2, 1, "", "_count_roots"], [217, 2, 1, "", "_ensure_complexes_init"], [217, 2, 1, "", "_ensure_reals_init"], [217, 2, 1, "", "_eval_evalf"], [217, 2, 1, "", "_eval_is_imaginary"], [217, 2, 1, "", "_eval_is_real"], [217, 2, 1, "", "_get_complexes"], [217, 2, 1, "", "_get_complexes_sqf"], [217, 2, 1, "", "_get_interval"], [217, 2, 1, "", "_get_reals"], [217, 2, 1, "", "_get_reals_sqf"], [217, 2, 1, "", "_get_roots"], [217, 2, 1, "", "_get_roots_alg"], [217, 2, 1, "", "_get_roots_qq"], [217, 2, 1, "", "_indexed_root"], [217, 2, 1, "", "_new"], [217, 2, 1, "", "_postprocess_root"], [217, 2, 1, "", "_preprocess_roots"], [217, 2, 1, "", "_real_roots"], [217, 2, 1, "", "_reals_index"], [217, 2, 1, "", "_reals_sorted"], [217, 2, 1, "", "_refine_complexes"], [217, 2, 1, "", "_reset"], [217, 2, 1, "", "_roots_trivial"], [217, 2, 1, "", "_set_interval"], [217, 2, 1, "", "all_roots"], [217, 2, 1, "", "clear_cache"], [217, 2, 1, "", "eval_approx"], [217, 2, 1, "", "eval_rational"], [217, 2, 1, "", "real_roots"]], "sympy.polys.rootoftools.RootSum": [[217, 2, 1, "", "new"]], "sympy.polys.solvers": [[219, 4, 1, "", "_solve_lin_sys"], [219, 4, 1, "", "_solve_lin_sys_component"], [219, 4, 1, "", "eqs_to_matrix"], [219, 4, 1, "", "solve_lin_sys"], [219, 4, 1, "", "sympy_eqs_to_ring"]], "sympy.polys.specialpolys": [[217, 4, 1, "", "cyclotomic_poly"], [217, 4, 1, "", "interpolating_poly"], [217, 4, 1, "", "random_poly"], [217, 4, 1, "", "swinnerton_dyer_poly"], [217, 4, 1, "", "symmetric_poly"]], "sympy.polys.sqfreetools": [[214, 4, 1, "", "dmp_gf_sqf_list"], [214, 4, 1, "", "dmp_gf_sqf_part"], [214, 4, 1, "", "dmp_gff_list"], [214, 4, 1, "", "dmp_norm"], [214, 4, 1, "", "dmp_sqf_list"], [214, 4, 1, "", "dmp_sqf_list_include"], [214, 4, 1, "", "dmp_sqf_norm"], [214, 4, 1, "", "dmp_sqf_p"], [214, 4, 1, "", "dmp_sqf_part"], [214, 4, 1, "", "dup_gf_sqf_list"], [214, 4, 1, "", "dup_gf_sqf_part"], [214, 4, 1, "", "dup_gff_list"], [214, 4, 1, "", "dup_sqf_list"], [214, 4, 1, "", "dup_sqf_list_include"], [214, 4, 1, "", "dup_sqf_norm"], [214, 4, 1, "", "dup_sqf_p"], [214, 4, 1, "", "dup_sqf_part"]], "sympy.printing": [[221, 0, 0, "-", "aesaracode"], [221, 0, 0, "-", "c"], [221, 0, 0, "-", "codeprinter"], [221, 0, 0, "-", "conventions"], [221, 0, 0, "-", "cxx"], [221, 0, 0, "-", "fortran"], [221, 0, 0, "-", "gtk"], [221, 0, 0, "-", "jscode"], [221, 0, 0, "-", "julia"], [221, 0, 0, "-", "lambdarepr"], [221, 0, 0, "-", "latex"], [221, 0, 0, "-", "maple"], [221, 0, 0, "-", "mathematica"], [221, 0, 0, "-", "mathml"], [221, 0, 0, "-", "octave"], [221, 0, 0, "-", "precedence"], [221, 0, 0, "-", "pretty"], [221, 0, 0, "-", "preview"], [221, 0, 0, "-", "printer"], [221, 0, 0, "-", "pycode"], [221, 0, 0, "-", "python"], [221, 0, 0, "-", "rcode"], [221, 0, 0, "-", "repr"], [221, 0, 0, "-", "rust"], [221, 0, 0, "-", "smtlib"], [221, 0, 0, "-", "str"], [221, 0, 0, "-", "tree"]], "sympy.printing.aesaracode": [[221, 1, 1, "", "AesaraPrinter"], [221, 4, 1, "", "aesara_code"], [221, 4, 1, "", "aesara_function"], [221, 4, 1, "", "dim_handling"]], "sympy.printing.aesaracode.AesaraPrinter": [[221, 2, 1, "", "doprint"], [221, 5, 1, "", "printmethod"]], "sympy.printing.c": [[221, 1, 1, "", "C89CodePrinter"], [221, 1, 1, "", "C99CodePrinter"], [221, 4, 1, "", "ccode"], [221, 6, 1, "", "known_functions_C89"], [221, 6, 1, "", "known_functions_C99"], [221, 4, 1, "", "print_ccode"]], "sympy.printing.c.C89CodePrinter": [[221, 2, 1, "", "indent_code"], [221, 5, 1, "", "printmethod"]], "sympy.printing.c.C99CodePrinter": [[221, 5, 1, "", "printmethod"]], "sympy.printing.codeprinter": [[221, 7, 1, "", "AssignmentError"], [221, 1, 1, "", "CodePrinter"], [221, 4, 1, "", "cxxcode"], [221, 4, 1, "", "rust_code"]], "sympy.printing.codeprinter.CodePrinter": [[221, 2, 1, "", "doprint"], [221, 5, 1, "", "printmethod"]], "sympy.printing.conventions": [[221, 4, 1, "", "split_super_sub"]], "sympy.printing.cxx": [[221, 1, 1, "", "CXX11CodePrinter"], [221, 1, 1, "", "CXX98CodePrinter"]], "sympy.printing.cxx.CXX11CodePrinter": [[221, 5, 1, "", "printmethod"]], "sympy.printing.cxx.CXX98CodePrinter": [[221, 5, 1, "", "printmethod"]], "sympy.printing.dot": [[221, 4, 1, "", "dotprint"]], "sympy.printing.fortran": [[221, 1, 1, "", "FCodePrinter"], [221, 4, 1, "", "fcode"], [221, 4, 1, "", "print_fcode"]], "sympy.printing.fortran.FCodePrinter": [[221, 2, 1, "", "indent_code"], [221, 5, 1, "", "printmethod"]], "sympy.printing.gtk": [[221, 4, 1, "", "print_gtk"]], "sympy.printing.jscode": [[221, 1, 1, "", "JavascriptCodePrinter"], [221, 4, 1, "", "jscode"], [221, 6, 1, "", "known_functions"]], "sympy.printing.jscode.JavascriptCodePrinter": [[221, 2, 1, "", "indent_code"], [221, 5, 1, "", "printmethod"]], "sympy.printing.julia": [[221, 1, 1, "", "JuliaCodePrinter"], [221, 4, 1, "", "julia_code"], [221, 6, 1, "", "known_fcns_src1"], [221, 6, 1, "", "known_fcns_src2"]], "sympy.printing.julia.JuliaCodePrinter": [[221, 2, 1, "", "indent_code"], [221, 5, 1, "", "printmethod"]], "sympy.printing.lambdarepr": [[221, 1, 1, "", "LambdaPrinter"], [221, 4, 1, "", "lambdarepr"]], "sympy.printing.lambdarepr.LambdaPrinter": [[221, 5, 1, "", "printmethod"]], "sympy.printing.latex": [[221, 1, 1, "", "LatexPrinter"], [221, 6, 1, "", "accepted_latex_functions"], [221, 4, 1, "", "latex"], [221, 4, 1, "", "print_latex"]], "sympy.printing.latex.LatexPrinter": [[221, 2, 1, "", "parenthesize_super"], [221, 5, 1, "", "printmethod"]], "sympy.printing.maple": [[221, 1, 1, "", "MapleCodePrinter"], [221, 4, 1, "", "maple_code"], [221, 4, 1, "", "print_maple_code"]], "sympy.printing.maple.MapleCodePrinter": [[221, 5, 1, "", "printmethod"]], "sympy.printing.mathematica": [[221, 1, 1, "", "MCodePrinter"], [221, 6, 1, "", "known_functions"], [221, 4, 1, "", "mathematica_code"]], "sympy.printing.mathematica.MCodePrinter": [[221, 5, 1, "", "printmethod"]], "sympy.printing.mathml": [[221, 1, 1, "", "MathMLContentPrinter"], [221, 1, 1, "", "MathMLPresentationPrinter"], [221, 1, 1, "", "MathMLPrinterBase"], [221, 4, 1, "", "mathml"], [221, 4, 1, "", "print_mathml"]], "sympy.printing.mathml.MathMLContentPrinter": [[221, 2, 1, "", "mathml_tag"], [221, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPresentationPrinter": [[221, 2, 1, "", "mathml_tag"], [221, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPrinterBase": [[221, 2, 1, "", "doprint"]], "sympy.printing.octave": [[221, 1, 1, "", "OctaveCodePrinter"], [221, 6, 1, "", "known_fcns_src1"], [221, 6, 1, "", "known_fcns_src2"], [221, 4, 1, "", "octave_code"]], "sympy.printing.octave.OctaveCodePrinter": [[221, 2, 1, "", "indent_code"], [221, 5, 1, "", "printmethod"]], "sympy.printing.precedence": [[221, 6, 1, "", "PRECEDENCE"], [221, 6, 1, "", "PRECEDENCE_FUNCTIONS"], [221, 6, 1, "", "PRECEDENCE_VALUES"], [221, 4, 1, "", "precedence"]], "sympy.printing.pretty": [[221, 0, 0, "-", "pretty"], [221, 0, 0, "-", "pretty_symbology"], [221, 0, 0, "-", "stringpict"]], "sympy.printing.pretty.pretty": [[221, 1, 1, "", "PrettyPrinter"], [221, 4, 1, "", "pretty"], [221, 4, 1, "", "pretty_print"]], "sympy.printing.pretty.pretty.PrettyPrinter": [[221, 5, 1, "", "printmethod"]], "sympy.printing.pretty.pretty_symbology": [[221, 4, 1, "", "G"], [221, 4, 1, "", "U"], [221, 4, 1, "", "VF"], [221, 4, 1, "", "annotated"], [221, 6, 1, "", "atoms_table"], [221, 6, 1, "", "digit_2txt"], [221, 6, 1, "", "frac"], [221, 4, 1, "", "g"], [221, 6, 1, "", "greek_letters"], [221, 4, 1, "", "hobj"], [221, 4, 1, "", "pretty_atom"], [221, 4, 1, "", "pretty_symbol"], [221, 4, 1, "", "pretty_try_use_unicode"], [221, 4, 1, "", "pretty_use_unicode"], [221, 6, 1, "", "root"], [221, 6, 1, "", "sub"], [221, 6, 1, "", "sup"], [221, 6, 1, "", "symb_2txt"], [221, 4, 1, "", "vobj"], [221, 4, 1, "", "xobj"], [221, 4, 1, "", "xstr"], [221, 4, 1, "", "xsym"]], "sympy.printing.pretty.stringpict": [[221, 1, 1, "", "prettyForm"], [221, 1, 1, "", "stringPict"]], "sympy.printing.pretty.stringpict.prettyForm": [[221, 2, 1, "", "apply"]], "sympy.printing.pretty.stringpict.stringPict": [[221, 2, 1, "", "above"], [221, 2, 1, "", "below"], [221, 2, 1, "", "height"], [221, 2, 1, "", "left"], [221, 2, 1, "", "leftslash"], [221, 2, 1, "", "next"], [221, 2, 1, "", "parens"], [221, 2, 1, "", "render"], [221, 2, 1, "", "right"], [221, 2, 1, "", "root"], [221, 2, 1, "", "stack"], [221, 2, 1, "", "terminal_width"], [221, 2, 1, "", "width"]], "sympy.printing.preview": [[221, 4, 1, "", "preview"]], "sympy.printing.printer": [[221, 1, 1, "", "Printer"]], "sympy.printing.printer.Printer": [[221, 2, 1, "", "_print"], [221, 2, 1, "", "doprint"], [221, 5, 1, "", "printmethod"], [221, 2, 1, "", "set_global_settings"]], "sympy.printing.pycode": [[221, 1, 1, "", "MpmathPrinter"], [221, 4, 1, "", "pycode"]], "sympy.printing.rcode": [[221, 1, 1, "", "RCodePrinter"], [221, 6, 1, "", "known_functions"], [221, 4, 1, "", "print_rcode"], [221, 4, 1, "", "rcode"]], "sympy.printing.rcode.RCodePrinter": [[221, 2, 1, "", "indent_code"], [221, 5, 1, "", "printmethod"]], "sympy.printing.repr": [[221, 1, 1, "", "ReprPrinter"], [221, 4, 1, "", "srepr"]], "sympy.printing.repr.ReprPrinter": [[221, 2, 1, "", "emptyPrinter"], [221, 5, 1, "", "printmethod"], [221, 2, 1, "", "reprify"]], "sympy.printing.rust": [[221, 1, 1, "", "RustCodePrinter"], [221, 6, 1, "", "known_functions"]], "sympy.printing.rust.RustCodePrinter": [[221, 2, 1, "", "indent_code"], [221, 5, 1, "", "printmethod"]], "sympy.printing.smtlib": [[221, 1, 1, "", "SMTLibPrinter"], [221, 4, 1, "", "smtlib_code"]], "sympy.printing.smtlib.SMTLibPrinter": [[221, 5, 1, "", "_default_settings"], [221, 5, 1, "", "printmethod"]], "sympy.printing.str": [[221, 1, 1, "", "StrPrinter"], [221, 4, 1, "", "sstr"], [221, 4, 1, "", "sstrrepr"]], "sympy.printing.str.StrPrinter": [[221, 5, 1, "", "printmethod"]], "sympy.printing.tree": [[221, 4, 1, "", "pprint_nodes"], [221, 4, 1, "", "print_node"], [221, 4, 1, "", "print_tree"], [221, 4, 1, "", "tree"]], "sympy.series.acceleration": [[228, 4, 1, "", "richardson"], [228, 4, 1, "", "shanks"]], "sympy.series.formal": [[223, 1, 1, "", "FiniteFormalPowerSeries"], [223, 1, 1, "", "FormalPowerSeries"], [223, 1, 1, "", "FormalPowerSeriesCompose"], [223, 1, 1, "", "FormalPowerSeriesInverse"], [223, 1, 1, "", "FormalPowerSeriesProduct"], [223, 4, 1, "", "compute_fps"], [223, 4, 1, "", "exp_re"], [223, 4, 1, "", "fps"], [223, 4, 1, "", "hyper_algorithm"], [223, 4, 1, "", "hyper_re"], [223, 4, 1, "", "rational_algorithm"], [223, 4, 1, "", "rational_independent"], [223, 4, 1, "", "rsolve_hypergeometric"], [223, 4, 1, "", "simpleDE"], [223, 4, 1, "", "solve_de"]], "sympy.series.formal.FormalPowerSeries": [[223, 2, 1, "", "coeff_bell"], [223, 2, 1, "", "compose"], [223, 3, 1, "", "infinite"], [223, 2, 1, "", "integrate"], [223, 2, 1, "", "inverse"], [223, 2, 1, "", "polynomial"], [223, 2, 1, "", "product"], [223, 2, 1, "", "truncate"]], "sympy.series.formal.FormalPowerSeriesCompose": [[223, 3, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesInverse": [[223, 3, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesProduct": [[223, 3, 1, "", "function"]], "sympy.series.fourier": [[224, 1, 1, "", "FourierSeries"], [224, 4, 1, "", "fourier_series"]], "sympy.series.fourier.FourierSeries": [[224, 2, 1, "", "scale"], [224, 2, 1, "", "scalex"], [224, 2, 1, "", "shift"], [224, 2, 1, "", "shiftx"], [224, 2, 1, "", "sigma_approximation"], [224, 2, 1, "", "truncate"]], "sympy.series.gruntz": [[228, 1, 1, "", "SubsSet"], [228, 4, 1, "", "build_expression_tree"], [228, 4, 1, "", "calculate_series"], [228, 4, 1, "", "compare"], [228, 4, 1, "", "gruntz"], [228, 4, 1, "", "limitinf"], [228, 4, 1, "", "mrv"], [228, 4, 1, "", "mrv_leadterm"], [228, 4, 1, "", "mrv_max1"], [228, 4, 1, "", "mrv_max3"], [228, 4, 1, "", "rewrite"], [228, 4, 1, "", "sign"]], "sympy.series.gruntz.SubsSet": [[228, 2, 1, "", "copy"], [228, 2, 1, "", "do_subs"], [228, 2, 1, "", "meets"], [228, 2, 1, "", "union"]], "sympy.series.limits": [[228, 1, 1, "", "Limit"], [228, 4, 1, "", "limit"]], "sympy.series.limits.Limit": [[228, 2, 1, "", "doit"]], "sympy.series.limitseq": [[226, 4, 1, "", "difference_delta"], [226, 4, 1, "", "dominant"], [226, 4, 1, "", "limit_seq"]], "sympy.series.order": [[228, 1, 1, "", "Order"]], "sympy.series.order.Order": [[228, 2, 1, "", "contains"]], "sympy.series.residues": [[228, 4, 1, "", "residue"]], "sympy.series.sequences": [[227, 1, 1, "", "EmptySequence"], [227, 1, 1, "", "RecursiveSeq"], [227, 1, 1, "", "SeqAdd"], [227, 1, 1, "", "SeqBase"], [227, 1, 1, "", "SeqFormula"], [227, 1, 1, "", "SeqMul"], [227, 1, 1, "", "SeqPer"], [227, 4, 1, "", "sequence"]], "sympy.series.sequences.EmptySequence": [[227, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.RecursiveSeq": [[227, 3, 1, "", "initial"], [227, 3, 1, "", "interval"], [227, 3, 1, "", "n"], [227, 3, 1, "", "recurrence"], [227, 3, 1, "", "start"], [227, 3, 1, "", "stop"], [227, 3, 1, "", "y"], [227, 3, 1, "", "yn"]], "sympy.series.sequences.SeqAdd": [[227, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqBase": [[227, 2, 1, "", "coeff"], [227, 2, 1, "", "coeff_mul"], [227, 2, 1, "", "find_linear_recurrence"], [227, 3, 1, "", "free_symbols"], [227, 3, 1, "", "gen"], [227, 3, 1, "", "interval"], [227, 3, 1, "", "length"], [227, 3, 1, "", "start"], [227, 3, 1, "", "stop"], [227, 3, 1, "", "variables"]], "sympy.series.sequences.SeqFormula": [[227, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.SeqMul": [[227, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqPer": [[227, 2, 1, "", "coeff_mul"]], "sympy.series.series": [[228, 4, 1, "", "series"]], "sympy.sets": [[229, 0, 0, "-", "conditionset"], [229, 0, 0, "-", "fancysets"], [229, 0, 0, "-", "powerset"], [229, 0, 0, "-", "sets"]], "sympy.sets.conditionset": [[229, 1, 1, "", "ConditionSet"], [229, 1, 1, "", "Contains"], [229, 1, 1, "", "SetKind"]], "sympy.sets.fancysets": [[229, 1, 1, "", "CartesianComplexRegion"], [229, 1, 1, "", "ComplexRegion"], [229, 1, 1, "", "Complexes"], [229, 1, 1, "", "ImageSet"], [229, 1, 1, "", "Integers"], [229, 1, 1, "", "Naturals"], [229, 1, 1, "", "Naturals0"], [229, 1, 1, "", "PolarComplexRegion"], [229, 1, 1, "", "Range"], [229, 1, 1, "", "Rationals"], [229, 1, 1, "", "Reals"], [229, 4, 1, "", "normalize_theta_set"]], "sympy.sets.fancysets.ComplexRegion": [[229, 3, 1, "", "a_interval"], [229, 3, 1, "", "b_interval"], [229, 2, 1, "", "from_real"], [229, 3, 1, "", "psets"], [229, 3, 1, "", "sets"]], "sympy.sets.fancysets.Range": [[229, 2, 1, "", "as_relational"], [229, 3, 1, "", "reversed"]], "sympy.sets.powerset": [[229, 1, 1, "", "PowerSet"]], "sympy.sets.sets": [[229, 1, 1, "", "Complement"], [229, 1, 1, "", "DisjointUnion"], [229, 1, 1, "", "EmptySet"], [229, 1, 1, "", "FiniteSet"], [229, 1, 1, "", "Intersection"], [229, 1, 1, "", "Interval"], [229, 1, 1, "", "ProductSet"], [229, 1, 1, "", "Set"], [229, 1, 1, "", "SymmetricDifference"], [229, 1, 1, "", "Union"], [229, 1, 1, "", "UniversalSet"], [229, 4, 1, "", "imageset"]], "sympy.sets.sets.Complement": [[229, 2, 1, "", "as_relational"], [229, 2, 1, "", "reduce"]], "sympy.sets.sets.FiniteSet": [[229, 2, 1, "", "as_relational"]], "sympy.sets.sets.Intersection": [[229, 2, 1, "", "as_relational"]], "sympy.sets.sets.Interval": [[229, 2, 1, "", "Lopen"], [229, 2, 1, "", "Ropen"], [229, 2, 1, "", "as_relational"], [229, 3, 1, "", "end"], [229, 3, 1, "", "is_left_unbounded"], [229, 3, 1, "", "is_right_unbounded"], [229, 3, 1, "", "left_open"], [229, 2, 1, "", "open"], [229, 3, 1, "", "right_open"], [229, 3, 1, "", "start"]], "sympy.sets.sets.ProductSet": [[229, 3, 1, "", "is_iterable"]], "sympy.sets.sets.Set": [[229, 3, 1, "", "boundary"], [229, 3, 1, "", "closure"], [229, 2, 1, "", "complement"], [229, 2, 1, "", "contains"], [229, 3, 1, "", "inf"], [229, 3, 1, "", "interior"], [229, 2, 1, "", "intersect"], [229, 2, 1, "", "intersection"], [229, 3, 1, "", "is_closed"], [229, 2, 1, "", "is_disjoint"], [229, 3, 1, "", "is_open"], [229, 2, 1, "", "is_proper_subset"], [229, 2, 1, "", "is_proper_superset"], [229, 2, 1, "", "is_subset"], [229, 2, 1, "", "is_superset"], [229, 2, 1, "", "isdisjoint"], [229, 2, 1, "", "issubset"], [229, 2, 1, "", "issuperset"], [229, 3, 1, "", "kind"], [229, 3, 1, "", "measure"], [229, 2, 1, "", "powerset"], [229, 3, 1, "", "sup"], [229, 2, 1, "", "symmetric_difference"], [229, 2, 1, "", "union"]], "sympy.sets.sets.SymmetricDifference": [[229, 2, 1, "", "as_relational"]], "sympy.sets.sets.Union": [[229, 2, 1, "", "as_relational"]], "sympy.simplify": [[233, 0, 0, "-", "combsimp"], [233, 0, 0, "-", "cse_main"], [233, 0, 0, "-", "epathtools"], [230, 0, 0, "-", "fu"], [233, 0, 0, "-", "hyperexpand"], [231, 0, 0, "-", "hyperexpand_doc"], [233, 0, 0, "-", "powsimp"], [233, 0, 0, "-", "radsimp"], [233, 0, 0, "-", "ratsimp"], [16, 0, 0, "-", "simplify"], [233, 0, 0, "-", "sqrtdenest"], [233, 0, 0, "-", "trigsimp"]], "sympy.simplify.combsimp": [[233, 4, 1, "", "combsimp"]], "sympy.simplify.cse_main": [[233, 4, 1, "", "cse"], [233, 4, 1, "", "opt_cse"], [233, 4, 1, "", "tree_cse"]], "sympy.simplify.epathtools": [[233, 1, 1, "", "EPath"], [233, 4, 1, "", "epath"]], "sympy.simplify.epathtools.EPath": [[233, 2, 1, "", "apply"], [233, 2, 1, "", "select"]], "sympy.simplify.fu": [[230, 4, 1, "", "TR0"], [230, 4, 1, "", "TR1"], [230, 4, 1, "", "TR10"], [230, 4, 1, "", "TR10i"], [230, 4, 1, "", "TR11"], [230, 4, 1, "", "TR111"], [230, 4, 1, "", "TR12"], [230, 4, 1, "", "TR12i"], [230, 4, 1, "", "TR13"], [230, 4, 1, "", "TR14"], [230, 4, 1, "", "TR15"], [230, 4, 1, "", "TR16"], [230, 4, 1, "", "TR2"], [230, 4, 1, "", "TR22"], [230, 4, 1, "", "TR2i"], [230, 4, 1, "", "TR3"], [230, 4, 1, "", "TR4"], [230, 4, 1, "", "TR5"], [230, 4, 1, "", "TR6"], [230, 4, 1, "", "TR7"], [230, 4, 1, "", "TR8"], [230, 4, 1, "", "TR9"], [230, 4, 1, "", "TRmorrie"], [230, 4, 1, "", "TRpower"], [230, 4, 1, "", "fu"]], "sympy.simplify.hyperexpand": [[233, 4, 1, "", "hyperexpand"]], "sympy.simplify.powsimp": [[233, 4, 1, "", "powdenest"], [233, 4, 1, "", "powsimp"]], "sympy.simplify.radsimp": [[233, 4, 1, "", "collect"], [233, 4, 1, "", "collect_const"], [233, 4, 1, "", "collect_sqrt"], [233, 4, 1, "", "fraction"], [233, 4, 1, "", "rad_rationalize"], [233, 4, 1, "", "radsimp"], [233, 4, 1, "", "rcollect"]], "sympy.simplify.ratsimp": [[233, 4, 1, "", "ratsimp"], [233, 4, 1, "", "ratsimpmodprime"]], "sympy.simplify.simplify": [[233, 4, 1, "", "besselsimp"], [233, 4, 1, "", "hypersimilar"], [233, 4, 1, "", "hypersimp"], [233, 4, 1, "", "kroneckersimp"], [233, 4, 1, "", "logcombine"], [233, 4, 1, "", "nsimplify"], [233, 4, 1, "", "nthroot"], [233, 4, 1, "", "posify"], [233, 4, 1, "", "separatevars"], [233, 4, 1, "", "simplify"]], "sympy.simplify.sqrtdenest": [[233, 4, 1, "", "sqrtdenest"]], "sympy.simplify.trigsimp": [[233, 4, 1, "", "trigsimp"]], "sympy.solvers": [[236, 0, 0, "-", "inequalities"], [237, 0, 0, "-", "ode"], [238, 0, 0, "-", "pde"], [239, 0, 0, "-", "recurr"], [239, 0, 0, "-", "simplex"], [240, 0, 0, "-", "solveset"]], "sympy.solvers.deutils": [[239, 4, 1, "", "ode_order"]], "sympy.solvers.diophantine.diophantine": [[234, 1, 1, "", "BinaryQuadratic"], [234, 1, 1, "", "CubicThue"], [234, 1, 1, "", "DiophantineEquationType"], [234, 1, 1, "", "DiophantineSolutionSet"], [234, 1, 1, "", "GeneralPythagorean"], [234, 1, 1, "", "GeneralSumOfEvenPowers"], [234, 1, 1, "", "GeneralSumOfSquares"], [234, 1, 1, "", "HomogeneousGeneralQuadratic"], [234, 1, 1, "", "HomogeneousTernaryQuadratic"], [234, 1, 1, "", "HomogeneousTernaryQuadraticNormal"], [234, 1, 1, "", "InhomogeneousGeneralQuadratic"], [234, 1, 1, "", "InhomogeneousTernaryQuadratic"], [234, 1, 1, "", "Linear"], [234, 4, 1, "", "PQa"], [234, 1, 1, "", "Univariate"], [234, 4, 1, "", "base_solution_linear"], [234, 4, 1, "", "classify_diop"], [234, 4, 1, "", "cornacchia"], [234, 4, 1, "", "descent"], [234, 4, 1, "", "diop_DN"], [234, 4, 1, "", "diop_bf_DN"], [234, 4, 1, "", "diop_general_pythagorean"], [234, 4, 1, "", "diop_general_sum_of_even_powers"], [234, 4, 1, "", "diop_general_sum_of_squares"], [234, 4, 1, "", "diop_linear"], [234, 4, 1, "", "diop_quadratic"], [234, 4, 1, "", "diop_solve"], [234, 4, 1, "", "diop_ternary_quadratic"], [234, 4, 1, "", "diop_ternary_quadratic_normal"], [234, 4, 1, "", "diophantine"], [234, 4, 1, "", "divisible"], [234, 4, 1, "", "equivalent"], [234, 4, 1, "", "find_DN"], [234, 4, 1, "", "gaussian_reduce"], [234, 4, 1, "", "holzer"], [234, 4, 1, "", "ldescent"], [234, 4, 1, "", "merge_solution"], [234, 4, 1, "", "parametrize_ternary_quadratic"], [234, 4, 1, "", "partition"], [234, 4, 1, "", "power_representation"], [234, 4, 1, "", "prime_as_sum_of_two_squares"], [234, 4, 1, "", "reconstruct"], [234, 4, 1, "", "sqf_normal"], [234, 4, 1, "", "square_factor"], [234, 4, 1, "", "sum_of_four_squares"], [234, 4, 1, "", "sum_of_powers"], [234, 4, 1, "", "sum_of_squares"], [234, 4, 1, "", "sum_of_three_squares"], [234, 4, 1, "", "transformation_to_DN"], [234, 4, 1, "", "transformation_to_normal"]], "sympy.solvers.diophantine.diophantine.DiophantineEquationType": [[234, 2, 1, "", "matches"]], "sympy.solvers.inequalities": [[236, 4, 1, "", "reduce_abs_inequalities"], [236, 4, 1, "", "reduce_abs_inequality"], [236, 4, 1, "", "reduce_inequalities"], [236, 4, 1, "", "reduce_rational_inequalities"], [236, 4, 1, "", "solve_poly_inequalities"], [236, 4, 1, "", "solve_poly_inequality"], [236, 4, 1, "", "solve_rational_inequalities"], [236, 4, 1, "", "solve_univariate_inequality"]], "sympy.solvers.ode": [[237, 6, 1, "", "allhints"], [237, 4, 1, "", "checkinfsol"], [237, 4, 1, "", "checkodesol"], [237, 4, 1, "", "classify_ode"], [237, 4, 1, "", "constantsimp"], [237, 4, 1, "", "dsolve"], [237, 4, 1, "", "homogeneous_order"], [237, 4, 1, "", "infinitesimals"], [237, 0, 0, "-", "ode"]], "sympy.solvers.ode.lie_group": [[237, 4, 1, "", "lie_heuristic_abaco1_product"], [237, 4, 1, "", "lie_heuristic_abaco1_simple"], [237, 4, 1, "", "lie_heuristic_abaco2_similar"], [237, 4, 1, "", "lie_heuristic_abaco2_unique_general"], [237, 4, 1, "", "lie_heuristic_abaco2_unique_unknown"], [237, 4, 1, "", "lie_heuristic_bivariate"], [237, 4, 1, "", "lie_heuristic_chi"], [237, 4, 1, "", "lie_heuristic_function_sum"], [237, 4, 1, "", "lie_heuristic_linear"]], "sympy.solvers.ode.ode": [[237, 4, 1, "", "_handle_Integral"], [237, 4, 1, "", "_linear_2eq_order1_type6"], [237, 4, 1, "", "_linear_2eq_order1_type7"], [237, 4, 1, "", "_nonlinear_2eq_order1_type1"], [237, 4, 1, "", "_nonlinear_2eq_order1_type2"], [237, 4, 1, "", "_nonlinear_2eq_order1_type3"], [237, 4, 1, "", "_nonlinear_2eq_order1_type4"], [237, 4, 1, "", "_nonlinear_2eq_order1_type5"], [237, 4, 1, "", "_nonlinear_3eq_order1_type1"], [237, 4, 1, "", "_nonlinear_3eq_order1_type2"], [237, 4, 1, "", "_nonlinear_3eq_order1_type3"], [237, 4, 1, "", "_nonlinear_3eq_order1_type4"], [237, 4, 1, "", "_nonlinear_3eq_order1_type5"], [237, 4, 1, "", "constant_renumber"], [237, 4, 1, "", "ode_1st_power_series"], [237, 4, 1, "", "ode_2nd_power_series_ordinary"], [237, 4, 1, "", "ode_2nd_power_series_regular"], [237, 4, 1, "", "ode_sol_simplicity"], [237, 4, 1, "", "odesimp"]], "sympy.solvers.ode.riccati": [[237, 4, 1, "", "compute_m_ybar"], [237, 4, 1, "", "construct_c"], [237, 4, 1, "", "construct_d"], [237, 4, 1, "", "get_gen_sol_from_part_sol"], [237, 4, 1, "", "rational_laurent_series"], [237, 4, 1, "", "remove_redundant_sols"], [237, 4, 1, "", "riccati_inverse_normal"], [237, 4, 1, "", "riccati_normal"], [237, 4, 1, "", "riccati_reduced"], [237, 4, 1, "", "solve_aux_eq"], [237, 4, 1, "", "solve_riccati"]], "sympy.solvers.ode.single": [[237, 1, 1, "", "AlmostLinear"], [237, 1, 1, "", "Bernoulli"], [237, 1, 1, "", "Factorable"], [237, 1, 1, "", "FirstExact"], [237, 1, 1, "", "FirstLinear"], [237, 1, 1, "", "HomogeneousCoeffBest"], [237, 1, 1, "", "HomogeneousCoeffSubsDepDivIndep"], [237, 1, 1, "", "HomogeneousCoeffSubsIndepDivDep"], [237, 1, 1, "", "LieGroup"], [237, 1, 1, "", "LinearCoefficients"], [237, 1, 1, "", "Liouville"], [237, 1, 1, "", "NthAlgebraic"], [237, 1, 1, "", "NthLinearConstantCoeffHomogeneous"], [237, 1, 1, "", "NthLinearConstantCoeffUndeterminedCoefficients"], [237, 1, 1, "", "NthLinearConstantCoeffVariationOfParameters"], [237, 1, 1, "", "NthLinearEulerEqHomogeneous"], [237, 1, 1, "", "NthLinearEulerEqNonhomogeneousUndeterminedCoefficients"], [237, 1, 1, "", "NthLinearEulerEqNonhomogeneousVariationOfParameters"], [237, 1, 1, "", "NthOrderReducible"], [237, 1, 1, "", "RationalRiccati"], [237, 1, 1, "", "RiccatiSpecial"], [237, 1, 1, "", "SecondHypergeometric"], [237, 1, 1, "", "SecondLinearAiry"], [237, 1, 1, "", "SecondLinearBessel"], [237, 1, 1, "", "Separable"], [237, 1, 1, "", "SeparableReduced"]], "sympy.solvers.ode.systems": [[237, 4, 1, "", "canonical_odes"], [237, 4, 1, "", "dsolve_system"], [237, 4, 1, "", "linear_ode_to_matrix"], [237, 4, 1, "", "linodesolve"], [237, 4, 1, "", "linodesolve_type"], [237, 4, 1, "", "matrix_exp"], [237, 4, 1, "", "matrix_exp_jordan_form"]], "sympy.solvers.pde": [[238, 4, 1, "", "checkpdesol"], [238, 4, 1, "", "classify_pde"], [238, 4, 1, "", "pde_1st_linear_constant_coeff"], [238, 4, 1, "", "pde_1st_linear_constant_coeff_homogeneous"], [238, 4, 1, "", "pde_1st_linear_variable_coeff"], [238, 4, 1, "", "pde_separate"], [238, 4, 1, "", "pde_separate_add"], [238, 4, 1, "", "pde_separate_mul"], [238, 4, 1, "", "pdsolve"]], "sympy.solvers.polysys": [[239, 4, 1, "", "solve_poly_system"], [239, 4, 1, "", "solve_triangulated"]], "sympy.solvers.recurr": [[239, 4, 1, "", "rsolve"], [239, 4, 1, "", "rsolve_hyper"], [239, 4, 1, "", "rsolve_poly"], [239, 4, 1, "", "rsolve_ratio"]], "sympy.solvers.simplex": [[239, 4, 1, "", "linprog"], [239, 4, 1, "", "lpmax"], [239, 4, 1, "", "lpmin"]], "sympy.solvers.solvers": [[239, 4, 1, "", "checksol"], [239, 4, 1, "", "nsolve"], [239, 4, 1, "", "solve"], [239, 4, 1, "", "solve_linear"], [239, 4, 1, "", "solve_linear_system"], [239, 4, 1, "", "solve_linear_system_LU"], [239, 4, 1, "", "solve_undetermined_coeffs"], [239, 4, 1, "", "unrad"]], "sympy.solvers.solveset": [[240, 4, 1, "", "_is_exponential"], [240, 4, 1, "", "_is_logarithmic"], [240, 4, 1, "", "_solve_exponential"], [240, 4, 1, "", "_solve_logarithm"], [240, 4, 1, "", "_transolve"], [240, 4, 1, "", "domain_check"], [240, 4, 1, "", "invert_complex"], [240, 4, 1, "", "invert_real"], [240, 4, 1, "", "linear_eq_to_matrix"], [240, 4, 1, "", "linsolve"], [240, 4, 1, "", "nonlinsolve"], [240, 4, 1, "", "solveset"], [240, 4, 1, "", "solveset_complex"], [240, 4, 1, "", "solveset_real"], [240, 4, 1, "", "solvify"]], "sympy.stats": [[241, 4, 1, "", "Arcsin"], [241, 4, 1, "", "Benini"], [241, 4, 1, "", "Bernoulli"], [241, 1, 1, "", "BernoulliProcess"], [241, 4, 1, "", "Beta"], [241, 4, 1, "", "BetaBinomial"], [241, 4, 1, "", "BetaNoncentral"], [241, 4, 1, "", "BetaPrime"], [241, 4, 1, "", "Binomial"], [241, 4, 1, "", "BoundedPareto"], [241, 4, 1, "", "Cauchy"], [241, 1, 1, "", "CentralMoment"], [241, 4, 1, "", "Chi"], [241, 4, 1, "", "ChiNoncentral"], [241, 4, 1, "", "ChiSquared"], [241, 4, 1, "", "Coin"], [241, 1, 1, "", "ContinuousMarkovChain"], [241, 4, 1, "", "ContinuousRV"], [241, 1, 1, "", "Covariance"], [241, 1, 1, "", "CrossCovarianceMatrix"], [241, 4, 1, "", "Dagum"], [241, 4, 1, "", "Davis"], [241, 4, 1, "", "Die"], [241, 1, 1, "", "DiscreteMarkovChain"], [241, 4, 1, "", "DiscreteUniform"], [241, 4, 1, "", "E"], [241, 4, 1, "", "Erlang"], [241, 4, 1, "", "ExGaussian"], [241, 1, 1, "", "Expectation"], [241, 1, 1, "", "ExpectationMatrix"], [241, 4, 1, "", "Exponential"], [241, 4, 1, "", "FDistribution"], [241, 4, 1, "", "FiniteRV"], [241, 4, 1, "", "FisherZ"], [241, 4, 1, "", "Frechet"], [241, 4, 1, "", "Gamma"], [241, 4, 1, "", "GammaInverse"], [241, 1, 1, "", "GammaProcess"], [241, 4, 1, "", "GeneralizedMultivariateLogGamma"], [241, 4, 1, "", "GeneralizedMultivariateLogGammaOmega"], [241, 4, 1, "", "Geometric"], [241, 4, 1, "", "Gompertz"], [241, 4, 1, "", "Gumbel"], [241, 4, 1, "", "Hermite"], [241, 4, 1, "", "Hypergeometric"], [241, 4, 1, "", "JointRV"], [241, 4, 1, "", "Kumaraswamy"], [241, 4, 1, "", "Laplace"], [241, 4, 1, "", "Levy"], [241, 4, 1, "", "LogLogistic"], [241, 4, 1, "", "LogNormal"], [241, 4, 1, "", "Logarithmic"], [241, 4, 1, "", "Logistic"], [241, 4, 1, "", "Lomax"], [241, 4, 1, "", "MatrixGamma"], [241, 4, 1, "", "MatrixNormal"], [241, 4, 1, "", "Maxwell"], [241, 1, 1, "", "Moment"], [241, 4, 1, "", "Moyal"], [241, 4, 1, "", "Multinomial"], [241, 4, 1, "", "MultivariateBeta"], [241, 4, 1, "", "MultivariateEwens"], [241, 4, 1, "", "MultivariateLaplace"], [241, 4, 1, "", "MultivariateNormal"], [241, 4, 1, "", "MultivariateT"], [241, 4, 1, "", "Nakagami"], [241, 4, 1, "", "NegativeBinomial"], [241, 4, 1, "", "NegativeMultinomial"], [241, 4, 1, "", "Normal"], [241, 4, 1, "", "NormalGamma"], [241, 4, 1, "", "P"], [241, 4, 1, "", "Pareto"], [241, 4, 1, "", "Poisson"], [241, 1, 1, "", "PoissonProcess"], [241, 4, 1, "", "PowerFunction"], [241, 1, 1, "", "Probability"], [241, 4, 1, "", "QuadraticU"], [241, 4, 1, "", "Rademacher"], [241, 4, 1, "", "RaisedCosine"], [241, 4, 1, "", "Rayleigh"], [241, 4, 1, "", "Reciprocal"], [241, 4, 1, "", "ShiftedGompertz"], [241, 4, 1, "", "Skellam"], [241, 4, 1, "", "StudentT"], [241, 4, 1, "", "Trapezoidal"], [241, 4, 1, "", "Triangular"], [241, 4, 1, "", "Uniform"], [241, 4, 1, "", "UniformSum"], [241, 1, 1, "", "Variance"], [241, 1, 1, "", "VarianceMatrix"], [241, 4, 1, "", "VonMises"], [241, 4, 1, "", "Wald"], [241, 4, 1, "", "Weibull"], [241, 1, 1, "", "WienerProcess"], [241, 4, 1, "", "WignerSemicircle"], [241, 4, 1, "", "Wishart"], [241, 4, 1, "", "YuleSimon"], [241, 4, 1, "", "Zeta"], [241, 4, 1, "", "cmoment"], [241, 4, 1, "", "correlation"], [241, 4, 1, "", "coskewness"], [241, 4, 1, "", "covariance"], [241, 0, 0, "-", "crv"], [241, 0, 0, "-", "crv_types"], [241, 4, 1, "", "density"], [241, 4, 1, "", "entropy"], [241, 4, 1, "", "factorial_moment"], [241, 0, 0, "-", "frv"], [241, 0, 0, "-", "frv_types"], [241, 4, 1, "", "given"], [241, 4, 1, "", "kurtosis"], [241, 4, 1, "", "marginal_distribution"], [241, 4, 1, "", "median"], [241, 4, 1, "", "moment"], [241, 4, 1, "", "quantile"], [241, 0, 0, "-", "rv"], [241, 4, 1, "", "sample"], [241, 4, 1, "", "sample_iter"], [241, 4, 1, "", "skewness"], [241, 4, 1, "", "std"], [241, 4, 1, "", "variance"], [241, 4, 1, "", "where"]], "sympy.stats.BernoulliProcess": [[241, 2, 1, "", "expectation"], [241, 2, 1, "", "probability"]], "sympy.stats.DiscreteMarkovChain": [[241, 2, 1, "", "absorbing_probabilities"], [241, 2, 1, "", "canonical_form"], [241, 2, 1, "", "communication_classes"], [241, 2, 1, "", "decompose"], [241, 2, 1, "", "fixed_row_vector"], [241, 2, 1, "", "fundamental_matrix"], [241, 3, 1, "", "limiting_distribution"], [241, 2, 1, "", "sample"], [241, 2, 1, "", "stationary_distribution"], [241, 3, 1, "", "transition_probabilities"]], "sympy.stats.compound_rv": [[241, 1, 1, "", "CompoundDistribution"]], "sympy.stats.crv": [[241, 1, 1, "", "ContinuousDomain"], [241, 1, 1, "", "ContinuousPSpace"]], "sympy.stats.crv_types": [[241, 1, 1, "", "NormalPSpace"]], "sympy.stats.crv_types.sympy.stats": [[241, 4, 1, "", "Die"], [241, 4, 1, "", "Normal"]], "sympy.stats.frv": [[241, 1, 1, "", "FiniteDomain"], [241, 1, 1, "", "FinitePSpace"]], "sympy.stats.frv_types": [[241, 1, 1, "", "DiePSpace"]], "sympy.stats.rv": [[241, 1, 1, "", "ConditionalDomain"], [241, 1, 1, "", "PSpace"], [241, 1, 1, "", "ProductDomain"], [241, 1, 1, "", "ProductPSpace"], [241, 1, 1, "", "RandomDomain"], [241, 1, 1, "", "RandomSymbol"], [241, 1, 1, "", "SingleDomain"], [241, 1, 1, "", "SinglePSpace"], [241, 4, 1, "", "pspace"], [241, 4, 1, "", "random_symbols"], [241, 4, 1, "", "rs_swap"], [241, 4, 1, "", "sampling_E"], [241, 4, 1, "", "sampling_P"], [241, 4, 1, "", "sampling_density"]], "sympy.tensor": [[242, 0, 0, "-", "array"], [245, 0, 0, "-", "index_methods"], [246, 0, 0, "-", "indexed"], [247, 0, 0, "-", "tensor"], [248, 0, 0, "-", "toperators"]], "sympy.tensor.array": [[242, 1, 1, "", "ImmutableDenseNDimArray"], [242, 1, 1, "", "ImmutableSparseNDimArray"], [242, 1, 1, "", "MutableDenseNDimArray"], [242, 1, 1, "", "MutableSparseNDimArray"], [242, 4, 1, "", "derive_by_array"], [243, 0, 0, "-", "expressions"], [242, 4, 1, "", "permutedims"], [242, 4, 1, "", "tensorcontraction"], [242, 4, 1, "", "tensordiagonal"], [242, 4, 1, "", "tensorproduct"]], "sympy.tensor.array.expressions": [[243, 1, 1, "", "ArrayContraction"], [243, 1, 1, "", "ArrayDiagonal"], [243, 1, 1, "", "ArrayTensorProduct"], [243, 1, 1, "", "PermuteDims"]], "sympy.tensor.index_methods": [[245, 4, 1, "", "get_contraction_structure"], [245, 4, 1, "", "get_indices"]], "sympy.tensor.indexed": [[246, 1, 1, "", "Idx"], [246, 1, 1, "", "Indexed"], [246, 1, 1, "", "IndexedBase"]], "sympy.tensor.indexed.Idx": [[246, 3, 1, "", "label"], [246, 3, 1, "", "lower"], [246, 3, 1, "", "upper"]], "sympy.tensor.indexed.Indexed": [[246, 3, 1, "", "base"], [246, 3, 1, "", "indices"], [246, 3, 1, "", "ranges"], [246, 3, 1, "", "rank"], [246, 3, 1, "", "shape"]], "sympy.tensor.indexed.IndexedBase": [[246, 3, 1, "", "label"], [246, 3, 1, "", "offset"], [246, 3, 1, "", "shape"], [246, 3, 1, "", "strides"]], "sympy.tensor.tensor": [[247, 1, 1, "", "TensAdd"], [247, 1, 1, "", "TensExpr"], [247, 1, 1, "", "TensMul"], [247, 1, 1, "", "TensorHead"], [247, 1, 1, "", "TensorIndex"], [247, 1, 1, "", "TensorIndexType"], [247, 1, 1, "", "TensorSymmetry"], [247, 1, 1, "", "TensorType"], [247, 1, 1, "", "_TensorManager"], [247, 4, 1, "", "canon_bp"], [247, 4, 1, "", "riemann_cyclic"], [247, 4, 1, "", "riemann_cyclic_replace"], [247, 4, 1, "", "tensor_heads"], [247, 4, 1, "", "tensorsymmetry"]], "sympy.tensor.tensor.TensAdd": [[247, 2, 1, "", "canon_bp"], [247, 2, 1, "", "contract_metric"]], "sympy.tensor.tensor.TensExpr": [[247, 2, 1, "", "get_matrix"], [247, 2, 1, "", "replace_with_arrays"]], "sympy.tensor.tensor.TensMul": [[247, 2, 1, "", "canon_bp"], [247, 2, 1, "", "contract_metric"], [247, 2, 1, "", "get_free_indices"], [247, 2, 1, "", "get_indices"], [247, 2, 1, "", "perm2tensor"], [247, 2, 1, "", "sorted_components"], [247, 2, 1, "", "split"]], "sympy.tensor.tensor.TensorHead": [[247, 2, 1, "", "commutes_with"]], "sympy.tensor.tensor.TensorSymmetry": [[247, 2, 1, "", "direct_product"], [247, 2, 1, "", "fully_symmetric"], [247, 2, 1, "", "no_symmetry"], [247, 2, 1, "", "riemann"]], "sympy.tensor.tensor._TensorManager": [[247, 2, 1, "", "clear"], [247, 2, 1, "", "comm_i2symbol"], [247, 2, 1, "", "comm_symbols2i"], [247, 2, 1, "", "get_comm"], [247, 2, 1, "", "set_comm"], [247, 2, 1, "", "set_comms"]], "sympy.tensor.toperators": [[248, 1, 1, "", "PartialDerivative"]], "sympy.testing": [[250, 0, 0, "-", "pytest"], [251, 0, 0, "-", "randtest"], [252, 0, 0, "-", "runtests"]], "sympy.testing.pytest": [[250, 4, 1, "", "SKIP"], [250, 4, 1, "", "nocache_fail"], [250, 4, 1, "", "raises"], [250, 4, 1, "", "skip_under_pyodide"], [250, 4, 1, "", "warns"], [250, 4, 1, "", "warns_deprecated_sympy"]], "sympy.testing.runtests": [[252, 1, 1, "", "PyTestReporter"], [252, 1, 1, "", "Reporter"], [252, 1, 1, "", "SymPyDocTestFinder"], [252, 1, 1, "", "SymPyDocTestRunner"], [252, 1, 1, "", "SymPyOutputChecker"], [252, 1, 1, "", "SymPyTestResults"], [252, 4, 1, "", "convert_to_native_paths"], [252, 4, 1, "", "doctest"], [252, 4, 1, "", "get_sympy_dir"], [252, 4, 1, "", "raise_on_deprecated"], [252, 4, 1, "", "run_all_tests"], [252, 4, 1, "", "run_in_subprocess_with_hash_randomization"], [252, 4, 1, "", "split_list"], [252, 4, 1, "", "sympytestfile"], [252, 4, 1, "", "test"]], "sympy.testing.runtests.PyTestReporter": [[252, 2, 1, "", "write"]], "sympy.testing.runtests.SymPyDocTestRunner": [[252, 2, 1, "", "run"]], "sympy.testing.runtests.SymPyOutputChecker": [[252, 2, 1, "", "check_output"]], "sympy.testing.runtests.SymPyTestResults": [[252, 5, 1, "", "attempted"], [252, 5, 1, "", "failed"]], "sympy.utilities": [[253, 0, 0, "-", "autowrap"], [254, 0, 0, "-", "codegen"], [255, 0, 0, "-", "decorator"], [256, 0, 0, "-", "enumerative"], [257, 0, 0, "-", "exceptions"], [259, 0, 0, "-", "iterables"], [260, 0, 0, "-", "lambdify"], [261, 0, 0, "-", "memoization"], [262, 0, 0, "-", "misc"], [263, 0, 0, "-", "source"], [264, 0, 0, "-", "timeutils"]], "sympy.utilities.autowrap": [[253, 1, 1, "", "CodeWrapper"], [253, 1, 1, "", "CythonCodeWrapper"], [253, 1, 1, "", "DummyWrapper"], [253, 1, 1, "", "F2PyCodeWrapper"], [253, 1, 1, "", "UfuncifyCodeWrapper"], [253, 4, 1, "", "autowrap"], [253, 4, 1, "", "binary_function"], [253, 4, 1, "", "ufuncify"]], "sympy.utilities.autowrap.CythonCodeWrapper": [[253, 2, 1, "", "dump_pyx"]], "sympy.utilities.autowrap.UfuncifyCodeWrapper": [[253, 2, 1, "", "dump_c"]], "sympy.utilities.codegen": [[254, 1, 1, "", "Argument"], [254, 1, 1, "", "CCodeGen"], [254, 1, 1, "", "CodeGen"], [254, 1, 1, "", "DataType"], [254, 1, 1, "", "FCodeGen"], [254, 1, 1, "", "JuliaCodeGen"], [254, 1, 1, "", "OctaveCodeGen"], [254, 1, 1, "", "OutputArgument"], [254, 1, 1, "", "Result"], [254, 1, 1, "", "Routine"], [254, 1, 1, "", "RustCodeGen"], [254, 4, 1, "", "codegen"], [254, 4, 1, "", "get_default_datatype"], [254, 4, 1, "", "make_routine"]], "sympy.utilities.codegen.CCodeGen": [[254, 2, 1, "", "dump_c"], [254, 2, 1, "", "dump_h"], [254, 2, 1, "", "get_prototype"]], "sympy.utilities.codegen.CodeGen": [[254, 2, 1, "", "dump_code"], [254, 2, 1, "", "routine"], [254, 2, 1, "", "write"]], "sympy.utilities.codegen.FCodeGen": [[254, 2, 1, "", "dump_f95"], [254, 2, 1, "", "dump_h"], [254, 2, 1, "", "get_interface"]], "sympy.utilities.codegen.JuliaCodeGen": [[254, 2, 1, "", "dump_jl"], [254, 2, 1, "", "routine"]], "sympy.utilities.codegen.OctaveCodeGen": [[254, 2, 1, "", "dump_m"], [254, 2, 1, "", "routine"]], "sympy.utilities.codegen.Routine": [[254, 3, 1, "", "result_variables"], [254, 3, 1, "", "variables"]], "sympy.utilities.codegen.RustCodeGen": [[254, 2, 1, "", "dump_rs"], [254, 2, 1, "", "get_prototype"], [254, 2, 1, "", "routine"]], "sympy.utilities.decorator": [[255, 4, 1, "", "conserve_mpmath_dps"], [255, 4, 1, "", "deprecated"], [255, 4, 1, "", "doctest_depends_on"], [255, 4, 1, "", "memoize_property"], [255, 1, 1, "", "no_attrs_in_subclass"], [255, 4, 1, "", "public"], [255, 4, 1, "", "threaded"], [255, 4, 1, "", "threaded_factory"], [255, 4, 1, "", "xthreaded"]], "sympy.utilities.enumerative": [[256, 1, 1, "", "MultisetPartitionTraverser"], [256, 4, 1, "", "factoring_visitor"], [256, 4, 1, "", "list_visitor"], [256, 4, 1, "", "multiset_partitions_taocp"]], "sympy.utilities.enumerative.MultisetPartitionTraverser": [[256, 2, 1, "", "count_partitions"], [256, 2, 1, "", "enum_all"], [256, 2, 1, "", "enum_large"], [256, 2, 1, "", "enum_range"], [256, 2, 1, "", "enum_small"]], "sympy.utilities.exceptions": [[257, 7, 1, "", "SymPyDeprecationWarning"], [257, 4, 1, "", "ignore_warnings"], [257, 4, 1, "", "sympy_deprecation_warning"]], "sympy.utilities.iterables": [[259, 1, 1, "", "NotIterable"], [259, 4, 1, "", "binary_partitions"], [259, 4, 1, "", "bracelets"], [259, 4, 1, "", "capture"], [259, 4, 1, "", "common_prefix"], [259, 4, 1, "", "common_suffix"], [259, 4, 1, "", "connected_components"], [259, 4, 1, "", "dict_merge"], [259, 4, 1, "", "filter_symbols"], [259, 4, 1, "", "flatten"], [259, 4, 1, "", "generate_bell"], [259, 4, 1, "", "generate_derangements"], [259, 4, 1, "", "generate_involutions"], [259, 4, 1, "", "generate_oriented_forest"], [259, 4, 1, "", "group"], [259, 4, 1, "", "has_dups"], [259, 4, 1, "", "has_variety"], [259, 4, 1, "", "ibin"], [259, 4, 1, "", "iproduct"], [259, 4, 1, "", "is_palindromic"], [259, 4, 1, "", "is_sequence"], [259, 4, 1, "", "iterable"], [259, 4, 1, "", "kbins"], [259, 4, 1, "", "least_rotation"], [259, 4, 1, "", "minlex"], [259, 4, 1, "", "multiset"], [259, 4, 1, "", "multiset_combinations"], [259, 4, 1, "", "multiset_derangements"], [259, 4, 1, "", "multiset_partitions"], [259, 4, 1, "", "multiset_permutations"], [259, 4, 1, "", "necklaces"], [259, 4, 1, "", "numbered_symbols"], [259, 4, 1, "", "ordered_partitions"], [259, 4, 1, "", "partitions"], [259, 4, 1, "", "permute_signs"], [259, 4, 1, "", "postfixes"], [259, 4, 1, "", "prefixes"], [259, 4, 1, "", "random_derangement"], [259, 4, 1, "", "reshape"], [259, 4, 1, "", "rotate_left"], [259, 4, 1, "", "rotate_right"], [259, 4, 1, "", "rotations"], [259, 4, 1, "", "roundrobin"], [259, 4, 1, "", "runs"], [259, 4, 1, "", "sequence_partitions"], [259, 4, 1, "", "sequence_partitions_empty"], [259, 4, 1, "", "sift"], [259, 4, 1, "", "signed_permutations"], [259, 4, 1, "", "strongly_connected_components"], [259, 4, 1, "", "subsets"], [259, 4, 1, "", "take"], [259, 4, 1, "", "topological_sort"], [259, 4, 1, "", "unflatten"], [259, 4, 1, "", "uniq"], [259, 4, 1, "", "variations"]], "sympy.utilities.lambdify": [[260, 4, 1, "", "implemented_function"], [260, 4, 1, "", "lambdastr"], [260, 4, 1, "", "lambdify"]], "sympy.utilities.memoization": [[261, 4, 1, "", "assoc_recurrence_memo"], [261, 4, 1, "", "recurrence_memo"]], "sympy.utilities.misc": [[262, 4, 1, "", "as_int"], [262, 4, 1, "", "debug"], [262, 4, 1, "", "debug_decorator"], [262, 4, 1, "", "debugf"], [262, 4, 1, "", "filldedent"], [262, 4, 1, "", "find_executable"], [262, 4, 1, "", "func_name"], [262, 4, 1, "", "ordinal"], [262, 4, 1, "", "rawlines"], [262, 4, 1, "", "replace"], [262, 4, 1, "", "strlines"], [262, 4, 1, "", "translate"]], "sympy.utilities.source": [[263, 4, 1, "", "get_class"], [263, 4, 1, "", "get_mod_func"]], "sympy.utilities.timeutils": [[264, 4, 1, "", "timed"]], "sympy.vector": [[268, 4, 1, "", "curl"], [268, 4, 1, "", "divergence"], [268, 4, 1, "", "express"], [268, 4, 1, "", "gradient"], [268, 4, 1, "", "is_conservative"], [268, 4, 1, "", "is_solenoidal"], [268, 4, 1, "", "matrix_to_vector"], [268, 4, 1, "", "scalar_potential"], [268, 4, 1, "", "scalar_potential_difference"]], "sympy.vector.coordsysrect": [[265, 1, 1, "", "CoordSys3D"]], "sympy.vector.coordsysrect.CoordSys3D": [[265, 2, 1, "", "__init__"], [265, 2, 1, "", "create_new"], [265, 2, 1, "", "locate_new"], [265, 2, 1, "", "orient_new"], [265, 2, 1, "", "orient_new_axis"], [265, 2, 1, "", "orient_new_body"], [265, 2, 1, "", "orient_new_quaternion"], [265, 2, 1, "", "orient_new_space"], [265, 2, 1, "", "position_wrt"], [265, 2, 1, "", "rotation_matrix"], [265, 2, 1, "", "scalar_map"]], "sympy.vector.deloperator": [[265, 1, 1, "", "Del"]], "sympy.vector.deloperator.Del": [[265, 2, 1, "", "cross"], [265, 2, 1, "", "dot"], [265, 2, 1, "", "gradient"]], "sympy.vector.dyadic": [[265, 1, 1, "", "Dyadic"]], "sympy.vector.dyadic.Dyadic": [[265, 3, 1, "", "components"], [265, 2, 1, "", "cross"], [265, 2, 1, "", "dot"], [265, 2, 1, "", "to_matrix"]], "sympy.vector.implicitregion": [[265, 1, 1, "", "ImplicitRegion"]], "sympy.vector.implicitregion.ImplicitRegion": [[265, 2, 1, "", "multiplicity"], [265, 2, 1, "", "rational_parametrization"], [265, 2, 1, "", "regular_point"], [265, 2, 1, "", "singular_points"]], "sympy.vector.integrals": [[265, 1, 1, "", "ParametricIntegral"], [268, 4, 1, "", "vector_integrate"]], "sympy.vector.orienters": [[267, 1, 1, "", "AxisOrienter"], [267, 1, 1, "", "BodyOrienter"], [267, 1, 1, "", "Orienter"], [267, 1, 1, "", "QuaternionOrienter"], [267, 1, 1, "", "SpaceOrienter"]], "sympy.vector.orienters.AxisOrienter": [[267, 2, 1, "", "__init__"], [267, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.BodyOrienter": [[267, 2, 1, "", "__init__"]], "sympy.vector.orienters.Orienter": [[267, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.QuaternionOrienter": [[267, 2, 1, "", "__init__"]], "sympy.vector.orienters.SpaceOrienter": [[267, 2, 1, "", "__init__"]], "sympy.vector.parametricregion": [[265, 1, 1, "", "ParametricRegion"]], "sympy.vector.vector": [[265, 1, 1, "", "Vector"]], "sympy.vector.vector.Vector": [[265, 3, 1, "", "components"], [265, 2, 1, "", "cross"], [265, 2, 1, "", "dot"], [265, 2, 1, "", "magnitude"], [265, 2, 1, "", "normalize"], [265, 2, 1, "", "outer"], [265, 2, 1, "", "projection"], [265, 2, 1, "", "separate"], [265, 2, 1, "", "to_matrix"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute", "6": "py:data", "7": "py:exception"}, "terms": {"": [0, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 28, 30, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 107, 110, 111, 113, 115, 116, 117, 118, 120, 121, 124, 127, 128, 129, 130, 132, 134, 136, 137, 138, 140, 142, 144, 146, 148, 149, 151, 152, 154, 155, 156, 158, 159, 162, 163, 164, 170, 171, 173, 175, 177, 178, 181, 185, 186, 188, 189, 191, 194, 195, 196, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 241, 247, 252, 253, 254, 255, 256, 257, 259, 260, 262, 265, 267, 271, 272, 274, 277, 282, 283, 285, 286, 287, 289, 290, 291, 292, 293, 297, 298, 299, 305, 308], "0": [3, 4, 11, 12, 13, 14, 15, 16, 18, 22, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 39, 41, 42, 43, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 158, 159, 160, 163, 164, 165, 167, 170, 175, 176, 177, 180, 185, 186, 187, 188, 189, 190, 191, 192, 196, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 250, 252, 253, 255, 256, 257, 259, 260, 261, 265, 267, 268, 269, 270, 271, 272, 275, 286, 287, 289, 291, 292, 293, 296, 297, 298, 299, 302, 303, 304, 306, 307, 309, 311], "00": [14, 16, 88, 128, 175, 185, 259], "000": [72, 92, 115, 118, 185, 259], "0000": 72, "000000000000": 16, "0000000000000": [134, 164], "00000000000000": [14, 54, 88, 92, 192, 221, 241, 287], "00000000000000e": 88, "00000000260573": 142, "00000000e": 14, "0000000154172579002800188521596734869": 96, "00001": 185, "00002480019791932209313156167176797577821140084216297395518482071448": 206, "0001": [72, 92], "00010": 72, "000100000000000000": 88, "00011001011": 259, "00011010011": 259, "0001111011": [118, 259], "0001953125": 136, "00026102": 115, "000507214304613640": 129, "000507214304614": 129, "0005241": 299, "00053": 160, "00054335718671383": 138, "00070025": 110, "001": [72, 92, 118, 160, 259], "0010": 72, "00100": 88, "00100000000000000": 160, "00101413072159615": 160, "00109772": 299, "0011": [72, 83], "0011276": 299, "00138541666666667": 136, "00141": 80, "00152436": 299, "00210803120913829": 160, "0023152": 115, "003": 92, "0033": 164, "00333333": 299, "004": 215, "00447086247086247": 138, "00453": 115, "004707066000264604": 69, "006": 124, "006046440489058766": 142, "0063339426292673": 96, "006895004219221134484332976156744208248842039317638217822322799675": 206, "00708": 302, "0075": [18, 299], "00756": 302, "00906": 115, "00996712": 299, "01": [22, 80, 88, 92, 185, 215, 233, 259], "010": [72, 118, 259], "0100": 72, "0101": [72, 185], "010389": 115, "010399": 115, "011": [72, 118, 185, 259], "0110": 72, "0111": [72, 185], "01197": 128, "012": 88, "012297": 92, "012345": 80, "01375162659678": 110, "014": 154, "01480": 234, "014895573969924817587": 96, "015": [18, 131], "0150588346410601": 18, "016": 230, "0166133211401": 132, "0170706725844998": 138, "01743115": 299, "0174533": 22, "01747268": 241, "0175000000000000": 87, "0186573603637741": [18, 132], "0189": 91, "0190": 80, "0196": 259, "02": [215, 234, 302], "02005": 164, "020599914256786": 142, "0205999155219505": 142, "020884341620842555705": 93, "0225": [18, 299], "023844582399907256": 142, "025413462339411542": 142, "02671848900111377452242355235388489324562": 96, "0276302": 61, "02841027019385211055596446229489549303819644288109756659334461284756482337867831": 92, "0299": [18, 132], "02_03_40_42": 91, "03": [206, 241, 299], "034": 89, "035581932165858e": 142, "035999037": 146, "035999037000": 146, "0365": 217, "04": [11, 124, 241], "04166666666667e": 136, "042894276802320226": 142, "045": 215, "04516378011749278484458888919": 96, "0458952018652595": 18, "0472": 115, "0484508722725343": 142, "04923615": 299, "05": [18, 34, 79, 110, 142, 203, 206], "050584": 115, "0509758447494279": 57, "0519737844841": 132, "052": 239, "05426074": 129, "05426079": 129, "05433146": 129, "05433151": 129, "05440211": 129, "054525080242173562897": 96, "05457162000000e": 173, "05457162d": 69, "05503732448615e": 302, "05555555555555555555555555555555555555555555555555555555555555555": 206, "0555556377366884": 146, "0555558020932949": 146, "0555562951740285": 146, "0583518": 128, "05892": 302, "06": [18, 82, 88, 132, 206, 241, 302], "060": [18, 131], "0603": 302, "0633": [18, 132], "0652795784357498247001125598": 96, "06616480200395854": 142, "06743": [93, 96, 217], "06e": 160, "07": 113, "07158645641514": 302, "0783896927982": 302, "07910818603205": 302, "08": [57, 124, 217, 302], "08333333333333e": 136, "08346052231061726610939702133": 96, "083954101": 48, "08395410131771": 48, "083c01": 170, "084489": 115, "08486552743311": 302, "087": 215, "0874989834394464": 286, "08895483066e": 142, "09": [88, 142, 206, 215], "0904": 124, "0909": 259, "091999668350375232456": 92, "09326036123": 142, "0935077": 67, "095": 96, "0973": 115, "099419756723640344491": 96, "099609": 88, "0998334166468": 286, "0_": 27, "0_0": 111, "0_1": 111, "0d0": [69, 221], "0e": [14, 69, 88], "0f1": 237, "0i": 61, "0j": [61, 211], "0k": 61, "0l": [69, 221], "0o121": 128, "0o171": 128, "0right": 240, "0th": [67, 80, 89, 96], "0x": [14, 191], "0x10e997790": 12, "0x12": 116, "0x324": 128, "0x3243f6a8885a30": 128, "0xfa": 128, "1": [2, 3, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 21, 23, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 140, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 170, 173, 174, 175, 176, 177, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 265, 268, 269, 270, 272, 275, 282, 286, 287, 289, 291, 292, 293, 296, 297, 298, 299, 302, 303, 304, 306, 307, 308, 309, 310, 311], "10": [0, 2, 4, 12, 14, 16, 17, 18, 22, 30, 43, 46, 48, 54, 55, 57, 59, 61, 67, 69, 74, 77, 79, 80, 84, 86, 87, 88, 89, 91, 92, 93, 94, 96, 101, 102, 104, 105, 113, 115, 116, 118, 120, 124, 125, 128, 129, 130, 131, 132, 134, 135, 136, 138, 140, 142, 144, 145, 148, 150, 154, 155, 160, 164, 175, 185, 186, 197, 200, 201, 202, 204, 206, 207, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 224, 227, 228, 229, 230, 233, 234, 237, 240, 241, 242, 251, 252, 257, 259, 260, 262, 265, 268, 286, 293, 297, 299, 302, 303], "100": [12, 16, 43, 46, 69, 72, 77, 87, 88, 89, 92, 96, 104, 111, 118, 124, 128, 136, 138, 207, 211, 216, 218, 220, 221, 228, 239, 240, 259, 286], "1000": [16, 30, 69, 72, 88, 89, 92, 120, 128, 195, 196, 197, 198, 206, 220, 221, 230, 260], "10000": [69, 92, 128, 129, 136, 239], "100000": [92, 128, 142], "1000000": [88, 128], "10000000": [92, 217], "1000000000": 92, "100000000000000": [92, 134], "10000000000000000": 14, "100000000000000000000": 88, "100000000000000000000000000000": 92, "100000000000000005551115123126": 92, "10000000001": 128, "1000001": 93, "1001": 72, "1002": 241, "100500": 98, "100644": 11, "1007": [74, 89, 154], "1009": 128, "100x": 13, "101": [72, 96, 118, 128, 144, 185, 234, 259], "1010": [72, 88], "1010203040506070809": 128, "1010381": 128, "1011": 72, "1012": 146, "10120": 293, "101456353": 115, "1016": [80, 124, 148, 215, 259], "102": [79, 124], "1024": [79, 221, 241], "10279": 293, "103": [0, 7, 79], "1031": 89, "103993": 128, "104": 92, "10431": 128, "104348": 128, "104755": 217, "105": [96, 128, 217, 234], "10517083333333": 110, "105305": 148, "105522449805691": 302, "106": 128, "107": [74, 215], "10713341e": 14, "1072": 124, "1074": 124, "10793": 136, "108": [86, 137], "108208000e3": 194, "108270": 98, "10877": 128, "109": [128, 215, 234], "1090": [67, 128, 217, 234], "1092": 217, "1098": 302, "10kn": 136, "10n": 129, "10pt": [116, 205, 221], "10sin": 130, "10th": 128, "11": [4, 17, 18, 22, 32, 41, 63, 64, 69, 74, 79, 82, 84, 86, 88, 89, 91, 93, 96, 100, 101, 102, 104, 105, 113, 115, 118, 119, 124, 128, 130, 132, 144, 175, 185, 206, 207, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 228, 230, 234, 237, 239, 240, 241, 242, 253, 259, 269, 302], "110": [72, 118, 237, 239, 253, 259], "1100": 72, "11008014637441": 302, "1101": 72, "11010011000": 259, "1101111000": [118, 259], "1103": 92, "110896": 128, "111": [72, 91, 93, 98, 118, 124, 128, 259], "1110": 72, "1111": 72, "1111339": 128, "11163337": 241, "1118": 128, "112": [128, 214, 218], "1121416371": 69, "113": [92, 128, 234], "11337": 115, "1137796": 234, "113820": 128, "114": [79, 93, 128], "1145": [87, 210, 212, 215, 233], "1145768": 233, "1145809": 233, "115": 96, "1159": 128, "11590": 128, "115975": 93, "116": [206, 215], "1169": 230, "117": [79, 96], "1177": 230, "1178": 128, "1179": 215, "11895": 115, "1193": 89, "1197": 215, "11_0_0_intro": 241, "11_2_6_stationary_and_limiting_distribut": 241, "11_4_0_brownian_motion_wiener_process": 241, "12": [4, 12, 14, 16, 17, 18, 32, 43, 46, 48, 61, 67, 68, 69, 74, 76, 77, 79, 80, 81, 84, 86, 87, 88, 89, 91, 93, 94, 96, 98, 101, 102, 104, 113, 115, 118, 124, 125, 128, 132, 136, 137, 138, 142, 144, 146, 152, 188, 200, 206, 209, 210, 211, 214, 216, 217, 218, 220, 221, 227, 229, 230, 234, 236, 237, 241, 242, 252, 253, 256, 259, 268, 293, 296, 297, 299, 302, 303, 304], "120": [12, 39, 87, 88, 93, 94, 110, 128, 136, 137, 218, 220, 221, 223, 237, 287], "1200": 206, "12000": 136, "1202": 303, "121": [88, 93, 128, 144, 200, 239], "1211": 91, "1215": 215, "12166980856813935": 142, "122": [89, 91, 96], "1224": [93, 128], "1225": 124, "12288": 275, "122921448543883967430908091422761898618349713604256384403202282756086473494959648313841": 128, "123": [11, 88, 93, 98, 118, 152, 188, 200, 259, 265, 267], "1231": 215, "1231026625769": 128, "1233": 259, "1234": [11, 128, 234], "12345": [11, 69, 92], "123456": [69, 88, 128], "123456789": 88, "123456789012345646": 69, "123456789012345649": 69, "12345678901234567890": 16, "12345678910111213141516": 128, "123_456": 88, "124": [215, 286], "12438240242516": 132, "12465": 217, "12499999999568202": 142, "12499999999661349": 142, "124a": 238, "125": [88, 92, 115, 128, 212, 227, 234], "12500": 88, "1250000": 162, "12500000000000000000": 88, "125000000000000000000000000000": 92, "125000416028342": 146, "125002080189006": 146, "12524": 13, "125e": 136, "126": [124, 128, 220], "127": [89, 128], "12757857962640e": 54, "127750": 256, "128": [79, 88, 93, 96, 98, 128, 215, 221], "1283": 91, "129": 144, "1294585930293": 234, "1296": 82, "1296959": 96, "1299709": 128, "12e": 88, "12kn": 137, "12mm": 68, "13": [4, 12, 17, 22, 32, 61, 69, 77, 79, 84, 88, 89, 91, 93, 96, 100, 101, 102, 103, 113, 118, 124, 128, 132, 136, 137, 138, 142, 144, 149, 207, 210, 214, 216, 217, 218, 220, 221, 227, 234, 236, 238, 239, 241, 242, 253, 259, 275, 296], "130": 98, "130198866629986772369127970337": 92, "1307": [11, 57], "131": [96, 200], "131072": 217, "13131491": 259, "132": [86, 93, 200], "1336": 92, "134": 124, "13423125066578": 302, "135": 128, "1350": 136, "136": [88, 124], "137": [93, 124, 146], "1371": 61, "1373651": 128, "13750": 136, "138": 128, "1381": 89, "1385": [93, 217], "139": 214, "1391": 128, "13y": 234, "14": [4, 17, 22, 46, 48, 69, 77, 79, 83, 84, 86, 88, 89, 93, 94, 96, 113, 124, 125, 128, 129, 136, 142, 206, 207, 210, 212, 214, 215, 216, 217, 218, 220, 221, 230, 233, 234, 237, 239, 241, 242, 287, 302], "140": 128, "1401": 217, "1405": 302, "1407633717262338957430697921446883": 128, "141": 146, "14112001": 286, "1415": 92, "1415085799262523": 142, "14155265358979": 142, "14159": 221, "14159265358979": [92, 96, 239], "141592653589793": [14, 88, 92], "141592653589793238462643383279502884197169399375105820974944592307816406286208": 92, "141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117068": 286, "14159265358979323846264338328": 92, "141592653589793238462643d0": 221, "1415926535897932d0": 221, "14159265358979d0": 69, "141592654": 88, "1416": 206, "1417": [128, 234], "142": 215, "14219": 91, "1428": 206, "14285278320312500000": 16, "142857": 16, "142857142857143": 16, "143": [16, 154, 170, 206], "1430": 93, "14358881": 110, "144": [48, 57, 93, 115, 206, 210], "1441": 234, "147": 102, "14751999969868": 57, "1482": 128, "1484": 46, "149": [18, 93, 128, 132], "1495": [18, 132], "149896229": [162, 165, 195], "15": [4, 14, 16, 43, 67, 74, 77, 79, 84, 86, 88, 89, 91, 92, 93, 96, 98, 101, 102, 104, 105, 113, 115, 118, 119, 124, 125, 128, 136, 144, 149, 164, 206, 207, 209, 210, 211, 212, 216, 217, 218, 220, 221, 223, 227, 228, 230, 233, 234, 238, 239, 240, 241, 242, 259, 286, 287, 292, 293, 299], "150": [124, 144, 234], "15033720e": 14, "151": 77, "15141": 293, "1515151515151": 164, "15154262241479": 128, "15174161": 299, "152": [93, 128, 214], "1520": 136, "1521": 93, "153": 220, "15416": 13, "15423094826093": 128, "15494982830181068512": [4, 96], "155": 217, "15502": 91, "1551": 124, "1553": 89, "15555": 91, "15605338197184": 96, "15625": [136, 198], "156675": 93, "157": [115, 128, 137, 215], "1570": 234, "15707": 115, "1577": 89, "158": [124, 137], "1586142657644": 302, "15x15": 210, "16": [4, 12, 14, 18, 33, 46, 48, 57, 61, 67, 69, 71, 79, 80, 83, 87, 88, 89, 93, 96, 97, 98, 102, 113, 115, 118, 124, 125, 127, 128, 136, 137, 209, 210, 211, 214, 215, 216, 217, 220, 221, 227, 229, 230, 231, 234, 241, 242, 259, 265, 274, 293, 299], "160": [16, 136, 215], "1600": [136, 137], "16000": 136, "160249952256379": 218, "161": [89, 154], "16109": 128, "162": [18, 132], "1633833": 259, "1644": 46, "165": [217, 241, 259], "1666666666666666666666666666666666666666666666666666666666666667": 206, "166666666666667": 218, "16667": 115, "167": 124, "167303978": 48, "16730397826142": 48, "16840434497100886801e": 54, "16843009": 128, "1684e": 239, "169": 217, "1692": 124, "17": [4, 18, 54, 55, 57, 77, 79, 80, 88, 89, 92, 93, 94, 98, 101, 104, 113, 124, 128, 144, 211, 212, 214, 216, 217, 220, 221, 228, 230, 234, 237, 242, 256, 291], "170": [101, 241], "170748906965121e": 142, "171": 144, "172": 136, "172870711": 96, "1729": 234, "175": [98, 124, 214, 215], "176": 237, "1764": 128, "1768": 93, "17737": 128, "17749": 13, "17805383034794561964694160130": 96, "1785690389": 11, "1786": 128, "1787": 128, "17881": 13, "179143454621291692285822705344": 96, "18": [4, 18, 54, 71, 79, 80, 88, 91, 93, 96, 98, 101, 104, 119, 124, 128, 136, 137, 142, 144, 146, 201, 206, 210, 214, 215, 220, 221, 229, 230, 234, 237, 239, 240, 241, 242, 268], "180": [36, 104, 215], "1800": [61, 89], "18014398509481984": [88, 233], "18056": 13, "181": [57, 217], "181232444469875": 48, "1812324445": 48, "1816": 115, "1827": 265, "1829": 128, "184": [67, 148, 237], "18466446988997098217": 54, "1847": 216, "18482169793536e": 48, "18525034196069722536": 96, "1857": 302, "187": [196, 215], "1870": 91, "1875": 136, "18844": 13, "1889": 115, "18891601900395472": 69, "189": 214, "18971": 128, "19": [4, 46, 54, 79, 88, 91, 96, 98, 101, 104, 124, 128, 130, 132, 136, 138, 144, 206, 212, 216, 217, 220, 230, 234, 236, 239, 253, 286], "1901": 89, "1901263495547205e": 142, "19016": 115, "190347": 215, "190413": 215, "19093197": 96, "191": [70, 240], "1914": 124, "192": 117, "1920": 89, "1921": 128, "19287309935246": [54, 239], "192873099352460791205211": 54, "1929": 89, "193": [46, 124, 142], "19351": 91, "1937664": 214, "19404": 91, "1944": 208, "195": 93, "1952": 196, "1953": [96, 216], "1954": 115, "19548": 293, "1955": [29, 302], "1957": 206, "1958": [128, 206], "1959": 206, "1962": 128, "1963": 237, "1965": [4, 96, 124], "1967": [89, 215], "1968": 145, "1969": [4, 89, 96, 113, 215, 231], "197": 93, "1970": [68, 124], "1971": [215, 237, 302], "1972": 128, "1973": [34, 70, 89, 203], "1974": 223, "1976": [212, 215], "1977": 196, "1978": [72, 79, 196, 215], "1979": [105, 196], "198": 124, "1980": [128, 259], "1981": [87, 215], "1982": [115, 206, 302], "1983": [29, 256], "1985": [29, 115, 153, 200, 265], "1988": [67, 170, 188, 214, 215], "19882": 13, "1989": [4, 215, 239], "199": 70, "1990": [80, 113, 231, 265], "1991": [70, 215], "1992": [128, 215, 239, 259], "19923894": 299, "1993": [88, 215], "1994": [80, 214, 215, 217], "1995": [93, 215, 233, 239], "1996": [206, 215, 231, 239, 265], "1997": [87, 113, 128, 215, 231], "1998": [215, 234], "1999": [80, 124, 215, 220, 237], "1_": 88, "1_0": 111, "1_1": 111, "1_2": 14, "1cm": 68, "1d": [18, 167, 169, 182, 200, 246], "1d0": 69, "1e": [14, 69, 88, 92, 124, 142, 160, 217, 239], "1e11": 128, "1e16": 88, "1e20": 88, "1e23": [128, 262], "1e3": 128, "1e5": 69, "1f1": 237, "1g": 69, "1j": [142, 144, 211], "1kn": 136, "1m": 137, "1st": [46, 67, 80, 128, 144, 237, 238, 262, 287], "1st_exact": [4, 12, 237], "1st_exact_integr": 237, "1st_homogeneous_coeff": 237, "1st_homogeneous_coeff_best": 237, "1st_homogeneous_coeff_subs_dep_div_indep": 237, "1st_homogeneous_coeff_subs_dep_div_indep_integr": 237, "1st_homogeneous_coeff_subs_indep_div_dep": 237, "1st_homogeneous_coeff_subs_indep_div_dep_integr": 237, "1st_linear": 237, "1st_linear_constant_coeff_homogen": 238, "1st_linear_constant_coeff_integr": 238, "1st_linear_integr": 237, "1st_power_seri": 237, "1st_rational_riccati": 237, "1u": 129, "1x1": [127, 241], "1x3": 124, "2": [5, 7, 11, 12, 13, 14, 15, 16, 18, 21, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 56, 57, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 127, 128, 130, 131, 132, 134, 135, 136, 138, 140, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 250, 252, 253, 254, 255, 256, 259, 260, 261, 262, 265, 267, 268, 269, 270, 271, 272, 274, 275, 286, 287, 289, 291, 292, 293, 296, 297, 298, 299, 302, 303, 304, 306, 307, 309, 310, 311], "20": [4, 14, 16, 46, 54, 57, 65, 69, 77, 79, 80, 87, 88, 89, 92, 93, 96, 104, 105, 115, 124, 128, 135, 136, 137, 138, 140, 144, 155, 196, 198, 206, 207, 210, 211, 215, 216, 217, 218, 220, 221, 227, 228, 229, 230, 233, 234, 237, 240, 241, 265, 287], "200": [89, 124, 128, 136, 142, 265], "2000": [69, 74, 115, 128, 215], "20000": 128, "20000000": [92, 217], "20000000000000": 16, "2000000000000002": 16, "2000061035": 16, "2001": [80, 128, 215], "2002": [91, 208, 215, 218], "2003": [69, 206, 215, 221, 234], "20033": 88, "2004": [88, 96, 215, 234], "2005": [70, 78, 115, 128, 217], "2006": [89, 230], "2007": [29, 128, 256, 302], "200710": 12, "20071116100808": 89, "20078": 13, "2008": [74, 124, 206, 215, 217, 221], "2009": [93, 96, 128, 206, 217], "2010": [82, 238, 259], "2011": [34, 72, 80, 113, 124, 128, 203, 230], "2012": [88, 215, 303], "2013": [90, 100, 124, 215, 295], "2014": [7, 240, 241], "20140123": 115, "2015": [115, 154, 240], "20150716201437": 128, "2016": [7, 18, 131, 132, 134, 299], "20160": 210, "20160313023044": 259, "20160323033111": 234, "20160323033128": 234, "2017": [0, 7, 148, 206], "20170202003812": [93, 128], "20171008094331": 80, "20180413004012": 128, "2020": [98, 170], "20200118141346": 115, "20200204081320": 241, "20200224064753": 72, "20200307091449": 293, "20200628222206": 241, "20200628222212": 241, "202008": 12, "20201021115213": 234, "20201128173312": 96, "20201230182007": 241, "20205690315959": 96, "20209": 13, "20210507012732": 93, "20210508104430": 241, "20210511015444": 105, "20210806201615": 233, "2022": 206, "20220207032113": 241, "20221029115428": 210, "2023": 148, "2026366": 241, "202916782076162456022877024859": 128, "203": [77, 93, 210], "2048": [89, 128, 221], "205": [93, 113, 231], "2057": 91, "206": [212, 217], "20621": 13, "207": 234, "2071025955": 138, "20759": 13, "20780": 13, "2079": 217, "208": [92, 217], "20833333333333e": 136, "208341": 128, "2084": [29, 302], "2093": 115, "2097152": 217, "20conic": 265, "20e9": 137, "20kn": [136, 137], "20on": 265, "20point": 265, "20th": 208, "21": [4, 13, 18, 32, 74, 79, 88, 91, 93, 101, 102, 110, 124, 128, 130, 132, 136, 144, 207, 210, 212, 214, 215, 216, 218, 220, 221, 227, 237, 241, 242, 297], "210": [12, 92, 93, 128, 210, 234], "211": [113, 128, 217, 231, 237], "2111": 130, "2112166839943": 128, "2112723729365330143": 96, "21147": 93, "21177": 12, "212": [89, 115, 215], "21245": 12, "21253": 12, "213": 124, "21306132": 69, "214": 196, "21402": 13, "21427": 13, "21441": 13, "21477639576571": 128, "21494": 13, "21496": 13, "21563": 13, "216": [124, 214], "2161": 234, "21626": 13, "217": [115, 215], "218332": 259, "21875": 115, "219": 215, "21938393439552": 96, "219383934395520": 96, "22": [4, 12, 16, 32, 79, 88, 91, 92, 93, 96, 124, 128, 137, 215, 220, 233, 234, 239, 241], "220": [128, 217], "2204": 214, "2209": 146, "221": 237, "22140257085069": 110, "22169": 115, "222": 91, "22252": 115, "22285": 115, "223": 215, "224": [61, 194, 215], "22464679914735e": 14, "2247": 115, "225": [93, 128, 215], "22553956329232": 110, "225607735_dixon_result": 215, "226": [79, 215], "227": 79, "22740742820168557599192443603787379946077222541710": 96, "22827": 93, "229": 128, "22906851": 11, "22925376": 253, "23": [4, 32, 67, 79, 80, 88, 91, 94, 96, 102, 104, 124, 128, 136, 144, 212, 214, 217, 220, 227, 234, 259], "230": [217, 239], "2307": 124, "231": [128, 200], "232": 96, "233": [128, 215, 237], "2331v2": 259, "234": 128, "234137346_on_a_multivariate_log": 241, "2345": 234, "23456789123456789": 88, "23456789123457": 88, "235": 93, "235625382192159": 164, "236": 128, "236237": 214, "237": [48, 215], "2376": 0, "238": [88, 128], "239": 88, "23903": 88, "24": [4, 11, 12, 51, 53, 54, 61, 67, 76, 80, 81, 88, 91, 93, 96, 102, 110, 115, 124, 128, 136, 137, 142, 144, 188, 198, 206, 212, 214, 216, 217, 218, 220, 223, 228, 234, 237, 241, 256, 259, 261, 275, 287, 293], "240": [136, 215, 223, 268], "2400": 136, "242": 212, "243": [79, 96, 234, 239], "24310": 128, "2434931": 128, "244": [88, 214], "247": [212, 215, 239], "2478": 230, "24780825": 241, "248": 128, "2489": 128, "249": 215, "25": [4, 16, 18, 46, 51, 54, 79, 80, 89, 91, 93, 96, 98, 101, 103, 119, 124, 127, 128, 132, 136, 137, 144, 149, 155, 204, 206, 210, 214, 216, 217, 220, 221, 227, 228, 230, 234, 236, 237, 238, 241, 253], "250": [16, 128, 234], "2500": 136, "25000000000000000000": 16, "2507191691": 128, "251": 214, "2514261_algebraic_and_geometric_reasoning_using_dixon_result": 215, "25146": 198, "25165824": 253, "252": 12, "253": 80, "2531": 80, "25314": 80, "253140": 80, "255": 128, "25547445255474": 138, "256": [52, 69, 79, 128, 217, 221], "25645121643901801": 128, "257": [5, 128, 239], "2580": 128, "25882": 115, "259": 124, "25e": 137, "25x25": 210, "26": [4, 77, 88, 89, 91, 96, 100, 124, 128, 136, 137, 138, 214, 217, 234, 241], "2620": 96, "26390": 92, "264": [124, 239], "265": 217, "26629073187415": 87, "268": 93, "2690882": 124, "27": [4, 11, 52, 69, 70, 79, 83, 93, 98, 124, 128, 136, 137, 144, 146, 214, 217, 239], "270": [138, 140], "2700": [61, 136], "2702765": 93, "2709077133180915240135586837960864768806330782747": 128, "271130": 210, "271133": 210, "2715": 217, "272": [93, 217], "27261": 124, "2730": 93, "274": 93, "27433": 115, "2753": 89, "27720": 93, "278444111699106966687122": 54, "27844411169911": [54, 239], "27852": 115, "27879516692116952268509756941098324140300059345163": 96, "2788": 128, "279": 217, "2794155": 286, "27_number": 128, "27_theorem": 275, "27s_constant": 88, "27s_gcd_algorithm": 88, "27s_law": 230, "27s_method": 69, "27s_rule": 124, "27s_sampling_formula": 241, "27s_strongly_connected_components_algorithm": 259, "27s_theorem": [93, 240], "27s_totient_funct": [93, 128], "27s_z": 241, "27t": 118, "28": [4, 69, 79, 87, 91, 92, 96, 124, 128, 136, 230, 234, 237, 292, 302], "280": 93, "2809": 160, "281": 80, "282": 71, "28318530717959": 43, "28333333333333": 87, "284": [80, 128], "285": 239, "2857142857142857": 14, "286": 128, "28625": 93, "287": 128, "288037795340032417959588909060233922890": [4, 96], "288716": 256, "289": 239, "28902548222223624241": 92, "2899": 115, "28continu": 241, "28cryptosystem": 89, "28graph_theori": 259, "28group_theori": 79, "28information_theori": 241, "28mathemat": [41, 80, 88, 124, 229], "28mathematical_const": 88, "28mathematical_log": [63, 64], "28number": 88, "28number_theori": 77, "28order": 94, "28permutation_group_theori": 79, "28physic": 180, "28set_theori": 229, "28x": 128, "29": [4, 41, 61, 63, 64, 71, 77, 79, 80, 88, 89, 91, 93, 94, 101, 102, 124, 128, 144, 180, 211, 229, 241, 259], "290": [239, 268], "290764986058437": 96, "291": 88, "29128599706266": 92, "2912859970626635404072825905956005414986193682745": 92, "29136443417283": 96, "292": 128, "2922": [18, 131, 132, 134, 299], "29256885": 299, "2936": [18, 131, 132, 134, 299], "2943": 115, "2948": 240, "29541": 115, "29585191": 299, "296": 239, "297": [215, 217], "299792458": [162, 165, 195, 198], "29983226": 299, "29999999999999998890": 88, "2a": [36, 48, 49, 211, 241], "2bb46c0852bf74c9d74d1a12af6d11f69f7e8363": 215, "2c_and_li": 128, "2c_x_": 128, "2d": [2, 101, 102, 104, 136, 137, 138, 140, 169, 200, 207, 221, 234, 246, 291], "2d_1": 241, "2e": [49, 53, 88], "2f": [18, 39, 298], "2f1": 237, "2f_1": 214, "2f_log_x": 128, "2fs0025": 128, "2g": 55, "2h": 39, "2i": 88, "2j": [93, 214, 241], "2j_2": [93, 223], "2j_3": 206, "2k": [41, 88, 93, 113, 128, 234], "2l": 214, "2l_1": 206, "2l_2": 206, "2l_3": 206, "2m": 137, "2n": [26, 80, 87, 93, 96, 115, 124, 140, 145, 206, 224, 231], "2nd": [30, 46, 67, 80, 89, 128, 144, 237, 242, 259], "2nd_hypergeometr": 237, "2nd_hypergeometric_integr": 237, "2nd_linear_airi": 237, "2nd_linear_bessel": 237, "2nd_nonlinear_autonomous_conserv": 237, "2nd_nonlinear_autonomous_conserved_integr": 237, "2nd_power_series_ordinari": 237, "2nd_power_series_regular": 237, "2pq": [49, 51], "2q": 128, "2q_2": 303, "2r": 303, "2t": [46, 93], "2u": 46, "2x": [16, 51, 88, 96, 113, 128, 130, 233, 234, 240, 241, 286, 289, 297], "2x1": 160, "2x2": [120, 127, 160, 210, 237], "2x_": 234, "2xy": [214, 291], "2y": [46, 214, 234, 237, 240, 291], "2z": [49, 56, 96, 240, 241], "3": [0, 3, 5, 7, 11, 12, 13, 14, 16, 18, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 48, 50, 51, 52, 53, 54, 55, 57, 59, 61, 62, 64, 65, 66, 67, 69, 70, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 132, 134, 136, 138, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 158, 160, 162, 164, 168, 170, 171, 172, 176, 180, 185, 186, 188, 190, 191, 194, 195, 197, 198, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 252, 253, 255, 256, 257, 259, 260, 261, 262, 265, 267, 268, 269, 270, 272, 274, 275, 282, 286, 287, 289, 291, 292, 293, 296, 297, 298, 299, 302, 303, 304, 306, 307, 309, 310, 311], "30": [4, 14, 22, 32, 61, 67, 69, 74, 88, 89, 91, 92, 93, 96, 102, 104, 115, 124, 125, 128, 136, 137, 138, 164, 210, 212, 216, 217, 221, 227, 230, 233, 241, 242, 297, 302], "300": [33, 124, 128, 136, 207, 218, 274], "3000": [104, 136], "300000": 198, "30000000000000000000": 88, "30030": 89, "301": [136, 231, 234, 299], "301369863013699": 124, "30247": 93, "303": [210, 234], "304": [215, 217], "305": 87, "30589": 124, "306": 89, "30625": 124, "307": 88, "30769105034035": 18, "308": 231, "309016994374947": 88, "3096": 241, "31": [11, 32, 76, 88, 91, 92, 104, 128, 132, 144, 206, 217, 234, 299], "311": [88, 128], "312": [89, 200, 239, 265, 267], "3125": [104, 241], "31250": 136, "313": 204, "313552108895239": 57, "31413": 115, "31417": 92, "3144337": 217, "315": 239, "3152519739159347": 14, "31582447384324": 302, "317": 12, "3176591": 241, "317843553417859": 164, "318": [18, 132], "3192": 128, "3193": 115, "32": [11, 32, 79, 91, 94, 96, 98, 115, 124, 128, 136, 142, 215, 217, 218, 230, 231, 234, 241, 252], "320": 88, "321": 102, "32140410564766e": 302, "322248": 87, "322255": 87, "322866429004087": 302, "323": [71, 96, 128], "3233": 89, "3239": 128, "324": [48, 128, 210, 215], "3243f6a8885a30": 128, "3248186011": 142, "325": 71, "3251": 124, "32555634906645": 96, "3257": 128, "3267000013": 128, "327": [91, 237], "3275": 217, "32767": 128, "32768": 221, "329": 237, "33": [18, 32, 69, 88, 91, 124, 132, 154, 164, 210, 214, 218, 221, 241], "330": 215, "330515398992311": 302, "33062": 128, "331": 110, "33102": 128, "3312": 259, "3321": 259, "33215": 128, "333": [91, 128], "3333": 115, "33333": [92, 115], "333333333333333": [92, 211, 233], "333333333333333314830": 88, "333333333333333333333": 88, "33333333333333333333333333333": 211, "335": 88, "3358": 115, "336": 61, "33768": 210, "33795": 115, "33984": 217, "33998": 115, "34": [16, 69, 80, 93, 101, 124, 128, 149, 173, 215, 220, 227, 233, 234], "3400000000000": 16, "341": [101, 128], "34105": 93, "3416277185114782": 54, "3418463277618": 164, "34211": 241, "342923500": 120, "343415678363698242195300815958": 96, "345": 80, "3456": 234, "346": 92, "34635637913639": 92, "34665576869e": 92, "34747534407696": 94, "34785": 115, "348": 124, "348645229818821": 164, "349745826211722": 48, "34985849706254": 110, "35": [79, 82, 91, 93, 101, 102, 115, 124, 128, 144, 210, 216, 221, 234, 237, 241, 302], "350": [87, 155], "3506": 115, "3510146724592": 302, "352": [57, 217], "352471546": 48, "352471546031726": 48, "353": [91, 124], "354": [18, 132], "355": [92, 128, 215], "356": [115, 216, 239], "357947691": 110, "36": [12, 48, 71, 82, 89, 93, 104, 115, 124, 128, 137, 144, 217, 221, 234, 237, 241, 275], "360": [138, 140], "3600": [61, 93], "3602879701896397": 88, "36188804005": 142, "362": 115, "3627": 146, "363": [98, 128, 215], "364": 98, "36465": 138, "3674160": 79, "368": 206, "369": 89, "37": [77, 89, 93, 94, 98, 124, 128, 137, 138, 144, 206, 221, 234], "374": [18, 132], "37439874427164e": 18, "3744312326": [88, 93], "376": 215, "377": 128, "379": [128, 217], "379238": 128, "37933": 241, "38": [93, 104, 124, 128, 221, 234, 236, 241], "381": 128, "38177329": 260, "38177329068": 260, "3827": 128, "384": 91, "387": 91, "38954165": 241, "39": [93, 96, 128, 138, 144, 220], "390740740740741": [18, 132], "391": 240, "3923913114": 12, "39267e": 239, "3927": 115, "393": 234, "39439": 115, "39578": 210, "396": [22, 92], "397": 215, "397042": 128, "39764993382373624267": 93, "399": 233, "3a": [18, 131], "3af6dc1": 11, "3aintegr": 115, "3aissu": 115, "3aopen": 115, "3d": [2, 33, 61, 72, 101, 102, 136, 169, 192, 207, 269, 271, 272, 273, 274], "3e": 69, "3f_1": 214, "3i": 128, "3j": [96, 170, 206], "3j_2": [93, 223], "3kn": 136, "3m": 137, "3rd": [30, 67, 80, 94, 128, 217, 239, 242, 259], "3x": [49, 55, 88, 130, 214, 240, 289], "3x1": 124, "3x3": [39, 53, 103, 124, 210, 270], "3xy": 234, "3xyz": 130, "3y": 234, "3z": 240, "4": [2, 5, 11, 12, 14, 16, 17, 18, 22, 23, 24, 27, 28, 30, 31, 33, 36, 37, 39, 41, 42, 43, 48, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 64, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 110, 111, 113, 115, 117, 118, 119, 120, 121, 124, 125, 127, 128, 130, 132, 134, 136, 138, 140, 142, 144, 145, 146, 150, 151, 160, 163, 167, 170, 175, 185, 186, 188, 189, 190, 191, 192, 194, 200, 201, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 252, 253, 256, 259, 260, 261, 265, 268, 269, 270, 272, 274, 275, 286, 287, 289, 291, 292, 293, 296, 297, 298, 299, 302, 304, 306, 307, 309, 310, 311], "40": [4, 57, 69, 91, 93, 96, 98, 105, 124, 128, 136, 138, 207, 218, 220, 221, 241, 262, 286], "400": [136, 207, 217], "4000": [136, 137], "40000": 136, "4002723175": 241, "4013": 136, "40207856": 241, "40320": [11, 12], "404": 234, "4067977442463": [18, 132], "409": 241, "4096": 93, "4096000": 70, "41": [91, 98, 124, 128, 144, 212, 234], "41152": 164, "4117304087953": 142, "41211849": 286, "412214747707527": 189, "41230258795639848808323405461146104203453483447240": 96, "413": 89, "4130533677": 138, "413253315211239": 302, "414": 259, "4140": 93, "4142": 217, "414213562": 88, "4142135623730951": 57, "4142135623731": [41, 54, 221, 239], "414645": 217, "415": 91, "41577": 115, "41624341514535": 94, "417": [115, 233], "42": [55, 69, 77, 88, 91, 93, 101, 102, 104, 119, 121, 124, 126, 128, 210, 212, 214, 217, 234, 252], "420": [128, 234], "4200": 128, "423": 124, "4250": 136, "42519758": 241, "42525": 93, "42658": 115, "42868": 138, "429": [93, 221], "42944427361326": 302, "43": [83, 124, 128, 136, 137, 241, 297], "430": 259, "432": [57, 101, 216], "433": [18, 132], "434607": 57, "43466557686937456435688527675040625802564660517371780402481729089536555417949051890403879840079255169295922593080322634775209689623239873322471161642996440906533187938298969649928516003704476137795166849228875": 92, "43608": 115, "438990337475312": 48, "44": [14, 18, 91, 93, 124, 128, 131, 132, 134, 230, 241, 299], "4410317": 128, "4418": 146, "44224957030741": 218, "4423": 128, "4428829381583662470158809900606936986146216893757": 92, "44288293815837": 92, "4429": 92, "4433": 93, "44399": 138, "444": 91, "445": [4, 215], "44542": 234, "44626032": 69, "44721": 115, "4472354033813751e": 142, "448": 61, "44918589": 299, "4493": 115, "45": [12, 36, 68, 88, 93, 104, 124, 128, 140, 144, 217, 218, 234], "450": [11, 124], "4503599627370496": 14, "4504508011325967e": 142, "45136923488338": 96, "45279": 241, "4536": 128, "456": [4, 88, 215], "456457160755703e": 142, "4579": 218, "45896": 115, "4596": 88, "45960141378007": 110, "459697694131860": 43, "46": [124, 128, 136, 196, 220, 239, 241], "463": [29, 70, 302], "4641": 110, "4641991": 128, "46486771378823": 302, "46699555e": 14, "46792545969349058": 239, "47": [93, 96, 124, 128, 144, 146, 164, 196, 220], "4701": 241, "4701sum07": 241, "472": 241, "473": 80, "47450": [93, 128], "4753701529": 128, "47577": 142, "47757": 210, "478": 215, "479001599": 128, "48": [91, 98, 137, 234, 239, 241, 287], "48550": 303, "4856615": 259, "4857018": 259, "4862": 93, "4869863": 128, "4877893607115270300540019e": 54, "488253406075340754500223503357": 96, "48977444677355": 302, "49": [92, 93, 128, 137, 214, 234], "490": [70, 80], "4915": 88, "49182424008069": 110, "49299": 234, "49315059": 260, "495": [136, 210], "49552913752915": 138, "49793": 138, "49801566811835604271": [4, 96], "499948155": 80, "4a": 256, "4ac": [48, 49, 234], "4adc6a51d8371be5b0e4c7dff287fc70": 241, "4e": [16, 69, 239], "4i": 128, "4m": 137, "4th": [30, 93, 94, 110, 124, 128], "4x": [234, 240, 286], "4x1": [163, 241], "4x4": [53, 61, 103, 127, 163, 210, 241], "4xy": [33, 274], "4y": [51, 214, 240, 286], "4z": [49, 56, 240], "5": [5, 11, 12, 14, 16, 17, 18, 22, 23, 25, 28, 33, 36, 37, 41, 43, 48, 50, 52, 54, 57, 61, 63, 64, 65, 67, 69, 70, 71, 72, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 130, 132, 135, 136, 138, 140, 142, 144, 146, 147, 149, 151, 154, 155, 160, 164, 185, 186, 189, 191, 198, 201, 204, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 252, 253, 259, 260, 261, 265, 268, 270, 272, 274, 275, 286, 287, 289, 292, 293, 297, 299, 302, 303, 304, 309, 310, 311], "50": [55, 70, 79, 91, 92, 93, 96, 104, 124, 128, 136, 137, 164, 195, 214, 215, 217, 221, 230, 239, 287], "500": [70, 92, 155, 299], "5000": [92, 136], "50000": 128, "50000000000000": [88, 92], "500000000000000": 144, "50000000000000000000000000000": 92, "5000000000291665e": 142, "500006656595360": 146, "5020": 5, "50232379629182": 96, "503": 216, "504": [92, 215], "5040": [39, 93, 110, 217, 218], "504067061906928": 92, "50406706190692837199": 92, "505": 215, "50521": [93, 217], "50923695405127": 96, "50u": 129, "51": [67, 124, 128, 144], "51041666666667e": 136, "5109": 115, "511": 93, "5112118495813": 194, "512": [79, 96], "5124": 217, "514": [70, 78, 215], "5140": 252, "5148378120533502e": 142, "515": 96, "5173168": 96, "52": [77, 93, 128, 136, 137, 138, 206, 220, 234, 237, 259, 287], "5236": 115, "525": 104, "5253": 115, "5269": 93, "52696170990069": 302, "52818775009509558395695966887": 128, "53": [43, 89, 91, 124, 160, 209, 211], "53087": 115, "530e": 160, "532": 215, "5394769": 128, "54": [88, 124, 214, 220, 259], "5404319552844595": 88, "542": 79, "544": 206, "5459": 128, "55": [79, 91, 93, 124, 206, 207, 217, 234, 299], "55203744279187": 96, "55271367880050e": 67, "555": 91, "55556": 115, "558": 237, "55872552179222e": 48, "55998576005696": 160, "56": [57, 91, 93, 115, 128, 214, 217], "560": 136, "561": [13, 128], "562": 11, "563": 215, "5648024145755525987042919132": 96, "567": 94, "57": [79, 124, 128, 241], "5706": 88, "571523173729245": 302, "5718": [67, 128, 234], "5728": 88, "574": 128, "57721566490153286060651209008240243104215933593992": 92, "577215664901533": 92, "5772157": 88, "577377951366403": 164, "5777": 128, "579": 93, "58": [89, 124, 138, 247], "58602": 241, "5880": 93, "588469032184": 239, "59": [124, 237], "591382": 132, "5915587277": 128, "5917": 115, "5919532755215": 43, "5937": 303, "5937424601": 110, "59375e": 136, "5992": 0, "5b7c3e8ee5b40332abdb206c": 293, "5c52": 128, "5e": 46, "5g": 69, "5kn": 136, "5m": [137, 256], "5th": [30, 88, 214, 216], "5x": [128, 234], "5x5": 89, "5y": 234, "6": [11, 12, 14, 16, 17, 18, 28, 32, 36, 37, 39, 46, 48, 56, 57, 61, 63, 64, 67, 69, 70, 71, 72, 74, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 101, 102, 103, 104, 110, 111, 113, 115, 117, 118, 120, 121, 124, 125, 127, 128, 130, 132, 135, 136, 138, 140, 142, 144, 145, 146, 155, 160, 164, 170, 188, 200, 206, 207, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 223, 226, 227, 228, 229, 230, 233, 234, 237, 238, 239, 240, 241, 242, 252, 253, 256, 259, 260, 261, 265, 268, 270, 275, 287, 293, 297, 298, 299, 304, 309, 310, 311], "60": [61, 74, 79, 81, 87, 88, 93, 96, 115, 124, 128, 136, 137, 210, 220, 221, 234, 237, 259], "6000": 88, "6004799503160655": 233, "600e": 88, "601": 18, "60123853010113e": 92, "609": 93, "609344": 198, "60986636": 299, "60e2": 88, "60n": 89, "60x60": 210, "61": [88, 89, 93, 104, 124, 128, 217, 223], "61051": 110, "6116978": 262, "6125": [124, 128], "617": 128, "61717": 138, "6174190361677": 132, "618": 130, "61803398874989": 88, "6180885085e": 142, "61825902074169104140626429133247528291577794512415": 96, "62": [124, 214], "62349": 115, "625": [104, 275], "625146415202697": 96, "62963087839509e": 198, "63": [88, 91, 124, 138], "630": 217, "631": 74, "63232916": 241, "63366137253665": 302, "634": 74, "6349839002": 228, "635": 92, "635564016364870": 94, "636": 89, "639985": [128, 214], "64": [8, 12, 29, 73, 79, 88, 128, 206, 214, 220, 230, 239, 241, 252, 259, 262, 296, 302], "6400": 136, "643": [91, 128], "6435": 93, "643501108793284": 94, "6449340668": 228, "64493406684823": 92, "645": 128, "6460": 128, "64613129282185e": 92, "64705": 241, "648": 241, "64872063859684": 110, "65": [128, 144, 214, 241, 299, 302], "65070329233125e": 302, "65092319930185633889": 96, "651354770181179": 164, "65215": 115, "6543612251060553497428174e": 54, "6545": 217, "65504": 69, "65536": [217, 220, 221], "65537": [128, 220], "6569866": 286, "657": 230, "658921776708929": 164, "659097795948": 194, "659936": 96, "66": [18, 93, 124, 217, 221], "660539060e": 198, "662": 124, "66317": 128, "6634255": 217, "6659": 240, "666": 91, "666666666666667": [136, 137], "66666666666667": [18, 132], "6666666666667": [18, 299], "668": 61, "67": [124, 214, 215], "670250533855183": 142, "6707": 124, "6711f12": 241, "6720": 217, "67387984831737": 302, "676": 234, "67680523332152": 302, "67721": 115, "6774": 259, "67884": 142, "67894": 69, "679": 137, "68": [91, 116, 124, 128, 210, 234], "68066296590676": 302, "68234517512745": 302, "6832579186": 241, "68437": 142, "686": 256, "6868680200532414": [4, 12], "687": 48, "6875": 136, "68812842": 299, "6881721793": 228, "689": [115, 137], "69": [79, 124, 210, 239, 256], "691": 93, "6931396564": 228, "693147180559945": 130, "6931471805599453094172321215": 228, "6931471806": 228, "693147255559946": 92, "69629": 217, "6963328": 241, "6988699669998001": 128, "699": 67, "6j": [170, 206], "6k": 93, "6th": [72, 128], "6x": [88, 214], "6x6": 89, "6z": [49, 56], "7": [4, 11, 12, 14, 16, 17, 18, 25, 26, 30, 41, 43, 46, 48, 51, 55, 61, 63, 64, 67, 69, 72, 74, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 91, 92, 93, 94, 96, 98, 101, 102, 103, 104, 110, 113, 115, 118, 120, 121, 124, 128, 130, 136, 138, 142, 144, 191, 196, 198, 206, 207, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 223, 224, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 246, 247, 252, 253, 256, 259, 260, 265, 275, 287, 292, 293, 299, 302, 311], "70": [88, 89, 105, 115, 124, 128, 220, 221, 234, 241, 262], "700000000000000": 241, "701": 194, "7042848373025861": 142, "7048138294": 228, "706": [67, 124], "7060005655815754299976961394452809": 128, "7063": 115, "70675605663973": 302, "70710678118654752440084436210484903928483593768847": 287, "707106781186548": [94, 287], "70711": 115, "71": [11, 79, 104, 124, 128, 194], "71109": 115, "712": [46, 115], "712328767123288": 124, "712524808": 88, "71318": 217, "7143": 241, "715": [170, 206, 221], "717": [18, 132], "71827974413517": 110, "718281828": 88, "718281828459045235360287d0": 221, "7182818284590452d0": 221, "718281828459045j": 92, "71828182845905": 110, "7182818285": 228, "718281835": 128, "7194768719633": 302, "72": [67, 71, 88, 101, 124, 128, 136, 206, 220, 234], "720": [11, 12, 223, 237, 259], "721": 215, "72463": 115, "729": 214, "73": [79, 87, 88, 101, 128, 144, 237], "730": 115, "730061685774": 239, "73071763923152794095062": 96, "732": 217, "73205080756887729352744634151": 217, "73205080756888": 217, "7357232": 12, "73908513321516": 54, "73908513321516064165531208767387340401341175890076": 239, "739085133215161": [49, 54, 56, 57, 239], "74": [79, 93, 128, 144], "74126166983329d": 69, "744": [212, 214], "74720545502474": 96, "75": [88, 91, 136, 210, 241, 265, 299], "750": 93, "7523": 240, "754": 88, "7560958484519": 138, "7568025": 286, "7598d94": 11, "76": [93, 96, 124, 128, 214, 217], "760939574180767": 96, "761": 93, "7635": 96, "764": 96, "7648844336": 48, "764884433600585": 48, "7649": 88, "765": [57, 217], "7655283165378005676": 96, "766": 69, "767": 91, "77": [9, 77, 93, 96, 124, 128, 220, 221, 254], "771561": 110, "7717": 0, "77245385090552": [57, 287], "7746": 115, "7751": 115, "775341882195845": 302, "777": [82, 91], "778": 82, "779": 82, "78": [11, 79, 102, 124, 128, 137, 196, 237, 241], "7845": 115, "7854": 115, "787338754623378": 132, "789": [88, 128], "79": [79, 80, 137], "79115232": 241, "79150773600774": 138, "7936": [93, 217], "797": 89, "79798269973507": 132, "799333555511111": 128, "7_f64": 221, "7abb76ffed50425299b9065129ae87261668a0f7": 240, "7fa63b1": 11, "7o38": 206, "7y": 234, "8": [4, 11, 12, 14, 17, 18, 30, 39, 46, 48, 54, 59, 61, 62, 67, 69, 72, 79, 80, 81, 84, 86, 88, 89, 91, 92, 93, 94, 96, 98, 101, 102, 104, 110, 113, 115, 117, 118, 120, 121, 124, 125, 127, 128, 130, 132, 136, 138, 140, 142, 144, 146, 163, 164, 175, 206, 207, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 223, 224, 227, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 246, 252, 254, 256, 259, 265, 268, 269, 275, 286, 287, 291, 293, 297, 299, 302], "80": [3, 4, 8, 12, 16, 43, 67, 79, 88, 91, 115, 124, 128, 136, 137, 142, 210, 214, 217, 220, 237, 241, 257, 259, 299], "8000": [8, 136], "800205": [212, 215], "803206": 128, "805": 217, "806320": 215, "806338": 215, "806342": 212, "807740275199311": 302, "809": 115, "809709509409109": 128, "81": [18, 22, 79, 93, 98, 124, 128, 206, 210, 220, 299, 302, 304], "8100": 241, "814": [18, 132], "816477005968898": 164, "817106179880225": 18, "818": 196, "81879421395609": 96, "82": [79, 115, 124, 241], "82211796209193": 110, "823": 89, "825": 132, "827230": 79, "827273": 79, "82842712474619": 286, "82842712475": 291, "828770759094287e": 142, "83": [79, 220], "831": 128, "83333": 115, "83403519": 241, "83711": 93, "8375": 115, "8392867552141611326": 88, "84": [88, 92, 128], "84092844": 129, "8411998": 129, "84119981": 129, "84147096": 129, "84147098": [129, 260, 286], "8414709848078965": [14, 260], "841470984807896506652502321630": 14, "844291913708725": 142, "846749014511809332450147": 93, "85": [77, 92, 93, 124, 128, 136, 144, 189, 206, 241, 302], "850": 138, "850908514477849": 164, "854500743565858": 142, "85768055": 241, "85819627": 241, "86": [29, 80, 124, 220, 230], "861136": 217, "86113631159405258": 217, "86114": 115, "861246379582118": 142, "86400": 198, "86458333333333e": 136, "865": 217, "865474033102": 69, "865474033111": 69, "865477135298": 69, "86602": 115, "8660254037844386j": 142, "867263818209": 69, "869604401089358618834491d0": 221, "87": [79, 94, 124, 128, 214], "87174": 115, "8724366472624298171": 96, "873": [46, 128], "87636": 217, "877": 93, "88": [88, 124, 128, 299], "884": 234, "886": [18, 132], "88679245283019": 160, "888": 91, "888888877777777": 128, "88889": 115, "89": [79, 86, 115], "891": 128, "891197738059089": 302, "8a975c1405bd35c65993abf5a4edb667c1db": 128, "8am": 89, "8kn": 137, "8m": 234, "8xy": 214, "9": [4, 11, 12, 14, 17, 18, 22, 24, 30, 37, 46, 55, 57, 59, 67, 69, 76, 78, 79, 80, 84, 86, 87, 88, 89, 91, 93, 94, 96, 97, 98, 101, 102, 104, 110, 113, 115, 119, 120, 121, 124, 125, 127, 128, 130, 135, 136, 138, 142, 144, 145, 146, 147, 149, 160, 164, 196, 206, 207, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 227, 229, 230, 231, 233, 234, 237, 239, 240, 241, 242, 252, 256, 259, 265, 268, 291, 293, 298, 299, 302, 304, 307], "90": [21, 22, 31, 67, 79, 86, 96, 124, 130, 136, 140, 221, 223, 233, 241, 254], "900": 61, "90047": 259, "90097": 115, "903": 136, "90300": 136, "906425478894557": 37, "90642547889456": 37, "9071": 128, "9087533932407": 302, "90929743": [260, 286], "909449841483": 96, "909672693737": 69, "91": [16, 70, 215, 220, 227, 241], "9121071": 299, "912285": [128, 214], "91403453669861": 138, "914148152112161": 128, "91596559": 88, "9179": 128, "92": [18, 101, 215, 237, 241, 259], "920": 234, "9215": 214, "921_": 88, "92242131492155809316615998938": 96, "926093295503462": 164, "92753330865999": 160, "93": [79, 144, 215], "932": 230, "9330": 93, "93669377311689": [18, 132], "9369318": 234, "93accumulate_oper": 43, "93add": 43, "93berkowitz_algorithm": 210, "93euler_equ": 237, "93gauss_quadratur": 115, "93hadamard_transform": 91, "93jacobi_pseudoprim": 128, "93jacobi_quadratur": 115, "93johnson": 259, "93lagrange_equ": 67, "93laguerre_quadratur": 115, "93lenstra": 210, "93lobatto_rul": 115, "93lov": 210, "93mascheroni_const": 88, "93rabin_primality_test": 128, "93ruffini_theorem": 217, "93schmidt_process": 124, "93simon_distribut": 241, "93trotter_algorithm": 259, "93tukey_fft_algorithm": 91, "93zero_plot": 142, "94": [146, 215], "9405": 214, "9412172": 241, "9424": 128, "943396226415094": [18, 132], "9436": 154, "945": [212, 218], "9487171": 110, "9496": 96, "94991743": 241, "95": [18, 69, 86, 128, 214, 221, 234, 237, 239, 254], "951": 92, "951056516295154": 88, "9537590861": 138, "954": 128, "956": 92, "9562288417661": 92, "95678796130331164628399634646042209010610577945815": 92, "95892427": 286, "96": [124, 241], "9603": 214, "9625": 136, "96593": 115, "967": 115, "96716083": 241, "9696": 240, "97": [79, 88, 89, 128, 214], "97171508499972": 302, "971843958291041": 164, "9780470316887": 241, "97851": 115, "98": [29, 79, 89, 217, 237, 304], "9801": 92, "9804659461513846513": 128, "981": 115, "98101184": 69, "982": 29, "983": 115, "983697455232980674869851942390639915940": 93, "9855e": 115, "986": 234, "987": 128, "989": 128, "9891e30": 194, "98935825": 286, "98991349867535": [18, 132], "99": [8, 69, 88, 89, 124, 128, 144, 214, 215], "9900": 93, "99009901": 128, "9904": 115, "991": 128, "991052601328069": 96, "9927": 115, "995": [18, 132], "995322265018952734162069256367": 96, "9955291375291": 138, "9964469100598874": 18, "99862803482534211706798214808651328230664709384460955058223172535940812848111745": 92, "999": [88, 92], "9999": 250, "9999999799999999": 142, "999999984582742099719981147840": 96, "9999999999999999": 14, "99999999999999991611392": 262, "99999999999999999999": 88, "9j": [170, 206], "9th": [93, 128], "9x": 240, "9y": [49, 55], "9z": 240, "A": [0, 2, 3, 4, 5, 9, 11, 12, 13, 14, 15, 16, 19, 21, 22, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 46, 48, 50, 52, 53, 54, 55, 56, 57, 58, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 110, 111, 113, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 130, 131, 132, 134, 136, 137, 138, 140, 142, 144, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 163, 165, 168, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 233, 234, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 253, 254, 255, 256, 257, 259, 260, 265, 267, 269, 270, 271, 272, 274, 275, 282, 288, 290, 292, 293, 297, 299, 301, 302, 305, 306, 307], "AND": [91, 118], "And": [3, 11, 12, 13, 14, 36, 42, 43, 50, 63, 79, 80, 87, 88, 89, 96, 113, 118, 124, 127, 152, 163, 207, 209, 217, 218, 221, 229, 233, 234, 239, 240, 241, 259, 260, 270, 297], "As": [4, 13, 14, 18, 22, 24, 27, 28, 35, 38, 39, 42, 43, 48, 53, 54, 55, 60, 69, 79, 80, 88, 89, 92, 93, 94, 96, 112, 113, 118, 124, 127, 128, 130, 131, 134, 149, 152, 156, 158, 191, 196, 208, 209, 211, 212, 214, 217, 218, 220, 221, 228, 229, 231, 237, 240, 241, 259, 260, 269, 270, 286, 287, 289, 291, 292, 293, 296, 297, 304, 306], "At": [2, 12, 21, 32, 36, 41, 43, 52, 67, 84, 94, 96, 115, 128, 136, 137, 196, 210, 214, 216, 231, 260], "BE": [0, 12], "BY": 234, "Be": [3, 4, 8, 43, 67, 88, 118, 124, 214, 237, 240, 248, 260], "Being": [3, 84, 98, 104, 211], "But": [2, 3, 5, 7, 12, 13, 14, 15, 16, 43, 48, 57, 87, 88, 93, 96, 102, 112, 124, 128, 179, 180, 191, 196, 200, 208, 209, 214, 218, 228, 230, 231, 233, 234, 237, 239, 240, 246, 256, 259, 260, 268, 287, 289, 291, 292, 297], "By": [2, 14, 16, 41, 43, 48, 52, 53, 55, 61, 62, 64, 69, 78, 87, 88, 90, 92, 93, 96, 102, 103, 107, 111, 113, 118, 124, 127, 128, 129, 130, 134, 136, 137, 142, 149, 186, 191, 207, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 223, 228, 230, 233, 234, 237, 239, 240, 241, 245, 247, 248, 252, 255, 259, 260, 272, 286, 291, 292, 297], "For": [1, 2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 35, 36, 38, 41, 42, 43, 44, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84, 87, 88, 89, 90, 91, 92, 93, 94, 96, 100, 102, 103, 106, 109, 111, 112, 113, 117, 118, 124, 128, 129, 130, 132, 134, 136, 137, 138, 140, 144, 146, 149, 150, 151, 152, 153, 154, 158, 160, 174, 175, 180, 184, 186, 188, 189, 190, 191, 193, 195, 196, 197, 200, 204, 205, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 233, 234, 236, 237, 239, 240, 241, 242, 245, 246, 247, 248, 252, 253, 254, 256, 257, 259, 260, 263, 265, 267, 270, 272, 274, 275, 285, 286, 287, 289, 292, 293, 297, 298, 299, 306], "ITE": [94, 118, 221], "If": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 41, 42, 43, 45, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 77, 79, 80, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 113, 115, 116, 117, 118, 120, 124, 125, 127, 128, 129, 130, 131, 132, 134, 136, 142, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 164, 168, 172, 175, 181, 185, 186, 187, 188, 189, 191, 195, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 265, 268, 270, 272, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "In": [2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 48, 52, 57, 59, 65, 67, 68, 69, 70, 71, 72, 74, 77, 78, 79, 80, 87, 88, 89, 90, 92, 93, 94, 96, 101, 103, 104, 105, 106, 113, 115, 116, 117, 118, 120, 124, 125, 128, 130, 133, 134, 136, 137, 140, 144, 148, 151, 152, 153, 155, 158, 177, 179, 180, 181, 186, 190, 191, 194, 195, 196, 203, 204, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 228, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 242, 243, 245, 247, 250, 252, 254, 256, 257, 259, 260, 265, 269, 270, 272, 274, 286, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 303, 304, 306, 307], "It": [0, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 28, 30, 35, 36, 39, 41, 42, 43, 48, 51, 52, 54, 55, 56, 59, 61, 62, 63, 64, 67, 68, 69, 76, 79, 80, 82, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 100, 104, 105, 111, 113, 115, 117, 118, 124, 128, 129, 130, 132, 133, 134, 136, 137, 138, 140, 142, 144, 146, 148, 149, 150, 151, 152, 153, 156, 158, 159, 160, 164, 165, 175, 180, 181, 186, 187, 188, 189, 190, 191, 193, 196, 199, 200, 204, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 221, 224, 228, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 252, 253, 254, 255, 256, 257, 260, 265, 268, 269, 270, 272, 274, 275, 286, 287, 289, 290, 291, 292, 293, 295, 296, 297, 310], "Its": [30, 88, 94, 104, 149, 189, 210, 214, 221, 229, 299], "NO": [55, 191], "NOT": [13, 14, 46, 118, 144, 171, 175, 190, 193, 250, 253], "No": [2, 4, 5, 11, 16, 18, 22, 57, 68, 88, 96, 103, 118, 128, 136, 145, 186, 207, 210, 217, 223, 224, 233, 234, 239, 240, 241, 246, 250, 256, 257, 259, 286, 298], "Not": [13, 15, 42, 43, 53, 88, 93, 118, 144, 221, 240, 241, 259, 291, 298], "OF": 256, "ONE": 221, "OR": [15, 67, 91, 118, 214], "Of": [12, 17, 39, 41, 87, 113, 124, 237, 240, 259, 297], "On": [8, 11, 13, 14, 22, 33, 41, 64, 74, 81, 88, 90, 96, 115, 118, 128, 136, 195, 196, 211, 212, 214, 215, 216, 217, 237, 239, 256, 260, 272, 274], "One": [11, 14, 15, 16, 22, 28, 30, 32, 38, 41, 43, 67, 68, 69, 78, 80, 87, 88, 93, 94, 96, 107, 110, 112, 113, 115, 118, 124, 128, 130, 136, 137, 158, 167, 196, 212, 214, 215, 217, 220, 223, 229, 233, 236, 239, 240, 241, 242, 247, 260, 272, 286, 287, 289, 292, 293, 297], "Or": [5, 8, 12, 13, 14, 16, 42, 50, 52, 79, 88, 89, 90, 96, 113, 118, 128, 155, 208, 218, 220, 221, 233, 240, 241, 252, 260, 272, 292, 295], "Ore": 111, "Such": [3, 4, 12, 41, 69, 88, 104, 208, 209, 216, 222, 230, 231, 233, 286, 292, 306], "That": [0, 3, 5, 11, 12, 14, 15, 16, 23, 35, 36, 41, 42, 43, 88, 89, 94, 118, 124, 128, 151, 188, 193, 199, 208, 209, 211, 212, 214, 216, 227, 228, 237, 241, 253, 254, 260, 286, 289, 292, 297], "The": [0, 2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 71, 72, 74, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 265, 267, 268, 269, 270, 273, 274, 275, 286, 287, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311], "Their": [4, 18, 88, 96, 113, 206, 207, 211, 214, 231], "Then": [8, 9, 11, 12, 14, 15, 18, 23, 28, 35, 39, 41, 79, 84, 87, 88, 113, 117, 124, 128, 150, 151, 153, 160, 188, 196, 208, 209, 211, 214, 216, 218, 221, 228, 231, 233, 234, 237, 239, 260, 309, 311], "There": [2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 18, 21, 23, 25, 27, 28, 35, 36, 38, 41, 42, 43, 45, 48, 51, 52, 56, 69, 70, 74, 79, 80, 81, 82, 85, 87, 88, 89, 92, 93, 96, 112, 113, 115, 116, 117, 118, 120, 124, 128, 134, 136, 137, 140, 144, 151, 158, 164, 181, 186, 200, 205, 207, 211, 212, 213, 214, 216, 217, 218, 221, 222, 223, 229, 230, 231, 233, 234, 237, 239, 240, 241, 243, 246, 255, 256, 259, 260, 262, 270, 286, 287, 289, 291, 292, 296, 297, 299], "These": [0, 2, 4, 5, 9, 11, 12, 13, 14, 15, 16, 17, 18, 27, 30, 33, 35, 36, 37, 39, 41, 42, 43, 57, 58, 60, 68, 69, 79, 87, 88, 89, 90, 96, 113, 115, 118, 124, 128, 130, 131, 132, 133, 134, 137, 144, 148, 152, 153, 154, 156, 158, 159, 181, 186, 187, 195, 200, 201, 208, 209, 210, 211, 212, 214, 217, 221, 231, 234, 237, 238, 240, 241, 243, 248, 252, 253, 254, 259, 272, 287, 290, 293, 296, 297, 299, 300, 302, 305, 306, 310], "To": [0, 1, 2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 26, 27, 28, 30, 32, 33, 36, 39, 42, 43, 46, 50, 51, 52, 54, 55, 56, 57, 59, 60, 63, 64, 67, 68, 69, 70, 78, 79, 80, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 101, 111, 113, 115, 117, 118, 120, 124, 128, 130, 132, 134, 136, 137, 142, 144, 145, 147, 148, 149, 152, 153, 156, 158, 159, 168, 172, 185, 194, 196, 207, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 228, 229, 231, 234, 237, 238, 239, 240, 241, 242, 245, 246, 250, 252, 253, 256, 257, 259, 260, 265, 267, 269, 270, 272, 274, 275, 286, 287, 289, 290, 292, 293, 296, 297, 298, 299, 304], "WILL": 12, "Will": [69, 124, 216, 221, 252], "With": [3, 13, 16, 18, 24, 26, 27, 36, 42, 46, 59, 69, 71, 87, 88, 92, 113, 128, 158, 164, 188, 191, 207, 208, 209, 210, 211, 212, 219, 220, 221, 228, 233, 242, 259, 291, 292, 299, 303, 304, 306, 307], "_": [3, 4, 5, 13, 14, 16, 18, 25, 28, 30, 32, 35, 37, 39, 43, 46, 63, 64, 68, 76, 77, 79, 80, 81, 84, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 101, 102, 103, 104, 113, 115, 118, 119, 120, 121, 124, 126, 128, 130, 144, 170, 191, 196, 205, 206, 210, 212, 214, 216, 217, 220, 221, 222, 224, 228, 229, 230, 231, 233, 234, 237, 238, 239, 242, 243, 259, 268, 270, 296, 302], "_0": [88, 93, 113, 124, 217, 260, 299], "_1": [96, 124, 152, 159, 200, 206, 231, 260], "_1cm": 68, "_1f_1": 96, "_2": [32, 55, 124, 152, 159, 200, 206, 237], "_2cm": 68, "_2f_1": 297, "_3": [200, 206], "_3mm": 68, "_5": [71, 208], "__": [16, 96, 115, 221, 241, 246], "__1": 96, "___": [87, 92, 115, 116, 124, 209, 233, 241, 246, 259, 296], "____": [87, 92, 115, 163, 209, 222, 241, 259, 298], "_____": [87, 241, 303], "______": 246, "________": [222, 241, 259], "__________": [69, 209], "___________": [92, 137, 237], "____________": 137, "_____________": 137, "_______________": 137, "________________": [137, 237], "_________________": [12, 137], "__________________": 237, "_____________________": 137, "______________________": 137, "_______________________": 137, "________________________": 137, "______________________________": 241, "________________________________": 137, "_____________________________________": 137, "______________________________________________": 137, "_______________________________________________": 137, "____________________________________________________": 137, "_______________________________________________________": 207, "_____________________________________________________________________________________________________": 12, "_____________________o_______________________": 137, "_______________v": 137, "____________o________________________": 137, "_______i_______": 137, "__abs__": [124, 212], "__add__": [124, 212, 216], "__all__": 255, "__bool__": 88, "__builtins__": 16, "__cacheit": 88, "__call__": [69, 80, 88, 216], "__class__": [156, 260], "__cmp__": [168, 172, 191], "__contains__": 79, "__divmod__": 212, "__doc__": [4, 16], "__file__": 16, "__floordiv__": 212, "__future__": [16, 39], "__getitem__": [13, 88, 124, 210, 246], "__globals__": 260, "__index__": 262, "__init__": [3, 4, 18, 43, 88, 153, 154, 216, 265, 267, 292, 299], "__init_subclass__": [13, 41], "__iter__": [13, 80, 88, 233], "__len__": 124, "__main__": [16, 69, 293], "__mod__": [212, 216], "__mul__": [73, 79, 124, 212, 216], "__name__": [16, 221], "__neg__": 212, "__new__": [14, 41, 43, 69, 79, 88, 292], "__package__": 16, "__pos__": 212, "__pow__": [13, 124, 212, 218], "__repr__": [13, 221], "__rmul__": 124, "__setitem__": 207, "__sub__": 212, "__truediv__": [88, 212], "__weakref__": [79, 123, 124], "_a": [84, 96, 191, 217, 299], "_add": [208, 227], "_aesara": 221, "_af_par": 80, "_af_rmul": 84, "_all_": 210, "_all_root": 217, "_amv": 217, "_appli": 208, "_apply_operators_qubit": 175, "_arg": [88, 94], "_array_form": 80, "_as_integr": 115, "_ask": 41, "_assume_rul": 41, "_assumpt": [41, 88], "_assumptions_orig": 88, "_b": [84, 96, 191], "_backend": 13, "_base_ord": 86, "_basic": 252, "_basic_orbit": 79, "_best": 237, "_build": [4, 8, 45], "_c": 191, "_ccode": [43, 221], "_check_anteced": 113, "_check_antecedents_1": 113, "_check_antecedents_invers": 113, "_check_cycles_alt_sym": [79, 86], "_clash": [60, 88], "_clash1": [60, 88], "_clash2": [60, 88], "_cmp_perm_list": 85, "_coeffexpvalueerror": 113, "_collapse_extra": 115, "_complexes_index": 217, "_complexes_sort": 217, "_components_data_full_destroi": 13, "_compos": 208, "_compute_transform": 115, "_condsimp": 113, "_construct_": 69, "_contain": 208, "_contains_elem": 208, "_contains_id": 208, "_convert_poly_rat_alg": [107, 109], "_coset_repres": 79, "_count_root": 217, "_create_lookup_t": [109, 113], "_create_t": [107, 109], "_csrtodok": 127, "_cxxcode": [43, 221], "_d": [191, 299], "_default_set": 221, "_dfm": 210, "_dict": 234, "_diff_wrt": 88, "_distinct_primes_lemma": 79, "_distribute_gens_by_bas": 86, "_doktocsr": 127, "_dummi": 113, "_dummy_": 113, "_dummy_10": 88, "_dummy_fmt": 13, "_ecm_one_factor": 128, "_ensure_complexes_init": 217, "_ensure_reals_init": 217, "_enumerate_st": 186, "_eval_": 15, "_eval_adjoint": 189, "_eval_as_leading_term": 88, "_eval_cond": 113, "_eval_deriv": [15, 43, 88, 96], "_eval_eq": 88, "_eval_evalf": [43, 217], "_eval_expand_": 43, "_eval_expand_bas": 88, "_eval_expand_complex": 88, "_eval_expand_doubl": 88, "_eval_expand_func": 14, "_eval_expand_hint": 88, "_eval_expand_trig": 43, "_eval_i": 41, "_eval_integr": [94, 115], "_eval_is_": 41, "_eval_is_algebra": 41, "_eval_is_alt_sym_monte_carlo": 79, "_eval_is_alt_sym_na": 79, "_eval_is_eq": 88, "_eval_is_finit": 41, "_eval_is_g": 88, "_eval_is_imaginari": 217, "_eval_is_integ": [14, 41], "_eval_is_nonneg": 43, "_eval_is_posit": [14, 43], "_eval_is_r": [41, 43, 217], "_eval_is_zero": [41, 43], "_eval_nseri": 88, "_eval_rewrit": [43, 88], "_eval_rewrite_as_": 88, "_eval_rewrite_as_co": 88, "_expand": 5, "_expon": 113, "_fcode": 221, "_field": 69, "_find_reasonable_pivot": 124, "_find_splitting_point": 113, "_first": [88, 94], "_flint": [210, 211], "_flip_g": 113, "_fourier_transform": 115, "_fun": 218, "_function": 113, "_g": 89, "_gcd_term": 88, "_generate_coordin": 152, "_generate_spe": 152, "_get_coeff_exp": 113, "_get_complex": 217, "_get_complexes_sqf": 217, "_get_interv": 217, "_get_ordered_dummi": 191, "_get_real": 217, "_get_reals_sqf": 217, "_get_root": 217, "_get_roots_alg": 217, "_get_roots_qq": 217, "_greek": 16, "_guess_expans": 113, "_h": [79, 240], "_handle_integr": 237, "_handle_precomputed_bsg": 86, "_hull": 105, "_i": [12, 115, 191, 196, 218], "_ignor": 217, "_imag": 208, "_img": 208, "_imp_": [253, 260], "_in_terms_of_gener": 208, "_indexed_root": 217, "_inflate_fox_h": 113, "_inflate_g": 113, "_int0oo": 113, "_int0oo_1": 113, "_int_invers": 113, "_integr": [55, 237, 238], "_intersect": 208, "_invers": 89, "_is_analyt": 113, "_is_class": 240, "_is_exponenti": 240, "_is_logarithm": 240, "_is_zero_after_expand_mul": 124, "_iszero": [124, 293], "_iter": 259, "_j": [191, 196, 206, 223], "_javascript": 221, "_julia": 221, "_k": [93, 96, 115, 206, 216, 241], "_ker": 208, "_kernel": 208, "_l": 206, "_lambdacod": 221, "_lambdifygener": 260, "_latex": [43, 221], "_latin": 16, "_linear_2eq_order1_type6": 237, "_linear_2eq_order1_type7": 237, "_list": 128, "_m": [43, 96, 132], "_mapl": 221, "_mathml_cont": 221, "_mathml_present": 221, "_mcode": 221, "_meijerint_definite_2": 113, "_meijerint_definite_3": 113, "_meijerint_definite_4": 113, "_meijerint_indefinite_1": 113, "_minpoly_compos": 216, "_modgcd_multivariate_p": 214, "_module_quoti": 208, "_mpc_": 211, "_mpf_": [88, 211], "_mul": 227, "_mul_arg": 113, "_mul_as_two_part": 113, "_mul_scalar": 208, "_mult_tab": 216, "_my_principal_branch": 113, "_mytyp": 113, "_n": [43, 89, 93, 96, 115, 217, 231, 240], "_naive_list_centr": 85, "_name": 115, "_new": 217, "_nocheck": 103, "_node": 88, "_nonlinear_2eq_order1_type1": 237, "_nonlinear_2eq_order1_type2": 237, "_nonlinear_2eq_order1_type3": 237, "_nonlinear_2eq_order1_type4": 237, "_nonlinear_2eq_order1_type5": 237, "_nonlinear_3eq_order1_type1": 237, "_nonlinear_3eq_order1_type2": 237, "_nonlinear_3eq_order1_type3": 237, "_nonlinear_3eq_order1_type4": 237, "_nonlinear_3eq_order1_type5": 237, "_nth": 218, "_octav": 221, "_only_": 217, "_operators_to_st": 181, "_orbits_transversals_from_bsg": 86, "_order": 78, "_orient_fram": 152, "_p": [89, 191, 212, 214, 216, 228, 231, 239], "_p_0": 191, "_p_1": 191, "_p_elements_group": 79, "_partial_pivot": 210, "_pf_q": [96, 231, 237, 297], "_pg": 217, "_postprocess_root": 217, "_prec": 88, "_preprocess": 238, "_preprocess_root": 217, "_pretti": 221, "_print": [43, 221], "_print_": 221, "_print_atom": 221, "_print_bas": 221, "_print_deriv": 221, "_print_hyp": 221, "_print_meijerg": 221, "_print_numb": 221, "_print_rat": 221, "_process_seri": 207, "_product": 208, "_q": 191, "_quotient": 208, "_quotient_codomain": 208, "_quotient_domain": 208, "_r": [88, 191, 231, 240], "_randint": [13, 88, 214], "_random_gen": 79, "_random_pr_init": 79, "_random_prec": 79, "_random_prec_n": 79, "_randrang": [13, 88, 89], "_rang": 256, "_raw": 219, "_rcode": 221, "_real_root": 217, "_reals_index": 217, "_reals_sort": 217, "_recur": 110, "_refine_complex": 217, "_remove_gen": 86, "_repres": 186, "_represent_foobasi": 186, "_represent_szop": 186, "_represent_zg": 176, "_reset": [128, 217], "_restrict_codomain": 208, "_restrict_domain": 208, "_rewrit": 5, "_rewrite1": [107, 113], "_rewrite2": 113, "_rewrite_invers": 113, "_rewrite_saxena": 113, "_rewrite_saxena_1": 113, "_rewrite_singl": 113, "_root": 218, "_roots_trivi": 217, "_rust_cod": 221, "_sage_": 2, "_seri": [207, 218], "_set": 241, "_set_angular_veloc": 152, "_set_interv": 217, "_set_linear_veloc": 152, "_signsimp": 217, "_simplifi": 124, "_sizedinttyp": 69, "_slope": 98, "_smtlib": 221, "_solve_ab": 240, "_solve_as_poli": 240, "_solve_as_poly_complex": 240, "_solve_as_poly_r": 240, "_solve_as_r": 240, "_solve_class": 240, "_solve_expo": 240, "_solve_exponenti": 240, "_solve_lin_si": 219, "_solve_lin_sys_compon": 219, "_solve_logarithm": 240, "_solve_rad": 240, "_solve_real_trig": 240, "_solve_system": 240, "_solve_using_known_valu": 240, "_some_": 210, "_sort_variable_count": 88, "_sparse_": 222, "_split_mul": 113, "_state_to_oper": 181, "_str": 32, "_strip": [79, 86], "_strong_gens_from_distr": 86, "_succ": 79, "_sylow_alt_sym": 79, "_sympifi": [13, 14, 88, 120, 292], "_sympy_": [13, 14, 88], "_sympyrepr": 221, "_sympystr": 221, "_syzygi": 208, "_t": [18, 22, 30, 32, 96, 115, 191, 200, 204, 231, 241, 299], "_tan": 218, "_tan1": 218, "_tensormanag": 247, "_test": 252, "_token_splitt": 130, "_tr56": 230, "_transolv": 240, "_try_heurisch": 115, "_tsolv": 240, "_tupl": 128, "_type": 210, "_u": [115, 191], "_union": 208, "_union_find_merg": 79, "_union_find_rep": 79, "_v": [36, 191], "_verifi": 79, "_verify_bsg": [79, 85, 86], "_verify_centr": 85, "_verify_normal_closur": 85, "_w": [217, 228], "_w0_0": 124, "_w1_0": 124, "_w2_0": 124, "_x": [24, 32, 35, 36, 41, 43, 124, 205, 212, 214, 218, 233, 237, 253, 299], "_xi_1": 238, "_y": [24, 32, 35, 36, 43, 50, 205, 299], "_z": [24, 32, 35, 36, 43, 115, 241, 299], "a0": [84, 131, 237, 297], "a000001": 74, "a000010": 93, "a000073": 93, "a000085": 96, "a000111": [93, 217], "a000720": 93, "a001221": 93, "a001222": 93, "a002322": 93, "a002997": 128, "a003277": 74, "a008683": 93, "a051532": 74, "a056867": 74, "a066272": 128, "a066272a": 128, "a1": [22, 30, 80, 84, 88, 116, 124, 128, 137, 144, 165, 214, 237, 241, 242, 271, 297], "a10": 105, "a1pt": 30, "a1pt_theori": [30, 204], "a1sz_lattice_basis_reduction_algorithm": 210, "a2": [22, 30, 80, 84, 88, 117, 124, 128, 137, 144, 165, 210, 214, 241, 242, 271, 297], "a217120": 128, "a217255": 128, "a217719": 128, "a2idx": 124, "a2pt": 30, "a2pt_theori": [30, 35, 204], "a3": [30, 80, 84, 88, 117, 124, 271, 297], "a4": [30, 71, 84, 88, 117, 297], "a4_in_s6": 71, "a4xc2": 71, "a5": [84, 88], "a6": 88, "a6_wrong": 88, "a9chet_distribut": 241, "a9vy_distribut": 241, "a_": [32, 51, 84, 88, 89, 96, 113, 117, 120, 124, 144, 145, 223, 231, 234, 237, 239, 241, 242, 243, 299], "a_0": [124, 224, 234, 237, 242, 297], "a_0_0": 124, "a_0_0_0": 124, "a_0_0_1": 124, "a_0_1": 124, "a_0_1_0": 124, "a_0_1_1": 124, "a_0_2": 124, "a_0_2_0": 124, "a_0_2_1": 124, "a_1": [78, 79, 89, 96, 110, 113, 124, 145, 191, 196, 209, 214, 231, 234, 237, 241, 297], "a_1_0": 124, "a_1_0_0": 124, "a_1_0_1": 124, "a_1_1": 124, "a_1_1_0": 124, "a_1_1_1": 124, "a_1_2": 124, "a_1_2_0": 124, "a_1_2_1": 124, "a_1x_1": [51, 234], "a_2": [79, 89, 110, 124, 214, 231, 234, 237, 241, 297], "a_2x_2": [51, 234], "a_3": 124, "a_4": 71, "a_5": 71, "a_6": 71, "a_and_b": [153, 154, 302, 306], "a_b": 30, "a_bicep": 299, "a_eq": 239, "a_first": 18, "a_i": [36, 113, 196, 200, 209, 214, 231], "a_ij": 246, "a_interv": 229, "a_ixi": 149, "a_ixx": 149, "a_iyi": 149, "a_iyz": 149, "a_izx": 149, "a_izz": 149, "a_j": [78, 96, 113, 196, 214, 223, 231], "a_k": [79, 89, 218, 224], "a_kx_k": 218, "a_lin": 27, "a_m": [84, 237], "a_mass": 149, "a_muscl": [18, 134], "a_n": [84, 89, 96, 113, 117, 196, 209, 214, 216, 224, 234, 237, 297], "a_non_commut": 237, "a_nul": 210, "a_nx_n": [51, 234], "a_o_n": 30, "a_op": 27, "a_p": [96, 113, 231, 297], "a_prim": 88, "a_r": [78, 231], "a_real": 246, "a_rref": 210, "a_t": 237, "a_tricep": 299, "a_val": 299, "a_x": [36, 200, 221], "a_z": [36, 138, 200], "aa": [93, 206], "aaa": 259, "aaaabbbbcccc": 93, "aab": [93, 259], "aabbc": 93, "aabc": 93, "aaecc": 239, "aand": [96, 115], "aaron": 0, "aaronmeur": 12, "aau": 136, "ab": [14, 16, 18, 30, 66, 69, 70, 87, 88, 89, 92, 93, 94, 96, 100, 101, 111, 113, 118, 124, 130, 134, 140, 146, 148, 191, 209, 212, 215, 216, 217, 221, 234, 236, 239, 240, 241, 243, 247, 256, 259, 262, 271, 297], "aba": 259, "abb": [256, 259], "abbott": 215, "abbott13": [214, 215], "abbrev": [9, 197, 198, 221], "abbrevi": [198, 209, 221, 240, 242], "abc": [3, 4, 11, 12, 16, 37, 38, 43, 46, 48, 50, 52, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 69, 77, 79, 81, 87, 88, 89, 90, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 111, 112, 113, 115, 116, 118, 120, 123, 124, 127, 128, 129, 142, 144, 146, 162, 164, 166, 167, 172, 189, 191, 192, 208, 210, 212, 214, 216, 217, 218, 221, 222, 223, 224, 226, 227, 228, 229, 230, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 253, 254, 255, 256, 257, 259, 260, 262, 265, 268, 269, 270, 275, 277, 289, 292, 296], "abcbb": 259, "abcd": [77, 81, 191, 243, 259, 262], "abcdef": 289, "abel": [48, 57, 124, 217], "abelian": [74, 76, 79, 117, 196, 208], "abelian_invari": 79, "abeliangroup": [76, 79], "abi": 259, "abid": 7, "abij": 191, "abil": [13, 14, 16, 23, 41, 67, 124, 151, 216, 220, 237, 240, 291, 297], "abji": 191, "abl": [2, 3, 4, 11, 12, 14, 15, 18, 22, 25, 27, 28, 30, 31, 39, 41, 43, 51, 55, 68, 69, 79, 84, 88, 89, 90, 99, 107, 115, 120, 124, 128, 131, 141, 208, 210, 211, 212, 217, 218, 237, 240, 252, 269, 291, 296, 298], "abnorm": 214, "abort": 250, "about": [3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 21, 22, 27, 28, 32, 35, 36, 39, 41, 42, 43, 48, 53, 55, 57, 58, 59, 61, 62, 64, 65, 68, 69, 79, 80, 81, 82, 88, 92, 94, 96, 98, 99, 100, 102, 103, 104, 108, 110, 114, 115, 117, 124, 128, 130, 136, 137, 144, 148, 149, 150, 152, 153, 154, 155, 156, 158, 186, 188, 189, 191, 195, 200, 206, 208, 210, 211, 216, 218, 221, 223, 228, 233, 234, 235, 237, 241, 245, 246, 252, 253, 254, 255, 256, 257, 265, 267, 269, 272, 273, 280, 283, 286, 288, 289, 291, 292, 293, 297, 299, 302, 306], "abov": [2, 3, 4, 5, 8, 11, 12, 13, 14, 16, 18, 21, 22, 23, 24, 26, 27, 28, 31, 33, 35, 36, 37, 39, 42, 43, 45, 46, 48, 50, 54, 55, 57, 67, 68, 69, 70, 72, 78, 79, 80, 84, 87, 88, 92, 93, 96, 98, 101, 104, 105, 113, 115, 118, 124, 129, 130, 137, 144, 151, 152, 153, 155, 156, 158, 186, 188, 191, 200, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 222, 228, 231, 233, 234, 237, 239, 240, 241, 245, 246, 253, 254, 260, 269, 270, 271, 272, 275, 289, 291, 292, 293, 297, 299, 302, 304, 306, 307], "above_fermi": [96, 191], "abracadabra": 259, "abramov": [215, 239], "abramov71": [215, 217], "abramowitz": [4, 96], "abridg": 208, "abs_sqrd": 146, "absarglineseri": 207, "absenc": [71, 84, 118], "absent": [4, 72, 239], "absolt": 18, "absolut": [8, 12, 65, 66, 69, 87, 88, 94, 96, 103, 113, 115, 124, 130, 146, 189, 212, 216, 217, 231, 233, 236, 241, 252, 274, 275, 276], "absolute_converg": 87, "absorb": [13, 15, 113, 237, 241, 287], "absorbing_markov_chain": 241, "absorbing_prob": [13, 241], "absorpt": 237, "abstract": [0, 13, 18, 22, 67, 68, 77, 88, 90, 94, 96, 101, 106, 120, 131, 134, 148, 152, 156, 159, 175, 177, 186, 189, 190, 191, 208, 216, 240, 241, 243, 247, 254, 274], "abund": 128, "abundantnumb": 128, "abus": [88, 247], "ac": [28, 46, 61, 69, 80, 100, 140, 155, 168, 241, 259, 262], "academ": [0, 45, 68, 72, 215], "acb": 259, "acc": [30, 35, 68, 204], "acceler": [3, 27, 28, 30, 33, 129, 153, 155, 158, 194, 200, 204, 210, 256, 274, 299, 302, 309, 311], "acceleration_": 30, "acceleration_constraint": 153, "accept": [4, 11, 12, 14, 15, 22, 43, 50, 57, 68, 69, 79, 88, 94, 101, 102, 115, 118, 120, 124, 127, 130, 144, 185, 195, 200, 205, 207, 216, 217, 220, 221, 222, 229, 231, 233, 239, 253, 260, 265, 267, 270, 293], "accepted_latex_funct": 221, "access": [2, 4, 5, 9, 13, 15, 16, 18, 22, 31, 32, 33, 36, 41, 43, 62, 63, 64, 69, 88, 96, 117, 118, 120, 124, 129, 131, 134, 137, 144, 145, 152, 153, 156, 158, 200, 207, 210, 211, 212, 214, 216, 233, 237, 242, 245, 253, 254, 269, 272, 292, 296, 299], "accid": [11, 12, 14, 89, 260], "accident": [11, 12, 14, 15], "accompani": [11, 12, 68], "accomplish": [27, 30, 50, 115, 272], "accord": [5, 16, 23, 69, 76, 79, 80, 84, 87, 88, 89, 96, 118, 120, 124, 128, 130, 151, 152, 158, 159, 185, 191, 207, 212, 214, 216, 217, 218, 234, 239, 240, 247, 252, 254, 259, 274], "accordingli": [79, 209, 216], "account": [3, 15, 18, 94, 124, 224, 233, 237], "accumul": [79, 252, 256], "accur": [3, 13, 14, 16, 39, 43, 48, 67, 79, 88, 92, 93, 110, 115, 141, 207, 228, 286, 293], "accuraci": [14, 16, 39, 67, 88, 210, 217, 287, 293], "achiev": [13, 15, 22, 30, 32, 43, 88, 92, 96, 120, 128, 220, 228, 231, 233, 240, 243, 255, 270, 304], "acm": [70, 87, 113, 115, 210, 212, 215, 231, 233, 237, 239], "aco": [4, 16, 30, 61, 94, 101, 104, 164, 200, 221, 237, 265, 297, 302], "acosh": [94, 221], "acot": [94, 221], "acoth": [94, 221], "acquaint": 7, "across": [3, 5, 11, 79, 86, 88, 99, 115, 137, 190, 191, 198, 207, 221, 256, 258, 259, 260, 287, 295], "acsc": [94, 221], "acsch": [94, 221], "act": [12, 15, 18, 22, 26, 68, 71, 78, 79, 80, 84, 88, 96, 104, 117, 118, 124, 132, 133, 136, 138, 140, 148, 149, 152, 155, 156, 158, 163, 175, 180, 183, 184, 229, 240, 242, 243, 270, 274, 286, 299, 303, 307], "actf": 18, "actf2": 18, "action": [2, 5, 8, 11, 18, 79, 117, 134, 148, 155, 183, 186, 196, 217, 233, 240], "activ": [3, 8, 9, 17, 19, 132, 133, 134, 207, 250, 255, 257, 282, 300, 304], "activation_dynam": 134, "activation_time_const": 131, "activationbas": [18, 131, 134], "active_deprecations_target": [3, 250, 255, 257], "activepython": 59, "activest": 259, "actual": [2, 3, 4, 5, 8, 9, 11, 12, 14, 15, 16, 21, 22, 25, 26, 27, 39, 41, 42, 43, 46, 68, 69, 70, 77, 79, 86, 88, 89, 96, 100, 113, 115, 117, 120, 124, 128, 132, 134, 144, 148, 156, 159, 205, 207, 208, 210, 211, 216, 221, 229, 231, 233, 234, 237, 240, 248, 252, 253, 256, 257, 259, 260, 291, 302], "actuat": [19, 134, 151, 156, 158, 282, 300], "actuatorbas": [18, 148, 158], "actz": 18, "acycl": 259, "ad": [4, 5, 7, 8, 9, 11, 12, 13, 14, 21, 22, 30, 41, 50, 52, 61, 68, 69, 72, 78, 79, 88, 89, 99, 103, 110, 113, 117, 128, 130, 136, 140, 149, 152, 158, 165, 193, 196, 201, 206, 207, 216, 218, 220, 221, 223, 231, 234, 237, 239, 240, 241, 243, 246, 247, 252, 268, 289, 299, 304], "adam": [206, 217], "adamek": 68, "adapt": [13, 142, 207, 227, 239, 259, 264], "add": [2, 3, 4, 9, 12, 14, 15, 16, 22, 30, 35, 36, 38, 41, 55, 61, 63, 67, 69, 77, 79, 84, 89, 92, 95, 103, 105, 113, 117, 120, 124, 128, 136, 138, 140, 149, 158, 169, 175, 185, 190, 191, 194, 207, 210, 211, 212, 214, 216, 217, 218, 221, 222, 231, 233, 234, 237, 238, 240, 241, 243, 245, 246, 247, 255, 260, 263, 287, 289, 292, 296, 297, 299, 304], "add_actu": [158, 307], "add_as_root": 117, "add_auxiliary_spe": 158, "add_bodi": [158, 307], "add_coordin": 158, "add_formula": 231, "add_gen": 212, "add_ground": [212, 217], "add_handl": 13, "add_holonomic_constraint": [158, 304], "add_joint": [13, 24, 158, 304, 307], "add_kd": 158, "add_load": [158, 304, 307], "add_memb": 140, "add_nod": 140, "add_nonholonomic_constraint": 158, "add_simple_root": 117, "add_spe": 158, "add_typ": 240, "addaugmentedassign": 69, "addb": 231, "addend": 247, "addison": [72, 80, 128, 215], "addit": [0, 2, 3, 5, 9, 12, 13, 14, 15, 16, 18, 21, 27, 31, 32, 35, 36, 37, 39, 59, 61, 69, 78, 79, 80, 87, 88, 94, 96, 100, 106, 108, 112, 113, 115, 116, 118, 120, 124, 128, 130, 131, 132, 134, 141, 142, 144, 149, 153, 177, 189, 190, 193, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217, 221, 227, 230, 231, 233, 234, 237, 238, 239, 240, 241, 252, 253, 254, 256, 257, 259, 260, 262, 269, 289, 291, 292, 293, 296, 297, 299], "addition": [2, 4, 11, 13, 14, 18, 25, 36, 88, 189, 214, 221, 241, 250, 257, 269], "additional_transl": 13, "address": [9, 12, 88, 221, 240], "addrul": 115, "adequ": 221, "adher": [3, 5, 113], "adi": 243, "adic": 215, "adj": [124, 210], "adj_det": 210, "adj_poly_det": 210, "adja": 210, "adjac": [78, 79, 80, 88, 93, 144, 163, 210, 259], "adject": [15, 241], "adjoin": [79, 209], "adjoint": [117, 124, 168, 172, 221], "adjoint_styl": 221, "adjug": [124, 210], "adjust": [12, 18, 158, 224, 228], "admiss": [223, 226], "admit": [96, 237], "adopt": [79, 247], "advanc": [5, 17, 20, 23, 28, 34, 38, 40, 43, 63, 79, 88, 92, 93, 124, 125, 207, 210, 211, 213, 215, 216, 223, 230, 237, 252, 253, 254, 259, 286, 288, 290, 294, 295, 296, 297], "advantag": [9, 13, 37, 41, 43, 48, 64, 67, 69, 88, 89, 93, 115, 118, 124, 128, 141, 195, 210, 211, 218, 229, 234, 237, 240, 256, 289, 291, 293, 297], "advers": 88, "advertis": 5, "advis": [12, 13, 22, 41, 57, 68, 152], "ae": 218, "aegean": 89, "aeq": 239, "aesara": [2, 13, 30, 69], "aesara_cod": [13, 221], "aesara_funct": [69, 129, 221], "aesaracod": [2, 13, 69, 129, 221], "aesaraprint": [13, 221], "aeseara": 2, "aesthet": [5, 15, 207], "af": [30, 76, 79, 85], "affect": [11, 13, 14, 32, 41, 43, 87, 88, 124, 217, 239, 240, 270], "affin": [88, 89, 103, 208], "affine_ciph": 89, "affine_rank": 103, "affirm": 229, "aforement": [33, 234, 272, 302], "after": [3, 4, 5, 8, 9, 11, 12, 13, 14, 16, 24, 25, 27, 30, 32, 33, 36, 59, 61, 63, 64, 68, 70, 76, 79, 80, 84, 86, 87, 88, 89, 90, 94, 103, 105, 110, 115, 124, 128, 130, 136, 144, 158, 160, 164, 176, 188, 196, 210, 214, 216, 217, 218, 219, 221, 222, 227, 234, 237, 238, 239, 240, 242, 252, 255, 260, 262, 265, 268, 272, 286, 287, 289, 293, 297, 304], "afterward": [16, 69, 88, 155, 306], "afunc": 260, "ag": [140, 237], "again": [3, 8, 9, 12, 14, 16, 18, 22, 32, 35, 39, 42, 71, 80, 88, 103, 128, 148, 158, 186, 187, 200, 208, 209, 216, 224, 231, 237, 250, 269, 289, 297, 302], "against": [12, 13, 18, 22, 41, 43, 57, 89, 124, 136, 253, 299], "agca": [213, 283], "agnost": 254, "agre": [12, 88, 89, 96, 103, 113, 231], "agreement": 11, "ahead": [4, 128], "ai": [36, 96, 128, 217, 234, 243, 262, 270, 297, 306], "aid": 69, "aim": [4, 5, 12, 106, 113, 196, 208, 231, 237, 240, 290, 291, 301], "ainv": 210, "airi": [115, 237], "airspe": 2, "airy_funct": 96, "airyai": [96, 221, 237], "airyaiprim": [96, 221], "airybas": 96, "airybi": [96, 221, 237], "airybiprim": [96, 221], "airyfunct": 96, "aitken_html": 234, "ajwa": 215, "ajwa95": 215, "ak": [87, 223], "aka": [13, 120], "akrita": 217, "al": [22, 115, 131, 132, 134, 170, 214, 230, 233], "albeit": [115, 269], "aleaxit": 92, "alembertian": 239, "alexandria": 234, "alf_b_n": 30, "alg": [212, 216, 220], "alg_con": [31, 158], "alg_con_ful": 31, "alg_factor": 214, "alg_field_from_poli": [212, 216], "algebra": [0, 5, 15, 16, 18, 23, 30, 31, 34, 37, 41, 47, 49, 54, 57, 65, 70, 71, 79, 88, 89, 92, 93, 94, 106, 109, 110, 111, 113, 115, 118, 122, 125, 128, 129, 130, 151, 158, 206, 209, 210, 212, 213, 214, 215, 217, 218, 221, 223, 231, 234, 236, 237, 240, 276, 277, 280, 282, 283, 288, 289, 291, 293], "algebraic_express": 88, "algebraic_field": [211, 212, 214, 216], "algebraic_multipl": 293, "algebraic_numb": [41, 65, 88], "algebraiccomput": 88, "algebraicfield": [211, 212, 214, 216], "algebraichandl": 65, "algebraicnumb": [88, 212, 216, 220], "algebraicpred": 65, "algintpow": 216, "algo": [69, 80], "algo2008": 80, "algorithm": [2, 4, 14, 15, 27, 41, 48, 52, 54, 56, 57, 67, 72, 73, 78, 79, 80, 82, 84, 86, 87, 88, 89, 92, 93, 94, 100, 105, 113, 115, 118, 120, 124, 125, 128, 136, 145, 152, 178, 196, 200, 206, 207, 208, 209, 210, 211, 212, 215, 216, 218, 222, 226, 229, 230, 233, 234, 237, 239, 240, 241, 247, 256, 259, 282, 287, 292, 293, 297], "algorithmist": 79, "alia": [9, 69, 81, 88, 98, 104, 119, 121, 124, 126, 131, 134, 175, 184, 191, 208, 210, 211, 212, 216, 220, 229, 252, 262, 297], "alias": [9, 121, 212], "alic": [79, 89], "align": [13, 36, 69, 98, 124, 152, 159, 206, 221, 239, 252, 299], "alignof": 69, "alkiviadi": 217, "all": [0, 2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 22, 23, 25, 27, 30, 31, 33, 36, 37, 39, 41, 42, 43, 45, 53, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 113, 115, 117, 118, 119, 120, 123, 124, 127, 128, 129, 130, 131, 132, 134, 136, 137, 140, 142, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 165, 170, 171, 175, 185, 187, 188, 189, 191, 193, 194, 195, 196, 198, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 245, 247, 248, 250, 252, 253, 254, 255, 257, 259, 260, 262, 265, 267, 269, 271, 272, 273, 274, 276, 286, 287, 289, 291, 292, 293, 296, 297, 298, 299, 303, 304, 307], "all_coeff": [211, 212, 217], "all_integr": [55, 237, 238], "all_model": 118, "all_monom": [212, 217], "all_root": [117, 128, 217], "all_term": [212, 217], "allei": 96, "allhint": [237, 238], "alli": 216, "alloc": [69, 94], "allow": [2, 3, 5, 11, 12, 13, 14, 15, 16, 18, 22, 23, 27, 28, 30, 36, 41, 43, 45, 48, 65, 68, 69, 70, 72, 79, 81, 84, 87, 88, 89, 92, 94, 96, 98, 99, 100, 113, 116, 118, 120, 121, 124, 128, 129, 130, 134, 137, 151, 152, 153, 159, 163, 175, 191, 195, 196, 197, 207, 208, 211, 212, 214, 216, 217, 218, 221, 226, 228, 229, 230, 233, 234, 237, 239, 240, 241, 242, 246, 252, 255, 257, 259, 260, 270, 287, 289, 292, 302], "allow_half": 88, "allow_hyp": [96, 233], "allow_unknown_funct": 221, "almost": [12, 14, 53, 113, 121, 130, 193, 208, 212, 217, 218, 237, 241, 255, 256, 259, 291], "almost_linear": 237, "almost_linear_integr": 237, "almosteq": 212, "almostlinear": 237, "alon": [14, 41, 89, 116, 214, 237, 239, 246, 259, 291, 292], "along": [12, 18, 21, 25, 26, 27, 28, 30, 32, 33, 36, 39, 43, 48, 69, 79, 88, 89, 90, 94, 96, 97, 98, 102, 103, 106, 108, 111, 113, 120, 124, 136, 137, 138, 140, 147, 148, 152, 153, 155, 156, 158, 159, 160, 188, 200, 207, 210, 211, 216, 217, 237, 240, 268, 272, 274, 299, 302, 306, 309, 310, 311], "alongsid": [3, 11, 12, 13, 14, 43, 120, 148], "alp": 89, "alpertron": 234, "alpha": [5, 16, 18, 35, 36, 79, 88, 96, 115, 117, 130, 144, 148, 163, 167, 170, 188, 204, 206, 212, 214, 216, 217, 220, 221, 233, 237, 241], "alpha_": [18, 124, 134, 206], "alpha_0": 124, "alpha_1": [93, 124, 128, 216], "alpha_2": [93, 128, 216], "alpha_i": [88, 216], "alpha_k": [93, 128], "alpha_m": 216, "alpha_n": 216, "alpha_opt": [18, 134], "alpha_r": 231, "alphabet": [11, 88, 89, 144, 196, 209, 234, 254], "alphanumer": 237, "alreadi": [2, 3, 7, 9, 10, 11, 12, 13, 14, 16, 18, 22, 27, 33, 35, 36, 41, 43, 45, 51, 52, 55, 57, 59, 61, 79, 80, 88, 89, 97, 98, 101, 102, 104, 113, 115, 124, 125, 128, 140, 145, 149, 158, 160, 186, 188, 191, 207, 210, 211, 214, 216, 217, 220, 224, 230, 231, 233, 237, 240, 241, 247, 270, 272, 287, 289, 290, 291, 295, 296, 297, 298, 304], "also": [0, 2, 3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 39, 41, 42, 43, 45, 46, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 71, 77, 79, 80, 87, 89, 90, 92, 93, 94, 95, 96, 100, 104, 106, 108, 110, 111, 113, 115, 117, 118, 121, 124, 125, 128, 129, 130, 131, 132, 134, 136, 137, 140, 141, 142, 144, 148, 149, 150, 152, 153, 155, 156, 158, 159, 160, 164, 174, 175, 177, 181, 185, 190, 191, 194, 195, 196, 200, 202, 204, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 250, 252, 253, 254, 255, 256, 257, 260, 262, 265, 268, 269, 270, 271, 272, 274, 275, 286, 287, 289, 291, 292, 293, 296, 297, 298, 299, 302, 304, 306, 307, 310], "alt": [69, 216], "alter": [16, 70, 79, 88, 200, 221, 223, 240], "altern": [2, 3, 4, 8, 13, 14, 15, 16, 18, 22, 25, 27, 35, 42, 43, 59, 69, 76, 79, 80, 87, 88, 92, 93, 94, 95, 96, 120, 124, 125, 129, 130, 131, 134, 148, 200, 206, 207, 209, 210, 211, 214, 216, 217, 221, 226, 228, 230, 239, 240, 242, 243, 259, 289, 291, 293, 304], "alternating_permut": 93, "alternatinggroup": [76, 79, 85], "alternatingpermut": 93, "although": [0, 2, 3, 4, 5, 11, 12, 14, 15, 16, 21, 30, 38, 39, 41, 43, 51, 80, 88, 89, 94, 100, 112, 113, 116, 118, 120, 124, 128, 208, 210, 211, 212, 214, 216, 217, 229, 230, 233, 234, 239, 253, 259, 260, 289, 292, 297, 302], "altitud": 104, "alwai": [3, 4, 5, 11, 12, 13, 14, 15, 16, 22, 31, 33, 35, 41, 42, 43, 53, 59, 61, 68, 79, 80, 87, 88, 89, 90, 92, 94, 96, 98, 100, 103, 104, 112, 113, 115, 118, 124, 127, 128, 138, 140, 144, 145, 148, 156, 158, 159, 191, 193, 196, 197, 208, 209, 210, 211, 212, 214, 216, 217, 221, 222, 223, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 248, 252, 254, 259, 260, 265, 267, 272, 287, 289, 290, 291, 292, 297, 299, 301, 302, 306, 310], "am": [128, 196, 221], "ama": 144, "amalgam": 113, "amat": 302, "ambient": 103, "ambient_dimens": [97, 99, 101, 103], "ambigu": [5, 13, 14, 16, 37, 88, 130, 179, 185, 233, 245, 250], "ambrosio": 148, "amd64": 69, "amen": [23, 151], "amend": 79, "amer": 124, "american": [5, 74, 89], "ami": 128, "ami_42_from129to134": 128, "amic": 128, "amicable_numb": 128, "amirgi": 241, "amit": [0, 240], "among": [18, 41, 68, 69, 70, 72, 79, 80, 89, 116, 129, 217, 237, 242, 245, 247, 269], "amongst": [41, 239], "amount": [4, 12, 18, 23, 33, 36, 68, 88, 89, 100, 151, 152, 200, 214, 224, 252, 265, 267], "amper": [162, 195], "amplitud": [142, 165], "amsfont": 221, "amsmath": 221, "amus": 208, "an": [0, 2, 3, 4, 5, 7, 8, 9, 10, 12, 15, 16, 18, 21, 23, 25, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 53, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 142, 144, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 158, 159, 162, 163, 164, 168, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 184, 185, 186, 188, 189, 191, 192, 193, 195, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 233, 234, 236, 237, 238, 239, 241, 242, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 265, 267, 269, 270, 272, 273, 274, 275, 286, 287, 288, 289, 290, 291, 293, 296, 297, 298, 299, 302, 304, 306, 307], "anaconda3": 12, "analog": [13, 28, 35, 36, 43, 48, 53, 81, 87, 89, 93, 208, 209, 210, 214, 217, 226, 242, 259], "analogi": [87, 214], "analogu": [42, 65, 87, 102, 211, 212], "analyitc": 113, "analys": [30, 46, 68, 142, 144, 241], "analysi": [27, 28, 31, 39, 69, 70, 79, 88, 89, 94, 141, 208, 217, 231, 234, 241, 287, 300, 302], "analyt": [15, 18, 23, 59, 93, 96, 113, 124, 132, 151, 156, 237, 287], "analytic_func": 124, "analyz": [12, 233, 246], "anatomi": 133, "anc": 216, "ancestor": 216, "andi": [0, 29], "andr": [93, 217], "andre_poli": [93, 217], "andreescu": 234, "andrew": [93, 105, 128], "andrica": 234, "anew": 88, "anf": 118, "anf_coeff": 118, "anfform": 118, "ang_acc_in": [30, 200], "ang_vel_in": [22, 30, 35, 149, 152, 200, 303, 309, 310], "angelia": 67, "angl": [18, 22, 24, 27, 35, 36, 43, 61, 94, 96, 97, 98, 99, 101, 102, 103, 104, 134, 138, 140, 146, 152, 158, 159, 160, 163, 164, 165, 188, 196, 200, 206, 221, 230, 240, 265, 267, 270, 297, 299, 302, 303, 304, 306, 307], "angle1": [265, 267], "angle2": [265, 267], "angle3": [265, 267], "angle_addit": 61, "angle_between": [101, 102, 104, 200], "angle_of_incid": 164, "angular": [23, 24, 27, 30, 124, 136, 146, 149, 152, 155, 160, 164, 165, 167, 170, 188, 192, 200, 204, 206, 299, 303, 304, 306, 307, 309, 311], "angular_deflect": 136, "angular_momentum": [28, 30, 149, 155], "angular_veloc": 165, "angvel": 30, "ani": [2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 22, 23, 26, 27, 28, 31, 33, 35, 36, 37, 38, 41, 42, 43, 48, 50, 51, 52, 55, 59, 65, 66, 67, 68, 69, 70, 77, 78, 79, 80, 86, 87, 88, 89, 90, 92, 93, 94, 96, 98, 99, 100, 103, 104, 105, 113, 115, 116, 118, 121, 123, 124, 125, 128, 130, 131, 132, 134, 136, 137, 140, 144, 146, 148, 149, 151, 152, 153, 154, 155, 156, 158, 160, 164, 177, 180, 185, 186, 189, 191, 193, 196, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 221, 222, 227, 228, 229, 230, 231, 233, 234, 237, 238, 239, 241, 243, 246, 247, 252, 253, 255, 256, 257, 259, 260, 265, 269, 270, 271, 272, 274, 275, 286, 287, 289, 292, 293, 296, 297, 298], "annal": [18, 80, 131, 132, 134, 299], "annihil": [87, 106, 107, 111, 167, 191, 239], "annihilateboson": 191, "annihilatefermion": 191, "annoi": 12, "annot": [55, 128, 207, 221], "annoy": 88, "anoth": [3, 4, 5, 11, 12, 13, 14, 15, 18, 24, 28, 35, 36, 38, 39, 41, 42, 43, 48, 50, 52, 53, 54, 55, 56, 65, 68, 69, 80, 85, 87, 88, 89, 90, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 113, 115, 120, 124, 128, 134, 136, 137, 148, 149, 153, 155, 156, 159, 180, 195, 196, 198, 200, 204, 207, 209, 210, 211, 212, 214, 216, 217, 218, 221, 222, 228, 229, 231, 237, 239, 240, 241, 253, 254, 260, 265, 269, 270, 274, 286, 289, 291, 292, 297, 298], "anp": [88, 211, 212, 216, 217], "answer": [3, 7, 12, 14, 41, 43, 48, 79, 88, 92, 110, 113, 115, 118, 124, 128, 196, 214, 218, 230, 231, 233, 239, 241, 256, 262, 291, 293, 297], "anteced": [113, 228], "anthoni": 0, "anti": [11, 15, 61, 65, 84, 94, 115, 124, 163, 168, 247], "anti_symmetr": 124, "anticip": 196, "anticlockwis": [124, 140], "anticommut": [84, 178, 180, 190, 191, 247, 282], "antideriv": [15, 94, 96, 115, 237, 287], "antiderv": 237, "antidivisor": 128, "antidivisor_count": 128, "antihermitian": [41, 65, 88], "antihermitianhandl": 65, "antihermitianpred": 65, "antipattern": [14, 43, 290], "antisym": 84, "antisymmetr": [84, 90, 124, 191, 247], "antisymmetrictensor": 191, "antlr": [2, 22], "antlr4": [2, 130], "anum": 210, "anycod": 13, "anymor": [11, 12, 207], "anyon": [4, 5, 13, 58, 217, 221, 285, 295, 296], "anyth": [3, 4, 5, 12, 13, 14, 16, 22, 43, 67, 69, 88, 89, 99, 103, 124, 165, 175, 218, 221, 227, 229, 233, 237, 239, 253, 259, 262, 289], "anyv": 89, "anywai": [113, 233, 237], "anywher": [3, 4, 13, 41, 69, 88, 96, 102, 191, 262, 291], "ao": [30, 299], "aocp": 256, "aother": 96, "ap": [96, 100, 231], "apart": [14, 33, 43, 61, 79, 84, 88, 92, 94, 115, 130, 148, 156, 209, 210, 212, 214, 217, 220, 223, 234, 240, 247, 270, 272, 292], "apart_list": 217, "aperiod": 67, "apfloat": 91, "aphras": 89, "api": [4, 5, 11, 13, 14, 18, 28, 30, 41, 44, 51, 53, 69, 88, 100, 108, 129, 130, 143, 187, 207, 214, 234, 236, 260, 269, 270, 273, 280, 282, 283, 290, 291, 294], "apoapsi": 98, "apothem": 104, "app": 115, "app1": 241, "appar": [11, 12, 14, 15, 16, 88, 262, 297], "apparatu": 13, "appdata": 8, "appeal": 113, "appear": [4, 5, 11, 12, 14, 15, 16, 22, 37, 55, 68, 69, 72, 77, 79, 88, 89, 93, 94, 97, 98, 101, 104, 107, 111, 113, 115, 124, 128, 130, 156, 175, 191, 193, 196, 207, 209, 211, 214, 216, 217, 221, 230, 233, 237, 238, 239, 241, 245, 247, 252, 259, 260, 265, 270, 306], "appel": [93, 96], "appell_seri": 96, "appellf1": [96, 221], "appellseq": [93, 217], "append": [14, 30, 50, 55, 79, 88, 89, 124, 137, 186, 207, 212, 221, 239, 242, 254, 255, 259, 297, 303], "appetit": 291, "appli": [5, 9, 11, 12, 13, 14, 15, 18, 25, 27, 29, 36, 42, 43, 46, 53, 57, 61, 62, 63, 64, 65, 69, 79, 80, 81, 86, 87, 88, 89, 90, 91, 94, 95, 98, 103, 104, 106, 115, 118, 119, 124, 128, 130, 136, 137, 138, 140, 144, 145, 148, 149, 150, 153, 155, 156, 158, 168, 172, 175, 176, 180, 183, 184, 188, 191, 200, 207, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 222, 223, 227, 228, 229, 230, 233, 237, 238, 239, 240, 241, 242, 245, 252, 255, 259, 265, 267, 270, 293, 296, 297, 299, 302, 304, 307], "applic": [0, 5, 13, 18, 22, 23, 27, 29, 30, 35, 49, 52, 70, 71, 72, 78, 79, 80, 81, 88, 89, 93, 94, 115, 124, 128, 136, 138, 140, 148, 151, 152, 153, 158, 175, 176, 200, 204, 209, 210, 214, 215, 216, 217, 221, 223, 228, 234, 237, 240, 254, 259, 265, 272, 273, 280, 291], "applied_load": 136, "appliedfunct": 130, "appliedpermut": 80, "appliedpred": [38, 62, 63, 64], "appliedundef": 88, "apply_finite_diff": [67, 88, 287], "apply_forc": [13, 149], "apply_grov": 176, "apply_length": 138, "apply_load": [136, 137, 138, 140], "apply_moment_load": 136, "apply_oper": [180, 191], "apply_rotation_hing": 136, "apply_sliding_hing": 136, "apply_support": [136, 140], "apply_torqu": 149, "apply_uniform_grav": [13, 158, 304, 307], "applyfunc": [46, 119, 124, 200, 210, 242, 310], "approach": [8, 14, 23, 39, 48, 51, 52, 53, 55, 56, 57, 68, 87, 88, 115, 144, 151, 210, 211, 214, 215, 216, 218, 229, 238, 239, 241, 253, 256, 259, 287, 293, 306], "appropri": [2, 4, 5, 11, 12, 13, 14, 16, 21, 35, 39, 52, 56, 79, 88, 94, 103, 124, 180, 181, 191, 200, 207, 210, 211, 217, 218, 221, 227, 228, 233, 234, 239, 241, 246, 254, 270, 296, 302], "approx": [39, 49, 54, 88, 115], "approxim": [4, 14, 16, 17, 40, 57, 67, 79, 87, 88, 89, 92, 96, 98, 104, 113, 115, 124, 128, 137, 141, 160, 194, 211, 212, 217, 224, 228, 231, 241, 287, 291], "approximations_for_the_nth_prime_numb": 128, "apr": 100, "april": 87, "apt": [8, 9], "aq": 210, "ar": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 165, 166, 168, 170, 172, 175, 177, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 250, 252, 253, 254, 256, 257, 258, 259, 260, 262, 265, 267, 268, 269, 270, 271, 272, 274, 276, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 309, 310, 311], "ar_": 218, "ar_i": 218, "ara": 89, "arab": 208, "arang": [43, 253, 286], "arb": 98, "arbitrari": [2, 4, 13, 14, 15, 16, 18, 24, 28, 36, 41, 43, 48, 52, 54, 56, 57, 67, 73, 80, 81, 87, 88, 89, 92, 93, 96, 99, 100, 102, 118, 124, 137, 154, 177, 180, 207, 208, 211, 212, 214, 216, 218, 233, 237, 238, 239, 247, 257, 260, 265, 267, 286, 287, 292, 297, 298], "arbitrarili": [37, 48, 67, 88, 101, 128, 214, 216, 228, 231, 237, 238, 239, 241], "arbitrary_matrix": 124, "arbitrary_point": [97, 98, 99, 100, 101, 102, 104], "arc": [61, 94, 159, 297, 299], "arc_coplanar": 61, "arc_length": 299, "arcco": [16, 94, 159, 221], "arccosh": 221, "arccot": [94, 221], "arccoth": 221, "arccsc": [94, 221], "arccsch": [94, 221], "arch": 282, "architectur": [0, 12, 30, 211, 252], "archiv": [29, 72, 80, 89, 93, 96, 105, 115, 128, 210, 233, 234, 241, 259, 293], "arcsec": [94, 221], "arcsech": [94, 221], "arcsin": [16, 94, 130, 218, 221, 241], "arcsine_distribut": 241, "arcsinh": 221, "arctan": [94, 218, 221], "arctan2": [94, 221], "arctang": 218, "arctanh": [130, 221], "arctanrul": 115, "arcversin": 43, "arduou": [23, 151], "are_collinear": 103, "are_concurr": [101, 102], "are_coplanar": 103, "are_similar": [4, 99, 100, 105], "area": [88, 98, 100, 104, 105, 136, 137, 158], "aren": [3, 11, 12, 13, 14, 15, 22, 43, 69, 88, 220, 240], "arg": [5, 11, 15, 36, 41, 43, 50, 52, 55, 61, 63, 64, 65, 66, 67, 68, 69, 72, 79, 80, 82, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 101, 103, 104, 105, 110, 113, 115, 118, 119, 120, 121, 124, 126, 128, 130, 138, 140, 144, 160, 166, 169, 171, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 200, 205, 207, 210, 212, 214, 216, 217, 218, 221, 223, 224, 227, 228, 229, 230, 233, 237, 239, 240, 241, 242, 243, 246, 247, 252, 253, 254, 255, 259, 260, 262, 265, 267], "arg1": [12, 241], "arg2": [12, 241], "argand": 240, "argindex": [4, 11, 43, 69, 88, 94, 95, 96, 132], "args_cnc": 88, "argu": 128, "argular": 188, "argument": [2, 3, 4, 11, 12, 14, 15, 18, 22, 25, 26, 28, 30, 33, 38, 41, 42, 43, 48, 50, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 104, 105, 113, 115, 116, 118, 120, 124, 127, 128, 130, 132, 134, 136, 142, 144, 148, 152, 153, 156, 158, 159, 165, 168, 172, 174, 177, 180, 185, 186, 188, 189, 190, 191, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 220, 221, 222, 223, 227, 228, 229, 230, 231, 233, 234, 237, 238, 239, 241, 243, 245, 246, 252, 253, 254, 255, 256, 257, 259, 260, 262, 269, 270, 272, 286, 287, 292, 293, 297], "argument_sequ": [69, 254], "argument_test": [69, 221], "argument_tupl": 253, "argumentindexerror": [11, 43], "argv": [116, 252], "aris": [36, 41, 42, 88, 93, 113, 115, 188, 210, 211, 216], "arithmet": [2, 12, 14, 69, 88, 89, 92, 124, 128, 180, 187, 206, 207, 208, 210, 211, 212, 214, 215, 219, 222], "arithmetica": 234, "ariti": [5, 207], "arjona": 206, "arm": [299, 300], "armi": 89, "armstrong": 76, "around": [2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 16, 18, 23, 27, 31, 36, 42, 43, 59, 67, 77, 80, 88, 89, 90, 92, 94, 97, 104, 108, 124, 127, 128, 140, 149, 151, 152, 156, 159, 211, 214, 216, 221, 223, 228, 234, 237, 240, 241, 252, 265, 267, 287, 289, 291, 299], "arr": 69, "arr1": 128, "arr2": 128, "arrai": [14, 18, 30, 43, 49, 53, 54, 55, 69, 79, 80, 84, 85, 89, 96, 115, 120, 124, 128, 129, 130, 142, 154, 188, 207, 210, 212, 217, 221, 240, 241, 244, 246, 247, 248, 253, 254, 256, 260, 280, 293, 299], "arrang": [28, 30, 46, 80, 144, 153, 217, 230, 234, 247], "array_der": [242, 243], "array_express": 242, "array_form": [78, 80, 81, 243], "array_lik": [153, 154, 299], "arrayadd": 243, "arrayconstructor": 69, "arraycontract": [242, 243], "arraydiagon": [242, 243], "arrayexpr": 69, "arraysymbol": 243, "arraytensorproduct": [120, 242, 243], "arref": 210, "arriv": [90, 214, 231, 233, 237, 241, 297], "arrow": [68, 117, 136, 207, 221], "arrow_formatt": 68, "arrow_styl": 68, "arrowfrombar": 221, "arrowstringdescript": 68, "art": [72, 80, 208, 221, 223, 256], "articl": [0, 7, 88, 89, 120, 124, 213, 215, 216, 221, 230, 265, 283, 291], "articul": 216, "artifact": 124, "artifici": [215, 224], "artist": 89, "arxiv": [91, 93, 96, 124, 146, 217, 259, 303], "as_add": [43, 88], "as_algebraicfield": 212, "as_base_exp": [88, 259], "as_coef_add": 88, "as_coef_mul": 88, "as_coeff_add": 88, "as_coeff_expon": 88, "as_coeff_mul": [13, 14, 88, 113, 120], "as_coeffici": [14, 88], "as_coefficients_dict": 88, "as_content_primit": [88, 124, 209, 217], "as_declar": 69, "as_dict": [77, 211, 217], "as_dummi": [88, 115], "as_explicit": [13, 53, 120, 124, 147, 242, 243], "as_expr": [13, 88, 124, 210, 211, 216, 217, 218, 293], "as_expr_set_pair": 94, "as_ferr": 77, "as_finite_differ": [13, 67, 88, 287], "as_immut": 119, "as_independ": [14, 43, 88, 240], "as_int": [185, 262], "as_leading_term": [12, 88, 228], "as_list": [110, 217], "as_mut": [88, 119, 120], "as_numer_denom": [88, 239], "as_ordered_factor": 88, "as_ordered_term": 88, "as_poli": [13, 88, 209, 214, 217], "as_powers_dict": 88, "as_real_imag": [88, 94, 124, 222], "as_rel": 229, "as_set": [50, 118], "as_submodul": 216, "as_sum": 115, "as_term": 88, "as_two_term": [43, 88], "as_unevaluated_bas": 233, "asa": 104, "asarrai": [14, 129], "ascend": [80, 115, 234, 259], "ascent": 80, "ascertain": 159, "ascii": 221, "asec": [94, 221], "asech": [94, 221], "aseri": 88, "ashutosh": 0, "asid": [12, 16, 118, 237, 238, 291], "asin": [16, 94, 96, 102, 218, 221, 231, 233, 237, 241, 297, 299], "asinh": [94, 221], "ask": [2, 4, 7, 9, 11, 15, 16, 22, 38, 41, 42, 63, 64, 65, 66, 88, 100, 113, 196, 208, 227, 233, 240, 259, 277, 289], "askalgebraicpredicatehandl": 65, "askhandl": 62, "askpredicatehandl": [63, 64], "askprimehandl": 13, "asnumpi": 129, "aspect": [5, 7, 11, 12, 14, 41, 124, 133, 211, 299], "aspect_ratio": 207, "aspx": 237, "assembl": [89, 113, 228, 299], "assemble_partfrac_list": 217, "assembli": [140, 302], "assert": [3, 11, 12, 27, 68, 77, 78, 79, 80, 88, 98, 100, 130, 210, 221, 229, 237, 238, 239, 250, 257, 259], "assertionerror": [12, 250], "assess": 39, "assign": [5, 9, 22, 30, 33, 36, 41, 55, 68, 69, 70, 84, 88, 93, 104, 115, 117, 118, 124, 130, 153, 196, 207, 209, 214, 221, 239, 240, 247, 254, 269, 272, 289, 309], "assign_to": [69, 221], "assignmentbas": 69, "assignmenterror": 221, "assist": 237, "assoc_laguerr": [69, 96, 221], "assoc_legendr": [96, 221], "assoc_recurrence_memo": 261, "associ": [5, 9, 11, 15, 18, 28, 30, 32, 35, 36, 41, 51, 68, 70, 86, 88, 89, 95, 96, 110, 111, 113, 117, 131, 134, 148, 155, 158, 159, 181, 189, 200, 207, 209, 210, 211, 212, 214, 216, 221, 229, 231, 234, 247, 261, 299, 307], "associated_legendre_polynomi": 96, "associatedlaguerrepolynomi": 96, "assocop": 88, "assoic": 210, "asssumpt": 221, "assum": [2, 4, 14, 15, 16, 18, 22, 25, 26, 27, 28, 30, 33, 38, 41, 43, 52, 55, 56, 61, 64, 69, 70, 72, 77, 79, 87, 88, 89, 90, 93, 94, 96, 98, 105, 106, 113, 115, 124, 128, 136, 140, 144, 148, 156, 158, 159, 164, 186, 190, 191, 200, 204, 208, 209, 211, 214, 217, 219, 221, 228, 229, 231, 233, 234, 237, 238, 239, 240, 241, 245, 246, 247, 254, 259, 262, 268, 270, 274, 277, 290, 292, 295, 297, 298, 299, 303, 308], "assump": [63, 64], "assumpt": [4, 12, 15, 16, 18, 21, 30, 40, 42, 44, 51, 52, 53, 62, 63, 65, 66, 68, 69, 79, 80, 82, 87, 90, 92, 94, 95, 115, 118, 124, 125, 136, 144, 148, 195, 198, 202, 210, 220, 221, 229, 230, 233, 234, 237, 239, 240, 246, 254, 259, 276, 277, 297, 299], "assumptionkei": 62, "assumptions0": [41, 88], "assumptionscontext": [62, 63, 64], "assur": [3, 128, 217], "ast": [88, 221], "asterisk": 5, "astr": 68, "astrophys": 194, "asv": 2, "asym2": 247, "asymmetr": [89, 104], "asymmetri": 241, "asymp": 228, "asymptot": [88, 113, 144, 287], "asymptotic_expans": 88, "at_pin_joint": 148, "atan": [31, 61, 66, 90, 92, 94, 99, 104, 112, 115, 160, 218, 221, 223, 306], "atan2": [61, 66, 90, 94, 165, 221, 265], "atan_2": 61, "atanh": [12, 94, 218, 221, 231], "atbash": 89, "atiyah": 215, "atiyah69": [208, 215], "atkinson": 79, "atleast": 237, "atol": 69, "atom": [15, 50, 69, 80, 88, 115, 118, 124, 146, 192, 211, 218, 221, 239, 240, 246], "atom_nam": 221, "atomic_mass_const": 198, "atomicexpr": [13, 88], "atoms_t": 221, "atop": [93, 96, 223, 231], "attach": [18, 24, 36, 41, 80, 82, 113, 129, 134, 136, 148, 152, 153, 156, 253, 255, 260, 299], "attachment_1": 156, "attachment_2": 156, "attack": 89, "attain": [239, 270], "attempt": [12, 21, 37, 39, 42, 43, 48, 51, 55, 57, 69, 79, 84, 86, 88, 92, 93, 100, 113, 115, 124, 128, 150, 186, 210, 211, 212, 216, 221, 223, 230, 233, 234, 237, 239, 240, 241, 252, 289, 297], "attent": [67, 79, 94], "attenu": 163, "attr": [3, 69], "attr_param": 69, "attribut": [4, 15, 18, 28, 31, 32, 33, 36, 38, 41, 43, 63, 64, 68, 69, 79, 80, 88, 96, 97, 98, 101, 102, 103, 104, 120, 124, 130, 131, 133, 134, 137, 144, 149, 152, 153, 154, 155, 156, 158, 180, 185, 189, 196, 200, 207, 208, 211, 212, 216, 221, 229, 233, 234, 246, 247, 253, 255, 259, 260, 269, 292, 303, 309], "attributeerror": [13, 14, 41, 88, 124, 240], "au": 93, "aug": [34, 203, 240], "aug_assign": 69, "augment": [4, 19, 25, 26, 30, 69, 124, 153, 158, 219, 239, 240, 257, 260, 298], "augmentedassign": 69, "august": [237, 256], "augustu": 89, "austin": 295, "authent": 9, "author": [0, 4, 7, 128, 177, 216], "auto": [11, 13, 16, 51, 67, 88, 89, 116, 207, 210, 214, 217, 221, 233, 237, 241], "auto_assert": 221, "auto_declar": 221, "auto_int_to_integ": [2, 116], "auto_kei": 89, "auto_numb": 130, "auto_symbol": [2, 116, 130], "autoclass": 4, "autocomplet": 16, "autocorrel": 89, "autodetect": [237, 238], "autodoc": 5, "autoexpand": [16, 233], "autofunc": 69, "autofunct": [4, 11], "autogener": 171, "autolev": [2, 23], "autom": [69, 94, 129, 230, 253, 291], "automat": [2, 3, 4, 5, 8, 11, 12, 13, 15, 16, 18, 22, 35, 37, 41, 51, 52, 55, 57, 68, 69, 70, 80, 88, 90, 91, 92, 93, 94, 96, 101, 103, 107, 113, 116, 118, 128, 130, 132, 134, 136, 153, 158, 177, 179, 180, 189, 191, 195, 204, 207, 208, 210, 211, 212, 216, 217, 218, 221, 224, 227, 228, 230, 231, 233, 234, 237, 239, 240, 246, 247, 252, 253, 254, 257, 260, 270, 275, 287, 289, 291, 292, 296, 297, 298, 302, 310], "automatiqu": 218, "automorphisms_of_the_symmetric_and_alternating_group": 71, "autonom": 237, "autos": [80, 127], "autoscal": 207, "autosimplif": [88, 230, 233], "autowrap": [129, 246, 254, 258, 284], "auxiliari": [22, 25, 69, 115, 153, 158, 237, 253, 304], "auxiliary_circl": 98, "auxiliary_eq": [153, 304, 310], "avail": [2, 5, 7, 8, 9, 13, 15, 16, 18, 22, 27, 30, 41, 48, 54, 57, 58, 59, 68, 69, 79, 80, 87, 88, 93, 96, 115, 124, 128, 129, 130, 207, 211, 212, 214, 217, 221, 222, 227, 229, 231, 233, 234, 239, 240, 241, 242, 246, 247, 252, 259, 260, 264, 265, 289, 296], "averag": [105, 115, 128, 214, 241], "aversin": 43, "avoid": [5, 11, 12, 13, 15, 27, 35, 36, 42, 43, 48, 51, 61, 69, 70, 88, 89, 94, 113, 115, 118, 124, 127, 130, 185, 209, 210, 211, 214, 217, 221, 222, 229, 233, 237, 239, 241, 245, 254, 257, 260, 289, 290, 306], "avoid_square_root": 61, "aw": 299, "awai": [4, 14, 18, 68, 70, 89, 136, 137, 140, 148, 156, 216, 221, 302], "awang": 215, "awar": [2, 3, 4, 12, 14, 15, 16, 42, 67, 88, 92, 118, 124, 231, 241, 260], "awhil": 158, "ax": [13, 14, 18, 35, 36, 48, 49, 51, 53, 61, 89, 92, 98, 101, 113, 119, 124, 136, 142, 152, 153, 159, 163, 188, 200, 206, 207, 210, 218, 234, 237, 240, 242, 243, 246, 265, 267, 269, 270, 272, 274, 297, 299, 306], "ax2p": 234, "axb": 190, "axc": 190, "axhlin": 13, "axi": [13, 22, 24, 27, 30, 31, 32, 33, 35, 36, 55, 61, 81, 93, 94, 98, 99, 101, 102, 104, 110, 113, 115, 120, 124, 136, 140, 142, 147, 148, 152, 156, 158, 159, 160, 163, 164, 188, 200, 202, 204, 207, 212, 240, 265, 267, 270, 272, 275, 299, 302, 303, 306, 309, 310, 311], "axial": [136, 160], "axial_forc": 136, "axial_stress": 136, "axiom": [79, 208], "axiom_of_power_set": 229, "axis_cent": 207, "axis_orient": [265, 270], "axis_orienter1": 267, "axis_orienter2": 267, "axis_orienter3": 267, "axis_point": 299, "axisorient": [265, 267, 270], "az": [89, 144, 234], "azbz": [36, 270], "azimuth": 146, "a\u2080": 297, "a\u2080\u2080": 53, "a\u2080\u2081": 53, "a\u2080\u2082": 53, "a\u2080\u2083": 53, "a\u2081": [137, 297], "a\u2081\u2080": 53, "a\u2081\u2081": 53, "a\u2081\u2082": 53, "a\u2081\u2083": 53, "a\u2082": [137, 297], "a\u2082\u2080": 53, "a\u2082\u2081": 53, "a\u2082\u2082": 53, "a\u2082\u2083": 53, "a\u2083": 297, "a\u2083\u2080": 53, "a\u2083\u2081": 53, "a\u2083\u2082": 53, "a\u2083\u2083": 53, "a\u2084": 297, "b": [0, 11, 12, 14, 15, 16, 18, 22, 27, 28, 30, 32, 35, 36, 37, 41, 42, 43, 46, 48, 49, 51, 53, 61, 68, 69, 70, 72, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 98, 99, 100, 101, 102, 103, 104, 111, 113, 115, 117, 118, 119, 120, 124, 128, 130, 131, 132, 134, 136, 137, 138, 140, 142, 144, 149, 150, 152, 153, 154, 155, 156, 158, 160, 163, 168, 170, 172, 174, 179, 180, 183, 188, 189, 190, 191, 200, 202, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 252, 255, 256, 259, 262, 265, 267, 268, 269, 270, 271, 287, 289, 293, 297, 298, 299, 303, 306, 307], "b0": [84, 96, 212, 231, 237], "b1": [22, 30, 79, 84, 96, 128, 136, 137, 144, 149, 200, 212, 221, 231, 234, 237, 271], "b11": 30, "b12": 30, "b1_frame": 149, "b1prime": 231, "b2": [22, 30, 53, 96, 128, 136, 137, 144, 149, 200, 210, 212, 221, 231, 234, 237, 271], "b21": 30, "b22": 30, "b2_frame": 149, "b3": [22, 30, 117, 200, 271], "b4": 117, "b6bius_funct": [93, 128], "b6bius_inversion_formula": 91, "b_": [79, 84, 86, 88, 93, 96, 113, 120, 144, 223, 231, 234, 242, 243], "b_0": [84, 89, 93, 231, 234, 237], "b_1": [79, 86, 96, 110, 113, 208, 231, 234, 237, 297], "b_2": [79, 86, 96, 110, 231, 237], "b_cm": [22, 155], "b_eq": 239, "b_f": [22, 155], "b_frame": [149, 152], "b_i": [79, 84, 86, 113, 208, 231], "b_ij": 246, "b_interv": 229, "b_ixx": 149, "b_j": [84, 86, 96, 113, 231], "b_k": [79, 86, 89, 93, 96, 223, 224], "b_m": [96, 113, 239], "b_mass": 149, "b_masscent": 149, "b_muscl": 134, "b_n": [89, 93, 117, 208, 224], "b_op": 27, "b_q": [96, 113, 231, 297], "b_r": 79, "b_x": [36, 200, 202, 247, 303], "b_y": [36, 200, 202, 247], "b_z": [36, 200, 247], "ba": [93, 259], "baa": 259, "bab": 76, "babbag": 89, "babi": [93, 128, 259], "back": [0, 35, 43, 51, 52, 54, 68, 69, 84, 87, 88, 89, 94, 96, 103, 104, 110, 112, 113, 115, 116, 124, 128, 129, 144, 148, 185, 205, 207, 210, 211, 216, 217, 219, 221, 231, 237, 239, 242, 243, 299], "backcolor": [116, 205], "backend": [13, 24, 69, 116, 129, 142, 158, 205, 218, 253, 260, 304, 307], "background": [23, 35, 96, 116, 205, 295], "backport": 3, "backslash": [4, 88, 221], "backtick": [4, 5, 8], "backtrac": 221, "backtrack": 86, "backward": [2, 39, 67, 88, 124, 144, 158, 221, 259, 297], "backward_diff": 144, "bad": [8, 11, 12, 13, 14, 87, 128, 193, 210, 221], "badli": 79, "baij": 191, "bailli": 128, "baji": 191, "balanc": [29, 89, 208, 241, 252, 299, 302], "ball": 152, "ban275": 124, "banana": 259, "band": [124, 127], "bar": [13, 69, 96, 180, 186, 262, 301, 305], "bar_10": 186, "bar_4": 186, "bar_5": 186, "bare": [16, 89, 153], "barei": 124, "bareiss": [124, 210], "bareiss_algorithm": 210, "barn": 96, "barri": [215, 259], "base": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 18, 22, 30, 31, 33, 36, 41, 43, 48, 59, 61, 63, 64, 67, 69, 70, 77, 78, 79, 84, 85, 86, 88, 89, 91, 93, 94, 95, 96, 99, 101, 104, 111, 115, 116, 117, 118, 119, 120, 128, 129, 130, 131, 132, 134, 141, 148, 149, 152, 155, 156, 158, 159, 160, 169, 171, 175, 176, 180, 186, 187, 189, 191, 193, 196, 197, 199, 200, 202, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 221, 223, 228, 229, 230, 231, 233, 234, 237, 239, 241, 245, 246, 247, 252, 253, 254, 255, 256, 257, 259, 260, 261, 265, 268, 269, 272, 292, 297], "base1": 84, "base10": 233, "base2": 84, "base2a": 84, "base_a": 84, "base_char": 136, "base_dim": 193, "base_f": 84, "base_i": 84, "base_id": [208, 212], "base_oneform": 90, "base_ord": 86, "base_req": 69, "base_scalar": 90, "base_seq": 261, "base_set": 229, "base_solution_linear": 234, "base_unit": 199, "base_vector": [90, 265], "basebackend": 207, "basecovarderivativeop": 90, "basedyad": [265, 269], "baselin": 221, "basenam": [252, 253, 254], "basepolynomialerror": 214, "basescalar": [270, 272], "basescalarfield": 90, "baseseri": 207, "baseswap": 79, "basevector": [265, 269, 270], "basevectorfield": 90, "basi": [3, 32, 33, 35, 88, 90, 117, 120, 124, 149, 155, 176, 185, 186, 188, 191, 193, 196, 199, 200, 206, 208, 210, 212, 217, 220, 231, 233, 234, 239, 240, 242, 247, 268, 269, 272, 295, 309, 311], "basic": [2, 3, 4, 5, 7, 10, 11, 13, 15, 17, 22, 25, 26, 28, 30, 31, 33, 36, 41, 43, 57, 61, 63, 68, 69, 70, 76, 79, 83, 86, 87, 91, 94, 104, 106, 111, 112, 113, 118, 121, 123, 125, 132, 144, 148, 152, 158, 165, 175, 189, 196, 199, 203, 207, 208, 210, 212, 213, 214, 216, 218, 219, 221, 222, 228, 233, 234, 237, 238, 239, 240, 241, 252, 254, 259, 260, 263, 271, 272, 273, 280, 282, 283, 287, 288, 289, 290, 295, 304], "basic_orbit": [79, 86], "basic_root": 117, "basic_stabil": 79, "basic_transvers": [79, 86], "basis_el": 216, "basis_element_pullback": 216, "basis_st": 176, "batcheld": 13, "bateman": [96, 115], "batista": 89, "batman": 89, "battl": 291, "baz": 69, "bb": [93, 206, 233, 259], "bb1": 233, "bb2": 233, "bbp_pi": 128, "bbra": 191, "bby": 259, "bc": [61, 100, 140, 259, 262, 271], "bc_deflect": [136, 137], "bc_new": 140, "bc_slope": [136, 137], "bcd": 259, "bch": 89, "bd": [61, 140, 191], "bd_new": 140, "be1": 233, "be2": 233, "bead": 259, "beam": [104, 140, 160, 163, 282], "beam3d": 136, "beamparamet": 160, "beams3d": 136, "bear": [5, 41], "beat": 89, "becam": [23, 89, 151], "becaus": [2, 3, 4, 5, 8, 11, 12, 13, 14, 15, 16, 18, 22, 35, 37, 41, 42, 43, 48, 51, 52, 53, 54, 55, 56, 57, 59, 60, 65, 69, 80, 87, 88, 89, 94, 100, 104, 105, 113, 115, 118, 121, 124, 128, 130, 131, 132, 134, 135, 148, 152, 158, 159, 171, 179, 191, 193, 195, 196, 207, 208, 210, 211, 212, 214, 216, 217, 218, 220, 221, 224, 228, 231, 233, 234, 237, 238, 239, 240, 250, 252, 253, 255, 259, 260, 262, 269, 287, 289, 291, 292, 293, 296, 297, 298, 304, 306], "beckerweispfenning93": 214, "becom": [0, 3, 4, 5, 11, 12, 13, 15, 16, 35, 39, 41, 79, 84, 87, 88, 89, 92, 111, 116, 124, 130, 148, 158, 205, 208, 209, 211, 212, 218, 221, 224, 230, 237, 240, 241, 247, 260, 262, 268, 270, 287, 297], "bee": 262, "been": [3, 11, 14, 16, 18, 22, 23, 27, 28, 33, 34, 35, 36, 41, 43, 48, 67, 69, 70, 74, 79, 80, 81, 84, 87, 88, 89, 94, 100, 113, 115, 124, 128, 129, 130, 131, 133, 134, 136, 148, 149, 151, 152, 153, 158, 164, 176, 186, 188, 196, 203, 208, 211, 212, 216, 218, 219, 221, 223, 228, 231, 233, 238, 239, 240, 242, 243, 251, 252, 254, 255, 257, 259, 262, 269, 272, 289, 290, 292, 293, 297], "befor": [3, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 27, 30, 32, 36, 41, 42, 43, 55, 57, 59, 69, 79, 80, 82, 84, 88, 89, 90, 96, 116, 124, 128, 130, 136, 137, 154, 158, 160, 191, 205, 209, 210, 211, 216, 217, 221, 222, 228, 229, 233, 234, 237, 239, 240, 241, 248, 252, 255, 259, 260, 269, 290, 291, 292, 297, 299, 304, 306, 309, 310], "beforehand": [153, 158, 254], "begin": [4, 7, 11, 12, 13, 16, 25, 26, 27, 28, 32, 36, 41, 43, 46, 49, 53, 55, 61, 88, 89, 93, 94, 96, 113, 120, 124, 128, 130, 134, 136, 187, 196, 200, 206, 210, 221, 231, 234, 237, 238, 240, 241, 252, 262, 289, 291, 293, 297, 299, 306], "beginn": [234, 236, 237, 239, 240, 298], "behav": [13, 16, 18, 65, 67, 88, 89, 94, 96, 128, 217, 229, 233, 239, 242, 248, 293], "behavior": [2, 3, 12, 13, 14, 15, 16, 21, 23, 27, 43, 79, 88, 93, 96, 115, 130, 147, 151, 186, 208, 209, 216, 217, 221, 222, 226, 228, 230, 233, 250, 253, 255, 259, 260, 289, 299, 301], "behavior1": 3, "behavior2": 3, "behaviour": [13, 41, 113, 118, 149, 211, 214, 218, 224, 227], "behind": [17, 22, 27, 58, 145, 195, 210, 230, 233, 237, 240, 282, 289], "bei": 233, "being": [3, 5, 12, 14, 15, 16, 18, 21, 22, 27, 28, 30, 31, 32, 33, 35, 36, 37, 41, 42, 65, 67, 69, 79, 80, 86, 87, 88, 89, 93, 94, 96, 98, 100, 101, 104, 105, 113, 118, 124, 125, 128, 136, 137, 140, 148, 156, 158, 187, 196, 202, 206, 207, 208, 210, 211, 212, 214, 216, 217, 218, 220, 221, 230, 231, 233, 234, 237, 238, 239, 240, 241, 247, 250, 252, 256, 257, 259, 260, 262, 265, 270, 274, 291, 293, 302], "beings": 4, "belaso": 89, "believ": [125, 128, 210], "belittl": 5, "bell": [18, 93, 175, 223, 259], "bell_numb": 93, "bell_seq": 223, "bellnumb": 93, "bellpolynomi": 93, "belong": [5, 12, 35, 41, 65, 68, 79, 84, 88, 111, 124, 155, 191, 200, 207, 208, 210, 211, 212, 214, 216, 217, 228, 229, 233, 234, 240, 247], "below": [2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 16, 18, 22, 24, 25, 26, 27, 28, 30, 36, 41, 43, 46, 48, 52, 55, 56, 57, 59, 67, 68, 69, 78, 79, 80, 88, 89, 93, 95, 96, 97, 98, 104, 105, 111, 113, 115, 124, 127, 128, 130, 134, 136, 137, 138, 144, 148, 149, 152, 153, 154, 155, 156, 158, 185, 191, 196, 200, 206, 207, 208, 210, 217, 221, 222, 224, 230, 233, 234, 236, 237, 238, 239, 240, 241, 252, 254, 259, 260, 262, 270, 272, 275, 276, 293, 297, 306, 307, 308], "below_fermi": [96, 191], "ben": 124, "benchmark": [13, 29, 302], "bend": [98, 104, 135, 136, 139, 282], "bender": 237, "bending_mo": [136, 137], "benefici": 12, "benefit": [0, 2, 14, 21, 27, 43, 50, 69, 205, 210], "bengt": [39, 67], "benini": 241, "benini_distribut": 241, "beninidistribut": 241, "beq": 239, "berkelei": 124, "berkowitz": [124, 210], "berkowitz_det": 124, "berkowitz_eigenv": 124, "berkowitz_minor": 124, "berlekamp": 214, "berlin": 214, "bernd": 124, "bernoulli": [93, 96, 217, 221, 237, 239, 241], "bernoulli_c_poli": 217, "bernoulli_differential_equ": 237, "bernoulli_distribut": 241, "bernoulli_integr": 237, "bernoulli_numb": 93, "bernoulli_poli": [93, 217], "bernoulli_polynomi": [93, 217], "bernoulli_process": 241, "bernoullidistribut": 241, "bernoullinumb": 93, "bernoullipolynomi": 93, "bernoulliprocess": 241, "bertrand": 128, "besid": [7, 71, 88, 214, 239], "bess": [4, 96, 221, 233, 237, 241], "bessel": [4, 5, 94, 106, 115, 217, 233, 237, 241, 291], "bessel_funct": [4, 96], "besselbas": [4, 96], "besselj": [4, 96, 110, 221, 233, 237, 291], "besseljzero": 96, "besselk": [4, 96, 221, 241], "besselsimp": 233, "best": [3, 7, 11, 12, 13, 16, 17, 48, 52, 54, 55, 58, 59, 69, 88, 96, 113, 115, 129, 190, 207, 218, 221, 230, 231, 233, 237, 240, 245, 253, 285, 289, 290, 296, 297], "best_hint": 237, "beta": [4, 16, 18, 69, 79, 88, 115, 134, 148, 188, 200, 206, 216, 218, 221, 237, 241], "beta_": 79, "beta_1_2": 12, "beta_distribut": 241, "beta_funct": 96, "beta_prime_distribut": 241, "beta_r": 231, "betabinomi": 241, "betabinomialdistribut": 241, "betadistribut": 241, "betafunct": 96, "betanoncentr": 241, "betaprim": 241, "betaprimedistribut": 241, "better": [2, 3, 4, 8, 11, 12, 13, 14, 15, 16, 22, 41, 42, 43, 61, 68, 69, 80, 88, 92, 96, 115, 118, 144, 171, 199, 207, 210, 211, 212, 214, 224, 228, 229, 230, 231, 237, 238, 239, 240, 241, 253, 259, 260, 291, 297], "betweem": 18, "between": [2, 3, 9, 12, 13, 14, 15, 18, 22, 24, 27, 28, 30, 31, 32, 33, 35, 36, 38, 42, 43, 48, 52, 68, 69, 78, 79, 80, 82, 86, 88, 90, 93, 96, 98, 100, 101, 102, 103, 104, 105, 115, 117, 118, 120, 121, 124, 128, 129, 130, 131, 132, 134, 140, 141, 142, 144, 148, 152, 155, 156, 158, 159, 160, 163, 164, 170, 177, 179, 180, 181, 185, 188, 189, 190, 191, 194, 195, 196, 200, 201, 202, 204, 207, 208, 210, 212, 214, 216, 217, 221, 223, 233, 237, 238, 239, 240, 241, 242, 255, 260, 265, 268, 269, 272, 274, 289, 299, 304, 309, 311], "betweensubtleshadingandtheabsenc": 89, "bewar": [14, 67, 96], "beyer": 259, "beyond": [2, 11, 12, 14, 27, 41, 50, 82, 104, 128, 208, 211, 230, 233, 293], "bf": [30, 140], "bf02985731": 74, "bf0e81e12a2f75711c30f0788daf4e58f72b2a41": 11, "bfb0055738": 89, "bg": 237, "bh": 237, "bi": [36, 61, 88, 94, 96, 115, 228, 237], "bianchi": 247, "bias": 37, "bibtex": 0, "biceps_activ": 299, "biceps_pathwai": 299, "bicycl": [23, 29, 151, 301, 305], "bidiagn": 124, "bidiagon": 124, "bidiagonal_decomposit": 124, "bifid": 89, "bifid5": 89, "bifid5_squar": 89, "bifid6_squar": 89, "bifid_ciph": 89, "big": [13, 14, 16, 30, 39, 41, 72, 88, 90, 128, 171, 206, 220, 221, 228, 243, 262, 287, 289], "big_trig_ident": 16, "bigg": 46, "bigger": [43, 69, 88, 93, 124, 231, 237, 297], "biggest": 14, "bigl": 224, "bigr": 224, "biholomorph": 113, "biject": [80, 82, 89, 124, 208], "bilater": 115, "bilinear": 144, "bin": [1, 2, 4, 8, 9, 11, 12, 116, 221, 252, 259], "bin_prefix": 197, "bin_to_grai": 72, "binari": [11, 12, 16, 42, 43, 51, 65, 69, 72, 83, 88, 89, 115, 118, 128, 129, 185, 197, 208, 211, 217, 234, 253, 256, 259], "binary_cal": 253, "binary_func": [69, 253], "binary_funct": [69, 129, 253], "binary_partit": 259, "binaryquadrat": 234, "bincoeff": [93, 128, 221], "bind": [2, 69, 221, 253], "bind_c": 69, "binet": 92, "binom": [93, 128, 130, 241, 297], "binomi": [87, 88, 92, 93, 96, 128, 130, 217, 221, 226, 233, 237, 241, 259, 297], "binomial_coeffici": [93, 128], "binomial_coefficients_list": 128, "binomial_distribut": 241, "binomial_mod": 128, "binomialdistribut": 241, "binop": 69, "bio": 89, "biolog": [18, 131], "biomechan": [17, 20, 131, 132, 134, 282, 301], "biomed": [18, 131, 132, 134, 299], "biproduct": 208, "bird": 124, "bisect": [54, 128, 217, 239], "bisector": [101, 104], "bit": [8, 12, 18, 39, 43, 68, 69, 72, 88, 89, 91, 118, 124, 128, 185, 196, 208, 210, 211, 217, 231, 234, 240, 252, 259, 269, 270, 296], "bitcount": 88, "bitlist": [72, 83], "bitlist_from_subset": 83, "bitmap": 221, "bitmask": 91, "bitstr": 72, "bitwis": [42, 91, 118], "bitwiseand": 221, "bitwiseor": 221, "bitwisexor": 221, "biu": 241, "bivari": [214, 220, 237, 241], "bixk": 115, "bizarr": 240, "bket": 191, "bl": [25, 30, 153], "blaback": 11, "black": [116, 136, 176, 187, 205, 221, 296], "blacklist": 252, "blais": 89, "blajer": 29, "blajer1994": [27, 29], "blank": [4, 11, 12, 130, 207], "blanklin": 12, "blazingli": 218, "bleicher": 128, "blindli": 231, "blob": 115, "block": [3, 4, 14, 18, 22, 36, 46, 57, 69, 77, 79, 89, 124, 148, 152, 158, 200, 210, 234, 260, 269, 303, 307], "block_": 79, "block_bodi": 303, "block_collaps": 120, "block_fram": 307, "block_point": 303, "blockdiagmatrix": [120, 124], "blockmatrix": [120, 124], "blockwis": 124, "blog": [12, 13, 43, 69, 93, 124, 234, 240], "blogg": 11, "blogpost": 113, "blow": 128, "blowup": [124, 210], "blue": [24, 142, 207, 221], "blurb": [79, 241], "bl\u00e5b\u00e4ck": 11, "bm": [96, 299], "bmatrix": [25, 26, 27, 32, 36, 46, 55, 61, 120, 124, 130, 200, 234, 299, 306], "bmd": 104, "bmod": [89, 217, 221], "bmtwmg": 89, "bn": 224, "bo": 221, "bob": [89, 152, 158, 303], "bob_fram": 158, "bob_mass": 158, "bob_masscent": 158, "bode": 46, "bode_magnitude_numerical_data": 142, "bode_magnitude_plot": [46, 142], "bode_phase_numerical_data": 142, "bode_phase_plot": [46, 142], "bode_plot": 142, "bodi": [11, 16, 18, 21, 22, 23, 24, 25, 30, 31, 35, 36, 69, 113, 130, 147, 148, 149, 151, 152, 153, 158, 194, 200, 204, 265, 267, 282, 299, 303, 304, 305, 306, 307, 309], "body1": 155, "body2": 155, "body3": 155, "body_b": 22, "body_b_f": 22, "body_inertia": 149, "body_orient": [265, 267, 270], "body_orienter1": 267, "body_orienter2": 267, "body_orienter3": 267, "bodybas": 158, "bodyd": [309, 310, 311], "bodyfork": 302, "bodyfram": 302, "bodylist": [309, 310], "bodyorient": [265, 267, 270], "bodywf": 302, "bodywr": 302, "boer": 196, "boil": 12, "bokeh": 13, "bold": 221, "bold_nam": 221, "boldsymbol": 35, "boltzmann": 195, "bonazzi": 0, "bone": 18, "bonn": 70, "book": [7, 9, 22, 24, 28, 29, 68, 79, 89, 94, 153, 176, 215, 220, 221, 290, 304], "books_articl": 241, "bool": [14, 41, 61, 67, 69, 71, 74, 84, 86, 88, 89, 91, 94, 115, 116, 118, 120, 124, 128, 130, 132, 134, 142, 153, 154, 158, 174, 175, 202, 205, 207, 210, 216, 217, 219, 221, 222, 223, 228, 229, 233, 236, 241, 253, 254, 259, 260, 265, 268, 289], "bool1": 118, "bool2": 118, "bool_": 69, "bool_map": 118, "bool_maxterm": 118, "bool_minterm": 118, "bool_monomi": 118, "boolalg": [88, 118], "boolean": [13, 14, 15, 17, 43, 44, 50, 55, 62, 63, 64, 65, 66, 67, 69, 88, 94, 98, 102, 103, 104, 105, 116, 124, 125, 128, 136, 142, 144, 153, 158, 176, 200, 202, 205, 207, 210, 212, 214, 216, 218, 221, 233, 237, 239, 241, 259, 268, 293], "booleanfals": 118, "booleanfunct": 221, "booleankind": [15, 88], "booleantru": 118, "boost": 69, "boost_mp50": 69, "border": [98, 104], "borrow": 256, "bose": 215, "bose03": 215, "boson": 191, "bosonbra": 191, "bosonicbasi": 191, "bostan": 218, "bot": [3, 11], "botanist": 241, "both": [0, 2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 16, 18, 24, 27, 35, 36, 38, 41, 42, 43, 48, 50, 51, 52, 55, 60, 61, 67, 68, 69, 80, 83, 84, 86, 87, 88, 89, 93, 94, 96, 103, 112, 113, 115, 118, 124, 128, 130, 133, 134, 136, 137, 144, 148, 149, 152, 153, 155, 156, 158, 163, 164, 175, 181, 188, 191, 195, 196, 200, 204, 207, 208, 209, 211, 212, 214, 216, 217, 219, 220, 221, 223, 228, 229, 230, 231, 233, 234, 237, 239, 240, 242, 246, 252, 254, 259, 260, 265, 267, 287, 290, 291, 292, 297, 298, 299, 306, 307], "both_posit": 42, "both_positive_best": 42, "both_positive_bett": 42, "bother": [14, 96, 292], "bottom": [11, 78, 79, 88, 89, 104, 124, 127, 158, 216, 221, 230, 275], "bottom_fac": 275, "bottom_up": [13, 88], "bound": [15, 18, 50, 65, 69, 70, 87, 88, 97, 98, 99, 101, 103, 104, 115, 128, 155, 189, 207, 210, 212, 214, 215, 216, 217, 221, 227, 237, 239, 240, 241, 246, 256, 262, 265], "bound_symbol": [88, 115], "boundari": [71, 99, 101, 134, 136, 137, 204, 218, 229, 237, 241], "boundary_condit": 136, "bounded_pareto_distribut": 241, "boundedpareto": 241, "box": [171, 176, 178, 187, 189, 275, 282], "bp": [36, 237], "bpp": 36, "bpr": 89, "bpsw": 128, "bq": [96, 209, 210, 231], "br": 55, "bra": [130, 174, 179, 180, 181, 183, 185, 186, 189, 191], "brabas": [179, 180, 186, 189], "brace": [4, 22, 93, 221], "bracelet": [5, 259], "bracket": [16, 43, 54, 56, 80, 88, 96, 189, 191, 200, 221], "bradford": 214, "brain": [18, 256], "branch": [12, 42, 67, 88, 93, 94, 95, 96, 218, 231, 240, 292, 297], "branchpoint": 113, "brandei": 241, "brass": 89, "braun": 237, "breach": [113, 231], "breadth": [69, 88, 241], "break": [3, 4, 11, 12, 13, 14, 35, 43, 68, 69, 80, 88, 89, 128, 218, 221, 229, 259], "break_": 69, "breakag": 3, "breaker": 88, "breaktoken": 69, "bremen": 68, "bremner": 210, "brent": [128, 256], "brew": 8, "brewster": 164, "brewster_angl": 164, "brgc": 72, "brian": [0, 177], "bridg": [22, 121, 135, 138, 140, 260], "brief": [11, 69, 240, 252, 274], "briefli": [41, 209, 214], "brien": [74, 79, 86], "bring": [5, 113, 153, 210, 224, 233, 293, 310], "brito": 206, "broad": [88, 292], "broadcast": [69, 129, 221, 246, 253], "broader": 211, "brocard": 128, "broke": 12, "broken": [12, 13, 35, 77, 88, 221, 237, 262], "bronstein": [115, 215, 217, 223, 239], "bronstein93": [215, 217], "brought": [27, 241], "brown": [214, 215, 241], "brown71": [214, 215], "brown78": [214, 215], "brownian": 241, "browntraub71": [214, 215], "brows": [7, 9], "browser": 8, "bruce": 215, "bruce97": 215, "brute": [39, 230, 234], "bryan": [152, 200, 265, 267], "brychkov": [113, 231], "brzeskia": 303, "brzeskia2012": 303, "bsd": [0, 2, 45, 291], "bsg": [79, 84, 86, 247], "bsgs_direct_product": 84, "bspline": 96, "bspline_basi": 96, "bspline_basis_set": 96, "bu_2": 234, "bubbl": 175, "buchberg": [209, 214, 215, 217], "buchberger01": [215, 217], "bug": [3, 4, 7, 11, 12, 14, 41, 43, 59, 67, 89, 214, 229, 237, 240, 289], "build": [4, 5, 6, 10, 11, 12, 14, 30, 36, 38, 63, 64, 69, 88, 90, 96, 118, 185, 196, 200, 208, 213, 216, 217, 218, 228, 241, 269, 286, 289, 292], "build_expression_tre": 228, "build_opt": 214, "built": [0, 2, 4, 5, 8, 14, 15, 16, 22, 30, 38, 62, 64, 70, 88, 94, 115, 124, 209, 212, 221, 222, 226, 237, 240, 241, 247, 256, 259, 260, 291, 292, 296], "builtin": [14, 88, 212, 221, 229, 262, 296], "bulk": [214, 231], "bullet": [5, 11, 12], "bulletin": 115, "bunch": 217, "bundl": 216, "burden": [3, 221], "burtonl": 80, "butler": [84, 247], "button": [9, 12, 207, 253], "bv_2": 234, "bvar": 296, "bw": 299, "bx": [35, 36, 48, 49, 113, 241, 247, 270], "bxc": 190, "bxy": [51, 234], "by_nam": [212, 216, 217], "bypass": [43, 217, 237], "bytesio": 221, "bz": [35, 113, 234, 247], "c": [0, 2, 7, 8, 9, 12, 14, 15, 16, 18, 21, 22, 24, 26, 27, 30, 32, 35, 36, 39, 41, 43, 46, 48, 49, 51, 53, 60, 61, 67, 68, 72, 73, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 91, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 111, 113, 115, 117, 118, 120, 124, 128, 129, 130, 136, 137, 138, 140, 144, 146, 148, 149, 150, 152, 153, 155, 160, 164, 170, 171, 172, 175, 177, 180, 185, 188, 190, 191, 196, 200, 204, 206, 207, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 228, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 242, 246, 247, 253, 254, 256, 259, 262, 265, 267, 268, 269, 270, 271, 272, 275, 287, 289, 296, 297, 298, 299, 307, 309, 310, 311], "c0": [18, 120, 124, 132, 228, 237, 239], "c1": [4, 12, 18, 39, 55, 89, 98, 105, 120, 124, 132, 144, 152, 177, 191, 229, 234, 237, 239, 271, 298, 303], "c10": [18, 132], "c11": [18, 132], "c2": [18, 55, 71, 89, 98, 105, 120, 124, 132, 144, 152, 177, 191, 229, 237, 241, 268, 271, 298], "c3": [18, 39, 55, 71, 91, 93, 117, 120, 124, 128, 132, 210, 237, 241, 271, 298], "c4": [18, 71, 117, 120, 124, 132, 237], "c5": [18, 39, 132, 237], "c6": [18, 132, 212], "c7": [18, 39, 79, 132], "c77": 128, "c8": [18, 132], "c89": [69, 221, 254], "c89codeprint": 221, "c9": [18, 132], "c99": [69, 221, 254], "c99codeprint": [43, 69, 221], "c_": [18, 36, 39, 49, 55, 89, 111, 113, 132, 209, 237], "c_0": [18, 39, 89, 111, 132], "c_0_fl_m_act_muscl": 134, "c_0_fl_m_pas_muscl": 134, "c_0_fl_t_muscl": 134, "c_0_fv_m_muscl": 134, "c_1": [18, 39, 55, 89, 111, 113, 132, 228, 231, 237, 303], "c_10_fl_m_act_muscl": 134, "c_11_fl_m_act_muscl": 134, "c_1_fl_m_act_muscl": 134, "c_1_fl_m_pas_muscl": 134, "c_1_fl_t_muscl": 134, "c_1_fv_m_muscl": 134, "c_2": [18, 39, 55, 71, 113, 132, 228, 237, 303], "c_2_fl_m_act_muscl": 134, "c_2_fl_t_muscl": 134, "c_2_fv_m_muscl": 134, "c_3": [18, 71, 113, 132, 237], "c_3_fl_m_act_muscl": 134, "c_3_fl_t_muscl": 134, "c_3_fv_m_muscl": 134, "c_4": [18, 71, 113, 132], "c_4_fl_m_act_muscl": 134, "c_5": [18, 113, 132], "c_5_fl_m_act_muscl": 134, "c_6": [18, 113, 132], "c_6_fl_m_act_muscl": 134, "c_7": [18, 113, 132], "c_7_fl_m_act_muscl": 134, "c_8": [18, 113, 132], "c_8_fl_m_act_muscl": 134, "c_9": [18, 113, 132], "c_9_fl_m_act_muscl": 134, "c_code": [69, 254], "c_explicit": 246, "c_frame": 152, "c_g": 79, "c_header": [69, 254], "c_i": [39, 113, 228, 231, 237], "c_inherit": 246, "c_j": [110, 113, 231], "c_k": 89, "c_kn": 128, "c_m": 299, "c_masscent": 152, "c_mat": 46, "c_n": [93, 96, 117, 217, 237], "c_name": [69, 254], "c_o": 299, "c_r": [70, 231], "c_t": 89, "c_u": 113, "c_w": 231, "c_x": 36, "c_xr": 90, "c_xy": 90, "c_y": 36, "c_z": 36, "ca": [5, 18, 59, 89, 93, 96, 115, 128, 131, 220, 221, 259], "cab": 242, "cabl": 282, "cach": [12, 41, 93, 113, 208, 217, 221, 250, 255, 256, 261], "cache_length": 261, "cacheit": 88, "cacr": 89, "cacr2006": 89, "cadabra": 247, "caesar": 89, "caesar_ciph": 89, "caesarsmethod": 89, "caeser": 89, "cafe": 115, "calc_transform": 124, "calcul": [2, 14, 16, 18, 21, 32, 33, 35, 39, 41, 54, 55, 61, 67, 70, 80, 86, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 101, 102, 104, 105, 115, 120, 124, 128, 136, 137, 146, 148, 149, 153, 158, 159, 160, 163, 164, 167, 170, 186, 187, 188, 189, 191, 192, 200, 201, 202, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 218, 223, 228, 237, 241, 245, 253, 254, 260, 265, 268, 272, 274, 287, 293, 296, 299, 303, 306], "calculate_seri": 228, "calculu": [30, 33, 34, 50, 52, 88, 93, 115, 128, 230, 241, 271, 272, 273, 276, 277, 288, 290, 295], "call": [2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 21, 22, 24, 27, 28, 33, 35, 36, 38, 39, 41, 42, 43, 48, 49, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 86, 88, 89, 91, 92, 93, 95, 96, 98, 103, 104, 106, 111, 113, 115, 117, 118, 119, 120, 121, 124, 126, 127, 128, 130, 132, 133, 134, 136, 137, 144, 148, 152, 156, 181, 183, 186, 191, 195, 196, 200, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 223, 228, 229, 231, 233, 234, 236, 237, 239, 240, 241, 242, 243, 245, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 265, 268, 269, 272, 274, 287, 289, 291, 292, 293, 296, 297, 298, 306], "callabl": [2, 14, 16, 18, 55, 69, 79, 124, 130, 153, 154, 176, 216, 221, 222, 233, 250, 253, 254, 259, 260, 261], "callback": 263, "caller": [43, 210], "calori": 196, "caltech": 115, "caltechauthor": 115, "calulc": 265, "cambridg": [215, 234], "came": [23, 151, 292], "camera": 207, "can": [0, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 49, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 163, 164, 165, 170, 172, 175, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 250, 252, 253, 254, 256, 257, 259, 260, 261, 262, 268, 269, 270, 271, 272, 274, 275, 286, 287, 289, 291, 292, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 306, 307, 310], "can_split": 130, "can_transf_matrix": 193, "canada": 215, "canberra": 103, "canberra_dist": 103, "cancel": [12, 14, 39, 43, 46, 69, 88, 92, 96, 104, 113, 115, 124, 128, 144, 145, 148, 210, 211, 212, 214, 217, 220, 233, 239, 291], "cancel_denom": 210, "cancel_denom_elementwis": 210, "candid": [11, 52, 79, 88, 124, 128, 214, 217, 233], "canfield": 256, "cannon": 70, "cannot": [2, 3, 4, 5, 12, 13, 14, 15, 16, 18, 32, 35, 36, 38, 42, 43, 48, 51, 54, 59, 62, 63, 64, 65, 66, 67, 69, 80, 85, 87, 88, 90, 92, 94, 98, 100, 101, 103, 105, 110, 115, 117, 119, 121, 124, 126, 128, 130, 131, 144, 148, 156, 159, 186, 194, 196, 207, 210, 212, 214, 216, 217, 218, 221, 228, 229, 233, 234, 236, 237, 239, 240, 241, 242, 250, 252, 253, 254, 259, 265, 267, 291, 292, 293, 297, 298], "canon": [4, 14, 15, 41, 50, 69, 72, 77, 79, 80, 84, 88, 89, 90, 94, 104, 113, 118, 124, 128, 130, 132, 153, 168, 172, 191, 193, 196, 198, 210, 214, 222, 229, 230, 233, 237, 239, 241, 247, 259, 297], "canon_bp": 247, "canonic": [14, 15, 75, 88, 230, 247, 277], "canonical_eq": 237, "canonical_form": 241, "canonical_fre": 84, "canonical_normal_form": 118, "canonical_od": 237, "canonical_system": 237, "canonical_vari": 88, "canonicalize_na": 84, "canonicalz": 89, "cantilev": [136, 137], "cantor": 214, "canva": 207, "cap": [89, 92, 191, 229, 240], "capabl": [7, 13, 15, 18, 23, 30, 41, 54, 67, 69, 88, 92, 100, 113, 128, 136, 137, 151, 207, 218, 221, 240, 287, 290, 291, 297, 298, 301], "capit": [15, 87, 89, 144, 237], "capital_pi_not": 87, "capitalis": 41, "captur": [2, 13, 88, 149, 259], "car2d": 90, "cardin": [79, 80, 83, 208, 229], "care": [12, 15, 16, 21, 22, 27, 36, 42, 43, 79, 88, 96, 115, 118, 124, 136, 140, 200, 210, 211, 216, 233, 234, 237, 239, 240, 245, 248, 253, 286, 289, 291], "care_term": 118, "carefulli": [12, 42, 88, 132, 214, 223], "carl": [128, 256], "carla": 259, "carlo": 79, "carmichael": [89, 93, 128], "carmichael_funct": [93, 128], "carmichael_numb": 128, "carmichaelfunct": [93, 128], "carri": [68, 69, 88, 183, 189, 196, 208, 211, 214, 216, 218, 219, 260], "cart": [13, 158], "cart_mass": [13, 158], "cart_masscent": 158, "cartan": 117, "cartan_matrix": 117, "cartan_typ": 117, "cartanmatrix": 117, "cartantyp": 117, "cartantype_gener": 117, "cartesian": [31, 33, 90, 136, 138, 140, 164, 178, 181, 186, 207, 208, 229, 240, 259, 269, 270, 272, 273, 282], "cartesian_product": 229, "cartesiancomplexregion": 229, "carvallo": [301, 305], "case": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 30, 35, 36, 39, 41, 42, 46, 48, 51, 52, 53, 54, 55, 56, 57, 61, 67, 68, 69, 70, 71, 73, 76, 79, 80, 84, 87, 88, 89, 90, 92, 93, 94, 96, 100, 103, 104, 105, 106, 110, 113, 115, 118, 120, 124, 125, 128, 129, 130, 134, 137, 144, 148, 152, 153, 159, 164, 175, 181, 186, 188, 190, 191, 196, 197, 204, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 226, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 241, 242, 245, 247, 250, 252, 254, 255, 257, 259, 260, 261, 262, 265, 268, 269, 287, 291, 292, 293, 296, 297, 298, 299, 302, 304, 306, 307], "cask": 8, "casoratian": 124, "cass": 291, "cast": [69, 120, 134, 289], "cast_check": 69, "cast_nocheck": 69, "casu": 217, "casus_irreducibili": 217, "cat": [32, 68], "catalan": [88, 93, 221], "catalan_numb": 93, "catalannumb": [93, 221], "catastroph": 69, "catch": [38, 88, 237, 252, 293], "catch_warn": 257, "catchal": 297, "categor": [3, 48, 124, 208], "categori": [13, 208, 276, 283], "cauchi": [96, 113, 115, 212, 237, 241], "cauchy_distribut": 241, "cauchy_lower_bound": 212, "cauchy_principal_valu": 115, "cauchy_upper_bound": 212, "cauchydistribut": 241, "cauchyprincipalvalu": 115, "caught": [14, 237], "caus": [3, 5, 12, 13, 15, 18, 22, 27, 35, 43, 55, 59, 88, 89, 92, 94, 124, 131, 148, 156, 221, 230, 237, 238, 239, 256, 257, 293, 299, 310], "caution": [80, 88, 94, 221, 233], "caveat": [88, 217, 289], "caylei": [79, 82, 124], "cb": [209, 259], "cba": [79, 242, 259], "cbead": 77, "cbl": 241, "cbm": [96, 115], "cbrt": [69, 94, 221], "cc": [49, 53, 89, 104, 206, 209, 210, 211, 217, 293], "ccc": [210, 240], "cccc": 240, "ccode": [43, 69, 221, 246, 254], "ccodegen": 254, "ccw": [101, 104], "cd": [4, 8, 9, 45, 140, 210, 240, 243, 259], "cd_dens": 210, "cdf": 241, "cdhw73": 70, "cdir": 88, "cdot": [13, 18, 28, 32, 33, 35, 36, 41, 46, 70, 87, 93, 96, 106, 110, 111, 113, 120, 124, 128, 130, 145, 147, 159, 196, 206, 208, 209, 214, 217, 224, 228, 231, 234, 237, 239, 242, 243, 259, 271, 272, 291, 292, 297], "cdot1": 297, "cdot2": 297, "ce": [18, 49, 53, 140], "cea": 11, "ceca": 241, "ceil": [89, 94, 128, 130, 152, 221], "ceiling_joint": 152, "ceilingfunct": 94, "cell": 68, "celler": 79, "center": [5, 7, 13, 22, 24, 28, 30, 35, 39, 67, 79, 87, 88, 98, 102, 104, 105, 115, 124, 149, 152, 155, 159, 164, 207, 216, 221, 229, 275, 299, 302, 309, 311], "center_": 79, "center_of_mass": [30, 155], "centimet": 198, "centr": [68, 85, 207], "central": [28, 58, 79, 85, 96, 98, 104, 149, 155, 216, 217, 234, 241], "central_inertia": [149, 155, 307], "centralizer_and_norm": 79, "centralmo": 241, "centric": 207, "centroid": [98, 104, 105, 136], "centuri": [89, 208], "cep849r": 93, "certain": [2, 5, 12, 14, 15, 27, 43, 57, 59, 66, 68, 69, 71, 79, 86, 88, 92, 96, 104, 113, 115, 128, 130, 158, 200, 201, 208, 211, 214, 216, 221, 222, 228, 231, 233, 234, 237, 239, 240, 241, 243, 254, 255, 260, 265, 268, 274, 297], "certainli": [39, 100, 130, 256], "cexpr": 241, "cf": [128, 214], "cff": [214, 217], "cfg": [12, 214, 217], "cfrac": 297, "cfunction": 43, "cfunction_format": 221, "cfunction_str": [69, 221], "cg": [170, 188, 195, 243], "cg_simp": 170, "cgate": 175, "cgi": 265, "cgs_gauss": 195, "cgt": 79, "cgtnote": 79, "ch": [90, 124, 234], "ch4": 22, "ch5": 22, "ch6": 22, "chain": [35, 41, 43, 69, 79, 84, 88, 96, 105, 129, 216, 241], "challeng": [18, 23, 151], "chalmer": 148, "chan": 237, "chanc": [3, 12, 16, 42, 88, 116, 124, 231, 241, 292], "chang": [0, 4, 5, 7, 8, 9, 12, 14, 15, 16, 18, 22, 32, 33, 35, 36, 41, 59, 68, 69, 70, 79, 80, 84, 87, 88, 89, 92, 93, 94, 96, 102, 103, 113, 115, 118, 124, 128, 130, 131, 132, 136, 138, 140, 144, 148, 152, 155, 165, 176, 186, 196, 197, 206, 207, 208, 209, 210, 212, 214, 217, 218, 221, 228, 229, 230, 231, 233, 236, 237, 239, 240, 241, 242, 252, 259, 260, 270, 272, 286, 289, 292, 296, 299, 302, 309], "change_index": 87, "change_member_label": 140, "change_node_label": 140, "change_support": 138, "chao": 215, "chaotic": 55, "chapman": [70, 78], "chapter": [4, 22, 79, 96, 128, 215], "chapter1": 7, "chapter11": 241, "chapter3": 221, "chapter4": 221, "chapui": 128, "char": 77, "charact": [3, 4, 5, 11, 12, 14, 88, 89, 113, 116, 130, 171, 200, 205, 207, 221, 237, 252, 254, 257, 262, 289, 291, 296], "character": [33, 36, 136, 137, 228, 241, 247, 274, 303], "characteris": 241, "characterist": [0, 18, 35, 90, 106, 124, 132, 134, 210, 212, 214, 215, 237, 239, 293], "characteristiccurvecollect": [132, 134], "characteristiccurvefunct": 132, "charg": [33, 274], "charl": 79, "charles_marsh_continuous_entropi": 241, "charpoli": [124, 210, 293], "charpoly_bas": 210, "charpoly_berk": 210, "charpoly_factor_block": 210, "charpoly_factor_list": 210, "chart": [90, 207], "chat": [7, 59], "cheap": [43, 88, 128], "cheat": 124, "cheb": 237, "chebyshev": [5, 67, 88, 115, 214, 217], "chebyshev1_rul": 115, "chebyshev2_rul": 115, "chebyshev_polynomi": 96, "chebyshev_root": 96, "chebyshevpolynomialofthefirstkind": 96, "chebyshevpolynomialofthesecondkind": 96, "chebyshevt": [5, 96, 221], "chebyshevt_poli": [96, 217], "chebyshevt_root": 96, "chebyshevu": [96, 221], "chebyshevu_poli": [96, 217], "chebyshevu_root": 96, "check": [2, 3, 4, 5, 7, 8, 9, 11, 14, 15, 16, 22, 27, 30, 33, 37, 38, 39, 41, 42, 43, 51, 55, 57, 63, 64, 67, 68, 69, 71, 74, 77, 79, 80, 81, 86, 87, 88, 89, 93, 96, 100, 111, 113, 117, 118, 120, 123, 124, 125, 128, 144, 149, 150, 158, 159, 171, 179, 191, 193, 194, 199, 207, 208, 210, 211, 212, 214, 216, 217, 223, 229, 231, 233, 237, 238, 239, 240, 241, 245, 246, 250, 252, 254, 257, 259, 268, 272, 289, 297, 304], "check_and_join": 89, "check_dupl": 158, "check_output": 252, "check_rank": [125, 210], "check_sqf": 217, "check_symmetri": 124, "checker": 252, "checkinfsol": 237, "checkodesol": [12, 55, 237], "checkout": [9, 11, 68], "checkpdesol": 238, "checksol": 239, "chemic": [55, 131], "chemistri": 196, "chi": [16, 96, 113, 163, 221, 231, 237, 241, 247], "chi_distribut": 241, "chi_squared_distribut": 241, "chidistribut": 241, "child": [13, 15, 24, 134, 148, 152, 158, 200, 211, 256, 299], "child_axi": [13, 152, 299], "child_force_direction_vector": 299, "child_fram": [13, 24], "child_interfram": [13, 24, 152, 158, 307], "child_izz": 24, "child_joint_po": [13, 152], "child_mass": 24, "child_point": [13, 24, 152, 158, 304, 307], "child_tangency_point": 299, "children": [15, 88, 89, 211, 256], "chin": 115, "china": 124, "chines": [89, 128, 214], "chinoncentr": 241, "chisquar": 241, "choco": 8, "chocolatei": 8, "choic": [18, 27, 32, 35, 55, 69, 80, 93, 96, 113, 115, 129, 134, 187, 196, 200, 212, 214, 217, 221, 233, 237, 259, 291], "choleski": [119, 124], "cholesky_solv": [119, 124], "choos": [4, 8, 9, 11, 14, 18, 28, 35, 36, 52, 55, 79, 84, 88, 90, 93, 124, 128, 134, 137, 142, 191, 195, 200, 210, 217, 218, 221, 228, 230, 231, 237, 238, 241, 252, 257, 297, 299, 306], "choose_domain": 210, "chop": [88, 92, 96, 124, 239, 286], "chord": 98, "chose": [8, 89], "chosen": [31, 79, 80, 88, 89, 90, 101, 102, 124, 128, 136, 193, 195, 196, 207, 208, 210, 212, 214, 216, 221, 228, 231, 237, 241, 252, 265], "christoffel": 90, "christoph": [0, 265], "chrome": 8, "chromium": 8, "chula": 80, "ci": [2, 5, 9, 11, 12, 96, 113, 221, 296], "cia": 89, "cimento": [196, 206], "cimrman": 0, "cipher": 89, "ciphertext": 89, "circ": [68, 88, 99, 105, 113, 120], "circ_plot": 175, "circl": [4, 43, 88, 98, 99, 100, 102, 103, 104, 105, 113, 159, 164, 171, 207, 240, 265, 268, 275, 299], "circuit": [88, 175, 178, 282], "circuit_plot": 171, "circuitplot": 171, "circular": [13, 16, 41, 136, 142, 159, 163, 214, 299], "circumcent": 104, "circumcircl": 104, "circumfer": [88, 98, 159], "circumradiu": 104, "circumscrib": 104, "circumst": [216, 291], "citat": 4, "cite": [4, 44], "cites": 215, "citeseerx": [215, 230], "citi": 234, "cits7209": 93, "civil": [89, 136], "civita": [90, 96, 247], "cj": 61, "cl": [14, 16, 18, 41, 43, 55, 69, 79, 88, 115, 124, 134, 191, 204, 212, 216, 237, 246, 255, 259, 271, 287, 296, 298, 299], "claim": [36, 89, 231, 240], "clairaut": 237, "clang": [2, 130], "claredon": 124, "clarifi": 4, "clariti": [5, 13, 79, 204], "clarku": 241, "clash": [15, 60, 88, 124], "class": [3, 5, 7, 11, 12, 14, 15, 16, 18, 22, 23, 24, 28, 30, 31, 40, 41, 42, 43, 46, 48, 52, 53, 57, 58, 61, 62, 63, 64, 65, 70, 71, 72, 77, 78, 79, 80, 81, 82, 83, 84, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 110, 111, 113, 115, 116, 117, 118, 119, 120, 123, 131, 132, 133, 134, 136, 138, 140, 141, 142, 144, 148, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 196, 197, 198, 199, 203, 204, 205, 208, 210, 211, 212, 214, 217, 218, 219, 220, 222, 223, 224, 227, 228, 229, 231, 233, 237, 238, 239, 240, 241, 243, 246, 247, 248, 252, 253, 254, 255, 256, 257, 259, 260, 263, 266, 269, 270, 272, 273, 275, 276, 280, 282, 287, 289, 292, 297, 299, 306], "class_kei": 88, "class_nam": 88, "classic": [17, 20, 36, 47, 55, 67, 94, 96, 124, 177, 193, 200, 208], "classif": [15, 17, 40, 88, 237, 238], "classifi": [38, 124, 211, 237, 238, 240, 241], "classify_diop": 234, "classify_od": [55, 237], "classify_pd": 238, "classify_sysod": 237, "classmethod": [14, 41, 43, 61, 63, 64, 69, 72, 77, 79, 80, 82, 83, 88, 94, 95, 96, 103, 124, 131, 132, 134, 144, 148, 155, 158, 177, 188, 189, 191, 210, 212, 216, 217, 221, 229, 247, 252], "classnam": 4, "claus": [41, 118], "clean": [3, 252], "cleaner": [12, 21, 30, 237], "cleanest": 270, "cleanup": 217, "clear": [4, 7, 11, 12, 13, 35, 36, 41, 63, 78, 88, 113, 117, 149, 207, 210, 212, 214, 217, 231, 239, 240, 247, 252, 256, 274, 289, 305], "clear_cach": 217, "clear_denom": [210, 212, 217], "clear_denoms_rowwis": 210, "clear_glob": 252, "clear_load": 149, "clearer": [12, 13, 134, 269], "clearli": [3, 4, 36, 43, 93, 128, 211, 231, 293], "clebsch": [178, 188, 206, 282], "clebsch_gordan": 206, "clebsh": 170, "clemson": 241, "cleve": 124, "click": [7, 8, 9, 11], "clickabl": 4, "client": [88, 256], "clipboard": 12, "clo": 212, "clock": [94, 230], "clockwis": [100, 115, 124, 136, 137, 138, 140], "clone": [9, 59, 214], "close": [4, 11, 14, 15, 46, 54, 69, 87, 88, 92, 93, 96, 104, 106, 113, 115, 117, 132, 144, 207, 208, 209, 215, 216, 229, 239, 240, 254, 287, 297, 304], "closed": 229, "closer": [12, 54, 148, 156, 240, 292, 302], "closest": [54, 88, 101], "closing_angl": 101, "closur": [79, 85, 111, 171, 212, 216, 229], "closurefailur": 216, "cloudi": 241, "cloudpickl": 2, "clunki": 60, "clutter": 4, "cm": [30, 68, 241, 299], "cmod": 187, "cmoment": 241, "cmplx": [69, 221], "cn": [80, 221, 296], "cname": 254, "cnf": 118, "cnot": 175, "cnotgat": 175, "co": [4, 9, 12, 13, 14, 16, 18, 22, 27, 30, 33, 35, 36, 43, 46, 49, 50, 52, 54, 55, 56, 57, 61, 67, 69, 87, 88, 90, 92, 93, 94, 96, 97, 98, 101, 102, 104, 106, 110, 111, 112, 113, 115, 124, 128, 130, 149, 150, 152, 156, 158, 159, 163, 165, 200, 202, 204, 206, 207, 211, 214, 217, 218, 220, 221, 222, 223, 224, 228, 229, 230, 231, 233, 237, 239, 240, 241, 242, 248, 260, 265, 267, 268, 269, 270, 275, 286, 287, 289, 291, 297, 298, 299, 302, 303, 304, 307, 309, 310, 311], "coalesc": 256, "coc": 164, "code": [4, 8, 10, 15, 18, 22, 23, 24, 30, 31, 32, 35, 39, 41, 42, 43, 51, 54, 55, 56, 57, 59, 60, 70, 75, 79, 82, 83, 88, 89, 90, 96, 100, 113, 115, 116, 124, 128, 129, 130, 131, 134, 149, 151, 152, 185, 191, 205, 206, 207, 208, 209, 210, 211, 214, 220, 231, 233, 237, 239, 240, 241, 243, 246, 249, 250, 252, 253, 254, 257, 258, 259, 260, 269, 277, 284, 289, 291, 294, 296, 305, 310], "code_gen": [253, 254], "code_qu": 11, "code_text": 221, "codebas": [3, 12, 13, 41, 211, 250], "codeblock": [69, 130], "codegen": [2, 43, 129, 221, 253, 258, 284], "codegenast": 69, "codegenerror": 254, "codeprint": 69, "codewrapp": 253, "codifi": 3, "codirect": 200, "codomain": [68, 208, 216], "coef": [22, 30], "coeff": [30, 43, 88, 90, 118, 212, 214, 216, 217, 227, 233, 237, 239, 247, 297], "coeff_bel": 223, "coeff_monomi": [88, 217], "coeff_mul": 227, "coeff_search": 216, "coeff_wrt": 212, "coeffici": [4, 13, 14, 18, 22, 37, 39, 41, 48, 51, 53, 64, 67, 69, 87, 88, 90, 92, 93, 96, 101, 106, 107, 110, 111, 113, 117, 118, 120, 124, 125, 128, 131, 134, 144, 145, 148, 153, 164, 178, 188, 196, 206, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 223, 224, 227, 228, 231, 233, 234, 236, 237, 238, 239, 240, 241, 247, 253, 269, 272, 282, 292, 297, 299, 303], "coerc": [27, 88, 214], "coercibl": 212, "coercionfail": [211, 214], "cofactor": [88, 124, 210, 212, 214, 217], "cofactor_matrix": 124, "cogniz": 3, "cohen": [71, 125, 210, 214, 215, 216], "cohen00": 216, "cohen93": [215, 216], "coher": [167, 193, 199], "coherent_st": 167, "coin": [229, 241], "coin_flip": 241, "coincid": [11, 22, 104, 124, 127, 152, 208, 265, 270, 289], "coincis": 208, "coker": 208, "cokernel": 208, "col": [30, 120, 124, 127, 144, 210, 216, 293], "col1": 124, "col2": 124, "col_del": [124, 293], "col_insert": [124, 293], "col_join": [124, 299], "col_matrix": 30, "colin": 80, "collabor": 9, "collaps": [88, 185, 233], "collect": [2, 5, 18, 30, 40, 45, 68, 69, 79, 88, 105, 115, 128, 136, 144, 158, 191, 198, 206, 212, 214, 217, 230, 231, 233, 237, 241, 252, 259, 299, 310], "collect_const": 233, "collect_sqrt": 233, "collected_expr": 297, "collected_word": 78, "collid": [60, 247], "collin": [214, 215], "collinear": [98, 100, 102, 103, 104], "collins67": [214, 215], "collis": [14, 88, 127, 221], "colloc": [18, 131, 132, 134, 299], "colloqui": [15, 49], "colmatrix": 30, "colon": [4, 88], "color": [5, 9, 14, 116, 142, 205, 221, 252, 259, 296], "colost": 79, "colour": 5, "colsep": 124, "colslic": 210, "colslist": [124, 210], "columbia": 241, "column": [18, 32, 53, 61, 65, 68, 69, 70, 116, 118, 120, 124, 125, 127, 131, 134, 144, 153, 158, 186, 193, 200, 205, 206, 210, 216, 221, 237, 239, 240, 246, 265, 302], "columnspac": [124, 210], "com": [2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 43, 46, 59, 61, 65, 67, 79, 81, 82, 88, 89, 91, 92, 93, 94, 96, 98, 104, 105, 113, 115, 124, 128, 142, 206, 215, 224, 226, 229, 230, 233, 234, 237, 240, 241, 259, 262, 293], "comb_explicit_rh": [31, 158], "comb_implicit_mat": [31, 158], "comb_implicit_rh": [31, 158], "combin": [4, 11, 13, 14, 16, 18, 23, 31, 43, 48, 56, 68, 88, 92, 93, 96, 115, 117, 118, 124, 128, 137, 144, 151, 152, 153, 158, 170, 177, 185, 186, 188, 189, 190, 194, 195, 196, 197, 208, 209, 211, 212, 214, 216, 217, 221, 222, 230, 231, 233, 234, 237, 239, 241, 242, 256, 259, 286, 289, 292], "combinator": [70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 93, 120, 128, 216, 223, 242, 247, 256, 259, 277, 291, 297], "combinatori": [12, 13, 43, 72, 80, 87, 88, 89, 95, 96, 128, 217, 223, 233, 259, 277, 297], "combintor": 13, "combo": 118, "combsimp": [87, 88, 93, 233], "come": [3, 11, 12, 14, 21, 22, 25, 36, 53, 59, 79, 84, 86, 87, 88, 94, 96, 113, 115, 124, 129, 194, 208, 211, 214, 216, 217, 231, 234, 237, 240, 250, 252, 257, 260, 289, 291, 292, 295, 297, 302], "comfort": [128, 129], "comm": [172, 191, 247], "comm_i2symbol": 247, "comm_symbols2i": 247, "comma": [4, 5, 12, 16, 69, 88, 221, 260, 289], "command": [2, 4, 8, 9, 11, 12, 15, 16, 22, 25, 30, 48, 51, 57, 59, 69, 92, 116, 205, 207, 221, 252, 253, 296], "commaoper": 69, "comment": [4, 5, 11, 12, 22, 69, 79, 218, 221, 254, 259], "commerci": [0, 291], "commit": [9, 12], "common": [5, 9, 11, 12, 13, 14, 15, 16, 18, 23, 28, 30, 34, 35, 36, 41, 42, 43, 49, 50, 51, 52, 55, 67, 69, 79, 80, 88, 89, 94, 99, 102, 105, 115, 124, 128, 129, 130, 142, 144, 149, 151, 152, 154, 158, 163, 196, 200, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 219, 223, 229, 230, 231, 233, 234, 237, 239, 240, 241, 253, 254, 257, 259, 260, 272, 274, 286, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 304], "common_prefix": 259, "common_suffix": 259, "commonli": [5, 15, 18, 21, 35, 80, 93, 96, 115, 124, 130, 209, 237, 272], "commun": [3, 5, 7, 11, 59, 206, 237, 239, 241, 293], "communication_class": 241, "commut": [15, 36, 41, 61, 65, 68, 79, 80, 84, 88, 90, 111, 115, 124, 168, 175, 178, 179, 180, 190, 191, 196, 202, 209, 210, 212, 213, 214, 215, 217, 221, 228, 229, 231, 237, 247, 282, 283, 292], "commutative_diagram": 68, "commutative_part": 88, "commutative_properti": [41, 88], "commutativehandl": 65, "commutativepred": 65, "commutes_with": [80, 247], "comp": [70, 128, 237], "compa": 248, "compact": [30, 82, 88, 141, 153, 189, 205, 217, 221, 239, 256], "compactif": 88, "companion": [120, 124], "companionmatrix": 120, "compar": [11, 12, 13, 16, 41, 57, 67, 69, 80, 85, 88, 93, 94, 105, 118, 124, 128, 129, 170, 194, 198, 211, 214, 217, 218, 221, 226, 228, 233, 237, 240, 242, 246, 252, 259, 289, 292, 297], "comparison": [22, 69, 87, 88, 118, 124, 208, 216, 220, 239, 252, 259], "compat": [2, 3, 8, 21, 38, 69, 88, 96, 116, 124, 128, 129, 158, 193, 198, 205, 207, 210, 212, 216, 217, 221, 241, 245, 248, 252, 254, 260], "compatibli": 2, "compb": 248, "compil": [2, 21, 30, 69, 116, 129, 205, 221, 233, 246, 252, 253, 254, 276, 291], "compileflag": [16, 252], "complement": [118, 120, 217, 229, 240], "complementari": [4, 96, 144], "complementset": 229, "complet": [2, 3, 4, 9, 11, 12, 13, 14, 15, 16, 18, 21, 23, 30, 36, 41, 52, 55, 64, 69, 88, 89, 90, 92, 94, 95, 96, 104, 113, 115, 124, 128, 130, 151, 153, 154, 177, 180, 181, 210, 214, 216, 217, 218, 222, 228, 233, 234, 237, 240, 241, 252, 254, 262, 291, 292, 297, 299, 306], "complex": [4, 7, 12, 13, 14, 15, 16, 18, 21, 22, 30, 32, 36, 38, 41, 43, 51, 52, 53, 57, 61, 65, 66, 67, 69, 79, 88, 89, 91, 92, 93, 96, 100, 110, 113, 119, 124, 128, 129, 130, 131, 142, 144, 153, 156, 158, 160, 164, 174, 177, 179, 180, 191, 200, 209, 210, 212, 216, 217, 221, 222, 226, 229, 231, 233, 237, 239, 240, 241, 254, 262, 297, 298], "complex128": 69, "complex64": 69, "complex_": 69, "complex_allow": 254, "complex_beam_paramet": 160, "complex_conjug": 94, "complex_el": 65, "complex_numb": [41, 65, 88], "complexbasetyp": 69, "complexel": 212, "complexelementshandl": 65, "complexelementspred": 65, "complexfield": 212, "complexhandl": 65, "complexinfin": [88, 144], "complexpred": 65, "complexregion": [229, 240], "complexrootof": [48, 88, 124, 212, 217, 237], "complexspac": 177, "complextyp": 69, "compliant": 69, "complic": [4, 12, 14, 16, 18, 23, 25, 36, 37, 41, 43, 48, 54, 61, 69, 79, 87, 89, 90, 92, 93, 94, 96, 113, 115, 120, 130, 151, 191, 210, 211, 214, 218, 220, 231, 233, 240, 241, 245, 246, 254, 256, 260, 262, 287, 289, 292, 293], "compon": [18, 19, 23, 24, 28, 32, 33, 34, 35, 36, 48, 68, 69, 84, 88, 90, 103, 115, 120, 124, 132, 133, 134, 144, 145, 151, 152, 155, 158, 163, 188, 193, 200, 203, 206, 207, 208, 209, 210, 217, 219, 241, 243, 246, 247, 256, 259, 265, 268, 271, 272, 299], "component_": 259, "componentwis": [208, 221], "compos": [27, 35, 68, 88, 89, 193, 196, 208, 212, 216, 217, 218, 221, 223, 233, 306], "composit": [41, 65, 68, 77, 79, 80, 88, 89, 106, 108, 115, 128, 136, 212, 214, 217, 220, 233, 240, 255], "composite_numb": [41, 88], "compositedomain": 212, "compositehandl": 65, "compositemorph": 68, "compositepi": 128, "compositepred": 65, "composition_seri": 79, "compound": [88, 189, 307], "compound_pend": 307, "compound_probability_distribut": 241, "compound_rv": 241, "compounddistribut": 241, "comprehens": [13, 41, 46, 52, 53, 55, 215, 229, 241, 286, 300], "compress": [18, 79, 124, 127, 140], "compris": [28, 31, 79, 89, 120, 144, 155, 217, 259], "compulsori": 144, "comput": [0, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 21, 22, 23, 30, 32, 33, 35, 39, 41, 42, 43, 46, 48, 49, 52, 53, 54, 59, 61, 67, 69, 70, 71, 72, 77, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 101, 103, 107, 110, 111, 112, 114, 115, 117, 120, 124, 125, 127, 128, 130, 136, 137, 142, 144, 151, 152, 153, 154, 158, 175, 176, 177, 185, 190, 191, 193, 195, 196, 200, 201, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 223, 224, 226, 228, 229, 230, 231, 233, 234, 237, 239, 240, 241, 243, 253, 256, 259, 260, 265, 267, 268, 269, 270, 271, 272, 274, 277, 286, 287, 289, 290, 293, 297, 299, 304, 309], "computation": [14, 53, 84, 94, 152, 153, 154], "computationfail": 214, "compute_explicit_form": 158, "compute_fp": 223, "compute_leading_term": 88, "compute_m_ybar": 237, "comtet": 223, "comupt": 237, "concaten": [89, 124, 148, 156, 259], "concav": [67, 160], "concave_funct": 67, "concentr": [18, 55, 137, 241], "concept": [13, 15, 36, 41, 79, 211, 213, 216, 221, 240, 245, 274, 290, 295, 302, 305], "conceptu": [196, 208, 274], "concern": [4, 12, 14, 15, 33, 41, 67, 70, 87, 92, 128, 207, 209, 210, 211, 220, 221, 222, 233, 234, 239, 253, 254, 256, 262], "concis": [4, 30], "conclud": [33, 41, 96, 111, 228, 239, 274, 302], "conclus": [68, 88, 300], "concret": [11, 18, 22, 41, 68, 80, 88, 93, 94, 115, 117, 124, 128, 131, 134, 148, 196, 212, 216, 221, 277], "concur": 218, "concurr": [101, 102, 218], "concycl": 103, "cond": [94, 113, 115, 229], "conda": [2, 8, 9, 59, 130], "condens": [124, 240], "condit": [12, 14, 15, 18, 23, 27, 30, 41, 42, 46, 48, 50, 69, 79, 88, 90, 94, 96, 106, 107, 110, 111, 112, 115, 118, 124, 128, 130, 136, 137, 140, 144, 150, 151, 154, 160, 204, 206, 218, 221, 224, 231, 234, 236, 237, 239, 240, 241, 246, 297, 302], "condition_numb": 124, "condition_set": 241, "conditionaldomain": 241, "conditionset": [229, 240, 241, 298], "conduct": [5, 18, 132], "cone": 275, "confederaci": 89, "confer": [93, 129, 295], "confid": 291, "config": [9, 116], "configur": [2, 3, 11, 12, 13, 18, 23, 25, 27, 46, 80, 118, 144, 149, 151, 153, 221, 299, 304, 306, 309, 311], "configura": 30, "configuration_constraint": [25, 153, 299, 302, 306], "confirm": [3, 12, 13, 79, 128, 237], "conflict": [13, 22, 94, 128, 144, 254], "confluent": [96, 231], "conform": [18, 88, 240, 245, 246, 259], "confus": [3, 5, 12, 13, 14, 15, 36, 41, 51, 88, 93, 118, 164, 209, 217, 240, 286, 287, 289], "confusingli": 96, "cong": 214, "congratul": 294, "congruenc": [79, 88, 128, 231, 234], "congruent": [214, 231, 234], "conic": [98, 234, 265], "conicis": 208, "conj": 221, "conjectur": [128, 214], "conjg": 221, "conjug": [4, 48, 65, 77, 78, 79, 88, 94, 96, 124, 130, 146, 160, 174, 177, 191, 214, 217, 221, 237, 247], "conjugaci": [70, 71, 79], "conjugacy_class": 79, "conjugate_convent": 124, "conjugate_gauss_beam": 160, "conjunct": [94, 118, 128, 207, 231, 252, 297], "conlist_coord": 302, "conlist_spe": 302, "connect": [9, 18, 24, 41, 82, 89, 90, 103, 104, 124, 129, 136, 140, 144, 149, 152, 158, 159, 208, 209, 210, 219, 237, 241, 259, 265, 302, 307], "connect_to": 13, "connected_compon": [124, 259], "connected_components_decomposit": 124, "connector": 137, "consec": 79, "consec_succ": 79, "consecut": [5, 69, 79, 84, 87, 88, 89, 93, 104, 156, 233, 239], "consequ": [12, 13, 43, 65, 88, 134, 209, 211, 289, 297], "consequenti": 133, "conserv": [26, 88, 153, 201, 268, 274, 303], "conservative_field": [33, 272], "conserve_mpmath_dp": 255, "consid": [0, 3, 5, 12, 13, 14, 15, 16, 18, 21, 25, 31, 33, 35, 38, 41, 42, 43, 46, 57, 61, 65, 68, 69, 77, 80, 83, 87, 88, 89, 91, 92, 93, 94, 96, 98, 100, 104, 112, 113, 115, 116, 117, 118, 120, 124, 128, 144, 148, 149, 155, 181, 188, 191, 195, 196, 201, 205, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 224, 228, 233, 234, 237, 238, 239, 240, 241, 252, 254, 259, 268, 270, 272, 274, 275, 289, 293, 297], "consider": [3, 12, 21, 42, 88, 129, 211, 220, 229, 234, 237, 269], "consist": [4, 5, 13, 15, 18, 24, 28, 39, 41, 50, 52, 56, 68, 79, 80, 84, 88, 89, 93, 94, 96, 98, 104, 106, 113, 118, 128, 130, 131, 136, 140, 152, 155, 165, 185, 191, 196, 199, 204, 207, 209, 210, 211, 212, 214, 229, 237, 239, 240, 241, 245, 250, 253, 254, 259, 290, 292, 303, 304], "consol": [2, 3, 16, 88, 116, 205, 207, 296], "const": [212, 221], "constanc": 88, "constant": [12, 13, 14, 15, 18, 22, 30, 31, 33, 46, 48, 50, 51, 53, 56, 67, 69, 87, 88, 92, 94, 96, 112, 113, 115, 131, 132, 134, 136, 137, 144, 148, 158, 159, 168, 172, 178, 194, 195, 197, 198, 199, 201, 204, 207, 209, 212, 214, 216, 217, 218, 221, 223, 228, 231, 233, 234, 237, 238, 239, 240, 241, 252, 254, 259, 260, 268, 272, 275, 282, 287, 293, 298, 299, 302], "constant_problem": 293, "constant_renumb": 237, "constant_symbol": 158, "constantli": 228, "constantrul": 115, "constantsimp": 237, "constanttimesrul": 115, "constitu": [98, 104, 155, 200, 227, 265], "constitut": [3, 5, 15, 115, 128, 221], "constr": 239, "constrain": [26, 30, 153, 154, 239, 299, 304, 306], "constraint": [22, 23, 25, 26, 27, 30, 39, 50, 124, 137, 144, 149, 151, 153, 154, 158, 218, 239, 299, 304, 305, 306, 308], "constraint_solv": [153, 302], "construct": [13, 14, 18, 21, 22, 39, 46, 50, 61, 63, 64, 67, 68, 69, 71, 88, 90, 94, 96, 98, 102, 104, 116, 120, 124, 129, 132, 134, 137, 144, 148, 149, 153, 155, 156, 158, 176, 180, 189, 190, 193, 197, 208, 210, 211, 212, 214, 216, 217, 221, 234, 239, 241, 242, 246, 254, 256, 257, 269, 271, 272, 289, 292, 293, 297, 299, 300, 302], "construct_c": 237, "construct_d": 237, "construct_domain": [210, 211, 212, 217], "constructor": [13, 14, 15, 18, 43, 63, 64, 68, 69, 75, 79, 80, 81, 88, 95, 96, 117, 121, 124, 130, 131, 132, 134, 148, 156, 184, 185, 189, 193, 207, 208, 210, 211, 212, 221, 229, 237, 246, 254, 269, 277, 288, 292, 306], "construtor": 148, "constuct": 18, "consult": 70, "consum": [4, 27, 69, 96, 154], "contact": [35, 104, 148, 245, 302, 308, 309, 310, 311], "contain": [2, 3, 4, 5, 8, 11, 12, 13, 14, 15, 16, 18, 27, 28, 30, 31, 36, 37, 41, 42, 43, 50, 51, 52, 53, 55, 56, 57, 60, 62, 63, 67, 68, 69, 70, 71, 79, 80, 84, 86, 87, 90, 91, 92, 93, 94, 96, 97, 99, 101, 102, 103, 104, 105, 114, 115, 117, 118, 120, 123, 124, 127, 128, 129, 130, 132, 134, 136, 138, 139, 140, 142, 143, 144, 145, 148, 149, 153, 154, 155, 158, 160, 161, 162, 164, 165, 166, 178, 181, 183, 186, 188, 191, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 221, 222, 223, 228, 229, 231, 233, 234, 235, 237, 238, 239, 240, 241, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 265, 268, 276, 287, 289, 293, 297, 299, 302, 306], "contbound": 214, "content": [3, 6, 14, 17, 20, 69, 88, 89, 122, 209, 210, 212, 214, 217, 220, 221, 240, 249, 254, 257, 258, 277, 278, 279, 280, 281, 282, 283, 284, 288, 290, 301], "context": [3, 4, 5, 11, 12, 13, 14, 22, 37, 41, 43, 54, 62, 63, 64, 88, 90, 96, 118, 148, 149, 196, 211, 212, 214, 216, 229, 250, 252, 257, 265], "contigu": [88, 231, 254], "continu": [3, 4, 5, 12, 13, 39, 42, 43, 46, 67, 69, 78, 80, 82, 88, 93, 94, 96, 113, 116, 124, 128, 141, 142, 144, 186, 189, 205, 212, 214, 217, 234, 236, 237, 245, 288], "continue_": 69, "continued_fract": 128, "continued_fraction_converg": 128, "continued_fraction_iter": 128, "continued_fraction_period": 128, "continued_fraction_reduc": 128, "continuetoken": 69, "continuous_domain": [67, 236], "continuousdistributionhandmad": 241, "continuousdomain": 241, "continuousmarkovchain": 241, "continuouspspac": 241, "continuousrv": 241, "continuum": [47, 59, 282, 301], "continuum_mechan": [135, 136, 137, 138, 140], "contour": [96, 98, 113, 207, 231], "contourf": 207, "contract": [18, 69, 90, 131, 132, 134, 145, 191, 221, 230, 243, 245, 246, 247, 248, 299], "contract_al": 247, "contract_metr": 247, "contractil": [18, 134, 148], "contraction_ax": 242, "contraction_indic": 243, "contradict": [41, 221], "contrarili": 48, "contrast": [12, 14, 15, 43, 87, 88, 211, 217, 231, 237, 291, 306], "contravari": [84, 124, 247, 248], "contribut": [0, 2, 3, 4, 5, 9, 10, 12, 59, 104, 128, 153, 211, 214, 216, 237, 275, 294, 307, 310], "contributor": [2, 5, 6, 7, 8, 11, 13, 43], "control": [2, 7, 9, 13, 14, 16, 18, 27, 30, 37, 41, 43, 47, 68, 70, 88, 89, 92, 113, 118, 124, 131, 132, 134, 148, 171, 175, 186, 187, 191, 210, 217, 218, 222, 229, 234, 240, 259, 282, 286, 299], "control_lin": 171, "control_plot": 142, "control_point": 171, "control_valu": 175, "controller_mat": 144, "conv": 91, "convei": [11, 48], "conveni": [0, 8, 13, 14, 15, 16, 22, 28, 30, 35, 36, 50, 52, 57, 60, 67, 69, 80, 88, 89, 93, 96, 115, 118, 130, 202, 207, 208, 209, 210, 211, 212, 216, 219, 228, 229, 233, 239, 245, 246, 253, 255, 256, 260, 272, 287, 289], "convent": [3, 4, 5, 18, 30, 33, 43, 55, 79, 80, 84, 87, 88, 89, 93, 94, 96, 98, 103, 113, 115, 118, 130, 136, 137, 140, 144, 147, 148, 156, 160, 164, 185, 186, 188, 193, 194, 207, 221, 237, 238, 240, 241, 247, 274, 289, 297], "converg": [13, 14, 69, 87, 92, 96, 115, 128, 160, 217, 224, 228, 231, 287], "convergence_stat": 96, "convergence_test": 87, "convers": [4, 5, 13, 14, 27, 41, 51, 69, 88, 108, 130, 195, 209, 210, 211, 212, 214, 216, 218, 221, 234, 246, 253, 265], "convert": [2, 3, 8, 13, 14, 15, 16, 28, 32, 37, 41, 42, 43, 46, 51, 53, 54, 55, 61, 65, 69, 72, 80, 84, 88, 89, 92, 93, 94, 101, 102, 103, 105, 108, 109, 112, 116, 118, 124, 127, 128, 130, 144, 148, 155, 185, 188, 194, 195, 196, 198, 204, 207, 208, 210, 212, 214, 216, 217, 218, 219, 221, 222, 223, 229, 230, 231, 233, 234, 237, 238, 240, 241, 242, 243, 246, 252, 253, 259, 260, 262, 263, 268, 283, 288, 289, 292, 297], "convert_array_to_matrix": 243, "convert_equals_sign": 130, "convert_from": [211, 212], "convert_indexed_to_arrai": 243, "convert_matrix_to_arrai": 243, "convert_to": [194, 195, 198, 210, 216], "convert_to_c": 130, "convert_to_expr": 130, "convert_to_fortran": 130, "convert_to_native_path": 252, "convert_to_python": 130, "convert_xor": [88, 130], "convex": [67, 104, 105, 115], "convex_funct": 67, "convex_hul": [4, 100, 104, 105], "convolut": [12, 13, 96, 223], "convolution2d": 69, "convolution_fft": 91, "convolution_fwht": 91, "convolution_ntt": 91, "convolution_subset": 91, "convolution_theorem": 91, "conwai": 74, "coolei": 91, "cooper": 88, "coord": [21, 90, 103, 105, 189, 204], "coord_con": 25, "coord_funct": 90, "coord_idx": [31, 158], "coord_index": 90, "coord_si": [90, 268], "coord_stat": 158, "coord_system": 13, "coord_tuple_transform_to": [13, 90], "coordin": [18, 22, 24, 25, 26, 29, 31, 32, 33, 36, 61, 69, 89, 90, 94, 96, 97, 99, 103, 105, 120, 124, 136, 138, 140, 142, 146, 148, 149, 152, 153, 154, 156, 158, 159, 167, 169, 188, 189, 192, 200, 201, 202, 204, 208, 216, 217, 229, 237, 265, 267, 268, 271, 273, 275, 280, 299, 301, 303, 304, 305, 307, 309], "coordinate_deriv": [31, 158], "coordinate_system": 90, "coordinatesym": [200, 202], "coordinatesymbol": 90, "coordsyrect": 265, "coordsys3d": [265, 267, 268, 269, 271, 272, 275], "coordsysrect": 265, "coordsystem": [13, 90], "copi": [0, 9, 11, 12, 13, 16, 41, 45, 70, 80, 81, 88, 104, 124, 128, 129, 210, 212, 214, 216, 220, 221, 228, 239, 252, 259, 262, 296], "coplanar": [36, 61, 102], "coprim": [89, 115, 128, 187, 214, 234], "core": [2, 3, 4, 7, 11, 12, 14, 15, 16, 38, 41, 42, 43, 50, 65, 67, 69, 79, 89, 94, 95, 97, 105, 123, 124, 128, 130, 189, 190, 209, 210, 211, 212, 213, 214, 216, 217, 218, 221, 228, 229, 233, 234, 237, 241, 251, 252, 253, 259, 260, 263, 276, 277, 289, 292], "core_2": 128, "core_t": 128, "cornacchia": 234, "corner": [11, 12, 79, 81, 124, 217, 237, 240, 260], "correct": [3, 4, 5, 11, 12, 13, 14, 16, 18, 22, 27, 35, 36, 42, 43, 51, 53, 55, 69, 77, 79, 85, 87, 88, 92, 94, 112, 113, 115, 124, 128, 144, 148, 156, 214, 217, 228, 234, 237, 239, 240, 245, 253, 259, 289, 296, 299], "correctli": [2, 3, 4, 5, 8, 11, 12, 13, 14, 22, 27, 42, 43, 67, 92, 113, 116, 124, 130, 133, 148, 156, 221, 228, 234, 237, 302], "correl": 241, "correspond": [3, 4, 5, 7, 11, 12, 13, 18, 22, 31, 33, 39, 41, 42, 43, 46, 51, 55, 67, 68, 69, 70, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 93, 94, 96, 98, 99, 101, 102, 103, 104, 111, 113, 115, 117, 118, 124, 127, 128, 132, 134, 136, 137, 144, 150, 152, 153, 154, 155, 158, 163, 167, 181, 185, 186, 188, 192, 193, 196, 200, 204, 206, 207, 209, 210, 211, 212, 214, 216, 217, 221, 227, 228, 231, 233, 234, 237, 238, 239, 240, 241, 243, 245, 246, 247, 254, 255, 256, 257, 259, 260, 262, 265, 267, 269, 270, 272, 274, 292, 298, 302, 306], "correspondingli": 68, "cosec": 94, "coset": [79, 84, 216], "coset_enumer": 70, "coset_enumeration_c": 70, "coset_enumeration_r": 70, "coset_factor": 79, "coset_rank": 79, "coset_t": [70, 79], "coset_table_bas": 70, "coset_table_max_limit": 70, "coset_transvers": 79, "coset_unrank": 79, "cosh": [43, 88, 94, 96, 107, 113, 130, 132, 218, 221, 222, 231, 233, 239, 293, 297], "coshint": 221, "coshintegr": 221, "cosin": [18, 36, 43, 88, 94, 96, 103, 115, 149, 152, 200, 217, 218, 224, 230, 241, 265, 297, 302], "cosine_transform": 115, "cosinetransform": 115, "cosint": 221, "cosintegr": 221, "coskew": 241, "cosmet": [12, 221], "cost": [12, 67, 69, 128, 210, 240, 291, 306], "cost_funct": 69, "costli": [113, 210, 217, 293, 306], "cot": [12, 88, 94, 96, 130, 218, 221, 230], "cotang": [94, 218], "coth": [94, 221, 233], "could": [12, 13, 14, 15, 16, 18, 22, 23, 27, 39, 41, 43, 52, 54, 56, 64, 69, 81, 88, 100, 113, 115, 118, 151, 152, 155, 191, 194, 196, 208, 211, 214, 216, 218, 221, 229, 231, 233, 237, 238, 239, 240, 241, 242, 245, 246, 253, 257, 270, 271, 289, 292, 297], "could_extract_minus_sign": 88, "couldn": 115, "coulomb": 148, "coulombkineticfrict": 148, "count": [3, 5, 15, 74, 80, 87, 88, 89, 93, 98, 118, 124, 127, 128, 186, 217, 229, 230, 233, 240, 241, 247, 256, 259], "count_complex_root": 212, "count_digit": [88, 128], "count_op": [12, 16, 88, 230, 233], "count_partit": 256, "count_real_root": 212, "count_root": 217, "countabl": [196, 240], "counter": [69, 88, 94, 100, 124, 137, 138, 140], "counterclockwis": [97, 98, 99, 103, 124, 136, 137], "counterexampl": [128, 297], "counterpart": [88, 89, 237, 287], "coupl": [18, 27, 55, 88, 124, 130, 158, 170, 185, 188, 206], "coupledspinst": 188, "cours": [12, 28, 33, 39, 41, 45, 71, 72, 79, 87, 96, 113, 115, 124, 125, 128, 210, 211, 215, 216, 228, 230, 231, 272, 297], "cov": 239, "covarderivativeop": 90, "covari": [84, 90, 124, 241, 247, 248], "cover": [12, 19, 20, 21, 22, 32, 35, 39, 94, 128, 130, 247, 254, 287, 289, 300, 301], "coverag": 4, "coverage_doctest": 4, "coverage_report": 12, "covering_product": 91, "covhtml": 12, "cox": [70, 215, 217], "cox97": [215, 217], "coxet": 117, "coxeter_diagram": 117, "cp": [0, 80, 129, 209, 210], "cphase": 175, "cpp_dec_float_50": 69, "cpp_src": 115, "cpu": [11, 30, 69, 129], "cpython": [12, 30], "crack": 128, "cramer": [124, 153, 210, 237, 302], "cramer_solv": [119, 124], "crandal": 128, "crazi": 289, "crc": [70, 78, 80], "creat": [0, 2, 4, 5, 7, 8, 12, 14, 15, 18, 22, 24, 26, 27, 28, 30, 31, 32, 35, 36, 41, 42, 50, 51, 52, 53, 55, 56, 57, 61, 63, 68, 69, 70, 77, 79, 80, 88, 89, 90, 92, 94, 95, 96, 98, 100, 101, 103, 104, 109, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 126, 128, 129, 130, 131, 132, 134, 136, 140, 144, 148, 149, 152, 153, 155, 156, 158, 159, 168, 170, 172, 176, 179, 180, 181, 185, 186, 188, 189, 191, 194, 197, 200, 202, 204, 207, 208, 210, 211, 212, 214, 216, 217, 218, 221, 228, 233, 237, 240, 241, 242, 246, 247, 252, 253, 254, 256, 257, 259, 260, 265, 270, 272, 287, 289, 292, 293, 296, 297, 298, 299, 304, 306, 307, 309, 311], "create_expand_pow_optim": 69, "create_new": [265, 270], "createboson": 191, "createcg": 171, "createfermion": 191, "creation": [13, 16, 18, 23, 24, 25, 26, 27, 35, 36, 43, 88, 90, 124, 133, 149, 151, 155, 165, 175, 179, 180, 181, 191, 221, 241, 246, 254, 260, 309], "creator": 191, "credit": 259, "crell": 216, "cremona": 234, "criteria": [41, 88, 292], "criterion": [29, 69, 79, 209, 214], "critic": [35, 52, 67, 134, 164, 216, 240], "critical_angl": 164, "critical_point": 52, "critiqu": 220, "crmarsh": 241, "crootof": [57, 88, 217, 237, 239], "cross": [3, 5, 11, 12, 15, 30, 32, 35, 36, 88, 98, 104, 124, 136, 137, 149, 152, 155, 159, 171, 200, 202, 234, 240, 265, 269, 271, 272, 299, 310], "cross_sect": 136, "crosscovariancematrix": 241, "crown_i": 135, "crown_x": 135, "crt": [89, 128, 210, 214], "crt1": [128, 214], "crt2": [128, 214], "crucial": [79, 87, 211], "crude": [113, 207], "crv": 241, "crv_type": 241, "cryptanalysi": 89, "crypto": 89, "cryptograph": 89, "cryptographi": [128, 276, 283], "cryptosystem": 89, "csail": 91, "csc": [94, 130, 221, 230], "csch": [94, 221], "cse": [21, 69, 129, 180, 222, 233, 254, 260, 299], "cse_main": [69, 222, 233], "cset": 88, "csr": 127, "csse": 93, "cst": 22, "cstech": 265, "csusm": 234, "ct": [89, 117, 214], "ctan": [116, 205], "ctimesd": 16, "ctmcnote": 241, "ctr1": 230, "ctr2": 230, "ctr3": 230, "ctr4": 230, "ctrl": 8, "cube": [48, 67, 69, 72, 79, 81, 94, 115, 214, 215, 234, 240, 275], "cube_root": 94, "cubefre": 128, "cuberoot": 94, "cubic": [48, 96, 148, 208, 217, 234, 239], "cubic_curv": 265, "cubic_equ": 217, "cubicthu": 234, "cucurezeanu": 234, "cuda": [2, 129], "cuhk": 234, "cultur": 208, "cumbersom": [4, 11, 57], "cup": [41, 217, 229, 240], "cupi": [2, 129], "curl": [201, 265, 268, 275], "curli": [16, 22, 221], "current": [3, 5, 11, 12, 13, 14, 16, 21, 22, 23, 36, 41, 50, 51, 61, 64, 67, 68, 69, 70, 72, 79, 82, 83, 85, 86, 87, 88, 90, 94, 96, 98, 100, 103, 108, 111, 113, 115, 117, 124, 128, 130, 136, 141, 149, 151, 185, 190, 191, 195, 199, 207, 208, 209, 210, 212, 214, 217, 218, 220, 221, 222, 228, 231, 233, 234, 236, 237, 238, 239, 240, 241, 247, 252, 253, 254, 256, 269, 283, 293, 298], "currentfactor": 217, "curri": [0, 177], "curv": [4, 19, 68, 90, 100, 115, 128, 133, 134, 135, 136, 160, 207, 208, 237, 265, 275, 282, 283, 287], "curvatur": [52, 160, 164], "curvedmirror": 160, "curvedrefract": 160, "curvilinear": [207, 269, 270], "curving_amount": 68, "custom": [4, 9, 13, 17, 32, 33, 44, 69, 80, 88, 92, 95, 116, 124, 130, 131, 148, 150, 152, 156, 159, 205, 223, 227, 234, 241, 247, 253, 260, 265, 274, 291, 293, 299], "custom_funct": [69, 221], "custom_sin": 260, "customarili": 209, "cut": [88, 93, 94, 96, 104, 113, 208, 231, 256, 262, 297], "cut_sect": 104, "cvd": 90, "cx": [35, 89, 137], "cxd": 190, "cxx": 221, "cxx11codeprint": [43, 221], "cxx98codeprint": 221, "cxxcode": [43, 69, 221], "cy": [35, 51, 234], "cyan": 207, "cybertest": 233, "cycl": [5, 13, 69, 76, 79, 80, 86, 88, 91, 93, 124, 128, 165, 229, 259], "cycle_detect": 128, "cycle_length": 128, "cycle_list": 89, "cycle_structur": 80, "cyclic": [74, 76, 79, 80, 81, 91, 124, 128, 247, 259], "cyclic_form": [76, 80, 81], "cyclic_ord": 76, "cyclicgroup": [73, 76, 79], "cyclotom": [88, 212, 214, 215, 216, 217], "cyclotomic_field": [212, 216], "cyclotomic_poli": [88, 216, 217], "cyclotomicpolynomi": 215, "cygwin": 8, "cyl": 18, "cylind": [18, 156, 159, 275, 299], "cylindr": [152, 159, 207, 272], "cylindricaljoint": 152, "cython": [2, 30, 69, 129, 253], "cythoncodewrapp": 253, "cz": [35, 51, 91, 144, 234], "czapor": 215, "c\u2081": [291, 298], "c\u2082": [291, 298], "d": [4, 5, 7, 8, 11, 12, 13, 15, 16, 18, 30, 32, 35, 36, 39, 43, 46, 49, 51, 53, 55, 61, 68, 72, 77, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 93, 96, 98, 102, 106, 111, 113, 115, 117, 118, 119, 120, 124, 125, 127, 128, 130, 136, 140, 144, 152, 153, 154, 160, 163, 164, 170, 180, 188, 190, 191, 196, 200, 202, 206, 207, 209, 210, 211, 212, 214, 215, 216, 217, 218, 221, 223, 227, 231, 233, 234, 237, 238, 239, 240, 241, 242, 243, 245, 247, 259, 262, 265, 267, 268, 269, 270, 274, 282, 293, 298, 299, 303], "d0": 84, "d1": [68, 84, 144, 200, 208, 228, 241, 265], "d2": [84, 144, 200, 208, 228, 241, 259, 265], "d2fdx2": 287, "d2fdxdy": 88, "d3": [84, 228], "d4": [71, 117, 217, 241], "d6": 241, "d_": [84, 231], "d_0": [84, 89], "d_1": [113, 196, 217, 241], "d_1e": 241, "d_1z": 241, "d_2": [196, 217, 241], "d_3": 196, "d_4": 71, "d_6": 71, "d_i": [84, 113, 196], "d_ij": 191, "d_ip": 191, "d_j": [113, 196, 231], "d_m": 299, "d_n": [76, 117, 217], "d_o": 299, "d_qp": 191, "d_v": 113, "d_x": 299, "d_y": 299, "d_z": 299, "da": [18, 131, 237], "dadt": [18, 299], "dae": [31, 158], "dag": 15, "dagger": [168, 172, 178, 180, 183, 185, 190, 191, 221, 282], "dagum": 241, "dagum_distribut": 241, "dai": [194, 198, 237], "damp": [30, 134, 148, 299, 303], "damper": [18, 22, 46, 148, 149, 153, 158, 299, 303, 307], "damper_const": 18, "damping_coeffici": 148, "damping_forc": 148, "danger": [13, 209], "danilevski": 210, "dartmouth": 241, "dash": 68, "dat": [120, 259], "data": [14, 15, 39, 69, 79, 88, 89, 96, 115, 124, 129, 130, 132, 142, 153, 170, 207, 208, 210, 211, 212, 214, 217, 218, 221, 233, 246, 247, 252, 254, 256, 259], "databas": [221, 231], "datatyp": [130, 212, 221, 254], "date": 254, "daunt": 7, "davenport": [115, 214, 215], "davenport88": 215, "davi": 241, "david": [29, 215, 217], "davis_distribut": 241, "davisdistribut": 241, "dbase": 84, "dbinom": 130, "dc": [26, 46, 144], "dc_gain": [46, 144], "dcm": [13, 22, 30, 35, 36, 149, 152, 200, 265], "dd": [206, 226], "ddm": 210, "ddm_": 210, "ddm_berk": 210, "ddm_iadd": 210, "ddm_idet": 210, "ddm_iinv": 210, "ddm_ilu": 210, "ddm_ilu_solv": 210, "ddm_ilu_split": 210, "ddm_imatmul": 210, "ddm_imul": 210, "ddm_ineg": 210, "ddm_irmul": 210, "ddm_irref": 210, "ddm_irref_den": 210, "ddm_isub": 210, "ddm_rref": 210, "ddm_transpos": 210, "ddot": [18, 26, 35, 120, 124, 205, 221, 297, 306], "de": [11, 18, 68, 89, 93, 128, 131, 132, 134, 140, 196, 206, 218, 223, 234, 237, 259, 299], "deactiv": [18, 131, 299], "deactivation_time_const": 131, "dead": 230, "deal": [14, 21, 22, 33, 35, 36, 41, 69, 87, 88, 92, 100, 108, 113, 115, 141, 153, 154, 209, 214, 217, 234, 239, 250, 260, 262, 269, 274, 287, 289, 291, 297], "dealt": [92, 113], "debian": 221, "deboer79": 196, "debug": [6, 69, 88, 115, 130, 180, 252, 253, 262], "debug_decor": 262, "debugf": 262, "decad": 237, "decai": 115, "decent": 295, "decid": [3, 4, 9, 21, 27, 39, 41, 42, 43, 48, 68, 87, 124, 184, 211, 214, 216, 217, 221, 237, 240, 254, 293], "decim": [16, 43, 69, 88, 91, 92, 128, 130, 142, 211, 217, 291], "decimal_dig": 69, "decimal_separ": 221, "deciph": 89, "decipher_affin": 89, "decipher_atbash": 89, "decipher_bifid": 89, "decipher_bifid5": 89, "decipher_bifid6": 89, "decipher_elgam": 89, "decipher_gm": 89, "decipher_hil": 89, "decipher_kid_rsa": 89, "decipher_railf": 89, "decipher_rot13": 89, "decipher_rsa": 89, "decipher_shift": 89, "decipher_vigener": 89, "decis": [17, 58, 88, 94, 115, 230, 239, 254], "decistmt": 116, "decl1": 69, "decl2": 69, "declar": [16, 22, 30, 41, 52, 69, 101, 113, 124, 130, 145, 170, 210, 221, 228, 231, 236, 237, 238, 241, 254, 305], "decod": 89, "decode_mors": 89, "decompos": [57, 79, 80, 86, 88, 90, 94, 99, 124, 128, 175, 184, 185, 187, 212, 217, 220, 241], "decomposit": [4, 48, 53, 79, 86, 119, 120, 124, 210, 212, 214, 215, 223, 297], "decor": [3, 12, 43, 79, 88, 96, 250, 252, 257, 258, 261, 262, 284], "decoupl": 124, "decre": 113, "decreas": [18, 67, 69, 80, 214], "decrement": [69, 256], "decrypt": 89, "dedekind": 208, "dedent": [257, 262], "dedic": [5, 28, 69, 71, 213, 214, 236, 254, 270, 272], "deduc": [43, 69, 113, 118, 231, 291], "deduct": [43, 69], "deduction_stack": 70, "deem": [13, 230], "deep": [14, 16, 43, 88, 94, 118, 124, 132, 217, 228, 233, 241, 292], "deepak": 215, "deeper": [44, 245, 292], "deepest": 245, "def": [3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 39, 41, 42, 43, 63, 64, 68, 88, 93, 100, 118, 124, 128, 130, 186, 211, 217, 221, 230, 233, 240, 255, 257, 259, 260, 261, 286, 289, 292, 293, 297, 299, 310], "default": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 21, 22, 27, 32, 41, 43, 48, 52, 53, 55, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 78, 79, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 110, 115, 116, 118, 120, 123, 124, 125, 128, 129, 130, 131, 132, 134, 136, 137, 140, 142, 144, 146, 148, 149, 150, 152, 153, 154, 158, 164, 181, 183, 186, 188, 189, 191, 195, 197, 200, 202, 204, 205, 206, 207, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 222, 223, 224, 228, 229, 230, 233, 234, 237, 238, 239, 240, 241, 246, 247, 252, 253, 254, 256, 257, 259, 260, 262, 265, 286, 287, 291, 293, 296, 297, 304], "default_arrow_formatt": 68, "default_assumpt": 41, "default_curving_amount": 68, "default_curving_step": 68, "default_formatt": 68, "default_sort_kei": [13, 68, 77, 88, 245], "defaultdict": [41, 88, 259], "defeat": [3, 12, 237], "defect": 237, "defective_matrix": 237, "defens": 12, "defer": 124, "defici": [124, 128, 240], "deficientnumb": 128, "defin": [3, 4, 5, 11, 12, 13, 15, 16, 18, 21, 22, 23, 24, 28, 30, 31, 32, 33, 35, 36, 37, 39, 41, 42, 57, 60, 61, 63, 64, 67, 69, 70, 71, 72, 78, 79, 80, 83, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 111, 113, 115, 116, 120, 124, 128, 131, 132, 134, 136, 137, 142, 148, 149, 151, 152, 155, 156, 158, 159, 162, 168, 170, 172, 177, 180, 186, 188, 189, 193, 194, 195, 196, 197, 198, 199, 200, 204, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 223, 224, 227, 228, 229, 231, 233, 234, 237, 239, 240, 241, 242, 246, 247, 253, 254, 255, 259, 260, 261, 262, 265, 267, 268, 269, 270, 271, 272, 274, 275, 289, 291, 297, 300, 304, 305, 307, 309, 311], "defined_fact": 41, "definit": [4, 13, 14, 15, 16, 18, 28, 35, 36, 42, 61, 65, 69, 70, 79, 80, 85, 87, 88, 90, 91, 93, 94, 96, 101, 104, 111, 113, 115, 119, 120, 124, 128, 130, 152, 158, 193, 196, 199, 200, 208, 209, 212, 217, 218, 221, 228, 241, 242, 253, 254, 255, 259, 260, 265, 269, 270, 271, 272, 287, 297, 300, 302, 309, 310], "definite_matrix": 65, "definiteness_of_a_matrix": 124, "deflat": [212, 217], "deflect": [98, 104, 136, 137], "deflection_jump": 136, "defn": 214, "deform": [113, 137], "deg": [22, 115, 142, 209, 212, 214, 216, 217], "deg2rad": [22, 299], "degbound": 214, "degener": [61, 239, 240], "degre": [22, 31, 32, 36, 39, 48, 70, 71, 79, 86, 87, 93, 96, 104, 115, 124, 136, 138, 140, 142, 144, 149, 152, 153, 158, 163, 208, 209, 212, 214, 216, 217, 220, 221, 224, 227, 230, 231, 233, 234, 237, 239, 241, 265, 299, 301, 304, 305, 306], "degree_list": [212, 217], "degree_offset": 115, "degroote2016": [18, 299], "dejavu": 8, "dejavufont": 8, "del": [196, 256, 265, 273, 297], "delai": [18, 27, 88, 131, 142, 230, 252, 287], "delastel": 89, "delet": [12, 72, 117, 124, 218, 262, 297], "delete_doubl": 117, "deletechar": 262, "deliber": 216, "delic": [115, 208], "delimit": [5, 88, 221], "delin": 3, "delop": [265, 271, 272], "deloper": [265, 273], "delta": [13, 16, 27, 69, 72, 82, 93, 111, 113, 117, 142, 163, 191, 206, 210, 221, 228, 234, 237, 241, 242, 247], "delta_": [96, 188, 196, 206], "delta_fn": 69, "delta_funct": [11, 96, 115], "delta_i": 231, "delta_rang": [96, 191], "deltafunct": [96, 115], "deltaintegr": 115, "demand": [43, 60], "demonstr": [4, 5, 16, 18, 22, 27, 41, 43, 46, 48, 52, 53, 54, 79, 80, 88, 93, 115, 128, 149, 152, 208, 211, 271, 297, 301, 303, 305, 306, 307], "den": [144, 210, 212, 233, 237], "den_list": 144, "den_reduc": 210, "dena": 237, "denest": [13, 88, 217, 233, 239, 259], "deni": 237, "denom": [88, 210, 211, 212, 216, 233], "denomin": [16, 88, 92, 96, 115, 128, 144, 150, 209, 210, 211, 212, 214, 216, 217, 220, 221, 230, 231, 233, 234, 237, 239, 297], "denoms_invert": 210, "denot": [13, 15, 16, 33, 39, 79, 80, 88, 90, 96, 110, 111, 113, 115, 117, 118, 124, 128, 130, 140, 144, 148, 159, 196, 200, 207, 208, 209, 214, 216, 224, 228, 229, 231, 237, 241, 246, 247, 265, 267, 269, 270, 272, 274], "dens": [15, 120, 122, 124, 210, 216, 217, 242, 260, 280, 292], "densearith": 214, "densebas": 214, "densematrix": [119, 124], "densetool": 214, "densiti": [241, 252, 275, 304], "denz": 144, "dep": [88, 237], "depart": 148, "depend": [6, 9, 11, 13, 14, 15, 16, 18, 22, 23, 25, 33, 37, 41, 43, 45, 48, 53, 54, 55, 59, 67, 69, 70, 79, 80, 87, 88, 89, 90, 93, 94, 96, 100, 105, 112, 113, 115, 116, 117, 124, 128, 129, 130, 134, 142, 146, 149, 151, 153, 154, 158, 163, 164, 165, 180, 189, 191, 193, 195, 196, 205, 207, 209, 210, 212, 214, 216, 217, 218, 220, 221, 222, 227, 231, 233, 234, 237, 238, 239, 240, 241, 252, 253, 254, 255, 259, 260, 272, 274, 275, 291, 302, 304, 306], "depict": [33, 136, 240, 274], "deploy": 59, "deprec": [4, 6, 17, 27, 50, 62, 80, 88, 115, 118, 124, 128, 147, 151, 152, 153, 207, 217, 221, 241, 247, 250, 251, 255, 257, 260, 282], "deprecat": 3, "deprecated_since_vers": [3, 250, 255, 257], "deprecationwarn": [149, 252, 257], "depth": [4, 5, 14, 16, 17, 58, 79, 88, 207, 208, 221, 303], "der": [78, 79], "derang": [93, 259], "derefer": 221, "dereferenc": 221, "derek": [70, 78], "deriv": [0, 4, 11, 12, 13, 15, 17, 18, 21, 23, 25, 26, 27, 32, 33, 35, 40, 43, 52, 67, 68, 69, 72, 78, 79, 88, 90, 94, 95, 96, 98, 105, 110, 111, 113, 115, 116, 118, 120, 124, 130, 132, 134, 140, 144, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 180, 189, 193, 196, 197, 200, 202, 204, 205, 207, 208, 209, 210, 212, 214, 216, 217, 218, 221, 223, 231, 233, 237, 238, 239, 243, 248, 254, 265, 268, 269, 288, 291, 298, 299, 300, 303, 304, 305, 306, 307, 309], "derivand": 248, "derive_by_arrai": 242, "derived_dim": 193, "derived_seri": [78, 79], "derived_subgroup": 79, "derived_unit": 199, "descend": [88, 208, 216, 254], "descent": [80, 234], "descr": 199, "describ": [3, 4, 5, 7, 11, 13, 14, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 32, 33, 35, 36, 41, 42, 43, 48, 55, 61, 68, 70, 78, 79, 80, 82, 83, 86, 87, 88, 89, 93, 96, 98, 103, 104, 113, 115, 124, 127, 128, 134, 144, 148, 149, 151, 152, 153, 154, 155, 156, 158, 170, 191, 196, 200, 208, 210, 211, 214, 216, 222, 228, 231, 233, 234, 237, 240, 241, 245, 254, 259, 260, 265, 267, 272, 287, 304, 306, 307, 309, 311], "descript": [0, 3, 4, 5, 13, 14, 35, 36, 49, 58, 68, 70, 78, 96, 115, 128, 163, 181, 188, 199, 206, 221, 245, 252, 254, 256, 257, 276, 294, 300], "design": [2, 3, 4, 13, 14, 15, 17, 30, 31, 38, 42, 43, 46, 49, 54, 58, 65, 70, 78, 88, 124, 127, 130, 133, 134, 158, 210, 211, 215, 221, 226, 231, 237, 240, 291, 292, 296, 305], "desir": [4, 13, 14, 16, 23, 27, 35, 36, 39, 43, 50, 55, 57, 60, 79, 80, 88, 89, 91, 92, 93, 94, 98, 102, 104, 118, 124, 127, 128, 129, 149, 151, 153, 154, 155, 158, 176, 200, 210, 212, 214, 216, 217, 218, 221, 222, 224, 229, 233, 237, 239, 240, 253, 255, 256, 259, 272, 286], "desktop": 9, "despit": [3, 48, 57, 88, 297], "destin": 254, "destroi": [191, 230], "destruct": 217, "det": [30, 36, 53, 61, 124, 125, 210, 293], "det_lu": 124, "det_lu_decomposit": 124, "det_method": 124, "deta": 210, "detach": 8, "detail": [0, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 17, 22, 28, 30, 38, 41, 43, 58, 68, 79, 88, 90, 93, 95, 96, 113, 114, 115, 116, 124, 128, 142, 152, 153, 163, 181, 185, 200, 202, 206, 207, 208, 210, 214, 216, 223, 228, 233, 234, 235, 237, 238, 241, 246, 247, 252, 255, 257, 260, 270, 271, 272, 273, 276, 280, 287, 289, 293, 294, 296, 300, 305], "detect": [2, 8, 60, 67, 120, 124, 128, 130, 207, 211, 221, 237, 238, 240, 242, 259, 296], "determin": [3, 5, 13, 14, 15, 18, 28, 31, 33, 37, 39, 41, 42, 43, 46, 48, 51, 52, 53, 56, 62, 64, 65, 66, 67, 69, 70, 71, 72, 79, 88, 89, 90, 91, 92, 94, 98, 99, 101, 103, 104, 115, 116, 117, 120, 124, 128, 130, 136, 137, 144, 148, 150, 152, 154, 155, 156, 158, 170, 183, 185, 187, 188, 191, 194, 196, 200, 207, 208, 209, 210, 214, 216, 217, 221, 227, 228, 229, 231, 233, 234, 236, 237, 239, 240, 241, 245, 257, 259, 265, 272, 275, 289, 297, 311], "determinisit": 221, "determinist": [41, 79, 115, 128, 214, 215], "deterministic_vari": 128, "detool": 237, "deutil": [237, 238], "dev": [2, 3, 8, 9, 11, 257], "devel": [5, 206], "develop": [0, 3, 4, 5, 6, 10, 15, 18, 19, 30, 39, 41, 43, 67, 70, 86, 130, 138, 195, 207, 208, 211, 214, 239, 240, 291, 294, 299], "deviat": [5, 164, 241], "devis": 39, "df": [39, 90, 237], "dfdx": 287, "dfdxcheck": 39, "dfm": 210, "dfrac": [130, 241], "dft": [13, 91, 147], "dfx": 88, "dg": 90, "dh_private_kei": 89, "dh_public_kei": 89, "dh_shared_kei": 89, "di": [9, 217], "di1": 79, "di2": 79, "di3": 79, "di4": 79, "diag": [30, 120, 124, 127, 210, 247, 293], "diag_block": 120, "diagmat": 30, "diagon": [65, 93, 119, 120, 124, 127, 158, 163, 210, 243], "diagonal_ax": 242, "diagonal_indic": 243, "diagonal_matrix": 65, "diagonal_solv": [119, 124], "diagonalhandl": 65, "diagonaliz": [124, 293], "diagonalpred": 65, "diagram": [23, 46, 69, 77, 117, 136, 138, 148, 151, 156, 171, 246, 270, 292, 304, 306, 307], "diagram_draw": 68, "diagram_format": 68, "diagramgrid": 68, "diamet": [88, 98], "diaz": 215, "dic": 214, "dice": 241, "dict": [13, 14, 16, 37, 41, 48, 51, 52, 56, 57, 69, 71, 80, 88, 89, 90, 104, 105, 118, 124, 128, 130, 132, 153, 154, 171, 183, 186, 197, 199, 200, 207, 210, 211, 212, 214, 216, 217, 218, 219, 221, 233, 234, 237, 238, 239, 240, 241, 245, 252, 253, 259, 265, 298], "dict_iter": 234, "dict_merg": 259, "dictionari": [2, 12, 13, 14, 15, 17, 22, 25, 27, 36, 51, 55, 57, 68, 69, 77, 79, 80, 86, 88, 93, 102, 104, 115, 117, 124, 127, 128, 130, 136, 150, 153, 154, 158, 181, 191, 200, 207, 209, 210, 212, 214, 216, 217, 219, 221, 228, 233, 234, 237, 238, 239, 240, 241, 245, 247, 252, 256, 259, 260, 265, 286, 293, 302, 306, 309], "did": [2, 5, 11, 14, 21, 42, 88, 115, 128, 196, 214, 218, 229, 239, 250, 260, 289, 291, 297, 309], "didn": [12, 27, 115, 124], "die": [13, 216, 241], "die_rol": 241, "diedistribut": 241, "diepspac": 241, "dietrich": 74, "dif": 88, "diff": [4, 9, 11, 12, 13, 14, 15, 18, 21, 30, 33, 36, 39, 43, 46, 52, 55, 67, 69, 88, 93, 94, 95, 96, 105, 110, 115, 120, 124, 132, 148, 150, 155, 189, 200, 202, 205, 207, 212, 217, 220, 221, 231, 237, 238, 239, 242, 243, 248, 269, 272, 287, 291, 298, 299, 304, 306], "diff_oper": 221, "diffeq": 298, "differ": [3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 27, 31, 32, 33, 36, 37, 38, 40, 42, 43, 48, 50, 51, 52, 53, 54, 55, 56, 60, 68, 69, 70, 71, 77, 78, 79, 80, 84, 87, 88, 89, 90, 92, 93, 94, 96, 99, 101, 103, 104, 108, 110, 112, 113, 115, 116, 117, 118, 120, 124, 128, 129, 130, 134, 136, 142, 144, 149, 153, 155, 158, 163, 164, 176, 177, 185, 186, 189, 191, 193, 195, 196, 200, 201, 204, 205, 207, 208, 209, 210, 212, 214, 216, 217, 218, 220, 221, 222, 223, 224, 226, 228, 229, 230, 233, 234, 237, 238, 239, 240, 241, 242, 245, 247, 250, 252, 253, 254, 255, 256, 257, 259, 260, 265, 268, 272, 274, 288, 289, 291, 292, 293, 296, 297, 301, 302, 303, 308], "difference_delta": 226, "differencedelta": 226, "differenti": [4, 5, 12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 36, 46, 49, 67, 88, 93, 94, 96, 105, 106, 108, 111, 115, 130, 131, 132, 134, 144, 151, 152, 153, 158, 180, 186, 200, 202, 204, 208, 214, 218, 220, 221, 226, 231, 233, 237, 238, 265, 272, 273, 276, 283, 287, 288, 291, 300, 302, 306, 309], "differentialoper": [110, 111, 180], "differentialoperatoralgebra": 111, "differentiate_finit": [67, 88, 287], "differnc": 212, "diffgeom": 90, "diffi": 89, "difficult": [5, 11, 12, 13, 14, 22, 41, 55, 57, 88, 124, 218, 231, 237, 238, 240, 253, 260, 275, 291, 297], "difficulti": [90, 128], "diffus": [18, 131], "dig": [43, 69, 292], "digamma": [4, 93, 96, 221], "digamma_funct": 96, "digammafunct": 96, "digit": [4, 11, 14, 15, 16, 23, 54, 69, 88, 89, 91, 92, 98, 115, 118, 128, 151, 200, 211, 217, 228, 233, 259, 286], "digit_2txt": 221, "digraph": [221, 259, 296], "dihedr": [71, 74, 76, 79, 80], "dihedral2": 79, "dihedral_group": [76, 79], "dihedralgroup": [76, 79, 86], "dilbert": 115, "dim": [69, 90, 103, 124, 129, 193, 199, 221, 244, 247, 280], "dim1": 246, "dim2": 246, "dim_can_vector": 193, "dim_handl": 221, "dim_si": 193, "dim_vector": 193, "dimens": [53, 69, 72, 89, 90, 96, 97, 99, 101, 102, 103, 105, 117, 120, 124, 127, 131, 134, 136, 145, 165, 175, 177, 180, 185, 194, 195, 198, 199, 200, 207, 210, 221, 234, 237, 239, 241, 242, 243, 246, 247, 254, 265, 268, 270, 282, 306], "dimension": [30, 33, 34, 53, 67, 69, 72, 90, 100, 101, 102, 103, 104, 120, 124, 137, 145, 165, 167, 177, 193, 203, 207, 208, 214, 216, 217, 220, 221, 239, 240, 242, 243, 247, 253, 274, 298], "dimension_system": 199, "dimensional_depend": 193, "dimensionless": [18, 195, 196], "dimensions": 193, "dimensionsystem": 193, "diment": 124, "dimino": [70, 79], "dimitar": 230, "dimsys_si": [193, 194], "diop_bf_dn": 234, "diop_dn": 234, "diop_general_pythagorean": 234, "diop_general_sum_of_even_pow": 234, "diop_general_sum_of_squar": 234, "diop_linear": 234, "diop_quadrat": 234, "diop_solv": 234, "diop_ternary_quadrat": 234, "diop_ternary_quadratic_norm": 234, "diophantin": [49, 50, 128, 214, 235, 277], "diophantineequ": 234, "diophantineequationtyp": 234, "diophantinesolutionset": 234, "diophantu": 234, "diplform": 110, "diploma": 265, "diplomat": 89, "dir": [16, 88, 136, 223, 228, 259], "dir_vec": 18, "dirac": [124, 142, 146, 147, 189, 221], "diracdelta": [4, 11, 96, 115, 186, 191, 221], "direct": [3, 4, 5, 13, 14, 15, 18, 21, 30, 33, 35, 36, 40, 55, 61, 63, 64, 68, 73, 76, 79, 84, 87, 88, 90, 92, 94, 97, 101, 102, 103, 104, 118, 124, 131, 132, 134, 136, 137, 138, 140, 148, 149, 152, 155, 156, 158, 159, 177, 200, 208, 210, 211, 214, 218, 228, 231, 239, 247, 250, 259, 265, 270, 271, 274, 299, 302, 304, 306, 310], "direct_product": 247, "direct_sum": 177, "directed_complete_partial_ord": 94, "direction": 36, "direction_cosin": [101, 103], "direction_ratio": [101, 103], "directional_deriv": 272, "directli": [2, 3, 4, 11, 12, 13, 14, 15, 16, 18, 22, 32, 39, 41, 42, 43, 48, 59, 63, 64, 67, 68, 69, 79, 87, 88, 90, 94, 99, 120, 124, 128, 130, 131, 148, 156, 159, 174, 177, 189, 194, 200, 204, 207, 208, 210, 211, 212, 214, 216, 217, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 252, 253, 254, 255, 256, 257, 287, 298], "director": 98, "director_circl": 98, "directori": [2, 4, 5, 7, 8, 11, 12, 59, 64, 69, 130, 237, 252, 253, 262], "directproduct": [73, 76], "directrix": 98, "directsumhilbertspac": 177, "dirichlet": [87, 96, 241], "dirichlet_distribut": 241, "dirichlet_eta": [96, 221], "dirichlet_eta_funct": 96, "dirichletdistribut": 241, "dirichleteta": 221, "disabl": [9, 12, 15, 55, 88, 89, 113, 115, 128, 214, 217, 221, 229, 237, 239, 250, 252, 255, 259, 260], "disable_view": 255, "disadvantag": [14, 88], "disallow": [14, 43, 88, 217, 222, 233, 255], "disambigu": 88, "disc": [35, 136, 301, 305], "discard": [88, 210, 216, 221, 240], "discard_befor": 216, "discern": [62, 64], "disciplin": 208, "disco": 215, "discontinu": [13, 67, 92, 94, 115, 136, 224, 239], "discourag": [15, 41, 88, 233], "discov": [21, 89, 113, 245, 293], "discoveri": [214, 293], "discrat": 207, "discrep": 195, "discret": [13, 67, 69, 70, 78, 80, 88, 89, 96, 128, 144, 191, 196, 207, 223, 226, 237, 239, 240, 277, 286], "discrete_fourier_transform_": 91, "discrete_log": 128, "discrete_uniform_distribut": 241, "discretedistributionhandmad": 241, "discretelogarithm": 128, "discretemarkovchain": 241, "discreterv": 241, "discreteuniform": 241, "discreteuniformdistribut": 241, "discrimin": [128, 212, 214, 216, 217], "discrit": 39, "discuss": [0, 3, 4, 5, 7, 11, 12, 13, 16, 17, 18, 21, 22, 23, 27, 28, 32, 34, 35, 36, 37, 39, 41, 42, 43, 58, 70, 79, 89, 96, 128, 133, 151, 153, 203, 211, 247, 256, 276, 286, 288, 289, 291, 292, 294, 296, 297], "disguis": 113, "disjoint": [65, 68, 77, 80, 217, 229, 259], "disjoint_set": 229, "disjoint_union": 229, "disjointunion": 229, "disjunct": 118, "disk": [69, 89, 229, 240, 260], "dispatch": [12, 15, 63, 64, 65, 88, 89, 186, 221, 240, 256], "dispers": [215, 241], "dispersionset": 217, "displac": [33, 35, 148, 274], "displai": [4, 5, 7, 11, 16, 41, 42, 55, 88, 89, 92, 113, 117, 136, 137, 142, 162, 195, 200, 204, 205, 207, 211, 212, 221, 229, 245, 252], "displayhook": [221, 252], "disregard": 68, "diss": 241, "dissimilar": 239, "dist": 241, "distanc": [18, 21, 33, 43, 68, 72, 80, 98, 101, 102, 103, 104, 136, 137, 147, 148, 152, 156, 159, 160, 164, 194, 204, 274, 306, 307], "distinct": [3, 5, 14, 15, 35, 37, 41, 43, 56, 69, 79, 80, 88, 89, 93, 101, 113, 118, 124, 128, 158, 211, 216, 217, 221, 229, 231, 297], "distinguish": [11, 22, 38, 41, 42, 68, 79, 92, 117, 190, 196, 208], "distract": 4, "distribut": [2, 8, 59, 79, 86, 88, 96, 104, 115, 136, 137, 138, 190, 209, 212, 217, 221, 247], "distribute_and_over_or": 118, "distribute_or_over_and": 118, "distribute_order_term": [88, 233], "distribute_xor_over_and": 118, "distributedmodul": 214, "distributionshandbook": 241, "distutil": 253, "div": [88, 130, 209, 211, 212, 217, 221, 233, 292], "divaugmentedassign": 69, "diverg": [87, 96, 160, 201, 265, 268], "divergence_theorem": 275, "divid": [13, 15, 79, 87, 88, 89, 93, 104, 124, 128, 153, 154, 195, 196, 209, 210, 211, 212, 214, 216, 217, 221, 237, 256, 292], "divide_last": 210, "dividend": [88, 212], "divis": [12, 16, 43, 88, 124, 128, 153, 193, 195, 208, 210, 211, 212, 213, 214, 217, 219, 221, 234, 237, 239, 252, 260, 289, 292], "divisisor": 128, "divisor": [43, 65, 79, 88, 89, 93, 124, 128, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220], "divisor_count": [93, 128], "divisor_funct": [93, 128], "divisor_sigma": [13, 15, 93, 128], "divmod": [209, 211, 212], "dixon": [210, 215], "django": 289, "djoyc": 241, "dk": [61, 136, 216], "dkei": 88, "dl": [36, 87, 210, 212, 215, 233], "dlmf": [4, 94, 96], "dlp": 89, "dm": [93, 124, 128, 210, 216, 299], "dmc": [309, 310, 311], "dmdomainerror": [125, 210], "dmension": 117, "dmf": 212, "dmnc": 124, "dmnoninvertiblematrixerror": 210, "dmnonsquarematrixerror": 210, "dmnotafield": 210, "dmp": [88, 208, 212, 217], "dmp_": [211, 214], "dmp_ab": 214, "dmp_add": 214, "dmp_add_ground": 214, "dmp_add_mul": 214, "dmp_add_term": 214, "dmp_apply_pair": 214, "dmp_cancel": 214, "dmp_clear_denom": 214, "dmp_compos": 214, "dmp_content": 214, "dmp_convert": 214, "dmp_copi": 214, "dmp_deflat": 214, "dmp_degre": 214, "dmp_degree_in": 214, "dmp_degree_list": 214, "dmp_diff": 214, "dmp_diff_eval_in": 214, "dmp_diff_in": 214, "dmp_discrimin": 214, "dmp_div": 214, "dmp_eject": 214, "dmp_euclidean_pr": 214, "dmp_eval": 214, "dmp_eval_in": 214, "dmp_eval_tail": 214, "dmp_exclud": 214, "dmp_expand": 214, "dmp_exquo": 214, "dmp_exquo_ground": 214, "dmp_ext_factor": 214, "dmp_factor_list": 214, "dmp_factor_list_includ": 214, "dmp_ff_div": 214, "dmp_ff_prs_gcd": 214, "dmp_from_dict": 214, "dmp_from_sympi": 214, "dmp_gcd": 214, "dmp_gcdex": 214, "dmp_gf_factor": 214, "dmp_gf_sqf_list": 214, "dmp_gf_sqf_part": 214, "dmp_gff_list": 214, "dmp_ground": 214, "dmp_ground_cont": 214, "dmp_ground_extract": 214, "dmp_ground_lc": 214, "dmp_ground_mon": 214, "dmp_ground_nth": 214, "dmp_ground_p": 214, "dmp_ground_primit": 214, "dmp_ground_tc": 214, "dmp_ground_trunc": 214, "dmp_half_gcdex": 214, "dmp_includ": 214, "dmp_inflat": 214, "dmp_inject": 214, "dmp_inner_gcd": 214, "dmp_inner_subresult": 214, "dmp_integr": 214, "dmp_integrate_in": 214, "dmp_invert": 214, "dmp_irreducible_p": 214, "dmp_l1_norm": 214, "dmp_lc": 214, "dmp_lcm": 214, "dmp_lift": 214, "dmp_list_term": 214, "dmp_max_norm": 214, "dmp_mul": 214, "dmp_mul_ground": 214, "dmp_mul_term": 214, "dmp_multi_defl": 214, "dmp_neg": 214, "dmp_negative_p": 214, "dmp_nest": 214, "dmp_norm": 214, "dmp_normal": 214, "dmp_nth": 214, "dmp_one": 214, "dmp_one_p": 214, "dmp_pdiv": 214, "dmp_permut": 214, "dmp_pexquo": 214, "dmp_positive_p": 214, "dmp_pow": 214, "dmp_pquo": 214, "dmp_prem": 214, "dmp_primit": 214, "dmp_primitive_pr": 214, "dmp_prs_result": 214, "dmp_python": [13, 208, 211, 212], "dmp_qq_collins_result": 214, "dmp_qq_heu_gcd": 214, "dmp_qq_i_factor": 214, "dmp_quo": 214, "dmp_quo_ground": 214, "dmp_rais": 214, "dmp_rem": 214, "dmp_result": 214, "dmp_revert": 214, "dmp_rr_div": 214, "dmp_rr_prs_gcd": 214, "dmp_slice": 214, "dmp_sqf_list": 214, "dmp_sqf_list_includ": 214, "dmp_sqf_norm": 214, "dmp_sqf_p": 214, "dmp_sqf_part": 214, "dmp_sqr": 214, "dmp_strip": 214, "dmp_sub": 214, "dmp_sub_ground": 214, "dmp_sub_mul": 214, "dmp_sub_term": 214, "dmp_subresult": 214, "dmp_swap": 214, "dmp_tc": 214, "dmp_terms_gcd": 214, "dmp_to_dict": 214, "dmp_to_tupl": 214, "dmp_trial_divis": 214, "dmp_true_lt": 214, "dmp_trunc": 214, "dmp_valid": 214, "dmp_zero": 214, "dmp_zero_p": 214, "dmp_zz_collins_result": 214, "dmp_zz_diophantin": 214, "dmp_zz_factor": 214, "dmp_zz_heu_gcd": 214, "dmp_zz_i_factor": 214, "dmp_zz_mignotte_bound": 214, "dmp_zz_modular_result": 214, "dmp_zz_wang": 214, "dmp_zz_wang_hensel_lift": 214, "dmp_zz_wang_lead_coeff": 214, "dmp_zz_wang_non_divisor": 214, "dmp_zz_wang_test_point": 214, "dmrankerror": [210, 216], "dmshapeerror": [125, 210], "dmtc": 259, "dmvalueerror": 210, "dn": [80, 241], "dnf": [8, 118], "dnh": 25, "do": [1, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 25, 28, 30, 33, 35, 36, 39, 41, 42, 43, 44, 45, 48, 51, 52, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 80, 84, 87, 88, 89, 90, 91, 94, 96, 98, 100, 103, 104, 107, 113, 115, 116, 118, 120, 121, 124, 125, 128, 129, 130, 141, 144, 149, 153, 158, 163, 166, 171, 175, 180, 183, 185, 187, 193, 195, 196, 199, 201, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 222, 224, 228, 229, 230, 231, 233, 234, 237, 238, 239, 243, 246, 247, 250, 252, 253, 255, 257, 259, 260, 262, 268, 270, 271, 272, 274, 286, 287, 289, 290, 291, 292, 293, 295, 297, 299, 304, 306, 307, 310], "do1": 69, "do2": 69, "do_sub": 228, "dobelman": 241, "doc": [2, 3, 4, 5, 7, 9, 11, 12, 16, 45, 58, 69, 79, 87, 88, 104, 116, 193, 211, 213, 234, 237, 252, 253, 255, 257, 259, 265, 270, 283, 296], "docbook": 8, "docbook2x": 8, "dockerfil": 8, "docstr": [3, 5, 6, 7, 11, 12, 13, 16, 18, 28, 43, 50, 68, 69, 81, 88, 110, 113, 115, 124, 128, 133, 139, 143, 145, 151, 161, 178, 184, 185, 187, 203, 217, 224, 227, 228, 230, 233, 237, 238, 239, 240, 246, 247, 252, 255, 260, 262, 266, 273, 276, 280, 282], "docstring_limit": 260, "doctest": [3, 4, 5, 11, 16, 43, 81, 96, 124, 128, 180, 191, 217, 237, 252, 255, 257, 296], "doctest_arg": 252, "doctest_depends_on": [12, 255], "doctest_kwarg": 252, "doctestpars": 252, "doctestrunn": 252, "document": [6, 10, 12, 13, 14, 15, 19, 21, 23, 25, 26, 28, 30, 32, 33, 34, 35, 36, 40, 43, 49, 63, 64, 65, 79, 84, 88, 89, 94, 95, 96, 100, 110, 113, 114, 116, 120, 124, 128, 129, 133, 137, 151, 153, 166, 180, 186, 203, 205, 206, 207, 208, 210, 211, 212, 214, 215, 217, 221, 231, 235, 237, 239, 240, 250, 252, 254, 255, 257, 259, 265, 272, 273, 276, 287, 289, 290, 296, 297], "documentclass": [116, 205, 221], "docutil": 5, "dod": 210, "doe": [2, 4, 5, 7, 9, 11, 12, 13, 14, 15, 18, 21, 22, 24, 28, 35, 36, 38, 41, 42, 43, 48, 49, 55, 56, 57, 58, 59, 60, 63, 64, 67, 68, 69, 70, 79, 80, 84, 86, 87, 88, 89, 90, 92, 94, 96, 98, 99, 102, 104, 113, 115, 118, 124, 127, 128, 130, 146, 150, 153, 154, 158, 171, 175, 181, 185, 187, 190, 207, 209, 210, 211, 212, 214, 216, 217, 218, 221, 228, 229, 230, 231, 233, 234, 236, 237, 239, 242, 246, 247, 250, 252, 254, 256, 259, 260, 262, 265, 267, 270, 286, 287, 289, 292, 293, 296, 297, 298, 302, 309], "doesn": [3, 4, 12, 13, 14, 16, 22, 27, 30, 36, 43, 48, 69, 112, 131, 159, 209, 218, 220, 230, 233, 240, 298, 306], "dof": 304, "doi": [0, 4, 61, 67, 74, 80, 87, 124, 128, 148, 154, 210, 212, 215, 230, 233, 234, 241, 259, 302, 303], "doit": [14, 18, 46, 87, 88, 90, 93, 94, 96, 115, 120, 132, 144, 168, 170, 172, 183, 185, 188, 189, 191, 200, 206, 217, 223, 228, 233, 237, 238, 241, 243, 265, 268, 269, 271, 272, 287, 292], "doit_numer": 88, "dok": [124, 127, 210], "dollar": [5, 12, 291], "dom": [211, 212, 214, 229], "domain": [2, 4, 11, 13, 15, 22, 30, 39, 43, 46, 48, 53, 67, 68, 88, 89, 91, 93, 94, 96, 107, 109, 110, 113, 115, 120, 124, 125, 128, 141, 144, 207, 208, 210, 213, 214, 216, 218, 219, 236, 237, 239, 241, 283, 293, 298], "domain_check": 240, "domain_or_field": 212, "domain_or_r": [208, 212], "domainel": [210, 211, 212, 219], "domainerror": [210, 214, 217], "domainmatrix": [13, 53, 119, 124, 213, 216, 219, 283], "domainscalar": 210, "domin": [113, 124, 226, 228], "dominik": [88, 223], "don": [3, 11, 12, 13, 16, 21, 22, 32, 35, 36, 42, 43, 64, 69, 96, 113, 118, 124, 129, 130, 132, 211, 221, 231, 240, 242, 250, 255, 274, 286, 287, 291, 292, 297], "donal": 217, "donald": [215, 256], "donaldlab": 215, "done": [3, 4, 9, 11, 12, 13, 14, 15, 16, 18, 22, 28, 30, 33, 35, 36, 39, 43, 63, 64, 66, 67, 68, 69, 79, 81, 86, 88, 89, 90, 93, 96, 99, 100, 113, 115, 124, 128, 133, 152, 153, 158, 177, 186, 187, 188, 191, 193, 194, 200, 207, 208, 210, 214, 217, 218, 220, 221, 222, 230, 233, 234, 237, 239, 240, 241, 246, 247, 252, 253, 256, 260, 269, 270, 286, 289, 291, 292, 293, 302, 310], "dont_accept_blanklin": 252, "dont_accept_true_for_1": 252, "dontcar": 118, "door": 135, "doprint": [69, 221], "dorin": 234, "doron": 87, "dot": [18, 25, 26, 27, 30, 32, 35, 36, 79, 80, 84, 86, 89, 101, 103, 110, 124, 144, 149, 153, 155, 158, 175, 200, 202, 205, 206, 208, 209, 214, 217, 221, 240, 241, 259, 265, 269, 271, 272, 299, 302, 304, 306, 309, 310, 311], "dot_rot_grad_ynm": 206, "dotprint": [12, 292, 296], "dotprodsimp": 124, "dotsb": [93, 223], "dotsc": [93, 223], "doubl": [4, 5, 8, 23, 35, 55, 67, 69, 84, 88, 89, 93, 124, 130, 151, 152, 210, 211, 221, 230, 231, 254, 297, 311], "double_coset_can_rep": 84, "double_factori": 93, "double_pendulum": 22, "doubli": 128, "doubt": [11, 22, 118], "dover": 237, "down": [3, 4, 8, 11, 12, 35, 36, 41, 93, 120, 146, 207, 212, 223, 229, 231, 233, 237, 256, 293, 297, 306], "download": [5, 7, 9, 59, 68, 110, 230, 237, 265, 291], "downsid": [11, 293], "downstream": [13, 41], "downward": [136, 137, 138, 140, 216], "doy": 79, "dozen": [3, 15, 43, 297], "dp": [43, 69, 88, 91, 96, 128, 211, 212, 239, 255], "dpi": [116, 205], "dpll": 2, "dq_dict": 306, "dqdt": 18, "dr": [68, 90, 221, 237], "draft": 11, "drag": 207, "dramat": 256, "drastic": 206, "draw": [136, 138, 140, 171, 221, 241], "drawer": 68, "drawn": [68, 79, 117, 207, 211, 219], "dreal": 221, "drep": 210, "drho": 90, "driver": [221, 253], "drop": [8, 11, 94, 115, 129, 212, 214, 309], "drop_to_ground": 212, "dsign": 69, "dsolv": [4, 12, 15, 55, 237, 238, 239, 287, 291, 298], "dsolve_system": 237, "dt": [18, 30, 32, 35, 36, 46, 55, 90, 96, 131, 200, 202, 217, 237, 297, 306], "dt2": 30, "dth": 39, "dtheta": 90, "dtmc": 241, "dtype": [14, 124, 129, 208, 210, 211, 212, 221, 260], "du": 238, "dual": [124, 183, 189], "dual_class": 189, "duart": 237, "dudt": 18, "due": [4, 8, 12, 13, 14, 18, 22, 27, 33, 36, 39, 43, 54, 67, 69, 71, 78, 79, 88, 90, 105, 124, 128, 136, 138, 140, 158, 164, 191, 211, 212, 217, 221, 224, 234, 236, 238, 241, 257, 268, 274, 297, 299, 302], "duf": [148, 301, 305], "duffingspr": [148, 303], "duke": 215, "dum": 247, "dummi": [15, 22, 30, 69, 84, 87, 88, 94, 113, 115, 124, 186, 191, 207, 212, 216, 217, 218, 227, 228, 229, 231, 233, 237, 240, 245, 247, 250, 254, 259, 260], "dummifi": 260, "dummy_eq": [12, 88], "dummy_index": 88, "dummy_nam": [13, 247], "dummy_vari": 87, "dummywrapp": 253, "dump_c": [253, 254], "dump_cod": 254, "dump_f95": 254, "dump_h": 254, "dump_jl": 254, "dump_m": 254, "dump_pyx": 253, "dump_r": 254, "dup": [79, 212], "dup_": [211, 214], "dup__": 214, "dup_cont": 214, "dup_cyclotomic_p": 214, "dup_decompos": 214, "dup_ext_factor": 214, "dup_extract": 214, "dup_factor_list": [211, 214], "dup_factor_list_includ": 214, "dup_flint": [13, 212], "dup_gf_factor": 214, "dup_gf_sqf_list": 214, "dup_gf_sqf_part": 214, "dup_gff_list": 214, "dup_irreducible_p": 214, "dup_lshift": 214, "dup_mirror": 214, "dup_mon": 214, "dup_primit": 214, "dup_qq_i_factor": 214, "dup_random": 214, "dup_real_imag": 214, "dup_revers": 214, "dup_rshift": 214, "dup_scal": 214, "dup_shift": 214, "dup_sign_vari": 214, "dup_sqf_list": 214, "dup_sqf_list_includ": 214, "dup_sqf_norm": 214, "dup_sqf_p": 214, "dup_sqf_part": 214, "dup_transform": 214, "dup_trial_divis": 214, "dup_zz_cyclotomic_factor": 214, "dup_zz_cyclotomic_poli": 214, "dup_zz_diophantin": 214, "dup_zz_factor": 214, "dup_zz_factor_sqf": 214, "dup_zz_hensel_lift": 214, "dup_zz_hensel_step": 214, "dup_zz_i_factor": 214, "dup_zz_irreducible_p": 214, "dup_zz_mignotte_bound": 214, "dup_zz_zassenhau": 214, "duplic": [12, 14, 16, 79, 82, 89, 94, 96, 124, 128, 158, 229, 237, 259, 290], "dure": [3, 12, 13, 16, 30, 31, 35, 60, 69, 88, 89, 124, 128, 130, 131, 134, 149, 153, 216, 221, 230, 239, 240, 257, 259], "dv": 234, "dvi": [116, 205, 221], "dvioption": 221, "dvip": 116, "dvipng": 8, "dx": [5, 13, 14, 15, 36, 39, 43, 51, 67, 69, 84, 88, 90, 92, 96, 105, 107, 110, 111, 112, 113, 115, 124, 130, 136, 147, 153, 180, 217, 218, 224, 234, 237, 238, 242, 287, 291, 296, 298, 299], "dxa": 111, "dxdt": 299, "dxi": 90, "dxy": [51, 234], "dy": [30, 43, 46, 69, 90, 105, 124, 136, 147, 217, 221, 234, 237, 238, 287, 299], "dy2": 30, "dyad": [21, 30, 200, 269], "dyadic": [4, 22, 23, 30, 34, 91, 149, 155, 200, 202, 203, 205, 265, 268, 273, 299, 302, 309, 311], "dyadic_product": [34, 203, 273], "dyadic_tensor": [200, 265], "dyadicadd": 269, "dyadicmul": 269, "dyadicproduct": 273, "dyer": 217, "dyn": 154, "dyn_implicit_mat": [31, 158], "dyn_implicit_rh": [31, 158], "dynam": [19, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 128, 131, 133, 134, 141, 142, 144, 148, 150, 151, 153, 154, 155, 156, 158, 159, 200, 202, 204, 256, 257, 265, 299, 301, 302, 303, 305], "dynamic_symbol": 158, "dynamicsymbol": [4, 18, 21, 22, 24, 25, 26, 27, 28, 30, 31, 33, 35, 36, 124, 134, 148, 149, 150, 152, 153, 155, 156, 158, 159, 200, 202, 204, 205, 299, 302, 303, 304, 306, 307, 309, 310, 311], "dynamicsystem": 142, "dynkin": 117, "dynkin_diagram": 117, "dynkindiagram": 117, "dz": [43, 136, 147, 231, 299], "e": [0, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 22, 26, 27, 30, 31, 33, 36, 41, 42, 43, 46, 49, 53, 54, 57, 59, 60, 61, 65, 67, 68, 69, 70, 74, 77, 78, 79, 80, 81, 84, 86, 87, 88, 89, 90, 92, 93, 94, 96, 98, 100, 101, 102, 103, 104, 105, 110, 111, 113, 115, 117, 118, 124, 128, 130, 131, 133, 134, 136, 137, 140, 144, 145, 148, 149, 152, 153, 155, 156, 158, 159, 160, 163, 170, 171, 175, 180, 181, 183, 186, 188, 190, 191, 196, 197, 200, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 227, 228, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 252, 253, 254, 255, 256, 257, 259, 260, 262, 265, 269, 272, 274, 275, 286, 287, 291, 292, 297, 299], "e0": 228, "e1": [22, 96, 98, 105, 211, 216, 228, 237, 240], "e103": 0, "e2": [22, 43, 67, 88, 91, 98, 105, 115, 124, 128, 142, 210, 211, 216, 217, 228, 237, 240, 241, 259], "e2row": 22, "e3": [22, 228, 237], "e4": [22, 228], "e6": 117, "e_": [88, 93, 124], "e_0": 89, "e_1": [78, 124, 208, 214, 217], "e_2": [214, 217], "e_bicep": 299, "e_d": 214, "e_dom": 211, "e_first": 18, "e_i": [90, 208, 231, 247], "e_j": 90, "e_k": 214, "e_muscl": [18, 134], "e_n": [78, 93, 117, 124, 167, 208, 217], "e_nl": [146, 192], "e_nl_dirac": 146, "e_r": 90, "e_rho": 90, "e_theta": 90, "e_tricep": 299, "e_val": 299, "e_x": [90, 247], "e_z": 247, "e_zeroth": 18, "each": [3, 8, 9, 11, 12, 13, 14, 15, 16, 18, 22, 24, 25, 28, 32, 33, 35, 36, 37, 41, 43, 48, 50, 51, 52, 53, 55, 58, 61, 64, 65, 67, 68, 69, 70, 71, 72, 79, 80, 84, 88, 89, 90, 91, 92, 93, 94, 96, 98, 103, 104, 105, 110, 111, 113, 115, 117, 118, 120, 124, 128, 130, 134, 136, 140, 142, 144, 148, 150, 152, 153, 156, 175, 188, 191, 200, 204, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 219, 221, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 242, 245, 246, 247, 250, 252, 254, 256, 259, 260, 262, 265, 267, 268, 270, 272, 274, 287, 290, 292, 297, 298, 299, 300, 305, 306, 309, 311], "eager": [88, 260], "eagertensor": 260, "earli": [3, 11, 14, 88, 128, 180, 234], "earlier": [13, 21, 130, 218, 222, 231, 233, 260, 270, 272, 292], "earth": [33, 274, 299], "eas": [0, 22, 36, 207, 221, 224], "easi": [3, 7, 11, 12, 14, 15, 18, 23, 35, 45, 76, 80, 88, 96, 113, 115, 129, 151, 208, 211, 216, 221, 228, 231, 234, 237, 240, 245, 246, 247, 286, 287, 289, 290, 291, 292, 293, 296, 306], "easier": [3, 9, 11, 12, 13, 14, 15, 18, 22, 35, 42, 56, 71, 88, 137, 212, 216, 218, 231, 237, 240, 254, 260, 269, 291, 297, 298, 302], "easiest": [5, 9, 11, 13, 15, 16, 88, 208, 211, 234, 260, 270, 286, 292, 297], "easili": [5, 13, 14, 25, 35, 41, 43, 55, 59, 71, 88, 89, 111, 113, 124, 128, 129, 148, 152, 155, 156, 189, 217, 220, 221, 226, 233, 234, 237, 239, 240, 243, 253, 291], "east": 89, "easyfit": 241, "ebnf": 233, "ec": 217, "ecart": 214, "eccentr": [96, 98], "echelon": [124, 210, 240, 293], "echelon_form": [124, 293], "eco": 259, "econ": 241, "econom": [80, 115, 259], "economi": 80, "ecosystem": [0, 14], "ect": 239, "ed": [4, 80, 96, 115, 124, 215, 239, 241], "edg": [72, 81, 82, 117, 210, 221, 240, 259, 296], "edit": [5, 9, 11, 12, 115, 124, 128, 214, 215, 217], "editor": [11, 12, 14], "edmond": 206, "edmonds74": 206, "edu": [11, 67, 72, 79, 80, 89, 91, 93, 115, 124, 128, 144, 210, 215, 220, 230, 234, 237, 241, 265], "educ": [55, 89, 124], "ee": [18, 206, 216], "eea": 214, "eeci": 124, "eez": 214, "ef": 259, "effect": [2, 4, 7, 12, 14, 18, 22, 27, 43, 54, 59, 79, 81, 88, 105, 113, 115, 124, 136, 148, 163, 191, 200, 207, 211, 214, 218, 220, 237, 289, 299, 302], "effici": [15, 30, 39, 41, 48, 53, 61, 67, 69, 72, 79, 84, 88, 91, 92, 93, 104, 105, 120, 124, 128, 129, 144, 152, 153, 206, 209, 210, 211, 212, 214, 217, 218, 219, 220, 233, 234, 239, 253, 260, 286, 292, 293, 297], "effort": [11, 129, 212, 214], "eg": [22, 88, 198, 240], "egg": 262, "eggsham": 262, "egypt": 128, "egyptian": 128, "egyptian_fract": 128, "ei": [51, 55, 96, 113, 216, 221, 231, 234, 237, 247], "eick": [79, 86], "eig": [22, 30, 124], "eigen": 167, "eigenbra": [169, 182, 188], "eigenket": [169, 182, 188], "eigenspac": 124, "eigenst": [169, 181, 186, 188, 189], "eigenv": [22, 30, 124, 185, 291, 293, 302], "eigenvalu": [22, 124, 185, 188, 291], "eigenvec": 22, "eigenvect": [22, 30, 124, 185, 293], "eigenvector": [22, 124, 185, 186, 206], "eight": [39, 57, 221], "eighth": 132, "eigval": 30, "eigvec": [22, 30], "eijk": 96, "einstein": [191, 247], "eisenstein": 214, "either": [2, 4, 5, 8, 11, 12, 13, 14, 15, 16, 18, 22, 26, 28, 30, 36, 41, 42, 43, 48, 51, 52, 53, 54, 56, 61, 65, 67, 68, 72, 80, 87, 88, 89, 92, 93, 94, 96, 103, 105, 111, 113, 115, 116, 118, 124, 128, 134, 144, 148, 149, 152, 153, 154, 156, 158, 159, 175, 181, 188, 191, 193, 195, 205, 207, 209, 210, 211, 212, 214, 216, 217, 221, 223, 228, 229, 230, 231, 234, 237, 238, 239, 240, 241, 242, 245, 246, 253, 259, 260, 265, 274, 289, 292, 293], "ej": 0, "eject": [212, 217], "ektf": 128, "elabor": [4, 33, 44, 272], "elast": [134, 136, 137], "elastic_modulu": 136, "elastic_tendon_muscl": 134, "elbow": [208, 299], "electr": [18, 33, 131, 148, 162, 164, 272, 274], "electric_potenti": [33, 272], "electromagnet": [33, 162, 195, 247, 274], "electron": [96, 146, 230], "eleg": [71, 218, 220], "elegantli": 51, "elem": [69, 79, 208], "elem_pol": [46, 144], "elem_zero": [46, 144], "element": [5, 13, 14, 15, 16, 18, 19, 30, 34, 36, 38, 41, 46, 51, 61, 65, 68, 69, 71, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 104, 111, 113, 115, 117, 118, 119, 120, 123, 124, 127, 128, 129, 134, 136, 137, 144, 145, 155, 160, 163, 177, 188, 196, 203, 204, 207, 208, 209, 210, 212, 214, 217, 219, 220, 221, 227, 228, 229, 231, 233, 234, 237, 239, 240, 241, 242, 246, 253, 255, 256, 259, 260, 261, 268, 287, 292, 293, 296, 297, 299], "element_": 229, "element_from_alg_num": 216, "element_from_anp": 216, "element_from_poli": 216, "element_from_r": 216, "element_kind": [88, 123, 229], "element_list": 210, "element_ord": 117, "elementari": [4, 11, 12, 28, 41, 42, 43, 79, 88, 89, 92, 93, 95, 96, 110, 113, 115, 124, 128, 184, 187, 212, 217, 218, 259, 260, 269, 277], "elementary_col_op": 124, "elementary_row_op": 124, "elementaryfunct": 94, "elementof": 221, "elements_doubl": 210, "elements_k": 211, "elements_sympi": 211, "elementwis": [120, 124, 210, 242], "elemsdict": 210, "eleventh": 132, "elgam": 89, "elgamal_private_kei": 89, "elgamal_public_kei": 89, "elif": [41, 42, 43, 94], "elimin": [21, 37, 39, 53, 69, 84, 88, 118, 119, 124, 210, 212, 219, 220, 222, 224, 233, 237, 239, 240, 247, 254, 293, 304], "eliminate_gen": 79, "eliminate_impl": 118, "ellips": [4, 99, 100, 104, 163, 207, 221, 283, 296], "ellipsi": [252, 260], "ellipt": [98, 128, 208], "elliptic": [96, 221], "elliptic_": [96, 98, 221], "elliptic_f": [96, 221], "elliptic_integr": 96, "elliptic_k": [96, 221], "elliptic_pi": [96, 221], "ellipticcurv": 51, "elliptice2": 96, "ellipticf": 96, "ellipticintegr": 96, "elliptick": [96, 221], "ellipticpi": [96, 221], "ellipticpi3": 96, "ellis": 98, "els": [3, 7, 11, 12, 13, 14, 15, 41, 42, 43, 50, 69, 78, 80, 84, 88, 89, 96, 98, 102, 104, 105, 113, 115, 118, 124, 128, 144, 191, 200, 207, 210, 212, 216, 217, 221, 222, 229, 233, 237, 239, 240, 245, 247, 252, 259, 262, 265, 268, 286, 292, 299], "elsewher": [15, 41, 93, 117, 210, 252], "elt": [210, 216], "em": 217, "email": [7, 221], "eman": 101, "embed": [4, 5, 67, 80, 88, 116, 216], "embryon": 68, "emerg": [160, 209], "emg": 241, "emit": [3, 12, 118, 221, 250, 257], "emphas": [48, 87], "emphasi": [5, 211], "empir": 18, "emploi": [68, 87, 92, 115, 128, 217, 220, 237, 241, 287], "empti": [13, 15, 16, 17, 18, 27, 41, 48, 51, 52, 56, 63, 67, 68, 69, 70, 79, 83, 87, 88, 100, 103, 104, 105, 118, 124, 128, 131, 134, 153, 154, 186, 199, 212, 216, 217, 221, 227, 228, 229, 231, 237, 239, 240, 252, 254, 259, 262, 292], "empty_product": 87, "empty_set": 229, "empty_sum": 87, "emptyprint": 221, "emptysequ": [221, 227], "emptyset": [13, 41, 52, 67, 68, 118, 221, 229, 240, 265, 298], "emufphzlrfaxyusdjkzldkrnshgnfivj": 89, "emul": [13, 233, 240, 242, 260], "en": [4, 5, 8, 12, 34, 41, 43, 61, 63, 64, 65, 67, 68, 69, 71, 76, 77, 79, 80, 87, 88, 89, 90, 91, 93, 94, 96, 98, 100, 104, 105, 106, 115, 116, 117, 118, 120, 124, 128, 142, 144, 147, 160, 162, 163, 164, 166, 167, 168, 172, 173, 174, 177, 179, 180, 189, 191, 200, 202, 203, 210, 217, 218, 224, 228, 229, 230, 237, 240, 241, 254, 259, 260, 265, 267, 271, 273, 275, 293], "enabl": [2, 5, 9, 15, 22, 43, 59, 88, 115, 116, 128, 137, 191, 200, 205, 221, 237, 241, 252, 257, 260, 293, 296, 297], "enable_automatic_int_sympif": 116, "enable_automatic_symbol": 116, "enable_eager_execut": 260, "encapsul": [197, 214, 240, 254], "enciph": 89, "encipher_affin": 89, "encipher_atbash": 89, "encipher_bifid": 89, "encipher_bifid5": 89, "encipher_bifid6": 89, "encipher_elgam": 89, "encipher_gm": 89, "encipher_hil": 89, "encipher_kid_rsa": 89, "encipher_railf": 89, "encipher_rot13": 89, "encipher_rsa": 89, "encipher_shift": 89, "encipher_substitut": 89, "encipher_vigener": 89, "encircl": 113, "enclos": [4, 98, 99, 104, 127, 145, 221, 231, 260], "encloses_point": [98, 99, 104], "encod": [3, 13, 72, 80, 86, 89, 118, 221, 252, 256, 259], "encode_mors": 89, "encompass": 211, "encount": [5, 16, 39, 48, 88, 115, 124, 153, 183, 209, 214, 217, 239, 240, 254, 265, 293], "encourag": [4, 13, 25, 26, 68, 216], "encryp": 89, "encrypt": 89, "encyclopedia": [34, 100, 203], "encyclopediaofmath": 96, "end": [0, 2, 4, 7, 11, 12, 13, 14, 16, 18, 25, 26, 27, 32, 33, 36, 39, 41, 42, 43, 46, 49, 53, 55, 61, 67, 68, 69, 78, 79, 84, 86, 87, 88, 89, 93, 94, 96, 98, 100, 104, 113, 116, 118, 120, 124, 128, 130, 136, 137, 140, 148, 156, 158, 159, 196, 200, 205, 206, 210, 214, 221, 224, 227, 229, 230, 234, 237, 238, 239, 240, 241, 242, 243, 252, 254, 255, 257, 259, 262, 272, 287, 291, 293, 297, 299, 302, 306, 309], "end_point": 304, "end_point_aux": 304, "end_point_forc": 304, "endian": 72, "endif": [69, 254], "endnumb": 237, "endomorph": [111, 216], "endomorphism_r": 216, "endomorphismr": 216, "endow": [209, 217], "endpoint": [18, 33, 87, 88, 92, 101, 148, 229, 272, 304], "energi": [13, 22, 23, 33, 47, 146, 149, 153, 155, 167, 192, 196, 247, 272, 282, 303, 311], "enforc": [18, 80, 299, 302], "eng": 80, "engag": 71, "engin": [16, 18, 29, 30, 34, 131, 132, 134, 135, 138, 140, 148, 203, 237, 296, 299, 302], "english": [4, 11, 89], "engr": 115, "enhanc": [18, 88, 214, 241, 287, 299], "enlarg": 99, "enough": [3, 4, 11, 14, 22, 30, 50, 52, 79, 88, 92, 115, 124, 127, 128, 144, 212, 214, 221, 237, 287, 289], "enricogiampieri": 259, "ensembl": 185, "enspac": [237, 240], "ensur": [3, 11, 12, 16, 18, 43, 48, 50, 51, 52, 53, 56, 59, 88, 89, 92, 119, 124, 131, 134, 152, 156, 216, 217, 221, 252, 257, 260, 299, 304], "ent": 128, "entail": 115, "enter": [9, 25, 37, 80, 88, 89, 93, 101, 128, 130, 136, 140, 153, 158, 221, 231, 239, 252, 292, 296, 302], "entertain": 290, "enthought": 59, "entir": [2, 3, 12, 14, 24, 28, 41, 79, 88, 89, 92, 93, 96, 102, 104, 113, 127, 150, 158, 200, 208, 210, 216, 229, 246, 255, 257, 291, 297, 304], "entireti": 32, "entiti": [22, 28, 33, 88, 98, 101, 102, 104, 105, 113, 240, 274, 283, 293], "entity1": 100, "entity2": 100, "entri": [0, 22, 28, 53, 65, 70, 78, 80, 86, 89, 100, 113, 117, 119, 120, 127, 131, 153, 155, 163, 210, 214, 216, 217, 231, 241, 260, 302], "entropi": [89, 241], "entropy_": 241, "entropypost": 241, "enum": [71, 216, 258, 284], "enum_al": 256, "enum_larg": 256, "enum_rang": 256, "enum_smal": 256, "enumer": [41, 58, 72, 77, 80, 83, 91, 95, 113, 118, 128, 134, 216, 217, 231, 256, 259, 277], "enumerate_st": 186, "env": 130, "envelop": 237, "environ": [2, 6, 8, 10, 11, 12, 13, 15, 88, 116, 205, 221, 241, 252, 262, 289, 291, 296], "envis": 39, "eom": [27, 148, 304, 306, 307], "eom_method": [24, 158, 304], "ep": [69, 79, 87, 212, 216, 217], "epath": 233, "epathtool": 233, "eppstein": 128, "eps_dim": 247, "epsilon": [13, 16, 87, 89, 96, 113, 115, 162, 221, 247], "eq": [4, 12, 14, 15, 16, 37, 41, 43, 50, 51, 55, 57, 65, 67, 69, 88, 93, 94, 96, 98, 101, 105, 113, 118, 194, 207, 208, 212, 217, 219, 221, 223, 227, 229, 230, 233, 234, 236, 237, 238, 239, 240, 241, 253, 254, 260, 265, 289, 291, 298], "eq1": [55, 98, 237, 239, 240], "eq2": [55, 98, 118, 237, 240], "eq3": 240, "eq4": 240, "eq_point": 302, "eq_x": 233, "eqn": [52, 55, 67, 240], "eqs_coeff": 219, "eqs_mat": 237, "eqs_one_soln_set": 55, "eqs_r": 219, "eqs_rh": 219, "eqs_to_matrix": 219, "equ": 239, "equal": [4, 12, 13, 14, 15, 17, 18, 25, 26, 36, 37, 41, 42, 43, 48, 55, 57, 61, 65, 68, 69, 70, 77, 78, 79, 80, 84, 86, 87, 88, 89, 90, 92, 93, 94, 96, 101, 102, 103, 104, 105, 107, 113, 118, 120, 124, 128, 132, 134, 136, 140, 144, 145, 148, 149, 153, 155, 156, 158, 175, 176, 191, 195, 196, 200, 204, 208, 209, 210, 211, 212, 214, 216, 217, 219, 221, 227, 229, 231, 234, 237, 238, 239, 240, 241, 247, 252, 253, 254, 259, 262, 265, 270, 275, 287, 290, 298, 299, 302, 304], "equal_valu": 88, "equat": [5, 13, 14, 15, 16, 18, 21, 22, 23, 24, 29, 30, 31, 34, 35, 36, 37, 39, 44, 46, 50, 67, 69, 84, 87, 88, 90, 94, 96, 98, 101, 102, 106, 110, 111, 112, 113, 115, 116, 124, 128, 131, 132, 133, 134, 136, 140, 144, 146, 148, 149, 151, 152, 153, 154, 156, 158, 160, 164, 204, 205, 206, 207, 208, 210, 212, 214, 215, 216, 219, 220, 221, 227, 231, 233, 236, 237, 238, 246, 265, 270, 271, 275, 287, 288, 291, 300, 303, 304, 305, 306, 307, 309, 311], "equidimension": 237, "equidist": 88, "equidistantli": 287, "equilater": 104, "equilibrium": [18, 27, 137, 140, 148, 299, 302], "equilibrium_length": 148, "equispac": 217, "equiv": [79, 89, 93, 128, 216, 221, 231, 234], "equival": [3, 12, 13, 14, 15, 16, 22, 23, 36, 37, 41, 42, 43, 46, 53, 55, 61, 65, 69, 70, 78, 79, 84, 88, 89, 92, 94, 96, 113, 115, 124, 128, 130, 141, 142, 144, 152, 174, 185, 188, 191, 194, 195, 200, 205, 207, 208, 209, 210, 211, 212, 216, 217, 221, 228, 229, 233, 234, 237, 239, 240, 241, 242, 243, 246, 247, 256, 260, 262], "equivalent_dim": 194, "eqworld": 237, "eqyptian": 234, "eratosthen": 128, "erdelyi": [96, 115], "erdo": 256, "erf": [4, 96, 113, 115, 221, 231, 241], "erf2": [4, 96, 221], "erf2inv": [4, 96, 221], "erfc": [4, 96, 113, 221, 241], "erfcinv": [4, 96, 221], "erfi": [4, 96, 113, 221], "erfinv": [4, 96, 221, 241], "eric": [115, 215], "erik": 265, "erlang": 241, "erlang_distribut": 241, "erlangdistribut": 241, "erlend": 82, "erron": 92, "error": [2, 3, 4, 5, 8, 11, 12, 13, 14, 22, 36, 37, 41, 42, 50, 51, 52, 53, 54, 55, 57, 60, 67, 69, 77, 80, 87, 88, 89, 94, 98, 103, 113, 115, 124, 127, 128, 130, 153, 156, 158, 206, 209, 210, 211, 212, 214, 218, 221, 223, 229, 237, 238, 239, 240, 241, 252, 253, 254, 257, 259, 262, 265, 286], "error_funct": 96, "error_term": 128, "error_when_incomplet": 124, "ert": 0, "escap": [88, 130, 207, 221, 262], "especi": [3, 4, 12, 14, 21, 22, 28, 30, 36, 43, 57, 87, 88, 124, 185, 217, 233, 237, 239, 252, 286, 287], "espinosa": 96, "esqu": 30, "essenc": 269, "essenti": [5, 14, 18, 33, 36, 72, 83, 88, 92, 94, 95, 96, 113, 155, 203, 208, 209, 212, 216, 228, 231, 266, 269, 272, 273, 274, 280, 282, 300, 302], "establish": [9, 18, 39, 84, 113, 148, 152, 156, 158, 231, 307], "estim": [57, 67, 87, 88, 92, 113, 287], "et": [115, 131, 132, 134, 170, 214, 217, 218, 230, 233], "eta": [16, 96, 113, 216, 221, 237, 238, 241], "etc": [7, 11, 12, 13, 18, 22, 33, 35, 36, 39, 41, 42, 64, 67, 69, 84, 88, 89, 93, 94, 106, 115, 117, 118, 122, 128, 130, 134, 162, 171, 175, 188, 191, 202, 207, 208, 209, 210, 211, 214, 216, 221, 222, 229, 230, 231, 233, 237, 240, 241, 245, 253, 254, 259, 270, 274], "etiquett": 7, "euclid": [88, 214, 215], "euclidean": [90, 101, 103, 148, 156, 200, 212, 214, 217], "euclidean_algorithm": 88, "euclideanspac": 61, "eucliden": 89, "euclidtool": 214, "euler": [4, 36, 61, 67, 68, 87, 88, 89, 92, 93, 96, 104, 110, 116, 128, 152, 188, 200, 205, 206, 217, 221, 237, 241, 265, 267], "euler_angl": [265, 267], "euler_equ": 67, "euler_maclaurin": [87, 92], "euler_numb": 93, "euler_poli": [93, 217], "euler_pseudoprim": 128, "eulergamma": [4, 88, 92, 93, 96], "eulerian": 96, "eulerlin": 104, "eulernumb": 93, "eulervm": 221, "eulerzigzagnumb": 93, "eurocam": 115, "eurocast": 215, "european": 208, "eval": [4, 13, 14, 41, 63, 64, 69, 88, 94, 96, 132, 177, 191, 212, 217, 221, 254, 286], "eval_approx": 217, "eval_color_func": 207, "eval_control": 175, "eval_diffeq": 299, "eval_eom": 18, "eval_expr": 130, "eval_forc": 18, "eval_frequ": 144, "eval_holo_fsolv": 299, "eval_holonom": 299, "eval_integr": 87, "eval_levicivita": 96, "eval_poli": 210, "eval_poly_mul": 210, "eval_r": [217, 299], "eval_rh": [18, 299], "eval_zeta_funct": 87, "evalf": [2, 4, 14, 15, 16, 22, 30, 41, 48, 54, 57, 69, 87, 92, 93, 94, 96, 107, 110, 111, 124, 130, 173, 212, 217, 221, 228, 229, 233, 241, 253, 260, 287, 288, 302], "evalf_r": 217, "evalfmixin": 88, "evalu": [2, 4, 15, 18, 21, 22, 23, 27, 28, 39, 41, 42, 49, 55, 57, 61, 62, 63, 64, 67, 69, 88, 90, 93, 94, 96, 99, 103, 104, 113, 115, 118, 120, 124, 128, 129, 130, 131, 132, 134, 144, 148, 150, 166, 168, 170, 172, 174, 177, 180, 188, 191, 206, 207, 210, 211, 212, 214, 215, 217, 221, 222, 227, 228, 229, 231, 233, 234, 237, 239, 240, 241, 242, 243, 253, 254, 255, 260, 272, 277, 286, 287, 288, 289, 291, 293, 300], "evaluate_delta": 191, "evaluate_integr": 241, "evaluate_pauli_product": 166, "evaluationfail": 214, "evalul": 88, "even": [3, 4, 5, 9, 11, 12, 14, 15, 16, 18, 22, 23, 38, 41, 43, 48, 51, 54, 55, 56, 57, 62, 63, 64, 65, 66, 69, 70, 71, 76, 79, 80, 87, 88, 89, 92, 93, 94, 96, 100, 104, 113, 115, 118, 124, 127, 128, 130, 135, 145, 151, 176, 187, 194, 196, 200, 206, 209, 210, 211, 212, 214, 216, 217, 218, 221, 222, 229, 230, 231, 233, 234, 237, 239, 240, 248, 252, 274, 286, 287, 289, 291, 292, 297, 298], "evenhandl": 65, "evenli": 234, "evenpred": 65, "event": [148, 216, 241], "eventu": [11, 79, 96, 115, 130, 207, 208, 228, 254, 259], "ever": [12, 13, 14, 15, 36, 43, 94, 208, 217, 231, 237, 254, 257, 292], "everi": [2, 3, 4, 7, 11, 12, 14, 15, 28, 33, 35, 36, 41, 43, 48, 52, 58, 63, 64, 65, 68, 74, 76, 79, 80, 88, 89, 103, 115, 117, 124, 128, 144, 195, 207, 208, 209, 211, 212, 214, 216, 221, 226, 229, 231, 233, 234, 237, 240, 241, 243, 269, 272, 274, 290, 292, 293, 297], "everyon": [12, 218], "everyth": [3, 5, 12, 14, 16, 27, 43, 69, 88, 90, 96, 115, 121, 146, 187, 188, 207, 221, 292, 296], "everywher": [3, 15, 16, 33, 88, 96, 113, 144, 259, 274], "evid": [113, 153, 231, 243, 310], "evinc": 221, "evolut": 98, "ew": 215, "ewen": 241, "ex": [76, 115, 145, 158, 211, 216, 217, 247, 255], "exact": [3, 11, 12, 13, 15, 16, 18, 30, 41, 43, 46, 54, 65, 87, 88, 89, 92, 98, 103, 110, 113, 115, 124, 132, 136, 156, 185, 210, 211, 212, 214, 217, 228, 233, 237, 239, 252, 262, 289, 291, 296], "exact_differential_equ": 237, "exactli": [3, 4, 5, 11, 12, 13, 14, 15, 16, 28, 43, 48, 55, 57, 65, 72, 79, 88, 91, 92, 124, 130, 206, 217, 231, 233, 237, 240, 242, 256, 259, 260, 287, 289, 291, 296, 297], "exactquotientfail": [211, 212, 214, 217], "examin": [69, 89, 180, 252, 254, 297], "exampl": [0, 1, 2, 3, 5, 7, 12, 13, 14, 15, 16, 18, 22, 23, 24, 25, 26, 28, 30, 32, 33, 35, 37, 38, 39, 41, 42, 47, 49, 52, 53, 55, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 110, 111, 113, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 132, 134, 136, 138, 140, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 185, 186, 188, 189, 190, 191, 192, 193, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 222, 223, 224, 226, 227, 229, 230, 233, 234, 236, 237, 238, 239, 240, 245, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 265, 267, 268, 270, 272, 273, 274, 275, 280, 282, 283, 286, 287, 288, 289, 290, 292, 293, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311], "examples_arg": 252, "examples_kwarg": 252, "exaxmpl": 88, "exc": 214, "exce": [70, 128, 247, 260], "exceed": [14, 16, 216], "exceedingli": 214, "excel": [59, 92, 216, 295], "excent": 104, "except": [2, 3, 4, 11, 13, 14, 15, 16, 39, 41, 42, 43, 53, 57, 67, 69, 79, 80, 88, 89, 92, 93, 94, 96, 113, 115, 128, 149, 195, 197, 206, 208, 210, 211, 212, 216, 217, 218, 219, 221, 230, 233, 234, 237, 238, 240, 245, 250, 252, 254, 255, 258, 259, 269, 272, 284, 286, 289, 292, 310], "exceptional_isomorph": 71, "exceptioninfo": 250, "excerpt": 4, "excess": 15, "exchang": [84, 89, 124, 206, 210, 259], "excircl": 104, "excit": [18, 131, 134, 208, 299, 303], "exclud": [11, 30, 50, 55, 57, 69, 87, 88, 115, 124, 150, 155, 209, 210, 212, 214, 217, 227, 237, 239, 252, 255, 259], "exclude_empti": 252, "exclus": [87, 88, 94, 118, 124, 214, 289], "exec": [69, 88, 116, 260], "execut": [12, 15, 30, 41, 59, 69, 116, 124, 136, 207, 221, 237, 240, 250, 252, 254, 255, 260, 262, 264, 276, 291, 296], "exercis": [43, 79, 256, 290, 297, 301], "exert": 148, "exgaussian": 241, "exhaust": [3, 41, 231, 259, 290], "exhibit": [128, 206, 216, 230], "exict": 131, "exist": [3, 7, 11, 13, 14, 15, 18, 33, 36, 39, 41, 43, 54, 57, 67, 68, 69, 72, 79, 88, 92, 98, 100, 103, 104, 105, 106, 115, 118, 124, 128, 140, 154, 158, 181, 207, 208, 209, 210, 212, 214, 216, 221, 228, 229, 231, 234, 237, 239, 240, 252, 260, 270, 291, 293, 298], "existing_julia_fcn": 221, "existing_octave_fcn": [69, 221], "existing_smtlib_fcn": 221, "exit": [69, 128, 252], "exlud": 239, "exogen": [31, 158], "exotica": 74, "exp": [11, 12, 13, 14, 15, 16, 18, 37, 41, 43, 46, 54, 55, 57, 61, 67, 69, 78, 87, 88, 90, 92, 93, 94, 96, 106, 107, 110, 113, 115, 120, 124, 128, 130, 132, 146, 167, 170, 186, 192, 206, 211, 212, 217, 218, 221, 223, 228, 231, 233, 237, 238, 239, 240, 241, 242, 259, 275, 287, 291, 293, 298], "exp1": [88, 221], "exp2": [69, 221], "exp2_opt": 69, "exp_polar": [88, 94, 96, 231], "exp_r": 223, "expand": [4, 12, 13, 14, 15, 16, 22, 30, 39, 41, 46, 48, 69, 88, 90, 92, 93, 94, 96, 113, 115, 124, 144, 172, 180, 183, 190, 191, 209, 210, 211, 214, 216, 217, 218, 221, 224, 228, 230, 231, 233, 237, 240, 241, 245, 253, 260, 271, 286, 291], "expand_": 43, "expand_complex": [43, 88], "expand_func": [88, 93, 96], "expand_hint": 88, "expand_log": [43, 69, 88, 233], "expand_mul": [88, 113], "expand_multinomi": 88, "expand_opt": 69, "expand_power_bas": [88, 233], "expand_power_exp": 88, "expand_trig": [14, 43, 88, 286], "expanded_expr": 291, "expans": [4, 11, 27, 39, 43, 69, 88, 90, 93, 94, 96, 115, 124, 128, 170, 172, 217, 218, 223, 224, 225, 230, 232, 233, 237, 239, 240, 277, 288, 297], "expansil": [148, 156], "expect": [4, 5, 7, 13, 14, 16, 18, 22, 41, 43, 46, 68, 70, 73, 88, 94, 96, 100, 118, 128, 129, 144, 148, 152, 156, 185, 211, 214, 216, 218, 219, 228, 233, 236, 239, 240, 241, 250, 252, 253, 256, 259, 260, 291, 292, 299, 300], "expectationmatrix": 241, "expectedexcept": 250, "expediti": 12, "expens": [14, 15, 27, 43, 55, 88, 230, 237, 238, 239, 255, 293], "experi": [2, 18, 240, 241], "experienc": [10, 13, 18, 70], "experiment": [2, 3, 233], "expint": [96, 221], "expintegral": [96, 221], "expintegralei": 221, "expj": 237, "explain": [2, 3, 4, 5, 7, 12, 41, 48, 57, 68, 84, 88, 96, 106, 111, 156, 208, 211, 214, 216, 218, 228], "explan": [3, 5, 12, 16, 20, 23, 37, 41, 44, 61, 62, 63, 64, 65, 66, 68, 69, 73, 76, 77, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 94, 96, 100, 110, 111, 113, 115, 124, 128, 131, 132, 134, 144, 147, 148, 149, 150, 152, 153, 155, 156, 158, 159, 160, 162, 165, 168, 170, 172, 174, 186, 191, 206, 207, 208, 210, 212, 214, 216, 217, 219, 223, 224, 226, 227, 228, 229, 231, 233, 234, 237, 239, 241, 242, 243, 246, 247, 252, 255, 257, 259, 260, 294, 300, 305, 310], "explicit": [11, 13, 14, 15, 18, 22, 27, 31, 36, 41, 43, 48, 51, 52, 80, 87, 88, 92, 104, 105, 115, 127, 128, 134, 153, 154, 158, 208, 217, 220, 221, 223, 229, 231, 237, 238, 239, 240, 256, 299, 306], "explicit_formulas_for_small_system": 124, "explicit_kinemat": [153, 307], "explicitli": [3, 12, 13, 14, 15, 22, 28, 41, 43, 69, 79, 80, 88, 89, 91, 94, 96, 101, 105, 120, 124, 129, 144, 158, 207, 209, 210, 211, 212, 214, 217, 221, 233, 237, 239, 257, 289, 293, 296, 298], "explik": 223, "exploit": [113, 253], "explor": [25, 26, 44, 207, 216, 256, 297], "explos": [125, 210], "expm1": [69, 221], "expm1_opt": 69, "expon": [14, 16, 48, 57, 66, 69, 88, 89, 94, 96, 113, 115, 120, 128, 142, 144, 197, 209, 210, 211, 217, 218, 221, 230, 233, 237, 240, 245, 256, 297], "exponent_vector": 78, "exponenti": [13, 16, 41, 55, 61, 69, 79, 84, 88, 89, 93, 115, 118, 124, 128, 130, 177, 193, 218, 233, 237, 240, 241, 288, 289, 293], "exponential_distribut": 241, "exponential_integr": 96, "exponentialdistribut": 241, "exponentially_modified_gaussian_distribut": 241, "export": [60, 221], "expos": [13, 68, 130, 241], "exposit": 228, "expr": [3, 4, 12, 14, 15, 16, 21, 22, 27, 41, 43, 52, 54, 57, 63, 64, 66, 67, 69, 80, 87, 90, 92, 94, 96, 98, 110, 113, 115, 118, 120, 124, 128, 129, 130, 134, 144, 148, 150, 153, 155, 156, 158, 168, 172, 174, 176, 180, 183, 186, 188, 189, 191, 198, 200, 202, 205, 207, 209, 210, 211, 212, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 228, 230, 233, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 253, 254, 255, 257, 260, 265, 267, 268, 269, 270, 272, 286, 287, 289, 291, 292, 296, 297, 298], "expr1": [3, 41, 144, 207, 239, 292], "expr2": [3, 41, 144, 207, 292], "expr_1": 144, "expr_2": 144, "expr_3": 144, "expr_4": 144, "expr_class": 221, "expr_free_symbol": [12, 88], "expr_i": 207, "expr_modifi": 16, "expr_to_holonom": [107, 110, 111, 112], "expr_tr": 243, "expr_with_intlimit": [87, 115], "expr_with_limit": [87, 115], "expr_x": 207, "expr_z": 207, "exprcondpair": 94, "expreal": 41, "express": [2, 3, 4, 5, 15, 17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 41, 42, 43, 49, 50, 53, 55, 57, 61, 62, 63, 64, 65, 66, 67, 80, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 101, 103, 104, 111, 112, 113, 115, 116, 121, 122, 123, 124, 127, 128, 129, 132, 134, 136, 144, 145, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 159, 166, 170, 174, 175, 179, 180, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 200, 202, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 217, 218, 221, 222, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 250, 253, 254, 255, 256, 257, 260, 262, 265, 267, 268, 269, 271, 272, 274, 280, 282, 287, 288, 289, 290, 291, 293, 296, 297, 298, 306], "express_coordin": [269, 270], "expression_complex": 48, "expression_complex_poli": 48, "expression_expand": 48, "expression_str": 14, "expressiondomain": [211, 212], "expressions_dom": 211, "expressions_sympi": 211, "expressli": 269, "exprtool": 217, "exprwithintlimit": [87, 115], "exprwithlimit": [87, 115], "expsboth": 228, "expsf": 228, "expsg": 228, "exquo": [210, 211, 212, 217], "exquo_ground": [212, 217], "exr": 14, "exradii": 104, "exradiu": 104, "exsqrt": 212, "ext": [5, 208, 212], "ext_rank": 247, "extend": [4, 5, 12, 14, 30, 41, 43, 51, 65, 69, 79, 80, 88, 89, 93, 100, 113, 115, 124, 128, 133, 158, 199, 205, 207, 209, 212, 214, 216, 217, 218, 221, 228, 230, 234, 236, 237, 240, 241, 242, 254, 256, 289, 291, 299], "extend_to_no": 128, "extended_euclidean_algorithm": 88, "extended_neg": [41, 88], "extended_nonneg": [41, 88], "extended_nonposit": [41, 88], "extended_nonzero": [41, 88, 221], "extended_posit": [41, 88], "extended_r": [41, 65, 88, 221, 236, 240], "extended_real_number_lin": 41, "extendedrealhandl": 65, "extendedrealpred": 65, "extens": [0, 2, 4, 5, 7, 12, 30, 41, 43, 79, 88, 93, 94, 100, 104, 115, 124, 132, 133, 134, 148, 155, 156, 209, 211, 212, 214, 215, 216, 217, 221, 231, 233, 237, 239, 240, 253, 254, 290, 297, 299], "extension_veloc": [18, 134, 148, 156, 299], "extensionel": [208, 212], "extensor": 299, "extensorpathwai": 299, "extent": 69, "exterior": [90, 104], "exterior_angl": 104, "extern": [2, 23, 59, 88, 116, 130, 140, 142, 151, 205, 211, 212, 222, 229, 233, 241, 252, 253], "extra": [8, 13, 18, 33, 69, 71, 88, 89, 128, 129, 130, 153, 196, 214, 221, 231, 237, 252, 253, 254, 272, 310], "extra_compile_arg": 253, "extra_data": 14, "extra_link_arg": 253, "extra_preambl": 221, "extract": [15, 23, 28, 36, 48, 52, 56, 57, 67, 88, 115, 120, 124, 128, 145, 148, 151, 210, 214, 216, 217, 239, 240, 241, 252, 254, 259, 302], "extract_addit": 88, "extract_branch_factor": 88, "extract_fundamental_discrimin": 216, "extract_leading_ord": 88, "extract_multipl": 88, "extract_slic": 210, "extract_type_ten": 145, "extraglob": 252, "extran": [5, 217, 237], "extraneousfactor": 214, "extrapol": [92, 228], "extrem": [3, 12, 14, 27, 36, 53, 79, 92, 98, 104, 115, 120, 140, 233, 241], "extrins": 61, "ey": [13, 53, 88, 119, 120, 121, 122, 124, 126, 210, 216, 242, 262, 293], "eyz": [51, 234], "ez": [212, 247], "f": [0, 4, 8, 11, 12, 13, 14, 15, 16, 18, 23, 25, 26, 30, 33, 36, 39, 43, 46, 48, 51, 52, 54, 55, 67, 68, 69, 70, 71, 78, 79, 80, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 106, 111, 112, 113, 115, 117, 120, 124, 128, 129, 130, 131, 132, 134, 137, 140, 142, 148, 149, 151, 152, 153, 154, 156, 158, 160, 164, 165, 176, 177, 180, 189, 191, 194, 200, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 220, 221, 223, 224, 227, 228, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 242, 246, 247, 252, 253, 254, 255, 256, 259, 260, 262, 271, 272, 275, 286, 287, 292, 296, 297, 298, 299, 304, 307], "f0": 212, "f1": [16, 22, 30, 54, 79, 113, 115, 124, 144, 149, 207, 212, 214, 217, 221, 223, 239, 310], "f16": 69, "f2": [16, 22, 30, 54, 88, 113, 124, 144, 149, 194, 207, 214, 217, 221, 223, 239, 310], "f2py": [2, 69, 129, 253, 254], "f2pycodewrapp": 253, "f3": [144, 207, 221, 310], "f4": [117, 207], "f401": 116, "f5": [13, 207], "f5b": [214, 217], "f6": 207, "f8": 207, "f811": [12, 88], "f821": [88, 255], "f90": 254, "f95": [69, 253, 254], "f_": [18, 25, 26, 27, 39, 88, 93, 96, 115, 214, 220, 221, 231, 237], "f_0": [90, 93, 154, 214, 303], "f_1": [31, 90, 93, 96, 113, 144, 154, 158, 208, 214, 217, 237], "f_2": [31, 93, 113, 144, 154, 158, 214, 231, 237], "f_3": [31, 154, 158, 237], "f_4": [117, 154], "f_5": 214, "f_a": 154, "f_c": [154, 306], "f_code": [69, 254], "f_cython": 253, "f_d": [25, 26, 153, 158, 214], "f_dnh": 153, "f_fortran": 253, "f_h": 25, "f_i": [90, 113, 124, 214, 218], "f_j": [214, 231], "f_k": [25, 87, 153, 214], "f_list": 214, "f_m": [18, 158], "f_m_max": [18, 134, 299], "f_m_max_bicep": 299, "f_m_max_tricep": 299, "f_n": [87, 93, 96, 148, 208, 214, 217, 237], "f_name": [69, 254], "f_q": 231, "f_r": [25, 27, 214], "f_real": [88, 95], "f_real_inherit": [88, 95], "f_result": 254, "f_t": [18, 134], "f_v": [154, 306], "f_x": [33, 240, 272], "f_y": [33, 272], "f_z": [33, 93, 272], "fab": [69, 221], "fabian": 0, "fac": 113, "face": [22, 79, 81, 101, 115, 214, 218, 221, 234, 275, 293], "facil": 69, "facilit": [13, 23, 34, 129, 133, 151, 162, 203, 252, 287], "fact": [4, 12, 13, 15, 27, 41, 42, 43, 52, 64, 65, 88, 93, 96, 106, 113, 128, 140, 148, 196, 208, 209, 210, 211, 214, 216, 218, 220, 231, 233, 237, 240, 252, 260, 274, 286, 289, 290, 291, 292, 297, 302], "factor": [2, 12, 14, 15, 16, 30, 70, 79, 80, 87, 88, 89, 92, 93, 94, 96, 113, 115, 124, 128, 136, 144, 160, 168, 172, 175, 187, 191, 195, 196, 197, 198, 208, 210, 211, 212, 213, 215, 216, 217, 224, 230, 231, 233, 234, 237, 239, 241, 245, 256, 269, 272, 291, 293, 303], "factor_": [13, 88, 93, 128, 217, 234], "factor_index": 79, "factor_list": [212, 217, 297], "factor_list_includ": [212, 217], "factor_term": [88, 217, 230, 233, 310], "factori": [4, 12, 39, 43, 53, 87, 88, 92, 93, 96, 124, 128, 130, 206, 212, 214, 215, 216, 217, 221, 223, 233, 239, 241, 254, 255, 259, 260, 261, 297], "factorial2": [93, 192, 221], "factorial_mo": 241, "factorial_not": 130, "factorialmo": 241, "factorialpow": 221, "factoring_visitor": 256, "factorint": [88, 93, 128, 216, 217, 256], "factoris": [128, 210, 211, 212, 214, 217, 237], "factorisatio": 256, "factorrat": 128, "factortool": [211, 214], "factrul": 41, "fagin": 233, "fail": [2, 3, 4, 5, 8, 11, 13, 14, 41, 42, 43, 48, 69, 79, 80, 84, 87, 88, 92, 94, 112, 113, 115, 116, 124, 125, 128, 130, 181, 186, 205, 207, 210, 211, 212, 214, 216, 217, 221, 228, 231, 237, 239, 241, 250, 252, 259, 260, 293], "failing_express": 88, "failing_numb": 88, "failur": [11, 13, 84, 92, 105, 113, 128, 241, 252, 297], "fair": [100, 241], "fairli": [23, 32, 88, 96, 113, 151, 208], "fall": [18, 70, 87, 88, 93, 116, 144, 205, 216, 221, 234, 238, 241], "fallback": [14, 88, 116, 191, 205, 211, 221, 239], "fallingfactori": [93, 221], "fals": [5, 12, 14, 15, 16, 22, 24, 25, 26, 27, 28, 31, 35, 36, 41, 42, 43, 48, 50, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 110, 113, 115, 116, 118, 119, 120, 123, 124, 125, 128, 130, 132, 134, 136, 142, 144, 146, 147, 149, 150, 153, 154, 155, 158, 163, 175, 176, 180, 183, 188, 189, 190, 191, 194, 198, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 233, 234, 236, 237, 238, 239, 240, 241, 246, 247, 250, 252, 253, 254, 255, 259, 260, 262, 265, 268, 289, 292, 293, 296, 302, 304, 309, 310, 311], "falsei": 42, "famili": [69, 72, 106, 115, 209], "familiar": [9, 10, 11, 16, 18, 22, 28, 43, 115, 175, 218, 287, 289, 295], "famou": [70, 96, 115, 128, 234], "fancyset": 229, "far": [12, 14, 16, 68, 88, 102, 115, 206, 208, 211, 221, 231, 260, 286, 287, 289], "farr": 90, "farther": 68, "farthest": [98, 104], "fascin": [23, 151], "fashion": [25, 26, 28, 36, 55, 69, 88, 94, 120, 208, 259, 299, 302], "fast": [2, 14, 41, 55, 69, 88, 122, 124, 128, 153, 154, 163, 212, 213, 214, 215, 216, 217, 218, 224, 228, 237, 239, 256, 259, 260], "fast_walsh": 91, "faster": [2, 11, 13, 14, 21, 27, 41, 48, 53, 54, 69, 73, 88, 96, 124, 128, 129, 150, 153, 154, 210, 211, 212, 214, 216, 217, 218, 222, 224, 228, 233, 234, 237, 238, 240, 253, 256], "fastest": [88, 93, 115, 128, 129, 210, 218], "fastfouriertransform": 91, "fateman": 215, "father": 234, "fauger": [214, 217], "fault": 237, "faux1": 304, "faux2": 304, "favor": 13, "fbra": 191, "fc": 140, "fcall": 69, "fcn": [69, 254], "fcn2": 254, "fcode": [69, 221], "fcodegen": 254, "fcodeprint": [69, 221], "fd": [67, 69, 191], "fd1": 144, "fdict": 115, "fdiff": [4, 11, 43, 69, 88, 94, 95, 96, 132], "fdistribut": 241, "fe": 140, "feasibl": [79, 144], "featur": [0, 2, 3, 5, 7, 11, 12, 13, 16, 17, 18, 19, 22, 23, 30, 34, 43, 58, 59, 88, 90, 92, 221, 237, 241, 250, 254, 257, 273, 285, 290, 291, 295, 297, 299, 301], "feb": 154, "februari": 215, "fed": 144, "feedback": [11, 46, 89, 141, 144, 290, 301], "feedforward": 144, "feel": [11, 30, 31, 41, 59, 233, 237, 239], "feet": 104, "felix": 89, "femtesemest": 136, "fermat": [128, 162], "fermat_pseudoprim": 128, "fermi": [96, 191], "fermi_level": 191, "fermion": [93, 128, 191], "fermionicoper": 191, "fernando": 0, "ferrer": 77, "fetch": 9, "fetch_item": 261, "fetter": 191, "few": [2, 3, 8, 12, 13, 14, 15, 23, 32, 35, 36, 41, 51, 57, 65, 78, 80, 88, 89, 115, 116, 128, 129, 151, 194, 205, 208, 216, 221, 229, 230, 231, 237, 239, 240, 241, 254, 259, 297], "fewer": [27, 103, 104, 156, 241, 287, 302], "fewest": [118, 185], "ff": [87, 89, 93, 206, 209, 210, 211, 216, 217], "ff_dens": 210, "ffgj": 210, "ffield": 271, "fft": [30, 91], "fg": [80, 90, 237, 240], "fgh": 88, "fglm": 217, "fglmtool": 214, "fgp": 237, "fi": [12, 39], "fib": 227, "fiber": [131, 132, 134], "fiber_damping_coeffici": [18, 134], "fiber_force_length_act": 132, "fiber_force_length_pass": 132, "fiber_force_length_passive_invers": 132, "fiber_force_veloc": 132, "fiber_force_velocity_invers": 132, "fiber_length_explicit": 134, "fiber_length_implicit": 134, "fiberforcelengthactivedegroote2016": [18, 132], "fiberforcelengthpassivedegroote2016": [18, 132], "fiberforcelengthpassiveinversedegroote2016": [18, 132], "fiberforcevelocitydegroote2016": [18, 132], "fiberforcevelocityinversedegroote2016": [18, 132, 134], "fibonacci": [88, 92, 93, 128], "fibonacci_numb": 93, "fibonaccinumb": 93, "fiddl": [252, 297], "field": [11, 13, 34, 41, 55, 61, 65, 69, 88, 89, 90, 96, 106, 115, 163, 164, 202, 203, 208, 209, 210, 212, 213, 215, 217, 218, 219, 234, 239, 252, 265, 268, 270, 271, 273, 275, 280, 282, 283, 299], "field_el": 88, "field_gen": 216, "field_isomorph": 216, "fieldfunct": [33, 201], "fifth": [48, 132], "fifth_ord": 48, "fifth_order_solv": 48, "fig": [13, 18, 299], "figsiz": 171, "figur": [5, 11, 13, 22, 35, 36, 88, 89, 98, 99, 101, 103, 104, 115, 137, 186, 206, 207, 210, 218, 221, 275, 297], "file": [0, 2, 3, 4, 5, 7, 8, 9, 12, 15, 16, 22, 30, 45, 69, 124, 130, 180, 207, 221, 228, 231, 233, 250, 252, 253, 254, 260], "filebox": 89, "filenam": [130, 221, 252, 253, 254, 262], "filepath": 253, "filesystem": 8, "fill": [11, 16, 40, 79, 89, 120, 124, 127, 191, 207, 252, 255, 259, 262, 293], "fill_between": 207, "fillded": 262, "filter": [3, 12, 13, 38, 52, 88, 89, 113, 163, 217, 250, 252, 257, 259], "filter_symbol": 259, "filterwarn": [3, 13], "fim1": 39, "final": [3, 4, 5, 11, 12, 13, 18, 23, 25, 28, 35, 36, 41, 43, 46, 55, 68, 80, 87, 88, 94, 96, 113, 115, 118, 124, 128, 134, 137, 142, 151, 152, 153, 171, 183, 186, 188, 189, 191, 193, 194, 196, 200, 208, 210, 211, 214, 216, 223, 229, 230, 231, 233, 234, 237, 239, 240, 247, 259, 260, 290, 291, 292, 302, 309, 311], "final_exp": 142, "finalpdf": 128, "find": [4, 9, 11, 12, 14, 15, 16, 28, 30, 32, 35, 37, 39, 40, 43, 46, 49, 50, 51, 52, 53, 55, 56, 57, 61, 64, 67, 69, 70, 71, 79, 82, 83, 84, 87, 88, 92, 94, 96, 98, 100, 101, 102, 105, 110, 113, 115, 117, 124, 128, 130, 138, 144, 150, 155, 160, 176, 183, 185, 186, 187, 191, 194, 196, 207, 208, 209, 210, 211, 212, 214, 218, 220, 221, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 239, 240, 241, 247, 256, 259, 260, 262, 265, 275, 287, 289, 291, 293, 298, 310], "find_carmichael_numbers_in_rang": [13, 128], "find_dn": 234, "find_dynamicsymbol": [150, 155, 299], "find_execut": 262, "find_first_n_carmichael": [13, 128], "find_linear_recurr": 227, "find_min_poli": 216, "find_transitive_subgroups_of_s6": 71, "findroot": [54, 96, 239], "fine": [11, 12, 13, 14, 39, 43, 51, 88, 92, 116, 205, 210, 211, 221, 233], "finish": [8, 12, 69, 70, 185, 255, 294], "finit": [13, 14, 17, 40, 41, 52, 65, 69, 74, 75, 76, 79, 87, 88, 89, 91, 92, 115, 117, 118, 177, 200, 206, 209, 212, 215, 217, 218, 221, 223, 224, 227, 229, 234, 236, 237, 240, 259, 265, 267, 277, 288, 291, 297], "finite_diff": [67, 88], "finite_diff_weight": [67, 88, 287], "finite_set": [67, 229], "finitediff": 67, "finitedistributionhandmad": 241, "finitedomain": 241, "finiteextens": 208, "finitefield": [211, 212], "finiteformalpowerseri": 223, "finitehandl": 65, "finitepred": 65, "finitepspac": 241, "finiterv": 241, "finiteset": [14, 41, 52, 67, 68, 229, 240, 241, 298], "finset_intersect": 67, "fip1": 39, "fip2": 39, "fire": 3, "first": [2, 4, 5, 7, 8, 9, 11, 12, 14, 15, 16, 22, 23, 24, 27, 28, 31, 35, 36, 39, 41, 42, 43, 45, 48, 52, 55, 56, 59, 61, 68, 69, 70, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 101, 102, 104, 105, 112, 113, 115, 117, 118, 124, 127, 128, 131, 132, 134, 136, 137, 144, 145, 148, 150, 151, 152, 153, 155, 156, 158, 159, 163, 164, 168, 172, 175, 180, 181, 184, 185, 186, 187, 188, 190, 191, 194, 196, 200, 204, 207, 208, 210, 212, 214, 215, 216, 217, 218, 221, 222, 223, 224, 227, 228, 230, 231, 233, 234, 237, 238, 239, 240, 241, 245, 247, 250, 252, 253, 254, 255, 259, 260, 262, 270, 275, 286, 287, 289, 291, 292, 293, 295, 297, 298, 299, 302, 304, 306, 307], "first_index": 120, "first_linear": 237, "first_moment_of_area": 104, "firstexact": 237, "firstli": [3, 13, 14, 41, 43, 159, 231], "firstlinear": 237, "firstnam": 9, "firstorderactivationdegroote2016": [18, 131, 134, 299], "fisher": 241, "fishersz": 241, "fisherz": 241, "fit": [3, 14, 15, 36, 68, 113, 124, 127, 128, 221, 237, 262, 292], "five": [18, 48, 51, 68, 77, 113, 140, 221, 234], "five_lemma": 68, "fivelemma": 68, "fix": [3, 4, 7, 12, 13, 14, 18, 24, 30, 35, 36, 69, 79, 81, 84, 86, 89, 93, 96, 100, 117, 124, 128, 130, 136, 137, 148, 149, 152, 155, 158, 175, 180, 184, 187, 191, 196, 200, 204, 207, 214, 216, 217, 218, 221, 227, 231, 239, 241, 259, 265, 267, 299, 302, 303, 304], "fixed_point": 158, "fixed_row_vector": 241, "fixedbosonicbasi": 191, "fixedfram": 204, "fket": 191, "fl": [18, 25, 26, 30, 132, 153, 215], "fl_": 132, "fl_m": 132, "fl_m_act": [18, 132], "fl_m_act2": 18, "fl_m_act3": 18, "fl_m_act_cal": 18, "fl_m_pa": [18, 132], "fl_m_pas2": 18, "fl_m_pas3": 18, "fl_m_pas_cal": 18, "fl_m_pas_inv": 18, "fl_m_pas_inv2": 18, "fl_m_pas_sym": 18, "fl_t": [18, 132], "fl_t2": 18, "fl_t3": 18, "fl_t_callabl": 18, "fl_t_inv": 18, "fl_t_inv2": 18, "fl_t_sym": 18, "flag": [2, 3, 14, 22, 37, 43, 48, 67, 69, 79, 80, 84, 86, 88, 103, 115, 118, 119, 124, 128, 152, 175, 207, 212, 214, 217, 218, 221, 222, 223, 229, 233, 234, 237, 239, 240, 247, 252, 253, 259, 262, 286, 297], "flag_fram": 152, "flag_joint": 152, "flagerror": 214, "flajolet": 218, "flake8": [11, 12], "flambda": 229, "flank": 89, "flat": [13, 102, 124, 210, 253], "flatmirror": 160, "flatrefract": 160, "flatten": [68, 88, 211, 243, 248, 259, 260, 299], "flavius_josephu": 80, "flavor": 222, "flaw": 13, "flaws_in_coverage_measur": 12, "flex": 299, "flexibl": [14, 22, 30, 35, 80, 88, 158, 207, 211, 240, 287], "flexion": 299, "flexur": 137, "flint": [13, 210, 211, 212], "flip": [148, 176, 185, 241, 302], "float": [2, 12, 15, 18, 30, 41, 43, 50, 69, 79, 88, 94, 96, 103, 105, 115, 116, 124, 128, 130, 131, 132, 134, 142, 144, 164, 205, 207, 210, 211, 212, 214, 217, 221, 233, 239, 241, 252, 260, 262, 286, 289, 299], "float16": 69, "float32": [69, 129, 130, 260], "float64": [14, 54, 69, 129, 241], "float80": [69, 221], "float_ceil": 221, "float_floor": 221, "floatbasetyp": 69, "floattyp": 69, "floatx": 221, "floor": [88, 94, 128, 130, 152, 211, 212, 221, 241], "floor1": 221, "floor2": 221, "floor_fram": 152, "floor_joint": 152, "floorfunct": 94, "flore": 148, "flores2023": 148, "flow": [41, 216], "floyd": 128, "fma": [69, 221], "fmax": 221, "fmin": 221, "fmpq_mat_charpoli": 210, "fmpq_mat_det": 210, "fmpq_mat_inv": 210, "fmpq_mat_solv": 210, "fmpq_mat_solve_dixon": 210, "fmpz": [211, 212], "fmpz_mat": 210, "fmpz_mat_charpoli": 210, "fmpz_mat_det": 210, "fmpz_mat_inv": 210, "fmpz_mat_solv": 210, "fmt": [210, 212, 216], "fn": [39, 55, 115, 124, 208, 217], "fn_fortran": 69, "fn_numpi": 69, "fname": 254, "fnm1": 39, "fnm2": 39, "focal": [98, 160, 164], "focal_length": 164, "foci": 98, "fock": 191, "fock_spac": 177, "fockspac": 177, "fockstat": 191, "fockstatebosonbra": 191, "fockstatebosonket": 191, "fockstatebra": 191, "fockstatefermionbra": 191, "fockstatefermionket": 191, "fockstateket": 191, "focu": [0, 13, 41, 98, 239, 291], "focus": [14, 15, 54, 214, 234, 236, 237, 239, 240, 298], "focus_dist": 98, "fofc": 148, "fold": [79, 88, 94, 132, 221, 228, 233], "fold_frac_pow": 221, "fold_func_bracket": 221, "fold_short_frac": 221, "folded_cond": 94, "folder": 8, "follow": [2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 16, 18, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 35, 36, 37, 39, 41, 42, 43, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 62, 64, 67, 68, 69, 70, 71, 74, 77, 78, 79, 80, 81, 84, 87, 88, 89, 92, 93, 94, 96, 100, 102, 104, 111, 112, 113, 115, 118, 120, 124, 128, 129, 134, 136, 137, 140, 148, 149, 151, 152, 153, 155, 156, 158, 159, 160, 164, 183, 186, 188, 191, 194, 196, 200, 206, 207, 208, 209, 212, 214, 215, 216, 217, 219, 220, 221, 222, 223, 228, 230, 231, 233, 234, 237, 238, 239, 240, 241, 242, 245, 246, 247, 252, 255, 256, 259, 260, 269, 270, 272, 286, 287, 289, 290, 292, 293, 297, 298, 302], "font": [8, 116, 205, 221], "fontsiz": [116, 205, 221], "foo": [60, 67, 69, 88, 186, 205, 259, 262], "foo_1": 186, "foo_2": 186, "foo_3": 186, "foobasi": 186, "footnot": [42, 196, 292, 293, 296], "for_i": 69, "for_ji": 69, "for_kji": 69, "foral": [79, 87, 90, 196], "forc": [2, 16, 19, 23, 25, 26, 27, 28, 30, 33, 36, 39, 42, 43, 88, 92, 94, 98, 104, 113, 115, 118, 131, 132, 134, 136, 137, 138, 140, 148, 149, 151, 153, 155, 156, 158, 179, 180, 194, 207, 209, 211, 230, 233, 234, 239, 252, 272, 274, 296, 297, 300, 302, 305, 306, 307, 308, 309], "force1": 149, "force_color": 252, "force_magnitud": 299, "force_o": 30, "force_on_child": 299, "force_on_o": 18, "force_on_p": 18, "force_on_par": 299, "force_p": 22, "force_p1": 18, "force_p2": 18, "force_r": 22, "force_vector": 30, "forceactu": [18, 148], "forcelist": [22, 26, 27, 30, 153, 303, 306, 309, 310], "forces_eq": 304, "forcing_ful": [22, 25, 26, 149, 153, 158, 307], "forcing_kin": 153, "fore": 65, "forecolor": [116, 205], "foreground": [116, 205], "foremost": 12, "forest": 259, "forg": [2, 8, 9, 130], "forget": [12, 51, 68, 297], "fork": [0, 5, 13, 302], "fork_i": 302, "fork_mc": 302, "forkcg1": 302, "forkcg3": 302, "forkcgnorm": 302, "forkcgpar": 302, "forklength": 302, "forkoffset": 302, "form": [3, 5, 11, 12, 13, 14, 15, 18, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 39, 41, 43, 46, 53, 54, 61, 64, 65, 66, 67, 69, 70, 78, 79, 80, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 101, 104, 108, 110, 111, 113, 115, 117, 120, 122, 124, 128, 130, 131, 132, 134, 136, 137, 138, 140, 141, 144, 148, 149, 151, 152, 153, 154, 156, 158, 168, 171, 172, 173, 175, 185, 186, 189, 191, 193, 196, 199, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 246, 247, 252, 253, 259, 265, 268, 269, 271, 272, 274, 280, 287, 291, 292, 293, 296, 297, 298, 299, 302, 303, 304, 306, 307, 309, 311], "form_eom": [13, 24, 149, 158, 304, 307], "form_field": 90, "form_lagranges_equ": [26, 27, 153, 303, 306, 311], "formal": [41, 51, 68, 87, 88, 96, 113, 118, 160, 196, 211, 214, 225, 228, 277], "formalpowerseri": 223, "formalpowerseriescompos": 223, "formalpowerseriesinvers": 223, "formalpowerseriesproduct": 223, "format": [3, 8, 11, 12, 15, 31, 37, 39, 52, 55, 56, 68, 80, 88, 89, 110, 111, 115, 118, 124, 127, 128, 136, 153, 154, 158, 164, 175, 185, 207, 210, 211, 216, 217, 219, 221, 231, 237, 240, 252, 262, 265, 269, 290, 293, 296, 299], "formatstr": 69, "formatt": 68, "former": [14, 22, 38, 69, 88, 93, 214, 216, 217, 234, 259], "formul": [18, 23, 25, 26, 36, 39, 53, 131, 132, 134, 149, 151, 152, 191, 299, 304, 305, 306], "formula": [4, 39, 48, 61, 67, 82, 87, 88, 92, 93, 94, 96, 101, 118, 124, 128, 159, 206, 208, 214, 217, 221, 223, 227, 230, 233, 234, 237, 291, 297], "fornberg": [39, 67], "fort": 89, "forth": [211, 216], "forthcom": 115, "fortran": [2, 14, 15, 21, 30, 39, 43, 67, 129, 130, 206, 254, 296], "fortran77": 254, "fortran90": 254, "fortranreturn": 69, "fortun": [69, 129, 217, 218, 306], "forum": [206, 240], "forward": [18, 23, 35, 67, 69, 124, 144, 151, 184, 233, 252, 302], "forward_diff": 144, "found": [0, 2, 3, 4, 5, 8, 11, 12, 18, 27, 30, 35, 41, 42, 48, 52, 67, 70, 71, 79, 80, 82, 84, 86, 88, 89, 90, 98, 99, 104, 113, 115, 124, 128, 130, 144, 150, 152, 153, 154, 195, 208, 209, 210, 211, 216, 217, 218, 221, 223, 224, 227, 228, 231, 234, 237, 238, 239, 240, 241, 245, 259, 260, 262, 296], "foundat": [80, 215, 216], "four": [5, 18, 28, 53, 69, 71, 80, 88, 92, 96, 118, 120, 128, 132, 134, 140, 145, 156, 164, 200, 207, 208, 210, 214, 217, 221, 229, 234, 237, 239, 241, 242, 265, 267, 270, 299, 301, 305], "four_group": 71, "fourier": [13, 88, 96, 115, 147, 184, 225, 277], "fourier_seri": [88, 224], "fourier_transform": 115, "fourierseri": 224, "fouriertransform": 115, "fourth": [48, 88, 89, 132, 209, 237, 287], "fox": 113, "fp": [69, 70, 88, 217, 223], "fp_group": [70, 79], "fpgroup": [70, 79], "fqyej": 89, "fr": [11, 18, 22, 25, 27, 30, 110, 115, 128, 148, 153, 241, 299, 302, 306, 309, 310], "frac": [15, 18, 28, 33, 35, 36, 39, 41, 43, 46, 48, 49, 53, 55, 67, 87, 88, 89, 90, 93, 94, 96, 113, 115, 124, 128, 130, 131, 132, 134, 144, 148, 194, 205, 206, 210, 212, 214, 217, 221, 223, 224, 228, 231, 234, 237, 238, 240, 241, 242, 259, 272, 274, 287, 291, 292, 296, 297, 303, 306], "frac2": 241, "frac_field": [211, 212], "frac_unifi": 212, "fracel": [212, 221], "fracfield": [211, 212], "fraction": [16, 88, 89, 92, 94, 104, 115, 124, 128, 130, 150, 197, 210, 211, 212, 214, 215, 218, 221, 223, 233, 234, 237, 239, 288, 289], "fractional_part": 94, "fractionalpart": 94, "fractionfield": [211, 212], "fracton": 221, "fragil": [14, 43], "fragment": [4, 89], "frame": [4, 18, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 148, 149, 150, 152, 153, 155, 156, 158, 200, 201, 202, 204, 256, 265, 272, 299, 303, 304, 306, 307, 309, 311], "frame1": 200, "frame2": [200, 202], "frame_a": 22, "frame_b": 22, "frame_i": 302, "frame_mc": 302, "frame_n": 22, "framecg1": 302, "framecg3": 302, "framecgnorm": 302, "framecgpar": 302, "framelength": 302, "framework": [13, 22, 23, 88, 151, 246, 252, 254, 260, 282], "francesco": 0, "franci": 215, "frank": [79, 80, 124, 259], "frechet": 241, "fredrik": 0, "free": [0, 11, 12, 13, 15, 23, 34, 48, 53, 54, 59, 67, 68, 69, 78, 79, 84, 88, 93, 100, 115, 120, 124, 128, 131, 134, 136, 137, 142, 145, 151, 152, 155, 160, 180, 198, 200, 203, 207, 208, 210, 212, 214, 215, 216, 217, 221, 223, 229, 231, 233, 234, 237, 239, 240, 247, 259, 291], "free_arg": 247, "free_dynamicsymbol": 200, "free_group": [70, 78, 79], "free_integ": 128, "free_modul": [208, 212], "free_symbol": [13, 15, 51, 69, 88, 97, 115, 124, 180, 198, 200, 217, 227, 234, 299], "free_symbols_in_domain": 217, "free_to_perm": 78, "free_var_index": 124, "freedom": [136, 149, 152, 153, 158, 241, 299, 301, 304, 305, 306], "freegroup": 70, "freeli": [4, 14, 60, 121, 148, 152, 208], "freemodul": 208, "freemoduleel": 208, "freespac": 160, "freevar": 124, "fregli": [18, 131, 132, 134, 299], "freir": 215, "freq_unit": 142, "frequenc": [89, 115, 142, 144, 165, 167, 175, 192], "frequent": [39, 79, 216, 228, 240], "fresh": 12, "freshli": 59, "fresnel": [164, 221, 231], "fresnel_coeffici": 164, "fresnel_equ": 164, "fresnel_integr": 96, "fresnelc": [96, 221, 231], "fresnelintegr": 96, "friction": 148, "fridai": 89, "friend": 36, "friendli": [5, 69, 113, 234, 236, 237, 239, 240, 254, 298], "friendlier": 210, "fro": 124, "frobeniu": [112, 124, 128, 214, 215], "from": [2, 3, 4, 5, 7, 8, 9, 11, 12, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 46, 48, 50, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 274, 275, 283, 286, 287, 289, 291, 292, 293, 296, 297, 298, 299, 302, 303, 304, 306, 307, 309, 310, 311], "from_algebraicfield": 212, "from_array_to_matrix": 243, "from_axis_angl": 61, "from_coeff_list": 144, "from_complexfield": 212, "from_ddm": 210, "from_dict": 217, "from_dict_sympi": 210, "from_dod": 210, "from_dod_lik": 210, "from_dok": [124, 210], "from_eul": 61, "from_ex": 212, "from_expr": [69, 217], "from_expressiondomain": 212, "from_expressionrawdomain": 212, "from_ff": 212, "from_ff_gmpi": 212, "from_ff_python": 212, "from_flat_nz": 210, "from_fractionfield": 212, "from_functionprototyp": 69, "from_gaussianinteg": 212, "from_gaussianrationalfield": 212, "from_globalpolynomialr": 212, "from_hyp": [107, 110], "from_index_summ": 120, "from_inertia_scalar": [155, 304], "from_int_list": 216, "from_inversion_vector": 80, "from_list": [210, 212, 217, 218], "from_list_flat": 210, "from_list_sympi": 210, "from_matrix": [46, 61, 144, 210], "from_meijerg": [107, 110], "from_monogenicfiniteextens": 212, "from_newtonian": [13, 24, 158, 304, 307], "from_poli": 217, "from_polynomialr": 212, "from_qq": 212, "from_qq_gmpi": 212, "from_qq_python": 212, "from_rational_express": [46, 144], "from_real": 229, "from_realfield": 212, "from_rep": 210, "from_rg": 77, "from_rotation_matrix": 61, "from_sequ": 80, "from_sympi": [211, 212], "from_sympy_list": 212, "from_tensor": 155, "from_zpk": [46, 144], "from_zz": 212, "from_zz_gmpi": 212, "from_zz_python": 212, "fromit": 88, "front": [79, 88, 160, 190, 212, 214, 217, 221, 233, 297, 302], "frontend": 210, "frontier": [124, 229], "frown": 15, "frstar": [22, 25, 27, 30, 148, 153, 302, 306, 309, 310], "frustrat": 3, "frv": 241, "frv_type": 241, "fsolv": [54, 299], "fsp": 113, "fsu": 115, "ftheta": 90, "fu": [14, 232, 233, 277], "fudg": 3, "fulfil": [113, 206], "full": [3, 4, 5, 11, 12, 13, 16, 18, 25, 26, 37, 41, 43, 51, 65, 67, 69, 79, 80, 88, 92, 96, 100, 101, 115, 120, 124, 130, 158, 200, 210, 211, 214, 215, 217, 221, 223, 233, 234, 260, 291, 297, 299], "full_cyclic_form": 80, "full_impl": 41, "full_pb": 113, "full_prec": [87, 221], "fullform": 130, "fulli": [3, 4, 11, 13, 22, 30, 35, 41, 79, 88, 105, 115, 118, 130, 136, 137, 149, 152, 191, 210, 211, 212, 218, 228, 241, 247, 299], "fullrank": [65, 69], "fullrankhandl": 65, "fullrankpred": 65, "fulltext": 91, "fully_qualified_modul": 221, "fully_symmetr": 247, "fun": [221, 238, 290], "func": [3, 4, 12, 14, 15, 40, 43, 63, 67, 69, 88, 90, 93, 96, 107, 109, 128, 130, 155, 180, 200, 210, 214, 217, 221, 222, 233, 237, 238, 239, 250, 255, 257, 259, 260, 262, 264], "func_field_modgcd": 214, "func_m_1": 69, "func_nam": [3, 69, 94, 124, 262], "funcminusoneoptim": 69, "funcnam": [12, 253], "function": [1, 2, 3, 5, 7, 11, 15, 18, 22, 23, 25, 26, 30, 32, 34, 36, 37, 38, 39, 41, 42, 44, 46, 49, 51, 53, 56, 58, 62, 63, 64, 66, 67, 68, 70, 71, 74, 79, 80, 83, 84, 86, 89, 90, 91, 92, 93, 97, 98, 99, 100, 105, 108, 109, 112, 114, 115, 116, 117, 120, 122, 127, 129, 131, 132, 133, 134, 136, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 157, 158, 163, 164, 165, 166, 170, 175, 176, 177, 180, 185, 186, 187, 188, 189, 190, 191, 194, 195, 200, 203, 204, 205, 206, 208, 210, 213, 214, 215, 216, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 235, 236, 239, 240, 241, 243, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 270, 271, 273, 274, 275, 276, 277, 280, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 295, 298, 299, 301, 303, 304, 305, 306, 307, 308], "function1": 118, "function2": 118, "function_arg": [69, 252], "function_exponenti": 130, "function_kwarg": 252, "function_nam": [7, 69, 253], "function_prototyp": 254, "function_rang": 67, "function_that_emits_a_warn": 12, "function_vari": 115, "functioncal": 69, "functionclass": [88, 221, 260], "functiondefinit": [69, 130], "functionmatrix": 120, "functionprototyp": 69, "functiontyp": 124, "functor": 68, "fundament": [41, 43, 67, 70, 78, 106, 113, 115, 195, 196, 211, 216, 234, 237, 241, 293], "fundamental_matrix": 241, "funtion_nam": 253, "further": [0, 2, 11, 14, 18, 23, 28, 35, 41, 43, 48, 64, 68, 88, 89, 94, 96, 100, 113, 115, 119, 120, 124, 130, 136, 141, 142, 149, 152, 153, 163, 206, 207, 208, 210, 214, 216, 217, 230, 231, 233, 237, 241, 247, 290, 291], "furthermor": [3, 13, 14, 43, 65, 88, 89, 118, 216, 230, 289, 291, 292], "furthest": [67, 89], "fuse": 69, "fused_multipli": 43, "futur": [3, 11, 12, 13, 14, 23, 27, 34, 41, 42, 69, 70, 88, 113, 115, 124, 130, 152, 158, 191, 195, 207, 209, 210, 220, 221, 233, 237, 246, 252, 255, 257, 260, 292, 298], "fuzzi": [14, 15, 41, 43, 44], "fuzzy_": 43, "fuzzy_and": [41, 42, 43], "fuzzy_not": [42, 43], "fuzzy_or": [41, 42], "fv": [18, 132, 212], "fv_m": [18, 132], "fv_m2": 18, "fv_m3": 18, "fv_m_callabl": 18, "fv_m_inv": 18, "fv_m_inv2": 18, "fv_m_pas2": 18, "fv_m_sym": 18, "fwht": 91, "fwrap": 253, "fx": [88, 90, 207, 237, 238], "fxx": 88, "fxy": 234, "fxz": 234, "fy": [90, 207, 238], "fz": 207, "fzx": [51, 234], "g": [2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 18, 22, 27, 28, 30, 31, 33, 41, 42, 43, 46, 54, 55, 57, 67, 68, 69, 70, 73, 76, 78, 79, 80, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 100, 104, 105, 106, 111, 114, 115, 117, 118, 124, 128, 130, 131, 133, 134, 136, 140, 144, 145, 148, 149, 152, 154, 155, 156, 158, 171, 175, 180, 186, 188, 189, 191, 194, 196, 197, 200, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 233, 234, 237, 238, 239, 240, 241, 242, 245, 246, 247, 252, 253, 254, 255, 257, 259, 260, 262, 274, 277, 287, 292, 296, 297, 298, 299, 302, 303, 304, 306, 307, 309, 310, 311], "g1": [46, 69, 73, 78, 79, 113, 124, 144], "g171": 89, "g18": 71, "g2": [46, 69, 73, 78, 79, 113, 117, 124, 144], "g3": [46, 79, 144], "g36": 71, "g36m": 71, "g36p": 71, "g4": [46, 144], "g72": 71, "g_": [71, 79, 86, 87, 96, 113, 124, 234], "g_0": [79, 234], "g_1": [79, 214, 217, 228, 234, 237], "g_2": [79, 117, 214, 228, 237], "g_frame": 152, "g_i": [79, 214, 228], "g_k": 79, "g_n": [87, 93, 217], "g_name": 216, "g_t": 79, "g_x": 214, "gain": [7, 16, 25, 26, 30, 46, 89, 144], "galoi": [75, 211, 212, 214, 217, 277], "galois_group": [212, 216, 217], "galoisgroup": [212, 216, 217], "galoistool": [128, 214], "galton": 241, "game": 231, "gamma": [4, 5, 12, 16, 30, 36, 43, 87, 88, 90, 92, 93, 113, 115, 147, 188, 206, 221, 231, 233, 237, 241, 297], "gamma2": 96, "gamma3": 96, "gamma_": [96, 145, 147], "gamma_0": 147, "gamma_1": [69, 147], "gamma_2": [69, 147], "gamma_3": 147, "gamma_5": 147, "gamma_distribut": 241, "gamma_distribution_and_the_use_of_the_distribution_in_the_bayesian_analysi": 241, "gamma_funct": [4, 96], "gamma_i": 214, "gamma_matric": [145, 147], "gamma_p": 96, "gamma_process": 241, "gamma_trac": 145, "gammabetaerf": [4, 93, 96], "gammadistribut": 241, "gammafunct": [4, 96], "gammainvers": 241, "gammaln": 221, "gammamatrix": 145, "gammamatrixhead": 145, "gammaprocess": 241, "gammasimp": [87, 88, 233], "gap": [22, 40, 79, 128, 218], "garbag": 252, "gate": [118, 171, 176, 178, 184, 185, 187, 282], "gate_idx": [171, 175], "gate_simp": 175, "gate_sort": 175, "gate_spac": 175, "gateinputcount": 118, "gathen": [214, 215], "gathen92": [214, 215], "gathen99": [214, 215], "gather": [237, 299], "gaunt": 206, "gauss": [4, 53, 96, 115, 124, 160, 209, 210, 216, 219, 239, 240], "gauss_chebyshev_t": 115, "gauss_chebyshev_u": 115, "gauss_conj": 160, "gauss_gen_laguerr": 115, "gauss_hermit": 115, "gauss_jacobi": 115, "gauss_jordan_solv": [119, 124], "gauss_laguerr": 115, "gauss_legendr": 115, "gauss_lobatto": 115, "gaussian": [41, 96, 115, 124, 128, 161, 195, 214, 217, 234, 239, 241, 282, 293], "gaussian_beam": 160, "gaussian_conj": 160, "gaussian_elimin": 124, "gaussian_prim": 128, "gaussian_quadratur": 115, "gaussian_reduc": 234, "gaussiandomain": 212, "gaussianel": 212, "gaussianinteg": [211, 212], "gaussianinvers": 241, "gaussianr": [211, 212], "gaussianrationalfield": [211, 212], "gaussopt": 160, "gave": [16, 88, 259], "gb": [11, 79, 140], "gbt": 144, "gcc": [2, 254], "gcd": [87, 88, 89, 124, 128, 187, 210, 211, 212, 215, 216, 217, 221, 233, 234], "gcd_list": 217, "gcd_term": [88, 217], "gcdex": [212, 217], "gcomm": 247, "gd": 241, "ge": [5, 41, 88, 93, 94, 96, 113, 124, 128, 130, 206, 209, 214, 217, 221, 231, 239, 259], "gear": 208, "gedd": [115, 215], "geddes92": [214, 215], "gede": 154, "gedg": 221, "gegenbau": [217, 221], "gegenbauer_poli": [96, 217], "gegenbauer_polynomi": 96, "gegenbauer_rul": 115, "gegenbauerc": 221, "gegenbauerc3": 96, "gegenbauerpolynomi": 96, "gen": [78, 79, 84, 85, 86, 88, 124, 128, 208, 211, 212, 214, 216, 217, 218, 219, 227, 233, 236, 239], "gen0": 70, "gen1": 70, "gen_": 70, "gen_count": 79, "gen_hermite_rul": 115, "gen_laguerre_rul": 115, "gen_mat": 241, "gen_spe": [200, 204], "gender": 5, "gener": [3, 8, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28, 30, 31, 33, 35, 37, 39, 41, 42, 43, 45, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 63, 65, 66, 67, 68, 70, 71, 72, 73, 76, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 102, 104, 106, 111, 113, 115, 116, 117, 118, 120, 124, 128, 129, 130, 131, 133, 134, 138, 144, 148, 149, 151, 152, 153, 154, 156, 158, 159, 163, 174, 175, 176, 177, 180, 185, 186, 189, 190, 191, 196, 198, 200, 201, 204, 205, 206, 207, 208, 209, 210, 212, 214, 217, 218, 219, 220, 221, 222, 223, 227, 230, 231, 233, 234, 236, 237, 238, 239, 241, 246, 247, 253, 254, 256, 257, 258, 259, 260, 265, 269, 270, 272, 273, 274, 280, 287, 289, 290, 291, 292, 293, 297, 298, 299, 301, 302, 303, 304, 306, 307, 309, 311], "general_sum_of_even_pow": 234, "general_sum_of_squar": 234, "generalis": [41, 93, 96, 113, 144, 208], "generalizations_of_fibonacci_numb": [88, 93], "generalized_hypergeometric_funct": 96, "generalized_laguerre_polynomi": 96, "generalized_multivariate_log": 241, "generalizedmultivariateloggamma": 241, "generalizedmultivariateloggammaomega": 241, "generalpythagorean": 234, "generalsumofevenpow": 234, "generalsumofsquar": 234, "generate_bel": [80, 259], "generate_derang": [93, 259], "generate_dimino": [76, 79], "generate_grai": 72, "generate_involut": 259, "generate_logo": 45, "generate_oriented_forest": 259, "generate_schreier_sim": [76, 79], "generator_matrix": 241, "generator_product": 79, "generators_and_rel": 76, "generatorserror": 214, "generatorsneed": 214, "generatortyp": 259, "genform": [237, 238], "genfrac": [93, 128], "genocchi": [93, 96, 217], "genocchi_numb": 93, "genocchi_poli": [93, 217], "genocchinumb": 93, "gens1": 84, "gens2": 84, "gens2a": 84, "gens_a": 84, "gens_f": 84, "gens_h": 79, "gens_i": 84, "gens_k": 79, "gensol": 237, "geodes": [18, 156, 159], "geodesi": 215, "geodesic_end_vector": 159, "geodesic_length": 159, "geodet": [159, 215], "geomalgorithm": 105, "geomet": [93, 208], "geometr": [18, 36, 43, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 124, 160, 208, 215, 241, 293], "geometri": [4, 19, 23, 97, 98, 99, 101, 102, 103, 104, 105, 115, 151, 156, 164, 213, 268, 275, 276, 282, 283, 291, 299], "geometric_conj": 160, "geometric_conj_ab": 160, "geometric_conj_af": 160, "geometric_conj_bf": 160, "geometric_distribut": 241, "geometricdistribut": 241, "geometricent": 103, "geometricrai": 160, "geometryent": [97, 98, 99, 101, 103, 104, 105], "geometryerror": [98, 101, 104, 105], "geometryresult": 100, "georg": [70, 208, 210, 237, 259], "geq": [88, 89, 96, 124, 217, 234, 241, 297], "geq0": 241, "gerardo": 206, "gerhard": 215, "german": 89, "get": [1, 3, 4, 5, 8, 11, 12, 13, 14, 17, 22, 25, 26, 27, 28, 30, 36, 38, 39, 41, 42, 43, 52, 54, 55, 56, 59, 60, 63, 64, 67, 68, 69, 71, 72, 77, 78, 80, 81, 83, 84, 87, 88, 89, 90, 92, 93, 94, 96, 101, 111, 113, 115, 117, 120, 124, 128, 130, 134, 136, 142, 144, 147, 153, 163, 164, 171, 175, 180, 185, 186, 187, 188, 193, 195, 196, 207, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 223, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 242, 243, 247, 248, 253, 259, 260, 261, 265, 269, 286, 289, 291, 292, 293, 296, 297, 298, 306], "get_adjacency_dist": 80, "get_adjacency_matrix": 80, "get_basi": 186, "get_bodi": 158, "get_class": 263, "get_color_arrai": 207, "get_comm": 247, "get_contraction_structur": [245, 246], "get_data": [13, 207], "get_default_datatyp": 254, "get_diag_block": [120, 124], "get_dimensional_depend": [193, 194], "get_domain": 217, "get_exact": 212, "get_field": [211, 212], "get_free_indic": [247, 248], "get_gen_sol_from_part_sol": 237, "get_indic": [245, 246, 247, 248], "get_interfac": 254, "get_joint": 158, "get_label": 207, "get_matrix": [13, 247], "get_mesh": 207, "get_mod_func": 263, "get_modulu": 217, "get_motion_param": 204, "get_num_denom": 216, "get_numpy_arrai": 69, "get_parabola_eqn": 135, "get_period": [96, 113], "get_perm_group": [71, 216], "get_permut": 191, "get_point": [13, 207], "get_positional_dist": 80, "get_precedence_dist": 80, "get_precedence_matrix": 80, "get_prototyp": 254, "get_r": [210, 212], "get_seg": 207, "get_subno": 191, "get_subset_from_bitstr": 72, "get_symmetric_group_sg": [84, 247], "get_sympy_dir": 252, "get_target_matrix": 175, "get_transvers": 84, "get_units_non_prefix": 199, "getitem": 210, "getn": 88, "geto": 88, "getsourc": 260, "getstat": 88, "getter": [13, 22, 30, 88], "gf": [13, 80, 89, 140, 208, 210, 211, 214, 216], "gf_": 214, "gf_add": 214, "gf_add_ground": 214, "gf_add_mul": 214, "gf_berlekamp": 214, "gf_cofactor": 214, "gf_compos": 214, "gf_compose_mod": 214, "gf_crt": [128, 214], "gf_crt1": [128, 214], "gf_crt2": [128, 214], "gf_csolv": [128, 214], "gf_degre": 214, "gf_diff": 214, "gf_div": 214, "gf_eval": 214, "gf_expand": 214, "gf_exquo": 214, "gf_factor": 214, "gf_factor_method": 214, "gf_factor_sqf": 214, "gf_from_dict": 214, "gf_from_int_poli": 214, "gf_gcd": 214, "gf_gcdex": 214, "gf_int": 214, "gf_irreduc": 214, "gf_irreducible_p": 214, "gf_lc": 214, "gf_lcm": 214, "gf_lshift": 214, "gf_monic": 214, "gf_mul": 214, "gf_mul_ground": 214, "gf_multi_ev": 214, "gf_neg": 214, "gf_normal": 214, "gf_pow": 214, "gf_pow_mod": 214, "gf_qbasi": 214, "gf_qmatrix": 214, "gf_quo": 214, "gf_quo_ground": 214, "gf_random": 214, "gf_rem": 214, "gf_rshift": 214, "gf_shoup": 214, "gf_sqf": 214, "gf_sqf_list": 214, "gf_sqf_p": 214, "gf_sqf_part": 214, "gf_sqr": 214, "gf_strip": 214, "gf_sub": 214, "gf_sub_ground": 214, "gf_sub_mul": 214, "gf_tc": 214, "gf_to_dict": 214, "gf_to_int_poli": 214, "gf_trace_map": 214, "gf_trunc": 214, "gf_valu": 214, "gf_zassenhau": 214, "gff": 217, "gff_list": [212, 217], "gfvar": 227, "gfzhang": 144, "gh": [79, 209, 240, 247], "ghcomm": 247, "gianni": [214, 217, 239], "giant": [128, 240], "gib": 217, "gibb": 224, "gibbs_phenomenon": 224, "gigabyt": 291, "gimp": 221, "giovan": 89, "giovini": [214, 215], "giovini91": 215, "git": [2, 7, 10, 11, 12], "gitconfig": 9, "github": [0, 2, 3, 5, 7, 8, 10, 11, 13, 52, 56, 59, 67, 88, 92, 104, 115, 124, 148, 195, 229, 240, 293], "gitignor": 11, "gitlab": 22, "gitter": [59, 293], "give": [2, 3, 4, 7, 11, 13, 14, 16, 18, 22, 30, 33, 35, 36, 37, 41, 42, 43, 48, 50, 52, 53, 54, 55, 56, 57, 61, 62, 64, 69, 70, 77, 79, 80, 81, 82, 87, 88, 89, 90, 93, 94, 96, 98, 100, 101, 103, 104, 112, 113, 115, 116, 118, 120, 124, 127, 128, 129, 131, 132, 134, 136, 140, 144, 152, 170, 185, 186, 188, 189, 193, 194, 196, 197, 199, 200, 204, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 221, 222, 223, 224, 228, 229, 230, 231, 233, 234, 237, 239, 240, 241, 252, 253, 254, 259, 269, 274, 289, 290, 292, 297, 298], "given": [2, 3, 5, 8, 12, 13, 15, 16, 18, 22, 28, 33, 36, 37, 39, 41, 43, 46, 48, 50, 53, 55, 61, 63, 64, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 84, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 112, 113, 115, 117, 118, 120, 124, 127, 128, 130, 134, 136, 138, 140, 142, 144, 145, 149, 150, 152, 153, 155, 158, 164, 181, 186, 188, 195, 196, 197, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 246, 247, 250, 252, 254, 256, 259, 260, 262, 265, 268, 270, 272, 274, 286, 292, 295, 297, 298, 299, 306], "given_condit": 241, "givens_rot": 124, "gj": [124, 210], "gj_dens": 210, "gl": 89, "glob": [16, 252], "global": [3, 4, 9, 12, 13, 14, 62, 63, 64, 67, 69, 70, 88, 100, 113, 130, 148, 156, 175, 181, 200, 202, 207, 208, 212, 214, 221, 234, 237, 238, 241, 252, 254, 255, 260, 268], "global_assumpt": [62, 63, 64], "global_dict": 130, "global_paramet": 94, "global_var": [69, 254], "globalpolynomialr": 211, "gloss": 228, "glossari": [16, 17], "glu": 196, "glue": 124, "gm": [89, 194], "gm_private_kei": 89, "gm_public_kei": 89, "gmail": [11, 206], "gmp": 2, "gmpy": [12, 88, 92, 211, 212, 296], "gmpy2": [2, 211, 212], "gmpyfinitefield": [211, 212], "gmpyinteg": 212, "gmpyrationalfield": 212, "gmvlg": 241, "gmvlgo": 241, "gn": 73, "gnu": 74, "go": [3, 4, 5, 7, 9, 11, 12, 14, 22, 28, 30, 31, 43, 59, 68, 69, 79, 89, 93, 94, 113, 153, 185, 196, 204, 207, 216, 217, 228, 231, 237, 289, 291, 292, 295, 297], "goal": [13, 15, 21, 31, 32, 68, 216, 218, 252, 253, 255, 290, 291], "goe": [6, 7, 10, 11, 12, 14, 43, 58, 124, 140, 228, 231, 240, 289, 292], "gold": 89, "gold_bug": 89, "goldbuggonavybeatarmyy": 89, "golden": [88, 92, 128], "golden_ratio": 88, "goldenratio": [88, 92, 222, 233], "goldstein": 237, "goldwass": 89, "golomb": [89, 128], "golub": 124, "golumb": 128, "gompertz": 241, "gompertz_distribut": 241, "gon": 76, "gonavybeatarmi": 89, "gonavybeatarmyyesyoucan": 89, "gone": 12, "goo": 89, "good": [3, 5, 7, 12, 14, 15, 27, 30, 41, 43, 51, 57, 69, 88, 89, 92, 100, 113, 124, 128, 208, 211, 212, 221, 228, 230, 231, 233, 237, 259, 286, 290, 293], "googl": [7, 206, 207, 240], "gordan": [178, 188, 206, 282], "gordon": [113, 170, 231], "gosper": 87, "gosper_norm": 87, "gosper_sum": 87, "gosper_term": 87, "got": [124, 208, 211, 214, 217, 220, 252, 253, 259, 260, 289, 291, 292], "gotcha": [12, 14, 15, 17, 23, 36, 88, 260, 290, 298], "gothic_re_im": 221, "goto": 69, "goui": 160, "gov": [4, 94, 96], "govern": [128, 131, 134], "gp": [217, 237], "gpa": 136, "gpu": [2, 30, 129], "gr": 79, "gracefulli": [130, 221, 245], "grad_field": [201, 268], "grade": [89, 116, 205, 217], "gradedlexord": 217, "gradient": [201, 206, 207, 265, 268, 274], "gradient_field": 272, "gradual": [18, 218], "grafarend": 215, "graham": [80, 93, 94, 128], "graham_scan": 105, "grai": [75, 83, 116, 160, 205, 207, 277], "gram": [124, 195, 196, 198], "grammar": [22, 130, 233], "grammar_fil": 130, "gramschmidt": 124, "grand": 67, "granger": [0, 177], "grantham": 128, "granvil": [93, 128], "graph": [2, 4, 15, 80, 96, 117, 124, 129, 210, 221, 240, 259, 292, 296], "graphic": [5, 55, 142], "graphviz": [5, 8, 292, 296], "grav_eq": 194, "gravc": 299, "gravd": 299, "gravit": [18, 33, 194, 274, 299, 303, 305, 309], "gravitational_const": [194, 198], "graviti": [13, 18, 22, 30, 33, 158, 274, 299, 303, 304, 306, 307, 309, 311], "gray_to_bin": 72, "graycod": 72, "graycode_subset": 72, "grayscal": 207, "great": [43, 160, 218, 221, 234, 260], "greater": [5, 48, 65, 80, 88, 93, 94, 96, 113, 117, 128, 144, 158, 212, 214, 217, 220, 228, 233, 237, 239, 241, 256, 259, 272, 287], "greaterthan": [88, 221], "greaterthanobject": 88, "greatest": [88, 93, 98, 128, 209, 211, 212, 214, 215, 217, 220], "greatli": 222, "greedi": [128, 214, 230, 233], "greedy_algorithm_for_egyptian_fract": 128, "greek": [5, 15, 60, 88, 128, 130, 208, 221], "greek_lett": 221, "green": [11, 12, 24, 79, 207], "greet": 118, "greuel": 215, "greuel2008": [208, 215], "grevlex": [88, 116, 205, 209, 214, 217, 220, 221], "grid": [39, 67, 68, 142, 207], "gridpoint": 67, "grigoryan": 238, "grlex": [88, 116, 205, 212, 217, 220, 221], "gro": 79, "groebner": [215, 216, 217, 220, 233, 239, 240], "groebnerbasi": [57, 209, 217, 220], "groebnertool": 214, "groot": [18, 131, 132, 134, 299], "ground": [12, 13, 107, 152, 208, 210, 211, 212, 214, 216, 217, 239, 296, 302, 308, 309, 310, 311], "ground_new": 212, "ground_root": 217, "ground_typ": 255, "group": [5, 7, 68, 75, 80, 81, 84, 85, 86, 88, 91, 93, 117, 118, 128, 132, 170, 179, 180, 191, 206, 207, 208, 212, 217, 233, 237, 239, 240, 247, 259, 277], "group_construct": 73, "group_nam": 117, "group_numb": 74, "group_ord": 117, "groupprop": [76, 79], "groups_count": 74, "grouptheori": 79, "grover": [178, 282], "grover_iter": 176, "grow": [14, 84, 88, 113, 124, 128, 211, 214], "growth": [77, 128, 210, 214, 287], "gruntz": [88, 223], "gr\u00f6bner": 213, "gscholar": 241, "gsl": [21, 254], "gsoc": 240, "gt": [65, 69, 88, 221, 241, 259], "gtkmathview": 221, "guarante": [12, 14, 38, 41, 48, 54, 69, 79, 80, 88, 100, 113, 115, 124, 158, 210, 211, 214, 216, 217, 237, 239, 240, 257, 262, 293, 297], "guard": 254, "guess": [13, 37, 68, 89, 92, 113, 116, 205, 214, 217, 231, 234, 292, 299], "gui": [9, 116, 205], "guid": [2, 6, 7, 8, 9, 11, 14, 15, 17, 20, 22, 27, 43, 53, 59, 68, 88, 95, 221, 234, 236, 237, 239, 240, 247, 290, 294, 295, 298, 300], "guidanc": 49, "guidelin": [3, 11, 14, 57, 237], "guiver": 215, "gumbel": 241, "gumbel_distribut": 241, "gumbel_max": 241, "gumbel_min": 241, "gumbeldistribut": 241, "gupta": [0, 240], "guzman": 11, "gx": 98, "gy": 237, "gymbal": 61, "gyz": 234, "gz": 79, "h": [0, 14, 16, 28, 39, 67, 68, 69, 70, 71, 72, 74, 79, 84, 87, 88, 89, 93, 96, 110, 113, 115, 119, 124, 125, 130, 144, 149, 152, 155, 160, 163, 175, 177, 180, 185, 189, 196, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 220, 221, 229, 233, 237, 239, 240, 241, 242, 247, 254, 275, 287, 296, 303], "h0": 96, "h1": [46, 68, 155], "h2": [46, 155], "h3": 46, "h5": 81, "h_": [68, 79, 84, 93, 96, 115], "h_0": [79, 84], "h_1": [79, 84, 240], "h_2": [79, 240], "h_i": [69, 84], "h_n": [84, 96, 115, 217, 240], "h_name": [69, 254], "ha": [2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 16, 18, 22, 23, 28, 30, 32, 33, 34, 35, 36, 39, 41, 42, 43, 48, 49, 50, 52, 53, 54, 55, 56, 57, 65, 67, 68, 69, 70, 71, 72, 74, 77, 78, 79, 80, 82, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 100, 101, 103, 104, 105, 111, 113, 115, 117, 118, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 136, 137, 140, 144, 145, 148, 149, 151, 152, 153, 158, 164, 165, 175, 176, 185, 188, 193, 196, 200, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 226, 228, 229, 231, 233, 234, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 252, 253, 254, 255, 256, 257, 259, 260, 262, 265, 267, 269, 270, 272, 274, 275, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 306], "haaheim": 237, "hack": [237, 250], "hackman": 128, "had": [13, 14, 18, 22, 27, 43, 52, 53, 80, 88, 89, 124, 128, 216, 217, 218, 221, 229, 231, 237, 239, 240, 255, 260, 286, 289, 292, 293], "hadamard": [120, 124, 175, 176, 187, 221], "hadamard_product": 120, "hadamard_transform": 91, "hadamardg": 175, "hadamardpow": [120, 221], "hadamardproduct": [120, 221], "hadn": 43, "hal": 110, "half": [16, 43, 46, 69, 88, 89, 93, 94, 96, 98, 104, 115, 117, 124, 128, 130, 136, 158, 160, 163, 188, 206, 212, 214, 216, 217, 229, 230, 231, 233, 241, 252, 259], "half_gcdex": [212, 217], "half_per": 212, "half_precis": 69, "half_wave_retard": 163, "hall": [70, 78, 241], "hallei": 69, "halt": 79, "halv": 216, "hamberg": 82, "hamburg": 259, "hamid": 148, "hamilton": [61, 72, 124], "hamiltonian": [72, 182], "hand": [4, 12, 13, 14, 18, 22, 27, 28, 31, 33, 36, 39, 41, 43, 50, 55, 68, 69, 71, 74, 80, 81, 88, 94, 96, 115, 118, 124, 128, 136, 140, 153, 158, 159, 163, 180, 183, 195, 200, 206, 208, 211, 212, 214, 216, 219, 231, 240, 252, 254, 256, 260, 272, 274, 291, 299], "handbook": [4, 70, 78, 79, 86, 96, 128], "handi": [9, 87, 88, 124, 221, 292], "handl": [5, 7, 11, 12, 14, 18, 21, 22, 27, 39, 41, 42, 43, 67, 69, 76, 80, 88, 94, 115, 116, 118, 122, 128, 129, 130, 136, 145, 171, 174, 180, 181, 186, 195, 210, 211, 217, 218, 227, 233, 237, 239, 242, 245, 253, 259, 260, 262, 292, 297], "handle_first": 115, "handle_nan": 69, "handler": [43, 62, 63, 64, 65, 66, 88, 95, 124], "handwritten": [116, 205], "hang": [12, 55, 124, 237, 238, 303, 306, 310], "hankel": [96, 115], "hankel1": [96, 221], "hankel2": [96, 221], "hankel_transform": 115, "hankelh1": [96, 221], "hankelh2": [96, 221], "hankeltransform": 115, "happen": [3, 4, 7, 11, 12, 13, 14, 15, 39, 41, 42, 43, 52, 61, 69, 80, 87, 88, 92, 100, 103, 112, 152, 186, 190, 196, 208, 214, 216, 217, 220, 229, 233, 237, 241, 260, 270, 289, 296, 297], "happi": 43, "happili": [115, 245], "hard": [3, 11, 12, 13, 14, 15, 22, 41, 80, 89, 124, 128, 191, 211, 221, 228, 237, 240, 289, 291], "harder": [4, 12, 13, 14, 41, 88, 113, 211, 252], "hardest": 89, "hardi": 128, "hardwar": [43, 69], "harm": 3, "harmless": [221, 293], "harmon": [88, 93, 128, 146, 170, 206, 221, 282], "harmonic_numb": 93, "harmonicnumb": [93, 221], "harmonicnumber2": 93, "harsh": [0, 240], "hartre": 146, "has_assoc_field": 212, "has_assoc_r": 212, "has_dup": 259, "has_empty_sequ": [87, 115], "has_finite_limit": [87, 115], "has_fre": 88, "has_integer_pow": 193, "has_only_gen": 217, "has_q_annihil": 191, "has_q_creat": 191, "has_reversed_limit": [87, 115], "has_varieti": 259, "has_xfre": 88, "hasattr": [13, 233, 255], "hash": [12, 14, 88, 212, 214, 222, 233, 237, 252, 254], "hashabl": [14, 15, 85, 88, 113, 259], "hasn": 27, "hat": [24, 32, 33, 35, 36, 124, 152, 200, 205, 269, 270, 272, 274, 275, 299], "hate": 221, "hav91": 70, "hava": 70, "have": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 21, 22, 23, 27, 28, 30, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 45, 46, 48, 50, 51, 53, 54, 55, 57, 59, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 78, 79, 80, 81, 84, 86, 87, 88, 89, 90, 92, 93, 94, 96, 98, 99, 103, 104, 106, 111, 112, 113, 115, 117, 118, 119, 120, 123, 124, 127, 128, 129, 130, 131, 132, 134, 136, 137, 142, 144, 145, 147, 149, 151, 153, 154, 155, 158, 175, 177, 180, 184, 186, 188, 189, 190, 191, 193, 194, 196, 199, 200, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 223, 224, 226, 228, 229, 230, 231, 233, 234, 237, 239, 240, 241, 242, 243, 245, 247, 248, 250, 251, 252, 254, 255, 256, 259, 260, 262, 265, 267, 269, 270, 271, 272, 275, 286, 287, 289, 290, 291, 292, 293, 296, 297, 298, 299, 301, 302, 304, 307, 310], "haven": 16, "hbar": [69, 167, 173, 186, 192, 196, 198, 206], "hd": 89, "he": [5, 93, 113, 214], "he_n": [96, 217], "head": [4, 38, 68, 88, 239, 241, 247, 262, 292], "header": [3, 12, 69, 253, 254], "headquart": 89, "heat": 196, "heavi": [2, 12, 241, 292], "heavili": [3, 228, 238], "heavisid": [4, 11, 96, 113, 115, 221], "heavisidediracdelta": 96, "heavisidestepfunct": 96, "heavisidetheta": 221, "hebrew": 89, "hedetniemi": 259, "heidelberg": 214, "height": [13, 68, 69, 104, 120, 160, 207, 208, 221, 228, 275, 303], "heiko": 74, "heinz": 82, "held": [27, 67, 89, 245, 297], "heldo": 89, "helen": 89, "helium": 146, "hellman": [89, 128], "hello": [89, 259], "helloworld": 89, "help": [3, 4, 5, 7, 9, 11, 12, 14, 17, 18, 22, 30, 36, 41, 52, 60, 69, 78, 88, 96, 113, 115, 124, 128, 129, 130, 136, 142, 166, 176, 207, 216, 218, 221, 230, 231, 234, 237, 238, 241, 252, 253, 254, 260, 282, 290, 293], "helper": [12, 13, 51, 67, 69, 79, 83, 86, 88, 113, 115, 116, 117, 176, 178, 187, 218, 228, 231, 234, 237, 238, 240, 253, 282], "hemispher": 275, "henc": [11, 33, 67, 69, 78, 79, 88, 90, 94, 96, 100, 113, 116, 118, 128, 140, 207, 208, 209, 214, 221, 231, 234, 238, 240, 252, 256, 270, 271, 272, 292, 297], "henri": 215, "hensel": 214, "hep": 145, "her": 240, "herbert": 87, "here": [3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 18, 21, 22, 25, 27, 28, 30, 31, 32, 33, 35, 36, 37, 39, 41, 42, 43, 48, 50, 51, 52, 53, 54, 55, 58, 59, 63, 64, 69, 70, 72, 74, 77, 78, 79, 80, 86, 87, 88, 89, 90, 92, 93, 94, 96, 104, 105, 106, 110, 111, 113, 115, 118, 124, 127, 128, 129, 130, 134, 136, 140, 144, 148, 153, 181, 186, 191, 205, 207, 208, 210, 211, 212, 214, 216, 217, 218, 221, 222, 228, 230, 231, 233, 234, 237, 239, 240, 241, 245, 246, 253, 254, 256, 257, 259, 260, 270, 272, 274, 285, 286, 287, 289, 291, 292, 293, 295, 296, 297, 299, 301, 302, 303, 309, 310, 311], "hermetian": 174, "hermit": [115, 124, 125, 210, 216, 217, 221, 241], "hermite_distribut": 241, "hermite_normal_form": [125, 210, 216], "hermite_poli": [96, 217], "hermite_polynomi": 96, "hermite_prob": 96, "hermite_prob_poli": [96, 217], "hermite_quadratur": 115, "hermite_rul": 115, "hermiteh": [96, 221], "hermitepolynomi": 96, "hermitian": [41, 53, 65, 88, 119, 124, 174, 180, 191, 221], "hermitian_adjoint": 174, "hermitian_matrix": 41, "hermitian_transpos": 174, "hermitianhandl": 65, "hermitianoper": [65, 180], "hermitianpred": 65, "heroic": [217, 239], "herrlich": 68, "hertz": 142, "hessenberg": 124, "hessenbergdecomposit": 124, "hessian": 124, "hessian_matrix": 124, "heurisch": [11, 13, 115], "heurist": [14, 15, 41, 55, 80, 113, 115, 124, 214, 215, 228, 230, 233, 239, 240, 252, 287, 297], "heuristicgcdfail": 214, "hex": 128, "hfst": 89, "hg": 79, "hg2sfuei7t": 89, "hgh": 79, "hi": [234, 239], "hidden": [12, 15, 32], "hide": [89, 221], "hierarch": 88, "hierarchi": [13, 133, 221, 241], "high": [4, 5, 7, 11, 12, 16, 30, 39, 41, 47, 48, 52, 69, 88, 92, 93, 116, 128, 205, 210, 211, 214, 216, 217, 219, 221, 234, 239, 282, 293], "higher": [14, 16, 39, 48, 67, 69, 88, 90, 92, 96, 99, 124, 130, 204, 206, 208, 210, 211, 214, 217, 223, 224, 228, 230, 233, 237, 239, 242, 260, 287], "highest": [16, 21, 69, 82, 117, 208, 217, 224, 234, 237], "highest_root": 117, "highli": [5, 88, 92, 141, 211, 217, 226, 254], "highlight": [11, 14], "hilbert": [178, 180, 186, 282], "hilbert_spac": [177, 180, 189], "hilbertspac": 177, "hill": [18, 29, 34, 89, 96, 115, 153, 200, 203, 265, 300], "hill_ciph": 89, "hillgart": 265, "hinder": 237, "hing": [24, 136, 137], "hint": [4, 12, 14, 30, 43, 68, 72, 79, 88, 91, 94, 115, 124, 128, 132, 144, 168, 172, 188, 190, 191, 200, 217, 228, 231, 239, 297], "hint_integr": 237, "hintnam": [237, 238], "hir": 88, "hire": [18, 46, 55, 124, 136, 137, 140, 142, 207, 224, 299], "histogram": 256, "histor": [13, 15, 37, 43, 89, 210, 237, 241], "histori": [11, 30], "hit": [88, 292], "hjeb": 89, "hk": [144, 234], "hline": 221, "hnf": [125, 210, 216], "hnf_modulu": 216, "ho05": [70, 78], "hobj": 221, "hoc": 113, "hoeij": 215, "hoeij02": 215, "hoeij04": [214, 215], "hoffmann": 265, "hol_coneq": [26, 153, 306], "hold": [14, 15, 16, 28, 43, 64, 68, 79, 84, 88, 89, 90, 94, 96, 110, 113, 124, 127, 130, 144, 146, 152, 154, 155, 187, 217, 231, 233, 237, 241, 254, 297], "holder": 88, "hole": 191, "holomorph": [88, 95, 113], "holonom": [13, 25, 26, 109, 112, 153, 158, 276, 283, 299, 301, 302, 304, 305, 306], "holonomic_constraint": 158, "holonomic_funct": 106, "holonomicfunct": [107, 110, 111], "holonomicsequ": 110, "holt": [70, 78, 79, 86], "holzer": 234, "hom": 68, "home": [12, 136, 216, 234], "homebrew": 8, "homeier": 206, "homeier96": 206, "homogen": [51, 61, 111, 115, 124, 144, 212, 214, 217, 234, 237, 238, 241], "homogeneous_differential_equ": 237, "homogeneous_ord": [212, 217, 234, 237], "homogeneouscoeffbest": 237, "homogeneouscoeffsubsdepdivindep": 237, "homogeneouscoeffsubsindepdivdep": 237, "homogeneousgeneralquadrat": 234, "homogeneousternaryquadrat": 234, "homogeneousternaryquadraticnorm": 234, "homomoprh": 208, "homomorph": 79, "homomorphismfail": 214, "homonym": 13, "hongguang": [232, 277], "hood": [2, 11, 15], "hook": [43, 129, 130, 221], "hookrightarrow": 88, "hope": [14, 21, 39, 79, 208], "hopefulli": [16, 40, 113], "horel": 89, "horizont": [13, 43, 57, 68, 98, 101, 103, 124, 138, 140, 158, 163, 207, 210, 221], "horizontal_direct": 68, "horner": [30, 88, 210, 214, 217], "horner_schem": 217, "horowitz": 115, "host": [2, 5], "hostedtoolcach": 252, "hostnam": 254, "household": 124, "how": [2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 25, 26, 28, 30, 35, 37, 38, 39, 40, 41, 42, 43, 48, 49, 68, 69, 71, 79, 80, 87, 88, 94, 95, 96, 100, 111, 115, 118, 120, 124, 128, 130, 136, 148, 152, 153, 156, 162, 163, 179, 183, 186, 187, 188, 193, 194, 200, 207, 208, 211, 212, 214, 216, 220, 221, 224, 228, 229, 231, 233, 234, 237, 238, 239, 241, 247, 252, 253, 254, 255, 257, 259, 260, 262, 270, 287, 289, 291, 292, 293, 294, 296, 297, 299, 301, 305, 309], "howev": [0, 2, 3, 4, 5, 8, 11, 12, 13, 14, 15, 16, 18, 22, 27, 31, 36, 37, 39, 41, 42, 43, 48, 51, 52, 55, 62, 64, 69, 71, 79, 80, 84, 87, 88, 89, 90, 93, 94, 96, 98, 113, 115, 118, 124, 128, 129, 130, 131, 134, 136, 140, 144, 148, 152, 153, 155, 156, 158, 159, 191, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 222, 228, 229, 230, 231, 233, 237, 238, 239, 240, 252, 253, 260, 269, 270, 274, 286, 289, 291, 293, 297, 298], "hp": 89, "hpobwzcfbubsnz": 89, "hradiu": 98, "hrzqe": 89, "hsin": 215, "hstack": [124, 210, 299], "ht": 115, "hta": 302, "htangl": 302, "htm": [80, 96, 115, 234], "html": [2, 4, 5, 8, 11, 12, 65, 69, 72, 80, 81, 82, 88, 89, 91, 93, 94, 96, 98, 104, 105, 115, 116, 124, 128, 142, 148, 215, 221, 224, 226, 229, 230, 234, 237, 241, 253, 255, 257, 259, 260, 293], "htmldoc": 8, "http": [0, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 34, 41, 43, 59, 61, 63, 64, 65, 67, 68, 69, 71, 72, 74, 76, 77, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 104, 105, 106, 110, 113, 115, 116, 117, 118, 120, 124, 128, 136, 142, 144, 146, 147, 148, 160, 162, 163, 164, 166, 167, 168, 172, 173, 174, 177, 179, 180, 189, 191, 200, 202, 203, 205, 206, 210, 212, 215, 217, 220, 221, 224, 226, 228, 229, 230, 233, 234, 237, 240, 241, 253, 254, 255, 257, 259, 260, 262, 265, 267, 271, 273, 275, 293, 296, 302, 303], "hu": [128, 210], "hubbard": 154, "huge": [115, 128, 217, 257], "hull": 105, "hulpk": 79, "human": [4, 11, 37, 113, 193, 217, 221, 299, 300], "humphrei": 117, "hundr": [129, 260, 291], "hurdl": 22, "hurt": 12, "hurwitz": [93, 96], "hurwitz_zeta_funct": 96, "hw": [167, 192], "hwp": 163, "hxz": 234, "hy": 98, "hybrid": 211, "hydrogen": [69, 282], "hyper": [15, 88, 93, 96, 107, 110, 221, 223, 231, 233, 239, 241, 297], "hyper_algorithm": 223, "hyper_r": 223, "hyperbol": [96, 130, 131, 218, 240, 293, 297], "hyperbolic_funct": 94, "hyperbolicfunct": 94, "hyperegeometr": 233, "hyperexpand": [88, 96, 110, 113, 231, 233], "hyperfocal_dist": 164, "hypergeometr": [92, 93, 106, 112, 113, 215, 232, 233, 237, 239, 241, 277, 297], "hypergeometric_distribut": 241, "hypergeometricdistribut": 241, "hypergeometricfunct": 96, "hypergeometricpfq": 221, "hyperlink": 4, "hyperplan": 117, "hypersimilar": 233, "hypersimp": [87, 233], "hypot": [69, 221], "hypotenus": [69, 104, 159], "hypothesi": 2, "hypothet": 256, "hz": 142, "i": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 18, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 171, 172, 174, 175, 177, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 274, 275, 286, 287, 289, 290, 292, 293, 295, 296, 297, 298, 299, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311], "i0": [145, 163, 247], "i1": [22, 30, 136, 145, 247], "i12": 30, "i2": [22, 30, 145, 247], "i23": 30, "i3": [22, 30, 124, 145, 247], "i31": 30, "i4": [145, 247], "i5": 145, "iT": 113, "i_": [96, 113, 231, 241, 242], "i_0": 241, "i_1": [78, 191, 217, 242], "i_2": [78, 191, 217], "i_a": 242, "i_b": 242, "i_b_bo": 22, "i_b_o": 22, "i_block": 303, "i_c_d": 22, "i_k": 241, "i_n": [216, 217, 242], "i_p_o": 22, "i_p_q": 22, "i_pendulum": 303, "i_r": 78, "i_xi": [98, 104], "i_xx": [98, 104], "i_yi": [98, 104], "ia": [127, 299], "iamit": 240, "ib": 94, "ibin": [118, 259], "ibm": [11, 233], "ibzz": 307, "ic": [55, 128, 237, 299], "icomp": 247, "icomp1": 247, "icomp2": 247, "icosahedr": 81, "id": [68, 84, 94, 243, 299], "id_a": 68, "id_b": 68, "idea": [3, 7, 11, 12, 14, 15, 22, 41, 42, 43, 73, 79, 86, 88, 89, 100, 106, 113, 115, 128, 145, 191, 195, 196, 208, 210, 211, 230, 233, 234, 237, 240, 254, 260, 297], "ideal": [12, 22, 23, 35, 41, 69, 125, 151, 155, 200, 210, 212, 214, 215, 216, 217, 218, 233, 240, 265], "idempot": 69, "ident": [3, 14, 15, 16, 18, 28, 43, 45, 65, 68, 70, 78, 79, 80, 86, 88, 89, 93, 94, 104, 111, 117, 120, 124, 145, 147, 152, 153, 175, 177, 180, 196, 208, 209, 210, 214, 215, 216, 217, 221, 230, 233, 237, 240, 245, 247, 252, 259, 260, 262, 270, 289, 293, 297], "identif": [113, 240], "identifi": [4, 12, 13, 14, 25, 41, 42, 67, 81, 88, 91, 92, 115, 124, 134, 140, 158, 179, 180, 208, 211, 212, 222, 230, 233, 237, 238, 240, 241, 260], "identity_hom": 208, "identityfunct": 94, "identityg": 175, "identitymatrix": 221, "identitymorph": 68, "identityoper": 180, "ideologi": [69, 240], "idiff": [88, 105], "idiom": [15, 289, 290], "idl": 69, "idx": [67, 69, 221, 245, 246, 253], "ie": [80, 234], "ieee": [88, 89], "ieilehfstsfxe": 89, "ieilh": 89, "ieilhhfstsfqy": 89, "ifascii_nougli": 221, "ifels": 221, "iff": [35, 36, 43, 65, 74, 80, 89, 118, 124, 208, 216, 231, 234, 252], "ifft": 91, "ifndef": [69, 254], "ifork11": 302, "ifork22": 302, "ifork31": 302, "ifork33": 302, "ifort": 2, "ifp": 67, "iframe11": 302, "iframe22": 302, "iframe31": 302, "iframe33": 302, "ifwht": 91, "igcd": [88, 128, 209], "igcd_lehm": 88, "igcdex": 88, "ignor": [11, 12, 13, 14, 16, 37, 43, 69, 79, 88, 89, 93, 94, 98, 103, 113, 118, 124, 128, 144, 149, 150, 156, 188, 191, 200, 207, 217, 221, 222, 233, 234, 239, 240, 253, 297, 302], "ignore_exception_detail": 252, "ignore_warn": [3, 149, 250, 255, 257, 260], "igusa": 241, "ii": [41, 94, 113, 115, 217, 221, 229, 237, 240, 243], "iii": [115, 221, 237], "iin": 117, "ij": [65, 124, 191, 196, 206, 241, 243], "ijk": [69, 246], "ijklm": 243, "ijr22d": 89, "ijth": 117, "il": 241, "ilcm": [88, 128], "ild_deflection_jump": 136, "ild_moment": 136, "ild_react": 136, "ild_rotation_jump": 136, "ild_shear": 136, "ild_vari": 136, "ilex": 208, "ill": [48, 130, 194], "illinoi": 67, "illumin": 4, "illustr": [69, 124, 149, 196, 211, 224, 228, 305, 306], "im": [43, 66, 88, 94, 113, 121, 208, 221, 222, 229, 237, 293], "imag": [2, 8, 24, 30, 35, 36, 45, 79, 152, 160, 164, 208, 214, 221, 229, 240, 270, 306, 308], "imagemagick": 8, "imageset": [229, 240, 298], "imaginari": [3, 4, 16, 30, 41, 43, 48, 52, 54, 61, 65, 66, 88, 92, 94, 96, 124, 211, 212, 217, 221, 222, 229, 233, 240], "imaginary_numb": [41, 65, 88], "imaginary_unit": [88, 221], "imaginaryhandl": 65, "imaginarypred": 65, "imaginaryunit": [12, 88, 221], "imath": 231, "imbu": 90, "immateri": 89, "immedi": [3, 12, 14, 41, 53, 71, 79, 88, 113, 118, 158, 191, 208, 211, 242, 253, 260], "immut": [13, 14, 15, 36, 88, 119, 122, 126, 212, 237, 242, 280, 286, 293], "immutabledensematrix": [90, 119, 120, 121, 124, 241], "immutabledensendimarrai": [14, 242], "immutablematrix": [119, 120, 124, 144, 158, 200, 241, 265, 268, 293], "immutablesparsendimarrai": 242, "impact": [13, 148], "implement": [2, 4, 5, 11, 12, 13, 14, 15, 17, 18, 21, 22, 23, 28, 32, 34, 35, 36, 38, 42, 43, 52, 54, 56, 57, 58, 61, 62, 63, 64, 67, 68, 69, 70, 73, 74, 78, 79, 80, 85, 88, 89, 91, 93, 94, 96, 99, 101, 108, 109, 111, 112, 115, 118, 119, 124, 128, 129, 130, 131, 132, 134, 148, 151, 156, 160, 162, 163, 166, 175, 176, 184, 185, 187, 195, 201, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 225, 228, 229, 230, 233, 234, 237, 238, 239, 240, 241, 245, 246, 256, 259, 260, 273, 276, 280, 287, 291, 297, 299], "implemented_funct": [14, 129, 253, 260], "impli": [5, 14, 15, 16, 18, 41, 61, 65, 69, 79, 118, 140, 191, 207, 212, 214, 221, 229, 231, 237, 239, 242, 245, 246, 259, 272], "implic": [14, 88, 118, 214], "implicit": [14, 31, 41, 55, 69, 86, 88, 130, 134, 153, 154, 158, 207, 237, 239, 243, 246, 253, 254, 265, 268, 275, 289], "implicit_appl": 130, "implicit_circl": 275, "implicit_multipl": 130, "implicit_multiplication_appl": 130, "implicitli": [14, 15, 41, 42, 43, 80, 88, 115, 208, 211, 239], "implicitregion": [265, 268, 275], "implicitseri": 207, "implieddoloop": 69, "import": [2, 3, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 275, 286, 287, 289, 291, 292, 293, 295, 296, 297, 298, 299, 302, 303, 304, 306, 307, 309, 310, 311], "import_modul": [2, 12], "importantli": [14, 41, 43, 218, 256], "importerror": 2, "importlib": 13, "impos": [3, 18, 137], "imposs": [3, 4, 12, 13, 14, 15, 43, 55, 88, 211, 230, 237, 238, 250, 287, 289, 297], "impract": [237, 287], "imprecis": 13, "impress": 16, "improp": [96, 115], "improperli": 88, "improv": [2, 3, 7, 11, 12, 13, 14, 18, 23, 42, 43, 88, 113, 158, 207, 211, 214, 215, 217, 218, 220, 222, 237, 240, 246, 287, 293], "impuls": [46, 144], "impulse_respons": 46, "impulse_response_numerical_data": 142, "impulse_response_plot": 142, "imul_num": 212, "in_terms_of_gener": 208, "inabl": 238, "inaccur": 212, "inappropri": 90, "inc": [34, 203, 215], "incent": 104, "inch": 207, "incid": [160, 164], "incircl": 104, "inclin": [138, 208], "includ": [2, 3, 4, 5, 8, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 25, 27, 30, 33, 36, 41, 43, 45, 48, 51, 52, 56, 59, 64, 65, 67, 68, 69, 80, 84, 87, 88, 89, 90, 92, 93, 94, 96, 100, 106, 113, 115, 118, 120, 122, 123, 124, 128, 129, 130, 131, 134, 136, 146, 148, 151, 158, 171, 175, 180, 185, 188, 189, 199, 209, 210, 212, 213, 214, 216, 217, 220, 221, 222, 227, 228, 229, 231, 233, 236, 237, 238, 239, 241, 244, 247, 250, 252, 254, 255, 256, 257, 259, 265, 267, 269, 274, 276, 287, 291, 292, 293, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307], "include_dir": 253, "include_numer": 22, "include_pydi": 22, "include_self": 216, "includepr": [212, 214, 217], "inclus": [5, 13, 87, 138, 140, 184, 208, 227, 228, 229, 240], "inclusion_hom": 208, "incom": [216, 241], "incommensur": 67, "incompat": 50, "incomplet": [2, 4, 5, 88, 93, 96, 130, 209, 211, 217, 221, 223, 239, 240], "incomplete_gamma_funct": 96, "inconclus": 239, "incongru": 231, "inconsist": [35, 41, 43, 62, 64, 87, 196, 200, 204, 233, 237, 239, 240], "inconsistentassumpt": 41, "inconveni": 221, "incorpor": [0, 2, 19, 39, 133, 209, 233, 301], "incorrect": [3, 5, 11, 12, 13, 42, 43, 54, 79, 88, 98, 128, 136, 142, 204, 210, 212, 237, 240, 253, 256, 257], "incorrectli": [4, 11, 13, 14, 43, 97, 98, 124, 209], "increas": [16, 18, 21, 32, 35, 36, 53, 67, 68, 80, 86, 87, 88, 91, 92, 96, 124, 128, 129, 158, 175, 200, 202, 211, 214, 216, 217, 223, 226, 230, 237, 241, 257, 259], "increment": [69, 79, 80, 81, 87, 104, 128, 241], "incur": [69, 129], "ind": [84, 223, 247], "inde": [3, 12, 14, 39, 43, 76, 79, 87, 113, 128, 208, 231, 237, 248, 252, 291], "indefinit": [12, 15, 61, 94, 112, 113, 115, 124, 130, 212, 214, 215, 217, 226, 287], "indent": [4, 16, 262], "indent_cod": 221, "indep": 237, "indep_div_dep": 237, "independ": [15, 16, 22, 25, 27, 33, 43, 53, 65, 67, 69, 79, 87, 88, 90, 96, 105, 113, 115, 117, 124, 144, 153, 154, 158, 189, 196, 207, 209, 211, 216, 217, 223, 224, 231, 233, 234, 237, 238, 239, 240, 241, 247, 252, 253, 272, 291, 292, 299, 302, 304, 306], "indetermin": [41, 42, 88, 124, 214, 226, 239], "indeterminate_form": 88, "index": [2, 8, 11, 12, 13, 16, 22, 30, 31, 43, 48, 55, 56, 57, 61, 69, 77, 79, 80, 84, 87, 88, 89, 90, 93, 94, 96, 99, 104, 113, 115, 118, 120, 124, 127, 128, 130, 132, 144, 158, 160, 162, 164, 165, 175, 184, 186, 188, 191, 196, 200, 207, 208, 210, 212, 216, 217, 218, 221, 226, 227, 231, 239, 241, 242, 244, 245, 247, 248, 253, 280], "index_group": 191, "index_method": 245, "index_order_new": [242, 243], "index_order_old": [242, 243], "index_typ": 247, "index_vector": 61, "indexconformanceexcept": 245, "indexedbas": [67, 69, 87, 88, 221, 239, 245, 246, 253], "indexerror": [80, 124, 217], "indexing_maxterm": 118, "indexing_minterm": 118, "indic": [3, 4, 11, 12, 16, 32, 38, 41, 52, 55, 56, 67, 68, 69, 70, 72, 77, 79, 80, 81, 83, 84, 86, 87, 88, 91, 92, 93, 96, 98, 103, 104, 113, 115, 118, 120, 124, 127, 128, 145, 158, 175, 186, 188, 189, 191, 196, 200, 206, 210, 211, 212, 216, 217, 218, 221, 228, 229, 230, 233, 234, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 253, 254, 259, 293, 306], "indices_contain_equal_inform": [96, 191], "indici": [110, 111, 112, 237], "indirect": [12, 88, 90, 96, 128, 191, 237], "indirectli": [14, 41], "individu": [11, 12, 13, 28, 41, 43, 46, 50, 53, 88, 94, 99, 104, 105, 117, 120, 124, 144, 163, 181, 185, 206, 229, 237, 239, 252, 293], "induc": [88, 124, 216, 230, 259], "induct": 208, "ineffici": [51, 88, 124, 211], "inequ": [14, 15, 41, 42, 43, 49, 88, 207, 214, 229, 231, 235, 277], "inequival": 113, "inert": [216, 237], "inerti": [25, 26, 28, 30, 149, 153, 155, 158, 299, 302, 303, 306, 309], "inertia": [13, 21, 22, 23, 30, 32, 35, 36, 136, 137, 147, 149, 151, 158, 200, 216, 282, 300, 303, 304, 305, 307, 309, 310, 311], "inertia_dyad": 200, "inertia_of_point_mass": [13, 155], "inertia_tupl": [149, 155], "inexact": [14, 16, 57, 88, 210, 212], "inexpens": 14, "inexpress": 217, "inextens": 18, "inf": [69, 80, 88, 124, 212, 214, 217, 229, 237, 241], "infal": 289, "infanc": 100, "infeas": [214, 217], "infeasiblelperror": 239, "infer": [41, 63, 64, 80, 88, 115, 211, 220, 221, 226, 231, 237, 253], "infimum": 229, "infin": [15, 41, 50, 65, 87, 88, 93, 94, 96, 101, 113, 115, 124, 164, 212, 214, 217, 221, 226, 227, 228, 229, 233, 236, 237, 241], "infinit": [41, 43, 50, 51, 65, 87, 88, 89, 92, 93, 94, 101, 102, 115, 124, 128, 144, 159, 177, 196, 208, 216, 221, 222, 223, 226, 227, 228, 229, 233, 234, 236, 239, 246, 259, 287, 297, 298, 308], "infinite_product": 87, "infinitehandl": 65, "infinitepred": 65, "infinitesim": [33, 237, 272], "infix": 88, "inflect": 206, "influenc": [12, 18, 70, 136, 159, 208, 209, 299], "info": [5, 9, 11, 16, 144, 221, 237, 238], "inform": [2, 3, 4, 5, 7, 9, 11, 14, 15, 16, 22, 23, 24, 25, 27, 28, 30, 31, 36, 38, 41, 42, 45, 48, 57, 58, 64, 65, 68, 69, 70, 74, 79, 80, 86, 88, 89, 93, 96, 100, 113, 115, 117, 120, 124, 128, 129, 130, 137, 149, 150, 151, 152, 153, 155, 158, 186, 191, 196, 200, 205, 207, 210, 211, 216, 217, 221, 222, 228, 231, 233, 234, 239, 240, 241, 245, 246, 247, 252, 253, 254, 255, 256, 265, 270, 272, 297, 299, 302], "informatik": 259, "informatiqu": 218, "infrastructur": [221, 238], "infti": [4, 14, 15, 41, 65, 87, 88, 89, 93, 94, 96, 113, 115, 130, 208, 217, 224, 228, 231, 237, 240, 241, 287, 291, 297], "inftyright": 240, "infunct": 88, "inher": [22, 260, 289], "inherit": [13, 62, 88, 95, 118, 120, 121, 131, 134, 148, 152, 156, 159, 180, 189, 206, 221, 241, 246, 254, 255], "inhomogen": [234, 237, 239], "inhomogeneousgeneralquadrat": 234, "inhomogeneousternaryquadrat": 234, "init": 239, "init_cond": 90, "init_ipython_sess": 116, "init_print": [13, 14, 48, 53, 59, 69, 80, 92, 115, 116, 124, 137, 205, 208, 209, 220, 287, 291, 293, 296, 297, 298], "init_python_sess": 116, "init_sess": [2, 116, 296], "init_subgroup": 79, "init_vprint": [28, 31, 35, 36, 149, 155, 157, 200, 202, 204, 205, 303], "initcond": [107, 109, 110], "initi": [5, 15, 18, 22, 25, 26, 27, 30, 31, 36, 41, 46, 54, 63, 79, 83, 88, 89, 90, 93, 96, 104, 106, 107, 110, 111, 112, 113, 115, 116, 128, 130, 137, 138, 140, 142, 144, 149, 153, 155, 158, 163, 171, 180, 201, 202, 205, 206, 214, 216, 217, 221, 227, 231, 233, 237, 239, 240, 246, 254, 261, 262, 265, 267, 268, 269, 270, 299, 304, 306, 307, 311], "initial_condit": [22, 30], "initial_exp": 142, "initializing_quadratic_siev": 128, "initialor": 55, "inject": [14, 79, 88, 208, 212, 217, 293], "inlin": [4, 12, 116, 205, 221, 254, 299], "inlist": 200, "inner": [41, 55, 87, 113, 124, 130, 174, 177, 178, 183, 185, 186, 189, 191, 200, 204, 210, 216, 223, 265, 282], "inner_endomorph": 216, "inner_product": 179, "innerendomorph": 216, "innermost": 88, "innerproduct": [174, 179, 180, 186, 188, 191], "inout": 69, "inoutargu": [69, 254], "inp_vec": [27, 306], "inplac": 212, "input": [4, 5, 11, 12, 15, 16, 18, 21, 22, 27, 30, 31, 43, 46, 52, 55, 61, 67, 70, 84, 88, 89, 91, 92, 93, 94, 102, 115, 117, 118, 124, 128, 130, 131, 132, 134, 138, 140, 141, 142, 144, 152, 154, 158, 164, 187, 200, 202, 204, 210, 211, 212, 214, 217, 218, 219, 220, 221, 222, 229, 233, 234, 237, 239, 241, 243, 253, 254, 256, 257, 259, 260, 262, 286, 292, 293, 297, 299, 302, 306], "input_var": [131, 134], "inputargu": [69, 254], "inputoutput": 254, "inquiri": 88, "inradiu": 104, "inria": [110, 115], "insconsist": 88, "inscrib": 104, "insensit": [30, 69, 124, 221, 252, 254], "insert": [18, 68, 70, 124, 130, 134, 136, 186, 191, 221, 241, 262, 299], "insertion_angl": 299, "insertion_dist": 299, "insertion_segment_length": 299, "insid": [5, 12, 13, 14, 15, 16, 21, 27, 36, 43, 79, 80, 85, 88, 98, 99, 104, 136, 150, 190, 191, 195, 196, 205, 217, 221, 229, 231, 234, 239, 240, 241, 243, 245, 256, 260, 292, 293, 306], "insidepoli": 104, "insight": [50, 290, 301], "inspect": [12, 13, 18, 41, 124, 132, 134, 216, 227, 258, 260, 284], "inspir": [238, 293, 303], "instal": [2, 5, 12, 15, 16, 45, 92, 129, 210, 211, 212, 221, 253, 260, 290, 296], "instanc": [1, 3, 4, 5, 12, 13, 14, 15, 18, 22, 31, 33, 38, 41, 42, 43, 62, 63, 64, 66, 68, 69, 71, 79, 81, 83, 88, 90, 92, 93, 94, 96, 101, 104, 105, 106, 111, 112, 115, 116, 120, 123, 124, 128, 130, 131, 132, 134, 136, 145, 148, 149, 153, 156, 158, 159, 164, 171, 175, 181, 185, 186, 188, 190, 191, 200, 202, 205, 207, 210, 211, 212, 216, 217, 218, 219, 221, 229, 231, 233, 237, 239, 240, 241, 245, 246, 247, 252, 253, 254, 256, 259, 260, 265, 267, 268, 269, 270, 272, 274, 286, 287, 292, 297, 298, 304, 307], "instantan": [18, 272], "instanti": [18, 61, 68, 69, 80, 88, 96, 101, 103, 104, 120, 130, 131, 132, 134, 148, 153, 156, 159, 181, 189, 200, 208, 210, 212, 216, 241, 265, 269], "instantia": 207, "instead": [2, 3, 4, 5, 8, 11, 12, 13, 14, 15, 16, 18, 22, 27, 30, 32, 33, 35, 36, 37, 41, 42, 43, 50, 52, 53, 55, 56, 57, 60, 61, 62, 64, 68, 69, 79, 81, 84, 88, 90, 91, 92, 93, 96, 115, 116, 118, 120, 121, 124, 128, 131, 134, 142, 145, 147, 148, 158, 189, 193, 200, 205, 207, 208, 210, 211, 212, 214, 216, 217, 219, 221, 223, 231, 233, 237, 239, 240, 241, 245, 246, 247, 250, 255, 256, 257, 259, 260, 272, 275, 286, 287, 289, 291, 292, 293, 297, 298, 306], "institut": 218, "instruct": [2, 4, 5, 7, 8, 9, 11, 13, 16, 39, 44, 58, 69, 221, 239, 253, 254, 305], "insuffici": [37, 124], "int": [2, 4, 5, 12, 13, 14, 15, 16, 41, 42, 43, 61, 67, 69, 74, 80, 88, 89, 90, 93, 94, 96, 97, 104, 113, 115, 116, 118, 124, 125, 128, 130, 132, 134, 142, 144, 152, 171, 175, 176, 185, 200, 202, 204, 205, 206, 207, 211, 212, 216, 217, 218, 221, 223, 224, 226, 234, 237, 238, 241, 253, 257, 259, 260, 262, 289, 291, 292, 296, 297], "int1": [63, 64], "int16": 69, "int2": [63, 64], "int32": 69, "int64": [14, 69, 241], "int8": 69, "int_": [96, 112, 113, 115, 217, 224, 287, 291], "int_0": [14, 96, 113, 115, 287, 297], "int_1": [96, 113, 130], "int_a": 115, "int_fram": 13, "int_l": [96, 113, 231], "int_to_integ": 116, "int_x": 96, "intact": [3, 13, 69, 253], "intbasetyp": 69, "intc": [69, 130], "intcurve_diffequ": 90, "intcurve_seri": 90, "integ": [2, 4, 5, 12, 14, 15, 16, 41, 43, 50, 51, 52, 62, 63, 64, 65, 67, 69, 70, 74, 77, 79, 80, 81, 82, 84, 87, 88, 89, 90, 91, 92, 93, 96, 98, 101, 112, 113, 115, 116, 117, 118, 120, 124, 125, 128, 130, 134, 136, 138, 144, 146, 152, 180, 185, 187, 188, 189, 191, 193, 200, 202, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 223, 226, 227, 228, 229, 230, 231, 233, 234, 237, 239, 240, 241, 245, 246, 247, 253, 254, 256, 259, 262, 287, 289, 292, 296, 297], "integer_as_sum_of_three_squar": 234, "integer_el": 65, "integer_log": 88, "integer_nthroot": [88, 94, 128], "integer_to_term": 118, "integerelementshandl": 65, "integerelementspred": 65, "integerhandl": 65, "integerpartit": [77, 259], "integerpred": 65, "integers_onli": 207, "integr": [2, 11, 12, 14, 15, 16, 18, 22, 23, 30, 32, 33, 38, 49, 59, 61, 67, 80, 87, 88, 90, 93, 94, 106, 107, 108, 111, 117, 123, 124, 127, 128, 130, 144, 146, 151, 153, 158, 177, 186, 189, 192, 195, 201, 206, 208, 211, 212, 214, 215, 217, 218, 221, 223, 224, 231, 237, 238, 241, 254, 262, 265, 268, 269, 272, 273, 277, 280, 288, 291, 296, 299], "integral_basi": [212, 216], "integral_step": 115, "integraltransform": 115, "integraltransformerror": 115, "integrand": [12, 92, 96, 112, 113, 115, 130, 231, 287], "integrate_result": 186, "integration_techniqu": 115, "integration_vari": 287, "integstp": 22, "intellig": [215, 233, 237, 297], "intelligenc": 74, "intend": [2, 3, 4, 7, 9, 11, 12, 13, 14, 18, 37, 41, 88, 89, 99, 108, 113, 128, 130, 133, 150, 155, 186, 210, 211, 212, 216, 219, 221, 234, 237, 238, 250, 255, 262, 286, 299], "intens": [153, 154, 160, 163], "intent": [12, 14, 41, 69, 87, 88, 130, 210, 254], "intent_in": 69, "intent_out": 69, "intention": 88, "intenum": 134, "interact": [0, 11, 14, 15, 30, 36, 37, 52, 60, 88, 102, 115, 121, 124, 156, 188, 205, 211, 212, 233, 241, 257, 263, 276, 284, 289, 291, 292, 296, 297], "interactive_travers": 13, "interactiveconsol": [116, 205], "interchang": [15, 84, 87, 113, 133, 237], "interconnect": [18, 141, 144, 149], "interest": [7, 11, 14, 16, 18, 36, 37, 43, 48, 51, 57, 84, 88, 90, 93, 94, 104, 113, 115, 124, 128, 130, 156, 191, 196, 208, 212, 216, 217, 218, 220, 228, 231, 233, 234, 239, 240, 253, 254, 270, 287, 290, 292, 293, 294, 297, 302], "interf": 240, "interfac": [2, 5, 7, 9, 11, 12, 15, 18, 23, 34, 36, 52, 67, 88, 116, 131, 133, 152, 160, 186, 205, 210, 211, 214, 219, 240, 253, 254], "interfer": [41, 221], "interfram": [152, 204], "interior": [104, 217, 229], "interior_angl": 104, "intermedi": [15, 18, 22, 24, 35, 69, 70, 111, 124, 152, 175, 185, 193, 194, 200, 204, 240, 254, 294, 302, 307, 309], "intern": [3, 13, 14, 15, 16, 27, 28, 41, 42, 50, 67, 69, 70, 79, 88, 91, 92, 93, 96, 104, 105, 108, 119, 124, 128, 130, 134, 137, 140, 142, 164, 185, 186, 196, 208, 210, 212, 213, 215, 217, 219, 221, 231, 233, 236, 237, 238, 239, 240, 241, 245, 247, 250, 254, 256, 259, 283, 292, 296], "internal_forc": 140, "interpol": [30, 67, 93, 97, 214, 217], "interpolating_poli": [96, 217], "interpolating_splin": 96, "interpret": [16, 21, 42, 55, 57, 69, 79, 87, 88, 93, 94, 96, 101, 104, 115, 120, 124, 128, 130, 196, 207, 209, 216, 217, 221, 228, 234, 239, 240, 241, 246, 252, 253, 256, 262, 293], "interrog": 56, "interrupt": 252, "intersect": [4, 41, 52, 67, 68, 79, 98, 99, 101, 102, 103, 104, 105, 124, 156, 164, 208, 217, 221, 227, 228, 229, 240], "intersecting_product": 91, "intersection_": 229, "interspers": 208, "interv": [48, 50, 52, 55, 65, 67, 79, 88, 92, 94, 96, 97, 98, 101, 104, 113, 115, 118, 128, 177, 186, 210, 212, 214, 216, 217, 224, 227, 229, 236, 240, 241, 287, 298], "interval_": 229, "interval_list": 207, "intfunc": [94, 128, 217], "intgrl": 92, "intim": 208, "intiuit": 124, "intm": 123, "intp": 69, "intpoli": 115, "intqubit": [176, 185], "intqubitbra": 185, "intransit": 79, "intrins": [61, 69], "intrinsic_imped": 162, "introduc": [13, 14, 18, 22, 26, 36, 42, 51, 84, 87, 88, 96, 113, 124, 129, 131, 134, 137, 191, 196, 212, 213, 217, 218, 221, 228, 231, 234, 241, 257, 283, 290, 293, 295, 297, 299, 301, 302, 304, 309, 310, 311], "introduct": [5, 6, 13, 17, 19, 23, 34, 40, 79, 80, 93, 96, 210, 212, 214, 215, 217, 221, 234, 237, 240, 273, 280, 290, 296], "introductori": [16, 30, 39, 58, 59, 211, 212, 217], "introspect": 30, "intstep": 115, "intt": 91, "inttyp": 69, "intuit": [18, 28, 88, 196, 237], "inv": [30, 39, 53, 80, 119, 124, 149, 153, 158, 180, 210, 237, 309, 310], "inv_can_transf_matrix": 193, "inv_den": [124, 210], "inv_method": [149, 153, 158], "inv_perm": 80, "inv_trig_styl": 221, "invalid": [5, 11, 12, 14, 16, 57, 88, 89, 130, 211, 214, 229, 302], "invari": [5, 13, 43, 79, 84, 141, 144, 206, 210, 212, 214, 216, 217, 231, 237], "invent": [89, 216, 239, 291], "inver": 218, "invers": [4, 12, 18, 53, 55, 61, 79, 80, 88, 89, 90, 96, 115, 120, 124, 128, 130, 132, 149, 153, 158, 180, 184, 185, 188, 193, 196, 208, 209, 210, 212, 214, 217, 218, 221, 223, 231, 233, 237, 239, 240, 241, 259, 293, 297], "inverse_adj": [124, 293], "inverse_block": 124, "inverse_ch": 124, "inverse_cosine_transform": 115, "inverse_fourier_transform": 115, "inverse_funct": 96, "inverse_g": [124, 293], "inverse_gaussian_distribut": 241, "inverse_hankel_transform": 115, "inverse_laplace_transform": [46, 115], "inverse_ldl": 124, "inverse_lu": [124, 293], "inverse_mellin_transform": 115, "inverse_mobius_transform": 91, "inverse_qr": 124, "inverse_sine_transform": 115, "inverse_trigonometric_funct": 94, "inversecosinetransform": 115, "inverseerf": [96, 221], "inverseerf2": 96, "inverseerfc": [96, 221], "inversefouriertransform": 115, "inversegaussiandistribut": 241, "inversehankeltransform": 115, "inverselaplacetransform": 115, "inversemellintransform": 115, "inversesinetransform": 115, "inversetrigonometricfunct": 43, "inversion_vector": 80, "invert": [18, 39, 53, 57, 65, 88, 89, 120, 124, 144, 193, 209, 210, 211, 212, 216, 217, 237, 239, 240, 247, 293, 306], "invert_complex": 240, "invert_r": 240, "invertible_matrix": 65, "invertiblehandl": 65, "invertiblepred": 65, "investig": [11, 80, 113, 206, 208, 231, 259, 289], "invok": [228, 252, 253], "invol": 131, "involut": 259, "involv": [11, 12, 13, 14, 16, 22, 32, 35, 36, 39, 41, 48, 50, 52, 64, 66, 79, 87, 88, 89, 93, 100, 101, 113, 115, 128, 133, 144, 149, 153, 159, 170, 180, 186, 188, 198, 208, 209, 212, 214, 216, 217, 218, 222, 223, 228, 229, 230, 231, 233, 234, 237, 239, 242, 260, 297, 299], "io": [2, 5, 116, 148, 221, 260], "ion": [18, 131, 234], "iosi": 89, "iota": [16, 221], "ip": [116, 179, 185, 205], "ip_doit": 183, "ipl": 124, "ipmnet": 237, "ipo": 247, "ipos1": 247, "ipos2": 247, "iproduct": 259, "ipython": [2, 4, 15, 16, 30, 59, 116, 205, 260, 264, 295, 296], "iqft": 184, "iren": [4, 96], "irrat": [41, 48, 65, 67, 88, 128, 211, 217, 221, 229, 291], "irrational_numb": [41, 65, 88], "irrationalhandl": 65, "irrationalpred": 65, "irreduc": [14, 48, 209, 210, 212, 214, 216, 217, 220, 241, 247, 297], "irreducibili": 217, "irregular": [120, 124], "irrelev": 93, "irrespect": [115, 234, 237, 262], "irrot": [33, 272], "irwin": 241, "is2pow": 128, "is_": [15, 43, 88], "is_2dlin": 207, "is_abelian": 79, "is_abelian_numb": 74, "is_above_fermi": [96, 191], "is_absolutely_converg": 87, "is_abund": 128, "is_add": [88, 240], "is_algebra": [41, 88, 212], "is_algebraic_expr": 88, "is_alias": 88, "is_alt_sym": [79, 86], "is_altern": 79, "is_amic": 128, "is_anf": 118, "is_anti_symmetr": 124, "is_below_fermi": [96, 191], "is_biprop": 144, "is_canon_bp": 247, "is_capit": 15, "is_carmichael": [13, 128], "is_clos": 229, "is_cnf": 118, "is_collinear": [100, 103], "is_commut": [41, 115, 180, 189, 259], "is_compar": [41, 88], "is_compat": 216, "is_compat_col": 216, "is_complex": [41, 88], "is_concycl": 103, "is_conserv": [33, 201, 268, 272], "is_consist": [193, 199], "is_const": 88, "is_converg": 87, "is_convex": [67, 104], "is_coplanar": 102, "is_cycl": 79, "is_cyclic_numb": 74, "is_cyclotom": [212, 217], "is_decreas": 67, "is_defici": 128, "is_deriv": [13, 88], "is_diagon": [124, 210], "is_diagonaliz": 124, "is_dihedr": 79, "is_dimensionless": 193, "is_disjoint": 229, "is_dnf": 118, "is_echelon": [124, 293], "is_elementari": 79, "is_empti": [13, 41, 80], "is_equilater": 104, "is_euler_jacobi_pseudoprim": 128, "is_euler_pseudoprim": 128, "is_even": [43, 76, 79, 80], "is_exact": 212, "is_extended_neg": 41, "is_extended_nonneg": 41, "is_extended_nonposit": 41, "is_extended_posit": [41, 42], "is_extended_r": 41, "is_extra_strong_lucas_prp": 128, "is_fermat_pseudoprim": 128, "is_field": [211, 212], "is_finit": [41, 88], "is_finite_set": 41, "is_float": 88, "is_full_modul": 208, "is_funct": 69, "is_gaussian_prim": 128, "is_groebn": 214, "is_ground": [212, 217], "is_group": [76, 79], "is_hermitian": 124, "is_homogen": [212, 217], "is_hypergeometr": 87, "is_ident": [78, 80, 88], "is_increas": 67, "is_indefinit": 124, "is_inert": 216, "is_infinit": 41, "is_inject": 208, "is_int": 216, "is_integ": [14, 15, 41, 43, 88, 202, 221, 246], "is_irr": 88, "is_irreduc": [212, 217], "is_isomorph": 208, "is_isoscel": 104, "is_iter": 229, "is_left_unbound": 229, "is_linear": [212, 217], "is_low": [124, 210], "is_lower_hessenberg": 124, "is_lucas_prp": 128, "is_matrix": [69, 221], "is_maxim": 208, "is_meromorph": 88, "is_mersenne_prim": 128, "is_minim": 214, "is_mon": [212, 217], "is_monomi": [212, 217], "is_monoton": 67, "is_mul": 88, "is_multivari": 217, "is_neg": [41, 43, 88, 212], "is_negative_definit": 124, "is_negative_semidefinit": 124, "is_nilpot": [79, 124], "is_nilpotent_numb": 74, "is_nnf": 118, "is_nonneg": [41, 43, 212], "is_nonposit": 212, "is_nonzero": [41, 103], "is_norm": [79, 189], "is_nthpow_residu": 128, "is_numb": [14, 15, 41, 88, 96, 115], "is_odd": 80, "is_on": [212, 217], "is_only_above_fermi": [96, 191], "is_only_below_fermi": [96, 191], "is_only_q_annihil": 191, "is_only_q_cr": 191, "is_open": 229, "is_palindrom": [128, 259], "is_parallel": [101, 102], "is_perfect": [79, 128], "is_perfect_squar": 13, "is_perpendicular": [101, 102, 103, 104], "is_pid": 212, "is_polycycl": 79, "is_polynomi": 88, "is_posit": [12, 14, 15, 41, 42, 43, 88, 202, 212], "is_positive_definit": 124, "is_positive_semidefinit": 124, "is_pow": [16, 69, 88, 94], "is_prefix": 198, "is_prim": [13, 41, 88, 208], "is_primari": 208, "is_primit": [79, 212, 217], "is_primitive_el": 88, "is_primitive_root": [89, 128], "is_princip": 208, "is_prop": 144, "is_proper_subset": 229, "is_proper_superset": 229, "is_pur": 61, "is_q_annihil": 191, "is_q_creat": 191, "is_quad_residu": [93, 128], "is_quadrat": [212, 217], "is_r": 212, "is_rad": 208, "is_rat": [16, 41, 216, 259], "is_rational_funct": 88, "is_real": [12, 14, 15, 41, 43, 48, 52, 88, 90, 94, 95, 124, 202, 217, 221, 246], "is_recurr": 241, "is_reduc": 214, "is_right": 104, "is_right_unbound": 229, "is_sam": 88, "is_scalar_multipl": 103, "is_scalen": 104, "is_sequ": 259, "is_similar": [99, 101, 104, 105], "is_simpl": 96, "is_singleton": 80, "is_singular": [88, 95, 111], "is_solenoid": [33, 201, 268, 272], "is_solv": 79, "is_sqf": [212, 217], "is_squar": [13, 88, 124, 128, 210, 212], "is_squarefre": 214, "is_stabl": [46, 144], "is_strictly_decreas": 67, "is_strictly_increas": 67, "is_strictly_prop": 144, "is_strong_lucas_prp": 128, "is_strongly_diagonally_domin": 124, "is_subdiagram": 68, "is_subgroup": 79, "is_submodul": 208, "is_subset": [38, 229], "is_superset": 229, "is_surject": 208, "is_symbol": [69, 124], "is_symmetr": [79, 124], "is_tang": [98, 100], "is_this_zero": [3, 257], "is_transit": 79, "is_trivi": 79, "is_tru": [62, 64, 65], "is_unit": 212, "is_univari": 217, "is_up": 247, "is_upp": [124, 210], "is_upper_hessenberg": 124, "is_weakly_diagonally_domin": 124, "is_whole_r": 208, "is_zero": [3, 41, 43, 103, 124, 208, 212, 217, 257, 293], "is_zero_dimension": [217, 240], "is_zero_matrix": [41, 124, 210], "is_zero_quaternion": 61, "isc": 215, "isclos": 88, "isdisjoint": 229, "isfinit": 88, "isign": 69, "isinst": [13, 14, 15, 38, 41, 43, 69, 88, 120, 123, 144, 211, 212, 221, 222, 233, 242, 245, 254, 292], "isint": 43, "isn": [7, 11, 13, 14, 21, 22, 43, 55, 115, 156, 240, 291], "isol": [9, 48, 67, 94, 212, 216, 217, 218, 239, 254], "isometr": [18, 132, 134], "isometri": 117, "isomorph": [71, 79, 82, 208, 211, 214, 216], "isomorphismfail": [214, 216], "isotrop": 192, "ispk": 89, "isposit": 42, "isprim": [13, 65, 89, 93, 128], "isprimit": 88, "isqrt": [88, 128], "issac": [70, 115, 215, 239], "issn": 0, "issu": [3, 5, 7, 12, 13, 14, 15, 16, 23, 34, 42, 43, 48, 50, 51, 52, 53, 54, 55, 56, 59, 60, 67, 87, 88, 105, 115, 118, 124, 129, 171, 206, 215, 216, 218, 221, 229, 230, 239, 240, 252, 254, 256, 257, 259, 262, 288, 289, 292, 297], "issubset": 229, "issuperset": 229, "ist": [215, 230], "istruehandl": 65, "istruepred": 65, "isuru": 0, "isympi": [1, 2, 15, 16, 116], "iszero": 293, "iszerofunc": [124, 293], "it5": 124, "ital": [5, 221], "italic": 5, "ite": 221, "item": [4, 5, 15, 16, 28, 37, 48, 55, 69, 77, 78, 80, 88, 93, 99, 105, 124, 128, 148, 153, 155, 156, 207, 210, 211, 214, 217, 221, 229, 237, 238, 241, 252, 253, 256, 259, 260, 297], "iter": [15, 27, 31, 48, 51, 52, 53, 57, 67, 69, 77, 79, 80, 83, 84, 88, 89, 90, 91, 93, 96, 104, 118, 124, 128, 149, 150, 152, 153, 154, 155, 158, 176, 191, 204, 207, 208, 209, 210, 212, 214, 217, 221, 222, 223, 224, 227, 233, 234, 237, 239, 240, 241, 242, 245, 253, 254, 255, 256, 258, 260, 265, 270, 284], "iter_item": [124, 210], "iter_q_annihil": 191, "iter_q_cr": 191, "iter_valu": [124, 210], "iterat": 210, "iterate_binari": 83, "iterate_graycod": 83, "itercoeff": 212, "itermax": 69, "itermonom": 212, "itermonomi": 217, "iterterm": 212, "itertool": [83, 259], "itex": 221, "ith": [80, 117, 128, 210, 212, 218, 240, 241], "itii": 89, "its": [0, 2, 3, 4, 5, 7, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 27, 28, 30, 31, 33, 35, 36, 37, 39, 41, 42, 43, 48, 50, 51, 52, 53, 54, 55, 57, 61, 63, 64, 65, 68, 69, 70, 72, 76, 78, 79, 80, 87, 88, 89, 90, 93, 94, 96, 98, 100, 104, 106, 113, 115, 116, 118, 120, 124, 128, 130, 131, 132, 133, 134, 136, 137, 138, 140, 144, 148, 149, 151, 152, 153, 155, 156, 158, 159, 164, 170, 176, 177, 179, 180, 185, 186, 189, 191, 195, 196, 198, 200, 201, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 227, 228, 229, 233, 236, 237, 239, 240, 241, 243, 245, 246, 247, 252, 255, 256, 259, 260, 265, 268, 269, 270, 272, 275, 291, 292, 293, 296, 297, 299, 301, 302, 306], "itself": [2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 18, 22, 28, 33, 35, 43, 65, 77, 79, 80, 86, 88, 90, 93, 94, 101, 105, 110, 124, 128, 133, 153, 158, 181, 188, 207, 208, 210, 211, 212, 214, 216, 217, 221, 229, 230, 233, 240, 245, 246, 247, 254, 256, 259, 274, 291], "iv": [96, 218], "ivan": 214, "ivanov": 0, "iverson": 43, "iwf11": 302, "iwf22": 302, "iwr11": 302, "iwr22": 302, "ixi": [155, 200], "ixx": [149, 155, 200], "ixz": 200, "iy_": 96, "iyi": [155, 200], "iyz": [155, 200], "iz": 96, "izx": 155, "izz": [155, 200], "i\u2080": 163, "j": [0, 5, 12, 13, 14, 16, 18, 29, 30, 32, 33, 46, 61, 65, 67, 69, 70, 74, 78, 79, 80, 84, 86, 87, 89, 90, 93, 96, 110, 113, 115, 117, 120, 124, 128, 131, 132, 134, 145, 148, 149, 158, 163, 170, 171, 188, 191, 196, 206, 208, 210, 212, 214, 215, 216, 217, 218, 220, 221, 223, 229, 231, 233, 234, 237, 239, 240, 241, 242, 243, 245, 246, 247, 248, 253, 259, 265, 267, 268, 269, 270, 271, 272, 274, 275, 299, 302], "j1": [152, 170, 188, 304, 307], "j12": [170, 188], "j13": 170, "j2": [152, 170, 188, 304, 307], "j23": 170, "j24": 170, "j2op": 188, "j3": [170, 188, 304, 307], "j34": 170, "j4": 170, "j_": [93, 96, 113, 115, 188, 223, 231, 291], "j_0": 171, "j_1": [93, 170, 171, 188, 206, 223, 242], "j_2": [93, 170, 171, 188, 206, 223], "j_3": [170, 188, 206], "j_4": [188, 206], "j_5": 206, "j_6": 206, "j_7": 206, "j_8": 206, "j_9": 206, "j_m": 242, "j_n": [96, 188], "j_y": 206, "j_z": 206, "ja": 127, "jacobi": [93, 115, 128, 146, 217, 221], "jacobi_norm": 96, "jacobi_poli": [96, 217], "jacobi_polynomi": 96, "jacobi_rul": 115, "jacobi_symbol": [13, 89, 93, 128], "jacobian": [27, 90, 124, 239], "jacobian_determin": 90, "jacobian_matrix": 90, "jacobip": [96, 221], "jacobipolynomi": 96, "jakob": 217, "jame": [89, 214], "jan": [0, 89], "jane": 70, "januari": 128, "jason": [0, 221], "java": 16, "javascript": 296, "javascriptcodeprint": 221, "jax": [2, 129, 260], "jburkardt": 115, "jc": 136, "jcoupl": 188, "jcoupling_list": 188, "jean": 115, "jeffrei": [124, 233], "jen": 206, "jensen": [11, 69], "jerom": 259, "jeromekelleh": 259, "jewett": 128, "jguzm022": 11, "ji": [124, 243], "jim": 29, "jit": [2, 230], "jj": 188, "jk": 0, "jku": [110, 237, 265], "jl": [215, 254], "jlname": 254, "jm": 188, "jmig5776": 11, "jn": [94, 96, 188, 217, 221, 291], "jn_zero": 96, "jnanjeky": 11, "jnp": 129, "joannah": 11, "joaquim": 11, "job": [12, 39, 43, 80, 171, 218, 221], "jochen": 11, "joe": 11, "joeb": 11, "joel": 237, "jogi": 11, "johan": 11, "johan_bluecreek": 11, "johansson": 0, "john": [70, 74, 79, 96, 215, 217, 234, 237], "johndcook": 93, "johnson": [80, 124], "joi": 68, "join": [9, 14, 16, 50, 80, 88, 89, 101, 124, 136, 137, 156, 221, 233, 237, 239, 242, 259], "joint": [23, 140, 148, 149, 151, 158, 282, 299, 304, 307], "joint1": 304, "joint2": 304, "joint3": 304, "joint_axi": [13, 24, 148, 152, 158, 304, 307], "joint_distribut": 241, "joint_point": 152, "joint_rv_typ": 241, "jointdistributionhandmad": 241, "jointli": 41, "jointrv": 241, "jointsmethod": 149, "jon": 128, "jone": [128, 163], "jones_2_stok": 163, "jones_calculu": 163, "jones_vector": 163, "jordan": [53, 113, 124, 210, 219, 237, 239, 240], "jordan_block": 124, "jordan_cel": 124, "jordan_form": 124, "jordan_matrix": [124, 237], "jordan_normal_form": 237, "jorg": 148, "joseph": [145, 215], "josephu": 80, "josephus_problem": 80, "josi": 89, "joul": 196, "journal": [0, 4, 7, 61, 87, 93, 145, 215, 233, 256, 259, 303], "joyofcat": 68, "jpr2718": 234, "jr": 96, "js_function_str": 221, "jsc": 215, "jscode": [69, 221], "jstor": 241, "jth": [117, 210, 240], "judgement": 5, "judgment": 12, "juli": [89, 234], "julia": 254, "julia_cod": [69, 221], "juliacodegen": 254, "juliacodeprint": 221, "juliu": 89, "jump": [136, 241, 297], "june": [89, 124], "jupyt": [2, 7, 11, 15, 43, 260], "jurjen": 221, "just": [1, 3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 21, 22, 27, 28, 30, 32, 33, 35, 41, 42, 43, 50, 52, 55, 59, 65, 68, 69, 79, 86, 88, 89, 90, 94, 111, 113, 115, 116, 117, 118, 124, 128, 129, 132, 146, 148, 149, 171, 176, 181, 191, 196, 205, 207, 208, 210, 211, 212, 214, 216, 220, 221, 228, 229, 230, 231, 233, 237, 240, 242, 250, 252, 254, 255, 257, 271, 272, 274, 286, 287, 289, 290, 291, 292, 293, 297, 298, 301, 306, 310], "just_gen": 216, "justifi": 214, "juxtaposit": [28, 32, 269], "jx": 188, "jxbra": 188, "jxbracoupl": 188, "jxket": 188, "jxketcoupl": 188, "jy": 188, "jybra": 188, "jybracoupl": 188, "jyket": 188, "jyketcoupl": 188, "jyr2000": 206, "jz": 188, "jzbra": 188, "jzbracoupl": 188, "jzket": 188, "jzketcoupl": 188, "jzop": 188, "k": [0, 5, 12, 13, 14, 16, 18, 25, 27, 30, 32, 33, 37, 41, 43, 46, 51, 61, 67, 68, 69, 70, 72, 74, 78, 79, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 96, 106, 113, 115, 118, 120, 124, 128, 130, 144, 148, 149, 153, 158, 165, 179, 180, 183, 187, 189, 191, 206, 208, 210, 211, 214, 215, 216, 217, 218, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 237, 239, 241, 242, 243, 245, 246, 247, 248, 252, 256, 259, 265, 267, 268, 269, 270, 271, 272, 274, 275, 296, 297, 299, 307], "k0": [189, 212, 214, 241], "k1": [30, 128, 189, 211, 212, 214, 303], "k2": [30, 128, 211, 303], "k3": [30, 211], "k3d": 13, "k4": 30, "k_": [25, 26, 96, 113, 153], "k_0": 214, "k_1": [89, 128, 214, 231, 303], "k_2": [89, 303], "k_3": 89, "k_arrai": 78, "k_b": 55, "k_d": [25, 153], "k_dnh": 153, "k_f": 55, "k_i": [128, 214, 231], "k_j": 231, "k_kqdot": 153, "k_ku": 153, "k_m": 128, "k_n": [89, 96, 214], "k_sym": 93, "k_u": 231, "k_val": 55, "k_y": 117, "ka": 0, "kahan": 145, "kahane_simplifi": 145, "kalkbrenn": 239, "kaltofen": [214, 215], "kaltofen98": 215, "kane": [18, 21, 22, 23, 24, 29, 30, 32, 148, 149, 151, 158, 200, 265, 282, 299, 302, 305, 308], "kane1983": [29, 36], "kane1985": [25, 29, 32, 310], "kanes_equ": [18, 22, 25, 27, 30, 148, 153, 156, 299, 302, 306, 309, 310], "kanesmethod": [13, 18, 22, 24, 25, 27, 30, 148, 149, 153, 156, 158, 299, 302, 304, 306, 307, 309, 310], "kapitaniaka": 303, "kappa": [16, 206, 221, 241], "kapur": 215, "kapur1994": 215, "karr": 87, "kasiski": 89, "katmat": 68, "kauer": 226, "kb": 55, "kbin": 259, "kconrad": [79, 241], "kd": [25, 153, 302, 309, 310], "kd_eq": [18, 22, 27, 30, 148, 153, 299, 302, 306, 309, 310], "kd_eqs_solv": 153, "kdd": [309, 310], "kde": [24, 27, 149, 152, 158, 306], "kdvi": 221, "ke": 30, "keep": [3, 4, 11, 12, 14, 16, 24, 28, 32, 38, 43, 84, 88, 89, 92, 93, 96, 113, 124, 132, 153, 175, 191, 207, 210, 211, 212, 217, 228, 229, 231, 233, 237, 239, 242, 247, 274, 287, 292, 299, 304], "keep_domain": 210, "keep_only_fully_contract": 191, "kei": [11, 13, 14, 15, 16, 22, 23, 36, 37, 48, 50, 62, 65, 68, 77, 79, 80, 88, 89, 90, 93, 104, 117, 124, 127, 128, 136, 158, 183, 186, 191, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 233, 237, 238, 239, 241, 245, 256, 259, 260, 262, 293, 294, 297, 305], "kelleh": 259, "kelli": [113, 231], "kempf": 208, "kepler": [194, 265], "kept": [36, 90, 193, 259, 292], "ker": 208, "kern": 88, "kernel": [124, 208, 214, 216, 239], "ket": [130, 174, 179, 180, 181, 183, 185, 186, 189, 191], "ket_not": 189, "ketbas": [179, 180, 186, 189], "key1": 207, "key2": 207, "key2bound": 124, "key2ij": 124, "keyboard": 207, "keyboardinterrupt": 252, "keyfunc": 259, "keyword": [0, 3, 4, 12, 13, 14, 15, 25, 26, 37, 43, 68, 69, 70, 79, 80, 88, 89, 92, 93, 101, 103, 104, 105, 124, 128, 132, 136, 142, 144, 148, 153, 156, 185, 191, 205, 207, 209, 210, 211, 212, 214, 216, 217, 220, 221, 222, 228, 233, 234, 239, 246, 252, 253, 255, 257, 259, 260, 262, 270, 293], "kf": 55, "kfkljjhf5mmmktfrgpl": 89, "kg": [18, 196, 275, 299], "kid": 89, "kid_rsa_private_kei": 89, "kid_rsa_public_kei": 89, "kiev": 215, "kijml": 243, "kill": [208, 212, 252], "killable_index": [96, 191], "killed_modul": 208, "kilo": 197, "kilogram": [162, 194, 196, 198], "kilomet": [195, 197, 198], "kin_explicit_rh": [31, 158], "kind": [4, 5, 13, 15, 22, 26, 33, 40, 41, 42, 43, 68, 69, 90, 93, 96, 108, 115, 122, 136, 140, 153, 195, 209, 211, 212, 217, 222, 223, 229, 237, 238, 241, 259, 272, 274, 280, 287, 297], "kindiff": 30, "kindiffdict": [25, 30, 153, 309, 310], "kinema": 158, "kinemat": [18, 21, 22, 24, 25, 27, 28, 30, 31, 34, 36, 152, 153, 158, 200, 203, 282, 300, 304, 305, 306, 307, 309, 311], "kinet": [23, 55, 148, 149, 153, 155], "kinetic_energi": [28, 30, 149, 155], "kinnei": [18, 131, 132, 134, 299], "kirpichev": 0, "kite": 104, "kk": 124, "kleen": 259, "klein": [71, 80], "km": [21, 25, 27, 30, 124, 128, 153, 197, 306, 309, 310], "kn": [124, 136, 137, 138], "knew": [88, 297], "knife": 217, "knot": 96, "know": [3, 4, 5, 12, 13, 14, 15, 16, 18, 22, 28, 31, 35, 36, 41, 42, 43, 48, 55, 56, 57, 62, 64, 68, 71, 80, 88, 89, 92, 100, 105, 113, 115, 124, 128, 130, 185, 189, 193, 194, 196, 200, 207, 210, 217, 218, 220, 221, 231, 233, 237, 239, 240, 241, 255, 259, 260, 270, 286, 287, 289, 290, 291, 292, 295, 297], "knowabl": 41, "knowledg": [15, 87, 88, 89, 216, 237, 292, 295], "known": [4, 11, 12, 14, 15, 18, 27, 35, 41, 42, 43, 46, 55, 64, 68, 69, 70, 71, 74, 77, 79, 80, 88, 89, 92, 93, 96, 98, 101, 106, 113, 115, 116, 125, 128, 142, 144, 145, 147, 149, 155, 158, 194, 200, 210, 211, 212, 216, 217, 221, 224, 227, 229, 230, 231, 233, 236, 237, 238, 239, 241, 259, 260, 265, 272, 274, 297], "known_const": 221, "known_fcns_src1": 221, "known_fcns_src2": 221, "known_funct": 221, "known_functions_c89": 221, "known_functions_c99": 221, "known_typ": 221, "knuth": [72, 80, 214, 256], "koepf": [215, 223, 233], "koepf98": [215, 217], "kog": 259, "koshi": [93, 128], "kozen": [4, 215], "kozen89": [4, 214, 215], "kreher": 80, "kroneck": [93, 96, 190, 191, 206, 242, 247], "kronecker_delta": [96, 191], "kronecker_symbol": 93, "kroneckerdelta": [96, 120, 191, 221, 233], "kroneckerproduct": 221, "kroneckersimp": 233, "krypto": 89, "ksubset": 83, "kt": [89, 307], "kth": [124, 128], "ku": [13, 25, 221], "kulal": 0, "kumar": [0, 240], "kumaraswami": 241, "kumaraswamy_distribut": 241, "kummer": 216, "kurtosi": 241, "kutta": [15, 110], "kw": 252, "kw_arg": [72, 82, 191, 246, 247], "kwarg": [16, 63, 64, 65, 69, 79, 80, 87, 88, 89, 90, 94, 96, 98, 99, 101, 102, 103, 104, 105, 110, 113, 115, 119, 120, 121, 124, 126, 127, 128, 132, 142, 144, 150, 153, 155, 158, 160, 169, 171, 175, 176, 180, 182, 184, 185, 187, 188, 189, 200, 204, 205, 207, 210, 212, 217, 221, 223, 227, 228, 229, 233, 237, 238, 239, 241, 242, 243, 247, 252, 253, 255, 259, 262, 270, 306], "kwong": 215, "kx": 18, "ky": 46, "l": [4, 13, 16, 18, 22, 26, 27, 28, 29, 30, 31, 35, 36, 67, 68, 69, 70, 77, 79, 80, 87, 89, 93, 96, 99, 100, 101, 102, 103, 105, 106, 111, 113, 115, 117, 119, 120, 124, 128, 131, 132, 134, 136, 137, 144, 146, 148, 149, 152, 153, 154, 155, 156, 158, 159, 160, 163, 189, 192, 193, 194, 196, 206, 208, 210, 212, 214, 215, 221, 223, 224, 230, 231, 234, 237, 239, 241, 245, 246, 247, 248, 252, 254, 259, 275, 297, 299, 302, 303, 304, 306, 307, 309, 310, 311], "l0": 214, "l1": [28, 89, 98, 100, 101, 152, 155, 212, 214, 217, 234, 241, 304], "l1_norm": [212, 217], "l2": [89, 100, 101, 152, 155, 177, 193, 212, 214, 241, 304], "l2_norm_squar": 212, "l3": [101, 214, 304], "l3_convfunc": 67, "l4": [101, 304], "l_": [13, 18, 115, 124, 206], "l_0": [93, 145, 247, 248], "l_1": [89, 93, 145, 206, 231, 247, 259], "l_2": 206, "l_3": 206, "l_a": 299, "l_arm": 299, "l_b": 28, "l_c": 299, "l_d": 299, "l_frame": 152, "l_i": [89, 206, 231], "l_m": [18, 132, 134, 259], "l_m_opt": [18, 132, 134, 299], "l_m_opt_bicep": 299, "l_m_opt_tricep": 299, "l_m_tild": [18, 132], "l_m_tilde_muscl": 134, "l_m_tilde_num": 18, "l_mt": 18, "l_n": [96, 115, 217], "l_p": 28, "l_t": [18, 89, 132], "l_t_slack": [18, 132, 134, 299], "l_t_slack_bicep": 299, "l_t_slack_tricep": 299, "l_t_tild": [18, 132], "l_t_tilde_num": 18, "l_u": 231, "l_v": 231, "la": [30, 79, 196, 299], "labahn": 215, "label": [4, 7, 18, 55, 68, 69, 82, 88, 98, 111, 115, 138, 140, 164, 171, 175, 180, 189, 191, 207, 221, 222, 224, 233, 246, 247, 296], "label_displac": 68, "label_posit": 68, "labeledtre": 82, "labelfunc": 221, "lack": [57, 69, 90, 92, 155, 221, 287], "lag": [27, 306, 311], "lag_eq": [27, 306], "lagrang": [23, 67, 88, 149, 151, 154, 158, 217, 234, 282, 305, 308], "lagranges_equ": 153, "lagrangesmethod": [26, 27, 148, 149, 153, 156, 158, 303, 306, 311], "lagrangian": [23, 26, 27, 67, 153, 155, 303, 306, 311], "laguerr": [115, 217, 221], "laguerre_poli": [96, 217], "laguerre_polynomi": 96, "laguerre_rul": 115, "laguerrel": [96, 221], "laguerrel3": 96, "laguerrepolynomi": 96, "laguna": 89, "lai": 68, "laid": [22, 68, 188], "laigl": 128, "lam": [31, 153, 154], "lam1": 26, "lam_f": [54, 260], "lam_op": 306, "lamar": 237, "lambda": [12, 15, 16, 22, 26, 27, 30, 31, 43, 46, 50, 54, 63, 64, 67, 69, 79, 80, 88, 89, 90, 93, 94, 115, 119, 120, 124, 127, 128, 130, 153, 176, 207, 210, 214, 216, 217, 221, 222, 229, 230, 233, 237, 239, 240, 241, 242, 250, 259, 260, 265, 267, 270, 286, 293, 299], "lambda_": 113, "lambda_c": [26, 113], "lambda_i": [200, 265, 267], "lambda_not": 130, "lambda_x": [200, 265, 267], "lambda_z": [200, 265, 267], "lambdaprint": 260, "lambdarepr": [69, 221, 260], "lambdastr": 260, "lambdifi": [14, 15, 18, 43, 54, 55, 69, 96, 221, 239, 253, 258, 284, 288, 299], "lambert": [57, 94, 115, 218], "lambert_w_funct": 94, "lambertw": [94, 218, 221, 239, 240, 298], "lambidfi": 13, "lamda": [15, 120, 221, 229, 241, 293], "lame": 272, "lamina": 275, "lanczo": 224, "land": 89, "landau": [4, 215, 287], "landscap": 80, "langl": [70, 79, 130, 170, 206], "languag": [2, 5, 14, 15, 16, 21, 22, 30, 39, 43, 69, 94, 124, 130, 221, 226, 241, 253, 254, 289, 291, 293, 295, 297], "lankarani": 148, "laplac": [46, 115, 124, 141, 142, 144, 241], "laplace_correspond": [46, 115], "laplace_distribut": 241, "laplace_initial_cond": [46, 115], "laplace_transform": [46, 115, 144], "laplacedistribut": 241, "laplacetransform": 115, "larg": [2, 3, 4, 7, 11, 12, 16, 18, 21, 27, 30, 32, 41, 48, 53, 79, 80, 88, 89, 98, 113, 115, 127, 128, 135, 154, 171, 196, 206, 210, 211, 212, 214, 217, 220, 221, 222, 228, 231, 233, 239, 241, 246, 253, 260, 262, 268, 286, 291, 297], "larger": [3, 5, 14, 15, 43, 53, 69, 79, 80, 87, 88, 89, 96, 113, 120, 124, 128, 210, 212, 218, 222, 228, 233, 239, 254, 256, 289, 297, 306, 310], "largest": [69, 80, 82, 88, 94, 96, 124, 127, 128, 171, 208, 212, 239, 259], "lark": 2, "larklatexpars": 130, "lasserr": 115, "last": [5, 11, 12, 13, 14, 16, 37, 38, 39, 41, 42, 43, 48, 50, 52, 53, 54, 55, 56, 57, 62, 63, 64, 68, 69, 70, 78, 79, 80, 84, 87, 88, 89, 92, 98, 115, 118, 119, 120, 121, 124, 126, 127, 128, 130, 144, 158, 163, 195, 196, 206, 207, 208, 209, 210, 211, 212, 214, 217, 220, 221, 228, 229, 234, 237, 239, 240, 241, 242, 243, 247, 250, 252, 253, 254, 255, 257, 259, 260, 262, 287, 289, 292, 293], "last_index": 120, "lastli": [16, 31, 115, 137, 214, 237, 299], "lastnam": 9, "later": [3, 13, 14, 21, 25, 27, 30, 32, 35, 39, 69, 79, 113, 118, 124, 154, 155, 158, 165, 211, 214, 220, 221, 222, 231, 233, 237, 256, 269, 286, 287, 289, 291, 292, 297, 302, 306, 307], "latest": [2, 9, 12, 59, 68, 255, 257, 260], "latex": [0, 2, 4, 8, 12, 15, 32, 36, 43, 57, 59, 96, 116, 200, 205, 207, 212, 221, 291, 292, 299], "latex2sympi": 130, "latex_mod": [116, 205], "latex_print": [116, 205], "latex_repr": [197, 198], "latex_scalar": 265, "latex_set": 221, "latex_vect": 265, "latexmk": 8, "latexnam": 171, "latexparsingerror": 130, "latexprint": 43, "latin": 60, "latter": [13, 14, 38, 43, 69, 79, 88, 93, 96, 113, 128, 136, 208, 212, 216, 221, 231, 234, 247, 254, 259, 260, 289], "lattic": [91, 210, 234], "lattice_": 94, "latu": 98, "latus_rectum": 98, "lauer": 212, "laurent": [96, 212, 218, 237], "law": [15, 18, 23, 36, 68, 151, 194, 209, 241], "layer": [13, 144, 214, 260], "layout": 68, "lazard": [115, 214, 217], "lazi": [88, 120, 217], "lazili": [120, 227, 259], "lazo": 206, "lb": [69, 110, 256], "lbound": 69, "lc": [212, 214, 217, 299], "lceil": [113, 130], "lcim": 67, "lcm": [88, 128, 212, 214, 217, 221], "lcm_list": 217, "ld": [68, 299], "ldescent": 234, "ldl": [119, 124], "ldldecomposit": [119, 124], "ldlsolv": [119, 124], "ldot": [43, 51, 70, 78, 79, 87, 88, 89, 93, 96, 113, 128, 137, 196, 206, 208, 209, 212, 214, 216, 221, 224, 228, 231, 234, 239, 242, 297], "ldu": 120, "ldudecomposit": 120, "le": [41, 70, 84, 88, 96, 113, 124, 128, 130, 214, 221, 231, 239, 241, 299, 311], "lead": [13, 14, 15, 18, 36, 41, 42, 43, 48, 57, 87, 88, 94, 98, 115, 118, 124, 128, 146, 154, 175, 200, 209, 210, 212, 214, 216, 217, 218, 221, 228, 230, 233, 237, 240, 254, 257, 262, 290, 297], "leader": 128, "leading_expon": 78, "leading_expv": 212, "leading_monom": 212, "leading_term": 212, "leadterm": 88, "leadup": 128, "leaf": [15, 211, 221, 230, 292], "lean": [302, 309, 311], "learn": [2, 5, 8, 28, 36, 49, 55, 57, 124, 148, 230, 240, 286, 289, 290, 291, 295], "least": [2, 3, 5, 7, 11, 12, 13, 37, 41, 55, 65, 67, 69, 79, 88, 94, 100, 112, 113, 115, 124, 128, 129, 153, 171, 185, 193, 195, 208, 209, 211, 212, 214, 216, 217, 228, 230, 233, 237, 239, 240, 241, 254, 297], "least_rot": 259, "leav": [11, 14, 15, 23, 41, 43, 54, 56, 69, 88, 115, 124, 128, 132, 151, 154, 175, 191, 210, 228, 256, 286, 292, 297], "lebesgu": 229, "leblond": 196, "lect1023big": 241, "lectur": [30, 215, 241], "lecture4_6up": 241, "led": 0, "leedham": 79, "left": [3, 5, 13, 18, 32, 33, 39, 41, 43, 46, 49, 50, 53, 61, 67, 69, 70, 79, 80, 84, 88, 89, 90, 93, 94, 96, 104, 105, 111, 113, 115, 116, 118, 124, 127, 128, 131, 132, 138, 144, 149, 158, 159, 163, 170, 175, 179, 180, 183, 188, 200, 206, 207, 208, 210, 217, 218, 219, 220, 221, 223, 224, 228, 229, 230, 231, 233, 237, 238, 239, 240, 241, 252, 253, 254, 256, 259, 272, 287, 291, 293, 297, 299], "left_eigenvect": 124, "left_hand_sid": 69, "left_open": 229, "left_support": 138, "leftmost": 191, "leftrightarrow": 84, "leftslash": 221, "leg": [104, 138], "legaci": [88, 115, 124, 241], "legacy_matrix": [13, 115], "legal": 193, "legend": [18, 30, 55, 207, 224], "legendr": [93, 115, 128, 217, 221, 234], "legendre_poli": [96, 217], "legendre_polynomi": 96, "legendre_rul": 115, "legendre_symbol": [13, 93, 128], "legendrep": [96, 221], "legendrep2": 96, "legendrepolynomi": 96, "legibl": 212, "legitim": 214, "legrang": 234, "lehmer": [80, 88], "lehmer_cod": 80, "lemaitr": 206, "lemma": [68, 79, 113, 209], "len": [67, 76, 77, 78, 79, 80, 84, 86, 88, 89, 93, 96, 103, 113, 118, 160, 164, 175, 185, 210, 217, 233, 237, 246, 259, 299, 306], "len1": 79, "len2": 79, "len3": 79, "len_i": [69, 221], "lenght": 136, "length": [4, 13, 21, 28, 36, 61, 69, 72, 78, 79, 80, 82, 86, 88, 89, 91, 93, 94, 96, 97, 101, 103, 104, 105, 118, 124, 127, 128, 132, 134, 136, 137, 138, 140, 148, 153, 156, 158, 159, 160, 164, 188, 193, 194, 195, 196, 200, 204, 216, 217, 221, 227, 231, 233, 237, 239, 241, 252, 253, 259, 261, 262, 265, 267, 275, 299, 303, 304, 306, 307], "lengthen": [3, 18, 134], "lengthi": 79, "lenic": [107, 109], "lens": 160, "lens_formula": 164, "lens_makers_formula": 164, "lenstra": [128, 210], "leq": [79, 87, 89, 93, 96, 113, 124, 128, 206, 214, 216, 227, 228, 234, 241], "lerch": 96, "lerch_transcend": 96, "lerchphi": [96, 221], "less": [4, 5, 11, 14, 15, 22, 39, 48, 51, 53, 61, 65, 69, 70, 71, 79, 80, 87, 88, 89, 92, 93, 94, 96, 102, 103, 104, 124, 128, 142, 144, 148, 158, 191, 210, 211, 212, 214, 216, 217, 230, 231, 233, 234, 237, 239, 240, 241, 252, 254], "lesser": [80, 140, 217], "lessthan": [88, 221], "lester": 89, "let": [11, 12, 18, 22, 30, 35, 39, 41, 42, 43, 46, 67, 69, 79, 84, 88, 89, 98, 106, 111, 113, 117, 120, 124, 125, 128, 130, 132, 148, 149, 159, 196, 200, 208, 209, 210, 214, 216, 217, 218, 221, 228, 231, 233, 234, 237, 239, 240, 247, 250, 253, 257, 260, 270, 271, 275, 286, 289, 291, 292, 297], "lett": [80, 124], "letter": [5, 15, 16, 60, 81, 88, 89, 128, 130, 191, 210, 221, 259, 287, 289], "lev": 212, "level": [3, 4, 5, 7, 12, 13, 14, 15, 16, 21, 30, 32, 36, 41, 42, 50, 52, 69, 79, 86, 88, 94, 96, 115, 118, 124, 128, 131, 134, 186, 191, 196, 202, 207, 210, 211, 212, 219, 221, 230, 234, 240, 241, 245, 253, 254, 259, 292, 293, 295, 306], "levelt": 239, "lever": [299, 300], "lever_resist": 299, "leverag": [55, 69, 129, 221, 287], "levi": [90, 96, 241, 247], "levicivita": [96, 124], "levinson": [29, 153, 200, 265], "levydistribut": 241, "levyleblond77": 196, "lex": [88, 116, 205, 209, 211, 212, 214, 217, 218, 220, 221, 233], "lexic": [77, 171, 259], "lexicograph": [79, 80, 83, 84, 88, 214, 217, 259], "lexicographically_minimal_string_rot": 259, "lexograph": [116, 205], "lexord": [212, 217], "lfloor": [88, 94, 130, 212, 240, 241], "lfortran": [2, 130], "lfsr": 89, "lfsr_autocorrel": 89, "lfsr_connection_polynomi": 89, "lfsr_sequenc": 89, "lgamma": 221, "lh": [13, 37, 50, 55, 69, 78, 88, 131, 134, 219, 221, 237, 239, 240, 271], "li": [93, 96, 104, 115, 128, 155, 159, 191, 221, 275, 299], "liabl": [88, 118], "liao": 215, "liao95": [214, 215], "lib": 265, "liber": [21, 130, 291], "liberato": 206, "liberatodebrito82": 206, "libgtkmathview": 221, "librari": [0, 2, 3, 4, 12, 13, 14, 15, 21, 22, 30, 41, 43, 54, 58, 59, 69, 88, 89, 93, 113, 115, 116, 124, 129, 158, 195, 207, 211, 212, 241, 252, 253, 254, 259, 260, 286, 287, 289, 290, 291], "library_dir": 253, "librsvg": 8, "librsvg2": 8, "libtcc": 254, "licens": [0, 2, 45, 291], "lie": [18, 46, 48, 80, 90, 102, 103, 104, 156, 159, 217, 241, 276, 283, 299], "lie_algebra": 117, "lie_group": 237, "lie_heuristic_abaco1_product": 237, "lie_heuristic_abaco1_simpl": 237, "lie_heuristic_abaco2_similar": 237, "lie_heuristic_abaco2_unique_gener": 237, "lie_heuristic_abaco2_unique_unknown": 237, "lie_heuristic_bivari": 237, "lie_heuristic_chi": 237, "lie_heuristic_function_sum": 237, "lie_heuristic_linear": 237, "liealgebra": [2, 117], "liederiv": 90, "liegroup": 237, "lift": [18, 69, 84, 94, 96, 113, 212, 214, 217], "light": [146, 163, 195, 196, 205, 208], "lighten": 208, "lightli": 3, "lightweight": [69, 216, 291], "like": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 21, 22, 24, 27, 30, 31, 32, 33, 35, 38, 41, 42, 43, 45, 53, 55, 56, 57, 58, 59, 69, 70, 71, 73, 79, 80, 87, 88, 89, 92, 93, 94, 96, 98, 108, 111, 115, 116, 118, 120, 121, 122, 124, 128, 129, 130, 134, 140, 144, 148, 152, 156, 159, 173, 175, 185, 186, 189, 190, 191, 195, 196, 200, 204, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 224, 228, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 250, 252, 253, 254, 255, 259, 260, 262, 269, 270, 272, 274, 286, 287, 289, 290, 291, 292, 293, 297, 299], "likelihood": 128, "likewis": [4, 41, 68, 136, 304, 306], "likin": [29, 34, 203], "likins1973": [28, 34, 203], "lim": [88, 130, 228, 287], "lim_": [89, 94, 96, 113, 115, 228, 287, 291], "limit": [1, 3, 13, 14, 16, 23, 28, 46, 52, 53, 57, 59, 65, 67, 69, 87, 88, 90, 92, 93, 94, 96, 97, 100, 108, 110, 115, 116, 118, 124, 128, 130, 142, 180, 186, 189, 205, 207, 212, 214, 217, 218, 221, 224, 225, 227, 229, 233, 234, 236, 237, 238, 239, 241, 246, 253, 256, 259, 260, 262, 264, 265, 275, 277, 283, 288, 289, 291, 293, 301], "limit_denomin": 88, "limit_seq": [226, 228], "limitinf": 228, "limiting_distribut": 241, "limits_": [88, 130, 206, 223, 291], "limitseq": 226, "limsup_": 228, "linalg": [53, 54, 69, 299], "lincomb": 216, "line": [3, 4, 9, 11, 12, 13, 14, 15, 16, 18, 22, 33, 35, 39, 41, 59, 68, 69, 71, 79, 80, 84, 89, 98, 99, 100, 102, 103, 104, 105, 110, 113, 115, 116, 117, 124, 128, 134, 136, 138, 140, 142, 145, 148, 155, 156, 159, 171, 200, 205, 206, 207, 221, 224, 231, 233, 237, 241, 242, 250, 252, 253, 254, 257, 260, 262, 272, 275, 283, 289, 299, 302, 310], "line2d": [98, 101, 104], "line2dbaseseri": [13, 207], "line3d": [101, 102, 103], "line3dbaseseri": 207, "line_break": 221, "line_color": [5, 207, 224], "line_integr": 115, "linear": [18, 23, 25, 29, 30, 32, 37, 43, 49, 51, 53, 54, 57, 68, 69, 80, 87, 88, 89, 91, 92, 96, 101, 111, 113, 115, 117, 120, 122, 131, 134, 136, 141, 144, 148, 149, 151, 152, 153, 155, 156, 163, 185, 188, 189, 204, 207, 208, 210, 212, 214, 216, 217, 219, 227, 229, 231, 234, 237, 238, 240, 259, 280, 282, 298, 299, 301, 303, 305, 306, 307], "linear_coeffici": 237, "linear_coefficients_integr": 237, "linear_differential_equ": 237, "linear_eq_to_matrix": [53, 237, 239, 240, 304], "linear_momentum": [28, 30, 149, 155], "linear_ode_to_matrix": 237, "linear_pathwai": [148, 156], "linear_polar": 163, "linear_solv": [153, 154, 302], "linear_stiff": 148, "linearcoeffici": 237, "lineardamp": [148, 303, 307], "linearent": [4, 98, 101, 102, 103, 104], "linearentity2d": 101, "linearentity3d": [101, 102], "linearli": [65, 69, 96, 112, 124, 153, 210, 214, 237, 239, 247], "linearpathwai": [18, 134, 148, 156, 299, 303, 307], "linearspr": [148, 307], "linecollect": [13, 207], "lineover1drangeseri": [142, 207], "linestyl": 13, "link": [3, 4, 5, 7, 11, 15, 16, 23, 24, 49, 53, 69, 89, 98, 104, 115, 145, 148, 152, 253, 256, 257, 295, 304], "link1": 304, "link2": 304, "link3": 304, "link4": 304, "linkag": [301, 305], "linkcod": 5, "linodesolv": 237, "linodesolve_typ": 237, "linprog": [50, 239], "linsolv": [30, 153, 219, 239, 240, 298], "linspac": [14, 18, 22, 30, 55, 69, 111, 129, 299], "linux": [8, 9, 11, 59], "linz": 265, "liouvil": 237, "liouville_integr": 237, "liouvillian": 237, "lip": 241, "list": [0, 2, 3, 4, 5, 9, 11, 12, 14, 17, 18, 24, 25, 26, 30, 31, 36, 41, 51, 52, 53, 54, 55, 56, 57, 59, 61, 64, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 113, 115, 116, 117, 118, 120, 123, 124, 127, 128, 129, 130, 136, 142, 144, 148, 149, 152, 153, 156, 158, 164, 175, 177, 180, 181, 185, 186, 188, 189, 191, 193, 200, 204, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 242, 245, 246, 247, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 286, 290, 291, 293, 296, 297, 298, 299, 301, 302, 306, 309], "list2numpi": 124, "list_can_dim": 193, "list_free_indic": 84, "list_of_poli": 111, "list_of_second_moments_of_area": 98, "list_of_trigonometric_ident": 230, "list_to_frac": 297, "list_visitor": 256, "listcoeff": 212, "listmonom": 212, "listofsolut": 237, "listterm": 212, "liter": [4, 12, 14, 16, 43, 69, 78, 88, 116, 118, 130, 191, 198, 233], "literal_dp": 69, "literal_sp": 69, "literatur": [4, 15, 113, 213, 283], "litter": 88, "littl": [12, 41, 43, 68, 80, 98, 124, 128, 129, 196, 210, 215, 217, 221, 231, 233, 241, 256, 269, 302], "liu": 215, "live": [7, 30, 60, 70, 216, 234], "livehtml": 8, "ll": [8, 18, 35, 36, 68, 86, 124, 132, 134, 148, 156, 250, 299, 306], "ll1": 100, "ll2": 100, "ll3": 100, "ll4": 100, "ll5": 100, "ll6": 100, "lll": 210, "lll_transform": 210, "llvm": 2, "llvm_callabl": 2, "llvmjitcod": 2, "llvmlite": 2, "lm": [26, 27, 214, 217, 303, 306], "lmm": 234, "lmn": 69, "lmodern": 8, "ln": [88, 94, 115, 130, 221, 223, 237, 241, 297], "ln_notat": 221, "lnc": [115, 215, 239], "lo": 239, "load": [8, 13, 19, 23, 31, 69, 88, 116, 136, 137, 138, 140, 148, 149, 151, 153, 156, 158, 171, 205, 282, 299, 303, 305, 307], "load_vector": 136, "loadbas": 158, "loads_posit": 138, "loan": 124, "lobatto": 115, "loc": 136, "local": [2, 11, 12, 45, 60, 62, 63, 64, 88, 90, 113, 130, 202, 208, 214, 239, 252, 299, 309, 311], "local_dict": 130, "local_var": 254, "localhost": 8, "localis": 208, "locat": [5, 11, 12, 13, 24, 27, 28, 31, 33, 71, 80, 88, 102, 124, 128, 136, 137, 140, 152, 155, 156, 158, 159, 204, 216, 217, 221, 233, 241, 255, 263, 265, 269, 271, 274, 299, 303, 306], "locate_new": [265, 268, 269, 270, 271, 272], "locatenew": [13, 27, 28, 30, 31, 33, 35, 149, 155, 201, 204, 302, 303, 304, 306, 309, 310, 311], "location_matrix": 241, "lock": 61, "log": [4, 5, 9, 11, 12, 16, 18, 43, 59, 61, 67, 69, 79, 87, 88, 92, 93, 94, 96, 106, 110, 112, 113, 115, 124, 128, 130, 132, 207, 212, 221, 223, 228, 231, 233, 237, 240, 241, 248, 287, 297, 298], "log1": 9, "log10": [69, 221], "log1p": [69, 221], "log1p_opt": 69, "log2": [69, 96, 221], "log2_opt": 69, "log2const_opt": 69, "log_b": 240, "log_warn": 221, "logarithm": [5, 16, 61, 67, 69, 88, 89, 94, 113, 115, 124, 128, 212, 214, 218, 221, 231, 233, 240, 241, 288], "logarithmic_distribut": 241, "logarithmic_integr": 96, "logarithmically_concave_funct": 67, "logarithmically_convex_funct": 67, "logarithmicdistribut": 241, "logarithmicintegr": 96, "logcombin": [233, 237, 240], "loggamma": [4, 5, 96, 221], "loggammafunct": 96, "logger": 130, "logic": [12, 13, 14, 15, 41, 43, 62, 63, 64, 65, 68, 88, 90, 113, 115, 128, 183, 185, 186, 190, 207, 221, 223, 229, 237, 241, 259, 289, 290, 291, 293], "logint": 221, "logintegr": 221, "logist": 241, "logistic_distribut": 241, "logisticdistribut": 241, "loglogist": 241, "lognorm": 241, "lognormaldistribut": 241, "logo": 44, "logx": [88, 228], "lomax": 241, "lomax_distribut": 241, "london": [215, 234], "long": [0, 4, 5, 11, 12, 14, 28, 48, 57, 69, 80, 87, 88, 89, 91, 101, 113, 115, 116, 118, 124, 128, 130, 135, 136, 137, 205, 217, 218, 221, 230, 231, 239, 241, 253, 260, 262, 268, 289, 292], "long_frac_ratio": 221, "longer": [3, 4, 11, 12, 16, 27, 40, 88, 98, 128, 209, 210, 214, 221, 230, 233, 259, 262, 289, 297, 306], "longest": [159, 259], "longrightarrow": 120, "look": [3, 4, 5, 7, 9, 11, 12, 13, 16, 22, 23, 41, 42, 43, 60, 68, 69, 79, 88, 93, 94, 96, 109, 124, 128, 151, 153, 175, 185, 186, 189, 204, 207, 211, 212, 216, 221, 223, 224, 228, 231, 233, 234, 237, 238, 243, 252, 256, 260, 262, 270, 287, 292, 295, 296, 302], "looking_for": 69, "lookup": [115, 124, 128, 231], "lookup_view": 263, "loop": [14, 46, 48, 51, 55, 68, 69, 128, 144, 200, 207, 210, 218, 221, 237, 256, 259, 260, 292, 304], "looping_end": 68, "looping_start": 68, "loos": [69, 88], "lopen": [67, 88, 229, 236, 241], "lorentz": 247, "lorentzindex": 145, "lorenz": 55, "lose": [14, 16, 208, 210], "loss": [14, 15, 69, 113, 191, 253, 271], "lost": [14, 88], "lot": [7, 11, 13, 14, 22, 30, 79, 88, 106, 113, 115, 124, 207, 210, 217, 220, 224, 234, 240, 252, 297], "loui": 223, "lovasz": 210, "love": 7, "lov\u00e1sz": 210, "low": [16, 41, 42, 69, 88, 89, 96, 128, 153, 211, 214, 219, 221, 233, 253, 254, 259], "low_index_subgroup": 70, "lower": [4, 15, 41, 50, 65, 67, 69, 79, 80, 87, 88, 90, 96, 97, 99, 104, 105, 115, 119, 120, 124, 136, 142, 147, 152, 191, 204, 206, 208, 210, 212, 214, 217, 221, 230, 231, 233, 237, 246, 247, 256, 265, 287, 295, 299], "lower_bob": 152, "lower_bound": [97, 98, 101, 104], "lower_central_seri": 79, "lower_incomplete_gamma_funct": 96, "lower_limit": [142, 287], "lower_polygon": 104, "lower_seg": 104, "lower_triangular": [65, 124], "lower_triangular_solv": [119, 124], "lowercas": [15, 16, 61, 130, 237, 252, 287], "lowergamma": [4, 96, 241], "lowertriangularhandl": 65, "lowertriangularmatrix": 65, "lowertriangularpred": 65, "lowest": [39, 69, 79, 84, 128, 138, 208, 210, 223, 240], "lpart": 256, "lpathwai": 18, "lpmax": 239, "lpmin": 239, "lr": 208, "lrh": 311, "ls1": 85, "ls2": 85, "lseri": 88, "lsoda": 21, "lst": 252, "lt": [88, 217, 221, 262], "ltd": 87, "lti": [46, 141, 142], "ltrim": 217, "lu": [53, 120, 124, 153, 154, 210, 215], "lu_": 124, "lu_solv": [53, 124, 210], "luca": [93, 128, 221, 227], "lucas_numb": 93, "lucas_pseudoprim": 128, "lucasl": 221, "lucasnumb": 93, "lucaspseudoprim": 128, "lucien": 70, "lucki": 230, "lucombin": 124, "ludecomposit": [119, 120, 124, 210, 293], "ludecomposition_simpl": [124, 293], "ludecompositionff": 124, "luke": [4, 96, 113, 231], "luke1969": [113, 231], "lukpank": 11, "luschni": [93, 96, 217], "lusolv": [27, 31, 53, 119, 124, 149, 153, 154, 239, 293, 304], "lvert": 113, "lvovich": 5, "ly": [104, 124, 212], "l\u00e9vy": 196, "m": [0, 8, 9, 11, 12, 13, 16, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 39, 41, 43, 46, 59, 61, 65, 69, 70, 76, 77, 79, 80, 84, 87, 88, 89, 90, 91, 93, 96, 98, 100, 104, 105, 113, 115, 117, 119, 120, 121, 123, 124, 125, 127, 128, 130, 131, 132, 134, 136, 137, 140, 144, 146, 147, 148, 149, 151, 153, 154, 155, 158, 160, 162, 167, 174, 188, 189, 192, 194, 196, 206, 208, 209, 210, 212, 214, 215, 216, 217, 218, 221, 222, 223, 224, 226, 227, 228, 229, 231, 233, 234, 237, 239, 240, 241, 242, 243, 246, 247, 253, 254, 256, 259, 261, 265, 268, 270, 274, 275, 287, 293, 296, 297, 298, 299, 302, 303, 306, 309, 310, 311], "m0": [136, 206, 247], "m1": [124, 128, 136, 137, 162, 170, 188, 190, 194, 234, 237, 242, 247], "m11": [39, 241], "m12": [39, 241], "m13": 39, "m15": 136, "m172": 89, "m2": [124, 128, 136, 137, 155, 162, 170, 188, 190, 194, 216, 234, 237, 242, 247], "m20": 71, "m21": [39, 241], "m22": [39, 241], "m23": 39, "m3": [124, 170, 234, 242], "m31": 39, "m32": 39, "m33": [39, 128], "m4": 234, "m4nzdu": 206, "m53": 128, "m_": [18, 26, 65, 132, 134, 206, 214, 243], "m_0": [136, 214, 234], "m_1": [93, 144, 170, 188, 206, 234], "m_15": 136, "m_2": [31, 93, 158, 170, 188, 206], "m_3": [31, 158, 170, 206], "m_a": 299, "m_c": 299, "m_d": [26, 158, 299], "m_frac": 210, "m_i": [93, 128, 206, 214], "m_ik": [93, 128], "m_k": 93, "m_lll": 210, "m_m": 158, "m_n": 214, "m_op": 27, "m_pa": 132, "m_primit": 210, "m_sqrt2": 221, "m_sqrt2l": 221, "m_tf": 144, "ma": [80, 87, 299, 307], "ma217": 241, "macaulai": 96, "macdonald": 215, "machin": [2, 4, 7, 8, 9, 148, 222, 233, 237, 286], "machineri": [4, 88, 216, 260], "maclaurin": [87, 92], "maco": 9, "made": [3, 5, 11, 12, 13, 14, 15, 16, 18, 22, 24, 27, 30, 36, 41, 43, 56, 82, 84, 88, 89, 94, 97, 98, 101, 104, 105, 115, 118, 124, 128, 130, 148, 156, 208, 210, 212, 214, 216, 217, 221, 222, 228, 229, 230, 233, 237, 239, 240, 241, 254, 259, 262, 274, 292, 299], "mag": 30, "magazin": 124, "magic": [80, 233, 252, 289], "magnet": [33, 146, 162, 274], "magnif": 164, "magnitud": [18, 30, 33, 36, 46, 61, 69, 87, 88, 92, 96, 129, 136, 137, 138, 140, 142, 148, 155, 156, 189, 198, 200, 207, 265, 272, 274, 299, 306], "mai": [2, 3, 4, 8, 9, 11, 12, 13, 14, 15, 16, 18, 22, 23, 27, 33, 35, 37, 38, 39, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 65, 67, 68, 69, 70, 71, 79, 80, 81, 87, 88, 89, 90, 92, 93, 94, 96, 98, 100, 101, 103, 104, 105, 113, 115, 116, 118, 119, 123, 124, 125, 127, 128, 130, 140, 150, 151, 153, 154, 158, 177, 186, 191, 192, 193, 195, 198, 200, 204, 207, 208, 209, 210, 212, 214, 216, 220, 221, 222, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 272, 274, 286, 287, 289, 292, 293, 297, 298, 306], "mail": [3, 9, 11, 13, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 221, 290, 301], "mailmap_check": 11, "mailoo": 11, "main": [2, 4, 5, 7, 9, 11, 13, 16, 22, 36, 54, 64, 65, 69, 88, 94, 113, 124, 127, 189, 205, 207, 208, 210, 212, 214, 221, 228, 237, 240, 246, 253, 297, 298, 310], "mainli": [79, 96, 124, 129, 196, 205, 214, 231, 234, 237], "maintain": [7, 14, 15, 16, 88, 89, 128, 137, 221, 229, 230, 237, 240, 256], "mainten": [3, 64], "major": [2, 3, 5, 8, 13, 21, 48, 57, 98, 246, 291, 297], "majorli": 88, "make": [2, 3, 4, 5, 8, 9, 12, 13, 14, 15, 16, 18, 22, 25, 27, 28, 30, 32, 35, 37, 39, 41, 42, 43, 45, 48, 53, 54, 56, 60, 63, 64, 65, 67, 69, 70, 78, 79, 87, 88, 89, 90, 91, 92, 93, 94, 96, 100, 104, 115, 116, 118, 124, 127, 128, 129, 130, 134, 136, 137, 138, 140, 148, 153, 158, 171, 188, 193, 205, 207, 210, 211, 212, 214, 216, 217, 218, 220, 221, 224, 229, 230, 231, 233, 237, 238, 239, 240, 245, 247, 250, 252, 253, 254, 255, 257, 259, 260, 269, 274, 275, 289, 290, 291, 292, 293, 297, 302, 304, 309, 310], "make_mod_elt": 216, "make_monic_over_integers_by_scaling_root": 217, "make_perm": 79, "make_routin": [69, 254], "makefil": 8, "man": [115, 215], "man93": [215, 217], "manag": [3, 7, 9, 12, 18, 59, 63, 64, 130, 149, 171, 214, 233, 247, 250, 252, 257, 299], "mandatori": [69, 221, 253], "mangl": 221, "mani": [2, 3, 4, 7, 12, 14, 15, 16, 18, 22, 23, 26, 27, 30, 36, 37, 39, 41, 42, 43, 48, 49, 50, 52, 54, 55, 57, 59, 67, 68, 69, 70, 76, 79, 84, 88, 89, 90, 92, 93, 94, 96, 100, 113, 115, 118, 124, 128, 129, 130, 133, 151, 153, 154, 175, 191, 199, 208, 210, 211, 212, 214, 216, 217, 225, 228, 229, 231, 233, 234, 237, 238, 239, 240, 241, 245, 254, 259, 286, 287, 289, 290, 291, 292, 296, 297, 298, 301], "manifest": [41, 209], "manifesto": 93, "manifold": [13, 90], "manipul": [2, 15, 22, 23, 28, 35, 38, 39, 41, 48, 51, 53, 55, 68, 69, 70, 79, 88, 94, 96, 113, 128, 129, 151, 189, 210, 211, 212, 215, 220, 221, 223, 230, 233, 244, 259, 276, 282, 283, 286, 287, 288, 289, 290, 291, 293, 296, 297], "manner": [12, 27, 33, 72, 89, 96, 189, 234, 237, 242, 259, 274], "mantissa": 69, "manual": [2, 3, 5, 8, 12, 13, 14, 15, 18, 22, 27, 31, 43, 51, 69, 70, 79, 92, 98, 115, 116, 130, 144, 155, 158, 207, 214, 221, 237, 239, 240, 255, 287, 297, 304], "manualintegr": 115, "manuel": [115, 226], "manufactur": 129, "manuscript": [89, 115], "manwright94": [215, 217], "map": [15, 36, 41, 43, 67, 68, 69, 71, 78, 79, 80, 88, 89, 93, 100, 104, 111, 113, 115, 118, 124, 128, 131, 142, 153, 169, 180, 181, 186, 200, 207, 208, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 228, 233, 234, 237, 238, 239, 240, 241, 245, 246, 253, 256, 259, 260, 262, 265, 306], "mapl": [16, 115, 210, 237, 291], "maple_cod": 221, "maplecodeprint": 221, "maplesoft": 237, "mapsto": [87, 113, 124, 216], "marbl": 241, "march": 88, "marcum": 96, "marcum_q": 96, "marcumq": 96, "margin": [128, 144, 207, 241], "marginal_distribut": 241, "marichev": [113, 231], "mark": [3, 4, 5, 142, 164, 176, 234, 250, 255, 257], "markdown": [3, 11, 15], "marker": [142, 207], "markers": 142, "marko": 87, "markov": 241, "markov_chain": 241, "markup": [3, 11, 221], "mascheroni": [88, 96], "mask": [68, 221], "mass": [13, 18, 21, 22, 23, 24, 25, 26, 30, 31, 33, 35, 46, 105, 135, 146, 147, 148, 149, 152, 153, 155, 158, 167, 192, 194, 195, 196, 252, 274, 299, 302, 303, 304, 306, 307, 309, 311], "mass_cent": 304, "mass_matrix": [25, 26, 31, 149, 153, 158, 299, 309, 310], "mass_matrix_ful": [22, 25, 26, 149, 153, 158, 307], "mass_matrix_kin": 153, "masscent": [13, 24, 28, 30, 149, 152, 155, 158, 299, 304, 307], "masscenter_vel": 149, "massei": 89, "massiv": 303, "massless": 303, "master": [4, 5, 7, 11, 12, 59, 115, 252], "mat": [69, 120, 160, 185, 221], "mat_1": 69, "mat_2": 69, "mat_a": 144, "mat_b": 144, "mat_c": 144, "mat_delim": 221, "mat_str": 221, "mat_symbol_styl": 221, "matadd": [88, 120, 221], "match": [2, 3, 4, 11, 12, 13, 14, 16, 32, 41, 43, 55, 79, 80, 87, 88, 96, 101, 113, 115, 124, 152, 158, 167, 192, 200, 210, 217, 233, 234, 237, 238, 239, 241, 250, 252, 254, 259, 260, 271, 287, 299, 302], "matchdict": 237, "matching_hint": 237, "materi": [0, 45, 136, 162, 295], "mateusz": 0, "math": [2, 4, 8, 12, 14, 22, 23, 33, 43, 57, 61, 65, 68, 70, 79, 88, 93, 96, 98, 115, 124, 128, 129, 140, 151, 207, 210, 212, 214, 215, 220, 221, 237, 238, 241, 253, 254, 260, 270, 271, 272, 273, 274, 286, 287, 291], "math24": 237, "math56a_s08_notes015": 241, "math56as08": 241, "math_macro": 221, "mathbb": [27, 41, 43, 51, 65, 70, 71, 79, 87, 88, 89, 94, 96, 113, 124, 206, 208, 209, 211, 212, 214, 216, 217, 220, 228, 229, 231, 234, 240, 241, 297], "mathbf": [18, 23, 25, 26, 28, 32, 33, 35, 36, 61, 120, 151, 153, 159, 196, 200, 205, 221, 242, 269, 270, 272, 274, 275, 299, 302], "mathc": 241, "mathcal": [28, 93, 94, 113, 144, 188, 206, 217, 229], "mathcin": 69, "mathcircl": 93, "mathemat": [2, 3, 5, 12, 13, 14, 15, 18, 21, 29, 33, 35, 36, 38, 41, 43, 50, 52, 54, 55, 57, 58, 61, 63, 64, 67, 69, 70, 74, 78, 80, 87, 88, 89, 90, 93, 94, 95, 96, 101, 102, 113, 115, 118, 120, 124, 128, 129, 130, 144, 145, 196, 208, 209, 211, 212, 215, 220, 221, 229, 230, 234, 236, 237, 240, 241, 246, 253, 254, 260, 265, 269, 272, 274, 286, 287, 289, 290, 291, 292, 295, 297, 299, 302, 305, 306], "mathematica": [2, 16, 69, 80, 130, 291, 293], "mathematica_cod": [69, 221], "mathematical_express": 5, "mathematical_singular": 67, "mathematician": [234, 240], "mathfrak": 216, "mathieu": 221, "mathieu_funct": 96, "mathieuandspheroidalfunct": 96, "mathieubas": 96, "mathieuc": [96, 221], "mathieucprim": [96, 221], "mathieufunct": 96, "mathieusprim": [96, 221], "mathit": 130, "mathjax": [2, 5, 116, 205, 296], "mathml": 221, "mathml2": 221, "mathml_presentation_repr": 198, "mathml_tag": 221, "mathmlcontentprint": 221, "mathmlpresentationprint": 221, "mathmlprinterbas": 221, "mathrm": [2, 4, 59, 78, 87, 88, 89, 96, 113, 115, 212, 214, 221, 229, 231, 237, 240, 241, 287, 291], "mathtt": 221, "mathwav": 241, "mathwork": [124, 142, 241, 293], "mathworld": [4, 15, 65, 81, 82, 88, 89, 91, 93, 94, 96, 98, 104, 115, 124, 128, 215, 224, 229, 234, 241, 259], "matin_opt": 69, "matinv_opt": 69, "matlab": [21, 30, 69, 254, 293], "matlplotlib": 30, "matmul": [88, 120, 210], "matplotlib": [2, 4, 5, 8, 13, 14, 18, 30, 55, 59, 111, 116, 142, 171, 205, 207, 296, 299], "matplotlibbackend": [13, 207], "matpow": [120, 221], "matric": [2, 4, 15, 22, 27, 30, 36, 40, 41, 65, 69, 88, 89, 115, 123, 125, 127, 130, 144, 152, 153, 154, 160, 163, 164, 166, 174, 175, 185, 190, 200, 206, 210, 216, 221, 222, 229, 231, 233, 234, 237, 239, 240, 242, 254, 255, 282, 288, 290, 291, 306], "matrix": [14, 15, 18, 22, 24, 25, 26, 28, 30, 31, 32, 36, 38, 39, 41, 46, 49, 54, 56, 61, 69, 77, 80, 88, 89, 90, 96, 103, 113, 115, 117, 119, 121, 122, 126, 127, 129, 130, 131, 134, 144, 145, 147, 148, 149, 152, 153, 154, 155, 158, 160, 163, 164, 166, 174, 175, 180, 185, 186, 188, 190, 191, 193, 196, 200, 206, 208, 210, 214, 216, 219, 221, 222, 229, 231, 233, 234, 237, 239, 240, 242, 243, 245, 246, 247, 248, 253, 254, 259, 260, 262, 265, 267, 268, 270, 274, 280, 288, 291, 292, 297, 298, 299, 302, 304, 306, 307, 309, 310, 311], "matrix1": 210, "matrix2numpi": 124, "matrix_differential_equ": 237, "matrix_exp": 237, "matrix_exp_jordan_form": 237, "matrix_exponenti": 237, "matrix_fglm": 214, "matrix_form": 117, "matrix_gamma_distribut": 241, "matrix_multiply_elementwis": 124, "matrix_nod": 69, "matrix_normal_distribut": 241, "matrix_rep": 191, "matrix_tensor_product": 190, "matrix_to_dens": 185, "matrix_to_qubit": 185, "matrix_to_vector": 268, "matrixarithmet": 13, "matrixbas": [4, 13, 53, 119, 120, 123, 124, 153, 154, 210], "matrixcalculu": 13, "matrixcommon": 13, "matrixdeprec": 13, "matrixdetermin": 13, "matrixeigen": 13, "matrixel": [13, 69], "matrixerror": 124, "matrixexpr": [15, 43, 120, 121, 123], "matrixgamma": 241, "matrixi": 124, "matrixkind": [15, 38, 88, 123, 229], "matrixnorm": 241, "matrixoper": 13, "matrixpermut": 120, "matrixproperti": 13, "matrixreduct": 13, "matrixrequir": 13, "matrixset": [120, 229], "matrixshap": 13, "matrixsolv": [69, 221], "matrixspeci": 13, "matrixsubspac": 13, "matrixsymbol": [13, 38, 41, 53, 65, 66, 69, 88, 120, 123, 124, 221, 241, 243], "matt": 177, "matter": [12, 32, 43, 67, 77, 80, 87, 88, 93, 113, 115, 228, 259, 291, 292], "matthew": 0, "matur": [40, 41, 239, 240], "matvec": 253, "max": [13, 18, 69, 79, 80, 88, 94, 96, 98, 124, 128, 130, 134, 136, 206, 207, 214, 216, 217, 221, 228, 230, 231, 260], "max_bending_mo": 136, "max_bmoment": 136, "max_coset": 70, "max_curv": 128, "max_deflect": 136, "max_degre": [115, 217], "max_denomin": 88, "max_div": 79, "max_expon": 69, "max_it": 233, "max_len": 233, "max_norm": [212, 217], "max_ord": 69, "max_shear_forc": 136, "max_stack_s": 70, "max_step": 128, "max_term": 233, "max_tri": [212, 216, 217], "max_wir": 171, "maxdepth": 221, "maxim": [12, 18, 79, 89, 117, 134, 208, 212, 216, 228, 230], "maxima": [2, 52, 130, 240], "maximal_fiber_veloc": [18, 134], "maximal_ord": [212, 216], "maximum": [13, 14, 16, 18, 52, 53, 67, 69, 70, 79, 80, 88, 94, 115, 124, 128, 132, 134, 136, 188, 196, 207, 212, 214, 217, 221, 228, 229, 233, 234, 237, 239, 240, 241, 256, 259], "maxn": [88, 92, 124], "maxprec": 88, "maxsiz": 88, "maxstep": 217, "maxterm": 118, "maxtriesexcept": 216, "maxwel": 241, "maxwell_distribut": 241, "maxwelldistribut": 241, "mayavi": 13, "mayb": [8, 12, 42, 50], "mayor": 163, "mb": [30, 155, 307], "mbox": 68, "mc": [89, 299, 304, 307], "mccluskei": 118, "mccluskey_algorithm": 118, "mcgraw": [29, 34, 96, 115, 153, 200, 203, 265], "mcii": 241, "mcode": 221, "mcodeprint": 221, "mcydwshkogamkzcelyfgayr": 89, "md": [3, 5, 12, 250, 257, 299], "md5": 262, "mdarg": 88, "mdft": 147, "me": [18, 22, 30, 89, 200, 221, 243, 299, 302, 303], "mead": 89, "mean": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 21, 24, 35, 41, 42, 43, 48, 56, 65, 70, 80, 87, 88, 89, 90, 106, 113, 115, 116, 118, 121, 123, 124, 128, 136, 148, 191, 193, 196, 200, 205, 207, 208, 209, 211, 214, 216, 220, 221, 231, 233, 234, 236, 237, 239, 240, 241, 242, 243, 245, 246, 252, 259, 270, 286, 287, 289, 291, 292, 293, 297, 298], "meaning": [41, 62, 64, 68, 89], "meaningfulli": 208, "meaningless": 92, "meant": [4, 5, 12, 13, 16, 22, 30, 41, 43, 69, 88, 96, 101, 115, 128, 207, 212, 229, 233, 238, 243, 270, 292], "meanwhil": 216, "measur": [16, 21, 28, 32, 33, 36, 61, 94, 96, 104, 119, 171, 180, 185, 193, 196, 198, 200, 204, 217, 229, 230, 233, 241, 264, 265, 268, 269, 271, 272, 274, 299], "measure_al": 185, "measure_all_oneshot": 185, "measure_parti": 185, "measure_partial_oneshot": 185, "meat": 69, "mechan": [2, 17, 18, 19, 20, 22, 32, 34, 43, 47, 88, 111, 115, 124, 134, 136, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 173, 177, 180, 186, 188, 189, 190, 193, 200, 203, 206, 282, 299, 301, 302, 303, 304, 306, 307, 309, 310, 311], "mechanicalc": 104, "mechanics_print": [24, 25, 26, 158, 302, 304, 309, 310, 311], "mechmachtheori": 148, "media": [30, 164], "medial": 104, "median": [104, 241], "mediterranean": 208, "medium": [8, 43, 160, 161, 164, 165, 175, 214, 282], "medium1": 164, "medium2": 164, "meet": [41, 89, 228], "meetmeonmondai": 89, "meetmeonmondayat8am": 89, "meijaard": [29, 302], "meijaard2007": [29, 302], "meijer": [96, 106, 114, 115, 277, 287, 297], "meijer_g": 96, "meijerg": [96, 107, 113, 115, 221, 241, 297], "meijerint": [107, 109, 113, 115], "meijerint_definit": 113, "meijerint_indefinit": 113, "meijerint_invers": 113, "mein": 259, "mellin": [96, 115], "mellin_transform": 115, "mellintransform": 115, "member": [0, 4, 13, 41, 48, 68, 77, 79, 89, 111, 134, 138, 140, 208, 229, 246], "member_1": 140, "member_2": 140, "member_3": 140, "member_4": 140, "member_5": 140, "member_length": 140, "membership": [52, 86, 216, 229], "memo": 261, "memoiz": [256, 258, 284], "memoize_properti": 255, "memori": [12, 15, 69, 88, 128, 217, 242, 253, 256], "men": 196, "menez": 128, "mensor": 61, "mental": 15, "mention": [2, 3, 4, 14, 31, 33, 43, 48, 55, 79, 113, 115, 130, 138, 144, 160, 231, 234, 237, 241, 269, 270, 271, 272, 293], "menu": 8, "mere": [63, 64, 69, 71, 92, 186], "merg": [3, 7, 11, 12, 13, 69, 79, 80, 88, 199, 221, 229, 241, 252, 259, 260], "merge_solut": 234, "mermin": 176, "meromorph": [88, 96], "mersenn": 128, "mersenne_prime_expon": 128, "mersenneforum": 128, "mersenneprim": 128, "mesh": 207, "mesh_i": 207, "mesh_u": 207, "mesh_v": 207, "mesh_x": 207, "mesh_z": 207, "mess": [177, 237, 240, 297], "messag": [3, 7, 12, 13, 14, 89, 116, 250, 255, 257, 262], "messi": 231, "met": [88, 140, 234, 240, 255, 297], "meta": [5, 88, 237, 238], "metaclass": 88, "metacycl": 71, "metadata": [3, 11, 68, 255, 257], "metahint": 88, "metaprogram": 88, "meter": [136, 137, 138, 162, 165, 194, 195, 196, 197, 198], "method": [2, 3, 4, 5, 8, 11, 12, 14, 15, 16, 18, 21, 22, 23, 24, 28, 29, 30, 32, 33, 35, 36, 40, 41, 48, 50, 51, 52, 54, 55, 56, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 79, 80, 81, 87, 88, 89, 90, 91, 92, 94, 95, 96, 99, 100, 101, 102, 104, 107, 110, 112, 113, 115, 117, 119, 120, 124, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 140, 141, 144, 145, 148, 149, 151, 152, 154, 155, 156, 158, 159, 165, 168, 170, 172, 180, 181, 186, 188, 191, 193, 195, 198, 199, 200, 202, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 222, 223, 224, 226, 227, 228, 229, 233, 234, 237, 239, 241, 242, 244, 246, 247, 248, 252, 254, 256, 259, 260, 265, 269, 272, 275, 276, 280, 282, 286, 287, 288, 289, 292, 297, 299, 305, 308], "method_nam": 14, "method_of_undetermined_coeffici": 237, "method_ring": 259, "methodologi": [240, 290], "metric": [14, 69, 80, 84, 90, 145, 233, 237, 240, 247], "metric_nam": 247, "metric_symmetri": [13, 247], "metric_to_christoffel_1st": 90, "metric_to_christoffel_2nd": 90, "metric_to_ricci_compon": 90, "metric_to_riemann_compon": 90, "meurer": 0, "mfork": 302, "mframe": 302, "mgamma": 147, "mi": [128, 221], "mib": 9, "micali": 89, "michael": [87, 215, 220], "microsecond": 129, "microsoft": 8, "mid": [43, 70, 89, 92, 130, 137, 229, 234], "middl": [43, 96, 104, 113, 124, 137, 171, 207, 231, 297], "midpoint": [101, 103, 104, 115, 207, 271], "midwai": 89, "might": [3, 4, 9, 11, 12, 13, 14, 15, 16, 21, 22, 30, 35, 37, 41, 42, 43, 50, 54, 67, 69, 88, 92, 94, 101, 110, 113, 120, 124, 128, 130, 136, 171, 200, 207, 210, 211, 212, 217, 218, 221, 222, 229, 230, 231, 233, 234, 239, 240, 241, 253, 254, 257, 259, 262, 286, 289, 291, 292, 294, 297], "miglani": 11, "mignott": [212, 214], "mignotte_sep_bound_squar": 212, "migrat": 3, "miktex": [2, 8], "mile": 198, "mileston": 254, "militari": 89, "miller": 128, "milton": [4, 96], "mimic": [115, 116, 133, 205, 260], "mimo": [46, 141, 144], "mimofeedback": [46, 141, 144], "mimolineartimeinvari": 144, "mimoparallel": [141, 144], "mimoseri": [141, 144], "min": [13, 80, 84, 88, 93, 94, 124, 130, 206, 207, 216, 221, 227, 237, 259], "min_degre": 217, "min_expon": 69, "min_qubit": [171, 175], "min_wir": 171, "min_x": 234, "min_z": 234, "mind": [4, 11, 12, 14, 16, 28, 38, 41, 52, 88, 124, 207, 228, 229, 274, 292], "minim": [4, 41, 43, 67, 79, 80, 84, 87, 88, 89, 113, 115, 118, 124, 128, 149, 160, 210, 211, 212, 214, 217, 220, 230, 233, 234, 239, 259, 306], "minima": [52, 240], "minimal_block": 79, "minimal_polynomi": 216, "minimal_uncollected_subword": 78, "minimum": [3, 13, 21, 32, 52, 67, 69, 79, 80, 82, 84, 88, 89, 92, 94, 124, 153, 175, 207, 209, 214, 239, 240, 241, 255, 287, 302], "minisat": 2, "minisat22": 2, "minlex": 259, "minor": [88, 98, 124, 210, 221, 252], "minor_submatrix": 124, "minpoli": [88, 211, 212, 214, 216], "minpoly_of_el": 88, "minterm": 118, "minu": [33, 69, 87, 88, 210, 214, 221, 272], "minut": [12, 16, 21, 32, 53], "minv": 210, "minv_reduc": 210, "mirror": [4, 96, 115, 164], "mirror_formula": 164, "misappli": 13, "misc": [94, 124, 262], "miscellan": [258, 284], "mise": 241, "mismatch": 124, "miss": [78, 79, 105, 210, 221, 239, 254, 297], "missingunityerror": 216, "mission": [5, 68, 121], "mississippi": [93, 259], "misspel": 13, "mistak": [5, 11, 12, 14, 16, 51, 79, 130, 260], "mistaken": 12, "mistyp": 12, "misunderstand": 41, "mit": 91, "mix": [32, 41, 60, 87, 94, 124, 130, 211, 212, 217, 221, 240, 243, 245, 247, 260], "mixin": [88, 259], "mixtur": [67, 69, 105, 208, 254], "mj": 0, "mk": [193, 196], "ml": 303, "mlatex": 21, "mlg": 303, "mlq_1": 303, "mlq_2": 303, "mly": 303, "mm": [65, 68, 128, 153, 189, 210, 309, 310], "mn": [189, 221, 241], "mnemon": [16, 230, 259], "mnt": 8, "mo": [30, 128, 221], "moa": 74, "mobiu": [13, 91, 93, 128], "mobius_transform": 91, "mobiusrang": 128, "mock": 171, "mod": [12, 13, 89, 93, 94, 118, 125, 128, 187, 208, 210, 211, 212, 214, 216, 217, 221, 223, 231, 234], "mod_invers": [88, 217], "mod_to_list": 212, "modaugmentedassign": 69, "mode": [1, 8, 48, 88, 116, 130, 163, 186, 205, 217, 221, 252, 299], "model": [3, 14, 15, 19, 20, 92, 93, 118, 128, 131, 132, 133, 134, 144, 148, 154, 158, 163, 217, 230, 241, 300, 301, 303, 305, 306, 307, 308], "moder": [7, 115], "modern": [43, 69, 208, 215, 221], "modest": 70, "modgcd_bivari": 214, "modgcd_multivari": 214, "modgcd_univari": 214, "modif": [79, 94, 124, 130, 240, 241, 256], "modifi": [5, 12, 14, 15, 16, 26, 68, 69, 79, 88, 94, 96, 128, 130, 163, 207, 210, 214, 216, 217, 218, 221, 233, 239, 240, 241, 252, 255, 256, 259, 260, 286, 291, 293], "modn": 128, "modop": 221, "modopmodewrong": 221, "modopnestedwrong": 221, "modopsettingswrong": 221, "modul": [2, 3, 4, 5, 7, 11, 12, 14, 15, 16, 18, 19, 21, 22, 25, 26, 28, 30, 33, 34, 36, 38, 41, 46, 51, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 78, 80, 88, 89, 91, 93, 94, 96, 100, 104, 108, 111, 114, 115, 116, 118, 120, 121, 122, 124, 129, 130, 131, 133, 134, 136, 138, 139, 140, 142, 143, 145, 151, 160, 161, 163, 165, 166, 178, 181, 194, 195, 196, 197, 203, 207, 212, 213, 215, 218, 219, 221, 225, 228, 231, 235, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 254, 255, 256, 257, 258, 259, 260, 263, 268, 270, 272, 273, 274, 275, 276, 282, 283, 284, 286, 289, 291, 297, 298, 305, 308], "modular": [12, 89, 128, 187, 210, 215, 240], "modular_multiplicative_invers": 88, "modulargcd": 214, "modularinteg": 212, "module_dictionari": 260, "module_quoti": 208, "module_rel": 252, "moduleel": 216, "moduleendomorph": 216, "modulehomomorph": [208, 216], "moduli": [89, 128, 210, 214], "modulo": [13, 88, 89, 93, 125, 128, 187, 208, 210, 211, 212, 214, 216, 217, 218, 220, 221, 224, 233], "modulu": [88, 89, 91, 96, 98, 104, 124, 128, 136, 137, 208, 212, 214, 216, 217, 220, 240], "mol": 206, "mold": 36, "mole": 196, "moll": 96, "momemtum": 188, "moment": [23, 26, 28, 98, 104, 135, 136, 137, 151, 207, 217, 234, 241, 302], "moment_load_vector": 136, "momenta": [23, 170], "momentum": [22, 23, 30, 146, 149, 155, 169, 170, 188, 192, 206, 247], "monad": 256, "monagan": [215, 233], "monagan00": [214, 215], "monagan93": [214, 215], "mondai": 89, "monic": [87, 96, 208, 209, 212, 214, 216, 217, 220], "monitor": 8, "monoalphabet": 89, "monogen": 208, "monogenicfiniteextens": [208, 212], "monoid": 68, "monom": [212, 217], "monomi": [11, 88, 115, 118, 128, 209, 211, 212, 214, 220, 221, 297], "monomial_basi": 212, "monomial_count": 217, "monomial_kei": 217, "monomialord": [212, 217], "monomorph": 216, "monospac": 221, "monoterm": 247, "monoton": [67, 69, 105], "monotonicity_help": 67, "monotorem": 247, "monserrat": 11, "mont": 79, "montgomeri": 214, "month": 0, "monthli": [74, 89, 124], "montreal": 215, "moor": [0, 53, 120, 124], "moore2022": 148, "moorep": 148, "moot": 88, "moprhism": 68, "mora": [214, 215, 217, 239], "mordel": 234, "more": [2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 25, 26, 27, 28, 30, 32, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 64, 65, 67, 68, 69, 70, 71, 74, 78, 79, 80, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 110, 113, 115, 118, 120, 121, 124, 125, 127, 128, 129, 130, 132, 136, 142, 144, 151, 152, 153, 154, 156, 158, 160, 163, 175, 179, 180, 185, 188, 189, 190, 191, 196, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 230, 231, 233, 234, 237, 238, 239, 240, 241, 252, 254, 255, 256, 259, 260, 262, 265, 269, 273, 280, 282, 286, 287, 289, 290, 292, 293, 295, 296, 297, 298, 299, 301, 302, 306, 308, 310], "moreno": 215, "moreov": [33, 79, 89, 113, 208, 209, 214, 222, 270], "morphism": [68, 208], "morri": 230, "mors": 89, "morse_cod": 89, "mortem": 252, "mose": 237, "most": [2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 27, 28, 31, 32, 38, 39, 41, 42, 43, 48, 50, 52, 53, 54, 55, 56, 57, 59, 62, 63, 64, 67, 68, 69, 70, 79, 80, 87, 88, 89, 92, 94, 98, 100, 115, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 144, 152, 153, 193, 195, 200, 204, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 228, 229, 231, 234, 237, 238, 239, 240, 241, 250, 253, 254, 255, 256, 257, 259, 260, 262, 268, 270, 286, 289, 291, 292, 293, 295, 296, 297, 310], "mostli": [14, 30, 35, 88, 94, 115, 124, 186, 208, 210, 220, 221, 231, 239, 296], "mota": 237, "motion": [13, 18, 21, 23, 24, 25, 26, 27, 30, 31, 35, 36, 79, 133, 148, 149, 151, 152, 153, 154, 156, 158, 204, 205, 241, 300, 303, 304, 305, 306, 307, 309, 311], "motiongenesi": [22, 30], "motionvari": [22, 30], "motiv": [13, 17, 43, 58, 217], "mous": 207, "move": [11, 12, 14, 18, 23, 35, 36, 43, 79, 80, 88, 89, 102, 104, 136, 148, 151, 152, 156, 158, 179, 204, 233, 242, 251, 272, 299, 300, 302, 304, 306], "movement": 90, "moyal": 241, "moyaldistribut": 241, "mp": [61, 188, 239, 255], "mpc": [211, 212], "mpf": [88, 211, 212], "mpi": 229, "mpmath": [2, 8, 12, 15, 30, 43, 53, 54, 69, 93, 96, 124, 129, 211, 212, 221, 229, 239, 255, 260, 287], "mpmathprint": 221, "mpprint": [21, 25], "mpq": [128, 210, 211], "mprint": [21, 25, 309, 310, 311], "mpz": [211, 212], "mr": 128, "mrow": 221, "mrref": 210, "mrv": [88, 228], "mrv_leadterm": 228, "mrv_max1": 228, "mrv_max3": 228, "msg": [89, 115], "msigma": 147, "msub": [21, 27, 150, 302], "msym": 84, "msymbol": 239, "msys2": 8, "mt": [18, 113], "mu": [16, 96, 113, 128, 145, 147, 162, 221, 241, 247], "mu1": 241, "mu2": 241, "mu_": 148, "mu_1": 241, "mu_2": 241, "mu_k": 148, "much": [3, 4, 11, 12, 13, 27, 28, 35, 36, 39, 41, 42, 43, 48, 54, 68, 69, 73, 84, 88, 92, 96, 110, 113, 115, 199, 206, 208, 210, 211, 214, 217, 228, 231, 233, 237, 238, 239, 240, 254, 256, 289, 291, 297], "mueller": 163, "mueller_calculu": 163, "mueller_matrix": 163, "mul": [4, 13, 15, 16, 38, 43, 61, 113, 115, 124, 128, 171, 175, 185, 186, 210, 211, 212, 216, 217, 221, 222, 223, 230, 233, 237, 238, 239, 240, 245, 292], "mul_elementwis": 210, "mul_ground": [212, 217], "mul_inv": 80, "mul_symbol": 221, "mul_symbol_mathml_numb": 221, "mul_xin": 218, "mulaugmentedassign": 69, "muller": 0, "mulsimp": 124, "mult": 216, "mult_tab": 216, "multi": [23, 30, 60, 88, 89, 151, 171, 175, 185, 207, 221, 240, 301, 305], "multibodi": [18, 22, 23, 29, 30, 31, 35, 133, 134, 148, 151, 154, 155, 158, 301], "multicharact": 262, "multidimension": [54, 215, 252], "multifactor": 214, "multifactori": 93, "multifram": 36, "multigamma": 96, "multilin": [3, 221], "multilinear": 90, "multimodular": 210, "multinomi": [88, 124, 128, 241], "multinomial_coeffici": 128, "multinomial_coefficients_iter": 128, "multinomial_distribut": 241, "multinomialdistribut": 241, "multipl": [2, 3, 4, 11, 12, 13, 14, 15, 16, 18, 21, 23, 30, 31, 35, 37, 41, 43, 46, 50, 52, 56, 57, 61, 63, 64, 65, 67, 68, 69, 70, 77, 79, 80, 84, 87, 88, 89, 93, 94, 96, 98, 103, 106, 108, 113, 115, 117, 118, 120, 124, 125, 128, 130, 138, 140, 141, 144, 151, 156, 175, 176, 177, 181, 188, 190, 193, 196, 197, 198, 200, 204, 207, 208, 209, 210, 211, 212, 214, 215, 217, 218, 221, 226, 227, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 242, 245, 247, 250, 254, 255, 256, 257, 259, 260, 262, 265, 270, 286, 287, 289, 290, 292, 293, 298, 299, 302], "multipledispatch": [12, 13, 62], "multiplex": 118, "multipli": [13, 16, 26, 27, 32, 53, 61, 65, 69, 79, 88, 99, 103, 110, 117, 124, 128, 136, 148, 153, 154, 168, 177, 191, 196, 197, 208, 209, 210, 212, 214, 216, 217, 221, 223, 230, 231, 234, 237, 242, 259, 269, 289, 292, 306], "multiplicity_in_factori": 128, "multiply_elementwis": [124, 210], "multiply_id": 208, "multiply_transitive_group": 79, "multipow": 89, "multiprecis": [69, 211], "multiprim": 89, "multiset": [93, 113, 256, 259], "multiset_combin": [93, 259], "multiset_derang": 259, "multiset_partit": [77, 93, 113, 256, 259], "multiset_partitions_taocp": 256, "multiset_permut": [93, 259], "multisetpartitiontravers": 256, "multiterm": 247, "multivalu": [88, 94], "multivari": [67, 88, 96, 208, 209, 211, 212, 213, 215, 217, 218, 228, 233, 239, 240, 241, 297], "multivariate_gamma_funct": 96, "multivariate_laplace_distribut": 241, "multivariate_normal_distribut": 241, "multivariatebeta": 241, "multivariateewen": 241, "multivariatelaplac": 241, "multivariatenorm": 241, "multivariatepolynomialerror": [214, 217], "multivariatet": 241, "mun": 221, "mundi": 215, "mupad_ref": 293, "murrai": [79, 210], "muscl": [18, 131, 132, 134, 300], "muscle_activ": 18, "muscle_load": 18, "muscle_pathwai": 18, "musclotendon": 131, "muscular": 133, "musculoskelet": 299, "musculotendon": [19, 131, 132, 133, 282, 299], "musculotendon_dynam": [18, 134], "musculotendonbas": 134, "musculotendondegroote2016": [18, 134, 299], "musculotendonformul": 134, "museum": 89, "must": [2, 3, 4, 11, 12, 13, 15, 16, 18, 22, 23, 25, 26, 27, 28, 30, 32, 36, 41, 42, 55, 61, 62, 63, 64, 69, 79, 80, 82, 84, 86, 87, 88, 89, 90, 93, 94, 96, 98, 101, 104, 107, 110, 111, 113, 115, 118, 119, 120, 124, 127, 128, 130, 134, 136, 137, 138, 140, 142, 144, 145, 148, 151, 152, 153, 154, 156, 159, 171, 186, 188, 191, 200, 206, 207, 208, 209, 210, 212, 214, 216, 217, 221, 222, 229, 230, 231, 233, 234, 237, 239, 240, 241, 245, 246, 252, 253, 254, 255, 256, 257, 259, 260, 289, 291, 292, 296, 297, 302, 304], "mutabl": [15, 16, 70, 88, 119, 120, 121, 136, 212, 221, 222, 233, 242, 293], "mutabledensematrix": [13, 18, 119, 210, 262], "mutabledensendimarrai": 242, "mutablerepmatrix": 13, "mutablesparsematrix": 126, "mutablesparsendimarrai": 242, "mutat": [13, 144, 210, 212, 241], "mute": [69, 253], "mutual": [36, 94, 113, 148], "mwf": 302, "mwr": 302, "mx": [142, 171, 228], "my": [8, 221, 286], "my_dummi": 191, "my_equ": 88, "my_fcn": [69, 221], "my_inequ": 88, "my_iszero": 293, "my_mat_fcn": [69, 221], "my_measur": 233, "my_real_root": 48, "my_root": 48, "my_routin": 69, "my_smt_variable_for_pi": 221, "my_sym": 51, "myclass": 88, "mycoeff": 67, "myfcn": 254, "myfcn_result": 254, "mygamma": 221, "mylatexprint": 221, "mylist": 88, "mylist1": 88, "mylist2": 88, "myop": 259, "myprogram": 69, "myrvold": 80, "mysin": [88, 260, 286], "mysingleton": 88, "myst": 5, "mysub": 69, "mz": 171, "m\u2081": 137, "m\u2082": 137, "n": [0, 4, 5, 9, 12, 15, 16, 18, 22, 25, 26, 27, 28, 30, 31, 32, 35, 36, 39, 41, 43, 48, 51, 52, 60, 65, 67, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 82, 84, 86, 87, 88, 89, 90, 92, 93, 94, 96, 98, 101, 102, 103, 104, 105, 110, 111, 113, 115, 117, 118, 120, 124, 125, 128, 130, 134, 136, 137, 140, 142, 144, 146, 147, 148, 149, 153, 155, 156, 158, 159, 160, 162, 164, 165, 167, 171, 176, 177, 180, 185, 187, 188, 189, 191, 192, 194, 196, 198, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 237, 239, 240, 241, 244, 246, 247, 250, 253, 259, 261, 262, 265, 267, 268, 269, 270, 274, 280, 287, 293, 296, 297, 298, 299, 302, 303, 304, 306, 307, 308, 309, 310, 311], "n1": [22, 30, 32, 41, 69, 79, 88, 89, 160, 164, 207, 234, 241, 265], "n11": 241, "n12": 241, "n2": [30, 41, 69, 79, 88, 89, 160, 164, 207, 234, 241], "n21": 241, "n22": 241, "n3": [22, 88, 207], "n_": [214, 234], "n_0": [110, 214, 239, 240], "n_1": [214, 239, 241], "n_2": [214, 241], "n_a": 22, "n_adj": 80, "n_alpha_b": 200, "n_b": 22, "n_c": 241, "n_digit": 115, "n_ep": 79, "n_frame": 149, "n_i": [84, 214, 239], "n_k": 214, "n_len": 164, "n_level": 191, "n_m": 239, "n_max": 191, "n_order": 128, "n_particl": 191, "n_point_check": 69, "n_surr": 164, "n_x": 202, "n_y": 303, "n_z": 303, "nabla": [33, 265, 271, 272], "naiv": [14, 38, 79, 85, 88, 113, 124, 128, 196, 210, 231, 239, 240, 247], "nakagami": 241, "nakagami_distribut": 241, "nako": 210, "name": [2, 3, 4, 5, 8, 12, 13, 15, 16, 18, 22, 30, 32, 33, 36, 41, 43, 45, 55, 56, 60, 63, 64, 68, 69, 70, 71, 75, 78, 81, 84, 87, 88, 89, 90, 93, 94, 95, 96, 98, 101, 113, 115, 116, 117, 120, 124, 128, 130, 131, 133, 134, 136, 140, 148, 149, 152, 155, 158, 162, 171, 186, 193, 196, 197, 198, 199, 200, 202, 204, 207, 208, 209, 211, 212, 214, 216, 218, 221, 227, 231, 233, 234, 237, 238, 240, 241, 246, 247, 250, 252, 253, 254, 255, 260, 262, 263, 265, 269, 272, 277, 286, 289, 292, 293, 297, 299], "name_dict": 130, "name_expr": [69, 254], "name_mangl": 221, "name_of_bodi": 149, "named_group": [73, 76, 78, 79, 85, 86], "namedmorph": 68, "nameerror": [14, 16, 116, 255, 289], "nameless": 247, "namespac": [2, 4, 13, 14, 60, 69, 70, 88, 212, 234, 237, 238, 252, 254, 255, 260], "nan": [65, 66, 69, 88, 94, 96, 150, 153, 154, 233, 241, 287], "nand": [118, 221], "nanjeky": 11, "nanjekyejoannah": 11, "nano": 129, "nanosecond": 129, "napier": 88, "narg": [88, 214], "narr": [4, 290], "nation": 218, "nativ": [9, 14, 15, 88, 144, 212, 217, 252], "native_coeff": 88, "natur": [3, 12, 14, 16, 22, 41, 46, 53, 61, 65, 69, 70, 71, 79, 88, 89, 93, 94, 121, 128, 193, 195, 196, 208, 211, 212, 214, 216, 218, 221, 229, 230, 234, 240, 241, 259, 275, 292, 297, 299], "naturals0": [88, 221, 229, 240, 241], "navi": 89, "navig": [8, 13], "nb": 88, "nb2": 221, "nb_of_point": 207, "nb_of_points_i": 207, "nb_of_points_u": 207, "nb_of_points_v": 207, "nb_of_points_x": 207, "nbit": 69, "nc": 93, "nca": 216, "nck": 297, "ncol": 210, "ncolumn": 207, "ndarrai": [124, 207, 241, 247, 253, 299], "ndf": 163, "ndimarrai": 14, "ndimension": 253, "ne": [15, 37, 41, 88, 89, 93, 94, 101, 113, 124, 128, 130, 209, 211, 214, 231, 237, 241], "near_int": 128, "nearbi": 11, "nearer": 113, "nearest": [67, 216], "nearest_common_ancestor": 216, "nearli": [16, 128, 230], "necess": 214, "necessari": [2, 3, 4, 6, 8, 11, 12, 13, 14, 16, 23, 41, 43, 58, 67, 68, 79, 80, 88, 98, 113, 115, 118, 124, 128, 130, 151, 153, 207, 209, 211, 216, 217, 221, 224, 230, 233, 237, 238, 239, 240, 241, 242, 247, 252, 254, 259, 260, 265, 290, 295, 299, 300, 302], "necessarili": [3, 4, 18, 41, 65, 88, 89, 90, 113, 115, 118, 153, 208, 209, 210, 216, 217, 219, 233, 234, 237, 239, 240], "necessit": 310, "necesssari": 275, "necklac": [5, 259], "ned": 13, "nedbatcheld": 12, "need": [2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 25, 26, 27, 28, 31, 32, 35, 36, 37, 38, 39, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 63, 64, 67, 68, 69, 73, 79, 80, 84, 86, 87, 88, 89, 90, 93, 94, 96, 99, 103, 104, 111, 112, 113, 115, 116, 118, 124, 128, 129, 130, 134, 136, 137, 140, 144, 148, 153, 155, 158, 159, 160, 171, 175, 183, 189, 194, 200, 205, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 228, 229, 231, 233, 234, 236, 237, 239, 240, 241, 245, 246, 247, 248, 250, 253, 254, 255, 256, 257, 259, 262, 265, 269, 271, 272, 275, 286, 287, 289, 292, 293, 295, 297, 299, 302, 304, 306, 307, 309, 310, 311], "needev": 115, "neg": [4, 13, 15, 16, 18, 41, 42, 46, 52, 65, 66, 69, 70, 83, 87, 88, 93, 94, 96, 98, 100, 101, 104, 113, 115, 117, 118, 124, 127, 128, 136, 137, 140, 141, 142, 144, 148, 152, 156, 191, 200, 206, 209, 210, 212, 214, 216, 217, 218, 221, 227, 229, 230, 231, 233, 234, 237, 239, 240, 241, 260], "neg_feedback": 144, "negat": [42, 43, 65, 88, 94, 118, 144, 200, 210, 212, 214, 217], "negative_binomial_distribut": 241, "negative_multinomial_distribut": 241, "negative_numb": [41, 88], "negativebinomi": 241, "negativebinomialdistribut": 241, "negativehandl": 65, "negativeinfin": [88, 221], "negativemultinomi": 241, "negativeon": [88, 94, 292], "negativepred": 65, "neglect": 69, "neglig": 48, "neighbor": 259, "neighborhood": 229, "neighbourhood": 113, "neither": [41, 42, 65, 88, 165, 186, 207, 210, 217, 228, 229, 230, 237, 247, 260, 265, 274, 297], "nephew": 89, "neq": [15, 36, 43, 88, 94, 96, 113, 115, 124, 128, 196, 206, 214, 217, 237, 239, 297], "nervou": [18, 131], "nessgrh": 113, "nest": [14, 51, 55, 88, 90, 94, 96, 115, 124, 144, 209, 210, 211, 214, 221, 231, 233, 236, 240, 241, 242, 243, 245, 248, 259, 260, 292], "nested_contract": 245, "net": [11, 68, 104, 215, 237, 241, 259], "netwon": 69, "neurolog": 133, "neutral": 5, "never": [9, 10, 11, 12, 14, 15, 41, 43, 55, 88, 94, 115, 130, 193, 217, 218, 221, 229, 239, 241, 250, 269, 289, 290], "nevertheless": 68, "new": [2, 3, 5, 6, 7, 8, 9, 12, 14, 15, 18, 22, 29, 30, 32, 36, 41, 43, 51, 58, 63, 64, 68, 69, 70, 79, 80, 87, 88, 89, 90, 96, 101, 104, 113, 115, 116, 124, 128, 130, 132, 134, 136, 138, 140, 144, 148, 149, 152, 160, 181, 187, 188, 191, 193, 196, 197, 199, 200, 204, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 221, 228, 231, 233, 234, 237, 239, 240, 241, 242, 243, 252, 253, 257, 260, 265, 267, 269, 285, 286, 289, 292, 293, 295, 299, 304, 309, 311], "new_eq": 240, "new_fil": 11, "new_gen": 86, "new_indic": 191, "new_label": [138, 140], "new_matrix": 241, "new_method": [153, 306], "new_msg": 89, "new_nam": 68, "new_support": 138, "new_system": 265, "newa": 230, "newarg": 14, "newchar": 262, "newconst": 237, "newer": [3, 12, 15, 35, 130, 239], "newli": [12, 88, 113, 231], "newlin": [3, 12, 124, 262], "newmatrix": 13, "newnam": 200, "newroot": 117, "newton": [18, 23, 69, 96, 151, 194, 198, 214, 218], "newtonian": [22, 30, 158], "newtonion": 149, "newtons_method": 69, "newtons_method_funct": 69, "newtyp": 88, "newvar": 87, "nexp": 69, "next": [7, 9, 11, 16, 21, 23, 24, 31, 35, 36, 39, 41, 43, 45, 60, 69, 70, 72, 77, 79, 80, 82, 83, 88, 89, 94, 113, 115, 118, 124, 128, 130, 149, 151, 152, 153, 158, 208, 210, 212, 216, 217, 221, 229, 231, 234, 237, 256, 257, 259, 290, 291, 292, 304, 306, 307, 309, 311], "next_binari": 83, "next_grai": 83, "next_lex": [77, 80], "next_lexicograph": 83, "next_nonlex": 80, "next_trotterjohnson": [80, 259], "nextprim": 128, "nf": 214, "nfac": 128, "nfloat": [88, 233], "ngate": 175, "nh": 25, "ni": 96, "nice": [1, 4, 9, 22, 27, 30, 59, 88, 100, 124, 128, 207, 221, 231, 262, 292], "nicefrac": 130, "nicer": [59, 88, 210, 310], "nicest": 14, "nicheck": 22, "nielsen_transform": 79, "niemey": 79, "nigel": 234, "nijenhui": 72, "nilpot": [74, 79, 124], "nilpotent_group": 79, "nilrad": 216, "nine": [104, 221], "nine_point_circl": 104, "ninth": 132, "nist": [4, 94, 96, 196], "nitaj": 234, "niven": 214, "nl": [146, 192], "nlm": 146, "nm": [136, 137, 189, 242, 299], "nmant": 69, "nmax": 128, "nmod": 13, "nmod_mat_charpoli": 210, "nnf": 118, "nnz": 210, "no_attrs_in_subclass": 255, "no_glob": [116, 205], "no_symmetri": 247, "nobr": 55, "nocache_fail": 250, "nocond": [46, 115], "nodal": [167, 192, 208], "node": [13, 15, 67, 82, 88, 115, 130, 140, 150, 167, 192, 200, 206, 211, 221, 228, 240, 245, 256, 260, 292, 296], "node12": 72, "node81": 128, "node_1": 140, "node_2": 140, "node_3": 140, "node_4": 140, "node_label": 140, "node_posit": 140, "nois": 48, "nomin": 12, "non": [2, 3, 12, 14, 15, 16, 18, 21, 25, 26, 30, 33, 36, 41, 43, 48, 54, 55, 57, 60, 65, 67, 70, 78, 81, 87, 88, 89, 93, 94, 95, 96, 97, 98, 101, 102, 103, 115, 117, 118, 119, 120, 124, 125, 127, 128, 131, 134, 148, 153, 155, 175, 180, 190, 191, 193, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 224, 228, 229, 231, 233, 234, 236, 237, 239, 240, 241, 242, 245, 246, 247, 252, 254, 259, 262, 272, 292, 297, 298, 302, 303, 304, 306, 310], "non_trivial_metr": 90, "nonbas": 88, "noncentr": 241, "noncentral_beta_distribut": 241, "noncentral_chi_distribut": 241, "noncentralbetadistribut": 241, "noncommut": [41, 88, 111, 292], "noncommutative_part": 88, "noncomput": 15, "nonconserv": 153, "noncontribut": 305, "noncontributing_forc": 304, "nonconvex": 115, "nondimension": 299, "none": [4, 5, 12, 13, 14, 15, 22, 36, 41, 42, 43, 61, 62, 63, 64, 65, 67, 68, 69, 71, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 109, 110, 111, 113, 115, 116, 118, 120, 124, 125, 128, 129, 130, 131, 134, 136, 140, 144, 148, 149, 150, 152, 153, 154, 155, 158, 160, 162, 164, 165, 171, 176, 181, 186, 188, 191, 193, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 210, 212, 214, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 233, 234, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 250, 252, 253, 254, 255, 259, 260, 262, 264, 265, 268, 293, 297, 298], "noneg": 18, "nonelementari": 115, "nonelementaryintegr": 115, "nonempti": [79, 259], "nonetheless": [3, 89, 193, 233, 237], "nonetoken": 69, "nonetyp": [42, 69], "nonhol_coneq": [26, 153, 306], "nonholonom": [153, 158, 302], "nonholonomic_constraint": 158, "nonhomogeneous_equation_with_constant_coeffici": 237, "noninteg": [41, 65, 88, 211, 221], "nonintegr": 43, "noninvert": 241, "noninvertiblematrixerror": [53, 120, 293], "nonlex": 80, "nonlinear": [18, 30, 37, 49, 55, 57, 87, 148, 217, 237, 239, 240, 305], "nonlinear_stiff": 148, "nonlinearerror": 240, "nonlinsolv": [30, 239, 240, 298], "nonminim": [27, 301, 305], "nonneg": [12, 13, 14, 18, 30, 41, 43, 65, 88, 89, 90, 93, 96, 120, 209, 211, 217, 234, 239, 241, 297, 299], "nonnegativehandl": 65, "nonnegativepred": 65, "nonparallel": 152, "nonparametr": 207, "nonpivot": 210, "nonposit": [30, 41, 65, 88, 93, 96, 239], "nonpositivehandl": 65, "nonpositivepred": 65, "nonreal": [43, 54, 239], "nonrep": 247, "nonresidu": [93, 128], "nonsens": [12, 87, 96], "nonsquarematrixerror": [124, 237], "nontrivi": [43, 79, 88, 128], "nonvanish": 88, "nonzero": [41, 43, 65, 66, 87, 88, 103, 124, 134, 146, 209, 210, 211, 212, 221, 224, 234, 240], "nonzero_col": 210, "nonzerohandl": 65, "nonzeropred": 65, "noqa": [12, 88, 116, 212, 255], "nor": [65, 67, 88, 118, 159, 165, 207, 210, 217, 221, 228, 230, 237, 247, 265], "norepli": 11, "norm": [61, 124, 189, 200, 212, 214, 216, 217, 234], "normal": [5, 12, 13, 14, 16, 18, 21, 22, 30, 36, 41, 42, 43, 57, 61, 65, 69, 79, 87, 88, 92, 94, 98, 101, 102, 103, 115, 116, 118, 121, 122, 124, 128, 130, 131, 132, 134, 146, 148, 152, 159, 164, 175, 185, 188, 189, 190, 191, 192, 196, 199, 200, 208, 210, 211, 212, 214, 216, 217, 221, 222, 224, 229, 230, 234, 237, 241, 246, 252, 257, 259, 260, 265, 280, 299, 302, 310], "normal_closur": 79, "normal_distribut": 241, "normal_lin": 98, "normal_matrix": 65, "normal_vector": [102, 164], "normaldistribut": [13, 241], "normaldistributionfunct": 241, "normalform": [125, 210], "normalgamma": 241, "normalhandl": 65, "normalis": [88, 223], "normalize_last": 124, "normalize_theta_set": 229, "normalize_whitespac": 252, "normalpred": 65, "normalpspac": 241, "norman": 115, "normilz": 96, "north": 15, "not_empty_in": [67, 240], "not_in_arg": 69, "not_point": 171, "not_rep": 79, "not_supported_funct": 221, "notabl": [14, 64, 69, 91, 96, 113, 129, 211], "notalgebra": 214, "notarrow": 221, "notat": [16, 32, 36, 39, 48, 52, 55, 57, 74, 76, 80, 81, 87, 88, 89, 93, 96, 113, 120, 124, 130, 144, 154, 189, 200, 205, 208, 221, 228, 233, 240, 246, 247, 259, 272, 287], "note": [2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 22, 28, 30, 32, 33, 35, 36, 37, 39, 41, 42, 45, 46, 49, 50, 51, 53, 54, 55, 56, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 78, 79, 80, 81, 84, 86, 87, 89, 92, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 113, 115, 116, 118, 120, 124, 128, 130, 131, 134, 144, 145, 148, 149, 150, 152, 153, 154, 156, 158, 159, 164, 167, 175, 185, 186, 188, 190, 191, 192, 194, 200, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 222, 223, 224, 227, 229, 231, 233, 234, 236, 237, 238, 239, 240, 241, 246, 247, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 270, 272, 274, 286, 287, 288, 290, 291, 292, 293, 297, 299, 302, 306, 307, 309], "notebook": [2, 15, 43, 59, 116, 205, 260, 295, 296], "notequiv": 221, "noth": [12, 13, 48, 68, 79, 88, 115, 153, 175, 191, 208, 212, 220, 221, 233, 237, 239, 250, 252, 260, 262, 289], "notic": [12, 13, 16, 28, 43, 79, 80, 86, 88, 124, 179, 211, 231, 243, 247, 248, 259, 260, 289, 291, 292, 297], "notifi": [4, 130], "notimpl": [98, 216], "notimplementederror": [4, 50, 52, 55, 56, 57, 67, 87, 98, 101, 105, 115, 124, 142, 210, 216, 217, 220, 229, 236, 237, 238, 239, 240], "notimpli": 221, "notin": [78, 113, 229], "notinvert": [208, 214, 217], "notion": [13, 14, 41, 68, 196, 199, 208, 240, 269, 274], "notiter": 259, "notrevers": [214, 217], "novemb": 259, "now": [1, 2, 5, 8, 9, 11, 12, 13, 14, 16, 18, 22, 23, 30, 31, 35, 36, 39, 41, 42, 43, 48, 59, 68, 69, 80, 88, 89, 93, 96, 99, 104, 105, 110, 112, 113, 117, 124, 128, 144, 148, 149, 151, 152, 156, 158, 194, 196, 200, 205, 207, 208, 209, 210, 211, 214, 217, 218, 222, 229, 230, 231, 233, 234, 237, 239, 240, 241, 242, 247, 252, 253, 260, 270, 271, 289, 291, 292, 297, 298, 299, 304, 307, 310], "np": [14, 18, 22, 43, 55, 93, 111, 128, 207, 253, 260, 299], "npartit": [13, 128], "nqubit": [171, 175, 176, 185], "nr": 43, "nright": 240, "nroot": [217, 239], "nrow": [207, 210], "nsa": 89, "nseri": 88, "nsimplifi": [14, 88, 92, 233], "nsolv": [30, 37, 48, 54, 56, 57, 239], "nt": [93, 259], "nth": [39, 88, 93, 96, 117, 128, 212, 217, 218, 227, 233, 237, 241], "nth_algebra": 237, "nth_algebraic_integr": 237, "nth_linear": 237, "nth_linear_constant_coeff_homogen": 237, "nth_linear_constant_coeff_homogeneous_integr": 237, "nth_linear_constant_coeff_undetermined_coeffici": 237, "nth_linear_constant_coeff_variation_of_paramet": 237, "nth_linear_constant_coeff_variation_of_parameters_integr": 237, "nth_linear_euler_eq_homogen": 237, "nth_linear_euler_eq_homogeneous_integr": 237, "nth_linear_euler_eq_nonhomogeneous_undetermined_coeffici": 237, "nth_linear_euler_eq_nonhomogeneous_variation_of_paramet": 237, "nth_linear_euler_eq_nonhomogeneous_variation_of_parameters_integr": 237, "nth_linear_homogeneous_constant_coeff_integr": 237, "nth_order_reduc": 237, "nth_power_roots_poli": 217, "nthalgebra": 237, "ntheori": [65, 79, 88, 89, 93, 214, 217, 234, 259], "nthlinearconstantcoeffhomogen": 237, "nthlinearconstantcoeffundeterminedcoeffici": 237, "nthlinearconstantcoeffvariationofparamet": 237, "nthlineareulereqhomogen": 237, "nthlineareulereqnonhomogeneousundeterminedcoeffici": 237, "nthlineareulereqnonhomogeneousvariationofparamet": 237, "nthorderreduc": 237, "nthroot": 233, "nthroot_mod": 128, "ntop": 124, "ntt": 91, "nu": [5, 16, 93, 96, 115, 128, 192, 209, 221, 233, 241, 247, 291, 303], "nu_1": 209, "nu_2": 209, "nu_i": 209, "nu_n": 209, "nuanc": 14, "null": [16, 88, 124], "nulliti": 210, "nullspac": [124, 210], "nullspace_from_rref": 210, "num": [18, 69, 79, 88, 128, 144, 212, 233, 237, 256, 262, 299], "num_column": [116, 205, 221, 237], "num_digit": [88, 128], "num_input": [46, 144], "num_list": 144, "num_output": [46, 144], "num_qq": 211, "num_zz": 211, "numa": 237, "number": [2, 3, 4, 5, 11, 12, 13, 15, 18, 21, 22, 27, 28, 30, 32, 33, 35, 36, 37, 38, 41, 43, 46, 48, 51, 52, 53, 56, 57, 61, 63, 64, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 93, 94, 96, 98, 101, 102, 103, 104, 105, 107, 115, 116, 117, 118, 120, 123, 124, 125, 127, 129, 130, 133, 134, 137, 140, 142, 144, 145, 146, 148, 153, 154, 158, 164, 167, 170, 171, 174, 175, 176, 177, 179, 180, 185, 186, 187, 188, 189, 191, 192, 193, 196, 199, 200, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 217, 218, 221, 223, 227, 228, 229, 230, 231, 233, 234, 237, 239, 240, 241, 242, 246, 247, 252, 254, 256, 259, 260, 262, 265, 268, 269, 271, 272, 274, 277, 283, 286, 287, 289, 291, 292, 293, 297, 306], "number_cl": 88, "number_field": 216, "number_theori": 93, "numbered_symbol": [222, 233, 237, 259], "numberfield": [212, 216, 217], "numberkind": [15, 38, 88, 123, 229], "numbersymbol": [88, 221], "numbertheoretictransform": 91, "numbertheori": 234, "numberworld": 128, "numer": [2, 4, 12, 13, 15, 16, 18, 22, 23, 27, 28, 31, 32, 36, 37, 39, 41, 49, 50, 51, 52, 53, 56, 61, 65, 67, 69, 87, 88, 93, 96, 100, 104, 111, 124, 128, 130, 131, 132, 133, 134, 140, 141, 142, 144, 149, 151, 153, 154, 163, 170, 173, 188, 207, 210, 211, 212, 214, 215, 216, 217, 220, 221, 230, 231, 233, 237, 239, 240, 246, 252, 253, 259, 260, 277, 286, 288, 289, 293, 297, 299, 302], "numerical_funct": 286, "numerorum": 256, "numexpr": [2, 260], "numi": 237, "numpad": 207, "numpi": [2, 4, 12, 13, 14, 15, 18, 22, 30, 43, 48, 53, 54, 55, 59, 69, 88, 111, 116, 129, 142, 175, 185, 207, 210, 221, 241, 246, 253, 254, 260, 286, 289, 299], "numpydoc": [4, 5], "numpyprint": 69, "numqubit": 176, "numsampl": 241, "numth": 128, "numz": 144, "nuovo": [196, 206], "nutshel": 14, "nvpa": 35, "nvpb": 35, "nwb": 35, "nx": [35, 259, 306, 308], "ny": [35, 200, 212, 306, 308], "nz": [35, 308], "o": [0, 4, 8, 11, 12, 15, 16, 18, 22, 25, 26, 27, 28, 30, 31, 33, 35, 39, 41, 60, 68, 69, 74, 79, 80, 86, 88, 89, 94, 96, 98, 99, 101, 102, 104, 110, 113, 128, 134, 137, 148, 149, 153, 155, 156, 158, 181, 191, 201, 204, 206, 214, 215, 217, 218, 221, 223, 228, 231, 237, 241, 246, 252, 259, 262, 268, 271, 287, 299, 303], "o2": [11, 228], "o____________________________________________________": 137, "o_from": 214, "o_to": 214, "oa": 271, "oabc": 271, "ob": 241, "obei": [4, 96, 206, 221, 231], "obextj": 275, "obj": [4, 14, 41, 88, 212, 217, 221, 255], "object": [2, 3, 4, 5, 7, 11, 12, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 35, 36, 40, 41, 42, 43, 46, 55, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 78, 79, 80, 81, 82, 83, 87, 88, 90, 93, 94, 96, 98, 99, 100, 101, 103, 104, 105, 113, 115, 118, 120, 121, 123, 124, 129, 130, 133, 134, 136, 137, 138, 140, 142, 144, 145, 148, 149, 151, 153, 154, 155, 156, 158, 159, 160, 164, 165, 166, 174, 175, 177, 185, 186, 190, 191, 193, 194, 195, 197, 198, 200, 204, 205, 207, 208, 209, 210, 211, 212, 214, 216, 217, 221, 223, 224, 227, 228, 229, 230, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 252, 253, 254, 255, 256, 259, 260, 263, 268, 269, 270, 275, 276, 280, 286, 287, 289, 291, 292, 293, 296, 297, 306, 311], "oblig": 207, "obscur": [13, 41], "observ": [36, 84, 88, 110, 113, 180, 208, 231, 234, 237, 241, 274, 297], "obsolet": 13, "obstacl": [113, 156], "obstacle_set_pathwai": 156, "obstaclesetpathwai": [18, 156], "obtain": [5, 15, 16, 23, 26, 32, 37, 39, 46, 51, 52, 57, 63, 64, 68, 70, 72, 79, 80, 81, 84, 88, 89, 91, 92, 93, 94, 96, 98, 99, 101, 102, 104, 110, 113, 115, 117, 124, 127, 128, 138, 141, 144, 151, 153, 164, 186, 191, 196, 208, 209, 212, 214, 216, 217, 220, 222, 229, 230, 231, 233, 234, 237, 238, 239, 240, 259, 261, 262, 269, 270], "obtaining_all_solutions_of_a_linear_system": 124, "obtus": 101, "obviou": [41, 42, 43, 53, 71, 79, 87, 208, 211, 220, 234, 291], "obvious": [5, 12, 35, 70, 79, 194, 231], "oc": [221, 271], "occasion": [11, 12, 88], "occup": 191, "occupi": [128, 191, 247], "occur": [4, 13, 14, 15, 16, 18, 21, 27, 32, 35, 79, 80, 88, 92, 96, 105, 113, 124, 130, 152, 200, 216, 224, 233, 238, 239, 242, 243, 252, 259, 292], "occurr": [22, 69, 70, 88, 128, 200, 233, 241], "oct": 128, "octahedr": 81, "octahedron": 115, "octav": [30, 69, 254], "octave_cod": [69, 221], "octavecodegen": 254, "octavecodeprint": 221, "octnam": 254, "octob": 145, "od": [4, 12, 15, 23, 30, 43, 111, 151, 153, 158, 235, 238, 277, 298], "odd": [38, 41, 51, 62, 64, 65, 66, 76, 80, 88, 89, 93, 94, 96, 118, 127, 128, 145, 206, 216, 217, 221, 239], "oddbal": 88, "oddhandl": 65, "oddpred": 65, "ode0106": 237, "ode0123": 237, "ode_": 237, "ode_1st_homogeneous_coeff_best_integr": 237, "ode_1st_power_seri": 237, "ode_2nd_power_series_ordinari": 237, "ode_2nd_power_series_regular": 237, "ode_hintnam": 237, "ode_ord": [237, 238, 239], "ode_problem": 237, "ode_sol_simpl": 237, "odeadvisor": 237, "odel": 124, "odenonlinearerror": 237, "odeordererror": 237, "odesimp": 237, "oei": [74, 93, 96, 128, 217], "oeyag": 89, "of_typ": [211, 212], "ofcours": 269, "off": [14, 24, 88, 98, 113, 124, 127, 129, 175, 208, 217, 221, 237, 252, 265, 291, 302], "off_circl": 102, "offer": [5, 14, 18, 19, 21, 30, 32, 36, 68, 69, 79, 88, 129, 211, 216, 256, 273], "offici": [16, 21, 30, 32, 36, 45, 59, 88, 240, 260, 295], "offset": [68, 69, 88, 93, 96, 148, 246], "offshor": 138, "ofix": 35, "often": [3, 4, 11, 12, 14, 15, 23, 27, 28, 35, 36, 41, 42, 43, 48, 54, 68, 69, 70, 78, 88, 96, 98, 100, 113, 115, 124, 128, 129, 144, 151, 153, 154, 208, 209, 210, 211, 214, 217, 222, 228, 229, 234, 237, 241, 259, 260, 286, 291, 292, 293, 297], "oh": 287, "oil": 7, "ok": [11, 12, 13, 69, 80, 221, 237], "okai": [14, 89], "old": [3, 12, 13, 15, 16, 27, 88, 89, 90, 116, 160, 196, 205, 207, 208, 212, 214, 221, 222, 233, 237, 240, 242, 286], "old_assumpt": 180, "old_frac_field": [211, 212], "old_fractionfield": 211, "old_poly_r": [110, 111, 208, 211, 212], "old_polynomialr": 211, "oldchar": 262, "older": [3, 5, 12, 15, 22, 111, 211, 221, 239], "oldid": 80, "olga": 216, "ollwd": 89, "omega": [16, 28, 31, 35, 69, 70, 79, 93, 113, 124, 128, 144, 149, 155, 158, 165, 167, 192, 200, 204, 205, 206, 221, 228, 241], "omega_": 113, "omicron": [16, 221], "omit": [4, 13, 41, 43, 69, 80, 87, 88, 89, 93, 113, 115, 118, 124, 193, 210, 221, 222, 229, 231, 239, 245, 254, 259, 287], "omposit": 223, "on_circl": 102, "on_morph": 103, "onc": [3, 8, 9, 11, 12, 14, 15, 16, 23, 27, 36, 41, 42, 43, 69, 71, 72, 79, 84, 88, 89, 93, 96, 104, 113, 115, 129, 137, 150, 151, 152, 196, 200, 202, 207, 209, 211, 217, 221, 222, 230, 231, 233, 237, 240, 247, 259, 269, 286, 287, 297, 298, 299], "ond": 0, "one": [2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 27, 28, 30, 32, 33, 35, 36, 37, 39, 41, 42, 43, 45, 48, 49, 50, 51, 52, 53, 54, 55, 58, 60, 61, 64, 65, 67, 68, 69, 71, 72, 74, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 96, 98, 99, 100, 101, 102, 104, 105, 110, 111, 112, 113, 115, 116, 117, 118, 120, 122, 124, 127, 128, 129, 130, 131, 134, 136, 137, 138, 140, 141, 142, 144, 145, 148, 149, 152, 153, 155, 156, 158, 159, 160, 163, 164, 165, 171, 176, 185, 189, 191, 193, 194, 195, 196, 199, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 228, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 242, 245, 247, 248, 252, 253, 254, 256, 259, 260, 262, 265, 270, 272, 274, 285, 286, 287, 289, 291, 292, 293, 295, 296, 297, 299, 302, 306], "one_half": 88, "one_qubit_box": 171, "oneform": 90, "onelin": 9, "onematrix": 221, "onequbitg": 175, "ones": [2, 3, 13, 14, 22, 43, 59, 69, 79, 84, 88, 113, 115, 118, 120, 124, 127, 128, 134, 164, 185, 191, 195, 210, 214, 224, 234, 237, 242, 248, 254, 262, 265, 270, 293, 296], "oneshot": 185, "onli": [3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 22, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 48, 51, 52, 53, 54, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 74, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 101, 102, 104, 105, 106, 111, 113, 115, 116, 117, 118, 123, 124, 125, 128, 129, 130, 131, 134, 140, 142, 144, 149, 150, 152, 153, 155, 156, 159, 164, 166, 185, 186, 190, 191, 193, 196, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 233, 234, 237, 238, 239, 241, 242, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 265, 268, 270, 272, 274, 275, 286, 287, 289, 290, 292, 293, 297, 298, 299, 302, 304, 306, 308, 309, 311], "onlin": [2, 4, 153, 234, 259], "onlinelibrari": 241, "only_alt": 79, "only_doubl": 113, "only_integ": 207, "only_sym": 79, "onset": 164, "onto": [89, 101, 102, 103, 113, 117, 124, 127, 129, 216], "oo": [4, 14, 15, 37, 41, 42, 46, 50, 65, 67, 87, 88, 92, 93, 94, 96, 101, 113, 115, 118, 124, 144, 146, 177, 189, 192, 217, 226, 227, 228, 229, 233, 236, 237, 239, 240, 241, 246, 259, 262, 287, 291], "oohai": 221, "ooo": 259, "oooo": [137, 259], "oop": 289, "op": [14, 35, 69, 88, 124, 180, 191, 204, 230, 259, 260], "op_point": [27, 153, 154, 302, 306], "opaqu": [113, 221], "opathwai": 18, "open": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 22, 30, 52, 53, 54, 56, 59, 67, 88, 90, 94, 115, 118, 135, 144, 221, 229, 236, 240, 241, 291, 293, 304], "openview": 241, "oper": [2, 4, 9, 14, 15, 18, 21, 27, 28, 30, 34, 41, 42, 43, 53, 54, 55, 57, 61, 65, 67, 69, 79, 80, 81, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 106, 108, 111, 113, 118, 120, 128, 130, 132, 144, 145, 153, 154, 163, 167, 168, 172, 174, 175, 176, 177, 182, 183, 186, 188, 189, 190, 191, 200, 202, 203, 208, 209, 210, 211, 212, 214, 216, 217, 218, 221, 224, 226, 229, 230, 233, 236, 237, 239, 240, 243, 244, 245, 246, 252, 253, 256, 259, 260, 265, 276, 280, 282, 283, 288, 289, 290, 292, 297, 306, 310], "operand": [13, 16, 80, 88, 201, 211, 212, 216, 268], "operar": 88, "operationnotsupport": 214, "operator_": 180, "operator_to_st": 186, "operatornam": [43, 61, 93, 94, 96, 113, 115, 206, 209, 217, 221, 224, 229, 231, 239], "operators_to_st": 181, "operatorset": [169, 181], "opinion": [17, 58], "oplu": [118, 175], "oppenheim": 256, "opportun": [3, 4, 233], "opportunist": 69, "oppos": [69, 148, 260, 287, 299], "opposit": [18, 46, 48, 84, 104, 118, 124, 148, 149, 156, 159, 209, 212, 229, 233, 240, 248, 259, 265, 267, 297, 299, 304], "opqrstuvwxi": 89, "opt": [18, 134, 208, 210, 214, 233, 252, 293], "opt2": 69, "opt_cs": [4, 233], "opt_sub": 233, "optic": [47, 162, 163, 164, 165, 282, 301], "optical_medium": 162, "optim": [4, 15, 18, 21, 30, 54, 69, 72, 79, 92, 118, 128, 131, 132, 134, 171, 175, 210, 217, 221, 222, 230, 233, 241, 253, 299], "optimal_fiber_length": [18, 134], "optimal_pennation_angl": [18, 134], "optimis": [41, 237], "optims_c99": 69, "option": [3, 4, 5, 8, 11, 12, 14, 16, 21, 28, 30, 32, 43, 45, 48, 50, 62, 64, 67, 69, 79, 86, 87, 88, 89, 90, 91, 92, 94, 97, 98, 101, 102, 104, 105, 107, 115, 116, 120, 124, 125, 128, 129, 130, 136, 142, 144, 148, 149, 150, 152, 153, 154, 155, 158, 164, 175, 180, 181, 183, 186, 188, 193, 195, 200, 205, 207, 208, 209, 210, 211, 212, 216, 217, 218, 220, 221, 222, 223, 224, 226, 228, 229, 230, 233, 234, 237, 238, 239, 240, 241, 243, 246, 247, 252, 253, 254, 257, 259, 260, 265, 290, 296, 297, 301], "optionerror": 214, "optionflag": 252, "oq": 35, "oracl": 176, "oracleg": 176, "orang": 142, "orb": 79, "orbit": [79, 86, 191, 192, 194], "orbit_rep": 79, "orbit_transvers": 79, "ord": [84, 89, 124], "order": [2, 3, 4, 5, 11, 12, 14, 15, 16, 21, 22, 24, 25, 26, 27, 28, 32, 35, 36, 37, 39, 41, 42, 46, 48, 50, 55, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 101, 104, 105, 107, 110, 113, 115, 116, 117, 118, 124, 125, 128, 129, 130, 131, 134, 136, 137, 138, 144, 145, 148, 152, 153, 158, 164, 168, 172, 175, 185, 186, 187, 188, 189, 190, 191, 195, 196, 200, 202, 204, 205, 207, 208, 209, 210, 211, 212, 214, 216, 218, 220, 221, 222, 223, 224, 227, 229, 233, 234, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 252, 253, 254, 256, 259, 260, 262, 265, 267, 269, 270, 275, 287, 289, 290, 292, 296, 297, 298, 299, 302], "order_equation_with_variable_coeffici": 237, "order_symbol": 88, "ordered_flag": 259, "ordered_partit": 259, "ordering_of_class": [88, 99], "ordin": [207, 237, 262], "ordinari": [2, 18, 23, 41, 42, 49, 67, 69, 79, 88, 92, 93, 94, 96, 106, 110, 111, 115, 125, 131, 134, 144, 151, 208, 210, 211, 220, 227, 237, 242, 256, 291, 297], "ordinarili": 216, "org": [0, 2, 4, 5, 11, 12, 16, 34, 41, 43, 61, 63, 64, 65, 67, 68, 69, 71, 72, 74, 76, 77, 79, 80, 87, 88, 89, 90, 91, 93, 94, 96, 98, 100, 104, 105, 106, 115, 116, 117, 118, 120, 124, 128, 142, 144, 146, 147, 148, 160, 162, 163, 164, 166, 167, 168, 172, 173, 174, 177, 179, 180, 189, 191, 200, 202, 203, 205, 210, 212, 215, 217, 221, 224, 228, 229, 230, 233, 234, 237, 240, 241, 253, 254, 255, 257, 259, 265, 267, 271, 273, 275, 293, 296, 302, 303], "organ": [7, 11, 18, 23, 151], "orient": [13, 22, 24, 28, 30, 33, 35, 36, 61, 100, 104, 124, 152, 156, 200, 204, 214, 259, 265, 266, 273, 274, 280, 299, 302, 306, 309], "orient_axi": [13, 18, 32, 149, 152, 200, 202, 299], "orient_body_fix": 200, "orient_dcm": 200, "orient_new": [265, 267], "orient_new_": 270, "orient_new_axi": [265, 268, 270], "orient_new_bodi": [265, 270], "orient_new_quaternion": [265, 270], "orient_new_spac": [265, 270], "orient_quaternion": 200, "orient_space_fix": 200, "orientnew": [27, 31, 33, 35, 36, 156, 200, 202, 204, 302, 303, 306, 309, 310, 311], "orig": 214, "orig_expr": 186, "orig_ext": 212, "orig_frac": 297, "origin": [9, 11, 12, 15, 16, 18, 27, 30, 33, 39, 41, 51, 59, 61, 79, 80, 81, 84, 87, 88, 89, 92, 93, 94, 96, 97, 99, 101, 103, 113, 115, 124, 128, 131, 132, 134, 142, 144, 145, 152, 159, 183, 186, 196, 201, 207, 208, 210, 212, 216, 217, 220, 221, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 247, 252, 259, 260, 265, 268, 269, 270, 271, 272, 274, 275, 297, 299, 306], "origin_angl": 299, "origin_dist": 299, "origin_segment_length": 299, "origsit": 241, "orlando": 215, "ormv": 89, "orszag": 237, "orthocent": 104, "orthogon": [36, 61, 65, 103, 117, 124, 189, 200, 265, 267], "orthogonal_direct": 103, "orthogonal_matrix": 65, "orthogonalbra": 189, "orthogonalhandl": 65, "orthogonalket": 189, "orthogonalpolynomi": 5, "orthogonalpred": 65, "orthogonalst": 189, "orthonorm": [30, 36, 124, 186, 269], "orthopoli": [96, 217], "osc": [88, 92], "oscar": [12, 206], "oscil": [88, 282, 301, 305], "oscillatori": [88, 92, 226], "osi": 89, "osineq": 16, "ostrogradski": 115, "other": [3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 27, 28, 30, 32, 34, 35, 36, 37, 38, 39, 42, 44, 48, 50, 51, 52, 53, 55, 56, 57, 61, 65, 67, 68, 69, 70, 71, 74, 79, 80, 81, 84, 85, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 113, 115, 118, 120, 124, 128, 129, 130, 133, 136, 137, 138, 144, 148, 149, 151, 152, 153, 156, 158, 159, 160, 163, 164, 165, 175, 186, 188, 189, 190, 191, 194, 195, 196, 197, 198, 200, 202, 204, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 247, 248, 250, 253, 254, 255, 256, 259, 260, 265, 268, 269, 272, 274, 276, 282, 283, 286, 287, 289, 291, 292, 293, 297, 306, 307], "otherfram": [200, 265], "otherpoint": 204, "otherwis": [2, 3, 12, 14, 22, 34, 35, 37, 41, 42, 43, 67, 68, 69, 79, 80, 84, 87, 88, 89, 92, 94, 96, 97, 98, 101, 102, 103, 104, 113, 115, 117, 118, 119, 124, 127, 128, 130, 142, 144, 146, 149, 158, 159, 176, 181, 187, 203, 204, 207, 208, 210, 212, 214, 216, 217, 219, 221, 223, 224, 226, 227, 229, 233, 234, 237, 238, 239, 240, 241, 242, 250, 252, 254, 259, 260, 286, 287, 296], "otim": [32, 242, 243], "our": [5, 11, 13, 14, 18, 32, 35, 36, 39, 43, 59, 69, 88, 96, 113, 124, 128, 134, 153, 158, 196, 207, 208, 210, 212, 216, 217, 218, 221, 228, 231, 234, 237, 240, 252, 286, 289, 290, 292, 297, 299, 301, 304, 307], "out": [5, 11, 12, 13, 16, 18, 22, 28, 30, 41, 42, 43, 51, 68, 69, 79, 80, 88, 89, 90, 93, 96, 104, 113, 115, 120, 124, 128, 130, 136, 144, 145, 168, 172, 183, 186, 188, 190, 191, 208, 209, 210, 211, 212, 216, 217, 218, 219, 221, 222, 228, 231, 233, 237, 242, 243, 252, 254, 259, 260, 289, 291, 292, 296, 297, 306, 309], "out1": 124, "out2": 124, "out_8598435338387848786": [69, 254], "outcom": [118, 194, 241], "outdat": 12, "outer": [28, 30, 32, 36, 55, 115, 130, 149, 155, 174, 179, 180, 200, 202, 204, 223, 229, 245, 265, 268, 269], "outer_product": 180, "outermost": [221, 229, 233, 245], "outerproduct": [174, 180], "outfram": 204, "outlier": 241, "outlin": [0, 2, 3, 11, 14, 41, 43, 86, 115, 208, 237], "outof": 36, "outperform": 69, "output": [2, 4, 5, 11, 12, 13, 14, 16, 17, 18, 22, 27, 30, 31, 32, 33, 36, 39, 41, 43, 46, 52, 55, 57, 68, 69, 88, 89, 96, 112, 115, 116, 118, 120, 124, 128, 129, 130, 141, 144, 153, 158, 163, 164, 175, 187, 191, 200, 204, 205, 211, 214, 217, 221, 222, 231, 233, 234, 236, 237, 239, 241, 246, 252, 253, 254, 256, 259, 260, 265, 289, 291, 292, 293, 296, 297, 298, 310], "output_eqn": 158, "outputargu": [69, 254], "outputbuff": 221, "outputcheck": 252, "outputtexfil": 221, "outright": 240, "outsid": [4, 21, 36, 52, 65, 79, 88, 96, 99, 104, 124, 128, 196, 217, 233, 287, 292], "outweigh": 208, "over": [3, 5, 6, 7, 10, 11, 12, 13, 14, 16, 18, 22, 30, 31, 33, 38, 43, 48, 51, 58, 61, 67, 68, 69, 70, 79, 80, 83, 87, 88, 89, 90, 91, 92, 93, 102, 104, 111, 113, 117, 118, 120, 124, 125, 128, 135, 136, 137, 138, 140, 146, 152, 158, 170, 186, 189, 191, 195, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 224, 226, 228, 233, 234, 236, 237, 239, 240, 241, 242, 243, 245, 246, 255, 259, 260, 265, 268, 272, 275, 291, 295, 297, 299], "over_power_basi": 216, "overal": [88, 198, 207, 239], "overcompens": 89, "overconstrain": 56, "overdetermin": [54, 210, 239, 240], "overflow": [69, 256], "overhang": [136, 137], "overhead": [89, 129, 218], "overlap": [100, 105, 127, 208, 229, 262], "overleaf": 5, "overli": [54, 156], "overlin": [5, 41, 96, 130], "overload": [208, 211, 212, 269, 292, 299], "overrid": [14, 15, 16, 18, 69, 88, 97, 98, 104, 130, 189, 210, 221, 246, 253, 254, 259, 260], "overridden": [199, 208, 223, 297], "overview": [11, 209, 240, 273, 274], "overwrit": [30, 32, 304], "overwritten": 22, "own": [2, 4, 9, 11, 12, 14, 16, 18, 22, 30, 43, 63, 72, 79, 80, 88, 104, 130, 132, 137, 152, 216, 221, 228, 233, 237, 256, 259, 260, 291], "ownership": 210, "oxford": 124, "oyvind": 11, "p": [0, 8, 12, 13, 14, 15, 16, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 39, 41, 42, 43, 46, 48, 49, 51, 61, 63, 64, 65, 69, 70, 71, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 93, 94, 96, 98, 101, 102, 103, 104, 105, 110, 111, 113, 115, 120, 124, 128, 130, 131, 134, 136, 137, 138, 140, 144, 145, 148, 149, 152, 153, 154, 155, 156, 158, 160, 163, 164, 170, 189, 191, 196, 201, 204, 206, 207, 209, 210, 211, 214, 215, 217, 218, 221, 223, 224, 228, 229, 231, 233, 234, 237, 239, 240, 241, 242, 246, 247, 259, 265, 268, 269, 270, 271, 272, 274, 293, 297, 299, 302, 303, 304, 306], "p0": [84, 98, 136, 216, 237], "p1": [18, 30, 35, 70, 79, 80, 84, 87, 98, 100, 101, 102, 103, 104, 136, 144, 149, 152, 155, 159, 160, 204, 207, 211, 212, 214, 218, 230, 241, 242, 299, 306], "p10": [79, 136], "p11": 100, "p12": [100, 136], "p13": 100, "p1_frame": 152, "p1_pt": 155, "p2": [18, 30, 35, 42, 79, 80, 87, 98, 100, 101, 102, 103, 104, 136, 144, 149, 152, 155, 159, 204, 207, 211, 212, 214, 218, 230, 241, 299], "p20": [79, 136], "p21": 100, "p22": 100, "p23": 100, "p2_pt": 155, "p3": [35, 87, 98, 100, 101, 103, 104, 144, 155, 207, 211, 230, 241, 299], "p3_pt": 155, "p4": [98, 101, 103, 104, 144, 155, 207, 299], "p4_pt": 155, "p5": [101, 103, 104, 136, 207], "p50": 136, "p6": [101, 104, 207], "p64": 212, "p7": [101, 104, 136, 207], "p8": [136, 207], "p9": 207, "p90": 88, "p_": [79, 84, 88, 115, 196, 234, 237, 242], "p_0": [79, 84, 106, 231, 234], "p_1": [35, 79, 84, 89, 93, 106, 128, 231, 234, 299], "p_12": 136, "p_2": [35, 79, 89, 93, 106, 128, 231, 299], "p_3": [35, 89, 299], "p_4": 299, "p_5": 136, "p_a": [210, 214], "p_a_b": 210, "p_dom": 211, "p_domain": 212, "p_expr": [211, 212], "p_frame": 152, "p_i": [79, 84, 93, 128], "p_invers": 237, "p_j": [79, 84], "p_k": [79, 93, 128], "p_m": 96, "p_masscent": 152, "p_mat": 46, "p_n": [89, 93, 96, 115, 217], "p_new": 241, "p_o_p": 22, "p_o_q": 30, "p_p": 79, "p_p_q": 30, "p_p_r": 22, "p_pt": 22, "p_q": 231, "p_r": 106, "p_so_o": 22, "p_val": [18, 51, 299], "p_x": 247, "p_y": 247, "p_z": 247, "pa": [18, 25, 28, 31, 35, 124, 132, 148, 153, 155, 156, 214], "packag": [2, 7, 8, 9, 11, 12, 18, 23, 30, 47, 49, 53, 54, 59, 116, 129, 130, 141, 151, 205, 221, 252, 271, 272, 291, 299], "pad": [16, 69, 89, 90, 91, 103, 128], "padded_kei": 89, "pafnuti": 5, "page": [0, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 27, 30, 36, 41, 42, 48, 49, 51, 52, 56, 58, 69, 70, 71, 87, 93, 113, 128, 129, 152, 153, 196, 207, 210, 211, 212, 215, 221, 231, 234, 257, 274, 297], "page52": 196, "page78": 196, "page_228": 96, "page_888": 115, "pai": 67, "pain": 3, "pair": [4, 14, 16, 18, 22, 28, 39, 48, 51, 68, 69, 79, 80, 88, 89, 94, 100, 105, 112, 124, 128, 132, 148, 156, 159, 181, 183, 185, 186, 191, 206, 208, 210, 211, 212, 214, 216, 217, 222, 227, 228, 230, 231, 233, 234, 237, 240, 241, 254, 259, 269, 286, 293, 306], "pairwis": [5, 65, 68, 88, 93, 105, 124, 128, 234, 239], "pakianathan": 74, "palancz08": 215, "palimpsest": 89, "palindrom": 128, "pal\u00e1ncz": 215, "panagioti": 217, "pankowski": 11, "papadopoulo": [29, 302], "paper": [0, 4, 18, 36, 45, 124, 128, 216, 217, 230, 231, 234, 237, 302, 303], "paperforkcgx": 302, "paperforkcgz": 302, "paperforkl": 302, "paperframecgx": 302, "paperframecgz": 302, "paperradfront": 302, "paperradrear": 302, "paperwb": 302, "paprocki": 0, "parabol": 136, "parabola": 265, "paradigm": 14, "paragraph": [3, 4, 5, 43, 68], "parallel": [18, 35, 36, 61, 98, 101, 102, 104, 115, 141, 144, 147, 156, 159, 210, 214, 271, 275, 299], "parallel_axi": [149, 155], "parallel_lin": 101, "parallel_plan": 102, "parallel_poly_from_expr": 217, "parallelogram": 36, "param": [69, 90, 124, 207, 234], "param_circl": 275, "paramet": [3, 5, 12, 13, 14, 15, 16, 18, 21, 22, 30, 33, 36, 48, 54, 56, 61, 62, 64, 67, 69, 70, 71, 74, 79, 80, 84, 86, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 111, 113, 115, 116, 118, 120, 123, 124, 125, 127, 128, 130, 132, 134, 136, 138, 140, 142, 144, 145, 146, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 166, 167, 168, 170, 171, 172, 174, 175, 176, 179, 180, 181, 183, 185, 186, 188, 189, 190, 191, 192, 193, 195, 200, 201, 202, 204, 205, 206, 207, 209, 210, 212, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 233, 234, 236, 237, 238, 239, 241, 242, 243, 246, 247, 250, 252, 253, 254, 256, 257, 259, 260, 265, 267, 268, 269, 270, 275, 287, 292, 299, 305], "parameter": [18, 51, 90, 97, 98, 101, 104, 234], "parameter_valu": [99, 102], "parametr": [69, 96, 97, 101, 124, 134, 207, 234, 240, 265, 268, 275], "parametric2dlineseri": 207, "parametric3dlineinteractiveseri": 207, "parametric3dlineseri": 207, "parametricintegr": 265, "parametricregion": [265, 268, 275], "parametricsurfaceseri": 207, "parametris": [88, 229], "parametrize_ternary_quadrat": 234, "paraxi": [160, 164], "pare1970": 68, "pareigi": 68, "paren": 221, "parent": [13, 24, 79, 88, 111, 148, 152, 158, 200, 204, 211, 212, 216, 252, 256, 265, 269, 270, 299], "parent_axi": [13, 152, 299], "parent_force_direction_vector": 299, "parent_fram": [13, 24], "parent_interfram": [13, 24, 152, 307], "parent_joint_po": [13, 152], "parent_point": [13, 24, 152, 304, 307], "parent_tangency_point": 299, "parent_vector": 152, "parenthes": [4, 12, 16, 21, 36, 88, 130, 179, 180, 221, 245, 262], "parenthesi": [221, 245], "parenthesize_sup": 221, "pareto": 241, "pareto_distribut": 241, "paretodistribut": 241, "parg": 96, "pariti": [13, 41, 80, 88, 217], "parity_": [41, 88], "park": 89, "pars": [12, 13, 14, 22, 24, 80, 88, 120, 218, 220, 276, 284], "parsabl": 15, "parse_autolev": 22, "parse_c": 2, "parse_expr": [2, 13, 14, 41, 57, 88, 130], "parse_latex": [57, 130], "parse_latex_lark": 130, "parse_mathematica": [2, 13, 130], "parse_maxima": [2, 130], "parser": [2, 23, 30, 120, 252], "part": [2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 21, 22, 23, 24, 28, 30, 32, 36, 41, 42, 43, 48, 61, 66, 79, 80, 87, 88, 89, 93, 94, 96, 104, 111, 113, 115, 118, 120, 124, 128, 131, 134, 144, 149, 151, 152, 153, 158, 175, 187, 191, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 222, 229, 231, 233, 234, 237, 239, 252, 254, 256, 259, 287, 292, 297, 302, 303, 310], "part1": 152, "part2": 152, "part_sol": 237, "partcompon": 256, "partfrac": [217, 223], "parti": [158, 257], "partial": [8, 15, 30, 33, 67, 79, 86, 87, 88, 90, 92, 93, 94, 128, 130, 185, 200, 204, 210, 212, 215, 218, 221, 223, 230, 233, 237, 238, 242, 248, 265, 272, 287, 297], "partial_list": 217, "partial_veloc": [30, 200, 204], "partialderiv": 248, "particip": 7, "particl": [13, 18, 22, 23, 25, 27, 30, 31, 35, 148, 149, 151, 152, 153, 155, 158, 167, 170, 177, 178, 189, 191, 194, 196, 247, 282, 306, 307], "particle_p": 22, "particle_r": 22, "particular": [3, 4, 11, 12, 13, 15, 16, 23, 41, 42, 49, 51, 65, 70, 79, 88, 89, 92, 96, 99, 113, 115, 118, 120, 124, 128, 136, 140, 151, 175, 186, 209, 210, 211, 212, 214, 216, 217, 227, 229, 231, 233, 234, 237, 239, 240, 252, 254, 256, 293, 295, 297], "particularli": [12, 14, 41, 92, 115, 211, 212, 231, 297, 298], "partit": [5, 27, 29, 75, 79, 93, 128, 234, 241, 256, 277, 306], "partition_": [77, 93], "partitionfunctionp": 128, "partitions_": [13, 128], "pascal": [93, 128], "pass": [2, 3, 4, 11, 12, 14, 15, 16, 18, 22, 28, 30, 31, 37, 38, 41, 42, 43, 50, 51, 54, 55, 57, 60, 61, 64, 67, 68, 69, 79, 80, 88, 89, 90, 92, 94, 95, 96, 98, 101, 102, 104, 115, 116, 118, 120, 124, 125, 128, 130, 132, 134, 136, 142, 144, 148, 149, 153, 156, 158, 159, 163, 180, 181, 185, 186, 188, 189, 205, 207, 208, 210, 211, 212, 214, 216, 217, 219, 221, 222, 228, 229, 233, 234, 237, 238, 239, 240, 241, 242, 245, 246, 247, 250, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 286, 287, 292, 296, 297, 298, 306], "passiv": [132, 134, 188, 299], "past": [11, 12, 16, 94, 128, 220, 221, 296], "pastabl": 262, "pat_matrix": 147, "patashnik": 80, "patch": [13, 90, 221], "path": [4, 8, 12, 13, 18, 33, 35, 79, 104, 110, 130, 144, 156, 159, 207, 230, 233, 237, 240, 252, 253, 256, 257, 259, 262, 263, 272, 299, 303, 310], "pathsep": 262, "pathwai": [19, 134, 148, 151, 159, 282, 299], "pathwaybas": [18, 134, 148, 156, 299], "patrizia": 239, "pattern": [11, 12, 13, 15, 16, 41, 43, 88, 113, 115, 118, 124, 130, 185, 211, 231, 233, 237, 239, 287, 292], "paul": [93, 256], "paulbourk": 104, "pauli": [147, 282], "pauli_matric": [147, 166], "paulialgebra": 166, "paulimatric": 166, "paulo": 148, "pb": [35, 148, 156, 163], "pc": [152, 156, 218], "pc_group": 78, "pc_present": 78, "pc_resent": 78, "pc_sequenc": [78, 79], "pc_seri": [78, 79], "pcg": 78, "pcgroup": 78, "pd": 156, "pdb": 252, "pde": [235, 237, 277], "pde_1st_linear_constant_coeff": 238, "pde_1st_linear_constant_coeff_homogen": 238, "pde_1st_linear_variable_coeff": 238, "pde_hint": 238, "pde_hintnam": 238, "pde_separ": 238, "pde_separate_add": 238, "pde_separate_mul": 238, "pdf": [2, 5, 7, 18, 46, 55, 58, 67, 68, 79, 89, 91, 93, 110, 115, 124, 128, 136, 137, 140, 142, 144, 207, 210, 212, 215, 220, 221, 224, 230, 233, 234, 237, 241, 259, 265, 299], "pdiv": [212, 217], "pdp": 293, "pdsolv": 238, "pe": 87, "peak": [18, 134, 160], "peak_isometric_forc": [18, 134], "pearc": 233, "pearson": 241, "peculiar": [36, 113], "pedregosa": 0, "peek": [256, 297], "peerj": [0, 7], "pell": 234, "penalti": 21, "pendent": 30, "pendulum": [13, 23, 27, 31, 35, 55, 151, 152, 158, 301, 304, 305, 307], "pendulum_bodi": 303, "pendulum_izz": 13, "pendulum_joint": 152, "pendulum_mass": 13, "pendulum_point": 303, "pennat": [18, 134], "penros": [53, 120, 124], "penrose_pseudoinvers": 124, "pent": 99, "pentagonal_number_theorem": 93, "peopl": [3, 4, 7, 9, 11, 91, 96, 115, 124, 196, 241], "pep": [5, 69, 88, 118], "per": [3, 18, 33, 89, 124, 129, 140, 153, 156, 165, 195, 200, 207, 212, 217, 218, 265, 269, 271, 274], "percent": [124, 240], "percentag": [124, 128], "perfect": [4, 43, 55, 79, 88, 128, 234, 240, 291, 292], "perfect_numb": 128, "perfect_pow": [88, 128], "perfectli": [14, 80, 87, 88, 89, 214, 217, 220], "perfectnumb": 128, "perform": [2, 11, 12, 13, 14, 15, 23, 27, 28, 30, 33, 36, 38, 39, 41, 43, 66, 68, 69, 70, 79, 80, 83, 87, 88, 89, 91, 92, 94, 101, 105, 112, 115, 121, 124, 128, 129, 150, 151, 153, 175, 176, 185, 188, 191, 209, 210, 211, 214, 216, 217, 222, 223, 224, 228, 233, 234, 237, 239, 240, 241, 242, 253, 259, 265, 267, 269, 272, 286, 287, 291, 292, 297, 306], "perhap": [11, 13, 18, 37, 69, 88, 118, 128, 176, 210, 211, 239, 254, 286], "periapsi": 98, "perimet": 104, "period": [3, 4, 11, 13, 27, 52, 67, 88, 89, 94, 113, 128, 144, 165, 187, 194, 216, 221, 224, 227, 236, 240, 241, 259, 303], "period_find": 187, "periodic_argu": 94, "periodic_continued_fract": 128, "perl": 128, "perlikowskia": 303, "perm": [76, 78, 79, 80, 81, 86, 93, 120, 124, 242], "perm1": 243, "perm2": 243, "perm2tensor": 247, "perm_cycl": [13, 80, 221], "perm_group": [73, 78, 79, 80, 85, 86], "perm_mat": [27, 153, 154], "perman": [11, 124], "permanent_": 124, "permeabl": 162, "permiss": [128, 206], "permit": [41, 80, 90, 94, 118, 128, 207, 239], "permitt": 162, "permut": [5, 70, 71, 73, 75, 76, 78, 81, 84, 85, 86, 89, 93, 96, 120, 124, 154, 191, 206, 210, 212, 217, 234, 242, 243, 247, 259, 277, 297], "permutation_oper": 191, "permutationgroup": [71, 73, 76, 78, 79, 80, 85, 86, 216], "permutationinvolut": 259, "permutationmatrix": [120, 124], "permutationoper": 191, "permute_backward": 124, "permute_col": 124, "permute_forward": 124, "permute_row": 124, "permute_sign": [234, 259], "permutebkwd": 124, "permutedim": [120, 242, 243], "permutefwd": 124, "permutlist": 191, "perpendicualar": 102, "perpendicular": [36, 98, 101, 102, 104, 117, 152, 159, 164, 310], "perpendicular_bisector": 101, "perpendicular_lin": [101, 102], "perpendicular_plan": 102, "perpendicular_seg": 101, "perri": 210, "persist": 256, "person": [5, 15], "perspect": [118, 128, 144, 196, 207, 254, 270, 274], "pertain": [34, 201, 203], "pertin": [31, 208, 216], "perus": 11, "peter": [29, 34, 87, 93, 96, 128, 203, 210, 217, 259], "peterson": 154, "petkovsek": [87, 239], "pexquo": [212, 217], "pfd": 217, "pfda": 217, "pfister": 215, "pfix": 35, "pfq": 237, "pg": 302, "pgl": 71, "pgl2f5": 71, "pgl_2": 71, "pgroup": [79, 81], "phantom": 214, "phase": [11, 46, 88, 115, 142, 160, 163, 165, 175, 176, 240], "phase_retard": 163, "phase_unit": 142, "phase_unwrap": 142, "phaseg": 175, "phdthesisthieu": 237, "phenomenom": 18, "phenomenon": [67, 196, 214, 224, 292], "phi": [16, 30, 79, 88, 89, 93, 96, 113, 117, 124, 128, 146, 165, 174, 176, 206, 208, 216, 221, 237, 265, 275, 303], "phi1": 165, "phi2": 165, "phi_0": 96, "phi_a": 163, "phi_b": 163, "phia": 163, "phib": 163, "phidd": 221, "phil": 206, "philosoph": 15, "philosophi": [195, 237, 240, 282], "php": [80, 128, 234, 241], "phrase": [5, 11, 15, 89], "phy": [170, 196, 206], "physic": [2, 4, 17, 18, 19, 22, 23, 39, 44, 46, 69, 81, 93, 124, 128, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 215, 241, 256, 259, 272, 291, 297, 299, 302, 303, 304, 305, 306, 307, 309, 310, 311], "physicalconst": 195, "pi": [4, 12, 13, 14, 15, 16, 30, 32, 38, 41, 43, 49, 50, 52, 55, 57, 60, 61, 62, 64, 65, 66, 67, 69, 80, 87, 88, 90, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 107, 113, 115, 124, 128, 146, 152, 159, 160, 162, 163, 164, 165, 167, 175, 186, 188, 189, 192, 194, 200, 206, 207, 209, 211, 212, 217, 221, 224, 228, 229, 230, 231, 233, 236, 237, 239, 240, 241, 259, 265, 268, 275, 286, 291, 297, 299, 302, 304], "pi_": 43, "pi_hex_digit": 128, "piab": 182, "piabbra": 182, "piabhamiltonian": 182, "piabket": 182, "pic": 68, "pick": [27, 41, 89, 93, 185, 187, 297], "pickl": 2, "pictori": 136, "pictur": [78, 221], "piec": [88, 92, 231, 254], "piecewis": [14, 42, 43, 69, 87, 93, 96, 115, 118, 136, 138, 189, 221, 223, 224, 239, 240, 241, 260, 287], "piecewise_exclus": 94, "piecewise_fold": 94, "piecewise_integr": 94, "pietjepuk314": 221, "pii": [215, 230], "pin": [13, 61, 136, 137, 140, 148, 152, 158, 299], "pin_joint": 148, "pinjoint": [13, 24, 148, 152, 158, 304, 307], "pinv": [120, 124], "pinv_solv": [119, 124], "pip": [2, 8, 9, 12, 59, 130], "pipe": 252, "pitch": 302, "pitfal": [14, 17, 36, 43, 211, 289, 294, 297], "pivot": [124, 210, 293, 303], "piziak": 124, "pkdata": 13, "pkg": [116, 205], "pl": 11, "place": [5, 7, 9, 11, 12, 13, 14, 15, 16, 30, 31, 41, 43, 52, 58, 68, 80, 81, 88, 89, 94, 104, 119, 124, 127, 128, 130, 131, 135, 136, 144, 210, 211, 215, 216, 221, 222, 228, 230, 233, 237, 256, 259, 285, 286, 293, 297], "placehold": [88, 260], "plai": [25, 41, 87, 234, 289, 291, 292, 302], "plain": [3, 4, 11, 12, 41, 88, 96, 116, 205, 210, 217, 221], "plaintext": [89, 221], "plan": [14, 21, 67, 212, 296], "planar": [98, 104, 137, 148, 152, 164], "planar_coordin": 152, "planar_spe": 152, "planar_vector": 152, "planarjoint": 152, "planck": [198, 241], "planck_const": 173, "plane": [4, 35, 36, 46, 61, 88, 96, 98, 100, 101, 103, 104, 115, 124, 142, 144, 152, 163, 164, 229, 240, 275, 283, 297, 299, 302], "plane_vector": 152, "planet": [23, 151], "planetmath": 237, "plank": 173, "plant": [46, 144], "plant_mat": 144, "plate": 163, "platform": [4, 36, 88, 138, 191, 237, 253], "platon": 81, "plausibl": 208, "pleas": [0, 3, 4, 5, 7, 12, 13, 14, 21, 22, 23, 27, 28, 32, 36, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 65, 67, 88, 96, 100, 113, 128, 151, 153, 163, 164, 185, 206, 207, 208, 214, 215, 229, 233, 234, 239, 240, 260, 265, 270, 294, 298], "plenti": 13, "plot": [4, 18, 30, 43, 46, 55, 59, 97, 98, 100, 101, 104, 111, 116, 124, 136, 137, 138, 140, 143, 175, 178, 184, 224, 276, 282, 283, 291, 296, 299], "plot3d": [124, 207], "plot3d_parametric_lin": 207, "plot3d_parametric_surfac": 207, "plot_bending_mo": [136, 137], "plot_deflect": [136, 137], "plot_direct": 5, "plot_gat": 175, "plot_ild_mo": 136, "plot_ild_react": 136, "plot_ild_shear": 136, "plot_implicit": 207, "plot_interv": [97, 98, 101, 104], "plot_loading_result": [136, 137], "plot_parametr": 207, "plot_shear_forc": [136, 137], "plot_shear_stress": 136, "plot_slop": [136, 137], "plot_tens": 138, "plot_traj": 299, "plot_typ": 207, "plotgrid": 136, "plotli": 13, "plt": [18, 30, 55, 111, 299], "plu": [30, 69, 87, 124, 130, 171, 214, 217, 221, 231, 259, 260], "plug": [22, 196], "plural": [4, 5], "pm": [41, 48, 49, 51, 61, 87, 113, 115, 128, 209, 220, 228, 234, 237], "pmatrix": [130, 196], "pmf": 241, "pmint": 115, "pmod": [79, 88, 89, 93, 128, 231, 234], "pn": [27, 79, 306], "pn0": 261, "png": [18, 45, 46, 55, 68, 116, 124, 136, 137, 140, 142, 205, 207, 221, 224, 299], "pnot": 35, "po": [28, 30, 79, 113, 118, 124, 155, 156, 159, 212, 239], "pochhamm": [93, 221, 233], "pochhammer_symbol": 93, "pohlig": 128, "pohst": 216, "poin": 90, "poincar\u00e9": 163, "point": [2, 3, 4, 5, 12, 14, 15, 16, 18, 22, 24, 25, 26, 27, 28, 30, 31, 33, 36, 39, 41, 52, 54, 55, 59, 61, 67, 69, 70, 79, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 110, 111, 112, 113, 115, 124, 128, 130, 132, 134, 136, 137, 138, 140, 142, 144, 148, 149, 152, 153, 154, 155, 156, 158, 159, 171, 193, 196, 201, 204, 207, 208, 210, 211, 212, 214, 216, 217, 221, 223, 227, 228, 229, 237, 239, 240, 241, 253, 256, 259, 260, 262, 265, 268, 270, 271, 272, 274, 275, 283, 286, 287, 289, 292, 299, 303, 304, 306, 308, 309, 310, 311], "point1": [52, 201, 268], "point2": [52, 201, 268], "point2d": [97, 98, 99, 100, 101, 103, 104, 105], "point3d": [101, 102, 103, 164], "point_1": 159, "point_2": 159, "point_cflexur": 136, "point_load": 138, "point_o": [22, 155], "point_on_surfac": 159, "point_p": 90, "point_r": 90, "point_to_coord": 90, "pointer": [69, 254, 255], "pointer_const": 69, "pointless": 297, "pointload": [136, 137], "pointwis": [79, 86], "pointwise_stabil": 79, "poisson": 241, "poisson_distribut": 241, "poisson_point_process": 241, "poissondistribut": 241, "poissonprocess": 241, "pol": 90, "polar": [90, 94, 96, 98, 104, 136, 146, 161, 207, 229, 233, 240, 282], "polar_lift": [94, 96, 233], "polar_mo": 136, "polar_moment_of_inertia": [98, 104], "polar_second_moment_of_area": [98, 104], "polarcomplexregion": 229, "polaris": 164, "polarizing_beam_splitt": 163, "pole": [4, 13, 15, 46, 96, 113, 144, 152, 164, 228, 231, 237], "pole_color": 142, "pole_markers": 142, "pole_zero_numerical_data": 142, "pole_zero_plot": [46, 142], "poleerror": 88, "poli": [2, 15, 30, 48, 71, 87, 88, 89, 93, 94, 96, 97, 104, 110, 115, 120, 124, 128, 208, 209, 213, 214, 216, 217, 218, 220, 223, 236, 237, 239, 240, 252, 283], "polici": [6, 13, 255, 257], "polificationfail": 214, "polish": 233, "pollard": [128, 237], "pollard_pm1": 128, "pollard_rho": 128, "pollut": 12, "polnomi": 217, "poly1": 104, "poly2": 104, "poly_from_expr": [216, 217], "poly_lc": 214, "poly_r": [211, 212], "poly_tc": 214, "poly_unifi": 212, "polyalphabet": 89, "polybiu": 89, "polyclass": [211, 212, 217], "polyconfig": [214, 217], "polycycl": [75, 79, 277], "polycyclic_group": [78, 79], "polycyclicgroup": 79, "polycyl": 78, "polyel": [211, 212, 214, 218, 219, 221], "polyerror": [48, 214, 217], "polyfunc": [97, 212, 217], "polygamma": [4, 93, 96, 221], "polygamma2": 96, "polygamma_funct": 96, "polygammafunct": 96, "polygon": [4, 98, 99, 100, 105, 207, 275, 283], "polygonmesh": 104, "polygraph": 89, "polyhedr": 81, "polyhedra": 81, "polyhedralgroup": 81, "polyhedron": [75, 79, 115, 259, 277], "polylog": [96, 221], "polylogarithm": 96, "polymatrix": 13, "polymoni": 180, "polynomi": [4, 5, 14, 15, 30, 32, 39, 41, 49, 51, 57, 65, 79, 87, 88, 89, 92, 93, 106, 107, 109, 111, 115, 118, 120, 124, 128, 137, 144, 208, 210, 215, 219, 223, 228, 230, 231, 233, 234, 236, 237, 240, 252, 276, 283, 288, 293, 298], "polynomial_congru": [128, 214], "polynomialerror": [214, 217], "polynomialr": [208, 212, 219], "polyopt": [214, 218], "polyr": [212, 214, 219], "polyroot": 217, "polysi": 239, "polytool": [88, 210, 214, 217, 240], "polytope_integr": 115, "polyu": 144, "pomer": [128, 256], "pone": 61, "poor": [115, 129], "poorer": 67, "pop": [11, 115, 234], "popen": 221, "popul": [132, 134, 241], "popular": [0, 2, 30, 89, 129, 291], "port": [8, 130, 163], "portabl": [252, 253], "portion": [18, 92, 104, 124, 148, 299], "portug": [84, 247], "pos_from": [13, 18, 22, 24, 30, 35, 148, 152, 155, 156, 158, 159, 204, 299, 302, 304, 306], "pos_vec": 155, "posform": 118, "posifi": [41, 233], "posit": [3, 11, 12, 13, 14, 15, 16, 18, 22, 24, 27, 28, 30, 33, 35, 36, 41, 42, 43, 46, 48, 52, 62, 63, 64, 65, 66, 68, 69, 70, 72, 74, 77, 79, 80, 81, 83, 84, 87, 88, 89, 90, 92, 93, 94, 96, 98, 100, 101, 104, 113, 115, 117, 118, 119, 124, 125, 127, 128, 132, 136, 137, 138, 140, 144, 146, 148, 149, 152, 155, 156, 159, 160, 163, 165, 169, 186, 189, 191, 201, 202, 204, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 226, 227, 229, 230, 231, 233, 234, 237, 239, 240, 241, 242, 247, 259, 260, 265, 268, 269, 270, 272, 274, 275, 293, 297, 298, 299, 302, 303, 306, 309, 311], "position2": [201, 268], "position_i": 169, "position_wrt": [265, 269, 270, 271], "position_x": 169, "position_z": 169, "positionbra3d": 169, "positionket3d": 169, "positionstate3d": 169, "positive_definit": 65, "positive_real_numb": 41, "positive_root": 117, "positivedefinitehandl": 65, "positivedefinitematrix": 124, "positivedefinitepred": 65, "positivehandl": 65, "positivepred": 65, "poss": [36, 78, 302], "possess": [28, 149, 247], "possibl": [4, 8, 11, 12, 13, 14, 15, 18, 21, 26, 32, 33, 37, 41, 42, 43, 46, 48, 51, 56, 59, 67, 69, 70, 71, 72, 77, 79, 80, 82, 83, 84, 88, 89, 93, 94, 96, 98, 100, 102, 103, 105, 110, 112, 113, 115, 117, 118, 120, 124, 128, 130, 132, 134, 145, 146, 148, 153, 156, 159, 185, 187, 191, 193, 195, 196, 204, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 222, 223, 227, 228, 229, 230, 233, 234, 237, 238, 239, 240, 241, 242, 247, 252, 254, 255, 256, 257, 259, 260, 269, 270, 272, 288, 289, 292, 297], "possiblezeroq": 293, "possibli": [14, 41, 69, 80, 86, 88, 113, 115, 128, 194, 210, 212, 214, 228, 229, 239, 254, 259, 287, 293], "post": [7, 13, 41, 48, 50, 51, 52, 53, 54, 55, 56, 57, 69, 82, 88, 221, 222, 233, 252, 292], "postdecr": 69, "postfix": [221, 259], "postincr": 69, "postiv": 96, "postord": 88, "postorder_travers": [13, 88, 292], "postpon": 93, "postprocess": [69, 207, 217, 222, 233], "postprocessor": [222, 233], "postscript": 221, "postul": 128, "potenti": [13, 14, 23, 34, 41, 100, 120, 124, 128, 131, 149, 153, 155, 158, 201, 210, 211, 212, 216, 221, 228, 231, 233, 237, 255, 256, 268, 274, 303, 311], "potential_energi": [13, 28, 149, 153, 155, 158, 311], "pound": 195, "povm": 185, "pow": [4, 13, 15, 16, 61, 66, 69, 88, 89, 94, 113, 124, 128, 190, 210, 211, 212, 217, 221, 223, 230, 233, 239, 240, 292, 296], "pow_cos_sin": 61, "pow_xin": 218, "powdenest": [94, 233], "power": [13, 16, 22, 30, 50, 55, 61, 66, 69, 78, 79, 80, 89, 91, 92, 93, 110, 111, 113, 115, 117, 120, 124, 128, 129, 130, 144, 163, 174, 177, 190, 193, 195, 196, 197, 200, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 222, 225, 228, 230, 233, 234, 237, 239, 240, 241, 245, 254, 259, 277, 286, 287, 288, 289, 290, 292, 293, 296], "power_bas": [88, 124], "power_basis_ancestor": 216, "power_exp": [88, 124], "power_func": 241, "power_represent": 234, "power_set": 229, "powerbasi": 216, "powerbasisel": 216, "powerfunct": 241, "powerrul": 115, "powerset": 229, "powf": 221, "powi": [69, 221], "powl": [69, 221], "powsimp": [16, 88, 94, 230, 233], "pp": [4, 18, 27, 79, 80, 86, 87, 88, 89, 93, 94, 115, 124, 128, 131, 132, 134, 154, 206, 209, 210, 214, 215, 237, 238, 241, 299, 306], "pp1": 100, "pp2": 100, "pp3": 100, "pprint": [12, 14, 15, 16, 18, 43, 46, 52, 67, 68, 90, 96, 115, 124, 128, 144, 163, 206, 221, 222, 229, 233, 237, 238, 240, 241, 259, 296], "pprint_nod": 221, "pq": [241, 271], "pqa": 234, "pquo": [212, 217], "pr": [3, 11, 12, 13, 87, 152, 212, 214, 215, 217, 240], "prabha": 80, "practic": [9, 16, 17, 18, 24, 27, 30, 39, 41, 48, 51, 54, 57, 77, 79, 88, 89, 98, 207, 208, 209, 211, 214, 216, 218, 245, 289, 290], "pre": [15, 61, 68, 69, 88, 206, 207, 222, 230, 233, 239, 240, 252, 270, 274, 292], "preambl": [116, 205, 221], "prebuilt": 241, "prec": [43, 54, 88, 98, 104, 128, 142, 206, 212, 217, 218, 233, 239], "preced": [4, 5, 16, 70, 80, 88, 89, 92, 93, 171, 233, 260], "precedence_float": 221, "precedence_fracel": 221, "precedence_funct": 221, "precedence_integ": 221, "precedence_mul": 221, "precedence_polyel": 221, "precedence_r": 221, "precedence_unevaluatedexpr": 221, "precedence_valu": 221, "precis": [2, 3, 4, 14, 15, 16, 28, 41, 42, 43, 48, 52, 69, 79, 88, 91, 92, 93, 96, 104, 115, 124, 128, 142, 206, 208, 211, 212, 216, 217, 218, 221, 228, 233, 234, 239, 240, 253, 254, 262, 286, 287, 297], "precision_target": 69, "precisionexhaust": [88, 92], "precomput": [41, 93, 128, 260], "predecr": 69, "predefin": [30, 43, 90, 211, 221, 222, 233, 240, 247, 265, 270], "predetermin": [88, 252], "predic": [13, 15, 62, 63, 67, 88, 130, 217, 233, 259, 277], "predicate_": [63, 64], "predict": [41, 191, 233, 259], "prefer": [2, 4, 8, 9, 11, 12, 13, 14, 15, 22, 41, 43, 45, 48, 53, 54, 55, 69, 71, 80, 87, 88, 96, 128, 130, 132, 152, 191, 195, 196, 200, 207, 210, 212, 214, 216, 221, 229, 233, 237, 239, 246, 252, 254, 257, 260, 291, 293], "preferred_index": [96, 191], "prefix": [3, 11, 69, 88, 124, 128, 195, 198, 199, 211, 214, 218, 221, 234, 237, 253, 254, 259, 282], "prefix_express": 221, "prefix_i1_i2_": 124, "preimag": 208, "preincrement": 69, "preliminari": 290, "prem": [212, 217], "premad": 69, "premis": 68, "premises_kei": 68, "premultipli": 217, "preorder_travers": [13, 88, 292], "prep": [128, 237, 238], "prepar": [7, 41, 153, 219], "prepend": [8, 68, 79, 124, 144, 198, 221, 247], "prepopul": 18, "preprint": [128, 215], "preprocess": [41, 115, 219], "preprocessor": [69, 222, 233, 254], "preprocessor_stat": 254, "prerequisit": 8, "presenc": [9, 27, 88, 94, 118, 140, 158, 237, 245, 306], "present": [0, 2, 5, 13, 15, 16, 18, 33, 39, 45, 67, 68, 72, 75, 79, 80, 82, 86, 88, 91, 115, 124, 128, 131, 134, 136, 140, 142, 144, 153, 158, 191, 193, 200, 202, 205, 207, 208, 214, 215, 216, 220, 221, 234, 240, 254, 260, 268, 269, 270, 274, 277, 298, 301, 302], "preserv": [57, 68, 69, 79, 88, 124, 189, 210, 212, 217, 222, 223, 233], "presimplifi": 306, "press": [16, 68, 70, 72, 80, 89, 115, 124, 206, 215, 234, 239, 299], "presum": [41, 113, 211, 231, 254], "pretti": [4, 9, 11, 12, 15, 43, 68, 69, 96, 115, 116, 124, 128, 137, 144, 205, 231, 233, 240, 274, 288, 291, 293, 297], "prettifi": 221, "pretty_ascii_repr": 198, "pretty_atom": 221, "pretty_indic": 191, "pretty_print": [24, 25, 26, 28, 31, 35, 36, 80, 116, 149, 155, 158, 200, 202, 204, 205, 221, 302, 304, 309, 310, 311], "pretty_scalar": 265, "pretty_symbol": 221, "pretty_symbologi": 221, "pretty_try_use_unicod": 221, "pretty_unicode_repr": 198, "pretty_use_unicod": 221, "pretty_vect": 265, "prettyform": 221, "prev": [82, 88, 261], "prev_binari": 83, "prev_grai": 83, "prev_lex": 77, "prev_lexicograph": 83, "prevent": [3, 7, 12, 14, 16, 21, 52, 57, 69, 88, 94, 125, 128, 158, 210, 212, 217, 221, 233, 241, 250, 257, 288], "preview": [2, 11, 68, 255], "preview_diagram": 68, "previou": [3, 4, 12, 13, 14, 27, 35, 36, 43, 72, 77, 78, 79, 80, 83, 88, 93, 94, 115, 118, 124, 127, 130, 149, 193, 214, 227, 234, 238, 242, 259, 290, 292, 297], "previous": [2, 3, 11, 13, 24, 33, 87, 134, 148, 152, 220, 233, 241, 272, 301, 310], "previous_term": [88, 94], "prevprim": [93, 128], "pri": 89, "primal": [128, 208], "primari": [2, 3, 4, 5, 12, 14, 18, 36, 41, 43, 88, 100, 118, 131, 134, 148, 208, 210, 254, 260], "primarili": [2, 14, 15, 41, 69, 88, 94, 128, 136, 190, 217, 219, 253, 256, 262, 269], "prime": [13, 41, 55, 62, 63, 64, 65, 79, 86, 87, 88, 89, 91, 93, 96, 128, 162, 208, 209, 210, 211, 212, 214, 217, 231, 233, 234, 241, 256], "prime_as_sum_of_two_squar": 234, "prime_bound": 128, "prime_decomp": 216, "prime_numb": [41, 88, 128], "prime_number_theorem": 128, "prime_ord": 128, "prime_valu": 216, "primefactor": [93, 128], "primehandl": 65, "primeid": [212, 216], "primenu": [13, 93, 128], "primeomega": [13, 93, 128], "primepi": [13, 15, 43, 93, 128], "primepred": [13, 65], "primerang": [93, 128], "primes_abov": [212, 216], "primetest": [13, 88, 93, 128], "primit": [15, 79, 88, 89, 96, 128, 185, 189, 208, 209, 210, 211, 212, 214, 216, 217, 220, 221, 234, 287], "primitive_el": [88, 211, 212, 216], "primitive_root": [128, 216], "primori": 128, "primtiiv": 216, "princeton": [206, 241], "princip": [68, 89, 94, 96, 113, 115, 124, 125, 146, 164, 208, 209, 210, 211, 212, 214, 216, 217, 218, 302], "principal_branch": [94, 113], "principal_valu": [94, 115], "principl": [2, 89, 124, 128, 162, 206, 208, 209, 214, 230, 239], "print": [1, 3, 4, 5, 7, 11, 12, 14, 15, 16, 22, 29, 34, 36, 39, 41, 42, 46, 48, 51, 52, 54, 59, 62, 63, 64, 65, 67, 68, 70, 71, 72, 77, 79, 80, 87, 88, 89, 92, 93, 94, 96, 115, 117, 118, 120, 124, 125, 128, 129, 130, 136, 137, 144, 151, 153, 158, 163, 171, 184, 185, 189, 191, 200, 203, 207, 210, 211, 212, 214, 216, 217, 227, 228, 230, 231, 233, 237, 239, 246, 248, 252, 254, 259, 260, 262, 265, 269, 276, 282, 284, 287, 288, 289, 290, 291, 292, 293, 297, 302], "print_builtin": [116, 205], "print_ccod": 221, "print_cycl": 80, "print_debug_output": 130, "print_dim_bas": 193, "print_fcod": 221, "print_funct": 39, "print_gtk": 221, "print_latex": 221, "print_maple_cod": 221, "print_mathml": [221, 296], "print_my_latex": 221, "print_nod": 221, "print_nonzero": [124, 259], "print_python": 221, "print_rcod": 221, "print_report": 71, "print_tre": 221, "printabl": [13, 89], "printer": [11, 12, 13, 14, 15, 18, 43, 80, 88, 96, 116, 124, 129, 205, 243, 246, 253, 254, 260, 288, 292], "printer_exampl": 221, "printer_set": 69, "printmethod": [43, 221], "prior": [3, 12, 13, 59, 204, 217, 233, 293], "prioriti": [21, 22, 36, 53, 69, 111, 260], "prism": 71, "prismat": 152, "prismaticjoint": [13, 24, 149, 152, 158, 307], "privat": [3, 4, 22, 88, 89, 207, 254], "prk": 89, "prng": 124, "prob": [189, 241], "probabilist": [96, 217, 241], "probabilit": 13, "probability_book": 241, "probability_distribut": 241, "probabilitycours": 241, "probabl": [7, 11, 14, 22, 71, 79, 88, 93, 96, 100, 128, 185, 189, 231, 237, 240, 241, 253, 289, 295], "problem": [5, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 25, 32, 35, 36, 39, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 72, 82, 84, 88, 89, 100, 113, 115, 124, 128, 131, 132, 134, 136, 138, 139, 140, 145, 151, 153, 208, 209, 214, 231, 233, 234, 237, 239, 240, 256, 259, 282, 287, 289, 293, 299, 303, 305, 306, 310], "problemat": [13, 14, 43, 211], "proc": [88, 212, 239], "proce": [27, 102, 214, 216, 231, 239], "procedur": [8, 28, 51, 53, 70, 71, 73, 79, 85, 86, 87, 115, 124, 153, 214, 216, 217, 233, 234, 239, 240, 265, 293], "proceed": [29, 68, 70, 113, 115, 215, 231, 302], "process": [4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 22, 24, 25, 27, 30, 41, 66, 69, 79, 80, 86, 88, 89, 94, 96, 104, 113, 115, 124, 128, 131, 144, 153, 154, 207, 208, 214, 221, 222, 229, 233, 237, 239, 243, 252, 256, 297, 300, 302, 310], "process_seri": 207, "prod": [88, 130, 211, 214, 218, 230], "prod_": [87, 93, 96, 113, 128, 196, 231], "produc": [2, 4, 5, 12, 14, 15, 18, 42, 43, 51, 53, 54, 55, 57, 68, 79, 88, 89, 101, 115, 118, 124, 131, 132, 134, 148, 156, 200, 210, 211, 216, 217, 221, 228, 237, 238, 239, 241, 250, 252, 256, 257, 259, 260, 296, 299, 300], "product": [12, 13, 21, 28, 30, 32, 34, 35, 36, 41, 61, 71, 73, 76, 79, 80, 84, 86, 87, 88, 89, 90, 92, 93, 96, 98, 101, 103, 104, 111, 113, 115, 117, 118, 120, 124, 128, 129, 130, 134, 144, 145, 146, 152, 166, 170, 171, 174, 176, 177, 178, 180, 183, 185, 186, 188, 189, 191, 195, 196, 197, 200, 202, 203, 206, 208, 209, 210, 212, 214, 216, 217, 218, 221, 222, 223, 226, 229, 230, 233, 234, 237, 238, 239, 240, 241, 243, 245, 246, 247, 253, 256, 259, 265, 269, 282, 302], "product_and_invers": 80, "product_matrix_left": 61, "product_matrix_right": 61, "product_replacement_algorithm": 79, "productdomain": 241, "productpspac": 241, "productset": [229, 240], "prof": 124, "profession": 9, "profil": [136, 144], "prog": [69, 170], "program": [2, 5, 16, 30, 41, 69, 72, 80, 196, 206, 254, 256, 289, 291, 295, 297], "programm": [128, 221], "programmat": [0, 14, 15, 37, 38, 56, 57, 240, 270], "programminggeek": 259, "progress": [11, 62, 64, 128, 254], "prohibit": [68, 80, 81, 200], "project": [5, 9, 10, 11, 13, 29, 45, 69, 71, 101, 102, 103, 117, 124, 253, 254, 265], "project__test__h": [69, 254], "projection_lin": 102, "projective_linear_group": 71, "promin": 218, "prompt": [4, 8, 12, 15], "prone": [43, 51, 69, 88], "pronoun": 5, "pronounc": 297, "proof": [12, 79, 82, 113, 115, 240], "proofwiki": 234, "prooject": 115, "prop": [79, 216], "prop_even": 79, "propag": [18, 92, 101, 162, 165, 299], "proper": [11, 16, 21, 22, 32, 79, 88, 115, 128, 211, 212, 216, 221, 229, 237, 242, 253, 254, 272, 293], "proper_divisor": 128, "proper_divisor_count": 128, "properli": [3, 11, 12, 15, 22, 25, 43, 68, 88, 94, 100, 113, 124, 154, 168, 172, 175, 189, 209, 211, 221, 237, 240, 250, 254, 260, 293, 298], "properti": [3, 12, 14, 15, 18, 28, 30, 32, 33, 36, 38, 43, 48, 53, 55, 61, 63, 64, 67, 68, 69, 70, 71, 72, 76, 77, 79, 80, 81, 82, 83, 87, 88, 89, 90, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 111, 113, 115, 120, 124, 128, 131, 132, 134, 136, 137, 138, 140, 141, 144, 148, 149, 152, 153, 155, 156, 158, 159, 160, 162, 165, 166, 169, 170, 175, 176, 177, 179, 180, 187, 189, 191, 193, 195, 196, 198, 199, 200, 201, 202, 206, 207, 209, 210, 211, 212, 214, 216, 217, 220, 223, 224, 227, 228, 229, 231, 234, 237, 240, 241, 246, 247, 252, 254, 255, 265, 268, 269, 270, 272, 274, 293, 299], "propfunc": 255, "proport": [79, 89, 148, 228, 260], "propos": [9, 128], "proposit": [62, 64, 118], "proprietari": 30, "proquest": 241, "protect": [89, 221], "proth": 128, "proth_prim": 128, "proth_test": 128, "prototyp": [69, 129, 254], "prove": [53, 88, 113, 115, 124, 208, 228, 237, 271], "proven": [115, 128, 271, 289], "provid": [0, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 17, 18, 21, 23, 24, 25, 26, 27, 28, 30, 31, 33, 35, 36, 37, 39, 40, 41, 42, 43, 46, 49, 50, 54, 58, 61, 67, 68, 69, 70, 71, 77, 78, 79, 80, 86, 87, 88, 90, 92, 96, 97, 99, 104, 107, 110, 111, 115, 116, 118, 120, 124, 125, 127, 128, 129, 130, 131, 133, 134, 137, 140, 142, 149, 151, 152, 153, 155, 158, 164, 165, 185, 193, 194, 195, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 224, 226, 229, 230, 231, 233, 237, 238, 239, 240, 241, 242, 246, 247, 252, 253, 254, 256, 257, 259, 260, 262, 265, 268, 269, 270, 272, 273, 275, 287, 291, 292, 293, 297, 299, 300, 302, 303, 304, 306, 307], "providean": 234, "prudent": 12, "prudnikov": [113, 231], "prudnikov1990": [113, 231], "prufer": [75, 277], "prufer_rank": 82, "prufer_repr": 82, "prune": 79, "pset": 229, "pseudo": [80, 124, 128, 212, 214, 217], "pseudocod": 79, "pseudoinvers": [53, 124], "pseudoprim": 128, "pseudorandom": [128, 259], "pseudotensor": 96, "psg": 81, "psi": [16, 93, 96, 113, 163, 174, 175, 181, 189, 216, 221, 247], "psi_": [146, 167], "psi_n": [69, 167], "psi_nl": 69, "psi_nlm": 146, "psl2f5": 71, "psl_2": 71, "psm": 128, "pspace": 241, "pspace1": 241, "pspace2": 241, "pstack": 256, "psu": [215, 230], "psum": 217, "psw_primality_test": 128, "pt": [89, 97, 98, 99, 101, 102, 103, 104, 227], "pt1": 102, "pth": 61, "pub": [89, 265], "public": [0, 4, 11, 12, 69, 88, 89, 110, 131, 132, 134, 211, 212, 214, 215, 219, 234, 237, 241, 255, 265], "public_kei": 89, "publicli": 89, "publish": [4, 18, 113, 131, 132, 134, 231], "pug": 89, "puiseux": 218, "puk": 89, "pull": [2, 3, 4, 5, 8, 9, 12, 13, 14, 18, 43, 59, 69, 88, 93, 96, 148, 190, 222, 233, 237, 240, 293, 297, 299], "puppi": 89, "purdu": 265, "pure": [0, 2, 13, 14, 15, 27, 52, 54, 61, 89, 94, 115, 118, 120, 134, 144, 196, 210, 211, 212, 214, 217, 221, 241, 259], "purepoli": [124, 210, 217], "purpos": [4, 5, 9, 12, 13, 14, 15, 18, 22, 28, 30, 36, 40, 41, 43, 55, 68, 69, 79, 85, 88, 89, 115, 124, 128, 149, 196, 207, 211, 214, 218, 220, 221, 228, 237, 240, 246, 256, 258, 260, 269, 270, 287, 297], "push": [9, 11, 12, 18, 113, 148, 156, 299], "pushforward": 90, "put": [3, 4, 11, 13, 14, 15, 16, 39, 43, 50, 69, 84, 85, 88, 89, 90, 94, 118, 124, 163, 168, 172, 187, 188, 217, 221, 222, 230, 231, 233, 237, 242, 248, 253, 293, 297, 299], "puyoqrstvwx": 89, "pval": 239, "pw": 221, "px": [155, 181, 186, 247], "px_1": 186, "px_2": 186, "pxbra": [169, 181], "pxket": [169, 181, 186], "pxop": [169, 181, 186], "py": [2, 3, 4, 11, 12, 41, 45, 68, 88, 99, 113, 115, 124, 130, 169, 171, 207, 210, 212, 218, 221, 228, 231, 237, 238, 247, 250, 252, 257, 260], "py_mod": 69, "py_str": 69, "pycod": [69, 221], "pycodestyl": 12, "pycosat": 2, "pycqa": 12, "pydi": [22, 30, 200], "pyf": 254, "pyflak": 12, "pyglet": [2, 221], "pyglet_plot": 207, "pygletplot": [2, 207], "pylab": 116, "pymc": [2, 241], "pynam": 254, "pyodid": 250, "pypi": 59, "pyplot": [18, 30, 55, 111, 299], "pysat": 2, "pytest": [2, 3, 11, 12, 13, 249, 255, 257, 260, 284], "pytestreport": 252, "pythag": 51, "pythag_eq": 51, "pythag_v": 51, "pythagora": 159, "pythagorean": [51, 234], "pythogorean": 51, "python": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 15, 21, 22, 30, 38, 41, 42, 43, 47, 48, 49, 52, 53, 55, 57, 58, 59, 62, 63, 64, 67, 80, 88, 89, 92, 94, 100, 116, 118, 120, 124, 128, 129, 130, 136, 142, 200, 207, 208, 209, 210, 211, 212, 218, 220, 221, 229, 233, 237, 240, 242, 252, 253, 254, 255, 256, 259, 260, 265, 289, 290, 291, 292, 293, 295, 296, 297], "python3": [2, 8, 69, 130, 221], "python_trick": 259, "python_vers": 255, "pythonfinitefield": [211, 212], "pythonhashse": [12, 252], "pythoninteg": 212, "pythonmpq": [211, 212], "pythonr": [212, 219], "pythonrationalfield": 212, "pythontyp": 221, "pythonwarn": 13, "pz": [91, 142, 247], "q": [13, 14, 15, 16, 18, 22, 24, 25, 26, 27, 30, 31, 33, 35, 38, 41, 49, 51, 60, 61, 62, 63, 64, 65, 66, 69, 80, 84, 87, 88, 89, 96, 105, 110, 111, 113, 115, 117, 124, 130, 134, 136, 138, 144, 145, 148, 149, 152, 153, 154, 156, 158, 159, 160, 171, 185, 191, 194, 200, 201, 202, 204, 205, 207, 208, 209, 211, 212, 214, 216, 217, 218, 220, 221, 223, 231, 234, 237, 239, 241, 246, 247, 262, 265, 268, 269, 271, 274, 293, 297, 299, 302, 306, 311], "q0": [152, 200, 237, 265, 267], "q0_": 152, "q0_c1": 152, "q0_c2": 152, "q0_pc": 152, "q1": [21, 22, 25, 26, 27, 31, 32, 35, 36, 61, 124, 136, 152, 200, 202, 204, 205, 211, 265, 267, 299, 302, 303, 304, 306, 307, 309, 310, 311], "q1_": 152, "q1_c1": 152, "q1_c2": 152, "q1_pc": 152, "q1d": [21, 22, 25, 26, 27, 28, 32, 36, 205, 302, 303, 306, 309, 310, 311], "q1dd": 205, "q2": [21, 22, 25, 26, 31, 32, 35, 36, 61, 136, 152, 200, 202, 204, 205, 211, 265, 267, 299, 302, 303, 304, 306, 307, 309, 310, 311], "q2_": 152, "q2_pc": 152, "q2d": [21, 22, 25, 26, 204, 205, 302, 306, 309, 310, 311], "q2dd": 205, "q3": [21, 25, 35, 36, 61, 200, 202, 204, 265, 267, 299, 302, 304, 307, 309, 310, 311], "q3d": [21, 25, 309, 310, 311], "q4": [25, 202, 299, 302], "q4d": [25, 302], "q5": [202, 302], "q5d": 302, "q6": 202, "q_": [13, 88, 152, 205, 234, 237, 299], "q_0": [18, 152, 171, 234], "q_1": [27, 35, 152, 171, 217, 234, 299, 303, 304, 306, 307], "q_2": [27, 35, 152, 299, 303, 304, 306, 307], "q_3": [35, 299, 304, 307], "q_4": 299, "q_annihil": 191, "q_aug": 124, "q_creator": 191, "q_d": 154, "q_dep": [25, 27, 153, 158, 304], "q_depend": [25, 30, 153, 299, 302, 306], "q_domain": 212, "q_expr": 212, "q_i": [27, 115, 154], "q_ind": [22, 25, 27, 30, 153, 154, 158, 302, 304, 306, 309, 310], "q_j": 13, "q_j1": 152, "q_j2": 152, "q_m": 96, "q_n": 217, "q_op": [154, 306], "q_orient": [265, 267], "q_p1": 152, "q_p2": 152, "q_pc": 152, "q_pin": [13, 158], "q_slider": 158, "q_val": [51, 299], "q_x": [35, 104], "q_y": [35, 104], "qa": 30, "qad": 30, "qappli": [175, 176, 178, 180, 185, 282], "qb": [30, 209], "qbd": 30, "qd": [25, 149, 153, 158, 204, 299], "qd_dep": [27, 153], "qd_ind": [27, 153], "qd_op": 154, "qdot": [153, 204], "qdoubledot": 153, "qexpr": 186, "qft": [178, 187, 282], "qg": 214, "qho": 69, "qho_1d": [69, 167], "qiq": 89, "qmonserrat": 11, "qn": 88, "qo": 30, "qp": 35, "qq": [106, 107, 109, 110, 111, 115, 208, 209, 210, 211, 214, 216, 217, 218], "qq_col": 216, "qq_i": [210, 211, 214], "qq_matrix": 216, "qq_python": 212, "qquad": [94, 196, 214], "qr": 124, "qr_solv": 124, "qrdecomposit": [119, 124], "qrgk": 89, "qrgkkthrzqebpr": 89, "qrsolv": [119, 124], "qstate": 176, "qt": 2, "qtconsol": [59, 296], "qtf": 184, "quad": [46, 87, 88, 90, 92, 96, 115, 124], "quadrant": [94, 212, 240], "quadrat": [48, 51, 88, 89, 93, 115, 128, 208, 212, 216, 217, 234, 239, 241], "quadratic_congru": 128, "quadratic_distribut": 241, "quadratic_residu": 128, "quadraticu": 241, "quadratur": [88, 92, 115, 237], "quadrupl": [68, 217], "qualifi": [4, 13], "qualiti": [129, 221], "qualnam": [71, 134], "quantifi": 274, "quantil": 241, "quantit": [69, 193], "quantiti": [13, 14, 16, 18, 21, 28, 32, 33, 35, 36, 80, 88, 93, 96, 100, 105, 137, 148, 153, 170, 193, 195, 199, 216, 233, 241, 269, 274, 282, 299, 310], "quantity_simplifi": 195, "quantiz": [177, 282], "quantum": [13, 47, 146, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 206, 282, 301], "quarter": [152, 159, 163], "quarter_wave_retard": 163, "quartic": [48, 98, 217, 239], "quasi": 191, "quaternion": [36, 200, 204, 265, 267], "quaternionorient": [265, 267, 270], "qubit": [171, 175, 176, 177, 178, 184, 282], "qubit_to_matrix": 185, "qubit_valu": 185, "qubitbra": 185, "quebec": 215, "queri": [14, 15, 41, 42, 43, 62, 65, 66, 67, 69, 88, 100, 217, 233, 241], "query_gt": 241, "question": [3, 4, 5, 7, 11, 12, 21, 32, 39, 41, 79, 87, 90, 98, 105, 113, 115, 118, 128, 193, 196, 208, 211, 216, 231, 240, 259, 262], "quick": [4, 5, 11, 14, 43, 88, 124, 128, 233, 239, 260], "quicker": [79, 128], "quickli": [12, 14, 39, 43, 79, 80, 88, 89, 92, 93, 128, 210, 214, 217, 230, 240, 256], "quickstart": 9, "quiet": 116, "quin": 118, "quintic": [48, 217, 239], "quirk": 42, "quit": [15, 35, 39, 43, 96, 124, 128, 207, 218, 220, 231, 239, 259, 274, 289, 292], "quo": [211, 212, 214, 217], "quo_ground": [212, 217], "quot": [4, 11, 16, 69, 118, 221, 262], "quotat": 5, "quotedstr": 69, "quotient": [87, 88, 91, 94, 128, 208, 209, 211, 214, 217, 231, 233, 237], "quotient_codomain": 208, "quotient_domain": 208, "quotient_hom": 208, "quotient_modul": 208, "quotient_r": [208, 212], "quotientmodul": 208, "quotientmoduleel": 208, "quotientr": [208, 212], "qv": 212, "qwerti": 246, "qwp": 163, "r": [0, 4, 5, 8, 9, 12, 13, 16, 18, 22, 27, 28, 29, 30, 31, 33, 35, 39, 41, 43, 48, 61, 68, 69, 70, 72, 79, 80, 88, 89, 90, 92, 93, 94, 101, 102, 104, 106, 110, 111, 113, 115, 124, 128, 130, 131, 134, 137, 140, 144, 146, 149, 152, 153, 154, 155, 156, 158, 159, 160, 163, 187, 188, 191, 192, 194, 200, 201, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 221, 222, 223, 228, 229, 231, 233, 234, 237, 239, 240, 241, 247, 252, 254, 256, 265, 268, 270, 271, 272, 275, 297, 299, 302, 303, 306, 308, 309, 310, 311], "r0": [48, 88, 136, 217], "r1": [33, 48, 61, 88, 98, 101, 117, 124, 136, 137, 164, 200, 217, 265], "r10": [65, 136], "r100": 87, "r1000": 241, "r1001": 241, "r1002": 241, "r1003": 241, "r1004": 241, "r1005": 241, "r1006": 241, "r1007": 241, "r1008": 241, "r1009": 241, "r101": 87, "r1010": 241, "r1011": 241, "r1012": 241, "r1013": 241, "r1014": 241, "r1015": 241, "r1016": 241, "r1017": 241, "r1018": 241, "r1019": 241, "r102": 87, "r1020": 241, "r1021": 241, "r1022": 241, "r1023": 241, "r1024": 241, "r1025": 241, "r1026": 241, "r1027": 241, "r1028": 241, "r1029": 241, "r103": 87, "r1030": 241, "r1031": 241, "r1032": 241, "r1033": 241, "r1034": 241, "r1035": 241, "r1036": 241, "r1037": 241, "r1038": 241, "r1039": 241, "r104": 87, "r1040": 241, "r1041": 241, "r1042": 241, "r1043": 241, "r1044": 241, "r1045": 241, "r1046": 241, "r1047": 241, "r1048": 241, "r1049": 241, "r105": 87, "r1050": 241, "r1051": 241, "r1052": 253, "r1053": 259, "r1054": 259, "r1055": 259, "r1056": 259, "r1057": 259, "r1058": 259, "r1059": 259, "r106": 87, "r1060": 259, "r1061": 259, "r1062": 259, "r1063": 259, "r1064": 259, "r1065": 259, "r1066": 259, "r1067": 259, "r1068": 259, "r1069": 259, "r107": 87, "r1070": 259, "r1071": 259, "r1072": 259, "r1073": 262, "r1074": 265, "r1075": 265, "r108": 87, "r109": 87, "r11": 65, "r110": 88, "r111": 88, "r112": 88, "r113": 88, "r114": 88, "r115": 88, "r116": 88, "r117": 88, "r118": 88, "r119": 88, "r12": 65, "r120": 88, "r121": 88, "r122": 88, "r123": 88, "r124": 88, "r125": 88, "r126": 88, "r127": 88, "r128": 88, "r129": 88, "r13": [65, 136], "r130": 88, "r131": 88, "r132": 88, "r133": 88, "r134": 88, "r135": 88, "r136": 88, "r137": 88, "r138": 88, "r139": 88, "r14": 65, "r140": 88, "r141": 88, "r142": 88, "r143": 88, "r144": 88, "r145": 88, "r146": 88, "r147": 88, "r148": 88, "r149": 88, "r15": [65, 136], "r150": 88, "r151": 89, "r152": 89, "r153": 89, "r154": 89, "r155": 89, "r156": 89, "r157": 89, "r158": 89, "r159": 89, "r16": 65, "r160": 89, "r161": 89, "r162": 89, "r163": 89, "r164": 89, "r165": 89, "r166": 89, "r167": 89, "r168": 89, "r169": 89, "r17": 65, "r170": 89, "r171": 89, "r174": 89, "r175": 90, "r176": 90, "r177": 90, "r178": 91, "r179": 91, "r18": 65, "r180": 91, "r181": 91, "r182": 91, "r183": 91, "r184": 91, "r185": 91, "r186": 91, "r187": 91, "r188": 91, "r189": 91, "r19": 65, "r190": 91, "r191": 91, "r192": 91, "r193": 91, "r194": 91, "r195": 91, "r196": 91, "r197": 91, "r198": 91, "r199": 91, "r1_x": 33, "r1_y": 33, "r2": [48, 61, 88, 90, 101, 117, 124, 136, 137, 164, 200, 217, 221, 233, 265], "r20": 65, "r200": 91, "r201": 91, "r202": 91, "r203": 91, "r204": 91, "r205": 91, "r206": 91, "r207": 93, "r208": 93, "r209": 93, "r21": 65, "r210": 93, "r211": 93, "r212": 93, "r213": 93, "r214": 93, "r215": 93, "r216": 93, "r217": 93, "r218": 93, "r219": 93, "r22": 65, "r220": 93, "r221": 93, "r222": 93, "r223": 93, "r224": 93, "r225": 93, "r226": 93, "r227": 93, "r228": 93, "r229": 93, "r23": 65, "r230": 93, "r231": 93, "r233": 93, "r234": 93, "r235": 93, "r236": 93, "r237": 93, "r238": 93, "r239": 93, "r24": 65, "r240": 93, "r241": 93, "r242": 93, "r243": 93, "r244": 93, "r245": 93, "r246": 93, "r247": 93, "r248": 93, "r249": 93, "r25": 65, "r250": 93, "r251": 93, "r252": 93, "r253": 93, "r254": 93, "r255": 93, "r256": 93, "r257": 93, "r258": 93, "r259": 93, "r26": 65, "r260": 93, "r261": 93, "r262": 93, "r263": 93, "r264": 93, "r265": 93, "r266": 93, "r267": 93, "r268": 93, "r269": 93, "r27": 65, "r270": 93, "r271": 93, "r272": 93, "r273": 93, "r274": 93, "r275": 93, "r276": 94, "r277": 94, "r278": 94, "r279": 94, "r28": 65, "r280": 94, "r281": 94, "r282": 94, "r283": 94, "r284": 94, "r285": 94, "r286": 94, "r287": 94, "r288": 94, "r289": 94, "r29": 65, "r290": 94, "r291": 94, "r292": 94, "r293": 94, "r294": 94, "r295": 94, "r296": 94, "r297": 94, "r298": 94, "r299": 94, "r2_p": 90, "r2_r": 90, "r3": [48, 61, 117, 136, 137, 233], "r30": 65, "r300": 94, "r301": 94, "r302": 94, "r303": 94, "r304": 94, "r305": 94, "r306": 94, "r307": 94, "r308": 94, "r309": 94, "r31": 67, "r310": 94, "r311": 94, "r312": 94, "r313": 94, "r314": 94, "r315": 94, "r316": 94, "r317": 94, "r318": 94, "r319": 94, "r32": 67, "r320": 94, "r321": 94, "r322": 94, "r323": 94, "r324": 94, "r325": 94, "r326": 94, "r327": 94, "r328": 94, "r329": 94, "r33": 67, "r330": 94, "r331": 94, "r332": 94, "r333": 94, "r334": 94, "r335": 94, "r336": 94, "r337": 94, "r338": 94, "r339": 94, "r34": 67, "r340": 94, "r341": 94, "r342": 96, "r343": 96, "r344": 96, "r345": 96, "r346": 96, "r347": 96, "r348": 96, "r349": 96, "r35": 67, "r350": 96, "r351": 96, "r352": 96, "r353": 96, "r354": 96, "r355": 96, "r356": 96, "r357": 96, "r358": 96, "r359": 96, "r36": 67, "r360": 96, "r361": 96, "r362": 96, "r363": 96, "r364": 96, "r365": 96, "r366": 96, "r367": 96, "r368": 96, "r369": 96, "r37": 67, "r370": 96, "r371": 96, "r372": 96, "r373": 96, "r374": 96, "r375": 96, "r376": 96, "r377": 96, "r378": 96, "r379": 96, "r38": 67, "r380": 96, "r381": 96, "r382": 96, "r383": 96, "r384": 96, "r385": 96, "r386": 96, "r387": 96, "r388": 96, "r389": 96, "r39": 69, "r390": 96, "r391": 96, "r392": 96, "r393": 96, "r394": 96, "r395": 96, "r396": 96, "r397": 96, "r398": 96, "r399": 96, "r4": [48, 117, 136], "r40": 69, "r400": 96, "r401": 96, "r402": 96, "r403": 96, "r404": 96, "r405": 96, "r406": 96, "r407": 96, "r408": 96, "r409": 96, "r41": 71, "r410": 96, "r411": 96, "r412": 96, "r413": 96, "r414": 96, "r415": 96, "r416": 96, "r417": 96, "r418": 96, "r419": 96, "r420": 96, "r421": 96, "r422": 96, "r423": 96, "r424": 96, "r425": 96, "r426": 96, "r427": 96, "r428": 96, "r429": 96, "r43": 71, "r430": 96, "r431": 96, "r432": 96, "r433": 96, "r434": 96, "r435": 96, "r436": 96, "r437": 96, "r438": 96, "r439": 96, "r44": [71, 72], "r440": 96, "r441": 96, "r442": 96, "r443": 96, "r444": 96, "r445": 96, "r446": 96, "r447": 96, "r448": 96, "r449": 96, "r45": 72, "r450": 96, "r451": 96, "r452": 96, "r453": 96, "r454": 96, "r455": 96, "r456": 96, "r457": 96, "r458": 96, "r459": 96, "r46": 72, "r460": 96, "r461": 96, "r462": 96, "r463": 96, "r464": 96, "r465": 96, "r466": 96, "r467": 96, "r468": 96, "r469": 96, "r47": 72, "r470": 96, "r471": 96, "r472": 96, "r473": 96, "r474": 96, "r475": 96, "r476": 96, "r477": 96, "r478": 96, "r479": 96, "r48": 74, "r480": 96, "r481": 96, "r482": 96, "r483": 96, "r484": 96, "r485": 96, "r486": 96, "r487": 96, "r488": 96, "r489": 96, "r49": 74, "r490": 96, "r491": 96, "r492": 96, "r493": 96, "r494": 96, "r495": 96, "r496": 96, "r497": 96, "r498": 96, "r499": 96, "r5": [63, 233], "r50": 74, "r500": 96, "r501": 96, "r502": 96, "r503": 96, "r504": 96, "r505": 96, "r506": 96, "r507": 96, "r508": 96, "r509": 96, "r51": 74, "r510": 96, "r511": 96, "r512": 96, "r513": 96, "r514": 96, "r515": 96, "r516": 96, "r517": 96, "r518": 96, "r519": 96, "r52": 74, "r520": 96, "r521": 96, "r522": 96, "r523": 96, "r524": 96, "r525": 96, "r526": 96, "r527": 96, "r528": 96, "r529": 96, "r53": 74, "r530": 96, "r531": 96, "r532": 96, "r533": 96, "r534": 96, "r535": 96, "r536": 96, "r537": 96, "r538": 96, "r539": 96, "r54": 74, "r540": 96, "r541": 96, "r542": 96, "r543": 96, "r544": 96, "r545": 98, "r546": 98, "r547": 98, "r548": 98, "r549": 98, "r55": 74, "r550": 98, "r551": 98, "r552": 98, "r553": 104, "r554": 104, "r555": 104, "r556": 104, "r557": 104, "r558": 104, "r559": 104, "r560": 104, "r561": 104, "r562": 104, "r563": 105, "r564": 105, "r565": 110, "r566": 110, "r567": 115, "r568": 115, "r569": 115, "r57": 76, "r570": 115, "r571": 115, "r572": 115, "r573": 115, "r574": 115, "r575": 115, "r576": 115, "r577": 115, "r578": 115, "r579": 115, "r58": 76, "r580": 115, "r581": 115, "r582": 115, "r583": 115, "r584": 115, "r585": 115, "r586": 115, "r587": 115, "r588": 115, "r589": 115, "r59": 76, "r590": 115, "r591": 115, "r592": 115, "r593": 115, "r594": 115, "r595": 115, "r596": 116, "r597": 116, "r598": 117, "r599": 117, "r6": 63, "r60": 76, "r600": 118, "r601": 118, "r602": 118, "r603": 118, "r604": 118, "r605": 118, "r606": 118, "r607": 118, "r608": 120, "r609": 124, "r61": 77, "r610": 124, "r611": 124, "r612": 124, "r613": 124, "r614": 124, "r615": 124, "r616": 124, "r617": 124, "r618": 124, "r619": 124, "r62": 79, "r620": 124, "r621": 124, "r622": 124, "r623": 124, "r624": 124, "r625": 124, "r626": 124, "r627": 124, "r628": 124, "r629": 124, "r63": 79, "r630": 124, "r631": 124, "r632": 124, "r633": 124, "r634": 124, "r635": 124, "r636": 124, "r637": 124, "r638": 124, "r639": 124, "r64": 79, "r640": 124, "r641": 124, "r642": 124, "r643": 124, "r644": 124, "r645": 124, "r646": 124, "r647": 125, "r648": 128, "r649": 128, "r65": 79, "r650": 128, "r651": 128, "r652": 128, "r653": 128, "r654": 128, "r655": 128, "r656": 128, "r657": 128, "r658": 128, "r659": 128, "r66": 79, "r660": 128, "r661": 128, "r662": 128, "r663": 128, "r664": 128, "r665": 128, "r666": 128, "r667": 128, "r668": 128, "r669": 128, "r67": 79, "r670": 128, "r671": 128, "r672": 128, "r673": 128, "r674": 128, "r675": 128, "r676": 128, "r677": 128, "r678": 128, "r679": 128, "r68": 79, "r680": 128, "r681": 128, "r682": 128, "r683": 128, "r684": 128, "r685": 128, "r686": 128, "r687": 128, "r688": 128, "r689": 128, "r69": 79, "r690": 128, "r691": 128, "r692": 128, "r693": 128, "r694": 128, "r695": 128, "r696": 128, "r697": 128, "r698": 128, "r699": 128, "r7": 64, "r70": 79, "r700": 128, "r701": 128, "r702": 128, "r703": 128, "r704": 128, "r705": 128, "r706": 128, "r707": 128, "r708": 128, "r709": 128, "r71": 79, "r710": 128, "r711": 128, "r712": 128, "r713": 128, "r714": 128, "r715": 128, "r716": 128, "r717": 128, "r718": 128, "r719": 128, "r720": 131, "r721": 132, "r722": 132, "r723": 132, "r724": 132, "r725": 132, "r726": 132, "r727": 132, "r728": 134, "r729": 136, "r73": 79, "r730": 142, "r731": 142, "r732": 142, "r733": 142, "r734": 144, "r735": 144, "r736": 144, "r737": 147, "r738": 147, "r739": 154, "r740": 160, "r741": 160, "r742": 160, "r743": 162, "r744": 163, "r745": 163, "r746": 163, "r747": 164, "r748": 166, "r749": 168, "r75": 79, "r750": 170, "r751": 170, "r752": 170, "r753": 170, "r754": 172, "r755": 173, "r756": 174, "r757": 174, "r758": 177, "r759": 177, "r76": 79, "r760": 177, "r761": 177, "r762": 177, "r763": 179, "r764": 180, "r765": 180, "r766": 180, "r767": 188, "r768": 188, "r769": 189, "r77": 79, "r770": 189, "r771": 191, "r772": 210, "r773": 210, "r774": 210, "r775": 210, "r776": 210, "r777": 210, "r778": 210, "r779": 210, "r780": 210, "r781": 210, "r782": 210, "r783": 212, "r784": 214, "r785": 214, "r786": 214, "r787": 214, "r788": 214, "r789": 214, "r79": [79, 80], "r790": 214, "r791": 214, "r792": 214, "r793": 214, "r794": 214, "r795": 214, "r796": 214, "r797": 214, "r798": 214, "r799": 214, "r8": 64, "r80": 80, "r800": 214, "r801": 214, "r802": 216, "r803": 216, "r804": 216, "r805": 216, "r806": 216, "r807": 216, "r808": 217, "r809": 217, "r81": 80, "r810": 217, "r811": 217, "r812": 217, "r813": 217, "r814": 217, "r815": 217, "r816": 217, "r817": 217, "r818": 217, "r819": 217, "r82": 80, "r820": 217, "r821": 217, "r822": 217, "r823": 218, "r824": 223, "r825": 223, "r826": 223, "r827": 223, "r828": 223, "r829": 223, "r83": 80, "r830": 224, "r831": 224, "r832": 224, "r833": 226, "r834": 226, "r835": 228, "r836": 228, "r837": 229, "r838": 229, "r839": 229, "r84": 80, "r840": 229, "r841": 229, "r842": 229, "r843": 229, "r844": 229, "r845": 229, "r846": 229, "r847": 229, "r848": 229, "r849": 229, "r85": 80, "r850": 229, "r851": 229, "r852": 230, "r853": 230, "r854": 230, "r855": 233, "r856": 233, "r857": 233, "r858": 234, "r859": 234, "r86": 80, "r860": 234, "r861": 234, "r862": 234, "r863": 234, "r864": 234, "r865": 234, "r866": 234, "r867": 234, "r868": 234, "r869": 234, "r87": 80, "r870": 234, "r871": 234, "r872": 234, "r873": 234, "r874": 234, "r875": 234, "r876": 234, "r877": 234, "r878": 234, "r879": 234, "r88": 80, "r880": 234, "r881": 234, "r882": 234, "r883": 234, "r884": 237, "r885": 237, "r886": 237, "r887": 237, "r888": 237, "r889": 237, "r89": 80, "r890": 239, "r891": 239, "r892": 239, "r893": 239, "r894": 239, "r895": 239, "r896": 241, "r897": 241, "r898": 241, "r899": 241, "r9": 65, "r90": 80, "r900": 241, "r901": 241, "r902": 241, "r903": 241, "r904": 241, "r905": 241, "r906": 241, "r907": 241, "r908": 241, "r909": 241, "r91": 80, "r910": 241, "r911": 241, "r912": 241, "r913": 241, "r914": 241, "r915": 241, "r916": 241, "r917": 241, "r918": 241, "r919": 241, "r92": 81, "r920": 241, "r921": 241, "r922": 241, "r923": 241, "r924": 241, "r925": 241, "r926": 241, "r927": 241, "r928": 241, "r929": 241, "r93": 82, "r930": 241, "r931": 241, "r932": 241, "r933": 241, "r934": 241, "r935": 241, "r936": 241, "r937": 241, "r938": 241, "r939": 241, "r94": 82, "r940": 241, "r941": 241, "r942": 241, "r943": 241, "r944": 241, "r945": 241, "r946": 241, "r947": 241, "r948": 241, "r949": 241, "r95": 86, "r950": 241, "r951": 241, "r952": 241, "r953": 241, "r954": 241, "r955": 241, "r956": 241, "r957": 241, "r958": 241, "r959": 241, "r96": 86, "r960": 241, "r961": 241, "r962": 241, "r963": 241, "r964": 241, "r965": 241, "r966": 241, "r967": 241, "r968": 241, "r969": 241, "r97": 86, "r970": 241, "r971": 241, "r972": 241, "r973": 241, "r974": 241, "r975": 241, "r976": 241, "r977": 241, "r978": 241, "r979": 241, "r98": 87, "r980": 241, "r981": 241, "r982": 241, "r983": 241, "r984": 241, "r985": 241, "r986": 241, "r987": 241, "r988": 241, "r989": 241, "r99": 87, "r990": 241, "r991": 241, "r992": 241, "r993": 241, "r994": 241, "r995": 241, "r996": 241, "r997": 241, "r998": 241, "r999": 241, "r_": [88, 146, 192, 218], "r_0": 136, "r_1": [70, 208, 218], "r_10": 136, "r_13": 136, "r_15": 136, "r_2": 70, "r_20": 136, "r_7": 136, "r_8": 136, "r_a_i": 138, "r_a_x": 138, "r_aug": 124, "r_b": 55, "r_b_x": 138, "r_b_y": 138, "r_f": [55, 217], "r_g": 217, "r_i": [70, 218], "r_j": 231, "r_k": [70, 184], "r_n": 208, "r_nl": [69, 146, 192], "r_node_1_i": 140, "r_node_1_x": 140, "r_node_2_i": 140, "r_pt": 22, "r_val": 18, "r_x": [33, 201], "r_y": [33, 201], "r_z": [33, 201], "ra": 223, "rabin": 128, "racah": 206, "rad": [13, 22, 89, 142, 216, 299], "rad2deg": 299, "rad_ration": 233, "rademach": [128, 241], "rademacher_distribut": 241, "radial": [146, 192, 306], "radian": [22, 61, 94, 97, 98, 99, 101, 102, 103, 124, 136, 142, 164, 165, 200], "radiat": 241, "radic": [12, 16, 48, 88, 89, 124, 208, 216, 217, 233, 239, 240], "radii": 98, "radioeng": 91, "radiu": [96, 98, 102, 104, 156, 159, 160, 164, 207, 240, 241, 275, 299, 303, 309, 311], "radius_of_converg": 96, "radix": 91, "radsimp": [88, 233], "rag": 124, "rai": [4, 98, 100, 101, 102, 104, 105, 160, 164], "rail": [89, 158], "rail_fence_ciph": 89, "rail_fram": 158, "rail_mass": 158, "rail_masscent": 158, "railfenc": 89, "raini": 241, "rais": [3, 11, 12, 13, 14, 16, 33, 36, 37, 41, 42, 43, 62, 64, 67, 69, 74, 77, 80, 88, 89, 90, 92, 94, 97, 98, 101, 103, 104, 105, 113, 115, 120, 124, 125, 127, 128, 130, 142, 144, 159, 165, 177, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 221, 223, 229, 233, 234, 236, 237, 238, 239, 240, 241, 245, 247, 250, 252, 254, 257, 259, 262, 272, 293], "raise_on_deprec": 252, "raise_on_error": 252, "raised_cosine_distribut": 241, "raisedcosin": 241, "rake": 302, "ram": 11, "ramanujan": [92, 93, 128], "ramif": 216, "ramp": [136, 137], "ramp_funct": 142, "ramp_response_numerical_data": 142, "ramp_response_plot": 142, "ran": 12, "randal": 215, "randint": [88, 124, 214], "randmatrix": 124, "random": [2, 4, 13, 71, 72, 77, 79, 80, 86, 89, 98, 101, 102, 122, 124, 128, 175, 187, 207, 212, 214, 216, 217, 221, 251, 252, 255, 259, 289, 293, 297], "random_bitstr": 72, "random_circuit": 175, "random_complex_numb": [13, 88], "random_derang": 259, "random_integer_partit": 77, "random_point": [98, 101, 102], "random_poli": 217, "random_pr": 79, "random_stab": 79, "random_symbol": 241, "randomdomain": 241, "randomindexedsymbol": 241, "randomis": [41, 249, 284], "randomli": [12, 79, 88, 89, 128, 185], "randommatrixsymbol": 241, "randomst": 241, "randomsymbol": 241, "randomvari": 241, "randprim": [74, 128], "randrang": 88, "randtest": 251, "rang": [4, 13, 14, 15, 18, 20, 39, 43, 48, 51, 52, 67, 69, 77, 78, 79, 80, 82, 84, 88, 89, 93, 94, 96, 102, 124, 128, 132, 137, 140, 142, 146, 160, 191, 207, 210, 211, 212, 213, 214, 216, 217, 218, 223, 224, 227, 229, 230, 233, 237, 239, 240, 241, 242, 246, 252, 259, 286, 287, 297, 304], "range1": 207, "range2": 207, "range_i": 207, "range_u": 207, "range_v": 207, "range_x": 207, "rangl": [70, 79, 130, 170, 188, 206], "rank": [65, 69, 70, 72, 77, 79, 80, 82, 83, 84, 103, 117, 124, 125, 200, 202, 208, 210, 212, 214, 216, 242, 246, 247, 293], "rank_binari": 83, "rank_decomposit": 124, "rank_factor": 124, "rank_grai": 83, "rank_lexicograph": 83, "rank_nonlex": 80, "rank_trotterjohnson": 80, "rankcheck": 124, "rankdir": [221, 296], "rao": [18, 131, 132, 134, 299], "raphson": 69, "rapidli": [53, 88, 92, 113, 228], "rare": [4, 12, 14, 43, 88, 237, 241, 250, 289], "rasch": 206, "rasch03": 206, "rat": 128, "rat_clear_denom": 217, "rate": [16, 35, 131, 132, 148, 241, 272, 287, 302], "rather": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 30, 32, 35, 37, 39, 41, 42, 43, 48, 52, 55, 56, 57, 60, 65, 69, 70, 71, 79, 80, 81, 88, 92, 94, 99, 104, 106, 113, 118, 120, 124, 128, 130, 133, 134, 158, 171, 185, 189, 191, 195, 208, 210, 211, 214, 217, 219, 224, 231, 234, 236, 237, 240, 241, 243, 256, 259, 260, 274, 289, 291, 292, 309], "rathnayak": 0, "ratint": 115, "ratint_logpart": 115, "ratint_ratpart": 115, "ratio": [46, 65, 78, 79, 87, 88, 92, 93, 96, 98, 101, 102, 103, 104, 119, 128, 132, 144, 164, 196, 210, 221, 230, 233, 239], "ration": [12, 15, 41, 43, 48, 62, 64, 65, 67, 69, 87, 88, 92, 93, 94, 96, 98, 101, 103, 105, 109, 113, 115, 116, 120, 124, 128, 130, 144, 160, 193, 206, 209, 210, 214, 215, 216, 218, 221, 226, 229, 230, 231, 233, 234, 236, 239, 240, 241, 259, 265, 288, 289, 292, 296], "rational": 12, "rational_algorithm": 223, "rational_convers": 233, "rational_funct": 88, "rational_independ": 223, "rational_laurent_seri": 237, "rational_numb": [41, 65], "rational_parametr": 265, "rationalfield": [211, 212], "rationalhandl": 65, "rationalpred": 65, "rationalriccati": 237, "rationaltool": [115, 217], "ratsimp": [11, 88, 233], "ratsimpmodprim": 233, "raw": [4, 5, 69, 88, 89, 94, 129, 130, 185, 190, 210, 211, 212, 217, 229, 233, 296], "rawlin": 262, "ray2d": [101, 104], "ray3d": [101, 102, 164], "ray_transfer_matrix_analysi": 160, "rayleigh": [160, 241], "rayleigh2waist": 160, "rayleigh_distribut": 241, "rayleighdistribut": 241, "raytransfermatrix": 160, "rb": [28, 55, 155], "rb_frame": 28, "rb_masscent": 28, "rcall": [88, 90], "rceil": [113, 130], "rcirc": 99, "rcode": 221, "rcollect": 233, "rd": [22, 124, 221], "re": [3, 11, 13, 16, 33, 43, 66, 67, 69, 79, 80, 88, 89, 92, 94, 96, 113, 115, 124, 200, 202, 208, 214, 221, 222, 223, 229, 230, 231, 237, 239, 252, 268, 270, 287, 289, 292], "reach": [41, 128, 144, 216, 217, 237], "reachabl": [231, 241], "reaction": [136, 137, 138, 140, 148], "reaction_bodi": 149, "reaction_forc": 136, "reaction_fram": 148, "reaction_load": [136, 137, 138, 140], "reaction_mo": 136, "reaction_point": 149, "read": [3, 4, 5, 9, 11, 12, 13, 14, 30, 35, 36, 43, 57, 80, 94, 113, 128, 137, 207, 210, 211, 212, 218, 221, 234, 247, 248, 256, 260, 290, 296, 297], "readabl": [4, 12, 14, 21, 60, 68, 116, 217, 220, 221, 228, 230], "reader": [4, 5, 11, 12, 18, 28, 43, 68, 70, 208, 221, 256, 290, 295], "readi": [3, 11, 41, 158, 211, 221, 237, 304], "readili": [101, 124], "readlin": 252, "readm": 2, "readthedoc": [5, 116, 260], "reagent": 216, "real": [12, 13, 14, 15, 16, 18, 22, 30, 38, 39, 41, 42, 43, 48, 51, 52, 61, 63, 65, 66, 67, 69, 80, 88, 89, 90, 92, 93, 94, 95, 96, 100, 104, 105, 110, 113, 115, 118, 120, 124, 130, 134, 140, 144, 146, 148, 155, 160, 163, 164, 171, 189, 202, 206, 209, 212, 216, 217, 218, 221, 222, 224, 228, 229, 231, 233, 236, 237, 239, 240, 241, 246, 250, 254, 291, 297, 298, 299], "real_el": 65, "real_field": 61, "real_gaunt": 206, "real_num": 105, "real_numb": [41, 65], "real_root": [94, 217, 239], "realelementshandl": 65, "realelementspred": 65, "realfield": [211, 212], "realgaunt": 206, "realhandl": 65, "realist": 128, "realiz": [16, 71, 73, 79, 90, 93, 118, 128, 208, 209, 214, 241, 306], "realli": [3, 11, 12, 13, 14, 15, 39, 41, 42, 43, 88, 100, 128, 193, 210, 211, 220, 222, 228, 230, 231, 233, 237, 253, 262, 289, 291], "realnormedalgebra": 61, "realnumb": 88, "realpred": 65, "reals_onli": 124, "rear": 302, "rearrang": [18, 25, 26, 52, 145, 153, 175, 237], "reason": [3, 5, 11, 12, 13, 14, 15, 18, 22, 23, 27, 36, 37, 41, 42, 43, 54, 55, 61, 69, 80, 86, 88, 92, 96, 113, 116, 121, 124, 151, 153, 154, 162, 196, 205, 210, 211, 214, 215, 218, 221, 229, 231, 233, 237, 240, 250, 256, 257, 259, 260, 286, 287, 291, 292, 293, 299, 302, 309], "reassembl": 217, "reassign": 22, "rebas": [9, 11], "rebuild": [14, 15, 43, 88, 217, 292], "rebuilt": [15, 292], "recal": [43, 88, 124, 214, 216, 231, 289, 291, 292, 298], "recalcul": [153, 217], "recast": [113, 233, 239, 240], "reccur": 241, "receiv": [57, 71, 88, 89, 128, 149, 186, 216, 246], "recent": [3, 12, 13, 14, 16, 38, 41, 42, 43, 48, 50, 52, 53, 54, 55, 56, 57, 62, 63, 64, 69, 70, 80, 88, 89, 92, 96, 98, 115, 118, 119, 120, 121, 124, 126, 127, 130, 144, 206, 208, 210, 211, 212, 214, 217, 220, 228, 229, 237, 239, 240, 250, 253, 255, 257, 259, 260, 262, 289, 293], "recherch": 218, "recip": [221, 259], "reciph": 89, "reciproc": [124, 241, 297], "reciprocal_distribut": 241, "reciprocaltrigonometricfunct": 43, "recogn": [13, 14, 16, 48, 53, 55, 88, 89, 93, 103, 128, 136, 145, 209, 212, 220, 229, 230, 239, 246, 289], "recognis": [113, 211, 231, 233], "recommend": [4, 8, 9, 11, 13, 14, 15, 16, 17, 18, 21, 25, 30, 35, 41, 43, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 68, 69, 88, 89, 92, 124, 131, 132, 134, 185, 200, 209, 210, 211, 212, 218, 234, 237, 240, 246, 250, 257, 269, 270, 295, 298, 299], "recomput": [84, 217], "reconnect": 69, "reconstruct": [14, 46, 89, 124, 210, 214, 234, 292], "reconstuct": 214, "record": [11, 71, 82, 88, 216, 221, 252], "recov": [89, 115, 130, 196, 214, 216, 217, 234, 237], "recreat": [14, 88, 152], "recrus": 214, "rectangl": [98, 99, 101, 103, 104, 207, 217], "rectangular": [124, 207, 229, 240, 269], "rectum": 98, "recur": 88, "recurr": [87, 93, 110, 124, 216, 227, 233, 237, 241, 261], "recurrence_memo": 261, "recurs": [15, 16, 38, 41, 43, 67, 88, 93, 113, 115, 118, 124, 128, 132, 207, 214, 217, 218, 221, 222, 226, 228, 233, 239, 240, 245, 250, 252, 256, 257, 259, 288, 297], "recursionerror": 14, "recursiveseq": 227, "red": [12, 207], "red_groebn": 214, "redefin": [12, 14, 25, 27, 43, 80, 88, 158, 209, 260], "redistribut": [0, 217], "reduc": [5, 16, 27, 42, 46, 49, 56, 62, 64, 66, 70, 84, 88, 89, 91, 93, 94, 96, 103, 104, 113, 115, 124, 128, 131, 135, 144, 145, 173, 191, 208, 210, 211, 212, 214, 215, 216, 217, 218, 222, 227, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 243, 259, 260, 293], "reduce_abs_inequ": 236, "reduce_alg_num": 216, "reduce_anp": 216, "reduce_el": [208, 216], "reduce_inequ": [37, 50, 236, 239], "reduce_rational_inequ": 236, "reduce_toti": 13, "reduced_expr": [222, 233], "reduced_mod_p": 216, "reduced_row_echelon_form": 210, "reduced_toti": [89, 93, 128], "reduct": [70, 124, 154, 210, 214, 216, 234], "reduction_formula": 230, "redund": [3, 12, 18, 41, 79, 86, 118, 124, 131, 132, 134, 210, 237, 254, 299], "reev": 80, "reevalu": 289, "reexpress": [200, 270], "ref": [3, 30, 79, 94, 124, 142, 226, 241, 255, 293], "ref_fram": 158, "refactor": [13, 237, 245, 256], "refer": [2, 3, 5, 11, 12, 13, 14, 15, 16, 19, 20, 22, 23, 25, 28, 30, 31, 32, 33, 35, 39, 42, 43, 44, 48, 50, 51, 52, 53, 54, 56, 57, 59, 63, 64, 65, 67, 69, 72, 74, 76, 77, 79, 80, 81, 82, 86, 89, 91, 93, 94, 96, 98, 103, 104, 105, 110, 116, 117, 118, 123, 125, 129, 131, 132, 134, 136, 142, 144, 145, 147, 148, 149, 152, 153, 154, 155, 156, 158, 160, 162, 164, 168, 170, 172, 173, 174, 177, 179, 180, 188, 189, 191, 200, 201, 202, 204, 210, 211, 213, 221, 223, 224, 226, 229, 233, 236, 237, 238, 239, 241, 247, 256, 259, 260, 262, 265, 269, 270, 274, 282, 283, 289, 293, 294, 297, 298, 300, 305], "referenc": [5, 11, 72, 77, 128, 158, 188, 216], "reference_fram": [150, 155, 200], "reference_quant": 198, "referencefram": [4, 13, 18, 22, 25, 26, 27, 28, 30, 31, 33, 34, 35, 134, 148, 149, 150, 152, 153, 155, 156, 158, 159, 200, 201, 202, 204, 205, 299, 302, 303, 304, 306, 307, 309, 310, 311], "refin": [62, 64, 88, 124, 208, 212, 216, 217, 233, 254, 277], "refine_ab": 66, "refine_arg": 66, "refine_atan2": 66, "refine_im": 66, "refine_matrixel": 66, "refine_pow": 66, "refine_r": 66, "refine_root": [212, 216, 217], "refine_sign": 66, "refinementfail": 214, "reflect": [50, 57, 72, 76, 80, 88, 98, 99, 104, 117, 140, 160, 163, 164, 200], "reflected_port": 163, "reflected_pow": 163, "reflective_filt": 163, "reflex": 101, "reform": 101, "reformat": 187, "refract": [160, 162, 164, 165], "refraction_angl": 164, "refractive_index": 162, "refus": [41, 297], "reg_point": 265, "regard": [31, 43, 70, 89, 96, 116, 191, 208, 209, 223, 239, 240], "regardless": [3, 4, 43, 80, 88, 115, 128, 210, 214, 229, 233, 259, 269, 274, 297], "regex": 13, "regg": 206, "regge58": 206, "regge59": 206, "region": [67, 96, 105, 115, 136, 207, 229, 237, 240, 241, 265, 268, 275], "regist": [13, 62, 63, 64, 89, 187], "register_handl": [13, 62], "register_mani": [13, 63, 64], "registr": 13, "registri": 88, "regress": 11, "regul": 216, "regular": [3, 11, 12, 13, 14, 16, 22, 41, 42, 70, 76, 88, 89, 92, 96, 104, 110, 111, 115, 128, 185, 211, 218, 237, 247, 252, 296, 297], "regular_point": 265, "regularpolygon": [4, 99, 100, 104, 207], "reidel": 223, "reidemeister_present": 70, "reimport": 16, "reindex": 217, "reintroduc": 84, "reinvent": 13, "reject": [41, 42, 128, 234, 262], "rel": [4, 5, 18, 27, 28, 35, 36, 51, 68, 69, 78, 79, 80, 81, 85, 86, 87, 88, 89, 92, 93, 99, 113, 124, 128, 130, 148, 149, 152, 153, 155, 156, 159, 163, 190, 200, 204, 208, 210, 211, 214, 216, 229, 231, 236, 239, 241, 252, 259, 269, 270, 274, 291, 307], "rel_op": [50, 88], "rela": 208, "relat": [2, 3, 4, 5, 11, 12, 14, 15, 17, 18, 23, 24, 30, 34, 35, 42, 62, 64, 65, 67, 70, 72, 78, 79, 86, 90, 93, 94, 104, 110, 113, 115, 124, 128, 130, 131, 132, 133, 134, 138, 140, 147, 151, 153, 156, 160, 165, 173, 175, 195, 200, 204, 206, 207, 208, 210, 214, 216, 217, 218, 220, 221, 225, 227, 228, 231, 233, 234, 236, 237, 239, 240, 241, 259, 297, 306, 309], "relation_dict": 90, "relation_with_other_funct": 96, "relations_sort": 50, "relationship": [16, 18, 24, 32, 33, 36, 37, 41, 69, 88, 93, 95, 115, 128, 134, 158, 175, 200, 211, 239], "relative_ord": [78, 79], "relativist": 146, "relator_bas": 70, "relax": [124, 130], "relb": 208, "releas": [5, 8, 11, 13, 18, 27, 88, 115, 124, 130, 207, 246, 257, 292], "relev": [3, 4, 5, 11, 12, 13, 14, 36, 41, 69, 86, 101, 116, 117, 149, 153, 155, 158, 196, 205, 211, 231, 237, 238, 247, 252, 273], "reli": [2, 12, 13, 69, 124, 129, 141, 214, 220, 221, 228, 233, 240, 255, 260, 293], "reliabl": [67, 88, 237, 257, 287], "reload": 8, "reloc": 128, "rels_h": 79, "rels_k": 79, "reltol": 69, "rem": [211, 212, 214, 217], "rem_z": 217, "remain": [3, 12, 13, 15, 22, 33, 35, 36, 43, 63, 64, 69, 79, 80, 82, 84, 88, 89, 94, 113, 124, 128, 130, 145, 190, 216, 217, 218, 227, 230, 231, 237, 238, 239, 241, 243, 247, 256, 259, 260, 269, 274, 286, 289, 291, 292, 293, 299], "remaind": [16, 87, 88, 89, 128, 209, 211, 212, 215, 217, 237], "remainder_modulus_pair": 128, "remainin": 214, "remark": [214, 220, 231, 237], "remedi": 113, "rememb": [3, 4, 11, 12, 14, 16, 18, 21, 30, 35, 36, 43, 55, 118, 124, 145, 221, 233, 239, 242, 260, 292, 297], "remot": [9, 88], "remov": [3, 11, 12, 13, 14, 27, 41, 50, 61, 62, 63, 79, 82, 86, 88, 92, 94, 96, 103, 104, 113, 118, 124, 128, 131, 136, 138, 140, 149, 152, 153, 175, 191, 212, 214, 217, 219, 220, 221, 233, 234, 237, 239, 240, 242, 243, 253, 254, 255, 257, 259, 260, 286, 297, 309, 311], "remove_handl": [13, 62], "remove_load": [136, 138, 140, 149], "remove_memb": 140, "remove_nod": 140, "remove_redundant_sol": 237, "remove_support": 140, "removeo": [30, 88, 221, 287], "ren": 69, "renam": [3, 69, 115], "render": [2, 4, 5, 8, 11, 12, 69, 88, 116, 205, 207, 221, 260, 296], "render_as_modul": 69, "render_as_source_fil": 69, "renewcommand": 221, "renumb": 237, "reorder": [11, 80, 87, 94, 191, 217, 237, 241, 259], "reorder_limit": 87, "rep": [41, 79, 84, 88, 175, 208, 210, 211, 212, 216, 217, 230, 233, 262], "rep1": [215, 230], "rep_expect": 186, "rep_innerproduct": 186, "repeat": [8, 9, 15, 16, 79, 82, 87, 88, 94, 96, 115, 117, 124, 128, 130, 175, 177, 191, 207, 208, 209, 214, 216, 217, 221, 227, 237, 241, 245, 246, 253, 255, 259, 297], "repeated_decim": 130, "repeatedli": [53, 128, 145, 253], "repetit": [247, 259], "rephras": 287, "repid": 215, "repl": [15, 247], "repl_dict": 88, "replac": [3, 4, 9, 12, 13, 14, 15, 16, 18, 21, 30, 41, 67, 69, 79, 87, 88, 89, 92, 93, 94, 96, 98, 102, 115, 118, 124, 128, 129, 130, 149, 150, 152, 180, 186, 200, 207, 208, 214, 217, 218, 222, 228, 230, 231, 233, 237, 239, 240, 247, 248, 259, 260, 262, 286, 295], "replace_in_add": 69, "replace_non": 186, "replace_with_arrai": [13, 247, 248], "replacement_dict": 247, "replaceoptim": 69, "replic": 302, "repmatrix": 13, "repo": [9, 11, 12, 22], "report": [12, 60, 67, 79, 88, 101, 124, 128, 218, 229, 240, 252, 293, 298], "report_": 252, "report_cdiff": 252, "report_ndiff": 252, "report_only_first_failur": 252, "report_udiff": 252, "reportedli": 89, "repositori": [2, 5, 9, 59], "repr": [13, 14, 69, 115, 185, 211, 216, 221, 252, 296], "repres": [2, 12, 13, 14, 15, 16, 18, 22, 23, 25, 26, 27, 28, 30, 32, 33, 35, 36, 38, 41, 42, 43, 46, 51, 53, 55, 61, 63, 65, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 83, 84, 87, 88, 89, 90, 93, 94, 96, 98, 99, 101, 103, 104, 105, 110, 111, 115, 117, 118, 120, 123, 124, 128, 130, 131, 132, 134, 136, 137, 141, 142, 144, 148, 149, 151, 152, 153, 155, 156, 158, 159, 160, 162, 163, 165, 177, 178, 180, 184, 185, 188, 189, 191, 193, 195, 196, 197, 198, 199, 200, 204, 205, 206, 207, 208, 209, 210, 212, 214, 217, 219, 221, 223, 224, 227, 228, 229, 231, 233, 234, 237, 239, 240, 241, 242, 243, 245, 246, 247, 254, 256, 259, 260, 265, 268, 272, 274, 282, 287, 289, 291, 292, 297, 298, 299, 303, 304, 306, 307, 310], "represantit": 208, "represent": [13, 14, 15, 21, 23, 27, 32, 33, 35, 43, 48, 52, 61, 68, 69, 70, 71, 79, 82, 88, 89, 94, 96, 100, 108, 110, 112, 113, 115, 117, 118, 119, 120, 124, 127, 128, 141, 142, 147, 149, 151, 158, 160, 175, 180, 185, 186, 188, 189, 191, 193, 205, 207, 208, 210, 212, 214, 216, 217, 218, 219, 220, 221, 223, 231, 233, 234, 237, 240, 241, 246, 247, 260, 262, 265, 268, 275, 283, 287, 289, 292], "reprifi": 221, "reproduc": [2, 12, 14, 48, 217, 252, 297], "reproduct": 12, "reprprint": 221, "request": [2, 3, 4, 5, 8, 9, 12, 13, 22, 41, 48, 59, 67, 88, 92, 104, 113, 128, 191, 207, 214, 217, 245, 253], "requir": [0, 2, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 28, 32, 43, 45, 53, 57, 59, 69, 79, 88, 89, 91, 92, 96, 98, 99, 101, 102, 105, 107, 118, 124, 127, 128, 129, 130, 131, 132, 134, 136, 138, 142, 148, 149, 152, 153, 155, 156, 158, 165, 188, 200, 202, 206, 207, 208, 210, 211, 212, 214, 216, 218, 221, 224, 230, 231, 234, 237, 239, 240, 241, 245, 252, 253, 254, 255, 257, 259, 260, 268, 269, 270, 293, 295, 299, 302, 306], "requisit": 28, "rersiv": 212, "rerun": [8, 11, 12, 217, 252], "res_": 231, "research": [11, 39, 80, 144, 210, 218, 233], "researchg": [215, 241], "reseed": 259, "resembl": [15, 90, 96, 115, 246], "reserv": [15, 22, 41, 247, 254, 293], "reset": [11, 79, 81, 207, 214, 217, 252, 255, 257], "reshap": [22, 30, 69, 124, 242, 248, 259], "resid": 5, "residu": [12, 84, 89, 93, 128, 212, 214, 231], "residue_ntheori": [13, 93, 128, 214, 234], "residue_theorem": 228, "residuos": 89, "resist": [98, 104, 136, 137, 138, 230, 299], "resiz": [79, 80, 120, 124], "resolut": [63, 64, 234], "resolv": [41, 42, 48, 50, 51, 52, 53, 54, 55, 56, 88, 115, 230, 233, 239], "resourc": [4, 5, 8, 13, 43, 124, 215, 237, 253], "resp": [209, 212, 237], "respect": [4, 9, 12, 13, 15, 16, 18, 24, 26, 28, 30, 32, 33, 36, 43, 46, 55, 62, 64, 65, 67, 68, 69, 70, 78, 79, 80, 83, 84, 86, 87, 88, 90, 93, 94, 96, 98, 100, 104, 105, 110, 111, 113, 115, 118, 120, 124, 128, 130, 131, 132, 134, 136, 137, 140, 144, 149, 150, 152, 155, 158, 159, 165, 180, 193, 194, 200, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 218, 221, 223, 224, 227, 229, 233, 234, 237, 238, 239, 240, 241, 242, 246, 247, 252, 254, 265, 267, 268, 269, 270, 271, 272, 273, 274, 287, 297, 299, 306], "respond": [11, 88], "respons": [22, 46, 87, 88, 144, 207, 254], "rest": [3, 13, 14, 18, 22, 23, 113, 116, 118, 121, 137, 146, 151, 196, 208, 211, 241, 259, 289, 290, 297, 299, 306], "restor": [16, 233], "restrict": [12, 15, 41, 43, 50, 69, 77, 88, 89, 96, 124, 136, 137, 191, 195, 208, 211, 216, 218, 236], "restrict_codomain": 208, "restrict_domain": 208, "restructur": 5, "restructuredtext": [4, 5], "result": [2, 4, 8, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 27, 30, 32, 36, 37, 38, 39, 41, 42, 43, 57, 61, 62, 63, 64, 65, 67, 68, 69, 78, 79, 80, 84, 87, 88, 89, 90, 92, 94, 96, 100, 105, 106, 110, 112, 113, 115, 117, 118, 120, 124, 127, 128, 129, 130, 131, 136, 144, 145, 148, 149, 150, 151, 153, 154, 159, 174, 176, 183, 185, 186, 188, 190, 191, 193, 194, 195, 196, 200, 207, 208, 210, 211, 212, 214, 215, 216, 217, 218, 219, 221, 223, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 245, 246, 248, 252, 253, 254, 256, 257, 259, 260, 262, 265, 268, 270, 289, 291, 292, 293, 297, 299, 306], "result_5397460570204848505": [69, 254], "result_dom": 211, "result_sympi": 211, "result_var": [69, 254], "result_vari": 254, "result\u2085\u2081\u2084\u2082\u2083\u2084\u2081\u2086\u2088\u2081\u2083\u2089\u2087\u2087\u2081\u2089\u2084\u2082\u2088": 69, "ret": 124, "retain": [80, 88, 94, 96, 115, 128, 130, 217, 222, 230, 233], "retard": 163, "rethink": 171, "retract": 217, "retri": [13, 115, 128], "retriev": [13, 38, 71, 86, 124, 158, 217, 233, 247], "retriv": 124, "return": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 22, 25, 27, 28, 30, 32, 33, 36, 37, 39, 41, 42, 43, 48, 51, 52, 54, 56, 57, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 113, 115, 117, 118, 119, 120, 124, 125, 127, 128, 130, 131, 132, 133, 134, 136, 138, 140, 142, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 168, 172, 175, 176, 177, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 233, 234, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 265, 268, 270, 272, 286, 287, 292, 293, 296, 297, 298, 299, 306, 310], "return_expr": 130, "return_mpmath": 217, "return_typ": 69, "returnvalu": 254, "reurn": 94, "reus": [12, 16, 43, 69, 191, 291], "rev": 88, "rev1": 307, "rev2": 307, "reveal": [48, 51, 53, 69, 128, 210, 240, 292, 305], "revers": [5, 46, 72, 77, 80, 87, 88, 89, 94, 115, 116, 118, 124, 128, 144, 190, 200, 205, 208, 210, 214, 217, 218, 221, 222, 229, 233, 237, 259, 297], "reverse_ord": 87, "reversedgradedlexord": 217, "reversedsign": 88, "revert": [13, 212, 217], "review": [4, 5, 11, 12, 29, 302], "revis": [11, 239], "revisit": [12, 35, 310], "revolut": 152, "revolv": 140, "rewrit": [12, 87, 88, 90, 93, 94, 96, 113, 115, 118, 136, 144, 188, 212, 217, 228, 229, 230, 233, 237, 238, 239, 240, 241, 277, 291, 293], "rewrite_complex": 115, "rewriterul": 115, "rewritten": [22, 43, 88, 93, 94, 96, 115, 188, 195, 228, 233, 237, 239, 297], "rf": [55, 87, 93, 217], "rfloor": [88, 94, 130, 212, 240, 241], "rfunction_format": 221, "rfunction_str": 221, "rg": 77, "rgs_enum": 77, "rgs_gener": 77, "rgs_rank": 77, "rgs_unrank": 77, "rh": [13, 18, 22, 37, 50, 53, 55, 69, 78, 80, 88, 119, 124, 131, 134, 149, 153, 158, 210, 219, 221, 223, 237, 239, 240, 271, 299, 309, 310, 311], "rho": [16, 90, 113, 124, 128, 185, 221, 241, 247, 275, 304], "rhs_x": 22, "ri": [88, 221], "riccati_equ": 237, "riccati_inverse_norm": 237, "riccati_norm": 237, "riccati_reduc": 237, "riccati_special_minus2": 237, "riccatispeci": 237, "ricci": 90, "rice": 241, "rich": [30, 233], "richard": [0, 128], "richardon": 211, "richardson": [92, 228, 240], "richer": 206, "riemann": [15, 90, 93, 94, 113, 208, 233, 247], "riemann_cycl": 247, "riemann_cyclic_replac": 247, "riemann_sum": 115, "riemann_summation_method": 115, "riemann_xi": 221, "riemannxi": 221, "rieselprim": 128, "right": [3, 4, 5, 8, 11, 12, 13, 16, 18, 22, 27, 30, 31, 32, 33, 36, 39, 43, 46, 49, 50, 53, 55, 61, 67, 69, 70, 79, 80, 84, 88, 89, 91, 93, 94, 96, 104, 105, 113, 115, 118, 124, 127, 128, 130, 131, 132, 136, 137, 138, 140, 144, 153, 158, 159, 163, 170, 175, 177, 179, 180, 185, 188, 191, 200, 206, 207, 208, 210, 216, 217, 218, 219, 221, 223, 224, 228, 229, 231, 237, 238, 240, 241, 252, 254, 256, 259, 272, 287, 291, 293, 297, 299], "right_hand_sid": 158, "right_open": 229, "right_support": 138, "rightarrow": [68, 80, 84, 89, 93, 94, 96, 110, 111, 113, 115, 118, 124, 128, 207, 216, 228, 240, 243, 259, 287], "righthand": 134, "rightmost": [43, 191], "rigibodi": 30, "rigid": [13, 22, 23, 30, 35, 134, 137, 140, 149, 151, 153, 155, 200, 299, 303, 305, 307], "rigid_bodi": 13, "rigid_tendon": 134, "rigid_tendon_muscl": 134, "rigidbodi": [13, 24, 28, 30, 148, 149, 152, 153, 155, 158, 299, 302, 303, 304, 307, 309, 310, 311], "rigidli": 32, "rigor": [3, 36, 96, 254], "rim": 229, "ring": [15, 35, 48, 91, 111, 124, 125, 209, 210, 214, 216, 217, 218, 219, 220, 221, 259], "ring_seri": 218, "ringel": 210, "rioboo": 115, "risc": [110, 237, 265], "risc_1355": 265, "risc_2244": 110, "risc_5387": 237, "risch": [13, 115, 287], "risch_integr": 115, "rise": [87, 93, 96, 206, 233, 237, 241, 269], "riseup": 11, "risingfactori": [87, 93, 96, 221, 223], "risk": 57, "riski": 221, "rivista": 196, "rk": 184, "rk4": 110, "rkgate": 184, "rl1": 230, "rl2": 230, "rm": [8, 69], "rm4": 89, "rmul": [80, 210], "rmul_with_af": 80, "rmultipli": 124, "rn": [88, 90], "rng": 88, "roach": [113, 231], "roach1996": 231, "roach1997": 231, "robert": [0, 128, 210, 241], "robertson": 234, "robot": [23, 148, 151], "robust": [12, 55, 85, 88, 92, 213, 233, 237], "robustli": 48, "roch": 237, "rocklin": 0, "rod": 35, "rogner": 148, "rogner2017": 148, "roken": 262, "role": [41, 94, 219], "roll": [35, 241, 301, 302, 305], "roller": [136, 137, 140], "room": [7, 208], "root": [12, 16, 30, 41, 43, 49, 52, 57, 61, 67, 69, 87, 88, 89, 94, 96, 110, 111, 112, 113, 115, 117, 119, 124, 128, 130, 196, 206, 208, 209, 212, 214, 216, 218, 220, 221, 231, 233, 237, 239, 240, 241, 252, 256, 259, 291, 293, 296, 298], "root1": 117, "root2": 117, "root_index": 212, "root_not": 221, "root_of_un": 94, "root_scalar": 54, "root_spac": 117, "root_system": 117, "rootof": [48, 94, 217], "rootoftool": [94, 124, 217], "rootsum": [115, 217, 223], "rootsystem": 117, "rop": [35, 88], "ropen": [67, 94, 229, 241], "rose": 79, "rosen": 128, "rot": [4, 104, 188], "rot13": 89, "rot90": 124, "rot_axis1": 124, "rot_axis2": 124, "rot_axis3": 124, "rot_ccw_axis1": 124, "rot_ccw_axis2": 124, "rot_ccw_axis3": 124, "rot_given": 124, "rot_ord": [152, 200, 204, 267], "rot_typ": [33, 152, 200, 204], "rotat": [13, 24, 28, 31, 32, 33, 35, 36, 61, 76, 79, 81, 88, 97, 98, 99, 101, 103, 104, 136, 137, 152, 156, 158, 159, 175, 188, 200, 204, 206, 207, 259, 265, 267, 270, 272, 274, 299, 302, 307, 309, 311], "rotate_left": 259, "rotate_point": 61, "rotate_right": 259, "rotated_fram": 152, "rotating_reference_fram": 202, "rotation_axi": 152, "rotation_coordin": 152, "rotation_jump": 136, "rotation_matrix": [265, 267, 270], "rotation_ord": [200, 265, 267], "rotation_spe": 152, "rou": 0, "rough": [23, 196], "roughli": [41, 88, 89, 129, 237, 260], "round": [15, 43, 54, 67, 69, 88, 92, 93, 94, 124, 164, 210, 212, 216, 217, 228, 230, 241], "round_trip": 89, "round_two": 216, "roundfunct": 94, "roundoff": 286, "roundrobin": 259, "routin": [14, 55, 69, 77, 87, 88, 89, 90, 113, 118, 124, 128, 153, 163, 191, 210, 214, 217, 220, 221, 222, 233, 234, 237, 238, 239, 240, 253, 259, 272], "rou\u010dka": 0, "row": [22, 30, 31, 32, 36, 53, 65, 68, 69, 70, 77, 80, 88, 93, 119, 120, 124, 125, 127, 128, 134, 144, 158, 186, 200, 210, 216, 221, 231, 240, 241, 246, 260, 265, 267, 302], "row1": 124, "row2": 124, "row_del": [124, 293], "row_echelon_form": 210, "row_insert": [124, 293], "row_join": 124, "row_matrix": 30, "row_swap": 124, "rowend": 124, "rowmatrix": 30, "rowsep": 124, "rowslic": 210, "rowslist": [124, 210], "rowspac": [124, 210], "rowstart": 124, "royal": [29, 302], "rp": [0, 104, 163], "rpent": 99, "rpm": 8, "rq0": 48, "rq1": 48, "rq2": 48, "rq3": 48, "rr": [68, 88, 106, 210, 211, 217, 218], "rr100": 211, "rref": [124, 210], "rref_den": 210, "rref_matrix": [124, 210], "rref_pivot": [124, 210], "rref_rh": 124, "rrw": 91, "rs_": 218, "rs_asin": 218, "rs_atan": 218, "rs_atanh": 218, "rs_co": 218, "rs_compose_add": 218, "rs_cos_sin": 218, "rs_cosh": 218, "rs_cot": 218, "rs_diff": 218, "rs_exp": 218, "rs_fun": 218, "rs_hadamard_exp": 218, "rs_integr": 218, "rs_is_puiseux": 218, "rs_lambertw": 218, "rs_log": 218, "rs_mul": 218, "rs_newton": 218, "rs_nth_root": 218, "rs_pow": 218, "rs_puiseux": 218, "rs_puiseux2": 218, "rs_series_from_list": 218, "rs_series_invers": 218, "rs_series_revers": 218, "rs_sin": 218, "rs_sinh": 218, "rs_squar": 218, "rs_sub": 218, "rs_swap": 241, "rs_tan": 218, "rs_tanh": 218, "rs_trunc": 218, "rsa": 89, "rsa_": 89, "rsa_private_kei": 89, "rsa_public_kei": 89, "rset": 229, "rsname": 254, "rsolv": 239, "rsolve_hyp": [124, 239], "rsolve_hypergeometr": 223, "rsolve_poli": 239, "rsolve_ratio": 239, "rspa": 302, "rst": [3, 4, 5, 11, 15, 70, 237, 252], "rsvg": 8, "rtime": 71, "rtol": 69, "ru": 237, "rubik": 79, "rubric": [87, 88], "rudimentari": [2, 43, 214], "ruffini": [48, 57, 124], "ruina": [29, 302], "rule": [3, 5, 11, 12, 13, 14, 22, 33, 36, 39, 41, 43, 69, 79, 80, 87, 88, 96, 111, 113, 115, 118, 124, 136, 153, 159, 172, 175, 196, 200, 206, 210, 212, 218, 220, 221, 222, 227, 231, 233, 237, 247, 259, 260, 272, 289, 292], "run": [3, 4, 5, 8, 14, 15, 16, 30, 39, 41, 43, 45, 70, 79, 80, 82, 88, 89, 113, 124, 129, 130, 153, 158, 191, 205, 207, 208, 221, 231, 233, 237, 238, 239, 249, 250, 253, 255, 256, 259, 260, 284, 296, 304], "run_all_test": 252, "run_in_subprocess_with_hash_random": 252, "rung": [15, 67, 110], "runner": [2, 12, 252], "runtest": [12, 13, 252], "runtim": [2, 15, 69, 88, 154, 260], "runtime_error": 69, "runtimeerror": [16, 67, 69, 229, 240, 259], "runtimeerror_": 69, "runtimewarn": 260, "rusin": 234, "ruskei": [80, 259], "russel": 214, "russian": 5, "rust": 254, "rust_cod": [69, 221], "rustcodegen": 254, "rustcodeprint": 221, "rv": [88, 230, 241, 259], "rvert": 113, "rx": 308, "ry": [30, 308], "ryser": 124, "rz": 308, "r\u2081": 137, "r\u2082": 137, "r\u2083": 137, "s0": [87, 111, 113, 163], "s0020": 80, "s0025": [67, 234], "s0747717183710539": 215, "s0895717706001609": 230, "s1": [41, 71, 79, 87, 101, 104, 111, 144, 201, 208, 217, 224, 234, 259, 268], "s11044": 154, "s1transitivesubgroup": [71, 216], "s2": [41, 71, 79, 80, 87, 101, 104, 144, 201, 208, 217, 224, 228, 234, 259, 268], "s208": 72, "s2transitivesubgroup": [71, 216], "s3": [71, 79, 87, 144, 224, 234], "s3_in_s6": 71, "s3transitivesubgroup": 71, "s4": [71, 80, 144], "s4m": 71, "s4p": 71, "s4transitivesubgroup": [71, 216, 217], "s4xc2": 71, "s5": [71, 79, 144], "s5transitivesubgroup": 71, "s6": 71, "s6transitivesubgroup": [71, 212], "s8": 136, "s_": [22, 78, 84, 214], "s_0": 84, "s_1": [70, 214, 259], "s_2": [70, 214], "s_3": 79, "s_4": 71, "s_5": 71, "s_6": 71, "s_aug": 124, "s_field": 90, "s_hexagon_theorem": 100, "s_i": [70, 84, 115, 117], "s_in": 160, "s_is_j": 117, "s_j": [78, 117, 214], "s_k": 70, "s_n": [71, 87, 217, 259], "s_out": 160, "s_postul": 128, "s_solution_of_systems_of_geodetic_polynomial_equ": 215, "s_transvers": 84, "s_x": [98, 104], "s_y": [98, 104], "sa": [104, 214, 217], "saboo": 0, "saddl": 207, "safe": [88, 128, 211, 217, 239, 245, 287], "safeguard": 226, "safeti": [70, 80, 121], "sage": [51, 88, 128, 206, 291], "sai": [3, 5, 11, 14, 15, 21, 22, 23, 30, 35, 36, 39, 41, 70, 78, 87, 88, 89, 117, 128, 151, 153, 196, 208, 209, 210, 214, 216, 220, 221, 228, 231, 234, 237, 239, 240, 241, 260, 286, 291, 297], "said": [0, 3, 15, 33, 35, 36, 61, 65, 69, 74, 128, 196, 209, 237, 240, 241, 265, 272], "sake": [43, 93, 234], "sakki": 259, "salvi": [215, 218], "sam": 241, "same": [3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 27, 32, 33, 35, 36, 39, 41, 42, 43, 45, 48, 50, 52, 55, 61, 63, 64, 65, 67, 68, 69, 71, 77, 78, 79, 80, 84, 87, 88, 89, 90, 93, 95, 96, 98, 101, 102, 103, 104, 105, 110, 111, 113, 115, 117, 118, 120, 124, 128, 130, 131, 134, 136, 137, 140, 144, 145, 148, 149, 152, 157, 175, 177, 185, 188, 189, 191, 193, 194, 195, 196, 198, 199, 200, 202, 205, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 228, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 242, 246, 247, 248, 250, 252, 254, 255, 256, 257, 259, 260, 262, 265, 267, 269, 270, 274, 287, 289, 292, 293, 296, 297, 299, 302, 306, 309, 310], "same_root": 217, "samp": 241, "samp_list": 241, "sampl": [2, 39, 79, 91, 142, 144, 175, 207, 221, 241, 287, 291], "sample_it": [13, 241], "sample_p": 144, "sampling_": 241, "sampling_dens": 241, "sampling_p": 241, "samuel": 128, "samuelson": [124, 210], "sanit": 262, "sartaj": 0, "sat": [2, 63], "satisfi": [2, 5, 12, 13, 14, 27, 41, 51, 52, 56, 64, 65, 67, 70, 76, 79, 84, 88, 89, 93, 96, 98, 111, 113, 117, 118, 124, 128, 154, 175, 180, 208, 209, 212, 214, 216, 217, 221, 227, 228, 229, 234, 237, 238, 239, 240, 241, 247, 292, 297], "satur": 208, "saunder": 124, "savag": 259, "save": [2, 9, 12, 13, 14, 15, 67, 88, 124, 128, 207, 220, 239, 256], "saw": [127, 211, 297], "sawtooth": 224, "saxena": 215, "sb": 0, "sc": [79, 115], "sca": 214, "scalar": [13, 14, 22, 32, 34, 36, 54, 61, 88, 90, 103, 117, 120, 124, 129, 130, 144, 148, 155, 190, 200, 201, 202, 208, 210, 214, 221, 237, 242, 254, 260, 265, 267, 268, 269, 270, 271, 273, 275, 280], "scalar_field": [33, 201, 265, 268, 272], "scalar_map": 265, "scalar_part": 61, "scalar_potenti": [33, 201, 268, 272], "scalar_potential_differ": [33, 201, 268, 272], "scale": [36, 97, 98, 99, 103, 104, 105, 116, 136, 171, 192, 194, 195, 196, 198, 199, 205, 207, 217, 224, 241, 272, 274], "scale_factor": 198, "scale_matrix": 241, "scale_matrix_1": 241, "scale_matrix_2": 241, "scalex": 224, "scan": [88, 210], "scarc": 214, "scc": 210, "scenario": [14, 128, 241], "scene": [22, 233, 289], "schedul": 3, "schemat": [18, 191, 196, 299], "scheme": [3, 8, 41, 80, 87, 92, 206, 207, 214, 217, 246], "schiehlen": 29, "schirm": 29, "schmidt": 124, "school": [89, 230], "schorn": 234, "schost": 218, "schreier": [79, 84, 86], "schreier_sim": [79, 85, 86], "schreier_sims_increment": [79, 86], "schreier_sims_random": [79, 86], "schreier_vector": 79, "schur": 120, "schur_compl": 120, "schwab": [29, 302], "sci": 206, "scienc": [0, 29, 30, 80, 113, 124, 208, 215, 230, 231, 287, 302], "sciencedirect": [215, 230], "scienceworld": 55, "scientif": [0, 15, 30, 59, 88], "scientificamerican": 43, "scientist": 237, "scipi": [2, 7, 14, 15, 18, 21, 30, 48, 50, 53, 96, 185, 221, 241, 260, 286, 295, 299], "scm": 9, "scopatz": 0, "scope": [4, 11, 23, 27, 69, 151, 250, 297], "scott": 79, "scottish": 241, "scratch": [88, 196], "screen": [3, 15, 36, 116, 205, 252, 296], "screenshot": 207, "script": [2, 4, 11, 15, 45, 60, 96, 205, 253], "scroll": [11, 57], "sculptur": 89, "sdm": [210, 214], "sdm_": 214, "sdm_add": 214, "sdm_berk": 210, "sdm_deg": 214, "sdm_ecart": 214, "sdm_from_dict": 214, "sdm_from_vector": 214, "sdm_groebner": 214, "sdm_irref": 210, "sdm_lc": 214, "sdm_lm": 214, "sdm_lt": 214, "sdm_monomial_deg": 214, "sdm_monomial_divid": 214, "sdm_monomial_mul": 214, "sdm_mul_term": 214, "sdm_nf_mora": 214, "sdm_nullspace_from_rref": 210, "sdm_particular_from_rref": 210, "sdm_rref_den": 210, "sdm_spoli": 214, "sdm_to_dict": 214, "sdm_to_vector": 214, "sdm_zero": 214, "se": 18, "seamless": 18, "seamlessli": [18, 174], "sean": 0, "search": [3, 4, 22, 49, 67, 71, 79, 80, 84, 86, 88, 94, 124, 128, 208, 216, 217, 221, 230, 231, 233, 238, 241, 253], "search_funct": 176, "sec": [94, 115, 142, 216, 221, 230, 297], "secant": [94, 217], "sech": [94, 221], "second": [3, 5, 9, 11, 12, 14, 15, 16, 18, 21, 22, 23, 24, 26, 28, 32, 35, 36, 39, 41, 42, 43, 48, 50, 52, 53, 55, 57, 60, 61, 64, 67, 69, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 98, 101, 102, 104, 115, 124, 128, 129, 132, 136, 137, 142, 144, 145, 149, 151, 152, 153, 155, 156, 159, 162, 164, 165, 168, 172, 177, 180, 185, 186, 188, 189, 194, 195, 196, 198, 200, 201, 207, 210, 211, 212, 214, 215, 216, 217, 221, 223, 231, 233, 234, 237, 239, 240, 241, 242, 243, 259, 260, 265, 268, 269, 270, 282, 286, 291, 292, 293, 299, 306, 309, 311], "second_mo": 136, "second_moment_of_area": [98, 104], "second_reference_fram": 200, "second_system": 265, "secondari": 148, "secondarili": [69, 217], "secondhypergeometr": 237, "secondli": [3, 14, 43, 231], "secondlinearairi": 237, "secondlinearbessel": 237, "secondqu": 191, "secret": [43, 89], "secretli": 89, "section": [3, 5, 8, 10, 11, 12, 14, 15, 16, 18, 22, 28, 33, 36, 41, 43, 44, 61, 68, 70, 79, 80, 87, 88, 89, 91, 95, 96, 98, 104, 113, 118, 124, 130, 136, 137, 152, 159, 194, 196, 208, 211, 214, 216, 221, 224, 228, 231, 237, 247, 256, 257, 259, 269, 270, 271, 272, 276, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 303], "section_modulu": [98, 104], "secur": [9, 13], "see": [0, 2, 3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 25, 27, 35, 38, 39, 41, 42, 43, 44, 45, 62, 63, 64, 65, 67, 68, 69, 71, 74, 76, 79, 80, 81, 84, 87, 89, 90, 93, 94, 95, 96, 100, 104, 105, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 124, 125, 128, 129, 130, 134, 142, 149, 152, 153, 154, 158, 160, 163, 166, 167, 176, 180, 181, 185, 186, 187, 188, 190, 191, 194, 196, 200, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 223, 224, 227, 228, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 246, 247, 250, 252, 253, 254, 255, 256, 257, 260, 265, 267, 275, 286, 287, 289, 291, 292, 293, 295, 296, 297, 298, 299, 308, 310], "seed": [12, 77, 79, 88, 89, 98, 101, 102, 124, 128, 214, 241, 252, 259], "seehuhn": 11, "seek": [3, 239], "seem": [12, 14, 22, 37, 41, 43, 112, 113, 196, 208, 210, 233, 237, 297], "seemingli": [87, 240], "seen": [4, 11, 24, 35, 39, 41, 61, 80, 113, 115, 130, 136, 140, 152, 155, 158, 196, 208, 211, 214, 217, 237, 240, 257, 259, 269, 289, 292, 296], "segment": [4, 13, 18, 35, 79, 98, 100, 101, 102, 103, 104, 105, 156, 207, 237, 252, 299], "segment2d": [100, 101, 104, 105], "segment3d": [101, 102], "seldom": 128, "select": [0, 8, 17, 18, 37, 53, 58, 69, 72, 79, 80, 87, 88, 89, 97, 102, 116, 118, 124, 128, 130, 132, 134, 150, 153, 196, 205, 211, 212, 214, 215, 217, 221, 230, 233, 239], "selector": [87, 124, 233, 259], "self": [4, 11, 12, 14, 18, 41, 43, 53, 61, 63, 64, 68, 69, 79, 80, 85, 87, 88, 90, 94, 97, 98, 99, 101, 102, 103, 104, 115, 124, 128, 149, 186, 191, 200, 202, 204, 207, 208, 210, 212, 214, 216, 217, 221, 223, 228, 229, 247, 265, 299], "selfridg": 128, "sell": 291, "semant": [3, 15, 41, 120, 239], "semanticscholar": 128, "semi": [98, 101, 128], "semicircl": 241, "semicolon": 221, "semidefinit": [124, 241], "semidirect": 71, "semilatus_rectum": 98, "semilatusrectum": 98, "semilog": 142, "semisimpl": 117, "semispher": [265, 275], "send": [18, 79, 88, 89, 94, 128, 208, 237, 239], "sender": 89, "sens": [13, 14, 15, 36, 39, 41, 43, 61, 65, 67, 68, 88, 90, 93, 96, 113, 118, 148, 153, 156, 159, 196, 200, 208, 214, 216, 230, 231, 233, 240, 241, 253, 254, 259, 274, 297, 302], "sensibl": [18, 113, 115, 132], "sensit": [30, 88, 130, 144, 207, 214, 233, 252], "sent": [88, 115, 233, 239], "sentenc": [5, 11, 118], "sep": [89, 221, 238, 252], "separ": [3, 4, 11, 12, 13, 15, 16, 27, 28, 31, 39, 42, 43, 45, 50, 56, 68, 76, 88, 89, 94, 96, 113, 115, 124, 145, 148, 152, 156, 158, 164, 188, 191, 200, 207, 209, 210, 212, 214, 217, 218, 221, 230, 233, 234, 237, 238, 240, 245, 250, 252, 256, 260, 262, 265, 289], "separable_integr": [55, 237], "separable_reduc": 237, "separable_reduced_integr": 237, "separablereduc": 237, "separate_integr": 115, "separatevar": [88, 233, 237], "septemb": [80, 256], "seq": [61, 79, 88, 91, 124, 212, 214, 217, 227, 239, 259], "seqadd": 227, "seqbas": 227, "seqformula": 227, "seqmul": 227, "seqper": 227, "sequenc": [5, 16, 30, 61, 67, 69, 72, 75, 78, 79, 80, 84, 86, 87, 88, 89, 91, 93, 96, 98, 101, 102, 103, 104, 105, 112, 118, 120, 124, 127, 128, 131, 134, 144, 164, 190, 191, 210, 212, 215, 221, 223, 225, 228, 230, 231, 233, 234, 237, 238, 240, 247, 250, 253, 254, 259, 261, 262, 277, 299], "sequence_partit": 259, "sequence_partitions_empti": 259, "sequence_term": 87, "sequenti": [68, 72, 89, 94, 265, 267], "serendipit": 230, "seress": 79, "sergei": 0, "sergiu": 0, "seri": [4, 11, 12, 13, 18, 22, 30, 35, 39, 46, 55, 67, 68, 69, 70, 78, 79, 87, 88, 90, 92, 93, 94, 96, 111, 112, 113, 117, 128, 141, 142, 144, 156, 204, 213, 214, 221, 226, 227, 231, 237, 240, 277, 283, 288, 309, 311], "series_approx2": 69, "series_approx3": 69, "series_approx8": 69, "seriesapprox": 69, "seriessolut": 237, "serious": 3, "serv": [5, 12, 13, 15, 39, 43, 63, 64, 69, 71, 85, 88, 95, 111, 216, 237, 238, 262, 290], "servic": 69, "session": [11, 12, 15, 36, 60, 69, 88, 100, 115, 205, 211, 257, 289, 296], "set": [1, 2, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 18, 21, 22, 24, 25, 26, 27, 30, 31, 32, 33, 35, 37, 39, 40, 41, 42, 48, 50, 51, 57, 60, 61, 63, 67, 68, 69, 70, 71, 76, 77, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 101, 103, 105, 106, 107, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 130, 134, 136, 137, 142, 144, 148, 149, 152, 153, 154, 156, 158, 159, 175, 181, 186, 191, 193, 196, 198, 199, 200, 202, 204, 205, 207, 208, 209, 210, 211, 212, 214, 216, 217, 220, 221, 222, 223, 228, 230, 231, 233, 234, 236, 237, 238, 239, 241, 245, 246, 247, 250, 252, 253, 254, 255, 259, 260, 265, 268, 270, 276, 279, 286, 288, 297, 299, 303, 306, 311], "set_": 13, "set_acc": [30, 35, 204], "set_ang_acc": [30, 200], "set_ang_vel": [22, 27, 28, 30, 31, 35, 149, 155, 200, 202, 204, 299, 302, 309, 310], "set_comm": 247, "set_condit": 13, "set_domain": [212, 217], "set_global_relative_scale_factor": 198, "set_global_set": 221, "set_metr": [13, 247], "set_modulu": 217, "set_norm": 61, "set_po": [18, 22, 35, 134, 148, 155, 156, 159, 204, 299], "set_quantity_dimens": 194, "set_quantity_scale_factor": 194, "set_vel": [13, 18, 22, 25, 26, 27, 28, 30, 31, 35, 134, 148, 149, 153, 155, 159, 204, 299, 302, 303, 304, 306, 307, 309, 310, 311], "set_xlabel": [18, 299], "set_ylabel": [18, 299], "setdelai": 130, "seterr": 88, "setitem": 210, "setkind": [88, 123], "setminu": [96, 113], "setsymbol": 41, "setter": [13, 22, 30], "settl": 299, "setup": [6, 10, 11, 12, 13, 69, 88, 160, 200, 214, 217, 219, 220, 231, 252, 253, 255, 264, 296, 303, 306, 307], "seven": 221, "seventh": 132, "sever": [2, 3, 4, 11, 12, 13, 14, 15, 24, 38, 41, 43, 48, 52, 59, 69, 73, 79, 80, 87, 88, 92, 93, 95, 96, 100, 113, 115, 128, 138, 150, 153, 154, 196, 198, 207, 209, 210, 211, 214, 216, 220, 221, 222, 228, 229, 237, 241, 252, 254, 263, 276, 289, 293, 296, 303], "sexi": [63, 64], "sexy_prim": [63, 64], "sexyprim": [63, 64], "sexyprimepred": [63, 64], "sff": 124, "sffge": 124, "sfield": [212, 271], "sfix": 35, "sfu": [96, 115], "sg": [79, 241, 247], "sgen": 84, "sh": 8, "sha": 262, "sha1": 254, "shade": 136, "shadow": [55, 81], "shakthimaan": 7, "shall": [22, 30, 39, 79, 113, 228, 231, 292], "shallow": [212, 228], "shank": 228, "shankar": 74, "shape": [4, 13, 18, 22, 69, 104, 120, 124, 126, 127, 131, 134, 138, 142, 144, 149, 158, 200, 207, 208, 210, 221, 224, 231, 241, 242, 243, 245, 246, 247, 260, 296, 299], "shapeerror": [53, 120, 124], "share": [3, 7, 41, 43, 89, 128, 212, 216, 221, 241, 254], "sharex": [18, 299], "she": [5, 240], "shea": [215, 217], "shear": [136, 137], "shear_forc": [136, 137], "shear_modulu": 136, "shear_stress": 136, "sheet": [96, 230], "shell": [8, 11, 16, 30, 116, 220], "shi": [96, 113, 221, 231], "shier": 241, "shierd": 241, "shift": [73, 79, 80, 82, 89, 96, 99, 103, 105, 118, 207, 212, 214, 217, 224, 231, 239, 241], "shift_list": [212, 214, 217], "shifted_ellips": 98, "shifted_gompertz_distribut": 241, "shiftedgompertz": 241, "shiftx": 224, "ship": [15, 129], "shivam": 0, "sho": 192, "shor": [178, 282], "short": [3, 5, 11, 12, 16, 21, 32, 36, 60, 70, 78, 80, 84, 88, 89, 90, 91, 94, 121, 128, 159, 177, 196, 208, 215, 242, 252, 262, 292, 296], "short_lif": 16, "shortcut": [9, 36, 68, 88, 119, 221, 229, 233, 297], "shorten": [4, 134, 148], "shorter": [13, 18, 21, 25, 32, 57, 88, 98, 208, 212, 221, 254, 262], "shortest": [35, 98, 101, 104, 156, 159, 227, 233, 234, 237, 259], "shorthand": [14, 15, 16, 41, 43, 88, 118, 185, 216, 229, 250], "shortlog": 11, "should": [2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 25, 27, 28, 30, 31, 35, 36, 38, 41, 42, 43, 45, 48, 55, 57, 60, 62, 64, 67, 68, 69, 70, 79, 80, 81, 82, 84, 87, 88, 89, 91, 92, 94, 96, 98, 99, 100, 101, 102, 103, 105, 110, 111, 112, 113, 115, 116, 117, 118, 120, 124, 128, 130, 132, 134, 136, 142, 144, 148, 153, 154, 158, 159, 160, 171, 174, 175, 179, 181, 183, 185, 186, 189, 191, 193, 194, 196, 197, 200, 205, 207, 208, 209, 210, 211, 212, 214, 216, 217, 220, 221, 223, 224, 227, 228, 229, 230, 231, 233, 234, 236, 237, 239, 240, 241, 245, 246, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 265, 269, 286, 287, 289, 290, 293, 306], "shoulder": 299, "shouldn": [88, 218], "shoup": [214, 215], "shoup91": 215, "shoup95": 215, "show": [2, 3, 4, 5, 8, 11, 12, 13, 16, 18, 21, 22, 24, 28, 30, 35, 36, 38, 39, 40, 41, 42, 43, 55, 69, 80, 87, 88, 92, 94, 111, 113, 115, 124, 128, 136, 137, 138, 140, 142, 148, 156, 186, 190, 194, 196, 200, 207, 208, 211, 212, 214, 216, 217, 221, 222, 224, 228, 229, 230, 231, 233, 234, 237, 239, 241, 242, 250, 253, 254, 257, 259, 260, 289, 291, 293, 296, 299, 308], "show_ax": 142, "showcas": 305, "shown": [3, 4, 12, 13, 15, 18, 21, 24, 25, 26, 32, 35, 36, 41, 42, 43, 77, 80, 87, 88, 92, 94, 96, 113, 130, 136, 137, 142, 144, 153, 155, 200, 207, 210, 211, 212, 217, 221, 237, 241, 257, 259, 269, 270, 290, 299, 302, 304, 306, 307], "showpost": 128, "shp": 69, "shrink": [99, 113], "shuffl": [80, 124, 297], "shut": [88, 217], "shutil": 13, "si": [43, 96, 112, 113, 164, 193, 194, 195, 196, 197, 198, 214, 221], "siam": [206, 259], "sibx0afl3q": 240, "side": [12, 14, 16, 18, 27, 31, 32, 39, 41, 50, 52, 55, 69, 79, 80, 88, 100, 104, 115, 124, 128, 134, 136, 144, 153, 158, 159, 179, 180, 196, 200, 206, 208, 214, 216, 219, 221, 238, 240, 241, 245, 252, 254, 275, 287], "siev": [79, 128], "sieve_interv": 128, "sift": [79, 86, 259], "sigma": [16, 80, 111, 113, 124, 148, 221, 224, 241], "sigma3": 166, "sigma_": 241, "sigma_approxim": 224, "sigma_i": [147, 241], "sigma_k": [93, 128], "sigma_not": 87, "sigma_x": 241, "sign": [3, 4, 5, 9, 12, 14, 15, 17, 18, 33, 35, 46, 48, 52, 57, 61, 66, 69, 84, 88, 89, 93, 94, 98, 104, 113, 115, 124, 128, 134, 136, 137, 140, 144, 148, 156, 164, 176, 200, 206, 210, 214, 221, 226, 228, 233, 234, 239, 259, 272, 275, 290, 302], "signal": [18, 30, 46, 96, 118, 128, 131, 142, 144, 214, 292], "signallib": 69, "signatur": [4, 7, 43, 63, 64, 80, 88, 124, 133, 254, 255, 259, 260], "signed_permut": [234, 259], "signedinttyp": 69, "signifi": [79, 88, 136, 217, 241], "signific": [3, 14, 16, 21, 32, 41, 69, 88, 89, 92, 115, 124, 185, 211, 240, 260, 292], "significantli": [13, 18, 21, 25, 53, 69, 92, 212, 223, 253, 256], "signsimp": [88, 233, 310], "signum": 221, "sigsam": 115, "silenc": [3, 17, 250, 257], "silent": [14, 42, 92, 128, 253], "silver": 146, "sim": [79, 84, 86, 113], "similar": [3, 9, 11, 12, 13, 14, 16, 18, 22, 27, 28, 32, 33, 35, 36, 39, 41, 43, 48, 80, 87, 88, 89, 92, 93, 94, 96, 99, 104, 105, 109, 118, 124, 129, 144, 148, 189, 209, 211, 212, 214, 218, 228, 230, 231, 233, 237, 239, 242, 247, 250, 253, 256, 257, 265, 267, 269, 270, 274, 286, 289, 291, 292, 293, 295, 297, 306], "similari": 11, "similarli": [11, 12, 13, 18, 28, 32, 41, 48, 55, 84, 88, 89, 96, 100, 124, 136, 137, 144, 153, 156, 195, 207, 208, 211, 216, 218, 228, 229, 231, 237, 252, 260, 270, 271, 293], "similiar": 156, "simmon": 237, "simon": 241, "simp": [113, 200], "simpfunc": 124, "simpl": [4, 11, 12, 13, 14, 15, 16, 19, 21, 23, 27, 31, 35, 36, 39, 41, 43, 54, 59, 68, 69, 79, 87, 88, 92, 96, 100, 104, 106, 113, 115, 117, 124, 128, 129, 130, 131, 132, 134, 136, 137, 144, 145, 148, 149, 151, 152, 153, 155, 158, 159, 165, 179, 180, 188, 189, 190, 200, 210, 211, 212, 213, 217, 218, 221, 223, 228, 230, 231, 233, 234, 237, 240, 247, 253, 254, 259, 264, 265, 267, 268, 272, 286, 289, 292, 293, 297, 299, 302, 303, 304, 306, 307, 309, 311], "simple_pend": 307, "simple_pend_fram": 307, "simple_root": 117, "simpled": 223, "simpledomain": 212, "simplefilt": 257, "simpler": [12, 15, 36, 42, 43, 48, 61, 88, 92, 96, 112, 113, 210, 214, 230, 231, 233, 237, 239, 240, 297, 309], "simplest": [14, 18, 43, 55, 68, 118, 124, 128, 129, 148, 156, 206, 207, 218, 222, 230, 233, 237, 287, 297], "simplex": 239, "simplfiy_thi": 3, "simpli": [2, 3, 5, 8, 12, 14, 22, 27, 33, 36, 41, 42, 50, 51, 65, 70, 71, 87, 88, 90, 94, 98, 120, 124, 128, 130, 131, 136, 140, 145, 149, 181, 186, 196, 211, 217, 218, 229, 230, 231, 236, 237, 240, 257, 259, 260, 272, 299], "simplic": [18, 43, 231, 237, 299], "simplif": [2, 14, 15, 16, 22, 27, 30, 41, 46, 62, 64, 66, 67, 69, 88, 90, 93, 94, 113, 124, 130, 150, 175, 191, 200, 217, 222, 232, 233, 237, 239, 240, 276, 277, 286, 288, 290, 291], "simplifc": 310, "simplifi": [3, 4, 11, 12, 13, 15, 16, 18, 27, 33, 39, 41, 42, 43, 46, 53, 54, 55, 62, 64, 66, 67, 87, 88, 90, 92, 93, 94, 96, 100, 105, 110, 113, 115, 118, 119, 120, 124, 132, 136, 144, 145, 150, 152, 153, 154, 156, 158, 159, 163, 170, 175, 190, 191, 195, 198, 200, 208, 210, 216, 218, 220, 222, 227, 229, 230, 231, 234, 237, 238, 239, 240, 241, 243, 255, 257, 260, 269, 271, 277, 286, 287, 288, 289, 291, 292, 293, 303, 304, 306, 309, 310, 311], "simplified_pair": 118, "simplify_auxiliary_eq": 310, "simplify_cg": 175, "simplify_gpgp": 145, "simplify_index_permut": 191, "simplify_log": 118, "simplify_thi": [3, 4, 255], "simprot": [22, 30], "simul": [18, 19, 22, 30, 88, 220, 300, 301], "simultan": [16, 88, 94, 101, 124, 128, 133, 207, 230], "sin": [4, 5, 12, 13, 14, 15, 16, 18, 22, 27, 30, 33, 35, 36, 41, 43, 46, 49, 52, 54, 55, 57, 59, 61, 67, 69, 87, 88, 90, 92, 93, 94, 96, 97, 98, 102, 106, 107, 110, 111, 112, 113, 115, 116, 124, 129, 130, 146, 149, 150, 152, 156, 158, 159, 163, 165, 189, 200, 202, 204, 206, 207, 209, 211, 217, 218, 220, 221, 222, 223, 224, 228, 229, 230, 231, 233, 236, 237, 239, 240, 242, 248, 254, 260, 265, 267, 268, 269, 270, 275, 286, 287, 289, 291, 292, 297, 298, 299, 302, 303, 304, 307, 309, 310, 311], "sin_co": 260, "sin_cos_numpi": 260, "sin_cos_sympi": 260, "sin_sol": 229, "sinc": [12, 13, 14, 15, 16, 28, 30, 33, 36, 37, 38, 39, 41, 42, 43, 46, 62, 67, 69, 70, 79, 80, 81, 84, 85, 86, 88, 89, 91, 93, 94, 96, 97, 98, 100, 104, 106, 112, 113, 115, 117, 118, 124, 128, 147, 149, 152, 167, 191, 192, 196, 207, 208, 209, 211, 212, 214, 216, 217, 221, 224, 229, 230, 231, 233, 234, 237, 239, 240, 241, 247, 251, 255, 256, 257, 259, 260, 269, 271, 272, 274, 286, 291, 293, 296, 297, 298], "sinc_funct": 94, "sine": [4, 14, 43, 88, 94, 96, 113, 115, 165, 218, 224, 230, 286], "sine_transform": 115, "sinetransform": 115, "sing": 124, "singh": 0, "singl": [3, 5, 8, 11, 13, 14, 15, 17, 18, 24, 39, 41, 43, 49, 55, 60, 61, 68, 69, 72, 79, 88, 89, 93, 94, 96, 101, 102, 104, 105, 106, 113, 115, 118, 124, 127, 130, 132, 134, 136, 144, 145, 148, 150, 152, 153, 171, 175, 177, 185, 188, 191, 198, 200, 204, 207, 208, 210, 211, 212, 214, 216, 217, 221, 222, 223, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 246, 252, 254, 256, 259, 260, 262, 287, 289, 292, 293, 298, 306], "singlecontinuouspspac": 241, "singledomain": 241, "singlefinitepspac": 241, "singlepspac": 241, "singleton": [15, 80, 118, 240, 292], "singletonregistri": [41, 88], "singli": 128, "singular": [27, 65, 69, 80, 88, 92, 94, 95, 96, 110, 111, 113, 115, 124, 136, 139, 200, 208, 215, 228, 237, 240, 265, 282, 287], "singular_point": 265, "singular_valu": 124, "singular_value_decomposit": 124, "singularhandl": 65, "singularit": [27, 115], "singularity_funct": 96, "singularityfunct": [96, 115, 136], "singularityintegr": 115, "singularmatrix": 65, "singularpred": 65, "sinh": [18, 43, 67, 88, 92, 94, 96, 107, 113, 130, 132, 218, 221, 222, 231, 297], "sinhint": 221, "sinhintegr": 221, "sinint": 221, "sinintegr": 221, "sink": [33, 272], "sinrul": 115, "siq": 128, "siret": 215, "siso": [142, 144], "sisolineartimeinvari": [142, 144], "sit": [36, 144], "site": [5, 128, 255], "situat": [12, 14, 36, 41, 57, 88, 92, 113, 237, 239, 241, 257, 287, 289], "six": [37, 137, 221, 234, 240, 241], "sixteenth": 89, "sixth": 132, "size": [13, 25, 26, 27, 39, 53, 69, 70, 72, 77, 79, 80, 81, 82, 83, 84, 88, 89, 91, 93, 116, 120, 124, 127, 128, 142, 164, 186, 187, 205, 207, 210, 214, 221, 233, 234, 237, 241, 259, 287, 302], "sizeof": 69, "sk": 89, "skelet": [18, 133], "skeleton": 18, "skellam": 241, "skellam_distribut": 241, "skew": [41, 111, 124, 128, 241], "skiena": 80, "skip": [2, 3, 4, 8, 16, 68, 72, 88, 124, 128, 200, 216, 220, 221, 223, 237, 239, 250, 252, 287, 295, 296], "skip_nan": 94, "skip_under_pyodid": 250, "skipp": 12, "skyciv": 104, "slack": [18, 132, 134], "slash": [221, 252], "slate": 252, "slater": [96, 231], "slice": [88, 118, 124, 130, 210, 212, 217, 227, 229, 233, 242, 259, 261], "slide": [136, 148, 152], "slider": [13, 158, 307], "slightli": [12, 14, 54, 60, 61, 69, 84, 128, 130, 207, 208, 210, 212, 214, 217, 221, 231, 233, 302], "slip": [12, 35, 302, 308, 310], "slope": [98, 99, 101, 104, 115, 136, 137, 142, 152], "slot": [84, 175, 242, 246, 247, 292], "slow": [14, 21, 32, 36, 41, 43, 48, 53, 84, 88, 92, 115, 129, 163, 211, 212, 217, 221, 222, 223, 224, 233, 237, 239, 240, 252, 253, 297], "slowdown": [13, 92], "slower": [12, 13, 43, 48, 53, 84, 124, 153, 210, 211, 216, 217, 260, 286], "slowest": [53, 115, 129], "slowli": [92, 228], "slp": 86, "slp_dict": 79, "sm": [18, 22, 30, 128, 148, 208, 299, 302, 303], "small": [18, 30, 39, 51, 69, 70, 71, 79, 80, 88, 92, 93, 115, 118, 124, 128, 188, 206, 207, 210, 212, 214, 215, 216, 233, 234, 239, 259, 286, 289, 291, 306, 310], "smallelementof": 221, "smaller": [15, 25, 69, 79, 80, 88, 89, 93, 96, 104, 115, 120, 128, 209, 210, 211, 214, 217, 224, 230, 231, 234, 239, 259, 286, 297], "smallest": [67, 82, 93, 94, 101, 103, 110, 118, 124, 128, 188, 200, 212, 234, 257, 259], "smallest_angle_between": 101, "smallmatrix": [130, 221, 291], "smart": [27, 150, 228, 234, 237], "smarter": [14, 184, 230], "smith": [0, 13, 125, 210], "smith_normal_form": [13, 125, 210], "smooth": [18, 88, 92, 128, 131, 223], "smoothing_r": 131, "smoothli": 156, "smoothness_p": 128, "smt_builtin_func": 221, "smtlib": 221, "smtlib_cod": 221, "smtlibprint": 221, "sn": [79, 80, 87, 110], "sneak": 12, "snippet": [16, 69], "snr": 69, "so": [0, 2, 3, 4, 5, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 36, 38, 39, 41, 42, 43, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 74, 76, 77, 79, 80, 82, 84, 86, 88, 89, 92, 93, 94, 96, 98, 100, 101, 102, 104, 110, 111, 112, 113, 115, 116, 117, 118, 120, 124, 125, 128, 130, 131, 134, 136, 137, 144, 148, 151, 152, 153, 156, 158, 164, 175, 177, 185, 187, 188, 189, 191, 193, 195, 196, 200, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 245, 246, 250, 252, 253, 256, 257, 259, 260, 262, 271, 275, 286, 287, 289, 291, 292, 293, 296, 297, 298, 299, 302, 306], "societi": [29, 234, 302], "socket": 152, "sode0401": 237, "sode0402": 237, "sode0404": 237, "sode0405": 237, "sode0406": 237, "softwar": [2, 5, 115, 215, 291], "soil": 208, "sol": [18, 37, 54, 124, 234, 237, 238, 239, 299], "sol0": 37, "sol1": 237, "sol2": 237, "sol_f": 240, "sol_typ": 153, "sol_uniqu": 124, "sol_vector": 237, "sol_vector_evalu": 237, "sola": 237, "solar": 194, "solar_mass": 194, "solb": 237, "soldner": 96, "soldnersconst": 96, "sole": [13, 14, 48], "solenoid": [201, 268], "solid": [81, 102, 152, 159, 207, 275], "solidspher": 275, "sollist": 237, "soln": 124, "solomon": 89, "solut": [8, 11, 13, 14, 15, 16, 21, 22, 23, 27, 32, 37, 39, 42, 43, 46, 49, 50, 69, 84, 88, 89, 94, 96, 98, 106, 110, 111, 112, 115, 124, 128, 131, 134, 136, 141, 151, 153, 154, 160, 196, 208, 210, 214, 215, 216, 217, 218, 219, 220, 229, 234, 236, 237, 238, 239, 298, 306], "solution2": 53, "solution_dict": [51, 55], "solution_first": 51, "solution_list": [51, 52], "solution_one_soln_set_dict": 55, "solution_outside_2_3": 52, "solution_p4q3": 51, "solution_set": 52, "solution_set_arg": 52, "solutions_list": 55, "solutions_one_soln_set": 55, "solutions_set": 52, "solv": [3, 4, 11, 13, 14, 15, 16, 17, 18, 22, 23, 25, 27, 30, 34, 39, 41, 43, 44, 46, 47, 69, 72, 84, 87, 88, 96, 101, 113, 115, 119, 124, 128, 131, 132, 134, 136, 138, 139, 140, 149, 151, 153, 154, 158, 194, 210, 214, 218, 219, 220, 221, 223, 233, 234, 236, 237, 238, 241, 282, 287, 288, 291, 293, 296, 299, 304, 305, 306, 309, 311], "solvabl": [57, 79, 140, 149, 234, 237, 240, 298], "solve_aux_eq": 237, "solve_congru": [128, 214], "solve_d": 223, "solve_den": 210, "solve_den_charpoli": 210, "solve_den_rref": 210, "solve_expo": 240, "solve_for_func": [237, 238], "solve_for_ild_mo": 136, "solve_for_ild_react": 136, "solve_for_ild_shear": 136, "solve_for_reaction_load": [136, 137], "solve_for_tors": 136, "solve_ivp": [18, 55, 299], "solve_least_squar": 124, "solve_lin_si": [11, 13, 219], "solve_linear": 239, "solve_linear_system": 239, "solve_linear_system_lu": 239, "solve_log": 240, "solve_multipli": [153, 306], "solve_poly_inequ": 236, "solve_poly_system": [209, 217, 239, 240], "solve_rational_inequ": 236, "solve_riccati": 237, "solve_slope_deflect": 136, "solve_triangul": 239, "solve_undetermined_coeff": 239, "solve_univariate_inequ": [50, 236, 240], "solvefun": 238, "solver": [2, 4, 11, 12, 15, 23, 30, 31, 32, 51, 54, 63, 96, 124, 128, 151, 153, 158, 210, 213, 221, 233, 234, 238, 252, 276, 277, 283, 288, 290], "solveset": [3, 30, 43, 54, 57, 153, 219, 235, 236, 239, 277, 298], "solveset_complex": 240, "solveset_r": 240, "solvifi": [236, 240], "some": [2, 3, 4, 7, 8, 9, 11, 12, 14, 15, 16, 18, 21, 22, 23, 24, 25, 27, 31, 32, 33, 35, 36, 39, 41, 42, 43, 46, 48, 51, 52, 53, 54, 56, 57, 59, 60, 61, 65, 68, 69, 70, 71, 76, 79, 80, 86, 87, 88, 89, 92, 93, 94, 96, 98, 99, 100, 104, 113, 115, 117, 118, 120, 124, 128, 129, 130, 142, 145, 149, 152, 155, 158, 171, 176, 180, 188, 191, 195, 196, 197, 201, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 221, 223, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 241, 247, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 265, 267, 268, 270, 272, 276, 286, 287, 289, 291, 292, 293, 295, 296, 297, 299, 302, 304, 306, 307], "some_filenam": 22, "some_funct": 255, "somehow": [11, 12, 15, 43], "someon": [3, 11, 12, 14, 237, 256, 290], "someth": [3, 4, 5, 9, 11, 13, 14, 15, 16, 21, 22, 30, 32, 41, 42, 43, 57, 67, 69, 88, 89, 92, 98, 113, 118, 124, 128, 184, 197, 207, 211, 212, 220, 228, 229, 233, 237, 240, 252, 254, 260, 286, 289, 291, 292, 295], "sometim": [3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 23, 27, 36, 41, 43, 48, 55, 68, 69, 88, 93, 96, 112, 113, 144, 151, 183, 191, 208, 211, 216, 221, 223, 228, 230, 234, 237, 239, 250, 259, 286, 293], "somewhat": [22, 96, 115, 212], "somewher": [3, 4, 5, 12, 14, 15, 69], "soon": [22, 87, 88, 196, 218], "sop": [115, 118], "sopform": 118, "sophist": [43, 129, 239], "sort": [12, 15, 21, 32, 50, 63, 64, 68, 69, 77, 80, 84, 93, 113, 115, 118, 124, 127, 128, 130, 145, 153, 175, 191, 196, 207, 214, 217, 218, 228, 233, 234, 237, 238, 239, 243, 245, 247, 252, 254, 259, 269, 289, 291, 292], "sort_kei": [77, 88, 237], "sorted_compon": 247, "sosmath": 230, "sought": [79, 128, 176, 186, 210, 233, 239, 240], "sound": [221, 297, 303], "sourc": [0, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 22, 30, 33, 43, 53, 54, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 136, 138, 140, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 267, 268, 272, 284, 291], "source_cod": 130, "source_format": [69, 221], "sourceforg": [5, 68], "sp": 35, "space": [4, 12, 16, 33, 36, 43, 67, 68, 69, 88, 89, 90, 97, 98, 99, 101, 103, 104, 117, 124, 130, 135, 136, 144, 146, 152, 153, 154, 155, 160, 162, 165, 175, 178, 180, 186, 188, 200, 204, 206, 207, 208, 216, 240, 241, 252, 256, 265, 267, 269, 270, 271, 272, 274, 275, 282, 289, 292], "space_orient": [265, 267], "spacecraft": 29, "spaceorient": [265, 267, 270], "spack": 59, "spam": [7, 262], "spamham": 262, "spammer": 221, "span": [4, 13, 117, 124, 135, 136, 137, 152, 156, 216, 221, 257, 293], "sparingli": 12, "spars": [5, 15, 120, 122, 124, 185, 210, 216, 217, 218, 241, 242, 280, 292], "sparsematrix": [124, 127, 222, 233], "sparsetool": [124, 127], "sparsiti": 210, "spatial": [148, 155, 165, 200, 221], "speak": [124, 216, 272], "spec": [216, 217], "speci": [55, 87, 88], "special": [2, 4, 11, 15, 17, 30, 33, 41, 43, 53, 57, 60, 61, 71, 80, 88, 89, 91, 92, 93, 95, 103, 106, 113, 115, 124, 175, 180, 208, 211, 214, 215, 216, 221, 230, 231, 233, 234, 236, 237, 238, 239, 241, 252, 253, 254, 257, 259, 260, 269, 272, 274, 277, 287, 288, 292], "specialpoli": 217, "specif": [4, 5, 7, 8, 11, 12, 13, 14, 15, 18, 22, 23, 30, 36, 41, 43, 44, 51, 58, 79, 80, 88, 89, 90, 96, 100, 115, 117, 124, 132, 134, 148, 149, 151, 152, 153, 158, 160, 196, 207, 208, 212, 214, 216, 217, 220, 221, 222, 227, 233, 234, 237, 238, 239, 241, 247, 252, 253, 254, 259, 293, 297, 299], "specifi": [4, 5, 13, 14, 18, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 41, 43, 48, 53, 54, 56, 57, 68, 69, 70, 83, 87, 88, 89, 90, 91, 94, 96, 97, 101, 104, 113, 115, 117, 118, 120, 123, 124, 128, 130, 131, 132, 134, 136, 137, 138, 140, 144, 148, 149, 151, 152, 153, 158, 159, 175, 180, 185, 186, 188, 189, 194, 200, 202, 204, 208, 209, 210, 211, 212, 214, 216, 217, 218, 221, 223, 224, 227, 228, 229, 231, 233, 237, 238, 239, 240, 241, 242, 246, 247, 248, 252, 253, 254, 259, 260, 265, 267, 268, 271, 274, 287, 293, 299, 302, 304, 306, 307, 309], "spectral": 124, "spectrum": 43, "speed": [2, 4, 11, 13, 18, 22, 24, 25, 26, 30, 31, 32, 36, 64, 69, 79, 88, 89, 92, 124, 128, 129, 146, 149, 152, 153, 154, 158, 162, 165, 195, 200, 204, 206, 218, 221, 222, 228, 233, 237, 253, 256, 259, 292, 293, 299, 304, 305, 306, 307, 309, 310, 311], "speed_con": 25, "speed_idx": [31, 158], "speed_of_light": [195, 198], "speedup": [88, 124, 129, 214, 218, 260], "spell": [4, 13, 15, 237], "spend": 11, "spent": 260, "sph_jn": 96, "sphere": [15, 159, 163, 265, 275], "spheric": [94, 146, 152, 159, 170, 206, 207, 217, 265, 269, 270, 291], "spherical_bessel_fn": [96, 217], "spherical_harmon": 96, "sphericalbess": 221, "sphericalbesselj": 221, "sphericalharmon": 96, "sphericalharmonici": 96, "sphericaljoint": 152, "sphinx": [3, 5, 8, 11, 94, 237, 252, 257], "sphinx_math_dollar": 5, "sphinxext": 5, "spin": [104, 146, 177, 178, 186, 282, 302], "spin_up": 146, "spinor": 145, "spinstat": 188, "split": [10, 43, 69, 88, 89, 92, 113, 115, 130, 214, 216, 219, 220, 221, 239, 241, 247, 252, 259, 263, 292, 297], "split_1": 88, "split_list": 252, "split_super_sub": 221, "split_symbol": 130, "split_symbols_custom": 130, "splitter": 163, "spoli": 214, "sporad": 12, "spot": [31, 124], "spread": [160, 210, 221, 241, 256], "spring": [18, 22, 46, 128, 148, 149, 153, 158, 299, 303, 307], "spring_const": 18, "spring_damp": 18, "spring_damper2": 18, "spring_damper3": 18, "spring_damper_path": 307, "spring_forc": [148, 149], "springdamp": 18, "springer": [89, 115, 128, 214, 215, 237], "spuriou": [48, 214, 239], "sq": [16, 234], "sq2": 88, "sqf": [209, 212, 217, 234], "sqf_list": [209, 212, 214, 217], "sqf_list_includ": [212, 217], "sqf_norm": [212, 214, 217], "sqf_normal": 234, "sqf_part": [212, 214, 217], "sqfr_norm": 214, "sqfreetool": 214, "sqr": [212, 217], "sqrt": [4, 12, 13, 14, 15, 18, 32, 33, 36, 37, 41, 43, 46, 48, 49, 50, 51, 52, 56, 57, 61, 65, 66, 67, 69, 88, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 111, 112, 113, 115, 116, 119, 124, 128, 130, 132, 134, 136, 138, 140, 144, 146, 148, 156, 159, 160, 162, 164, 165, 170, 175, 185, 186, 188, 189, 191, 192, 194, 195, 200, 206, 209, 211, 212, 214, 216, 217, 220, 221, 222, 227, 230, 231, 233, 234, 236, 237, 239, 240, 241, 259, 260, 262, 265, 274, 275, 286, 287, 291, 296, 297, 298, 302], "sqrt2": [208, 211], "sqrt3": 211, "sqrt_mod": [128, 234], "sqrt_mod_it": 128, "sqrtdenest": [11, 12, 233], "sqt": 230, "squar": [12, 16, 25, 26, 41, 48, 51, 52, 57, 61, 65, 69, 79, 88, 89, 93, 94, 104, 105, 113, 115, 119, 124, 127, 128, 130, 131, 134, 136, 144, 146, 177, 193, 200, 206, 210, 212, 214, 215, 216, 217, 218, 221, 229, 233, 234, 237, 240, 241, 291], "square_factor": [128, 234], "square_in_unit_circl": 104, "square_iter": 229, "square_matrix": 65, "square_root": 94, "squareddistribut": 241, "squarefre": [128, 216], "squarefree_cor": 128, "squarehandl": 65, "squarepred": 65, "squeez": [221, 299], "sr": 271, "src": [3, 4, 5, 7, 11, 12, 130, 237, 252, 257], "src2": 130, "src3": 130, "src_code": 130, "sre": 214, "srepr": [211, 292], "sring": [212, 218, 219], "ss": [88, 212], "ss1": 144, "ss2": 144, "sss": 104, "sstr": [87, 205, 221], "sstrrepr": [116, 205, 221], "st": [9, 12, 89, 115, 191], "stab": 79, "stabil": [15, 27, 79, 84, 86, 92, 144, 245], "stabl": [3, 4, 5, 43, 46, 69, 88, 116, 124, 130, 132, 140, 144, 241, 253, 286], "stack": [30, 70, 105, 124, 158, 210, 216, 221, 250, 256, 293], "stackexchang": [5, 79, 98], "stacklevel": [3, 12, 250, 255, 257], "stackoverflow": [7, 11, 128, 259, 262], "stade": 113, "stage": [11, 41, 68, 87, 128, 228, 297], "stai": [43, 216], "stall": 216, "stand": [11, 15, 30, 87, 88, 153, 209, 210, 211, 212, 218], "standalon": [5, 30], "standard": [2, 5, 12, 13, 14, 15, 16, 33, 41, 43, 48, 52, 53, 55, 57, 69, 88, 92, 94, 96, 111, 113, 115, 116, 117, 118, 121, 124, 128, 129, 130, 131, 147, 168, 172, 200, 206, 208, 211, 212, 214, 221, 224, 229, 233, 234, 237, 240, 241, 243, 254, 260, 269, 274, 286, 289, 297], "standard_cartan": 117, "standard_transform": 130, "standardis": [79, 211], "stanford": 72, "star": [221, 239, 259], "starrett": 237, "start": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 22, 25, 26, 35, 36, 43, 54, 58, 59, 68, 69, 71, 72, 77, 78, 79, 80, 84, 87, 88, 89, 90, 96, 118, 120, 124, 127, 128, 129, 132, 134, 136, 137, 140, 186, 187, 190, 194, 207, 211, 214, 216, 217, 221, 224, 227, 229, 230, 231, 234, 237, 239, 240, 241, 242, 245, 252, 253, 259, 261, 262, 271, 285, 286, 289, 291, 299, 302], "start_point": [90, 304], "start_view": 221, "starter": 59, "startnumb": 237, "starts_with_un": 216, "startswith": 299, "stat": [2, 9, 276, 283], "stat317": 241, "state": [11, 12, 15, 18, 31, 39, 41, 55, 79, 86, 88, 96, 128, 131, 132, 134, 136, 144, 146, 149, 153, 154, 158, 163, 167, 168, 170, 171, 172, 174, 175, 176, 180, 183, 185, 186, 187, 188, 190, 191, 210, 217, 221, 230, 231, 233, 241, 256, 282, 293, 299, 302, 306], "state_map": 181, "state_spac": 241, "state_to_oper": 181, "state_var": [131, 134], "statebas": [181, 186, 189], "statement": [0, 4, 13, 22, 41, 42, 43, 59, 68, 69, 88, 96, 113, 118, 120, 170, 221, 241, 250, 254, 259], "statespac": 144, "static": [23, 41, 61, 69, 79, 80, 82, 88, 94, 101, 102, 103, 104, 120, 137, 148, 151, 207, 221, 227, 229, 241, 253, 302], "staticmethod": [13, 252], "stationari": [67, 241, 299], "stationary_distribut": 241, "stationary_point": 67, "statist": [72, 89, 96, 241, 252, 291], "statu": [9, 11, 116], "statweb": 72, "std": [43, 69, 221, 241], "stderr": 69, "stdfactkb": 41, "stdin": [16, 255, 257], "stdlib": [13, 252], "stdout": [69, 71, 252], "steep": 239, "steer": [29, 302], "stefanu": 115, "stegun": [4, 96], "stein": [128, 237], "steinborn": 206, "steinhau": 259, "stem": 246, "step": [3, 8, 9, 18, 23, 25, 30, 31, 36, 43, 44, 46, 58, 67, 69, 79, 83, 84, 87, 88, 89, 96, 112, 113, 115, 124, 128, 129, 151, 153, 158, 193, 204, 206, 207, 210, 211, 212, 214, 216, 217, 221, 222, 223, 226, 229, 230, 231, 233, 234, 237, 239, 241, 246, 253, 259, 260, 287, 300, 305, 309], "step_response_numerical_data": 142, "step_response_plot": [46, 142], "stick": 60, "stieltj": [96, 221], "stieltjes_const": 96, "stieltjesgamma": 221, "stiff": [18, 30, 148, 299, 303], "stiffer": 18, "still": [2, 3, 4, 5, 12, 13, 14, 15, 16, 22, 36, 41, 43, 59, 60, 61, 68, 80, 87, 88, 89, 96, 100, 115, 124, 130, 131, 134, 191, 207, 208, 209, 210, 214, 216, 221, 228, 230, 231, 233, 237, 239, 240, 246, 252, 259, 272, 293], "stiller": 215, "stiller96": 215, "stimul": 18, "stinson": 80, "stirl": [5, 80, 93, 259], "stirling_numbers_of_the_first_kind": 93, "stirling_numbers_of_the_second_kind": 93, "stochast": 13, "stoke": 163, "stokes_paramet": 163, "stokes_vector": 163, "stop": [3, 8, 11, 14, 69, 70, 80, 88, 124, 128, 207, 227, 229, 237, 241], "stopiter": 234, "stopper": 292, "storag": [69, 88, 124, 185, 206, 214], "store": [9, 11, 13, 16, 22, 28, 35, 36, 41, 45, 68, 69, 78, 79, 88, 110, 112, 120, 124, 128, 130, 149, 153, 155, 158, 185, 191, 204, 207, 208, 210, 211, 216, 217, 218, 228, 231, 242, 245, 246, 254, 255, 256, 259, 270, 272, 292, 299], "stori": [12, 196], "stormi": 237, "stqq": 89, "str": [12, 13, 14, 15, 30, 43, 63, 68, 69, 70, 80, 88, 89, 90, 92, 97, 98, 101, 104, 105, 116, 118, 120, 124, 128, 130, 132, 134, 142, 149, 152, 153, 154, 155, 158, 175, 185, 191, 200, 202, 204, 207, 210, 212, 216, 221, 233, 237, 241, 257, 259, 260, 262, 265], "str_expr": 286, "str_printer": [116, 205], "strai": 22, "straight": [35, 104, 110, 142, 148, 156, 159, 237, 306], "straightforward": [5, 12, 14, 18, 43, 79, 89, 124, 148, 231], "strain": 132, "strang": 211, "strategi": [12, 70, 88, 115, 214, 215, 228, 231, 233, 238], "strawberryperl": 8, "stream": [69, 89, 222, 233, 259], "strecker": 68, "strength": 211, "stress": 136, "stretch": [18, 148, 256], "stribeck": 148, "strict": [13, 14, 15, 48, 79, 80, 88, 92, 93, 124, 130, 158, 214, 217, 221, 239, 240, 259, 262, 297], "stricter": 130, "strictgreaterthan": [42, 88, 221], "strictlessthan": [88, 221, 262], "strictli": [15, 16, 38, 40, 41, 65, 67, 88, 96, 124, 128, 144, 212, 214, 233, 239, 260], "stride": [69, 246], "string": [2, 3, 4, 5, 7, 11, 12, 15, 16, 21, 32, 33, 43, 61, 62, 68, 69, 72, 77, 88, 89, 90, 91, 92, 95, 101, 111, 116, 117, 118, 120, 124, 128, 130, 134, 136, 138, 140, 142, 149, 152, 153, 154, 155, 162, 171, 175, 185, 189, 193, 199, 200, 204, 205, 207, 210, 212, 216, 221, 222, 228, 233, 237, 241, 242, 245, 246, 247, 252, 253, 254, 259, 260, 262, 263, 265, 267, 269, 288, 289, 292, 296, 303], "string_input": 14, "string_of_lett": 191, "stringifi": [116, 205], "stringify_expr": 130, "stringpict": 221, "strip": [5, 12, 89, 115, 128, 214, 257, 262], "strip_whitepac": 12, "strip_zero": 212, "strive": 68, "strline": 262, "strong": [79, 84, 85, 86, 128, 129], "strong_gen": [79, 85, 86], "strong_gens_distr": [79, 86], "strong_present": 79, "strong_pseudoprim": 128, "stronger": 293, "strongli": [124, 134, 210, 259], "strongly_connected_compon": [124, 210, 259], "strongly_connected_components_decomposit": 124, "strprinter": [124, 205], "struct": [69, 206], "structr": [148, 156], "structur": [5, 13, 14, 15, 16, 18, 23, 38, 41, 43, 66, 68, 69, 76, 79, 80, 86, 88, 113, 115, 118, 124, 135, 136, 137, 138, 140, 158, 189, 191, 207, 208, 210, 211, 214, 216, 217, 218, 233, 237, 239, 240, 241, 245, 246, 254, 256, 259, 260, 289, 297], "structure_theorem_for_finitely_generated_abelian_group": 76, "structureerror": 216, "struggl": [92, 220], "strzebonski": 217, "stub": 88, "student": [115, 230, 234, 241], "student_t": 241, "studentst": 241, "studentt": 241, "studi": [36, 70, 78, 87, 90, 124, 208, 214, 217, 234, 241], "stuff": [130, 207, 252, 254, 262], "sturm": [212, 217], "sturmian": 217, "sty": 221, "style": [6, 7, 8, 11, 68, 88, 116, 185, 205, 207, 221, 240, 296], "stylis": 221, "stylist": 12, "stzz": 89, "su": 247, "sub": [4, 12, 13, 14, 15, 16, 18, 21, 22, 27, 30, 37, 41, 42, 43, 46, 48, 51, 52, 54, 55, 69, 87, 88, 94, 96, 97, 98, 99, 100, 101, 102, 104, 115, 118, 120, 124, 128, 130, 136, 137, 144, 150, 188, 189, 194, 200, 206, 208, 210, 211, 212, 214, 217, 221, 228, 229, 233, 234, 237, 238, 239, 241, 252, 253, 255, 286, 287, 289, 302, 304, 306, 309, 310], "sub1": [150, 221], "sub2": [150, 221], "sub_dict": [21, 150], "sub_ground": [212, 217], "subalgebra": 117, "subaugmentedassign": 69, "subcategori": [236, 276], "subclass": [13, 14, 15, 18, 41, 43, 63, 64, 69, 88, 95, 99, 101, 115, 118, 130, 131, 134, 148, 156, 158, 159, 160, 166, 175, 179, 180, 181, 186, 188, 189, 195, 207, 208, 210, 211, 212, 216, 217, 221, 241, 252, 253, 254, 257, 260, 265, 269, 292, 299], "subcompon": 221, "subdetermin": 214, "subdiagon": 124, "subdiagram": 68, "subdiagram_from_object": 68, "subdirectori": [8, 12, 45], "subdomain": 214, "subexponenti": 128, "subexpress": [14, 15, 21, 43, 69, 88, 94, 124, 150, 216, 217, 221, 228, 233, 240, 254, 260, 286], "subfactori": [93, 221, 259], "subgraph": 259, "subgroup": [71, 79, 80, 84, 86, 117, 128], "subgroup_search": 79, "subinterv": 115, "subject": [21, 31, 65, 88, 98, 104, 137, 216], "sublist": [67, 84, 89, 115, 188, 287], "submatric": [120, 124, 210, 241], "submatrix": [124, 210, 214, 241], "submiss": 7, "submit": [4, 11], "submodul": [0, 2, 3, 4, 11, 12, 14, 15, 21, 69, 208, 212, 214, 216], "submodule_from_gen": 216, "submodule_from_matrix": 216, "subnorm": [69, 79], "subobject": 221, "suboptim": [18, 231], "subpackag": [2, 276, 301], "subpart": 46, "subplot": [18, 136, 207, 299], "subprocess": [88, 221, 252, 253], "subquadrat": 215, "subquoti": 208, "subquotientmodul": 208, "subresult": [88, 212, 215, 217], "subresultants_qq_zz": 217, "subroutin": [69, 79, 187, 214], "subroutinecal": 69, "subs_dict": 140, "subs_point": 100, "subscheck": 237, "subscript": [51, 53, 80, 88, 130, 212, 221, 231, 234, 259], "subsect": [79, 272], "subsequ": [4, 11, 12, 16, 55, 88, 94, 200, 212, 214, 217, 256, 259, 269, 272], "subset": [5, 11, 12, 39, 41, 43, 48, 67, 68, 72, 75, 79, 80, 86, 93, 94, 100, 111, 113, 115, 117, 128, 154, 208, 210, 214, 216, 221, 229, 259, 277], "subset_from_bitlist": 83, "subset_indic": 83, "subspac": 216, "subsset": 228, "substack": 238, "substanti": [5, 129], "substep": 115, "substitut": [8, 14, 15, 16, 18, 22, 27, 39, 42, 48, 51, 55, 57, 69, 88, 89, 94, 96, 113, 115, 124, 129, 130, 136, 144, 153, 154, 180, 189, 191, 194, 200, 202, 204, 218, 219, 222, 223, 228, 231, 233, 234, 237, 238, 239, 240, 260, 268, 288, 289, 302, 306], "substitute_dummi": 191, "substitute_indic": 13, "substitution_ciph": 89, "substr": 262, "subsum": 96, "subsystem": [8, 221], "subtl": [43, 230], "subtleti": 113, "subtract": [16, 52, 61, 69, 80, 88, 92, 103, 128, 144, 152, 193, 209, 210, 211, 212, 214, 216, 217, 292, 297, 304], "subtre": [88, 221, 256], "subvector": 96, "subwiki": [76, 79], "subword_index": 78, "succ": [228, 241], "succe": [88, 113, 118, 128, 181, 216, 239], "success": [5, 8, 68, 79, 88, 96, 113, 115, 128, 152, 200, 208, 214, 216, 229, 230, 237, 240, 241, 259, 265, 267], "successfulli": 216, "succinct": 88, "succinctli": 88, "sudo": [8, 9], "suetoniu": 89, "suffer": [4, 217], "suffic": [4, 209, 239], "suffici": [3, 4, 11, 18, 41, 68, 69, 79, 80, 84, 88, 124, 196, 212, 224, 228, 234, 237, 241, 256, 297], "suffix": [134, 217, 254], "suffix_express": 221, "sugar": [214, 215, 246], "suggest": [5, 7, 11, 13, 18, 22, 53, 70, 79, 115, 124, 128, 219, 293], "suit": [2, 3, 5, 11, 12, 41, 43, 52, 53, 68, 207, 217, 250, 252], "suitabl": [11, 18, 115, 120, 124, 130, 206, 209, 210, 211, 214, 216, 221, 231, 234, 237, 240, 242, 290], "suku": 115, "sukumar": 115, "sullivan": 259, "sum": [18, 25, 39, 41, 51, 69, 77, 80, 87, 88, 91, 93, 96, 101, 103, 111, 113, 115, 117, 118, 120, 124, 128, 130, 140, 155, 170, 174, 177, 185, 188, 190, 191, 206, 208, 209, 211, 212, 216, 217, 218, 221, 223, 224, 226, 228, 230, 231, 233, 234, 237, 239, 240, 241, 242, 243, 245, 247, 256, 259, 297, 299], "sum_": [69, 87, 88, 89, 93, 96, 113, 115, 120, 124, 128, 206, 217, 218, 223, 224, 231, 237, 241], "sum_0": 231, "sum_approx1": 69, "sum_approx2": 69, "sum_approx3": 69, "sum_domain": 211, "sum_i": [96, 228], "sum_k": 242, "sum_m": 242, "sum_of_four_squar": 234, "sum_of_pow": 234, "sum_of_squar": 234, "sum_of_three_squar": 234, "sumapprox": 69, "sumith": 0, "summand": [77, 216], "summar": [3, 11, 252, 297], "summari": [11, 252, 276, 304], "summat": [69, 87, 88, 92, 93, 96, 191, 215, 217, 221, 224, 233, 241, 242, 245, 246, 247, 253], "sunni": 241, "sup": [212, 217, 221, 229], "super": [69, 96, 212, 221, 265, 267, 299], "super_set": 83, "superclass": [13, 14, 15, 41, 87, 115, 120, 148, 212], "superdiagon": 124, "superfici": 88, "superflu": 113, "supergroup": 79, "superior": [3, 221], "superposit": [165, 176, 187, 208], "superposition_basi": 176, "superscript": [130, 144, 221], "superscriptminu": 221, "superscriptplu": 221, "supersed": [5, 22, 30], "superset": [30, 41, 67, 77, 83, 91, 211, 217, 229, 239], "superset_s": 83, "supplant": 3, "supplement_a_subspac": 216, "supplementari": 0, "suppli": [16, 18, 25, 26, 28, 36, 54, 55, 67, 68, 69, 79, 80, 88, 90, 98, 102, 124, 128, 148, 149, 152, 153, 154, 155, 164, 191, 204, 207, 216, 218, 223, 230, 237, 253, 259, 260, 265, 267, 270, 299, 302, 306, 309], "support": [2, 3, 4, 5, 11, 13, 14, 15, 16, 18, 21, 22, 30, 35, 43, 54, 59, 61, 62, 63, 64, 67, 68, 69, 80, 88, 92, 95, 96, 98, 112, 115, 120, 124, 128, 129, 130, 134, 135, 136, 137, 138, 140, 141, 144, 152, 186, 200, 207, 209, 210, 211, 212, 214, 216, 217, 218, 221, 226, 227, 228, 229, 233, 237, 238, 239, 240, 241, 242, 246, 250, 252, 253, 254, 260, 270, 272, 287, 292, 296], "support_1": 138, "support_2": 138, "suppos": [12, 13, 14, 32, 42, 43, 80, 87, 88, 89, 113, 130, 208, 210, 214, 216, 217, 221, 228, 231, 237, 239, 250, 259, 270, 275, 289, 291, 297], "suppress": [88, 130, 250, 257], "supremum": [94, 229], "surd": 233, "sure": [3, 4, 5, 8, 9, 11, 12, 22, 43, 69, 79, 88, 100, 158, 171, 196, 207, 217, 218, 228, 237, 239, 240, 253, 259, 289, 292, 297], "surfac": [3, 18, 94, 96, 102, 113, 137, 148, 152, 156, 159, 160, 164, 191, 207, 233, 265], "surface_color": 207, "surfacebaseseri": 207, "surfaceover2drangeseri": 207, "surject": 208, "surpris": [15, 41, 240], "surround": [5, 12, 88, 105, 164, 229, 262], "survei": 5, "surviv": 60, "susan": 72, "suspect": [88, 128], "suspend": 303, "suspens": 138, "sussman": 90, "sv": 9, "svg": [8, 35, 36, 45, 116, 205, 270, 306, 308], "sw": 101, "swap": [14, 79, 80, 81, 124, 171, 175, 184, 210, 241, 259], "swap_point": 171, "swapgat": 175, "swig": 253, "swing": 93, "swinnerton": 217, "swinnerton_dyer_poli": 217, "swiss": 217, "switch": [11, 13, 61, 79, 86, 115, 128, 144, 214, 217, 243], "sx": 84, "sy": [11, 22, 30, 59, 69, 90, 221, 252, 271, 289], "sylow": 79, "sylow_subgroup": 79, "sylvest": [128, 214], "sym": [51, 67, 78, 79, 84, 88, 93, 200, 221, 224, 229, 233, 234, 239, 241, 247, 259, 297, 299], "sym2": 247, "sym_expr": 130, "sym_i": 84, "symarrai": 124, "symb": [124, 221], "symb85": 233, "symb_2txt": 221, "symb_nam": 221, "symbol": [0, 2, 4, 5, 7, 11, 12, 15, 17, 18, 21, 22, 23, 28, 30, 32, 33, 35, 36, 37, 39, 44, 46, 47, 48, 49, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 78, 80, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 110, 111, 112, 113, 115, 116, 118, 120, 124, 128, 129, 130, 131, 132, 134, 136, 137, 138, 140, 141, 142, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 165, 166, 168, 170, 171, 173, 175, 177, 179, 180, 183, 186, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 231, 233, 234, 236, 237, 238, 239, 241, 242, 244, 245, 246, 247, 248, 253, 259, 260, 265, 267, 268, 270, 271, 272, 275, 282, 286, 287, 290, 292, 293, 296, 297, 298, 299, 302, 303, 304, 306, 307, 309, 310, 311], "symbol_nam": [88, 221], "symbol_t": 221, "symbolc": 41, "symbolic_complex": 48, "symbolic_expand": 48, "symbolicnumericalcomput": 215, "symbolicsystem": [23, 158], "symbolnam": 237, "symbologi": 221, "symbols_seq": 234, "symbols_to_declar": 221, "symfunc": [253, 260], "symmetr": [13, 28, 53, 65, 66, 70, 71, 76, 79, 80, 84, 104, 119, 120, 124, 128, 206, 212, 214, 217, 220, 229, 231, 247, 259], "symmetri": [4, 13, 71, 76, 81, 84, 96, 124, 170, 206, 237, 245, 247, 286, 297], "symmetric_differ": 229, "symmetric_group": 76, "symmetric_matrix": 65, "symmetric_poli": [212, 217], "symmetric_residu": 128, "symmetricdiffer": [221, 229, 240], "symmetricgroup": [76, 78, 79, 85, 86], "symmetrichandl": 65, "symmetricpred": 65, "symp": [88, 212], "sympfiabl": 299, "sympi": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 35, 36, 37, 41, 42, 43, 44, 46, 47, 48, 49, 51, 53, 54, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 270, 271, 273, 274, 275, 276, 280, 283, 285, 287, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311], "sympif": [13, 60, 88], "sympifi": [12, 14, 15, 16, 18, 28, 41, 42, 69, 92, 98, 118, 132, 148, 164, 189, 191, 200, 201, 211, 212, 286, 292], "sympify": [98, 104, 136, 138, 140, 149, 155, 162, 165, 202], "sympifyerror": 88, "symplifi": [231, 233], "symposium": [70, 113, 214, 215, 231], "sympy_benchmark": 2, "sympy_cod": 22, "sympy_debug": [1, 115, 262], "sympy_deprecation_warn": [3, 250, 255, 257], "sympy_eqs_to_r": 219, "sympy_express": [69, 253], "sympy_gamma": 115, "sympy_ground_typ": [210, 211, 212], "sympy_htmldoc": 8, "sympy_integ": 221, "sympy_nam": 286, "sympy_obj": 14, "sympy_pars": [88, 130], "sympy_use_cach": 88, "sympydeprecationwarn": [3, 12, 13, 250, 252, 255, 257], "sympydoctestfind": 252, "sympydoctestrunn": 252, "sympyexpress": 130, "sympyfi": [201, 202, 204, 268, 299], "sympyoutputcheck": 252, "sympytestfil": 252, "sympytestresult": 252, "symsac": 215, "symsystem": 158, "symsystem1": 31, "symsystem2": 31, "symsystem3": 31, "sync": 9, "synonym": [98, 216], "syntact": 246, "syntax": [3, 4, 5, 11, 13, 14, 15, 16, 22, 30, 43, 55, 62, 64, 80, 88, 115, 130, 188, 207, 211, 220, 221, 233, 239, 243, 262, 287, 289, 291, 296, 298], "syntaxerror": [14, 16, 130], "synthesi": 89, "sys1": [46, 144], "sys2": [46, 144], "sys3": 46, "sys4": 46, "sys5": 46, "sys6": 46, "sysod": 237, "syst": 154, "system": [0, 1, 2, 5, 7, 8, 9, 13, 14, 15, 16, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 33, 35, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 53, 55, 62, 64, 79, 88, 89, 90, 94, 113, 116, 117, 118, 124, 129, 130, 131, 133, 134, 136, 140, 141, 143, 144, 148, 149, 151, 153, 154, 155, 156, 169, 170, 185, 188, 189, 191, 194, 198, 200, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 229, 230, 236, 240, 241, 252, 253, 265, 267, 268, 271, 273, 275, 280, 282, 289, 291, 293, 297, 298, 300, 301, 303, 304, 305, 306, 309, 311], "system2": 268, "system_default_view": 221, "system_info": 237, "systemat": 220, "syzygy_modul": 208, "sz": 186, "szop": 186, "szupket": 186, "t": [0, 3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 18, 21, 22, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 42, 43, 46, 48, 55, 61, 64, 65, 67, 69, 70, 72, 79, 80, 81, 82, 84, 88, 89, 90, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 112, 113, 115, 117, 118, 119, 120, 124, 128, 129, 130, 131, 132, 134, 140, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 163, 165, 171, 175, 187, 189, 191, 193, 194, 196, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 224, 228, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 242, 243, 247, 250, 252, 255, 259, 260, 265, 268, 270, 274, 286, 287, 291, 292, 293, 296, 297, 298, 299, 303, 306, 307], "t0": [18, 84, 299], "t1": [84, 104, 105, 128, 149, 155, 234, 241], "t2": [99, 104, 105, 128, 149, 155, 234, 241, 247], "t3": [105, 234], "t4": 234, "t5": 234, "t_": [18, 84, 93, 134], "t_0": [93, 234], "t_1": [79, 93, 234], "t_2": [79, 93, 234], "t_b": 28, "t_c": 84, "t_eval": [18, 55, 299], "t_m": 214, "t_n": [5, 93, 96, 115, 214, 217, 270], "t_p": 28, "t_r": [28, 79, 247], "t_t": 28, "ta": [145, 230], "tab": [8, 13, 16, 30, 84], "tab1": 84, "tabl": [4, 30, 41, 70, 79, 88, 93, 96, 109, 115, 124, 128, 152, 206, 216, 243, 302], "table_of_": 128, "tableau": 13, "tableaux": 247, "tableform": [13, 239, 262], "tackl": [23, 151, 254], "tactic": 241, "tag": [12, 221, 239], "tail": [72, 87, 88, 212, 241], "tail_degre": 212, "tailor": 41, "tait": [152, 200, 265, 267], "take": [2, 3, 5, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 27, 30, 32, 35, 36, 39, 41, 42, 43, 50, 51, 52, 53, 55, 64, 67, 69, 70, 73, 78, 79, 83, 87, 88, 89, 90, 94, 96, 100, 101, 111, 115, 117, 118, 124, 128, 129, 130, 132, 134, 136, 138, 140, 144, 152, 153, 155, 158, 159, 160, 174, 177, 180, 181, 185, 187, 188, 189, 190, 191, 193, 196, 199, 200, 201, 202, 205, 207, 208, 209, 210, 211, 212, 214, 217, 218, 221, 224, 227, 228, 229, 230, 231, 233, 234, 237, 239, 240, 241, 243, 246, 252, 253, 255, 256, 259, 260, 265, 267, 268, 286, 287, 289, 291, 292, 293, 297, 299], "taken": [3, 12, 14, 15, 21, 27, 30, 69, 70, 71, 76, 79, 86, 87, 88, 93, 94, 96, 105, 124, 128, 131, 132, 144, 146, 149, 188, 194, 200, 204, 206, 207, 211, 216, 217, 221, 224, 228, 230, 231, 240, 241, 246, 254, 259, 265], "takenouchi": 128, "talk": [5, 11, 12, 17, 58, 89, 208, 216, 269], "tamu": 215, "tan": [12, 27, 67, 88, 93, 94, 115, 130, 150, 218, 220, 221, 228, 230, 237, 240, 297, 309, 310, 311], "tandem": 253, "tangent": [18, 94, 98, 100, 104, 115, 131, 218, 237], "tangent_lin": 98, "tanh": [12, 18, 88, 92, 94, 115, 130, 131, 134, 218, 221, 233, 297, 299], "taocp": 259, "tap": 8, "tapestri": 208, "target": [3, 4, 14, 15, 67, 68, 69, 71, 88, 128, 148, 150, 171, 175, 176, 195, 230, 233, 236, 239, 240, 250, 253, 254, 257, 297], "target1": 175, "target2": 175, "target_fram": 148, "target_unit": 198, "tarjan": [241, 259], "task": [23, 24, 30, 44, 49, 58, 94, 151, 211, 216, 287, 294], "tau": [16, 69, 113, 115, 124, 216, 221, 237], "tau0": [124, 240, 241], "tau1": 124, "tau_": 18, "tau_a": [18, 131], "tau_a_muscl": 134, "tau_d": [18, 131], "tau_d_muscl": 134, "taught": [43, 115], "taus_zero": 124, "tausski": 216, "tautologi": 221, "taxicab": 103, "taxicab_dist": 103, "taxonomi": 79, "taylor": [22, 27, 30, 39, 88, 94, 212, 214, 217, 218, 228, 237], "taylor_term": [88, 94], "tb": [145, 230, 252], "tbanilorngnezl": 89, "tbinom": 130, "tc": [145, 212, 217, 230], "tcc": 254, "tchebychev": 5, "td": [88, 221, 296], "te": 164, "teach": [5, 80, 89, 93, 241], "teacher": 43, "teaching_aid": 241, "team": [0, 3, 11], "tear": 292, "technic": [5, 13, 14, 17, 30, 43, 58, 68, 88, 130, 177, 208, 237, 254, 259, 272, 289, 292], "techniqu": [48, 52, 53, 55, 70, 83, 113, 115, 217, 221, 223, 233, 237, 240, 287, 293], "technolog": 230, "technologi": 148, "techreport": 89, "tediou": [39, 115], "teeter": 208, "telephon": 96, "tell": [4, 5, 11, 41, 42, 48, 52, 55, 69, 80, 89, 92, 96, 124, 130, 158, 196, 211, 216, 220, 228, 231, 237, 253, 289], "temp": [69, 302], "tempa": 302, "tempb": 302, "tempc": 302, "tempdir": [69, 253], "temper": 33, "temperatur": [33, 193, 274], "tempfork": 302, "tempfram": 302, "templat": [11, 13, 259], "tempor": 165, "temporari": [11, 88, 253], "temporarili": 88, "tempt": [12, 14, 41, 43, 88, 128], "temptat": [3, 230, 297], "ten": [69, 129], "tend": [11, 18, 43, 60, 69, 88, 93, 148, 156, 214, 216, 226, 228, 231, 290, 297], "tendenc": 128, "tendon": [132, 134, 299, 300], "tendon_force_explicit": 134, "tendon_force_implicit": 134, "tendon_force_length": 132, "tendon_force_length_invers": 132, "tendon_slack_length": [18, 134], "tendonforcelengthdegroote2016": [18, 132, 134], "tendonforcelengthinversedegroote2016": [18, 132], "tenenbaum": 237, "tens": 5, "tensadd": [221, 247], "tensexpr": [13, 145, 247], "tensil": [138, 140], "tension": [18, 121, 138], "tension_at": 138, "tensmul": [221, 247], "tensor": [28, 32, 69, 75, 90, 124, 145, 155, 170, 176, 177, 178, 188, 191, 200, 221, 242, 243, 245, 246, 253, 260, 269, 270, 276, 277, 280, 282], "tensor_can": [84, 247], "tensor_funct": 96, "tensor_gen": 84, "tensor_head": [13, 145, 247], "tensor_inde_typ": 247, "tensor_index_typ": 247, "tensor_indic": [13, 145, 247], "tensor_product": 177, "tensor_product_simp": 190, "tensorcontract": [242, 243], "tensordiagon": [242, 243], "tensorflow": [2, 260], "tensorflow_cod": 2, "tensorhead": [247, 248], "tensori": [247, 248], "tensorindex": [13, 247], "tensorindextyp": [247, 248], "tensormanag": 247, "tensorpowerhilbertspac": 177, "tensorproduct": [90, 188, 190, 221, 242, 243], "tensorproducthilbertspac": 177, "tensorsymmetri": 247, "tensortyp": 247, "tensorvari": 221, "tenth": 132, "teo": 239, "term": [5, 12, 15, 16, 18, 23, 25, 27, 32, 33, 35, 39, 41, 43, 48, 51, 53, 55, 57, 69, 79, 88, 89, 90, 92, 93, 94, 96, 107, 111, 112, 113, 115, 118, 124, 128, 131, 137, 142, 144, 148, 150, 151, 153, 170, 175, 187, 188, 191, 193, 195, 196, 200, 202, 206, 208, 209, 210, 211, 212, 214, 216, 217, 218, 221, 223, 224, 226, 227, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 245, 246, 259, 265, 268, 272, 277, 287, 289, 291, 292, 297, 299, 306, 309], "term_to_integ": 118, "termin": [7, 8, 9, 11, 79, 88, 94, 116, 128, 159, 205, 221, 228, 252, 296], "terminal_str": 221, "terminal_width": 221, "terminologi": [15, 49, 247], "termnam": 15, "terms_gcd": [88, 212, 217], "termwis": 217, "ternari": [51, 69, 88, 221, 234], "terrab": 237, "terrel": 0, "terri": 259, "terribl": 79, "test": [3, 4, 5, 6, 9, 10, 14, 15, 16, 18, 36, 40, 42, 43, 50, 51, 64, 65, 67, 68, 69, 75, 79, 80, 87, 88, 89, 93, 95, 98, 103, 113, 120, 124, 128, 148, 158, 171, 180, 184, 185, 186, 194, 211, 212, 214, 216, 218, 229, 231, 234, 237, 238, 239, 240, 250, 253, 254, 255, 256, 257, 259, 260, 262, 276, 277, 284, 289, 291, 292], "test2": 186, "test_": [4, 11, 12, 252], "test_arg": 252, "test_as_leading_term": 12, "test_bas": [11, 252], "test_comb_factori": 12, "test_cos_seri": [11, 12], "test_custom_latex": 130, "test_deprecated_expr_free_symbol": 12, "test_derivative_numer": [13, 88], "test_draw": 68, "test_equ": 252, "test_expr": [12, 88], "test_factor": 216, "test_factorial_rewrit": 12, "test_failing_integr": 12, "test_formula": 231, "test_func": 12, "test_hyperexpand": 231, "test_hypothesi": 12, "test_issue_21177": 12, "test_kwarg": 252, "test_modular": 12, "test_od": 237, "test_optional_depend": 12, "test_pd": 238, "test_pickl": 2, "test_pretti": 12, "test_residu": 12, "test_rewrite1": 228, "test_sin_1_unevalu": 12, "test_sqrtdenest": [11, 12], "test_stacklevel": [12, 250], "test_symbol": 12, "test_tan": 12, "test_trigonometr": [11, 12], "test_upretty_sub_sup": 12, "testbook": 46, "tester": 252, "testmod": 252, "testrunn": 252, "testutil": [79, 85, 86], "tetrahedr": 81, "tetrahedron": [79, 81], "tex": 221, "texliv": [2, 8, 221], "text": [2, 3, 4, 5, 11, 12, 13, 15, 28, 43, 45, 59, 69, 79, 89, 93, 94, 96, 106, 113, 116, 124, 128, 130, 132, 148, 196, 205, 206, 207, 208, 214, 221, 228, 234, 237, 240, 241, 252], "textbackend": 207, "textbook": 46, "textfil": 241, "textplot": 207, "textrm": [18, 35, 36, 131, 229], "texttt": [93, 229], "textual": 221, "textwrap": [191, 262], "tf": [18, 46, 144, 260, 299], "tf1": [46, 142, 144], "tf10": 144, "tf11": 144, "tf12": 144, "tf2": [46, 144], "tf3": 144, "tf4": 144, "tf5": 144, "tf6": 144, "tf7": 144, "tf8": 144, "tf9": 144, "tf_1": 144, "tf_10": 144, "tf_2": 144, "tf_3": 144, "tf_4": 144, "tf_5": 144, "tf_6": 144, "tf_7": 144, "tf_8": 144, "tf_9": 144, "tfinal": 22, "tfm": 144, "tfm1": 144, "tfm2": 144, "tfm3": 144, "tfm_1": 144, "tfm_10": 144, "tfm_11": 144, "tfm_12": 144, "tfm_2": 144, "tfm_3": 144, "tfm_4": 144, "tfm_5": 144, "tfm_6": 144, "tfm_7": 144, "tfm_8": 144, "tfm_9": 144, "tfm_a": 144, "tfm_b": 144, "tfm_c": 144, "tfm_feedback": 46, "tfrac": [96, 130, 237, 241], "tgamma": 221, "tgate": 175, "th": [43, 61, 70, 79, 80, 86, 89, 90, 92, 93, 94, 96, 117, 118, 124, 128, 153, 210, 212, 214, 216, 217, 223, 226, 231, 234, 237, 239, 241, 242, 247], "than": [2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 32, 36, 37, 39, 40, 41, 42, 43, 48, 50, 52, 53, 54, 55, 56, 57, 60, 61, 65, 69, 70, 71, 73, 79, 80, 81, 87, 88, 89, 92, 93, 94, 96, 97, 102, 103, 104, 106, 110, 113, 115, 117, 118, 120, 124, 125, 127, 128, 129, 130, 134, 140, 142, 144, 148, 153, 158, 165, 171, 185, 188, 189, 191, 206, 209, 210, 211, 212, 214, 217, 218, 219, 221, 224, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 248, 253, 254, 256, 259, 260, 262, 286, 287, 289, 290, 291, 292, 293, 295, 297, 301, 306, 309], "the_68_standard_colors_known_to_dvip": 116, "theano": [2, 13, 30, 296], "theano_cod": 13, "theanoprint": 13, "thei": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 25, 26, 27, 30, 31, 33, 36, 37, 41, 42, 43, 48, 53, 55, 56, 57, 59, 65, 68, 69, 70, 76, 78, 79, 80, 86, 87, 88, 89, 90, 93, 94, 96, 98, 101, 102, 103, 104, 105, 110, 113, 115, 116, 118, 120, 121, 124, 127, 128, 130, 131, 132, 135, 136, 148, 149, 151, 153, 155, 158, 159, 165, 170, 175, 180, 183, 188, 193, 194, 196, 197, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 221, 222, 227, 228, 230, 231, 233, 234, 237, 238, 239, 240, 241, 242, 243, 247, 250, 252, 254, 256, 259, 260, 262, 265, 272, 274, 287, 289, 290, 291, 292, 293, 297, 299, 302, 310], "them": [2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 25, 27, 30, 32, 33, 35, 36, 38, 39, 41, 42, 43, 48, 51, 52, 53, 55, 57, 60, 63, 65, 68, 69, 77, 79, 80, 87, 88, 89, 90, 92, 93, 96, 99, 104, 106, 108, 110, 111, 113, 117, 118, 120, 124, 127, 128, 129, 131, 134, 135, 136, 151, 153, 155, 158, 164, 168, 184, 185, 191, 193, 196, 199, 200, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 222, 228, 229, 230, 231, 233, 234, 237, 239, 240, 242, 243, 252, 254, 256, 259, 268, 286, 287, 289, 291, 292, 297, 299, 302, 304, 306], "theme": 291, "themselv": [2, 5, 12, 13, 14, 23, 24, 43, 65, 68, 80, 84, 86, 88, 115, 128, 151, 211, 212, 216, 227, 241, 247, 256, 259, 262, 297], "theor": 170, "theorem": [21, 32, 35, 46, 48, 57, 76, 89, 93, 96, 98, 104, 115, 124, 128, 147, 159, 191, 208, 211, 214, 228, 231, 234, 240, 302], "theoret": [41, 68, 70, 79, 89, 93, 215, 216, 231, 289], "theori": [22, 27, 29, 38, 43, 70, 71, 77, 78, 79, 80, 86, 88, 89, 93, 96, 117, 125, 148, 153, 170, 188, 191, 200, 204, 210, 214, 215, 216, 220, 234, 256, 265, 283, 291], "theorist": 215, "therebi": 68, "therefor": [2, 3, 4, 12, 14, 18, 33, 36, 43, 48, 52, 70, 79, 84, 88, 92, 96, 101, 104, 117, 128, 131, 134, 144, 152, 206, 207, 211, 214, 217, 221, 237, 240, 241, 242, 247, 265, 267, 269, 270, 272, 274], "thereof": [69, 88, 208, 214, 216], "thesi": [79, 88, 228, 265], "thesis_drl": 210, "theta": [14, 16, 18, 31, 36, 61, 88, 90, 94, 96, 113, 116, 124, 130, 146, 158, 163, 200, 206, 212, 216, 221, 224, 229, 240, 241, 265, 267, 270, 272, 275], "theta1": [55, 306], "theta2": 55, "theta_1": 55, "theta_2": 55, "theta_dot": 158, "theta_oper": 14, "theta_pin": 13, "thetaset": 229, "thi": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 168, 170, 171, 172, 174, 175, 177, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311], "thick": 164, "thieu": 237, "thilina": 0, "thilinaatsympi": 234, "thin": [63, 124, 160, 299, 308], "thing": [2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 21, 22, 27, 30, 35, 36, 41, 42, 43, 48, 50, 58, 65, 69, 78, 79, 80, 88, 90, 100, 116, 117, 118, 124, 129, 130, 175, 191, 196, 210, 218, 220, 228, 229, 230, 233, 237, 240, 245, 255, 257, 259, 286, 287, 289, 291, 292, 293, 296, 297, 299], "thingi": 69, "think": [4, 11, 12, 13, 15, 41, 42, 43, 52, 59, 67, 79, 196, 214, 256, 260, 289, 297], "thinlen": 160, "third": [2, 3, 35, 37, 48, 61, 69, 79, 80, 88, 96, 98, 102, 124, 132, 144, 152, 158, 188, 194, 195, 209, 217, 231, 237, 240, 241, 243, 257, 259, 287, 292], "thirteen": 18, "thoma": [29, 93, 128], "thorough": [27, 234, 310], "those": [2, 4, 11, 12, 13, 14, 15, 16, 21, 24, 32, 35, 36, 37, 41, 42, 48, 52, 56, 57, 60, 65, 68, 69, 70, 71, 79, 80, 86, 87, 88, 89, 92, 101, 102, 113, 115, 118, 124, 127, 128, 133, 140, 152, 153, 158, 164, 188, 202, 205, 207, 210, 211, 212, 214, 216, 217, 219, 220, 221, 227, 229, 233, 237, 238, 239, 240, 241, 247, 250, 252, 256, 259, 265, 268, 289, 291, 297, 302, 304, 310], "though": [4, 11, 14, 15, 16, 21, 25, 27, 32, 35, 36, 41, 42, 43, 48, 54, 55, 56, 57, 60, 70, 88, 89, 90, 93, 100, 104, 113, 115, 124, 128, 153, 186, 195, 200, 209, 211, 212, 217, 218, 230, 231, 233, 237, 238, 239, 240, 252, 272, 287, 292, 297], "thought": [4, 12, 14, 15, 88, 228, 237, 289, 292], "thousand": [92, 128, 286], "thread": 255, "threaded_factori": 255, "three": [3, 14, 15, 16, 18, 35, 36, 37, 39, 41, 43, 55, 56, 61, 65, 69, 79, 80, 81, 84, 88, 89, 93, 96, 98, 102, 103, 104, 113, 117, 118, 128, 131, 136, 137, 152, 156, 158, 164, 186, 188, 193, 200, 204, 206, 207, 208, 209, 212, 214, 217, 221, 231, 233, 234, 239, 240, 241, 252, 265, 267, 272, 275, 289, 292, 297, 299, 304, 308, 309, 310], "threshold": [69, 128], "through": [0, 3, 4, 7, 8, 13, 14, 15, 16, 18, 22, 23, 28, 41, 43, 48, 52, 53, 55, 57, 59, 67, 69, 79, 80, 82, 87, 88, 89, 92, 93, 96, 98, 99, 100, 101, 102, 104, 113, 117, 118, 124, 128, 131, 136, 137, 138, 142, 148, 149, 151, 153, 156, 159, 162, 163, 200, 208, 214, 216, 221, 227, 231, 233, 237, 239, 240, 241, 242, 253, 259, 265, 267, 272, 275, 287, 288, 289, 290, 295, 299, 301, 305], "throughout": [14, 15, 18, 113, 118, 210, 214, 224, 240, 274, 289], "throw": [22, 69, 124, 130, 210, 216, 234, 240], "throwawai": 60, "thrown": [69, 156, 221], "thu": [2, 3, 11, 13, 15, 16, 18, 23, 27, 39, 50, 52, 53, 55, 65, 73, 79, 80, 88, 89, 90, 94, 96, 111, 113, 115, 121, 124, 127, 128, 145, 151, 153, 154, 158, 196, 200, 209, 214, 216, 218, 222, 228, 231, 233, 254, 259, 260, 270, 271, 289, 292, 297, 298, 306], "thue": 234, "thumb": [5, 14, 118, 259], "ti": [77, 80, 88, 128], "ticket": 59, "tid": 247, "tidi": 124, "tie": [88, 259], "tight": 69, "tight_layout": 299, "tikz": 68, "tild": [18, 88, 94, 132, 134, 242], "till": [22, 88, 136, 137, 237], "tilt": 163, "tim": [128, 259], "time": [2, 3, 5, 7, 8, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 46, 48, 55, 57, 60, 64, 65, 69, 71, 79, 80, 84, 88, 89, 93, 96, 111, 113, 118, 124, 125, 127, 128, 129, 130, 131, 134, 140, 141, 142, 144, 148, 151, 153, 154, 156, 158, 165, 175, 180, 188, 189, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 206, 208, 210, 211, 214, 215, 216, 217, 218, 220, 221, 228, 229, 230, 231, 233, 237, 239, 241, 250, 252, 253, 258, 259, 260, 272, 274, 284, 287, 291, 292, 293, 299, 304, 306, 309, 310], "time_bal": 252, "time_deriv": [33, 200, 202], "time_derivatives_in_the_two_fram": 202, "time_markov_chain": 241, "time_period": 165, "timedepbra": 189, "timedepket": 189, "timedepst": 189, "timeit": [69, 218], "timeout": 252, "timestamp": 13, "timeutil": 264, "timevalue1": 204, "timevalue2": 204, "tina": 30, "tini": [69, 88, 212], "tinyurl": 93, "tion_constraint": 30, "tip": [4, 7, 8, 12, 27, 88, 237, 238, 297], "tissu": 18, "titl": [0, 4, 5, 55, 207], "titu": 234, "tlmzebyvzgzinb": 89, "tm": [65, 164], "tmp": 69, "tmpfile": 13, "tmz": 65, "tn": 88, "to_alg_num": [212, 216], "to_algebraic_integ": 88, "to_ancestor": 216, "to_anf": 118, "to_anp": 216, "to_axis_angl": 61, "to_best": 212, "to_cnf": 118, "to_col": 216, "to_ddm": 210, "to_dens": 210, "to_dfm": 210, "to_dfm_or_ddm": 210, "to_dict": 212, "to_dm": 210, "to_dnf": 118, "to_dod": 210, "to_dok": 210, "to_domain": 214, "to_eul": 61, "to_exact": [212, 217], "to_expr": [46, 110, 111, 112, 144], "to_field": [210, 212, 217], "to_fil": [69, 254], "to_flat_nz": 210, "to_hyp": 110, "to_int": 212, "to_int_repr": 118, "to_linear": [27, 153], "to_list": [13, 88, 210, 212], "to_list_flat": 210, "to_load": [18, 148, 156, 299, 303], "to_matrix": [28, 32, 36, 61, 149, 152, 155, 200, 210, 216, 265, 268, 270, 299], "to_meijerg": 110, "to_nnf": 118, "to_number_field": [88, 216], "to_par": 216, "to_primitive_el": 88, "to_pruf": 82, "to_r": [212, 217], "to_rat": 212, "to_root": 88, "to_rotation_matrix": 61, "to_sdm": 210, "to_sequ": 110, "to_si": 90, "to_spars": 210, "to_sympi": [210, 211, 212], "to_sympy_dict": 212, "to_sympy_list": 212, "to_tre": 82, "to_tupl": 212, "todai": [43, 208], "todo": [12, 124, 169, 171, 175, 176, 180, 181, 183, 184, 185, 186, 187, 214, 221, 228, 246], "todod": [124, 210], "todok": [13, 124], "togeth": [13, 15, 23, 36, 39, 69, 79, 88, 92, 117, 124, 128, 132, 136, 144, 148, 151, 177, 188, 196, 208, 212, 214, 216, 217, 220, 221, 233, 237, 239, 241, 252, 253, 259, 291, 297, 299], "toggl": [128, 207], "token": [69, 113, 116, 130], "tol": [69, 88, 212], "told": [8, 11], "toler": [54, 69, 88, 92, 212, 233, 239], "tolist": [124, 242], "tomatrix": 242, "tomfooleri": 252, "tone": 4, "too": [4, 7, 11, 12, 16, 18, 25, 43, 45, 57, 79, 80, 88, 94, 96, 98, 101, 103, 113, 118, 127, 128, 129, 132, 153, 160, 228, 229, 233, 234, 237, 239, 240, 241, 252, 253, 268, 269], "took": [11, 218, 230], "tool": [5, 8, 9, 11, 12, 15, 18, 30, 36, 43, 79, 116, 122, 124, 129, 144, 158, 208, 213, 214, 221, 253, 259, 264, 273, 280], "toolset": 208, "top": [3, 4, 5, 12, 13, 14, 15, 50, 69, 87, 88, 89, 104, 105, 115, 118, 124, 135, 136, 137, 152, 158, 186, 193, 211, 221, 231, 237, 254, 255, 260, 275, 292], "top_fac": 275, "toper": 248, "topic": [7, 17, 20, 23, 28, 34, 35, 36, 44, 58, 69, 206, 208, 210, 211, 216, 240, 289, 294], "topmost": 256, "topolog": [69, 88, 90, 210, 259], "topologi": [113, 229], "topological_sort": [69, 259], "toronto": 128, "torqu": [18, 25, 26, 28, 30, 136, 148, 149, 153, 155, 158, 299, 303, 307], "torque1": 149, "torque_a": 30, "torqueactu": [148, 307], "torsion": [136, 299], "torsional_mo": 136, "toss": 241, "total": [11, 25, 57, 70, 77, 79, 88, 93, 104, 117, 118, 120, 124, 160, 164, 170, 175, 188, 197, 206, 212, 214, 217, 230, 233, 237, 245, 247, 275, 306], "total_degre": [212, 217, 234], "totient": [13, 89, 93, 128], "totientfunct": [93, 128], "totientrang": 128, "totter": 208, "touch": [18, 104, 230, 302], "tough": 237, "tournier": 215, "toward": [37, 69, 88, 96, 148, 208, 228, 240, 299], "tp": [90, 163, 190, 212, 243], "tp1": 90, "tpu": [2, 129], "tr": [13, 70, 79, 221, 230], "tr0": 230, "tr1": 230, "tr10": 230, "tr10i": 230, "tr11": 230, "tr111": 230, "tr12": 230, "tr12i": 230, "tr13": 230, "tr14": 230, "tr15": 230, "tr16": 230, "tr2": 230, "tr22": 230, "tr2i": 230, "tr3": 230, "tr4": 230, "tr5": 230, "tr6": 230, "tr7": 230, "tr8": 230, "tr9": 230, "trace": [30, 84, 120, 124, 145, 214, 221, 241, 242, 243, 245, 259, 293], "traceback": [12, 13, 14, 16, 38, 41, 42, 43, 48, 50, 52, 53, 54, 55, 56, 57, 62, 63, 64, 69, 70, 80, 88, 89, 92, 98, 115, 118, 119, 120, 121, 124, 126, 127, 130, 144, 206, 208, 210, 211, 212, 214, 217, 220, 228, 229, 237, 239, 240, 250, 252, 253, 255, 257, 259, 260, 262, 289, 293], "track": [7, 9, 11, 13, 16, 24, 32, 36, 79, 88, 92, 96, 158, 175, 210, 228, 247, 287], "tracker": [7, 11, 12, 67, 229, 240, 293], "tractabl": [53, 240], "tradeoff": 293, "tradition": [89, 96], "trafo": 87, "trager": [115, 214, 215], "trager76": [214, 215], "trail": [4, 12, 80, 88, 128, 212, 214, 217, 257, 262], "trailpap": 302, "train": 36, "traint": 30, "trait": 212, "traj": 299, "trajectori": [23, 151, 299], "tran": 89, "trans_prob": 241, "transact": [115, 215], "transcedent": 65, "transcend": 96, "transcendent": [11, 41, 52, 56, 57, 65, 88, 96, 115, 211, 216, 217, 221, 239, 240, 293, 298], "transcendental_numb": [41, 88], "transcendentalpred": 65, "transfer": [8, 46, 141, 142, 144, 160, 240], "transfer_funct": 144, "transferfunct": [46, 141, 142, 144], "transferfunctionmatrix": [46, 141, 144], "transform": [13, 14, 15, 24, 57, 61, 66, 69, 84, 87, 88, 89, 90, 92, 93, 96, 103, 120, 124, 142, 144, 152, 163, 184, 186, 188, 193, 206, 209, 210, 212, 214, 216, 217, 223, 228, 229, 230, 233, 234, 236, 237, 238, 239, 240, 241, 243, 246, 254, 260, 265, 272, 291, 302], "transform_vari": 115, "transformation_from_par": 265, "transformation_to_dn": 234, "transformation_to_norm": 234, "transformation_to_par": 265, "transformtosympyexpr": 130, "transient": 241, "transit": [30, 71, 79, 214, 241], "transition_prob": 241, "transitionmatrixof": 241, "transitivity_degre": 79, "translat": [2, 13, 24, 28, 35, 69, 79, 88, 97, 99, 103, 105, 129, 130, 144, 147, 149, 152, 153, 158, 207, 221, 237, 239, 253, 254, 260, 262, 270, 309, 311], "translation_coordin": 152, "translation_spe": 152, "transliter": 5, "transmiss": [138, 163, 164], "transmissive_filt": 163, "transmit": [18, 163, 164], "transmitt": 163, "transmitted_port": 163, "transmitted_pow": 163, "transpar": [113, 116, 205], "transport": 90, "transpos": [30, 36, 65, 68, 120, 124, 144, 174, 200, 210, 216, 234, 242, 247, 248, 293], "transposit": [76, 79, 80, 89, 120, 124, 243], "transposition_": 80, "transvers": [79, 84, 86, 138, 164, 165], "transversals_onli": 86, "transverse_magnif": 164, "trapezoid": [115, 124, 241], "trapezoidal_distribut": 241, "traub": [214, 215], "travel": [33, 162, 165, 272, 274], "travers": [14, 48, 104, 128, 130, 150, 217, 230, 246, 256, 292], "travi": 237, "treat": [13, 14, 15, 18, 22, 33, 41, 42, 43, 51, 55, 56, 61, 78, 79, 86, 88, 93, 96, 103, 104, 124, 130, 134, 164, 200, 209, 211, 212, 214, 216, 217, 218, 220, 221, 228, 229, 231, 233, 234, 237, 239, 245, 253, 256, 272, 289, 293], "treatment": [39, 113, 217], "tree": [1, 7, 13, 15, 22, 38, 79, 82, 88, 130, 150, 183, 186, 200, 217, 228, 230, 233, 240, 243, 245, 256, 259, 262, 288], "tree_cs": 233, "tree_repr": 82, "tri": [13, 14, 15, 16, 18, 27, 41, 50, 52, 55, 68, 88, 96, 104, 113, 115, 186, 208, 209, 216, 221, 223, 233, 237, 238, 240, 252, 289, 297, 299], "trial": [88, 128, 214, 226, 230, 237, 241], "triangl": [4, 43, 68, 93, 99, 100, 104, 105, 115, 124, 128, 159, 206, 207, 268, 275], "triangular": [53, 65, 71, 119, 124, 210, 216, 239, 241, 275], "triangular_distribut": 241, "triangular_matrix": 65, "triangulardistribut": 241, "triangularhandl": 65, "triangularpred": 65, "tribonacci": [88, 93], "tribonacci_numb": [88, 93], "tribonacciconst": 88, "tribonaccinumb": 93, "triceps_activ": 299, "triceps_pathwai": 299, "trick": [12, 13, 15, 16, 84, 231, 247], "tricki": [8, 88, 113], "trig": [43, 88, 115, 217, 221, 230, 233, 297], "trig5": 230, "trigamma": [4, 96, 221], "trigamma_funct": 96, "trigammafunct": 96, "trigexpand": 113, "trigger": [3, 12, 43, 80, 130, 191, 250], "trigintegr": 115, "trigonometr": [4, 14, 43, 50, 57, 88, 115, 130, 218, 224, 232, 233, 236, 237, 240, 260, 277, 288, 298], "trigonometri": [18, 115], "trigonometric_and_hyperbolic_solut": 217, "trigonometric_funct": 94, "trigonometric_integr": 96, "trigonometricfunct": 43, "trigonometryangl": 94, "trigsimp": [12, 14, 16, 22, 61, 88, 124, 152, 200, 230, 233, 269, 310], "trigsimp_groebn": 233, "trim": [27, 80], "tripl": [4, 11, 36, 51, 105, 124, 130, 206, 208, 212, 216, 262], "trivari": 115, "trivial": [3, 14, 25, 70, 79, 84, 87, 88, 89, 94, 103, 118, 120, 124, 128, 191, 208, 209, 214, 217, 231, 234, 237, 240, 245], "trmorri": 230, "trobmvenbgbalv": 89, "trotter": 80, "troubl": [43, 96], "troubleshoot": [4, 9, 27], "trpower": 230, "true": [1, 2, 4, 12, 13, 14, 15, 16, 18, 21, 22, 30, 32, 33, 36, 37, 38, 41, 42, 43, 46, 48, 50, 51, 52, 53, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 113, 115, 116, 118, 119, 120, 123, 124, 125, 128, 130, 132, 134, 136, 137, 142, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 158, 159, 162, 163, 172, 175, 176, 183, 185, 186, 189, 190, 191, 194, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 250, 252, 253, 254, 255, 257, 259, 260, 262, 265, 268, 269, 270, 271, 272, 275, 286, 287, 289, 291, 292, 293, 296, 297, 298, 299, 302, 306, 307], "truli": [88, 96, 196], "trunc": [212, 217, 220], "truncat": [39, 80, 88, 124, 128, 137, 196, 207, 218, 220, 223, 224], "truss": 282, "truth": [12, 14, 42, 62, 63, 64, 65, 66, 88, 124, 233], "truth_maintenance_system": 64, "truth_tabl": 118, "truthi": 12, "truthvalu": 118, "try": [4, 5, 11, 12, 13, 14, 15, 16, 41, 42, 43, 48, 50, 51, 54, 55, 57, 80, 87, 88, 92, 96, 98, 103, 113, 115, 118, 120, 124, 127, 128, 130, 158, 181, 183, 190, 191, 207, 211, 212, 216, 221, 226, 228, 229, 230, 231, 233, 234, 237, 239, 259, 260, 262, 286, 289, 292, 297], "try_block_diag": 124, "trysolv": 237, "tschirnhausen": 216, "tsolv": 240, "tube": 152, "tube_fram": 152, "tune": [9, 18, 92, 116, 205, 221, 299], "tupl": [14, 15, 17, 25, 26, 28, 30, 36, 43, 51, 54, 55, 56, 61, 63, 64, 67, 68, 69, 70, 79, 80, 87, 88, 89, 90, 94, 96, 97, 98, 99, 101, 103, 104, 105, 110, 113, 115, 124, 127, 128, 130, 136, 137, 138, 140, 142, 148, 149, 152, 153, 155, 156, 158, 160, 175, 176, 177, 180, 185, 188, 189, 190, 191, 200, 204, 207, 208, 210, 211, 212, 214, 218, 219, 221, 222, 223, 227, 229, 233, 234, 237, 238, 239, 240, 241, 242, 246, 247, 252, 253, 254, 255, 259, 260, 262, 265, 269, 287, 292, 293, 296], "tuple_count": 88, "tuplekind": [88, 123, 229], "turn": [5, 13, 15, 18, 25, 33, 41, 57, 69, 88, 94, 96, 103, 113, 121, 152, 208, 216, 217, 218, 221, 228, 229, 231, 233, 234, 237, 252, 259, 274, 289, 291, 310], "turner": 210, "tushar": 215, "tutori": [5, 7, 8, 9, 11, 12, 14, 15, 16, 18, 22, 27, 30, 39, 40, 59, 104, 209, 220, 221, 237, 260, 289, 292, 294, 295, 296, 297, 298, 299], "twave": 165, "tweak": [54, 130, 221, 239], "tweflth": 132, "twelv": 18, "twice": [3, 16, 35, 69, 88, 90, 102, 128, 200, 202, 217, 221, 256, 257, 265, 267, 287], "twin": 128, "twist": 113, "two": [2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 18, 21, 23, 24, 25, 27, 28, 32, 33, 35, 36, 37, 39, 41, 42, 43, 48, 50, 52, 55, 56, 61, 67, 68, 69, 70, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 113, 115, 117, 118, 120, 124, 128, 129, 130, 132, 134, 136, 137, 138, 140, 141, 144, 145, 148, 149, 151, 152, 153, 156, 159, 163, 164, 165, 170, 171, 175, 177, 180, 181, 186, 187, 188, 189, 190, 191, 193, 195, 196, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 222, 223, 228, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 242, 243, 246, 256, 259, 260, 265, 268, 270, 271, 272, 274, 286, 287, 290, 292, 293, 297, 299, 304, 310], "two_qubit_box": 171, "twofold": 231, "twoform": 90, "twoform_to_matrix": 90, "twoqubitg": 175, "tx": [113, 295], "txt": [8, 9, 221], "ty": 30, "typ": 247, "type": [4, 7, 9, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 30, 36, 38, 41, 42, 43, 46, 49, 51, 52, 57, 63, 64, 67, 71, 79, 80, 84, 87, 88, 89, 90, 91, 92, 94, 98, 99, 100, 101, 102, 103, 106, 113, 115, 116, 117, 118, 119, 120, 124, 128, 129, 130, 131, 133, 134, 136, 137, 140, 142, 144, 148, 152, 153, 156, 159, 163, 177, 185, 186, 187, 189, 195, 200, 204, 205, 207, 208, 210, 211, 212, 215, 216, 217, 218, 219, 221, 222, 223, 229, 230, 231, 233, 234, 236, 237, 239, 245, 246, 247, 250, 252, 253, 254, 259, 260, 262, 269, 272, 275, 287, 289, 291, 292, 293, 296, 297, 298, 300], "type1": 237, "type2": 237, "type3": 237, "type4": 237, "type5": 237, "type6": 237, "type_": 117, "type_a": 117, "type_alias": [69, 221], "type_b": 117, "type_c": 117, "type_d": 117, "type_f": 117, "type_g": 117, "type_map": 221, "type_of_equ": 237, "typea": 117, "typeb": 117, "typec": 117, "typeerror": [12, 13, 14, 16, 42, 43, 52, 55, 62, 63, 64, 80, 88, 98, 103, 118, 119, 121, 126, 144, 165, 211, 212, 228, 229, 253, 260], "typef": 117, "typefunct": [4, 96], "typeg": 117, "typeinfo": 88, "typeset": [87, 221], "typevar": 210, "typic": [2, 3, 12, 13, 14, 15, 18, 28, 36, 43, 84, 94, 113, 128, 133, 144, 149, 155, 207, 209, 214, 217, 218, 231, 253, 254, 270], "typo": [11, 14, 231], "typograph": 130, "tz": 144, "u": [0, 8, 9, 16, 18, 22, 23, 24, 25, 27, 30, 31, 32, 33, 35, 39, 41, 42, 43, 46, 52, 61, 67, 68, 69, 79, 84, 87, 88, 89, 91, 102, 105, 110, 113, 115, 120, 124, 128, 134, 148, 149, 151, 152, 153, 154, 158, 163, 164, 175, 180, 186, 196, 200, 204, 206, 207, 208, 209, 210, 214, 216, 217, 220, 221, 228, 231, 233, 234, 237, 238, 239, 240, 241, 246, 260, 272, 289, 291, 292, 293, 299, 302, 306, 309], "u03b8": 116, "u0_": 152, "u0_c1": 152, "u0_c2": 152, "u0_pc": 152, "u0child": 152, "u1": [22, 25, 27, 30, 35, 79, 128, 152, 200, 202, 204, 205, 237, 299, 302, 304, 306, 307, 309, 310], "u1_": 152, "u1_c1": 152, "u1_pc": 152, "u1d": [22, 25, 302, 306, 309, 310], "u2": [22, 25, 30, 35, 79, 127, 128, 152, 200, 204, 237, 299, 302, 304, 306, 307, 309, 310], "u2_": 152, "u2_pc": 152, "u2d": [22, 25, 302, 306, 309, 310], "u3": [22, 25, 30, 35, 200, 204, 299, 302, 304, 307, 309, 310], "u3d": [302, 309, 310], "u4": [25, 30, 299, 302, 310], "u4d": 302, "u5": [302, 310], "u5d": 302, "u6": [302, 310], "u6d": 302, "u_": [13, 124, 152, 299], "u_0": 214, "u_1": [35, 216, 234, 237, 299, 302, 304, 306, 307], "u_1v_1": 234, "u_2": [35, 216, 234, 237, 299, 302, 304, 306, 307], "u_3": [35, 299, 302, 304, 307], "u_4": [299, 302], "u_5": 302, "u_6": 302, "u_arm": 299, "u_aug": 124, "u_aux": [158, 304], "u_auxilia": 30, "u_auxiliari": [25, 30, 153, 310], "u_d": [30, 154], "u_dep": [25, 158, 304], "u_depend": [25, 30, 153, 299, 302, 306], "u_fram": 152, "u_func": 115, "u_i": [27, 35, 154, 214], "u_ind": [22, 25, 27, 30, 153, 154, 158, 302, 304, 306, 309, 310], "u_j": [13, 216], "u_j1": 152, "u_n": [96, 115, 214, 216, 217], "u_op": [154, 306], "u_p1": 152, "u_p2": 152, "u_pc": 152, "u_pin": 158, "u_slid": 158, "u_val": 299, "u_var": 115, "u_x": 35, "ua": 209, "uaux1": 304, "uaux2": 304, "ub": 256, "ubuntu": 221, "ubv": 124, "ucdavi": 115, "uchicago": 241, "uci": 128, "uconn": [79, 241], "ucr": 11, "ud": [25, 153, 299], "ud_op": [154, 306], "udel": 124, "udivisor": [93, 128], "udivisor_count": [93, 128], "udivisor_sigma": [13, 93, 128], "udl": 120, "udldecomposit": 120, "udot": 153, "ueber": 216, "ueqdueodoctcwq": 89, "uexpr": 292, "uf": 214, "ufunc": [14, 69, 129, 253, 260], "ufuncifi": [2, 69, 253], "ufuncifycodewrapp": 253, "ugat": 175, "ugli": 221, "ui": [11, 115, 128, 238], "uiki": 89, "uint16": 69, "uint32": 69, "uint64": 69, "uint8": 69, "ukrain": 215, "ultim": [11, 43, 94, 196, 214], "umontr": [93, 128], "un": [230, 231], "unabl": [69, 101, 105, 130, 134, 239, 265, 286, 287], "unaffect": [88, 240], "unambigu": [37, 221, 237, 262], "unansw": [21, 32], "unappropri": 90, "unavoid": 196, "unbound": [18, 88, 239, 246], "unbound_theta": 207, "unboundedlperror": 239, "unbranch": [96, 113], "unbreak": 89, "uncertainti": [92, 196], "unchang": [3, 13, 15, 43, 79, 80, 88, 115, 124, 144, 195, 210, 217, 221, 227, 230, 233, 240, 286], "unclear": [11, 13, 21, 41], "uncommon": [12, 69], "uncondition": [3, 12], "unconstrain": 239, "uncontract": 248, "uncount": 240, "uncoupl": [170, 188], "undecid": [41, 43, 52, 124, 211, 240, 293], "undecor": 88, "undefin": [12, 14, 15, 36, 43, 52, 55, 63, 64, 67, 88, 94, 95, 96, 115, 120, 130, 149, 159, 216, 227, 228, 231, 260, 287, 298], "undefinedfunct": [88, 202, 221, 253, 260], "undefinedkind": [88, 123, 229], "undefinedpred": [63, 64], "under": [2, 3, 4, 8, 11, 12, 15, 16, 18, 41, 42, 63, 64, 66, 67, 69, 70, 78, 79, 84, 86, 96, 106, 113, 115, 117, 118, 124, 128, 130, 132, 136, 137, 160, 186, 206, 208, 209, 216, 217, 221, 228, 229, 231, 234, 237, 239, 240, 241, 247, 250, 291, 297, 299], "underbrac": [35, 196], "underdetermin": [124, 210, 239, 240], "underevalu": 293, "undergo": [7, 134, 164], "undergon": [36, 240], "underli": [12, 15, 22, 69, 80, 86, 88, 117, 124, 142, 186, 199, 210, 217, 239, 240, 241], "underlin": [4, 5], "underneath": 135, "underscor": [3, 4, 12, 13, 88, 124, 237, 247, 255], "understand": [4, 11, 12, 16, 22, 23, 25, 26, 30, 35, 41, 42, 43, 57, 88, 89, 113, 151, 196, 207, 210, 211, 216, 221, 231, 234, 253, 260, 288, 289, 296, 297], "understood": [80, 128, 196, 208, 212, 217], "undertak": 297, "undertermin": 217, "undertest": 293, "undescript": 11, "undesir": [21, 22, 27, 88, 209, 212, 231], "undetermin": [37, 88, 124, 217, 223, 237, 239], "undetermined_coeffici": 237, "undirect": [117, 259], "undo": [14, 231, 297], "undon": [214, 297], "unequ": [14, 15, 37, 88, 136, 221], "unevalu": [12, 13, 14, 15, 41, 42, 43, 46, 63, 64, 67, 80, 87, 88, 94, 96, 105, 115, 128, 144, 168, 172, 179, 180, 191, 217, 220, 228, 229, 233, 237, 239, 240, 241, 242, 287, 291, 292, 298], "unevaluat": 237, "unevaluatedexpr": [15, 88, 221, 292], "unexpand": [88, 211, 220, 230, 253], "unexpect": [12, 14, 88, 252], "unexpectedeof": 130, "unexplain": 68, "unfactor": 210, "unfair": 241, "unflatten": 259, "unfortun": [90, 92, 129, 220, 234], "unhash": 259, "unhind": 237, "uni": [68, 115, 259], "unicod": [11, 12, 96, 116, 124, 205, 221, 252, 291], "unifi": [31, 88, 210, 212, 214, 216, 217, 229], "unificationfail": [214, 216], "uniform": [99, 158, 207, 239, 241], "uniform_distribution_": 241, "uniform_sum_distribut": 241, "uniformdistribut": 241, "uniformli": [13, 39, 79, 104, 105, 128, 136, 138, 142, 207, 255], "uniformsum": 241, "uniformsumdistribut": 241, "unify_anp": 212, "unify_composit": 212, "unify_dmp": 212, "unimod": 241, "unimport": 5, "unintegr": 55, "uninterest": 214, "union": [51, 60, 65, 67, 69, 77, 79, 86, 118, 208, 216, 221, 227, 228, 229, 236, 240, 259], "union_": 229, "union_find": 79, "uniq": 259, "uniqu": [3, 13, 15, 18, 36, 67, 68, 70, 79, 82, 84, 88, 89, 90, 93, 96, 103, 106, 111, 115, 117, 118, 124, 128, 152, 153, 180, 189, 200, 208, 209, 210, 211, 214, 216, 217, 222, 226, 233, 234, 237, 239, 240, 241, 245, 254, 259, 262, 269, 274, 289, 292], "uniquenss": 89, "unit": [16, 22, 28, 30, 32, 33, 36, 43, 46, 47, 61, 65, 68, 88, 89, 93, 101, 102, 103, 115, 124, 128, 132, 136, 138, 142, 144, 146, 147, 148, 152, 156, 158, 159, 167, 192, 193, 194, 198, 200, 207, 209, 210, 212, 214, 216, 217, 219, 221, 229, 231, 234, 240, 242, 265, 267, 269, 274, 275, 282, 299], "unit_cub": 115, "unit_disk": 229, "unit_system": 198, "unit_triangular": 65, "unitari": [65, 93, 115, 128, 175, 180, 206], "unitary_divisor": 128, "unitary_matrix": 65, "unitarydivisor": 128, "unitarydivisorfunct": [93, 128], "unitaryhandl": 65, "unitaryoper": 180, "unitarypred": 65, "uniti": [18, 43, 94, 96, 113, 186, 216], "unitless": [18, 195], "unitsystem": [195, 199], "unittriangularhandl": 65, "unittriangularpred": 65, "unitvec": 30, "univari": [37, 48, 57, 67, 87, 88, 94, 111, 115, 208, 209, 211, 212, 215, 216, 217, 218, 223, 234, 236, 239, 241], "univariatepolynomialerror": 214, "univers": [3, 15, 69, 148, 206, 212, 215, 221, 229, 234, 239, 240], "universal_set": 229, "universalset": [118, 229], "universitat": 265, "unix": [1, 252, 253], "unknow": 41, "unknown": [13, 14, 15, 38, 41, 42, 43, 46, 53, 55, 56, 61, 74, 88, 89, 136, 137, 176, 210, 219, 236, 237, 238, 239, 240, 259, 298], "unknwon": 46, "unless": [2, 4, 11, 12, 14, 15, 35, 36, 41, 43, 45, 62, 64, 67, 69, 79, 87, 88, 89, 93, 96, 103, 104, 113, 124, 127, 158, 164, 209, 210, 211, 216, 217, 221, 226, 229, 230, 237, 239, 252, 256, 259, 260, 262, 265, 274, 287, 293, 297], "unlik": [2, 4, 12, 14, 15, 16, 22, 35, 41, 42, 48, 55, 66, 88, 89, 93, 115, 124, 128, 130, 210, 214, 221, 234, 237, 240, 256, 257, 289, 291, 292, 293, 296], "unload": 134, "unm": 220, "unmodifi": [210, 233], "unmov": 80, "unnam": 254, "unnecessari": [3, 4, 5, 12, 14, 65, 69, 217, 220, 241, 252, 290], "unnecessarili": 297, "unnecessary_permut": 115, "unneed": 15, "unnorm": [94, 96, 210], "unnot": 14, "unord": [13, 16, 88, 128, 212, 240, 259, 260], "unpack": [13, 88, 124, 259, 260], "unpolar": 163, "unpredict": 256, "unprejud": 88, "unpython": 14, "unrad": [233, 239], "unrank": [72, 77, 79, 80, 82], "unrank_binari": 83, "unrank_grai": 83, "unrank_lex": 80, "unrank_nonlex": 80, "unrank_trotterjohnson": 80, "unread": [217, 257], "unrecogn": [13, 124], "unrecognis": 11, "unrel": [12, 13, 53, 88, 95, 209, 289], "unreli": 211, "unresolv": 41, "unrestrict": [5, 77, 259], "unrol": 246, "unrot": 104, "unsanit": [88, 260, 286], "unsat": 118, "unsatisfi": 118, "unset": [221, 233], "unshift": 214, "unsign": [69, 93, 233], "unsignedinttyp": 69, "unsimplifi": [16, 230], "unsolv": [217, 240], "unsolvablefactorerror": [48, 217, 239], "unsort": [21, 32, 88], "unspecifi": [67, 88, 103, 287], "unsplitt": 130, "unstabl": [46, 140], "unstrain": 132, "unsuccess": [79, 86], "unsuit": [13, 206], "unsupport": [13, 16, 38, 144, 211, 212, 216, 221], "unsur": [3, 4, 12], "unsurmount": 254, "until": [3, 12, 14, 27, 36, 39, 41, 48, 50, 51, 52, 53, 54, 55, 56, 60, 80, 82, 88, 89, 98, 115, 124, 128, 214, 217, 230, 237, 289], "untouch": 88, "untyp": 69, "unus": 13, "unusu": [4, 14, 41, 252], "unwant": [88, 239, 259], "unwelcom": 5, "unwieldi": [12, 37], "unwrap": 159, "up": [2, 3, 7, 8, 9, 11, 12, 13, 14, 15, 18, 21, 27, 28, 30, 31, 39, 41, 42, 43, 55, 59, 64, 67, 69, 71, 79, 80, 82, 88, 89, 90, 92, 93, 94, 96, 97, 104, 105, 109, 113, 115, 116, 118, 124, 128, 129, 136, 146, 148, 155, 156, 158, 171, 186, 188, 204, 206, 207, 208, 210, 211, 212, 216, 218, 221, 222, 223, 228, 230, 231, 233, 234, 237, 238, 239, 240, 253, 254, 255, 256, 257, 260, 288, 289, 292, 293, 295, 299, 309, 311], "upcom": 3, "updat": [3, 11, 13, 16, 55, 59, 88, 138, 158, 171, 181, 184, 185, 187, 206, 210, 214, 217, 221, 234, 247, 257, 306], "upgrad": [3, 60], "upload": [5, 128], "upon": [7, 12, 15, 25, 26, 27, 30, 33, 35, 36, 41, 69, 88, 128, 148, 155, 158, 164, 185, 191, 229, 237, 246, 253, 272, 297], "upper": [4, 65, 87, 89, 92, 96, 97, 104, 105, 119, 120, 124, 127, 128, 136, 142, 152, 184, 191, 206, 210, 212, 214, 216, 217, 221, 231, 239, 246, 265, 299], "upper_bob": 152, "upper_bound": [97, 98, 101, 104], "upper_half_plan": 229, "upper_half_unit_disk": 229, "upper_hessenberg_decomposit": 124, "upper_incomplete_gamma_funct": 96, "upper_limit": [142, 287], "upper_polygon": 104, "upper_seg": 104, "upper_triangular": [65, 124], "upper_triangular_solv": [119, 124], "uppercas": [61, 89, 231], "uppergamma": [4, 93, 96, 221, 241], "uppertriangularhandl": 65, "uppertriangularmatrix": 65, "uppertriangularpred": 65, "upretti": 12, "upright": 302, "upsid": 11, "upsilon": [16, 221], "upstream": 11, "upto": [223, 228, 237], "upward": [136, 210, 216], "ur": 234, "url": [0, 89, 257], "urul": 115, "us": [0, 1, 3, 4, 8, 9, 10, 11, 12, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 45, 46, 47, 49, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 166, 168, 170, 171, 172, 175, 177, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 268, 269, 271, 272, 274, 275, 277, 282, 283, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "usa": [87, 215], "usabl": [3, 14, 55, 211, 212, 221, 240, 291], "usag": [4, 5, 12, 15, 16, 17, 23, 33, 41, 42, 43, 60, 63, 90, 94, 115, 128, 188, 207, 208, 210, 214, 221, 229, 231, 234, 237, 238, 242, 256, 260, 272, 273, 280, 292], "use_add": 255, "use_cach": 217, "use_ecm": 128, "use_imp": 260, "use_latex": [116, 205, 207, 296], "use_lra_theori": 118, "use_model": 118, "use_pm1": [88, 128], "use_renam": 69, "use_rho": [88, 128], "use_symengin": 2, "use_tri": [88, 128], "use_unicod": [12, 14, 43, 53, 67, 68, 69, 92, 96, 115, 116, 124, 137, 144, 163, 205, 206, 208, 209, 220, 221, 222, 240, 241, 287, 291, 293, 296, 297, 298], "use_unicode_sqrt_char": 221, "usecas": 13, "usefulli": 212, "useless": [12, 193, 212, 214], "usepackag": 221, "user": [0, 2, 3, 4, 5, 8, 9, 12, 13, 14, 15, 21, 22, 23, 26, 28, 31, 35, 38, 40, 41, 43, 68, 69, 70, 79, 80, 87, 88, 89, 90, 96, 100, 113, 117, 120, 124, 130, 131, 133, 136, 137, 140, 142, 144, 148, 151, 156, 159, 179, 180, 189, 195, 196, 200, 204, 208, 211, 214, 216, 218, 219, 220, 221, 222, 230, 233, 239, 240, 241, 250, 253, 254, 256, 257, 260, 265, 269, 270, 275, 286, 289, 290, 292, 293, 294, 301], "user_def_func": 221, "user_funct": [69, 221], "user_guid": 260, "usernam": [9, 11], "userwarn": [12, 200, 250, 257, 293], "usm": 210, "ussr": 215, "usual": [2, 12, 13, 14, 15, 16, 18, 23, 33, 35, 36, 39, 41, 48, 68, 70, 79, 87, 88, 89, 106, 113, 115, 124, 151, 177, 189, 195, 196, 208, 209, 210, 211, 212, 214, 217, 220, 221, 222, 228, 231, 237, 240, 241, 242, 246, 247, 254, 256, 260, 265, 274, 286, 289, 292, 296, 297], "utf": 221, "util": [2, 3, 4, 5, 7, 11, 50, 52, 67, 75, 77, 79, 80, 93, 94, 99, 100, 101, 104, 118, 128, 129, 133, 148, 149, 153, 156, 161, 195, 198, 210, 214, 218, 221, 233, 234, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 277, 282, 283], "utilis": 68, "utm": 128, "uv": [191, 309, 310], "uvar": 115, "uwa": 93, "uwaterloo": 89, "ux": 238, "uxi": 238, "uxt": 238, "v": [0, 8, 9, 18, 27, 28, 30, 31, 32, 33, 35, 36, 37, 46, 48, 52, 57, 61, 69, 78, 84, 87, 88, 89, 90, 91, 92, 96, 102, 113, 115, 117, 124, 128, 131, 132, 134, 137, 148, 149, 150, 152, 155, 159, 163, 164, 176, 191, 196, 200, 202, 204, 207, 214, 215, 216, 217, 221, 231, 233, 234, 237, 239, 241, 252, 259, 265, 268, 269, 270, 271, 272, 274, 299, 302], "v1": [30, 32, 90, 101, 124, 155, 200, 201, 204, 241, 260, 265, 268, 269, 270, 271], "v10": 69, "v18": 69, "v1pt": 30, "v1pt_theori": [30, 35, 204], "v1x": 32, "v1y": 32, "v1z": 32, "v2": [9, 32, 90, 101, 124, 155, 200, 201, 204, 260, 265, 268, 269, 270, 271], "v2pt": [22, 30], "v2pt_theori": [22, 27, 28, 30, 31, 35, 204, 299, 302, 303, 309, 310, 311], "v2x": 32, "v2y": 32, "v2z": 32, "v3": [124, 200, 204, 271], "v4b3": 89, "v5_2": 88, "v6": 69, "v8": 241, "v_": [18, 148], "v_0": 239, "v_1": [90, 216, 234, 239], "v_2": [90, 216, 234], "v_a": 265, "v_arrai": 78, "v_aug": 124, "v_b": 265, "v_field": 90, "v_i": [128, 216, 239], "v_m": [18, 132, 239], "v_m_max": [18, 132, 134], "v_m_tild": [18, 132], "v_m_tilde_num": 18, "v_mt": 18, "v_n": 216, "v_o_n": [22, 30], "v_p_n": 22, "v_r_n": 22, "va": 217, "vacuou": 124, "vajnovszki": 259, "val": [69, 88, 100, 207, 212, 216, 260], "val_dict": 302, "val_inf": 237, "valenc": 248, "valid": [2, 4, 5, 11, 13, 14, 22, 32, 36, 41, 42, 43, 51, 55, 62, 64, 66, 67, 68, 69, 81, 87, 88, 93, 94, 104, 124, 128, 130, 149, 150, 153, 154, 158, 160, 164, 183, 188, 195, 198, 200, 205, 211, 214, 217, 220, 221, 229, 233, 234, 237, 239, 240, 241, 260, 293, 297, 299, 302, 304], "validate_system": [158, 304], "validrelationoper": 88, "valu": [2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 22, 27, 30, 33, 35, 36, 39, 41, 43, 46, 48, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 79, 80, 84, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 113, 115, 116, 118, 119, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 140, 142, 144, 146, 148, 149, 152, 153, 154, 155, 158, 159, 160, 164, 167, 170, 175, 177, 180, 183, 185, 186, 187, 188, 191, 192, 194, 196, 200, 201, 204, 206, 207, 209, 210, 211, 212, 214, 216, 217, 218, 219, 221, 222, 227, 228, 229, 230, 233, 234, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 252, 254, 255, 259, 260, 261, 262, 268, 270, 272, 275, 287, 289, 292, 299, 302, 304], "valuat": 237, "value1": 207, "value2": 207, "value_const": 69, "valueerror": [12, 14, 33, 38, 41, 54, 55, 62, 64, 67, 69, 70, 74, 80, 88, 89, 97, 98, 101, 103, 104, 115, 120, 124, 127, 128, 136, 142, 144, 159, 165, 204, 206, 208, 210, 214, 216, 229, 234, 237, 239, 240, 259, 262, 272], "van": [124, 128, 215], "vanilla": 41, "vanish": [124, 191, 214, 217, 220, 237, 265], "vanston": 128, "var": [14, 16, 46, 51, 67, 69, 87, 88, 92, 93, 111, 115, 118, 124, 144, 200, 207, 216, 220, 221, 233, 234, 260, 298], "var_in_dcm": 200, "var_nam": 88, "var_start_end": 207, "var_start_end_i": 207, "var_start_end_u": 207, "var_start_end_v": 207, "var_start_end_x": 207, "var_sub1__sup_sub2": 221, "var_t": 234, "varbosonicbasi": 191, "varepsilon": 237, "vari": [18, 21, 28, 36, 39, 67, 69, 88, 102, 104, 131, 134, 136, 142, 148, 153, 156, 189, 228, 239, 259, 272, 303], "variabl": [1, 2, 4, 5, 11, 12, 13, 14, 15, 17, 18, 22, 30, 31, 32, 33, 37, 39, 42, 43, 46, 48, 49, 51, 52, 54, 56, 60, 61, 62, 64, 65, 67, 69, 70, 83, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 105, 107, 113, 115, 116, 118, 124, 130, 131, 134, 136, 137, 140, 142, 144, 148, 154, 158, 165, 180, 185, 189, 191, 194, 200, 202, 209, 210, 211, 212, 214, 216, 217, 218, 221, 222, 227, 228, 233, 234, 236, 237, 238, 239, 240, 248, 252, 254, 255, 256, 260, 265, 268, 269, 271, 272, 274, 287, 289, 291, 293, 298, 300, 305, 309, 311], "variable_map": 200, "variable_nam": [265, 272], "varianc": 241, "variancematrix": 241, "variant": [214, 237, 240], "variat": [80, 88, 214, 228, 237, 299], "variation_of_paramet": 237, "variationofparamet": 237, "varieti": [28, 45, 57, 69, 70, 80, 88, 129, 137, 208, 215, 217, 241, 259], "varii": 78, "varion": 43, "variou": [2, 4, 5, 14, 15, 18, 28, 39, 43, 48, 51, 67, 69, 71, 72, 79, 87, 88, 93, 108, 113, 115, 118, 124, 134, 138, 155, 170, 174, 175, 186, 188, 208, 209, 212, 213, 214, 216, 222, 228, 231, 234, 237, 238, 240, 254, 297, 299, 300, 301, 305], "varlist": 124, "varnoth": 229, "varphi": [92, 96, 216, 221, 237], "varshalovich": [170, 188], "vast": [2, 57, 115, 213], "vastli": 36, "vat": 0, "vc": 88, "vdiff": 88, "vdot": [120, 124, 196], "ve": 43, "vec": [30, 55, 124, 152, 200, 206, 214, 271, 272, 274], "vec1": 202, "vec2": 202, "vech": 124, "vect": [201, 265, 268], "vectfield": [33, 201, 268, 272], "vector": [4, 13, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 39, 47, 61, 65, 69, 72, 79, 80, 88, 90, 96, 101, 102, 103, 110, 111, 117, 124, 129, 134, 136, 138, 140, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 177, 186, 188, 193, 196, 200, 202, 204, 205, 208, 210, 216, 221, 231, 234, 237, 239, 241, 246, 247, 252, 253, 267, 271, 276, 280, 282, 293, 299, 302, 306, 309, 310, 311], "vector_coplanar": 61, "vector_field": [90, 272], "vector_integr": [268, 275], "vector_nam": 265, "vector_onli": 61, "vector_part": 61, "vectoradd": 269, "vectorfield": 275, "vectori": [33, 204, 269, 274], "vectorinto": 36, "vectormul": 269, "vectors_in_basi": 90, "vectorzero": 269, "vee": [113, 118, 124], "vega": 79, "vehicl": 2, "vel": [18, 22, 24, 30, 35, 148, 152, 204, 272, 302, 304, 306, 310], "vel_p": 27, "vel_vec": 204, "veloc": [2, 21, 24, 27, 28, 30, 32, 33, 36, 124, 132, 134, 148, 149, 152, 153, 155, 156, 158, 165, 193, 195, 196, 200, 204, 272, 274, 299, 303, 304, 306, 309, 310, 311], "velocity_con": 30, "velocity_constraint": [25, 30, 153, 158, 299, 302, 304, 306], "venu": 194, "venus_a": 194, "venv": [8, 9], "verbatim": [5, 221], "verbos": [12, 69, 88, 124, 128, 221, 252, 253, 296], "veri": [1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 18, 21, 22, 30, 35, 36, 37, 38, 41, 43, 48, 69, 84, 88, 89, 92, 93, 98, 100, 106, 110, 113, 115, 118, 124, 128, 132, 135, 144, 156, 163, 196, 208, 210, 211, 214, 216, 217, 218, 220, 221, 222, 228, 229, 230, 231, 233, 234, 237, 239, 240, 241, 252, 253, 254, 260, 286, 289, 292, 297, 306], "verif": [67, 210, 239], "verifi": [12, 22, 41, 48, 53, 55, 59, 67, 79, 85, 89, 90, 208, 214, 220, 237, 239, 240, 242, 243, 297], "verify_numer": [13, 88], "verion": 88, "verlag": [115, 215], "vers": 43, "versa": [89, 115, 128, 136, 181, 200, 208, 212, 269, 270, 289], "versatil": 113, "version": [2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 17, 18, 22, 41, 42, 43, 45, 57, 58, 59, 62, 68, 69, 79, 80, 86, 88, 89, 93, 94, 96, 115, 118, 119, 121, 124, 126, 128, 147, 149, 152, 175, 189, 193, 200, 206, 207, 208, 210, 211, 212, 214, 216, 217, 221, 224, 233, 239, 241, 251, 252, 254, 255, 256, 257, 259, 260, 263, 265, 271, 292, 293], "versor": 61, "vert": [33, 36, 127, 274], "vertex": [72, 82, 99, 104, 115, 210], "vertic": [13, 68, 72, 81, 82, 98, 99, 101, 103, 104, 105, 115, 117, 124, 135, 136, 137, 138, 140, 158, 163, 171, 206, 207, 210, 216, 221, 229, 259, 275, 307], "vertical_direct": 68, "veryuniqu": 68, "vf": 221, "vfield": [212, 271], "vfree_group": 70, "vg": 214, "vi": 88, "via": [2, 8, 9, 14, 15, 18, 39, 43, 53, 57, 59, 62, 63, 64, 79, 80, 88, 93, 96, 113, 115, 118, 124, 128, 129, 130, 136, 156, 200, 206, 208, 212, 214, 216, 217, 220, 221, 240, 250, 253, 254, 265, 274, 292], "viabl": [8, 89, 287], "vibrat": 303, "vice": [89, 115, 128, 136, 181, 200, 208, 212, 269, 270, 289], "vicki": 96, "video": [7, 295], "viet": 217, "view": [2, 4, 7, 11, 12, 15, 36, 57, 69, 70, 71, 88, 124, 136, 193, 196, 207, 214, 221, 237, 240, 254, 256, 259], "viewcod": 4, "viewcont": 265, "viewdoc": 230, "vieweg": 215, "viewer": [2, 5, 68, 221, 255], "vig": 0, "vigener": 89, "vigenere_ciph": 89, "vigkla": 217, "viktor": 238, "vim": 11, "vincent": [217, 259], "violat": [16, 22, 206, 218, 233], "virtu": [28, 30], "virtual": [3, 8, 14, 36, 59, 88, 104, 290], "viscou": [148, 303], "visibl": [11, 113, 207], "visit": [59, 72, 79, 88, 93, 294], "visit_token": 130, "visitor": 256, "visual": [3, 13, 18, 23, 88, 128, 137, 144, 220, 233, 299], "visualis": 46, "vital": 231, "vlahovski": 230, "vlatex": [32, 36, 157, 200, 205], "vline": 221, "vlist": 124, "vo": 237, "vobj": 221, "void": 254, "vol": [72, 80, 89, 93, 96, 113, 124, 128, 145, 148, 154, 216, 217, 231, 256, 259], "volatil": 69, "volum": [0, 4, 69, 87, 96, 113, 115, 206, 215, 231, 237, 256, 265], "volume_result": 69, "voluntari": 18, "voluntarili": [18, 131], "von": [215, 241], "von_mises_distribut": 241, "vonmis": 241, "vonmisesdistribut": 241, "voss": 11, "vpprint": [32, 36, 157, 205], "vprint": [32, 36, 157, 204, 205], "vr": 234, "vradiu": 98, "vring": 212, "vsin": 88, "vslobodi": 124, "vsort": 88, "vsort0": 88, "vssut": 46, "vstack": [124, 210], "vt": 89, "w": [13, 16, 29, 32, 33, 34, 46, 57, 61, 69, 72, 78, 80, 87, 88, 89, 90, 91, 94, 96, 113, 115, 118, 124, 125, 149, 152, 155, 158, 160, 165, 176, 180, 189, 203, 204, 206, 207, 209, 210, 214, 215, 216, 217, 218, 222, 228, 229, 231, 233, 234, 237, 238, 240, 241, 252, 260, 262, 272, 298, 303, 310], "w1": [35, 165, 233], "w2": [35, 87, 165], "w2e": 87, "w3": [35, 165, 221], "w3j": 170, "w_": [124, 216], "w_0": [160, 234], "w_1": [35, 216], "w_2": [35, 216], "w_3": 35, "w_8": 136, "w_a_n": 22, "w_b_n": [22, 30], "w_frame": 152, "w_i": [115, 160, 217, 237], "w_j": 216, "w_k": 94, "w_o": 160, "w_r": 216, "w_r_n_qd": [309, 310], "w_x": 35, "w_y": 35, "w_z": 35, "wa": [2, 3, 9, 11, 12, 13, 14, 16, 21, 22, 27, 28, 35, 36, 37, 41, 43, 55, 71, 77, 79, 80, 82, 88, 89, 90, 96, 101, 124, 128, 130, 149, 155, 186, 196, 206, 208, 210, 214, 216, 217, 218, 220, 221, 230, 231, 233, 237, 239, 241, 250, 252, 255, 257, 259, 260, 287, 289, 291, 292, 295, 306], "wagstaff": 128, "wai": [2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 21, 22, 23, 27, 32, 33, 35, 38, 39, 40, 41, 42, 43, 48, 50, 52, 55, 60, 68, 70, 71, 72, 77, 79, 80, 81, 84, 88, 90, 93, 96, 104, 108, 112, 113, 115, 117, 120, 124, 127, 128, 130, 132, 133, 136, 140, 148, 151, 153, 155, 158, 171, 185, 188, 189, 194, 196, 199, 200, 202, 204, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 228, 231, 233, 234, 237, 238, 240, 242, 243, 246, 247, 250, 254, 256, 259, 260, 265, 269, 270, 271, 272, 274, 286, 287, 289, 290, 291, 292, 297, 298, 306, 308, 309], "waist": 160, "waist2rayleigh": 160, "waist_approximation_limit": 160, "waist_in": 160, "waist_out": 160, "wait": [12, 36], "wald": 241, "walk": [15, 69, 72, 88, 183, 186, 231], "walker": 237, "wall": [11, 13, 149, 152, 158, 307], "walli": 87, "walter": 29, "wang": [214, 215, 259], "wang78": [214, 215], "wang81": 215, "want": [2, 3, 4, 8, 9, 11, 12, 13, 14, 15, 16, 18, 22, 30, 35, 36, 38, 39, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 65, 67, 69, 70, 71, 72, 80, 88, 89, 95, 100, 102, 104, 107, 113, 115, 120, 124, 125, 128, 129, 131, 134, 142, 144, 147, 154, 174, 184, 185, 188, 191, 194, 196, 202, 204, 207, 209, 210, 211, 214, 216, 217, 218, 220, 221, 222, 228, 229, 231, 233, 234, 237, 238, 239, 240, 241, 242, 247, 250, 252, 254, 256, 259, 260, 270, 272, 275, 286, 287, 289, 291, 292, 293, 294, 296, 297], "war": 89, "warn": [3, 4, 16, 17, 36, 43, 88, 89, 103, 118, 130, 136, 149, 200, 207, 209, 221, 237, 239, 250, 252, 254, 258, 259, 284, 293], "warningcl": [250, 257], "warns_deprecated_sympi": [3, 12, 250, 255, 257], "warrant": 12, "washington": 128, "wasn": [12, 13], "wast": [88, 125, 210], "watch": 80, "watson": [70, 233], "wave": [146, 161, 162, 163, 224, 282], "wavefunct": [167, 180, 189, 192, 282], "wavelen": 160, "wavelength": [160, 165], "wavenumb": 165, "we": [0, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 16, 18, 21, 22, 23, 24, 25, 26, 27, 30, 32, 33, 35, 36, 39, 41, 42, 43, 45, 48, 49, 50, 51, 53, 55, 56, 57, 62, 63, 64, 67, 68, 69, 70, 71, 72, 74, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 96, 101, 106, 111, 112, 113, 115, 116, 117, 118, 124, 125, 127, 128, 130, 132, 134, 144, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 163, 166, 174, 177, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 196, 200, 202, 204, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 228, 229, 231, 233, 234, 236, 237, 238, 239, 241, 243, 245, 247, 252, 253, 254, 256, 257, 259, 260, 265, 269, 270, 271, 272, 274, 275, 286, 287, 289, 291, 292, 293, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311], "weak": [79, 88, 123, 124, 153, 211, 214], "weakli": [124, 259], "web": [5, 7, 8, 11, 30, 34, 72, 80, 89, 93, 96, 100, 105, 115, 128, 203, 210, 215, 233, 234, 241, 259, 293], "webpag": [2, 5], "websit": [5, 7, 295], "wedg": [90, 113], "wedgeproduct": 90, "weibul": 241, "weibull_distribut": 241, "weibulldistribut": 241, "weight": [39, 88, 96, 103, 105, 115, 117, 124, 175, 233, 287], "weisstein": 215, "weisstein09": [214, 215], "welcom": [211, 237, 290, 301], "weld": 152, "weldjoint": 152, "welecka": 191, "well": [3, 4, 5, 7, 11, 13, 14, 15, 16, 18, 21, 22, 27, 28, 32, 35, 37, 39, 41, 43, 59, 65, 67, 68, 69, 70, 71, 72, 74, 80, 87, 88, 93, 94, 96, 115, 121, 124, 140, 145, 152, 158, 181, 190, 193, 194, 206, 207, 208, 210, 211, 212, 214, 216, 217, 221, 228, 229, 230, 231, 233, 237, 239, 240, 252, 253, 269, 270, 274, 289, 291, 292, 297, 306, 307], "welleslei": 87, "wen": 148, "wendi": 80, "went": 35, "were": [3, 5, 11, 12, 13, 14, 15, 16, 21, 27, 32, 33, 36, 37, 41, 43, 68, 71, 80, 82, 88, 89, 94, 105, 113, 124, 128, 129, 130, 132, 158, 208, 210, 212, 214, 215, 216, 217, 220, 221, 222, 230, 233, 239, 259, 260, 262, 289, 291, 292, 296, 297], "werner": 29, "weslei": [72, 80, 128, 215], "wester": [213, 283], "wester1999": 220, "weyl": [111, 117], "weyl_group": 117, "weylelt": 117, "weylgroup": 117, "wf": [146, 302], "wf_cont": 302, "wf_i": 302, "wf_mc": 302, "wfrad": 302, "wgate": 176, "what": [4, 5, 7, 11, 12, 13, 14, 15, 16, 22, 24, 30, 35, 36, 37, 38, 39, 41, 42, 43, 48, 49, 58, 67, 69, 80, 82, 87, 88, 89, 90, 94, 95, 98, 99, 103, 113, 115, 117, 124, 128, 130, 149, 152, 153, 156, 158, 190, 191, 194, 196, 200, 207, 212, 214, 217, 220, 221, 222, 228, 230, 231, 233, 234, 237, 239, 246, 250, 252, 254, 255, 260, 269, 270, 275, 287, 289, 290, 292, 296, 297, 301, 306], "whatev": [13, 14, 16, 43, 79, 88, 89, 233, 237, 238, 240, 260], "wheel": [13, 302], "when": [0, 2, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 35, 36, 37, 38, 39, 41, 42, 43, 46, 48, 52, 54, 55, 56, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 79, 80, 81, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 112, 115, 116, 118, 119, 124, 128, 129, 130, 131, 132, 134, 136, 138, 140, 142, 144, 145, 148, 151, 152, 155, 156, 158, 159, 164, 165, 170, 175, 176, 180, 183, 185, 193, 194, 195, 205, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 222, 223, 227, 228, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 243, 245, 246, 250, 252, 253, 254, 255, 257, 259, 260, 262, 264, 269, 287, 289, 291, 292, 297, 298, 299, 302, 304, 310], "whenc": 231, "whenev": [2, 3, 12, 13, 14, 15, 16, 43, 86, 113, 115, 124, 198, 207, 208, 209, 210, 212, 223, 228, 231, 241, 287, 289, 292], "where": [3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 18, 21, 22, 26, 27, 28, 30, 31, 32, 33, 35, 36, 39, 41, 42, 43, 46, 48, 51, 52, 53, 55, 57, 60, 61, 65, 67, 68, 69, 70, 77, 78, 79, 80, 82, 84, 86, 87, 88, 89, 90, 92, 93, 94, 96, 98, 101, 103, 104, 105, 106, 110, 111, 112, 113, 115, 117, 118, 119, 120, 124, 128, 130, 131, 134, 136, 138, 140, 141, 144, 148, 149, 152, 153, 154, 155, 158, 159, 165, 175, 180, 186, 188, 190, 191, 192, 193, 194, 200, 204, 206, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 221, 222, 223, 224, 227, 228, 229, 230, 231, 233, 234, 237, 238, 239, 241, 242, 245, 247, 252, 253, 254, 255, 259, 260, 262, 265, 272, 274, 287, 289, 291, 293, 297, 298], "wherea": [14, 15, 39, 41, 48, 53, 65, 69, 89, 98, 104, 113, 118, 144, 196, 208, 211, 214, 217, 221, 239, 240, 259, 297], "wherebi": 89, "wherev": [22, 59, 233, 240, 269], "whet": 291, "whether": [3, 7, 8, 12, 13, 14, 15, 21, 22, 36, 41, 42, 43, 48, 53, 55, 56, 57, 67, 68, 69, 74, 79, 87, 88, 89, 95, 96, 100, 103, 115, 116, 118, 124, 128, 132, 134, 140, 153, 154, 158, 174, 179, 198, 202, 207, 210, 211, 212, 216, 217, 221, 224, 228, 229, 233, 234, 237, 239, 240, 241, 242, 252, 254, 259, 260, 265, 268, 293], "which": [1, 2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 39, 41, 42, 43, 45, 46, 48, 49, 51, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 78, 79, 80, 81, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 101, 102, 103, 104, 107, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 123, 124, 127, 128, 130, 131, 132, 134, 136, 137, 138, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 164, 165, 177, 180, 186, 187, 188, 189, 191, 195, 196, 197, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 222, 223, 224, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 245, 247, 252, 253, 254, 255, 256, 257, 259, 260, 262, 265, 267, 270, 274, 275, 286, 287, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 302, 303, 304, 307, 310], "which_all_root": 217, "which_real_root": 217, "while": [3, 4, 7, 11, 12, 13, 14, 15, 16, 22, 27, 33, 41, 43, 45, 49, 50, 55, 57, 68, 69, 70, 79, 80, 81, 84, 87, 88, 89, 90, 92, 93, 94, 98, 102, 104, 112, 118, 124, 128, 129, 130, 132, 136, 138, 140, 148, 149, 152, 153, 154, 156, 158, 175, 195, 196, 200, 208, 210, 216, 219, 221, 237, 239, 240, 252, 254, 256, 259, 274, 286, 292, 293, 306], "whippl": [301, 305], "white": [116, 136, 205, 241], "whitespac": [5, 12, 88, 257], "whittak": 115, "whittl": 297, "whl": 69, "who": [2, 3, 4, 9, 11, 12, 30, 36, 39, 43, 89, 90, 214, 221, 290, 301], "whole": [4, 12, 13, 41, 88, 90, 96, 115, 137, 146, 207, 208, 210, 216, 217, 221, 224, 229, 231, 237, 240, 259], "whole_submodul": 216, "whose": [5, 13, 15, 25, 33, 36, 41, 43, 48, 68, 70, 72, 77, 80, 87, 88, 89, 94, 98, 102, 104, 105, 111, 115, 118, 124, 128, 148, 155, 163, 186, 196, 201, 202, 209, 210, 212, 216, 217, 228, 229, 233, 237, 238, 239, 241, 247, 252, 256, 259, 260, 265, 268, 270, 272], "wht": 91, "why": [3, 12, 13, 14, 16, 36, 41, 69, 88, 212, 218, 228, 231, 260, 290, 292, 293], "wick": 191, "wide": [9, 30, 41, 116, 124, 138, 205, 210, 211, 217, 221, 241], "widen": 218, "wider": [45, 221], "widget": 221, "width": [13, 68, 69, 116, 205, 207, 217, 221, 252, 303], "wiener": 241, "wiener_process": 241, "wienerprocess": [13, 241], "wigner": [170, 188, 241, 282], "wigner3j": [170, 206], "wigner6j": [170, 206], "wigner9j": [170, 206], "wigner_3j": 206, "wigner_6j": 206, "wigner_9j": 206, "wigner_d": 206, "wigner_d_smal": 206, "wigner_semicircle_distribut": 241, "wignerd": 188, "wignersemicircl": 241, "wignerssemicirclelaw": 241, "wiki": [3, 4, 5, 11, 16, 34, 41, 43, 61, 63, 64, 65, 67, 68, 69, 71, 76, 77, 79, 80, 87, 88, 89, 90, 91, 93, 94, 96, 98, 100, 104, 105, 106, 115, 116, 117, 118, 120, 124, 128, 142, 144, 147, 160, 162, 163, 164, 166, 167, 168, 172, 173, 174, 177, 179, 180, 189, 191, 195, 200, 202, 203, 207, 210, 217, 224, 228, 229, 230, 234, 237, 240, 241, 254, 259, 265, 267, 271, 273, 275, 293], "wikibook": [5, 115, 116], "wikidel": 271, "wikidyad": [32, 34, 203], "wikidyadicproduct": [32, 34, 203], "wikipappu": 100, "wikipedia": [4, 15, 34, 41, 43, 61, 63, 64, 65, 67, 68, 69, 71, 76, 77, 79, 80, 87, 88, 89, 90, 91, 93, 94, 96, 98, 100, 104, 105, 106, 115, 117, 118, 120, 124, 128, 142, 144, 147, 160, 162, 163, 164, 166, 167, 168, 172, 173, 174, 177, 179, 180, 189, 191, 194, 200, 202, 203, 210, 217, 224, 228, 229, 230, 237, 240, 241, 254, 259, 265, 267, 271, 273, 275, 291, 293, 295], "wild": [16, 88, 233, 259], "wildcard": [88, 233], "wildfunct": 88, "wilei": 241, "wilf": [72, 87, 239], "wilkinson": [48, 124], "william": 210, "win": 60, "window": [1, 9, 11, 135, 262], "wip": 11, "wire": 171, "wire_idx": 171, "wirefram": 207, "wisdom": 90, "wise": [69, 70, 94, 124, 210, 214, 221, 227, 253], "wish": [2, 4, 11, 14, 16, 32, 36, 43, 55, 59, 69, 88, 89, 92, 113, 128, 186, 256, 260, 287, 291, 293, 298], "wishart": 241, "wishart_distribut": 241, "wit": 128, "with_default": [18, 131, 132, 134, 299], "with_pivot": 124, "within": [2, 5, 12, 13, 15, 17, 18, 28, 35, 36, 41, 54, 67, 68, 69, 71, 88, 94, 101, 104, 118, 120, 124, 128, 129, 131, 132, 134, 136, 148, 186, 200, 209, 211, 212, 217, 219, 229, 237, 239, 240, 241, 252, 253, 262, 309], "without": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 22, 26, 27, 32, 35, 41, 43, 45, 46, 59, 63, 65, 66, 69, 87, 88, 89, 90, 92, 96, 113, 115, 116, 120, 123, 124, 144, 145, 148, 152, 156, 191, 195, 196, 200, 201, 207, 210, 211, 214, 217, 221, 223, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 243, 246, 247, 250, 252, 253, 254, 257, 259, 260, 262, 268, 271, 293, 297, 308, 310], "withstand": [136, 137], "wittkopf": 215, "wkshum": 234, "wlog": 231, "wm": 241, "wminu": 124, "wn_m": 124, "wo": 22, "wojciech": 29, "wolfram": [4, 65, 81, 82, 88, 89, 91, 93, 94, 96, 98, 104, 115, 124, 128, 130, 215, 221, 223, 224, 226, 229, 234, 241, 259, 293], "wolphramalpha": 237, "won": [3, 11, 12, 14, 16, 43, 69, 132, 233, 240, 292], "wonder": 293, "wor6d": 89, "word": [3, 5, 9, 12, 15, 22, 28, 43, 65, 84, 87, 88, 89, 94, 96, 118, 144, 148, 153, 208, 211, 216, 233, 234, 237, 239, 254, 265, 270, 289], "word_sep": 89, "wordpress": [113, 234], "work": [0, 2, 3, 4, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 28, 30, 36, 38, 39, 41, 42, 43, 48, 54, 59, 62, 64, 67, 68, 69, 71, 79, 80, 81, 88, 89, 92, 96, 113, 115, 117, 118, 120, 124, 125, 128, 130, 136, 149, 159, 171, 175, 180, 184, 185, 186, 187, 190, 193, 202, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 221, 228, 229, 230, 231, 233, 234, 237, 239, 240, 241, 247, 252, 253, 254, 256, 259, 260, 261, 262, 269, 270, 289, 290, 291, 292, 293, 296, 297, 302], "workaround": [8, 260], "workflow": [6, 7, 8, 9, 10, 12, 14, 30, 54, 55, 211, 254, 260], "workhors": 228, "world": [9, 27, 89, 140, 259, 306], "worri": [14, 16, 88, 292], "wors": [14, 43, 118, 233], "worst": [128, 217, 237], "worth": [3, 41, 43, 153, 200, 270, 272], "worthwhil": 92, "wou": 80, "would": [1, 3, 4, 5, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 27, 30, 32, 33, 35, 37, 39, 41, 42, 43, 45, 49, 52, 54, 59, 68, 69, 70, 77, 79, 80, 87, 88, 89, 93, 94, 100, 104, 113, 115, 124, 128, 130, 133, 136, 144, 145, 146, 150, 152, 186, 188, 191, 196, 200, 207, 210, 211, 212, 214, 217, 218, 220, 221, 222, 224, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 243, 245, 246, 252, 254, 256, 259, 260, 262, 270, 271, 272, 274, 286, 287, 289, 291, 292, 293, 296, 297, 298, 306], "wouldn": 43, "woven": 208, "wp1": 90, "wpathwai": 18, "wplu": 124, "wr": 302, "wr_cont": 302, "wr_i": 302, "wr_mc": 302, "wrap": [2, 3, 4, 11, 12, 13, 19, 36, 62, 63, 64, 65, 69, 77, 88, 94, 116, 129, 130, 151, 156, 205, 207, 210, 211, 214, 221, 224, 240, 246, 253, 257, 260, 262, 282, 292, 299], "wrap_lin": [116, 205, 221, 237], "wrapper": [2, 13, 15, 27, 43, 63, 65, 69, 80, 88, 96, 124, 202, 205, 207, 210, 211, 214, 221, 228, 237, 240, 241, 253, 257, 259], "wrapping_geometri": 159, "wrapping_pathwai": 156, "wrappingcylind": [18, 156, 159], "wrappinggeometrybas": [156, 159], "wrappingpathwai": [18, 156], "wrappingspher": 159, "wrench": 96, "wright": 215, "write": [3, 6, 7, 9, 10, 13, 14, 15, 18, 30, 35, 36, 39, 41, 42, 44, 48, 60, 69, 77, 88, 89, 95, 96, 113, 115, 120, 171, 209, 210, 212, 214, 216, 221, 230, 231, 234, 237, 240, 246, 252, 253, 254, 260, 290, 291, 292, 297, 301], "writer": 252, "written": [0, 2, 4, 5, 11, 12, 13, 14, 15, 23, 30, 33, 34, 35, 36, 41, 43, 65, 69, 76, 79, 80, 84, 88, 93, 96, 100, 106, 111, 113, 117, 118, 127, 128, 151, 191, 203, 208, 209, 217, 221, 224, 228, 231, 234, 237, 254, 272, 274, 290, 291, 292, 297, 306], "wrong": [3, 5, 11, 12, 13, 14, 79, 88, 89, 96, 98, 124, 200, 237, 255, 289, 293], "wronskian": [124, 237], "wrote": [291, 292], "wrrad": 302, "wrt": [22, 30, 67, 69, 88, 90, 96, 105, 124, 200, 201, 214, 217, 265, 267, 268, 272], "wsl": 8, "wsym": 228, "wu_1": 234, "wurlitz": 2, "wv": 176, "wv_1": 234, "ww2040": 241, "www": [4, 5, 46, 61, 67, 79, 80, 89, 91, 93, 115, 116, 124, 128, 142, 144, 205, 210, 215, 220, 221, 230, 233, 234, 237, 241, 259, 293], "www3": [110, 237, 265], "x": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 77, 79, 80, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 123, 124, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 142, 144, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 163, 165, 166, 167, 168, 169, 171, 172, 175, 180, 181, 186, 188, 189, 190, 191, 192, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 252, 253, 254, 255, 257, 259, 260, 262, 265, 268, 269, 270, 271, 272, 274, 275, 286, 287, 289, 291, 292, 293, 296, 297, 298, 299, 302, 304, 306, 307, 309, 310, 311], "x0": [14, 39, 55, 67, 69, 78, 88, 96, 107, 109, 111, 112, 128, 163, 211, 222, 223, 228, 233, 237, 239, 241, 259, 287, 299], "x01": 88, "x02": 88, "x1": [14, 30, 41, 43, 54, 55, 78, 88, 93, 163, 211, 212, 222, 223, 233, 237, 239, 241, 259], "x11": 88, "x12": [14, 88], "x2": [14, 30, 41, 54, 78, 88, 93, 163, 211, 223, 237, 239, 241], "x3": [14, 78, 88, 93, 211, 237, 239, 241], "x4": [14, 88, 93, 211, 239], "x5": [14, 88, 93, 211], "x50": 88, "x51": 88, "x6": [14, 88, 211], "x64": 252, "x7": [14, 88, 211], "x8": [14, 88, 211], "x86": 69, "x9": [14, 88, 211], "x_": [14, 39, 51, 55, 69, 78, 88, 89, 93, 130, 212, 214, 217, 223, 234, 237, 242], "x_0": [39, 78, 79, 89, 110, 111, 112, 214, 223, 234, 237, 241, 287], "x_1": [14, 43, 70, 78, 79, 89, 93, 110, 124, 186, 209, 212, 214, 217, 223, 234, 240], "x_1x_0": 78, "x_2": [14, 70, 78, 93, 110, 186, 209, 214, 217, 223, 234, 240], "x_2x_0": 78, "x_2x_1": 78, "x_3": [14, 70, 78, 110, 186], "x_3x_0": 78, "x_3x_1": 78, "x_3x_2": 78, "x_4": 14, "x_5": 14, "x_6": 14, "x_7": 14, "x_8": 14, "x_9": 14, "x_arrai": 207, "x_b": 138, "x_dom": 211, "x_domain": 212, "x_i": [39, 43, 78, 96, 115, 124, 209, 212, 214, 217, 218, 221, 240], "x_j": [212, 214, 217], "x_k": [43, 89, 214], "x_ket": 186, "x_list": [67, 287], "x_m": 241, "x_n": [39, 43, 70, 78, 89, 110, 124, 209, 212, 214, 217, 234, 240], "x_op": 186, "x_reduc": 50, "x_u": 214, "x_val": 18, "x_valu": 54, "x_var": 207, "x_y": 14, "x_y_reduc": 50, "xa": [88, 209, 214], "xax": 79, "xb": [88, 262], "xb7": 221, "xbra": [169, 181, 186], "xc": [88, 190, 262], "xd": [30, 36], "xd2": 30, "xd_x": 14, "xdagger": 190, "xden": 210, "xdg": 221, "xdirect": 101, "xdvi": 221, "xe": 36, "xelatex": 8, "xetex": 8, "xf": 211, "xf_1": 214, "xfail": [12, 237, 250, 252], "xfield": 212, "xfree_group": 70, "xgate": 175, "xi": [16, 43, 90, 113, 221, 237, 238, 239], "xiuqin": 230, "xj": 208, "xk": [211, 212, 223], "xket": [169, 181, 186], "xl": 88, "xla": [2, 129], "xlabel": [55, 207, 299], "xlim": [88, 207], "xlist": 67, "xm": 241, "xmax": [98, 99, 101, 103, 104, 207], "xmin": [98, 99, 101, 103, 104, 207], "xml": [35, 36, 233, 270, 306, 308], "xn": [39, 43, 212], "xneg": 42, "xnor": 118, "xnum": 210, "xobj": 221, "xop": [169, 181, 186], "xor": [88, 91, 118, 130, 221, 289], "xp": 12, "xpass": [12, 250, 252], "xpath": 233, "xpo": 42, "xr": [211, 219], "xreplac": [14, 15, 18, 88, 124, 200, 304], "xring": 212, "xscale": 207, "xsol": 210, "xsol_uncancel": 210, "xstr": 221, "xsym": 221, "xt": 96, "xthread": 255, "xval": 239, "xvi": [70, 78], "xx": [36, 69, 124, 155, 200, 259], "xxx": [88, 115, 124, 259, 261], "xxxx": 259, "xxxxxx": 259, "xy": [13, 36, 43, 67, 68, 102, 124, 130, 155, 200, 207, 208, 214, 221, 233, 240, 275, 292, 297], "xymatrix": 68, "xypic": 68, "xypic_draw_diagram": 68, "xypicdiagramdraw": 68, "xyx": [200, 265, 267], "xyz": [3, 36, 61, 100, 130, 136, 140, 200, 265, 267, 270], "xz": [36, 200, 207], "xzx": 200, "xzy": 200, "x\u2080": 222, "y": [3, 4, 11, 12, 13, 14, 15, 16, 18, 22, 24, 28, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 79, 80, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 113, 115, 116, 117, 118, 119, 120, 124, 128, 129, 130, 136, 137, 138, 140, 142, 144, 149, 150, 152, 155, 156, 158, 159, 168, 169, 172, 175, 180, 186, 188, 189, 191, 192, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 253, 254, 257, 259, 260, 262, 265, 268, 269, 270, 271, 272, 274, 275, 286, 287, 289, 291, 292, 296, 297, 298, 299, 302, 303, 304, 306, 307, 309, 310, 311], "y0": [55, 88, 107, 109, 111, 237], "y1": [13, 30, 55, 88], "y1d": 30, "y2": [30, 55, 88, 211], "y2d": 30, "y3": [88, 211], "y4": 88, "y_": [55, 69, 96, 113, 146, 206], "y_0": [55, 234, 237], "y_1": [55, 70, 234, 241], "y_2": [55, 70, 234, 241], "y_3": 241, "y_arrai": 207, "y_i": [212, 214, 216, 217, 237], "y_list": [67, 287], "y_n": [96, 234], "y_reduc": 50, "y_var": 207, "yanchukb": 303, "yang": 215, "yann": 128, "yaw": 302, "ybar": 237, "ydirect": 101, "ydot": 55, "ye": [12, 89, 118, 128, 237], "year": [0, 3, 4, 13, 18, 195], "yet": [3, 9, 11, 13, 14, 16, 27, 41, 43, 62, 64, 67, 68, 74, 92, 115, 130, 171, 208, 211, 212, 216, 218, 220, 229, 237, 240, 287], "yf": 211, "yf_1": 214, "ygate": 175, "yi": 41, "yibi": 241, "yield": [48, 50, 51, 52, 53, 55, 56, 67, 69, 79, 88, 89, 93, 96, 112, 113, 128, 136, 144, 150, 185, 206, 209, 214, 216, 217, 222, 223, 228, 229, 230, 233, 234, 239, 256, 259, 293], "yih": 259, "yiu": 215, "yk": [211, 212], "ylabel": [55, 207, 299], "ylim": 207, "ymax": [98, 99, 101, 103, 104, 207], "ymin": [98, 99, 101, 103, 104, 207], "yml": 12, "yn": [96, 221, 227], "ynm": [96, 206], "ynm_c": 96, "yop": 169, "yorgei": 256, "york": [29, 96, 113, 231, 239], "you": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 25, 27, 28, 30, 32, 33, 35, 36, 38, 42, 43, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 67, 69, 70, 71, 79, 80, 87, 88, 89, 90, 92, 94, 95, 96, 100, 102, 104, 106, 107, 112, 113, 115, 116, 118, 120, 121, 124, 125, 128, 129, 130, 131, 132, 134, 144, 146, 147, 152, 153, 154, 155, 158, 180, 185, 186, 189, 191, 195, 200, 202, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 221, 222, 224, 228, 229, 233, 234, 237, 238, 239, 240, 241, 242, 245, 246, 247, 250, 252, 253, 254, 255, 257, 259, 260, 269, 270, 271, 272, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "you_should_include_your_tests_in_coverag": 12, "young": [13, 136, 247], "your": [0, 2, 3, 4, 5, 8, 12, 13, 14, 16, 18, 21, 25, 27, 36, 43, 45, 48, 49, 50, 51, 53, 55, 56, 57, 59, 63, 88, 89, 115, 116, 124, 129, 130, 131, 132, 144, 152, 207, 221, 228, 233, 237, 240, 241, 259, 260, 287, 291, 293, 294, 296, 297], "your_email": 9, "your_hint": 237, "youremail": 9, "yourobject": 14, "yourself": [2, 7, 11, 12, 14, 43, 45, 57, 69, 255, 287], "yp": 55, "ypp": 55, "yr": [211, 219], "yscale": 207, "yu": [113, 206, 231], "yule": 241, "yulesimon": 241, "yum": 9, "yun": [214, 215], "yun76": [214, 215], "yuvalf": 128, "yx": [36, 79, 200], "yxy": [36, 200], "yxz": 200, "yy": [36, 155, 200, 237], "yz": [36, 155, 200, 207], "yzx": [36, 200], "yzy": 200, "z": [4, 13, 14, 15, 16, 18, 22, 24, 27, 28, 30, 31, 32, 33, 35, 36, 37, 41, 43, 51, 54, 55, 56, 61, 65, 66, 69, 70, 79, 80, 87, 88, 89, 90, 91, 93, 94, 96, 100, 101, 102, 103, 104, 113, 115, 118, 120, 124, 130, 136, 137, 138, 144, 146, 148, 149, 150, 152, 155, 156, 158, 159, 160, 169, 171, 175, 185, 186, 188, 192, 196, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 221, 222, 228, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 242, 245, 246, 247, 253, 254, 260, 265, 268, 269, 270, 271, 272, 274, 275, 286, 287, 289, 291, 292, 296, 297, 298, 299, 302, 303, 304, 306, 307, 309, 310, 311], "z0": [88, 228], "z1": [14, 211, 212, 239], "z1_sympi": 211, "z2": [14, 212], "z3": 212, "z4": 212, "z_": [89, 233], "z_0": [113, 233], "z_1": 113, "z_arrai": 207, "z_eq": 37, "z_k": 216, "z_n": [96, 215], "z_p": 214, "z_r": 160, "z_r_in": 160, "z_r_out": 160, "z_sympi": 211, "z_x": 138, "z_zz": 211, "za": 233, "zaletnyik": 215, "zassenhau": [214, 216], "zc": 211, "zcc09_ijc": 144, "zd_z": 14, "zdirect": 101, "ze": 96, "zeilberg": [87, 239], "zen": 14, "zeng": 230, "zerlegung": 216, "zero": [3, 15, 16, 18, 22, 24, 25, 26, 30, 33, 35, 36, 37, 41, 42, 43, 46, 53, 54, 61, 65, 66, 69, 78, 79, 80, 84, 87, 88, 91, 92, 93, 94, 96, 98, 102, 103, 104, 113, 115, 117, 118, 120, 122, 124, 127, 128, 130, 136, 144, 148, 152, 153, 154, 155, 158, 159, 163, 185, 189, 191, 193, 204, 206, 208, 209, 210, 211, 212, 216, 217, 219, 221, 224, 228, 229, 231, 233, 234, 237, 238, 239, 240, 241, 242, 257, 259, 260, 269, 271, 272, 292, 298, 299, 302, 303, 307, 310], "zero_color": 142, "zero_markers": 142, "zero_matrix": 41, "zero_monom": 212, "zero_to_the_power_of_zero": 88, "zerodivisionerror": [144, 212, 250, 260], "zerohandl": 65, "zeromatrix": [65, 120, 221], "zeropred": 65, "zeroth": [88, 131, 134, 216], "zeroth_order_activ": 18, "zerothorderactiv": [18, 131], "zeta": [4, 15, 16, 87, 88, 92, 93, 212, 216, 221, 228, 241], "zeta5": 212, "zeta7": 212, "zeta_": 212, "zeta_distribut": 241, "zeta_funct": 96, "zeta_pow": 216, "zfade4": 207, "zg": 79, "zgate": 175, "zhegalkin": 118, "zhegalkin_polynomi": 118, "zhenb": 230, "zhong": 230, "zhou": 124, "zigzag": 93, "ziki": 128, "zimmer": 216, "zip": [51, 67, 78, 89, 118, 128, 217, 227, 234, 237, 239, 256, 259, 299, 304], "zk": 216, "zlabel": 207, "znm": 96, "zo42": 80, "zoo": [15, 37, 41, 65, 88, 93, 94, 96, 115, 228, 230, 233], "zoom": 207, "zop": 169, "zotero": 0, "zout": 214, "zp": 100, "zsc347": 11, "zsol": 37, "zt": [96, 113], "zuckerman": 214, "zur": 215, "zx": [36, 155, 200], "zxy": 200, "zxz": [36, 152, 200, 265, 267], "zy": [36, 200], "zyla": 170, "zyx": 200, "zyz": [61, 200], "zz": [13, 36, 88, 93, 110, 111, 115, 120, 124, 125, 128, 155, 200, 208, 209, 210, 211, 214, 216, 217, 218, 219, 236], "zz_i": [210, 211, 214], "zz_python": 212, "zzx": 36, "\u00b2": 221, "\u00b3": 221, "\u00b9": 221, "\u00bc": 221, "\u00bd": 221, "\u00be": 221, "\u00f8yvind": 11, "\u010dert\u00edk": 0, "\u0142ukasz": 11, "\u0161": 0, "\u03b1": [5, 88, 206, 220], "\u03b1\u1d62": 88, "\u03b2": [69, 206], "\u03b2\u2081\u2082": 12, "\u03b3": [206, 287, 297], "\u03b3\u2081": 69, "\u03b3\u2082": 69, "\u03b4": 163, "\u03b8": [36, 116, 152, 163, 240, 270], "\u03bb": [15, 293], "\u03bd": 291, "\u03c0": [43, 92, 163, 221, 240, 287, 291, 297, 298], "\u03c7": 163, "\u03c8": 163, "\u03c9": 152, "\u1d62": 221, "\u1d63": 221, "\u1d64": 221, "\u1d65": 221, "\u1d66": 221, "\u1d67": 221, "\u1d68": 221, "\u1d69": 221, "\u1d6a": 221, "\u2070": 221, "\u2071": 221, "\u2074": 221, "\u2075": 221, "\u2076": 221, "\u2077": 221, "\u2078": 221, "\u2079": 221, "\u207f": 221, "\u2080": 221, "\u2081": 221, "\u2082": 221, "\u2083": 221, "\u2084": 221, "\u2085": 221, "\u2086": 221, "\u2087": 221, "\u2088": 221, "\u2089": 221, "\u2090": 221, "\u2091": 221, "\u2092": 221, "\u2093": 221, "\u2095": 221, "\u2096": 221, "\u2097": 221, "\u2098": 221, "\u2099": 221, "\u209a": 221, "\u209b": 221, "\u209c": 221, "\u2102": [221, 298], "\u2115": 221, "\u2115\u2080": 221, "\u211a": [208, 221], "\u211d": [221, 298], "\u2124": [220, 221, 240, 298], "\u212f": [11, 69, 163, 206, 221, 287, 291, 293, 297, 298], "\u2146": 221, "\u2148": [163, 206, 220, 221, 240, 298], "\u2153": 221, "\u2154": 221, "\u2155": 221, "\u2156": 221, "\u2157": 221, "\u2158": 221, "\u2159": 221, "\u215a": 221, "\u215b": 221, "\u215c": 221, "\u215d": 221, "\u215e": 221, "\ud835\udc45": 275, "\ud835\udd40": 221, "\ud835\udd4c": 221, "\ud835\udfd8": 221, "\ud835\udfd9": 221}, "titles": ["Citing SymPy", "Debugging", "Dependencies", "Deprecation Policy", "Docstrings Style Guide", "Documentation Style Guide", "Contributing", "Introduction to Contributing", "Building the Documentation", "Setup Development Environment", "Guide for New Contributors", "Development Workflow Process", "Writing Tests", "List of active deprecations", "Best Practices", "Glossary", "Gotchas and Pitfalls", "Explanations", "Introduction to Biomechanical Modeling", "Biomechanics", "Physics", "Potential Issues/Advanced Topics/Future Features in Physics/Mechanics", "Autolev Parser", "Classical Mechanics", "Joints Framework in Physics/Mechanics", "Kane\u2019s Method in Physics/Mechanics", "Lagrange\u2019s Method in Physics/Mechanics", "Linearization in Physics/Mechanics", "Masses, Inertias, Particles and Rigid Bodies in Physics/Mechanics", "References for Physics/Mechanics", "SymPy Mechanics for Autolev Users", "Symbolic Systems in Physics/Mechanics", "Potential Issues/Advanced Topics/Future Features in Physics/Vector Module", "Scalar and Vector Field Functionality", "Vector", "Vector: Kinematics", "Vector &amp; ReferenceFrame", "Solve Output by Type", "Classification of SymPy objects", "Finite Difference Approximations to Derivatives", "SymPy Special Topics", "Assumptions", "Symbolic and fuzzy booleans", "Writing Custom Functions", "How-to Guides", "SymPy Logo", "Control Package Examples", "Physics", "Find the Roots of a Polynomial Algebraically or Numerically", "Solve Equations", "Reduce One or a System of Inequalities for a Single Variable Algebraically", "Solve a Diophantine Equation Algebraically", "Solve an Equation Algebraically", "Solve a Matrix Equation Algebraically", "Solve One or a System of Equations Numerically", "Solve an Ordinary Differential Equation (ODE) Algebraically", "Solve a System of Equations Algebraically", "Solving Guidance", "Welcome to SymPy\u2019s documentation!", "Installation", "abc", "Algebras", "Ask", "Assume", "Assumptions", "Predicates", "Refine", "Calculus", "Category Theory", "Code Generation", "Finitely Presented Groups", "Galois Groups", "Gray Code", "Group constructors", "Number of groups", "Combinatorics", "Named Groups", "Partitions", "Polycyclic Groups", "Permutation Groups", "Permutations", "Polyhedron", "Prufer Sequences", "Subsets", "Tensor Canonicalization", "Test Utilities", "Utilities", "Concrete", "Core", "Cryptography", "Differential Geometry", "Discrete", "Numerical Evaluation", "Combinatorial", "Elementary", "Functions", "Special", "Curves", "Ellipses", "Entities", "Geometry", "Lines", "Plane", "Points", "Polygons", "Utils", "About Holonomic Functions", "Converting other representations to holonomic", "Holonomic", "Internal API", "Operations on holonomic functions", "Representation of holonomic functions in SymPy", "Uses and Current limitations", "Computing Integrals using Meijer G-Functions", "Integrals", "Integrals", "Interactive", "Lie Algebra", "Logic", "Dense Matrices", "Matrix Expressions", "Immutable Matrices", "Matrices", "Matrix Kind", "Matrices (linear algebra)", "Matrix Normal Forms", "Sparse Matrices", "Sparse Tools", "Number Theory", "Numeric Computation", "Parsing", "Activation (Docstrings)", "Curve (Docstrings)", "Biomechanics API Reference", "Musculotendon (Docstrings)", "Arch (Docstrings)", "Beam (Docstrings)", "Solving Beam Bending Problems using Singularity Functions", "Cable (Docstrings)", "Continuum Mechanics", "Truss (Docstrings)", "Control", "Control System Plots", "Control", "Control API", "High Energy Physics", "Hydrogen Wavefunctions", "Matrices", "Actuator (Docstrings)", "Deprecated Classes (Docstrings)", "Expression Manipulation (Docstrings)", "Mechanics API Reference", "Joints Framework (Docstrings)", "Kane\u2019s Method &amp; Lagrange\u2019s Method (Docstrings)", "Linearization (Docstrings)", "Bodies, Inertias, Loads &amp; Other Functions (Docstrings)", "Pathway (Docstrings)", "Printing (Docstrings)", "System (Docstrings)", "Wrapping Geometry (Docstrings)", "Gaussian Optics", "Optics", "Medium", "Polarization", "Utilities", "Waves", "Pauli Algebra", "Quantum Harmonic Oscillator in 1-D", "Anticommutator", "Cartesian Operators and States", "Clebsch-Gordan Coefficients", "Circuit Plot", "Commutator", "Constants", "Dagger", "Gates", "Grover\u2019s Algorithm", "Hilbert Space", "Quantum Mechanics", "Inner Product", "Operator", "Operator/State Helper Functions", "Particle in a Box", "Qapply", "QFT", "Qubit", "Represent", "Shor\u2019s Algorithm", "Spin", "State", "Tensor Product", "Second Quantization", "Quantum Harmonic Oscillator in 3-D", "Dimensions and dimension systems", "More examples", "Unit Systems", "Philosophy behind unit systems", "Unit prefixes", "Physical quantities", "Units and unit systems", "Essential Classes", "Docstrings for basic field functions", "Essential Functions (Docstrings)", "Physics Vector API", "Kinematics (Docstrings)", "Printing (Docstrings)", "Wigner Symbols", "Plotting", "AGCA - Algebraic Geometry and Commutative Algebra Module", "Basic functionality of the module", "Introducing the domainmatrix of the poly module", "Introducing the Domains of the poly module", "Reference docs for the Poly Domains", "Polynomial Manipulation", "Internals of the Polynomial Manipulation Module", "Literature", "Number Fields", "Polynomials Manipulation Module Reference", "Series Manipulation using Polynomials", "Poly solvers", "Examples from Wester\u2019s Article", "Printing", "Term Rewriting", "Formal Power Series", "Fourier Series", "Series", "Limits of Sequences", "Sequences", "Series Expansions", "Sets", "Hongguang Fu\u2019s Trigonometric Simplification", "Hypergeometric Expansion", "Simplify", "Simplify", "Diophantine", "Solvers", "Inequality Solvers", "ODE", "PDE", "Solvers", "Solveset", "Stats", "N-dim array", "N-dim array expressions", "Tensor", "Methods", "Indexed Objects", "Tensor", "Tensor Operators", "Testing", "pytest", "Randomised Testing", "Run Tests", "Autowrap Module", "Codegen", "Decorator", "Enumerative", "Exceptions and Warnings", "Utilities", "Iterables", "Lambdify", "Memoization", "Miscellaneous", "Source Code Inspection", "Timing Utilities", "Essential Classes in sympy.vector (docstrings)", "Vector API", "Orienter classes (docstrings)", "Essential Functions in sympy.vector (docstrings)", "Basic Implementation details", "More about Coordinate Systems", "General examples of usage", "Scalar and Vector Field Functionality", "Vector", "Introduction", "Applications of Vector Integrals", "API Reference", "Basics", "Code Generation", "Logic", "Matrices", "Number Theory", "Physics", "Topics", "Utilities", "Tutorials", "Basic Operations", "Calculus", "SymPy Features", "Gotchas", "Introductory Tutorial", "Introduction", "Advanced Expression Manipulation", "Matrices", "What\u2019s Next", "Preliminaries", "Printing", "Simplification", "Solvers", "Biomechanical Model Example", "Biomechanics Tutorials", "Physics Tutorials", "Linearized Carvallo-Whipple Bicycle Model", "Duffing Oscillator with a Pendulum", "A four bar linkage", "Mechanics Tutorials", "Nonminimal Coordinates Pendulum", "Multi Degree of Freedom Holonomic System", "A rolling disc", "A rolling disc, with Kane\u2019s method", "A rolling disc, with Kane\u2019s method and constraint forces", "A rolling disc using Lagrange\u2019s Method"], "titleterms": {"": [25, 26, 27, 58, 153, 176, 187, 220, 230, 239, 240, 270, 275, 294, 302, 303, 306, 309, 310, 311], "1": [4, 13, 22, 27, 46, 55, 113, 137, 167], "10": [8, 13, 137], "11": [13, 137], "12": 13, "13": 13, "14": 13, "2": [4, 22, 27, 46, 55, 113, 137], "2d": 115, "3": [4, 22, 46, 115, 137, 192], "4": [4, 13, 46, 137], "5": [4, 13, 46, 137], "6": [4, 13, 137], "7": [13, 137], "8": [13, 137], "9": [13, 137], "A": [18, 27, 39, 291, 298, 304, 308, 309, 310, 311], "AND": 270, "As": 216, "Be": [14, 48, 50, 51, 52, 53, 54, 55], "For": 115, "If": 55, "Into": [52, 54, 56], "Its": 55, "No": [48, 51, 52, 53, 55], "Not": [3, 48, 50, 51, 52, 54, 55, 56, 57], "Of": 37, "One": [50, 54, 55], "That": [50, 51, 52, 54, 56, 57], "The": [3, 13, 27, 41, 43, 70, 78, 113, 196, 216, 228, 231, 271, 272, 291], "There": 55, "With": [48, 51, 52, 53, 54, 55, 56, 57], "__call__": 13, "__eq__": 14, "_eval_": 43, "_mat": 13, "_smat": 13, "a_and_b": 27, "abc": 60, "about": [106, 240, 270, 298], "abov": 41, "absorbing_probabilit": 13, "abstract": [69, 133, 139, 143, 145, 151, 161, 178, 203, 212], "acceler": [21, 32, 35, 228], "accept": 13, "access": 293, "account": 9, "accuraci": 92, "action": 12, "activ": [13, 18, 131, 299], "actuat": [18, 148, 299], "ad": 3, "add": [11, 13, 43, 88], "addit": [43, 110], "address": 11, "adic": 216, "advanc": [14, 21, 32, 220, 292, 293], "aesara": [129, 221], "agca": 208, "airi": 96, "algebra": [36, 48, 50, 51, 52, 53, 55, 56, 61, 117, 124, 166, 208, 211, 216, 220, 239, 298], "algorithm": [69, 70, 176, 187, 214, 217, 223, 228, 231], "all": [48, 50, 51, 52, 54, 55, 56], "all_root": 48, "also": [4, 88, 259], "altern": [36, 48, 50, 51, 52, 53, 54, 55, 56], "an": [11, 13, 14, 22, 52, 54, 55, 100, 196, 231, 240, 292], "anaconda": 59, "analysi": 194, "analyt": [50, 178], "angular": [28, 35, 302], "ani": [57, 240], "annot": 13, "anticommut": 168, "antlr": 130, "apart": 297, "api": [3, 58, 109, 113, 115, 133, 144, 151, 203, 240, 253, 254, 266, 276], "appel": 217, "appli": [41, 113, 231], "applic": 275, "approxim": [39, 48, 69], "ar": [4, 36, 50, 55, 211, 240], "arbitrari": 55, "arch": [135, 139], "area": 275, "arg": [13, 14, 292], "argand": 113, "argument": [13, 16, 240], "arithmet": 216, "around": 231, "arrai": [13, 242, 243], "art": 207, "articl": 220, "as_real_imag": 43, "ascii": [207, 296], "ask": 62, "askhandl": 13, "assign": 16, "assum": 63, "assumpt": [13, 14, 38, 41, 43, 64, 88], "ast": [22, 69], "attach": 13, "attribut": [13, 14, 70, 78], "author": [11, 206], "auto": 8, "autolev": [22, 30], "automat": [14, 43, 220], "autowrap": [2, 69, 253], "avail": 100, "avoid": [3, 14], "b": [13, 96], "back": 220, "backend": [2, 130, 207], "background": 27, "backward": 3, "bar": 304, "base": [68, 90, 124, 208, 209, 220, 227, 240], "basi": [36, 214, 216], "basic": [12, 14, 88, 92, 124, 201, 209, 211, 217, 229, 269, 276, 277, 286, 293], "beam": [136, 137, 139], "been": 13, "behind": 196, "benchmark": 2, "bend": 137, "bessel": 96, "best": [4, 5, 14, 43], "beta": 96, "between": [16, 41, 198, 211], "bewar": 55, "beyond": 100, "bibliographi": [70, 78], "bicep": 299, "bicycl": 302, "binari": 13, "biomechan": [18, 19, 133, 299, 300], "block": 120, "bode": 142, "bodi": [13, 28, 155, 275, 302], "bool": 42, "boolean": [37, 42, 118], "boundari": 55, "box": 182, "branch": [11, 113], "bug": [48, 50, 51, 52, 53, 54, 55, 56, 57, 115], "build": [2, 8], "c": [69, 221], "cabl": [138, 139], "cach": 88, "calcul": [275, 302], "calculu": [36, 65, 67, 287], "call": [13, 50, 57], "can": [48, 50, 51, 52, 54, 55, 56, 57], "cancel": 297, "cannot": [50, 52, 55, 56], "canonic": 84, "capabl": 130, "capit": 5, "care": 14, "carmichael": 13, "cartesian": 169, "carvallo": 302, "case": [43, 240], "categori": 68, "caveat": [60, 130], "cc": 212, "cfunction": 69, "chang": [3, 11, 13], "chebyshev": 96, "check": [12, 13, 201], "checklist": [3, 11], "choic": 21, "choos": 211, "circuit": 171, "cite": 0, "class": [4, 13, 27, 38, 68, 69, 87, 90, 121, 124, 126, 128, 130, 149, 200, 207, 216, 221, 234, 242, 265, 267], "classic": [23, 214], "classif": 38, "clebsch": 170, "close": [48, 52, 55, 56, 57], "cnode": 69, "co": 11, "code": [2, 3, 5, 7, 9, 11, 12, 13, 14, 21, 36, 69, 72, 221, 263, 276, 278], "codebas": 7, "codegen": [69, 254], "codeprint": 221, "coeffici": [170, 214], "collect": [14, 78, 222, 297], "collector": 78, "color": 207, "column": 293, "columnspac": 293, "combin": [41, 110], "combinator": [13, 75], "combinatori": 93, "combsimp": 297, "commit": 11, "common": [21, 32, 65, 220, 221, 222], "commut": [172, 208], "compar": 14, "comparison": 13, "compat": [13, 243], "complet": [22, 43, 48], "complex": [48, 54, 94, 211], "composit": 110, "compound": [227, 229, 241], "compress": 70, "comput": [78, 113, 129, 178, 220, 291], "concept": 209, "conclus": 299, "concret": 87, "condit": [13, 55, 113, 229], "conditionset": 13, "conduct": 7, "configur": [9, 214], "confluenc": 231, "conserv": [33, 272], "consid": [48, 50, 51, 52, 53, 54, 55, 56], "consist": [12, 57], "constant": [55, 173, 196], "constraint": [302, 310], "construct": [70, 78, 243], "constructor": [73, 217, 293], "contain": 88, "content": [64, 75, 95, 108, 114, 213, 225, 235, 244], "continu": [241, 297], "continuum": 139, "contract": 242, "contribut": [6, 7, 11, 58, 218], "contributor": 10, "control": [46, 141, 142, 143, 144, 207], "conv_": 13, "converg": 113, "convers": 198, "convert": [107, 110, 211, 286], "convolut": 91, "coordin": [13, 21, 27, 207, 269, 270, 272, 274, 302, 306], "coordsys3d": 270, "copi": 55, "copyright": 206, "core": [13, 88, 120], "coset": 70, "cosett": 70, "cover": 91, "coverag": 12, "coxet": 70, "creat": [9, 11, 13, 16, 43, 54, 124], "credit": 206, "crootof": 48, "cross": 4, "cryptographi": 89, "curl": [33, 272], "current": 112, "curv": [18, 97, 132], "curvilinear": 272, "custom": [14, 18, 43, 207, 221], "cutil": 69, "cxxnode": 69, "cyclotom": 220, "d": [167, 192], "dagger": 174, "damp": 18, "data": 13, "de": [239, 240], "deal": 240, "debian": 8, "debug": [1, 12], "declar": 302, "decompos": 50, "decomposit": [216, 217, 220], "decor": 255, "decrement": 231, "defin": [14, 43, 55, 299, 302, 303], "definit": [41, 43, 106], "degre": 307, "del": [271, 272], "delet": [11, 293], "delta": 96, "denest": 14, "denomin": 57, "dens": [119, 211, 212, 214], "densematrix": 13, "depend": [2, 8, 12, 27, 211, 270], "deprec": [3, 12, 13, 149], "depth": [78, 100], "deriv": [36, 39, 55, 242, 272, 287], "descript": [11, 299], "detail": [253, 254, 269], "detect": 222, "determin": 293, "deutil": 239, "develop": [2, 7, 9, 11, 88], "diagon": [242, 293], "diagram": 68, "dictionari": [16, 37, 48, 56], "differ": [30, 39, 41, 67, 211, 270, 287], "differenti": [21, 43, 55, 90, 110, 239, 240, 298, 299], "differentiate_finit": 13, "diffgeom": 13, "dim": [242, 243], "dimens": [100, 193, 196], "dimension": 194, "diophantin": [51, 234, 239, 240], "dirac": 96, "direct": [39, 272], "directli": [27, 270], "disc": [308, 309, 310, 311], "discontinu": 96, "discret": [91, 241], "discretemarkovchain": 13, "dispers": 217, "distribut": [13, 214, 241], "diverg": [33, 272, 275], "divid": 43, "divis": 209, "dixonresult": 13, "dmp": [13, 211], "do": [57, 240], "doc": [8, 212], "docker": 8, "docstr": [4, 131, 132, 134, 135, 136, 138, 140, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 201, 202, 204, 205, 265, 267, 268], "doctest": 12, "document": [2, 3, 4, 5, 7, 8, 11, 58], "doe": [3, 16, 240], "doit": 43, "domain": [52, 209, 211, 212, 217, 220, 240], "domainmatrix": 210, "don": 14, "dot": 296, "dotprint": 221, "doubl": 16, "draw": 68, "duf": 303, "dummi": 12, "dummy_fmt": 13, "dup": 211, "dyadic": [28, 32, 269, 270], "dynam": [18, 22], "dynamicsymbol": 32, "each": 302, "easi": 43, "ecm": 128, "eigenvalu": [293, 302], "eigenvector": 293, "elast": 18, "element": [27, 53, 211, 216], "elementari": [94, 208, 227, 229], "ellips": 98, "ellipt": 96, "email": [9, 11], "emploi": 240, "empti": 37, "encod": 217, "end": 231, "energi": [28, 145], "ensur": [54, 57, 240], "entiti": [99, 100, 207], "entri": [3, 11, 124], "enum": 256, "enumer": [70, 93], "environ": [7, 9], "eq": [13, 52], "equal": [16, 51, 52, 289], "equat": [25, 26, 27, 32, 48, 49, 51, 52, 53, 54, 55, 56, 57, 194, 209, 234, 239, 240, 298, 299, 302], "equival": [30, 118], "error": [92, 96], "essenti": [200, 202, 265, 268], "euclidean": 209, "eval": 43, "evalf": [43, 88, 129, 286], "evalu": [13, 14, 16, 30, 43, 48, 92, 110, 292, 299], "ex": 212, "exact": [14, 48, 57], "exampl": [4, 11, 27, 31, 36, 43, 46, 48, 50, 51, 54, 56, 60, 88, 100, 112, 115, 128, 135, 137, 145, 163, 194, 195, 196, 220, 221, 228, 231, 241, 242, 243, 246, 271, 291, 297, 299], "except": [12, 124, 130, 214, 257], "exercis": 295, "exist": [12, 113], "expand": [43, 220, 222, 297], "expand_func": 297, "expand_log": 297, "expand_power_bas": 297, "expand_power_exp": 297, "expand_trig": 297, "expans": [110, 228, 231, 287], "expect": 12, "experiment": 130, "explan": [4, 17, 58], "explicit": 243, "explicitli": [52, 55], "expon": [78, 220], "exponenti": [94, 96, 297], "expr": [13, 88], "expr_free_symbol": 13, "express": [12, 13, 14, 16, 48, 51, 52, 54, 69, 100, 107, 110, 118, 120, 130, 150, 211, 220, 243, 270, 286, 292], "exprtool": 88, "extend": 231, "extens": [208, 220], "extern": 12, "extra": [14, 217], "extract": [50, 51, 53, 55], "facil": 70, "factor": [48, 209, 214, 220, 297], "factori": 209, "fail": 12, "failur": 12, "fallback": 13, "fals": 13, "familiar": 7, "fast": 91, "featur": [21, 32, 130, 288], "fedora": 8, "fiber": 18, "field": [33, 201, 211, 214, 216, 220, 272, 274], "file": 11, "fill": 13, "final": 289, "find": [48, 54, 216, 217], "find_execut": 13, "finit": [39, 67, 70, 208, 211, 214, 216, 220, 231, 241, 287], "first": [3, 13, 18], "fix": [11, 22], "flag": 13, "float": [14, 16, 92], "flux": 275, "fma": 43, "fnode": 69, "forc": [18, 299, 303, 304, 310], "fork": 9, "form": [27, 48, 52, 55, 56, 57, 118, 125, 243], "formal": [217, 223], "format": [4, 5, 13, 57], "formula": [113, 231], "fortran": [69, 221], "found": 54, "four": 304, "fourier": [91, 224], "fraction": [217, 220, 297], "frame": [13, 36, 302], "framework": [24, 152], "free": [70, 209], "freedom": 307, "fresnel": 96, "from": [13, 14, 16, 51, 52, 53, 57, 220, 243], "from_": 13, "fu": 230, "fulli": 43, "fun_ev": 13, "func": [38, 292], "function": [4, 12, 13, 14, 16, 21, 28, 33, 43, 48, 50, 52, 54, 55, 57, 69, 78, 87, 88, 94, 95, 96, 106, 107, 110, 111, 113, 118, 124, 128, 130, 137, 155, 178, 181, 201, 202, 207, 209, 211, 212, 217, 220, 221, 231, 234, 237, 238, 242, 268, 272, 296, 297], "further": [27, 289], "fuse": 43, "futil": 69, "futur": [21, 22, 32, 100], "fuzzi": 42, "g": [107, 110, 113, 231], "galoi": [71, 216], "gamma": [96, 145], "gammasimp": 297, "gate": 175, "gaussian": [160, 211, 212, 220], "gcd": [209, 214, 220], "gegenbau": 96, "gener": [2, 4, 5, 69, 78, 80, 211, 216, 240, 271, 276, 278], "geometr": 207, "geometri": [18, 90, 100, 159, 208], "get": [2, 7, 9, 16, 48], "get_epsilon": 13, "get_kronecker_delta": 13, "get_seg": 13, "get_upper_degre": 13, "gf": 212, "git": [9, 59], "github": [9, 12], "given": [54, 56], "glossari": 15, "good": 11, "gordan": 170, "gotcha": [16, 22, 41, 289], "gradient": [33, 272], "grai": 72, "gravit": 302, "groebner": [209, 214], "group": [70, 71, 73, 74, 76, 78, 79, 196, 216], "grover": 176, "gruntz": 228, "gr\u00f6bner": 220, "gtk": 221, "guid": [4, 5, 10, 12, 19, 23, 34, 44, 58, 133, 151, 203, 273], "guidanc": [48, 50, 51, 52, 53, 54, 55, 56, 57], "guidelin": [4, 5], "ha": 27, "hadamard": 91, "hadamardproduct": 13, "handl": [92, 240], "handler": [13, 14, 41], "hard": 2, "hardcod": 14, "harmon": [96, 167, 192], "have": [13, 52, 56, 220], "head": 5, "help": 16, "helper": [181, 221], "hermit": 96, "heurist": 237, "hexagon": 100, "high": 145, "hilbert": 177, "hint": [55, 237, 238], "holonom": [106, 107, 108, 110, 111, 307], "homomorph": [208, 216], "hongguang": 230, "how": [3, 36, 44, 58, 113, 240], "hydrogen": 146, "hyperbol": 94, "hyperexpand": 297, "hypergeometr": [87, 96, 107, 110, 223, 231], "hypothesi": 12, "i": [3, 12, 16, 27, 54, 55, 113, 129, 210, 221, 240, 291], "ideal": 208, "identifi": 7, "immut": [16, 121], "immutablematrix": 121, "immutablesparsematrix": 126, "implement": [33, 41, 113, 221, 231, 253, 254, 269, 272], "implic": 41, "implicitli": [48, 55], "import": 4, "improv": [22, 64], "impuls": 142, "includ": [50, 55, 57], "incompat": 3, "increas": 54, "increment": 231, "indefinit": 13, "independ": 55, "index": [10, 70, 78, 243, 246], "indic": 231, "inequ": [50, 236, 239, 240], "inertia": [28, 155, 299, 302], "infer": 118, "infinit": [14, 52, 240], "inform": [237, 238], "initi": 55, "inner": 179, "input": [14, 41, 240], "insert": 293, "inspect": 263, "instal": [8, 9, 58, 59, 130, 295], "integ": [13, 94, 211], "integr": [13, 21, 55, 92, 96, 110, 112, 113, 114, 115, 209, 216, 275, 287], "interact": [2, 116, 207], "interest": [50, 291], "interfac": [21, 32, 207, 241], "intermedi": 13, "intern": [109, 113, 115, 211, 214, 216, 234], "interpret": 41, "interrog": 52, "intersect": [91, 100], "interv": [54, 207], "intfunc": 88, "introduc": [210, 211], "introduct": [7, 16, 18, 22, 30, 33, 35, 39, 61, 68, 69, 70, 78, 90, 100, 118, 133, 196, 207, 208, 209, 216, 220, 274, 291], "introductori": [285, 290], "intuit": 228, "invari": [14, 292], "invers": [16, 43, 94, 113], "is_": 41, "is_emptyset": 13, "issu": [11, 21, 22, 27, 32, 293], "iter": [13, 229, 259], "jacobi": 96, "javascript": 221, "join": 7, "joint": [13, 24, 152, 241], "jointsmethod": 13, "julia": 221, "junk": 11, "k": 212, "kane": [25, 27, 153, 306, 309, 310], "kei": [9, 30, 43, 292], "keyword": 16, "kind": [38, 88, 123], "kinemat": [35, 204, 299, 302, 303], "kinematic_equ": 204, "kinet": 28, "known": 240, "kwarg": 27, "lagrang": [26, 27, 153, 303, 306, 311], "lagrangian": 28, "laguerr": 96, "lambda": 13, "lambdaprint": 221, "lambdifi": [2, 13, 129, 260, 286], "laplac": 113, "laplace_transform": 13, "lark": 130, "last": 3, "latex": [5, 130, 296], "latexprint": 221, "lcm": 209, "lead": 78, "legendr": 96, "length": 18, "level": 214, "lib": 221, "lie": [117, 237], "like": 13, "limit": [22, 41, 50, 51, 112, 226, 228, 287], "line": 101, "linear": [21, 27, 28, 56, 110, 124, 154, 196, 220, 239, 302], "link": 30, "linkag": 304, "list": [7, 13, 16, 37, 48, 50], "literatur": [196, 215, 220], "live": 8, "load": [18, 28, 155, 302], "local": 8, "locat": 270, "logarithm": [96, 297], "logcombin": 297, "logic": [2, 42, 118, 276, 279], "logo": 45, "long": 3, "longer": 13, "lookup": 113, "loos": 231, "low": 70, "lti": 144, "mac": 8, "mail": 7, "mailmap": 11, "main": 216, "make": [11, 52, 57], "managedproperti": 13, "manipul": [14, 118, 124, 150, 213, 214, 217, 218, 240, 292], "map": 11, "mapl": 221, "mark": 12, "markdown": 5, "marker": 13, "mass": [28, 275], "matadd": 13, "math": [5, 69], "mathemat": [4, 16, 30, 48], "mathematica": [13, 221], "mathieu": 96, "mathml": 296, "mathmlprint": 221, "mathrm": [130, 296], "matlab": 221, "matmul": 13, "matric": [13, 39, 53, 119, 120, 121, 122, 124, 126, 145, 147, 243, 276, 280, 293], "matrix": [13, 27, 53, 65, 120, 123, 124, 125, 241, 293], "max_degre": 13, "mdft": 13, "mechan": [13, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 133, 139, 151, 178, 241, 305], "mechanics_print": 157, "median": 100, "medium": 162, "meijer": [107, 110, 113, 231], "mellin": 113, "memoiz": 261, "messag": 11, "metaclass": 13, "method": [13, 25, 26, 27, 39, 43, 53, 59, 153, 221, 238, 240, 245, 270, 293, 303, 306, 309, 310, 311], "metric": 13, "might": 57, "minim": [78, 216], "misc": [13, 64], "miscellan": [43, 94, 100, 262], "mistak": 221, "mix": 13, "mixin": 13, "mlatex": 157, "mod": 88, "mode": 207, "model": [18, 299, 302], "modifi": 11, "modul": [13, 32, 208, 209, 210, 211, 214, 216, 217, 234, 237, 238, 240, 253], "modular": [13, 214], "modularinteg": 13, "momenta": 28, "momentum": 28, "monomi": 217, "more": [194, 195, 228, 270, 291], "motion": [299, 302], "move": [13, 231], "mpmath": 59, "mpprint": 157, "mpq": 212, "mprint": 157, "much": 14, "mul": 88, "multi": 307, "multidimension": 88, "multipl": [36, 48, 55, 110, 216], "multipli": 43, "multivari": [214, 220], "multivariate_result": 13, "muscl": 299, "musculotendon": [18, 134], "must": 53, "mutabl": 13, "m\u00f6biu": 91, "n": [13, 242, 243], "name": [9, 11, 14, 76], "nan": 27, "narr": 5, "necessarili": 52, "need": 196, "new": [10, 11, 13, 270], "new_method": 27, "next": 294, "nocond": 13, "node": 69, "non": 13, "noncontribut": 304, "nonlinear": [56, 302], "nonminim": 306, "normal": [125, 220], "notat": 231, "note": [3, 27, 43, 88, 100, 228, 230, 289, 298], "nroot": 48, "ntheori": [13, 128], "nullspac": 293, "number": [14, 16, 65, 74, 88, 91, 92, 113, 128, 211, 216, 220, 276, 281], "numer": [14, 21, 30, 43, 48, 54, 55, 57, 92, 110, 115, 129, 287], "numpi": 124, "numsampl": 13, "object": [13, 14, 38, 246], "octav": 221, "od": [55, 237, 239, 240], "old": [41, 211], "onli": [2, 50, 55, 240], "onlin": 22, "oo": 27, "oper": [13, 16, 33, 36, 110, 124, 169, 178, 180, 181, 201, 231, 242, 248, 269, 271, 272, 286, 293], "optic": [160, 161], "optim": 239, "option": [2, 9, 52, 55, 56, 57, 214], "order": [13, 18, 51, 65, 217, 228, 231], "ordinari": [55, 239, 240], "orient": [267, 270], "orient_new": 270, "orthogon": [96, 217, 272], "oscil": [167, 192, 303], "other": [33, 41, 43, 59, 107, 155, 270], "our": 7, "output": [21, 37, 240], "over": [115, 220, 229], "overview": [70, 78, 113], "overwrit": 14, "p": [212, 216], "packag": 46, "pair": 55, "paper": 7, "pappu": 100, "paramet": [4, 51, 231, 240, 302], "pars": [2, 57, 130], "parser": [13, 22, 130], "partial": [217, 220, 239, 240], "particl": [28, 182], "partit": [77, 259], "pass": 13, "passiv": 18, "past": 55, "pathwai": [18, 156], "pauli": 166, "pde": [238, 239, 240], "pdf": 8, "pendulum": [303, 306], "per": 50, "perform": 64, "perhap": 48, "perimet": 275, "period": 50, "permut": [13, 79, 80], "perus": 7, "philosophi": 196, "physic": [13, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 47, 145, 198, 203, 276, 282, 285, 301], "pick": 11, "piecewis": 94, "pitfal": 16, "pkgdata": 13, "place": 3, "plan": 240, "plane": [102, 113], "plot": [2, 13, 142, 171, 207], "plotgrid": 207, "point": [13, 21, 32, 35, 43, 92, 103, 269, 302], "polar": [113, 163], "pole": 142, "poli": [13, 210, 211, 212, 219], "polici": [3, 12], "polycycl": 78, "polycyclicgroup": 78, "polygon": [104, 115], "polyhedra": 115, "polyhedron": 81, "polynomi": [13, 48, 96, 110, 209, 211, 212, 213, 214, 216, 217, 218, 220, 239, 297], "polynomialr": 211, "polyr": 211, "polytop": 115, "possibl": [3, 52, 293], "potenti": [21, 27, 28, 32, 33, 272], "powdenest": 297, "power": [88, 223, 229, 291, 297], "powsimp": 297, "practic": [4, 5, 14, 43], "preced": 221, "precis": 54, "predefin": 69, "predic": [41, 64, 65], "prefer": [5, 57], "prefix": 197, "preliminari": 295, "present": [70, 78], "pretti": [13, 221, 296], "pretty_symbologi": 13, "prettyform": 13, "prettyprint": 221, "prevent": 292, "preview": 221, "prime": 216, "print": [2, 13, 21, 32, 43, 69, 116, 157, 205, 221, 296], "print_cycl": 13, "printer": [2, 69, 221, 296], "privat": 13, "problem": [137, 216, 271], "process": [11, 241], "product": [91, 179, 190, 242, 271], "productset": 13, "program": 239, "programmat": [51, 52], "properti": [13, 41, 208], "prufer": 82, "public": 3, "pull": [7, 11], "punctuat": 5, "purpos": 3, "put": 52, "pyglet": 207, "pytest": 250, "python": [14, 16, 69], "pythoncodeprint": 221, "pythonprint": 221, "pyutil": 69, "q": 128, "qappli": 183, "qft": 184, "qq": 212, "qq_i": 212, "quadrilater": 271, "qualiti": [11, 12], "quantiti": [194, 196, 198, 270], "quantiz": 191, "quantum": [167, 178, 192], "quaternion": 61, "qubit": 185, "queri": 64, "question": 59, "quick": [286, 287, 289, 292, 293], "quotient": 212, "ramp": 142, "random": [12, 88, 241], "randomindexedsymbol": 13, "randomis": 251, "randtest": 13, "ration": [14, 16, 211, 212, 217, 220, 223, 237, 297], "rawmatrix": 13, "rcodeprint": 221, "read": [7, 289], "real": [54, 211], "real_root": 48, "rebuild": 8, "recommend": [2, 5], "rectangl": 13, "recurr": 239, "recurs": [14, 227, 292], "reduc": [50, 220], "reduct": [50, 231], "redund": 13, "refer": [4, 18, 29, 34, 36, 41, 46, 58, 61, 68, 71, 87, 88, 90, 100, 106, 113, 115, 120, 121, 124, 126, 128, 130, 133, 151, 163, 166, 196, 203, 206, 207, 208, 212, 214, 216, 217, 218, 228, 230, 231, 234, 240, 253, 254, 273, 276, 299, 302, 303], "referenc": 4, "referencefram": [32, 36], "refin": 66, "regress": 12, "reidemeist": 70, "relat": [13, 16, 33, 36, 37, 41, 50, 88, 96, 118, 272], "releas": 3, "relev": 302, "reloc": 13, "remaind": 214, "remind": 43, "renam": 13, "rep": 13, "report": [48, 50, 51, 52, 53, 54, 55, 56, 57], "repres": [48, 52, 57, 113, 186, 211, 216], "represent": [36, 107, 111, 196, 211], "request": [7, 11], "requir": [3, 8], "residu": 228, "respons": [142, 221], "restrict": 52, "result": [48, 50, 51, 52, 53, 54, 55, 56, 220], "return": [50, 55, 240], "reveal": 304, "review": 7, "rewrit": [13, 43, 69, 222, 297], "riccati": 237, "riemann": 96, "rigid": [18, 28, 302], "ring": [208, 211, 212], "roll": [308, 309, 310, 311], "root": [48, 54, 217], "rotat": 124, "rough": 30, "routin": 254, "row": 293, "rr": 212, "rref": 293, "rs_seri": 218, "rule": [230, 271], "run": [2, 11, 12, 59, 252], "runtim": 130, "rust": 221, "sage": 2, "same": 53, "sampl": [4, 13], "satisfi": 50, "scalar": [33, 272, 274], "schreier": 70, "scipi": [54, 55], "search": 240, "second": 191, "section": 4, "see": [4, 88, 259, 271], "select": 55, "sentenc": 4, "separ": 14, "sequenc": [82, 110, 214, 217, 226, 227], "seri": [110, 207, 218, 223, 224, 225, 228, 287], "server": 8, "session": 116, "set": [9, 13, 36, 38, 52, 55, 56, 65, 100, 229, 240, 296, 302], "set_potential_energi": 13, "setkind": 229, "setup": [7, 9, 302], "sever": 53, "shape": 293, "shor": 187, "should": [3, 129], "sign": [16, 289], "silenc": 13, "simpl": [18, 220], "simplif": [43, 92, 118, 230, 297], "simplifi": [14, 57, 69, 214, 232, 233, 297], "simul": 299, "singl": [4, 16, 37, 50], "singleton": [88, 227, 229], "singular": [67, 137], "skip": 12, "slow": [12, 27], "smt": 221, "so": 129, "softwar": 7, "solenoid": [33, 272], "solut": [48, 51, 52, 53, 54, 55, 56, 57, 178, 240, 271], "solv": [32, 37, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 137, 209, 216, 239, 240, 298], "solver": [13, 55, 219, 235, 236, 237, 239, 240, 298], "solveset": [52, 240], "some": [13, 30, 55, 240], "someth": [7, 12], "sort": [14, 88], "sourc": [2, 263], "space": [177, 196, 231], "spars": [126, 127, 211, 212, 214], "sparsematrix": [13, 126], "special": [12, 16, 40, 69, 96, 217, 229, 297], "specif": [55, 69], "specifi": [51, 55, 207], "speed": [21, 27, 48, 52, 53, 56, 57, 302], "spell": 5, "spheric": 96, "sphinx": 4, "spin": 188, "spline": 96, "sqrt": 16, "squar": [53, 209], "srepr": [221, 296], "ssh": 9, "standard": 70, "stat": [13, 241], "state": [169, 178, 181, 189], "static": 13, "statist": 2, "step": [142, 240], "stochast": 241, "stochasticprocess": 13, "stoke": 275, "store": 14, "str": 296, "string": [13, 14, 41, 57, 286], "stringpict": 13, "strprinter": 221, "structur": [25, 26, 196, 234], "style": [4, 5, 12], "sub": 129, "subexpress": 222, "subfield": 216, "subgroup": 70, "submodul": [13, 100], "subresult": 214, "subset": [83, 91], "substitut": [21, 32, 52, 54, 286], "subword": 78, "sum": 92, "summari": 4, "support": 220, "surfac": 275, "switch": 22, "symbol": [13, 14, 16, 27, 31, 41, 42, 43, 50, 51, 53, 88, 107, 206, 211, 217, 220, 240, 289, 291], "symbolicsystem": 31, "symengin": 2, "sympi": [0, 7, 9, 13, 14, 16, 30, 33, 38, 39, 40, 45, 50, 52, 56, 58, 59, 69, 111, 130, 211, 265, 268, 269, 272, 286, 288, 291], "sympifi": [13, 88], "syntax": 69, "system": [24, 31, 41, 50, 54, 56, 142, 158, 193, 195, 196, 199, 237, 239, 269, 270, 272, 274, 299, 302, 307], "syzygi": 208, "t": 14, "tabl": [113, 118, 231], "technic": 3, "tendon": 18, "tensor": [13, 84, 96, 190, 244, 247, 248], "tensorhead": 13, "tensorindextyp": 13, "tensorsymmetri": 13, "tensortyp": 13, "term": [87, 220, 222, 228], "test": [2, 11, 12, 13, 85, 118, 220, 249, 251, 252, 293], "theanocod": 13, "theorem": [100, 113, 275], "theoret": 91, "theori": [65, 68, 128, 276, 281], "thi": [113, 240], "third": 271, "three": [42, 100], "through": 292, "time": 264, "tip": [43, 286, 287, 289, 292, 293], "titl": 11, "to_int": 13, "todd": 70, "todo": 115, "tone": 5, "too": 14, "tool": [69, 127], "topic": [21, 32, 40, 276, 283], "trace": 13, "tradeoff": 48, "transform": [91, 113, 115, 130, 270], "transolv": 240, "travers": [13, 88], "tree": [69, 211, 221, 292], "tricep": 299, "trig": 16, "trigonometr": [94, 96, 230, 297], "trigsimp": 297, "true": 27, "truss": [139, 140], "truth": [100, 118], "try": 3, "tupl": [13, 16, 37, 50, 217], "tutori": [58, 234, 285, 290, 300, 301, 305], "two": 289, "type": [5, 12, 37, 50, 69, 96, 201, 240, 241], "ubuntu": 8, "ufuncifi": 129, "unchang": 12, "uncollect": 78, "understand": 292, "undocu": 214, "unevalu": 55, "unicod": [13, 296], "unifi": 211, "unit": [195, 196, 197, 199], "univari": [214, 220], "up": [52, 53, 56, 57, 296, 302], "updat": 12, "us": [2, 5, 7, 13, 27, 28, 36, 39, 48, 50, 51, 52, 53, 54, 55, 56, 57, 69, 91, 112, 113, 129, 137, 207, 218, 240, 270, 311], "usag": [14, 22, 31, 100, 211, 271], "user": [11, 30, 234, 237, 238], "usual": 53, "util": [13, 69, 85, 86, 105, 124, 164, 216, 239, 258, 264, 276, 284], "v": [14, 16, 42, 211], "valid": 113, "valu": [37, 42, 57], "valuat": 216, "variabl": [16, 50, 55, 57, 207, 241, 270, 299, 303], "variat": 259, "variou": [13, 220], "vector": [23, 32, 33, 34, 35, 36, 53, 78, 151, 201, 203, 214, 265, 266, 268, 269, 270, 272, 273, 274, 275], "veloc": [18, 35, 302], "verifi": [51, 275], "versin": 43, "version": 13, "view": 8, "virtual": 9, "visual": [30, 100], "volum": 275, "walk": 292, "walsh": 91, "warn": [12, 13, 257], "wave": 165, "wavefunct": 146, "we": 240, "weight": 67, "welcom": 58, "wester": 220, "what": [3, 27, 210, 211, 240, 291, 294], "when": [3, 57, 113], "where": 240, "which": [50, 52, 56, 129, 221], "whippl": 302, "why": [240, 291], "wigner": 206, "window": [8, 207], "within": 16, "without": [48, 55], "word": [70, 78], "work": [7, 51, 53, 55, 100, 220], "workflow": 11, "wrap": [18, 159], "write": [4, 5, 11, 12, 43], "wrong": 240, "x": 212, "xstr": 13, "you": 57, "your": [7, 9, 11, 52], "zero": [51, 52, 57, 142, 214, 220, 293], "zeroth": 18, "zeta": 96, "zoo": 27, "zz": 212, "zz_i": 212}})